<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Document xmlns="http://ferc.gov/etariffExport.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ferc_filing_data>
    <schema_version>2</schema_version>
    <company_id>C007711</company_id>
    <lead_applicant_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
    <tariff_id>1190</tariff_id>
    <tariff_title>Statement of Operating Conditions</tariff_title>
    <tariff_export_date>2025-09-16T20:26Z</tariff_export_date>
    <export_schema_version>2</export_schema_version>
    <record_data>
      <record_id>1</record_id>
      <option_code>A</option_code>
      <record_title>Statement of Operating Conditions</record_title>
      <record_content_desc>NGPA Section 311</record_content_desc>
      <record_version_num>3.1.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>1000000</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2019-02-14</proposed_effective_date>
      <priority_order>800</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>ALTUS MIDSTREAM PIPELINE LP
STATEMENT OF OPERATING CONDITIONS
APPLICABLE TO NGPA SECTION 311 TRANSPORTATION SERVICE 

VERSION 3.1.0

EFFECTIVE February 14, 2019




eTariff Information: 
Tariff Submitter: Altus Midstream Pipeline LP
FERC Tariff Program Name: FERC NGPA Gas Tariff
Tariff Title: Altus Midstream Pipeline Statement of Operating Conditions Applicable to NGPA Section 311 Transportation Service 
Tariff Record Proposed Effective Date: February 14, 2019
Tariff Record Title: Statement of Operating Conditions
Option Code: A


ALTUS MIDSTREAM PIPELINE LP 
STATEMENT OF OPERATING CONDITIONS
APPLICABLE TO NGPA SECTION 311 TRANSPORTATION SERVICE


TABLE OF CONTENTS

1. 	INTRODUCTION.	3
2. 	DEFINITIONS.	3
3. 	REQUEST FOR SERVICE AGREEMENT.	5
4. 	GENERAL.	7
5. 	QUANTITY.	8
6.	DELIVERY POINT(S) AND RECEIPT POINT(S).	9
7.	NOMINATIONS AND BALANCING.	10
8.	RATES.	13
9.	TERM.	14
10.	QUALITY.	14
11. 	ADDRESSES.	15
12. 	PRESSURES AT DELIVERY AND RECEIPT POINT(S).	15
13. 	MEASUREMENT.	16
14. 	BILLING, ACCOUNTING, AND REPORTS.	18
15. 	RESPONSIBILITY.	19
16. 	FORCE MAJEURE.	20
17.	LAWS AND REGULATIONS.	21
18.	MISCELLANEOUS.	22
EXHIBIT "A" - Form of Service Agreement for Interruptible Service	25
EXHIBIT "B" - Form of Confirmation	29
EXHIBIT "C" - Statement of Rates	31



ALTUS MIDSTREAM PIPELINE LP
STATEMENT OF OPERATING CONDITIONS
APPLICABLE TO NGPA SECTION 311 TRANSPORTATION SERVICE


1. 	INTRODUCTION.

      Altus Midstream Pipeline LP ("Transporter") owns an intrastate pipeline, with facilities located wholly within the State of Texas, and is exempt from the jurisdiction of the Federal Energy Regulatory Commission ("FERC") under the Natural Gas Act of 1938 ("NGA").  If by providing transportation services under Section 311 of the Natural Gas Policy Act of 1978 ("NGPA") and the regulations thereunder, Transporter's status as an intrastate pipeline that is exempt from NGA jurisdiction is impacted, altered, or threatened in any way, by virtue of any change in statutes, regulations, or other applicable law of any kind, then Transporter reserves the right to terminate all transportation services under Section 311 of the NGPA and all Service Agreements and applicable Confirmations related thereto, and to withdraw this Statement of Operating Conditions, all effective on the Day before any such change in statutes, regulations, or other applicable law.  Subject to the foregoing, Transporter presents this Statement of Operating Conditions under which Transporter will offer NGPA Section 311 transportation service on its system and Transporter elects, pursuant to 18 C.F.R.  284.123(b)(1)(ii), to use rates on file with the Texas Railroad Commission and such current rates are summarized on Exhibit "C" hereto.  Transporter's commercial operations relating to NGPA Section 311 service, including contracting, scheduling, invoicing, payment, etc., will be provided subject to this Statement of Operating Conditions.
2. 	DEFINITIONS.
Except as otherwise specified, the following terms as used herein, in the Service Agreement and its applicable Confirmation will be construed to have the following scope and meaning:
(a) "Btu" means British thermal unit and, where appropriate, the plural thereof.
      (b) "Commencement Date" is defined in Section 9.1 of this Statement of Operating Conditions.
      (c) "Confirmation" means an effective and unexpired agreement documented by written means, including but not limited to facsimile, e-mail, or other electronic means, evidencing an affirmative agreement between Transporter and Shipper on all key terms and conditions, for a particular arrangement under a Service Agreement or transportation agreement, including information materially similar to that contained on Exhibit "B"; Shipper's submission of a nomination without an affirmative agreement by Transporter to all terms of service shall not constitute a Confirmation.
      (d)  "Day" means the period beginning at 9:00 a.m. central clock time ("CCT") on each calendar day and ending at 9:00 a.m. CCT on the following calendar day.
      (e) "Delivery Point(s)" is defined in Section 6.1 of this Statement of Operating Conditions.
(f) "Effective Date" means the first Day of the term of a Confirmation.
      (g) "Firm" or "Firm Service" means that the Maximum Daily Contract Quantity is not subject to a prior claim by another customer or class of service.
      (h) "Gas" means natural gas produced from gas wells, gas produced in association with oil (casinghead gas), and/or the residue gas resulting from processing casinghead gas and/or gas well gas.
      (i) "Heating Value" means the total heating value expressed in Btu per cubic foot (gross heating value) of the Gas, and will be determined at a temperature of 60 degrees Fahrenheit, saturated with water vapor and under a pressure equivalent to that of 30 inches of mercury at 32 degrees Fahrenheit converted to base conditions of 60 degrees Fahrenheit and an absolute pressure of 14.65 pounds per square inch and adjusted to reflect actual water vapor content.
      (j)  "Interruptible" or "Interruptible Service" means Transporter may interrupt, curtail, or suspend the receipt, transportation or delivery of Gas hereunder at any time and from time to time for any reason without notice, whether or not caused by an event of Force Majeure, with Transporter having no liability to Shipper.
      (k) "Make-up Volumes" is defined in Section 7.4.1 of this Statement of Operating Conditions.
      (l) "Maximum Daily Contract Quantity" or "MDCQ" means the maximum quantity of Gas in MMBtu, exclusive of applicable Retention Volume, that Shipper may nominate and deliver to Transporter each Day at a Receipt Point(s) or Delivery Point(s) or an aggregate of Receipt Points or Delivery Points at a relatively uniform hourly rate over the course of such Day, as specified in a Confirmation.
(m) "Mcf" means one thousand cubic feet, and "MMBtu" means one million Btu.
      (n) "Month" means that period of time beginning at 9:00 a.m. CCT on the first day of a calendar month and ending at 9:00 a.m. CCT on the first day of the following calendar month.
      (o) "Monthly Imbalance" is defined in Section 7.4.1 of this Statement of Operating Conditions.
      (p) "Nomination" is defined in Section 7.1 of this Statement of Operating Conditions.
      (q) "Operational Flow Order" is defined in Section 7.3 of the Statement of Operating Conditions.
(r) "Psia" means pounds per square inch absolute.
(s) "Psig" means pounds per square inch gauge.
      (t) "Receipt Point(s)" is defined in Section 6.2 of the Statement of Operating Conditions.
      (u) "Retention Volume" is defined in Section 8.2 of the Statement of Operating Conditions.
      (v) "Scheduled Quantity" means the quantity of Gas, inclusive of any applicable Retention Volume, nominated and scheduled by Shipper and confirmed by Transporter with the upstream and the downstream pipeline operators, subject to any limitations of the MDCQ set forth in the Confirmation.
      (w) "Service Agreement" means the agreement between Transporter and Shipper, whereby Transporter will provide transportation services for Shipper pursuant to the terms and provisions of this Statement of Operating Conditions and any applicable Confirmation.  
      (x) "Shipper" means the party that holds all lawful rights and/or title to the Gas that is being transported and who has a fully executed Service Agreement and Confirmation with Transporter. 
      (y) "Transporter" means Altus Midstream Pipeline LP.
3. 	REQUEST FOR SERVICE AGREEMENT.
      3.1 Request for Service Agreement. A Service Agreement is required for all services hereunder and will be subject to all terms and provisions of this Statement of Operating Conditions, and its applicable Confirmation. Any potential Shipper desiring to obtain services from Transporter must request a Service Agreement from Transporter.  The request may be in writing, by telephone or electronic medium. Shipper shall provide documentation to demonstrate its creditworthiness to the satisfaction of the Transporter in accordance with Section 3.3 hereof.
Requests for Service Agreement may be sent to: 
Altus Midstream Pipeline LP
Attn: Commercial Operations
17802 IH-10 West
Suite 300
San Antonio, TX 78257
Email: CommercialOperations@apachecorp.com
      3.2 Requirements of Request for Service. Each request for a specific transaction under an executed Service Agreement must include the following information:
      3.2.1 Shipper's name, Service Agreement number and any applicable individual transaction confirmation number;
      3.2.2 A statement identifying the "on behalf of" entity(ies) that are warranted by Shipper to meet the provisions of Part 284 of the FERC's regulations;
      3.2.3 Requested Receipt Point(s) or receipt point area and Delivery Point(s) or delivery point area;
3.2.4 Shipper's requested Maximum Daily Contract Quantity;
3.2.5 The type and character of service requested; and
3.2.6 The term of the service requested.
      3.3 Credit Approval. Transporter's agreement to execute a Service Agreement or to engage in a specific transaction under a Service Agreement is contingent upon a satisfactory appraisal of Shipper's credit by Transporter.
      3.3.1 If requested by Transporter, potential Shipper must provide a copy of its last two (2) fiscal years of audited financial statements, including balance sheet, income statement, cash flow statement and accompanying footnotes. If potential Shipper cannot provide the above information on itself, then potential Shipper must, if applicable, provide that information for its parent company.
      3.3.2 In the event Transporter determines Shipper's credit to be unsatisfactory in Transporter's sole opinion, as tested in a commercially reasonable and in a not unduly discriminatory manner, at any time during the term of any Service Agreement or applicable Confirmation, Transporter may demand "Adequate Assurance of Performance" which shall mean sufficient security in a form, an amount and for the term reasonably specified by Transporter. Shipper at its option may provide one of the following forms of security:
      (a) Post an irrevocable standby letter of credit in a form, substance and from a bank satisfactory to Transporter for services equal to or up to three (3) months of all fees and charges that would be due from Shipper if Transporter were performing such service plus an amount for projected imbalances, unless a lesser amount is reasonable to and agreed upon by Transporter based on Shipper's financial condition; or
      (b) Provide a prepayment or a deposit for services equal to or up to three (3) months of all fees and charges that would be due from Shipper if Transporter were performing such service plus an amount for projected imbalances, unless a lesser amount is reasonable to and agreed upon by Transporter based on Shipper's financial condition; or
      (c) Provide a guaranty from a guarantor acceptable to Transporter.  The demand for Adequate Assurance of Performance can be satisfied with a guaranty issued on behalf of Shipper in a format, amount and term acceptable to Transporter, but only for as long as the credit of Shipper's guarantor continues to be acceptable to Transporter, after which time only Adequate Assurance of Performance in the form of (a) and (b) will be acceptable to Transporter.
      3.3.3 Transporter shall have the right to suspend performance under any Service Agreement or any applicable Confirmation in the event: (i) Shipper has voluntarily filed for bankruptcy protection under any chapter of the Bankruptcy Code; (ii) Shipper is the subject of an involuntary petition of bankruptcy under any chapter of the Bankruptcy Code, and such involuntary petition has not been settled or otherwise dismissed within ninety (90) Days of such filing; (iii) Shipper otherwise becomes insolvent, whether by an inability to meet its debts as they come due in the ordinary course of business or because its liabilities exceed its assets on a balance sheet test and/or however such insolvency may otherwise be evidenced; or (iv) Shipper fails to timely pay any amounts due and payable under a Service Agreement or applicable Confirmations. 
      3.3.4 Should Shipper fail to provide Adequate Assurance of Performance within two (2) business Days after receipt of written demand for such assurance, then Transporter shall have the right to suspend performance under any Confirmation until such time as Shipper furnishes Adequate Assurance of Performance and/or terminate any Service Agreement or applicable Confirmation in addition to all other remedies available at law or in equity.
      3.4 Transporter shall have the right to reject any request for Service Agreement or Confirmation that does not contain the required information set forth herein and Transporter will have no liability to Shipper or any other entity in connection with such rejection.
      3.5 In addition to requiring Adequate Assurance of Performance to secure the Service Agreement and/or transactions thereunder, Transporter may require additional or alternate security from Shipper if Transporter's service to Shipper is contingent upon Transporter's construction of facilities. This provision shall also apply to any assignment of a Service Agreement that was initially subject to this provision.
      3.6 Service Agreements.  After Shipper has requested a Service Agreement and after Transporter has determined that Shipper is creditworthy, Transporter and Shipper will enter into a Service Agreement, which will incorporate by reference the provisions of this Statement of Operating Conditions.  Multiple transportation arrangements can be agreed to between the parties and confirmed by Confirmations under a single Service Agreement. Neither Transporter nor Shipper will have any obligations to one another until authorized representatives of both Transporter and Shipper have executed a Service Agreement and have agreed to a Confirmation.  Any applicable Confirmation(s) will contain specific details agreed to by Transporter and Shipper for a particular service arrangement.  
      3.7 Additional Facilities.  Transporter shall not be required to construct additional facilities, modify or expand facilities, or acquire facilities to provide service.  Any additional facilities (including meters) required to provide service to a Shipper that Transporter agrees in its sole discretion to provide shall be paid for by such Shipper, unless otherwise agreed to in writing by Shipper and Transporter.  
4. 	GENERAL.
      4.1 Transporter's Obligations.  Transporter will receive Gas up to the Scheduled Quantity at the Receipt Point(s) as nominated and tendered by Shipper under the terms of this Statement of Operating Conditions, the Service Agreement, and its applicable Confirmation, transport and deliver an equivalent quantity of Gas, in MMBtu, to Shipper at the Delivery Point(s), less the Retention Volume as set forth in Section 8.2 of this Statement of Operating Conditions. Transporter's obligations to receive, transport, and deliver Gas to the Delivery Point(s) are fully interruptible by Transporter, and are subject to: (i) available capacity, as determined by Transporter, upon its exercise of reasonable judgment; (ii) an event of Force Majeure; (iii) Shipper's failure or refusal to deliver Gas to or receive Gas from Transporter as required under this Statement of Operating Conditions, the Service Agreement and any applicable Confirmation; (iv) any laws, rules, orders, or requirements of any governmental or regulatory authorities that limit, prevent, or interfere with Transporter's performance; and (v) as otherwise provided under any other terms and conditions in this Statement of Operating Conditions, the Service Agreement, and any applicable Confirmation. Shipper acknowledges that for those Receipt Point(s) and Delivery Point(s) at which Transporter has operational balancing agreements, the Scheduled Quantity is deemed to have been received or delivered for the account of Shipper, subject to the remaining terms and conditions of this Statement of Operating Conditions, the applicable Service Agreement, and any applicable Confirmation.  In the event of constraints at a Delivery Point(s) or on a downstream pipeline, Transporter will rely on the downstream party's allocation at the affected Delivery Point(s) and, to the extent Shipper's nominations are reduced, Shipper will be deemed to have failed to receive Gas from Transporter as required hereunder.
      4.2 Interruption of Service.  Transporter will endeavor to advise (by telephone or electronic medium) Shipper's dispatcher or authorized representative of an interruption as soon as practicable, either before or after interruption of service, but Transporter will have no liability for any failure to give such notice.  Transporter will not be liable for any loss or damage to any person or property caused, in whole or in part, by any interruption of service under any Service Agreement or its applicable Confirmation.  Should any third party with the right to control the Receipt Point(s), Delivery Point(s), or any other facilities needed for the receipt, transportation, or delivery of Gas hereunder limit or fail to authorize the use of any such facilities to perform services provided hereunder, Transporter will have no obligation hereunder to perform any transportation service, or receive or deliver Gas hereunder at such facilities.
      4.3 Shipper's Obligations. Shipper will tender the Scheduled Quantity at the Receipt Point(s), and accept such Gas, less the Retention Volume, at the Delivery Point(s). Shipper's obligations set forth in the preceding sentence are subject to: (i) an event of Force Majeure; (ii) Transporter's failure or refusal to receive Gas from or deliver Gas to Shipper as required under this Statement of Operating Conditions; (iii) any laws, rules, orders, or requirements of any governmental or regulatory authorities that limit, prevent, or interfere with Shipper's performance; and (iv) as otherwise provided under any other terms and conditions in this Statement of Operating Conditions, the applicable Service Agreement, and its applicable Confirmation.
      4.4 Priority of Service and Scheduling.  From time to time, Transporter may not have sufficient capacity available to accommodate all nominations through specific Receipt Point(s), specific Delivery Point(s), specific compression stations, and/or specific segments of Transporter's pipeline system (the "Impacted Location").  In such event, capacity through the Impacted Location will be allocated among the Interruptible customers on an economic basis.  As such, Transporter shall allocate capacity to the Shippers paying a higher rate per MMBtu before Shippers paying a lower rate.  If two or more Shippers are paying the same rate per MMBtu, Transporter shall schedule nominated service on a pro rata basis. 
     4.5 Multiple Confirmations.  If Shipper has multiple Confirmations, Shipper will not be permitted to combine services available under such Confirmations.  Specifically, Gas will be received under a particular Confirmation and will be delivered under the same Confirmation.
     4.6 Intrastate Service.  In addition to the services provided hereunder pursuant to NGPA Section 311, Transporter offers and performs intrastate transportation services that are subject to the exclusive jurisdiction of the Texas Railroad Commission, and that are exempt from FERC's regulation under the NGPA.  To provide Shippers with flexibility to access intrastate and/or interstate markets, Shippers may contract for both intrastate and NGPA Section 311 service on mutually agreeable terms, including a limitation that Shipper's combined usage under the intrastate and NGPA Section 311 agreements cannot exceed the MDCQ.  The description of available intrastate services contained herein is provided for informational purposes only and shall not be construed to make such intrastate services subject to FERC regulation.
     4.7 Filings.  Transporter shall file all necessary reports and/or notices required by any applicable governmental or regulatory authority, and Shipper shall provide Transporter with any necessary compliance information requested by Transporter in connection with preparing such reports.  
5. 	QUANTITY.
      5.1 Maximum Delivery and Receipt Quantities.  The maximum quantity of Gas that Transporter is obligated to receive hereunder at the Receipt Point(s) and deliver hereunder at the Delivery Point(s) during any given hour of any Day is 1/24th of the Shipper's Scheduled Quantity at an instantaneous standard volumetric flow rate at any point in time during the hour, unless otherwise agreed to by Transporter as specifically provided in the Confirmation. Transporter has no obligation to receive, transport, and deliver quantities of Gas hereunder in excess of the Scheduled Quantity.  Transporter has no obligation to receive or deliver Gas in quantities exceeding the physical capacity of the Delivery Point(s) or Receipt Point(s).  
      5.2 All Quantities in MMBtu.  All quantities of Gas received and delivered under any Confirmation will be expressed in terms of MMBtu, including, without limitation, calculation of payments, determination of imbalances, and determination of Retention Volume.
5.3 Authorized Overrun Service.
      5.3.1 Upon request of Shipper at the time it nominates Interruptible Service, Transporter may approve and schedule for receipt or delivery a quantity of Gas greater than the MDCQ and Shipper's Retention Volume ("Authorized Overrun Service").  Authorized Overrun Service will be available only if (i) Transporter determines in its sole discretion that it has sufficient capacity after first scheduling all Firm intrastate and Interruptible transportation service within the limits of all Shippers' MDCQs, and (ii) Shipper has a designated Authorized Overrun Service rate in its Service Agreement or any applicable Confirmation. Authorized Overrun Service will be scheduled on a first-come, first-served basis, with the priorities established in Section 4.4.
      5.3.2 Authorized Overrun Service is Interruptible and Transporter has absolutely no liability whatsoever in damages or otherwise for any interruption or cessation of Authorized Overrun Service.

6.	DELIVERY POINT(S) AND RECEIPT POINT(S).
      6.1 Delivery Point(s).  Transporter will deliver Gas to Shipper, or its agent, under this Statement of Operating Conditions, the Service Agreement, and its applicable Confirmation to the existing points of interconnection between Transporter's pipeline facilities and the pipeline or receipt facilities of other parties at the "Delivery Point(s)" or a pool consisting of an aggregate collection of such points, as identified in the Confirmation.  Except as set forth in the Service Agreement and/or Confirmations, Delivery Point(s) may be modified, or additional Delivery Point(s) may be added to a Confirmation, by mutual agreement of the parties.  In the event Delivery Point(s) are added to a Confirmation, such additional Delivery Point(s) will be prioritized, for purposes of Section 4.4, based on the effective date of the amended Confirmation, unless otherwise mutually agreed.
      6.2 Receipt Point(s).  Shipper will tender Gas for delivery to Transporter under this Statement of Operating Conditions, the Service Agreement, and its applicable Confirmation from the existing points of interconnection between Transporter's pipeline facilities and the pipeline or delivery facilities of other parties at the "Receipt Point(s)" or a pool consisting of an aggregate collection of such points, as identified in the Confirmation.  Except as set forth in the Service Agreement and/or Confirmations, Receipt Point(s) may be modified, or additional Receipt Point(s) may be added to the Confirmation, by mutual agreement of the parties.  In the event Receipt Point(s) are added to a Confirmation, such additional Receipt Point(s) will be prioritized, for purposes of Section 4.4, based on the effective date of the amended Confirmation, unless otherwise mutually agreed.
      6.3 Allocation at Receipt and Delivery Point(s).  It is recognized that quantities of Gas may be transported through the Receipt Point(s) and/or the Delivery Point(s) for one or more parties other than the Shipper.  If that occurs, the measurement of Gas under this Agreement may involve the allocation of Gas receipts or deliveries.  As between Transporter and Shipper, and subject to Section 4.1, Transporter will determine the allocation of all Gas deliveries hereunder.
      6.4 Payment of Fees.  Shipper must pay any and all transportation, measurement, testing, compression, or other fees or charges imposed by any third party on deliveries at any Receipt Point(s) or Delivery Point(s).  Notwithstanding the foregoing, in the event Transporter pays any such fees and charges, Shipper must reimburse Transporter for any such fees or charges paid by Transporter with respect to Shipper's Gas provided that Transporter has given Shipper written notice of the amount of such fees and charges and Shipper has agreed in writing to reimburse Transporter for such fees and charges.  If Shipper has not given Transporter written notice of its agreement to reimburse Transporter for any such fees and charges, Transporter will have no obligation to receive Gas for Shipper at any such Receipt Point(s) or deliver Gas for Shipper at any such Delivery Point(s) that may be subject to such fees and charges.
7.	NOMINATIONS AND BALANCING.
      7.1 Nominations.  Shipper shall submit the quantity of Gas in MMBtu Shipper expects to make available and deliver at each Receipt Point each Day, or portion thereof, and receive at each Delivery Point each Day, or portion thereof (the "Nomination") via Transporter's applicable form or Web-based online nomination system.  Transporter, to the extent it is utilizing for its own account any available unused capacity, shall submit a Nomination for such service in accordance with the same provisions and shall be treated in the same manner, as all other Nominations pursuant to the nomination procedures set forth herein and the scheduling and priority of service provisions of this Statement of Operating Conditions.  Transporter will confirm Shipper's Nomination with upstream and downstream operators in accordance with the provisions of this Statement of Operating Conditions and the applicable Confirmation.  Shipper must have a Confirmation in place before a Nomination can be submitted.  The deadline for submitting Nominations for the first of each Month is 1:00 p.m. CCT, one business day prior to the beginning of each Month.  Shipper will use reasonable efforts to notify Transporter by no later than 1:00 p.m. CCT on the business day prior to the Day(s) of the scheduled flow, of the capacity and path that the Shipper plans to utilize.  The deadline for submitting daily nominations is 1:00 p.m. CCT the business day prior to the Day of the scheduled flow.  Shipper has the right to nominate quantities up to Shipper's Maximum Daily Contract Quantity.  Any initial nomination received after the deadline of 1:00 p.m. CCT on the business day prior to the flow Day will be scheduled by Transporter when feasible. Transporter may, in its sole discretion, allow intraday Nomination changes at the Receipt Point(s) and Delivery Point(s) as operating conditions permit.
      7.2 Shipper's Balancing Obligations.  For each Confirmation, the maximum quantity of Gas that Transporter is obligated to receive at the Receipt Point(s) and deliver at the Delivery Point(s) during any given hour of any Day is 1/24th of Shipper's Scheduled Quantity, unless otherwise agreed to by Transporter or as provided in the applicable Confirmation.  Shipper will use reasonable commercial efforts to balance, on an hourly and daily basis, between the Gas received by Transporter at the Receipt Point(s), less the Retention Volume, and the Gas delivered at the Delivery Point(s).  Shipper will use reasonable commercial efforts to monitor and adjust its Nominations, deliveries, and receipts to maintain the hourly and daily balances between the Receipt Point(s) and Delivery Point(s), and notify Transporter immediately of any imbalances or situations that may cause imbalances.  If Transporter is unable to receive the Scheduled Quantity at any Receipt Point(s) or deliver the Scheduled Quantity, less the Retention Volume, at any Delivery Point(s), Transporter will notify Shipper as soon as practicable.  Transporter has no obligation to receive and deliver quantities of Gas that differ from the Scheduled Quantity.
      7.3 Operational Flow Order.  If, in Transporter's sole discretion, it is necessary or desirable in order to preserve the overall operational balance or integrity of Transporter's system, Transporter may issue an "Operational Flow Order".
     7.3.1 An Operational Flow Order may be issued if Transporter determines that changes in receipts or deliveries are necessary to maintain overall operational balance of Transporter's system or to enable Transporter to provide the services set forth in this Statement of Operating Conditions, the Service Agreement and/or its Confirmation.  The Operational Flow Order will identify with specificity the operational problem to be addressed, the action(s) Shipper must take, the time by which Shipper must take the specified action(s), and the period during which the Operational Flow Order will be in effect.  Transporter will provide as much prior notice as possible, but not less than three (3) hours, to Shipper of actions Shipper must take to comply with an Operational Flow Order; provided that action by Shipper can be required on less than three (3) hours notice if the nature of the Operational Flow Order is due to safety concerns or to protect the integrity of Transporter's pipeline system.
      7.3.2 An Operational Flow Order may require Shipper to take any of the following actions or similar actions:
      (a) Commence or increase supply inputs into Transporter's pipeline system at specific Receipt Point(s) or, alternatively, cease or reduce deliveries from Transporter's pipeline system at specific Delivery Point(s), both as directed by Transporter.
      (b) Cease or reduce supply inputs into Transporter's pipeline system at specific Receipt Point(s) or, alternatively, commence or increase deliveries of Gas from Transporter's pipeline system at specific Delivery Point(s), both as directed by Transporter.
      (c) Eliminate any transportation imbalances, as directed by Transporter.
      (d) Conform actual receipts and deliveries to nominated and scheduled receipts and deliveries.
      (e) Delay changes in deliveries up to twenty-four (24) hours to account for the molecular movement of Gas.
      (f) Such other actions that are within Shipper's control that would tend to alleviate the operational situation to be addressed.
      7.3.3 Should Shipper fail to adjust its receipts and/or deliveries in compliance with an Operational Flow Order, Shipper must pay Transporter a charge equal to the highest daily price of gas at the location closest to the applicable Receipt Point(s) or Delivery Point(s) as stated in Gas Daily (r) (Platts, a division of The McGraw-Hill Companies, Inc.), or successor publication, in the column "Daily Price Survey" ("Gas Daily") plus two dollars ($2.00) or if Gas Daily is unavailable another similar publication plus two dollars ($2.00), or ten dollars ($10.00), whichever is greater, for each MMBtu received or delivered under the Confirmation at the Receipt Point(s) or Delivery Point(s) during each hour in which deliveries are greater than 110% or less than 90% of the Scheduled Quantities at the Receipt Point(s) for such hour, less Retention Volume, while the Operational Flow Order is in effect.
      7.3.4 Should Shipper fail to abide by an Operational Flow Order issued pursuant to this Section 7.3, Shipper will indemnify Transporter for any damages resulting from Shipper's failure to comply with the Operational Flow Order.
      7.4 Gas Imbalance Account.  
      7.4.1 Imbalance-related Definitions.
      (a) An imbalance will exist hereunder when, during any designated time period during the term hereof, there is a numerical difference between (i) the quantity of gas delivered by Transporter to Shipper at the Delivery Point(s) grossed up for Retention Volume attributed to the volumes of Gas delivered by Transporter to Shipper at the Delivery Point(s), and (ii) the quantity of gas received by Transporter from Shipper (or its designee) at the Receipt Point(s), exclusive of Make-up Volumes.
      (b) "Make-up Volumes" means the volume of gas specifically and separately nominated by Shipper and confirmed by Transporter to resolve any imbalance under the Service Agreement and any applicable Confirmation.
      (c) "Monthly Imbalance" means the absolute value of the difference between the cumulative volumes of gas received at the Receipt Point(s) during a given Month, less Retention Volume attributed to the volumes of Gas delivered by Transporter to Shipper at the Delivery Point(s), and the cumulative volumes of gas delivered at the Delivery Point(s) during the same given Month.
      (d) For those Receipt Point(s) and Delivery Point(s) at which Transporter has operational balancing agreements, the quantity of gas delivered by Transporter to Shipper at such Delivery Point(s) and the quantity of gas received by Transporter from Shipper (or its designee) at such Receipt Point(s), shall be deemed in accordance with Section 4.1.
      7.4.2 As soon as actual measurement information for Gas receipts and deliveries at the Receipt Point(s) and Delivery Point(s) is available, Transporter will provide Shipper with written notice of any imbalance in the prior Month.
      7.4.3 Shipper's Balancing Obligations.  Shipper will monitor, and if necessary, adjust, or cause to be adjusted, (i) deliveries of gas to Transporter at the Receipt Point(s) for transportation to the Delivery Point(s) and (ii) receipts of gas from Transporter at the Delivery Point(s), in order to maintain a balance of receipts and deliveries at consistent flow rates throughout each Day and Month.  Shipper agrees to revise its Nominations as needed to reflect any adjustments to deliveries of gas and receipts of gas.  Shipper's balancing requirements (i.e., daily and monthly) may be determined independently for each Delivery Point(s) and corresponding Receipt Point(s), in Transporter's reasonable discretion.
      7.4.4 Transporter's Balancing Obligations.  Subject to the terms of the Service Agreement and any applicable Confirmation, Transporter will deliver to Shipper at the Delivery Point(s), during each applicable time period, a volume of gas, on a MMBtu basis, equivalent to the volume of gas, on an MMBtu basis, received by Transporter from Shipper (or its designee) at the Receipt Point(s) during such applicable time period, exclusive of any Retention Volumes and Make-up Volumes.  Transporter will not be obligated to deliver to Shipper at the Delivery Point(s) volumes of gas in excess of those quantities received from Shipper at the Receipt Point(s) exclusive of Retention Volumes and Make-up Volumes.  Transporter's obligation to receive or deliver Make-up Volumes is wholly interruptible and subject to system operations in Transporter's reasonable opinion.
      7.4.5 Monthly Imbalance Correction.  At the end of each Month, any Monthly Imbalance shall be corrected in-kind during the immediately ensuing Month or within such longer period of time as Transporter and Shipper may mutually agree in writing.
      7.4.6 Upon termination of a Service Agreement or its applicable Confirmation, Transporter and Shipper shall, within thirty (30) Days thereafter, or such longer period of time as Transporter and Shipper may mutually agree in writing, eliminate any remaining imbalance by correcting such imbalance in kind. If after the thirty (30) Days, or such longer period of time as Transporter and Shipper may mutually agree in writing, the imbalance has not been corrected in kind, then the Transporter and Shipper will eliminate any remaining imbalance by cash out on the following terms: (i) If Gas is owed to Transporter, Shipper will pay Transporter a per MMBtu fee equal to the simple average of the weekly posted price "Regional Average" as published in the Energy Intelligence's publication Natural Gas Week under the section "Texas (West)" for the Month.  (ii) If Gas is owed to Shipper, Transporter shall pay a per MMBtu fee equal to the simple average of the weekly posted price "Regional Average" as published in the Energy Intelligence's publication Natural Gas Week under the section "Texas (West)" for the Month.
      
      7.5 Transporter's Right to Balance.  Notwithstanding anything in this Statement of Operating Conditions to the contrary, Transporter may, at any time and from time to time, with notice to Shipper, restrict, interrupt, or reduce its receipts or deliveries of Gas at the Receipt Point(s) or Delivery Point(s), and direct Shipper to make adjustments in its receipts or deliveries, in order to maintain a daily and/or hourly balance or to correct an imbalance.  If Shipper fails or refuses to follow any such request from Transporter, Transporter may, without liability to Shipper, cease accepting or delivering Gas under the Service Agreement and any applicable Confirmation until the conditions causing the imbalance are corrected.
      7.6 Upstream and Downstream Pipeline Penalties.  Cash-out dollar amounts, if any, billed or paid to (or by) Transporter by (or to) upstream or downstream pipelines and attributable to Shipper's Gas shall be billed or credited (as applicable) by Transporter to Shipper.  Any penalties imposed by upstream or downstream pipelines on Shipper or Transporter with regard to imbalances shall be the responsibility of Shipper to the extent caused by Shipper's actions or inactions, and by Transporter to the extent caused by Transporter's actions or inactions.  The responsible party shall reimburse the non-responsible party for any such penalties paid by the non-responsible party.
8.	RATES.
     8.1	Transportation Rates.  Each Month Shipper will, where applicable, pay Transporter the applicable rate as set forth in the Statement of Rates provided in Exhibit C to this Statement of Operating Conditions, unless otherwise agreed to in writing by Shipper and Transporter in the Service Agreement or the Confirmation(s) ("Transportation Rates").  Transportation Rates and other charges due under this Statement of Operating Conditions, the Service Agreement, and its applicable Confirmation will be invoiced and payable under Section 14 of this Statement of Operating Conditions.
      8.2	Retention Volume. In addition to the Transportation Rates and other charges payable under this Statement of Operating Conditions, the Service Agreement or its applicable Confirmation, Transporter will retain from the volumes of Gas delivered by Shipper hereunder at each Receipt Point(s) at no cost to Transporter, Shipper's pro rata share of actual fuel, lost, and unaccounted for Gas, associated with the operation, maintenance and repair of the Altus Midstream Pipeline System (all of the foregoing, collectively, the "Retention Volume").  In no event shall the Retention Volume for any Shipper be more than 2.5 percent (2.5%) of the volumes of Gas delivered by such Shipper for each Month. 
9.	TERM.
     9.1 	The Service Agreement will be effective on the date listed in the Service Agreement as the "Commencement Date", and will, subject to the terms and provisions of this Statement of Operating Conditions, remain in full force and effect as set forth in the applicable Confirmation; provided the Service Agreement shall continue to apply to all Confirmations then in effect until all Confirmations are completed.  Termination, cancellation, or expiration of the Service Agreement or any applicable Confirmation will not extinguish any obligation that accrued before or as a result of the termination, cancellation, or expiration.
10.	QUALITY.
      10.1	Shipper represents and warrants that all Gas tendered for transportation at the Receipt Point(s) shall meet the Quality Specifications. "Quality Specifications" means, for each constituent, the more stringent of (i) the quality specifications required for the acceptance of Gas by any downstream pipeline, or (ii) Transporter's quality specifications set forth below (or as modified from time to time or as otherwise agreed to by Transporter as specifically provided in the Confirmation on a non-discriminatory basis):
     10.1.1	Have a Heating Value of not less than nine hundred fifty (950) Btu per cubic foot nor more than eleven hundred (1,100) Btu per cubic foot;
     10.1.2	Be commercially free of dust, gum, gum-forming constituents, gasoline, liquid hydrocarbons, water, and any other substance of any kind that may become separated from the Gas during the handling thereof or that may cause injury to or interference with proper operation of the lines, meters, regulators, or other appliances through which it flows;
      10.1.3	Not contain more than five (5) grains of total sulfur nor more than one- fourth (1/4) grain of hydrogen sulfide per one hundred (100) standard cubic feet;
      10.1.4	Not contain more than 10 parts per million of oxygen, and shall not contain more than three percent (3%) by volume of carbon dioxide, not contain more than three percent (3%) by volume of nitrogen or three percent (3%) by volume of total inert gases;
      10.1.5	Have a temperature of not more than one hundred twenty degrees Fahrenheit (120F) nor less than forty degrees Fahrenheit (40F);
      10.1.6	Not contain more than seven (7) pounds of water vapor per one million (1,000,000) standard cubic feet; and
      10.1.7	Have a hydrocarbon dew point below forty degrees Fahrenheit (40F).
      10.2	In the event that the Gas being received does not conform to the standards outlined above, Transporter may, in its sole discretion and on a non-discriminatory basis, accept such Gas or restrict or refuse any volumes that are non-conforming or deficient.
      10.3	Shipper shall be responsible for odorizing any part of the Gas delivered hereunder at the Delivery Point(s) which is diverted and/or used for any purpose for which odorization is required pursuant to regulations of the Texas Railroad Commission.
      10.4	In the event that Shipper's Gas fails to conform to any of the Quality Specifications set forth above, including, but not limited to the hydrocarbon dew point or the gross heating value or any other specification set forth above or to a more restrictive specification imposed by a downstream pipeline to which Shipper has nominated Gas, Transporter, in its discretion and on a non-discriminatory basis, may accept such off-specification Gas for transportation and delivery to such downstream pipeline provided that Shipper has made arrangements to ensure that such off-specification Gas is acceptable to the downstream pipeline and conforms to  their applicable specifications, including but not limited to any arrangements to treat, condition, or blend with other Gas (prior to it reaching such downstream pipeline).  Upon request from Transporter, Shipper shall provide documentation acceptable to Transporter demonstrating that Shipper has made such contractual arrangements for such off-specification Gas on the path for which Shipper has nominated Gas.  This provision shall not be construed as a general waiver to Transporter's specification and is only available where physical blending, treatment and conditioning of Gas is contracted for and will take place prior to reaching the downstream pipeline whose specifications are to be met and such acceptance and service by Transporter shall not adversely impact markets on or downstream of Transporter's system.
11. 	ADDRESSES.
      11.1	Addresses of Parties.  Except to the extent that oral notification is expressly permitted by this Statement of Operating Conditions, all notices, requests, demands, statements and payments provided for in this Statement of Operating Conditions must be given in writing at the addresses of the parties specified in the Service Agreement.
      11.2	Change of Address.  A party may change its address under the Service Agreement by giving thirty (30) Days prior written notice.  Notices and payments will be effective when they are delivered at the appropriate address specified in the Service Agreement, during normal business hours on a business Day.  Notices delivered after business hours or on a weekend or holiday will be effective on the next business Day.
12. 	PRESSURES AT DELIVERY AND RECEIPT POINT(S).
      12.1	Shipper (or its designee) will deliver Gas to Transporter at the Receipt Point(s) at pressures sufficient to enter Transporter's pipeline system at such points; provided, however, that Shipper's delivery pressure into Transporter's system at the Receipt Point(s) may not exceed Transporter's maximum allowable operating pressure, as such may vary from time to time, at any such point or cause the pressure at any such point to exceed Transporter's maximum allowable operating pressure. Unless otherwise provided in the applicable Confirmation, Transporter shall not have any obligations to alter its pipeline pressures, provide compression, or modify its pipeline operations in order to effectuate the receipt or delivery of Gas.
      12.2	Transporter will deliver Gas to Shipper or Shipper's designee at Transporter's operating pressure at the Delivery Point(s), as such may vary from time to time.
13. 	MEASUREMENT.
      For the purposes of this Statement of Operating Conditions, the party metering the Gas, or whose designee meters the Gas, at a particular Receipt Point(s) or Delivery Point(s) is referred to as the "Metering Party" and the other party is referred to as the "Non-Metering Party".
      13.1	The measuring facilities shall be designed, installed, operated, and maintained by Transporter or its designee in accordance with the recommendations contained in the following standards:
     13.1.1	Orifice Measurement - American Gas Association Report Number 3 (herein referred to as AGA 3).
     13.1.2	Turbine Measurement - American Gas Association Report Number 7 (herein referred to as AGA 7).
     13.1.3	Positive Measurement - American National Standards Institute B109.2 (herein referred to as ANSI B109.2).
     13.1.4	Ultrasonic Measurement - American Gas Association Report Number 9 (herein referred to as AGA 9).
     13.1.5  Coriolis Measurement - American Gas Association Report Number 11 (herein referred to as AGA 11).
      13.2	If adequate metering facilities are already in existence at the Receipt Point(s) and Delivery Point(s), such existing metering facilities will be used for so long as, in Transporter's reasonable judgment, the facilities remain adequate.  If the metering facilities at any Receipt Point(s) or Delivery Point(s) are reasonably determined by Transporter to be inadequate, then the parties will mutually agree with respect to the equipment that must be added at such point(s) and the responsibility for payment of such equipment.  If the parties are unable to agree upon the equipment to be added at any such point, or which party will be responsible to pay for such equipment, then equipment shall not be added.
      13.3	The Non-Metering Party may, at its option and expense, install and operate meters, instruments and equipment, in a manner that will not interfere with the Metering Party's equipment, to check the Metering Party's meters, instruments, and equipment, but the measurement for the custody transfer of Gas for the purpose of the Service Agreement and any applicable Confirmation will be by the Metering Party's meter only, except as hereinafter specifically provided.  The meters, check meters, instruments, and equipment installed by each party will be subject at all reasonable times to inspection or examination by the other party (Non-Metering Party), but the calibration and adjustment thereof will be done only by the installing party.
      13.4	All meters will be calibrated and/or proven on a schedule, but in no event will the calibration period be in excess of ninety (90) Days.  Notification of scheduled calibrations shall be made to all interested parties and reasonable effort will be made to accommodate each party's schedule; however, calibration will proceed at the scheduled time regardless of attendees.  Records from all measuring equipment are the property of the Metering Party who will keep all such records on file for a period of not less than two (2) years.  Upon request, the Metering Party will make available to the Non-Metering Party volume records from the measuring equipment, together with calculations therefrom, for inspection and verification, subject to return within thirty (30) Days after receipt thereof.
      13.5	Either Party shall have the right to conduct such pulsation tests as they deem prudent, at their sole risk and expense.  If excessive pulsation is evident, mutually agreed modifications to operation or facility design will be made to reduce the effect of such pulsation.  If pulsation issues cannot be resolved in a mutually agreeable manner, either party shall have the right to refuse delivery or receipt of Gas at the Receipt Point(s) or Delivery Point(s).
      13.6	If the percentage of inaccuracy from the results of any test is greater than one percent (1%) volumetrically, the registration of such meter shall be corrected at the rate of such inaccuracy for any period which is definitely known or agreed upon.  In the event the period is not definitely known or agreed upon, such correction shall be for a period extending back one-half (1/2) of the time elapsed since the date of the last calibration.  Following any test, measurement equipment found inaccurate shall be immediately restored by Transporter as closely as possible to a condition of accuracy.  If any measurement equipment is out of service or out of repair for any reason so that the amount of Gas delivered cannot be estimated or computed from the reading thereof, the amount of Gas delivered through such meter during the period such meter is out of service or out of repair shall be estimated and agreed upon by Transporter and Shipper upon the basis of the best data available using the first of the following methods which is feasible:
      13.6.1	by using the registration of any check meters if installed and accurately registering;
      13.6.2	by correcting the error if the percentage of error is ascertainable by calibration, test or mathematical calculation; or
      13.6.3	by estimating the quantity of deliveries by comparison with deliveries during preceding period under similar conditions when the meter was registering accurately.
      13.7	Measurement Volume Computations
      13.7.1	Units of measurement shall be determined in MMBtu derived from the calculation of gas volume (Mcf) and gas heating value (Btu/ft), both at identical base conditions of temperature and pressure. The unit of volume of Gas shall be one (1) standard cubic foot at an absolute pressure of fourteen and sixty-five hundredths pounds per square inch absolute (14.65 Psia) and at a temperature of sixty degrees Fahrenheit (60F).
      13.7.2	Atmospheric pressure shall be assumed to be the pressure value as reasonably determined by Transporter for the county in which each of the Receipt Point(s) and Delivery Point(s) is located pursuant to generally accepted industry practices, but not less than twelve and nine-tenths (12.9) Psia nor more than fourteen and seven-tenths (14.7) Psia irrespective of the actual atmospheric pressure at such points from time to time.
      13.7.3	All metered volumes shall be computed in accordance with the standards set forth in Section 13.1 above.
      13.8	Records of calibration and or proving and data associated with the volume calculation are the property of the Metering Party who will keep all such records and data on file for a period of not less than two (2) years. Upon request, the Metering Party will make available to the Non-Metering Party records of calibration and or testing and data associated with the volume calculation, subject to return within thirty (30) Days after receipt thereof.
      13.9	Transporter shall sample and determine the Gross Heating Value, Relative Density and Compressibility received at the Receipt Point(s) or Delivery Point(s) utilizing the following standards:
      13.9.1	Gas Processors Association (GPA) 2166 - Obtaining Natural Gas Samples for Analysis by Gas.
      13.9.2	Gas Processors Association (GPA) 2261 - Analysis for Natural Gas and Similar Gaseous Mixtures by Gas Chromatography.
      13.9.3	Gas Processors Association (GPA) 2145 - Physical Constants for Paraffin Hydrocarbons and Other Components of Natural Gas.
      13.9.4	Gas Processors Association (GPA) 2172 - Calculation of Gross Heating Value, Relative Density, and Compressibility of Natural Gas Mixtures from Compositional Analysis.
      13.10	Transporter shall sample the flowing gas stream utilizing one of the following methods:
      13.10.1	On-line Chromatography;
      13.10.2	Accumulated Sample - If this method is utilized, the application of gas quality in the volume calculation will be during the time period the gas sample was accumulated;
      13.10.3	Spot Sample - If this method is utilized, the application of gas quality in the volume calculation will be the time period beginning on the date the sample was obtained until the next sample is obtained.

14. 	BILLING, ACCOUNTING, AND REPORTS.
      14.1	On or before the fifteenth (15th) Day of each Month, Transporter will render, a statement to Shipper setting forth, in terms of MMBtu, the total volume and quantity of Gas received hereunder at the Receipt Point(s), the volume of Gas retained by Transporter, and the quantity of Gas delivered hereunder at the Delivery Point(s) during the immediately preceding Month and the amount payable therefore.  Shipper agrees to pay Transporter by wire transfer in immediately available funds (identifying the invoice number) the full amount payable according to such statement on or before the later of the twenty-fifth (25th) Day of the Month in which the statement is rendered or ten (10) Days following the receipt thereof by Shipper.  In the event such quantities are estimated for any period, corrected statements shall be rendered by Transporter to Shipper and paid by Shipper or credited by Transporter, as the case may be, in each instance in which the actual quantity received or delivered hereunder with respect to a Month shall be determined to be at variance with the estimated quantity theretofore made the basis of billing and payment hereunder. If an error is discovered in the amount billed in any statement rendered by Transporter, then such error will be adjusted within thirty (30) Days of the discovery of the error.
      14.2	If a bona fide dispute arises as to the amount payable in any statement rendered, then Shipper will nevertheless pay the undisputed amount payable to Transporter under the statement rendered pending resolution of the dispute.  Upon resolution of such dispute, Shipper will pay any monies owed Transporter per the terms of this Section14.
      14.3	In addition to all other remedies available to Transporter, should Shipper fail to pay any amount when the same becomes due, Shipper shall pay interest on outstanding balances accruing thereon at a rate equal to the prime rate from time to time in effect and charged by the Citibank, N.A., New York, New York or its successor, plus two percent (2%) per annum, (but in no event greater than the maximum rate of interest permitted by law) with adjustments in such rate to be made on the same Day as any change in such prime rate, for any period during which the same shall be overdue, such interest to be paid when the amount past due is paid.  Each party hereto or its representative shall have the right at all reasonable times to examine and copy the books and records of the other party to the extent necessary to confirm the performance of any obligation made under or pursuant to the Service Agreement and any applicable Confirmation or verify the accuracy of any statement, charge, computation or demand made under or pursuant to the Service Agreement and any applicable Confirmation.  Any statement shall be final as to all parties unless questioned within two (2) years after payment thereof has been made.
15. 	RESPONSIBILITY.
      15.1	Shipper shall be deemed to be in control and possession of the Gas prior to the receipt of the Gas by Transporter at the Receipt Point and after its delivery to Shipper or for Shipper's account at the Delivery Point(s).  Transporter shall be deemed to be in control and possession of the Gas after its receipt by Transporter at the Receipt Point and prior to its delivery to Shipper or for Shipper's account at the Delivery Point(s).  The party in control and possession of the Gas will be responsible for and shall indemnify the other party, including the party's affiliates and their officers, directors, agents and employees, with respect to any losses, injuries, claims, liabilities, demands, damages, expenses, reasonable attorneys' fees and court costs caused thereby by accident, incident or otherwise or on account of royalties, taxes, payments, or other charges applicable and occurring while the Gas is deemed to be in its control or possession.  Such indemnification shall not extend to claims made that are attributable to the delivery by Shipper to Transporter of Gas that does not meet the Quality Specifications contained herein; provided however that in any instance where Shipper, without prior written consent of Transporter, delivers Gas that does not meet the Quality Specifications herein, Shipper shall indemnify Transporter for any claims, losses, or damages resulting from the delivery of such out of specification Gas.  Each party hereto covenants that with respect to the Gas delivered or redelivered by it hereunder, it will indemnify and save the other party harmless from and against any and all suits, actions, causes of action, claims and demands arising from or out of any adverse claims by third parties claiming ownership of or an interest in the Gas so delivered or redelivered.  Notwithstanding the foregoing, neither party shall be indemnified for its own negligence, and the parties acknowledge and agree that Shipper shall at all times have all lawful right and/or title to all Gas transported hereunder.  Subject to the other terms and conditions of this Statement of Operating Conditions, the Service Agreement and any applicable Confirmation, each party has the right to treat, process, and/or dehydrate the Gas prior to delivering said Gas to the other party.
      15.2	Shipper agrees to reimburse Transporter upon invoice for the full amount of any taxes or charges (of every kind and character except corporate franchise and excess profits taxes and taxes measured by net income) levied, assessed or fixed by any municipal or governmental authority against Transporter or its business in connection with or attributable to the volumes, value or gross receipts from the transportation of the Gas received from Shipper hereunder or against such Gas itself or the act, right or privilege of ownership, production, severance, handling, transmission, compression, treating, distribution, sale, delivery or redelivery of such Gas, whether such tax or charge is based upon the volume, value or gross receipts from the transportation of such Gas or upon some other basis.
16. 	FORCE MAJEURE. 
      16.1	If either party is rendered unable, wholly or in part, by Force Majeure (defined below) or other causes herein specified, to carry out its obligations under the Service Agreement and any applicable Confirmation, other than the obligation to make payment of amounts due hereunder, it is agreed that on such party's promptly giving notice and reasonably full particulars of such Force Majeure in writing or facsimile or by email to the other party within a reasonable time after the occurrence of the cause relied on, then the obligations of the party giving such notice, so far as such obligations are affected by such Force Majeure or other causes herein specified, shall be suspended during the continuance of any inability so caused, but for no longer period, and such cause shall so far as possible be remedied with all reasonable dispatch.
      16.2	The term Force Majeure as employed herein means, to the extent not reasonably within the control of the party claiming suspension and which, by the exercise of reasonable diligence, such party is unable to prevent or overcome: acts of God; strikes, lockouts or other industrial disturbances; acts of the public enemy; sabotage; wars; blockades; insurrections; riots; acts of terror; epidemics; landslides; lightning; earthquakes; fires; storms; storm warnings; hurricanes; floods; washouts; arrests and restraints of the government and people, either federal or state, civil or military; civil disturbances; explosions; breakage; breakdown or accident to machinery, equipment or lines of pipe; freezing of wells or lines of pipe or other delivery facilities; electric power unavailability or shortages; and any other causes, whether of the kind herein enumerated or otherwise, not reasonably within the control of the party claiming suspension, and which by the exercise of due diligence such party is unable, wholly or in part, to prevent or overcome.  Such term likewise includes (1) in those instances where either party hereto is required to obtain servitudes, right-of- way grants, permits or licenses to enable such party to fulfill its obligations hereunder, the inability of such party to acquire, or the delays on the part of such party in acquiring, at reasonable cost and after the exercise of reasonable diligence, such servitudes, right-of-way grants or licenses, (2) in those instances where either party hereto is required to furnish materials and supplies for the purpose of constructing or maintaining facilities or is required to secure permits or permission from any governmental agency (federal, state or municipal, civil or military) to enable such party to fulfill its obligations hereunder, the inability of such party to acquire or the delays on the part of such party in acquiring, at reasonable cost and after the exercise of reasonable diligence, such materials and supplies, permits and permissions, (3) curtailment or interruption of deliveries, receipts or services by third party purchasers, suppliers or customers as a result of an event of Force Majeure, or a breach by such third party purchasers, suppliers or customers, and (4) failure of transportation or other facilities upstream of the Receipt Point(s) and/or failure of transportation or other facilities downstream of the Delivery Point(s).  It is understood and agreed that the settlement of strikes or lockouts shall be entirely within the discretion of the party having the difficulty and that the above requirement that any Force Majeure shall be remedied with all reasonable dispatch shall not require the settlement of strikes or lockouts by acceding to the demands of the opposing party when such course is inadvisable in the discretion of the party having the difficulty.
      16.3	Notwithstanding anything herein to the contrary, neither party shall be entitled to the benefits of Section 16.1 to the extent the event of Force Majeure is caused or affected by any or all of the following circumstances: (i) the party claiming excuse failed to remedy the condition and to resume the performance of its covenants or obligations with reasonable dispatch; or (ii) economic hardship, to include, without limitation, Shipper's ability to sell its Gas at a higher or more advantageous price to a market not requiring the transportation services contracted for herein; or (iii) the loss of Shipper's market or Shipper's inability to use or resell Gas transported hereunder (except as provided for under Section 16.2); or (iv) the loss or failure of Shipper's Gas supply (except as provided for under Section 16.2) or depletion of reserves; provided however such Force Majeure shall not relieve Shipper from any obligations for dedications or commitments of Gas to Transporter made under or pursuant to the Service Agreement or any applicable Confirmation.
      16.4	Either party may partially or entirely interrupt its performance hereunder for the purpose of making necessary or scheduled inspections, alterations and repairs which are described as a maintenance event, but only for such time as may be reasonable and unavoidable; and the party requiring such relief shall give to the other party five (5) Days notice of its intention to suspend its performance hereunder, except in cases of emergency where such notice is impracticable and shall endeavor to arrange such interruption so as to inconvenience the other party as little as possible.  Should a Force Majeure or maintenance event occur the volumes to be delivered and/or received at the Receipt Point(s) and Delivery Point(s) by Transporter must be balanced with the hourly and daily nominated quantities.
17.	LAWS AND REGULATIONS. 
     17.1	Transporter's transportation services are subject to all present and future valid laws and lawful orders of all State and Federal regulatory authorities now or hereafter having jurisdiction over the parties and the services or facilities used to provide such services, including, without limitation, the provisions of Subpart C of Part 284 of Title 18 of the Code of Federal Regulations ("Part 284 Regulations").  The Service Agreement and any applicable Confirmation are expressly made subject to any and all rate filings made by Transporter and approved by any federal or state regulatory body as such may be amended from time to time.  Transporter will have the right to propose to the FERC or other governing regulatory body such changes in its rates and terms of service at any time as it deems necessary, and Shipper's Service Agreement and any applicable Confirmation will be deemed to include any changes that are made effective pursuant to order or regulation or provisions of law, without prejudice to Shipper's right to protest the same.  In the event of a conflict between (i) this Statement of Operating Conditions and/or the Part 284 Regulations, (ii) the applicable Confirmation, and (iii) the Service Agreement, the terms of the documents shall govern in the order listed in this sentence from (i) to (iii).  
      17.2. 	Shipper warrants that at all times during the term of the Service Agreement or any applicable Confirmation, Shipper will commit no action or omission that will cause the transportation service provided to Shipper to fail to comply with all applicable rules and regulations of the applicable regulatory agencies, including, without limitation, the "on behalf of" provisions of the Part 284 Regulations.
      17.3	Law and Venue. THIS STATEMENT OF OPERATING CONDITIONS, THE SERVICE AGREEMENT, ANY CONFIRMATIONS AND THE RIGHTS OF TRANSPORTER AND SHIPPER HEREUNDER AND THEREUNDER MUST BE INTERPRETED AND ENFORCED IN ACCORDANCE WITH THE LAWS OF THE STATE OF TEXAS WITHOUT GIVING EFFECT TO ANY CHOICE OR CONFLICT OF LAW PROVISION OR RULE (WHETHER OF THE STATE OF TEXAS OR ANY OTHER JURISDICTION) THAT WOULD CAUSE THE APPLICATION OF THE LAWS OF ANY JURISDICTION OTHER THAN THE STATE OF TEXAS;  PROVIDED, HOWEVER, THAT NO LAW, THEORY OR PUBLIC POLICY SHALL BE GIVEN EFFECT WHICH WOULD UNDERMINE, DIMINISH OR REDUCE THE EFFECTIVENESS OF EACH PARTY'S WAIVER OF SPECIAL, INDIRECT, INCIDENTAL, PUNITIVE, EXEMPLARY, OR CONSEQUENTIAL DAMAGES SET FORTH IN SECTION 18.7, IT BEING THE EXPRESS INTENT, UNDERSTANDING, AND AGREEMENT OF THE PARTIES THAT SUCH WAIVERS ARE TO BE GIVEN THE FULLEST EFFECT, NOTWITHSTANDING ANY PRE-EXISTING CONDITION OR THE NEGLIGENCE (WHETHER SOLE, JOINT OR CONCURRENT), GROSS NEGLIGENCE, WILLFUL MISCONDUCT, STRICT LIABILITY, OR OTHER LEGAL FAULT OF ANY PARTY HERETO, OR OTHERWISE.  TRANSPORTER AND SHIPPER AGREE TO THE JURISDICTION OF THE FEDERAL AND STATE COURTS IN HARRIS COUNTY, TEXAS AND AGREE THAT ANY ACTION, SUIT, OR PROCEEDING CONCERNING, RELATED TO, OR ARISING OUT OF THIS STATEMENT OF OPERATING CONDITIONS OR THE SERVICE AGREEMENT OR CONFIRMATION WILL BE BROUGHT ONLY IN A FEDERAL OR STATE COURT IN HARRIS COUNTY, TEXAS AND NEITHER TRANSPORTER NOR SHIPPER MAY RAISE ANY DEFENSE OR OBJECTION OR FILE ANY MOTION BASED ON LACK OF PERSONAL JURISDICTION, IMPROPER VENUE, INCONVENIENCE OF THE FORUM, OR THE LIKE, IN ANY CASE FILED IN A FEDERAL OR STATE COURT IN HARRIS COUNTY, TEXAS.
18.	MISCELLANEOUS.
      18.1	Assignment and Transfer.  This Statement of Operating Conditions, the Service Agreement and its applicable Confirmation are binding upon and will inure to the benefit of the parties and their respective successors, assigns and legal representatives.  However, neither party may assign or transfer the Service Agreement and any applicable Confirmation, or any benefit or obligation arising thereunder, without first obtaining the other party's prior written consent, which consent will not be unreasonably withheld or delayed; provided, either party may transfer its interests, rights and obligations under the Service Agreement and any applicable Confirmation without the other party's consent to (i) any parent, affiliate, or any successor in interest to all or a portion of the assigning party's assets, provided the assignee is creditworthy, as determined in the non-assigning party's reasonable commercial opinion and in a not unduly discriminatory manner, or (ii) any individual, bank, trustee, company, or corporation as security for any note, notes, bonds, or other obligations or securities of such assignor.  Any purported transfer or assignment without required consent will be a breach of the Service Agreement and its applicable Confirmation.
      18.2	Waiver of Breaches, Defaults, or Rights.  No waiver by either party of any one or more breaches, defaults, or rights under any provisions of the Statement of Operating Conditions, the Service Agreement, or any applicable Confirmation will operate or be construed as a waiver of any other breaches, defaults, or rights, whether of a like or of a different character.  By providing written notice to the other party, either party may assert any right not previously asserted hereunder or thereunder or may assert its right to object to a default not previously protested.  Transporter reserves the right to vary its operations from this Statement of Operating Conditions from time to time on a non-discriminatory basis, provided such variance does not impair, diminish or reduce Transporter's performance and its obligations to Shipper under the Service Agreement and any applicable Confirmation, and the parties agree that if it does so it will not be deemed to have waived its right subsequently to enforce the provisions of the Statement of Operating Conditions.  Variances from the terms of the Statement of Operating Conditions, Service Agreement, or any applicable Confirmation shall not be considered to amend or alter the construction or interpretation of the Service Agreement or any applicable Confirmation.  Except as specifically provided herein, in the Service Agreement or in any applicable Confirmation, in the event of any dispute under this Statement of Operating Conditions, the Service Agreement, or any applicable Confirmation, the parties will, notwithstanding the pendency of such dispute, diligently proceed with the performance of the Service Agreement and applicable Confirmation without prejudice to the rights of either party.
      18.3	Remedy for Breach. 	Except as otherwise specifically provided herein, if either party fails to perform any of the material covenants or obligations imposed upon it in this Statement of Operating Conditions, the Service Agreement, or its applicable Confirmation (except where such failure is excused under the Force Majeure or other provisions hereof or thereof), then the other party may, at its option (without waiving any other remedy for breach hereof), by notice in writing specifying the default that has occurred, indicate such party's intention to terminate the Service Agreement and any applicable Confirmation by reason thereof.  The party in default will have thirty (30) Days from receipt of such notice to remedy such material default, and upon failure to do so, the non-defaulting party may elect to immediately terminate the Service Agreement and its applicable Confirmation.  Notwithstanding the foregoing, Shipper's failure to pay Transporter within a period of ten (10) Days following Shipper's receipt of written notice from Transporter advising of such failure to make payment in full within the time specified previously herein, will be a default that gives Transporter the right to immediately terminate the Service Agreement and any applicable Confirmation, unless such failure to pay such amounts is the result of a bona fide dispute between the parties regarding such amounts and Shipper timely pays all amounts not in dispute.  Termination will be an additional remedy and will not prejudice the right of the party not in default: (i) to collect any amounts due it for any damage or loss suffered by it, and (ii) will not waive any other remedy to which the party not in default may be entitled for breach of this Statement of Operating Conditions, the Service Agreement, or any applicable Confirmation. 
      18.4	Entirety.  This Statement of Operating Conditions, the Exhibits, each Service Agreement, and Confirmation constitute the entire agreement between the parties covering the subject matter hereof, and there are no agreements, modifications, conditions, or understandings, written or oral, express or implied, pertaining to the subject matter hereof that are not contained herein or therein.
      18.5	Headings. The captions or headings preceding the various parts of this Statement of Operating Conditions are inserted and included solely for convenience and will never be considered or given any effect in construing this Statement of Operating Conditions, or in connection with the intent, duties, obligations, or liabilities of Transporter and Shipper.
      18.6	Third Parties. Nothing contained in this Statement of Operating Conditions, the Service Agreement, or any applicable Confirmation, either express or implied, confers any rights, remedies, or claims upon any person or entity not a party to the Service Agreement, or any applicable Confirmation, other than the successors or permitted assigns of the parties.
      18.7	Limitation on Damages. NOTWITHSTANDING ANYTHING IN THIS STATEMENT OF OPERATING CONDITIONS, SERVICE AGREEMENT OR ANY CONFIRMATION TO THE CONTRARY, IN NO EVENT WILL TRANSPORTER OR SHIPPER BE LIABLE TO THE OTHER FOR SPECIAL, INDIRECT, INCIDENTAL, PUNITIVE, EXEMPLARY, OR CONSEQUENTIAL DAMAGES, INCLUDING BUT NOT LIMITED TO THE LOSS OF USE OR LOST PROFITS, RESULTING FROM OR ARISING OUT OF THIS STATEMENT OF OPERATING CONDITIONS, THE SERVICE AGREEMENT OR ANY CONFIRMATION, IRRESPECTIVE OF WHETHER CLAIMS OR ACTIONS FOR SUCH DAMAGES ARE BASED ON CONTRACT, TORT, WARRANTY, NEGLIGENCE, (WHETHER SOLE, JOINT OR CONCURRENT, OR ACTIVE OR PASSIVE), GROSS NEGLIGENCE, STRICT LIABILITY, OR OTHER LEGAL FAULT OF SUCH PARTY, UNDER ANY INDEMNITY PROVISION, OR OTHERWISE.
      18.8	Counterparts. The Service Agreement and any applicable Confirmations may be executed in any number of counterparts, each of which will be deemed to be an original and all of which will constitute one and the same agreement.
      18.9	Exhibits. The following exhibits are attached to this Statement of Operating Conditions and are incorporated by this reference:
Exhibit A	Form of Service Agreement - Interruptible Service 
Exhibit B	Form of Confirmation
Exhibit C	Statement of Rates



EXHIBIT "A" 
TO
STATEMENT OF OPERATING CONDITIONS

NGPA  311 INTERRUPTIBLE NATURAL GAS TRANSPORTATION SERVICE AGREEMENT

CONTRACT NO: ___________________
THIS NGPA  311 INTERRUPTIBLE NATURAL GAS TRANSPORTATION SERVICE AGREEMENT (the "Service Agreement") is entered into effective	_______________, 20__, ("Commencement Date") by and between ALTUS MIDSTREAM PIPELINE LP, a Delaware limited partnership, (hereinafter referred to as "Transporter"), and_______________, a ____________ (hereinafter referred to as "Shipper"), both hereinafter collectively referred to as the "Parties", and individually as a "Party".  In consideration of the mutual covenants herein contained, the Parties agree as follows:
1. Shipper has requested a Service Agreement from Transporter pursuant to the provisions of Transporter's Statement of Operating Conditions Applicable to NGPA Section 311 Transportation Service (the "Statement of Operating Conditions") on file with the Federal Energy Regulatory Commission ("FERC"). 
2. 	Transporter has approved Shipper's request for a Service Agreement and will provide interruptible transportation service for Shipper pursuant to the terms of this Service Agreement and its Confirmation(s).  The Shipper shall have the ability to transport under any Confirmation then in effect under this Service Agreement.
3. 	The transportation service provided under this Service Agreement and its Confirmation(s) are subject to Section 311(a)(2) of the Natural Gas Policy Act of 1978 (the "NGPA"), Subpart C of Part 284 of the FERC regulations, and the provisions of Transporter's Statement of Operating Conditions, which are incorporated herein by reference, as if fully set forth herein.
4.	Shipper represents and warrants that:
(i) it has all lawful rights and/or title to all Gas delivered by it hereunder for its account, that it has the right to deliver same hereunder, and that such Gas is free from liens and adverse claims of every kind; and 
(ii) the transportation of gas hereunder will be on behalf of either: (a) an "interstate pipeline" as defined in Section 2(15) of the NGPA, or a "local distribution company", as defined in Section 2(17) of the NGPA, served by an interstate pipeline; and
(iii) said interstate pipeline, or local distribution company, whichever the case may be, will at some point either: (a) have physical custody of and transport the gas transported by Transporter hereunder; or (b) hold title to the subject gas for a purpose related to its status and functions as an interstate pipeline or local distribution company served by an interstate pipeline; and
(iv) Shipper has arranged for the delivery and/or receipt by any necessary third party transporter(s) of the gas to be transported hereunder.
Shipper hereby indemnifies and holds harmless Transporter from all suits, actions, losses, expenses (including attorneys' fees), and regulatory proceedings arising out of or in connection with a breach of the representations and warranties made by Shipper above.
5. 	Service Level:
	As shown in the applicable Confirmation 

6.	Gas received by Transporter hereunder will be received at the following Receipt Point(s): As shown in the applicable Confirmation
7. 	Gas delivered by Transporter to Shipper will be delivered at the following Delivery Point(s): As shown in the applicable Confirmation
8. 	Shipper's Maximum Daily Contract Quantity:
As shown in the applicable Confirmation

9. 	Transportation Rate(s):
As shown in the applicable Confirmation

10. 	Retention Volume:
	As shown in the applicable Confirmation

11.	Term:
As shown in the applicable Confirmation

12. 	Addresses for Notices and Payments: 
TRANSPORTER:
SHIPPER:
For Notices/Correspondence:
Notices/Correspondence:
             Altus Midstream Pipeline LP

             Attn: Commercial Operations


             17802 IH-10 West

             Suite 300

             San Antonio, TX 78257

 Email: CommercialOperations@apachecorp.com



For Accounting Matters:	
For Accounting Matters:
Attn: Manager of Gas Accounting

2000 Post Oak Blvd, suite 100

Houston, Texas 77056-4400

Phone: 713-296-7147

Attn: Manager of Gas Accounting



 For Payments:
For Payments by Check:
                  c/o Apache Corporation	
	
PO Box 840133

Dallas, TX 75284-0133

Payments by Wire Transfer:	
Payments by Wire Transfer:	
c/o Apache Corporation

Bank: CITIBANK, N.A.

                 ABA No.: 021000089

                 Account: APACHE CORPORATION

                 Account No.: 3083-7389	



 For Scheduling/Nominations:	
For Scheduling/Nominations:
Altus Midstream Pipeline LP

Attn: Manager of Commercial Operations

17802 IH-10 West

Suite 300

San Antonio, TX 78257

Phone: 210-447-5629

Email: CommercialOperations@apachecorp.com



 For Gas Control:
For Gas Control:
                 Altus Midstream Pipeline LP

                 Attn: Gas Control

                 210-447-5600 (24/7)

                 800-548-8090 (24/7)


   Email:  fusioncenter.midstream@apachecorp.com




13.	Other Provisions:

ALTUS MIDSTREAM PIPELINE LP					INSERT SHIPPER NAME
By: Altus Midstream Subsidiary GP LLC, its general partner


By: ___________________________				By:__________________________
Name: Bob W. Bourne						Name: _______________________
Title: VP, Business Development - Midstream &amp; Marketing	Title: ________________________


EXHIBIT "B" TO
STATEMENT OF OPERATING CONDITIONS 
FORM OF CONFIRMATION

NGPA 311 CONFIRMATION

BASE AGREEMENT: NGPA Section 311 Natural Gas Transportation Service Agreement dated  				

CONTRACT NUMBER: 					

CONFIRMATION NUMBER: 				

SHIPPER: 	

TRANSPORTER: Altus Midstream Pipeline LP

SERVICE LEVEL:  Interruptible:  ______	Authorized Overrun Service: ___________

This Confirmation constitutes part of and is subject to the Service Agreement and the Statement of Operating Conditions (collectively, the "Agreement").  All capitalized terms not defined herein shall have the meaning ascribed to such terms in the Statement of Operating Conditions and Service Agreement.

RECEIPT POINT(S): 
DELIVERY POINT(S):

MAXIMUM DAILY CONTRACT QUANTITY:

TRANSPORTATION RATE(S):
RETENTION VOLUME: Transporter will retain from the volumes of Gas delivered by Shipper hereunder at each Receipt Point(s) at no cost to Transporter, Shipper's pro rata share of actual fuel, lost, and unaccounted for Gas, associated with the operation, maintenance and repair of the Altus Midstream Pipeline System (all of the foregoing, collectively, the "Retention Volume").  In no event shall the Retention Volume for any Shipper be more than 2.5 percent (2.5%) of the volumes of Gas delivered by such Shipper for each Month.
TERM:
 
OTHER PROVISIONS:




ALTUS MIDSTREAM PIPELINE LP				INSERT SHIPPER NAME
By: Altus Midstream Subsidiary GP LLC, its general partner

By: ___________________________				By:__________________________
Name: Bob W. Bourne						Name: _______________________
Title: VP, Business Development - Midstream &amp; Marketing	Title: ________________________


EXHIBIT "C" TO
STATEMENT OF OPERATING CONDITIONS 
STATEMENT OF RATES

      Transporter's maximum and minimum rates for transportation service pursuant to Section 311(a)(2) of the NGPA pursuant to 284.123(b)(1)(ii), as filed at the Texas Railroad Commission and as accepted by the FERC, are as follows:

      Interruptible Transportation Service: 

Maximum
Minimum
COMMODITY FEE:
Shipper shall pay Transporter a Commodity Fee equal to the following rates per MMBtu for all Gas up to the MDCQ delivered at the Delivery Point(s):

$0.0975 per MMBtu
$0.00 per MMBtu
Retention Volume: Transporter will retain from the volumes of Gas delivered by Shipper hereunder at each Receipt Point(s) at no cost to Transporter, Shipper's pro rata share of actual fuel, lost, and unaccounted for Gas, associated with the operation, maintenance and repair of the Altus Midstream Pipeline System (all of the foregoing, collectively, the "Retention Volume").  In no event shall the Retention Volume for any Shipper be more than 2.5 percent (2.5%) of the volumes of Gas delivered by such Shipper for each Month.
      
      Authorized Overrun Service:

Maximum
Minimum
COMMODITY FEE:
Shipper shall pay Transporter a Commodity Fee equal to the following rates per MMBtu for all Gas over the MDCQ delivered at the Delivery Point(s):

$0.0975 per MMBtu
$0.00 per MMBtu
Retention Volume: Transporter will retain from the volumes of Gas delivered by Shipper hereunder at each Receipt Point(s) at no cost to Transporter, Shipper's pro rata share of actual fuel, lost, and unaccounted for Gas, associated with the operation, maintenance and repair of the Altus Midstream Pipeline System (all of the foregoing, collectively, the "Retention Volume").  In no event shall the Retention Volume for any Shipper be more than 2.5 percent (2.5%) of the volumes of Gas delivered by such Shipper for each Month.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>1099</filing_id>
      <filing_title>Amendment to Notice of Name Change and Revised Statement of Operating Conditions</filing_title>
      <filing_type>1270</filing_type>
      <associated_filing_id>1096</associated_filing_id>
      <associated_record_id>1</associated_record_id>
      <associated_option_code>A</associated_option_code>
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2019-02-14</current_effective_date>
      <ferc_order_date>2019-04-25</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
  </ferc_filing_data>
</Document>