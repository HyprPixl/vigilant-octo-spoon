<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Document xmlns="http://ferc.gov/etariffExport.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ferc_filing_data>
    <schema_version>2</schema_version>
    <company_id>C008956</company_id>
    <lead_applicant_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
    <tariff_id>249</tariff_id>
    <tariff_title>Market-Based Rate Tariff</tariff_title>
    <tariff_export_date>2025-09-16T20:29Z</tariff_export_date>
    <export_schema_version>2</export_schema_version>
    <record_data>
      <record_id>2363</record_id>
      <option_code>A</option_code>
      <record_title>Volume No. 1</record_title>
      <record_content_desc>Market-Based Rate Tariff</record_content_desc>
      <record_version_num>0.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>1073741824</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2018-08-27</proposed_effective_date>
      <priority_order>500</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data>e1xydGYxXGFuc2lcYW5zaWNwZzEyNTJcdWMwXHN0c2hmZGJjaDEyXHN0c2hmbG9jaDEyXHN0c2hmaGljaDEyXHN0c2hmYmkxM1xkZWZmMTJcYWRlZmYwe1xmb250dGJse1xmMFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjAyMDYwMzA1MDQwNTAyMDMwNH1UaW1lcyBOZXcgUm9tYW47fXtcZjFcZm1vZGVyblxmY2hhcnNldDBcZnBycTF7XCpccGFub3NlIDAyMDcwMzA5MDIwMjA1MDIwNDA0fUNvdXJpZXIgTmV3O317XGYyXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDA1MDUwMTAyMDEwNzA2MDIwNTA3fVN5bWJvbDt9e1xmM1xmbmlsXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDUwMDAwMDAwMDAwMDAwMDAwMDB9V2luZ2RpbmdzO317XGY0XGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAwMDAwMDAwMDAwMDAwMDAwMDAwfUNhbWJyaWEgTWF0aDt9e1xmNVxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBmMDUwMjAyMDIwNDAzMDIwNH1DYWxpYnJpO317XGY2XGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDIwNjAzMDUwNDA1MDIwMzA0fVRpbWVzIE5ldyBSb21hbjt9e1xmN1xmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjAyMDYwMzA1MDQwNTAyMDMwNH1UaW1lcyBOZXcgUm9tYW47fXtcZjhcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwNDA1MDMwNTA0MDYwMzAyMDR9Q2FtYnJpYTt9e1xmOVxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjAyMDYwMzA1MDQwNTAyMDMwNH1UaW1lcyBOZXcgUm9tYW47fXtcZjEwXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDIwNjAzMDUwNDA1MDIwMzA0fVRpbWVzIE5ldyBSb21hbjt9e1xmMTFcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwMjA2MDMwNTA0MDUwMjAzMDR9VGltZXMgTmV3IFJvbWFuO317XGYxMlxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBmMDUwMjAyMDIwNDAzMDIwNH1DYWxpYnJpO317XGYxM1xmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjAyMDYwMzA1MDQwNTAyMDMwNH1UaW1lcyBOZXcgUm9tYW47fXtcZjE0XGZyb21hblxmY2hhcnNldDBcZnBycTIgVGltZXMgTmV3IFJvbWFuIENFO317XGYxNVxmcm9tYW5cZmNoYXJzZXQwXGZwcnEyIFRpbWVzIE5ldyBSb21hbiBDeXI7fXtcZjE2XGZyb21hblxmY2hhcnNldDBcZnBycTIgVGltZXMgTmV3IFJvbWFuIEdyZWVrO317XGYxN1xmcm9tYW5cZmNoYXJzZXQwXGZwcnEyIFRpbWVzIE5ldyBSb21hbiBUdXI7fXtcZjE4XGZyb21hblxmY2hhcnNldDBcZnBycTIgVGltZXMgTmV3IFJvbWFuIChIZWJyZXcpO317XGYxOVxmcm9tYW5cZmNoYXJzZXQwXGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoQXJhYmljKTt9e1xmMjBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQmFsdGljO317XGYyMVxmcm9tYW5cZmNoYXJzZXQwXGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoVmlldG5hbWVzZSk7fXtcZjIyXGZtb2Rlcm5cZmNoYXJzZXQwXGZwcnExIENvdXJpZXIgTmV3IENFO317XGYyM1xmbW9kZXJuXGZjaGFyc2V0MFxmcHJxMSBDb3VyaWVyIE5ldyBDeXI7fXtcZjI0XGZtb2Rlcm5cZmNoYXJzZXQwXGZwcnExIENvdXJpZXIgTmV3IEdyZWVrO317XGYyNVxmbW9kZXJuXGZjaGFyc2V0MFxmcHJxMSBDb3VyaWVyIE5ldyBUdXI7fXtcZjI2XGZtb2Rlcm5cZmNoYXJzZXQwXGZwcnExIENvdXJpZXIgTmV3IChIZWJyZXcpO317XGYyN1xmbW9kZXJuXGZjaGFyc2V0MFxmcHJxMSBDb3VyaWVyIE5ldyAoQXJhYmljKTt9e1xmMjhcZm1vZGVyblxmY2hhcnNldDBcZnBycTEgQ291cmllciBOZXcgQmFsdGljO317XGYyOVxmbW9kZXJuXGZjaGFyc2V0MFxmcHJxMSBDb3VyaWVyIE5ldyAoVmlldG5hbWVzZSk7fXtcZjMwXGZyb21hblxmY2hhcnNldDBcZnBycTIgQ2FtYnJpYSBNYXRoIENFO317XGYzMVxmcm9tYW5cZmNoYXJzZXQwXGZwcnEyIENhbWJyaWEgTWF0aCBDeXI7fXtcZjMyXGZyb21hblxmY2hhcnNldDBcZnBycTIgQ2FtYnJpYSBNYXRoIEdyZWVrO317XGYzM1xmcm9tYW5cZmNoYXJzZXQwXGZwcnEyIENhbWJyaWEgTWF0aCBUdXI7fXtcZjM0XGZyb21hblxmY2hhcnNldDBcZnBycTIgQ2FtYnJpYSBNYXRoIEJhbHRpYzt9e1xmMzVcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMiBDYW1icmlhIE1hdGggKFZpZXRuYW1lc2UpO317XGYzNlxmc3dpc3NcZmNoYXJzZXQwXGZwcnEyIENhbGlicmkgQ0U7fXtcZjM3XGZzd2lzc1xmY2hhcnNldDBcZnBycTIgQ2FsaWJyaSBDeXI7fXtcZjM4XGZzd2lzc1xmY2hhcnNldDBcZnBycTIgQ2FsaWJyaSBHcmVlazt9e1xmMzlcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMiBDYWxpYnJpIFR1cjt9e1xmNDBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMiBDYWxpYnJpIEJhbHRpYzt9e1xmNDFcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMiBDYWxpYnJpIChWaWV0bmFtZXNlKTt9e1xmNDJcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQ0U7fXtcZjQzXGZyb21hblxmY2hhcnNldDBcZnBycTIgVGltZXMgTmV3IFJvbWFuIEN5cjt9e1xmNDRcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gR3JlZWs7fXtcZjQ1XGZyb21hblxmY2hhcnNldDBcZnBycTIgVGltZXMgTmV3IFJvbWFuIFR1cjt9e1xmNDZcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKEhlYnJldyk7fXtcZjQ3XGZyb21hblxmY2hhcnNldDBcZnBycTIgVGltZXMgTmV3IFJvbWFuIChBcmFiaWMpO317XGY0OFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEyIFRpbWVzIE5ldyBSb21hbiBCYWx0aWM7fXtcZjQ5XGZyb21hblxmY2hhcnNldDBcZnBycTIgVGltZXMgTmV3IFJvbWFuIChWaWV0bmFtZXNlKTt9e1xmNTBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQ0U7fXtcZjUxXGZyb21hblxmY2hhcnNldDBcZnBycTIgVGltZXMgTmV3IFJvbWFuIEN5cjt9e1xmNTJcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gR3JlZWs7fXtcZjUzXGZyb21hblxmY2hhcnNldDBcZnBycTIgVGltZXMgTmV3IFJvbWFuIFR1cjt9e1xmNTRcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKEhlYnJldyk7fXtcZjU1XGZyb21hblxmY2hhcnNldDBcZnBycTIgVGltZXMgTmV3IFJvbWFuIChBcmFiaWMpO317XGY1Nlxmcm9tYW5cZmNoYXJzZXQwXGZwcnEyIFRpbWVzIE5ldyBSb21hbiBCYWx0aWM7fXtcZjU3XGZyb21hblxmY2hhcnNldDBcZnBycTIgVGltZXMgTmV3IFJvbWFuIChWaWV0bmFtZXNlKTt9e1xmNThcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMiBDYW1icmlhIENFO317XGY1OVxmcm9tYW5cZmNoYXJzZXQwXGZwcnEyIENhbWJyaWEgQ3lyO317XGY2MFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEyIENhbWJyaWEgR3JlZWs7fXtcZjYxXGZyb21hblxmY2hhcnNldDBcZnBycTIgQ2FtYnJpYSBUdXI7fXtcZjYyXGZyb21hblxmY2hhcnNldDBcZnBycTIgQ2FtYnJpYSBCYWx0aWM7fXtcZjYzXGZyb21hblxmY2hhcnNldDBcZnBycTIgQ2FtYnJpYSAoVmlldG5hbWVzZSk7fXtcZjY0XGZyb21hblxmY2hhcnNldDBcZnBycTIgVGltZXMgTmV3IFJvbWFuIENFO317XGY2NVxmcm9tYW5cZmNoYXJzZXQwXGZwcnEyIFRpbWVzIE5ldyBSb21hbiBDeXI7fXtcZjY2XGZyb21hblxmY2hhcnNldDBcZnBycTIgVGltZXMgTmV3IFJvbWFuIEdyZWVrO317XGY2N1xmcm9tYW5cZmNoYXJzZXQwXGZwcnEyIFRpbWVzIE5ldyBSb21hbiBUdXI7fXtcZjY4XGZyb21hblxmY2hhcnNldDBcZnBycTIgVGltZXMgTmV3IFJvbWFuIChIZWJyZXcpO317XGY2OVxmcm9tYW5cZmNoYXJzZXQwXGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoQXJhYmljKTt9e1xmNzBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQmFsdGljO317XGY3MVxmcm9tYW5cZmNoYXJzZXQwXGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoVmlldG5hbWVzZSk7fXtcZjcyXGZyb21hblxmY2hhcnNldDBcZnBycTIgVGltZXMgTmV3IFJvbWFuIENFO317XGY3M1xmcm9tYW5cZmNoYXJzZXQwXGZwcnEyIFRpbWVzIE5ldyBSb21hbiBDeXI7fXtcZjc0XGZyb21hblxmY2hhcnNldDBcZnBycTIgVGltZXMgTmV3IFJvbWFuIEdyZWVrO317XGY3NVxmcm9tYW5cZmNoYXJzZXQwXGZwcnEyIFRpbWVzIE5ldyBSb21hbiBUdXI7fXtcZjc2XGZyb21hblxmY2hhcnNldDBcZnBycTIgVGltZXMgTmV3IFJvbWFuIChIZWJyZXcpO317XGY3N1xmcm9tYW5cZmNoYXJzZXQwXGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoQXJhYmljKTt9e1xmNzhcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQmFsdGljO317XGY3OVxmcm9tYW5cZmNoYXJzZXQwXGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoVmlldG5hbWVzZSk7fXtcZjgwXGZyb21hblxmY2hhcnNldDBcZnBycTIgVGltZXMgTmV3IFJvbWFuIENFO317XGY4MVxmcm9tYW5cZmNoYXJzZXQwXGZwcnEyIFRpbWVzIE5ldyBSb21hbiBDeXI7fXtcZjgyXGZyb21hblxmY2hhcnNldDBcZnBycTIgVGltZXMgTmV3IFJvbWFuIEdyZWVrO317XGY4M1xmcm9tYW5cZmNoYXJzZXQwXGZwcnEyIFRpbWVzIE5ldyBSb21hbiBUdXI7fXtcZjg0XGZyb21hblxmY2hhcnNldDBcZnBycTIgVGltZXMgTmV3IFJvbWFuIChIZWJyZXcpO317XGY4NVxmcm9tYW5cZmNoYXJzZXQwXGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoQXJhYmljKTt9e1xmODZcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQmFsdGljO317XGY4N1xmcm9tYW5cZmNoYXJzZXQwXGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoVmlldG5hbWVzZSk7fXtcZjg4XGZzd2lzc1xmY2hhcnNldDBcZnBycTIgQ2FsaWJyaSBDRTt9e1xmODlcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMiBDYWxpYnJpIEN5cjt9e1xmOTBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMiBDYWxpYnJpIEdyZWVrO317XGY5MVxmc3dpc3NcZmNoYXJzZXQwXGZwcnEyIENhbGlicmkgVHVyO317XGY5Mlxmc3dpc3NcZmNoYXJzZXQwXGZwcnEyIENhbGlicmkgQmFsdGljO317XGY5M1xmc3dpc3NcZmNoYXJzZXQwXGZwcnEyIENhbGlicmkgKFZpZXRuYW1lc2UpO317XGY5NFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEyIFRpbWVzIE5ldyBSb21hbiBDRTt9e1xmOTVcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQ3lyO317XGY5Nlxmcm9tYW5cZmNoYXJzZXQwXGZwcnEyIFRpbWVzIE5ldyBSb21hbiBHcmVlazt9e1xmOTdcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gVHVyO317XGY5OFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoSGVicmV3KTt9e1xmOTlcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKEFyYWJpYyk7fXtcZjEwMFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEyIFRpbWVzIE5ldyBSb21hbiBCYWx0aWM7fXtcZjEwMVxmcm9tYW5cZmNoYXJzZXQwXGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoVmlldG5hbWVzZSk7fX17XGNvbG9ydGJsO317XHN0eWxlc2hlZXR7XHMwXHNuZXh0MFxzcWZvcm1hdFxzcHJpb3JpdHkwXHNhMjAwXGFzcGFscGhhXGFzcG51bVxsdHJwYXJcbGkwXGxpbjBccmkwXHJpbjBccWxcZmFhdXRvXHNsMjc2XHNsbXVsdDFccnRsY2hcYWYxMlxhbGFuZzEwMjVcYWZzMjJcbHRyY2hcZnMyMlxmMTJcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzMyBOb3JtYWw7fXtcKlxjczEwXGFkZGl0aXZlXHNzZW1paGlkZGVuXHNwcmlvcml0eTFcc3VuaGlkZXVzZWQgRGVmYXVsdCBQYXJhZ3JhcGggRm9udDt9fXtcKlxsaXN0dGFibGV7XGxpc3RcbGlzdHRlbXBsYXRlaWQxNzgyNjA4MTc2XGxpc3RoeWJyaWR7XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMCBcJzAxXHUtMzkxMyA7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxmb2xsb3cwXHJ0bGNoXGFmMTJcbHRyY2hcZjJcamNsaXN0dGFiXHR4MTQ0MFxmaS0zNjBcbGkxNDQwXGxpbjE0NDB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDEgXCcwMW87fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxmb2xsb3cwXHJ0bGNoXGFmMTJcbHRyY2hcZjFcamNsaXN0dGFiXHR4MjE2MFxmaS0zNjBcbGkyMTYwXGxpbjIxNjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDIgXCcwMVx1LTM5MjkgO317XGxldmVsbnVtYmVyczt9XGxldmVsZm9sbG93MFxydGxjaFxhZjEyXGx0cmNoXGYzXGpjbGlzdHRhYlx0eDI4ODBcZmktMzYwXGxpMjg4MFxsaW4yODgwfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQzIFwnMDFcdS0zOTEzIDt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGZvbGxvdzBccnRsY2hcYWYxMlxsdHJjaFxmMlxqY2xpc3R0YWJcdHgzNjAwXGZpLTM2MFxsaTM2MDBcbGluMzYwMH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNCBcJzAxbzt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGZvbGxvdzBccnRsY2hcYWYxMlxsdHJjaFxmMVxqY2xpc3R0YWJcdHg0MzIwXGZpLTM2MFxsaTQzMjBcbGluNDMyMH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNSBcJzAxXHUtMzkyOSA7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxmb2xsb3cwXHJ0bGNoXGFmMTJcbHRyY2hcZjNcamNsaXN0dGFiXHR4NTA0MFxmaS0zNjBcbGk1MDQwXGxpbjUwNDB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDYgXCcwMVx1LTM5MTMgO317XGxldmVsbnVtYmVyczt9XGxldmVsZm9sbG93MFxydGxjaFxhZjEyXGx0cmNoXGYyXGpjbGlzdHRhYlx0eDU3NjBcZmktMzYwXGxpNTc2MFxsaW41NzYwfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ3IFwnMDFvO317XGxldmVsbnVtYmVyczt9XGxldmVsZm9sbG93MFxydGxjaFxhZjEyXGx0cmNoXGYxXGpjbGlzdHRhYlx0eDY0ODBcZmktMzYwXGxpNjQ4MFxsaW42NDgwfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ4IFwnMDFcdS0zOTI5IDt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGZvbGxvdzBccnRsY2hcYWYxMlxsdHJjaFxmM1xqY2xpc3R0YWJcdHg3MjAwXGZpLTM2MFxsaTcyMDBcbGluNzIwMH1cbGlzdGlkMzE1MTg4Mzg1fXtcbGlzdFxsaXN0dGVtcGxhdGVpZC04MDQyMjgwMDBcbGlzdGh5YnJpZHtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbHN0YXJ0YXQxMHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDAgXCcwMlwnMDAuO317XGxldmVsbnVtYmVycyBcJzAxO31cbGV2ZWxmb2xsb3cwXHJ0bGNoXGFmMTJcbHRyY2hcZjEzXGpjbGlzdHRhYlx0eDcyMFxmaS0zNjBcbGk3MjBcbGluNzIwfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMSBcJzAyXCcwMS47fXtcbGV2ZWxudW1iZXJzIFwnMDE7fVxsZXZlbGZvbGxvdzBccnRsY2hcYWYxMlxsdHJjaFxmMTNcamNsaXN0dGFiXHR4MTQ0MFxmaS0zNjBcbGkxNDQwXGxpbjE0NDB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQyIFwnMDJcJzAyLjt9e1xsZXZlbG51bWJlcnMgXCcwMTt9XGxldmVsZm9sbG93MFxydGxjaFxhZjEyXGx0cmNoXGYxM1xqY2xpc3R0YWJcdHgyMTYwXGZpLTE4MFxsaTIxNjBcbGluMjE2MH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDMgXCcwMlwnMDMuO317XGxldmVsbnVtYmVycyBcJzAxO31cbGV2ZWxmb2xsb3cwXHJ0bGNoXGFmMTJcbHRyY2hcZjEzXGpjbGlzdHRhYlx0eDI4ODBcZmktMzYwXGxpMjg4MFxsaW4yODgwfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNCBcJzAyXCcwNC47fXtcbGV2ZWxudW1iZXJzIFwnMDE7fVxsZXZlbGZvbGxvdzBccnRsY2hcYWYxMlxsdHJjaFxmMTNcamNsaXN0dGFiXHR4MzYwMFxmaS0zNjBcbGkzNjAwXGxpbjM2MDB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ1IFwnMDJcJzA1Ljt9e1xsZXZlbG51bWJlcnMgXCcwMTt9XGxldmVsZm9sbG93MFxydGxjaFxhZjEyXGx0cmNoXGYxM1xqY2xpc3R0YWJcdHg0MzIwXGZpLTE4MFxsaTQzMjBcbGluNDMyMH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDYgXCcwMlwnMDYuO317XGxldmVsbnVtYmVycyBcJzAxO31cbGV2ZWxmb2xsb3cwXHJ0bGNoXGFmMTJcbHRyY2hcZjEzXGpjbGlzdHRhYlx0eDUwNDBcZmktMzYwXGxpNTA0MFxsaW41MDQwfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNyBcJzAyXCcwNy47fXtcbGV2ZWxudW1iZXJzIFwnMDE7fVxsZXZlbGZvbGxvdzBccnRsY2hcYWYxMlxsdHJjaFxmMTNcamNsaXN0dGFiXHR4NTc2MFxmaS0zNjBcbGk1NzYwXGxpbjU3NjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ4IFwnMDJcJzA4Ljt9e1xsZXZlbG51bWJlcnMgXCcwMTt9XGxldmVsZm9sbG93MFxydGxjaFxhZjEyXGx0cmNoXGYxM1xqY2xpc3R0YWJcdHg2NDgwXGZpLTE4MFxsaTY0ODBcbGluNjQ4MH1cbGlzdGlkMzQ5NTk5NjMyfXtcbGlzdFxsaXN0dGVtcGxhdGVpZDE5MzM2Mjk3MzJcbGlzdGh5YnJpZHtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMCBcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzIFwnMDE7fVxsZXZlbGZvbGxvdzBccnRsY2hcYWYxMlxsdHJjaFxmMTNcamNsaXN0dGFiXHR4NzIwXGZpLTM2MFxsaTcyMFxsaW43MjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQxIFwnMDJcJzAxKTt9e1xsZXZlbG51bWJlcnMgXCcwMTt9XGxldmVsZm9sbG93MFxydGxjaFxhZjEyXGx0cmNoXGYxM1xqY2xpc3R0YWJcdHgxNDQwXGZpLTM2MFxsaTE0NDBcbGluMTQ0MH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDIgXCcwMlwnMDIuO317XGxldmVsbnVtYmVycyBcJzAxO31cbGV2ZWxmb2xsb3cwXHJ0bGNoXGFmMTJcbHRyY2hcZjEzXGpjbGlzdHRhYlx0eDIxNjBcZmktMTgwXGxpMjE2MFxsaW4yMTYwfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMyBcJzAyXCcwMy47fXtcbGV2ZWxudW1iZXJzIFwnMDE7fVxsZXZlbGZvbGxvdzBccnRsY2hcYWYxMlxsdHJjaFxmMTNcamNsaXN0dGFiXHR4Mjg4MFxmaS0zNjBcbGkyODgwXGxpbjI4ODB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ0IFwnMDJcJzA0Ljt9e1xsZXZlbG51bWJlcnMgXCcwMTt9XGxldmVsZm9sbG93MFxydGxjaFxhZjEyXGx0cmNoXGYxM1xqY2xpc3R0YWJcdHgzNjAwXGZpLTM2MFxsaTM2MDBcbGluMzYwMH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDUgXCcwMlwnMDUuO317XGxldmVsbnVtYmVycyBcJzAxO31cbGV2ZWxmb2xsb3cwXHJ0bGNoXGFmMTJcbHRyY2hcZjEzXGpjbGlzdHRhYlx0eDQzMjBcZmktMTgwXGxpNDMyMFxsaW40MzIwfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNiBcJzAyXCcwNi47fXtcbGV2ZWxudW1iZXJzIFwnMDE7fVxsZXZlbGZvbGxvdzBccnRsY2hcYWYxMlxsdHJjaFxmMTNcamNsaXN0dGFiXHR4NTA0MFxmaS0zNjBcbGk1MDQwXGxpbjUwNDB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ3IFwnMDJcJzA3Ljt9e1xsZXZlbG51bWJlcnMgXCcwMTt9XGxldmVsZm9sbG93MFxydGxjaFxhZjEyXGx0cmNoXGYxM1xqY2xpc3R0YWJcdHg1NzYwXGZpLTM2MFxsaTU3NjBcbGluNTc2MH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDggXCcwMlwnMDguO317XGxldmVsbnVtYmVycyBcJzAxO31cbGV2ZWxmb2xsb3cwXHJ0bGNoXGFmMTJcbHRyY2hcZjEzXGpjbGlzdHRhYlx0eDY0ODBcZmktMTgwXGxpNjQ4MFxsaW42NDgwfVxsaXN0aWQxMDgyMDcwMjAyfX17XCpcbGlzdG92ZXJyaWRldGFibGV7XGxpc3RvdmVycmlkZVxsaXN0aWQxMDgyMDcwMjAyXGxpc3RvdmVycmlkZWNvdW50MFxsczF9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkMzQ5NTk5NjMyXGxpc3RvdmVycmlkZWNvdW50MFxsczJ9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkMzE1MTg4Mzg1XGxpc3RvdmVycmlkZWNvdW50MFxsczN9fXtcKlxyc2lkdGJsXHJzaWQxMzExNDE4MVxyc2lkMTUyODE3NDF9e1wqXGdlbmVyYXRvciBBc3Bvc2UuV29yZHMgZm9yIC5ORVQgOS4xLjAuMDt9e1xpbmZve1xhdXRob3IgTWVuZWZlZSwgS2ltYmVybGl9e1xjb21wYW55IE5leHRFcmEgRW5lcmd5fXtcb3BlcmF0b3IgTWVuZWZlZSwgS2ltYmVybGl9XHZlcnNpb24yXGVkbWluczBcbm9mcGFnZXMzXG5vZndvcmRzOTk0XG5vZmNoYXJzNTY2OFxub2ZjaGFyc3dzNjY0OXtcY3JlYXRpbVx5cjIwMThcbW82XGR5MjdcaHIxNlxtaW4yXHNlYzB9e1xyZXZ0aW1ceXIyMDE4XG1vNlxkeTI3XGhyMTZcbWluMlxzZWMwfX1cZGVmbGFuZzEwMzNcZGVmbGFuZ2ZlMjA1MlxhZGVmbGFuZzEwMjVcamV4cGFuZFxzaG93eG1sZXJyb3JzMVx2aWV3a2luZDFcdmlld3NjYWxlMTAwXGZldDBcZnRuYmpcYWVuZGRvY1x3aWRvd2N0cmxcbm9zcGFjZWZvcnVsXG5vbG5odGFkanRibFxhbG50YmxpbmRcbHl0dGJscnRnclxub2dyb3dhdXRvZml0XGRudGJsbnNiZGJcbm94bGF0dG95ZW5cd3JwcHVuY3Rcbm9icmt3cnB0YmxcZXhwc2hydG5cc25hcHRvZ3JpZGluY2VsbFxhc2lhbmJya3J1bGVcaHRtYXV0c3Bcbm91bHRybHNwY1x1c2VsdGJhbG5cc3BseXR3bmluZVxmdG5seXR3bmluZVxseXRjYWxjdGJsd2RcYWxsb3dmaWVsZGVuZHNlbFxuZXd0YmxzdHlydWxzXGxuYnJrcnVsZVxmb3Jtc2hhZGVcZGdoc3BhY2UxODBcZGd2c3BhY2UxODBcZGdob3JpZ2luMTQ0MFxkZ3ZvcmlnaW4xNDQwXGRnaHNob3cxXGRndnNob3cxXGRnbWFyZ2luXHBnYnJkcmhlYWRccGdicmRyZm9vdFxzZWN0ZFxlbmRuaGVyZVxzZWN0bGluZWdyaWQzNjBccGd3c3huMTIyNDBccGdoc3huMTU4NDBcbWFyZ2xzeG4xNDQwXG1hcmdyc3huMTQ0MFxtYXJndHN4bjE0NDBcbWFyZ2JzeG4xNDQwXGxpbmV4MFxzZnRuYmpcbHRyc2VjdFxzZWN0ZGVmYXVsdGNsXHBhcmRccGxhaW5caXRhcDBcczBcc2EwXGFzcGFscGhhXGFzcG51bVxwYXJhcnNpZDEzMTE0MTgxXGx0cnBhclxsaTBcbGluMFxyaTBccmluMFxxY1xmYWF1dG9cc2wyNDBcc2xtdWx0MVxydGxjaFxhZjEyXGFsYW5nMTAyNVxhZnMyMlxsdHJjaFxmczIyXGYxMlxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMze1xydGxjaFxhZjEyXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxiXGZzMjRcZjEzXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcY2hhcnJzaWQxMzExNDE4MVxpbnNyc2lkMTMxMTQxODFcY3MxMCBDb29saWRnZSBTb2xhciBJLCBMTEN9e1xydGxjaFxhZjEyXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxiXGZzMjRcZjEzXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcY2hhcnJzaWQxMzExNDE4MVxpbnNyc2lkMTMxMTQxODFcY3MxMFxwYXJ9XHBhcmRccGxhaW5caXRhcDBcczBcc2EwXGFzcGFscGhhXGFzcG51bVxwYXJhcnNpZDEzMTE0MTgxXGx0cnBhclxsaTBcbGluMFxyaTBccmluMFxxbFxmYWF1dG9cc2wyNDBcc2xtdWx0MVxydGxjaFxhZjEyXGFsYW5nMTAyNVxhZnMyMlxsdHJjaFxmczIyXGYxMlxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMze1xydGxjaFxhZjEyXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYxM1xsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGNoYXJyc2lkMTMxMTQxODFcaW5zcnNpZDEzMTE0MTgxXGNzMTBccGFyfVxwYXJkXHBsYWluXGl0YXAwXHMwXGxzMVx0eDcyMFxmaS0zNjBcc2EyNDBcYXNwYWxwaGEwXGFzcG51bTBccGFyYXJzaWQxMzExNDE4MVxsdHJwYXJcbGk3MjBcbGluNzIwXHJpMFxyaW4wXHFsXGZhYXV0b1xzbDI0MFxzbG11bHQxXHJ0bGNoXGFmMTJcYWxhbmcxMDI1XGFmczIyXGx0cmNoXGZzMjJcZjEyXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzN7XGxpc3R0ZXh0XHBhcmRccGxhaW5cdHg3MjBcZmktMzYwXGx0cnBhclxsaTcyMFxsaW43MjBccmkwXHJpbjBccWxcZmFhdXRvXHJ0bGNoXGFmMTJcbHRyY2hcZjEzIDEuXHRhYiB9e1xydGxjaFxhZjEyXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYxM1xsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGNoYXJyc2lkMTMxMTQxODFcaW5zcnNpZDEzMTE0MTgxXGNzMTBcdWwgQXZhaWxhYmlsaXR5Ln17XHJ0bGNoXGFmMTJcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjEzXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcY2hhcnJzaWQxMzExNDE4MVxpbnNyc2lkMTMxMTQxODFcY3MxMCAgIENvb2xpZGdlIFNvbGFyIEksIExMQyAoXHU4MjIwIFNlbGxlclx1ODIyMSApIG1ha2VzIGF2YWlsYWJsZSB1bmRlciB0aGlzIFRhcmlmZiwgVm9sdW1lIE5vLiAxICh0aGUgXHU4MjIwIFRhcmlmZlx1ODIyMSApOiB9e1xydGxjaFxhZjEyXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYxM1xsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGNoYXJyc2lkMTMxMTQxODFcaW5zcnNpZDEzMTE0MTgxXGNzMTBccGFyfVxwYXJkXHBsYWluXGl0YXAwXHMwXGlsdmwxXGxzMVx0eDE0NDBcZmktMzYwXHNhMjQwXGFzcGFscGhhMFxhc3BudW0wXHBhcmFyc2lkMTMxMTQxODFcbHRycGFyXGxpMTQ0MFxsaW4xNDQwXHJpMFxyaW4wXHFsXGZhYXV0b1xzbDI0MFxzbG11bHQxXHJ0bGNoXGFmMTJcYWxhbmcxMDI1XGFmczIyXGx0cmNoXGZzMjJcZjEyXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzN7XGxpc3R0ZXh0XHBhcmRccGxhaW5cdHgxNDQwXGZpLTM2MFxsdHJwYXJcbGkxNDQwXGxpbjE0NDBccmkwXHJpbjBccWxcZmFhdXRvXHJ0bGNoXGFmMTJcbHRyY2hcZjEzIGEpXHRhYiB9e1xydGxjaFxhZjEyXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYxM1xsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGNoYXJyc2lkMTMxMTQxODFcaW5zcnNpZDEzMTE0MTgxXGNzMTAgRWxlY3RyaWMgZW5lcmd5IGFuZCBjYXBhY2l0eSBhdmFpbGFibGUgdW5kZXIgdGhpcyBSYXRlIFNjaGVkdWxlIHRvIGFueSBwdXJjaGFzZXIgZm9yIHJlc2FsZS59e1xydGxjaFxhZjEyXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYxM1xsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGNoYXJyc2lkMTMxMTQxODFcaW5zcnNpZDEzMTE0MTgxXGNzMTBccGFyfVxwYXJkXHBsYWluXGl0YXAwXHMwXGlsdmwxXGxzMVx0eDE0NDBcZmktMzYwXHNhMjQwXGFzcGFscGhhMFxhc3BudW0wXHBhcmFyc2lkMTMxMTQxODFcbHRycGFyXGxpMTQ0MFxsaW4xNDQwXHJpMFxyaW4wXHFsXGZhYXV0b1xzbDI0MFxzbG11bHQxXHJ0bGNoXGFmMTJcYWxhbmcxMDI1XGFmczIyXGx0cmNoXGZzMjJcZjEyXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzN7XGxpc3R0ZXh0XHBhcmRccGxhaW5cdHgxNDQwXGZpLTM2MFxsdHJwYXJcbGkxNDQwXGxpbjE0NDBccmkwXHJpbjBccWxcZmFhdXRvXHJ0bGNoXGFmMTJcbHRyY2hcZjEzIGIpXHRhYiB9e1xydGxjaFxhZjEyXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYxM1xsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGNoYXJyc2lkMTMxMTQxODFcaW5zcnNpZDEzMTE0MTgxXGNzMTAgUEpNOiAgU2VsbGVyIG9mZmVycyByZWd1bGF0aW9uIGFuZCBmcmVxdWVuY3kgcmVzcG9uc2Ugc2VydmljZSwgZW5lcmd5IGltYmFsYW5jZSBzZXJ2aWNlLCBhbmQgb3BlcmF0aW5nIHJlc2VydmUgc2VydmljZSAod2hpY2ggaW5jbHVkZXMgc3Bpbm5pbmcsIDEwLW1pbnV0ZSwgYW5kIDMwLW1pbnV0ZSByZXNlcnZlcykgZm9yIHNhbGUgaW50byB0aGUgbWFya2V0IGFkbWluaXN0ZXJlZCBieSB0aGUgUEpNIEludGVyY29ubmVjdGlvbiwgTC5MLkMuIChcdTgyMjAgUEpNXHU4MjIxICkgYW5kLCB3aGVyZSB0aGUgUEpNIE9wZW4gQWNjZXNzIFRyYW5zbWlzc2lvbiBUYXJpZmYgcGVybWl0cywgdGhlIHNlbGYtc3VwcGx5IG9mIHRoZXNlIHNlcnZpY2VzIHRvIHB1cmNoYXNlcnMgZm9yIGEgYmlsYXRlcmFsIHNhbGUgdGhhdCBpcyB1c2VkIHRvIHNhdGlzZnkgdGhlIGFuY2lsbGFyeSBzZXJ2aWNlcyByZXF1aXJlbWVudHMgb2YgdGhlIFBKTSBPZmZpY2Ugb2YgSW50ZXJjb25uZWN0aW9uO317XHJ0bGNoXGFmMTJcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjEzXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcY2hhcnJzaWQxMzExNDE4MVxpbnNyc2lkMTMxMTQxODFcY3MxMFxwYXJ9XHBhcmRccGxhaW5caXRhcDBcczBcaWx2bDFcbHMxXHR4MTQ0MFxmaS0zNjBcc2EyNDBcYXNwYWxwaGEwXGFzcG51bTBccGFyYXJzaWQxMzExNDE4MVxsdHJwYXJcbGkxNDQwXGxpbjE0NDBccmkwXHJpbjBccWxcZmFhdXRvXHNsMjQwXHNsbXVsdDFccnRsY2hcYWYxMlxhbGFuZzEwMjVcYWZzMjJcbHRyY2hcZnMyMlxmMTJcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tcbGlzdHRleHRccGFyZFxwbGFpblx0eDE0NDBcZmktMzYwXGx0cnBhclxsaTE0NDBcbGluMTQ0MFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWYxMlxsdHJjaFxmMTMgYylcdGFiIH17XHJ0bGNoXGFmMTJcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjEzXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcY2hhcnJzaWQxMzExNDE4MVxpbnNyc2lkMTMxMTQxODFcY3MxMCBOZXcgWW9yazogIFNlbGxlciBvZmZlcnMgcmVndWxhdGlvbiBhbmQgZnJlcXVlbmN5IHJlc3BvbnNlIHNlcnZpY2UsIGFuZCBvcGVyYXRpbmcgcmVzZXJ2ZSBzZXJ2aWNlICh3aGljaCBpbmNsdWRlcyAxMC1taW51dGUgbm9uLXN5bmNocm9ub3VzLCAzMC1taW51dGUgb3BlcmF0aW5nIHJlc2VydmVzLCAxMC1taW51dGUgc3Bpbm5pbmcgcmVzZXJ2ZXMsIGFuZCAxMC1taW51dGUgbm9uLXNwaW5uaW5nIHJlc2VydmVzKSBmb3Igc2FsZSB0byBwdXJjaGFzZXJzIGluIHRoZSBtYXJrZXQgYWRtaW5pc3RlcmVkIGJ5IHRoZSBOZXcgWW9yayBJbmRlcGVuZGVudCBTeXN0ZW0gT3BlcmF0b3IsIEluYy4gKFx1ODIyMCBOWUlTT1x1ODIyMSApO317XHJ0bGNoXGFmMTJcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjEzXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcY2hhcnJzaWQxMzExNDE4MVxpbnNyc2lkMTMxMTQxODFcY3MxMFxwYXJ9XHBhcmRccGxhaW5caXRhcDBcczBcaWx2bDFcbHMxXHR4MTQ0MFxmaS0zNjBcc2EyNDBcYXNwYWxwaGEwXGFzcG51bTBccGFyYXJzaWQxMzExNDE4MVxsdHJwYXJcbGkxNDQwXGxpbjE0NDBccmkwXHJpbjBccWxcZmFhdXRvXHNsMjQwXHNsbXVsdDFccnRsY2hcYWYxMlxhbGFuZzEwMjVcYWZzMjJcbHRyY2hcZnMyMlxmMTJcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tcbGlzdHRleHRccGFyZFxwbGFpblx0eDE0NDBcZmktMzYwXGx0cnBhclxsaTE0NDBcbGluMTQ0MFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWYxMlxsdHJjaFxmMTMgZClcdGFiIH17XHJ0bGNoXGFmMTJcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjEzXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcY2hhcnJzaWQxMzExNDE4MVxpbnNyc2lkMTMxMTQxODFcY3MxMCBOZXcgRW5nbGFuZDogIFNlbGxlciBvZmZlcnMgcmVndWxhdGlvbiBhbmQgZnJlcXVlbmN5IHJlc3BvbnNlIHNlcnZpY2UgKGF1dG9tYXRpYyBnZW5lcmF0b3IgY29udHJvbCksIG9wZXJhdGluZyByZXNlcnZlIHNlcnZpY2UgKHdoaWNoIGluY2x1ZGVzIDEwLW1pbnV0ZSBzcGlubmluZyByZXNlcnZlLCAxMC1taW51dGUgbm9uLXNwaW5uaW5nIHJlc2VydmUsIGFuZCAzMC1taW51dGUgcmVzZXJ2ZSBzZXJ2aWNlKSB0byBwdXJjaGFzZXJzIHdpdGhpbiB0aGUgbWFya2V0cyBhZG1pbmlzdGVyZWQgYnkgdGhlIElTTyBOZXcgRW5nbGFuZCwgSW5jLiAoXHU4MjIwIElTTy1ORVx1ODIyMSApO317XHJ0bGNoXGFmMTJcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjEzXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcY2hhcnJzaWQxMzExNDE4MVxpbnNyc2lkMTMxMTQxODFcY3MxMFxwYXJ9XHBhcmRccGxhaW5caXRhcDBcczBcaWx2bDFcbHMxXHR4MTQ0MFxmaS0zNjBcc2EyNDBcYXNwYWxwaGEwXGFzcG51bTBccGFyYXJzaWQxMzExNDE4MVxsdHJwYXJcbGkxNDQwXGxpbjE0NDBccmkwXHJpbjBccWxcZmFhdXRvXHNsMjQwXHNsbXVsdDFccnRsY2hcYWYxMlxhbGFuZzEwMjVcYWZzMjJcbHRyY2hcZnMyMlxmMTJcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tcbGlzdHRleHRccGFyZFxwbGFpblx0eDE0NDBcZmktMzYwXGx0cnBhclxsaTE0NDBcbGluMTQ0MFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWYxMlxsdHJjaFxmMTMgZSlcdGFiIH17XHJ0bGNoXGFmMTJcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjEzXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcY2hhcnJzaWQxMzExNDE4MVxpbnNyc2lkMTMxMTQxODFcY3MxMCBDYWxpZm9ybmlhOiAgU2VsbGVyIG9mZmVycyByZWd1bGF0aW9uIHNlcnZpY2UsIHNwaW5uaW5nIHJlc2VydmUgc2VydmljZSwgYW5kIG5vbi1zcGlubmluZyByZXNlcnZlIHNlcnZpY2UgdG8gdGhlIENhbGlmb3JuaWEgSW5kZXBlbmRlbnQgU3lzdGVtIE9wZXJhdG9yIENvcnBvcmF0aW9uIChcdTgyMjAgQ0FJU09cdTgyMjEgKSBhbmQgdG8gb3RoZXJzIHRoYXQgYXJlIHNlbGYtc3VwcGx5aW5nIGFuY2lsbGFyeSBzZXJ2aWNlcyB0byB0aGUgQ0FJU087fXtccnRsY2hcYWYxMlxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMTNcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xjaGFycnNpZDEzMTE0MTgxXGluc3JzaWQxMzExNDE4MVxjczEwXHBhcn1ccGFyZFxwbGFpblxpdGFwMFxzMFxpbHZsMVxsczFcdHgxNDQwXGZpLTM2MFxzYTI0MFxhc3BhbHBoYTBcYXNwbnVtMFxwYXJhcnNpZDEzMTE0MTgxXGx0cnBhclxsaTE0NDBcbGluMTQ0MFxyaTBccmluMFxxbFxmYWF1dG9cc2wyNDBcc2xtdWx0MVxydGxjaFxhZjEyXGFsYW5nMTAyNVxhZnMyMlxsdHJjaFxmczIyXGYxMlxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMze1xsaXN0dGV4dFxwYXJkXHBsYWluXHR4MTQ0MFxmaS0zNjBcbHRycGFyXGxpMTQ0MFxsaW4xNDQwXHJpMFxyaW4wXHFsXGZhYXV0b1xydGxjaFxhZjEyXGx0cmNoXGYxMyBmKVx0YWIgfXtccnRsY2hcYWYxMlxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMTNcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xjaGFycnNpZDEzMTE0MTgxXGluc3JzaWQxMzExNDE4MVxjczEwIE1pZGNvbnRpbmVudCBJU086ICBTZWxsZXIgb2ZmZXJzIHJlZ3VsYXRpb24gc2VydmljZSBhbmQgb3BlcmF0aW5nIHJlc2VydmUgc2VydmljZSAod2hpY2ggaW5jbHVkZSAxMC1taW51dGUgc3Bpbm5pbmcgcmVzZXJ2ZSBhbmQgMTAtbWludXRlIHN1cHBsZW1lbnRhbCByZXNlcnZlKSBmb3Igc2FsZSB0byB0aGUgTWlkY29udGluZW50IEluZGVwZW5kZW50IFN5c3RlbSBPcGVyYXRvciwgSW5jLiAoXHU4MjIwIE1pZGNvbnRpbmVudCBJU09cdTgyMjEgKSBhbmQgdG8gb3RoZXJzIHRoYXQgYXJlIHNlbGYtc3VwcGx5aW5nIGFuY2lsbGFyeSBzZXJ2aWNlcyB0byBNaWRjb250aW5lbnQgSVNPOyBhbmR9e1xydGxjaFxhZjEyXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYxM1xsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGNoYXJyc2lkMTMxMTQxODFcaW5zcnNpZDEzMTE0MTgxXGNzMTBccGFyfVxwYXJkXHBsYWluXGl0YXAwXHMwXGlsdmwxXGxzMVx0eDE0NDBcZmktMzYwXHNhMjQwXGFzcGFscGhhMFxhc3BudW0wXHBhcmFyc2lkMTMxMTQxODFcbHRycGFyXGxpMTQ0MFxsaW4xNDQwXHJpMFxyaW4wXHFsXGZhYXV0b1xzbDI0MFxzbG11bHQxXHJ0bGNoXGFmMTJcYWxhbmcxMDI1XGFmczIyXGx0cmNoXGZzMjJcZjEyXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzN7XGxpc3R0ZXh0XHBhcmRccGxhaW5cdHgxNDQwXGZpLTM2MFxsdHJwYXJcbGkxNDQwXGxpbjE0NDBccmkwXHJpbjBccWxcZmFhdXRvXHJ0bGNoXGFmMTJcbHRyY2hcZjEzIGcpXHRhYiB9e1xydGxjaFxhZjEyXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYxM1xsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGNoYXJyc2lkMTMxMTQxODFcaW5zcnNpZDEzMTE0MTgxXGNzMTAgU291dGh3ZXN0IFBvd2VyIFBvb2w6ICBTZWxsZXIgb2ZmZXJzIHJlZ3VsYXRpb24gc2VydmljZSBhbmQgb3BlcmF0aW5nIHJlc2VydmUgc2VydmljZSAod2hpY2ggaW5jbHVkZSAxMC1taW51dGUgc3Bpbm5pbmcgcmVzZXJ2ZSBhbmQgMTAtbWludXRlIHN1cHBsZW1lbnRhbCByZXNlcnZlKSBmb3Igc2FsZSB0byB0aGUgU291dGh3ZXN0IFBvd2VyIFBvb2wsIEluYy4gKFx1ODIyMCBTUFBcdTgyMjEgKSBhbmQgdG8gb3RoZXJzIHRoYXQgYXJlIHNlbGYtc3VwcGx5aW5nIGFuY2lsbGFyeSBzZXJ2aWNlcyB0byBTUFAufXtccnRsY2hcYWYxMlxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMTNcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xjaGFycnNpZDEzMTE0MTgxXGluc3JzaWQxMzExNDE4MVxjczEwXHBhcn1ccGFyZFxwbGFpblxpdGFwMFxzMFxpbHZsMVxsczFcdHgxNDQwXGZpLTM2MFxzYTI0MFxhc3BhbHBoYTBcYXNwbnVtMFxwYXJhcnNpZDEzMTE0MTgxXGx0cnBhclxsaTE0NDBcbGluMTQ0MFxyaTBccmluMFxxbFxmYWF1dG9cc2wyNDBcc2xtdWx0MVxydGxjaFxhZjEyXGFsYW5nMTAyNVxhZnMyMlxsdHJjaFxmczIyXGYxMlxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMze1xsaXN0dGV4dFxwYXJkXHBsYWluXHR4MTQ0MFxmaS0zNjBcbHRycGFyXGxpMTQ0MFxsaW4xNDQwXHJpMFxyaW4wXHFsXGZhYXV0b1xydGxjaFxhZjEyXGx0cmNoXGYxMyBoKVx0YWIgfXtccnRsY2hcYWYxMlxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMTNcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xjaGFycnNpZDEzMTE0MTgxXGluc3JzaWQxMzExNDE4MVxjczEwIFRoaXJkLXBhcnR5IGFuY2lsbGFyeSBzZXJ2aWNlczogIFNlbGxlciBvZmZlcnMgUmVndWxhdGlvbiBTZXJ2aWNlLCBSZWFjdGl2ZSBTdXBwbHkgYW5kIFZvbHRhZ2UgQ29udHJvbCBTZXJ2aWNlLCBFbmVyZ3kgYW5kIEdlbmVyYXRvciBJbWJhbGFuY2UgU2VydmljZSwgT3BlcmF0aW5nIFJlc2VydmUtU3Bpbm5pbmcsIE9wZXJhdGluZyBSZXNlcnZlLVN1cHBsZW1lbnRhbCwgYW5kIFByaW1hcnkgRnJlcXVlbmN5IFJlc3BvbnNlIFNlcnZpY2UuICBTYWxlcyB3aWxsIG5vdCBpbmNsdWRlIHRoZSBmb2xsb3dpbmc6ICgxKSBzYWxlcyB0byBhbiBSVE8gb3IgYW4gSVNPLCBpLmUuLCB3aGVyZSB0aGF0IGVudGl0eSBoYXMgbm8gYWJpbGl0eSB0byBzZWxmLXN1cHBseSBhbmNpbGxhcnkgc2VydmljZXMgYnV0IGluc3RlYWQgZGVwZW5kcyBvbiB0aGlyZCBwYXJ0aWVzOyBhbmQgKDIpIHNhbGVzIHRvIGEgdHJhZGl0aW9uYWwsIGZyYW5jaGlzZWQgcHVibGljIHV0aWxpdHkgYWZmaWxpYXRlZCB3aXRoIHRoZSB0aGlyZC1wYXJ0eSBzdXBwbGllciwgb3Igc2FsZXMgd2hlcmUgdGhlIHVuZGVybHlpbmcgdHJhbnNtaXNzaW9uIHNlcnZpY2UgaXMgb24gdGhlIHN5c3RlbSBvZiB0aGUgcHVibGljIHV0aWxpdHkgYWZmaWxpYXRlZCB3aXRoIHRoZSB0aGlyZC1wYXJ0eSBzdXBwbGllci4gU2FsZXMgb2YgT3BlcmF0aW5nIFJlc2VydmUtU3Bpbm5pbmcgYW5kIE9wZXJhdGluZyBSZXNlcnZlLVN1cHBsZW1lbnRhbCB3aWxsIG5vdCBpbmNsdWRlIHNhbGVzIHRvIGEgcHVibGljIHV0aWxpdHkgdGhhdCBpcyBwdXJjaGFzaW5nIGFuY2lsbGFyeSBzZXJ2aWNlcyB0byBzYXRpc2Z5IGl0cyBvd24gb3BlbiBhY2Nlc3MgdHJhbnNtaXNzaW9uIHRhcmlmZiByZXF1aXJlbWVudHMgdG8gb2ZmZXIgYW5jaWxsYXJ5IHNlcnZpY2VzIHRvIGl0cyBvd24gY3VzdG9tZXJzLCBleGNlcHQgd2hlcmUgdGhlIENvbW1pc3Npb24gaGFzIGdyYW50ZWQgYXV0aG9yaXphdGlvbi4gU2FsZXMgb2YgUmVndWxhdGlvbiBTZXJ2aWNlIGFuZCBSZWFjdGl2ZSBTdXBwbHkgYW5kIFZvbHRhZ2UgQ29udHJvbCBTZXJ2aWNlIHdpbGwgbm90IGluY2x1ZGUgc2FsZXMgdG8gYSBwdWJsaWMgdXRpbGl0eSB0aGF0IGlzIHB1cmNoYXNpbmcgYW5jaWxsYXJ5IHNlcnZpY2VzIHRvIHNhdGlzZnkgaXRzIG93biBvcGVuIGFjY2VzcyB0cmFuc21pc3Npb24gdGFyaWZmIHJlcXVpcmVtZW50cyB0byBvZmZlciBhbmNpbGxhcnkgc2VydmljZXMgdG8gaXRzIG93biBjdXN0b21lcnMsIGV4Y2VwdCBhdCByYXRlcyBub3QgdG8gZXhjZWVkIHRoZSBidXlpbmcgcHVibGljIHV0aWxpdHkgdHJhbnNtaXNzaW9uIHByb3ZpZGVyXHU4MjE3IHMgT0FUVCByYXRlIGZvciB0aGUgc2FtZSBzZXJ2aWNlIG9yIHdoZXJlIHRoZSBDb21taXNzaW9uIGhhcyBncmFudGVkIGF1dGhvcml6YXRpb24uLn17XHJ0bGNoXGFmMTJcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjEzXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcY2hhcnJzaWQxMzExNDE4MVxpbnNyc2lkMTMxMTQxODFcY3MxMFxwYXJ9XHBhcmRccGxhaW5caXRhcDBcczBcbHMxXHR4NzIwXGZpLTM2MFxzYTI0MFxhc3BhbHBoYTBcYXNwbnVtMFxwYXJhcnNpZDEzMTE0MTgxXGx0cnBhclxsaTcyMFxsaW43MjBccmkwXHJpbjBccWxcZmFhdXRvXHNsMjQwXHNsbXVsdDFccnRsY2hcYWYxMlxhbGFuZzEwMjVcYWZzMjJcbHRyY2hcZnMyMlxmMTJcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tcbGlzdHRleHRccGFyZFxwbGFpblx0eDcyMFxmaS0zNjBcbHRycGFyXGxpNzIwXGxpbjcyMFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWYxMlxsdHJjaFxmMTMgMi5cdGFiIH17XHJ0bGNoXGFmMTJcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjEzXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcY2hhcnJzaWQxMzExNDE4MVxpbnNyc2lkMTMxMTQxODFcY3MxMFx1bCBBcHBsaWNhYmlsaXR5Ln17XHJ0bGNoXGFmMTJcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjEzXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcY2hhcnJzaWQxMzExNDE4MVxpbnNyc2lkMTMxMTQxODFcY3MxMCAgIFRoaXMgVGFyaWZmIGlzIGFwcGxpY2FibGUgdG8gdGhlIGZvbGxvd2luZyBzYWxlcyBieSBTZWxsZXIsIHRvIHRoZSBleHRlbnQgc3VjaCBzYWxlcyBhcmUgc3ViamVjdCB0byB0aGUganVyaXNkaWN0aW9uIG9mIHRoZSBDb21taXNzaW9uIGFuZCBub3QgbWFkZSBwdXJzdWFudCB0byBhbm90aGVyIHRhcmlmZiBvciByYXRlIHNjaGVkdWxlIG9uIGZpbGUgd2l0aCB0aGUgQ29tbWlzc2lvbjogIChhKSBhbGwgd2hvbGVzYWxlIHNhbGVzIG9mIGVsZWN0cmljIGVuZXJneSBhbmQgY2FwYWNpdHk7IGFuZCAoYikgYWxsIHNhbGVzIGludG8gdGhlIGFuY2lsbGFyeSBzZXJ2aWNlIG1hcmtldHMgZGVzY3JpYmVkIGluIFNlY3Rpb24gMSBhYm92ZS4gIH17XHJ0bGNoXGFmMTJcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjEzXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcY2hhcnJzaWQxMzExNDE4MVxpbnNyc2lkMTMxMTQxODFcY3MxMFxwYXJ9XHBhcmRccGxhaW5caXRhcDBcczBcbHMxXHR4NzIwXGZpLTM2MFxzYTI0MFxhc3BhbHBoYTBcYXNwbnVtMFxwYXJhcnNpZDEzMTE0MTgxXGx0cnBhclxsaTcyMFxsaW43MjBccmkwXHJpbjBccWxcZmFhdXRvXHNsMjQwXHNsbXVsdDFccnRsY2hcYWYxMlxhbGFuZzEwMjVcYWZzMjJcbHRyY2hcZnMyMlxmMTJcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tcbGlzdHRleHRccGFyZFxwbGFpblx0eDcyMFxmaS0zNjBcbHRycGFyXGxpNzIwXGxpbjcyMFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWYxMlxsdHJjaFxmMTMgMy5cdGFiIH17XHJ0bGNoXGFmMTJcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjEzXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcY2hhcnJzaWQxMzExNDE4MVxpbnNyc2lkMTMxMTQxODFcY3MxMFx1bCBSYXRlcy59e1xydGxjaFxhZjEyXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYxM1xsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGNoYXJyc2lkMTMxMTQxODFcaW5zcnNpZDEzMTE0MTgxXGNzMTAgICBBbGwgc2FsZXMgbWFkZSB1bmRlciB0aGlzIFRhcmlmZiBzaGFsbCBiZSBtYWRlIGF0IHRoZSByYXRlcyBlc3RhYmxpc2hlZCBiZXR3ZWVuIHRoZSBwdXJjaGFzZXIgYW5kIFNlbGxlci59e1xydGxjaFxhZjEyXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYxM1xsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGNoYXJyc2lkMTMxMTQxODFcaW5zcnNpZDEzMTE0MTgxXGNzMTBccGFyfVxwYXJkXHBsYWluXGl0YXAwXHMwXGxzMVx0eDcyMFxmaS0zNjBcc2EyNDBcYXNwYWxwaGEwXGFzcG51bTBccGFyYXJzaWQxMzExNDE4MVxsdHJwYXJcbGk3MjBcbGluNzIwXHJpMFxyaW4wXHFsXGZhYXV0b1xzbDI0MFxzbG11bHQxXHJ0bGNoXGFmMTJcYWxhbmcxMDI1XGFmczIyXGx0cmNoXGZzMjJcZjEyXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzN7XGxpc3R0ZXh0XHBhcmRccGxhaW5cdHg3MjBcZmktMzYwXGx0cnBhclxsaTcyMFxsaW43MjBccmkwXHJpbjBccWxcZmFhdXRvXHJ0bGNoXGFmMTJcbHRyY2hcZjEzIDQuXHRhYiB9e1xydGxjaFxhZjEyXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYxM1xsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGNoYXJyc2lkMTMxMTQxODFcaW5zcnNpZDEzMTE0MTgxXGNzMTBcdWwgRHVyYXRpb24ufXtccnRsY2hcYWYxMlxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMTNcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xjaGFycnNpZDEzMTE0MTgxXGluc3JzaWQxMzExNDE4MVxjczEwICAgVGhpcyBUYXJpZmYgc2hhbGwgY29udGludWUgaW4gZWZmZWN0IHVudGlsIHRlcm1pbmF0ZWQgb3IgY2hhbmdlZCBhbmQgc3VjaCB0ZXJtaW5hdGlvbiBvciBjaGFuZ2UgYmVjb21lcyBlZmZlY3RpdmUgaW4gYWNjb3JkYW5jZSB3aXRoIGFueSBhcHBsaWNhYmxlIHJlZ3VsYXRvcnkgcmVxdWlyZW1lbnRzLn17XHJ0bGNoXGFmMTJcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjEzXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcY2hhcnJzaWQxMzExNDE4MVxpbnNyc2lkMTMxMTQxODFcY3MxMFxwYXJ9XHBhcmRccGxhaW5caXRhcDBcczBcbHMxXHR4NzIwXGZpLTM2MFxzYTI0MFxhc3BhbHBoYTBcYXNwbnVtMFxwYXJhcnNpZDEzMTE0MTgxXGx0cnBhclxsaTcyMFxsaW43MjBccmkwXHJpbjBccWxcZmFhdXRvXHNsMjQwXHNsbXVsdDFccnRsY2hcYWYxMlxhbGFuZzEwMjVcYWZzMjJcbHRyY2hcZnMyMlxmMTJcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tcbGlzdHRleHRccGFyZFxwbGFpblx0eDcyMFxmaS0zNjBcbHRycGFyXGxpNzIwXGxpbjcyMFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWYxMlxsdHJjaFxmMTMgNS5cdGFiIH17XHJ0bGNoXGFmMTJcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjEzXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcY2hhcnJzaWQxMzExNDE4MVxpbnNyc2lkMTMxMTQxODFcY3MxMFx1bCBNb2RpZmljYXRpb25zLn17XHJ0bGNoXGFmMTJcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjEzXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcY2hhcnJzaWQxMzExNDE4MVxpbnNyc2lkMTMxMTQxODFcY3MxMCAgIFNlbGxlciBtYXkgdW5pbGF0ZXJhbGx5IGFwcGx5LCB1bmRlciBGZWRlcmFsIFBvd2VyIEFjdCBTZWN0aW9uIDIwNSBhbmQgdGhlIHJlZ3VsYXRpb25zIHByb211bGdhdGVkIHRoZXJldW5kZXIsIHRvIHRoZSBDb21taXNzaW9uIG9yIG90aGVyIHJlZ3VsYXRvcnkgYWdlbmN5IGhhdmluZyBqdXJpc2RpY3Rpb24gZm9yIGEgbW9kaWZpY2F0aW9uIG9mIHRoaXMgVGFyaWZmLn17XHJ0bGNoXGFmMTJcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjEzXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcY2hhcnJzaWQxMzExNDE4MVxpbnNyc2lkMTMxMTQxODFcY3MxMFxwYXJ9XHBhcmRccGxhaW5caXRhcDBcczBcbHMxXHR4NzIwXGZpLTM2MFxzYTI0MFxhc3BhbHBoYTBcYXNwbnVtMFxwYXJhcnNpZDEzMTE0MTgxXGx0cnBhclxsaTcyMFxsaW43MjBccmkwXHJpbjBccWxcZmFhdXRvXHNsMjQwXHNsbXVsdDFccnRsY2hcYWYxMlxhbGFuZzEwMjVcYWZzMjJcbHRyY2hcZnMyMlxmMTJcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tcbGlzdHRleHRccGFyZFxwbGFpblx0eDcyMFxmaS0zNjBcbHRycGFyXGxpNzIwXGxpbjcyMFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWYxMlxsdHJjaFxmMTMgNi5cdGFiIH17XHJ0bGNoXGFmMTJcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjEzXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcY2hhcnJzaWQxMzExNDE4MVxpbnNyc2lkMTMxMTQxODFcY3MxMFx1bCBPdGhlciBUZXJtcyBhbmQgQ29uZGl0aW9ucy59e1xydGxjaFxhZjEyXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYxM1xsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGNoYXJyc2lkMTMxMTQxODFcaW5zcnNpZDEzMTE0MTgxXGNzMTAgICBBbGwgb3RoZXIgdGVybXMgYW5kIGNvbmRpdGlvbnMgc2hhbGwgYmUgZXN0YWJsaXNoZWQgYnkgYWdyZWVtZW50IGJldHdlZW4gdGhlIHB1cmNoYXNlciBhbmQgU2VsbGVyLn17XHJ0bGNoXGFmMTJcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjEzXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcY2hhcnJzaWQxMzExNDE4MVxpbnNyc2lkMTMxMTQxODFcY3MxMFxwYXJ9XHBhcmRccGxhaW5caXRhcDBcczBcbHMxXHR4NzIwXGZpLTM2MFxzYTI0MFxhc3BhbHBoYTBcYXNwbnVtMFxwYXJhcnNpZDEzMTE0MTgxXGx0cnBhclxsaTcyMFxsaW43MjBccmkwXHJpbjBccWxcZmFhdXRvXHNsMjQwXHNsbXVsdDFccnRsY2hcYWYxMlxhbGFuZzEwMjVcYWZzMjJcbHRyY2hcZnMyMlxmMTJcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tcbGlzdHRleHRccGFyZFxwbGFpblx0eDcyMFxmaS0zNjBcbHRycGFyXGxpNzIwXGxpbjcyMFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWYxMlxsdHJjaFxmMTMgNy5cdGFiIH17XHJ0bGNoXGFmMTJcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjEzXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcY2hhcnJzaWQxMzExNDE4MVxpbnNyc2lkMTMxMTQxODFcY3MxMFx1bCBDb21wbGlhbmNlIHdpdGggQ29tbWlzc2lvbiBSZWd1bGF0aW9ucy59e1xydGxjaFxhZjEyXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYxM1xsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGNoYXJyc2lkMTMxMTQxODFcaW5zcnNpZDEzMTE0MTgxXGNzMTAgICBTZWxsZXIgc2hhbGwgY29tcGx5IHdpdGggdGhlIHByb3Zpc2lvbnMgb2YgMTggQy5GLlIuIFBhcnQgMzUsIFN1YnBhcnQgSCwgYXMgYXBwbGljYWJsZSwgYW5kIHdpdGggYW55IGNvbmRpdGlvbnMgdGhlIENvbW1pc3Npb24gaW1wb3NlcyBpbiBpdHMgb3JkZXJzIGNvbmNlcm5pbmcgU2VsbGVyXHU4MjE3IHMgbWFya2V0LWJhc2VkIHJhdGUgYXV0aG9yaXR5LCBpbmNsdWRpbmcgb3JkZXJzIGluIHdoaWNoIHRoZSBDb21taXNzaW9uIGF1dGhvcml6ZXMgU2VsbGVyIHRvIGVuZ2FnZSBpbiBhZmZpbGlhdGUgc2FsZXMgdW5kZXIgdGhpcyB0YXJpZmYgb3Igb3RoZXJ3aXNlIHJlc3RyaWN0cyBvciBsaW1pdHMgdGhlIFNlbGxlclx1ODIxNyBzIG1hcmtldC1iYXNlZCByYXRlIGF1dGhvcml0eS4gIEZhaWx1cmUgdG8gY29tcGx5IHdpdGggdGhlIGFwcGxpY2FibGUgcHJvdmlzaW9ucyBvZiAxOCBDLkYuUi4gUGFydCAzNSwgU3VicGFydCBIIGFuZCB3aXRoIGFueSBvcmRlcnMgb2YgdGhlIENvbW1pc3Npb24gY29uY2VybmluZyBTZWxsZXJcdTgyMTcgcyBtYXJrZXQtYmFzZWQgcmF0ZSBhdXRob3JpdHksIHdpbGwgY29uc3RpdHV0ZSBhIHZpb2xhdGlvbiBvZiB0aGlzIFRhcmlmZi59e1xydGxjaFxhZjEyXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYxM1xsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGNoYXJyc2lkMTMxMTQxODFcaW5zcnNpZDEzMTE0MTgxXGNzMTBccGFyfVxwYXJkXHBsYWluXGl0YXAwXHMwXHNhMjQwXGFzcGFscGhhMFxhc3BudW0wXHBhcmFyc2lkMTMxMTQxODFcbHRycGFyXGxpNDA0XGxpbjQwNFxyaTBccmluMFxxbFxmYWF1dG9cc2wyNDBcc2xtdWx0MVxydGxjaFxhZjEyXGFsYW5nMTAyNVxhZnMyMlxsdHJjaFxmczIyXGYxMlxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMze1xydGxjaFxhZjEyXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYxM1xsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGluc3JzaWQxMzExNDE4MVxjczEwXHBhcn1ccGFyZFxwbGFpblxpdGFwMFxzMFxzYTI0MFxhc3BhbHBoYTBcYXNwbnVtMFxwYXJhcnNpZDEzMTE0MTgxXGx0cnBhclxsaTQwNFxsaW40MDRccmkwXHJpbjBccWxcZmFhdXRvXHNsMjQwXHNsbXVsdDFccnRsY2hcYWYxMlxhbGFuZzEwMjVcYWZzMjJcbHRyY2hcZnMyMlxmMTJcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tccnRsY2hcYWYxMlxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMTNcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xjaGFycnNpZDEzMTE0MTgxXGluc3JzaWQxMzExNDE4MVxjczEwXHBhcn1ccGFyZFxwbGFpblxpdGFwMFxzMFxsczFcdHg3MjBcdHgxMTI0XGZpLTM2MFxzYTI0MFxhc3BhbHBoYVxhc3BudW1ccGFyYXJzaWQxMzExNDE4MVxsdHJwYXJcbGk3MjBcbGluNzIwXHJpMFxyaW4wXHFsXGZhYXV0b1xzbDI0MFxzbG11bHQxXHJ0bGNoXGFmMTJcYWxhbmcxMDI1XGFmczIyXGx0cmNoXGZzMjJcZjEyXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzN7XGxpc3R0ZXh0XHBhcmRccGxhaW5cdHg3MjBcZmktMzYwXGx0cnBhclxsaTcyMFxsaW43MjBccmkwXHJpbjBccWxcZmFhdXRvXHJ0bGNoXGFmMTJcbHRyY2hcZjEzIDguXHRhYiB9e1xydGxjaFxhZjEyXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYxM1xsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGNoYXJyc2lkMTMxMTQxODFcaW5zcnNpZDEzMTE0MTgxXGNzMTBcdWwgTGltaXRhdGlvbnMgYW5kIEV4ZW1wdGlvbnMgUmVnYXJkaW5nIE1hcmtldC1CYXNlZCBSYXRlIEF1dGhvcml0eS59e1xydGxjaFxhZjEyXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYxM1xsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGNoYXJyc2lkMTMxMTQxODFcaW5zcnNpZDEzMTE0MTgxXGNzMTAgICB9e1xydGxjaFxhZjEyXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI2XGYxM1xsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGNoYXJyc2lkMTMxMTQxODFcaW5zcnNpZDEzMTE0MTgxXGNzMTBccGFyfVxwYXJkXHBsYWluXGl0YXAwXHMwXGZpNzIwXHNhMFxhc3BhbHBoYTBcYXNwbnVtMFxwYXJhcnNpZDEzMTE0MTgxXGx0cnBhclxsaTBcbGluMFxyaTBccmluMFxxbFxmYWF1dG9cc2wyNDBcc2xtdWx0MVxydGxjaFxhZjEyXGFsYW5nMTAyNVxhZnMyMlxsdHJjaFxmczIyXGYxMlxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMze1xydGxjaFxhZjEyXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYxM1xsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGNoYXJyc2lkMTMxMTQxODFcaW5zcnNpZDEzMTE0MTgxXGNzMTAgU2VsbGVyIGhhcyBhdXRob3JpemF0aW9uIGZvciB0aGUgZm9sbG93aW5nIHdhaXZlcnM6fXtccnRsY2hcYWYxMlxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMTNcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xjaGFycnNpZDEzMTE0MTgxXGluc3JzaWQxMzExNDE4MVxjczEwXHBhcn1ccGFyZFxwbGFpblxpdGFwMFxzMFxzYTBcYXNwYWxwaGEwXGFzcG51bTBccGFyYXJzaWQxMzExNDE4MVxsdHJwYXJcbGkwXGxpbjBccmkwXHJpbjBccWxcZmFhdXRvXHNsMjQwXHNsbXVsdDFccnRsY2hcYWYxMlxhbGFuZzEwMjVcYWZzMjJcbHRyY2hcZnMyMlxmMTJcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tccnRsY2hcYWYxMlxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMTNcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xjaGFycnNpZDEzMTE0MTgxXGluc3JzaWQxMzExNDE4MVxjczEwXHBhcn1ccGFyZFxwbGFpblxpdGFwMFxzMFxsczNcdHgxNDQwXGZpLTM2MFxzYTBcYXNwYWxwaGEwXGFzcG51bTBccGFyYXJzaWQxMzExNDE4MVxsdHJwYXJcbGkxNDQwXGxpbjE0NDBccmkwXHJpbjBccWxcZmFhdXRvXHNsMjQwXHNsbXVsdDFccnRsY2hcYWYxMlxhbGFuZzEwMjVcYWZzMjJcbHRyY2hcZnMyMlxmMTJcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tcbGlzdHRleHRccGFyZFxwbGFpblx0eDE0NDBcZmktMzYwXGx0cnBhclxsaTE0NDBcbGluMTQ0MFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWYxMlxsdHJjaFxmMiBcdS0zOTEzIFx0YWIgfXtccnRsY2hcYWYxMlxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMTNcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xjaGFycnNpZDEzMTE0MTgxXGluc3JzaWQxMzExNDE4MVxjczEwIFdhaXZlciBvZiByZXF1aXJlbWVudHMgb2YgUGFydHMgNDEsIDEwMSh3aXRoIHRoZSBleGNlcHRpb24gdGhhdCB3YWl2ZXIgb2YgdGhlIHByb3Zpc2lvbnMgb2YgUGFydCAxMDEgdGhhdCBhcHBseSB0byBoeWRyb3Bvd2VyIGxpY2Vuc2VlcyBpcyBub3QgZ3JhbnRlZCB3aXRoIHJlc3BlY3QgdG8gbGljZW5zZWQgaHlkcm9wb3dlciBwcm9qZWN0cyksIGFuZCAxNDEsIGV4Y2VwdCBTZWN0aW9ucyAxNDEuMTQgYW5kIDE0MS4xNTt9e1xydGxjaFxhZjEyXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYxM1xsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGNoYXJyc2lkMTMxMTQxODFcaW5zcnNpZDEzMTE0MTgxXGNzMTBccGFyfVxwYXJkXHBsYWluXGl0YXAwXHMwXGZpNzIwXHNhMFxhc3BhbHBoYTBcYXNwbnVtMFxwYXJhcnNpZDEzMTE0MTgxXGx0cnBhclxsaTcyMFxsaW43MjBccmkwXHJpbjBccWxcZmFhdXRvXHNsMjQwXHNsbXVsdDFccnRsY2hcYWYxMlxhbGFuZzEwMjVcYWZzMjJcbHRyY2hcZnMyMlxmMTJcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tccnRsY2hcYWYxMlxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMTNcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xjaGFycnNpZDEzMTE0MTgxXGluc3JzaWQxMzExNDE4MVxjczEwXHBhcn1ccGFyZFxwbGFpblxpdGFwMFxzMFxsczNcdHgxNDQwXGZpLTM2MFxzYTBcYXNwYWxwaGEwXGFzcG51bTBccGFyYXJzaWQxMzExNDE4MVxsdHJwYXJcbGkxNDQwXGxpbjE0NDBccmkwXHJpbjBccWxcZmFhdXRvXHNsMjQwXHNsbXVsdDFccnRsY2hcYWYxMlxhbGFuZzEwMjVcYWZzMjJcbHRyY2hcZnMyMlxmMTJcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tcbGlzdHRleHRccGFyZFxwbGFpblx0eDE0NDBcZmktMzYwXGx0cnBhclxsaTE0NDBcbGluMTQ0MFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWYxMlxsdHJjaFxmMiBcdS0zOTEzIFx0YWIgfXtccnRsY2hcYWYxMlxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMTNcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xjaGFycnNpZDEzMTE0MTgxXGluc3JzaWQxMzExNDE4MVxjczEwIFdhaXZlciBvZiB0aGUgcmVwb3J0aW5nIHJlcXVpcmVtZW50cyBvZiBTdWJwYXJ0cyBCIGFuZCBDIG9mIFBhcnQgMzUsfXtccnRsY2hcYWYxMlxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMTNcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xjaGFycnNpZDEzMTE0MTgxXGluc3JzaWQxMzExNDE4MVxjczEwXHBhcn1ccGFyZFxwbGFpblxpdGFwMFxzMFxmaTcyMFxzYTBcYXNwYWxwaGEwXGFzcG51bTBccGFyYXJzaWQxMzExNDE4MVxsdHJwYXJcbGk3MjBcbGluNzIwXHJpMFxyaW4wXHFsXGZhYXV0b1xzbDI0MFxzbG11bHQxXHJ0bGNoXGFmMTJcYWxhbmcxMDI1XGFmczIyXGx0cmNoXGZzMjJcZjEyXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzN7XHJ0bGNoXGFmMTJcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjEzXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcY2hhcnJzaWQxMzExNDE4MVxpbnNyc2lkMTMxMTQxODFcY3MxMCBleGNlcHQgU2VjdGlvbnMgMzUuMTIoYSksIDM1LjEzKGIpLCAzNS4xNSwgYW5kIDM1LjE2OyBhbmR9e1xydGxjaFxhZjEyXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYxM1xsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGNoYXJyc2lkMTMxMTQxODFcaW5zcnNpZDEzMTE0MTgxXGNzMTBccGFyfVxwYXJkXHBsYWluXGl0YXAwXHMwXGZpNzIwXHNhMFxhc3BhbHBoYTBcYXNwbnVtMFxwYXJhcnNpZDEzMTE0MTgxXGx0cnBhclxsaTcyMFxsaW43MjBccmkwXHJpbjBccWxcZmFhdXRvXHNsMjQwXHNsbXVsdDFccnRsY2hcYWYxMlxhbGFuZzEwMjVcYWZzMjJcbHRyY2hcZnMyMlxmMTJcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tccnRsY2hcYWYxMlxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMTNcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xjaGFycnNpZDEzMTE0MTgxXGluc3JzaWQxMzExNDE4MVxjczEwXHBhcn1ccGFyZFxwbGFpblxpdGFwMFxzMFxsczNcdHgxNDQwXGZpLTM2MFxzYTBcYXNwYWxwaGEwXGFzcG51bTBccGFyYXJzaWQxMzExNDE4MVxsdHJwYXJcbGkxNDQwXGxpbjE0NDBccmkwXHJpbjBccWxcZmFhdXRvXHNsMjQwXHNsbXVsdDFccnRsY2hcYWYxMlxhbGFuZzEwMjVcYWZzMjJcbHRyY2hcZnMyMlxmMTJcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tcbGlzdHRleHRccGFyZFxwbGFpblx0eDE0NDBcZmktMzYwXGx0cnBhclxsaTE0NDBcbGluMTQ0MFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWYxMlxsdHJjaFxmMiBcdS0zOTEzIFx0YWIgfXtccnRsY2hcYWYxMlxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMTNcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xjaGFycnNpZDEzMTE0MTgxXGluc3JzaWQxMzExNDE4MVxjczEwIEJsYW5rZXQgYXV0aG9yaXphdGlvbiB1bmRlciBQYXJ0IDM0IG9mIGFsbCBmdXR1cmUgaXNzdWFuY2VzIG9mIHNlY3VyaXRpZXN9e1xydGxjaFxhZjEyXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYxM1xsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGNoYXJyc2lkMTMxMTQxODFcaW5zcnNpZDEzMTE0MTgxXGNzMTBccGFyfVxwYXJkXHBsYWluXGl0YXAwXHMwXHNhMjQwXGFzcGFscGhhMFxhc3BudW0wXHBhcmFyc2lkMTMxMTQxODFcbHRycGFyXGxpNzIwXGxpbjcyMFxyaTBccmluMFxxbFxmYWF1dG9cc2wyNDBcc2xtdWx0MVxydGxjaFxhZjEyXGFsYW5nMTAyNVxhZnMyMlxsdHJjaFxmczIyXGYxMlxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMze1xydGxjaFxhZjEyXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYxM1xsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGNoYXJyc2lkMTMxMTQxODFcaW5zcnNpZDEzMTE0MTgxXGNzMTAgXHRhYiBhbmQgYXNzdW1wdGlvbiBvZiBsaWFiaWxpdHkufXtccnRsY2hcYWYxMlxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMTNcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xjaGFycnNpZDEzMTE0MTgxXGluc3JzaWQxMzExNDE4MVxjczEwXHBhcn1ccGFyZFxwbGFpblxpdGFwMFxzMFxzYTI0MFxhc3BhbHBoYTBcYXNwbnVtMFxwYXJhcnNpZDEzMTE0MTgxXGx0cnBhclxsaTcyMFxsaW43MjBccmkwXHJpbjBccWxcZmFhdXRvXHNsMjQwXHNsbXVsdDFccnRsY2hcYWYxMlxhbGFuZzEwMjVcYWZzMjJcbHRyY2hcZnMyMlxmMTJcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tccnRsY2hcYWYxMlxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMTNcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xjaGFycnNpZDEzMTE0MTgxXGluc3JzaWQxMzExNDE4MVxjczEwIE5vdHdpdGhzdGFuZGluZyB0aGUgQXBwbGljYWJpbGl0eSB1bmRlciBTZWN0aW9uIDIgYWJvdmUsIHdpdGggcmVnYXJkIHRvIG5vbi1hZmZpbGlhdGVkIHBlcnNvbnMgb3IgZW50aXRpZXMsIFNlbGxlciBzaGFsbCBub3QgbWFrZSB3aG9sZXNhbGUgc2FsZXMgb2YgZW5lcmd5IG9yIGNhcGFjaXR5IHRvLCBvciBwdXJjaGFzZXMgb2YgZW5lcmd5IG9yIGNhcGFjaXR5IGZyb20sIHBlbmluc3VsYXIgRmxvcmlkYSB3aXRob3V0IGZpcnN0IHJlY2VpdmluZyBhZHZhbmNlIGFwcHJvdmFsIGJ5IHRoZSBGZWRlcmFsIEVuZXJneX17XHJ0bGNoXGFmMTJcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjZcZjEzXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcY2hhcnJzaWQxMzExNDE4MVxpbnNyc2lkMTMxMTQxODFcY3MxMCAgfXtccnRsY2hcYWYxMlxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMTNcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xjaGFycnNpZDEzMTE0MTgxXGluc3JzaWQxMzExNDE4MVxjczEwIFJlZ3VsYXRvcnkgQ29tbWlzc2lvbiBwdXJzdWFudCB0byBhIHNlcGFyYXRlIGZpbGluZyB1bmRlciBTZWN0aW9uIDIwNSBvZiB0aGUgRmVkZXJhbCBQb3dlciBBY3QufXtccnRsY2hcYWYxMlxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcaVxmczI0XGYxM1xsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGNoYXJyc2lkMTMxMTQxODFcaW5zcnNpZDEzMTE0MTgxXGNzMTAgIFNlZSBDb29saWRnZSBTb2xhciBJLCBMTEN9e1xydGxjaFxhZjEyXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYxM1xsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGNoYXJyc2lkMTMxMTQxODFcaW5zcnNpZDEzMTE0MTgxXGNzMTAgLCBEb2NrZXQgTm8uIEVSMTgtX19fXy0wMDAuICB9e1xydGxjaFxhZjEyXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYxM1xsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGNoYXJyc2lkMTMxMTQxODFcaW5zcnNpZDEzMTE0MTgxXGNzMTBccGFyfVxwYXJkXHBsYWluXGl0YXAwXHMwXHR4NzIwXGZpLTM2MFxzYTBcYXNwYWxwaGEwXGFzcG51bTBccGFyYXJzaWQxMzExNDE4MVxsdHJwYXJcbGk3MjBcbGluNzIwXHJpMFxyaW4wXHFsXGZhYXV0b1xzbDI0MFxzbG11bHQxXHJ0bGNoXGFmMTJcYWxhbmcxMDI1XGFmczIyXGx0cmNoXGZzMjJcZjEyXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzN7XHJ0bGNoXGFmMTJcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjEzXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcY2hhcnJzaWQxMzExNDE4MVxpbnNyc2lkMTMxMTQxODFcY3MxMCA5Llx0YWIgfXtccnRsY2hcYWYxMlxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMTNcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xjaGFycnNpZDEzMTE0MTgxXGluc3JzaWQxMzExNDE4MVxjczEwXHVsIFNlbGxlciBDYXRlZ29yeTp9e1xydGxjaFxhZjEyXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYxM1xsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGNoYXJyc2lkMTMxMTQxODFcaW5zcnNpZDEzMTE0MTgxXGNzMTAgICBTZWxsZXIgaXMgYSBDYXRlZ29yeSAyIHNlbGxlciBpbiB0aGUgfXtccnRsY2hcYWYxMlxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMTNcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xjaGFycnNpZDEzMTE0MTgxXGluc3JzaWQxMzExNDE4MVxjczEwIE5vcnRoZWFzdH17XHJ0bGNoXGFmMTJcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjEzXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcY2hhcnJzaWQxMzExNDE4MVxpbnNyc2lkMTMxMTQxODFcY3MxMCAgUmVnaW9ufXtccnRsY2hcYWYxMlxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMTNcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xjaGFycnNpZDEzMTE0MTgxXGluc3JzaWQxMzExNDE4MVxjczEwICwgYW5kIGlzIGEgQ2F9e1xydGxjaFxhZjEyXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYxM1xsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGNoYXJyc2lkMTMxMTQxODFcaW5zcnNpZDEzMTE0MTgxXGNzMTAgdGVnb3J5IDF9e1xydGxjaFxhZjEyXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYxM1xsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGNoYXJyc2lkMTMxMTQxODFcaW5zcnNpZDEzMTE0MTgxXGNzMTAgIHNlbGxlciBpbiB0aGUgU291dGh3ZXN0LH17XHJ0bGNoXGFmMTJcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjEzXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcY2hhcnJzaWQxMzExNDE4MVxpbnNyc2lkMTMxMTQxODFcY3MxMCAgQ2VudHJhbH17XHJ0bGNoXGFmMTJcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjEzXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcY2hhcnJzaWQxMzExNDE4MVxpbnNyc2lkMTMxMTQxODFcY3MxMCAsIE5vcnRod2VzdH17XHJ0bGNoXGFmMTJcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjEzXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcY2hhcnJzaWQxMzExNDE4MVxpbnNyc2lkMTMxMTQxODFcY3MxMCAsIH17XHJ0bGNoXGFmMTJcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjEzXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcY2hhcnJzaWQxMzExNDE4MVxpbnNyc2lkMTMxMTQxODFcY3MxMCBTb3V0aGVhc3R9e1xydGxjaFxhZjEyXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYxM1xsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGNoYXJyc2lkMTMxMTQxODFcaW5zcnNpZDEzMTE0MTgxXGNzMTAgLCBhbmQgfXtccnRsY2hcYWYxMlxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMTNcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xjaGFycnNpZDEzMTE0MTgxXGluc3JzaWQxMzExNDE4MVxjczEwIFNQUH17XHJ0bGNoXGFmMTJcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjEzXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcY2hhcnJzaWQxMzExNDE4MVxpbnNyc2lkMTMxMTQxODFcY3MxMCAgUmVnaW9uc317XHJ0bGNoXGFmMTJcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjEzXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcY2hhcnJzaWQxMzExNDE4MVxpbnNyc2lkMTMxMTQxODFcY3MxMCAsIGFzIGRlZmluZWQgaW4gMTggQ0ZSIDM1LjM2KGEpLn17XHJ0bGNoXGFmMTJcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjEzXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcY2hhcnJzaWQxMzExNDE4MVxpbnNyc2lkMTMxMTQxODFcY3MxMFxwYXJ9XHBhcmRccGxhaW5caXRhcDBcczBcc2EwXGFzcGFscGhhMFxhc3BudW0wXHBhcmFyc2lkMTMxMTQxODFcbHRycGFyXGxpMFxsaW4wXHJpMFxyaW4wXHFsXGZhYXV0b1xzbDI0MFxzbG11bHQxXHJ0bGNoXGFmMTJcYWxhbmcxMDI1XGFmczIyXGx0cmNoXGZzMjJcZjEyXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzN7XHJ0bGNoXGFmMTJcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjEzXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcY2hhcnJzaWQxMzExNDE4MVxpbnNyc2lkMTMxMTQxODFcY3MxMFx1bFxwYXJ9XHBhcmRccGxhaW5caXRhcDBcczBcbHMyXHR4NzIwXHR4MTEyNFxmaS0zNjBcc2EyNDBcYXNwYWxwaGFcYXNwbnVtXHBhcmFyc2lkMTMxMTQxODFcbHRycGFyXGxpNzIwXGxpbjcyMFxyaTBccmluMFxxbFxmYWF1dG9cc2wyNDBcc2xtdWx0MVxydGxjaFxhZjEyXGFsYW5nMTAyNVxhZnMyMlxsdHJjaFxmczIyXGYxMlxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMze1xsaXN0dGV4dFxwYXJkXHBsYWluXHR4NzIwXGZpLTM2MFxsdHJwYXJcbGk3MjBcbGluNzIwXHJpMFxyaW4wXHFsXGZhYXV0b1xydGxjaFxhZjEyXGx0cmNoXGYxMyAxMC5cdGFiIH17XHJ0bGNoXGFmMTJcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjEzXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcY2hhcnJzaWQxMzExNDE4MVxpbnNyc2lkMTMxMTQxODFcY3MxMFx1bCBFZmZlY3RpdmUgRGF0ZS59e1xydGxjaFxhZjEyXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYxM1xsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGNoYXJyc2lkMTMxMTQxODFcaW5zcnNpZDEzMTE0MTgxXGNzMTAgICBUaGlzIFRhcmlmZiBzaGFsbCBiZWNvbWUgZWZmZWN0aXZlIG9uIHRoZSBkYXRlIHNwZWNpZmllZCBieSB0aGUgQ29tbWlzc2lvbi59e1xydGxjaFxhZjEyXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYxM1xsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGNoYXJyc2lkMTMxMTQxODFcaW5zcnNpZDEzMTE0MTgxXGNzMTBccGFyfVxwYXJkXHBsYWluXGl0YXAwXHMwXHNhMjAwXGFzcGFscGhhXGFzcG51bVxsdHJwYXJcbGkwXGxpbjBccmkwXHJpbjBccWxcZmFhdXRvXHNsMjc2XHNsbXVsdDFccnRsY2hcYWYxMlxhbGFuZzEwMjVcYWZzMjJcbHRyY2hcZnMyMlxmMTJcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tccnRsY2hcYWYxMlxhbGFuZzEwMjVcYWZzMjJcbHRyY2hcZnMyMlxmMTNcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xpbnNyc2lkMTUyODE3NDFcY3MxMFxwYXJ9e1wqXGxhdGVudHN0eWxlc1xsc2RzdGltYXgyNjdcbHNkbG9ja2VkZGVmMFxsc2RzZW1paGlkZGVuZGVmMVxsc2R1bmhpZGV1c2VkZGVmMVxsc2RxZm9ybWF0ZGVmMFxsc2Rwcmlvcml0eWRlZjk5e1xsc2Rsb2NrZWRleGNlcHRcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcWZvcm1hdDFcbHNkcHJpb3JpdHkwIE5vcm1hbDtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcWZvcm1hdDFcbHNkcHJpb3JpdHk5IGhlYWRpbmcgMTtcbHNkcWZvcm1hdDFcbHNkcHJpb3JpdHk5IGhlYWRpbmcgMjtcbHNkcWZvcm1hdDFcbHNkcHJpb3JpdHk5IGhlYWRpbmcgMztcbHNkcWZvcm1hdDFcbHNkcHJpb3JpdHk5IGhlYWRpbmcgNDtcbHNkcWZvcm1hdDFcbHNkcHJpb3JpdHk5IGhlYWRpbmcgNTtcbHNkcWZvcm1hdDFcbHNkcHJpb3JpdHk5IGhlYWRpbmcgNjtcbHNkcWZvcm1hdDFcbHNkcHJpb3JpdHk5IGhlYWRpbmcgNztcbHNkcWZvcm1hdDFcbHNkcHJpb3JpdHk5IGhlYWRpbmcgODtcbHNkcWZvcm1hdDFcbHNkcHJpb3JpdHk5IGhlYWRpbmcgOTtcbHNkcHJpb3JpdHkzOSB0b2MgMTtcbHNkcHJpb3JpdHkzOSB0b2MgMjtcbHNkcHJpb3JpdHkzOSB0b2MgMztcbHNkcHJpb3JpdHkzOSB0b2MgNDtcbHNkcHJpb3JpdHkzOSB0b2MgNTtcbHNkcHJpb3JpdHkzOSB0b2MgNjtcbHNkcHJpb3JpdHkzOSB0b2MgNztcbHNkcHJpb3JpdHkzOSB0b2MgODtcbHNkcHJpb3JpdHkzOSB0b2MgOTtcbHNkcWZvcm1hdDFcbHNkcHJpb3JpdHkzNSBjYXB0aW9uO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2RxZm9ybWF0MVxsc2Rwcmlvcml0eTEwIFRpdGxlO1xsc2Rwcmlvcml0eTEgRGVmYXVsdCBQYXJhZ3JhcGggRm9udDtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcWZvcm1hdDFcbHNkcHJpb3JpdHkxMSBTdWJ0aXRsZTtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcWZvcm1hdDFcbHNkcHJpb3JpdHkyMiBTdHJvbmc7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHFmb3JtYXQxXGxzZHByaW9yaXR5MjAgRW1waGFzaXM7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NTkgVGFibGUgR3JpZDtcbHNkdW5oaWRldXNlZDAgUGxhY2Vob2xkZXIgVGV4dDtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcWZvcm1hdDFcbHNkcHJpb3JpdHkxIE5vIFNwYWNpbmc7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjAgTGlnaHQgU2hhZGluZztcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk2MSBMaWdodCBMaXN0O1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTYyIExpZ2h0IEdyaWQ7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjMgTWVkaXVtIFNoYWRpbmcgMTtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk2NCBNZWRpdW0gU2hhZGluZyAyO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTY1IE1lZGl1bSBMaXN0IDE7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjYgTWVkaXVtIExpc3QgMjtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk2NyBNZWRpdW0gR3JpZCAxO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTY4IE1lZGl1bSBHcmlkIDI7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjkgTWVkaXVtIEdyaWQgMztcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk3MCBEYXJrIExpc3Q7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NzEgQ29sb3JmdWwgU2hhZGluZztcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk3MiBDb2xvcmZ1bCBMaXN0O1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTczIENvbG9yZnVsIEdyaWQ7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjAgTGlnaHQgU2hhZGluZyBBY2NlbnQgMTtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk2MSBMaWdodCBMaXN0IEFjY2VudCAxO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTYyIExpZ2h0IEdyaWQgQWNjZW50IDE7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjMgTWVkaXVtIFNoYWRpbmcgMSBBY2NlbnQgMTtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk2NCBNZWRpdW0gU2hhZGluZyAyIEFjY2VudCAxO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTY1IE1lZGl1bSBMaXN0IDEgQWNjZW50IDE7XGxzZHVuaGlkZXVzZWQwIFJldmlzaW9uO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2RxZm9ybWF0MVxsc2Rwcmlvcml0eTM0IExpc3QgUGFyYWdyYXBoO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2RxZm9ybWF0MVxsc2Rwcmlvcml0eTI5IFF1b3RlO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2RxZm9ybWF0MVxsc2Rwcmlvcml0eTMwIEludGVuc2UgUXVvdGU7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjYgTWVkaXVtIExpc3QgMiBBY2NlbnQgMTtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk2NyBNZWRpdW0gR3JpZCAxIEFjY2VudCAxO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTY4IE1lZGl1bSBHcmlkIDIgQWNjZW50IDE7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjkgTWVkaXVtIEdyaWQgMyBBY2NlbnQgMTtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk3MCBEYXJrIExpc3QgQWNjZW50IDE7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NzEgQ29sb3JmdWwgU2hhZGluZyBBY2NlbnQgMTtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk3MiBDb2xvcmZ1bCBMaXN0IEFjY2VudCAxO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTczIENvbG9yZnVsIEdyaWQgQWNjZW50IDE7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjAgTGlnaHQgU2hhZGluZyBBY2NlbnQgMjtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk2MSBMaWdodCBMaXN0IEFjY2VudCAyO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTYyIExpZ2h0IEdyaWQgQWNjZW50IDI7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjMgTWVkaXVtIFNoYWRpbmcgMSBBY2NlbnQgMjtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk2NCBNZWRpdW0gU2hhZGluZyAyIEFjY2VudCAyO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTY1IE1lZGl1bSBMaXN0IDEgQWNjZW50IDI7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjYgTWVkaXVtIExpc3QgMiBBY2NlbnQgMjtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk2NyBNZWRpdW0gR3JpZCAxIEFjY2VudCAyO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTY4IE1lZGl1bSBHcmlkIDIgQWNjZW50IDI7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjkgTWVkaXVtIEdyaWQgMyBBY2NlbnQgMjtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk3MCBEYXJrIExpc3QgQWNjZW50IDI7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NzEgQ29sb3JmdWwgU2hhZGluZyBBY2NlbnQgMjtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk3MiBDb2xvcmZ1bCBMaXN0IEFjY2VudCAyO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTczIENvbG9yZnVsIEdyaWQgQWNjZW50IDI7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjAgTGlnaHQgU2hhZGluZyBBY2NlbnQgMztcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk2MSBMaWdodCBMaXN0IEFjY2VudCAzO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTYyIExpZ2h0IEdyaWQgQWNjZW50IDM7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjMgTWVkaXVtIFNoYWRpbmcgMSBBY2NlbnQgMztcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk2NCBNZWRpdW0gU2hhZGluZyAyIEFjY2VudCAzO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTY1IE1lZGl1bSBMaXN0IDEgQWNjZW50IDM7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjYgTWVkaXVtIExpc3QgMiBBY2NlbnQgMztcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk2NyBNZWRpdW0gR3JpZCAxIEFjY2VudCAzO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTY4IE1lZGl1bSBHcmlkIDIgQWNjZW50IDM7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjkgTWVkaXVtIEdyaWQgMyBBY2NlbnQgMztcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk3MCBEYXJrIExpc3QgQWNjZW50IDM7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NzEgQ29sb3JmdWwgU2hhZGluZyBBY2NlbnQgMztcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk3MiBDb2xvcmZ1bCBMaXN0IEFjY2VudCAzO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTczIENvbG9yZnVsIEdyaWQgQWNjZW50IDM7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjAgTGlnaHQgU2hhZGluZyBBY2NlbnQgNDtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk2MSBMaWdodCBMaXN0IEFjY2VudCA0O1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTYyIExpZ2h0IEdyaWQgQWNjZW50IDQ7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjMgTWVkaXVtIFNoYWRpbmcgMSBBY2NlbnQgNDtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk2NCBNZWRpdW0gU2hhZGluZyAyIEFjY2VudCA0O1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTY1IE1lZGl1bSBMaXN0IDEgQWNjZW50IDQ7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjYgTWVkaXVtIExpc3QgMiBBY2NlbnQgNDtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk2NyBNZWRpdW0gR3JpZCAxIEFjY2VudCA0O1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTY4IE1lZGl1bSBHcmlkIDIgQWNjZW50IDQ7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjkgTWVkaXVtIEdyaWQgMyBBY2NlbnQgNDtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk3MCBEYXJrIExpc3QgQWNjZW50IDQ7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NzEgQ29sb3JmdWwgU2hhZGluZyBBY2NlbnQgNDtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk3MiBDb2xvcmZ1bCBMaXN0IEFjY2VudCA0O1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTczIENvbG9yZnVsIEdyaWQgQWNjZW50IDQ7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjAgTGlnaHQgU2hhZGluZyBBY2NlbnQgNTtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk2MSBMaWdodCBMaXN0IEFjY2VudCA1O1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTYyIExpZ2h0IEdyaWQgQWNjZW50IDU7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjMgTWVkaXVtIFNoYWRpbmcgMSBBY2NlbnQgNTtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk2NCBNZWRpdW0gU2hhZGluZyAyIEFjY2VudCA1O1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTY1IE1lZGl1bSBMaXN0IDEgQWNjZW50IDU7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjYgTWVkaXVtIExpc3QgMiBBY2NlbnQgNTtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk2NyBNZWRpdW0gR3JpZCAxIEFjY2VudCA1O1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTY4IE1lZGl1bSBHcmlkIDIgQWNjZW50IDU7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjkgTWVkaXVtIEdyaWQgMyBBY2NlbnQgNTtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk3MCBEYXJrIExpc3QgQWNjZW50IDU7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NzEgQ29sb3JmdWwgU2hhZGluZyBBY2NlbnQgNTtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk3MiBDb2xvcmZ1bCBMaXN0IEFjY2VudCA1O1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTczIENvbG9yZnVsIEdyaWQgQWNjZW50IDU7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjAgTGlnaHQgU2hhZGluZyBBY2NlbnQgNjtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk2MSBMaWdodCBMaXN0IEFjY2VudCA2O1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTYyIExpZ2h0IEdyaWQgQWNjZW50IDY7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjMgTWVkaXVtIFNoYWRpbmcgMSBBY2NlbnQgNjtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk2NCBNZWRpdW0gU2hhZGluZyAyIEFjY2VudCA2O1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTY1IE1lZGl1bSBMaXN0IDEgQWNjZW50IDY7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjYgTWVkaXVtIExpc3QgMiBBY2NlbnQgNjtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk2NyBNZWRpdW0gR3JpZCAxIEFjY2VudCA2O1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTY4IE1lZGl1bSBHcmlkIDIgQWNjZW50IDY7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjkgTWVkaXVtIEdyaWQgMyBBY2NlbnQgNjtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk3MCBEYXJrIExpc3QgQWNjZW50IDY7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NzEgQ29sb3JmdWwgU2hhZGluZyBBY2NlbnQgNjtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk3MiBDb2xvcmZ1bCBMaXN0IEFjY2VudCA2O1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTczIENvbG9yZnVsIEdyaWQgQWNjZW50IDY7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHFmb3JtYXQxXGxzZHByaW9yaXR5MTkgU3VidGxlIEVtcGhhc2lzO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2RxZm9ybWF0MVxsc2Rwcmlvcml0eTIxIEludGVuc2UgRW1waGFzaXM7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHFmb3JtYXQxXGxzZHByaW9yaXR5MzEgU3VidGxlIFJlZmVyZW5jZTtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcWZvcm1hdDFcbHNkcHJpb3JpdHkzMiBJbnRlbnNlIFJlZmVyZW5jZTtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcWZvcm1hdDFcbHNkcHJpb3JpdHkzMyBCb29rIFRpdGxlO1xsc2Rwcmlvcml0eTM3IEJpYmxpb2dyYXBoeTtcbHNkcWZvcm1hdDFcbHNkcHJpb3JpdHkzOSBUT0MgSGVhZGluZzt9fX0=</record_binary_data>
      <record_plain_text>Coolidge Solar I, LLC

Availability.  Coolidge Solar I, LLC (“Seller”) makes available under this Tariff, Volume No. 1 (the “Tariff”): 
Electric energy and capacity available under this Rate Schedule to any purchaser for resale.
PJM:  Seller offers regulation and frequency response service, energy imbalance service, and operating reserve service (which includes spinning, 10-minute, and 30-minute reserves) for sale into the market administered by the PJM Interconnection, L.L.C. (“PJM”) and, where the PJM Open Access Transmission Tariff permits, the self-supply of these services to purchasers for a bilateral sale that is used to satisfy the ancillary services requirements of the PJM Office of Interconnection;
New York:  Seller offers regulation and frequency response service, and operating reserve service (which includes 10-minute non-synchronous, 30-minute operating reserves, 10-minute spinning reserves, and 10-minute non-spinning reserves) for sale to purchasers in the market administered by the New York Independent System Operator, Inc. (“NYISO”);
New England:  Seller offers regulation and frequency response service (automatic generator control), operating reserve service (which includes 10-minute spinning reserve, 10-minute non-spinning reserve, and 30-minute reserve service) to purchasers within the markets administered by the ISO New England, Inc. (“ISO-NE”);
California:  Seller offers regulation service, spinning reserve service, and non-spinning reserve service to the California Independent System Operator Corporation (“CAISO”) and to others that are self-supplying ancillary services to the CAISO;
Midcontinent ISO:  Seller offers regulation service and operating reserve service (which include 10-minute spinning reserve and 10-minute supplemental reserve) for sale to the Midcontinent Independent System Operator, Inc. (“Midcontinent ISO”) and to others that are self-supplying ancillary services to Midcontinent ISO; and
Southwest Power Pool:  Seller offers regulation service and operating reserve service (which include 10-minute spinning reserve and 10-minute supplemental reserve) for sale to the Southwest Power Pool, Inc. (“SPP”) and to others that are self-supplying ancillary services to SPP.
Third-party ancillary services:  Seller offers Regulation Service, Reactive Supply and Voltage Control Service, Energy and Generator Imbalance Service, Operating Reserve-Spinning, Operating Reserve-Supplemental, and Primary Frequency Response Service.  Sales will not include the following: (1) sales to an RTO or an ISO, i.e., where that entity has no ability to self-supply ancillary services but instead depends on third parties; and (2) sales to a traditional, franchised public utility affiliated with the third-party supplier, or sales where the underlying transmission service is on the system of the public utility affiliated with the third-party supplier. Sales of Operating Reserve-Spinning and Operating Reserve-Supplemental will not include sales to a public utility that is purchasing ancillary services to satisfy its own open access transmission tariff requirements to offer ancillary services to its own customers, except where the Commission has granted authorization. Sales of Regulation Service and Reactive Supply and Voltage Control Service will not include sales to a public utility that is purchasing ancillary services to satisfy its own open access transmission tariff requirements to offer ancillary services to its own customers, except at rates not to exceed the buying public utility transmission provider’s OATT rate for the same service or where the Commission has granted authorization..
Applicability.  This Tariff is applicable to the following sales by Seller, to the extent such sales are subject to the jurisdiction of the Commission and not made pursuant to another tariff or rate schedule on file with the Commission:  (a) all wholesale sales of electric energy and capacity; and (b) all sales into the ancillary service markets described in Section 1 above.  
Rates.  All sales made under this Tariff shall be made at the rates established between the purchaser and Seller.
Duration.  This Tariff shall continue in effect until terminated or changed and such termination or change becomes effective in accordance with any applicable regulatory requirements.
Modifications.  Seller may unilaterally apply, under Federal Power Act Section 205 and the regulations promulgated thereunder, to the Commission or other regulatory agency having jurisdiction for a modification of this Tariff.
Other Terms and Conditions.  All other terms and conditions shall be established by agreement between the purchaser and Seller.
Compliance with Commission Regulations.  Seller shall comply with the provisions of 18 C.F.R. Part 35, Subpart H, as applicable, and with any conditions the Commission imposes in its orders concerning Seller’s market-based rate authority, including orders in which the Commission authorizes Seller to engage in affiliate sales under this tariff or otherwise restricts or limits the Seller’s market-based rate authority.  Failure to comply with the applicable provisions of 18 C.F.R. Part 35, Subpart H and with any orders of the Commission concerning Seller’s market-based rate authority, will constitute a violation of this Tariff.


Limitations and Exemptions Regarding Market-Based Rate Authority.  
Seller has authorization for the following waivers:

Waiver of requirements of Parts 41, 101(with the exception that waiver of the provisions of Part 101 that apply to hydropower licensees is not granted with respect to licensed hydropower projects), and 141, except Sections 141.14 and 141.15;

Waiver of the reporting requirements of Subparts B and C of Part 35,
except Sections 35.12(a), 35.13(b), 35.15, and 35.16; and

Blanket authorization under Part 34 of all future issuances of securities
	and assumption of liability.
Notwithstanding the Applicability under Section 2 above, with regard to non-affiliated persons or entities, Seller shall not make wholesale sales of energy or capacity to, or purchases of energy or capacity from, peninsular Florida without first receiving advance approval by the Federal Energy Regulatory Commission pursuant to a separate filing under Section 205 of the Federal Power Act. See Coolidge Solar I, LLC, Docket No. ER18-____-000.  
9.	Seller Category:  Seller is a Category 2 seller in the Northeast Region, and is a Category 1 seller in the Southwest, Central, Northwest, Southeast, and SPP Regions, as defined in 18 CFR 35.36(a).

Effective Date.  This Tariff shall become effective on the date specified by the Commission.</record_plain_text>
      <record_change_type>NEW</record_change_type>
      <filing_id>956</filing_id>
      <filing_title>Coolidge Solar I, LLC Application for Market-Based Rate Authority</filing_title>
      <filing_type>390</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2018-08-27</current_effective_date>
      <ferc_order_date>2018-08-20</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
  </ferc_filing_data>
</Document>