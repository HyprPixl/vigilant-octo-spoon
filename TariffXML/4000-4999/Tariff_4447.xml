<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Document xmlns="http://ferc.gov/etariffExport.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ferc_filing_data>
    <schema_version>2</schema_version>
    <company_id>C005363</company_id>
    <lead_applicant_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
    <tariff_id>221</tariff_id>
    <tariff_title>Market-Based Rate Tariff</tariff_title>
    <tariff_export_date>2025-09-16T20:20Z</tariff_export_date>
    <export_schema_version>2</export_schema_version>
    <record_data>
      <record_id>2263</record_id>
      <option_code>A</option_code>
      <record_title>Volume No. 1</record_title>
      <record_content_desc>Market-Based Rate Tariff</record_content_desc>
      <record_version_num>1.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>1073741824</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2019-04-17</proposed_effective_date>
      <priority_order>600</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>Brady Interconnection, LLC

Availability.  Brady Interconnection, LLC (“Seller”) makes available under this Tariff, Volume No. 1 (the “Tariff”) in the Southwest region: 
Electric energy and capacity available under this Rate Schedule to any purchaser for resale.
PJM:  Seller offers regulation and frequency response service, energy imbalance service, and operating reserve service (which includes spinning, 10-minute, and 30-minute reserves) for sale into the market administered by the PJM Interconnection, L.L.C. (“PJM”) and, where the PJM Open Access Transmission Tariff permits, the self-supply of these services to purchasers for a bilateral sale that is used to satisfy the ancillary services requirements of the PJM Office of Interconnection;
New York:  Seller offers regulation and frequency response service, and operating reserve service (which includes 10-minute non-synchronous, 30-minute operating reserves, 10-minute spinning reserves, and 10-minute non-spinning reserves) for sale to purchasers in the market administered by the New York Independent System Operator, Inc. (“NYISO”);
New England:  Seller offers regulation and frequency response service (automatic generator control), operating reserve service (which includes 10-minute spinning reserve, 10-minute non-spinning reserve, and 30-minute reserve service) to purchasers within the markets administered by the ISO New England, Inc. (“ISO-NE”);
California:  Seller offers regulation service, spinning reserve service, and non-spinning reserve service to the California Independent System Operator Corporation (“CAISO”) and to others that are self-supplying ancillary services to the CAISO;
Midcontinent ISO:  Seller offers regulation service and operating reserve service (which include 10-minute spinning reserve and 10-minute supplemental reserve) for sale to the Midcontinent Independent System Operator, Inc. (“Midcontinent ISO”) and to others that are self-supplying ancillary services to Midcontinent ISO; and
Southwest Power Pool:  Seller offers regulation service and operating reserve service (which include 10-minute spinning reserve and 10-minute supplemental reserve) for sale to the Southwest Power Pool, Inc. (“SPP”) and to others that are self-supplying ancillary services to SPP.
Third-party ancillary services:  Seller offers Regulation and Frequency Response Service, Reactive Supply and Voltage Control Service, Energy and Generator Imbalance Service, Operating Reserve-Spinning, and Operating Reserve-Supplemental.  Sales will not include the following: (1) sales to an RTO or an ISO, i.e., where that entity has no ability to self-supply ancillary services but instead depends on third parties; and (2) sales to a traditional, franchised public utility affiliated with the third-party supplier, or sales where the underlying transmission service is on the system of the public utility affiliated with the third-party supplier.  Sales of Operating Reserve-Spinning and Operating Reserve-Supplemental will not include sales to a public utility that is purchasing ancillary services to satisfy its own open access transmission tariff requirements to offer ancillary services to its own customers, except where the Commission has granted authorization. Sales of Regulation and Frequency Response Service and Reactive Supply and Voltage Control Service will not include sales to a public utility that is purchasing ancillary services to satisfy its own open access transmission tariff requirements to offer ancillary services to its own customers, except at rates not to exceed the buying public utility transmission provider’s OATT rate for the same service or where the Commission has granted authorization.
Applicability.  This Tariff is applicable to the following sales by Seller, to the extent such sales are subject to the jurisdiction of the Commission and not made pursuant to another tariff or rate schedule on file with the Commission:  (a) all wholesale sales of electric energy and capacity; and (b) all sales into the ancillary service markets described in Section 1 above.  
Rates.  All sales made under this Tariff shall be made at the rates established between the purchaser and Seller.
Duration.  This Tariff shall continue in effect until terminated or changed and such termination or change becomes effective in accordance with any applicable regulatory requirements.
Modifications.  Seller may unilaterally apply, under Federal Power Act Section 205 and the regulations promulgated thereunder, to the Commission or other regulatory agency having jurisdiction for a modification of this Tariff.
Other Terms and Conditions.  All other terms and conditions shall be established by agreement between the purchaser and Seller.
Compliance with Commission Regulations.  Seller shall comply with the provisions of 18 C.F.R. Part 35, Subpart H, as applicable, and with any conditions the Commission imposes in its orders concerning Seller’s market-based rate authority, including orders in which the Commission authorizes Seller to engage in affiliate sales under this tariff or otherwise restricts or limits the Seller’s market-based rate authority.  Failure to comply with the applicable provisions of 18 C.F.R. Part 35, Subpart H and with any orders of the Commission concerning Seller’s market-based rate authority, will constitute a violation of this Tariff.


Limitations and Exemptions Regarding Market-Based Rate Authority.  
Seller has authorization for the following waivers:

Waiver of requirements of Parts 41, 101(with the exception that waiver of the provisions of Part 101 that apply to hydropower licensees is not granted with respect to licensed hydropower projects), and 141, except Sections 141.14 and 141.15;

Waiver of the reporting requirements of Subparts B and C of Part 35,
except Sections 35.12(a), 35.13(b), 35.15, and 35.16; and

Blanket authorization under Part 34 of all future issuances of securities
	and assumption of liability.
Notwithstanding the Applicability under Section 2 above, with regard to non-affiliated persons or entities, Seller shall not make wholesale sales of energy or capacity to, or purchases of energy or capacity from, peninsular Florida without first receiving advance approval by the Federal Energy Regulatory Commission pursuant to a separate filing under Section 205 of the Federal Power Act. See Brady Interconnection, LLC, Docket No. ER16-2453-000, (letter order issued September 22, 2016).  
9.	Seller Category:  Seller is a Category 2 seller in the SPP Region, and is a Category 1 seller in the Northeast, Central, Northwest, Southwest, and Southeast Regions, as defined in 18 CFR 35.36(a).

Effective Date.  This Tariff shall become effective on the date specified by the Commission.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>1010</filing_id>
      <filing_title>Brady Interconnection, LLC Triennial Amendment to Market-Based Rate Tariff</filing_title>
      <filing_type>1150</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2019-04-17</current_effective_date>
      <ferc_order_date>2019-05-28</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
  </ferc_filing_data>
</Document>