<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Document xmlns="http://ferc.gov/etariffExport.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ferc_filing_data>
    <schema_version>2</schema_version>
    <company_id>C005111</company_id>
    <lead_applicant_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
    <tariff_id>3</tariff_id>
    <tariff_title>Agreements</tariff_title>
    <tariff_export_date>2025-09-16T20:19Z</tariff_export_date>
    <export_schema_version>2</export_schema_version>
    <record_data>
      <record_id>1002</record_id>
      <option_code>A</option_code>
      <record_title>Shared Facilities Agreement</record_title>
      <record_content_desc>Section 2</record_content_desc>
      <record_version_num>1.4.0</record_version_num>
      <record_narrative_name>N/A</record_narrative_name>
      <collation_value>2000</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-09-22</proposed_effective_date>
      <priority_order>504</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>FOURTH AMENDED AND RESTATED
BIG SKY SHARED FACILITIES AGREEMENT

among

Antelope Big Sky Ranch LLC,

Antelope DSR 1, LLC,
	
Antelope DSR 2, LLC, 

Antelope DSR 3, LLC,

Bayshore Solar A, LLC,

Bayshore Solar B, LLC,

Bayshore Solar C, LLC

Elevation Solar C LLC,

Solverde 1, LLC,

Summer Solar LLC,

Western Antelope Blue Sky Ranch B LLC,

Big Sky North, LLC,

and

sPower Services, LLC

August 10, 2020 
1.	DEFINITIONS AND INTERPRETATION	3
1.1	Definitions	3
2.	TERM	12
3.	SHARED ASSETS	12
3.1	Shared Facilities	12
3.2	Ownership Interests in Shared Facilities	12
3.3	Shared Premises Agreements and Land Matters	14
3.4	Access to Shared Facilities	14
3.5	No Interference, Cooperation and Over-Burdening	15
3.6	Additional Real Property Rights and Facilities	15
3.7	Conditions to Installation of Additional Shared Facilities or Connecting Projects to the Shared Facilities	16
4.	SHARED EXPENSES	17
4.1	Liabilities for the Account of the Co-Owners; No Charging of Fees, Premiums or Profits	17
4.2	Shared Expenses	18
4.3	Invoicing; Late Payments	19
5.	USE OF SHARED ASSETS	19
5.1	Use by Projects	19
5.2	Shared Facilities Representatives	19
5.3	Liens	20
6.	OBLIGATIONS AND CERTAIN RIGHTS OF THE CO-OWNERS	20
6.1	Standards of Performance; Action, Omission or Failure to Perform an Obligation That Results in a Material Adverse Effect on Another Co-Owner or That Co-Owner’s Project or an IE Project	20
6.2	Taxes	21
6.3	Environmental Compliance	21
6.4	Interconnection	22
6.5	Meteorological and Operational Data	22
6.6	Voting or Approval Rights	22
6.7	Relationship of the Co-Owners	22
6.8	Regulatory Status	22
6.9	No Dedication of Property; No Public Access	23
6.10	Crossing and Collocation Rights	23
6.11	SCE Collocation of Monitoring and Control Facilities with Shared Facilities	24
6.12	Cooperation	24
6.13	Co-Owners’ Responsibilities to Manager	24
6.14	Admission of New Co-Owners	25
6.15	Outage or Disconnection	25
7.	APPOINTMENT OF MANAGER	25
7.1	Engagement of the Manager	25
7.2	Relationship	26
7.3	Removal of the Manager	26
7.4	Manager Fees and Reimbursement	28
8.	DUTIES OF THE MANAGER	28
8.1	In General	29
8.2	Specific Authority	29
8.3	Limitation on Authority	30
8.4	Additional Shared Assets	31
8.5	Reporting; Notices; Records	31
8.6	Access; Audit Rights	32
8.7	Shared Facilities O and M Budget	32
8.8	Emergencies	33
8.9	Cooperation with Lenders and Other Financing Parties	33
8.10	Obligations	34
8.11	Inspection by Co-Owners	34
8.12	Risk of Loss	34
8.13	Manager Representative	34
8.14	Standards of Performance	35
8.15	Assignment of Warranties	35
8.16	Rights of Co-Owners; License of Co-Owner Property	35
8.17	Manager Duties Related to Project Specific Assets	36
9.	REPRESENTATIONS AND WARRANTIES	36
9.1	Representations and Warranties	36
9.2	Exclusivity of Warranties	37
10.	FORCE MAJEURE	37
11.	INDEMNIFICATION	37
11.1	Indemnity by the Manager	37
11.2	Co-Owner Indemnification	37
11.3	Notice and Legal Defense	38
11.4	Failure to Defend Action	38
11.5	Indemnification Amount	39
11.6	Supremacy and Survival	39
11.7	Waiver of Consequential Damages	39
12.	INSURANCE	39
12.1	Co-Owners’ Insurance Requirements	39
12.2	Manager’s Insurance Requirements	39
12.3	Evidence, Terms and Modification of Insurance	39
13.	CONFIDENTIALITY	40
13.1	Confidentiality	40
14.	CO-OWNER EVENTS OF DEFAULT; REMEDIES; LIMITATION OF LIABILITY	41
14.1	Events of Default	41
14.2	Remedies	42
14.3	Reimbursement of Expenses to Cure	42
14.4	Remedies Cumulative	43
14.5	Waiver of Partition	43
14.6	Limitation of Liability	43
15.	[Reserved]	43
16.	NOTICES	43
17.	MISCELLANEOUS PROVISIONS	44
17.1	Transfers	44
17.2	Right to Encumber	44
17.3	Governing Law	46
17.4	Compliance with Laws	46
17.5	Survival	46
17.6	Effect of Waiver	46
17.7	Severability	46
17.8	Entire Agreement; Amendments	46
17.9	Not for the Benefit of Third Parties	47
17.10	Counterparts	47
17.11	Further Assurances	47
17.12	No Recourse to Affiliates	47
17.13	Successors and Assigns	47
17.14	Competing Ventures	47
17.15	Memorandum	47
17.16	Interpretation	48
 
FOURTH AMENDED AND RESTATED
BIG SKY SHARED FACILITIES AGREEMENT

This FOURTH AMENDED AND RESTATED BIG SKY SHARED FACILITIES AGREEMENT (the “Agreement”), dated as of August 10, 2020 (the “Effective Date”), is entered into by and among Elevation Solar C LLC, a Delaware limited liability company (“Elevation Solar C”), Western Antelope Blue Sky Ranch B LLC, a Delaware limited liability company (“WABSRB”), Antelope Big Sky Ranch LLC, a Delaware limited liability company (“Antelope Big Sky Ranch”), Summer Solar LLC, a Delaware limited liability company (“Summer Solar”),  Antelope DSR 1, LLC, a Delaware limited liability company (“Antelope DSR 1”), Antelope DSR 2, LLC, a Delaware limited liability company (“Antelope DSR 2”), Antelope DSR 3, LLC, a Delaware limited liability company (“Antelope DSR 3”), Solverde 1, LLC, a Delaware limited liability company (“Solverde 1”), Bayshore Solar A, LLC, a Delaware limited liability company (“Bayshore Solar A”), Bayshore Solar B, LLC, a Delaware limited liability company (“Bayshore Solar B”), Bayshore Solar C, LLC, a Delaware limited liability company (“Bayshore Solar C”), Big Sky North, LLC, a Delaware limited liability company (“Big Sky North”), (each individually a “Co-Owner” and collectively “Co-Owners”), and sPower Services, LLC (f/k/a Sustainable Power Services, LLC), a Delaware limited liability company (“SP Services”), as manager (“Manager”).  Manager, Elevation Solar C, WABSRB, Antelope Big Sky Ranch, Summer Solar, Antelope DSR 1, Antelope DSR 2, Antelope DSR 3, Solverde 1, Bayshore Solar A, Bayshore Solar B, Bayshore Solar C, and Big Sky North are sometimes referred to collectively herein as the “Parties,” and each separately as a “Party.”
RECITALS:

A.	With the exception of Big Sky North, each of the Co-Owners own and operate electricity generation and transmission projects, including photovoltaic energy generation and, if and when applicable, energy storage projects on real property in Los Angeles County, California.
B.	Antelope Big Sky Ranch’s energy project includes photovoltaic modules, inverters, and related infrastructure (the “Antelope Big Sky Ranch Project”) and is located approximately on the real property described on Exhibit A-1 attached hereto (the “Antelope Big Sky Ranch Project Site”).  Antelope DSR 1’s energy project includes photovoltaic modules, inverters, and related infrastructure (the “Antelope DSR 1 Project”) and is located approximately on the real property described on Exhibit A-2 attached hereto (the “Antelope DSR 1 Project Site”).  Antelope DSR 2’s energy project includes photovoltaic modules, inverters, and related infrastructure (the “Antelope DSR 2 Project”) and is located approximately on the real property described on Exhibit A-3 attached hereto (the “Antelope DSR 2 Project Site”).  Antelope DSR 3’s energy project includes photovoltaic modules, inverters, and related infrastructure (the “Antelope DSR 3 Project”) and is located approximately on the real property described on Exhibit A-4 attached hereto (the “Antelope DSR 3 Project Site”).  Bayshore Solar A’s energy project includes photovoltaic modules, inverters, and related infrastructure (the “Bayshore Solar A Project”) and is located approximately on the real property described on Exhibit A-5 attached hereto (the “Bayshore Solar A Project Site”).  Bayshore Solar B’s energy project includes photovoltaic modules, inverters, and related infrastructure (the “Bayshore Solar B Project”) and is located approximately on the real property described on Exhibit A-6 attached hereto (the “Bayshore Solar B Project Site”).  Bayshore Solar C’s energy project includes photovoltaic modules, inverters, and related infrastructure (the “Bayshore Solar C Project”) and is located approximately on the real property described on Exhibit A-7 attached hereto (the “Bayshore Solar C Project Site”).  Elevation Solar C’s energy project includes photovoltaic modules, inverters, and related infrastructure (the “Elevation Solar C Project”) and is located approximately on the real property described on Exhibit A-8 attached hereto (the “Elevation Solar C Project Site”).  Solverde 1’s energy project includes photovoltaic modules, inverters, and related infrastructure (the “Solverde 1 Project”) and is located approximately on the real property described on Exhibit A-9 attached hereto (the “Solverde 1 Project Site”).  Summer Solar’s energy project includes photovoltaic modules, inverters, and related infrastructure (the “Summer Solar Project”) and is located approximately on the real property described on Exhibit A-10 attached hereto (the “Summer Solar Project Site”).  WABSRB’s energy project includes photovoltaic modules, inverters, and related infrastructure (the “WABSRB Project”) and is located approximately on the real property described on Exhibit A-11 attached hereto (the “WABSRB Project Site”). With the exception of Big Sky North, each Co-Owner has submitted a request to CAISO to add battery energy storage capacity to its Project, and may, subject to receiving prior consent from the applicable Financing Parties pursuant to Section 17.17, if applicable, add such capacity following the date of this Agreement.
C.	Big Sky North is not developing a separate electricity generation project. Instead, Big Sky North will construct and operate transmission facilities designed to interconnect up to 650 MW of capacity to the Big Sky Substation (“IE Transmission Facilities”) on real property in Los Angeles County, California (the “IE Transmission Project Site”). Big Sky North may license such capacity on the IE Transmission Facilities to other companies that that are eligible for service under the MISA (subject to each such company also satisfying the terms and conditions herein, an “IE Company”). Each IE Company will be separately developing and constructing, owning and operating a photovoltaic electricity generation or energy storage project on certain real property in Los Angeles County, California that will interconnect to SCE’s Antelope Substation (the “IE Projects”).
D.	From time to time herein, the Co-Owners’ respective project sites described above may be each individually referred to as a “Project Site,” and collectively referred to as the “Project Sites,” and the Co-Owners’ respective projects described above are referred to each individually as a “Project” and collectively as the “Projects.”  Big Sky North’s IE Transmission Project Site shall be considered its Project Site and Big Sky North’s IE Transmission Facilities shall be considered its Project for purposes of this Agreement.
E.	Each Co-Owner holds or shall hold its own individual real property rights (by fee ownership, lease, easement, right of way, or otherwise) to its respective Project Site.
F.	Various Parties are also holders of, or are acquiring, certain fee, lease, easement, license and permit rights, all of which are more particularly described on Exhibit B-1 (as amended and supplemented from time to time, the “Shared Premises Agreements”), to use certain real property more particularly described on Exhibit B-2 (as amended and supplemented from time to time, the “Shared Premises”).  Various Parties may require the use and possession of specified portions of the Shared Premises for the construction, operation, and maintenance of their respective Projects.
G.	The Parties’ use of the Shared Premises shall also include the construction, operation, and maintenance of certain common infrastructure facilities supporting the construction, operation and maintenance of their respective Projects, including electrical transmission facilities, operations and maintenance facilities, access roads, and lay-down and staging areas for construction, all more particularly described below as the “Shared Facilities.”
H.	The Parties wish to set forth herein their respective rights and obligations regarding the joint design, procurement, development, construction, installation, ownership, use, maintenance, repair, replacement of, and additions to the Shared Facilities and the Shared Premises.
I.	The Co-Owners also wish to contract with Manager for the provision of certain limited services to be performed at the pleasure of the Co-Owners with respect to the Shared Facilities and the Shared Premises, and the Manager wishes to accept said engagement, on the terms and conditions contained herein.  
J.	The Parties, with the exception of Big Sky North, have entered into that certain Antelope Solar Farm Project Shared Facilities Agreement, dated as of May 24, 2016, as evidenced by that certain Memorandum of Shared Facilities Agreement dated May 24, 2016 and recorded May 25, 2016 as Instrument No. 20160594886, as amended and restated by that certain Antelope Solar Farm Project Amended and Restated Shared Facilities Agreement, dated as of September 7, 2016, a memorandum of which recorded September 9, 2016 as Instrument No. 20161082009, and as further amended and restated by that certain Antelope Solar Farm Project Second Amended and Restated Shared Facilities Agreement, dated as of July 28, 2017, a memorandum of which recorded July 31, 2017 as Instrument No. 20170855136, and as further amended and restated by the Third Amended and Restated Big Sky Shared Facilities Agreement, a memorandum of which was recorded August 2, 2018 as Instrument No. 20180777581, all of Official Records of Los Angeles County, California (the “Original Agreement”).
K.	The Parties desire to further amend and restate the Original Agreement as of the Effective Date on the terms and conditions set forth herein in order to address the inclusion of energy storage in Projects and IE Projects as part of the Agreement.
AGREEMENT:

NOW, THEREFORE, in consideration of the mutual covenants contained in this Agreement and other good and valuable consideration, the receipt and sufficiency of which is acknowledged, the Parties agree as follows:
1.	DEFINITIONS AND INTERPRETATION
1.1	Definitions.  Unless otherwise noted, capitalized terms not defined in the body of this Agreement have the following meanings.
“Additional Shared Assets” has the meaning set forth in Section 3.6.
“Additional Shared Facilities” has the meaning set forth in Section 3.6.
“Additional Shared Premises” has the meaning set forth in Section 3.6.
“Affiliate” means, with respect to any Party, any Person directly or indirectly controlling, controlled by or under common control with such Party.  The term “control” and correlative terms includes the possession, directly or indirectly and whether acting alone or in conjunction with others, of the authority to direct or cause the direction of the management or policies of a Person, whether through the ownership of voting securities, by contract, or otherwise.
“Agreement” has the meaning set forth in the preamble above, as amended and modified from time to time as permitted herein.
“Antelope Big Sky Ranch” has the meaning set forth in the preamble.
“Antelope Big Sky Ranch Project,” “Antelope DSR 1 Project,” “Antelope DSR 2 Project,” “Antelope DSR 3 Project,” “Bayshore Solar A Project,” “Bayshore Solar B Project,” “Bayshore Solar C Project,” “Elevation Solar C Project,” “Summer Solar Project,” “Solverde 1 Project,” “WABSRB Project,” have the meanings set forth in Recital B above.
“Antelope Big Sky Ranch Project Site,” “Antelope DSR 1 Project Site,” “Antelope DSR 2 Project Site,” “Antelope DSR 3 Project Site,” “Bayshore Solar A Project Site,” “Bayshore Solar B Project Site,” “Bayshore Solar C Project Site,” “Elevation Solar C Project Site,” “Summer Solar Project Site,” “Solverde 1 Project Site,” “WABSRB Project Site,” have the meanings set forth in Recital B above.
“Antelope DSR 1” has the meaning set forth in the preamble.
“Antelope DSR 2” has the meaning set forth in the preamble.
“Antelope DSR 3” has the meaning set forth in the preamble.
“Antelope Interconnection Agreement” means the First Amended Large Generator Interconnection Agreement by and among the Co-Owners (except for Big Sky North), SCE, and CAISO, dated as of April 13, 2016 together with all agreements, schedules, appendices, exhibits and other documents ancillary thereto, as such agreements may be amended or supplemented from time to time.
“Antelope Substation” means the high-voltage substation operated by SCE that is adjacent to the Big Sky Substation and that contains the Point of Interconnection. 
“AntEx 2” has the meaning set forth in Exhibit D.
“AntEx 2 Project” has the meaning set forth in Exhibit D.
“Approved Shared Facilities O and M Budget” has the meaning set forth in Section 8.7.1.
“Bayshore Co-Owners” means Bayshore Solar A, Bayshore Solar B, and Bayshore Solar C. 
“Bayshore Solar A” has the meaning set forth in the preamble.
“Bayshore Solar B” has the meaning set forth in the preamble.
“Bayshore Solar C” has the meaning set forth in the preamble.
“Big Sky North” has the meaning set forth in the preamble.
“Big Sky Substation” means the “Project Substation” Segment identified in Exhibit C hereto. 
“Business Day” means any day other than a Saturday, Sunday or other day on which commercial banks in California are required or authorized to be closed.
“CAISO” means the California Independent System Operator.
“Commercial Operation” means: (a) for a Project, the achievement by such Project (except the IE Transmission Facilities) of its first production or discharge of electrical energy for delivery and sale to the applicable Point of Interconnection (excluding any test energy); (b) for the IE Transmission Facilities, the IE Transmission Facilities are constructed and Big Sky North reasonably expects it is ready to begin use of the Shared Facilities or actually begins using the Shared Facilities, whichever is earlier; and (c) for an IE Project, the achievement by such IE Project of its first production or discharge of electrical energy for delivery and sale to the applicable Point of Interconnection (excluding any test energy). 
“Conditional Use Permit” or “CUP” means that certain Conditional Use Permit No. 13-06 issued to Silverado Power, LLC dba Plainview Solarworks, LLC by the City of Lancaster on July 17, 2013, as amended from time to time. 
“Confidential Information” means, with respect to a given Disclosing Party and the respective Receiving Party, collectively and individually, all data, materials and information (including software, data, technology, know-how, trade secrets, processes, ideas, inventions (whether patentable or not), prototypes, schematics, design plans, drawings, pricing information, customer and service provider lists, business arrangements, business information, financial information, financial results, technical information, analyses, forecasts, compilations, studies, contracts, agreements, and planning or strategy information) provided by or on behalf of a Party (each Party in such capacity, a “Disclosing Party”) to the other Party (each Party in such capacity, a “Receiving Party”) or the Receiving Party’s Representatives, or to which the Receiving Party or the Receiving Party’s Representatives are given access by or on behalf of the Disclosing Party, whether verbally or in written or electronic form, related to the Disclosing Party, any Project, the Shared Facilities, the Shared Premises or the Co-Owners in connection with this Agreement.  Notwithstanding the foregoing, Confidential Information under this Agreement does not include any information that:  (A) the Receiving Party can demonstrate is now publicly available, or that later becomes publicly available through no action by the Receiving Party or the Receiving Party’s Representatives in violation of this Agreement; (B) the Receiving Party can demonstrate is already in the possession of the Receiving Party or the Receiving Party’s Representatives and is not subject to a confidentiality or fiduciary obligation at the time of the information’s disclosure under this Agreement; (C) the Receiving Party can demonstrate is lawfully received from any source other than the Disclosing Party or the Disclosing Party’s Representatives under circumstances not involving, to the Receiving Party’s knowledge, a breach of any fiduciary or confidentiality obligation; or (D) the Receiving Party can demonstrate is independently developed by or for the Receiving Party or the Receiving Party’s Representatives without reference to, or the use of, any portion of the Confidential Information.
“Co-Owner” and “Co-Owners” have the meanings set forth in the preamble.
“Co-Owner Indemnified Parties” has the meaning set forth in Section 11.
“Co-Owner Property” has the meaning set forth in Section 8.16.1.
“Default Rate” means a rate per annum equal to the lesser of (a) a varying rate per annum equal to the sum of (i) the three (3) month LIBOR as published in The Wall Street Journal, with adjustments in that varying rate to be made on the same date as any change in that rate is so published, plus (ii) six percent (6%) per annum, and (b) the maximum rate permitted by Law.
“Disclosing Party” has the meaning set forth in the definition of “Confidential Information.”
“Dispute” means any controversy, claim or dispute that arises out of or in connection with this Agreement or the construction, interpretation, performance, breach, termination, enforceability or validity of this Agreement, whether the same is based on rights, privileges or interests recognized by or based upon statute, contract, agreement (whether written or oral), tort, common law or other Law.
“Effective Date” means the date first set forth above in the preamble.
“Electrical Facilities” has the meaning set forth in Section 5.1.
“Elevation Solar C” has the meaning set forth in the preamble.
“Emergency” shall mean any occurrence, in the reasonable judgment of Manager or a Co-Owner, that may arise that requires immediate action and which constitutes a serious actual or potential hazard to the safety of Persons or property, that may materially interfere with the safe, economical or environmentally sound operation of the Shared Assets or any Project, or that would violate any applicable Law, Governmental Approvals, Shared Premises Agreements, the CUP or Land Matters.
“Energized” shall refer to a state of completion where electrical current begins to flow from a Project to the grid in meterable quantities.
“Environmental Laws” means all Laws relating to the protection of the environment, health or safety or the use, generation, release, treatment, storage, disposal or exposure to Hazardous Materials, including the Comprehensive Environmental Response, Compensation and Liability Act of 1980, as amended by the Superfund Amendments and Reauthorization Act of 1986; the Clean Water Act; the Resource, Conservation and Recovery Act of 1976; the Occupational Safety and Health Act of 1970; and the Clean Air Act, all as amended, and equivalent State of California laws and regulations.
“EPC Agreement” shall mean that certain Big Sky Substation Facility Engineering, Procurement and Construction Agreement by and among Elevation Solar C, Antelope DSR 1, Antelope DSR 2, WABSRB, Antelope Big Sky Ranch, Solverde 1, Summer Solar, Bayshore Solar A, FTS Devco and Rosendin Electric, Inc., dated as of February 5, 2016, as amended and assigned by that certain First Amendment to Big Sky Substation Facility Engineering, Procurement, and Construction Agreement and Assignment and Assumption Agreement dated as of May 17, 2017, pursuant to which FTS Devco assigned its portion of the Shared Facilities to the Phase II Parties. 

“Event of Default” has the meaning set forth in Section 14.1.
“EWG” means an “exempt wholesale generator,” as such term is defined in Section 1262(6) of the Public Utility Holding Company Act of 2005 and the FERC’s rules at 18 C.F.R. § 366.1.
“FERC” means the Federal Energy Regulatory Commission.
“Financing Party” means, (a) with respect to each Co-Owner, the agent or lead bank and any other financial institutions that are party to a loan agreement, hedge agreement, tax equity financing documents (including through a partnership flip arrangement or other similar financing), sale-leaseback or other debt, equity or other type of financing instrument with such Co-Owner, which may be secured in part by such Co-Owner’s share of, or interest in, the Shared Assets or all or a portion of such Co-Owner’s undivided interest and (b) with respect to each IE Company, the agent or lead bank and any other financial institutions that are party to a loan agreement, hedge agreement, tax equity financing documents (including through a partnership flip arrangement or other similar financing), sale-leaseback or other debt, equity or other type of financing instrument with such IE Company.
“Force Majeure” means acts of God or any other casualty or occurrence, condition, event or circumstance of any kind or nature not reasonably within the affected Party’s control and which could not have been avoided by reasonable measures or foreseeable by the affected, including strikes, slow-downs or labor difficulties (other than any such action by or in relation to the Manager or any of its subcontractors), fires, floods, earthquakes, explosions, natural disasters or other hazards, acts of public enemies, riots, civil commotions, insurrection, or war.  Force Majeure expressly does not include any delay in performing or failure of performance of any contractual provision by a Party (except to the extent caused by a Force Majeure event); late delivery or breakage of equipment or materials (except to the extent caused by a Force Majeure event); or economic hardship.
“FTS Devco” means FTS Devco, LLC, a Delaware limited liability company.
“GDPIPD” means the Gross Domestic Product Implicit Price Deflator, as published by the Department of Commerce: Bureau of Economic Analysis immediately preceding the applicable date of adjustment, or such other index as mutually agreed upon between the Manager and the Co-Owners.
“Governmental Approval” means any: (a) permit, license, certificate, concession, approval, consent, ratification, permission, clearance, confirmation, exemption, waiver, franchise, certification, designation, rating, registration, variance, qualification, accreditation or authorization issued, granted, given or otherwise made available by or under the authority of any Governmental Authority or pursuant to any Law, and any grading, building, or conditional use permits affecting the applicable real property and in effect with respect to the Projects, the IE Projects, the Shared Assets, or any part of them, or (b) right under any contract with any Governmental Authority.
“Governmental Authority” means any court, tribunal, authority, agency, commission, official or other instrumentality, including regulatory authorities and bodies, of the United States or any state, county, city or other political subdivision; any quasi-governmental regulatory authority, such as NERC or CAISO, acting under delegated authority; any arbitrator; or any judicial or quasi-judicial tribunal of competent jurisdiction.
“Hazardous Materials” means any hazardous or toxic substance or waste, pollutant or contaminant as defined under applicable Environmental Laws, including petroleum products, asbestos, polychlorinated biphenyls and radioactive materials.
“IE Company(ies)” has the meaning set forth in Recital C above; provided that no Person shall constitute an IE Company hereunder unless the requirements to constitute an IE Company described in Section 3.2.5 are satisfied in full with respect to such Person.
“IE Project(s)” has the meaning set forth in Recital C above.
“IE Transmission Facilities” has the meaning set forth in Recital C above.
“IE Transmission Project Site” has the meaning set forth in Recital C above.
“Independent Engineer” means a nationally recognized independent engineering firm experienced in energy generation projects.
“Interconnection Agreement” means the Antelope Interconnection Agreement or the Phase III Interconnection Agreement, as applicable.  
“Interconnection Provider” means SCE or any successor organization.
“Land Matters” means any and all covenants, conditions, restrictions, and other encumbrances affecting the applicable real property and binding upon the owner, tenant, licensee, easement holder, or any other user or occupant of that real property.
“Laws” means any applicable constitutional provisions, statutes, acts, codes, laws, rules, regulations, ordinances, orders, decrees, rulings, judgments or decisions of a Governmental Authority or arbitral body.
“Liabilities” means any and all claims, actions, debts, losses, liabilities, damages, expenses, awards, judgments, settlement payments, fines, penalties, costs, royalties, assessments (tax or otherwise), proceedings, deficiencies or obligations, whether civil or criminal, including those arising out of any investigation, action, claim, settlement, compromise, judgment or award, by any private party or Governmental Authority, of any nature, whether known or unknown, absolute, accrued, contingent or otherwise, and whether due or to become due, and whether or not resulting from third party claims, and any out-of-pocket costs and expenses (including court costs and fees, and reasonable legal counsels’, accountants’, or other fees and expenses) incurred in defending against or investigating any of the same.
“Liens” means all mortgages, deeds of trust, liens, debentures, security interests, pledges, conditional sale contracts, proceedings, judgment liens, orders, rights of first refusal, charges and other encumbrances or restrictions of any kind, whether recorded or unrecorded.
“Majority of the Co-Owners” means more than fifty percent of the Percentage Interest of the Co-Owners; provided that in no case shall a vote of the Co-Owners, regardless of the Co-Owners’ Percentage Interests, constitute a Majority of the Co-Owners if the Co-Owners otherwise carrying the vote do not include the vote of Solverde 1 and at least one (1) Bayshore Co-Owner. 
“Manager” has the meaning set forth in the preamble.
“Manager Property” has the meaning set forth in Section 8.16.1.
“Manager Representative” has the meaning set forth in Section 8.13.
“MISA” means the Master Interconnection Services Agreement under which Big Sky North provides service to the IE Companies over the IE Transmission Facilities.
“Nameplate Capacity” means the aggregate nameplate power generating capacity of a Project (not including the IE Transmission Facilities) or an IE Project, in megawatts, as published in the manufacturer’s technical specifications for the applicable Project or IE Project and its operative components (e.g., the generating capacity of all the inverters in a photovoltaic energy generation project); provided, however, that if a Project includes energy storage, then “Nameplate Capacity” means the maximum rate of energy discharge by such Project starting from the fully charged state of the energy storage, as measured in alternating current at the Point of Interconnection, as defined by physical and operational controls constraining the rate of such Project’s discharge of energy. By way of example only, if the maximum aggregate energy output of the inverters of a solar plus energy storage project is 55 MWac, but software and power plant controls limit its rate of discharge to an aggregate of 50 MWac at the Point of Interconnection,  then the Nameplate Capacity of that energy storage project would be deemed to be 50 MWac.
“NERC” means the North American Electric Reliability Corporation.
“Offtaker” means the Person who is purchasing the energy, capacity, or ancillary services from a Project (not including the IE Transmission Facilities) under an agreement with a term of one year or longer.
“Original Agreement” has the meaning set forth in Recital J above.
“Parties” and “Party” have the respective meanings set forth in the preamble.
“Percentage Interest” has the meaning set forth on Exhibit D attached hereto with respect to each Co-Owner.
“Person” means any individual, partnership, joint stock company, corporation, limited liability company, trust, unincorporated association or joint venture, Governmental Authority, or other entity.
“Phase I Shared Facilities” includes the facilities described as Phase I Shared Facilities on Exhibit C.
“Phase I Parties” includes Elevation Solar C, WABSRB, Antelope Big Sky Ranch, Summer Solar, Antelope DSR 1, Antelope DSR 2, Solverde 1, and Bayshore Solar A.
“Phase II Parties” include Antelope DSR 3, Bayshore Solar B and Bayshore Solar C.
“Phase II Shared Facilities” includes the facilities described as Phase II Shared Facilities on Exhibit C.
	“Phase III Expansion” means the expansion of the Shared Facilities and other equipment reasonably necessary to accommodate the interconnection of the IE Transmission Facilities and the IE Projects utilizing the Phase III Interconnection Agreement.
	“Phase III Interconnection Agreement” means the Large Generator Interconnection Agreement by and among Antelope Expansion 2, LLC, Southern California Edison Company, and the California Independent System Operator Corporation (Project: Antelope 2 Solar TOT762 (Q1208)), dated as of August 7, 2017, together with all agreements, schedules, appendices, exhibits and other documents ancillary thereto, as such agreements may be amended, assigned, or supplemented from time to time.
“Point of Interconnection” means the point of interconnection under the applicable Interconnection Agreement pursuant to which a Project interconnects with the electric transmission facilities of the Interconnection Provider.
“Project(s)” has the meaning set forth in Recital D above.
“Project Site(s)” has the meaning set forth in Recital D above.
“Project Specific Assets” means, for each Project, any of the assets comprising such Project located at a point before the Shared Facilities (including the collector system for the Project and Project specific current transformers, potential transformers, step-up transformers, transformer bays reclosers, switches, VAR compensation (Antelope Big Sky Ranch Project only), meter sockets and meters), the Project Site underlying such Project, and the agreements and contractual arrangements related to such Project and Project Site (including the Co-Owner’s or IE Company’s interest in its respective Interconnection Agreement).  For the avoidance of doubt, the Project Specific Assets shall exclude all of the Shared Facilities and the Shared Premises.
“Prudent Industry Practices” means any of the practices, methods, and standards of care, skill, safety and diligence, as the same may change from time to time, but applied in light of the facts known at the time, as are generally applied or utilized under comparable circumstances by reasonably experienced and prudent professionals in respect of the design, development, construction, commissioning, maintenance, financing and operation of facilities located in the Unites States of America of comparable type and complexity to the applicable Projects.  “Prudent Industry Practices” does not necessarily mean the best practice, method, or standard of care, skill, safety and diligence in all cases, but is instead intended to encompass a range of acceptable practices, methods, and standards.
“Qualifying Facility” or “QF” means a “qualifying small power production facility,” as defined in the Public Utility Regulatory Policies Act of 1978, as amended, and the FERC’s implementing regulations at 18 C.F.R. part 292.
“Receiving Party” has the meaning set forth in the definition of “Confidential Information.”
“Representatives” means, with respect to a Party or an IE Company, such Party’s or IE Company’s Affiliates, officers, directors, managers, members, shareholders, partners, employees, lenders, tax equity investors, contractors, vendors, suppliers, advisors, consultants, agents and representatives.
“RIG” means the remote intelligent gateway to provide interface for communications with CAISO.
“SCE” means Southern California Edison Company, a California corporation.
“SCE Dark Fiber Agreement” means the Fiber Use Agreement between the Co-Owners and SCE dated as of February 25, 2016 regarding the leasing of certain fiber optic telecommunications cables from SCE for the benefit of the Co-Owners, as it may be amended, supplemented, or assigned from time to time.
“Segment” has the meaning set forth on Exhibit C attached hereto.
“Segment Interest” has the meaning set forth on Exhibit C attached hereto.
“Service Agreement” means a Service Agreement entered into between an IE Company and Big Sky North pursuant to the MISA. 
“Shared Assets” means the Shared Facilities and the Shared Premises, together.
“Shared Expenses” has the meaning set forth in Section 4.2.
“Shared Facilities” has the meaning set forth on Exhibit C attached hereto.
“Shared Facilities O and M Budget” has the meaning set forth in Section 8.7.1.
“Shared Facilities Representative” has the meaning set forth in Section 5.2.
“Shared Premises” has the meaning set forth in Recital F above.
“Shared Premises Agreements” has the meaning set forth in Recital F above.
“Solverde 1” has the meaning set forth in the preamble.
“SP Services” has the meaning set forth in the preamble.
“Summer Solar” has the meaning set forth in the preamble.
“Tax” means all federal, state, provincial, territorial, municipal, local or foreign income, profits, franchise, gross receipts, environmental (including taxes under Internal Revenue Code § 59A), customs, duties, net worth, sales, use, goods and services, withholding, value added, ad valorem, employment, social security, disability, occupation, pension, real property, personal property (tangible and intangible), stamp, transfer, conveyance, severance, production, excise and other taxes, withholdings, duties, levies, imposts and other similar charges and assessments (including any and all fines, penalties and additions attributable to or otherwise imposed on or with respect to any such taxes, charges, fees, levies or other assessments, and interest thereon) imposed by or on behalf of any Governmental Authority, in each case whether such Tax arises by law, contract or otherwise.
“Verizon Fiber Agreement” means the Master Service Order Form to the U.S. Services Agreement between SP Antelope DSR LLC and Verizon Business Network Services Inc. dated September 21, 2015, to provide SCADA and CAISO fiber service to the Summer Solar Project, the Antelope Big Sky Ranch Project, the Elevation Solar C Project and the WABSRB Project as well as two security fiber circuits for camera service, as assigned in parts to the Co-Owners who are utilizing such circuits for SCADA and CAISO communication, or to the Manager with respect to the circuits for the security cameras, as it may be amended, supplemented, or assigned from time to time. 
“WABSRB” has the meaning set forth in the preamble.
2.	TERM
This Agreement shall commence on the Effective Date and remain in full force and effect following the Effective Date until the first occurrence of one of the following:  (a) a single Co-Owner becomes the owner of the entire ownership interest in all of the Shared Assets, (b) the mutual agreement of all the Co-Owners, or (c) otherwise as may be provided under this Agreement.
3.	SHARED ASSETS
3.1	Shared Facilities.  The Co-Owners shall cause the procurement, installation, and/or construction of, as applicable, the Shared Facilities on the Shared Premises, all as more particularly described on Exhibit C attached hereto. 
3.2	Ownership Interests in Shared Facilities.  
3.2.1	Co-Owner Interests.  Each Co-Owner (except Big Sky North, which is addressed in Section 3.2.3) shall have acquired an undivided ownership interest in the Shared Facilities pursuant to the EPC Agreement.  Construction of, transfer of title to, and cost reimbursement, if any, for the Shared Facilities is governed primarily by the EPC Agreement, except as addressed herein.  If Shared Facilities are constructed outside of the scope of the EPC Agreement, then the Parties shall ensure that such Shared Facilities are subject to cost allocation as determined by Segment Interests consistent with this Agreement, and such Shared Facilities shall be considered subject to the rights and obligations set forth in this Agreement.  The use of the Shared Assets and cost allocation for such use, operation, and maintenance is addressed below in this Agreement.
3.2.2	Undivided Interests in Phase II Shared Facilities.  The Phase II Shared Facilities shall be considered a separate Segment for purposes of this Agreement, and the costs for the operation and maintenance of such facilities shall be borne solely by the Phase II Parties, except as may later be allocated to Big Sky North for its use of such facilities.  Except as provided in Section 3.2.3, in no event shall any Co-Owner other than the Phase II Parties be allocated costs associated with the Phase II Shared Facilities.  
3.2.3	Big Sky North as Co-Owner.  As of the Effective Date, Big Sky North will acquire an undivided ownership interest in the Shared Facilities upon payment to the other Co-Owners in an amount equal to ten dollars ($10.00). Such payment by Big Sky North shall be distributed to each other Co-Owner according to each such Co-Owner’s Percentage Interest (as calculated pursuant to Exhibit D, but not including Big Sky North or any of the IE Projects.)
3.2.4	 Undivided Interests in Phase III Expansion.	The Phase III Expansion shall be considered a separate Segment for purposes of this Agreement, and the costs for the development, installation, operation and maintenance of such facilities shall be borne solely by Big Sky North.  In no event shall any Co-Owner other than Big Sky North be allocated costs associated with the Phase III Expansion.
3.2.5	Requirements Regarding IE Companies. To constitute an IE Company hereunder, as of the date on which the applicable IE Project executes a Service Agreement, (a) a Person must meet the requirements under the MISA for being eligible for service thereunder, (b) a Person must execute and deliver a Service Agreement with Big Sky North to use the IE Transmission Facilities, (c) a Person must have obtained all Governmental Approvals required under applicable Law to own and operate its IE Project, or, in the case of any Governmental Approval required under applicable Law to own or operate the proposed IE Project that cannot be obtained prior to Energization, a Person must have provided evidence reasonably demonstrating that it will have obtained such approval when required pursuant to applicable Law, (d) a Person must be an Affiliate of each Party, (i) unless such Person ceased to be an Affiliate of each Party following the execution of financing or other debt documents relating to such Person due to the exercise of a right of foreclosure of the financing party under such financing or other debt documents upon the direct or indirect ownership interests in such Person following a default under such financing or other debt documents, and (ii) other than any Party the direct or indirect ownership of which has changed following the Effective Date, and (e) such Person’s proposed IE Project, the interconnection thereof to the Shared Facilities and the operation thereof must not present an adverse effect on any Shared Facility, any Project, or the operation thereof. Big Sky North shall provide at least ten (10) days’ prior written notice to the other Parties prior to entering into a Service Agreement with any proposed IE Company for the use of the IE Transmission Facilities, except with respect to AntEx 2, which notice may be provided on the Effective Date concurrently with entering into a Service Agreement. In such notice, Big Sky North shall certify that such proposed IE Company satisfies the requirements of an IE Company described in Section 3.2.5(a), (c), (d) and (e) of this Agreement, shall identify any Governmental Approval required under applicable Law to own or operate the proposed IE Project that cannot be obtained by such proposed IE Company prior to Energization of the proposed IE Project, shall certify that the representations and warranties made by Big Sky North under this Agreement are true as of the date thereof, and shall provide an updated version of Exhibit H to this Agreement to the extent any of the information contained therein no longer accurately reflects Big Sky North’s or the applicable IE Companies’ present plans or estimates with respect to the anticipated IE Projects at the time of such notice. Big Sky North shall provide the Co-Owners with any reasonably requested evidence of a proposed IE Company’s satisfaction of the requirements described in this Section 3.2.5, including a copy of the written confirmation following review by the Independent Engineer (as defined in the MISA) with respect thereto pursuant to Section 6.12(b) of the MISA.  Upon fulfillment of each of the conditions set forth in this Section 3.2.5, Energization of the proposed IE Project, and Big Sky North’s written notice to the Co-Owners of such fulfillment and Energization, the applicable proposed IE Company shall constitute an IE Company hereunder, and Big Sky North shall be permitted to allow the respective IE Company to use Big Sky North’s Segment Interests.  With respect to any Governmental Approval required under applicable Law to own or operate an IE Project that cannot be obtained by the applicable IE Company prior to Energization of such IE Project, an IE Company must obtain such Governmental Approval and provide the Co-Owners with reasonable evidence thereof as soon as commercially reasonable.
3.3	Shared Premises Agreements and Land Matters.  
3.3.1	A Co-Owner’s exercise of rights with respect to an undivided interest in applicable Shared Facilities shall be subject to such Co-Owner having rights under the applicable Shared Premises Agreements to use the Shared Premises on which the applicable Shared Facilities are located.  Each Co-Owner shall comply with all the terms and conditions of the Shared Premises Agreements, the Land Matters, and the Governmental Approvals. 
3.3.2	Subject to their authority or ability to do so, the Parties and Co-Owners shall timely execute the necessary instruments to ensure each Co-Owner has sufficient rights to use the applicable Shared Premises on which the Shared Facilities are located.  Manager will add such instruments to the Shared Premises Agreements.
3.3.3	Any amounts due under the terms of the Shared Premises Agreements and the CUP shall be paid by the Manager, subject to reimbursement by the Co-Owners in accordance with Section 4.  
3.3.4	No Shared Premises Agreement may be terminated, modified or amended without the consent of all of the Co-Owners that are party to, or that directly enjoy rights or benefits under, such Shared Premises Agreement.  Nevertheless, if any Co-Owner wishes to terminate its interest in a Shared Premises Agreement, and such termination (i) is permitted by the Shared Premises Agreement itself or by the counterparty thereto and (ii) will have no adverse effect on the other Co-Owners thereto, then the Co-Owner may terminate its interest in that Shared Premises Agreement.  The permitted termination by a Co-Owner of its interest in a Shared Premises Agreement shall not cause or be deemed to cause the release of the Co-Owner for any Liabilities or obligations accruing prior to such termination.  The CUP may not be terminated, modified or amended without the consent of all of the Co-Owners.  
3.4	Access to Shared Facilities.  Subject to Section 3.3, each Co-Owner and its Representatives shall have access to the Shared Facilities (a) for inspection of the Shared Facilities, (b) for any required maintenance of the Shared Facilities agreed to be undertaken by the Co-Owners or not performed by the Manager in accordance with Section 8, (c) for the installation, maintenance, or repairs of the Shared Facilities or Project Specific Assets, and (d) for the operation of the Shared Facilities, all in accordance with this Agreement.  Notwithstanding the foregoing, except in the event of an Emergency, each Co-Owner shall provide no less than twenty-four (24) hours’ prior notice to Manager and the other Co-Owners of its intent to access the Shared Facilities, and no less than forty-eight (48) hours’ prior notice to Manager and the other Co-Owners prior to performing any maintenance or repairs pursuant to clause (b) or (c) above.  The Manager, a Co-Owner and/or any Co-Owner’s Representatives shall follow all applicable safety, security and site rules established by the agreement of the Co-Owners and Manager, and shall comply with the CUP and all applicable Shared Premises Agreements, Land Matters, Laws and Governmental Approvals when on the Shared Premises or accessing the Shared Facilities, except to the extent that following any such rule would violate applicable Law.  In the event of an Emergency, prior notice is not required to access the Shared Facilities to respond to the Emergency, but the Co-Owner shall provide notice of access to Manager and the other Co-Owners as soon as reasonably practicable thereafter (no more than twenty-four (24) hours after access).
3.5	No Interference, Cooperation and Over-Burdening.  A Co-Owner’s use of the Shared Assets or the operation of its Project (and in the case of Big Sky North, the operation of the IE Project(s) as well, whether such operation is by Big Sky North or by an IE Company) may not interfere with the use and enjoyment by the other Co-Owners of their respective rights in such Shared Assets or the operation of their Projects (or in the case of Big Sky North, the IE Projects as well), except as specifically provided herein.  Subject to the terms and conditions of this Agreement, including Section 6.15, each of the Co-Owners shall cooperate in good faith to accommodate each of the other Co-Owners’ uses of the Shared Assets for the benefit of each other’s Projects (and for Big Sky North, the IE Projects as well) as contemplated by this Agreement.  Each Co-Owner acknowledges and agrees that the use of the Shared Assets by the Projects as contemplated herein does not, separately or in the aggregate, constitute an overburdening of the Shared Assets, or any part thereof.  No Co-Owner will use or permit the use of the Shared Assets in any manner that would create waste or nuisance, or that would jeopardize the issuance or maintenance of any insurance policy relating to the Shared Assets or any Governmental Approval as to the Shared Assets or any Project, or that would jeopardize the CUP, nor otherwise conduct or cause to be conducted operations on its Project Site or on the Shared Premises that would have similar effects on, or otherwise damage or interfere with, the Shared Assets.
3.6	Additional Real Property Rights and Facilities.
3.6.1	To the extent that any additional real property and rights therein (“Additional Shared Premises”) or physical facilities (“Additional Shared Facilities,” and together with the Additional Shared Premises, the “Additional Shared Assets”) that relate to the Shared Assets or operation thereof, are required by any Co-Owner (or an IE Company, as applicable) to reach Commercial Operation of a Project, continue operating a Project or repower a Project, the Co-Owner or the Manager may give written notice to the other Co-Owners of such requirement, with a reasonable explanation of why such Additional Shared Assets are needed.  Each Co-Owner receiving such notice shall have thirty (30) days after receiving such notice to determine if such Additional Shared Assets are also needed for its Project (or in the case of Big Sky North, an IE Project) and to so notify all the other Co-Owners and Manager in writing of its election to participate in the acquisition, installation, and/or construction of such Additional Shared Assets.  A Co-Owner’s failure to notify the other Co-Owners and Manager of its election to participate within such thirty (30) day period will be deemed an election to decline the addition of the proposed Additional Shared Assets to the Shared Assets.  Any Additional Shared Assets that a Majority of the Co-Owners agree to add to the Shared Assets to be governed by this Agreement shall be (a) procured jointly by the Co-Owners which elect to use the Additional Shared Assets, (b) added to the Shared Premises and/or Shared Facilities, as applicable, under this Agreement (as a new Segment in the case of new Shared Facilities), and (c) held in undivided ownership interests by the acquiring Co-Owners (or as the acquiring Co-Owners may otherwise agree among themselves in the case of a new Segment of Shared Facilities).  If a Majority of the Co-Owners do not agree to add Additional Shared Assets requested by a Co-Owner or the Manager under this Section 3.6.1, then nothing herein shall prevent the requesting Co-Owner (or any group of them) from acquiring the additional premises or facilities needed by and to be held by such Co-Owner(s), not as part of the Shared Assets hereunder, and not subject to the terms of this Agreement, provided that any additional facilities so acquired shall not, in the reasonable judgment of both Manager and the other Co-Owners, interfere with the development, construction, operation, usage or the maintenance of the Shared Assets or the other Projects, or otherwise violate the terms and conditions of this Agreement, the Land Matters, Governmental Approvals or applicable Laws.  Nothing contained herein shall require that a Co-Owner be required to reimburse any other Co-Owner for any Additional Shared Assets unless it has expressly agreed to do so in writing.  
3.6.2	Except as otherwise provided in this Agreement, no Co-Owner shall construct, install or place any additional facilities within the Shared Premises.
3.7	Conditions to Installation of Additional Shared Facilities or Connecting Projects to the Shared Facilities.  Any Co-Owner installing Additional Shared Facilities or connecting its Project (or, in the case of Big Sky North, indirectly, an IE Project) to the Shared Facilities shall (a) not interfere with the use or access by the other Co-Owners of the Shared Facilities, except as may be necessary during the installation, repair, or replacement of Shared Facilities, (b) to the extent commercially reasonable, schedule during an off-peak and/or low solar insolation period any required disconnection of the Shared Facilities to conduct construction activities to minimize the impact on the Projects of the other Co-Owners and the IE Companies, (c) provide at least thirty (30) days’ prior written notice of commencement of such construction activities together with a reasonably detailed description thereof, (d) provide at least thirty (30) days’ prior written notice of any planned outages, and the durations thereof, of the Shared Facilities that would result in a disconnection of another Co-Owner’s Project or the IE Projects, (e) take into consideration, to the extent commercially reasonable, any changes in the construction plans or timing of construction required by another Co-Owner or an IE Company, provided that the other Co-Owner or the IE Company does not attempt to interfere with the installation of the proposed Additional Shared Facilities, unless such installation can reasonably be expected to result in an Emergency or violate the terms of the Shared Premises Agreements, the CUP, the Land Matters, Governmental Approvals, or this Agreement, (f) be responsible for obtaining and complying with any necessary Governmental Approvals and providing documentary evidence of such Governmental Approvals to the Co-Owners and Manager, and (g) compensate the other Co-Owners’ Projects or Big Sky North (on behalf of the IE Projects) for lost revenues as a result of lost generation due to an outage or disconnection of such Co-Owners’ Projects or the IE Projects.  Any Co-Owners installing Additional Shared Facilities that are needed by or would benefit less than all of the Co-Owners, or connecting its own Project or an IE Project to the Shared Facilities, shall indemnify, defend and hold harmless the other Co-Owners from all Liabilities, including third party claims, property and revenue losses incurred, as a result of such construction or installation activities, but such installing Co-Owner may seek reimbursement for such indemnified costs from insurance required by Section 12 to the extent such insurance provides coverage for such indemnified costs.  Installation of Additional Shared Facilities that are needed by or would benefit all Co-Owners and that are expressly consented to by such Co-Owners, shall be installed jointly by the Co-Owners or by the Manager at the direction of the Co-Owners and will be at the risk of all the Co-Owners, and each Co-Owner shall have the right to review and approve all design, planning and installation elements in connection with such installation, and will bear any risk of loss thereof in proportion with its Segment Interest in the Additional Shared Facilities, to the extent such loss is not covered by the insurance required by Section 12.  The execution of this Agreement by Big Sky North, and its prior or concurrent delivery to each Co-Owner of a reasonably detailed description of its planned construction activities, constitutes thirty (30) days’ prior written notice to the remaining Co-Owners that Big Sky North shall commence the construction of facilities needed to connect its Project with the Shared Facilities, and by the execution of this Agreement the remaining Co-Owners acknowledge the sufficiency of such notice.
4.	SHARED EXPENSES 
4.1	Liabilities for the Account of the Co-Owners; No Charging of Fees, Premiums or Profits.  Except as specifically set forth in this Agreement, each Party shall be solely responsible for its Liabilities relating to its Project (and for Big Sky North, the IE Project(s)) and Project Specific Assets, including without limitation, all Liabilities arising from acquiring, designing, installing, constructing, using, operating, maintaining and repairing its Project Specific Assets.  Each Party shall, at its sole cost and expense, maintain in good working order and repair at all times each part of its Project that connects with, will connect with, or affects the Shared Facilities or the Shared Premises.  For each IE Project, Big Sky North shall, or shall ensure that each IE Company shall, at its sole cost and expense, maintain in good working order and repair at all times each part of such IE Project that connects with, will connect with, or affects the Shared Facilities or the Shared Premises.  Each Party (or Parties, if any Additional Shared Assets are being acquired or installed at the joint expense of two or more Parties) acquiring or installing any Additional Shared Assets shall be responsible for, and pay, all Liabilities relating to the acquisition or installation, as applicable, of the Additional Shared Assets, except to the extent otherwise provided in Section 3.7.  Further, each Party shall be responsible for all Liabilities arising from such Party’s actions or inactions in violation of this Agreement, the Shared Premises Agreements, the CUP, Land Matters, and Governmental Approvals.  The Parties agree that the purpose of this Agreement is for the Parties and their respective Projects (and for Big Sky North, the IE Project(s)) to benefit from the cost savings, convenience and efficiencies that result from the sharing of the Shared Assets, and no Party shall charge any other Party any fee, premium or other profit relating to the Shared Assets or services provided under this Agreement.  This Section 4.1 shall not be construed as prohibiting in any way any Party’s obligations to pay for the costs and expenses incurred in connection with the sharing, development, design, procurement, installation and/or construction of the Shared Assets or the provision of any services pursuant to this Agreement.
4.2	Shared Expenses.
4.2.1	The Co-Owners each shall be responsible for and shall reimburse the Manager (in accordance with Section 4.3) for Liabilities arising under or relating to the following (collectively, the “Shared Expenses”) and in the following described proportions:
(a)	for all those Co-Owners which are parties to a particular Shared Premises Agreement and have rights to the portion of the Shared Premises provided therein, the Liabilities arising under such Shared Premises Agreement, and the use, maintenance, repair, and inspection of the applicable portion of the Shared Premises, shall be shared by those Co-Owners in proportion to their relative Percentage Interests (e.g., if two (2) Co-Owners are parties to a Shared Premises Agreement, and each has an equal Percentage Interest, they shall share equally in the Shared Expense; if three (3) Co-Owners are parties to a Shared Premises Agreement, and they have Percentage Interests in the amounts of ten percent (10%), thirty percent (30%), and sixty percent (60%), they shall share in the Shared Expense in a ratio of 1:3:6, or expressed as fractions, 1/10 to 3/10 to 6/10) and where when expressed as fractions the sum of all fractions have been uniformly adjusted to equal 1 or where expressed in percentages the sum of all percentages have been uniformly adjusted to equal 100%;
(b)	for all Co-Owners, subject to Sections 3.2.2, 3.2.3, 3.2.4, and 4.2.3, any fees, expenses or liabilities incurred by or otherwise allocable to Manager hereunder (including Liabilities arising under the CUP and the use, maintenance, operation, repair, and inspection of the Shared Premises) shall be shared by those Co-Owners in proportion to their relative Percentage Interests; 
(c)	a Co-Owner’s responsibility for the use, maintenance, operation, repair, and inspection of the Shared Facilities, shall be in proportion to the Co-Owners’ respective applicable Segment Interests therein, including those Shared Facilities expenses that may be incurred prior to connecting such Co-Owner’s Project (or for Big Sky North, the IE Project(s)) to the Shared Facilities; and
(d)	Any fees, expenses of liabilities incurred by or otherwise allocable to Manager under the Verizon Fiber Agreement shall be reimbursed by the Co-Owners in proportion to their relative Percentage Interest. 
4.2.2	Each Co-Owner may, from time to time, propose additional categories or types of expenses to be Shared Expenses to be administered jointly by the Co-Owners, or by the Manager at the direction of the Co-Owners in accordance with this Section 4.2.  Any such proposed expense must be approved by all of the Co-Owners.
4.2.3	Notwithstanding the foregoing, none of the following shall constitute Shared Expenses:
(a)	the cost of developing and constructing the Shared Facilities, including without limitation, development, permitting, initial procurement, construction, installation, financing and any other costs incurred in connection with the Shared Facilities of any Project prior to sharing the use thereof in accordance with this Agreement; or
(b)	the cost and expense of any Project Specific Assets and the connection and integration of Project Specific Assets with any Shared Facilities (including without limitation, any design, procurement, construction, or installation costs).
4.3	Invoicing; Late Payments.  No later than ten (10) days after the end of each calendar month following the Effective Date, the Manager shall invoice the Co-Owners for their respective portions of the Shared Expenses.  Manager’s invoice shall include a detailed breakdown of the Shared Expenses and each Co-Owner’s share of the Shared Expenses, along with wire transfer instructions for making payment to Manager.  The Co-Owners shall make all payments to Manager (or directly to the other Co-Owners to whom the Shared Expenses may be payable) under this Section 4.3 by wire transfer of immediately available funds as provided in the Manager’s invoice, within thirty (30) days of receipt of such invoice.  All sums not paid within thirty (30) days after receipt of Manager’s invoice shall thereafter bear interest at the Default Rate.  Each Co-Owner will have the right to audit, and receive supporting documentation for, any expenses or other amounts required to be paid by such Co-Owner under this Agreement.  If there is a dispute as to any amount invoiced by Manager, the Co-Owners shall pay all amounts not in dispute in accordance with this Section 4.3.  The Co-Owners shall pay any disputed amount ultimately determined as payable with interest thereon at the Default Rate accruing from the date of receipt of the Manager’s disputed invoice.
5.	USE OF SHARED ASSETS
5.1	Use by Projects.  Subject to the other requirements of this Agreement, each Co-Owner shall have the right to use each Segment of the Shared Facilities to the extent such Co-Owner owns a Segment Interest in the applicable Segment, as set forth in Exhibit C attached hereto.  The foregoing use rights include use of the capacity of any Segment used to collect, transmit, aggregate, transform, control, shape or otherwise regulate and/or carry electrical energy, including without limitation, any electrical transmission lines, transformers, substations, and other electrical components (collectively, “Electrical Facilities”) in each Segment to collect and transmit electricity from and to the applicable Co-Owner’s Project (or for Big Sky North, the IE Project(s)) in an amount in proportion to such Co-Owner’s relative Segment Interest vis-à-vis the other Co-Owners with a Segment Interest in said Segment.  For example, if a Segment contains a generator step up transformer capable of serving more than one Co-Owner’s Project and two (2) Co-Owners each operating a one hundred (100) megawatt Nameplate Capacity Project hold fifty percent (50%) Segment Interests in said Segment, each of them shall be entitled to and shall have the right to use up to fifty percent (50%) of the transformer capacity.  Notwithstanding any other provision of this Agreement, each Co-Owner (except for Big Sky North) separately owns and shall own the electrical energy, capacity, and ancillary services generated, stored, or discharged by its Project. Each IE Company separately owns and shall own the electrical energy, capacity, and ancillary services generated, stored, or discharged by its IE Project.
5.2	Shared Facilities Representatives.  On or promptly following the date of Commercial Operation of a Co-Owner’s Project, such Co-Owner shall, by written notice to the other Co-Owners and Manager, designate an individual (the “Shared Facilities Representative”), who will have authority to bind the Co-Owner in all matters concerning this Agreement (other than to amend this Agreement), to communicate on a day-to-day basis with each other Co-Owner and to direct Manager regarding operational and maintenance issues. Even if there are multiple IE Projects, Big Sky North shall only have one Shared Facilities Representative.  Each Co-Owner may change its Shared Facilities Representative at any time and from time to time by prior written notice to the other Co-Owners and Manager.
5.3	Liens.  Except as provided in Section 17.2, no Co-Owner will create, permit or suffer to exist (including, in the case of Big Sky North, by way of an IE Company) by, through or under the Co-Owner or the Co-Owner’s Representatives, and hereby waives for itself and its Representatives (including, in the case of Big Sky North, for each IE Company), any Liens on the Shared Assets, or on the undivided interests or Project Specific Assets of any other Co-Owner, including (a) Liens for Taxes, unless such Liens with respect to the Shared Assets only are not yet delinquent or are being contested in good faith by appropriate proceedings, and (b) Liens in favor of carriers’, warehouseman’s, mechanics’, materialmen’s, repairmen’s or other like Liens, unless such Liens with respect to the Shared Assets only arise in the ordinary course of business of such Co-Owner and for amounts that are not yet due or which are being contested in good faith by appropriate proceedings; provided, in the case of any such permitted Lien in clauses (a) and (b) above, so long as any such proceeding does not involve any substantial danger of the sale, forfeiture or loss of any part of the Shared Assets and such Co-Owner posts any bond that is required by applicable Law to avoid such sale, forfeiture or loss while such claims are being contested.  Each applicable Co-Owner will take prompt steps to discharge any unpermitted Lien filed against any such Shared Asset, or the undivided interest or Project Specific Assets of any other Co-Owner.  If any Co-Owner creating a Lien prohibited hereby (including, in the case of Big Sky North, by way of an IE Company) fails to discharge promptly any such prohibited Lien, any other Co-Owner shall have the right to notify the Co-Owner which created the prohibited Lien in writing and to take any reasonable action to satisfy, defend, settle or otherwise remove the Lien at the Co-Owner’s expense.  A Co-Owner’s rights to pursue remedies at law or equity for a breach of this Agreement by another Co-Owner shall not be limited by this Section 5.3, and may include seeking and placing judgment Liens and exercising on same to the extent otherwise permitted at law and this Agreement. 
6.	OBLIGATIONS AND CERTAIN RIGHTS OF THE CO-OWNERS
6.1	Standards of Performance; Action, Omission or Failure to Perform an Obligation That Results in a Material Adverse Effect on Another Co-Owner or That Co-Owner’s Project or an IE Project.  Notwithstanding any other provision of this Agreement to the contrary, each Co-Owner will develop, construct, operate and maintain its Project (and Big Sky North shall cause each IE Company to develop, construct, operate and maintain its respective IE Project) and perform its obligations under this Agreement in accordance with (a) all applicable Laws, (b) Prudent Industry Practices, (c) the applicable Interconnection Agreement, the CUP and the applicable terms of the Shared Premises Agreements, (d) any and all Governmental Approvals, (e) all applicable Land Matters, and (f) the applicable power purchase agreement of each respective Co-Owner or IE Company, as applicable.  No Co-Owner will take any action, omit to take any action or fail to perform any obligation under this Agreement, the Shared Premises Agreements, the CUP, the applicable Interconnection Agreement, Governmental Approvals, Land Matters, or power purchase agreements, that materially and adversely affects any other Co-Owner or the IE Companies or another Co-Owner’s Project or an IE Project or gives rise to a Liability affecting any other Co-Owner or an IE Company, another Co-Owner’s Project or an IE Project, or the Shared Assets, including any action, omission or failure to perform an obligation that results in damage to, disconnection of, or an outage of another Co-Owner’s Project or an IE Project.
6.2	Taxes.  Unless otherwise directed by the Co-Owners, the Manager shall pay all real and personal property Taxes, general or special, levied against the Shared Assets before delinquency and before any fine, interest or penalty will become due or be imposed for their non payment, except that the Manager may withhold payment of any Tax if Manager is contesting the payment of such Tax in good faith by appropriate proceedings and such proceeding does not involve any danger of the sale, forfeiture or loss of any part of such Shared Asset, including the posting of any bond that is required by applicable Law to avoid such sale, forfeiture or loss while the payment of such Tax is being contested and notifies all the Co-Owners thereof in writing at least thirty (30) days before such payment is due.  All such Taxes and assessments paid by the Manager shall be treated as Shared Expenses and invoiced to the Co-Owners in accordance with Section 4.3.
6.3	Environmental Compliance.  Each Co-Owner shall, with respect to its Project (including its Project Specific Assets, including the Project Site upon which its Project is installed) (and in the case of Big Sky North, each IE Project as well), be responsible for and shall have exclusive control (as between the Parties) over all investigations, studies, cleanup, corrective action or response, or remedial action required by (i) any Governmental Authority now or hereafter authorized to regulate environmental or other matters, or (ii) any consent decree or court or administrative order now or hereafter applicable to such Co-Owner’s use, operation or ownership of its Project (including its Project Specific Assets and Project Site) (and in the case of Big Sky North, each IE Company’s operation of its IE Project as well).  Big Sky North shall cause each IE Company, with respect to its respective IE Project (including its Project Specific Assets, including the Project Site upon which the IE Project is installed), be responsible for all investigation, studies, cleanup, corrective action or response, or remedial action required by (i) any Governmental Authority now or hereafter authorized to regulate environmental or other matters, or (ii) any consent decree or court or administrative order now of hereafter applicable to such IE Company’s use, operation or ownership of its IE Project (including its Project Specific Assets and real property upon which the IE Project is installed). The Manager shall, with respect to the Shared Premises and the Shared Facilities located on the Shared Premises, subject to the oversight and direction of the Co-Owners, oversee all investigations, studies, cleanup, corrective action or response, or remedial action required by any Governmental Authority now or hereafter authorized to regulate environmental or other matters or by any consent decree or court or administrative order now or hereafter applicable to the Co-Owners’ use, operation or ownership of the Shared Premises or the Shared Facilities located on the Shared Premises, and subject to Sections 11.1 and 11.2, each Co-Owner with an interest in the subject Shared Premises shall be responsible, in proportion to its relative Percentage Interest, for all Liabilities related to such investigations, studies, cleanup, corrective action or response, or remedial action.  Manager shall keep all Co-Owners fully appraised as to the above matters affecting the Shared Premises and shall consult with all of them prior to taking any action involving any Governmental Authority or risk of incurring any Liability.  The Co-Owners with an interest in an applicable portion of the Shared Premises shall manage and control all investigations and any environmental cleanup, remediation or related activities with respect to such Shared Premises, or direct Manager to do so.  Each Co-Owner shall be responsible, in proportion to its relative Percentage Interest, for all Liabilities related to investigations, studies, cleanup, corrective action or response, or remedial action with respect to the Shared Premises, and the Co-Owners shall mutually agree with respect to the management and control of all investigations and any environmental cleanup, remediation or related activities with respect to the Shared Premises, or shall direct Manager to do so.
6.4	Interconnection.  Each Co-Owner shall be solely responsible for securing for its own benefit (and for Big Sky North, in coordination with the IE Companies), and for maintaining, such rights as are necessary to interconnect its Project and the IE Projects, as applicable, with the transmission and interconnection system of the Interconnection Provider and to deliver the electrical energy generated or discharged by its Project or the IE Projects, or such portion of the electrical energy generated or discharged by its Project or the IE Projects, as is consistent with the terms and conditions of this Agreement.  For the avoidance of doubt, each Co-Owner (except for Big Sky North) will separately deliver and meter the electrical energy generated or discharged by its Project and Big Sky North will cause each IE Company to separately deliver and meter the electrical energy generated or discharged by its IE Project.
6.5	Meteorological and Operational Data.  All Co-Owners shall make all meteorological and operational data available to Manager upon request (including, in the case of Big Sky North, all such data relating to IE Projects).  In addition, to the extent required to comply with Governmental Approvals, Laws or CAISO’s Eligible Intermittent Resources Protocol or Participating Intermittent Resource Program, the Co-Owners shall share meteorological and operational data regarding their respective Projects and the IE Projects and the Shared Facilities with the Manager (but not the other Co-Owners), with the mutual objective of optimizing the operational and maintenance efficiency of each of the Projects and the Shared Facilities.  The sharing Co-Owner makes no representation or warranty, express or implied, and will have no Liability with respect to the data so provided, whether for completeness, accuracy or otherwise.  The Receiving Party will maintain the confidentiality of the data received in accordance with the requirements of this Agreement.
6.6	Voting or Approval Rights.  Unless specifically provided in this Agreement, each Co-Owner shall have the right to vote or give its approval on any matter requiring or needing a vote or approval of the Co-Owners.  Unless otherwise specified herein, a vote of a Majority of the Co-Owners shall be required for any approval to be provided by the Co-Owners hereunder.
6.7	Relationship of the Co-Owners.  The rights, duties, obligations and Liabilities of the Co-Owners under this Agreement will be individual and not joint or collective, and no Co-Owner shall be responsible for the default of any other Co-Owner under this Agreement.  It is not the intention of the Co-Owners to create, nor will this Agreement be deemed to create, any partnership, agency, joint venture, trust, or association of profit, or to authorize any Co-Owner to act as an agent, servant or employee for any other Co-Owner.  Each Co-Owner will remain solely responsible for the actions of its own employees.
6.8	Regulatory Status.  Each Co-Owner operating a Project represents and warrants that it is an EWG or its Project is a QF, and such Co-Owners each covenant to maintain their status as EWGs or their Projects’ status as QFs for so long as they are a Party to this Agreement or have any interest in the Shared Assets that requires them to be EWGs or their Projects to be QFs. Big Sky North represents and warrants that each IE Company qualifies as an EWG (or the relevant IE Project qualifies as a QF, as applicable), and Big Sky North shall cause the IE Companies to maintain their qualification as EWGs (or each relevant IE Project as a QF, as applicable).  No Co-Owner will take any action that could adversely impact any other Co-Owner’s or an IE Company’s ability to qualify as an EWG or to qualify its Project or an IE Project as a QF.
6.9	No Dedication of Property; No Public Access.  Each Co-Owner agrees that entering into this Agreement, performing its obligations hereunder, or exercising its rights hereunder, either in whole or part, is not intended to be, and shall in no way be construed as or deemed to be, a dedication to public or quasi-public use or purpose of any of the Project Specific Assets of the Co-Owner or an IE Company, the Project Specific Assets of another Co-Owner or an IE Company, any Shared Assets, or any portion of the foregoing.  The Co-Owners also agree that, unless so ordered by a Governmental Authority, there shall be no, and none of them shall provide, public access to the Shared Assets or any portion of them, provided, however, that each Co-Owner shall permit access to the Shared Assets to the extent necessary to permit an Offtaker to inspect the Project Specific Assets associated with the Project from which the Offtaker is purchasing energy, capacity, or ancillary services provided that such inspection shall not unreasonably interfere with the operation and maintenance of the Shared Assets, and any Offtaker accessing the Shared Assets to inspect the Project Specific Assets shall abide by any and all reasonable safety rules and procedures established by Manager that are not inconsistent with this Agreement or otherwise applicable to the Shared Assets, as communicated to them in writing by the Manager prior to their access to the Shared Assets.  The Co-Owners undertake to cooperate in enforcing such requirement for limiting access to the Shared Assets, including establishing and enforcing procedures and protocol for security, safety, and protection of the Shared Assets.  To the extent any Governmental Authority attempts to compel the Co-Owners to provide public access to or use of the Shared Assets, the Co-Owners shall cooperate to dispute and resist such compulsion by any and all judicial, administrative, legislative, political and other legal means available, unless a Majority of the Co-Owners agree otherwise and no Co-Owners’ Project or an IE Project is materially adversely affected thereby.  Notwithstanding the foregoing, the Co-Owners shall comply with any Governmental Approvals’ requirements.  Additionally, to the extent any Co-Owner Project’s or an IE Project’s Governmental Approvals are expressly conditioned on providing a third party access to cross over the Shared Premises, such rights of access do not adversely impact the development, construction, operation, maintenance or repair of the Shared Facilities, any Project, or any part thereof, as confirmed by an Independent Engineer, and provided that no public right of access may be created in any Shared Facilities, all of which are the property of and allocated to the Co-Owners and their Projects, the Co-Owners shall cooperate in good faith and negotiate a resolution of such request to facilitate the Governmental Approvals.
6.10	Crossing and Collocation Rights.  Each Co-Owner hereunder shall be permitted to cross and encroach upon the Shared Premises with its Project Specific Assets (including collection, communication and fiber lines, gas and water pipes, utility services, and access roads) solely to the extent necessary to develop, construct, operate and maintain its Project or an IE Project, as applicable, provided that any such crossings, encroachments, or overhang shall be subject to the noninterference and overburdening protections of Section 3.5 above.  In particular, any Co-Owner’s exercise of rights under this Section 6.10 shall only be permitted in accordance with Prudent Industry Practices, the Shared Premises Agreements and the CUP, and shall not interfere with or endanger the construction, operation, or maintenance of the Shared Facilities or other facilities already in place on the Shared Premises.  Except as otherwise provided on Exhibit B-1 hereto, in the event of a conflict in the location or operation of the Shared Facilities and any Project Specific Assets on the Shared Premises, the Shared Facilities shall take priority over the Project Specific Assets, and any Project Specific Assets existing within the Shared Premises shall take priority over any subsequent Additional Shared Facilities or Project Specific Assets requiring the use of the Shared Premises.  For the avoidance of doubt, this Section 6.10 extends rights only to Co-Owners and not to any IE Company.
6.11	SCE Collocation of Monitoring and Control Facilities with Shared Facilities.  The Parties acknowledge and agree that SCE may require the use of the Shared Premises for the collocation of certain control, metering, and monitoring equipment servicing the Projects, and for the final connection of the Shared Facilities into the SCE Antelope Substation located in Lancaster, California.  The Parties agree to cooperate in good faith to provide SCE with rights to use the Shared Premises to so service the Projects.
6.12	Cooperation.  Upon reasonable request of a Co-Owner, each Co-Owner will cooperate in the financing or refinancing of such requesting Co-Owner’s Project or an IE Company’s IE Project, including the execution of estoppels, consents for the benefit of the Financing Parties and other similar agreements as may be reasonably requested by the requesting Co-Owner or an IE Company and its Financing Parties; in the making of any filings required by such requesting Co-Owner or IE Company for regulatory compliance or obtaining Governmental Approvals; and in the operation and maintenance of such requesting Co-Owner’s Project or an IE Project, all solely at the expense of the requesting Co-Owner or (in the case of a requesting IE Company)  Big Sky North.
6.13	Co-Owners’ Responsibilities to Manager.  The Co-Owners shall do all of the following:
6.13.1	with the exception of information and data the Manager is required to record and collect hereunder, provide the Manager with all material information, including but not limited to permits, agreements, data and documents for the Shared Assets, that is reasonably required for Manager to perform its obligations under this Agreement;
6.13.2	examine all material documents submitted by Manager and render any necessary decisions pertaining thereto promptly;
6.13.3	promptly make material decisions required under this Agreement or any other agreement that the Manager may be requested to administer hereunder and respond to all reasonable requests from Manager for approval made hereunder;
6.13.4	promptly execute and deliver such evidence of Manager’s authority hereunder as may be reasonably required by third parties; and
6.13.5	except where the same are being disputed in good faith, promptly make all payments and incur all expenditures required in connection with the Shared Assets in accordance with this Agreement and the Shared Facilities O and M Budget.
6.14	Admission of New Co-Owners.  The admission of any new Co-Owner under this Agreement (a “New Co-Owner”) shall require (a) that the New Co-Owner is developing an energy generation, storage or transmission project that will require use of some component of the Shared Assets, (b) the consent of all existing Co-Owners hereunder, except as otherwise provided under Section 17.1.1, (c) that the New Co-Owner has first obtained rights to use the underlying Shared Premises on which the Shared Facilities it wishes to use are located, by fee interest, lease, easement, sublease, subeasement, or license, as applicable, (d) the joinder of the New Co-Owner in this Agreement by a writing in which the New Co-Owner agrees to be bound by all the terms and conditions contained herein and such other amendments and documentation as may be reasonably requested by an existing Co-Owner, (e) compliance with all the terms of this Agreement, including Section 17.1 to the extent applicable, and (f) prior FERC authorization, if applicable.  Upon fulfillment of the foregoing conditions precedent, the New Co-Owner shall be granted an undivided interest in the applicable Shared Facilities by the then current Co-Owners and the Segment Interests Exhibit C attached hereto shall be modified according to the new pro-rata capacity determinations and sent to all the Co-Owners in a form acceptable to each such Co-Owner.  The New Co-Owner’s Percentage Interest hereunder shall then be calculated pursuant to Exhibit D attached hereto, which shall be modified by the Manager in a manner acceptable to each existing Co-Owner to reflect the new Percentage Interests of the existing Co-Owners and the New Co-Owner. This section does not apply to the addition of an IE Company. 
6.15	Outage or Disconnection.  To the extent any Co-Owner’s operating Project or an operating IE Project is disconnected or an outage occurs resulting in a loss of production and revenue to the Project or the IE Project, and the disconnection or outage is caused by another Co-Owner’s exercise of rights under Section 3.7 or this Section 6, the responsible Co-Owner shall reimburse the Co-Owner which suffered the loss within thirty (30) days of notice and supporting documentation of the loss. If an IE Company suffers the loss, then Big Sky North shall be treated as the relevant Co-Owner receiving reimbursement under this section and shall remit losses to the applicable IE Company pursuant to their commercial arrangements.  To the extent that any Co-Owner’s operating Project is disconnected or an outage occurs resulting in a loss of production and revenue to the Project, and the disconnection or outage is caused (in whole or in part) by an IE Company’s actions or omissions, then Big Sky North shall be responsible for the loss and shall remit such amounts to the applicable Co-Owner within thirty (30) days of notice and supporting documentation of the loss.
7.	APPOINTMENT OF MANAGER
7.1	Engagement of the Manager.  The Co-Owners hereby engage the Manager as an independent contractor of the Co-Owners to serve at the pleasure of the Co-Owners and manage, operate, and maintain the Shared Assets, and to perform other duties pertaining to the Shared Assets, all as set forth in this Agreement, but subject in all cases to the discretion and control of the Co-Owners.  The Manager accepts such engagement and agrees to perform such duties in accordance with the terms and conditions hereof.  SP Services shall be the Manager for a one (1) year term beginning on the Effective Date and such term shall be renewed annually on the anniversary of the Effective Date, unless SP Services or its successor resigns or is removed or replaced as provided by this Section 7.  Notwithstanding anything to the contrary in the foregoing, if pursuant to any provision under this Agreement, Manager is precluded from performing any service, Manager shall be relieved from its obligation to provide such service.
7.2	Relationship.  The Manager shall act as an independent contractor of the Co-Owners with respect to the performance of its obligations hereunder.  Neither the Manager nor any of its Affiliates, employees, subcontractors, vendors or suppliers, nor any employees of any of the foregoing Persons, shall be deemed to be agents, Representatives, employees, or servants of the Co-Owners as a result of this Agreement or of performing any duties hereunder, and no such Person as a result of entering into this Agreement or of performing any duties hereunder shall have the right, authority, obligation or duty to assume, create or incur any liability or obligation, express or implied, against, in the name of, or on behalf of the Co-Owners.  In no case shall this Agreement be construed to create a relationship of partnership or any other association of profit between the Co-Owners, on the one hand, and the Manager or any of its Affiliates, employees, subcontractors, vendors or suppliers, or any employees of any of the foregoing Persons, on the other hand.
7.3	Removal of the Manager.
7.3.1	Removal by Co-Owners.
(a)	Any Co-Owner may remove the Manager by written notice to the Manager and the other Co-Owners if any of the following conditions are satisfied:
(i)	Co-Owners’ Election.  A Majority of the Co-Owners elect in writing to remove the Manager for any reason in their sole and absolute discretion, and provide thirty (30) days’ written notice of termination to Manager following such election;
(ii)	For Manager Breach.  Manager (i) breaches any provision of this Agreement, or (ii) engages in negligence or willful misconduct in the performance of its obligations hereunder or fails to meet its standard of performance set forth in Section 8.14; and Manager fails to cure any such breach or action within thirty (30) days (or, if such cure cannot reasonably be completed within the thirty (30) day period, Manager fails to undertake and promptly cure such breach for a period not to exceed an additional thirty (30) days); or
(iii)	For Cessation of Operations.  Manager dissolves, liquidates, or terminates its corporate existence.
(b)	No removal of the Manager by the Co-Owners shall be effective unless and until a successor Manager is appointed with the approval of a Majority of the Co-Owners, or all the Co-Owners agree otherwise.  In the event of any removal of the Manager by the Co-Owners under this Section 7.3.1, Manager shall provide reasonable assistance to the Co-Owners to assure a smooth, efficient transition of its services to the Co-Owners, or any successor operator selected by the Co-Owners, for which Manager shall be reimbursed its reasonable expenses in connection therewith.  If so instructed by the Co-Owners, Manager shall cancel all contracts in a commercially reasonable manner or cause them to be assigned to Co-Owners and otherwise use reasonable efforts to mitigate costs associated with such cancellations or assignments; provided, however, that all such cancellation, assignment and termination costs and expenses shall be borne by the Co-Owners, and not the Manager, as a reimbursable expense; provided, further, that such amounts do not include any sums which are disputed by reason of Manager’s default; and provided, further, that the Co-Owners shall be entitled to off-set any amounts owed the Co-Owners by Manager.  Manager shall forthwith deliver to the Co-Owners any plans, designs, papers, computer data, warranties or printouts or other materials which Manager has generated or has received in the course of performing its duties hereunder.  All parts, tools and other equipment which are the property of the Co-Owners shall be returned to the Co-Owners.
7.3.2	Resignation by Manager.
(a)	Manager may resign from its position as Manager if any of the following occur:
(i)	For Co-Owner Breach.  Any Co-Owner’s failure to make undisputed payments when such payments are due and payable under this Agreement, unless within sixty (60) days after written notice from Manager to the Co-Owners of such non-payment, all such undisputed payments are made to Manager in accordance herewith;
(ii)	For Cessation of Operations.  All of the Co-Owners and the IE Companies dissolve, liquidate, or terminate their corporate existence; or
(iii)	Notice of Termination.  The Manager provides one hundred twenty (120) days’ written notice to each Co-Owner of its intention to resign as Manager hereunder.
(b)	In the event of any permitted resignation by Manager under this Section 7.3.2, Manager shall provide reasonable assistance to the Co-Owners to assure a smooth, efficient transition of its services to the Co-Owners, or any successor Manager selected by the Co-Owners, for which Manager shall be reimbursed its reasonable expenses in connection therewith, and Manager shall be entitled to any outstanding other reimbursable expenses due and payable prior to such termination pursuant to the terms of this Agreement.  If so instructed by the Co-Owners, Manager shall cancel all contracts in a commercially reasonable manner and otherwise use reasonable efforts to mitigate costs associated with such cancellations; provided, however, that all such cancellation and termination costs and expenses shall be borne by the Co-Owners, and not the Manager, as a reimbursable expense.
7.3.3	Obligations at End of Term or upon Removal or Resignation.
(a)	Manager shall perform all services with respect to the Shared Facilities as required under this Agreement through the date of termination or expiration of this Agreement or the removal or resignation of the Manager in accordance with this Section 7.3, and each Co-Owner shall make all payments required by it hereunder through such date, with such payment to be made in full within thirty (30) days after such termination, expiration, removal or resignation.
(b)	The Manager shall deliver to the Co-Owners all of the Co-Owner Property (including any copies thereof) upon expiration or termination of this Agreement or the removal or resignation of the Manager in accordance with this Section 7.3 and upon request of the Co-Owners from time to time.  Upon expiration or termination of this Agreement or the removal or resignation of the Manager in accordance with this Section 7.3, the Parties shall cooperate with one another in the orderly transfer of services, including providing all information, service schedules, reports and other data in the Manager’s possession and relating to the Shared Facilities and, at the Co-Owners’ request, any rights under any contracts with subcontractors to the extent assignable; provided, however, that any such efforts requested by the Co-Owners and performed by the Manager after the date of termination or expiration of this Agreement (for any reason) shall be a reimbursable expense and compensated in accordance with Section 7.4.1.
7.4	Manager Fees and Reimbursement.
7.4.1	Fixed Fee.  As consideration for the services to be performed by Manager hereunder, beginning on the Effective Date, the Manager shall be paid an annual fee (as adjusted pursuant to Section 7.4.2) equal to Eighty Thousand Dollars ($80,000) (the “Fixed Fee”). The Fixed Fee shall be payable monthly in arrears at the rate of one-twelfth (1/12th) of the annual Fixed Fee, and may be prorated for partial months at the beginning and end of the Term hereof. If any of the Co-Owners declare Force Majeure, the Co-Owners shall continue to pay the Manager the Fixed Fee (as adjusted pursuant to this Section 7.4) and the reimbursable expenses in accordance with Section 7.4.3. The Fixed Fee shall be allocated among, and paid by, the Co-Owners in proportion to their respective Percentage Interests.
7.4.2	Fee Adjustment. The Fixed Fee shall be increased (but not decreased) annually by three percent (3%) for each calendar year after the Effective Date.
7.4.3	Reimbursement Expenses.  The Manager shall be paid or reimbursed for any unscheduled maintenance, repairs to and replacements of the Shared Facilities, and any other work not listed on Exhibit E performed by, or on behalf of, Manager in accordance with the billable rate schedule set out in Exhibit F (subject to Section 8.2.3).  The Manager shall have the right to pre-invoice the Co-Owners for any materials and components required to be provided hereunder, and not to proceed with the acquisition of such materials and components unless payment has been received by Manager for such materials and components, except in cases of Emergency.  The reimbursed expenses shall be allocated among, and paid by, all those Co-Owners in proportion to their respective Segment Interests.
7.4.4	Untimely Payment.  In the event the Co-Owners fail to make timely payment of a properly rendered invoice in accordance with this Agreement, then any Co-Owners failing to pay their respective allocated share of such invoiced amount in accordance with this Agreement shall be jointly and severally responsible for any interest charged by a vendor or contractor as a result of the late payment of such invoice.
8.	DUTIES OF THE MANAGER
8.1	In General.  The Manager shall cause the Shared Assets to be operated and maintained at the direction of the Co-Owners and in accordance with (a) all applicable Laws, (b) Prudent Industry Practices, (c) the terms and conditions of the Shared Premises Agreements and the CUP, (d) applicable Land Matters, (e) applicable Governmental Approvals, (f) all applicable requirements of the Interconnection Provider, including but not limited to requirements set forth in the Interconnection Agreements, and (g) the terms and provisions of this Agreement, including taking the actions described in Exhibit E attached hereto.  All decisions with respect to the Shared Assets shall be made by the Co-Owners, who may then direct the Manager accordingly, and only upon such direction (unless otherwise expressed herein), shall Manager have authority to act on behalf of the Co-Owners with respect to any matters relating to the Shared Assets.  All decisions with respect to the CUP shall be made by the Co-Owners, who may then direct the Manager accordingly, and only upon such direction (unless otherwise expressed herein), shall Manager have authority to act on behalf of the Co-Owners with respect to any matters relating to the CUP.
8.2	Specific Authority.  Without limiting the generality of the foregoing, a Majority of the Co-Owners may direct Manager to take any of the following actions:
8.2.1	to perform the day-to-day management and operations activities described on Exhibit E;
8.2.2	to negotiate, enter into, execute, acknowledge or amend agreements relating to the use, operation, maintenance, and repair of the Shared Assets (as permitted by this Agreement, including Exhibit E, but expressly excepting (a) any Shared Premises Agreements and (b) the CUP) on behalf of the Co-Owners, in each case in accordance with the then-applicable Approved Shared Facilities O and M Budget, and provided that (i) no such actions adversely affect the rights or privileges of any of the Co-Owners or their use of, operation access to or availability of the Shared Assets and (ii) the Manager shall provide each Co-Owner with copies of any such agreement promptly upon execution thereof;
8.2.3	to employ from time to time, at the expense and direction of the Co-Owners, Persons, firms or corporations to render services generally needed to accomplish the purposes of the Co-Owners with respect to the Shared Assets, subject to Exhibit E, and provided that if the Manager retains any party who is an Affiliate of the Manager for any of these purposes, the fees charged shall be based on the fair market value for similar services, and the Manager shall not be entitled to any percentage mark-up;
8.2.4	to pay and collect amounts due in connection with the Shared Assets, and to maintain one or more bank accounts wherein funds received by the Manager in connection with its duties hereunder shall be maintained, in each case in accordance with the then-applicable Approved Shared Facilities O and M Budget;
8.2.5	to expend monies necessary for the management, operation, maintenance, and repair of the Shared Facilities (in accordance with the Approved Shared Facilities O and M Budget);
8.2.6	to negotiate with, and represent the Co-Owners’ interests before, any Governmental Authority regarding property valuation and real property taxes (if any) related to the Shared Assets; 
8.2.7	to execute, acknowledge, and deliver any and all instruments and take such other steps as are reasonably necessary to effectuate the foregoing and as are consistent therewith; 
8.2.8	to perform under the Verizon Fiber Agreement.
8.3	Limitation on Authority.
8.3.1	The Manager shall not, without the approval of all of the Co-Owners:
(a)	Create or cause to be created any Lien on any of the Shared Assets; 
(b)	Amend or modify the terms of this Agreement;
(c)	Amend, modify or terminate (i) any Shared Premises Agreements (except that the consent of only all the Co-Owners who are parties to such Shared Premises Agreements shall be required) or (ii) the CUP;
(d)	Perform or omit to perform any act which would cause any Person reasonably to believe that the Manager is a partner of the Co-Owners or authorized to bind such Co-Owners, except as expressly authorized herein;
(e)	Sell, assign, mortgage, encumber, convey or otherwise transfer all or any portion of the undivided interests held by any Co-Owner, or any components of the Shared Assets (other than due to obsolescence or upon winding up hereunder);
(f)	Borrow funds or otherwise incur indebtedness on behalf of a Co-Owner;
(g)	Procure any insurance coverage that is less than the coverages required by Section 12; or
(h)	Adopt any Shared Facilities O and M Budget or amend or modify any Approved Shared Facilities O and M Budget.
(i)	Commit to expenditures in excess of the amounts set forth in the Approved Shared Facilities O and M Budget, for or on behalf of the Co-Owners.
(j)	Compromise or settle (i) any single claim, demand, class action proceeding, or debt in which the amount of damages is in excess of Ten Thousand Dollars ($10,000), increased annually for each calendar year after the Effective Date by the percentage change in the GDPIPD, or (ii) claims, demands, class action proceedings or debt in which the aggregate amount of damages during any calendar year is in excess of Ten Thousand Dollars ($10,000), increased annually for each calendar year after the Effective Date by the percentage change in the GDPIPD; or
(k)	Incur cumulative expenses greater than the amounts set forth in the Approved Shared Facilities O and M Budget.
8.4	Additional Shared Assets.  Upon a permitted acquisition of any Additional Shared Assets under Section 3.6 or 3.7 or otherwise, the Manager will prepare amendments to Exhibit C to reflect the addition of the Additional Shared Assets, which will be submitted to each Co-Owner for its review and approval.
8.5	Reporting; Notices; Records.  The Manager shall, from time to time, provide reports to the Co-Owners sufficient to keep the Co-Owners reasonably apprised as to significant matters concerning the maintenance and repair of the Shared Assets, including such matters related thereto as may have a material impact on the operation, maintenance and repair of each Co-Owner’s Project.  The Manager’s reporting obligations shall include all of the following:
8.5.1	Providing monthly reports by the fifteenth (15th) Business Day of the following month and attending such regular monthly and/or quarterly meetings or conference calls as the Co-Owners may reasonably request; provided the Manager receives at least seven (7) days’ prior notice of such meetings (or at least forty-eight (48) hours’ prior notice of such conference calls).
8.5.2	Collecting data and information regarding the Shared Facilities’ performance and generating for the Co-Owners performance reports setting forth, among other information reasonably required by the Co-Owners, the Shared Facilities’ performance and availability.
8.5.3	Promptly after receiving the same, providing to the Co-Owners written notice of any communications, orders or requirements of any Governmental Authority affecting the Shared Assets.
8.5.4	Cooperating fully and providing such records and other information as may be requested by any Co-Owner in connection with (i) the filing of its tax returns, (ii) the maintenance and retention of its books and records, (iii) any financial reporting or other disclosures that may be required, and (iv) any audit, litigation or other proceeding by any Governmental Authority, including those that pertain to Taxes.
8.5.5	Collecting and providing any information, to the extent such information is in Manager’s possession or is reasonably available to Manager, regarding the Shared Assets required for any reports to any Governmental Authorities.
8.5.6	Reporting promptly (and in any event within twenty-four (24) hours of becoming aware of an incident) to the Co-Owners and to any other Persons entitled to receive such notice any incident of explosion, fire, storm, or other Emergency on the Shared Premises or any Project Site, or otherwise affecting any of the Shared Facilities, of which it becomes aware.
8.5.7	Providing prompt written notice to the Co-Owners, all in commercially reasonable detail upon learning of the event requiring notice, of (x) any actual violation of any applicable Law, including a requirement of any Governmental Approval, Land Matters, Shared Premises Agreements or the CUP and (y) all events, occurrences, conditions, and issues that the Manager reasonably considers are material to, or are reasonably likely to have a material adverse effect on, the operation, maintenance, or results of operations, including notices of Liens and claims of Liens and any and all notices under any project agreements of defaults, events or other conditions required to be reported to the counterparties thereunder.
8.5.8	Providing such other reports and information as may be reasonably requested by the Co-Owners under the terms of this Agreement.
8.5.9	To the extent that Solverde 1 is a Co-Owner and the California Department of Water Resources (“DWR”) is the offtaker pursuant to a power purchase agreement with Solverde 1, the Manager shall, promptly following receipt of notice of an occurrence of an Event of Default, provide DWR with written notice of such Event of Default.
8.6	Access; Audit Rights.  The Manager shall allow the Co-Owners and the Co-Owners’ authorized Representatives reasonable access to the Shared Assets to inspect and audit the books and records maintained by the Manager with respect to the Shared Assets (at the Co-Owners’ sole cost and expense); provided, that the Co-Owners shall only have the right to inspect and audit such books and records for any period that is within seven (7) calendar years from the date of an applicable payment made hereunder or the final settlement or disposition of any claim made pursuant to this Agreement.  If any such inspection or audit discloses an error and that, as a result thereof, any overpayment or any underpayment has occurred hereunder, the amount thereof shall be paid within thirty (30) days after receipt of an invoice (with reasonable supporting detail) with interest (except that any underpayment caused by the actions or inactions of Manager will not bear interest) at the Default Rate to the Party to whom it is owed by the other Parties obligated therefor; provided, that a Party shall only be liable for any amounts hereunder that relate to errors discovered and disclosed within the inspection and audit period provided for in this provision.
8.7	Shared Facilities O and M Budget.
8.7.1	Within ninety (90) days after the Effective Date and no later than November 1 of each calendar year during the term, the Manager shall deliver to the Co-Owners a proposed budget for operation, maintenance and repair of the Shared Assets for the following calendar year, or the portions of the year remaining ninety (90) days after the Effective Date (each, a “Shared Facilities O and M Budget”), describing the scheduled work to be completed in the following calendar year and the general operational plans for the Shared Assets during such year, including responsibilities and emergency procedures, and detailing the expected revenue and expenses for the following calendar year, including explanations for any material differences from the prior calendar year, and such draft budget shall include, at a minimum, the billing rates, estimated cost based on time and materials, and all fees and reimbursable costs contemplated in this Agreement, for anticipated operation and maintenance services and repairs to be provided by or contracted for by the Manager during each month of the following year (or portions thereof), including any Shared Expenses.  The Shared Facilities O and M Budget shall set forth the respective amounts allocated to the different Co-Owners in accordance with the allocation of Shared Expenses provided in Section 4.2.  When approved pursuant to Section 8.7.2, the Shared Facilities O and M Budget shall be the “Approved Shared Facilities O and M Budget” for such year.
8.7.2	The Co-Owners shall have twenty (20) days from receipt of a proposed Shared Facilities O and M Budget either to approve or disapprove the same.  A Co-Owner’s failure to disapprove a proposed Shared Facilities O and M Budget within such thirty (30) day period shall constitute such Co-Owner’s approval of such Shared Facilities O and M Budget.  If the Shared Facilities O and M Budget is approved by at least a Majority of the Co-Owners, the Shared Facilities O and M Budget will be the Approved Shared Facilities O and M Budget for the following year.  In the event that a proposed Shared Facilities O and M Budget is not approved within the time indicated, the Shared Facilities O and M Budget prepared and approved for the previous year shall be utilized until such time as the new Shared Facilities O and M Budget is approved.
8.7.3	If, during any calendar year, the Manager believes that a variance (in excess of the permitted variances described in subsection 8.7.4 below) is reasonably likely to occur between the actual expense of operating and maintaining the Shared Assets and the budgeted expense for a particular material budget item as provided in the then applicable Approved Shared Facilities O and M Budget, the Manager shall timely notify the Co-Owners of such belief in writing and advise the Co-Owners of the necessary revisions to the Approved Shared Facilities O and M Budget and the reasons for those revisions.  If a Majority of the Co-Owners agree, the Co-Owners and the Manager shall proceed in good faith to revise the Approved Shared Facilities O and M Budget in such manner for the balance of the year.
8.7.4	The commercially reasonable and necessary costs and expenses incurred by the Manager in excess of any line item on the Approved Shared Facilities O and M Budget will not require any additional approval of the Co-Owners, provided that such additional expenses do not cause the overall Approved Shared Facilities O and M Budget to be exceeded and such expenses are otherwise incurred in accordance with the most recently Approved Shared Facilities O and M Budget. 
8.8	Emergencies.  In the event of any Emergency involving the Shared Assets, the Manager shall take such action as may be reasonable and necessary to prevent, avoid or mitigate injury, loss of life, or damage or destruction of property and shall, as soon as reasonably practicable, report any such Emergency, including the Manager’s response thereto, to the Co-Owners.
8.9	Cooperation with Lenders and Other Financing Parties.  Notwithstanding any other provision of this Agreement, Manager shall, during normal business hours and upon reasonable prior notice, cooperate with Co-Owners’ and an IE Company’s Financing Parties and their advisors and consultants and shall make all information, reports, logs and other documents relating to the Shared Assets available to such Financing Parties and their advisors and consultants, and shall make Manager’s personnel available for consultation with such Financing Parties and their advisors and consultants, all as reasonably requested.  The Manager also agrees that it shall, at any time and from time to time during the term of this Agreement, after receipt of a written request by any of the Co-Owners or an IE Company, execute and deliver to such Co-Owners, IE Company, and/or any Financing Parties, any consents to collateral assignments or estoppel statements as may reasonably be requested.
8.10	Obligations.  The Manager shall have no liability for any obligations except those expressly stated in this Agreement, and nothing in this Agreement shall obligate the Manager to perform any duties or assume any liabilities under any agreement to which the Manager is not directly a party unless such duties are also expressly stated in this Agreement and then only to such extent.  The Co-Owners acknowledge that the Manager’s performance under this Agreement is dependent upon the Manager having access to all parts of the Shared Assets and access to all documents as reasonably required by the Manager, and having required approvals and decisions from the Co-Owners.
8.11	Inspection by Co-Owners.  The Co-Owners, through their employees, agents, lenders, experts or Representatives, have the right, at all reasonable times, at the expense of the Co-Owners, (a) to inspect or cause to be inspected, the (i) services of Manager, (ii) the Shared Assets, and (iii) equipment, materials and methods to be used in the operation and maintenance of the Shared Assets; provided, however, that such inspection shall not unreasonably interfere with the operation and maintenance of the Shared Assets, and any Persons inspecting the work shall abide by any and all reasonable safety rules and procedures established by Manager that are not inconsistent with this Agreement or otherwise applicable to the Shared Assets, as communicated to them in writing by the Manager prior to their access to the Shared Premises, (b) to attend any and all operation and maintenance meetings; provided, however, that such attendance shall not unreasonably interfere with Manager’s performance of its obligations under this Agreement or in connection with the Shared Assets or the operation and maintenance of the Shared Assets, and (c) to access, for themselves and their employees, agents, Representatives or advisors, to all parts of the Shared Assets.  For purposes of clause (b) immediately above, the Manager shall give the Co-Owners reasonable advance notice of all material construction meetings in order to permit each of the Co-Owners to send a Representative to such meeting, if it so desires.  The Co-Owners’ review or inspection of any services provided by the Manager hereunder will not be construed as constituting approval or acceptance of such services.  The Manager at all times will retain responsibility for the services that meet the requirements of this Agreement, regardless of whether or not the Co-Owners have reviewed or inspected such services, plans, documentation or other acts or items.
8.12	Risk of Loss.  As between the Co-Owners and Manager, the Co-Owners (for the Shared Facilities, in proportion to their respective Segment Interests; and with respect to the Shared Premises, in proportion to the relative Percentage Interests of those Co-Owners which are parties to the applicable Shared Premises Agreements) shall be responsible for the risk of loss to the Shared Assets or any portion thereof during the term of this Agreement.
8.13	Manager Representative.  On or promptly after the Effective Date, the Manager shall, by written notice to the Co-Owners, designate an individual representative (the “Manager Representative”) whose instructions, requests, and decisions will be binding upon such Manager in all matters concerning this Agreement, except that the Manager Representative shall not have the authority to amend this Agreement.  The Manager shall have the right to change the Manager Representative at any time and from time to time by written notice to the Co-Owners.
8.14	Standards of Performance.  Throughout the term of this Agreement, Manager shall perform the services and all other obligations under this Agreement as directed by the Co-Owners, and otherwise in accordance with Prudent Industry Practices, the requirements of any financing agreements or other project agreements (which requirements will be related to Manager by the Co-Owners), the Shared Premises Agreements, the CUP, the Interconnection Agreements, and all applicable Laws, Land Matters, and Governmental Approvals.  Manager shall be responsible, in connection with its performance hereunder, for, (i) all payroll, withholding, old age, social security, unemployment, accident insurance, health insurance, employee benefit, and other taxes of employees of Manager, (ii) all Taxes with respect to compensation paid to Manager, including income and franchise Taxes, and (iii) all surcharges, penalties, fees and other governmental amounts and charges relating thereto.
8.15	Assignment of Warranties.  The Manager shall be responsible for enforcing all manufacturer, constructor and other warranties with respect to the Shared Facilities and any parts or materials associated therewith on behalf of the Co-Owners.  All of the Co-Owners and Manager shall cooperate in the enforcement of the foregoing warranties, and to the extent possible, any Co-Owner holding a warranty for a portion of the Shared Facilities shall assign such warranty to Manager for enforcement and collection, and any funds received in lieu of repair or replacement shall be used for repair or replacement of the affected Shared Facilities.  Any excess warranty funds shall be distributed to those Co-Owners with a Segment Interest in the applicable Shared Facilities in proportion to their Segment Interest.  The Manager’s out-of-pocket costs and expenses incurred in enforcing said warranties shall be included in the Shared Expenses hereunder.
8.16	Rights of Co-Owners; License of Co-Owner Property.
8.16.1	The Manager hereby acknowledges and agrees that the Co-Owners shall hold title to all specialized equipment, tools, parts, reports, data, information, records, books, plans, designs, papers or printouts or other information used by the Manager in the performance of Manager’s obligations under this Agreement to the extent such assets have been paid for by the Co-Owners, including those which the Manager has generated, received or purchased (but has been reimbursed by the Co-Owners) in the course of performing its duties hereunder (“Co-Owner Property”), but excluding any Manager owned or licensed property (including software, or other intellectual property developed outside of the scope of the services provided hereunder) (“Manager Property”).  Notwithstanding the foregoing, Co-Owner Property does not include personnel records, information about Manager’s internal costs or internal business practices, trade secrets or other confidential information of the Manager, materials covered by legal privilege, or materials relating to any audit or Dispute between the Parties or between Manager and any other Person.
8.16.2	To the extent that a Co-Owner is authorized by any applicable third party licenses and Laws applicable to such Co-Owner Property, the Co-Owners hereby grant the Manager (including its relevant subcontractors) a paid-up, worldwide license to use the Co-Owner Property in connection with this Agreement.  Such license shall automatically expire immediately upon the termination or expiration of this Agreement; provided that Manager may retain a copy of Co-Owner Property (other than equipment, tools and parts) as Manager deems necessary for compliance with Law or for audit purposes.  To the extent that Manager is authorized by any applicable third party licenses and Laws applicable to such Manager Property, the Manager hereby grants to the Co-Owners (including their relevant subcontractors) a paid-up, worldwide license to use the Manager Property in connection with this Agreement.  Such license shall automatically expire immediately upon the termination or expiration of this Agreement; provided that a Co-Owner may retain a copy of the Manager Property (other than equipment, tools and parts) as such Co-Owner deems necessary for compliance with Law or audit purposes.
8.17	Manager Duties Related to Project Specific Assets.  At the request of a Co-Owner, the Manager may negotiate, enter into, execute, acknowledge or amend agreements relating to the operation, maintenance, and repair of such Co-Owner’s or an IE Company’s Project Specific Assets, and employ from time to time, at the expense of such Co-Owner’s (or, in the case of an IE Company, Big Sky North’s) expense, Persons, firms or corporations to render services generally needed to accomplish such activities.  The Manager shall directly pass through any costs that it incurs under this Section 8.17 to the requesting Co-Owner (or, in the case of a requesting IE Company, Big Sky North), and such Co-Owner shall pay all such costs on a prompt and timely basis, consistent with the timelines established in Section 4.3.  
9.	REPRESENTATIONS AND WARRANTIES
9.1	Representations and Warranties.  As of the date of this Agreement, each Party represents and warrants to each other Party that:
9.1.1	it is duly organized, validly existing and in good standing under the Laws of the jurisdiction of its organization or incorporation;
9.1.2	it has the power to execute and deliver this Agreement and to perform its obligations under this Agreement and has taken all necessary corporate, company, partnership and/or other actions to authorize such execution and delivery and performance of such obligations;
9.1.3	its execution and delivery of this Agreement and its performance of its obligations under this Agreement do not violate or conflict with any Law applicable to it; with any provision of its charter or bylaws (or comparable constituent documents); with any order or judgment of any court or other agency of government applicable to it or any of its assets; or with any contractual restriction binding on or affecting it or any of its assets;
9.1.4	all authorizations of and exemptions, actions or approvals by, and all notices to or filings with, any Governmental Authority that are required to have been obtained or made by it at the time this representation is made with respect to this Agreement have been obtained or made and are in full force and effect, and all conditions of any such authorizations, exemptions, actions or approvals have been complied with;
9.1.5	this Agreement constitutes the Party’s legal, valid, and binding obligation, enforceable against it in accordance with its terms (subject to applicable bankruptcy, reorganization, insolvency, moratorium or similar Laws affecting creditors’ rights generally and subject, as to enforceability, to equitable principles of general application, regardless of whether enforcement is sought in a proceeding in equity or at law); and
9.1.6	except as otherwise permitted herein, it has neither initiated nor received written notice of any action, proceeding, or investigation pending, nor to its knowledge is any such action, proceeding, or investigation threatened (or any basis therefor known to it), which questions the validity of this Agreement, or which would materially or adversely affect its rights or obligations as a Party.
9.2	Exclusivity of Warranties.  THE REPRESENTATIONS AND WARRANTIES PROVIDED IN THIS AGREEMENT ARE EXCLUSIVE, AND NO OTHER WARRANTIES OF ANY KIND, WHETHER STATUTORY, EXPRESS, OR IMPLIED (INCLUDING ALL WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE) WILL APPLY TO THE SUBJECT MATTER OF THIS AGREEMENT.
10.	FORCE MAJEURE
Notwithstanding any other provision of this Agreement, each Party’s obligations under this Agreement shall be suspended by any Force Majeure if and to the extent that such Party is prevented or delayed from performing by reason of the Force Majeure; provided, however, that (a) the prevention or delay of performance shall be of no greater scope and of no longer duration than is necessarily caused by the Force Majeure and required by any remedial measures, (b) no obligations of any Party that arose before the occurrence of such causes shall be excused as the result of the occurrence, and (c) each Party shall use reasonable commercial efforts to remedy its inability to perform; provided, further, that no Force Majeure shall excuse any payment obligations of either the Manager or the Co-Owners due hereunder.  If the performance by any Party of its obligations under this Agreement is affected by any Force Majeure, such Party shall as soon as practicable notify the other Parties of the nature and extent thereof.
11.	INDEMNIFICATION
11.1	Indemnity by the Manager.  To the full extent permitted by Law, Manager agrees to indemnify, defend and hold harmless each of the Co-Owners (as well as Big Sky North on behalf of the IE Companies) and their directors, managers, officers, shareholders, partners, members, Affiliates, employees, agents, Representatives, successors and assigns (collectively, the “Co-Owner Indemnified Parties”), from and against any and all Liabilities, including any damage to or an outage of a Project, to the extent arising out of or related to any breach of this Agreement by the Manager, any grossly negligent act or omission of Manager, or any Hazardous Materials spilled, generated, released or introduced into or on the Shared Premises or a Project Site by, through or under Manager.  The indemnification provided under this Section 11.1 will not apply to the extent the Liabilities are caused by the gross negligence or intentionally wrongful acts or omissions of any of the applicable Co-Owner Indemnified Parties, or to the extent the Liability gives rise to an indemnification claim against a Co-Owner Indemnified Party in favor of Manager pursuant to Section 11.2. 
11.2	Co-Owner Indemnification.  To the full extent permitted by Law, each Co-Owner  (as well as Big Sky North on behalf of the IE Companies) agrees to indemnify, defend and hold harmless each other Co-Owner (as well as Big Sky North on behalf of the IE Companies), Manager and the other Co-Owners’ and Manager’s directors, managers, officers, shareholders, partners, members, Affiliates (other than the indemnifying Co-Owner), employees, agents, Representatives, successors and assigns (collectively, the “Other Indemnified Parties”), from and against any and all Liabilities, including any damage to or an outage of another Co-Owner’s Project or an IE Project, to the extent arising out of or related to any breach of this Agreement by the indemnifying Co-Owner (including any breach by any agent or contractor of the Co-Owner or an IE Company), any grossly negligent act or omission of the indemnifying Co-Owner (and for Big Sky North, including the IE Companies), or any Hazardous Materials spilled, generated, released or introduced into or on the Shared Premises or a Project Site by, through or under the indemnifying Co-Owner (and for Big Sky North, including the IE Companies).  The indemnification provided under this Section 11.2 will not apply to the extent the Liabilities are caused by the gross negligence or intentionally wrongful acts or omissions of any of the applicable Other Indemnified Parties, or to the extent the Liability gives rise to an indemnification claim against an Other Indemnified Party in favor of the indemnifying Co-Owner pursuant to Section 11.1.
11.3	Notice and Legal Defense.  Promptly after receipt by a Co-Owner Indemnified Party or an Other Indemnified Party under this Section 11 or other parts of this Agreement of any claim or notice or the commencement of any action, administrative or legal proceeding, or investigation as to which indemnity provided for in this Section 11 may apply with respect to a claim made by a third party, the applicable Co-Owner Indemnified Party or Other Indemnified Party will notify the indemnifying Party hereunder in writing of such fact.  The indemnifying Party hereunder will assume the defense thereof with counsel designated by the applicable Co-Owner Indemnified Party or Other Indemnified Party and reasonably satisfactory to the indemnified Party; provided that if the defendants in any such action include both the indemnified Party and the applicable Co-Owner Indemnified Party or Other Indemnified Party, and the indemnified Party will have reasonably concluded that there may be legal defenses available to it which are different from or additional to, or inconsistent with, those available to the applicable Co-Owner Indemnified Party or Other Indemnified Party, the indemnified Party will have the right to select separate counsel to participate in the defense of such action on behalf of the indemnified Party, at the applicable Co-Owner Indemnified Party’s or Other Indemnified Party’s reasonable expense.  The applicable Co-Owner Indemnified Party or Other Indemnified Party will not, without the written consent of the indemnified Party, (a) settle or compromise any indemnity claim or consent to the entry of any final judgment that does not include as an unconditional term thereof the delivery by the claimant or plaintiff of a written release or releases from all liability in respect of such indemnity claim of all indemnified Parties affected by such indemnity claim, or (b) settle or compromise any indemnity claim if the settlement imposes equitable remedies or material obligations on the indemnified Party other than financial obligations for which such indemnified Party will be indemnified under this Agreement.  No indemnity claim that is being defended in good faith by the applicable Co-Owner Indemnified Party or Other Indemnified Party will be settled or compromised by the indemnified Party without the written consent of the applicable Co-Owner Indemnified Party or Other Indemnified Party.
11.4	Failure to Defend Action.  Should the indemnified Party be entitled to indemnification under this Section 11 as a result of a claim by a third party, and the indemnifying Party fails to assume the defense of such claim, the indemnified Party may, at the expense of the indemnifying Party, contest (or, with the prior written consent of the indemnifying Party, settle) such claim.
11.5	Indemnification Amount.  In the event that an indemnifying Party is obligated to indemnify and hold harmless an indemnified Party under this Section 11, the amount owing to the indemnified Party will be the amount of such indemnified Party’s reasonable, actual out-of- pocket loss, net of any insurance or other recovery.
11.6	Supremacy and Survival.  The provisions expressed in this Section 11 will prevail over any conflicting or inconsistent provisions contained elsewhere in this Agreement and will survive termination of this Agreement.  This Section 11 shall survive the termination or expiration of this Agreement until the expiration of the applicable statute of limitations.
11.7	Waiver of Consequential Damages.  EXCEPT IN CASES OF FRAUD OR WILLFUL MISCONDUCT, NEITHER MANAGER NOR ANY OTHER PARTY SHALL BE LIABLE FOR ANY PUNITIVE, EXEMPLARY, CONSEQUENTIAL OR SPECIAL DAMAGES THAT ARISE OUT OF, RELATE TO, OR ARE OTHERWISE ATTRIBUTABLE TO THIS AGREEMENT OR THE PERFORMANCE OR NON- PERFORMANCE OF SERVICES, OR ANY ADDITIONAL SERVICES, OR OTHER DUTIES HEREUNDER, EXCEPT TO THE EXTENT SUCH DAMAGES ARE OWED TO UNAFFILIATED THIRD PARTIES IN RELATION TO A LOSS FOR WHICH ONE PARTY OWES INDEMNITY OBLIGATIONS TO THE OTHER PARTY UNDER THIS AGREEMENT.  FOR AVOIDANCE OF DOUBT, LOST REVENUES FROM LOST PRODUCTION OR PRODUCTION RESULTING FROM AN OUTAGE, DISCONNECTION, OR DAMAGE TO A PROJECT SHALL NOT BE CONSIDERED CONSEQUENTIAL DAMAGES HEREUNDER, AND SHALL BE FULLY RECOVERABLE DAMAGES FOR ANY CLAIMS ARISING HEREUNDER, INCLUDING CLAIMS FOR INDEMNIFICATION UNDER THIS SECTION 11 OR CLAIMS FOR AMOUNTS DUE UNDER SECTION 6.15.
12.	INSURANCE
12.1	Co-Owners’ Insurance Requirements.  For the duration of this Agreement, the Co-Owners shall, and Big Sky North shall cause each IE Company to, at their sole cost and expense, maintain the insurance policies and coverages described in Part A (Required Insurance Coverages of Co-Owners) of Exhibit G and Manager shall procure such insurance coverage described on Part C (Required Insurance Coverage on the Shared Facilities) of Exhibit G on behalf of all of the Co-Owners, and the Co-Owners which have commenced the use of any of the Shared Premises shall bear responsibility for premiums and deductibles therefor in proportion to their respective Segment Interests.
12.2	Manager’s Insurance Requirements.  For the duration of this Agreement, the Manager shall, at its sole cost and expense, procure and maintain the insurance policies and coverages described in Part B (Required Insurance Coverages of Manager) of Exhibit G.
12.3	Evidence, Terms and Modification of Insurance.
12.3.1	Each Party (and Big Sky North on behalf of each IE Company) shall provide the other Parties with insurance certificates reasonably acceptable to the other Parties, evidencing that insurance coverages are in compliance with this Agreement.  Such insurance and certificates shall (i) name the other Party’s group (i.e., Co-Owners or Manager, as applicable) as an additional insured under the Commercial General Liability, Employer’s Liability, Auto Liability and Umbrella Liability policies to the extent of their respective interests; (ii) provide a waiver of any rights of subrogation against the other Party’s group (i.e., Co-Owners or Manager, as applicable); and (iii) indicate that the Commercial General Liability and Umbrella Liability policies have been endorsed as described above.  All policies of a Party shall be written with insurers that the other Parties, in their reasonable discretion, deem acceptable (such acceptance will not be unreasonably withheld or delayed).  All policies shall be written on an occurrence basis, except as provided in subsection 12.3.2.  Such insurance as afforded by the CGL and Umbrella Liability policies for the benefit of the other Party shall be primary as respects any claims, losses, damages, expenses, or Liabilities arising out of each Party’s actions within this Agreement, and insured hereunder, and any insurance carried by the other Party shall be excess of and noncontributing with insurance afforded by the CGL  and  Umbrella policies such that, except for the limits of insurance, the insurance shall apply separately to each insured against whom a claim is made or suit is brought.  No Party’s liability under this Agreement is limited to the amount of insurance coverage required herein by virtue of this Section 12.3.
12.3.2	If any insurance required to be maintained by a Party hereunder ceases to be available on commercially reasonable terms in the commercial insurance market, such Party shall provide written notice to the other Parties, accompanied by evidence demonstrating that such insurance is not available on commercially reasonable terms in the commercial insurance market for electric generating plants of similar type, geographic location and design.  Upon receipt of such notice and required evidence, such first-mentioned Party shall use commercially reasonable efforts to obtain other insurance that would provide comparable protection against the risk to be insured, and the other Party shall not unreasonably withhold its consent to modify or waive such requirement.
13.	CONFIDENTIALITY
13.1	Confidentiality.
13.1.1	The Confidential Information shall not be disclosed or permitted to be disclosed by the Receiving Party to any other Person or entity not a Party hereto without the prior written consent of the Disclosing Party, except:
(a)	to the Receiving Party’s Representatives and to the IE Companies and their Representatives; provided that the Receiving Party and/or Big Sky North (on behalf of the IE Companies) guarantee the adherence of the respective Affiliates and/or the IE Companies, as applicable, to, and will be responsible for their breach of, this Section 13.1; and
(b)	to the extent such information is required to be disclosed under applicable Law or stock exchange regulations or by a governmental or court order, decree, regulation or rule; provided that the Receiving Party makes all commercially reasonable efforts to give prompt written notice to the Disclosing Party as far as possible in advance of such disclosure to permit the Disclosing Party to obtain a protective order against or otherwise to limit the disclosure (in connection with which the Receiving Party shall reasonably cooperate with the Disclosing Party); and provided, further, that, in any case, the Receiving Party shall only disclose that portion of the Confidential Information that, in the opinion of the Receiving Party’s legal counsel, is required to be disclosed and shall use its commercially reasonable efforts to ensure further confidential treatment of the Confidential Information so disclosed.
13.1.2	The Receiving Party shall use the Confidential Information, or permit the same to be used by the Receiving Party’s Representatives or an IE Company and an IE Company’s Representatives, in connection with the Receiving Party’s exercise of its rights and performance of its obligations under this Agreement and for no other purpose whatsoever.
13.1.3	The Parties acknowledge that the Disclosing Party would not have an adequate remedy at law for money damages if the covenants contained in this Section 13.1 were breached.  Accordingly, the Disclosing Party shall be entitled to an injunction restraining such disclosure and other equitable relief (including specific performance), without the requirement of posting a bond or other security.
14.	CO-OWNER EVENTS OF DEFAULT; REMEDIES; LIMITATION OF LIABILITY
14.1	Events of Default.  The occurrence and continuation of any of the following events at any time during the term of this Agreement, except to the extent caused by, or resulting from, an act or omission of another Party in breach of this Agreement or an event of Force Majeure, will constitute an event of default of a Party (an “Event of Default”):
14.1.1	Payment.  The Party fails to pay when due any amounts required to be paid by such Party under this Agreement, and such failure to pay is not cured within fifteen (15) days following written notice from Manager or any other Party specifying the amount to be paid, provided that such period will be extended for so long as the allegedly defaulting Party is disputing in good faith such amount pursuant to the procedures set forth in Section 16.
14.1.2	Shared Premises Agreements; CUP.  A Party breaches, or causes the breach of, a Shared Premises Agreement or the CUP and fails to cure such breach within the time permitted by such Shared Premises Agreement or CUP, after receipt of a notice of default under the Shared Premises Agreement or CUP to cure, or cause to be cured, the default described therein, as is given to the defaulting Party.  Each Party agrees to provide a copy of any notice of default under a Shared Premises Agreement or the CUP that is received by it to the other Parties within twenty-four (24) hours of receiving such notice of default, regardless of the party or the contract that is alleged to be in default in the notice. 
14.1.3	Interconnection Agreements.  The Party (or, in the case of Big Sky North, an IE Company) breaches, or causes the breach of, its respective Interconnection Agreement and the exercise of any remedies for such breach would have a material adverse effect on any of the Shared Assets or this Agreement or any of the non-defaulting Parties’ Projects or a non-breaching IE Company’s IE Project, and such defaulting Party fails to cure such breach within the time permitted by such agreement.  Each of the Parties agrees to provide a copy of any notice of default under its respective Interconnection Agreement that is received by it to the Manager and the other Parties within twenty-four (24) hours of receiving such notice of default, regardless of the party or the contract that is alleged to be in default in the notice.
14.1.4	Other Defaults.  The Party fails to cure any other failure to perform under this Agreement within thirty (30) days following written notice from any other Party specifying the nature of the failure to perform, provided that if the default is not reasonably capable of being cured within thirty (30) days, then the default will be deemed cured if the defaulting Party commences, diligently pursues, and completes action that remedies the default within ninety (90) days of receipt of such notice.
14.1.5	Seizure of Property.  Any substantial part of such Party’s property is subjected to any levy, seizure, assignment or sale for or by any creditor or Governmental Authority that materially affects that Party’s ability to perform under this Agreement.
14.2	Remedies.  Upon the occurrence and during the continuation of an Event of Default by a Co-Owner, each other Co-Owner will have any and all of the following remedies, exercisable only after due inquiry that an Event of Default has occurred and is continuing:
14.2.1	Tender Performance.  In its sole and absolute discretion, to cure the default of the defaulting Co-Owner by making or tendering the required payment or performance, and permitting the defaulting Co-Owner’s Project to remain connected to the Shared Facilities and sales of electricity by the defaulting Co-Owner to be continued.  Any Financing Party shall have the right (but not the obligation) to tender performance and cure a default of a defaulting Co-Owner pursuant to this section, as further described in Section 17.2.2.
14.2.2	Disconnect Co-Owner.  To the extent such Event of Default affects or relates to any Electrical Facilities, to cause the disconnection of the defaulting Co-Owner’s Project (or, in the case of Big Sky North, the IE Project(s)) from such Electrical Facilities, provided that the defaulting Co-Owner’s Project (or, in the case of Big Sky North, the IE Project(s)) will be permitted to reconnect promptly when and if the default is cured, and any and all damages suffered and incurred by the non-defaulting Co-Owners (or, in the case of Big Sky North, the IE Companies) as a result of such default have been compensated.
14.2.3	Specific Performance.  To bring an action to specifically enforce the provisions of this Agreement.  The Co-Owners agree that damages may be an inadequate remedy for an Event of Default under this Agreement, and that each Co-Owner will be entitled to seek injunctive and other equitable relief against any other Co-Owner to prevent or eliminate such default.
14.2.4	Other Rights and Remedies.  To exercise any and all other rights and remedies which the non-defaulting Co-Owners might otherwise have under this Agreement, at law or in equity.
14.3	Reimbursement of Expenses to Cure.  If any Co-Owner elects to cure an Event of Default of another Co-Owner, the defaulting Co-Owner will reimburse the curing Co-Owner for its expenses incurred in rendering the cure, plus interest at the Default Rate.  
14.4	Remedies Cumulative.  No right, remedy or election given by any term of this Agreement will be deemed exclusive, but each will be cumulative with all other rights, remedies and elections available under this Agreement, at law or in equity.
14.5	Waiver of Partition.  THE CO-OWNERS WILL NOT HAVE AND HEREBY WAIVE THE RIGHT TO PARTITION ALL OR ANY PORTION OF THE SHARED ASSETS, OR TO MAKE APPLICATION TO ANY COURT OR AUTHORITY OR TO COMMENCE OR PROSECUTE ANY ACTION OR PROCEEDING FOR PARTITION OF THE SHARED ASSETS.  EACH PARTY WILL BE ENTITLED TO A DECREE OR ORDER RESTRAINING OR ENJOINING SUCH PARTITION, APPLICATION, ACTION OR PROCEEDING UPON ANY BREACH OF THE PROVISIONS OF THIS SECTION 14.5.  THE CO-OWNERS ACKNOWLEDGE AND AGREE THAT THEY HAVE BEEN PAID FULL CONSIDERATION FOR THE WAIVER PROVIDED IN THIS SECTION 14.5.
14.6	Limitation of Liability.  NOTWITHSTANDING ANY OTHER PROVISION OF THIS AGREEMENT TO THE CONTRARY, IN NO EVENT, WHETHER AS A RESULT OF BREACH OF CONTRACT, TORT LIABILITY (INCLUDING NEGLIGENCE OR STRICT LIABILITY), OR OTHERWISE, WILL ANY PARTY BE LIABLE TO ANY OTHER PARTY FOR SPECIAL, INDIRECT, PUNITIVE OR CONSEQUENTIAL DAMAGES OF ANY NATURE WHATSOEVER, INCLUDING CLAIMS OF CUSTOMERS, COST OF MONEY, LOSS OF PROFIT, OR LOSS OF USE OF CAPITAL OR REVENUE, EXCEPT TO THE EXTENT SUCH DAMAGES ARE INCLUDED IN (A) THE AMOUNTS PAYABLE UNDER THE INDEMNIFICATION PROVISIONS SET FORTH IN THIS AGREEMENT FOR CLAIMS OF THIRD PARTIES FOR PERSONAL INJURY OR PROPERTY DAMAGE, (B) A BREACH OF SECTION 13, OR (C) THE AMOUNTS RECOVERABLE UNDER SECTION 5.
15.	[Reserved]
16.	NOTICES
All notices and other communications required or permitted by this Agreement or by applicable Law to be served upon or given to a Party by another Party shall be in writing and shall be deemed duly served, given and received (i) on the date of service, if served personally or sent by facsimile transmission (with appropriate confirmation of receipt) to the Party to whom notice is to be given, or (ii) on date of receipt, if mailed by certified mail, postage prepaid, return receipt requested, or (iii) on the date of receipt if sent by a nationally recognized courier for next day service and so addressed as follows:
If to any owner, to:
[Respective Owner]
c/o FTP Power LLC
2180 South 1300 East, Suite 600
Salt Lake City, Utah 84106
Attention: Chief Executive Officer

If to Manager, to:

sPower Services, LLC
c/o FTP Power LLC
2180 South 1300 East, Suite 600
Salt Lake City, Utah 84106
Attention: Chief Executive Officer

17.	MISCELLANEOUS PROVISIONS
17.1	Transfers.
17.1.1	Transfer by Co-Owners.  No Co-Owner shall transfer, directly or indirectly, its undivided interest or its rights under this Agreement, whether voluntarily, by operation of law, or otherwise, to any Person, except (i) with the consent of all the Co-Owners and, to the extent required by underlying financing documents, Financing Parties, (ii) as provided in Section 17.2, (iii) if the assignment of the undivided interest and the accompanying rights of the Co-Owner under this Agreement are assigned together with the transfer of the Co-Owner’s entire Project to the transferee of the Project (in which case, such transferee shall assume all the obligations of the assigning Co-Owner from and after the date of assignment), (iv) if the assignment of the undivided interest and the accompanying rights of the Co-Owner under this Agreement is for purposes of facilitating a bona fide sale-leaseback financing transaction with respect to the assigning Co-Owner’s Project, or (v) as permitted in Section 6.14. If all the Co-Owners approve an assignment or the procedures provided in Section 17.1.2 are complied with, the assigning Co-Owner shall be released from any further obligations hereunder arising from and after the effective date of such assignment.  Notwithstanding anything to the contrary, the sale of membership interests in any Co-Owner (or any of its constituent members or partners) in connection with any sale, merger, reorganization or tax equity financing shall be expressly permitted and shall not require the consent or approval of any other Party hereunder. For the avoidance of doubt, Big Sky North’s interconnection service arrangements under the MISA with an IE Company do not constitute a transfer covered by this Section.
17.1.2	Procedures.  No Party shall be bound by any assignment, no assignment shall be valid, and no assignee of any Co-Owner’s undivided interest or its rights under this Agreement shall become a Co-Owner and a Party hereto unless (i) the assignment is permitted under Section 17.1.1, (ii) a counterpart of the instrument of assignment, executed by the parties thereto, is delivered to the other Parties; (iii) the assignee consents in writing to be bound by the terms of this Agreement in the place and stead of the assigning Party; and (iv) any and all necessary Financing Parties and other third party consents to such assignment are obtained.
17.2	Right to Encumber.
17.2.1	Right to Encumber.  The Manager and each Co-Owner specifically agree that any Co-Owner may at any time pledge, collaterally assign, encumber, or grant a security interest in its own undivided interest and in its rights under this Agreement to any of the Financing Parties.  The Manager and each Co-Owner also agree that they shall, at any time and from time to time during the term of this Agreement, after receipt of a written request by another Co-Owner or IE Company, execute and deliver to the other Co-Owner and that Co-Owner’s or IE Company’s Financing Parties, as designated in such request, such estoppel certificates and consents as may be reasonably requested thereby.
17.2.2	Pledge, Collateral Assignment or Encumbrance.  Notwithstanding any other provision of this Agreement, should a Co-Owner pledge, collaterally assign or encumber its undivided interest and its rights under this Agreement as provided above, the Parties hereto expressly agree between themselves and for the benefit of any Financing Parties that (i) no Co-Owner shall amend this Agreement in any material respect unless the consent of all the Financing Parties is first obtained, (ii) upon the occurrence of a default by a Co-Owner hereunder, the non-defaulting Co-Owner declaring the default shall also provide written notice to the Financing Parties (of which the Parties have notice) of such default (and accept their cure of such default), (iii) each Financing Party shall have the same period after receipt of a notice of default to cure, or cause to be cured, the default described therein, as is given to the defaulting Co-Owner, plus, in each instance, the following additional time periods:  (a) thirty (30) days in the event of any monetary default; and (b) sixty (60) days in the event of any non-monetary default; provided, however, that such sixty (60) day period shall be extended for the time reasonably required by the Financing Parties to complete such cure, so long as the Financing Parties (or any of them) are diligently pursuing such cure, and (iv) in case of the termination of this Agreement or a Co-Owner’s interest in this Agreement as a result of any default or the bankruptcy, insolvency or appointment of a receiver in bankruptcy for a Co-Owner (the “Insolvent Co-Owner”), (1) the other Co-Owners (the “Solvent Co-Owners”) shall give prompt notice of such termination to the Financing Parties of the Insolvent Co-Owner and (2) the Solvent Co-Owners shall, upon written request of the first priority Financing Party of the Insolvent Co-Owner, made within forty (40) days after such written notice to such Financing Party, enter into a new Agreement with such Financing Party, or its designee, on the same terms and conditions as this Agreement or, to the extent only the Insolvent Co-Owner’s interest is terminated, permit the Financing Party or its designee to join in this Agreement as a New Co-Owner in place of the Insolvent Co-Owner, within twenty (20) days after the receipt of such request.  Any such new Agreement shall be effective as of the date of the termination of this Agreement by reason of default by the Insolvent Co-Owner, upon the same terms, covenants, conditions and agreements as contained in this Agreement.  Upon the execution of any such new Agreement, the Financing Parties of the Insolvent Co-Owner shall (A) pay the Solvent Co-Owners any amounts which are due the Solvent Co-Owners from the Insolvent Co-Owner, (B) pay the Manager any and all amounts which would have been due from the Insolvent Co-Owner under this Agreement (had this Agreement not been terminated) from the date of the termination of this Agreement to the date of the new Agreement, and (C) agree in writing to perform or cause to be performed all of the other covenants and agreements set forth in this Agreement to be performed by the Insolvent Co-Owner to the extent they accrue following the execution and delivery of the new Agreement.  A Financing Party shall only be liable under this Agreement if it forecloses or otherwise assumes direct possession of an undivided interest.
17.2.3	Expenses.  All reasonable expenses, including reasonable attorneys’ fees, incurred by the Manager or any other Co-Owner in connection with (a) the assignment or proposed assignment of a Co-Owner’s undivided interest and its rights under this Agreement, or (b) the actual or proposed pledge, collateral assignment, encumbrance, or grant of a security interest in a Co-Owner’s undivided interest and its rights under this Agreement to a Financing Party, shall be paid by the assigning/borrowing Co-Owner to the Manager and respective Co-Owners upon request therefor.
17.2.4	Assignment by Manager.  The Manager may not assign, pledge or otherwise transfer this Agreement without the prior written consent of all of the Co-Owners, which may be withheld in the Co-Owners’ sole and absolute discretion.
17.3	Governing Law.  This Agreement is governed by the Laws of the State of California, excluding any choice of law rules that would direct application of Laws of another jurisdiction.  Each Party hereby irrevocably and unconditionally submits to the exclusive jurisdiction of any California State court or federal court of the United States of America sitting in Los Angeles, and waives, to the fullest extent legally permissible, any objection which it may now or hereafter have to the personal jurisdiction of such courts or venue of any proceeding arising out of or relating to this Agreement in such courts and any defense of an inconvenient forum to the maintenance of such action or proceeding in such courts.  IN ADDITION, EACH PARTY HEREBY WAIVES, TO THE FULLEST EXTENT PERMITTED BY APPLICABLE LAW, ANY RIGHT IT MAY HAVE TO A TRIAL BY JURY IN RESPECT OF ANY LITIGATION DIRECTLY OR INDIRECTLY ARISING OUT OF, UNDER OR IN CONNECTION WITH THIS AGREEMENT.
17.4	Compliance with Laws.  This Agreement is subject to all present and future Laws, including valid orders, rules and regulations of any Governmental Authority having jurisdiction over the Shared Assets, the Projects or the Parties.
17.5	Survival.  Notwithstanding any other provision of this Agreement, the provisions of Sections 17.5 (Survival), 11 (Indemnification), 13 (Confidentiality), 14.4 (Remedies Cumulative), and 14.6 (Limitation of Liability) are intended to and shall survive termination of this Agreement so as to cover all claims instituted within the period set forth in the applicable statute of limitations.
17.6	Effect of Waiver.  The Parties agrees that no failure or delay by a Party in exercising any right, power or privilege under this Agreement shall operate as a waiver thereof, unless such waiver is made expressly and confirmed in writing by the Party against whom such waiver would be enforced, nor shall any single or partial exercise by a Party of any right, power or privilege hereunder preclude any other or future exercise thereof.
17.7	Severability.  Any provision of this Agreement that is prohibited or unenforceable in any jurisdiction shall, as to that jurisdiction, be ineffective to the extent of that prohibition or unenforceability without invalidating the remaining provisions hereof or affecting the validity or enforceability of that provision in any other jurisdiction.
17.8	Entire Agreement; Amendments.  This Agreement constitutes the entire agreement between the Parties pertaining to the subject matter hereof and supersedes all prior agreements, representations, communications and understandings, written or oral, express or implied, pertaining thereto (including the Original Agreement).  Any modifications, amendments, or changes to this Agreement shall be binding upon the Parties only if agreed upon in writing and signed by the authorized Representatives of the Parties and shall be subject to any requisite Governmental Approvals.
17.9	Not for the Benefit of Third Parties.  This Agreement is intended to be solely for the benefit of the Parties, the IE Companies, the Financing Parties, and their respective successors and permitted assignees, and is not intended to and shall not confer any rights or benefits on any party not a signatory hereto.
17.10	Counterparts.  This Agreement may be executed in a number of identical counterparts, each of which shall be deemed an original, but all of which together shall constitute one and the same instrument, notwithstanding that all of the Parties are not signatories to the original or to the same counterpart.  A copy of this Agreement signed by a Party and delivered by facsimile transmission to the other Parties shall have the same effect as the delivery of an original of this Agreement containing the original signature of such first-mentioned Party.
17.11	Further Assurances.  Each Party agrees to provide such information, execute and deliver any instruments and documents, and take such other actions as may be necessary or reasonably requested by the other Parties, which are not inconsistent with the provisions of this Agreement and which do not involve assumptions of obligations or materially affect the cost of performance, other than those provided for in this Agreement, in order to give full effect to this Agreement and to carry out the intent of this Agreement.
17.12	No Recourse to Affiliates.  This Agreement is solely and exclusively between the Parties, and any obligations created in this Agreement will be the sole obligations of the Parties to this Agreement.  No Party will have recourse to any parent, subsidiary, partner, joint venture, Affiliate, director, or officer of the other Parties for performance of such obligations unless the obligations are assumed in writing by the Person against whom recourse is sought.
17.13	Successors and Assigns.  This Agreement will be binding on, and inure to the benefit of, the Parties and their successors and permitted assigns.  The Shared Assets will be held, conveyed, assigned, hypothecated, encumbered, leased, used and occupied, subject to the covenants, terms and provisions set forth in this Agreement, which covenants, terms and provisions will run with the land, and will be binding upon and inure to the benefit of each Party and each other Person and entity having any interest therein during their ownership thereof, and their respective permitted grantees, heirs, successors and assigns, and will create privity of contract and estate among the Parties and their respective grantees, heirs, successors and permitted assigns.
17.14	Competing Ventures.  Any Party may engage in or possess an interest in other business ventures of any nature and description, independently or with others, including but not limited to the ownership, financing, leasing, management, syndication, investment, brokerage and development of real property or energy projects (including real property or projects of the same type and nature as the Projects), and no other Party shall have any right by virtue of this Agreement in and to such independent ventures or to the income or profits derived therefrom.
17.15	Memorandum.  Upon request of any Party from time to time, the Parties shall execute and deliver one or more memorandums of this Agreement sufficient to set forth this Agreement as a matter of record.  Any Party may, at its sole cost and expense, record any such memorandum in any county in which the Shared Facilities are located.  The provisions of this Agreement will control, however, with regard to any omissions from, or provisions of this Agreement that may be in conflict with, the memorandum of Agreement.  If a memorandum of this Agreement has been recorded, then at such time as this Agreement has been terminated, the Parties agree to execute and record in the official real estate records of the counties referred to above, a termination of the memorandum of Agreement, which termination will specifically refer to the memorandum of Agreement and will recite that this Agreement has terminated in accordance with the provisions of this Agreement.
17.16	Interpretation.
17.16.1	Headings.  The titles, captions and headings in this Agreement are inserted for convenience only and will not be used for the purposes of construing or interpreting this Agreement.
17.16.2	References in This Agreement.  In this Agreement, unless a clear, contrary intention appears: (a) the singular includes the plural and vice versa; (b) reference to any Person includes such Person’s successors and assigns but, in the case of a Party, only if such assigns are permitted by this Agreement, and reference to a Person in a particular capacity excludes such Person in any other capacity; (c) pronouns and reference to any gender includes each other gender; (d) reference to any agreement (including this Agreement), document or instrument means such agreement, document or instrument as amended or modified and in effect from time to time in accordance with the terms thereof and, if applicable, the terms of this Agreement; (e) reference to any Law means such Law as amended, modified, codified or reenacted, in whole or in part, and in effect from time to time, including, if applicable, rules and regulations promulgated thereunder; (f) reference to any Section means such Section of this Agreement, and references in any Section or definition to any clause means such clause of such Section or definition; (g) “hereunder,” “hereof,” “hereto” and words of similar import will be deemed references to this Agreement as a whole and not to any particular Section or other provision of this Agreement; (h) “including” (and with correlative meaning “include”) means including without limitation; and (i) relative to the determination of any period of time, “from” means “from and including,” “to” means “to but excluding” and “through” means “through and including.”
17.16.3	Industry Meanings.  Words and abbreviations not defined in this Agreement that have well-known technical or power industry meanings in the United States are used in this Agreement in accordance with those recognized meanings.
17.16.4	Joint Responsibility for Drafting.  This Agreement was negotiated and prepared by the Parties with advice of counsel to the extent deemed necessary by each Party.  The Parties have agreed to the wording of this Agreement, and none of the provisions of this Agreement will be construed against one Party on the ground that such Party is the author of this Agreement or any part of this Agreement.
17.16.5	Incorporation of Exhibits.  The Exhibits attached to this Agreement are incorporated into this Agreement by reference for all purposes.
17.16.6	No Merger.  If and to the extent any Party hereunder has or should acquire separate estates in any portion of the Shared Premises, including leases, easements, or fee interests, those estates shall not be merged, but shall survive and continue.
17.16.7	Covenants Running with the Land.  Each obligation of the Co-Owners under this Agreement will, for so long as and only for so long as such obligation will be in effect under this Agreement, be a covenant running with the land and will inure to the benefit of and be binding upon, as applicable, the successors and assigns of the Co-Owners, with respect to all such Persons’ respective interests in the Shared Facilities or the Shared Premises.  Notwithstanding the foregoing, upon the termination of this Agreement, each such obligation of the Co-Owners shall terminate and shall no longer be a covenant running with the land and shall no longer benefit or be binding upon any such successors or assigns.
17.17	Financing Party Consent to Storage.  Notwithstanding anything to the contrary in this Agreement, the Parties acknowledge and agree that (i) as of the Effective Date, nothing in this Agreement shall be interpreted to imply that any Co-Owner has received any required consent from the applicable Financing Parties to add battery energy storage capacity to its Project and (ii) each Co-Owner must obtain any required consent in writing from the applicable Financing Parties prior to adding any battery energy storage capacity to its Project.
[Signature page follows] 

IN WITNESS WHEREOF, the Parties to this Agreement have caused this Agreement to be executed by their duly authorized representatives as of the Effective Date.
CO-OWNERS:					MANAGER:

ANTELOPE BIG SKY RANCH LLC,		SPOWER SERVICES, LLC, 
a Delaware limited liability company			a Delaware limited liability company

By: 							By: 						
Name:  						Name:  
Title:  							Title:  	 

ANTELOPE DSR 1, LLC,
a Delaware limited liability company

By: 						
Name:			
Title:  	

ANTELOPE DSR 2, LLC,
a Delaware limited liability company

By: 						
Name:  				
Title:  	

ANTELOPE DSR 3, LLC,
a Delaware limited liability company

By: 						
Name:  				
Title:  	

BAYSHORE SOLAR A, LLC,
a Delaware limited liability company

By: 						
Name:  				
Title:  	

BAYSHORE SOLAR B, LLC,
a Delaware limited liability company

By: 						
Name:  		
Title:  	

BAYSHORE SOLAR C, LLC,
a Delaware limited liability company

By: 						
Name:  			
Title:  	

ELEVATION SOLAR C LLC,
a Delaware limited liability company

By: 						
Name:  				
Title:  	

SOLVERDE 1, LLC,
a Delaware limited liability company

By: 						
Name:  				
Title:  

SUMMER SOLAR LLC,
a Delaware limited liability company

By: 						
Name:  			
Title:  	

WESTERN ANTELOPE BLUE SKY RANCH B LLC,
a Delaware limited liability company

By: 						
Name:  			
Title:  	

BIG SKY NORTH, LLC,
a Delaware limited liability company

By: 						
Name:  				
Title:  	
 
EXHIBIT A-1

Antelope Big Sky Ranch Project and Project Site Descriptions

Antelope Big Sky Ranch Project:

The Antelope Big Sky Ranch Project is an approximately 20 MW photovoltaic energy generation facility constructed on the Project Site in or near Lancaster, California described and depicted below.  The project consists of approximately 83,875 photovoltaic modules and 32 inverters, along with associated above and below ground electrical transmission and collection systems, transformers and related equipment.

Project Site: 

EXHIBIT A-2

Antelope DSR 1 Project and Project Site Descriptions

Antelope DSR1 Project:

The Antelope DSR 1 Project is an approximately 50 MW photovoltaic energy generation facility constructed on the Project Site in or near Lancaster, California described and depicted below.  The project consists of approximately 195,575 photovoltaic modules and 25 inverters, along with associated above and below ground electrical transmission and collection systems, transformers and related equipment.

Project Site:

EXHIBIT A-3

Antelope DSR 2 Project and Project Site Descriptions

Antelope DSR 2 Project:

The Antelope DSR 2 Project is an approximately 5 MW photovoltaic energy generation facility constructed on the Project Site in or near Lancaster California described and depicted below.  The project consists of approximately 15,873 photovoltaic modules and 3 inverters, along with associated above and below ground electrical transmission and collection systems, transformers and related equipment.

Project Site:

EXHIBIT A-4

Antelope DSR 3 Project and Project Site Descriptions

Antelope DSR 3 Project:

The Antelope DSR 3 Project is an approximately 20 MW photovoltaic energy generation facility to be constructed on the Project Site in or near Lancaster, California described and depicted below.  The project consists of approximately 65,000 photovoltaic modules and 7 inverters, along with associated above and below ground electrical transmission and collection systems, transformers and related equipment.

Project Site:
  
EXHIBIT A-5

Bayshore Solar A Project and Project Site Descriptions

Bayshore Solar A Project:

The Bayshore Solar A Project is an approximately 20 MW photovoltaic energy generation facility constructed on the Project Site in or near Lancaster, California described and depicted below.  The project consists of approximately 79,363 photovoltaic modules and 10 inverters, along with associated above and below ground electrical transmission and collection systems, transformers and related equipment.

Project Site:

EXHIBIT A-6

Bayshore Solar B Project and Project Site Descriptions

Bayshore Solar B Project:

The Bayshore Solar B Project is an approximately 20 MW photovoltaic energy generation facility constructed on the Project Site in or near Lancaster, California described and depicted below.  The project consists of approximately 79,363 photovoltaic modules and 10 inverters, along with associated above and below ground electrical transmission and collection systems, transformers and related equipment.

Project Site:

EXHIBIT A-7

Bayshore Solar C Project and Project Site Descriptions

Bayshore Solar C Project:

The Bayshore Solar C Project is an approximately 20 MW photovoltaic energy generation facility constructed on the Project Site in or near Lancaster, California described and depicted below.  The project consists of approximately 79,363 photovoltaic modules and 10 inverters, along with associated above and below ground electrical transmission and collection systems, transformers and related equipment.

Project Site:

EXHIBIT A-8

Elevation Solar C Project and Project Site Descriptions

Elevation Solar C Project:

The Elevation Solar C Project is an approximately 40 MW photovoltaic energy generation facility constructed on the Project Site in or near Lancaster, California described and depicted below.  The project consists of approximately 167,750 photovoltaic modules and 25 inverters, along with associated above and below ground electrical transmission and collection systems, transformers and related equipment.

Project Site:

EXHIBIT A-9

Solverde 1 Project and Project Site Descriptions

Solverde 1 Project:

The Solverde 1 Project is an approximately 85 MW photovoltaic energy generation facility constructed on the Project Site in or near Lancaster, California described and depicted below.  The project consists of approximately 337,900 photovoltaic modules and 43 inverters, along with associated above and below ground electrical transmission and collection systems, transformers and related equipment.

Project Site:

EXHIBIT A-10

Summer Solar Project and Project Site Descriptions

Summer Solar Project:

The Summer Solar Project is an approximately 20 MW photovoltaic energy generation facility constructed on the Project Site in or near Lancaster, California described and depicted below.  The project consists of approximately 82,550 photovoltaic modules and 10 inverters, along with associated above and below ground electrical transmission and collection systems, transformers and related equipment.

Project Site:

EXHIBIT A-11

WABSRB Project and Project Site Descriptions

WABSRB Project:

The WABSRB Project is an approximately 20 MW photovoltaic energy generation facility constructed on the Project Site in or near Lancaster, California described and depicted below.  The project consists of approximately 82,540 photovoltaic modules and 13 inverters, along with associated above and below ground electrical transmission and collection systems, transformers and related equipment.

Project Site:

EXHIBIT B-1

Shared Premises Agreements 
(as they may be amended, assigned, or supplemented)

Southern California Edison Crossing consent (RP File No. CON203311125) between Southern California Edison and the Co-Owners dated June 28, 2016 for the encroachment of the Verizon and SCE Fiber in SCE’s easements on the south side of Avenue J.

Grant Deed dated March 24, 2016 by and between Sustainable Property Holdings, LLC, a Delaware limited liability company, as grantor, and Antelope DSR 1, LLC, a Delaware limited liability company, Antelope DSR 2, LLC, a Delaware limited liability company, Antelope DSR 3, LLC, a Delaware limited liability company, Antelope Big Sky Ranch LLC, a Delaware limited liability company, Bayshore Solar A, LLC, a Delaware limited liability company, Bayshore Solar B, LLC, a Delaware limited liability company, Bayshore Solar C, LLC, a Delaware limited liability company, Elevation Solar C LLC, a Delaware limited liability company, Solverde 1, LLC, a Delaware limited liability company, Summer Solar LLC, a Delaware limited liability company and Western Antelope Blue Sky Ranch B LLC, a Delaware limited liability, collectively, grantees, as tenants in common, recorded March 28, 2016 as Instrument No. 20160332350 in the Official Records of Los Angeles County, California.

Grant Deed dated August 1, 2018 by and between Antelope DSR 1, LLC, a Delaware limited liability company, Antelope DSR 2, LLC, a Delaware limited liability company, Antelope DSR 3, LLC, a Delaware limited liability company, Antelope Big Sky Ranch LLC, a Delaware limited liability company, Bayshore Solar A, LLC, a Delaware limited liability company, Bayshore Solar B, LLC, a Delaware limited liability company, Bayshore Solar C, LLC, a Delaware limited liability company, Elevation Solar C LLC, a Delaware limited liability company, Solverde 1, LLC, a Delaware limited liability company, Summer Solar LLC, a Delaware limited liability company and Western Antelope Blue Sky Ranch B LLC, a Delaware limited liability, collectively, as grantor, and Antelope DSR 1, LLC, a Delaware limited liability company, Antelope DSR 2, LLC, a Delaware limited liability company, Antelope DSR 3, LLC, a Delaware limited liability company, Antelope Big Sky Ranch LLC, a Delaware limited liability company, Bayshore Solar A, LLC, a Delaware limited liability company, Bayshore Solar B, LLC, a Delaware limited liability company, Bayshore Solar C, LLC, a Delaware limited liability company, Elevation Solar C LLC, a Delaware limited liability company, Solverde 1, LLC, a Delaware limited liability company, Summer Solar LLC, a Delaware limited liability company and Western Antelope Blue Sky Ranch B LLC, a Delaware limited liability, and Big Sky North, LLC, a Delaware limited liability company, as grantee, all as tenants in common, recorded August 2, 2018 as Instrument No. 20180777579, in the Official Records of Los Angeles County, California.

Separate Encroachment Permit Agreements dated March 21, 2016, and amended on July 21, 2016, from the City of Lancaster to each of the Phase I Parties for the North/South encroachment of communication line within West Avenue J (all Phase I Parties), the North/South encroachment of communication line within 99th Street (all Phase I Parties), and the 99th Street east/west crossing of communication line near southern boundary of APN 3203-034-022, approximately
962.87 feet from the northern boundary (all Project Entities).

Separate Encroachment Permit Agreement dated March 21, 2016, and amended on July 5, 2017 from the City of Lancaster to Bayshore Solar A, LLC, a Delaware limited liability company, for the North/South encroachment of communication line within West Avenue J.

Separate Encroachment Permit Agreements, each of which is dated July 5, 2017, from the City of Lancaster to each of Bayshore Solar B, LLC, a Delaware limited liability company, and Bayshore Solar C, LLC, a Delaware limited liability company, for the North/South encroachment of communication line within West Avenue J.

Separate Easement Agreements dated March 28, 2016, by and between Sustainable Property Holdings, LLC, a Delaware limited liability company, as grantor, and Solverde 1, LLC, Antelope DSR 1, LLC, Antelope DSR 2, LLC, Elevation Solar C LLC, Western Antelope Blue Sky Ranch B LLC, Antelope Big Sky Ranch LLC, and Summer Solar LLC, each of which recorded April 1, 2016, as Instrument Nos. 20160358743 through 20160358745 and 20160358753, 20160358754,
20160358755, and 20160358752, respectively, each of which was amended by those certain First Amendment to Access and Utility Easement Agreements, each dated July 7, 2016, July 7, 2016, July 7, 2016, July 21, 2015, July 21, 2015, July 15, 2016, and July 15, 2016, respectively, and
recorded July 12, 2016, July 12, 2016, July 12, 2016, July 25, 2016, July 25, 2016, July 19, 2016,
and July 19, 2016, respectively, as Instrument Nos 20160809194 through 20160809196, 20160869359, 20160869358, 20160838847 and 20160838838, for the installation and maintenance of communication line running north/south within APN 3203-034-027, and the east/west crossing of communication line near southern boundary of APN 3203-034-027, approximately 962.87 feet from the northern boundary.

Separate Easement Agreements, each of which is dated May 18, 2017, by and between Sustainable Property Holdings, LLC, a Delaware limited liability company, as grantor, and Bayshore Solar A, LLC, a Delaware limited liability company, Bayshore Solar B, LLC, a Delaware limited liability company, and Bayshore Solar C, LLC, a Delaware limited liability company, each as a grantee, each of which recorded May 23, 2017, as Instrument Nos. 20170566120, 20170566121, 20170566122, respectively, for the installation and maintenance of communication line running north/south within APN 3203-034-027, and the east/west crossing of communication line near the southern boundary of APN 3203-034-027, approximately 962.87 feet from the northern boundary.
  
EXHIBIT B-2

Shared Premises Description

SUBSTATION PARCELS:

LOT 34 OF TRACT NO. 39252, IN THE CITY OF LANCASTER, COUNTY OF LOS ANGELES, STATE OF CALIFORNIA, AS SHOWN BY MAP ON FILE IN BOOK 981, PAGES 65 THROUGH 81, INCLUSIVE, OF MAPS, IN THE OFFICE OF THE COUNTY RECORDER OF SAID COUNTY.

(APN: 3203-034-022)

ENCROACHMENT AREA:
PORTIONS OF THE NORTHWEST ONE-QUARTER OF SECTION 19, TOWNSHIP 7 NORTH, RANGE 13 WEST, SAN BERNARDINO MERIDIAN, IN THE CITY OF LANCASTER, COUNTY OF LOS ANGELES, STATE OF CALIFORNIA, MORE PARTICULARLY DESCRIBED AS FOLLOWS:

PARCEL NO. 1-A:

BEING A STRIP OF LAND, 10.00 FEET WIDE, THE WESTERLY SIDELINE OF SAID STRIP DESCRIBED AS FOLLOWS;
COMMENCING AT THE NORTHWEST CORNER OF SAID SECTION 19; THENCE NORTH 89°59'27" EAST, ALONG THE NORTHERLY LINE OF SAID
NORTHWEST ONE-QUARTER, A DISTANCE OF 330.00 FEET TO THE INTERSECTION WITH THE NORTHERLY PROLONGATION OF THE EASTERLY LINE OF LOT 47 AND THE CENTERLINE OF PRIVATE AND FUTURE 99TH STREET WEST AS SHOWN ON TRACT NO. 39252, AS PER MAP RECORDED IN BOOK 981, PAGES 65 THRU 81, INCLUSIVE, OF MAPS, IN THE OFFICE OF THE COUNTY RECORDER OF SAID COUNTY;

THENCE SOUTH 00°06'46" EAST, ALONG SAID CENTERLINE, A DISTANCE OF 50.00 FEET TO A LINE THAT IS PARALLEL WITH AND 50.00 FEET SOUTH OF THE NORTHERLY LINE OF SAID NORTHWEST ONE-QUARTER;

THENCE SOUTH 89°59'27" WEST, ALONG LAST MENTIONED PARALLEL LINE, A DISTANCE OF 32.00 FEET TO A POINT ON A LINE THAT IS PARALLEL WITH AND
32.00 FEET WEST OF SAID CENTERLINE, SAID POINT BEING THE TRUE POINT OF BEGINNING;

THENCE NORTH 00°06'46" WEST, ALONG LAST MENTIONED PARALLEL LINE, A DISTANCE OF 30.98 FEET;

PARCEL NO. 1-B:

BEING A STRIP OF LAND, 10.00 FEET WIDE, THE WESTERLY SIDELINE OF SAID STRIP DESCRIBED AS FOLLOWS;
COMMENCING AT THE NORTHWEST CORNER OF SAID SECTION 19; THENCE NORTH 89°59'27" EAST, ALONG THE NORTHERLY LINE OF SAID
NORTHWEST ONE-QUARTER, A DISTANCE OF 330.00 FEET TO THE INTERSECTION WITH THE NORTHERLY PROLONGATION OF THE EASTERLY LINE OF LOT 47 AND THE CENTERLINE OF PRIVATE AND FUTURE 99TH STREET WEST AS SHOWN ON TRACT NO. 39252, AS PER MAP RECORDED IN BOOK 981, PAGES 65 THRU 81, INCLUSIVE, OF MAPS, IN THE OFFICE OF THE COUNTY RECORDER OF SAID COUNTY;

THENCE SOUTH 00°06'46" EAST, ALONG SAID CENTERLINE, A DISTANCE OF 50.00 FEET TO A LINE THAT IS PARALLEL WITH AND 50.00 FEET SOUTH OF THE NORTHERLY LINE OF SAID NORTHWEST ONE-QUARTER;

THENCE SOUTH 89°59'27" WEST, ALONG LAST MENTIONED PARALLEL LINE, A DISTANCE OF 32.00 FEET TO A POINT ON A LINE THAT IS PARALLEL WITH AND
32.00 FEET WEST OF SAID CENTERLINE, SAID POINT BEING THE TRUE POINT OF BEGINNING;

THENCE SOUTH 00°06'46" EAST, ALONG LAST MENTIONED PARALLEL LINE, A DISTANCE OF 936.96 FEET TO A POINT HEREINAFTER REFERRED TO AS POINT "A".

PARCEL NO. 1-C:

BEING A STRIP OF LAND, 25.00 FEET IN WIDTH, THE NORTHERLY SIDELINE OF SAID STRIP DESCRIBED AS FOLLOWS;

BEGINNING AT HEREINBEFORE MENTIONED POINT "A" IN PARCEL NO. 1-B;

THENCE NORTH 89°53'14" EAST A DISTANCE OF 64.00 FEET TO A LINE THAT IS PARALLEL WITH AND 32.00 FEET EASTERLY OF SAID CENTERLINE OF PRIVATE AND FUTURE 99TH STREET WEST.

PARCEL NO. 1-D:

BEING A STRIP OF LAND, 5.00 FEET WIDE, 2.50 FEET ON EACH SIDE OF THE FOLLOWING DESCRIBED CENTERLINE;
COMMENCING AT THE NORTHWEST CORNER OF SAID SECTION 19; THENCE NORTH 89°59'27" EAST, ALONG THE NORTHERLY LINE OF SAID
NORTHWEST ONE-QUARTER, A DISTANCE OF 330.00 FEET TO THE INTERSECTION WITH THE NORTHERLY PROLONGATION OF THE EASTERLY LINE OF LOT 47 AND THE CENTERLINE OF PRIVATE AND FUTURE 99TH STREET WEST AS SHOWN ON TRACT NO. 39252, AS PER MAP RECORDED IN BOOK 981, PAGES 65 THRU 81, INCLUSIVE, OF MAPS, IN THE OFFICE OF THE COUNTY RECORDER OF SAID COUNTY;

THENCE SOUTH 00°06'46" EAST, ALONG SAID CENTERLINE, A DISTANCE OF 50.00 FEET TO A LINE THAT IS PARALLEL WITH AND 50.00 FEET SOUTH OF THE NORTHERLY LINE OF SAID NORTHWEST ONE-QUARTER;

THENCE NORTH 89°59'27" EAST, ALONG SAID PARALLEL LINE, A DISTANCE OF
47.52 FEET TO THE TRUE POINT OF BEGINNING;

THENCE LEAVING SAID PARALLEL LINE NORTH 01°27'06" EAST A DISTANCE OF
10.91 FEET TO THE BEGINNING OF A TANGENT CURVE, CONCAVE SOUTHEASTERLY, AND HAVING A RADIUS OF 21.00 FEET;

THENCE NORTHEASTERLY, ALONG SAID CURVE, THROUGH A CENTRAL ANGLE OF 88°32'21", AN ARC LENGTH OF 32.45 FEET TO THE BEGINNING OF A TANGENT LINE;

THENCE NORTH 89°59'27" EAST A DISTANCE OF 6.65 FEET.

EASEMENT AREA:

BEING A PORTION OF LOT 47 OF TRACT NO. 39252, IN THE CITY OF LANCASTER, COUNTY OF LOS ANGELES, STATE OF CALIFORNIA, AS PER MAP RECORDED IN BOOK 981, PAGES 65 THRU 81, INCLUSIVE, OF MAPS, IN THE OFFICE OF THE COUNTY RECORDED OF SAID COUNTY, MORE PARTICULARLY DESCRIBED AS FOLLOWS:

THE EASTERLY 37.00 FEET OF SAID LOT 47.
 
EXCEPTING THEREFROM THE SOUTHERLY 72.00 FEET THEREOF.

ALSO EXCEPTING THEREFROM ANY PORTION LYING NORTHERLY OF A LINE THAT IS PARALLEL WITH AND 50.00 FEET SOUTH OF THE CENTERLINE OF AVENUE J AS SHOWN ON SAID TRACT NO. 39252.

(APN: PORTION OF 3203-034-033)


[End of Legal Description]
 
EXHIBIT B-3

Conditional Use Permit Description

Conditional Use Permit No. 13-06 issued to Silverado Power, LLC dba Plainview Solarworks, LLC by the City of Lancaster on July 17, 2013, as amended from time to time.

[End of Legal Description]

EXHIBIT C

Shared Facilities, Segments, Constructing Co-Owners,
and Segment Interests of the Co-Owners

The Shared Facilities are described in the tables below, and are divided into various segments (each a “Segment”).  Each Co-Owner has an undivided interest in any Segment to which it is listed as a Co-Owner below. For the purposes of allocating use and cost responsibility, the Co-Owners’ pro-rata capacity interests in any given Segment (the “Segment Interests”) are set forth below. The Shared Facilities are planned to be constructed in two phases as characterized by the Phase I and Phase II tables below. To the extent any Co-Owner transfers its interests in accordance with the terms of the Agreement, the Manager shall revise this Exhibit C to reflect the transfer and provide written notice with a copy of the revised Exhibit to all the Co-Owners informing them of the revisions. 

PHASE I
Shared Facilities Segment	Location of Shared Facilities on Shared Premises	Segment Interest of Each Co-Owner	
Responsibility for Construction and Cost Reimbursement
Project Substation, which includes a control house, busbar, main switches, main switch controls, main breakers, main fuses, main SCADA rig, common fiber patch panel, structures, foundations, main check meter, main current transformer, main potential transformer station service transformer and associated equipment. The Project Substation Segment does not include project specific meters, Generator Step Up Transformers (GSUs) and other project specific equipment as more particularly described in the diagram in Attachment 1 and more below.	Shared Premises: APN:  3203-034-022
	All Co-Owners according to the Percentage Interests set forth in Exhibit D.	Per EPC Agreement
Gen-Tie: Approximately 0.2 miles of 220 kV generation tie-line from the Project Substation to SCE’s Antelope Substation.	Shared Premises: APN:  3203-034-022
  
	All Co-Owners according to the Percentage Interests set forth in Exhibit D.	Per EPC Agreement
Telecom Service Contracts and CAISO RIG:  one SCADA and one CAISO Circuit and RIG to service the Antelope Big Sky Ranch Project.	Shared Premises: APN:  3203-034-022
	Antelope Big Sky Ranch
 and 
Big Sky North according to the Percentage Interests set forth in Exhibit D.	Per EPC Agreement or pursuant to Section 3.2.1; operational costs per relative Percentage Interest
Telecom Service Contracts and CAISO RIG:  one SCADA circuit and one CAISO circuit and RIG to collectively service the Elevation Solar C Project and the WABSRB Project.	Shared Premises: APN:  3203-034-022
	Elevation Solar C, 
WABSRB 
 and 
Big Sky North according to the Percentage Interests set forth in Exhibit D.	Per EPC Agreement or Section 3.2.1; operational cost per relative Percentage Interest
Telecom Service Contracts and CAISO RIG:  one SCADA and one CAISO Circuit and RIG to service the Summer Solar Project.	Shared Premises: APN:  3203-034-022
	Summer Solar
 and 
Big Sky North according to the Percentage Interests set forth in Exhibit D.	Per EPC Agreement and Section 3.2.1; operational costs per relative Percentage Interest
Telecom Service Contracts:  one bonded high capacity circuit for security and camera service for all Co-Owners	Shared Premises: APN:  3203-034-022
	All Co-Owners according to the Percentage Interests set forth in Exhibit D.	Per EPC Agreement and Section 3.2.1; operation costs according to the Percentage Interest set forth in Exhibit D.
Telecom Service Contract and CAISO RIG:  one SCADA circuit and one CAISO circuit and RIG to service the ADSR 1 Project the ADSR 2 Project, the Bayshore Solar A Project, the Bayshore Solar B Project, and the Bayshore Solar C Project.	Shared Premises: APN:  3203-034-022 
	Antelope DSR 1: 37.0%

Antelope DSR 2:  3.7%

Antelope DSR 3:
14.8%

Bayshore Solar A:  14.8%

Bayshore Solar B:  14.8%

Bayshore Solar C:  14.8% 	Per EPC Agreement and Section 3.2.1; operational costs Antelope DSR 1: 43.4%; Antelope DSR 2:  4.4%; Bayshore Solar A: 17.4%; Bayshore Solar B: 17.4%; Bayshore Solar C: 17.4% 
Telecom Service Contracts and CAISO RIG:  one SCADA circuit and one CAISO circuit and RIG to service the Solverde 1 Project.	Shared Premises: APN:  3203-034-022
	Solverde 1
 and 
Big Sky North according to the Percentage Interests set forth in Exhibit D.
 	Per EPC Agreement and Section 3.2.1; operational costs per relative Percentage Interest
SCE Dark Fiber Agreement:  required fiber service for all Co-Owners	Shared Premises: APN:  3203-034-022 	All Co-Owners according to the Percentage Interests set forth in Exhibit D.	Per EPC Agreement; operational costs according to the Percentage Interest set forth in Exhibit D.
Shared Project Segment 1 (Transformer Bay 1): 
Generator Step-Up (GSU) and associated equipment	Shared Premises: APN:  3203-034-022 
	Elevation Solar C: 67%

WABSRB: 33%
	Per relative Percentage Interest
Shared Project Segment 2 (Transformer Bay 5):  GSU and associated equipment	Shared Premises: APN:  3203-034-022
	Antelope DSR 1: 90.91%

Antelope DSR 2:  9.09%	Per relative Percentage Interest

Station Service Power Agreement with SCE (not yet executed)	Shared Premises: APN:  3203-034-022 	All Co-Owners according to the Percentage Interests set forth in Exhibit D.	Per EPC Agreement; operational costs according to the Percentage Interest set forth in Exhibit D.
PHASE II 
Shared Facilities Segment	Location of Shared Facilities on Shared Premises	Segment Interest of Each Co-Owner	
Responsibility for Construction and Cost Reimbursement
Busbar Extension 1 and associated equipment 
	Shared Premises: APN: 3203-034-022 	All Co-Owners according to the Percentage Interests set forth in Exhibit D.	Bayshore Solar B:
50%

Bayshore Solar C: 
50%

Busbar Extension 2 and associated equipment 
	Shared Premises: APN:  3203-034-022 	All Co-Owners according to the Percentage Interests set forth in Exhibit D.	Antelope DSR 3:
100%

Attachment 1

To Exhibit C

EXHIBIT D 

Determination of Percentage Interest of Each Co-Owner

The Percentage Interest of each Co-Owner hereunder is a fraction, the numerator of which is the Nameplate Capacity of a Co-Owner’s Project or, for Big Sky North, the Nameplate Capacity of all the IE Projects that are connected and Energized and the denominator of which is the Nameplate Capacity of all of the current Co-Owners’ Projects and the Nameplate Capacity of all the IE Projects that are connected and Energized; provided that, as of the Effective Date, the photovoltaic energy project being developed by Antelope Expansion 2, LLC, a Delaware limited liability company (“AntEx 2”), with a Nameplate Capacity of one hundred and five (105) megawatts (the “AntEx 2 Project”), shall, solely for purposes of calculating the Co-Owners’ Percentage Interests pursuant to this Exhibit D, be deemed an IE Project that is already connected and Energized (resulting in such project’s Nameplate Capacity increasing the numerator of Big Sky North’s Percentage Interest); provided further that AntEx 2 shall not be deemed an IE Company and the AntEx 2 Project shall not be deemed an IE Project (other than for purposes of calculating the Percentage Interest in accordance with the preceding clause) until the conditions set forth in Section 3.2.5 are satisfied with respect to AntEx 2 and the AntEx 2 Project. As of the Effective Date of this Agreement the Percentage Interests are those described in the table below as Percentage Interests. When a new IE Project is connected and Energized, the Percentage Interests of all of the Co-Owners will be adjusted to represent the new aggregated capacity and the Manager will notify all Co-Owners in writing of the updated Percentage Interests of each Co-Owner, which such writing shall include a copy of this Exhibit D as updated by such notice. In addition, any new entity becoming a Co-Owner under the Agreement will acquire an undivided interest in the Shared Assets at the then-applicable Percentage Interest based on an adjusted aggregated capacity that includes the new Co-Owner’s Project capacity. Upon the admittance of a new Co-Owner, the Percentage Interests of all of the existing Co-Owners will be similarly adjusted by the new denominator (if applicable) representing the new aggregated capacity of all Co-Owner’s Projects and the IE Projects that are connected and Energized. For example, Co-Owner X’s Percentage Interest is equal to the nameplate capacity of Project X divided by the sum of the nameplate capacity for all current Co-Owners’ Projects and the IE Projects that are connected and Energized. For the avoidance of doubt, the current Co-Owners at any time will collectively own 100% of the Percentage Interests and each will own the Percentage Interest equal to the ratio of the capacity size of its Project to the total aggregated capacity of the Projects of all of the then current Co-Owners and the IE Projects that are connected and Energized. 

Co-Owner	 Capacity (in MW)	Percentage Interests
Antelope Big Sky Ranch	20	3.81%

Antelope DSR 1	50	9.52%

Antelope DSR 2	5	0.95%
Antelope DSR 3	20	3.81%
Bayshore Solar A	20	3.81%
Bayshore Solar B	20	3.81%
Bayshore Solar C	20	3.81%

Elevation Solar C	40	7.62%

Summer Solar	20	3.81%

Solverde 1	85	16.19%
WABSRB	20	3.81%
Big Sky North	 205	 39.05%
Total 	525	100%

EXHIBIT E

Manager’s Responsibilities and Scope of Work

At the direction of a Majority of the Co-Owners, Manager shall be responsible for the following Scope of Work on the Shared Premises and otherwise with respect to the Shared Facilities. A Majority of the Co-Owners may also direct the Manager to enter into an Operations  and  Management Agreement with a provider of such services approved by a Majority of the Co-Owners in advance.

General:

General inspection of any and all gates, cattle guards, culverts, security systems, and lighting installed in connection with the development and operation of the Shared Facilities, as well as, any fencing erected to enclose any Shared Assets.
Maintain access roads on the Shared Premises by dragging or grader, including the importation of new road material.
Dressing of roads.
Weed abatement and vegetation control.
Brush control and clear and maintenance of transmission corridors. Snow removal, as needed.
Erosion control, including culverts, as needed.

Environmental:

Proper disposal of all waste arising from Manager’s work on the Shared Facilities and maintenance activities and completion of all required manifests and logs.
Compliance with Governmental Approvals, Land Matters, and applicable Laws. Storage of materials in compliance with all regulations.

Shared Facilities:

Insulator washing, as required. Pole line inspection.
Substation and interconnection facilities inspection. 
Gas-fill of breakers.
Torqueing of electrical connections and structures.
Coordinate with the Co-Owners for events or conditions that would affect the Projects. 
Periodic testing of protective relays.
Transformer testing per manufacturer’s specifications of transformers.
Transformer maintenance per manufacture’s specification of transformers.
Testing contact resistance and operation on breakers and switches per manufacturer’s specifications. Weed abatement and vegetation control.
Witness meter and relay calibrations for interconnect as required by interconnect guidelines. 
Auto transformer oil sampling and testing.
Periodic testing of voltage regulation/power factor equipment, if installed.

Other:

Reporting
Billing  
EXHIBIT F

Manager’s Billable Rate Schedule 

Standard Rates
	Standard 
Hourly Rate


Project Manager	
$200

Project Engineer	
$120

Analyst	
$80

Intern	
$35
  
EXHIBIT G

Insurance Requirements

PART A – REQUIRED INSURANCE COVERAGES OF CO-OWNERS (OR IE COMPANY, AS APPLICABLE)

1.	Type of Insurance 		Minimum Limits of Coverage
			
	Commercial General Liability (CGL)		$1,000,000 combined single limit per occurrence and in the aggregate, where applicable.

CGL insurance shall be written on an occurrence form and shall cover liability arising from premises, operations, products/completed operations, contracts, property damage, personal injury and advertising injury, liability assumed under an insured contract (including the tort liability of another assumed in a business contract) and sudden and accidental pollution, all with limits as specified above. CGL insurance shall include ISO endorsement CG 24 17 (or an equivalent endorsement) which modifies the definition of “Insured contract” to eliminate the exclusion of easement or license agreements in connection with construction or demolition operations on or within 50 feet of a railroad to the extent and during the term such exposure exists.

	Umbrella Liability		$20,000,000 umbrella liability combined single limit per occurrence and in the aggregate.  The commercial umbrella insurance shall provide coverage over the top of the CGL insurance, the Business Automobile Liability insurance, and the Employers Liability insurance.

	Business Automobile Liability		Business Automobile Liability insurance shall be written on an ISO form.  The policy shall be endorsed to provide contractual liability coverage equivalent to that provided in the 1990 and later editions of CA 00 01.

	Workers Compensation		Statutory Requirements.  Co-Owner may comply with these requirements through the use of a qualified self-insurance plan.

	Employers Liability		$1,000,000 each accident for bodily injury by accident, or $1,000,000 each employee for bodily injury by disease.

	Builder’s Risk		During the course of construction activities, providing coverage for:

(i)  Physical damage loss to property in the course of construction, installation and erection, on an “all risk” basis and including coverage for earthquake, flood, collapse, faulty workmanship, materials and design, testing of machinery or equipment, debris removal and loss of occupancy, with limits sufficient to cover the Probable Maximum Loss (PML).

(ii)  Delay in Start-up coverage providing coverage for losses caused by an insured peril with an indemnity period 6 months and a waiting period not to exceed 60 days.

	“All Risk” Property		Upon achieving Commercial Operation, procure “All Risk” Property Insurance, in an amount equal to a maximum probable loss evaluation for the value of the individual Project.  Such policy shall include coverage for

(i)  fire, flood, wind and storm, tornado and earthquake with respect to facilities similar in construction, location and occupancy to each Project, with sub-limits of not less than an amount equal to a maximum probable loss for flood and quake respectively, and

(ii)  Boiler and Machinery Insurance covering all objects customarily subject to such insurance, including boilers and turbine components as applicable.

 
PART B – REQUIRED INSURANCE COVERAGES OF MANAGER

1.	Type of Insurance 		Minimum Limits of Coverage
			
	Commercial General Liability (CGL)		$1,000,000 combined single limit per occurrence and in the aggregate, where applicable.

CGL insurance shall be written on ISO occurrence forms and shall cover liability arising from premises, operations, products/completed operations, contracts, property damage, personal injury and advertising injury, liability assumed under an insured contract (including the tort liability of another assumed in a business contract), and sudden and accidental pollution, all with limits as specified above. CGL insurance shall include ISO endorsement CG 24 17 (or an equivalent endorsement) which modifies the definition of “Insured contract” to eliminate the exclusion of easement or license agreements in connection with construction or demolition operations on or within 50 feet of a railroad to the extent and for the term such exposure exists. There shall be no endorsement or modification of the CGL insurance limiting the scope of coverage for liability arising from explosion, collapse, or underground property damage.

	Umbrella Liability		$20,000,000 umbrella liability combined single limit per occurrence and in the aggregate.  The commercial umbrella insurance shall provide coverage over the top of the CGL insurance, the Business Automobile Liability insurance, and the Employers Liability insurance.

	Business Automobile Liability		Policy with $1,000,000 combined single limit (each accident), including all Owned, Non-Owned, Hired and Leased Autos.

The insurance shall be endorsed to provide contractual liability coverage equivalent to that provided in the 1990 and later editions of CA 00 01.

	Workers Compensation		Statutory Requirements.  Co-Owner may comply with these requirements through the use of a qualified self-insurance plan.

	Employers Liability		$1,000,000 each accident for bodily injury by accident, or $1,000,000 each employee for bodily injury by disease.

PART C – REQUIRED INSURANCE COVERAGES FOR THE SHARED FACILITIES

1.	Type of Insurance 		Minimum Limits of Coverage
			
	All Risk Property Insurance		Upon Commercial Operation of the Projects, providing coverage for repair or replacement of the physical damage to the Shared Facilities and associated costs and expenses normally included on an “all-risk except that which is excluded” policy form.  Such coverage shall be on a replacement cost basis and inclusive of machinery break-down (including resulting damage from design defects, faulty workmanship or materials) on all components of the Shared Facilities that are jointly owned by the Co-Owners.  With respect to the transmission and distribution lines, where replacement cost valuations are not generally available in the commercial insurance market, minimum sub-limits shall be procured.  Such coverage shall be limited to repair or replacement of the physical damage.  Coverage shall have  deductibles commensurate with industry standards.  Exclusions on said policy shall be provided to each Co-Owner upon request.
 
EXHIBIT H

Actual and Anticipated IE Projects 

Actual or Anticipated IE Project	Actual or Anticipated Capacity	Actual or Anticipated NTP	Actual or Estimated COD	Substation
AntEx 2 Project	105 MW	April 2018	October 2018	Big Sky North
Antelope Expansion 1B Project	17 MW	January 2021	June 2021	
Antelope Expansion 3A Project	15 MW	March 2020	December 2020	
Antelope Expansion 3B Project	5 MW	March 2020	December 2020	
Antelope DSR 3 Project 	20 MW	November 2018	June 2019	
Raceway Solar Project	125 MW	January 2020 or later	Mid-2020 or later	
San Pablo A Project	60 MW	November 2018	April 2019	
Estrella Project	56 MW	Unknown	Unknown	
San Pablo B Project	40 MW	November 2018	April 2019	Big Sky 
Luna Storage Project	100 MW	September 2020	July 2021	
Lancaster Area Battery Project	100 MW	Unknown	Unknown</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>20200921</filing_id>
      <filing_title>Fourth Amended and Restated Shared Facilities Agreement</filing_title>
      <filing_type>30</filing_type>
      <associated_filing_id>203</associated_filing_id>
      <associated_record_id>1002</associated_record_id>
      <associated_option_code>A</associated_option_code>
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-09-22</current_effective_date>
      <ferc_order_date>2020-10-30</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
  </ferc_filing_data>
</Document>