<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Document xmlns="http://ferc.gov/etariffExport.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ferc_filing_data>
    <schema_version>2</schema_version>
    <company_id>C003696</company_id>
    <lead_applicant_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
    <tariff_id>1</tariff_id>
    <tariff_title>Tariffs</tariff_title>
    <tariff_export_date>2025-09-16T20:01Z</tariff_export_date>
    <export_schema_version>2</export_schema_version>
    <record_data>
      <record_id>1</record_id>
      <option_code>A</option_code>
      <record_title>Columbia Gas of Maryland SOC</record_title>
      <record_content_desc>Tariff</record_content_desc>
      <record_version_num>1.2.0</record_version_num>
      <record_narrative_name>CMD SOC effective 10-27-2016 Amendment</record_narrative_name>
      <collation_value>134217728</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2016-10-27</proposed_effective_date>
      <priority_order>1750000000</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>STATEMENT OF OPERATING CONDITIONS
GENERAL TERMS AND CONDITIONS
FOR NGPA SECTION 311 TRANSPORTATION SERVICES
Of
COLUMBIA GAS OF MARYLAND, INC.

Filed with the
FEDERAL ENERGY REGULATORY COMMISSION

Communications covering SOC should be addressed to:
Kenneth W. Christman
Assistant General Counsel
NiSource Corporate Services Company
121 Champion Way
Canonsburg, Pennsylvania 15317
Telephone: 724-416-6315
Fax: 724-416-6384
E-mail: kchrist@nisource.com


ETariff Information
a.	Tariff Submitter: Columbia Gas of Maryland, Inc.
b. 	FERC Tariff Program Name: FERC NGPA Gas Tariff
c.  	Tariff Title: Columbia Gas of Maryland, Inc. Statement of Operating Conditions - General Terms and Conditions
d.  	Tariff Record Proposed Effective Date: October 27, 2016 
e.  	Tariff Record Title: Columbia Gas of Maryland, Inc. Statement of Operating Conditions
f.  	Option Code: A
g.  	Other Information: Petition for approval of Revised Statement of Operating Conditions (Docket No. PR17-______).


						


COLUMBIA GAS OF MARYLAND, INC.
GENERAL TERMS AND CONDITIONS

1. The Statement of Operating Conditions 
1.1	Purpose and Effect 
	This Statement of Operating Conditions (Statement) contains the rates, rules and regulations under which gas service will be supplied by Columbia Gas of Maryland, Inc. to its customers in Maryland pursuant to its Blanket Certificate of Limited Jurisdiction issued by the Federal Energy Regulatory Commission (FERC). 
1.2	Revisions
	This Statement may be revised, amended, supplemented and otherwise changed from time to time as permitted by law, and such changes, when effective, shall have the same force and effect as the present Statement.
1.3	Application of Statement
	The Statement applies to any party or parties, or to their successors and assigns, lawfully receiving gas service from the Company under the rates set forth herein, and the receipt of gas service shall constitute the receiver a customer of the Company as the term is used herein.
1.4	Rules and Regulations
	The Rules and Regulations, filed as a part of this Statement, are a part of every contract or agreement for services, whether written, oral or implied, made by the Company, and govern all classes of service where applicable.  Subject to the approval of FERC, the Company shall have the right to interpret and determine the applicability of such Rules and Regulations.
1.5	Statement of Agents
	No agent or employee of the Company has authority to make any promise agreement or representation inconsistent with the provisions of this Statement.
1.6	  	Definitions 
	The following definitions shall apply to this Statement, unless otherwise clearly indicated:
1.6.1	Account - All gas consumption which (1) is consumed by the same individual   or corporate entity, including subsidiaries and affiliates, and (2) occurs on property which is either contiguous or is separated by no more than the width of a public or private right of way.  A single Account shall not include gas consumed by different tenants or other entities if the gas is distributed through separate Company meters, even if the charges for such distribution service are paid by a single landlord, property owner, or other entity.
1.6.2	Billing Cycle - The regularly occurring period, of approximately thirty-one (31) days, in which a customer is billed for gas service.  A Billing Cycle need not coincide with a calendar month.
1.6.3	"BTU" or "British thermal unit" is the amount of heat energy needed to raise the temperature of one pound of water by one degree Fahrenheit.
1.6.4	Ccf - A measure of gas usage and shall mean one hundred (100) cubic feet of gas. 
1.6.5	City Gate - The point where interstate pipelines deliver gas into the Company's facilities.
1.6.6	Customer Proxy - Generally, the entity that receives notices (e.g. OFOs, OMOs, SFOs, etc.), receives bills, and controls the gas bank account for a Shipper.
1.6.7	Delivery Point - The location at which the Company shall first receive the gas supply from a Marketer or Shipper. 
1.6.8	Distribution Service (also referred to as Transportation Service) - Service provided by the Company in which the customer purchases its gas supplies from an entity other than the Company and the Company distributes those gas supplies to the customer.
1.6.9	Dth or Dekatherm shall mean ten therms.
1.6.10	FERC - The Federal Energy Regulatory Commission.
1.6.11	Firm Service - "Firm Service" with regard to natural gas distribution company services shall mean that the Company will distribute gas to the customer on a firm basis during any day in which the Customer's gas is delivered by the Shipper to the Company at a Delivery Point in the same Company Local Market Area in which the customer's facilities are located.
1.6.12	FTS - Firm transportation service provided by an interstate pipeline in which gas is transported on a firm basis from designated receipt points to designated delivery points.
1.6.13	Gas - The gas commodity that is distributed by the Company.
1.6.14	Human Needs - Service provided to customers whose facilities are used for residential dwellings on either a permanent or temporary basis (such as, but not limited to apartment buildings, correctional institutions, dormitories, hospitals, nursing homes, hotels and motels).  In a curtailment situation those Human Needs customers whose requirements can be met by installed alternate fuel facilities will be required to utilize such facilities prior to requiring Human Needs customers without alternate fuel facilities to curtail.
1.6.15		ITS - Interruptible transportation service provided by an interstate pipeline, in which natural gas is transported on an interruptible basis.
1.6.16	Local Market Area - A continuous, physically-interconnected system of Company-owned distribution piping through which the Company provides natural gas service to customers in a discrete geographic area, utilizing one or more common Delivery Points from interstate pipeline supplier(s) or local gas supplier(s).
1.6.17	Material Obligation - Any obligation of the Marketer or Shipper under these Transportation Service Rules, which if not fulfilled by the Marketer or Shipper, would impair the customer's natural gas supply services or would impair the Company's ability to provide natural gas distribution services to its customers.
1.6.18	Mcf - One thousand (1000) cubic feet of gas.  
1.6.19	Month - Calendar month.
1.6.20	Primary FTS - With regard to Columbia Gas Transmission Corporation capacity, shall mean FTS which has a designated primary delivery point located in the same Upstream Pipeline Scheduling Point in which the Customer is located and has a designated primary receipt point at a location considered to be a point of generally available supply.  "Primary FTS" with regard to any other transmission pipeline shall mean firm transportation service which has a designated primary delivery point located in the same Company Local Market Area in which the customer is located and has a designated primary receipt point at a location considered to be a point of generally available supply.
1.6.21	Reliability - Comprises adequacy and security.
1.6.22	Shipper - The entity taking gas distribution service.
1.6.23	"Therm" or "thm" - a unit of heat equivalent to 100,000 British thermal units.  The Company uses thms as the unit of measure for billing its customers.
1.6.24	"Therm multiplier" - a numeric multiplier that is applied to the volume of gas consumed (as measured in cubic feet, Ccf, or Mcf)  to determine the amount of energy consumed (as measured in therms).  
1.6.25	Upstream Pipeline Scheduling Point or "UPSP" - (1) the single delivery point or set of geographically-related delivery points grouped by Columbia Gas Transmission Corporation ("TCO") for purposes of scheduling gas supplies for delivery by TCO, as listed on its Master List of Interconnections; or (2) single delivery point or set of geographically-related delivery points grouped by the Company for delivery through other interstate pipelines interconnected with the Company.
2. Service Limitations
2.1	Availability
	The use of the Company's service shall not be for any purpose other than that covered by the availability provisions of the rate under which service is supplied.
2.2	Curtailment or Temporary Discontinuance of Service
	In the event that it becomes necessary for Company to curtail or temporarily discontinue the delivery of natural gas, Customer shall be treated in substantially the same manner as similarly situated customers taking service under Rate TS as approved by the Maryland Public Service Commission.
2.3 	Penalty Provisions
	           Failure to comply with a curtailment or discontinuance request issued by the Company will result in a penalty applied to all use of curtailed gas, as set forth in the Statement of Currently Effective Rates, and may also result in a physical termination of gas service.

3. Application for Service
3.1	Application
	Application for gas service may be made by telephoning the Company office or its authorized agent, by letter, or through application via the Internet.
3.2	Right to Reject.
	The Company may place limitations on the amount or character of service it will supply, or may reject applications for any of the following reasons:
(a) Until the Customer has complied with the state and municipal regulations governing gas service.
(b) If the Company does not have adequate facilities to render the service desired.
(c) If such service is of a character that it is likely to affect unfavorably service to other Customers.
(d) If in the judgment of the Company, the applicant's installation of piping or gas equipment is hazardous, or of such a character that satisfactory service cannot be rendered.
(e) If an extension of street main is required to furnish such service.
(f) When it is necessary to conserve the supply of gas (see Rules 2.2 and 2.3).
(g) Customer's failure to provide a deposit to insure payment of bills, where requested by the Company under the provisions of Rule 5.2.
(h) Customer's failure to make such payment as may be required as a condition of extension of supply facilities.
3.3 	Acceptance
	Acceptance of service by the Customer shall constitute an agreement to accept service under this Statement, as amended from time to time, the Orders or Rules of FERC and the Maryland Public Service Commission, the Laws of the State of Maryland, and the Laws of the United States of America.
3.4	Unauthorized Use
	The use of service obtained from the Company without authority may be terminated by the Company without notice.  The use of service without notifying the Company and enabling it to read its meter, will render the user liable for any amount due for service supplied to the premises from the time of the last reading of the meter, immediately preceding his occupancy, as shown by the books of the Company.
         
4. Testing and Inspecting Customer's Service
4.1	Inspection Requirement
	If local authorities require an inspection of customer's piping, the customer shall be responsible for contacting the appropriate local authority to arrange for such inspection.  Upon passing the local authority's inspection, the customer or his authorized representative shall be permitted to unplug and unseal the outlet of the meter, connect it to the customer's piping, and turn on the valve located at the outlet side of the meter.  
4.2	Pressure Test of Customer Piping
	Before permitting the use of gas at any location, all customer piping and any alterations, additions or renewals thereof shall be tested for tightness and leaks in accordance with Part 4 of the American National Standard "National Fuel Gas Code", ANSI Z223.1 (1999).  Before any system of gas piping is finally put in service, it shall be tested for tightness and certified by the appropriate local authority that the test has been made.  
4.3	Company's Right to Inspect
	The Company shall have the right, but not the obligation, to inspect or test any installation before service is introduced or at any later time, and reserves the right to reject any piping or appliances not in accordance with the Part 4 of the American National Standard "National Fuel Gas Code", ANSI Z223.1 (1999); but such inspection, or failure to inspect, or to reject, shall not render the Company liable or responsible for any loss or damage resulting from defects in the installation, piping, or appliances, or from violation of Company rules, or from accidents which may occur upon the premises of the customer. 
4.4	Unsatisfactory Test or Inspection
      In the case of a leak, or other unsatisfactory condition of the house piping, resulting in the disapproval thereof by the Company or the appropriate local authority, correction shall be made of such condition at the owner's expense, and the line shall thereupon be inspected again in accord with the provisions of this Section 5.
4.5	Responsibility for Material or Workmanship
	With regard to the customer's service, the Company will not be responsible for any imperfect material or defective or faulty workmanship or for any loss or damage arising from such imperfect material or defective or faulty workmanship.  The Company has adopted these Rules and Regulations for the protection, adequacy and safety of service to its customers, and may refuse to turn gas on to any premises where the gas piping does not conform to the Rules and Regulations. 
5. Creditworthiness
5.1	Creditworthiness 
	Company shall not be required to initiate service on behalf of any customer or provide service or continue service for any customer who is or has become insolvent or who, at Company's request, fails within a commercially reasonable time to demonstrate creditworthiness as determined by the Company. Customer may receive service if customer furnishes good and sufficient security as determined by Company in the exercise of reasonable discretion. For the purpose of this section, the insolvency of a customer shall be evidenced by the filing by the customer or any parent entity thereof of a voluntary petition in bankruptcy or the entry of a decree or order by a court having jurisdiction over the premises adjudging the customer bankrupt or insolvent or approving, as properly filed, a petition seeking reorganization, arrangement, adjustment, or composition or in respect of the customer under the Federal Bankruptcy Act or any other applicable federal or state law or appointing a receiver, liquidator, assignee, trustee, sequestrator (or other similar official) of the customer or of any substantial part of its property or the ordering of the winding-up or liquidation of its affairs, with said order or decree continuing unstayed and in effect for a period of sixty (60) days.	
6. Company Equipment on Customer's Premises
6.1	Protection by Customer 
	The customer shall protect the equipment of the Company on his premises, and shall not permit any person, except a Company employee having proper Company identification, to break any seals upon, or do any work on, any meter, service pipe or other equipment of the Company located on the customer's premises. 
6.2	Tampering 
	In the event of the Company's meters or other property being tampered or interfered with, the customer being supplied through such equipment shall pay the amount which may be reasonably estimated to be due for service used but not registered on the Company's meter, and for any repairs, replacements or changes in facilities required, as well as for costs of inspections, investigations and protective installations. 
6.3	Access to Premises 
	The Company, or its authorized agents, shall have access at all reasonable times to the property or premises in or on which gas is used, to determine if the gas is being carried, distributed and burned in a proper and safe manner and in accordance with this Statement, or to read, inspect and test the meter, equipment, or facilities. Refusal on the part of the customer to allow access to his premises shall constitute sufficient cause for turning off the gas supply to such premises. If the customer fails to meet a scheduled appointment without providing at least one hour's prior notice of cancellation, the Company may charge for one hour of service time.  If the Company fails to meet a scheduled appointment without providing at least one hour's prior notice of cancellation, the Company may credit the customer's account with a credit equal to one hour of service time. 
	In the event the customer does not provide access during a 12 consecutive month period to read the meter, upon notice from the Company, the customer must choose from one of the following options:
	(1)	To schedule a service call to gain access to the premises for purposes of inspection or meter reading.  The Company will provide one service call annually to customers for the purpose of gaining access to read the meter.  If a customer requests to schedule an additional service call during a 12 consecutive month period, the customer will be assessed a charge for a one hour service call;
	OR
	(2)	To install, either a mechanical remote meter-reading device or a radio-based remote reading device for the purpose of monitoring and/or billing a customer's consumption of gas.
	If the Customer does not select one of the above options within sixty (60) days notice from the Company, the Company reserves the right in its sole discretion to implement one of the above options.  If the customer refuses to allow the Company to implement one of the above two options, it will be grounds for termination.
7. Rate Schedule
7.1	Availability
	Service under this Statement is available to customers who qualify for service under Rate TS-Transportation Service.
8. Service Continuity
8.1 	Company Liability
	The Company does not guarantee continuous uninterrupted gas service and, except as provided herein, shall not be liable for any change in or interruption of service.  The Company shall not be liable to Customers, their directors, officers, employees, agents, or contractors, for any loss, cost, damage, expense, or any other liability (all of which shall be considered "Damages") regardless of whether such Damages are considered direct, indirect, incidental, special, consequential, exemplary or punitive Damages or to arise in contract or in tort, or any other cause of action, except as caused by the gross negligence or willful misconduct of the Company and only to the extent caused by the Company.
	The Company shall not be liable for any act or omission of any entity furnishing the Company or the Company's customers goods, services, equipment or other products to be delivered through the Company's facilities or to be used in conjunction with goods, services, equipment of other products furnished by the Company.  The Company shall not be liable for any damages or losses due to the fault or negligence of the Customer or due to the failure or malfunction of Customer-provided equipment or facilities.
8.2	Notice of Trouble
	The customer shall notify the Company immediately should the service be unsatisfactory for any reason, or should there be any defects, leaks, trouble, or accident, affecting the supply of gas.
8.3	Force Majeure
      Neither Company nor Customer shall be liable in damages to the other for any act, omission, or circumstance occasioned by or in consequence of any acts of God, strikes, lockouts affecting the Company or its suppliers of gas, acts of the public enemy, wars, blockades, insurrections, riots, epidemics, landslides, lighting, earthquakes, fires, storms, floods, washouts, arrests and restraints of rulers and peoples, civil disturbances, explosions, breakage or accident to machinery or lines of pipe, the binding order of any court or governmental authority which has been resisted in good faith by all reasonable legal means, and any other cause, whether of the kind herein enumerated or otherwise, not reasonably within the control of the party claiming suspension and which by the exercise of due diligence such party is unable to prevent or overcome.  Failure to prevent or settle any strike or strikes shall not be considered to be a matter within the control of the party claiming suspension.
      Such causes or contingencies affecting the performance hereunder by either Company or customer, however, shall not relieve it of liability in the event of its concurring negligence or in the event of its failure to use due diligence to remedy the situation and to remove the cause in an adequate manner and with all reasonable dispatch, nor shall causes or contingencies affecting such performance relieve either party from its obligations to make payments of amounts then due hereunder in respect of gas theretofore delivered.
8.4	DISCLAIMER OF WARRANTY
      THE COMPANY MAKES NO WARRANTY AS TO MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, EXPRESS OR IMPLIED, BY OPERATION OF LAW OR OTHERWISE.
9. Measurement
9.1	Measurement of Gas
	Except as herein otherwise provided, the measurement of gas service shall be by meters furnished and installed by the Company. The Company will furnish each customer with a meter of such size and type as the Company may determine will adequately service the customer's service requirements, and may from time to time, change or alter the equipment to provide for accurate measurement. To determine measured gas consumption, factors such as those for pressure, temperature, specific gravity, and deviation from the laws for ideal gases shall be applied.
9.2	Meters Not Available
	In cases where meters are not available due to circumstances beyond the control of the Company, and the necessity for rendering gas service to the customer is urgent, the Company may, by written agreement with the customer, commence service and render bills temporarily on the basis of estimated gas consumption.
9.3	Meter Reading Intervals
	Bills will be rendered and be payable once each month.  The Company may read any meter once each month, but may also read meters of domestic and commercial customers once each two months.  As to any customer whose meter is read once each two (2) months, the consumption for the first month of each bi-monthly meter reading period shall be determined by estimation on the basis of the customer's previous usage, adjusted for weather conditions, and the consumption for the second month of each bi-monthly meter reading period shall be determined by subtracting the first month's estimated consumption from the total actual consumption for the bi-monthly period as shown by the meter.  The bill for each month shall be the result of applying to the consumption, determined as foresaid, the applicable rates and charges contained in this Statement.
	Upon request the Company will supply any customer with a card form upon which he may record his meter reading at the end of the first month of each bi-monthly meter reading period, and if such card is received by the Company within two (2) days after the close of such month the bill for such month will be computed from the meter reading shown on the card instead of by estimate.  The Company will adjust estimates of bills for changes in conditions of which it has been notified in advance by a customer.
9.4	Estimated Usage
	The Company shall estimate usage (1) for one month of each meter reading period where scheduled meter readings are on a bi-monthly basis, or (2) when a meter is installed but the scheduled meter reading cannot be obtained due to the inability of the Company's agent or representative to gain access to the meter location at the time scheduled, or (3) in case any meter or measuring device for any reason fails to register for any period of time the full consumption by a customer, or (4) where the Company is unable to obtain a meter reading for causes beyond its control.
	Estimated readings shall be based upon prior consumption at the particular location for a similar period of time corrected for current conditions.  The customer shall be obligated to pay the bill based on the estimated consumption as though the same was based on an actual meter reading, and failure to so pay shall subject the customer and his service to the Non-Payment Shut-Off provisions of this Statement.  Bills based on estimated readings shall be subject to adjustment for any unusual circumstances found to have affected the quantity of gas used, or for obvious errors in estimates, which adjustments shall be made not later than on the next subsequent bill rendered the customer.
	In those instances where the Company's agent or representative is unable to gain access to the customer's premises during the regular scheduled working hours to obtain a meter reading, the number of estimated readings shall be limited to five consecutive months, and the customer's service, thereafter, is subject to discontinuance. (See Rule 18.2) 
9.5	 Heating Value
      	The minimum average monthly total heating value of gas delivered hereunder shall not be less than 1,000 Btu per cubic foot.  Such total heating value shall be determined by standard approved methods of testing or by a recording calorimeter(s) periodically checked by approved methods for accuracy.
9.6	Flowing Temperature
	The Company shall determine the temperature of the natural gas flowing through the meter or meters by recorder, from established tables, or by the use of temperature sending elements used in conjunction with electronic measuring devices. The Company created the table of temperatures by measuring actual flowing gas temperatures on a daily basis for a period of several years, and created a temperature compensation adjustment factor based upon the actual flowing temperatures.
9.7	Measuring Equipment
		Unless otherwise agreed upon, the Company will own, install, maintain and operate measuring equipment equipped with displacement or flow meters as approved by the Maryland Public Service Commission to determine the quantities of gas delivered.  The gas delivered shall be measured in accordance with the latest approved methods in the industry generally.  Orifice meters shall be installed and operated, and gas quantities computed, in accordance with Report No. 3 of the Gas Measurement Committee of the American Gas Association, as amended, expanded or superseded from time to time, applied in a practical and appropriate manner.  Customer may install check measuring equipment, provided such equipment is installed so as not to interfere with the operations of the Company.  The Company and customer in the presence of each other shall have access to the other's measuring equipment at all reasonable times, but unless otherwise agreed upon, the reading, calibrating and adjustment thereof and the changing of charts shall be done only by the owner thereof.  Both the Company and customer shall have the right to be present at the time of any installing, reading, clearing, changing, repairing, inspecting, testing, calibrating or adjusting done in connection with the other's measuring equipment.  The records from such measuring equipment shall remain the property of their owner.  Customer shall exercise reasonable care in the installation, maintenance and operation of its equipment so as to avoid any inaccuracy in the determination of the quantity of gas delivered. 
9.8 		Measurement Correction
	The quantity of gas delivered shall be adjusted to compensate for pressure, flowing temperature, and deviations from Boyle's Law.  In instances where the actual absolute atmospheric pressure is not recorded at the meter, the average absolute atmospheric pressure (barometric pressure) shall be assumed to be 14.4 lbs. per square inch, irrespective of actual elevation or location of the delivery point above sea level or variations in actual barometric pressure from time to time.  In instances where the actual absolute atmospheric pressure is recorded at the meter, the actual absolute atmospheric pressure shall be used to calculate consumption.  In instances where the actual temperature is not recorded at the meter, the temperature of the gas flowing through the meter shall be corrected by a factor derived from an arithmetic average of the temperature obtained from established tables of monthly average temperatures.  In instances where the actual temperature is recorded at the meter, the actual temperature shall be used to calculate consumption. The gas shall be measured in accordance with generally accepted methods in use in the industry and recommended by the Gas Measurement Committee of the Natural Gas Department of the American Gas Association, applied in a practical manner.
9.9     Therm Adjustment
		The Company shall apply a therm multiplier to metered cubic foot usage to adjust for heating value.  This therm multiplier shall be calculated monthly based on the most recent reported average heating values for the UPSPs within the Company's service territory and then weighted based on deliveries into the UPSPs.
10. Meter Tests
10.1	Meter Tests
	The Company, at its expense, will make periodic tests and inspections of its meters, pursuant to the Code of Maryland Regulations, Title 20, Subtitle 55 governing Service Supplied by Gas Companies. 
10.2	Fast Meters
	If, upon the test of any meter, the meter is found to have an average error of more than 2% fast, the Company shall refund to the customer the overcharge, however, in no event will refund be made if the adjustment is for less than $1.00.  The total amount of overcharge shall be determined as follows:
	(a)	If the time at which the error first developed or occurred can be definitely fixed, the amount of overcharge is to be based thereon and credited in full.
	(b)	If the time at which the error first developed or occurred cannot be definitely fixed, it shall be assumed that the over-registration has existed for a period of three years or a period equal to one-half of the time since the meter was last tested, whichever is less ("Assumed Period"). The Company will then determine the amount of overcharge based on the corrected meter reading for the Assumed Period. 
10.3	Slow Meters
	Whenever a meter in service is tested and found to have under-registered, or is slow, more than 2%, the Company may bill the customer one-half of the unbilled error for a period of twelve months, unless the meter has been tested within the twelve month's period, in which event the Company may bill the customer one-half the unbilled error for the period since the meter was last tested.  If the amount of under-registration is less than Five-Dollars ($5.00), the Company will not adjust the bill.
10.4	Non-registering Meters
	Whenever a meter is found to be stopped, the Company may estimate, and bill the customer, as provided under Rule 15.4 of these Rules and Regulations. Except in the case of tampering, theft, or unauthorized use, the estimate shall cover a period of not more than six (6) months.
10.5	Request Tests
	Upon request by a customer and at no charge the utility shall make a test of the accuracy of registration of the meter serving him, provided that such tests need not be made more frequently than once in eighteen (18) months.
1. The customer, or his representative may be present when his meter is tested.
2. A report of the results of the test shall be made to the customer within a reasonable time after the completion of the test, and a record of the report, together with a complete record of each test, shall be kept on file at the office of the utility.
 
11. Payment Terms 
11.1		Billing Period
		Bills for gas service to all customers will be rendered monthly for service furnished during the preceding meter reading period at the rates set forth from time to time in this Statement.
11.2		Payment Period
		Bills are due and payable upon presentation, and payment may be made by the customer at the office of one of its collection agents.  The due date of payment shall not be a Saturday, Sunday or holiday, and shall be within fifteen (15) days after date of presentation, except on bills rendered to churches, state, federal and municipal customers, or any department or institution thereof, for which thirty (30) days shall be allowed.  After the due date of payment, the customer will receive written notice setting forth the date service will be discontinued unless payment is received by the Company prior to that date, which date shall not be less than five (5) days from the date of mailing such notice.  Failure to receive the bill will not excuse customers from payment obligations, and payments must be made without regard to any counter claims whatsoever.
11.3		Payment by Mail
		Any remittance received by mail at any office of the Company bearing U.S. Post Office stamp date corresponding with or previous to the due date of payment shown on the bill will be accepted by the Company as compliance with the terms of payment.
11.4		Disputed Bills
		In the event of a dispute between the customer and the Company regarding any bill, the Company will forthwith make such investigation as may be required by the particular case and report the result thereof to the customer.  When the Company has made such a report to the customer, either, (1) sustaining the bill as rendered, or, (2) submitting a corrected bill, the date of the bill for purposes of payment shall be considered to be as of the date of said report and the customer shall pay the amount due within the time provided in this Statement and failure to so pay shall render the customer and his service liable to the penalties herein provided.  Any amounts received by the Company in excess of the amount disclosed to be due by the Company's investigation of the dispute shall be forthwith returned to the customer if the error arose from any cause other than the incorrect estimating of a customer's consumption for the period in dispute.  Errors arising through the incorrect estimating of a customer's consumption shall be adjusted in accordance with the provisions of Rule 9.4 of this Statement.
11.5		Dishonored Check
		If the Company receives a negotiable instrument from an applicant or a customer as payment of any bill, charge or deposit due, and if such instrument is subsequently dishonored or is uncollectible for any reason, the Company shall charge the applicant or customer a charge of twenty dollars ($20.00).
12. Disconnection by the Company
12.1	Non-Payment Shut-Off
	The Company may disconnect its service on due notice and remove its equipment in case of non-payment of bill at the present or former location.  (See the Payment Period provisions of this Statement.)
12.2	Shut-Off for Cause
	The Company may disconnect on reasonable notice if entry to its meter or meters is refused, or if access thereto is obstructed or hazardous, or for other violation of these Rules and Regulations.
12.3	Safety Shut-Off
	The Company may disconnect without notice if the customer's installation has become hazardous or defective.
12.4	Defective Equipment Shut-Off
	The Company may disconnect without notice if the customer's equipment or use thereof might injuriously affect the equipment of the Company, or the Company's service to other customers.
12.5	Shut-Off for Other Causes
	The Company may disconnect without notice for abuse, fraud, or tampering with the connections, meters or other equipment of the Company or for any physical harm, or any threat of physical harm to Company personnel or property.
12.6	Reconnection Charge
	Whenever a customer's gas shall be turned off or his meter disconnected by reason of non-compliance with this Statement or the Regulations or Orders of the Maryland Public Service Commission or FERC, or whenever a customer seeks to resume service at the same address where the customer discontinued service within the prior twelve (12) month period, the customer shall be subject to a reconnection charge as set forth in the Company's Statement of Currently Effective Rates.
12.7	Non-Compliance by Company
	Failure on the part of the Company to enforce any of its rights at any time shall not be deemed a waiver of any of its rights. 
13.  Termination of Service
13.1	Termination by Company
	The Company's obligation to service a particular premise shall, at the option of the Company cease and terminate (1) in case the property served is vacated or a change of occupancy occurs, (2) in case of bankruptcy of the customer, (3) in case of the illegal use of gas or (4) in case of any physical harm or any threat of physical harm to Company personnel or property.
13.2	Termination of Service from Transmission Pipe Lines
	The Company may, in its discretion, remove, relocate or abandon transmission pipe lines either temporarily or permanently, or change the use thereof, and cease to furnish gas to such customers located along the route thereof or the Company may cease to furnish gas to its customers served directly from production or transmission pipe lines of other companies, if for any reason said lines are not available to serve gas to said customers, without prejudice to the right of the Company to continue to supply gas to other customers of the Company.  In case of termination of service from a transmission pipeline, thirty (30) days' notice shall be given by the Company to the customer.
13.3	Termination by Customer
	A customer who intends to vacate the premises, discontinue the use of gas, or terminate his liability to pay for gas delivered to the premises, shall give at least twenty-four (24) hours notice to the Company.  If such notice is given, the customer shall not be liable for service taken after the effective date of such notice.  If such notice is not given the customer shall be liable for service taken during the twenty-four (24) hour period following the Company's receipt of the customer's notice.  The customer shall be liable for gas used in accordance with the procedure stated in the Final Bill provisions of this Statement.
13.4	Final Bill
	The customer is liable for service taken after notice to terminate his service until the meter is read or final estimated consumption is determined, or gas is shut off, or service is placed in the name of the successor customer, whichever occurs first.  When the disconnect and reconnect orders are executed on different days, an actual meter reading shall be performed.  Final estimated consumption shall be based on the customer's average daily usage for non-heat usage and average usage per degree day for heating usage and the number of days in the final billing period.  The non-heat usage factor and the degree days usage factor will be calculated based on the customer's previous twelve (12) months' consumption history and be maintained on each individual account on a permanent basis.  Final readings will not be computed when these factors cannot be calculated on the account or when a customer specifically requests that the meter be read.  The Company reserves the right to estimate any customer's final meter reading in the case where access to the meter is not provided within a reasonable time.  The final bill for service is due and payable immediately.
14.  Transportation Service Rules ("TSR")
14.1	This paragraph applies to all Transportation Service on the Company's system regardless of whether the Customer is acting as its own Shipper or whether the Customer has contracted with a Marketer to provide this service.	

14.2	Requirements for Transportation Service 
A)	Electronic Communications.  All transportation customers or their agents must be connected with the Company's electronic bulletin board to accommodate electronic communication.
	B)	Application Process
1.	All Customers must complete an application in the form prescribed by the Company prior to taking service under these Transportation Service Rules ("Transportation Service Application and Agreement"). The Transportation Service Application and Agreement shall set forth:  (1) the point(s) of receipt at which the gas will be delivered to the Company; (2) the point(s) to which the Company will redeliver gas to or on behalf of the customer; and (3) the customer's maximum daily transportation quantity and annual transportation quantity. The Transportation Service Application and Agreement shall also include: the name, address and telephone number to which all notices are to be delivered, an e-mail address (if available), banking and balancing information if applicable, alternate fuel information, and the services and levels of said services to be rendered. The maximum daily and annual quantities are subject to adjustment by the Company no more than one time each year, to reflect the Customer's actual maximum daily and annual quantities experienced in the most recent November to October period, except an adjustment may be made at any time upon agreement of the Customer and the Company.  In addition to the maximum daily and annual transportation quantities, for customers that are asphalt plants, power generators or grain dryers, those customers shall also provide their maximum daily transportation quantity which is expected to occur in January.
2. The benefits and obligations of the service agreement shall begin when the Company first receives gas on the customer's behalf.  However, no agreement for service may be assigned or transferred without the written consent of or approval of the Company, which shall not unreasonably be withheld.
3. Within sixty (60) days of receipt of all necessary information requested by the Company to evaluate a customer's application, the Company will respond to the Transportation Service Application and Agreement and agree either to supply service or to deny service.  If the Company refuses to provide transportation service, the Company shall provide detailed support for its decision.

C) 	Transportation customers without daily measurement must agree to the Company's estimate of takes and pay all charges assessed by the Company.  The customer may opt to install daily metering if it does not want to be subject to the Company's estimates.  The Company reserves the right, as a condition of service, to require any customer requesting service under this Statement to install a daily demand reading meter.  The Company also reserves the right to require installation of such a meter as a condition of continuation of service under this Statement.

14.3		Order of Gas Through the Meter
      Gas through the customer's meter during each billing month shall be considered to have come from the following sources, in a sequential manner:
1. First through - gas supplies which have reached the facilities of the Company on behalf of the customer, including customer-owned supplies; next through,
2. Prior months bank balance, if any, under Rider EBS, Option 1; next through,
3. Firm sales, if any, contracted by the customer from the Company; next through,
4. Consumption in Excess of Deliveries provided by the Company as defined in the Transportation Service Rules of this Statement.

14.4		System Integrity Measures and Procedures 

      A)	Operational Alert (OA).  An OA may be called during periods of projected increased or decreased consumer demand for, or supply of, natural gas which may cause system stress or threaten applicable storage or other pipeline contract limitations.  An OA is a request for specific action on the part of an individual Customer Proxy, or all Customer Proxies.  The Customer Proxies are expected to respond to OAs within four (4) hours after the Company provided notice, informing the Company of their intended action(s). Where possible, an OA may be used to avoid an OFO or OMO but shall not be required as a condition to the issuance of an OFO or OMO.
      B)	Emergency Alerts (EAs). If an unforeseen emergency situation arises which could threaten the continuous adequate delivery of natural gas to a customer, the Company will provide the Customer Proxy with as much notice as is reasonably possible under the emergency situation.  Such notice shall be made by the medium most reasonably expected to reach the Customer Proxy in a timely manner, including but not limited to: telephonic, e-mail, facsimile, the Company's internet-based website, or personal contact.  In such notice, the Company will advise the Customer Proxy of the unforeseen emergency situation, and the Customer Proxy is expected to comply with the Company's requests.
      C)	Seasonal Flow Orders (SFOs).  As detailed below in the Seasonal Flow Orders provision of this Statement, the Company shall have the authority to issue SFOs whenever the Company believes that the seasonal supplies of Sales Service customers may be jeopardized.  The Company may issue an SFO to Customer Proxies in instances including but not limited to the following: in order to prevent an excess of gas supply on the Company's system, to respond to an operational issue, or to direct Customer Proxies to direct their Shippers to adjust gas quantities being delivered to the Company to match Distribution Service customers' estimated requirements to prevent shortages of seasonal supplies on the Company's system.
      D)	Operational Flow Orders (OFOs) and Operational Matching Orders (OMOs).  The Company has the authority to issue OFOs and OMOs whenever the Company believes that the daily safe and/or reliable operation of its distribution system may be jeopardized including, without limitation, the need to protect the daily supply of Sales Service customers. The Company will endeavor to take all actions reasonably practicable to avoid issuing an OFO or OMO.  In determining whether to issue an OFO or OMO the Company shall not be required to consider the availability of assets paid for by PGA customers, or to acquire additional capacity or gas supply to serve Distribution Service customers (with the exception of quantities elected under Rate SS, and existing capacity for Rider EBS-Option 1). If the Company has the necessary information and conditions do not require a system-wide OFO or OMO, the Company may issue an OFO or OMO to an individual Customer Proxy or Proxies, but this action shall not be a precondition for the Company to issue an OFO or OMO applicable to all Distribution Service customers or Customer Proxies.  Where operationally feasible, the Company will endeavor to issue OFOs/OMOs by Upstream Pipeline Scheduling Point.
14.5		Seasonal Flow Orders (SFOs)
A) An SFO is a demand for specific actions on the part of Shippers that are serving STS or TS customers.
B) An SFO will be issued, to the extent possible, with a minimum of two business days notice to the affected parties.
C) The Company will have the authority to direct Customer Proxies to direct their Shippers to adjust daily scheduled quantities to a specified level (the SFO Level).  The SFO Level may be necessary to restrict under-deliveries or over-deliveries, as the Company deems appropriate.
			1) 	For Customers without daily measuring devices, the SFO Level will be determined by the Company based upon the Company's projection of usage by distribution service customers during the period.  Issuance of an SFO shall not prohibit issuance of an OFO/OMO if conditions warrant. To meet the daily SFO Level, the Shipper may use quantities of gas which are: 1) scheduled and delivered on that day to the Company in the same Upstream Pipeline Scheduling Point in which the Shipper's customers' facilities are located; 2) contracted for under Rate SS - Standby Service; 3) available on that day pursuant to the Rider EBS-Option 1; or 4) additional quantities that may be made available by the Company at its sole discretion including quantities delivered in accordance with the applicable rate schedule and Tariff or Statement requirements.
      2)	For customers with daily measuring devices, the Company shall have the authority to direct Customer Proxies to direct their Shippers to adjust customer's daily consumption or daily scheduled deliveries in order that daily scheduled deliveries (the SFO Level) match customer's consumption.  In order to determine the SFO Level the Company will include quantities: (1) scheduled and delivered on that day to the Company in the same Upstream Pipeline Scheduling Point in which the Shipper's customer(s')'s facilities are located; (2) contracted for under Rate SS - Standby Service; (3) available on that day pursuant to the Rider EBS-Option 1; or (4) additional quantities that may be made available to the Shipper by the Company at its sole discretion including quantities delivered in accordance with the applicable rate schedule and Tariff or Statement requirements.
D)	At the end of the normal billing month, the Company shall calculate the deliveries that the Shipper was required to deliver each day during the SFO as provided within this Seasonal Flow Orders provision.  When a difference between the daily SFO Level and actual daily quantities available to meet the SFO Level exists, the following charges will be assessed on the difference:
1) If a Shipper under-delivers during an SFO that restricts under-deliveries, the charge to the Customer Proxy for under-deliveries shall be calculated using the gas supply index identified in the Banking and Balancing provisions of these Transportation Service Rules. The "Adjustment to Index Price" shall be determined as follows:
 
If the ratio of under-deliveries to consumption is between 0% and 10.00%, the Adjustment to Index Price shall be 125%.

If the ratio of under-deliveries to consumption is 10.01% or more, the Adjustment to Index Price shall be 150%. 

2) If a Shipper over-delivers during an SFO that restricts over-deliveries, the charge to the Customer Proxy for over-deliveries shall be calculated using the gas supply index identified in the Banking and Balancing provisions of these Transportation Service Rules; the "Adjustment to Index Price" shall be determined as follows:

If the ratio of over-deliveries to consumption is between 0% and 10%, the Adjustment to Index Price shall be 75%.

If the ratio of over-deliveries to consumption is 10.01% or more, the Adjustment to Index Price shall be 50%. 

3)	The Customer Proxy shall also be required to pay all other charges incurred by the Company on the dates of the SFO that result from the Shipper's failure to comply with the SFO, including a proportionate share of any pipeline penalties that are incurred by the Company.
14.6		Operational Flow Orders (OFOs)
A)	An OFO is a demand for specific actions on the part of Shippers that are serving customers without daily measuring devices.  All customers without daily measuring devices are subject to the Company's issuance of OFOs. 
B)	An OFO will be issued, to the extent possible, with a minimum of eight (8) hours notice to the affected parties.  Notice shall be made by the medium most reasonably expected to reach the Customer Proxy in a timely manner, including but not limited to:  e-mail, facsimile, or the Company's internet-based website. The notice will include the circumstance that warrants the issuance of the OFO or OMO, and it will explain why the actions are necessary.  The notice will be provided via e-mail to the Maryland Public Service Commission.
C)	The Company will have the authority to direct Customer Proxies to direct their Shippers to adjust daily deliveries to a specified level (the Daily OFO Level).  Generally, during peak design day conditions, the Daily OFO Level will be equal to the then current maximum daily quantity. Should expected conditions be different than peak design day conditions, the Daily OFO Level may be greater or less than the then current maximum daily quantity. In order to determine compliance with the OFO the Shipper may use gas quantities which are:  1) scheduled and delivered on that day to the Company in the same Upstream Pipeline Scheduling Point in which the Shipper's customer facilities are located; 2) contracted for under Rate SS - Standby Service; 3) available pursuant to the Rider EBS-Option 1; or 4) additional quantities that may be made available to the Shipper by the Company at its sole discretion including quantities delivered in accordance with the applicable rate schedule and Tariff or Statement requirements. 
D)	When a difference between the Daily OFO Level and actual daily OFO compliance quantities to the Company exists, the following charges will be assessed to the Customer Proxy:
1. Two Dollars and Eighty-seven cents ($2.87) per therm on the difference, except however, the Two Dollars and Eighty-seven cents ($2.87) will not be assessed if the difference results from the Shipper delivering more than the Daily OFO Level during an OFO that restricts under-deliveries, or from the Shipper delivering less than the Daily OFO Level during an OFO that restricts over-deliveries; and,
2. The payment of all other charges incurred by the Company on the date of the OFO that result from the Shipper's failure to comply with the OFO, including a proportionate share of any pipeline penalties that are incurred by the Company.
14.7		Operational Matching Orders (OMOs)
A) An OMO is a demand for specific actions on the part of Shippers that are serving Distribution Service customers with daily measuring devices.  All customers with daily measuring devices, except as specified in the Operational Matching Order provisions of these Transportation Service Rules, are subject to the Company's issuance of OMOs.

B)	An OMO will be issued, to the extent possible, with a minimum of eight (8) hours notice to the affected parties. Notice shall be made by the medium most reasonably expected to reach the Customer Proxy in a timely manner, including but not limited to: e-mail, facsimile, or the Company's internet-based website.  The notice will include the circumstance that warrants the issuance of the OMO and explain why the actions required are necessary.  The notice will be provided via e-mail to the Maryland Public Service Commission.

C)	The Company shall have the authority to direct Customer Proxies to adjust customer's daily consumption or daily scheduled deliveries (Daily OMO Level) in order that daily scheduled deliveries match customer's consumption.  In order to comply with the OMO, the Shipper may use gas quantities which are:  1) scheduled and delivered on that day to the Company in the same Upstream Pipeline Scheduling Point in which the Shipper's customers' facilities are located; 2) contracted for under Rate SS - Standby Service; 3) available pursuant to the Rider EBS-Option 1; or 4) additional quantities that may be made available to the Shipper by the Company at its sole discretion including quantities delivered in accordance with the applicable rate schedule and tariff requirements.
D)	When a difference exists between the Daily OMO Level and actual daily OMO compliance quantities, the following charges will be assessed to the Customer Proxy: 
1)	Two Dollars and Eighty-seven cents ($2.87) per therm on the difference, except however, the Two Dollars and Eighty-seven cents ($2.87) will not be assessed if the difference results from the Shipper delivering more than the Daily OMO Level during an OMO that restricts under-deliveries, or from the Shipper delivering less than the Daily OMO Level during an OMO that restricts over-deliveries, and
2)	Payment of all other charges incurred by the Company on the date of the OMO that result from the Shipper's failure to comply with the OMO, including a proportionate share of any pipeline penalties that are incurred by the Company.
14.8 	Limitations on Nominations
	A Shipper shall not submit a daily gas supply nomination in excess of one hundred twenty percent (120%) of the customer's maximum daily quantity except with the Company's prior permission.  The Company may reject a nomination to the extent it exceeds one hundred twenty percent (120%) of a customer's maximum daily quantity and confirm it at a level equal to the one hundred twenty percent (120%) limit if the Shipper did not receive the Company's prior permission to exceed the limit.
14.9	Limitations Upon Excess Deliveries
	The Company reserves the right to limit its receipt of deliveries which are in excess of a customer's known or estimated daily consumption of gas for redelivery to a customer on any given day ("Excess Deliveries") when such Excess Deliveries may cause the Company to incur penalties for exceeding its allowed daily or total storage injection capacity of its supplying pipeline or other costs incurred to avoid or mitigate pipeline penalties.  The Company shall specify, electronically, the level of the limitation applicable to the Customer Proxy.  The Company shall bill a proportionate share of the penalties and other costs that were incurred to avoid or mitigate pipeline penalties to all Customer Proxies whose Shippers fail to comply with the Company's limitation under this paragraph.

14.10	Banking and Balancing - For Transportation Customers
A. Consumption in Excess of Deliveries
1. If, in any billing month, the customer's consumption, plus retainage on the distribution system is greater than the sum of: (a) the quantity of gas delivered to the Company's City Gate by the Shipper for the customer's account during the billing month, plus (b) if the Customer Proxy subscribes to EBS-Option 1, banked gas quantities as permitted under EBS-Option 1, plus (c) imbalance trading performed during that month, then such use shall be considered imbalance gas sold by the Company to the Customer Proxy.
2. For Customer Proxies electing Rider EBS-Option 1 or Rider EBS-Option 2, the index price for such imbalance gas shall be determined by selecting the greater of: (1) the average of the highest City Gate price for deliveries for ten (10) consecutive days during the calendar month as published in Platt's Gas Daily "Daily Price Survey" under the heading Texas Eastern, M-3, or (2) the highest commodity cost of purchases by the Company during the calendar month, including the delivered cost of purchases at the city gate.
3. For Customer Proxies electing Rider EBS-Option 3, the index price of imbalance gas shall be the mid-point price as published in Platt's Gas Daily "Daily Price Survey" for the day under the heading Texas Eastern M-3.
4. After the index price of gas is determined pursuant to the Banking and Balancing provisions above, it shall then be adjusted by the following percentages to reflect the degree to which consumption exceeds deliveries.  The Company shall calculate the Customer Proxy's bill for imbalance gas by determining the quantities of imbalance gas sold to the Customer Proxy in each of the four categories below, multiplying the quantities sold in category by the corresponding "Adjustment to Index Price" factor, and adding that amount to any other applicable charges in the customer's rate schedule or the Transportation Service Rules. 
a. If the ratio of under-deliveries to consumption is between 0.00% and 5.00%, the Adjustment to Index Price will be 105%.
b. If the ratio of under-deliveries to consumption is between 5.01% and 10.00%, the Adjustment to Index Price will be 115%. 
c. If the ratio of under-deliveries to consumption is between 10.01% and 15.00%, the Adjustment to Index Price will be 125%. 
d. If the ratio of under-deliveries to consumption is 15.01% or more, the Adjustment to Index Price will be 150%.

During an SFO, the Adjustments to Index Prices applicable to the Seasonal Flow Order provisions of these Transportation Service Rules shall replace the foregoing adjustments.

5. The Customer Proxy also shall be subject to any applicable penalty under the Operational Matching Order or Operational Flow Order provisions of these Transportation Service Rules in the event that such purchases occur during the existence of an OFO or OMO condition.
6. The Customer Proxy has no right to make purchases pursuant to this provision, and all such sales are considered interruptible sales except to the extent that the customer has contracted for Standby Service. 
7. The purchase of imbalance gas pursuant to this paragraph shall not  relieve the Customer Proxy of any applicable penalty resulting from the use of those quantities.
B. Deliveries in Excess of Consumption
1.	If, in any billing month, the customer's consumption, plus retainage on the distribution system is less than the sum of: (a) the quantity of gas delivered to the Company's City Gate by the Shipper for the customer's account during the billing month, minus (b) if the Customer Proxy subscribes to Rider EBS-Option 1, increases in the Customer Proxy's positive bank as permitted under EBS-Option 1, plus (c) imbalance trading performed for the month, then such deliveries shall be considered imbalance gas purchased by the Company from the Customer Proxy.
2. For Customer Proxies electing Rider EBS-Option 1 or Rider EBS-Option 2, the index price of such imbalance gas shall be determined by selecting the lower of: (1) the average of the lowest City Gate price for deliveries for ten (10) consecutive days during the calendar month as published in Platt's Gas Daily "Daily Price Survey" under the heading Texas Eastern, M-3 or (2) the lowest commodity cost of purchases by the Company during the calendar month, including the delivered cost of purchases at the City Gate.
3. For Customer Proxies electing Rider EBS-Option 3, the index price of imbalance gas shall be the mid-point price as published in Platt's Gas Daily "Daily Price Survey" for the day under the heading Texas Eastern M-3.
4.	After the index price of gas is determined pursuant to the Banking and Balancing provisions of these Transportation Service Rules, it shall then be adjusted as follows to reflect the degree to which deliveries exceed consumption. The Company shall calculate the Customer Proxy's payment for imbalance gas by determining the quantities of imbalance gas purchased from the Customer Proxy in each of the following categories, multiplying the quantities purchased in each category by the corresponding adjustment factor.
	If the ratio of over-deliveries to consumption is between 0% and 5.00%, the Adjustment to Index Price shall be 90%. If the ratio of over-deliveries to consumption is between 5.01% and 10.00%, the Adjustment to Index Price shall be 85%. If the ratio of over-deliveries to consumption is between 10.01% and 15.00%, the Adjustment to Index Price shall be 75%. If the ratio of over-deliveries to consumption is 15.01% or more, the Adjustment to Index Price shall be 50%.
	During an SFO, the calculations in the Seasonal Flow Order provisions of these Transportation Service Rules shall replace the foregoing calculations.
5.	The Customer Proxy also shall be subject to any applicable penalty under the Operational Matching Order or Operational Flow Order provisions of the Transportation Service Rules in the event that such sale occurs during the existence of an OFO or OMO condition.
6.	The purchase of imbalance gas pursuant to this paragraph shall not relieve the Customer Proxy of any applicable penalty resulting from the delivery of those quantities.

14.11	Interruption 
A) Service may be interrupted when firm sales and firm transportation services are threatened.
B) During a gas emergency in any Local Market Area, the Company may request that any transportation customers in such Local Market Area allow the Company to use their customer-owned gas to supply higher priority end-usages.  Should the customer refuse to allow the use of its gas during emergencies and the ability of the Company to serve essential Human Needs is threatened, the Company may restrict delivery of customer-owned gas and utilize the gas to serve essential Human Needs when significant relief would be provided by the use of such gas, until such time as the supply threat to essential Human Needs has been resolved.  When it is necessary for the Company to restrict delivery of customer-owned gas, the Company will limit the customer's consumption to an authorized quantity.  If the customer's actual consumption of gas exceeds the authorized quantity, the customer will be subject to charges for unauthorized gas use pursuant to the Operational Flow Order and Operational Matching Order provisions of these Transportation Service Rules. The Company shall notify the Maryland Public Service Commission that it has restricted transportation gas deliveries under this provision without the customer's agreement.  
In the event of interruption of transportation service, pursuant to the above, and during such period of interruption, the customer or the customer's agent, may be required to sell to the Company all or a portion of the customer's supply of gas at the higher of (1) the customer's cost of gas at the point of delivery to the Company or (2) the Company's average weighted commodity cost of purchased gas per therm, as determined based upon the Company's current Purchased Gas Adjustment rate.  The cost at which the customer acquired the gas will be determined from the customer's contract with the Supplier.  The customer will be required to furnish a copy of the contract to the Company upon request.
C) The existence of a positive bank shall not prevent interruption of service to a transportation customer and draw-downs of positive banks may be prohibited whenever, in the Company's sole judgment, such prohibition is necessary to ensure that sufficient gas supplies are available to meet the daily or seasonal requirements of firm sales and firm transportation service customers.

14.12	Terms of Payment 
A) Gas delivered shall be billed in accordance with the terms and conditions set forth in the customer's executed service agreement governing transportation service.  Bills for transportation service will be rendered monthly and are due and payable upon presentation.  All bills shall be paid on or before the final date of payment shown on the bill, which date shall not be less than fifteen (15) days after presentation (date of postmark).
B) If the customer, or customer's agent, fails to pay the full amount of any bill which is Two Thousand Dollars ($2,000.00) or more, a delayed payment charge, as set forth in the Company's Statement of Currently Effective Rates, shall apply.  

14.13	Retainage 

	The Company may retain a reasonable allowance of the total quantity of gas delivered into its systems for the customer's account for gas which is lost or unaccounted for in its operations. The percentage retained is set forth in the Company's Statement of Currently Effective Rates.

 14.14	Quality of Gas 
	Gas delivered through an interstate pipeline to the Company, by or on behalf of the customer, shall conform to the interstate pipeline's FERC approved gas quality standards. Gas not delivered through an interstate pipeline must be of a certain quality as determined by the Company.  The Company and the customer, or its agent shall agree to the quantity, pressure, point and time of delivery, in advance.
15.	Reconnection of Service
	If service is discontinued at the request of the customer, the Company will not resume service to the customer at the same premises within twelve (12) months, unless it shall first receive payment of the applicable minimum charge for each month of the intervening period, but not to exceed twelve (12) months. 
16. Purchases and Sales of Gas
	Any sales of gas to, or purchases of gas from, a shipper pursuant to the Seasonal Flow Order, Operational Flow Order, Operational Matching Order, or Elective Balancing Service provisions of this Statement shall be deemed to take place within the State of Maryland, subject to the regulatory jurisdiction of the Maryland Public Service Commission.	

RATE TS - TRANSPORTATION SERVICE
APPLICABILITY 
      Throughout the territory served under this Statement. 
AVAILABILITY 
	Available to any commercial or industrial customer whose transportation requirements under separately billed account(s) are at least 20,920 therms annually; however, transportation service shall not be available to a commercial or industrial customer who provides residential-type service such as master-metered apartment buildings unless such customer agrees to contract for an appropriate level of Standby Service under Rate Schedule SS of this Statement for peak day demand, that is not protected by installed and operable alternate fuel facilities, which will enable the customer to continue to provide human needs services.   Service is available when such customer acquires its own gas and executes a contract with the Company for a period of not less than one (1) year for delivery service in accordance with all terms and conditions of such contract. 
CHARACTER OF SERVICE 
	Service furnished pursuant to this rate schedule shall be considered firm service on the Company's system; provided, however, that it is the customer's obligation to deliver sufficient gas supplies to the mutually agreed upon receipt point in the Company's facilities. 
	The rate billed to the customer will be determined based upon the customer's actual throughput quantities, including sales and distribution, measured in therms (thm), for the most recent twelve-month period ended with the customer's October billing cycle.  If a customer does not have sufficient consumption history to determine its rate based on twelve (12) months, the rate will be developed by annualizing the consumption history available.  In the instance where a customer has no consumption history, the Company will request the customer to submit estimated annual gas requirements, including sales and distribution, upon which to develop the rate.  The Company in all cases retains the right to review and modify the customer's estimate where necessary.  A customer's rate will remain constant annually, subject to change effective with the January billing cycle each year.
RATES
      The rates for this service are set forth in the Company's Statement of Currently Effective Rates.
MINIMUM CHARGE 

	1. For commercial customers the minimum charge shall be the System Charge.
	
	2. For industrial customers the minimum charge shall be the System Charge except that in the event of curtailment in the delivery of gas by the Company or complete or partial suspension of operation by the customer due to strikes, fires, floods, explosions or other similar casualties, the minimum charge shall be reduced in direct proportion to the ratio which the number of days of curtailed service or complete or partial suspension of operation bears to the number of days in the billing period provided, however, that the minimum charge will not be reduced whenever curtailment by the Company is the result of failure by supplier to deliver its contractual commitment to the Company because of the gas supply shortage.
TERMS OF PAYMENT
	The rates for Rate TS are net.  Bills for service will be rendered monthly and are due and payable upon presentation.  All bills shall be paid on or before the due date of payment shown on the bill, which date shall be not be less than fifteen (15) days after presentation.
	If the customer fails to pay the full amount of any bill which is Two Thousand Dollars ($2,000.00) or more, a delayed payment penalty charge, as set forth in the Company's Statement of Currently Effective Rates, shall apply.

IRIS - INFRASTRUCTURE REPLACEMENT AND IMPROVEMENT SURCHARGE
	Charges for service under Rate TS shall include the monthly Infrastructure Replacement and Improvement Surcharge. The surcharge is set forth in the Company's Statement of Currently Effective Rates.

VOLUMETRIC FRANCHISE TAX RIDER
PROVISIONS FOR ADJUSTMENT
	This provision shall be applicable to Rate TS - Transportation Service.  Base rates of applicable customer bills shall include a rider for the recovery of volumetric franchise tax imposed by the State of Maryland. The rate is set forth in the Company's Statement of Currently Effective Rates.
SPECIAL PROVISIONS
	An industrial customer may claim exemption from the volumetric franchise tax for gas used in a production activity in the State of Maryland.
RIDER EBS - ELECTIVE BALANCING SERVICES
APPLICABILITY
	Throughout the territory served under this Statement.
AVAILABILITY
      	This Rider has been established to provide balancing service options for Rate Schedules TS-Transportation Service customers in Maryland.
      In addition to the charges provided in the customer's rate schedule, an amount may be added to the otherwise applicable charge for each therm of distribution volumes distributed by the Company to a customer receiving service under Rate TS or successor rate schedules, for EBS service as provided below.  Rider EBS contains three options for balancing service as described below. 
SERVICE OPTIONS:	

Option 1:	FULL BALANCING SERVICE

	Full Balancing Service provides the Customer Proxy with the opportunity to: (1) maintain a bank from month to month on the Company's system; (2) access banked gas on a firm basis pursuant to the Seasonal Flow Order, Operational Flow Order, and Operational Matching Order provisions of the Transportation Service Rules ("TSR") provisions of this Statement on any day, including days in which an SFO, OFO, or OMO restricts TS under-deliveries, up to five percent (5%) of the customer's then current maximum daily quantity ("MDQ"), and, to the extent made available by the Company on a best efforts basis, additional interruptible access to the Customer Proxy's bank and (3) to add to the bank on any day, including days in which an SFO, OFO, or OMO restricts TS over-deliveries.  Deliveries to the Company on days in which an SFO, OFO or OMO restricts over-deliveries shall not exceed one hundred two and one-half percent (102.5%) of the maximum prescribed SFO, OFO, or OMO Level unless authorized by the Company. 

Option 1:	BANK TOLERANCE
The cumulative balance of excess deliveries ("positive bank"), at the end of any billing month, shall not exceed the following specified Bank Tolerance Percentages:
For any customer qualifying for service under Rate TS - 
five percent (5%) of the customer's then current annual quantities.
      
       Option 1:     RATES 			RATES
	The Company will calculate the rates for EBS-Option 1 on an annual basis.  The Company shall calculate the rates after Customer Proxies have elected their service options and after the Company has secured the assets that are required to provide the service.  The Company shall file the rates with the Maryland Public Service Commission to take effect on April 1 of each year upon one (1) day's notice.  The maximum rates for service are set forth in the Company's Statement of Currently Effective Rates. 	
	The Company may reduce or eliminate the otherwise applicable charge for Rider EBS-Option 1 to any customer if it is reasonably necessary to do so to meet competition from an alternative fuel, including gas from another supplier of gas that has constructed, or could construct, facilities to deliver gas to the customer without use of the Company's facilities.  The Company will notify the Customer Proxy of the applicable rate if lower than the applicable rate set forth above, at least four (4) days prior to the beginning of each billing month, unless the rate is the same as charged by the Company in the prior month.  

	The rates identified in this section billed and collected pursuant to Option 1 shall not be credited toward recovery of purchased gas costs pursuant to the Company's Purchased Gas Cost Rider.

	Option 1:	ELECTING SERVICE 								
	Option 1 is the default service option under Rider EBS.  Any customer whose Customer Proxy has not elected to take service under one of the other options shall automatically take service under Option 1.  A Customer Proxy for an existing Rate TS customer may elect to change its service option no more than one time per year. An estimate of the rates shall be posted on the Company's internet-based website on August 1 of each year.  All requests to change the service option must be submitted to the Company in writing (e.g. fax, e-mail, the Company's internet-based website) by the Customer Proxy no later than the fifteenth of August prior to the April in which the elected option becomes effective. The EBS-Option 1 final rate will be posted on the Company's internet-based website on September 1.  If the September 1 final rate exceeds the August 1 estimated rate by more than twenty percent (20%), Customer Proxies who have elected EBS-Option 1 may change their election by submitting a change to the Company in writing (e.g. fax, e-mail, the Company's internet-based website) no later than the fifteenth of September. The elected option shall remain in effect for the one (1) year period commencing April 1 of the following calendar year.  The Customer Proxy for a new Rate TS customer shall elect the customer's service option at the time the customer's Transportation Service Application and Agreement is executed; however, if the Customer Proxy executes the customer's Transportation Service Application and Agreement after August 15, the Company is under no obligation to provide service to the customer under Option 1 until April of the next following year if the Company does not have adequate storage and capacity assets to provide the service.  If the Company cannot serve the new Rate TS customer under Option 1 until April of the next following year, the company will serve the customer under Option 2 during the interim.   

	The Company's obligation to provide service under Option 1 is conditioned upon its ability to secure the assets necessary to provide the service.  If sufficient assets are not available to provide Option 1 service, customers will default to Option 2.


	Option 1:	CHARACTER OF SERVICE

 Normal Operations										
      In any billing month under Normal Operations (defined as operations during times when neither an SFO, OFO nor an OMO is in effect), if the customer's consumption plus retainage on the distribution system is greater than the sum of: (a) the quantity of gas delivered to the Company's City Gate by the Shipper for the Customer Proxy's account during the billing month, plus (b) the Customer Proxy's positive bank at the beginning of the month, such use shall be considered imbalance gas sold by the Company to the Customer Proxy under the Banking and Balancing provisions of this Statement. 
	If in any billing month under Normal Operations, the customer's consumption plus retainage on the distribution system is less than the quantity of gas delivered into the Company's system on its behalf, the customer may use such excess delivered gas to meet requirements in any succeeding billing month, subject to the Company's rights to limit service as provided in the Transportation Service Rules. Provided, however, that the cumulative balance of excess deliveries ("positive bank"), at the end of any billing month, shall not exceed the Bank Tolerance Percentage.  Any positive bank in excess of this tolerance level shall be considered imbalance gas purchased by the Company from the Customer Proxy under the Banking and Balancing provisions of the Transportation Service Rules of this Statement.
      During SFOs/OFOs/OMOs		
		During periods when there is an SFO, OFO or OMO that restricts STS or TS under-deliveries, EBS Option 1 Customer Proxies will have firm daily access to banks equal to five percent (5%) of the customer's maximum daily quantity. Additional interruptible access to bank capacity will be available on a best-efforts basis.    Should a Shipper on any SFO, OFO, or OMO day under-deliver gas supplies to the Company by a quantity greater than 5% of the customer's MDV and any interruptible access to the bank permitted through the SFO, OFO or OMO notice, such quantities shall be charged to the Customer Proxy in accordance with the Banking and Balancing provisions, the Seasonal Flow Order provisions, the Operational Flow Order provisions and/or the Operational Matching Order provisions of this Statement as is appropriate to the circumstance.   If on any day, the Customer Proxy's bank is not adequate to support any part or all of the bank access made available by the Company and the resulting bank availability combined with other confirmed deliveries by the Shipper is less than the daily delivery requirement under the SFO, OFO, or OMO, the Customer Proxy will be charged for any delivery deficiency in accordance with the Seasonal Flow Order provisions for an SFO, or the Operational Flow Order provisions, the Operational Matching Order provisions and the Banking and Balancing provisions for an OFO/OMO.  At the end of any month in which there has been an SFO, OFO, or OMO that restricts STS or TS under-deliveries, authorized bank withdrawals used to help meet the daily delivery requirements of an OFO or OMO will be deemed to be the first gas withdrawn from the bank, followed by authorized bank withdrawals used to help meet the daily delivery requirements of an SFO during the month.  Any remaining available bank quantities will be applied to days of Normal Operations.  Authorized bank withdrawals herein are considered to be the firm access provided under EBS Option 1 plus any interruptible access provided by the Company subject to the Customer Proxy(ies) having sufficient quantities in its (their) bank to support the access permitted by the Company.
	During periods when there is an SFO, OFO, or OMO restriction of STS or TS over-deliveries, Shippers will be entitled to deliver to the Company up to one hundred two and one-half percent (102.5%) of the Company's maximum prescribed daily SFO, OFO or OMO quantity. However, should daily deliveries exceed one hundred two and one-half percent (102.5%) of the customer's maximum daily prescribed SFO, OFO, or OMO quantity, or if the cumulative excess deliveries exceed the bank tolerances described above, those excess daily deliveries shall be considered imbalance gas purchased by the company pursuant to the Banking and Balancing provisions, or the Seasonal Flow Order provisions and the Customer Proxy shall be charged in accordance with the provisions for  Seasonal Flow Orders, Operational Flow Orders or Operational Matching Orders included in this Statement. 

	Option 1:	IMBALANCE TRADING SERVICES

	During Normal Operations, Customer Proxies who subscribe to Rider EBS-Option 1 may transfer a bank balance that existed at the beginning of the month to another Customer Proxy that has also subscribed to Rider EBS-Option 1 and that also schedules deliveries to the Company's city-gates within the same Upstream Pipeline Scheduling Point.  No pre-arranged contract is required. The Customer Proxy must submit all requests for Imbalance Trading to the Company in writing (e.g. fax, e-mail, the Company's internet-based website) no later than the first business day  following the last business day of the calendar month in which the trade is to apply.  A fee of $0.007  for each therm transferred between the Upstream Pipeline Scheduling Points shall be charged to the Customer Proxy transferring the bank balance. A fee of $0.007 per therm, with a cap of Five Hundred Dollars ($500) per trade, for transfers within an Upstream Pipeline Scheduling Point shall be charged to the Customer Proxy transferring the bank balance.  EBS-Option 1 Customer Proxies who successfully transfer bank balances to eliminate an imbalance will not be subject to the Banking and Balancing provisions of this Statement. 
	During any month in which an SFO, OFO, or OMO was in effect, Customer Proxies who subscribe to Rider EBS-Option 1 may transfer a bank balance that existed at the beginning of the month to another Customer Proxy located in the same Upstream Pipeline Scheduling Point that has also subscribed to Rider EBS-Option 1 and that schedules deliveries to the Company's city-gates on the same transmission company.  Provided, however, that bank balance transfers will apply to the SFO, OFO, or OMO period only up to the level of daily access to banked quantities authorized by the OFO, OMO, or SFO.  No pre-arranged contract is required.  The Customer Proxy must submit all requests for Imbalance Trading to the Company in writing (e.g. fax, e-mail, the Company's internet-based website) no later than the first business day following the last business day of the calendar month in which the trade is to apply. A fee of $0.007 per therm, with a cap of Five Hundred Dollars ($500) per trade, for transfers within an Upstream Pipeline Scheduling Point shall be charged to the Customer Proxy transferring the bank balance. EBS -Option 1 Customer Proxies who successfully transfer bank balances to eliminate an imbalance will not be subject to the Seasonal Flow Order, the Operational Flow Order or the Operational Matching Order provisions of this Statement as long as the imbalance trade brings the Customer Proxy into compliance with the SFO, OFO, or OMO.
      The imbalance trading services set forth in this Rider do not relieve Shippers of their obligation to deliver gas to the Company in the Upstream Pipeline Scheduling Point in which they or their customers reside.
       Option 1:	TERMINATION OF SERVICE
      Customer Proxies may terminate service under Option 1 only by electing another option in accordance with the provisions set forth in this Rider or by terminating Rate TS service. A Customer Proxy whose customer is terminating Rate TS service may be charged a termination fee if the Customer Proxy fails to provide termination notice prior to the fifteenth of September prior to the April in which the service is to be terminated.
	Such termination fee shall be based upon the cost of the assets secured by the Company to provide service to the customer.  Upon termination of service under Option 1, the Company will make every effort to deliver to the Customer Proxy the Customer Proxy's banked gas during the next month's billing cycle following the date of termination.  However, should the Customer Proxy fail to take delivery of its entire banked quantity within the next month, Company may, at its option, retain and purchase the undelivered banked quantity at ninety percent (90%) of the index rate determined pursuant to the Banking and Balancing provisions of this Statement.  In addition, if the Customer Proxy owes the Company any outstanding charges, the Company may retain as an offset to such outstanding charges, banked quantities that would otherwise be delivered to the Customer Proxy upon termination of TS service.  The value assigned to such retained bank quantities, which are purchased or retained, will be ninety percent (90%) of the index rate determined pursuant to the Consumption in Excess of Deliveries of the Banking and Balancing provisions included in this Statement for the month in which the Customer Proxy failed to take delivery of the gas. 
   	Option 2:	MONTHLY CASH OUT (INTRA-MONTH BALANCING SERVICE)	
	Intra-Month Balancing Service provides Shippers with: (1) the opportunity to maintain a bank from day to day within a month on the Company's system; (2) limited or no use of the bank during issuance of an SFO, OFO or OMO pursuant to the Seasonal Flow Orders, Operational Flow Orders and Operational Matching Orders provisions included in this Statement; and (3) a monthly cash-out of any banked gas existing at the end of the month. 
	
   	Option 2:	RATES
      
      	The maximum rates for Intra-Month Balancing Service (EBS-Option 2) are set forth in the	
Company's Statement of Currently Effective Rates:
		Any amounts billed and collected pursuant to Option 2 shall be credited toward recovery of purchased gas costs pursuant to the Purchased Gas Adjustment Clause.  The Company may reduce or eliminate the otherwise applicable charge to any customer if it is reasonably necessary to do so to meet competition from an alternative fuel, including gas from another supplier of gas that has constructed, or could construct, facilities to deliver gas to the customer without use of the Company's facilities.  The Company will notify the Customer Proxy of the applicable rate if lower than the applicable rate set forth above, four (4) days prior to the beginning of each billing month, unless the rate is the same as charged by the Company in the prior month.  Such reduction or elimination of the charge shall be the first charge flexed before any reduction is made to the other charges under this Statement.

	Option 2:     ELECTING SERVICE 							

	Option 2 must be elected by the Customer Proxy in writing (e.g. fax, e-mail, the Company's internet-based website).  A Customer Proxy may elect to change its service option no more than one time per year.  All requests to change the service option must be submitted to the Company in writing (e.g. fax, e-mail, the Company's internet-based website) no later than the fifteenth of August prior to the April in which the elected option becomes effective. The elected option shall remain in effect from April 1 through March 31 of the following calendar year. 
	Option 2:	     CHARACTER OF SERVICE						
Normal Operations
	In any billing month under Normal Operations, if the customer uses more gas than the quantity of gas, after adjustments for retainage, delivered to the Company's City Gate by the Shipper for the Customer Proxy's account during the billing month, such use shall be considered imbalance gas sold by the Company to the Customer Proxy as specified in the Banking and Balancing provisions included in this Statement.
	If in any billing month, under normal operations, the customer consumes less gas than the quantity of gas delivered to the Company's City Gate by the Shipper, such use shall be considered imbalance gas purchased by the Company from the Customer Proxy under the provisions of the Banking and Balancing provisions included in this Statement.
During SFO												
       If the Shipper under-delivers during an SFO that restricts under-deliveries, the Customer Proxy will be charged for under-deliveries in accordance with the Seasonal Flow Order provisions included in this Statement.  If the Shipper over-delivers during an SFO that restricts over-deliveries, the over-deliveries shall be considered imbalance gas purchased by the Company from the Customer Proxy pursuant to the Seasonal Flow Order provisions included in this Statement. The Customer Proxy shall have access to any positive intra-month bank only to the extent specified by the Company in an SFO. 
During OFO/OMO										
	If the Shipper under-delivers during an OFO or OMO that restricts under-deliveries, the Customer Proxy will be charged for under-deliveries in accordance with the Banking and Balancing provisions included in this Statement, and either the Operational Flow Order or Operational Matching Order provisions of this Statement. If the Shipper over-delivers during an OFO or OMO that restricts over-deliveries, the over-deliveries shall be considered imbalance gas purchased by the Company from the Customer Proxy pursuant to the Banking and Balancing provisions of this Statement and the Customer Proxy shall be charged in accordance with either the Operational Flow Order or Operational Matching Order provisions of this Statement. On a best efforts basis, the Company may offer the Customer Proxy daily access to any positive intra-month bank only to the extent specified by the Company in an OFO or OMO.  Such best-efforts access shall not be subject to charges under either the Operational Flow Orders or Operational Matching Orders provisions of this Statement nor shall it alter the Customer Proxy's obligation to be in balance at the end of the billing month in accordance with the provisions of EBS Option-2.
	Option 2:	TERMINATION OF SERVICE						
	Customer Proxies may terminate service under Option 2 only by electing another option as described in this Rider or by terminating Rate TS service.  Upon termination of service under Option 2, the Company will calculate imbalance gas sold or purchased by the Company to or from the Customer Proxy as described in the "Normal Operations" paragraph above. However, if the Customer Proxy owes the Company any outstanding charges, the Company may retain as an offset to such outstanding charges, banked gas or over-deliveries that would otherwise be delivered to the Customer Proxy upon termination of service.  The value assigned to such retained bank of gas or over-deliveries, which are purchased, will be ninety percent (90%) of the index rate determined pursuant to the Banking and Balancing provisions of this Statement. 
	Option 3:	CASH OUT
	The Cash-Out option provides Customer Proxies with a no cost method of avoiding balancing charges by cashing-out on a daily basis.  In order to elect the Cash-Out option, the customer must have installed daily measurement with telemetry consistent with the Company's specifications.  
	Option 3:	RATES				
	The Cash-Out option is provided at no charge to the Customer Proxy. No banking or balancing fees shall be assessed to the Customer Proxy under Option 3.
	Option 3:	ELECTING SERVICE 

	Option 3 must be elected by the Customer Proxy in writing (e.g. fax, e-mail, the Company's internet-based website).  Customer Proxies may elect to change their service option no more than one time per year.  All requests to change the service option must be submitted to the Company in writing (e.g. fax, e-mail, the Company's internet-based website) no later than the fifteenth of August prior to the April in which the elected option becomes effective. The elected option shall remain in effect from April 1 through March 31 of the following calendar year.

	Option 3:	CHARACTER OF SERVICE

	Normal Operations

	If on any day in a billing month, under Normal Operations, if the customer uses more gas than the quantity of gas, after adjustment for retainage, delivered to the Company's City Gate by the Shipper for the Customer Proxy's account during any day, such use shall be considered imbalance gas sold by the Company to the Customer Proxy under the Consumption in Excess of Deliveries of the Banking and Balancing provisions of this Statement.

	If on any day in any billing month, under normal operations, the customer consumes less gas than the quantity of gas delivered to the Company's City Gate by the Shipper, such use shall be considered imbalance gas purchased by the Company from the Customer Proxy under the Deliveries in Excess of Consumption of the Banking and Balancing provisions of this Statement.

	During SFO

	If the Shipper under-delivers during an SFO that restricts under-deliveries, the Customer Proxy will be charged for under-deliveries in accordance with the Seasonal Flow Order provisions of this Statement.  If the Shipper over-delivers during an SFO that restricts over-deliveries, the over-deliveries shall be considered imbalance gas purchased by the Company pursuant to the Seasonal Flow Order provisions of this Statement.
 
	During OMO
	If the Shipper under-delivers during an OMO that restricts under-deliveries, the Customer Proxy will be charged for under-deliveries in accordance with the Operational Matching Orders provisions and the Banking and Balancing provisions of this Statement.  If the Shipper over-delivers during an OMO that restricts over-delivers during an OMO that restricts over-deliveries, the over-deliveries shall be considered imbalance gas purchased by the Company from the Customer Proxy pursuant to the Banking and Balancing provisions of this Statement and the Customer Proxy shall be charged in accordance with the Operational Matching Order provisions of this Statement.
	Option 3:	TERMINATION OF SERVICE
	Customer Proxies may terminate service under Option 3 by selecting another option as described in this Rider or by terminating Rate TS service.  Upon termination of service under Option 3, the Company will calculate imbalance gas sold or the price of gas to be purchased by the Company to or from the Customer Proxy as described above.  However, if the Customer Proxy owes the company any outstanding charges, the Company may retain as an offset to such outstanding charges any over-deliveries.  The value assigned to such over-deliveries which are purchased will be ninety percent (90%) of the index rate determined pursuant to the Banking and Balancing provisions of this Statement.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>40</filing_id>
      <filing_title>CMD SOC effective 10-27-2016 Amendment</filing_title>
      <filing_type>1000</filing_type>
      <associated_filing_id>37</associated_filing_id>
      <associated_record_id>1</associated_record_id>
      <associated_option_code>A</associated_option_code>
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2016-10-27</current_effective_date>
      <ferc_order_date>2017-01-10</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
    <record_data>
      <record_id>35</record_id>
      <option_code>A</option_code>
      <record_title>CMD Rates</record_title>
      <record_content_desc>Tariff</record_content_desc>
      <record_version_num>27.0.0</record_version_num>
      <record_narrative_name>CMD Rates effective April 22 2025</record_narrative_name>
      <collation_value>268435456</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2025-04-22</proposed_effective_date>
      <priority_order>1000000000</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>STATEMENT OF OPERATING CONDITIONS
STATEMENT OF CURRENTLY-EFFECTIVE RATES
FOR NGPA SECTION 311 TRANSPORTATION SERVICES
Of
COLUMBIA GAS OF MARYLAND, INC.

Filed with the
FEDERAL ENERGY REGULATORY COMMISSION

Communications covering SOC should be addressed to:
M. Bryan Little 
Assistant General Counsel
NiSource Corporate Services 
150 West Market Street, Ste. 600 
Indianapolis, IN 46204 
Telephone: 317-242-8236

E-mail blittle@nisource.com


ETariff Information
a.	Tariff Submitter: Columbia Gas of Maryland, Inc.
b. 	FERC Tariff Program Name: FERC NGPA Gas Tariff
c.  	Tariff Title: Columbia Gas of Maryland, Inc. Statement of Operating Conditions – Statement of Currently-Effective Rates
d.  	Tariff Record Proposed Effective Date:  April 22, 2025
e.  	Tariff Record Title: Columbia Gas of Maryland, Inc. Statement of Operating Conditions
f.  	Option Code: A
g.  	Other Information: Petition for approval of Revised Statement of Operating Conditions (Docket No. PR13-62).



COLUMBIA GAS OF MARYLAND, INC.
STATEMENT OF CURRENTLY EFFECTIVE RATES
The following is a statement of Company’s currently effective maximum rates for transportation service on Company’s pipeline system under Section 311 of the Natural Gas Policy Act of 1978:
						
Rate TS – Transportation Service
 System Charge 
	Annual consumption &lt;= 523,000 Therms 
	per month					$   221.00 per month

	Annual consumption &gt; 523,000 Therms
	per month 					$ 1,138.00 per month
		
Volumetric Charges		Distribution Charge	Volumetric		Total
							Franchise Tax
							Rider
Annual consumption 
&lt;= 523,000 Therms per month		$ 0.47855 per Therm	$ 0.00402 per Therm	$ 0.48257 per Therm

Annual consumption
 &gt;523,000 Therms per month		$ 0.30144 per Therm	$ 0.00402 per Therm	$ 0.30546 per Therm



IRIS – Infrastructure Replacement and Improvement Surcharge

	Usage						Fixed Surcharge per Month

	&lt;20,920 therms/yr						$          5.89
	&gt;20,920 and &lt;523,000 therms/yr				$        59.87
	&gt;523,000	 therms/yr						$       576.76 
				
Rider BBS – Banking Balancing Service
$0.00956 per Therm	
Retainage
	One (1) percent

Penalty for Failure to Curtail
	$.9.56 per Therm
Penalty for Failure to Comply with Seasonal Flow Order (SFO)
	Ratio of under-deliveries to consumption between 0 and 10.00%:	125% of Index* Price for under-deliveries
	Ratio of under-deliveries to consumption of 10.01% or more:		150% of Index* Price for under-deliveries
	Ratio of over-deliveries to consumption between 0 and 10%:		75% of Index* Price for over-deliveries
	Ratio of over-deliveries to consumption of 10.01% or more:		50% of Index* Price for over-deliveries
	In addition, shipper must pay all charges resulting from its failure to comply with seasonal flow order, including proportionate share of pipeline penalties incurred by Company as a result of such failure.
Failure to Comply with Operational Flow Order (OFO)
When a difference between the Daily OFO Level and actual daily OFO compliance quantities to the Company exists, the following charges will be assessed to the Customer Proxy:
1.	A rate equal to one and one-half (1 ½) times the highest of the midpoint prices reflected in Platts Gas Daily for the day of the OFO non-compliance and based on pipeline scheduling point applicable indices as specified in the Platts “Gas Daily”, Daily Price Survey – Design by Pipeline Scheduling Point as set forth in the table below.
The charge will be multiplied by the therm difference, except however, the charge will not be assessed if the difference results from the Shipper delivering more than the Daily OFO Level during an OFO that restricts under-deliveries, or from the Shipper delivering less than the Daily OFO Level during an OFO that restricts over-deliveries; and
2.	The payment of all other charges incurred by the Company on the date of the OFO that results from the Shipper’s failure to comply with the OFO, including a proportionate share of any pipeline penalties that are incurred by the Company.
3.	In the event midpoint prices referenced in subparagraph (1) above, are not published in Platts Gas Daily for the day of the OFO non-compliance, the highest price paid by the Company on that day shall be used as the index price.
4.	The Company shall update the applicable indices on 60 days’ notice to Customer Proxies in the event of a change in applicable indices. Applicable indices are subject to change based upon changes in market circumstances. 
Platts “Gas Daily”, Daily Price Survey – Designation by Pipeline Scheduling Point
The table below will be used to identify specific price indices for each pipeline scheduling point, the higher of which will be used as the starting point for calculating charges for non-compliance with Operational Flow Orders and/or Operational Matching Orders. The physical location of the customer’s service address will determine the pipeline scheduling point used in calculating the non-compliance charge(s),
Platts “Gas Daily”, Daily Price Survey
Pipeline Scheduling Point
Columbia Gas, App.
Texas Eastern
M-3
19E – Lancaster 
X
X
19-26 – Bedford 
X

19-27 – Cumberland 
X

19-32 – Elkins
X



Failure to Comply with Operational Matching Order (OMO)
When a difference exists between the Daily OMO Level and actual daily OMO compliance quantities, the following charges will be assessed to the Customer Proxy: 
1.	A rate equal to one and one-half (1 ½) times the highest of the midpoint prices reflected in Platts Gas Daily for the day of the OMO non-compliance and based on pipeline scheduling point applicable indices as specified in the Platts “Gas Daily”, Daily Price Survey – Designation by Pipeline Scheduling Point in the table above.
The charge will be multiplied by the therm difference, except however, the charge will not be assessed if the difference results from the Shipper delivering more than the Daily OMO Level during an OMO that restricts under-deliveries, or from the Shipper delivering less than the Daily OMO Level during an OMO that restricts over-deliveries; and,
2.	The payment of all other charges incurred by the Company on the date of the OMO that results from the Shipper’s failure to comply with the OMO, including a proportionate share of any pipeline penalties that are incurred by the Company.
3.	In the event midpoint prices referenced in subparagraph (1) above, are not published in the Platts Daily Gas for the day of the OMO non-compliance, the highest price paid by the Company on that day shall be used as the index price.
4.	The Company shall update the applicable indices on 60 days’ notice to Customer Proxies in the event of a change in applicable indices. Applicable indices are subject to change based upon changes in market circumstances. 
Reconnection Charge
	$48.00
Bank Transfers (Imbalance Trades)
	Between Upstream Pipeline Scheduling Points 		$.007 per Therm
	Within Upstream Pipeline Scheduling Points		$.007 per Therm ($500 maximum)
Late Payment Charge
If the customer, or customer's agent, fails to pay the full amount of any bill which is Two Thousand Dollars ($2,000.00) or more, a delayed payment charge of one and one-quarter percent (1 ¼%) per month shall accrue on the unpaid portion of such bill from the due date to the date of payment, up to a maximum of five percent (5%).

* The term “index” is defined in Section 14.10 of this Statement.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>76</filing_id>
      <filing_title>CMD Rates effective 4-22-2025</filing_title>
      <filing_type>980</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2025-04-22</current_effective_date>
      <ferc_order_date>2025-07-25</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
  </ferc_filing_data>
</Document>