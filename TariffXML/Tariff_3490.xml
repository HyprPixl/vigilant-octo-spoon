<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Document xmlns="http://ferc.gov/etariffExport.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ferc_filing_data>
    <schema_version>2</schema_version>
    <company_id>C003416</company_id>
    <lead_applicant_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
    <tariff_id>1</tariff_id>
    <tariff_title>Statement of Operating Conditions</tariff_title>
    <tariff_export_date>2025-09-16T19:57Z</tariff_export_date>
    <export_schema_version>2</export_schema_version>
    <record_data>
      <record_id>2</record_id>
      <option_code>A</option_code>
      <record_title>Rates</record_title>
      <record_content_desc>Section 20</record_content_desc>
      <record_version_num>1.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>83886080</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2014-01-31</proposed_effective_date>
      <priority_order>1000000000</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>SECTION 20
STATEMENT OF CURRENTLY EFFECTIVE RATES

20.1 Unless discounted on a nondiscriminatory basis as provided in a Shipper's Service Agreement, the rates for service under this Operating Statement are:



Monthly Reservation Charge ($/dth) 1/

Usage Charge ($/dth) 1/

Firm Transportation
$14.97
$0.000

Interruptible Transportation
$0.000

$0.4638

Park and Loan

Authorized Overrun
$0.000

$0.000

$0.4638

$0.4638

Unauthorized Overrun
$0.000
$10.00 2/  

Transporter may on a nondiscriminatory basis also retain from Shipper a quantity of gas for incremental fuel use and gas lost and unaccounted for related to transportation of Shipper's gas, not to exceed 3.4%, the maximum transportation retainage rate contained in Transporter's Tariff.

Notes:

1/	Rates are the maximum allowable rates.  Transporter reserves the right to discount the maximum rates to zero.   


2/	Plus the highest price reported for Dominion South Point during the applicable Month as reported by Gas Daily or, in the event that Gas Daily discontinues its reporting of such prices, any comparable reporting service, for all Gas taken by Shipper in excess of the MDQ and/or ACQ and authorized overrun quantities, as applicable






1</record_plain_text>
      <record_change_type>NEW</record_change_type>
      <filing_id>2</filing_id>
      <filing_title>Rate Change</filing_title>
      <filing_type>1300</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2014-01-31</current_effective_date>
      <ferc_order_date>2014-04-01</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
    <record_data>
      <record_id>1</record_id>
      <option_code>A</option_code>
      <record_title>Statement of Operating Conditions</record_title>
      <record_content_desc>Sections 1 -19</record_content_desc>
      <record_version_num>2.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>8388608</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2014-01-31</proposed_effective_date>
      <priority_order>1000000000</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>PEOPLES TWP LLC

STATEMENT OF OPERATING CONDITIONS

SECTION 1
DEFINITIONS

1.1 "Annual Contract Quantity" or "ACQ" shall mean the maximum quantity of Natural Gas Shipper is entitled to nominate for Transportation and that Transporter is obligated to Transport for Shipper, subject to the terms and conditions of this Statement of Operating Conditions (sometimes hereinafter referred to as "Operating Statement"), during a term consisting of the lesser of the contract term or one year.

1.2 "Authorized Overrun Service" shall mean a quantity of Gas that is in excess of a Shipper's applicable ACQ or MDQ that Transporter agrees, pursuant to Section 6, to schedule on any Day.

1.3 "Btu" shall mean British thermal unit, which refers to the quantity of heat that must be added to one pound avoirdupois of pure water to raise its temperature from 58.5 degrees Fahrenheit to 59.5 degrees Fahrenheit under standard pressure. 

1.4 "Business Day" shall mean Monday through Friday from 8:00 A.M. to 5:00 P.M. Eastern Clock Time excluding Federal Banking Holidays.

1.5 "Commission" shall mean the Federal Energy Regulatory Commission or any successor to that agency.

1.6 "Day" or "Gas Day" shall mean a period of twenty-four (24) consecutive hours beginning and ending at 10:00 A.M. Eastern Clock Time. The reference date for any Day shall be the date of the beginning of such Day.

1.7 "Dekatherm" (or "Dth") shall mean the quantity of heat energy which is equivalent to one (1) million (1,000,000) Btu.  

1.8 "Delivery Point" shall mean the point or points specified in Shipper's Service Agreement where Transporter shall tender Gas to Shipper.  

1.9  "Eastern Clock Time" or "ECT" shall mean Eastern Standard Time ("EST") except when Daylight Savings Time is in effect, when it shall mean one hour in advance of EST. All times referenced in this Operating Statement shall be in ECT. 

1.10 "Electronic Bulletin Board" or "EBB" shall mean Transporter's electronic communications system.

1.11 "Equivalent Quantities" shall mean the thermally equivalent quantity of Gas received from Shipper or for the account of Shipper, at the Receipt Point(s), less the quantity of Gas withheld by Transporter for Fuel Use and Gas Lost and Unaccounted For.

1.12 "Fuel Use and Gas Lost and Unaccounted For" means the quantity of gas in Dth of compressor station fuel usage, heater fuel usage, incidental fuel usage, measurement losses and other lost and unaccounted for gas.

1.13  "Gas" or "Natural Gas" shall mean any mixture of hydrocarbons or of hydrocarbons and non-combustible gases, in a gaseous state, consisting essentially of methane.

1.14 "Loaning," "Loan" or "Loaned" shall mean the component of Park and Loan Service under which Transporter delivers Gas to Shipper, as nominated by Shipper, pursuant to a Park and Loan Service Agreement, as described in Section 4, in such a manner as to result in a positive loan balance, subject to subsequent repayment of such Loaned quantities of Gas by Shipper in accordance with Shipper's Service Agreement.

1.15 "Maximum Daily Quantity" or "MDQ" shall mean the maximum quantity of Gas that Shipper is entitled to nominate for Transportation and that Transporter is obligated to receive from the Shipper at the Receipt Point(s) for Transportation, exclusive of Fuel Use and Gas Lost and Unaccounted For Gas quantities, or that Transporter is obligated to deliver for the Shipper at the Delivery Point(s) during a Day, subject to the terms and conditions of this Operating Statement.

1.16 "Mcf" shall mean one thousand cubic feet of Gas.

1.17 "MMBtu" shall mean one million Btu.

1.18 "Month" shall mean the period beginning at 10:00 a.m. Eastern Clock Time on the first Day of the calendar Month and ending at 10:00 a.m. Eastern Clock Time on the first Day of the next succeeding calendar Month.

1.19 "Nominate," "Nominating" or "Nomination" shall mean Shipper's request to schedule Gas for receipt or delivery pursuant to Section 6 of this Operating Statement. 

1.20 "PaPUC" shall mean the Pennsylvania Public Utility Commission or any successor to that agency.

1.21 "Parking," "Park" or "Parked" shall mean the component of Park and Loan Service under which Transporter receives Gas from Shipper, as nominated by Shipper, pursuant to a Park and Loan Service Agreement, as described in Section 4, in such a manner as to result in a positive park account balance, subject to subsequent redelivery of such Parked quantities of Gas by Transporter to Shipper in accordance with Shipper's Service Agreement.

1.22 "Park and Loan" shall mean the service provided pursuant to Section 4. 

1.23 "Person" shall mean an individual, partnership, corporation, business trust, joint stock company, limited liability company, trust, unincorporated association, joint venture, governmental authority or other entity of whatever nature.

1.24 "Receipt Point" shall mean the designated point or points specified in Shipper's Service Agreement where Transporter shall receive Gas from Shipper.  Firm services may include any Receipt Point as a Primary Receipt Point or a Secondary Receipt Point. Shipper's rights to utilize Receipt Points, including Primary and/or Secondary Receipt Point rights applicable to firm service shall be specified in Shipper's Service Agreement.

1.25 "Scheduled Daily Quantity" shall mean the quantity of Gas nominated by Shipper and confirmed by Transporter for flow in accordance with Section 6.

1.26 "Service Agreement" shall mean the agreement by and between Transporter and Shipper to enter into Firm Transportation, Interruptible Transportation, or Park and Loan transactions pursuant to, and in accordance with, this Operating Statement, including any exhibits thereto.  Each Service Agreement shall incorporate this Operating Statement and applicable Commission rules and regulations by reference.

1.27 "Shipper" shall mean any eligible Person who contracts for any of the Services offered by Transporter pursuant to this Operating Statement.

1.28 "Summer" shall mean the period from April 1 of each calendar year through October 31 of such year.

1.29 "Supply Aggregator" shall mean a Shipper who delivers Gas to Transporter at more than one Receipt Point for aggregation into a single supply pool for delivery to a Delivery Point. 

1.30 "Tariff" shall mean Transporter's Rules, Regulations, and Rate Schedules on file with and approved by the PaPUC.

1.31 "Taxes" shall mean any tax (other than ad valorem, unless levied on a transaction under this Operating Statement, income or excess profits), license, fee or charge that is levied, assessed, or made by any governmental authority on the Gas itself or on the act, right, or privilege of producing, severing, gathering, storing, transporting, handling, selling, or delivering Gas under this Operating Statement.  "Taxes" shall not include any tax that is included in the costs of service used to derive the maximum rates approved by the PaPUC which are incorporated into this Operating Statement.

1.32 "Transportation" shall mean Transporter's receipt of Gas from Shipper at a Receipt Point, and Transporter's delivery of an Equivalent Quantity of Gas to Shipper at a Delivery Point on a coincidental time basis.

1.33 "Transportation Retainage Rate" shall mean a quantity of Gas retained by Transporter in accordance with this Operating Statement.  The Transportation Retainage Rate is stated as a percentage of the natural gas delivered by Shipper at the Shipper's Receipt Point(s).  The quantity of Gas retained by Transporter for Transportation services shall be calculated using the retention percentage stated in Transporter's Statement of Operating Conditions, unless otherwise provided in a Shipper's Service Agreement. 

1.34 "Transporter" shall mean Peoples TWP LLC or its successor and permitted assigns.

1.35 "Transporter's System" or "System" shall mean Transporter's local distribution system, storage fields, transmission pipeline and other facilities owned and operated by Transporter and subject to regulation by the PaPUC.

1.36 "Unauthorized Overrun" shall mean a quantity of Gas in excess of Shipper's applicable ACQ or MDQ that Transporter does not agree, pursuant to Section 6, to schedule on any Day. Unauthorized Overrun Quantities will be subject to the Unauthorized Overrun Charge stated in the Statement of Currently Effective Rates.

1.37 "Winter" shall mean the period beginning November 1 of each calendar year and ending March 31 of the following calendar year. 

SECTION 2
FIRM TRANSPORTATION SERVICE

2.1 Subject to Transporter having available capacity and Shipper meeting the eligibility requirements set forth in this Operating Statement, Transporter shall offer Firm Transportation Service to Shippers on a non-discriminatory basis in accordance with this Operating Statement.  Transporter shall provide Firm Transportation Service to Shipper in accordance with a Service Agreement executed by Transporter and Shipper.

2.2 Pursuant to this service, Transporter will transport Natural Gas quantities on a firm basis, for Shipper on Transporter's System up to a Maximum Daily Quantity, subject to an Annual Contract Quantity, if applicable.  Transporter, in its sole judgment, shall have the right to determine if capacity is available for firm transportation under this Operating Statement prior to execution of a Service Agreement with a Shipper.

2.3 The rate for Firm Transportation Service shall consist of a Reservation Rate per Dth of MDQ, a Usage Rate per Dth of Gas transported by Transporter on Shipper's behalf, a Transportation Retainage Rate, plus any applicable third party or governmental charges, unless otherwise agreed by Transporter in a Service Agreement with a Shipper.

2.4 For the purpose of scheduling capacity, subject to Section 6, Firm Transportation Service shall be scheduled prior to interruptible services offered under this Operating Statement and prior to interruptible services offered by Transporter pursuant to its Tariff.

2.5 Transporter shall receive Gas from Shipper or for the account of Shipper at the Receipt Point(s) and deliver Equivalent Quantities to Shipper or for the account of Shipper at the Delivery Point(s).  Shipper shall submit Nominations in accordance with the Nominations procedures contained in Section 6.  Transporter, in its discretion, may receive from Shipper Gas for Transportation in excess of the MDQ and/or ACQ on an interruptible basis as Authorized Overrun Service.  If Shipper takes Gas at one or more Delivery Points in excess of Shipper's MDQ and/or ACQ without Transporter's prior consent, Shipper shall pay an amount to Transporter calculated at a rate of the highest price reported for Dominion South Point during the applicable Month as reported by Gas Daily or, in the event that Gas Daily discontinues its reporting of such prices, any comparable reporting service, plus the Unauthorized Overrun Charge of $10.00 per Dth for all Gas taken by Shipper in excess MDQ and/or ACQ and authorized overrun quantities, as applicable.

2.6 The Receipt Point(s) and Delivery Point(s) shall be mutually agreed upon by Transporter and Shipper and set forth in the Service Agreement.  If Shipper delivers Gas to Transporter at more than one Receipt Point, then Shipper must become a Supply Aggregator, aggregate its Gas into a single supply pool, nominate its aggregated supply in accordance with Section 6 of this Statement of Operating Conditions, and provide, on a weekly basis, the total volume of local gas production deliveries for all meters assigned to the supply pool.  

2.7 Shipper shall be responsible for contracting and paying for any necessary transportation service at and upstream of the Receipt Point as well as at and downstream of the Delivery Point.  Pursuant to Sections 6, 13, and 14, Shipper shall indemnify and hold Transporter harmless from all suits, claims, damages, costs, including court costs and reasonable attorneys' fees, losses, expenses, and encumbrances of whatever nature brought by any Person against Transporter with respect to Gas transported or scheduled to be transported hereunder.

2.8 Transporter and Shipper shall work to keep the Gas flow in balance at all times.  If at any time, the quantities of Gas received by Transporter at the Receipt Point(s) are greater or lesser than the quantities of Gas delivered at the Delivery Point(s), as adjusted for Fuel Use and Gas Lost and Unaccounted For, Transporter may refuse, increase, or decrease deliveries to correct the imbalances.  If, upon termination of a Service Agreement, Shipper has not delivered to Transporter quantities of Gas that are equal to that Shipper has taken at the Delivery Point(s), Shipper must deliver the deficient quantities to Transporter, within 60 days of the termination of Service Agreement, at a mutually agreeable rate of delivery.  If Shipper fails to correct the imbalance within the 60 day period, then Shipper shall pay an amount to Transporter calculated at a rate of the highest price reported for Dominion South Point during the applicable Month as reported by Gas Daily or, in the event that Gas Daily discontinues its reporting of such prices, any comparable reporting service, plus the Unauthorized Overrun Charge of $10.00 per Dth for all Gas taken by Shipper in excess of the cumulative quantity delivered to Transporter (less Fuel Use and Gas Lost and Unaccounted For) on behalf of Shipper.



SECTION 3
INTERRUPTIBLE TRANSPORTATION SERVICE

3.1 Subject to Transporter having available capacity and Shipper meeting the eligibility requirements set forth in this Operating Statement, Transporter shall offer Interruptible Transportation Service to shippers on a non-discriminatory basis in accordance with this Operating Statement. Transporter shall provide Interruptible Transportation Service to Shipper in accordance with a Service Agreement executed by Transporter and Shipper.

3.2 Pursuant to this service, Transporter will transport Natural Gas quantities on an interruptible basis up to a contracted daily quantity for Shipper on Transporter's System.  Transporter may, on a not unduly discriminatory basis, agree to differing levels in the Shipper's contracted daily quantity during specified periods during the term of Shipper's Service Agreement.  Shipper's contracted daily quantity and any periods of varying contracted daily quantity shall be specified in Shipper's Service Agreement. Transporter, in its sole judgment, shall have the right to determine, on a Day-to-Day basis, if capacity is available for interruptible transportation under this Operating Statement.

3.3 The rate for Interruptible Transportation Service shall consist of a Usage Rate per Dth of Gas transported by Transporter on Shipper's behalf plus a Transportation Retainage Rate.

3.4 For the purpose of scheduling capacity, subject to Section 6, Interruptible Transportation Service shall be subordinate to firm services offered under this Operating Statement and to firm services offered by Transporter pursuant to its Tariff. Once Interruptible Transportation Service is nominated and scheduled for a Day, Transporter may curtail such Service at any time in accordance with Section 6.

3.5 Transporter shall receive Gas from Shipper or for the account of Shipper at the Receipt Point(s) and deliver Equivalent Quantities to Shipper or for the account of Shipper at the Delivery Point(s).  Shipper shall submit Nominations in accordance with the Nominations procedures contained in Section 6.  If Shipper takes Gas at one or more Delivery Points in excess of Shipper's contracted daily quantity without Transporter's prior consent, Shipper shall pay an amount to Transporter calculated at a rate of the highest price reported for Dominion South Point during the applicable Month as reported by Gas Daily or, in the event that Gas Daily discontinues its reporting of such prices, any comparable reporting service, plus the Unauthorized Overrun Charge of $10.00 per Dth for all Gas taken by Shipper in excess of the contracted daily quantity.

3.6 The Receipt Point(s) and Delivery Point(s) shall be mutually agreed upon by Transporter and Shipper and set forth in the Service Agreement.    If Shipper delivers Gas to Transporter at more than one Receipt Point, then Shipper must become a Supply Aggregator, aggregate its Gas into a single supply pool, nominate its aggregated supply in accordance with Section 6 of this Statement of Operating Conditions, and provide, on a weekly basis, the total volume of local gas production deliveries for all meters assigned to the supply pool.  

3.7 Shipper shall be responsible for contracting and paying for any necessary transportation service at and upstream of the Receipt Point as well as at and downstream of the Delivery Point.  Pursuant to Sections 6, 13, and 14, Shipper shall indemnify and hold Transporter harmless from all suits, claims, damages, costs, including court costs and reasonable attorneys' fees, losses, expenses, and encumbrances of whatever nature brought by any Person against Transporter with respect to Gas transported or scheduled to be transported hereunder.

3.8 Transporter and Shipper shall work to keep the Gas flow in balance at all times.  If at any time, the quantities of Gas received by Transporter at the Receipt Point(s) are greater or lesser than the quantities of Gas delivered at the Delivery Point(s), as adjusted for Fuel Use and Gas Lost and Unaccounted For, Transporter may refuse, increase or decrease deliveries to correct the imbalances.  If, upon termination of a Service Agreement, Shipper has not delivered to Transporter quantities of Gas that are equal to the quantities that Shipper has taken at the Delivery Point(s), Shipper must deliver the deficient quantities to Transporter, within 60 days of the termination of Service Agreement, at a mutually agreeable rate of delivery.  If Shipper fails to correct the imbalance within the 60 day period, then Shipper shall pay an amount to Transporter calculated at a rate of the highest price reported for Dominion South Point during the applicable Month as reported by Gas Daily or, in the event that Gas Daily discontinues its reporting of such prices, any comparable reporting service, plus the Unauthorized Overrun Charge of $10.00 per Dth for all Gas taken by Shipper in excess of the cumulative quantity delivered to transporter (less Fuel Use and Gas Lost and Unaccounted For) on behalf of Shipper.

SECTION 4
INTERRUPTIBLE PARK AND LOAN SERVICE

4.1 Subject to Transporter's determining that it has available and uncommitted capacity and/or Gas available to Loan and Shipper meeting the eligibility requirements set forth in this Operating Statement, Transporter may offer Park and Loan Service on a non-discriminatory basis.  Any Park and Loan Service that Transporter agrees to provide to a Shipper will be performed in accordance with the applicable terms of this Operating Statement, the Service Agreement, any applicable Confirmation, and the terms of this Section 4.

4.2 A Shipper electing:

(a.) to store (park) Gas to its park account must first obtain approval from Transporter by requesting the quantity of Gas and Receipt Point(s) before nominating a quantity of Gas.  The minimum length of time the Gas may be left in the park account is one Day.  The maximum length of time the Gas may be left in the park account will be determined by Transporter.  Transporter shall credit all such quantities of Gas that are approved for parking to Shipper's park account.

(b.) to withdraw (unpark) Gas from its park account must first obtain approval from Transporter by requesting the quantity of Gas and Delivery Point(s), which must be the same point(s) as the Receipt Point(s) nominated under Section 4.2(a.), before nominating a quantity of Gas.  Transporter shall deduct all such quantities of Gas that are approved for withdrawal from Shipper's park account. 
4.3 If the Service Agreement and applicable Confirmation have terminated, then Transporter, in its sole discretion, may require Shipper to withdraw all, or any portion of the Gas quantities parked on Transporter's system within 30 Days of Transporter's notice to Shipper.  If Shipper fails to nominate for the withdrawal of the quantities specified by Transporter in its notice, then Transporter shall take title to that portion of Shipper's parking account that Shipper was instructed to withdraw, free and clear of any adverse claims.  Transporter's notice to Shipper may be verbal and in such case must be followed by a written notice within five business Days.
4.4 To protect and/or maintain the operational integrity of its pipeline system, Transporter may require the withdrawal of Gas in Shipper's park account upon 24 hours' notice.
4.5 A Shipper electing: 
(a.) to withdraw (borrow) Gas from its loan account must first obtain approval from Transporter by requesting the quantity of Gas and Delivery Point(s) before nominating a quantity of Gas.  The minimum length of time the Gas may be withdrawn from the loan account is one Day.  The maximum length of time the Gas may be withdrawn from the loan account will be determined by Transporter.  Transporter shall debit all such quantities of Gas that are approved for withdrawal to Shipper's loan account.
(b.) to park (store or re-pay) Gas to its loan account must first obtain approval from Transporter by requesting the quantity of Gas and Receipt Point(s), which must be the same point(s) as the Delivery Point(s) nominated under Section 4.5(a.), before nominating a quantity of Gas.  Transporter shall credit all such quantities of Gas that are approved for park (store or re-pay) to Shipper's loan account.
4.6 If the Service Agreement and applicable Confirmation have terminated, then Transporter, in its sole discretion, may require Shipper to repay all, or any portion of the Gas quantities loaned by Transporter within 30 Days of Transporter's notice to Shipper.  If Shipper fails to deliver or cause to be delivered the quantities specified by Transporter within the 30-day notice period, then Transporter will invoice and Shipper shall pay $10.00 per Dth per Month (or partial Month) plus $0.25 per Dth per Day until the volumes are repaid.
4.7 To protect and/or maintain the operational integrity of its pipeline system, Transporter may require the repayment of quantities of Gas that have been loaned upon 24 hours' notice.
4.8 The rate for Park and Loan Service may consist of a Usage Rate paid on each Dekatherm of Gas Parked in Shipper's park account or Loaned in Shipper's loan account at the end of each Day during the Month in which the Gas is Parked or Loaned.
4.9 For scheduling purposes, subject to Section 6, Park and Loan Service shall be subordinate to firm services offered under this Operating Statement and to firm services offered by Transporter pursuant to its Tariff.  Once Park and Loan Service is nominated and scheduled for a Day, Transporter may curtail such Service at any time in accordance with Section 6.
4.10 Shipper shall be responsible for contracting and paying for any necessary transportation service at and upstream of the Receipt Point and at and downstream of the Delivery Point.  Pursuant to Sections 6, 13, and 14, Shipper shall indemnify and hold Transporter harmless from all suits, claims, damages, costs, including court costs and reasonable attorneys' fees, losses, expenses, and encumbrances of whatever nature brought by any Person against Transporter with respect to Gas transported or scheduled to be transported hereunder.

SECTION 5
REQUESTS FOR SERVICE

5.1 A Person wishing to subscribe to service pursuant to this Operating Statement may submit to Transporter a Request for Service using the Request for Service form prescribed by Transporter.  A Request for Service shall specify: (i) the exact legal name of the Person requesting service; (ii) the type of Service requested; (iii) the proposed ACQ, MDQ or contracted daily quantity, as applicable; (iv) the proposed rates; (v) the proposed term of the Service Agreement; (vi) the proposed Receipt Point(s) and Delivery Point(s); and (vii) other proposed terms and conditions, if any.  The proposed rate shall not be above maximum rates, or below the minimum rates, for Gas Transportation services contained in this Operating Statement. 

5.2 A Request for Service shall not be valid and Transporter shall not be required to grant such Request for Service if: (i) Transporter determines, in accordance with the criteria set forth in Section 18, that the requesting Shipper is not creditworthy; (ii) the service requested would require the construction, modification, expansion, or acquisition of any facilities; (iii) the service requested would not comply with this Operating Statement; (iv) for firm service requests, Transporter lacks the capacity or capability to perform the requested service; or (v) the service is requested at less than the applicable maximum rate stated in this Operating Statement.  For services under this Operating Statement subject to maximum rates, Transporter may agree to provide such services at less than the applicable maximum rates.  If Transporter is unable to accept, in full, a Request for Service which requests firm service, Transporter shall tender a Service Agreement reflecting the maximum contract quantities that Transporter is able to accommodate.  If more than one such Request for Service is received on the same Business Day, then Transporter shall tender Service Agreements with a combination of rates and terms that yield the highest Net Present Value ("NPV") to Persons submitting Requests for Service.  The NPV shall be calculated as the discounted cash flow of the expected revenues per Dth for the applicable service using the most recent Bank Prime Loan Rate published by the Federal Reserve Board in its Federal Reserve Statistical Release and available on the date of the Request for Service.  If Transporter is unable to accept, in full, Requests for Service in which Persons requesting service have proposed to pay the same NPV, then Transporter shall tender Service Agreements reflecting each Person's pro rata share of the capacity requested on such Business Day.

5.3 Transporter shall tender a Service Agreement upon its acceptance of the Person's Request for Service.  If Transporter does not accept any Person's Request for Service, it shall advise the Person orally, confirmed in writing, of the nonacceptance and the reason therefor as soon as practicable after Transporter's receipt of the Request for Service.  Shipper must execute the Service Agreement within ten (10) days after Transporter tenders the Service Agreement for execution.

SECTION 6
NOMINATIONS, SCHEDULING, AND CURTAILMENT

6.1 Shipper may designate a third party as agent for purposes of Nominating, and for giving and receiving notices related to Nominations.  Shipper shall provide Transporter with written notice of such designation.  Any such designation shall be effective starting the Month following the receipt of the notice and will remain in effect until revoked in writing by Shipper.

6.2 All Nominations shall be submitted through Transporter's EBB, internet website, or other electronic means agreed to by Shipper and Transporter.  Specific information to be included in the Nomination is posted on Transporter's EBB or internet website.  Transporter, in its sole discretion, may amend or modify the Nominating procedures or system at any time.

6.3 Shipper, or its designated agent, shall notify Transporter's Gas Nominations Department of the daily quantity of Gas that Shipper is Nominating for delivery to Transporter or receipt from Transporter on behalf of Shipper.  Such Nominations shall be submitted by 2:00 p.m. Eastern Clock Time prior to the effective Gas Day unless otherwise specified in the Service Agreement.  Nominations made after the 2:00 p.m. deadline shall be accepted at the sole discretion of Transporter.  Shipper, or its designated agent, shall provide Transporter with a Nomination for each Gas Day.

6.4 If Shipper fails to provide a Nomination for any Day, the daily Nomination is assumed to be the prior Nomination made by Shipper and accepted by Transporter.

6.5 Transporter shall schedule all Transportation and Park and Loan quantities as nominated by Shippers in accordance with the available capacity and consistent with the following priorities:

(a.) Firm Transportation (within applicable MDQ and ACQ) at Primary Receipt and Delivery Points, pro rata based on each Shipper's Nomination; and

(b.) Interruptible Transportation and Park and Loan pursuant to interruptible services and Authorized Overrun Service offered by Transporter, by price from highest to lowest, except that scheduling shall be pro rata based on nominated quantities among Shippers paying the same rate.

6.6 Transporter shall have the unqualified right to curtail Interruptible Services in order to provide Transporter's Firm Services and firm services provided pursuant to Transporter's Tariff.  Interruptible Services shall be interrupted in sequence, by magnitude of rate, from lowest to highest.  Interruptible Service at the same rate shall be interrupted on a pro-rata basis based on Nominations.

6.7 Transporter shall only curtail Firm Services in the event of force majeure or when necessary in Transporter's reasonable judgment to meet its system operating requirements and then only after curtailing all Interruptible Services in accordance with Section 6.6.  Transporter shall curtail Firm Services on a pro rata basis based on Nominations.  In order to enable prompt action in an emergency situation where capacity is insufficient, Transporter shall have the authority to take all necessary and appropriate actions, as then may appear necessary, to preserve the operational integrity of its System.

6.8 Transporter shall have the right to curtail or discontinue services, in whole or in part on all or a portion of its System at any time for reasons of Force Majeure or when in Transporter's sole judgment, capacity or operating conditions so require or it is desirable or necessary to make modifications, repairs or operating changes to its System.

6.9 When in Transporter's judgment Transporter will be unable to satisfy all scheduled deliveries on any portion of its System due to the failure of Shippers to deliver or cause to be delivered scheduled receipts, Transporter may reduce, in whole or in part, deliveries to Shippers with receipts scheduled on any portion of Transporter's System showing deficient receipts.

6.10 All quantities received and/or taken in violation of Transporter's curtailment or interruption orders shall constitute unauthorized receipts or deliveries of Gas and will be subject to a charge calculated as the highest price reported for Dominion South Point during the applicable Month as reported by Gas Daily or, in the event that Gas Daily discontinues its reporting of such prices, any comparable reporting service, plus the Unauthorized Overrun Charge of $10.00 per Dth. Such charge shall be applicable to all such unauthorized receipts and deliveries following notification of curtailment or interruption pursuant to Section 6.7 or 6.9, above, which may be given by telephone, confirmed by facsimile transmission or any other reasonable means.

6.11 Transporter shall provide Shipper with notice of curtailment or interruption at a time and in a manner that is reasonable under then-existing conditions, and shall in any event confirm in writing or by facsimile transmission the notice given if originally provided telephonically.  Shipper shall have the responsibility to inform its end-users, suppliers, other transporters and all others involved in the transaction, as to any curtailment or interruption.

6.12 Shipper shall indemnify Transporter against and hold Transporter harmless from any and all damages, claims, suits, actions or proceedings whatsoever threatened or initiated as a result of any curtailment or interruption invoked by Transporter, which shall include any curtailment or interruptions described in any part of this Section 6.  Shipper shall not be required to indemnify Transporter as stated above to the extent that the curtailment or interruption is a result of Transporter's gross negligence, bad faith, fault or willful misconduct.



SECTION 7
RATES

7.1 The maximum rates for Gas Transportation service under this Operating Statement are provided in the Statement of Currently Effective Rates at Section 20.  Transporter may periodically offer and agree to nondiscriminatory discounting of maximum rates.  Discounted rates shall not exceed the applicable maximum rates, if any, approved by the Commission from time to time for the type of service provided. 

7.2 Shippers shall provide in kind Gas equal to the applicable Transportation Retainage Rate, as agreed upon in a Service Agreement.

7.3 Transporter reserves the right to seek authorization from the Commission to increase, decrease, or restructure the rates charged under this Operating Statement, including the Transportation Retainage Rate, to assure Transporter's right to charge and collect fair and equitable rates under the Commission's applicable rules and regulations. Nothing herein shall be construed to deny any Shipper any rights that it may have under the Commission's rules and regulations to participate fully in rate or certificate proceedings to contest any proposed change in rates charged in this Operating Statement.

SECTION 8
REGULATORY REQUIREMENTS

8.1 Any and all service transactions under this Operating Statement must be interstate service eligible under, and shall be fully subject to, the applicable requirements of 18 CFR ? 284.224 of the Commission's rules and regulations, as they may be revised from time to time. Shipper's Request for Service shall constitute its warranty that Shipper satisfies such requirements, and Transporter shall have the right to request information from Shipper to verify its eligibility.

SECTION 9
PRESSURES

9.1 Shipper shall deliver Gas to Transporter at the specified Receipt Point(s) at pressures sufficient to allow the Gas to enter Transporter's system, but shall not be delivered at pressures in excess of the maximum allowable operating pressure at Receipt Point(s).  Transporter is under no obligation to modify its line pressures or to install additional facilities to permit the entry of Shipper's Gas into its system.  Transporter shall deliver Gas for Shipper's account at the pressures existing from time to time in Transporter's system at Delivery Point(s).

SECTION 10
MEASUREMENT

10.1 All quantities of Gas received at Receipt Point(s) by Transporter for the account of Shipper shall be measured at the Receipt Point(s) by Transporter or its designee as follows:

(a.) With regard to Gas received from upstream pipelines, the quantity of Gas received will be measured at pipeline Receipt Points in accordance with the terms of Transporter's agreement with the pipeline and shall be conclusive for the purpose of this Statement of Operating Conditions.

(b.) With regard to Gas received from local production, the quantity of Gas received will be measured as follows:

  (i.) The unit of volumetric measurement shall be a standard cubic foot of gas at a pressure base of fourteen and seventy-three hundredths (14.73) pounds per square inch absolute, a temperature base of sixty degrees (60?) Fahrenheit (five hundred twenty degrees (520?) absolute) and without adjustments for water vapor.

   (ii.) For orifice meter measurement, the methods of computation shall conform with the recommendations contained in Report No. 3 of the Gas Measurement Committee of the American Gas Association, including any revisions made thereto, applied in a practical manner.  The specific gravity of the gas being measured shall be determined at the beginning of delivery and as often thereafter as conditions may warrant.

    (iii.) For displacement or turbine meters or other approved measuring devices, the meter readings at varying pressures shall be converted to gas quantities at base conditions set forth in sub-section (b)(i) of this Section 10.1.

   (iv.) In connection with the use of any type of measuring device, an atmospheric pressure of fourteen and four tenths (14.4) pounds per square inch shall be assumed, with no allowance for variation in atmospheric pressure.  The flowing gas temperature may be recorded at the Buyer's discretion.  In the absence of a flowing gas temperature recorder, a temperature of sixty degrees (60?) Fahrenheit will be assumed.

10.2 All gas received by Transporter will be delivered to the Point(s) of Delivery on a dekatherm-equivalent basis.  In order to provide for dekatherm-equivalent deliveries, Transporter may attribute Btu content to deliveries by either:

(a.) testing by the gravity balance method at such times as meters are tested in compliance with the rules and regulations of the PaPUC, as the same may be amended from time to time;

(b.) using reference points on the inlet pipeline (either upstream or downstream of the Shipper's meter connection);

(c.) utilizing the system-wide average Btu content of gas delivered by Transporter; or

(d.) such other method as mutually agreed upon by Transporter and Shipper.

10.3 All quantities of Gas delivered at the Delivery Point(s) by Transporter to Shipper, or for the account of Shipper, will be measured in accordance with the terms of Transporter's agreement with the downstream receiver of such Gas and shall be conclusive for the purpose of this Statement of Operating Conditions.

SECTION 11
QUALITY

11.1 Gas delivered to Transporter shall meet the gas quality specifications contained in Transporter's Tariff, as follows, and as may be amended from time to time, unless otherwise agreed between Transporter and Shipper in a Service Agreement: 

(a.) Heating Value - All Gas delivered hereunder shall have a minimum heat content of nine hundred eighty (980) and a maximum heat content of eleven hundred ten (1,110) British Thermal Units (Btu) per cubic foot (saturated) as measured on a Cutler-Hammer calorimeter, or the equivalent, and a maximum utilization factor of 1,400, the utilization factor being defined as that number obtained by dividing the heating value of the Gas by the square root of its specific gravity. The initial Btu determination and all subsequent Btu determinations shall be made by Transporter at Shipper's expense.

(b.) Other Quality Standards - In addition to the requirements of Subparagraph (a) above, Gas injected into Transporter's system shall be of a quality and pressure reasonably acceptable to Transporter. In the case of Gas introduced into Transporter's system directly from gas wells, such Gas shall conform to all quality standards applicable to Gas purchased by Transporter directly from gas wells in accordance with the applicable provisions of the current form of Transporter's "Gas Purchase Agreement" for local Pennsylvania gas supplies and the policies established by Transporter to enforce such standards. All tests required to establish or monitor compliance with said quality standards shall be conducted by Transporter at the expense of Shipper.

(c.) Nonconformance - If the Gas offered for delivery by Shipper shall fail at any time to conform to any of the specifications set forth herein, then Transporter shall notify Shipper of such deficiency and may at Transporter's option refuse to accept delivery pending correction by Shipper. Should any substances not in conformity with the quality standards specified herein enter Transporter's facilities and cause damage to gas meters, regulators and/or other equipment, or interruption of service, Shipper shall reimburse Transporter for the costs to repair such damage and for any related costs which Transporter may incur to restore service to, and/or repair facilities, of its customers, including payments made by Transporter to customers in settlement of claims arising out of interruption of gas service.

If the Gas delivered by Shipper at any Receipt Point fails to meet the qualities stipulated in this Section 11.1, then Transporter shall notify Shipper of such deficiency and thereupon may, at its option, refuse to accept delivery pending correction. Upon demonstration that the Gas being tendered meets the Gas quality specifications of this Section 11.1, Transporter shall resume taking delivery of Gas.

SECTION 12
BILLING AND PAYMENT

12.1 On or before the twentieth (20th) Business Day of each Month, Transporter shall render (for purposes of this Section 12.1, "render" shall mean either (a) postmarked or (b) time-stamped and transmitted electronically to the designated site, whichever is applicable) to Shipper a statement of the amount due for the preceding Month under the applicable Rate Schedule(s).  When information necessary for billing purposes is in the control of Shipper, Shipper shall furnish such information to Transporter on or before the third (3rd) Business Day of the Month.  Both Transporter and Shipper have the right to examine at reasonable times upon prior notice and at its own expense, books, records and charts of the other to the extent necessary to verify the accuracy of any statement, charge or computation made under or pursuant to any of the provisions hereof.

12.2 Shipper shall pay Transporter the amount due for the preceding Month within ten (10) Days of receiving the statement from the Transporter.

12.3 Payments by Shipper to Transporter shall be made in the form of wire transfer in immediately available funds directed to a bank account designated by Transporter's Controller, unless otherwise agreed.  If payment differs from the invoiced amount, remittance detail should be provided with the payment within two (2) Business Days of the payment due date.  Interest on the unpaid portion of the bill shall accrue at the current rate as set forth in Section 154.501(d) of the Commission's Rules and Regulations, from the due date until the date of payment.  If such failure to pay continues for thirty (30) Days after payment is due, Transporter, in addition to any other remedy it may have hereunder, may suspend further receipt and/or delivery of Gas until such amount is paid.

12.4 If Shipper in good faith disputes the amount of any such bill or part thereof and pays to Transporter such amounts, if any, as it concedes to be correct and, at any time thereafter within thirty (30) Days of a demand made by Transporter, furnishes a good and sufficient surety bond in an amount and with surety satisfactory to Transporter or other assurance acceptable to Transporter, guaranteeing payment to Transporter of the unpaid amount, then Transporter shall not be entitled to suspend further delivery of such Gas unless and until default be made in the conditions of such bond.

12.5 In the event an error is discovered in the amount billed in any statement rendered by Transporter, such error shall be adjusted within thirty (30) Days of the determination thereof, provided that claim therefore shall have been made within thirty (30) Days from the date of discovery of such error, but in any event within six (6) Months from the date of such statement, provided, however, that the party harmed by the adjustment shall have up to three (3) Months to dispute such adjustment.  The timing of billing claims and adjustments referenced in the previous sentence shall not apply in the case of deliberate omission or misrepresentation or mutual mistake of fact.  Parties' other statutory or contractual rights shall not be diminished by this standard.  If parties are unable to agree on the adjustment of any claimed error, any resort by either of the parties to legal proceedings shall be commenced within fifteen (15) Months after the supposed cause of action is alleged to have arisen, or shall thereafter be forever barred.

12.6 All invoices and payments, other than those related to Taxes, shall be final unless questioned within twelve (12) Months from the date of such invoice or payment.   Any error discovered as a result of a timely claim shall be adjusted within thirty (30) Days of the determination of such error as stated in Section 12.5 of this Statement of Operating Conditions.

12.7 Shipper shall reimburse Transporter for all Taxes that may be levied upon and/or paid by Transporter with respect to the service performed under this Operating Statement.  Shipper shall be responsible for establishing any exemption from Taxes and shall provide satisfactory evidence of such exemption to Transporter.

12.8 Shipper shall reimburse Transporter for any and all filing fees or related charges incurred by Transporter for the filing of any report or reports with any governmental agency or other body, including the Commission, with respect to the nature and timing of any service specifically provided to the Shipper.

SECTION 13
CONTROL AND POSSESSION

13.1 As between Transporter and Shipper, Shipper shall be deemed in exclusive control and possession of the Gas transported hereunder and responsible for any loss, damage, or injury caused thereby until it is delivered to Transporter at the Receipt Point(s) and after it is delivered by Transporter at the Delivery Point(s).  Transporter shall be deemed in exclusive control and possession of said Gas and responsible for any loss, damage, or injury caused thereby after it is delivered by Shipper, or for Shipper's account, at the Receipt Point(s) and until it is delivered by Transporter at the Delivery Point(s).

13.2 Shipper agrees to indemnify and hold Transporter harmless from all suits, claims, liens, damages, costs, including court costs and attorneys' fees, losses, expenses and encumbrances of whatever nature arising from Shipper's delivery of Gas to Transporter's System and at all times when Shipper is deemed in exclusive control and possession of the Gas transported hereunder.  Transporter agrees to indemnify and hold Shipper harmless from all suits, claims, liens, damages, costs, including court costs and attorneys' fees, losses, expenses and encumbrances of whatever nature arising from Transporter's receipt and control of Gas after the Receipt Point, except for those arising from Shipper's delivery to Transporter's System of Gas that fails to meet the quality specifications set forth in this Operating Statement.

13.3 Except as provided in this Operating Statement, title to the Gas transported shall not transfer to Transporter when it takes possession of the Gas, or at any other time, unless the parties specifically agree otherwise.  However, this shall not restrict Transporter from entering into operating arrangements that allow for the movement of Gas via exchange or displacement.  Title to Gas Loaned under Park and Loan Service shall pass from Transporter to Shipper when the Gas is delivered for Shipper's account to a Delivery Point and title shall pass from Shipper to Transporter when Loaned Gas is returned by Shipper to a Receipt Point.

SECTION 14
WARRANTY

14.1 Shipper warrants, for itself, its successors and assigns, that it will have, at the time of delivery of Gas hereunder good and marketable title to the Gas delivered, or it will otherwise have the right to deliver such Gas, and that such Gas shall be free and clear of all liens, encumbrances, and claims.  Shipper warrants that it will indemnify Transporter and save it harmless from suits, actions, debts, accounts, damages, costs, losses and expenses arising from or out of adverse claims of any and all persons to said Gas or to royalties, taxes, license fees or charges thereon.

SECTION 15
GOVERNMENT REGULATION

15.1 All of the provisions of this Operating Statement are hereby expressly made subject to all present and future applicable federal, state, or local laws, regulations, rules, and orders of governmental authorities having jurisdiction.  Except as otherwise provided herein, in the event any provision of this Operating Statement is found to be inconsistent with or contrary to any such federal, state, or local laws, regulations, rules, and orders, the latter shall be deemed to control this Operating Statement, to the extent possible, shall be deemed modified accordingly and as so modified shall continue in full force and effect.

15.2 Shipper and Transporter recognize that Transporter has entered into transactions hereunder based on its good faith understanding that all acts, obligations, and services performed or to be performed under this  Operating Statement and charges therefore, are exempt from regulation of the Commission, except as otherwise provided for by 18 CFR ? 284.224 of the Commission's rules and regulations.  If any governmental authority shall take any action that is, with respect to or as a result of this Operating Statement, designed to subject or otherwise subjects either party or any of its transmission, distribution, or related facilities to any greater or different regulation or jurisdiction than that existing on the date any Service Agreement between the parties was entered into (or thereafter as such regulation or jurisdiction may have changed and been accepted by such party), then upon written notice to the other, the party so affected may cancel and terminate such Service Agreement effective one (1) Day prior to the effective date of such governmental action without further obligation to the other party except (i) Shipper's obligation to pay amounts due and owing for services rendered pursuant to the Service Agreement, and (ii) to correct any Gas imbalance existing on the date of such cancellation and termination.

15.3 Transporter shall file all necessary reports and/or notices required by Subpart C of Part 284 of the Commission's regulations. Shipper shall provide Transporter with any necessary compliance information requested by Transporter in connection with preparing such reports.



SECTION 16
FORCE MAJEURE

16.1 Neither Shipper nor Transporter shall be liable in damages, or in any other remedy, legal or equitable, to the other for any act, omission, or circumstances occasioned by or in consequence of any acts of God, strikes, lockouts, acts of the public enemy, wars, sabotage, terrorism, blockades, insurrections, riots, epidemics, landslides, lightning, earthquakes, fires, storms, floods, washouts, arrests, and restraints of rulers and peoples, civil disturbances, failure of electronic data, explosions, breakage, or accident to machinery or lines of pipe or the necessity to make repairs, tests, or alteration to machinery or lines of pipe, line freeze-ups, the binding order of any court or governmental authority which has been resisted in good faith by all reasonable legal means, or any other cause, whether of the kind herein enumerated, or otherwise, and whether caused or occasioned by or happening on the account of the act or omission of one of the parties hereto or some person or concern not a party hereto, not within the control of the party claiming suspension and which by the exercise of due diligence such Party is unable to prevent or overcome.  A failure to settle or prevent any strike or other controversy with employees or with anyone purporting or seeking to represent employees shall not be considered a matter within control of the party claiming suspension.  Under no circumstances will the following events constitute Force Majeure: (i) Shipper's lack of finances, (ii) inadequate or uneconomic markets for Shipper's Gas, or (iii) insufficiency of Shipper's Gas supplies.  Such causes or contingencies affecting the performance of any obligations under any rate schedule or agreement by either Shipper or Transporter, shall not relieve it of liability in the event of its concurrent negligence or in the event of its failure to use due diligence to remedy the situation and remove the cause in an adequate manner and with all reasonable dispatch, nor shall such causes or contingencies affecting performance of any obligation relieve Shipper from its obligation to make payments of amounts then due, nor shall such causes or   contingencies relieve either Shipper or Transporter of liability unless such party shall give notice and full particulars of the same in writing, including by facsimile or electronic communication, to the other party as soon as possible after the occurrence relied on.

SECTION 17
NOTICES

17.1 All notices, bills and payments required or permitted to be given in connection with service shall be sent to the address specified in Shipper's Service Agreement shall be in writing and shall be valid and sufficient if delivered in person, dispatched by first class mail, overnight mail or facsimile.

SECTION 18
CREDITWORTHINESS

18.1 Shippers taking service under this Operating Statement shall be subject to the following provisions:

(a) At the time of its Request for Service, and upon Transporter's request at any time thereafter, Shipper shall demonstrate creditworthiness.  Transporter is not required to commence service or to continue to provide service if Shipper, when requested by Transporter to demonstrate creditworthiness, fails to do so to Transporter's satisfaction.  A Shipper shall be deemed creditworthy (1) if it has and maintains a credit rating for long-term senior unsecured debt of investment grade defined as a rating of at least "BBB-" by Standard &amp; Poor's Corporation, a rating of at least "Baa3" by Moody's Investors Service, or a rating of at least "BBB-" by Fitch Ratings, but if Shipper is rated by more than one agency, the lowest rating shall be considered in determining creditworthiness; or (2) if public credit reports are not available, it has an equivalent rating of investment grade as determined by Transporter based on the financial rating methodology, criteria and ratios for the industry of Shipper as published by the above rating agencies from time to time.  For purposes of credit evaluation, Transporter will consider the following, as applicable:

(1) audited financial statements;

(2) annual reports;

(3) most recent filed statements with the Securities and Exchange Commission (or an equivalent authority) or such other publicly available information;

(4) for public entities, the most recent publicly available interim financial statements, with an attestation by its Chief Financial Officer, Controller or equivalent that such statements constitute a true, correct and fair representation of financial condition prepared in accordance with Generally Accepted Accounting Principles (GAAP) or equivalent;

(5) publicly available credit reports from credit and bond rating agencies;

(6) private credit ratings, bank or trade references;

(7) past payment history to Transporter;

(8) whether Shipper has filed for bankruptcy protection and/or is operating under any chapter of the bankruptcy laws;

(9) whether Shipper is subject to liquidation or debt reduction procedures such as an assignment for the benefit of creditors or any creditors' committee agreement;

(10) whether Shipper's credit rating has been downgraded by a credit rating agency within the last six Months; or

(11) such other information as may be mutually agreed to by Transporter and Shipper.

(b) If Transporter determines that Shipper is not creditworthy, then within 5 Business Days of notice from Transporter, Shipper shall provide Transporter with one of the following alternate forms of credit support: (1) a corporate guaranty of all of Shipper's obligations from a creditworthy guarantor; (2) an irrevocable standby letter of credit in form and from an institution satisfactory to Transporter; (3) a prepayment for service, provided that such prepayments shall be considered collateral held for security and not advance payments for services, or (4) such other security, as reasonably determined by Transporter.  Shipper's obligation to provide credit assurance shall terminate only after all of Shipper's obligations to Transporter have been satisfied.  The value in U.S. Dollars of the credit support set forth above to be provided by Shipper (other than for a corporate guaranty) shall be in an amount equal to: (1) in the case of firm services, reservation charges payable at the rate specified in Shipper's Service Agreement for a period of three (3) Months or the duration of the Shipper's Service Agreement, whichever is shorter and (2) in the case of interruptible services, the Interruptible charge(s) calculated  on a one hundred percent (100%) load factor basis payable for a period of three (3) Months or the duration of the Shipper's Service Agreement, whichever is shorter, plus, for both (1) and (2) the market value of any quantities of Gas Loaned pursuant to Shipper's Service Agreement.  Transporter shall recompute the market value of any quantities of Gas Loaned to a Shipper pursuant to Shipper's Service Agreement on a daily basis.  Shipper shall be required to provide additional credit support upon two (2) Business Days' notice any time Transporter's recomputation indicates a dollar amount for credit support that exceeds the level of credit support previously posted by Shipper pursuant to this Section 18.1(b.) by ten percent (10%) or more.

(1) A guarantor shall be deemed creditworthy provided it has an investment grade rating for its long-term senior unsecured debt from at least two of the recognized rating agencies listed below.  The minimum acceptable investment grade rating from each of the indicated rating agencies is Moody's Baa3, S&amp;P BBB, and Fitch Ratings BBB.  If Guarantor is rated by more than one agency, the lowest rating shall be considered in determining creditworthiness.

(2) A guarantor that is considered creditworthy at the time it provided the guaranty but, at a later date, no longer meets the creditworthiness standards of this subsection will be required to provide other security acceptable to Transporter within five business days of notice from Transporter that the guarantor fails to meet the creditworthiness standards of this subsection.  Transporter may suspend service until such guaranty is received and if such guaranty is not provided by Shipper within ten Business Days of notice from Transporter, Transporter may terminate service.

SECTION 19
MISCELLANEOUS

19.1 Transporter, in its sole discretion, shall have the right at any time to amend or modify any and all of the provisions to this Operating Statement and the General Terms and Conditions thereto without liability to or consent from any Shipper.

19.2 No Shipper shall be considered or deemed by interpretation of this Operating Statement or any Service Agreement to have any rights in, to, or through Transporter's System or facilities.

19.3 Transporter shall have the right to waive any one or more specific defaults by any Shipper of any provision of the Service Agreement; provided, however, that no such waiver shall operate or be construed as a waiver of any other existing or future default or defaults, whether of a like or different character. Any waiver shall be granted or denied in a non-discriminatory manner.

19.4 This Operating Statement and Service Agreement shall be governed by the laws of the Commonwealth of Pennsylvania without regard to principles of conflicts of laws. The forum of any litigation shall be in a state or Federal court located in Pittsburgh, Pennsylvania.

19.5 The Service Agreement contains the entire agreement between the parties, and except as stated in the Service Agreement, there are no promises, agreements, warranties, obligations, assurances, or conditions precedent or otherwise affecting it.  Shipper will also be subject to the provisions of this Operating Statement.

19.6 Any change, modification, or alteration of a Service Agreement shall be in writing, signed by the parties to the Service Agreement, and no course of dealing or course of performance between the parties shall be construed to alter the terms of the Service Agreement, except as stated in the Service Agreement.

19.7 The captions and headings in this Operating Statement and in the Service Agreement are inserted for convenience of reference only and shall not affect the construction or interpretation of the Operating Statement or the Service Agreement.

19.8 Transporter and Shipper agree that there is no third party beneficiary of any Service Agreement and that the provisions of a Service Agreement do not impart enforceable rights to anyone who is not a party.

19.9 In no event shall Transporter or Shipper be held liable to the other for consequential, indirect, special, punitive, or exemplary damages arising out of service provided under this Operating Statement.  

19.10 Transporter reserves the right at any time to assign or otherwise delegate to any independent third party or a duly authorized agent any or all of the administrative duties associated with the services provided pursuant to this Operating Statement. No such delegation shall relieve Transporter of its obligations to Shipper.

19.11 Transporter agrees to provide services contained in this Operating Statement pursuant to Subpart C of Section 284 of the Federal Energy Regulatory Commission's Regulations, as they be revised from time to time.  Subpart C sets forth the Commission's regulations governing transportation services provided by intrastate and Hinshaw pipelines, including rates, charges, terms, and conditions.



1</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>2</filing_id>
      <filing_title>Rate Change</filing_title>
      <filing_type>1300</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2014-01-31</current_effective_date>
      <ferc_order_date>2014-04-01</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
  </ferc_filing_data>
</Document>