<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Document xmlns="http://ferc.gov/etariffExport.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ferc_filing_data>
    <schema_version>2</schema_version>
    <company_id>C003905</company_id>
    <lead_applicant_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
    <tariff_id>1</tariff_id>
    <tariff_title>Tariffs</tariff_title>
    <tariff_export_date>2025-09-16T20:02Z</tariff_export_date>
    <export_schema_version>2</export_schema_version>
    <record_data>
      <record_id>1</record_id>
      <option_code>A</option_code>
      <record_title>Statement of Operating Conditions</record_title>
      <record_content_desc>Tariff</record_content_desc>
      <record_version_num>1.2.0</record_version_num>
      <record_narrative_name>COH SOC Language change</record_narrative_name>
      <collation_value>83886080</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2024-08-27</proposed_effective_date>
      <priority_order>1000000000</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>STATEMENT OF OPERATING CONDITIONS
GENERAL TERMS AND CONDITIONS
FOR NGPA SECTION 311 TRANSPORTATION SERVICES
Of
COLUMBIA GAS OF OHIO, INC.

Filed with the
FEDERAL ENERGY REGULATORY COMMISSION

Communications covering SOC should be addressed to:
M. Bryan Little
Assistant General Counsel
NiSource Corporate Services - Legal
150 West Market St., Suite 600
Indianapolis, IN 46204
Telephone: 301-704-5757
E-mail: blittle@nisource.com

ETariff Information
a.	Tariff Submitter: Columbia Gas of Ohio, Inc.
b. 	FERC Tariff Program Name: FERC NGPA Gas Tariff
c.  	Tariff Title: Columbia Gas of Ohio, Inc. Statement of Operating Conditions - General 	Terms and Conditions
d.  	Tariff Record Proposed Effective Date: August 27, 2024
e.  	Tariff Record Title: Columbia Gas of Ohio, Inc. Statement of Operating Conditions
f.  	Option Code: A
g.  	Other Information: Petition for approval of Baseline Statement of Operating Conditions (Docket No. PR14-8-000).


COLUMBIA GAS OF OHIO, INC.
GENERAL TERMS AND CONDITIONS
General Statement Concerning 
Applicability of Terms and Conditions

LGTS Customers, as defined in Section 1.6.34 of this Statement, are subject to the following provisions of the Terms and Conditions: 1.1; 1.2; 1.3; 1.4; 1.5; 1.6; 2.1; 2.2; 2.3; 2.4; 3.1; 4.1; 5.1; 5.2; 5.3; 5.4; 6.1; 6.2; 7.1; 8.1; 9.1; 10.1; 11.1; 12.1; 13.1; 14.1; 15.1; 16.1; 17.1; 18.1; 19.1; 20.1; 21.1; 21.2; 21.3; 22.1; 22.2; 22.3; 23.1; 24.1; 25.1; 26.1; 26.2; 26.3; 26.4; 26.5; 26.6; 26.7; 27.1; 27.2; 27.3; 27.4; and 27.5.  
LDC Customers, as defined in Section 1.6.35 of this Statement, are subject to the following provisions of the Terms and Conditions: 1.1; 1.2; 1.3; 1.4; 1.5; 1.6; 2.3; 2.4; 3.2; 4.2; 5.1; 5.2; 5.3; 5.4; 6.1; 6.2; 7.2; 8.2; 10.1; 11.1; 12.1; 15.1; 16.1; 17.1; 18.1; 20.2; 23.2; 27.1; 27.2; 27.3; 27.4; and 27.5. 
1. General Provisions
1.1	Purpose and Effect 
	This Statement of Operating Conditions (Statement) contains the rates, rules and regulations under which gas service will be supplied by Columbia Gas of Ohio, Inc. to customers in Ohio pursuant to its Blanket Certificate of Limited Jurisdiction issued by the Federal Energy Regulatory Commission (FERC).
1.2	Revisions
	This Statement may be revised, amended, supplemented and otherwise changed from time to time as permitted by law, and such changes, when effective, shall have the same force and effect as the present Statement.
1.3	Application of Statement
	The Statement applies to any party or parties, or to their successors and assigns, lawfully receiving gas service from the Company under the rates set forth herein, and the receipt of gas service shall constitute the receiver a customer of the Company as the term is used herein.
1.4	Rules and Regulations
	The Rules and Regulations contained herein are a part of every contract or agreement for services, whether written, oral or implied, made by the Company, and govern all classes of service where applicable.  Subject to the approval of FERC, the Company shall have the right to interpret and determine the applicability of such Rules and Regulations.
1.5	Statement of Agents
	No agent or employee of the Company has authority to make any promise agreement or representation inconsistent with the provisions of this Statement.
1.6		Definitions 	
The following definitions shall apply to this Statement, unless otherwise clearly indicated:

1.6.1	Account - includes all gas consumption of the same individual, governmental entity or corporate entity (including subsidiaries and affiliates), that occurs at a single service address or is measured by a master meter.
1.6.2	Agent - means a Marketer that Customer has authorized to act on its behalf by executing the Company's Appointment of Agent form or a Customer acting on its own behalf.
1.6.3	Alternate Fuel Capabilities - means Customer has installed alternate fuel equipment, access to other gas sources, or has economically feasible access to other gas sources.
1.6.4	Annual Period - means the twelve-month period beginning on the first day of Customer's November billing cycle and ending on the last day of Customer's October billing cycle. 
1.6.5	Annual Transportation Volume - means the arithmetic average of the actual Customer account consumption for the thirty-six month period ending each October 31 billing cycle.
1.6.6	Authorized Daily Volume - means the volume of gas on any day that Columbia would deliver to Customer with no planned interruption of that volume.
1.6.7	Backup Service - means Standby Service available to all Transportation Service customers.
1.6.8	Business Day - is a day that is a weekday (Monday through Friday), excluding holidays.
1.6.9	Commercial Customer - is a Customer using gas through a single meter in commercial activities, including by not limited to, warehousing, distributing, or selling commodities, providing professional services, wholesale and retail stores, offices, office buildings, hotels, clubs, lodges, associations, restaurants, railroad and bus stations, banks, laundries, dry cleaners, mortuaries, garages for commercial activity, gasoline stations, theaters, bowling alleys, billiard parlors, motor courts, camps, bars, grills, taverns, retail bakeries, hospitals, schools, churches, religious and charitable institutions, governmental agencies, apartment buildings, rooming and boarding dwellings, residential hotels, multifamily row housing, doubles, and duplexes. The combination of commercial and residential accounts will be considered commercial if usage is half or more than half of the total service, and for all other situations where gas is supplied to consumers in two or more dwelling units designed for the primary purposes of residences.
1.6.10	Company - means Columbia Gas of Ohio, Inc. 
1.6.11	Company's Billing Cycle - means the Company's accounting revenue month. 
1.6.12	Customer - means any individual, governmental, or corporate entity taking Transportation Service hereunder. A Customer may have more than one Account, as defined herein. The Company's service under the applicable rate schedules is provided to a single Account.
1.6.13	Customer's Billing Cycle - means the monthly period that occurs between monthly meter readings or estimated readings taken by Company for billing purposes at Customer's facilities. 
1.6.14	Customer's Facilities - means the Customer's property, factories, and buildings where natural gas is being consumed. 
1.6.15	Daily Demand - means Customer demand on any day. 
1.6.16	Day or Gas Day - means the 24-hour period beginning at 9:00 a.m. Central Clock Time. 
1.6.17	Dekatherm or Dth - means one million British thermal units (Btu's). 
1.6.18	Design Demand - means the Customer demand on a day with Design Temperature.
1.6.19	Design Temperature - means the coldest daily temperature for which Columbia plans capacity and supply.
1.6.20	Flowing Supply - means gas delivered from sources other than storage, generally via firm or interruptible transportation capacity.  
1.6.21	High Priority - means the Customer has contracted for a better quality of service.  The order of interruption, which determines the quality of service, is as follows:  (1) All volumes exceeding Authorized Daily Volumes; (2) volumes consumed by or delivered to customers served under Rate Schedules LGS, FRLGTS and LGTS; (3) volumes consumed by or delivered to customers served under Rate Schedules GS, FRGTS, FRCTS and GTS; (4) Backup Service; (5) volumes consumed by or delivered to customers served under Rate Schedules SGS, SGTS and FRSGTS; and (6) non-Transportation Service human needs customers.
1.6.22	Industrial Customer - means a customer using gas in a process which either involves the extraction of raw or unfinished materials in another form or product through the application of heat or heat treating, steam agitation, evaporation, baking, extraction, drying, distilling, or other similar operations. 
1.6.23	Local Market Area - means a continuous, physically-interconnected system of Company-owned distribution piping through which the Company provides natural gas service to Customers in a discrete geographic area, utilizing one or more common points of delivery from interstate pipeline supplier(s). 
1.6.24	Local Usage Area - means an area of the Company's distribution system within which gas usage can be physically displaced from one customer to another without capacity.
1.6.25	Mcf -  means one thousand cubic feet of natural gas.
1.6.26	Marketer - means Gas supplier under the Company's Transportation Service program.
1.6.27	Maximum Daily Quantity (MDQ) - means a Customer's maximum estimated usage during a 24-hour period as determined by the Company in consultation with the Customer. Company will update the MDQ annually, based on the most recent historical Customer consumption data and work with Customers and their agents to develop an adjusted MDQ for those customers whose usage occurs primarily outside the winter season.
1.6.28	Pipeline Scheduling Point or PSP - means a single delivery point or set of delivery points grouped or designated by an upstream pipeline for purposes of scheduling gas supplies for delivery by such upstream pipeline and shall consist of the following: interconnections with Panhandle Eastern Pipe Line Company, Tennessee Gas Pipeline, North Coast Gas Transmission, LLC, and Columbia Gas Transmission, LLC. The interconnections with Columbia Gas Transmission, LLC include the Market Areas and Master List of Interconnections as defined in the General Terms and Conditions of the FERC Gas Tariff of Columbia Gas Transmission, LLC. As of December 2, 2009, the Columbia Gas Transmission, LLC Pipeline Scheduling Points included: 22 (Portsmouth); 23-1 (Toledo); 23-3 (Lima); 23-4 (Alliance); 23-5 (Columbus); 23-6 (Dayton); 23-8 (Mansfield); 23-9 (Ohio Misc.); 23N-2 (Parma); 23N-7 (Sandusky); 24-35 (Pittsburgh); and 24-39 (New Castle).

1.6.29	PUCO or Commission - means Public Utilities Commission of Ohio.

1.6.30	Points of Receipt - means those measurement locations where Customer-owned gas is delivered into Company's system.

1.6.31	Storage or Storage Capacity -  means TCO Firm Storage Services (FSS) and Storage Service Transportation (SST) capacity, unless otherwise specified.

1.6.32	Standby Service - means a type of backup service available to LGTS Customers served under this Statement which will make gas available at all times except when interruption is necessary due to force majeure conditions or where service to human needs customers is threatened.

1.6.33	TCO - means Columbia Gas Transmission, LLC.


1.6.34 LGTS Customer - means a non-residential customer that qualifies for service under Section 20.1 of this Statement.
1.6.35 LDC Customer - means a local gas distribution company that qualifies for service under Section 20.2 of this Statement.
1.6.36 Renewable Natural Gas or "RNG" - means gas, consisting primarily of methane, which (1) is derived from biogas produced by landfills, animal farms, wastewater treatment plants, or other sources, and (2) is subsequently processed by removing carbon dioxide, nitrogen, and other constituents in order to convert the biogas into pipeline-compatible gaseous fuel.
2. Requirements for Transportation Service
2.1	Conditions of Service 

	All LGTS Customers or their Agents must have a personal computer which is capable of receiving notices from Company of any consumption limitations or interruptions imposed pursuant to Parts 7 or 8, twenty-four hours a day, seven days a week. All Customers must either subscribe to (1) Banking and Balancing Service or (2) be placed on a daily cash out provision. Customer's election in this regard shall be set forth in Customer's Transportation Service Agreement.

2.2 Daily Measuring Device  

All LGTS customers that are required to install a daily measuring device under the terms of a service for which the Customer has contracted, or who elect to install a daily measuring device, must pay all costs associated with the purchase and installation of a Daily Demand reading meter (i.e., a meter equipped with an electronic measurement (EM) or automatic meter reading (AMR) device) and associated telemetering equipment. Such customers shall also provide, pay for, and maintain a dedicated telephone line and the alternating-current electric power necessary to operate such electronic measurement and telemetering equipment. The meter, electronic measurement device (EM or AMR), and associated telemetering equipment shall be and remain the property of the Company.

2.3 Internet-Based Website 

Customer or its Agent shall have access to Company's Internet-Based Website. 

2.4 Creditworthiness Evaluation

	Company shall not be required to initiate service on behalf of any customer or provide service or continue service for any customer who is or has become insolvent or who, at Company's request, fails within a commercially reasonable time to demonstrate creditworthiness as determined by the Company. Customer may receive service if customer furnishes good and sufficient security as determined by Company in the exercise of reasonable judgment. For the purpose of this section, the insolvency of a customer shall be evidenced by the filing by the customer or any parent entity thereof of a voluntary petition in bankruptcy or the entry of a decree or order by a court having jurisdiction over the premises adjudging the customer bankrupt or insolvent or approving, as properly filed, a petition seeking reorganization, arrangement, adjustment, or composition in respect of the customer under the Federal Bankruptcy Act or any other applicable federal or state law or appointing a receiver, liquidator, assignee, trustee, sequestrator (or other similar official) of the customer or of any substantial part of its property or the ordering of the winding-up or liquidation of its affairs, with said order or decree continuing unstayed and in effect for a period of sixty (60) days.	
 
3. Service Agreement
3.1	Before commencing service hereunder, each LGTS Customer shall execute a Service Agreement in the form contained in Section 23.1 of this Statement. The Service Agreement shall set forth, among other things: (1) the point(s) of receipt at which Company will accept delivery of Customer's gas; (2) the point(s) at which Company will redeliver gas to Customer's facilities; (3) Customer's Maximum Daily Quantity and Annual Transportation Volume, which are subject to change annually; (4) daily meter reading service election, and (5) the specific services and levels of such services for which customer has contracted.
	
	The benefits and obligations of the Service Agreement shall begin when Company commences to provide Transportation Service.  It shall inure to and be binding upon the successors and assigns, survivors, and executors or administrators, as the case may be, of the original parties thereto, respectively, for the full term thereof.  However, no agreement for service may be assigned or transferred without the written consent of or approval of the Company, which shall not unreasonably be withheld.
3.2 	Before commencing service hereunder, each LDC Customer shall execute a Service Agreement in the form contained in Section 23.2 of this Statement. The Service Agreement shall set forth, among other things: 1) the point(s) of receipt at which Company will accept delivery of Customer's gas, which may include periodic inventory transfers from interstate pipeline storage; (2) the point(s) at which Company will redeliver gas to Customer's facilities; and (3) Customer's Maximum Daily Quantity and Annual Transportation Volume.
	
	The benefits and obligations of the Service Agreement shall begin when Company commences to provide Transportation Service.  It shall inure to and be binding upon the successors and assigns, survivors, and executors or administrators, as the case may be, of the original parties thereto, respectively, for the full term thereof.  However, no agreement for service may be assigned or transferred without the written consent of or approval of the Company, which shall not unreasonably be withheld.

4. Deliveries of Customer-Owned Gas

4.1	LGTS Customers. Subject to the limitations of Company's upstream capacity contracts or pipeline capacity in its system and its service obligations to other higher priority customers, Company will accept deliveries of Customer's gas at the point(s) of receipt for redelivery to Customer's facilities, in Mcfs, less unaccounted-for gas.  Such gas volumes delivered to Company and redelivered to Customer shall be limited to the Customer's Annual Transportation Volume and Maximum Daily Quantity for each facility.  These volume levels shall represent the actual expected requirements of Customer's facilities and may be exceeded only with the prior consent of Company, which shall not be unreasonably withheld.

	The volumes of Customer-owned gas transported by Company, including banked volumes, to Customer at its facilities during each monthly billing cycle will be considered the first gas through the Customer's meter.

4.2	LDC Customers. Subject to the limitations of Company's upstream capacity contracts or pipeline capacity in its system and its service obligations to other higher priority customers, Company will accept deliveries of Customer's gas at the point(s) of receipt for redelivery to Customer's facilities, or by periodic inventory transfer from interstate pipeline storage, in Mcfs, less unaccounted-for gas.  Such gas volumes delivered to Company and redelivered to Customer shall be limited to the Customer's Annual Transportation Volume and Maximum Daily Quantity for each facility, plus such additional volumes as the Company, in its judgment, authorizes Customer to transport. If gas is delivered to Company by periodic inventory transfer, such transfers shall occur monthly or at such greater interval as Company, in its judgment, may allow.
5. Measurement

5.1	Heat Content Adjustment  

Company receives Customer's gas from an interstate pipeline on a Dekatherm basis.  Company will make a heat content adjustment in accordance with the procedures set forth below in order to deliver to Customer volumes of gas, in Mcfs, equal in heat content to the gas delivered to Company for the account of Customer.  The average monthly heating value of gas measured and calculated by the pipeline which delivers Customer's gas to Company will be used each billing month to establish the heating value of the gas delivered by Company to Customer.  If, however, locally produced gas or gas from pipelines other than the delivering pipeline is introduced into Company's pipeline serving Customer's facilities, so as to raise a question as to the applicability of the heating value determined by the delivering pipeline, either Company or Customer may request that gas samples be taken to determine the heating value of the gas received by Customer at its facilities.  The following provisions will apply in the event either party elects to have gas samples taken:

A.	The party requesting the sample(s) will pay all costs connected with obtaining the sample(s) and having the sample(s) analyzed.

B.	The gas sample(s) shall be obtained at or in the vicinity of Customer's facilities during normal operating hours of the facilities.

C.	The gas sample(s) will be analyzed at a Company testing facility or at a testing facility approved by the Company.

D.	If the analysis is done by an outside testing facility, the testing facility will forward the results directly to Company and Customer, using a format provided by Company for recording the results of the analysis.  If Company performs the analysis, the Company testing facility will forward the results directly to Customer.

E.	Multiple samples taken during any billing month will be averaged to obtain a Btu value, which will be applied only for that particular billing month.  No retroactive adjustments based on Btu readings obtained in a current billing month will be made to billings for any prior month.

F.	The average Btu value obtained from sample(s) during any billing month shall be used to determine the volumes delivered by Company to Customer only if such Btu value is more than 103% or less than 97% of the Btu without adjustment for water vapor content value provided by the delivering pipeline for that month.  Otherwise the delivering pipeline's Btu value will be used.

	When Company receives Customer's gas directly into its system, from point(s) of receipt other than an interstate pipeline, on an Mcf basis rather than a Dekatherm basis, no heat content adjustment shall be made.  Company will redeliver to Customer volumes of gas equal to the Mcf volume of gas delivered to Company by Customer.

5.2	Measurement at Point(s) of Receipt with an Interstate Pipeline

When Company receives Customer's gas at a point(s) of receipt with an interstate pipeline, all measurement shall be performed in accordance with the terms of Company's agreement with the interstate pipeline and shall be conclusive for purposes of this tariff.
5.3.	Measurement at Other Point(s) of Receipt

When Company receives Customer's gas directly into its system, from point(s) of receipt other than those with an interstate pipeline, and company owns the measuring station, then Company shall read the meter, furnish, place and remove all recording charts, and calculate the deliveries at no cost to the Customer except as provided herein.

Should Customer challenge the accuracy of the measuring device or devices used, Company shall test the meter.  A representative of Customer may be present at the test.  If the measuring equipment is found to be in error, and the resultant aggregate error in computed deliveries at the recording rate corresponding to the average hourly rate of gas flow for the period since the preceding test is not more than two percent (2%), then previous deliveries shall be considered accurate, and Customer shall pay the cost of testing the meter.  If, however, any measuring equipment is found to be in error, and the resultant aggregate error in computed deliveries exceeds the two percent (2%) tolerance, then the previous computed deliveries shall be adjusted by Company to zero error and the cost of testing the meter shall be borne by Company.  Such adjustment shall be made for a period not to exceed thirty (30) days prior to the date of challenge by Customer.  All equipment shall, in any case, be adjusted at the time of test to record correctly.

	Upon written request from Customer, Company shall forward copies of meter charts to Customer for inspection.  Company shall keep the original meter charts on file for three (3) years after the date of delivery, during which time they will be open for inspection by Customer upon prior request.

Customer's gas delivered directly into Company facilities shall be at commercial operating pressures sufficient to deliver volumes at regulated pressures at the point(s) of receipt.

5.4	Accounting for Monthly Deliveries

Meter reading dates at the point(s) of receipt may not match the Customer's billing cycle.  However, Company's accounting system used for crediting Customer's gas to Customer's account will be applied on a consistent basis, and will be used by Company in determining deliveries, volume bank levels, and deficiencies in deliveries.

6. Quality of Gas Delivered to Company

6.1	Quality of Gas at Point(s) of Receipt with an Interstate Pipeline

Gas delivered by or on behalf of Customer to Company at point(s) of receipt with an interstate pipeline shall conform to the interstate pipeline's gas quality standards.

6.2	Quality of Gas at Other Point(s) of Receipt

Gas delivered by or on behalf of Customer to Company at point(s) of receipt other than an interstate pipeline shall be commercially free from oil, water, air, salt, dust, gum, gum-forming constituents, harmful or noxious vapors, or other solid or liquid matter which might interfere with its merchantability or cause interference with proper operation of the lines, regulators, meters, and other equipment of Company or its customers.

	Customer will indemnify and hold Company harmless from any suits, actions, debts, accounts, damages, costs, losses and expenses, including but not limited to, attorneys' fees and expenses, arising from personal injury, death, or damage to Company's equipment or facilities or arising from personal injuries, death, or damage to the facilities, products, or equipment of Company's other customers or third parties, or arising from additional hours worked by Company or its other customers or third parties, caused as a result of Customer's gas failing to meet the quality specifications set forth in this Statement.  

	To assure that the gas delivered by Customer to Company conforms to the quality specifications of this Section, Customer's gas shall be analyzed at the point(s) of receipt from time-to-time as Company deems necessary.  The gas delivered shall conform to the following gas quality specifications:



	Gas Quality Specifications1
Gas Quality Parameter Specification
   Low
   High
   Heat Content (Btu/scf)2
   967
   1110
   Wobbe Number (+/- 4% from historical average gas, which is 1341 - 1383)
   1287
   1400
   Water Vapor Content (lbs./MM scf)
   
   &lt;7
   Product Gas Mercaptans (ppmv, does not include gas odorants)
   
   &lt;1 
   Hydrocarbon Dew Point, (?F) CHDP
   
   15 
   Hydrogen Sulfide (grain/100 scf)
   
   0.25
   Total Sulfur (grain/100 scf)
   
   20
   Total Diluent Gases including the following individual  
   constituent limits (% vol.):                                                      
   Carbon Dioxide (CO2) 2% max
   Nitrogen (N) 4% max
   Oxygen (O2) 1% max
   Carbon Monoxide (CO) 2% max
   
   5%
   Gas Temperature (?F)
    NOTE: Dependent upon location of gas supply injection and material
   of system at injection point.
   40
   120 (metallic)
   73 (plastic)
   Hydrogen (% vol.)
   
   0.3%
   
   
   Mercury
   &lt;.08mg/m3
   
   
   Arsenic (As)
   &lt;0.19 mg/m3
   Copper (Cu)
   &lt;0.60 mg/m3
   Total Siloxanes 
   Comm Free(&lt;0.5 mg Si/m?)
   Ammonia
   Comm Free(&lt;10 ppmv)
   
   
   Halocarbons (total measured halocarbons)3
   &lt;3 ppmv

   Aldehydes/Ketones
Aldehydes/Ketones must be at a level that does not unreasonably interfere with odorization of Company's gas.
   
   

1. For purposes of this Statement, "Commercially Free" is defined as "Not Detectable" relative to typical pipeline gas flowing at the interconnect location that results in RNG being compositionally equivalent to flowing supplies.  The analytical method, associated detection threshold, and testing facility shall be determined by the Company.  Periodic testing will be required where potential Constituents of Concern are reasonably expected. 

2. Higher Heating Value is dry, @ 14.73 psia 60?F.


3. Company may refuse to accept gas containing lower levels of halocarbons if Company reasonably determines that such gas is causing harm to its facilities or the gas-burning equipment of its customers, or is adversely affecting the operation of such facilities. In addition, Company and Customer may agree upon a different specification for halocarbons, provided that (1) Customer has delivered RNG to Company for a period of at least five years prior to the effective date of this section, and (2) Customer has demonstrated, to the reasonable satisfaction of Company, that RNG meeting the agreed-upon specification will not adversely affect (a) the quality of public utility service provided by Company; (b) the operation of Company's equipment; or (c) the operation of the gas-burning equipment of Company's customers. 


As used in the foregoing table, "Btu" means British thermal unit; "scf" means standard cubic foot; "MM" means one million; "CHDP" means cricondentherm hydrocarbon dew point; "ppmv" means parts per million by volume; and "ppbv" means parts per billion by volume.

The Total Heating Value of the gas shall be determined by taking samples of the gas at the point(s) of receipt at such reasonable times as may be designated by Company.  The Btu content per cubic foot shall be determined by an accepted type of calorimeter or other suitable instrument for a cubic foot of gas at a temperature of sixty (60) degrees Fahrenheit when saturated with water vapor and at a pressure of 14.73 psia.  The Btu determination designated by Company shall be made by Company at its expense.  Any additional Btu determinations requested by Customer shall be at Customer's expense.

Company may, on a not-unduly discriminatory basis, accept volumes of gas, including renewable natural gas, that fail to meet the quality specifications set forth in this Statement, if Company determines that it can do so without adversely affecting (1) system operations; (2) the operation of the Company's equipment; (3) the operation of gas-burning equipment of Company's other customers; or (4) the quality of public utility service provided by Company.  In deciding whether to accept such volumes of gas, the Company shall consider, without limitation, (1) which specifications are not being met; (2) the sensitivity of customer equipment and potential impact on such equipment; (3) Customer's plan to improve gas quality; (4) the effect on system supply; (5) interchangeability; (6) the anticipated duration of the quality deviation; and (7) the blending ratio between geological natural gas and RNG in the area of Company's distribution system where RNG is being injected.

	Company shall not be obligated to accept gas which it reasonably believes may adversely affect the standard of public utility service offered by Company, or gas which it reasonably believes may adversely affect the operation of its equipment or the gas-burning equipment of its customers.

	If any gas delivered hereunder fails to meet the quality specifications set forth herein, Company may, at any time, elect to refuse to accept all or any portions of such gas until Customer brings the gas into conformity with such specifications.

6.3 	Gas Quality Testing

Gas delivered to Company must be continuously monitored, at Customer's expense, to ensure it meets the quality specifications set forth in Section 6.2. Constituents that are not continuously monitored using currently-available technology must be tested in a laboratory once per year at Company's expense. If the quality of the gas, based on a laboratory test, does not meet the standards in Section 6.2, the gas must be tested in a laboratory monthly, at the Customer's expense, until the gas meets the standards in Section 6.2 for three consecutive months or the Customer otherwise demonstrates to the Company, in the Company's reasonable discretion, that it has remediated the constituent deficiency. Such tests shall include only the test method or methods that tests for the specific standard or standards that were not met, but Company may consider any results provided by such test method(s). Company will provide Customer with at least three (3) business days' notice of the tests described in this Section 6.3, and Customer will be given the opportunity to be present and observe such tests. Company may, at its option, require Customer to install automatic shutoff devices, at Customer's expense, to prevent gas that fails to meet the quality specifications set forth in Section 6.2 from entering Company's pipeline system.

The scope of all gas testing shall follow the parameters below based on the origin of the gas. The parameters for each origin of gas are based on the source of gas and likelihood of a constituent being present in the source gas. The Company has the discretion to test for additional constituents on the list below, notwithstanding the origin of the gas, if the Company reasonably believes those constituents may be present.



Gas Quality Testing Parameters and Scope1
Gas Quality Parameter
Testing Method2
Origin of Gas


Geological 
Landfill
Agricultural and Clean Energy
Waste Water Treatment Plant
   Heat Content 
   In-field
X
X
X
X
   Wobbe Number 
   In-field
X
X
X
X
   Water Vapor Content 
   In-field
X
X
X
X
   Product Gas Mercaptans 
   In-field
X
X
X
X
   Hydrocarbon Dew Point
   In-field
X
X
X
X
   Hydrogen Sulfide 
In-field or Lab
X
X
X
X
   Total Sulfur
In-field or Lab
X
X
X
X
   Total Diluent Gases including:                                                      
   Carbon Dioxide (CO2) 
   Nitrogen (N)
   Oxygen (O2) 
   In-field
X
X
X
X
   Hydrogen
Lab
X
X
X
X
   Total Bacteria
Lab
X
X
X
X
   Mercury
Lab
   
X

X
   Other Volatile Metals (Lead)
Lab

X
   
   
   Siloxanes
Lab

X

X
   Ammonia
Lab

X

X
   Non-Halogenated Semi-Volatile and Volatile Compounds
Lab

X

X
   Halocarbons (total measured halocarbons)
Lab

X

X
   Aldehydes/Ketones
Lab

X


   PCB's/Pesticides
Lab

X



1. Constituents to be tested for each category of gas are indicated with an "X". 

2. Testing method is defined as "In-Field" or "Lab".  "In-Field" testing requires the Customer's use of readily available, continuously testing, industry-standard equipment, which has been reviewed and approved by Company. "Lab" testing requires the Customer and the Company to coordinate the sampling of gas and sending it to a laboratory for testing and analysis.


	
7. Authorized Daily Volume

7.1	Authorized Daily Volume (LGTS Customers)

Customer's Authorized Daily Volume on any day consists of the sum of Customer's transported volumes (as determined herein) plus any Backup Service for which Customer has contracted, plus any additional volumes that Company, in its judgment, authorizes Customer to use on that day.  Delivery of Customer's Authorized Daily Volume is firm, with no planned interruptions, except as provided in Section 8.1 hereof.  Consumption at Customer's facility in excess of the Authorized Daily Volume is interruptible service, and upon notice to Customer, Company may require Customer to reduce consumption to Customer's Authorized Daily Volume whenever Company, in its judgment, deems it necessary to do so.  Company may, at its option, require such reductions in consumption by Large General Transportation Service Customers prior to imposing similar reductions on Small General and General Transportation Service Customers.

For purposes of this section, the portion of Customer's Authorized Daily Volume attributable to transported gas delivered to Company shall consist of two parts.  The first part shall consist of volumes (adjusted for unaccounted-for gas) delivered at receipt points where the upstream transporter, producer, or other delivering entity does not report deliveries to Company on a daily basis.  The portion of Customer's Authorized Daily Volumes attributable to this part shall be determined by dividing the volume of gas delivered to Customer in the most recent month for which information is available by the number of days in that month.

The second part shall consist of volumes (adjusted for unaccounted-for gas) delivered by upstream transporters which report Customer's deliveries to Company on a daily basis.  If the upstream transporter's reporting system is acceptable to Company, Company may, at its option, utilize such system to determine Customer's deliveries on any day.  If Company elects not to utilize such reporting system, it shall determine Customer's deliveries using the best information available, as determined by Company.

In the event actual gas deliveries by Company to Customer are in excess of the Authorized Daily Volume on any day in which the Company requires Customer to limit gas consumption to its Authorized Daily volume, Customer shall be liable for all penalties and fines incurred by Company as a result of usage in excess of the Authorized Daily Volume.  

The Company will notify Customers of any consumption limitations imposed by the Company pursuant to this Part 7 by posting such notice on its designated internet based website.

7.2	Authorized Daily Volume (LDC Customers)

	Customer's authorized daily volume on any day consists of transported volumes (as determined herein) plus any additional volumes that Company, in its judgment, authorizes Customer to transport on that day.  Delivery of Customer's authorized daily volume is firm, with no planned interruptions, except as provided in Section 8.2 hereof.


8.  Interruption

8.1	Interruption (LGTS Customers)

Notwithstanding the provisions of Section 7 hereof, all deliveries by Company to Customer, including Customer's Authorized Daily Volumes, are subject to partial or complete interruption during force majeure situations, herein defined to mean acts of God, strikes, lockouts, or other labor disturbances, acts of a public enemy, war, blockages, insurrections, riots, epidemics, fire, storms, floods, washouts, civil disturbances, explosions, breakage or accidents to machinery or pipelines, freezing of wells or pipelines, partial or entire failure of such wells, or any other cause not otherwise provided for herein, whether of the kind herein enumerated or otherwise, not reasonably within the control of Company.  All deliveries are also subject to complete or partial interruption in accordance with the definition of High Priority whenever service to residential and other high priority customers downstream of the same PSP is threatened.
In addition, where a Transportation Service Customer or its Agent delivers gas to Company at a receipt point that is located downstream of a PSP other than the PSP in which Customer's facilities are located, such delivery shall be considered a delivery by displacement.  Company may interrupt deliveries by displacement, up to 100% in the case of gas delivered to Company by an interstate pipeline, and up to 75% in the case of intrastate gas delivered directly to Company's facilities, where such interruption is necessary to prevent Company from exceeding contractual limitations with its interstate pipeline suppliers, including, but not limited to, any maximum daily delivery obligation (MDDO) or Design Daily Quantity (DDQ), provided, however, that Company will use its best efforts to make deliveries by displacement, and provided, further, that Company will not interrupt deliveries by displacement pursuant to this paragraph unless (a) such interruption is necessary to enable Company to maintain deliveries to high priority customers located downstream of the same PSP, or (b) Company's interstate pipeline supplier has directed Company to limit its deliveries to the applicable MDDO or DDQ in order to enable the supplier to maintain firm deliveries on its pipeline system.  

Company may, at its option, interrupt Large General Transportation Service Customers prior to interrupting Small General and General Transportation Service Customers.

When Company interrupts deliveries pursuant to this section, Customer shall be liable to Company for all fines and penalties incurred by Company as a result of any failure by Customer to interrupt its usage when directed to do so.
The Company will, on a best efforts basis, attempt to notify Customer of any interruption imposed by the Company pursuant to this Part 8.
8.2	Interruption (LDC Customers)
	Notwithstanding the provisions of Section 7.2 hereof, all deliveries by Company to Customer, including Customer's Authorized Daily Volumes, are subject to partial or complete interruption during force majeure situations, herein defined to mean acts of God, strikes, lockouts, or other labor disturbances, acts of a public enemy, war, blockages, insurrections, riots, epidemics, fire, storms, floods, washouts, civil disturbances, explosions, breakage or accidents to machinery or pipelines, freezing of wells or pipelines, partial or entire failure of such wells, or any other cause not otherwise provided for herein, whether of the kind herein enumerated or otherwise, not reasonably within the control of Company.  
9. Deficiencies in Deliveries to Company

9.1	Deficiencies of Deliveries to Company

Any volumes of gas that are consumed by Customer in any monthly billing cycle that are in excess of the sum total of: (1) Customer's Volume Bank from the previous month, plus (2) any volumes delivered to Company by Customer or its Agent for that billing cycle, (3) any volumes available to Customer via Gas Transfer Service, (4) any volumes available to Customer via Monthly Bank Transfer Service, and (5) any volumes available to Customer under a Backup Service, shall be considered a deficiency in deliveries.

10. Warranty of Title

10.1	Warranty of Title

Customer warrants that it will have good and merchantable title to all natural gas delivered to Company for redelivery to Customer's facilities, that such gas will be free and clear of all liens, encumbrances and claims whatsoever, and that it will indemnify Company and hold it harmless from all suits, actions, debts, accounts, damages, costs, losses and expenses arising from or out of adverse claims of any and all persons to said gas.

11. Late Payment Charge

11.1	Late Payment Charge

	Upon next scheduled billing date, a late payment charge will be applied to the unpaid balance. The amount of the late payment charge is set forth in the Company's Statement of Currently Effective Rates.

12. Charges for Third Party Services

12.1   Charges for Third Party Services

If furnishing service to Customer pursuant to this tariff requires Company to use Transportation Service provided by another entity, any cost incurred by, or billed to Company with regard thereto, shall be billed to Customer by Company and paid by Customer.  Such costs shall include, without limitation, transportation or delivery charges, retainage for company use and unaccounted-for gas, filing fees, and penalties incurred as a result of gas volume imbalances or other factors set forth in the applicable rate schedule or contract of such other entity.  Customer shall also reimburse Company for any filing fees paid by Company to another entity when necessary to commence or continue gas transportation service to Customer.

13. Provision for Human Needs and Public Welfare Customers

13.1	Provision for Human Needs and Public Welfare Customers

Customers who are Human Needs and Public Welfare Customers, as defined herein, are required to have installed operable alternate fuel equipment and available fuel quantities or contract with Company for Backup Service.  Human Needs Customers on Transportation Service must inform Company if they have alternate fuel capabilities, or they will be billed the otherwise applicable Backup Service charges to meet 100% of their estimated usage needs.  This requirement shall not apply to any meter that serves only uses which are not classified as Human Needs and Public Welfare Customers.

"Human Needs and Public Welfare Customers" means any account, including Cooperative member customers, where the use of natural gas is for space heating of a permanent residence or for use by a governmental agency or public service organization which provides emergency or life support services. Human Needs Customers shall include, but not be limited to hospitals, nursing homes, and residential correctional institutions, but shall exclude schools, hotels, and motels.

14. Optional Services

14.1	Optional Services

Company may provide optional services to LGTS Customers as specified in the applicable rate schedules.

15. Termination of Service

15.1 	Termination of Service

Company may terminate service to Customer hereunder for any of the following reasons:

A. Any violation of or refusal by Customer to comply with its Service Agreement or any tariff, rule, or regulation on file with the PUCO that applies to Customer's service;

B. Any use of gas by Customer in a manner detrimental to the service of other customers;

C. When providing service is in conflict or incompatible with any order of the PUCO, the laws of the State of Ohio or any political subdivision thereof, or the laws or rules of the federal government or any of its agencies;

D. When Customer has moved from the premises;

E. When supplying gas to Customer creates a dangerous condition on Customer's premises or where, because of dangerous conditions beyond customer's premises, termination of the supply of gas is reasonably necessary.  Service will not be restored until such dangerous condition or conditions have been corrected;
F. If Customer resorts to fraudulent practice in obtaining the gas supplied, or is the beneficiary of any such fraudulent practice, or Company's meter, metering equipment, or property used to supply service has been damaged by Customer, its servants or agents, in which case service will not be restored until Customer has given satisfactory assurance that such fraudulent or damaging practice will be discontinued, and has paid Company an amount estimated by Company to be reasonable compensation for service fraudulently obtained and not paid for and for any damage to property of Company, including any cost to repair the damage;
G. For repairs, provided that Customer will be given 24 hours written notice prior to scheduled maintenance interruptions in excess of six hours;
H. Upon the request of Customer in accordance with its Service Agreement; 
I. For nonpayment of charges owed Company, including nonpayment of late payment charges or security deposits and financial assurances required as a condition for continued service, upon five (5) days written notice to Customer;
J. When   an LGTS Customer or its Agent has failed to deliver any gas to the Company for a span of more than five consecutive days in any billing month when it can be demonstrated that Customer consumed gas on one or more days during such span of time, and Customer did not have sufficient volumes in its Volume Bank to cover its consumption during that same time frame or Customer has sufficient volumes in its Volume Bank to cover its consumption but did not have access to the Volume Bank due to Columbia's issuance of an OMO and/or OFO.
K. When an LDC Customer that has agreed to deliver gas to Company at one or more Pipeline Scheduling Points has failed to deliver any gas to the Company for a span of more than five consecutive days and it can be demonstrated that Customer took deliveries of gas on one or more days during such span of time; or when an LDC Customer that has agreed to deliver gas to the Company by periodic inventory transfer has failed to make such a transfer within ten days after such transfer is due, and that Customer took deliveries of gas on one or more days during that span of time.
L. When Customer delivers gas to Company that fails to meet one or more of the gas quality specifications set forth in Section 6.1, 6.2, or 6.3 of this Statement, and Customer is unable or unwilling to bring its gas deliveries into compliance with those specifications within a reasonable period of time.  Before termination, Company shall give Customer written notice of its failure to meet the gas quality specifications and a reasonable period of time to bring its gas deliveries into compliance with those specifications. 
16. Operation and Maintenance Costs

16.1 Operation and Maintenance Costs
When Company receives Customer's gas directly into its system from point(s) of receipt other than an interstate or intrastate pipeline, and Company owns the measuring station, Company shall assume all responsibilities associated with the operation and maintenance of said measuring station. Normal operation and maintenance such as pressure checks, grass cutting, routine inspections and routine maintenance will be performed by Company at its expense. Customer shall reimburse Company for major and unusual non-recurring operation and maintenance costs. Customers shall pay for such costs within thirty (30) days of the billing date.
17. Other Rules and Regulations

17.1  	Other Rules and Regulations

Except to the extent superseded herein, Sections I through IV of Company's Rules and regulations Governing the Distribution and Sale of Gas, as approved by the PUCO, and such other Commission rules and guidelines as are applicable shall apply to all Transportation Service provided hereunder. 

18. 	Obligation to Serve Following Termination of Transportation Agreement

18.1	Obligation to Serve Following Termination of Transportation Agreement

Following the cancellation of any Service Agreement and the termination of Transportation Service hereunder, Company shall have no obligation to deliver gas to Customer.  

19. Capacity Release Option

19.1	Capacity Release Option

Columbia will make available to all LGTS Customers the opportunity to contract for any released pipeline capacity that Columbia intends to post on pipeline bulletin boards.

20. Transportation Service and Rates
20.1	Large General Transportation Service (LGTS)
A. 	Applicability
Applicable in all territories served by Company
B.	Availability
Available to any non-residential customer accounts, provided that:
1. Service can be rendered within the limits of the Company's operating conditions and facilities;
2. Human Needs Customer accounts that comply with Part 13.1 of this Statement and that have consumed during one of the two most recent Annual Periods (November through October billing cycles) at least 18,000 Mcf, or Customer presents evidence demonstrating to Company's satisfaction that it will consume at least 18,000 Mcf per year during future Annual Periods. In addition, at least 50% of Customer's annual consumption must be consumed in the seven billing months of April through October, or Customer has previously executed a Commercial Gas Service Agreement with Company, which was in effect immediately prior to the initiation of service hereunder.
3. All other Customer accounts with consumption during one of the two most recent Annual Periods (November through October billing cycles) was at least 18,000 Mcf, or Customer presents evidence demonstrating to Company's satisfaction that it will consume at least 18,000 Mcf per year during future Annual Periods. In addition, at least 50% of Customer's annual consumption must be consumed in the seven billing months of April through October, or Customer has previously executed a Commercial or Industrial Gas Service Agreement with Company, which was in effect immediately prior to the initiation of service hereunder.
4. Company may, at its option, waive the requirement that 50% of the annual consumption occur during the seven months of April through October where such waiver is necessary in order to serve a load which would not otherwise be served by Company, provided that at least 30% of Customer's annual consumption occurs during the months of April through October.
5. Service is subject to the Rules and Regulations as set forth in Part Nos. 1 through 27 of this Statement.
C. 	Character of Service

	On any day, Company shall deliver Customer's Authorized Daily Volume of gas (as defined in Part 7 hereof) on a firm basis, with no planned interruption.  However, Customer's Authorized Daily volume is interruptible when such interruption is necessary due to force majeure conditions, or where service to Human Needs Customers is threatened.  

In addition, where Customer-owned gas is being delivered to the Company at a city gate which does not serve the market area in which Customer's facilities are located, that portion of Customer's Authorized Daily Volume is interruptible as described in Part 8 hereof.

D. Rates
	
	The rates for service are set forth in the Company's Statement of Currently Effective Rates.

F. Billing Adjustments

For all gas delivered hereunder, the bill shall be computed to reflect the following billing adjustments: 

(1) PIP Plan Tariff Schedule Rider;
 (2) Gross Receipts Tax Rider; 
 (3) Excise Tax Rider; 
(4) Infrastructure Replacement Program Rider; and
(5) Infrastructure Development Rider.

The rates for each of those riders are set forth in the Company's Statement of Currently Effective Rates.


G. Unaccounted-For Gas
Company will retain a portion of all volumes delivered to it for the account of Customer to offset unaccounted-for gas as a result of transporting gas volumes to Customer. The retention rate is set forth in the Company's Statement of Currently Effective Rates.

20.2 	Local Gas Distribution Company (LDC) Service
      A. Applicability
         Applicable in all areas served by the Company.
      B. Availability
Available to any local gas distribution company holding a service area determination from FERC under Section 7(f) of the Natural Gas Act authorizing that company to receive gas supplies at a point or points within the State of Ohio and transport those supplies outside Ohio for consumption in another state, provided that (1) service can be rendered within the limits of the Company's operating conditions and facilities, and (2) the anticipated annual volumes to be transported do not exceed five thousand (5,000) Mcf.
C. 	Character of Service

	On any day, Company shall deliver Customer's Authorized Daily Volume of gas (as defined in Part 7 hereof) on a firm basis, with no planned interruption.  However, Customer's Authorized Daily volume is interruptible when such interruption is necessary due to force majeure conditions.  

	In addition, where Customer-owned gas is being delivered to the Company at a city gate which does not serve the market area in which Customer's facilities are located, that portion of Customer's Authorized Daily Volume is interruptible as described in Part 8 hereof.

D. Rates
	
	The rates for service are set forth in the Company's Statement of Currently Effective Rates.

E. Billing Adjustments

For all gas delivered hereunder, the bill shall be computed to reflect the following billing adjustments: 

(6) PIP Plan Tariff Schedule Rider;
(7) Gross Receipts Tax Rider; 
(8) Excise Tax Rider; 
(9) Infrastructure Replacement Program Rider; and
(10) Infrastructure Development Rider.

The rates for each of those riders are set forth in the Company's Statement of Currently Effective Rates.


F. Unaccounted-For Gas
Company will retain a portion of all volumes delivered to it for the account of Customer to offset unaccounted-for gas as a result of transporting gas volumes to Customer. The retention rate is set forth in the Company's Statement of Currently Effective Rates.



21. Standby Service

21.1 	 Applicability

Applicable throughout the territory served by Company.

21.2	Availability

A. Standby Service is a service available to Transportation Service Customers under Rate Schedule LGTS.

B. Standby Service, if approved by Company and contracted for by Customer under this tariff, will make gas service available at all times, except where interruption is necessary due to force majeure conditions (as defined in Part 8 hereof) or where service to Non-Transportation Service Human Needs customers is threatened, up to the Daily and Seasonal Volumes contracted for as set forth in the Service Agreement, and reserves for Customer the right to purchase Standby Service gas.

C. Daily Standby Volume. Customer is entitled to use and Company agrees to deliver gas volumes to Customer up to the Daily Standby Volume (adjusted for unaccounted-for gas) on any day during the term of the Service Agreement.

D. Annual Standby Volume.  Customer is entitled to purchase and Company is obligated to deliver to Customer the Annual Standby Volume as indicated in the Service Agreement, less unaccounted-for gas.  The minimum Annual Standby Volume is for an LGTS Customer shall be determined by multiplying the Daily Standby Volume times 75.5.

E. Customer may request Standby Service, or a change in the level of Standby Service, upon written notice to Company on or before the preceding January 2.  Company will approve or deny any request by Customer, to be effective as of the beginning of its April billing cycle, on or before the preceding January 2, as soon thereafter as practicable.

21.3 Charges

	The charges for Standby Service are set forth in the Company's Statement of Currently Effective Rates.

22. Gas Transfer Service

22.1 	Applicability

This service is applicable throughout the entire service territory served by Columbia.
22.2 	Availability

	This is an optional service available to all LGTS Customers on Columbia Gas of Ohio's system, and/or their Agents, served under Rate Schedule LGTS that provides for the transfer of gas quantities from one Customer/Agent ("transferor") account to another Customer/Agent ("transferee") account, in accordance with the following:

A. Each transfer must occur such that gas is transferred from the transferor to the transferee on the same Gas Day. Transferor must request the transfer in the billing cycle at the end of the current month, as described in sub-paragraph (E) below.

B. Transfers may occur between a transferor and a transferee located within the same Pipeline Scheduling Point (PSP) with confirmed deliveries on the same transmission pipeline. Requests to transfer gas from a transferor in one PSP to a transferee in a different PSP may only occur in accordance with an allowable transfer matrix, which will be posted on Company's web site. Changes to the allowable transfer matrix shall be posted by Company forty eight (48) hours before becoming effective. 

C. Volumes eligible for transfer shall not exceed the transferor's confirmed deliveries for the day of transfer. A transfer request may not be accepted by the Company if such transfer would cause the transferor and/or transferee to incur imbalance charges. 

D. Customers and/or their Agents also remain able to effectuate monthly bank transfers pursuant to the provisions contained in Company's Banking and Balancing Service.

E. Customers and/or their Agents must rely on Customer usage posted daily on the Company's website. The Company shall post Customer usage on its Internet-based website as soon as practicable after the end of each Gas Day throughout the billing cycle. All customer usage will be posted on a best efforts basis by 5:00 P.M. Eastern time on the second business day following the end of the previous calendar month. 

F. All gas transfer requests must be accurately completed and executed by both the transferor and transferee and submitted to Company on Company's standard Gas Transfer Request Form by 5:00 P.M. Eastern time on the third business day following the end of the previous calendar month.

G. Company is not involved in any arrangement or agreement for compensation for the value of the gas being transferred, or for any other fees between transferor and transferee. Columbia's role in administering this rate schedule is limited to transferring gas quantities from the transferor's to the transferee's account with Company.

H. The gas transfer service does not relieve Customer and/or its Agent of their obligation to deliver gas to Company to the Pipeline Scheduling Point in which they or their customers reside.

22.3	Rates

	The rates for this service are set forth in the Company's Statement of Currently Effective Rates.

23.Transportation Service Agreement

23.1 	Transportation Service Agreement for LGTS Customers

THIS AGREEMENT, made and entered into as of the _______day of __________________, ________, by and between 
COLUMBIA GAS OF OHIO, INC. ("Company"), and  _____________________________________________________________.
 											("Customer")  

	WITNESSETH:  That in consideration of the mutual covenants herein contained, the parties hereto agree as follows:

	WITNESSETH:  That in consideration of the mutual covenants herein contained, the parties hereto agree as follows:

Section 1. Transportation Service to be Rendered.  In accordance with the provisions of this Statement, Company shall receive the quantities of gas requested by Customer to be transported and shall redeliver said gas to Customer's facilities.  The point(s) of receipt, Customer facility location and the service and levels of said services to be rendered, shall be set forth in this Transportation Service Agreement ("Agreement").

Section 2.  Incorporation of Tariff Provisions.  This Agreement in all respects shall be subject to the provisions of this Statement, as the same may be amended or superseded from time to time, which are incorporated herein by reference and made a part hereof.

Section 3.  Regulation.  This Agreement is contingent upon the receipt and continuation of all necessary regulatory approvals and authorizations.  This Agreement shall become void or expire, as appropriate, if any necessary regulatory approval or authorization is not so received, changed or continued.

Section 4.  Term.  This Agreement shall become effective as of the first day of Customer's next billing cycle following its execution and shall continue through the last day of Customer's March, ________ billing cycle, provided however, that the Agreement shall continue in effect after that date on a year-to-year basis with each term ending on the last day of Customer's March billing cycle, unless terminated in accordance with this section. 

Company may terminate this Agreement, effective as of the end of Customer's applicable March billing cycle consistent with the above terms, upon written notice to Customer on or before the preceding January 2, or unless terminated pursuant to the Company's Rules and Regulations Governing the Distribution and Sale of Gas.

Customer may terminate this Agreement, effective as of the end of its applicable March billing cycle consistent with the above terms, or request a change in the level of Backup Service, upon written notice to Company on or before the preceding January 2.  Company will approve or deny any request by Customer to change the level of service, to be effective as of the beginning of its April billing cycle, on or before the preceding January 2, or as soon thereafter as practicable.

Following the cancellation of this Agreement, and the termination of gas transportation service hereunder, Company shall have no obligation to sell or deliver gas to Customer under any other contract or rate schedule except to the extent that Customer has contracted for Backup Service herein. Following such cancellation, Customer will remain subject to the provision of this Statement until such time that any subsequent agreement is reached between the parties regarding the level of gas service to be provided.

Section 5.  Notices.  Any notices, except those relating to billing or interruption of service, required or permitted to be given hereunder shall be effective only if delivered personally to an officer or authorized representative of the party being notified, or if mailed to the address provided in this Agreement.

Section 6.  Cancellation of Prior Agreements. This Agreement supersedes and cancels, as of the effective date hereof, all previous two party transportation agreements and any Commercial or Industrial Gas Service Agreements between the parties for service to Customer's facilities served hereunder.
	Section 7.    Contract Data. - Transportation Service   (LGTS)	

A. Point(s) of Receipt into Columbia Gas of Ohio, Inc. - Point(s) of Receipt with Interstate Pipelines
1)  Columbia Gas Transmission, LLC (TCO)	
2)  Other Point(s) of Receipt:        	

B. FACILITY ADDRESS:______________________________________ 
      PCID______________________________________________________

C. Type of Business
D. Volume Detail:  To be completed by Marketer/Customer
*Notice of change must be received on or before January 2, to be effective for the April billing cycle.
      Description of Business:
      
     
      
      
     
      
      
      
      
Alternate 
Fuel Type:


Alternate Fuel Volume and/or %:    




*Backup Service:

      YES          NO


* Volumes Requested:


*Monthly Bank   Tolerance       
               
1%               
2%               
3%               
4%               
          
Choose one box only 1

*Capacity Assigned 
Mcf/Day:
(LGTS Customers Only)






	         1  If a Monthly Bank Tolerance is not selected, the default is 4%.

CUSTOMER NOTICES:  (Mailing address for Contract) (Please Print)
Company Name: 
dba (if applicable):  
Address:  
City, St, Zip: 
Attn: 
Title: 
Telephone #:  (    )         -  
Fax #:  (     )         -    
E-mail Address:  

COMPANY NOTICES:     

                 
Columbia Gas of Ohio, Inc.
290 W. Nationwide Blvd.
Columbus, Ohio   43215
Attn:  Gas Transportation

IN WITNESS WHEREOF, the parties hereto have accordingly and duly executed this Agreement as of the date herein above first mentioned.

CUSTOMER                             	      COLUMBIA GAS OF OHIO, INC.
    
 By:  ______________________________________         By: ____________________________________
	(Signature) 			(Signature)

Printed: ___________________________________        Printed: ________________________________

Title:  _______________________________________  Title: __________________________________

23.2 Transportation Service Agreement for LDC Customers

THIS AGREEMENT, made and entered into as of the _______day of __________________, ________, by and between 
COLUMBIA GAS OF OHIO, INC. ("Company"), and  _____________________________________________________________.
 											("Customer")  

	WITNESSETH:  That in consideration of the mutual covenants herein contained, the parties hereto agree as follows:

	WITNESSETH:  That in consideration of the mutual covenants herein contained, the parties hereto agree as follows:

Section 1. Transportation Service to be Rendered.  In accordance with the provisions of this Statement, Company shall receive the quantities of gas requested by Customer to be transported and shall redeliver said gas to Customer's facilities.  The point(s) of receipt, Customer facility location and the service and levels of said services to be rendered, shall be set forth in this Transportation Service Agreement ("Agreement").

Section 2.  Incorporation of Tariff Provisions.  This Agreement in all respects shall be subject to the provisions of this Statement, as the same may be amended or superseded from time to time, which are incorporated herein by reference and made a part hereof.

Section 3.  Regulation.  This Agreement is contingent upon the receipt and continuation of all necessary regulatory approvals and authorizations.  This Agreement shall become void or expire, as appropriate, if any necessary regulatory approval or authorization is not so received, changed or continued.

Section 4.  Term.  This Agreement shall become effective as of the first day of Customer's next billing cycle following its execution and shall continue through the last day of Customer's December, ________ billing cycle, provided however, that the Agreement shall continue in effect after that date on a year-to-year basis with each term ending on the last day of Customer's December billing cycle, unless terminated in accordance with this section. 

Company may terminate this Agreement, effective as of the end of Customer's applicable December billing cycle consistent with the above terms, upon written notice to Customer on or before the preceding September 1, or unless terminated pursuant to the Company's Rules and Regulations Governing the Distribution and Sale of Gas.

Customer may terminate this Agreement, effective as of the end of its applicable December billing cycle consistent with the above terms, or request a change in the level of service, upon written notice to Company on or before the preceding September 1.  The Company will grant or deny the change in the level of service on or before October 1, or as soon thereafter as practicable.

Following the cancellation of this Agreement, and the termination of gas transportation service hereunder, Company shall have no obligation to sell or deliver gas to Customer under any other contract or rate schedule. Following such cancellation, Customer will remain subject to the provision of this Statement until such time that any subsequent agreement is reached between the parties regarding the level of gas service to be provided.

Section 5.  Notices.  Any notices, except those relating to billing or interruption of service, required or permitted to be given hereunder shall be effective only if delivered personally to an officer or authorized representative of the party being notified, or if mailed to the address provided in this Agreement.

Section 6.  Cancellation of Prior Agreements. This Agreement supersedes and cancels, as of the effective date hereof, all previous two-party transportation agreements between the parties for service to Customer's facilities served hereunder.
Section 7. Contract Data
A. Points of Receipt (may include inventory transfer)

B. Points of Delivery
 
C. Annual Transportation Volume

D. Maximum Daily Quantity





CUSTOMER NOTICES:  (Mailing address for Contract) (Please Print)
Company Name: 
dba (if applicable):  
Address:  
City, St, Zip: 
Attn: 
Title: 
Telephone #:  (    )         -  
Fax #:  (     )         -    
E-mail Address:  

COMPANY NOTICES:     

                 
Columbia Gas of Ohio, Inc.
290 W. Nationwide Blvd.
Columbus, Ohio   43215
Attn:  Gas Transportation

IN WITNESS WHEREOF, the parties hereto have accordingly and duly executed this Agreement as of the date herein above first mentioned.

CUSTOMER                             	      COLUMBIA GAS OF OHIO, INC.
    
 By:  ______________________________________         By: ____________________________________
	(Signature) 			(Signature)

Printed: ___________________________________        Printed: ________________________________

Title:  _______________________________________  Title: __________________________________


24. Operational Flow Orders

24.1 	Operational Flow Orders

Customers without daily measuring devices are subject to Columbia's issuance of operational flow orders (OFO) that will direct Customers or their Agents to schedule confirmed supply volumes to match Columbia's estimate of their daily usage adjusted for contracted Backup Service quantities and/or any balancing service quantities that may be available from Columbia. OFOs may be issued for daily capacity or operational reasons only, and not for financial gain considerations. Specifically, Columbia shall provide an OFO percentage and direct Customers or their Agents to schedule a confirmed supply volume equal to the product of the OFO percentage times the Customers' Maximum Daily Quantity (MDQ). This product is referred to as the OFO volume. Operational flow orders may require the scheduling of an OFO volume in excess of Customers' MDQ when forecasted operating conditions exceed the Company's design criteria. The Company will waive the balancing service charges established under Part 26 of this Statement (and set forth in the Statement of Currently Effective Rates) during any day an OFO is in effect. Failure to comply with an operational flow order will result in the billing of the charges below assessed against the OFO difference. The OFO difference is defined as the shortfall between the OFO volume and actual daily supply deliveries during an OFO - Deficient Supply, and the overage between the OFO volume and the actual daily supply deliveries during an OFO - Excess Supply:

Failure to comply with an OFO will result in the assessment of the charges set forth in the Company's Statement of Currently Effective Rates.
If a Customer or its Agent complies with an OFO it shall not be subject to any charge or additional cost.

25. Operational Matching Orders

25.1 	Operational Matching Orders
Customers with daily measuring devices are subject to Columbia's issuance of operational matching orders (OMO) that will direct Customers or their Agents to adjust usage to match confirmed supply volumes or adjust confirmed supply to match usage adjusted for contracted Backup Service quantities and/or balancing services quantities available from the Company. OMOs may be issued for daily capacity or operational reasons only, and not for financial gain considerations.  The Company will waive the balancing service charges established under Part 26 of this Statement during any day an OMO is in effect. Failure to comply with an OMO will result in the billing of the applicable charges to the OMO difference, which is defined as the shortfall between the OMO volume and actual daily supply deliveries during an OMO - Deficient Supply and the overage between the OMO volume and the actual supply deliveries during an OMO - Excess Supply. The applicable charges are set forth in the Company's Statement of Currently Effective Rates.
If a Customer complies with an OMO it shall not be subject to any charge or additional cost. Columbia shall operate its distribution system in a nondiscriminatory manner, without regard to the confirmed source of supply or the Customer or its Agent.  

Columbia may issue Operational Warnings when nominations it receives from Customers (or their Agents) served under rate schedules SGTS, GTS or LGTS appear to be sufficient to preclude the need to issue an OFO or OMO, but based on operational and weather conditions Columbia needs transportation customers and their agents to maintain the then current level of gas deliveries into Columbia's system. An Operational Warning gives notice that changes in nominations or deliveries may lead Columbia to issue an OFO and/or OMO. Columbia may issue Operational Alerts when information received by Columbia indicates that nominations from transportation customers and their agents appear to be insufficient to meet projected transportation customer demand and preclude the need to issue an OFO and/or OMO. An Operational Alert gives notice that absent changes in nominations or deliveries, Columbia may issue an OFO and/or OMO. Columbia will utilize its best efforts to issue Operational Warnings and/or Operational Alerts prior to the issuance of an OFO and/or OMO.

In the event that an Operational Warning, Operational Alert, OFO or OMO is necessary Columbia shall do the following:

A.	Provide notice of the Operational Warning, Operational Alert, OFO or OMO by 4:00 p.m. ECT of the day prior to the Gas Day affected by the Operational Warning, Operational Alert, OFO, or OMO, and shall specify the nature of the situation creating the need for the Operational Warning, Operational Alert, OFO and/or OMO. The notice of an OFO and/or OMO shall indicate: (1) the exact actions required of Customers and their Agents; (2) deadlines for compliance; and, (3) the anticipated duration of the OFO and/or OMO.

B.	The notice of an Operational Alert, OFO, or OMO may be provided later than 4:00 p.m. ECT if the following three conditions are satisfied: (1) Customers or their Agents change nominations on an intra-day nomination cycle after the timely nomination cycle Columbia has relied upon to assess the need to call an OFO and/or OMO; (2) Columbia issued an Operational Warning prior to 4:00 P.M. ECT; and (3) such nomination changes would prompt a need to issue an OFO and/or OMO. The notice of an Operational Alert, OFO, and/or OMO may also be provided later than 4:00 p.m. ECT if a force majeure event reduces a critical upstream pipeline's supply. An Operational Alert and/or Flow Order issued by Columbia as a result of a critical upstream pipeline force majeure condition may be applied only to the Pipeline Scheduling Point (PSP) affected by the force majeure condition. Should Columbia receive notice of a force majeure event from a critical upstream pipeline, the extension of the deadline for notice specified above shall only apply to the Pipeline Scheduling Point(s) (PSP) affected by the notice of force majeure. If notice of an Operational Alert, OFO, or OMO is delayed for any of the reasons specified in this section, Columbia shall issue the notice at its earliest opportunity after 4:00 pm ECT.
C.	Columbia shall post notice of the Operational Warning, Operational Alert, OFO, and/or OMO on the informational portion of Columbia's interactive Website. In addition, Columbia will notify all impacted Agents and the Ohio Office of Consumers' Counsel by e-mail. The Office of Consumers' Counsel and all Agents shall be responsible for providing Columbia with the current e-mail address of the party designated to receive such notification and to update such email addresses as necessary. Columbia will also advise the PUCO whenever it issues an OFO or OMO.

D.	Columbia shall also provide the following information to assist Customers and their Agents in scheduling their OFO and OMO volumes:

(1)	Columbia's estimate of sales customer demand with necessary demand forecasting adjustments, capacity reductions due to storage deliverability ratchets and resulting capacity available for banking and balancing service;

(2)	Columbia's estimate of transportation customer demand including demand forecasting error adjustment;

(3)	The capacity Columbia has available to provide access to interruptible banking and balancing service; and, 

(4) For cold weather OFOs and OMOs, the minimum percentage of actual demand needed to be provided by OMO customers and minimum percentage of MDQ needed to be provided by OFO customers. For warm weather OFOs and OMOs the maximum percentage of actual demand to be provided by OMO customers and maximum percentage of MDQ to be provided by OFO customers.

E.	During an OFO or OMO, Columbia shall post on its Website daily updates about the status of operations and the forecasted duration of the OFO and/or OMO.

26. Banking and Balancing Service

26.1  	Applicability

Applicable throughout the territory served by the Company.

26.2	Availability

A. Banking and Balancing Service is an optional service that is available, on a non-firm basis, to Customer accounts subscribing to Transportation Service under Rate Schedule LGTS.

B. Banking and Balancing Service will be available when the Customer has executed a Service Agreement or an Addendum to its Service Agreement with the Company, under which the Company agrees to provide Banking and Balancing Service to Customer. Customers may elect to change monthly bank tolerance levels once per year. Notification of a change must be provided to Company no later than January 2 with service effective the following April 1. 

C. A Customer may subscribe to Banking and Balancing Service to account for the Company's balancing of daily differences between gas delivered into the Company's system on the Customer's behalf and volumes consumed by the Customer.

D. Customer's gas volumes received by the Company but not delivered to the Customer at its facilities on any given day shall be referred to as "banked volumes" or a "Volume Bank." A Customer shall be permitted to add supply quantities to its Volume Bank or draw supply quantities from its Volume Bank on a non-firm basis, subject to the provisions of this Banking and Balancing Service section.

E. The monthly bank tolerance levels that are available under this Rate Schedule are 4%, 3%, 2%, and 1% of a Customer's Annual Transportation Volume (ATV). ATV will be calculated by Columbia using the arithmetic average of the actual Customer account consumption for the thirty-six month period ending each October billing cycle. If Customer does not elect a specific percentage for a monthly bank tolerance level, Company will assume 4%.  

F. The monthly bank tolerance level elected by a Customer will represent the maximum allowed Volume Bank at the conclusion of each billing month with the exception of November. For each November billing cycle, Customer's maximum allowed Volume Bank will be limited to 50% of a Customer's selected monthly bank tolerance level at the conclusion of the November billing cycle.

G. The ability of a Customer to access or build a Volume Bank will be subject to restriction, in whole or in part, via Company's imposition of Operational Matching Orders (OMO) or Operational Flow Orders (OFO). Customers agree to comply with such OMOs or OFOs for the duration(s) and to the extent directed by Company.

H. The monthly bank tolerance charges derived from this service shall flow through the Company's CHOICE/SCO Reconciliation Rider (CSRR).

26.3	Rates:

The rates for this service are set forth in the Company's Statement of Currently Effective Rates.

26.4 	Transportation Service Imbalance Charges
A. In any month when an LGTS Customer's deliveries to Company, when added to their available bank volume and applicable Backup Service quantities, are less than their usage, the incremental shortfall will be sold to the Customer at a price determined in the manner set forth in the Company's Statement of Currently Effective Rates.  

B. In any month when an LGTS Customer's Volume Bank exceeds the allowed bank level, Company will purchase the excess volumes.  The purchase price shall be determined in the manner set forth in the Company's Statement of Currently Effective Rates. 

26.5 	Cash-Out Basis
Customers who do not subscribe to Banking and Balancing Service will be placed on a daily cash-out provision, as defined below and are required to pay all costs associated with the purchase and installation of a daily measuring device as specified  by the Company.  On days when Customer's deliveries to Company, when added to applicable Backup Service quantities, are less than their usage, the Company will sell the excess gas used by the Customer at a price determined in the manner set forth in the Company's Statement of Currently Effective Rates. On days when Customer's deliveries to Company are greater than their usage, Company will purchase the excess volumes at a price determined in the manner set forth in the Company's Statement of Currently Effective Rates. 
26.6 	Monthly Bank Transfers
Monthly bank transfers will be permitted between one Customer/Agent ("transferor") and another Customer/Agent ("transferee") located within the same Pipeline Scheduling Point ("PSP") and having confirmed deliveries on the same transmission pipeline.  Transfers may also be permitted, at the judgment of the Company, between a transferor and a transferee located in different PSPs and having confirmed deliveries on the same transmission pipeline.  All such transfers may only be requested once a month to be effective for the upcoming billing cycle and must be requested within three (3) business days after the conclusion of the Customers' monthly billing cycle. Transferor will be charged the transfer fee set forth in the Company's Statement of Currently Effective Rates for each transaction.

26.7	Disposition of Volume Banks Upon Termination of Service

In the event Transportation Service is terminated for a Customer, the customer will be entitled to (i) take delivery of any quantities residing in a Customer's Volume Bank at the date of termination during the next two billing months, or (ii) transfer such volumes pursuant to the provisions of monthly bank transfers above. Should any quantities reside in a Customer's Volume Bank at the conclusion of this next two billing months, the Company will purchase the remaining bank quantities from the Customer. The purchase price shall be determined in the manner set forth in the Company's Statement of Currently Effective Rates. 

27. Gas Transportation Billing Adjustments
27.1 	Interim, Emergency and Temporary PIP Plan Schedule Rider
A. 	Applicable

To all customers who were sales customers as of June 3, 1994, and any new customer account established after June 3, 1994.

B.    PIP Plan Tariff Base Rate Rider
The rate for this rider is set forth in the Company's Statement of Currently Effective Rates.

27.2	Gross Receipts Tax Rider 	

A. Applicability
Applicable to all charges billed by Columbia under rate schedule LGTS, except that this rider shall not be billed to those customers statutorily exempted from the payment of gross receipts taxes.
	B.  	Rate

The rate for this rider is set forth in the Company's Statement of Currently Effective Rates. 

27.3	Excise Tax Rider

A. Applicability

Applicable to all customers served under Rate Schedule LGTS.

B. Rate(s)
	
	The rates for this rider are set forth in the Company's Statement of Currently Effective Rates.

27.4 	Rider IRP - Infrastructure Replacement Program Rider

A. Applicability
Applicable to all customer accounts served under Rate Schedule LGTS.

B.   Description

An additional charge per account per month, regardless of gas consumed, shall apply with respect to costs associated with (1) the Riser and Hazardous Customer Service Line Replacement Program, (2) the Accelerated Mains Replacement Program, and (3) the Automated Meter Reading Devices Program.

C.   Rates
The rate for this rider is set forth in the Company's Statement of Currently Effective Rates.
27.5 	Rider IDR - Infrastructure Development Rider

A. Applicability
Applicable to all customer accounts served under Rate Schedule LGTS.

B.   Description

An additional charge per account, per month, regardless of gas consumed, to recover infrastructure development costs associated with PUCO-approved economic development projects.

C.   Rates
The rate for this rider is set forth in the Company's Statement of Currently Effective Rates.
27.6 	CEP Rider- Capital Expenditure Program Rider

A. Applicability
Applicable to all customer accounts served under Rate Schedule LGTS.

B.   Description

An additional charge per account, per month, regardless of gas consumed, to recover costs associated with Company's Commission-approved capital expenditure program.

C.   Rates
The rate for this rider is set forth in the Company's Statement of Currently Effective Rates.






2
27844165v1



27844165v1</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>107</filing_id>
      <filing_title>COH SOC language change 8-27-2024</filing_title>
      <filing_type>980</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2024-08-27</current_effective_date>
      <ferc_order_date>2024-11-22</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
    <record_data>
      <record_id>7</record_id>
      <option_code>A</option_code>
      <record_title>COH Rates</record_title>
      <record_content_desc>Tariff</record_content_desc>
      <record_version_num>75.0.0</record_version_num>
      <record_narrative_name>COH Rates Eff May 30 2025</record_narrative_name>
      <collation_value>167772160</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2025-05-30</proposed_effective_date>
      <priority_order>1000000000</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>STATEMENT OF OPERATING CONDITIONS
STATEMENT OF CURRENTLY-EFFECTIVE RATES
FOR NGPA SECTION 311 TRANSPORTATION SERVICES
Of
COLUMBIA GAS OF OHIO, INC.

Filed with the
FEDERAL ENERGY REGULATORY COMMISSION

Communications covering SOC should be addressed to:
M. Bryan Little
Assistant General Counsel
NiSource Corporate Services Company
151 West Market Street
Indianapolis, Indiana  46204
Telephone: 317-242-8236
E-mail:blittle@nisource.com

ETariff Information
a.	Tariff Submitter: Columbia Gas of Ohio, Inc.
b. 	FERC Tariff Program Name: FERC NGPA Gas Tariff
c.  	Tariff Title: Columbia Gas of Ohio, Inc. Statement of Operating Conditions – Statement of Currently-Effective Rates
d.  	Tariff Record Proposed Effective Date: May 30, 2025
e.  	Tariff Record Title: Columbia Gas of Ohio, Inc. Statement of Operating Conditions
f.  	Option Code: A
g.  	Other Information: Petition for approval of Baseline Statement of Operating Conditions (Docket No. PR14-8-000).



COLUMBIA GAS OF OHIO, INC.
STATEMENT OF CURRENTLY EFFECTIVE RATES

The following is a statement of Company’s currently effective maximum rates for transportation service on Company’s pipeline system under Section 311 of the Natural Gas Policy Act of 1978:							
Rate LGTS – Large General Transportation Service
Customer Charge 	  $ 4,140.00 per Month 
	
First     2,000 Mcf Per Account Per Month
$0.7358 /Mcf
Next   13,000 Mcf Per Account Per Month
$0.4557 /Mcf
Next   85,000 Mcf Per Account Per Month
$0.3991 /Mcf
Over 100,000 Mcf Per Account Per Month
$0.3180 /Mcf

Banking and Balancing Service – Maximum Percent of Annual Transportation Volumes
Monthly Bank Tolerance  1%
$0.0196 /Mcf
Monthly Bank Tolerance  2%
$0.0345/Mcf
Monthly Bank Tolerance  3%
$0.0495 /Mcf
Monthly Bank Tolerance  4%
$0.0644 /Mcf

Other Charges
Infrastructure Replacement Program Rider 
23.79% surcharge
PHMSA IRP Rider
1.79% surcharge
PIP Plan Tariff Schedule Rider
$0.4031 /Mcf
Infrastructure Development Rider
$1.50 /Month
Capital Expenditure Program Rider
9.70% Surcharge
Ohio Excise Tax Rider

First     100 Mcf Per Account Per Month
$0.1593 /Mcf
Next  1,900 Mcf Per Account Per Month
$0.0877 /Mcf
Over  2,000 Mcf Per Account Per Month
$0.0411 /Mcf
Gross Receipts Tax Rider
4.987%
Lost and Unaccounted For Retention Rate
1.0%

Late Payment Charge
Late Payment Charge
1.5 percent of unpaid balance

Standby Service
A. Demand Charge for Daily Standby Volume

The monthly demand charge for the Daily Standby Volume is calculated by multiplying the Maximum Daily Standby Volume(s) in the service agreement by the sum of the weighted average demand cost underlying the Company's effective FSS and SST contracts with Columbia Gas Transmission, LLC (TCO) plus applicable gross receipts taxes.

B. Commodity Charge

	All Standby Volumes delivered by Company to Customer will be considered next through Customer's meter, after Customer's own transportation gas is delivered.  Any Standby Volumes delivered to Customer will be billed at the applicable TCO Monthly Index, adjusted for TCO SST Commodity, TCO SST retainage, TCO FSS injection and withdrawal charges and TCO FSS retainage, plus applicable gross receipts taxes.  Customer will also pay the applicable delivery charge pursuant to this Statement on all Standby volumes delivered.  In addition, Company will retain the percentage set forth above (Lost and Unaccounted For Retention Rate) of any Standby volumes delivered to Customer as unaccounted-for gas.

Usage in Excess of Authorized Daily Volume

In the event actual gas deliveries by Company to Customer are in excess of the Authorized Daily Volume established under Part 7 of this Statement on any day in which the Company requires Customer to limit gas consumption to its Authorized Daily volume, Customer shall be liable for all penalties and fines incurred by Company as a result of usage in excess of the Authorized Daily Volume.  

Failure to Interrupt

When Company interrupts deliveries pursuant to Part 8 of this Statement, Customer shall be liable to Company for all fines and penalties incurred by Company as a result of any failure by Customer to interrupt its usage when directed to do so.
Gas Transfer Service

For any transactions occurring under Part 22 of this Statement, Company will charge the transferor five cents ($0.05) per unit transferred, up to a maximum of one hundred fifty dollars ($150.00) per transfer. The unit will be either Dth or Mcf, depending upon the supply source being transferred.

Operational Flow Orders

Customers who fail to comply with an OFO under Part 24 of this Statement will be subject to charges equal to the highest of the following:

(1) Ten dollars ($10.00) times the OFO shortfall or overage; or (2) 110% of the Columbia Gas Transmission, LLC (TCO) Daily Index adjusted for the TCO SST commodity and shrinkage times the OFO shortfall or overage; or (3) the payment of the pro-rata share of all other charges, including gas costs, penalty charges, or cash-outs, incurred by the Company as a result of non-compliance on the date of the OFO shortfall or overage.
Operational Matching Orders

Customers who fail to comply with an OMO under Part 25 of this Statement will be subject to charges equal to the highest of the following:
(1) Ten dollars ($10.00) times the OMO shortfall or overage; or (2) 110% of the Columbia Gas Transmission, LLC (TCO) Daily Index adjusted for the TCO SST commodity and shrinkage times the OMO shortfall or overage; or (3) the payment of the pro-rata share of all other charges, including gas costs, penalty charges, or cash-outs, incurred by the Company as a result of non-compliance on the date of the OMO shortfall or overage.
Transportation Service Imbalance Charges
The price for any volumes of gas sold by a Customer to the Company under Section 26.4 of this Statement shall be equal to 70% of the average of the Columbia Gas Transmission, LLC (TCO) Daily Index prices for each day of the applicable month, plus the 100% load factor TCO FTS costs (including demand, commodity and retainage), plus the gross receipts or other applicable taxes plus the applicable Company transportation. In addition, if, in any month, Company incurs other charges, including gas costs, penalty charges or cash-outs caused by excess monthly usage, the LGTS Customer shall be charged its pro rata share of such charges.
The price for any volumes of gas sold by Columbia to a Customer under Section 26.4 of this Statement shall be equal to 130% of the average of the TCO Daily Index prices for each day of the applicable month, plus the 100% load factor TCO FTS costs (including demand, commodity and retainage).  In addition, if, in any month, Company incurs other charges, including gas costs, penalty charges or cash-outs caused by excess monthly gas supply, the LGTS Customer shall be charged its pro rata share of such charges.
Cash-Out Basis
The price for any volumes of gas sold by the Company to a Customer under Section 26.5 of this Statement shall be equal to 130% of the average of the Columbia Gas Transmission, LLC (TCO) Daily Index prices for each day of the applicable month, plus the 100% load factor TCO FTS costs (including demand, commodity and retainage), plus all applicable Company transportation charges.
The price for any volumes of gas purchased by the Company from a Customer under Section 26.5 of this Statement shall be equal to equal to 70% of the average of the TCO Daily Index prices for each day of the applicable month, plus the 100% load factor TCO FTS costs (including demand, commodity and retainage).

In addition, if, in any such month, Company incurs other charges, including gas costs, penalty charges, or cash outs caused by excess daily usage or supply, the Customer shall be charged its pro rata share.

Monthly Bank Transfers
The transfer fee for each transaction under Section 26.6 of this Statement shall be ten dollars ($10.00).
Disposition of Volume Banks upon Termination of Service
The purchase price for any volumes of gas purchased by the Company under Section 26.7 of this Statement shall be equal to 70% of the average of the Columbia Gas Transmission, LLC (TCO) Daily Index prices for each day of the applicable month, plus the 100% load factor TCO FTS costs (including demand, commodity and retainage).
4</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>114</filing_id>
      <filing_title>COH Rates effective May 30 2025</filing_title>
      <filing_type>980</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2025-05-30</current_effective_date>
      <ferc_order_date>2025-07-17</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
  </ferc_filing_data>
</Document>