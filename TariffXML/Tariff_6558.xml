<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Document xmlns="http://ferc.gov/etariffExport.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ferc_filing_data>
    <schema_version>2</schema_version>
    <company_id>C010545</company_id>
    <lead_applicant_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
    <tariff_id>1</tariff_id>
    <tariff_title>FERC NGPA Gas Tariff</tariff_title>
    <tariff_export_date>2025-09-16T20:38Z</tariff_export_date>
    <export_schema_version>2</export_schema_version>
    <record_data>
      <record_id>1</record_id>
      <option_code>A</option_code>
      <record_title>Statement of Operating Conditions</record_title>
      <record_content_desc>FERC NGPA Gas Tariff</record_content_desc>
      <record_version_num>1.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>1</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-02-24</proposed_effective_date>
      <priority_order>15</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>AMP INTRASTATE PIPELINE, LLC 

FERC NGPA GAS TARIFF

STATEMENT OF OPERATING CONDITIONS

VERSION 1.0.0

EFFECTIVE:  FEBRUARY 24, 2020
 


OPTION CODE "A"


AMP INTRASTATE PIPELINE, LLC
STATEMENT OF OPERATING CONDITIONS
APPLICABLE TO NGPA SECTION 311 TRANSPORTATION SERVICE
TABLE OF CONTENTS

SECTION	PAGE

1.	INTRODUCTION.	3
2.	DEFINITIONS.	3
3.	REQUEST FOR SERVICE AGREEMENT.	5
4.	GENERAL.	8
5.	QUANTITY.	10
6.	DELIVERY POINT(S) AND RECEIPT POINT(S).	11
7.	NOMINATIONS AND BALANCING.	12
8.	RATES.	16
9.	TERM.	16
10.	ADDRESSES.	16
11.	MISCELLANEOUS.	17



EXHIBIT "A" - General Terms and Conditions

EXHIBIT "B" - Statement of Rates 





 
AMP INTRASTATE PIPELINE, LLC
STATEMENT OF OPERATING CONDITIONS

1. INTRODUCTION.  
      AMP Intrastate Pipeline, LLC ("Transporter") is an intrastate pipeline, with facilities located wholly within the State of Texas, and is exempt from the jurisdiction of the Federal Energy Regulatory Commission ("FERC") under the Natural Gas Act of 1938 ("NGA").  If by providing transportation services under Section 311 of the Natural Gas Policy Act of 1978 ("NGPA") and the regulations thereunder, Transporter's status as an intrastate pipeline that is exempt from NGA jurisdiction is impacted, altered, or threatened in any way, by virtue of any change in statutes, regulations, or other applicable law of any kind, then Transporter reserves the right to terminate all transportation services under Section 311 of the NGPA and all Service Agreements and applicable Confirmations related thereto, and to withdraw this Statement of Operating Conditions, all effective on the Day before any such change in statutes, regulations, or other applicable law of any kind takes effect.  In light of the foregoing, Transporter presents this Statement of Operating Conditions under which Transporter will offer NGPA Section 311 transportation service on its system.  The rates charged by Transporter for NGPA Section 311 transportation service shall be established pursuant to 18 CFR 284.123(b)(1) and such current rates are summarized on Exhibit "B."  As indicated below, Transporter, in addition to its primary business as an intrastate and NGPA Section 311 provider of transportation services, also uses its pipeline system in connection with the purchase and sale of natural gas for its own account as an on-system supplier and to maximize the utilization of its pipeline system (including, but not limited to, utilization of any available unused capacity).  Transporter will use its system to make such purchases and sales and to transport such quantities on either an intrastate or NGPA Section 311 basis, as set forth herein.
2. DEFINITIONS.  
Except as otherwise specified, the following terms as used herein, in the Service Agreement and its applicable Confirmation will be construed to have the following scope and meaning:  
      (a) "Agency Agreement" is defined in Section 4.6 of this Statement of Operating Conditions.
      (b) "Btu" means British thermal unit and, where appropriate, the plural thereof.
      (c) "Commencement Date" is defined in Section 10.1 of this Statement of Operating Conditions.
      (d) "Confirmation" means an effective and unexpired agreement documented by written means, including but not limited to facsimile, e-mail, or other electronic means evidencing an affirmative agreement between Transporter and Shipper on all key terms and conditions, for a particular arrangement under a Service Agreement or transportation agreement, Shipper's submission of a Nomination without an affirmative agreement by Transporter to all terms of service shall not constitute a Confirmation.
      (e) "Cumulative Operational Imbalance" is defined in Section 7.5 of this Statement of Operating Conditions.
      (f) "Cumulative Operational Imbalance Fee" is defined in Section 7.5 of this Statement of Operating Conditions.
      (g) "Cumulative Operational Imbalance Tolerance" is defined in Section 7.5 of this Statement of Operating Conditions.
      (h) "Daily Imbalance" is defined in Section 7.5 of this Statement of Operating Conditions.
      (i) "Daily Imbalance Fee" is defined in Section 7.5 of this Statement of Operating Conditions. "Daily Imbalance Tolerance" is defined in Section 7.5 of this Statement of Operating Conditions.
      (j) "Day" means the period beginning at 9:00 a.m. central clock time ("CCT") on each calendar day and ending at 9:00 a.m. CCT on the following calendar day.
      (k) "Delivery Point(s)" is defined in Section 6.1 of this Statement of Operating Conditions.
      (l) "Effective Date" means the first Day of the term of a Confirmation.
      (m) "Firm" or "Firm Service" means that the Maximum Daily Contract Quantity or Shipper's Reserved Capacity is not subject to a prior claim by another customer or class of service.
      (n) "Gas" means natural gas produced from gas wells, gas produced in association with oil (casinghead gas), and/or the residue gas resulting from processing casinghead gas and/or gas well gas.
      (o) "Heating Value" means the total gross heating value, expressed in BTU per cubic foot, at a contract base temperature of sixty degrees Fahrenheit (60 F) and a contract base pressure of fourteen and sixty-five hundredths (14.65) psi, calculated as prescribed within GPA Standard 2172 "Calculation of Gross Heating Value, Relative Density, Compressibility and Theoretical Hydrocarbon Liquid Content for Natural Gas Mixtures for Custody Transfer", or such revision thereof in common use.  The Heating Value may be adjusted to reflect water content, at actual measured pressure and temperature.
      (p) "Hourly Imbalance Fee" is defined in Section 7.3 of the Statement of Operating Conditions.
      (q) "Interruptible" or "Interruptible Service" means Transporter may interrupt, curtail, or suspend the receipt, transportation or delivery of Gas hereunder at any time and from time to time for any reason without notice, whether or not caused by an event of Force Majeure, with Transporter having no liability to Shipper.
      (r) "Maximum Daily Contract Quantity" or "MDCQ" means the maximum quantity of Gas in MMBtu, exclusive of applicable Retention Volume, that Shipper may nominate and deliver to Transporter each Day for Firm or Interruptible Service at Receipt Point(s) or Delivery Point(s) or an aggregate of Receipt Points or Delivery Points at a relatively uniform hourly rate over the course of such Day as specified in a Confirmation or Agency Agreement.
      (s) "Mcf" means one thousand cubic feet, and "MMBtu" means one million Btu.
      (t) "Month" means that period of time beginning at 9:00 a.m. CCT on the first day of a calendar month and ending at 9:00 a.m. CCT on the first day of the following calendar month.
      (u) "Operational Flow Order" is defined in Section 7.4 of the Statement of Operating Conditions "Psia" means pounds per square inch absolute.
      (v) "Psig" means pounds per square inch gauge.  
      (w) "Receipt Point(s)" is defined in Section 6.2 of the Statement of Operating Conditions.
      (x) "Retention Volume" is defined in Section 8.2 of the Statement of Operating Conditions.
      (y) "Scheduled Quantity" means the quantity of Gas, plus any applicable Retention Volume nominated by Shipper and scheduled and confirmed by Transporter with the upstream and the downstream pipeline operators subject to any limitations of the MDCQ and SRC set forth in the Confirmation.
      (z) "Service Agreement" means the agreement between Transporter and Shipper, whereby Transporter will provide transportation services to Shipper pursuant to the terms and provisions of this Statement of Operating Conditions and any applicable Confirmation.
      (aa) "Shipper" means the party that holds all lawful rights and/or title to the Gas that is being transported and who has a fully executed Service Agreement and Confirmation with Transporter.
      (bb) "Shipper's Reserved Capacity" or "SRC" means the daily Firm transportation capacity (expressed in MMBtu) reserved for Shipper in Transporter's pipeline as specified in the Confirmation(s) or Agency Agreement.
3. REQUEST FOR SERVICE AGREEMENT.  
      3.1 Request for Service Agreement.  A Service Agreement is required for all services hereunder and will be subject to all terms and provisions of this Statement of Operating Conditions, its applicable Confirmation and any applicable Agency Agreement.  Any potential Shipper desiring to obtain services from Transporter must request a Service Agreement from Transporter.  The request may be in writing, by telephone or electronic medium.  Shipper shall provide documentation to demonstrate its creditworthiness to the satisfaction of the Transporter in accordance with Section 3.3 hereof.  
Requests for Service Agreement may be sent to:

AMP Intrastate Pipeline, LLC
3811 Turtle Creek Blvd., Suite 770
Dallas, TX  75219
Telephone: (469) 305-3418
Email: Matt.ray@aspenmidstream.com
 
      3.2 Requirements of Request for Service.  Each request for a specific transaction under an executed Service Agreement must include the following information: 
      3.2.1 Shipper's name, Service Agreement number and any applicable individual transaction confirmation number;
      3.2.2 A statement identifying the "on behalf of" entity(ies) that are warranted by Shipper to meet the provisions of Part 284 of the FERC's regulations;
      3.2.3 Requested Receipt Point(s) or receipt point area and Delivery Point(s) or delivery point area and a statement, containing information verifiable by Transporter, that the minimum transportation quantity of gas to be received or delivered at least equals 750 MMBtu per day at any and each Receipt Point or Delivery Point;
      3.2.4 Shipper's requested Maximum Daily Contract Quantity and/or Shipper's Reserved Capacity;
      3.2.5 The type and character of service requested; and
      3.2.6 The term of the service requested.
      3.3 Credit Approval.  Transporter's agreement to execute a Service Agreement or to engage in a specific transaction under a Service Agreement is contingent upon a satisfactory appraisal of Shipper's credit by Transporter.  
      3.3.1 If requested by Transporter potential Shipper must provide a copy of its last two (2) fiscal years of audited financial statements, including balance sheet, income statement, cash flow statement and accompanying footnotes.  If potential Shipper cannot provide the above information on itself, then potential Shipper must, if applicable, provide that information for its parent company.
      3.3.2 In the event Transporter determines Shipper's credit to be unsatisfactory in Transporter's opinion, as tested in a commercially reasonable and in a not unduly discriminatory manner, at any time during the term of any Service Agreement or applicable Confirmation, Transporter may demand "Adequate Assurance of Performance" which shall mean sufficient security in a form, an amount and for the term reasonably specified by Transporter.  Shipper at its option may provide one of the following forms of security:
      (a)	Post an irrevocable standby letter of credit in a form, substance and from a bank satisfactory to Transporter for services equal to or up to three (3) Months of all fees and charges that would be due from Shipper if Transporter were performing such service plus an amount for projected imbalances, unless a lesser amount is reasonable to and agreed upon by Transporter based on Shipper's financial condition; or
      (b)	Provide a prepayment or a deposit for services equal to or up to three (3) Months of all fees and charges that would be due from Shipper if Transporter were performing such service plus an amount for projected imbalances, unless a lesser amount is reasonable to and agreed upon by Transporter based on Shipper's financial condition; or
      (c)	Provide a guaranty from a guarantor acceptable to Transporter.  The demand for Adequate Assurance of Performance can be satisfied with a guaranty issued on behalf of Shipper in a format, amount and term acceptable to Transporter, but only for as long as the credit of Shipper's guarantor continues to be acceptable to Transporter, after which time only Adequate Assurance of Performance in the form of (a) and (b) will be acceptable to Transporter.  
      3.3.3 Transporter will not be required to perform or continue to perform service under any Service Agreement or any applicable Confirmation in the event: (i) Shipper has voluntarily filed for bankruptcy protection under any chapter of the Bankruptcy Code; (ii) Shipper is the subject of an involuntary petition of bankruptcy under any chapter of the Bankruptcy Code, and such involuntary petition has not been settled or otherwise dismissed within ninety (90) Days of such filing; or (iii) Shipper otherwise becomes insolvent, whether by an inability to meet its debts as they come due in the ordinary course of business or because its liabilities exceed its assets on a balance sheet test and/or however such insolvency may otherwise be evidenced.
      3.3.4 Should Shipper fail to provide Adequate Assurance of Performance within two (2) business Days after receipt of written demand for such assurance, then Transporter shall have the right to suspend performance under any Confirmation until such time as Shipper furnishes Adequate Assurance of Performance and/or terminate any Service Agreement or applicable Confirmation in addition to all other remedies available at law or in equity.
      3.4 Transporter shall have the right to reject any request for Service Agreement or Confirmation that does not contain the required information set forth herein and Transporter will have no liability to Shipper or any other entity in connection with such rejection.
      3.5 In addition to requiring Adequate Assurance of Performance to secure the Service Agreement and/or transactions thereunder, Transporter may require additional or alternate security from Shipper if Transporter's service to Shipper is contingent upon Transporter's construction of facilities.  This provision shall also apply to any assignment of a Service Agreement that was initially subject to this provision.
      3.6 Service Agreements.  After Shipper has requested a Service Agreement and after Transporter has determined that Shipper is creditworthy, Transporter and Shipper will enter into a Service Agreement, which will incorporate by reference the provisions of this Statement of Operating Conditions.  Multiple transportation arrangements can be agreed to between the parties and confirmed by Confirmation under a single Service Agreement.  Neither Transporter nor Shipper will have any obligations to one another until authorized representatives of both Transporter and Shipper have executed a Service Agreement and have agreed to a Confirmation.  Any applicable Confirmation(s) and, if applicable, any Agency Agreement will contain specific details agreed to by Transporter and Shipper for a particular service arrangement.
4. GENERAL.  
      4.1 Transporter's Obligations.  Transporter will receive Gas up to the Scheduled Quantity at the Receipt Point(s) as nominated and tendered by Shipper under the terms of this Statement of Operating Conditions, the Service Agreement, its applicable Confirmation, and any Agency Agreement, transport and deliver an equivalent quantity of Gas, in MMBtu, to Shipper at the Delivery Point(s), less the Retention Volume as set forth in Section 8.2 of this Statement of Operating Conditions.  Transporter's obligations to receive, transport, and deliver Gas to the Delivery Point(s) shall be in accordance with the applicable character of service (i.e., Firm or Interruptible), and are subject to: (i) an event of Force Majeure; (ii) Shipper's failure or refusal to deliver Gas to or receive Gas from Transporter as required under this Statement of Operating Conditions, the Service Agreement and any applicable Confirmation; (iii) any laws, rules, orders, or requirements of any governmental or regulatory authorities that limit, prevent, or interfere with Transporter's performance; and (iv) as otherwise provided under any other terms and conditions in this Statement of Operating Conditions, the Service Agreement, any applicable Confirmation, and any applicable Agency Agreement.  Shipper acknowledges that the quantity of Gas physically received or delivered by Transporter may be different than the Scheduled Quantity and, for those Receipt Point(s) and Delivery Point(s) at which Transporter has operational balancing agreements, the Scheduled Quantity is deemed to have been received or delivered for the account of Shipper, subject to the remaining terms and conditions of this Statement of Operating Conditions, the applicable Service Agreement, any applicable Confirmation, and any applicable Agency Agreement.  In the event of constraints at a Delivery Point(s) or on a downstream pipeline, Transporter will rely on the downstream party's allocation at the affected Delivery Point(s) and, to the extent Shipper's Nominations are reduced, Shipper will be deemed to have failed to receive Gas from Transporter as required hereunder.
      4.2 Interruption of Service.  Transporter will endeavor to advise (by telephone or electronic medium) Shipper's dispatcher or authorized representative of an interruption as soon as practicable, either before or after interruption of service, but Transporter will have no liability for any failure to give such notice.  Transporter will not be liable for any loss or damage to any person or property caused, in whole or in part, by any interruption of Interruptible service under any Service Agreement or its applicable Confirmation.  Shipper will indemnify and hold harmless Transporter, its officers, agents, employees, and contractors from and against any and all suits, claims, liability, loss, damages, costs (including attorneys' fees and court costs) or encumbrances whatsoever brought by any person or entity against Transporter as a result of, or arising out of, any interruption of Interruptible service under any Confirmation. Should any third party with the right to control the Receipt Point(s), Delivery Point(s), or any other facilities needed for the receipt, transportation, or delivery of Gas hereunder limit or fail to authorize the use of any such facilities to perform services provided hereunder, Transporter will have no obligation hereunder to perform any transportation service, or receive or deliver Gas hereunder.
      4.3 Shipper's Obligations.  Shipper will tender the Scheduled Quantity at the Receipt Point(s), and accept such Gas, less the Retention Volume, at the Delivery Point(s). Shipper's obligations set forth in the preceding sentence are subject to: (i) an event of Force Majeure; (ii) Transporter's failure or refusal to receive Gas from or deliver Gas to Shipper as required under this Statement of Operating Conditions; (iii) any laws, rules, orders, or requirements of any governmental or regulatory authorities that limit, prevent, or interfere with Shipper's performance; and (iv) as otherwise provided under any other terms and conditions in this Statement of Operating Conditions, the applicable Service Agreement, its applicable Confirmation and any applicable Agency Agreement.
      4.4 Priority of Service and Scheduling.  From time to time, Transporter may not have sufficient capacity available to accommodate all Nominations through specific Receipt Point(s), specific Delivery Point(s), specific compression stations, and/or specific segments of Transporter's pipeline system (the "Impacted Location").  In such event, Transporter will schedule and perform service through the Impacted Location in the following order of priority:
1. Firm sales and Firm transportation service shall receive the highest priority. To the extent there is capacity available to accommodate some but not all of the Firm sales and Firm transportation Nominations, capacity, through the Impacted Location will be allocated among the Firm customers on a pro rata basis based on Customers' Nominations.  
2. Interruptible sales and Interruptible transportation shall receive the next highest priority.  To the extent there is sufficient capacity to accommodate all Firm Nominations and some, but not all, of the Interruptible sales and Interruptible transportation Nominations, capacity through the Impacted Location will be allocated among the Interruptible customers on a pro rata basis based on Customers' Nominations.  

Any curtailment of service shall be in reverse order of priority as set forth directly above.
Transporter shall not be liable for any loss or damage to any person or property caused, in whole or in part, by any interruption or curtailment of Interruptible service.  Shipper agrees to indemnify and hold harmless Transporter, its officers, agents, employees, and contractors, from and against any and all suits, claims, liability, loss, damages, costs (including attorneys' fees and court costs), or encumbrances whatsoever brought by any person or entity against Transporter as a result of, or arising out of, any interruption or curtailment of Interruptible service.
      4.5 Multiple Confirmations.  If Shipper has multiple Confirmations, Shipper will not be permitted to combine services available under such Confirmations. Specifically, Gas will be received under a particular Confirmation and will be delivered under the same Confirmation.
      4.6 Agency Agreement.  In the event that Shipper has transportation arrangements on one or more pipeline systems owned or operated by Transporter's affiliates, Transporter may enter into an agency agreement for ease of operation and administration and Shipper's convenience ("Agency Agreement").  In the Agency Agreement, Transporter or one of its affiliates may, among other things, agree to give and receive all notices and statements, receive payments for all amounts due under the transportation arrangements, give and receive Nominations and schedule quantities to be received and delivered, administer imbalances as requested by Shipper and adjust any mechanical difference that may arise with respect to measurement, billing and payments made or to be made, the allowance of credits and any undercharge or overcharge, with respect to such difference.  Notwithstanding Section 7.1, Shipper will submit Nominations to the party designated to receive such Nominations in the Agency Agreement and will submit such Nominations in the form and substance identified in the Agency Agreement.
      4.7 Intrastate Service. In addition to the services provided hereunder pursuant to NGPA Section 311, Transporter offers and performs intrastate transportation services that are subject to the exclusive jurisdiction of the Texas Railroad Commission, and that are exempt from FERC's regulation under the NGPA.  To provide Shippers with flexibility to access intrastate and/or interstate markets, Shippers may contract for both intrastate and NGPA Section 311 service on mutually agreeable terms, including a limitation that Shipper's combined usage under the separate intrastate and NGPA Section 311 agreements cannot exceed the MDCQ and SRC; provided, however, that Transporter's provision of NGPA Section 311 service, without undue discrimination, shall not be conditioned on Shipper's subscription to Firm intrastate capacity.  The description of available intrastate services contained herein is provided for informational purposes only and should not be construed to make such intrastate services subject to FERC regulation.
5. QUANTITY.  
      5.1 Maximum and Minimum Delivery and Receipt Quantities.  The maximum quantity of Gas that Transporter is obligated to receive hereunder at the Receipt Point(s) and deliver hereunder at the Delivery Point(s) during any given hour of any Day is 1/24 of the Shipper's Scheduled Quantity at an instantaneous standard volumetric flow rate at any point in time during the hour (the "Maximum Hourly Quantity"), unless otherwise mutually agreed to as specifically provided in the Confirmation on a not unduly discriminatory basis.  If Shipper has made transportation arrangements with one or more of Transporter's affiliates that have pipelines interconnecting with Transporter's pipeline, Shipper may agree to limit the quantity of Gas to an aggregate quantity across the pipelines of one or more of Transporter's affiliates.  Transporter has no obligation to receive, transport, and deliver quantities of Gas hereunder in excess of the Scheduled Quantity. Transporter has no obligation to receive or deliver Gas in quantities exceeding the physical capacity of the Delivery Point(s) or Receipt Point(s).  If the quantity of Gas tendered at any single Receipt Point(s) or Delivery Point(s) is less than 750 MMBtu per Day averaged over a Month, then as to any such Receipt Point(s) or Delivery Point(s), as applicable, Transporter may thereafter terminate the applicable Confirmation.
      5.2 All Quantities in MMBtu.  All quantities of Gas received and delivered under any Confirmation will be expressed in terms of MMBtu, including, without limitation, calculation of payments, determination of imbalances, and determination of Retention Volume.  
      5.3 Authorized Overrun Service.  
      5.3.1 Upon request of Shipper at the time it nominates Firm or Interruptible Service, Transporter may approve and schedule for receipt or delivery a quantity of Gas greater than the MDCQ or the SRC and Shipper's Retention Volume specified in the Confirmation ("Authorized Overrun Service"). Authorized Overrun Service will be available only if (i) Transporter determines in its discretion that it has sufficient capacity after first scheduling all Firm and Interruptible transportation service within the limits of all Shippers' MDCQs and SRCs, and (ii) Shipper has a designated Authorized Overrun Service rate in its Service Agreement or any applicable Confirmation.  Authorized Overrun Service will be scheduled on a first-come, first-served basis, with the priorities established in Section 4.4.
      5.3.2 Authorized Overrun Service is Interruptible and Transporter has absolutely no liability whatsoever in damages or otherwise for any interruption or cessation of Authorized Overrun Service.  
6. DELIVERY POINT(S) AND RECEIPT POINT(S).  
      6.1 Delivery Point(s).  Transporter will deliver Gas to Shipper, or its agent, under this Statement of Operating Conditions, the Service Agreement, its applicable Confirmation or any applicable Agency Agreement to the existing points of interconnection between Transporter's pipeline facilities and the pipeline or receipt facilities of other parties at the "Delivery Point(s)" or a pool consisting of an aggregate collection of such points, as identified in the Confirmation.  Delivery Point(s) may be modified, or additional Delivery Point(s) may be added to a Confirmation, by mutual agreement of the parties.  In the event Delivery Point(s) are added to a Confirmation, such additional Delivery Point(s) will be prioritized, for purposes of Section 4.4, based on the effective date of the amended Confirmation, unless otherwise mutually agreed.
      6.2 Receipt Point(s).  Shipper will tender Gas for delivery to Transporter under this Statement of Operating Conditions, the Service Agreement, its applicable Confirmation and any applicable Agency Agreement from the existing points of interconnection between Transporter's pipeline facilities and the pipeline or delivery facilities of other parties at the "Receipt Point(s)" or a pool consisting of an aggregate collection of such points, as identified in the Confirmation.  Except as set forth in other agreements between the parties, Receipt Point(s) may be modified, or additional Receipt Point(s) may be added to the Confirmation, by mutual agreement of the parties.  In the event Receipt Point(s) are added to a Confirmation, such additional Receipt Point(s) will be prioritized, for purposes of Section 4.4, based on the effective date of the amended Confirmation, unless otherwise mutually agreed.
      6.3 Allocation at Receipt and Delivery Point(s).  It is recognized that quantities of Gas may be transported through the Receipt Point(s) and/or the Delivery Point(s) for one or more parties other than the Shipper.  If that occurs, the measurement of Gas under this Agreement may involve the allocation of Gas receipts or deliveries. As between Transporter and Shipper, and subject to Section 4.1, Transporter will determine the allocation of all Gas deliveries hereunder.
      6.4 Payment of Fees.  Shipper must pay any and all transportation, measurement, testing, compression, or other fees or charges imposed by any third party on deliveries at any Receipt Point(s) or Delivery Point(s).  Notwithstanding the foregoing, in the event Transporter pays any such fees and charges, Shipper must reimburse Transporter for any such fees or charges paid by Transporter with respect to Shipper's Gas provided that Transporter has given Shipper written notice of the amount of such fees and charges and Shipper has agreed in writing to reimburse Transporter for such fees and charges.  If Shipper has not given Transporter written notice of its agreement to reimburse Transporter for any such fees and charges, Transporter will have no obligation to receive Gas for Shipper at any such Receipt Point(s) or deliver Gas for Shipper at any such Delivery Point(s) that may be subject to such fees and charges.
7. NOMINATIONS AND BALANCING.  
      7.1 Nominations.  Shipper or its agent shall submit the quantity of Gas in MMBtu Shipper expects to make available and deliver at each Receipt Point each Day, or portion thereof, and receive at each Delivery Point each Day, or portion thereof (the "Nomination") via Transporter's Web-based online nomination system.  Transporter, to the extent it is utilizing for its own account any available unused capacity shall submit a Nomination for such service in accordance with the same provisions and shall be treated in the same manner, as all other Nominations pursuant to the Nomination procedures set forth herein and the scheduling and priority of service provisions of this Statement of Operating Conditions.  Transporter will schedule and confirm Shipper's Nomination with upstream and downstream operators in accordance with the provisions of this Statement of Operating Conditions and the applicable Confirmation.  Shipper must have a Confirmation in place before a Nomination can be submitted.  Shipper will use reasonable efforts to notify Transporter by no later than 8:30 a.m. CCT on the business day prior to the Day(s) of the scheduled flow, of the capacity and path that the Shipper plans to utilize.  The deadline for submitting Nominations is 11:30 a.m. CCT the business day prior to the Day of the scheduled flow.  Shipper has the right to nominate quantities up to the MDCQ and the SRC. Any initial Nomination received after the deadline of 11:30 a.m. on the business day prior to the flow Day will be scheduled by Transporter when feasible.  Transporter has no obligation to, but may allow intraday Nomination changes at the Receipt Point(s) and Delivery Point(s) as operating conditions permit.
      7.2 Shipper's Balancing Obligations.  (i) For each Confirmation, the maximum quantity of Gas that Transporter is obligated to receive at the Receipt Point(s) and deliver at the Delivery Point(s) during any given hour of any Day is 1/24th of Shipper's Scheduled Quantity, unless otherwise mutually agreed to as provided in the applicable Confirmation on a not unduly discriminatory basis. (ii) Shipper will balance, on an hourly and daily basis, between the Gas received by Transporter at the Receipt Point(s), less the Retention Volume, and the Gas delivered at the Delivery Point(s). (iii) If Shipper does not comply with (i) and/or (ii) above, then Section 7.3, Hourly Imbalances, will apply.  Shipper will use all reasonable commercial efforts to monitor and adjust its Nominations, deliveries, and receipts to maintain the hourly and daily balances between the Receipt Point(s) and Delivery Point(s), and notify Transporter immediately of any imbalances or situations that may cause imbalances.  If Transporter is unable to receive the Scheduled Quantity at any Receipt Point(s) or deliver the Scheduled Quantity at any Delivery Point(s), Transporter will notify Shipper as soon as practicable.  Transporter has no obligation to receive and deliver quantities of Gas that differ from the Scheduled Quantity.
      7.3 Hourly Imbalances.  
      7.3.1 An hourly imbalance shall exist if the quantities of Gas delivered at a uniform hourly rate to a Delivery Point(s) for the account of Shipper are more than or less than the quantities of Gas received at the Receipt Point(s) for the account of Shipper, less the Retention Volume. The uniform hourly rate shall be the Scheduled Quantities divided by 24 ("Uniform Rate").  Any fluctuations in flow rate shall be permitted only upon the approval, and in the discretion, of Transporter. Unless otherwise mutually agreed to as specifically permitted in the Confirmation on a not unduly discriminatory basis, any permitted fluctuations in flow rate shall be on a case-by-case basis and shall not entitle any Shipper to future flow rate fluctuations.
      7.3.2 If upon Transporter's notice, Shipper does not adjust its hourly flows to a Uniform Rate, then in addition to any other remedies available to Transporter, Shipper may be assessed an hourly fee equal to (i) the highest daily price of gas at the location closest to the applicable Delivery Point(s) for that Day, stated in Gas Daily(r) (Platts, a division of The McGraw-Hill Companies, Inc.), or successor publication, in the column "Daily Price Survey" ("Gas Daily") plus one dollar ($1.00), or if Gas Daily is unavailable, another similar publication plus one dollar ($1.00), or (ii) five dollars ($5.00), whichever is greater, for each MMBtu for each hour applied to the under-delivered and over-delivered quantities, or (iii) as specifically set forth in the Confirmation or any Agency Agreement (the "Hourly Imbalance Fee").
      7.4 Operational Flow Order.  If, in Transporter's discretion, it is necessary or desirable in order to preserve the overall operational balance or integrity of Transporter's system, Transporter may issue an "Operational Flow Order".

      7.4.1 An Operational Flow Order may be issued if Transporter determines that changes in receipts or deliveries are necessary to maintain overall operational balance of Transporter's system or to enable Transporter to provide the services set forth in this Statement of Operating Conditions, the Service Agreement and/or its Confirmation.  The Operational Flow Order will identify with specificity the operational problem to be addressed, the action(s) Shipper must take, the time by which Shipper must take the specified action(s), and the period during which the Operational Flow Order will be in effect. Transporter will provide as much prior notice as possible, but not less than three (3) hours, to Shipper of actions Shipper must take to comply with an Operational Flow Order; provided that action by Shipper can be required on less than three (3) hours' notice if the nature of the Operational Flow Order is due to safety concerns or to protect the integrity of Transporter's pipeline system. 
      7.4.2 An Operational Flow Order may require Shipper to take any of the following actions or similar actions:
(a) Commence or increase supply inputs into Transporter's pipeline system at specific Receipt Point(s), or, alternatively, cease or reduce deliveries from Transporter's pipeline system at specific Delivery Point(s), both as directed by Transporter.
(b) Cease or reduce supply inputs into Transporter's pipeline system at specific Receipt Point(s) or, alternatively, commence or increase deliveries of Gas from Transporter's pipeline system at specific Delivery Point(s) both as directed by Transporter.
(c) Eliminate any transportation imbalances, as directed by Transporter.
(d) Conform actual receipts and deliveries to nominated and scheduled receipts and deliveries.
(e) Delay changes in deliveries up to twenty-four (24) hours to account for the molecular movement of Gas.
(f) Such other actions that are within Shipper's control that would tend to alleviate the operational situation to be addressed.

      7.4.3 Neither the Hourly Imbalance Fee under Section 7.3.2, the Daily Imbalance Fee under Section 7.5, nor the Cumulative Operational Imbalance Fee under Section 7.5
      7.4.4 will apply to Shipper's actions taken in compliance with Operational Flow Orders.
      7.4.5 Should Shipper fail to adjust its receipts and/or deliveries in compliance with an Operational Flow Order, then in addition to the charges set forth in Section 7.3.2, Shipper must pay Transporter a charge equal to the highest daily price of gas at the location closest to the applicable Receipt Point(s) or Delivery Point(s) as stated in Gas Daily plus two dollars ($2.00) or if Gas Daily is unavailable another similar publication plus two dollars ($2.00), or ten dollars ($10.00), whichever is greater, for each MMBtu received or delivered under the Confirmation at the Receipt Point(s) or Delivery Point(s) during each hour in which deliveries are greater than 110% or less than 90% of the Scheduled Quantities at the Receipt Point(s) for such hour, less Retention Volume, while the Operational Flow Order is in effect.
      7.4.6 Should Shipper fail to abide by an Operational Flow Order issued pursuant to this Section 7.4, Shipper will also be responsible for any and all damages asserted by any third parties, and will indemnify Transporter against any claims by any third parties resulting from Shipper's failure to comply with the Operational Flow Order.
      7.5 Gas Imbalance Account.  Any variance or imbalance between the quantity of Gas delivered at the Delivery Point(s) and the quantity of Gas received at the Receipt Point(s) (less the Retention Volume) during a given Day (the "Daily Imbalance") will be recorded in a gas imbalance account, the cumulative balance of which shall be the "Cumulative Operational Imbalance".
      7.5.1 If the Daily Imbalance exceeds 15% of the Scheduled Quantity or such other quantity or percentage specified in the Confirmation or any Agency Agreement (the "Daily Imbalance Tolerance"), then Transporter may require Shipper to pay Transporter an amount equal to $0.15 unless another amount is specified in each Confirmation or any Agency Agreement multiplied by each MMBtu of Daily Imbalance that is in excess of the Daily Imbalance Tolerance (the "Daily Imbalance Fee").  
      7.5.2 If the Cumulative Operational Imbalance exceeds 50,000 MMBtu or such other quantity specified in the Confirmation or any Agency Agreement (the "Cumulative Operational Imbalance Tolerance"), then Transporter may require Shipper to pay Transporter an amount equal to $0.15 unless another amount is specified in each Confirmation or any Agency Agreement multiplied by the quantity in the Gas Imbalance Account varying from the Cumulative Operational Imbalance Tolerance for each and every Day such event occurs, (the "Cumulative Operational Imbalance Fee"), or such other period of time specified in the applicable Confirmation or any Agency Agreement.
      7.5.3 Any physical flow adjustments will be made as permitted by Transporter (which shall be in accordance with the Nomination procedures herein) to adequately control imbalance levels.
      7.5.4 Transporter shall waive any fees due to imbalances which result from errors made by Transporter or which result from Force Majeure invoked by Transporter.
      7.5.5 For purposes assessing Cumulative Operational Imbalance Fees, Shipper will be allowed to net its Cumulative Operational Imbalance on Transporter's system with any cumulative operational imbalance on the systems of Transporter's affiliates, provided that Shipper has executed an agreement with Transporter and its affiliates providing for such netting.  Nevertheless, the Cumulative Operational Imbalance on Transporter's system will be settled by the physical receipt and delivery of Gas on Transporter's system, at the point(s) on Transporter's system at which the imbalance arose.
      7.5.6 In the event there is a balance in the Gas Imbalance Account, then the Gas Imbalance Account will be cashed out on the following terms (i) upon the termination of a Service Agreement or its applicable Confirmation, (ii) as specified in the applicable Confirmation or Agency Agreement, or (iii) at such other time as agreed to by the Parties, unless Transporter elects to require Shipper to settle the Cumulative Operational Imbalance by physical deliveries of Gas, in which case such obligation of Shipper shall survive the termination of the Confirmation.  If Gas is owed to Transporter, Shipper will pay Transporter a per MMBtu fee equal to the price agreed to in writing by the Parties, or the price set forth in the applicable Confirmation or Agency Agreement, or the higher of (i) the Market Center Spot-Gas Prices, East Texas, Katy Index as published in the first publication of the Month in Inside F.E.R.C. Gas Market Report published bi-monthly by The McGraw-Hill Companies, Inc., or successor publisher or such other price as provided in the applicable Confirmation (the "Index Price")") for the Month following termination or expiration of a Confirmation or (ii) the Index Price for the Month(s) in which the Confirmation terminated or expired. If Gas is owed to Shipper, Transporter shall pay a per MMBtu fee equal to the price agreed to in writing by the Parties, or the price set forth in the applicable Confirmation or Agency Agreement, or the lower of (i) the Index Price for the Month following termination or expiration of a Confirmation or (ii) the Index Price for the Month(s) in which the Confirmation terminated or expired.
      7.6 Transporter's Right to Balance.  Notwithstanding anything in this Statement of Operating Conditions to the contrary, Transporter may, at any time and from time to time, with notice to Shipper, restrict, interrupt, or reduce its receipts or deliveries of Gas at the Receipt Point(s) or Delivery Point(s), and direct Shipper to make adjustments in its receipts or deliveries, in order to maintain a daily and/or hourly balance or to correct an imbalance.  If Shipper fails or refuses to follow any such request from Transporter, Transporter may, without liability to Shipper, cease accepting or delivering Gas under this Agreement until the conditions causing the imbalance are corrected.
8. RATES.  
      8.1 Transportation Fees.  Each Month Shipper will, where applicable, pay Transporter the fees as set forth in the Confirmation ("Transportation Fees").  Unless otherwise provided in a Confirmation, (i) commodity fees will be charged on the quantity of Gas redelivered to Shipper at the Delivery Point(s), and, (ii) demand fees will be applied to the applicable SRC or MDCQ as provided in a Confirmation or Agency Agreement for each Day on which Shipper is entitled to use such SRC or MDCQ.  Transportation Fees and other charges due under this Statement of Operating Conditions, the Service Agreement, its applicable Confirmation or any Agency Agreement Shipper may execute will be invoiced and payable under Section 5 of the General Terms 
      8.2 Retention Volume.  In addition to the Transportation Fees and other charges payable under this Statement of Operating Conditions, the Service Agreement or its applicable Confirmation, Transporter will retain the percentage designated in the applicable Confirmation of the quantity of Gas received by Transporter at each Receipt Point(s) to compensate Transporter for fuel and lost and unaccounted for gas (the "Retention Volume").
9. TERM.  
      9.1 The Service Agreement will be effective on the date listed in the Service Agreement as the "Commencement Date", and will, subject to the terms and provisions of this Statement of Operating Conditions, remain in full force and effect from Month to Month until terminated by either party upon thirty (30) Days prior written notice to the other party, or as set forth in the applicable Confirmation or Agency Agreement; provided the Service Agreement shall continue to apply to all Confirmations then in effect until all Confirmations are completed. Termination, cancellation, or expiration of the Service Agreement or any applicable Confirmation will not extinguish any obligation that accrued before or as a result of the termination, cancellation, or expiration.  
10. ADDRESSES.  
      10.1 Addresses of Parties.  Except to the extent that oral notification is expressly permitted by this Statement of Operating Conditions, all notices, requests, demands, statements and payments provided for in this Statement of Operating Conditions must be given in writing at the addresses of the parties specified in the Service Agreement.
      10.2 Change of Address.  A party may change its address under the Service Agreement by giving thirty (30) Days' prior written notice. Notices and payments will be effective when they are delivered at the appropriate address specified in the Service Agreement, during normal business hours on a business Day. Notices delivered after business hours or on a weekend or holiday will be effective on the next business Day.
11. MISCELLANEOUS.  
      11.1 Assignment and Transfer.  This Statement of Operating Conditions, the Service Agreement and its applicable Confirmation are binding upon and will inure to the benefit of the parties and their respective successors, assigns and legal representatives.  However, the Shipper may not assign or transfer the Service Agreement and any applicable Confirmation, or any benefit or obligation arising thereunder, without first obtaining the Transporter's prior written consent, which consent will not be unreasonably withheld; provided, Shipper may transfer its interests, rights and obligations under the Service Agreement and any applicable Confirmation without Transporter's consent to (i) any parent, affiliate, or any successor in interest to substantially all of the assigning party's assets, provided the assignee has creditworthiness acceptable to Transporter, as determined in Transporter's reasonable commercial opinion and in a not unduly discriminatory manner, or (ii) any individual, bank, trustee, company, or corporation as security for any note, notes, bonds, or other obligations or securities of such assignor.  Any purported transfer or assignment without required consent will be a breach of the Service Agreement and its applicable Confirmation.
      11.2 Entirety.  This Statement of Operating Conditions, the Exhibits, each Service Agreement, Confirmation and Agency Agreement (if applicable) constitute the entire agreement between the parties covering the subject matter hereof, and there are no agreements, modifications, conditions, or understandings, written or oral, express or implied, pertaining to the subject matter hereof that are not contained herein or therein.
      11.3 Headings.  The captions or headings preceding the various parts of this Statement of Operating Conditions are inserted and included solely for convenience and will never be considered or given any effect in construing this Statement of Operating Conditions, or in connection with the intent, duties, obligations, or liabilities of Transporter and Shipper.
      11.4 Third Parties.  Nothing contained in this Statement of Operating Conditions, the Service Agreement or any applicable Confirmation, either express or implied, confers any rights, remedies, or claims upon any person or entity not a party to the Service Agreement or any applicable Confirmation, other than the successors or permitted assigns of the parties.
      11.5 Law and Venue.  THIS STATEMENT OF OPERATING CONDITIONS, THE SERVICE AGREEMENT, AND THE RIGHTS OF TRANSPORTER AND SHIPPER HEREUNDER AND THEREUNDER MUST BE INTERPRETED AND ENFORCED IN ACCORDANCE WITH THE LAWS OF THE STATE OF TEXAS WITHOUT GIVING EFFECT TO ANY CHOICE OR CONFLICT OF LAW PROVISION OR RULE (WHETHER OF THE STATE OF TEXAS OR ANY OTHER JURISDICTION) THAT WOULD CAUSE THE APPLICATION OF THE LAWS OF ANY JURISDICTION OTHER THAN THE STATE OF TEXAS. TRANSPORTER AND SHIPPER AGREE TO THE JURISDICTION OF THE FEDERAL AND STATE COURTS IN DALLAS COUNTY OR HARRIS COUNTY, TEXAS AND AGREE THAT ANY ACTION, SUIT, OR PROCEEDING CONCERNING, RELATED TO, OR ARISING OUT OF THIS STATEMENT OF OPERATING CONDITIONS OR THE SERVICE AGREEMENT WILL BE BROUGHT ONLY IN A FEDERAL OR STATE COURT IN DALLAS COUNTY OR HARRIS COUNTY, TEXAS AND NEITHER TRANSPORTER NOR SHIPPER MAY RAISE ANY DEFENSE OR OBJECTION OR FILE ANY MOTION BASED ON LACK OF PERSONAL JURISDICTION, IMPROPER VENUE, INCONVENIENCE OF THE FORUM, OR THE LIKE IN ANY CASE FILED IN A FEDERAL OR STATE COURT IN DALLAS COUNTY OR HARRIS COUNTY, TEXAS.
      11.6 Limitation on Damages.  EXCEPT FOR DAMAGES THAT ARISE OUT OF A BREACH OF THE WARRANTY CONTAINED IN SECTION 1.2 OF EXHIBIT "A," OR THE QUALITY PROVISIONS CONTAINED IN SECTION 4 OF EXHIBIT "A," IN NO EVENT WILL TRANSPORTER OR SHIPPER BE LIABLE TO THE OTHER FOR SPECIAL, INDIRECT, INCIDENTAL, PUNITIVE, EXEMPLARY, OR CONSEQUENTIAL DAMAGES, INCLUDING BUT NOT LIMITED TO THE LOSS OF USE, LOST PROFITS, IRRESPECTIVE OF WHETHER CLAIMS OR ACTIONS FOR SUCH DAMAGES ARE BASED ON CONTRACT, TORT, WARRANTY, NEGLIGENCE, STRICT LIABILITY OR OTHERWISE.
      11.7 Counterparts.  The Service Agreement may be executed in any number of counterparts, each of which will be deemed to be an original and all of which will constitute one and the same agreement.
      11.8 Exhibits.  The following exhibits are attached to this Statement of Operating Conditions and are incorporated by this reference:
Exhibit A	General Terms and Conditions
Exhibit B	Statement of Rates  

EXHIBIT "A"
TO
STATEMENT OF OPERATING CONDITIONS

GENERAL TERMS AND CONDITIONS
      These General Terms and Conditions ("General Terms") are attached to and constitute a part of Transporter's Statement of Operating Conditions. Unless otherwise stated herein, all capitalized terms herein shall have the meaning ascribed to them in the Statement of Operating Conditions.
1.	Laws and Regulations  
      1.1	Transporter's transportation services are subject to all present and future valid laws and lawful orders of all regulatory authorities now or hereafter having jurisdiction over the services or facilities used to provide such services, including, without limitation, the provisions of Subpart C of Part 284 of Title 18 of the Code of Federal Regulations ("Part 284 Regulations").  The Service Agreement and any applicable Confirmation are expressly made subject to any and all tariff and other rate filings made by Transporter and approved by any state regulatory body as such may be amended from time to time.  Transporter will have the right to propose to the FERC or other governing regulatory body such changes in its rates and terms of service at any time as it deems necessary, and Shipper's Service Agreement and any applicable Confirmation will be deemed to include any changes that are made effective pursuant to order or regulation or provisions of law, without prejudice to Shipper's right to protest the same. Any pipeline jointly owned by Transporter may be subject to and operated in accordance with the statement of operating conditions of the operator of the joint venture pipeline as applicable in any Service Agreement and its related Confirmation.  In the event of a conflict between (i) this Statement of Operating Conditions and/or the Part 284 Regulations; (ii) any applicable Agency Agreement; (iii) the applicable Confirmation; or (iv) the Service Agreement, the terms of the documents shall govern in the priority listed in this sentence. If any regulatory body having jurisdiction over the Service Agreement and any applicable Confirmation subjects Transporter's facilities to any greater or different regulation or jurisdiction, by order or otherwise, than that existing on the Effective Date, then Transporter may terminate the Service Agreement and Confirmation, anything herein to the contrary notwithstanding, and Transporter will have no further liability to Shipper or any other entity in connection with such termination. If any order or regulation of a regulatory body having jurisdiction over the Service Agreement and any applicable Confirmation prohibits Transporter from charging or collecting rates specified in the Confirmation, Shipper and Transporter shall negotiate in good faith to amend and restate the Confirmation so as to (i) conform to the applicable order or regulation affecting such rates and (ii) to maintain the total consideration initially agreed upon by Transporter and Shipper, to the maximum extent possible; provided that Transporter shall have the right to terminate, with thirty (30) Days written notice to Shipper, the applicable Confirmation if Shipper and Transporter are unable to mutually agree to amend and restate the Confirmation to accomplish the foregoing objectives. 
      1.2	Shipper warrants that at all times during the term of the Service Agreement or any applicable Confirmation, Shipper will commit no action or omission that will cause the transportation service provided to Shipper to fail to comply with all applicable rules and regulations of the applicable regulatory agencies, including, without limitation, the "on behalf of" provisions of the Part 284 Regulations.
2.	Pressures at Receipt and Delivery Point(s)  
      2.1	Shipper (or its designee) will deliver Gas to Transporter at the Receipt Point(s) at pressures sufficient to enter Transporter's pipeline system at such points; provided, however, that Shipper's delivery pressure into Transporter's system at the Receipt Point(s) may not exceed Transporter's maximum allowable operating pressure, as such may vary from time to time, at any such point or cause the pressure at any such point to exceed Transporter's maximum allowable operating pressure.  Unless otherwise provided in the applicable Confirmation or Agency Agreement, Transporter shall not have any obligations to alter its pipeline pressures, provide compression, or modify its pipeline operations in order to effectuate the receipt or delivery of Gas.
      2.2	Transporter will deliver Gas to Shipper or Shipper's designee at Transporter's operating pressure at the Delivery Point(s), as such may vary from time to time.
3.	Measurement 
      For the purposes of this Statement of Operating Conditions, the party metering the Gas, or whose designee meters the Gas, at a particular Receipt Point(s) or Delivery Point(s) is referred to as the "Metering Party" and the other party is referred to as the "Non-Metering Party."
      3.1	The measuring facilities shall be designed, installed, operated, and maintained by Transporter or its designee in accordance with the recommendations contained in the following standards:
      3.1.1	Orifice Measurement - American Gas Association Report Number 3 (herein referred to as AGA 3).
      3.1.2	Turbine Measurement - American Gas Association Report Number 7 (herein referred to as AGA 7).
      3.1.3	Positive Measurement - American National Standards Institute B109.2 (herein referred to as ANSI B109.2).
      3.1.4	Ultrasonic Measurement - American Gas Association Report Number 9 (herein referred to as AGA 9).
      3.2	If adequate metering facilities are already in existence at the Receipt and Delivery Point(s), such existing metering facilities will be used for so long as, in Transporter's reasonable judgment, the facilities remain adequate. If the metering facilities at any Receipt Point(s) or Delivery Point(s) are reasonably determined by Transporter to be inadequate, then the parties will mutually agree with respect to the equipment that must be added at such point(s) and the responsibility for payment of such equipment. If the parties are unable to agree upon the equipment to be added at any such point, or which party will be responsible to pay for such equipment, then such point will be removed from the Confirmation.
      3.3	The Non-Metering Party may, at its option and expense, install and operate meters, instruments and equipment, in a manner that will not interfere with the Metering Party's equipment, to check the Metering Party's meters, instruments, and equipment, but the measurement for the custody transfer of Gas for the purpose of this Agreement will be by the Metering Party's meter only, except as hereinafter specifically provided. The meters, check meters, instruments, and equipment installed by each party will be subject at all reasonable times to inspection or examination by the other party (Non-Metering Party), but the calibration and adjustment thereof will be done only by the installing party.
      3.4	All meters will be calibrated and/or proven on a schedule, but in no event will the calibration period be in excess of ninety (90) Days.  Notification of scheduled calibrations shall be made to all interested parties and reasonable effort will be made to accommodate each party's schedule; however, calibration will proceed at the scheduled time regardless of attendees. Records from all measuring equipment are the property of the Metering Party who will keep all such records on file for a period of not less than two (2) years. Upon request, the Metering Party will make available to the Non-Metering Party volume records from the measuring equipment, together with calculations therefrom, for inspection and verification, subject to return within thirty (30) Days after receipt thereof.
      3.5	Either Party shall have the right to conduct such pulsation tests as they deem prudent, at their sole risk and expense. If excessive pulsation is evident, mutually agreed modifications to operation or facility design will be made to reduce the effect of such pulsation.  If pulsation issues cannot be resolved in a mutually agreeable manner, either party shall have the right to refuse delivery or receipt of Gas at the Receipt Point(s) or Delivery Point(s).
      3.6	If the percentage of inaccuracy from the results of any test is greater than one percent (1%) volumetrically, the registration of such meter shall be corrected at the rate of such inaccuracy for any period which is definitely known or agreed upon.  In the event the period is not definitely known or agreed upon, such correction shall be for a period extending back one-half (1/2) of the time elapsed since the date of the last calibration. Following any test, measurement equipment found inaccurate shall be immediately restored by Transporter as closely as possible to a condition of accuracy.  If any measurement equipment is out of service or out of repair for any reason so that the amount of Gas delivered cannot be estimated or computed from the reading thereof, the amount of Gas delivered through such meter during the period such meter is out of service or out of repair shall be estimated and agreed upon by Transporter and Shipper upon the basis of the best data available using the first of the following methods which is feasible:
      3.6.1 by using the registration of any check meters if installed and accurately registering; 
      3.6.2 by correcting the error if the percentage of error is ascertainable by calibration, test or mathematical calculation; or
      3.6.3 by estimating the quantity of deliveries by comparison with deliveries during preceding period under similar conditions when the meter was registering accurately.
      3.7	Measurement Volume Computations 
      3.7.1	Units of measurement shall be determined in MMBtu derived from the calculation of gas volume (Mcf) and gas heating value (Btu/ft3), both at identical base conditions of temperature and pressure. The unit of volume of Gas shall be one (1) standard cubic foot at an absolute pressure of fourteen and sixty-five hundredths pounds per square inch absolute (14.65 Psia) and at a temperature of sixty degrees Fahrenheit (60F).
      3.7.2	Atmospheric pressure shall be assumed to be the pressure value as reasonably determined by Transporter for the county in which each of the Receipt Point(s) and Delivery Point(s) is located pursuant to generally accepted industry practices, but not less than twelve and nine-tenths (12.9) Psia nor more than fourteen and seven-tenths (14.7) Psia irrespective of the actual atmospheric pressure at such points from time to time.
      3.7.3	All metered volumes shall be computed in accordance with the standards set forth in Section 3.1 above.
      3.8	Records of calibration and or proving and data associated with the volume calculation are the property of the Metering Party who will keep all such records and data on file for a period of not less than two (2) years. Upon request, the Metering Party will make available to the Non-Metering Party records of calibration and or testing and data associated with the volume calculation, subject to return within thirty (30) Days after receipt thereof.
      3.9	Transporter shall sample and determine the Gross Heating Value, Relative Density and Compressibility received at the Receipt Point(s) or Delivery Point(s) utilizing the following standards:
      3.9.1	Gas Processors Association (GPA) 2166 - Obtaining Natural Gas Samples for Analysis by Gas.
      3.9.2	Gas Processors Association (GPA) 2261 - Analysis for Natural Gas and Similar Gaseous Mixtures by Gas Chromatography.
      3.9.3	Gas Processors Association (GPA) 2145 - Physical Constants for Paraffin Hydrocarbons and Other Components of Natural Gas.
      3.9.4	Gas Processors Association (GPA) 2172 - Calculation of Gross Heating Value, Relative Density, and Compressibility of Natural Gas Mixtures from Compositional Analysis.
      3.10 Transporter shall sample the flowing gas stream utilizing one of the following methods:  
      3.10.1	On-line Chromatography;
      3.10.2	Accumulated Sample - If this method is utilized the application of gas quality in the volume calculation will be during the time period the gas sample was accumulated;
      3.10.3	Spot Sample - If this method is utilized the application of gas quality in the volume calculation will be the time period beginning on the date the sample was obtained until the next sample is obtained.
4.	Quality  
4.1	Shipper represents and warrants that all Gas tendered for transportation at the Receipt Point(s) shall meet the Quality Specifications. "Quality Specifications" means, for each constituent, the more stringent of (i) the quality specifications required for the acceptance of Gas by any downstream pipeline, or (ii) Transporter's quality specifications set forth below (as modified from time to time or as provided in any Confirmation or Agency Agreement on a nondiscriminatory basis):
      4.1.1	Have a Heating Value of not less than nine hundred fifty (950) Btu per cubic foot nor more than one thousand one hundred (1,100) Btu per cubic foot.
      4.1.2	Be commercially free of dust, gum, gum-forming constituents, gasoline, liquid hydrocarbons, water, and any other substance of any kind that may become separated from the Gas during the handling thereof or that may cause injury to or interference with proper operation of the lines, meters, regulators, or other appliances through which it flows;
      4.1.3	Not contain more than five (5) grains of total sulfur nor more than one-fourth (1/4) grain of hydrogen sulfide per one hundred (100) standard cubic feet;
      4.1.4 Not contain any oxygen, and shall not contain more than two percent (2%) by volume of carbon dioxide, not contain more than three percent (3%) by volume of nitrogen or three percent (3%) by volume of total inert gases;
      4.1.5	Have a temperature of not more than one hundred twenty degrees Fahrenheit (120F) nor less than forty degrees Fahrenheit (40F);
      4.1.6	Not contain more than seven (7) pounds of water vapor per one million (1,000,000) standard cubic feet; and
      4.1.7	Have a hydrocarbon dew point below forty degrees Fahrenheit (40F).
4.2	In the event that the Gas being received does not conform to the standards outlined above, Transporter may, in its discretion and on a non-discriminatory basis, accept such Gas or restrict or refuse any volumes that are non-conforming or deficient.
4.3	Shipper shall be responsible for odorizing any part of the Gas delivered hereunder at the Delivery Point(s) which is diverted and/or used for any purpose for which odorization is required pursuant to regulations of the Texas Railroad Commission.
4.4	In the event that Shipper's Gas fails to conform to any of the Quality Specifications set forth above, including, but not limited to the hydrocarbon dew point or the gross heating value or any other specification set forth above or to a more restrictive specification imposed by a downstream pipeline to which Shipper has nominated Gas, Transporter, in its discretion and on a non-discriminatory basis, may accept such off-specification Gas for transportation and delivery to such downstream pipeline provided that Shipper has made arrangements to ensure that such off-specification Gas conforms to the applicable specification, including but not limited to any arrangements to treat, condition, or blend with other Gas (prior to it reaching such downstream pipeline). Upon request from Transporter, Shipper shall provide documentation acceptable to Transporter demonstrating that Shipper has made such contractual arrangements for such off -specification Gas on the path for which Shipper has nominated Gas. This provision shall not be construed as a general waiver to Transporter's specification and is only available where physical, blending, treatment and conditioning of Gas is contracted for and will take place prior to reaching the downstream pipeline whose specifications are to be met and such acceptance and service by Transporter shall not adversely impact markets on Transporter's system.
5.	Billing, Accounting, and Reports  
5.1	On or before the twenty-fifth (25th) Day of each Month, Transporter will render, a statement to Shipper setting forth, in terms of MMBtu and Mcf, the total volume and quantity of Gas received hereunder at the Receipt Point(s), the volume of Gas retained by Transporter, and the quantity of Gas delivered hereunder at the Delivery Point(s) during the immediately preceding Month and the amount payable therefore. Shipper agrees to pay Transporter by wire transfer in immediately available funds (identifying the invoice number) the full amount payable according to such statement on or before the later of the twenty-fifth (25th) Day of the Month in which the statement is rendered or ten (10) Days following the receipt thereof by Shipper. In the event such quantities are estimated for any period, corrected statements shall be rendered by Transporter to Shipper and paid by Shipper or credited by Transporter, as the case may be, in each instance in which the actual quantity received or delivered hereunder with respect to a Month shall be determined to be at variance with the estimated quantity theretofore made the basis of billing and payment hereunder. If an error is discovered in the amount billed in any statement rendered by Transporter, then such error will be adjusted within thirty (30) Days of the discovery of the error.
5.2	If a bona fide dispute arises as to the amount payable in any statement rendered, then Shipper will nevertheless pay the undisputed amount payable to Transporter under the statement rendered pending resolution of the dispute. Upon resolution of such dispute, Shipper will pay any monies owed Transporter per the terms of this Section 5.
5.3	In addition to all other remedies available to Transporter, should Shipper fail to pay any amount when the same becomes due, Shipper shall pay interest on outstanding balances accruing thereon at a rate equal to the prime rate from time to time in effect and charged by the JP Morgan, N.A., New York, New York or its successor, plus two percent (2%) per annum, (but in no event greater than the maximum rate of interest permitted by law) with adjustments in such rate to be made on the same Day as any change in such prime rate, for any period during which the same shall be overdue, such interest to be paid when the amount past due is paid. Each party hereto or its representative shall have the right at all reasonable times to examine the books and records of the other party to the extent necessary to confirm the performance of any obligation made under or pursuant to this Agreement or to verify the accuracy of any statement, charge, computation or demand made under or pursuant to this Agreement. Any statement shall be final as to all parties unless questioned within two (2) years after payment thereof has been made.
6.	Responsibility 
      6.1	Shipper shall be deemed to be in control and possession of the Gas prior to the receipt of the Gas by Transporter at the Receipt Point. Transporter shall be deemed to be in control and possession of the Gas after its receipt by Transporter at the Receipt Point and prior to its delivery to Shipper or for Shipper's account at the Delivery Point(s). The party in control and possession of the Gas will be responsible for and shall indemnify the other party, including the party's affiliates and their officers, directors, agents and employees, with respect to any losses, injuries, claims, liabilities, demands, damages, expenses, reasonable attorneys' fees and court costs caused thereby by accident, incident or otherwise or on account of royalties, taxes, payments, or other charges applicable and occurring while the Gas is deemed to be in its control or possession. Such indemnification shall not extend to claims made that are attributable to the delivery by Shipper to Transporter of Gas that does not meet the Quality Specifications contained herein; provided however that in any instance where Shipper, without prior written consent of Transporter, delivers Gas that does not Quality Specifications herein, Shipper shall indemnify Transporter for any claims, losses, or damages resulting from the delivery of such out of specification Gas. Each party hereto covenants that with respect to the Gas delivered or redelivered by it hereunder, it will indemnify and save the other party harmless from and against any and all suits, actions, causes of action, claims and demands arising from or out of any adverse claims by third parties claiming ownership of or an interest in the Gas so delivered or redelivered. Notwithstanding the foregoing, neither party shall be indemnified for its own negligence, and the parties acknowledge and agree that Shipper shall at all times have all lawful rights and/or title to all Gas transported hereunder. Subject to the other terms and conditions of this Statement of Operating Conditions, the Service Agreement and any applicable Confirmation, each party has the right to treat, process, and/or dehydrate the Gas prior to delivering said Gas to the other party. 
      6.2	Shipper agrees to reimburse Transporter upon invoice for the full amount of any taxes or charges (of every kind and character except corporate franchise and excess profits taxes and taxes measured by net income) levied, assessed or fixed by any municipal or governmental authority against Transporter or its business in connection with or attributable to the volumes, value or gross receipts from the transportation of the Gas received from Shipper hereunder or against such Gas itself or the act, right or privilege of ownership, production, severance, handling, transmission, compression, treating, distribution, sale, delivery or redelivery of such Gas, whether such tax or charge is based upon the volume, value or gross receipts from the transportation of such Gas or upon some other basis.
7.	Force Majeure
      7.1	If either party is rendered unable, wholly or in part, by Force Majeure (defined below) or other causes herein specified, to carry out its obligations under this Agreement other than the obligation to make payment of amounts due hereunder, it is agreed that on such party's promptly giving notice and reasonably full particulars of such Force Majeure in writing or facsimile or by email to the other party within a reasonable time after the occurrence of the cause relied on, then the obligations of the party giving such notice, so far as such obligations are affected by such Force Majeure or other causes herein specified, shall be suspended during the continuance of any inability so caused, but for no longer period, and such cause shall so far as possible be remedied with all reasonable dispatch.
      7.2	The term Force Majeure as employed herein means, to the extent not reasonably within the control of the party claiming suspension and which, by the exercise of reasonable diligence, such party is unable to prevent or overcome: acts of God; strikes, lockouts or other industrial disturbances; acts of the public enemy; sabotage; wars; blockades; insurrections; riots; acts of terror; epidemics; landslides; lightning; earthquakes; fires; storms; storm warnings; hurricanes; floods; washouts; arrests and restraints of the government and people, either federal or state, civil or military; civil disturbances; explosions; breakage; breakdown or accident to machinery, equipment or lines of pipe; the necessity of altering, maintaining, inspecting, replacing, changing the size of, substituting or removing pipelines or appurtenant facilities (but not including planned or scheduled maintenance); freezing of wells or lines of pipe or other delivery facilities; electric power unavailability or shortages; and any other causes, whether of the kind herein enumerated or otherwise, not reasonably within the control of the party claiming suspension, and which by the exercise of due diligence such party is unable, wholly or in part, to prevent or overcome. Such term likewise includes (1) in those instances where either party hereto is required to obtain servitudes, right-of-way grants, permits or licenses to enable such party to fulfill its obligations hereunder, the inability of such party to acquire, or the delays on the part of such party in acquiring, at reasonable cost and after the exercise of reasonable diligence, such servitudes, right-of-way grants or licenses, (2) in those instances where either party hereto is required to furnish materials and supplies for the purpose of constructing or maintaining facilities or is required to secure permits or permission from any governmental agency (federal, state or municipal, civil or military) to enable such party to fulfill its obligations hereunder, the inability of such party to acquire or the delays on the part of such party in acquiring, at reasonable cost and after the exercise of reasonable diligence, such materials and supplies, permits and permissions, and (3) curtailment or interruption of deliveries, receipts or services by third party purchasers, suppliers or customers as a result of an event of Force Majeure, or a breach by such third party purchasers, suppliers or customers. It is understood and agreed that the settlement of strikes or lockouts shall be entirely within the discretion of the party having the difficulty and that the above requirement that any Force Majeure shall be remedied with all reasonable dispatch shall not require the settlement of strikes or lockouts by acceding to the demands of the opposing party when such course is inadvisable in the discretion of the party having the difficulty.
      7.3	In the case of Shipper, Force Majeure does not include: mechanical failure or breakdown of electric generation plants, changes in market conditions or changes in demand for electricity at electric generation plants such as increases or decreases in electric generation that are required by the Electric Reliability Council of Texas, or any other agency or body having such authority, or failure of upstream transportation prior to delivery hereunder at the Receipt Point(s). Notwithstanding anything herein to the contrary, neither party shall be entitled to the benefits of Section 7.1 to the extent the event of Force Majeure is caused or affected by any or all of the following circumstances: (i) the party claiming excuse failed to remedy the condition and to resume the performance of its covenants or obligations with reasonable dispatch; or (ii) economic hardship, to include, without limitation, Shipper's ability to sell its Gas at a higher or more advantageous price to a market not requiring the transportation services contracted for herein; or (iii) the loss of Shipper's market or Shipper's inability to use or resell Gas transported hereunder, or (iv) the loss or failure of Shipper's Gas supply (except for failure of mechanical equipment provided for under Section 7.2) or depletion of reserves, unless such loss or failure is a result of a Force Majeure event in upstream facilities from the interconnect with Transporter to the receipt point on the gathering facility; provided however such Force Majeure shall not relieve Shipper from any obligations for dedications or commitments of Gas to Transporter made under or pursuant to the Service Agreement or any applicable Confirmation.
      7.4	Either party may partially or entirely interrupt its performance hereunder for the purpose of making necessary or scheduled inspections, alterations and repairs which are described as a maintenance event, but only for such time as may be reasonable and unavoidable; and the party requiring such relief shall give to the other party five (5) Days' notice of its intention to suspend its performance hereunder, except in cases of emergency where such notice is impracticable and shall endeavor to arrange such interruption so as to inconvenience the other party as little as possible. Should a Force Majeure or maintenance event occur the volumes to be delivered and / or received at the Receipt Point(s) and Delivery Point(s) by Transporter must be balanced with the hourly and daily nominated quantities.
8.	Waiver of Breaches, Defaults, or Rights
      No waiver by either party of any one or more breaches, defaults, or rights under any provisions of the Statement of Operating Conditions, the Service Agreement, or any applicable Confirmation will operate or be construed as a waiver of any other breaches, defaults, or rights, whether of a like or of a different character.  By providing written notice to the other party, either party may assert any right not previously asserted hereunder or thereunder or may assert its right to object to a default not previously protested. Transporter reserves the right to vary its operations from this Statement of Operating Conditions from time to time on a nondiscriminatory basis, and the parties agree that if it does so it will not be deemed to have waived its right subsequently to enforce the provisions of the Statement of Operating Conditions.  Variances from the terms of the Statement of Operating Conditions, Service Agreement or any applicable Confirmation shall not be considered to amend or alter the construction or interpretation of the Service Agreement or any applicable Confirmation. Except as specifically provided herein, in the Service Agreement or in any applicable Confirmation, in the event of any dispute under this Statement of Operating Conditions, the Service Agreement or any applicable Confirmation, the parties will, notwithstanding the pendency of such dispute, diligently proceed with the performance of the Confirmation without prejudice to the rights of either party.
9.	Remedy for Breach
      Except as otherwise specifically provided herein, if either party fails to perform any of the material covenants or obligations imposed upon it in this Statement of Operating Conditions, the Service Agreement, its applicable Confirmation or any Agency Agreement (except where such failure is excused under the Force Majeure or other provisions hereof or thereof), then the other party may, at its option (without waiving any other remedy for breach hereof), by notice in writing specifying the default that has occurred, indicate such party's intention to terminate the Service Agreement and any applicable Confirmation by reason thereof. The party in default will have thirty (30) Days from receipt of such notice to remedy such material default, and upon failure to do so, the non-defaulting party may elect to immediately terminate the Service Agreement and its applicable Confirmation. Notwithstanding the foregoing, Shipper's failure to pay Transporter within a period of ten (10) Days following Shipper's receipt of written notice from Transporter advising of such failure to make payment in full within the time specified previously herein, will be a default that gives Transporter the right to immediately terminate the Service Agreement and any applicable Confirmation, unless such failure to pay such amounts is the result of a bona fide dispute between the parties regarding such amounts and Shipper timely pays all amounts not in dispute. Such termination will be an additional remedy and will not prejudice the right of the party not in default: (i) to collect any amounts due it for any damage or loss suffered by it, and (ii) will not waive any other remedy to which the party not in default may be entitled for breach of this Statement of Operating Conditions, the Service Agreement or any applicable Confirmation.
*** END OF GENERAL TERMS AND CONDITIONS ***

EXHIBIT "B"
TO
STATEMENT OF OPERATING CONDITIONS

STATEMENT OF RATES
	Transporter's maximum rates for transportation service pursuant to Section 311(a)(2) of the NGPA pursuant to 18 C.F.R. Section 284.123(b)(1), as approved by the Texas Railroad Commission, are as follows:

Maximum
Minimum


Firm Transportation Service

Reservation Rate:

 



$0.4000 per MMBtu 





$0.0000 per MMBtu

Authorized Overrun Service
Authorized Overrun Rate:
$0.4000 per MMBtu
$0.0000 per MMBtu
Interruptible Transportation Service
Interruptible Transportation Rate:
$0.4000 per MMBtu
$0.0000 per MMBtu

	Fuel Retention:  as provided for in the Statement of Operating Conditions  
	








22

82793819v.1</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>4242020</filing_id>
      <filing_title>AMP Intrastate Amended SOC Filing</filing_title>
      <filing_type>1000</filing_type>
      <associated_filing_id>3232020</associated_filing_id>
      <associated_record_id>1</associated_record_id>
      <associated_option_code>A</associated_option_code>
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-02-24</current_effective_date>
      <ferc_order_date>2020-05-20</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
  </ferc_filing_data>
</Document>