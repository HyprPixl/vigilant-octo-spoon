<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Document xmlns="http://ferc.gov/etariffExport.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ferc_filing_data>
    <schema_version>2</schema_version>
    <company_id>C000945</company_id>
    <lead_applicant_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
    <tariff_id>44</tariff_id>
    <tariff_title>Rate Schedules and Agreements</tariff_title>
    <tariff_export_date>2025-09-16T19:38Z</tariff_export_date>
    <export_schema_version>2</export_schema_version>
    <record_data>
      <record_id>1000</record_id>
      <option_code>A</option_code>
      <record_title>CalPeco FERC Electric Rate Schedule No. 1 -- EBSA</record_title>
      <record_content_desc>Rate Schedule No. 1</record_content_desc>
      <record_version_num>2.0.0</record_version_num>
      <record_narrative_name>CalPeco FERC Electric Rate Schedule No. 1 -- EBSA</record_narrative_name>
      <collation_value>1000</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2013-08-09</proposed_effective_date>
      <priority_order>500</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>Liberty Utilities (CalPeco Electric) LLC
FERC FPA Electric Tariff

FERC Electric Rate Schedule No. 1

Emergency Backup Service Agreement

Effective Date:  August 9, 2013

EMERGENCY BACKUP SERVICE AGREEMENT

      THIS EMERGENCY BACKUP SERVICE AGREEMENT (this "Agreement") is entered into as of the 8th day of October, 2009, by and between Sierra Pacific Power Company, a Nevada corporation d/b/a NV Energy ("NV Energy"), and Liberty Utilities (CalPeco Electric) LLC, a California limited liability company ("CalPeco"). NV Energy and CalPeco are referred to herein collectively as the "Parties" and each individually, a "Party".
      WHEREAS, NV Energy owns and operates electric distribution and transmission systems in the states of Nevada and California;
      WHEREAS, the Parties have entered into an Asset Purchase Agreement dated April 22, 2009 (the "Asset Purchase Agreement"), pursuant to which CalPeco has agreed to acquire from NV Energy certain electric distribution and generation assets located in California, including the Kings Beach Generation Facility;
      WHEREAS, upon completion of the transactions contemplated by the Asset Purchase Agreement, (a) CalPeco will own and operate an electric distribution system in California, including the Kings Beach Generation Facility, and (b) NV Energy will own and operate electric transmission facilities in California and electric distribution and transmission systems in Nevada, certain of which are interconnected with CalPeco's electric distribution system in California;
      WHEREAS, from time to time following the Closing, each Party will need energy and/or capacity supplied by the Kings Beach Generation Facility to maintain and/or provide electric service for such Party's respective electric system;
      WHEREAS, NV Energy desires to acquire Emergency Backup Service from CalPeco, and CalPeco agrees to provide Emergency Backup Service to NV Energy, in accordance with and subject to the terms and conditions set forth in this Agreement; and
      WHEREAS, although CalPeco will own and operate the Kings Beach Generation Facility, NV Energy, in its capacity as the current Balancing Authority for the territory in which CalPeco provides electric service, has the ability to start up and otherwise dispatch energy from the Kings Beach Generation Facility;
      NOW THEREFORE, in consideration of the covenants, representations, warranties, and agreements hereinafter set forth, and intending to be legally bound hereby, the Parties agree as follows:
ARTICLE I 
DEFINITIONS
      1.1 Definitions. As used in this Agreement, the following terms have the meaning specified below:
      "Affiliate" has the meaning set forth in Rule 12b-2 of the General Rules and Regulations under the Securities Exchange Act of 1934.
      "Applicable Percentage" means (a) during the period commencing on the Closing Date and continuing through the 10th anniversary of the Closing Date, 60%; (b) during the period commencing on the first day following the 10th anniversary of the Closing Date and continuing through the 20th anniversary of the Closing Date, 40%; and (c) during any Extension Period, 50%.
      "Balancing Authority" means the responsible entity, registered with and certified by NERC, that integrates resource planning ahead of time, maintains load-interchange-generation balance within a Balancing Authority Area, and supports interconnection frequency in real time. NV Energy is registered and certified by NERC to perform this function within the NV Energy Balancing Authority Area.
      "Balancing Authority Area" means the collection of generation, transmission, and loads within the metered boundaries of a Balancing Authority. The Balancing Authority maintains load-resource balance within this area.
      "Business Day" means any day other than Saturday, Sunday and any day that is a holiday observed by CalPeco.
      "Change in Law Enactment Date" means the date upon which a Governmental Entity changes the Law, regardless of whether such change is effective retroactively, immediately, or prospectively.
      "Closing" has the meaning set forth in the Asset Purchase Agreement.
      "Closing Date" means the date upon which the Closing occurs.
      "Coordination Committee" has the meaning set forth in the System Coordination Agreement.
      "CPUC" means the California Public Utilities Commission or any successor organization.
      "Delivery Point" means a point of interconnection between NV Energy's distribution system in Nevada and CalPeco's distribution system in California. The initial Delivery Point will be the point of interconnection between NV Energy's distribution system and CalPeco's distribution system on the distribution circuits currently designated as circuit numbers 4202 and 5100 from the Brockway Substation. NV Energy may, with CalPeco's consent, which consent will not be unreasonably denied or delayed, from time to time after the Closing Date, designate one or more different or additional Delivery Points upon notice to CalPeco; provided, that any Delivery Point subsequently designated by NV Energy is equipped with metering equipment that records the real and reactive power flows at the Delivery Point in intervals of one hour or less and with communications equipment suitable for accessing the meter data at any time.
      "Distribution Capacity Agreement" means the Distribution Capacity Agreement dated October 8, 2009, between NV Energy and CalPeco.
      "Emergency Backup Service" means the provision to a Party of electric generation energy or capacity provided by the Kings Beach Generation Facility when necessary for the Party to maintain and/or provide electric service on the Party's electric transmission and/or distribution system.
      "Emergency Condition" means a condition or situation that (a) in the judgment of the Party making the claim, is imminently likely to endanger life or property; (b) in the case of NV Energy, is imminently likely (as determined in a non-discriminatory manner) to cause a material adverse effect on the security of, or damage to the NV Energy electric system; or (c) in the case of CalPeco, is imminently likely (as determined in a non-discriminatory manner) to cause a material adverse effect on the security of, or damage to the CalPeco electric system. System restoration will be considered an Emergency Condition.
      "Extension Period" means the First Extension Period or the Second Extension Period, as applicable.
      "Facility Balance Sheet" means the balance sheet created on the Closing Date and maintained thereafter by CalPeco, in accordance with United States generally accepted accounting principles and the provisions set forth in this Agreement, in respect of the Kings Beach Generation Facility, where the opening balance sheet amounts will equal 50% of the amounts of the property, plant, and equipment and real estate comprising the Kings Beach Generation Facility recorded in the applicable FERC accounts of NV Energy that are used to determine the Purchase Price (as defined in the Asset Purchase Agreement). The Facility Balance Sheet will reflect, in reasonable detail, all material asset categories comprising the Kings Beach Generation Facility. For certainty, the Facility Balance Sheet will not include any electric distribution or transmission assets owned by CalPeco that are interconnected to the Kings Beach Generation Facility or located on real estate upon which the Kings Beach Generation Facility is located.
      "FERC" means the Federal Energy Regulatory Commission or any successor organization.
      "First Extension Period" means the period of time during which NV Energy has extended the Term beyond the end of Year 20 pursuant to Section 2.3 of this Agreement.
      "Good Utility Practice" means any practices, methods, standards, guides, or acts, as applicable, that (a) are generally accepted in the North American electric industry during the relevant time period in the regulated electric utility industry, (b) are commonly used in prudent utility engineering, construction, project management, and operations, or (c) would be expected if electric distribution and transmission systems are to be conducted at a reasonable cost in a manner consistent with Laws applicable to such system and the objectives of reliability, safety, environmental protection, economy, and expediency. Good Utility Practice includes practices, methods, or acts generally accepted in the North American electric industry, and is not limited to the optimum practices, methods, or acts to the exclusion of all others.
      "Governmental Entity" means the United States of America and any other federal, state, local, or foreign governmental or regulatory authority, department, agency, commission, body, court, or other governmental entity.
      "GRC Effective Date" means the date on which new rates authorized by the CPUC for CalPeco become effective following a general rate application by CalPeco.
      "Interconnection Agreement" means the Interconnection Agreement dated October 8, 2009, between NV Energy and CalPeco.
      "Kings Beach Generation Facility" has the meaning set forth in the Asset Purchase Agreement.
      "Law" means any statutes, regulations, rules, ordinances, codes, and similar acts or promulgations of any Governmental Entity, and any order, judgment, writ, injunction, decree, directive, or award of a court, administrative judge, or other Governmental Entity acting in an adjudicative or regulatory capacity, or of an arbitrator, in each case having jurisdiction over the subject matter.
      "Machine Hour" means one Unit running at any output level for any period of less than or equal to one hour. As of the date hereof, each Unit's full output is two MWs and the Units are permitted in the aggregate to operate a maximum of 720 Machine Hours per Permit Year.
      "Make-Whole Amount" means a dollar amount equal to: (a) prior to the end of Year 20, the aggregate of the balances of each account on the Facility Balance Sheet as of the date of calculation of the Make-Whole Amount; or (b) after Year 20, zero.
      "Mandated Capital Amount" means an aggregate amount equal to $4,000,000 of Required Capital Expenditures.
      "Metering Equipment" has the meaning set forth in the Interconnection Agreement.
      "MW" means megawatt.
      "MWh" means megawatt-hour.
      "NERC" means North American Electric Reliability Corporation.
      "Non-Performance Period" means any period of time during which the Kings Beach Generation Facility is unable to generate power for Emergency Backup Service; provided, that a Non-Performance Period will not include any period of time during which (a) CalPeco cannot provide Emergency Backup Service and (b) CalPeco's inability to provide Emergency Backup Service (i) is excused under Section 8.1 and remains excused under Section 8.2, or (ii) results through no fault of CalPeco.
      "Permit" means each permit required to operate the Units. As of the date hereof, the Permits (a) include "Authority to Construct/Temporary Permit to Operate" permits (permit numbers AC-07-113A, AC-07-113B, AC-07-113C, AC-07-113D, AC-07-113E and AC-07-113F) issued by the Placer County Air Pollution Control District, and (b) set a maximum of 720 Machine Hours per calendar year, the total of which may be reached by the operation of any one Unit or any combination of Units.
      "Permit Year" means the chronological period of 12 months for which the Permits set the total allowed Machine Hours for the Units. Subject to any adjustment required by Section 4.4, a Permit Year will be January 1 through December 31 of a calendar year.
      "Person" means any individual, partnership, limited liability company, joint venture, corporation, trust, unincorporated organization, or Governmental Entity.
      "Power Purchase Agreement" means the Service Agreement dated April 22, 2009, between NV Energy and CalPeco, as amended by Amendment No. 1 to Service Agreement dated October 8, 2009, pursuant to which NV Energy has agreed to sell CalPeco its full requirements of energy and capacity upon the terms and conditions set forth therein.
      "PUCN" means the Public Utilities Commission of Nevada or any successor organization.
      "Required Capital Expenditure(s)" means any capital expenditure required to be made to the Kings Beach Generation Facility in order for it to operate in compliance with, or to satisfy the requirements of, any Permit, environmental or other applicable Law.
      "RTO" means a FERC-approved Regional Transmission Organization within the meaning of FERC Order 2000, 65 FR 809 (January 6, 2000).
      "Second Extension Period" means the period of time during which NV Energy has extended the Term beyond the First Extension Period pursuant to Section 2.3 of this Agreement.
      "Uncontrollable Force" means any event or circumstance that (a) prevents a Party from performing its obligations under this Agreement, (b) is not within the reasonable control of the claiming Party, and (c) cannot be avoided or overcome by the exercise of due diligence. Uncontrollable Force may include, but is not restricted to, flood, drought, earthquake, storm, fire, lightning, epidemic, war, riot, act of terrorism, civil disturbance or disobedience, labor dispute, labor or material shortage, outage of generation, transmission or distribution facilities, sabotage, restraint by court order or public authority, and action or inaction of, or failure or inability to obtain the necessary authorizations or approvals from, any Governmental Entity.
      "Unit" means any of the six diesel generation units at the Kings Beach Generation Facility, each of which has a total nameplate capacity of two MWs. 
      1.2 In addition, each of the following terms has the meaning specified in the Section of this Agreement set forth opposite such term:
Term
Reference
Agreement	
Introductory Paragraph
Arbitration Rules	
Section 11.2
Asset Purchase Agreement	
Recitals
CalPeco	
Introductory Paragraph
Capacity Charge	
Section 6.2
Energy Charge	
Section 6.3
Event of Default	
Section 2.2(b)
Excess Mandated Capital Amount	
Section 2.1(j)
Fixed Cost	
Section 6.2(a)
Initial NVE Event of Default	
Section 2.2(b)(i)
Metering Equipment	
Article V
Notice of Dispute	
Section 11.1
NV Energy	
Introductory Paragraph
Partial Capital Expenditure Option	
Section 2.1(j)(i)
Partial Required Capital Expenditure	
Section 2.1(j)(i)
Party; Parties	
Introductory Paragraph
Subsequent NVE Event of Default	
Section 2.2(b)(iii)
Taxes	
Section 7.4
Term	
Section 2.1(a)
Year	
Section 2.1(b)


ARTICLE II 
TERM AND TERMINATION
      2.1 Term and Termination.
            (a) The term of this Agreement (the "Term") will commence on the Closing Date and continue until the twentieth annual anniversary thereof unless otherwise terminated or extended in accordance with the provisions of this Agreement.
            (b) A "Year" means a period of time described in accordance with this Section 2.1(b). Year 1 of the Term will commence at 12:00 a.m. (Pacific Time) on the first day of the Term and end at 11:59 p.m. (Pacific Time) on the day immediately preceding the first annual anniversary thereof, and Year 2 will commence at 12:00 a.m. (Pacific Time) on the first annual anniversary of the first day of the Term and conclude at 11:59 p.m. (Pacific Time) on the day immediately preceding the second annual anniversary thereof. Years 3 through 20 (and, if the Term is extended pursuant to Section 2.3 below, each additional Year of any such extension) of the Term will commence and end in the same manner.
            (c) The Agreement will terminate automatically upon any termination of the Asset Purchase Agreement prior to the Closing.
            (d) This Agreement may be terminated prior to the expiration of the Term only in accordance with this Section 2.1. Any termination of this Agreement prior to the expiration of the Term will, if required by Law, become effective only upon submission to the FERC of a filing requesting termination and FERC's acceptance thereof.
            (e) Following the occurrence of an Event of Default resulting from a breach by CalPeco, NV Energy will have the right to terminate this Agreement upon providing at least one year's advance written notice (including stating the proposed termination date) to CalPeco.
            (f) Following the tenth anniversary of the Closing Date, NV Energy will have the right to terminate this Agreement upon (i) providing at least one year's advance written notice (including stating the proposed termination date) to CalPeco and (ii) making payment to CalPeco of the Make-Whole Amount.
            (g) CalPeco will, upon providing one year's advance written notice (including stating the proposed termination date) to NV Energy, have the right to terminate this Agreement if NV Energy fails to pay the Make Whole Amount when due hereunder.
            (h) CalPeco will, upon providing one year's advance written notice (including stating the proposed termination date) to NV Energy, have the right to terminate this Agreement if NV Energy fails to post security as CalPeco may request pursuant to Section 7.5 in accordance with the terms thereof.
            (i) This Agreement may be terminated at any time by the mutual agreement of the Parties.
            (j) If at any time either (i) CalPeco has funded Required Capital Expenditures equal to or greater than the Mandated Capital Amount (an "Excess Mandated Capital Amount") during the Term or (ii) the projected cost of any Required Capital Expenditure (or portion thereof) would, if paid by CalPeco, result in CalPeco finding an Excess Mandated Capital Amount during the Term, the following procedures shall apply:
                  (i) CalPeco shall notify NV Energy of the amount of Required Capital Expenditures to maintain operation of the Kings Beach Generation Facility at its then-current maximum output under the Permits. The CalPeco notice shall also state whether CalPeco believes that it can reliably serve its customers with the Kings Beach Generation Facility being authorized to operate at less than the then-current maximum output under the Permits (a "Partial Capital  Expenditure Option"). Any such notice by CalPeco of such Partial Capital Expenditure Option shall also provide NV Energy with CalPeco's first level approximation of the cost to implement the Partial Capital Expenditure Option (each cost identified in the notice for a Partial Capital Expenditure Option shall be referenced as a "Partial Required Capital Expenditure").
                  (ii) If within 45 days of delivery of the notice referenced in Section 2.1(j)(i), NV Energy agrees that the Required Capital Expenditure or that any one of the Partial Required Capital Expenditures may be included in the applicable Facility Balance Sheet accounts, CalPeco shall proceed with the Required Capital Expenditure or the Partial Required Capital Expenditure, as the case may be, and CalPeco shall be authorized to increase the applicable Facility Balance Sheet accounts by an amount equal to 50% of the Required Capital Expenditure or Partial Required Capital Expenditure, as the case may be, funded by CalPeco. In the event that CalPeco and NV Energy proceed with a Partial Capital Expenditure Option, CalPeco and NV Energy shall cooperate in good faith to amend the terms of this Agreement to reflect the reduced MW and/or Machine Hours associated with the Partial Capital Expenditure Option.
                  (iii) If within 45 days of delivery of the notice referenced in Section 2.1(j)(i), NV Energy has not authorized CalPeco to increase the applicable Facility Balance Sheet accounts by an amount equal to 50% of the Required Capital Expenditure or, if offered, any Partial Required Capital Expenditure funded by CalPeco, NV Energy shall be deemed to have not accepted the Required Capital Expenditure;
                  (iv) If NV Energy has been deemed to have not accepted the Required Capital Expenditure as provided in Section 2.1(j)(iii), CalPeco shall notify NV Energy within 45 days of its election of one of the following options:
                        (A) CalPeco will incur the full Required Capital Expenditure;
                        (B) CalPeco will not incur any portion of the Required Capital Expenditure and will permanently discontinue use of the Kings Beach Generation Facility; or
                        (C) CalPeco will incur an amount less than the full Required Capital Expenditure that will enable CalPeco to operate Kings Beach at a MW and Machine Hour level which satisfies CalPeco's then projected needs.
                  (v) Upon providing NV Energy notice of its election under Section 2.1(j)(iv) above, and upon providing one year's advance written notice (including stating the proposed termination date) to NV Energy, CalPeco shall have the right to terminate this Agreement; provided, however, that the requirement for one year's advance notice will be reduced to a lesser period of time if the decision net to make the applicable Required Capital Expenditure requires that CalPeco cease operating the Kings Beach Generation Facility in a lesser period of time.
                  (vi) With respect to any termination right that CalPeco exercises in accordance with Section 2.1(j)(v), the following provisions shall apply:
                        (A) With respect to a termination associated with CalPeco's election under Section 2.1(j)(iv)(B), (1) the effective date of termination of this Agreement will be the date upon which NV Energy is no longer able to receive Emergency Backup Service due to the Kings Beach Generation Facility having been permanently taken out of service, and (2) NV Energy will be obligated to pay the Make-Whole Amount (calculated as of the termination date) to CalPeco within three Business Days following the termination date.
                        (B) With respect to a termination associated with CalPeco's election under Section 2.1(j)(iv)(C), (1) CalPeco will notify NV Energy in writing of the date upon which the Kings Beach Generation Facility commences operations at the lower MW and/or Machine Hour level, and such date shall be the termination date of this Agreement, and (2) NV Energy will pay the Make-Whole Amount (calculated as of the termination date) to CalPeco within three Business Days following the termination date.
                        (C) With respect to a termination associated with CalPeco's election wider Section 2.1(j)(iv)(A), NV Energy shall have no obligation to make payment of the Make Whole Payment.
            (k) At any time after the completion of Year 18 of the Term or during any Extension Period, CalPeco will, upon providing two years' advance written notice (including stating the proposed termination date) to NV Energy, have the right to terminate this Agreement if CalPeco elects to permanently discontinue use of the Kings Beach Generation Facility. If CalPeco terminates this Agreement pursuant to this Section 2.1(k), notwithstanding any rights of NV Energy to extend the Term of the Agreement pursuant to Section 2.3, this Agreement will terminate on the date upon which NV Energy is no longer able to receive Emergency Backup Service due to the Kings Beach Generation Facility having been permanently taken out of service.
      2.2 Event of Default; Remedies: Make-Whole Payment: Survival.
            (a) Each of the following events constitutes an "Event of Default":
                  (i) NV Energy fails to pay all monies due to CalPeco in accordance with Article VII within 15 days following written notice by CalPeco of such failure by NV Energy to make full payment;
                  (ii) NV Energy fails to post security as CalPeco may request pursuant to Section 7.5, if such failure is not remedied within three Business Days of NV Energy's receipt of notice of such failure from CalPeco; and
                  (iii) Other than the defaults set forth in clauses (i) or (ii) above, a Party fails to discharge or perform any material duty or obligation under this Agreement, and such failure is not cured within 30 days after receipt of written notice from the other Party describing such failure; provided, however, that if such failure cannot be cured within such 30-day cure period despite diligent efforts to do so, the 30-day cure period will be extended by up to an additional number of days required to cure such failure so long as the obligated Party continues such diligent efforts and is able to remedy the failure within a reasonable period of time. For the avoidance of doubt, a Party's failure or inability to perform a material duty or obligation under this Agreement will not constitute an Event of Default pursuant to this Section 2.2(a)(iii) if such failure or inability to perform is excused under Section 8.1 and is not rendered ineligible for such excuse as provided for in Section 8.2 of this Agreement.
            (b) Following the occurrence of an Event of Default resulting from a breach by NV Energy, CalPeco's remedies for such breach will include: 
                  (i) upon the initial occurrence of an Event of Default resulting from a breach by NV Energy (the "Initial NVE Event of Default"), CalPeco may initiate the dispute resolution procedures in accordance with Article XI and seek to have NV Energy pay or be ordered to pay the amounts due; 
                  (ii) upon the Initial NVE Event of Default, CalPeco may elect to demand that NV Energy pay, within three Business Days of the Initial NVE Event of Default, the Make-Whole Amount and any expenses CalPeco incurs in accordance with this Section 2.2(b). If CalPeco exercises its right to demand payment of the Make-Whole Amount under this Section 2.2(b)(ii), the Make-Whole Amount will be calculated as of the date of the Initial NVE Event of Default, provided, however, that in the event NV Energy fails to pay CalPeco the Make-Whole Amount within three Business Days of the Initial NVE Event of Default, interest will accrue on the Make-Whole Amount at a rate equal to the applicable FERC approved interest rate, for the period commencing on the date of the Initial NVE Event of Default and ending on the date on which NV Energy pays the Make-Whole Amount; and 
                  (iii) upon any and each Event of Default resulting from a breach by NV Energy after the Initial NVE Event of Default, CalPeco will be entitled to receive from NV Energy, and NV Energy will pay to CalPeco: (a) an amount equal to One Hundred Thousand U.S. dollars ($100,000.00) for each such subsequent Event of Default by NV Energy, which the Parties agree to be a fair and reasonable liquidated amount in view of the ongoing necessity of this Agreement and the difficulty of determining the cost to CalPeco of actions that otherwise may be taken to avoid adverse consequences of a breach(s) by NV Energy, plus (b) an amount equal to CalPeco's actual money damages arising from such Event(s) of Default.
In the event that CalPeco has not exercised its right to demand payment of the Make-Whole Amount upon the Initial NVE Event of Default pursuant to Section 2.2(b)(ii), CalPeco will be entitled to the same rights and remedies set forth in this Section 2.2 with respect any Event of Default by NV Energy after the Initial NVE Event of Default. If CalPeco exercises its right to demand payment of the Make-Whole Amount as a result of any Event of Default by NV Energy after the Initial NVE Event of Default (a "Subsequent NVE Event of Default"), the Make-Whole Amount will be calculated as of the date of the Subsequent NVE Event of Default by NV Energy for which CalPeco demands payment of the Make-Whole Amount, and be payable within three Business Days of the Subsequent Event of Default, provided, however, that in the event NV Energy fails to pay CalPeco the Make-Whole Amount within three Business Days of the Subsequent NVE Event of Default, interest will accrue on the Make-Whole Amount at a rate equal to the applicable FERC approved interest rate, for the period commencing on the date of the Subsequent NVE Event of Default and ending on the date on which NV Energy pays the Make-Whole Amount. For the avoidance of doubt, except as provided in Section 2.1 or otherwise agreed by the Parties, CalPeco will not have the right to terminate this Agreement prior to the end of the Term hereof.
            (c) If this Agreement is terminated in accordance with Section 2.1 hereof, (i) CalPeco's obligation to make Emergency Backup Service available under this Agreement will cease upon the termination, and (ii) NV Energy's obligation to pay CalPeco any Capacity Charge or Energy Charge or any other amount accruing prior to the termination will survive until such obligation is fully discharged in accordance with the provisions of this Agreement. Notwithstanding anything set forth in Section 2.1 or Section 2.2, this Agreement will continue in effect after termination to the extent necessary to permit (A) the implementation of the Article XI procedures to determine and enforce any liability, payment, and indemnification obligations arising from acts or events that occurred while this Agreement was in effect, and (B) each Party to have, for a commercially reasonable period of time, access to the lands of the other Party, as contemplated by this Agreement, to read and service the Metering Equipment and disconnect, remove or salvage its own facilities and equipment.
      2.3 Extension of Term.
            (a) Subject to the terms and conditions set forth in this Section 2.3, NV Energy will have the right to twice extend the Term of this Agreement. The minimum term of any Extension Period will be one year, and the maximum term of any Extension Period will be five years. To exercise its right to extend the Term, NV Energy must (i) with respect to the first extension, notify CalPeco, in writing on or before the 19th anniversary of the Closing Date, of NV Energy's election to extend the Term and the requested expiration date of the First Extension Period, and (ii) with respect to the second extension, notify CalPeco, in writing at least 12 months prior to the expiration date of the First Extension Period, of NV Energy's election to extend the Term and the expiration date of the Second Extension Period.
            (b) Upon CalPeco's receipt of a timely extension notice from NV Energy that fully complies with Section 2.3(a), (i) the First Extension Period will commence at 12:00 a.m. (Pacific Time) on the first day following the last day of Year 20, and end at 11:59 p.m. (Pacific Time) on the expiration date set forth in such extension notice, and (ii) the Second Extension Period will commence at 12:00 a.m. (Pacific Time) on the first day following the last day of the First Extension Period, and end at 11:59 p.m. (Pacific Time) on the expiration date set forth in such extension notice. Upon CalPeco's receipt of a timely extension notice from NV Energy that fully complies with Section 2.3(a), the Term will automatically be extended to the expiration date set forth therein.
            (c) Notwithstanding any provision in this Section 2.3, in no event will the Term be extended if an Event of Default resulting from a breach by NV Energy has occurred and is continuing (i) as of the date upon which CalPeco receives a timely extension notice from NV Energy that fully complies with Section 2.3(a) above, and/or (ii) at 11:59 p.m. (Pacific Time) on, with respect to the First Extension Period, the last day of Year 20 or, with respect to the Second Extension Period, the last day of the First Extension Period.
ARTICLE III 
EMERGENCY BACKUP SERVICE
      3.1 Emergency Backup Service.
            (a) If NV Energy determines, in its reasonable judgment, at any time, but subject to the limitations in Machine Hours per Permit Year set forth in Section 3.1(c), that it requires Emergency Backup Service, NV Energy will be entitled to Emergency Backup Service for up to 100% of the current rated capacity of the Kings Beach Generation Facility (net of any operations that are required for start up, shut down or connection purposes), for delivery at the Delivery Point(s).
            (b) If both Parties concurrently decide to use electric energy or capacity generated by the Kings Beach Generation Facility, the Party requiring such energy or capacity for purposes of maintaining service on its system will have priority over the other Party to the full extent so required; provided, however, that if each Party requires energy or capacity from the Kings Beach Generation Facility for purposes of maintaining service on its system, each Party will be entitled to 50% of the amount of energy or capacity from the Kings Beach Generation Facility then available. In all other cases, and without limiting any other restrictions set forth in this Agreement, the amount of energy that may be delivered to NV Energy under this Agreement will be limited to 50% of the net power output then available from the Kings Beach Generation Facility, to the extent CalPeco requests the dispatch of the balance of such net output as required for purposes of providing electric service to CalPeco's customers. Neither Party will be in breach of this Agreement if, as a result of the physical characteristics of the interconnected systems of the Parties, a Party receives less or more of the net power output of the Kings Beach Generation Facility than that specified in this Section 3.1(b).
            (c) Each time that NV Energy receives Emergency Backup Service, CalPeco will calculate the amount of Machine Hours associated with the provision of such service. Notwithstanding any other provision of this Agreement, without the prior consent of CalPeco (such consent not to be unreasonably withheld or delayed), NV Energy will not be entitled to any Emergency Backup Service that would require operation of Units in excess of 50% of the permitted maximum Machine Hours for such Permit Year.
            (d) In connection with each Party's respective rights under this Article III, Machine Hours will be allocated to the Parties in accordance with the protocols set forth in Schedule "A" attached hereto.
            (e) Each Party will notify the other Party promptly after becoming aware that it requires Emergency Backup Service (including the amount of energy required). To the extent known, the notification will describe the circumstances regarding such Party's need for Emergency Backup Service and the anticipated duration of such need. Any verbal notice will be followed by written notice as soon as commercially practicable thereafter.
      3.2 Availability of Emergency Backup Service. If Emergency Backup Service is not available from the Kings Beach Generation Facility, CalPeco will use commercially reasonable efforts to cause the availability of the Kings Beach Generation Facility to be restored to provide Emergency Backup Service as promptly as possible, in the same amounts as agreed upon by the Parties in this Agreement.
      3.3 Emergency Conditions. Nothing herein will prevent either Party from taking such actions as may be necessary under Good Utility Practice to address an Emergency Condition.
ARTICLE IV 
OPERATION AND MAINTENANCE OF 
KINGS BEACH GENERATION FACILITY
      4.1 Operation and Maintenance.
            (a) At its sole expense, CalPeco will operate and maintain, in accordance with Good Utility Practice, the Kings Beach Generation Facility and CalPeco's other electric facilities and equipment needed to provide Emergency Backup Service under this Agreement. At its sole expense, NV Energy will operate and maintain, in accordance with Good Utility Practice, NV Energy's electric facilities and equipment needed to receive and make use of Emergency Backup Service under this Agreement.
            (b) Except as required by Law or to operate and maintain the Kings Beach Generation Facility in accordance with Good Utility Practice, neither Party will knowingly take any action that would be reasonably likely to reduce the Kings Beach Generation Facility's permitted available Machine Hours per Permit Year. Neither Party will have any obligation to seek to increase the Kings Beach Generation Facility's permitted available Machine Hours per Permit Year.
      4.2 Coordination. The Parties within the context of the Coordination Committee and as otherwise necessary or appropriate will confer regularly to coordinate the planning, scheduling and performance of preventative and corrective maintenance on the Kings Beach Generation Facility, consistent with Good Utility Practice. Without limiting the foregoing, CalPeco will: 
            (a) give NV Energy at least 30 days' advance written notice of any planned maintenance or inspection activity that would remove from service one or more Units or any of CalPeco's other electric facilities or equipment needed to provide Emergency Backup Service under this Agreement. Such notice will specify when each such Unit, facility, or equipment will be removed from service and when it is expected to be returned to service. CalPeco will use commercially reasonable efforts to advise NV Energy of any changes in the noticed maintenance or inspection schedule; 
            (b) with respect to any unplanned maintenance or inspection activity or unplanned outage that will or is reasonably expected to result in the removal from service of one or more Units or any of CalPeco's other electric facilities or equipment needed to provide Emergency Backup Service under this Agreement, CalPeco will provide NV Energy as much notice as is commercially practicable of such unplanned activity or outage. To the extent known to CalPeco, such notice will specify when each such Unit, facility, or equipment will or is reasonably expected to be removed from service and when it is reasonably expected to be returned to service. CalPeco will use commercially reasonable efforts to keep NV Energy advised of any changes in the unplanned maintenance or inspection schedule or outage; and
            (c) make commercially reasonable efforts to plan, schedule and implement its maintenance and inspection activities (i) in a manner that does not result in two or more Units being removed from service at the same time, and (ii) that results in the performance of such planned maintenance and inspection activities during the months of May through September.
      4.3 Compliance with Law. Each Party's obligations hereunder are subject to the Law. Each Party will operate its respective systems in compliance with the Law or NERC regulations. Each Party will make available and provide to the other Party all documentation reasonably requested by the requesting Party in order to satisfy its obligations to NERC or any Governmental Entity having valid jurisdiction over the requesting Party.
      4.4 Chance in Permit Year. Each Party will use its commercially reasonable efforts to cause each applicable Governmental Entity to permit the operating limitations on the Units to be measured from October 1 of any given year through September 30 of the following year (or such other dates as may be agreed to by the Parties). Upon the effectiveness of any such revised period of Machine Hour operating limitations, the definition of Permit Year in this Agreement will, without any further action by the Parties, be deemed to have been amended to reflect such revised period.
      4.5 Operating Protocols. Prior to the Closing, the Parties will work together to develop protocols for the operation and dispatch of the Kings Beach Generation Facility, to the extent necessary or appropriate to operate the Kings Beach Generation Facility and provide Emergency Backup Service in accordance with the terms of this Agreement.
ARTICLE V 
METERING EQUIPMENT
      NV Energy will install Metering Equipment sufficient to enable the accurate measurement and billing of the Emergency Backup Service used by NV Energy under this Agreement. The cost of the purchase, installation, testing and construction of the Metering Equipment prior to the Closing Date will be borne by the Parties as provided in Section 7.5(b) of the Asset Purchase Agreement. The installation, construction and operation of the Metering Equipment will otherwise and after the Closing Date be governed by the terms and conditions of the Interconnection Agreement.
ARTICLE VI 
CAPACITY CHARGE; ENERGY CHARGE
      6.1 Balance Sheet Adjustments. The balance of each account on the Facility Balance Sheet will be:
            (a) decreased by the portion of any Capacity Charge paid by NV Energy which relates to depreciation for such asset category, calculated in accordance with the depreciation time frames, rates, and methods used to calculate the Capacity Charge (as set forth in Section 6.2(a) below); 
            (b) decreased by the amount of the Make-Whole Payment (or portion thereof) paid by NV Energy applicable to such asset category; and
            (c) increased by 50% of the capital costs applicable to such asset category incurred by CalPeco for (i) necessary repair or replacement of any component thereof with comparable equipment upon the failure or expiration of the useful life of such equipment or (ii) Required Capital Expenditures. For the avoidance of doubt, except as provided above, the balances of the asset categories comprising the Facility Balance Sheet will not be increased in respect of (and therefore the determinations, allocations and calculations relating to the Capacity Charge will exclude) any future expansion of or other improvements to the Kings Beach Generation Facility.
      Notwithstanding anything set forth above or elsewhere in this Agreement, (i) NV Energy will at all times be responsible for its proportionate amount of the Mandated Capital Amount funded by CalPeco, up to a maximum aggregate amount equal to $2 million; (ii) CalPeco will have the unilateral right during the Term to increase the balances of any or all Facility Balance Sheet accounts pursuant to Section 6.1(c)(ii) for amounts funded by CalPeco, up to a maximum aggregate amount equal to $2 million unless otherwise approved by NV Energy; and (iii) any such increases in excess of the $2 million maximum amount will require the prior written approval of NV Energy.
      For purposes of illustration: 
* if at any time the account balance in the Facility Balance Sheet accounts relating to Required Capital Expenditures equals $1.8 million, and CalPeco subsequently expends an additional $800,000 in Required Capital Expenditures, CalPeco will have the unilateral right to increase the balance in the applicable Facility Balance Sheet accounts by $200,000 (i.e., the lesser of (A) the amount required to bring NV Energy's proportionate share of Required Capital Expenditures up to $2 million and (B) $400,000, which is NV Energy's 50% proportion of the $800,000 of Required Capital Expenditures funded by CalPeco); and 
* if at any time the account balance in the Facility Balance Sheet account relating to Required Capital Expenditures equals $1.8 million, and CalPeco subsequently expends $250,000 in Required Capital Expenditures in connection with its election to fund an amount less than a full Required Capital Expenditure under Section 2.1(j)(iv)(C) of this Agreement, CalPeco will have the unilateral right to increase the balance in the applicable Facility Balance Sheet accounts by $125,000 (i.e., NV Energy's 50% proportion of the $250,000 of Required Capital Expenditures funded by CalPeco).
      6.2 Capacity Charge. For each calendar year during the Term, NV Energy will, subject to possible reduction pursuant to Section 7.2(b), pay an annual capacity charge (the "Capacity Charge") to CalPeco that consists of the components specified in Section 6.2(a). The Capacity Charge will be calculated in accordance with this Article VI (including, for the avoidance of doubt, calculating and recalculating the Capacity Charge on the dates contemplated by Sections 6.2(b) and (c) below). The Capacity Charge will be prorated for partial calendar years and months at the beginning and end of the Term, with amounts for partial years prorated on the basis' of a 365-day calendar year and amounts for partial months prorated based on the Capacity Charge for the entire month, the number of days in the month for which a Capacity Charge is due, and the number of days in the month.
            (a) NV Energy will pay CalPeco the agreed-upon percentages of the Fixed Costs set forth in Section 6.2(b) associated with the ownership and operation of the Kings Beach Generation Facility. "Fixed Costs" are defined to mean the sum of:
                  (i) The aggregate annual revenue requirement for the Kings Beach Generation Facility in respect of return on and return of each of the asset category balances set out in the Facility Balance Sheet, as of the date of determination of the Capacity Charge. The annual revenue requirement will be determined in accordance with the procedures historically utilized by the CPUC prior to the Closing Date, based upon (A) a 20-year depreciation life of the property, plant and equipment comprising the Kings Beach Generation Facility and (B) (i) for the period prior to the first GRC Effective Date after the Closing Date, a pro forma capital structure based upon 50% debt and 50% equity, a 10.7% return on equity, and CalPeco's actual cost of debt, and (ii) for the period following the first GRC Effective Date after the Closing Date, the actual capital structure (i.e., percentage of equity and debt, return on equity, and cost of debt) approved by the CPUC for CalPeco and effective on the GRC Effective Date. Amounts to be depreciated under Section 6.2(a)(i)(A) will be depreciated using straight-line depreciation; and
                  (ii) The annual fixed administrative, operating and maintenance costs associated with the Kings Beach Generation Facility, including the reasonable costs associated with CalPeco maintaining the necessary and appropriate fuel inventory (determined in accordance with the procedures historically used by the CPUC in authorizing rate recovery for such fuel inventory carrying costs) for purposes of having the capability to operate the Kings Beach Generation Facility and any Taxes (other than Taxes imposed on the net income of CalPeco) associated with the ownership or operation of the Kings Beach Generation Facility.
            (b) The annual amount of the Capacity Charge will equal the Applicable Percentage of the Fixed Costs.
            (c) The Capacity Charge will be calculated by CalPeco at the commencement of the Term, and recalculated thereafter (i) on January 1 of the year following the third anniversary of the Closing Date and thereafter on January 1 of every third year, (ii) if applicable, as of the date upon which the Make-Whole Amount is paid to CalPeco by NV Energy under Article II, (iii) as of the date on which the Applicable Percentage changes, including the first day of Year 11 and the first day of the First Extension Period. For purposes of illustration, a hypothetical calculation of the Capacity Charge is provided on Schedule "B" to this Agreement.
            (d) Subject to Section 7.2(b), an amount equal to one-twelfth of the Capacity Charge will be due and payable by NV Energy to CalPeco each calendar month during the Term.
      6.3 Energy Charge. In addition to the Capacity Charge payable in accordance with Section 6.2, NV Energy will pay to CalPeco each month an energy charge (the "Energy Charge"). The Energy Charge will be a prorated dollar amount allocated to NV Energy based upon the MWh generated by the Kings Beach Generation Facility allocated to NV Energy in accordance with the allocation procedures set forth in Schedule "D" attached hereto, where the amount to be prorated is the sum of:
            (a) the cost of the fuel consumed (determined on a first-in-first-out basis) by the Kings Beach Generation Facility (including start-up, shutdown and connection fuel); 
            (b) the variable maintenance costs incurred in the operation and maintenance of the Kings Beach Generation Facility; and 
            (c) as provided in Section 7.4, the Taxes imposed with respect to the use, generation and/or delivery of power.
      6.4 No Duplication of Payment. A specific cost recovered by CalPeco under this Article VI may not be recovered through both the Capacity Charge and the Energy Charge. For the avoidance of doubt, to the extent CalPeco recovers a specific cost through the Energy Charge, then CalPeco may not recover the same cost through the Capacity Charge, and vice versa. This provision is intended to prevent NV Energy from paying the same cost twice under this Article VI.
ARTICLE VII 
BILLING; PAYMENT; TAXES
      7.1 Billing. CalPeco will submit to NV Energy, on or before the 20th day of each calendar month, an invoice of the amount due for the preceding calendar month. Each invoice will state the calendar month to which the invoice applies, and specify (a) the monthly pro rata allocation of the Capacity Charge due for that month, (b) any adjustment to the Capacity Charge for any periods of any Non-Performance Period during the month, and (c) the Energy Charge due. Each invoice will provide in reasonable detail the information required for NV Energy to calculate such Capacity Charge and Energy Charge.
      7.2 Payment.
            (a) CalPeco will send invoices to NV Energy at the address provided in Section 14.6, and NV Energy will pay invoices within 20 days of receipt. All payments will be made in immediately available funds payable to CalPeco, or by wire transfer to a bank named and account designated by CalPeco. Payment of invoices by NV Energy will not constitute a waiver of any rights or claims it may have under this Agreement.
            (b) The Capacity Charge for the month will be reduced during any Non-Performance Period by a pro rata amount directly associated with the number of days of any Non-Performance Periods experienced during the billing month, but such reduction will be applicable only with respect to the MW pro rata portion of Emergency Backup Service that is unavailable to NV Energy during any such Non-Performance Period in such calendar month. The following examples are provided for illustrative purposes:
* Assumption: absent the occurrence of any Non-Performance Period, a monthly payment of $10,000 is payable by NV Energy for the Capacity Charge in a calendar month with 30 days (i.e., a pro rata rate of $333.33 per day).
* Impact of Complete Non-Performance Period: if a Non-Performance Period occurs in which no generation is available from the Kings Beach Generation Facility to provide Emergency Backup Service for a period of 10 days during such calendar month, then the monthly Capacity Charge payable by NV Energy would be reduced by $3,333.30 (i.e., product of multiplying 10 days by $333.33).
* Impact of Partial Non-Performance Period: if a Non-Performance Period occurs in which 6 MW of generation is not available from the Kings Beach Generation Facility to provide Emergency Backup Service for a period of 10 days during such calendar month, then the monthly Capacity Charge payable by NV Energy would be reduced by $1,666.65, which is an amount equal to 50% (i.e., 6 MW divided by the 12 MW of nameplate capacity of the Units) of the product of 10 days multiplied by $333.33.
            (c) Amounts, if any, that have not been paid by NV Energy on or before the due date will be payable with interest calculated daily, at a rate equal to the applicable FERC approved interest rate, for the period beginning on the day after the due date and ending on the date of the payment.
      7.3 Billing Disputes.
            (a) If (i) CalPeco fails to issue an invoice for some or all of the charges payable by NV Energy during a calendar month or (ii) CalPeco finds one or more errors in an invoice it has issued, CalPeco will have the right to issue an invoice or a revised invoice for the charges; provided, however, that the invoice or revised invoice must be issued within two years of the date on which the original invoice should have been or was issued, whichever is applicable. Any such invoice or revised invoice will include an explanation of the charges or the revised charges, whichever is applicable. CalPeco's invoice or the difference between the original invoice and the revised invoice will be due and payable by NV Energy on or before the 30th day after NV Energy's receipt of such invoice or revised invoice.
            (b) NV Energy may, in good faith, dispute any of the charges on an invoice by providing written notice of the dispute to CalPeco within two years of the date of the original invoice, or the date of the last revised invoice if one or more revised invoices were issued, for a billing period. NV Energy's notice will specify the amount in dispute and state the basis for the dispute. Upon NV Energy providing notice that it disputes any of the charges on an invoice, the Parties will promptly meet and endeavor to resolve the dispute. If the Parties cannot resolve the dispute in this manner within 60 days (or such longer period of time mutually agreed upon by the Parties in writing) of NV Energy's notice to CalPeco of a dispute, either Party may proceed under the provisions of Article XI to resolve the dispute; provided, that in proceeding under the provisions of Article XI, (i) the dispute notice provided by NV Energy under this Section 7.3(b) will constitute a Notice of Dispute under Section 11.1 and (ii) the 30-day negotiation period contemplated by Section 11.1 will not apply, the result of which is that the Parties will initiate arbitration immediately pursuant to remaining provisions of Article Xl.
            (c) NV Energy will be obligated to pay the entire amount of an invoice when due even if it disputes some or all of the charges. If a dispute is ultimately resolved in NV Energy's favor, CalPeco will promptly refund any amounts owed to NV Energy, plus interest calculated daily at a rate equal to the applicable FERC approved interest rate, for the period beginning on the first Business Day after NV Energy paid the disputed amount to CalPeco and ending on the date CalPeco pays the refund to NV Energy.
      7.4 Taxes. CalPeco will be responsible for the payment of all taxes, fees, levies, penalties, licenses or charges imposed by any Governmental Entity on or with respect to the generation and sale of power from the Kings Beach Generation Facility ("Taxes") that arise prior to the Delivery Points. NV Energy will be responsible for and pay or cause to be paid all Taxes that arise at or after the Delivery Points. If a Party is required to remit or pay Taxes that are the other Party's responsibility hereunder, the Party responsible for such Taxes will promptly reimburse the other Party for such Taxes.
      7.5 Credit Support. Should NV Energy's creditworthiness, financial responsibility, or performance viability become unsatisfactory to CalPeco in its reasonably exercised discretion with regard to CalPeco's provision of Emergency Backup Service pursuant to this Agreement, CalPeco may require NV Energy within three Business Days of CalPeco's written demand for assurances to provide assurances in the form of the posting of (a) a letter of credit or (b) other collateral or security acceptable to CalPeco, in its sole reasonable discretion, in the amount of Two Hundred Fifty Thousand U.S. dollars ($250,000.00) for the benefit of CalPeco. If NV Energy posts a letter of credit, the letter of credit will be in the form set forth in Exhibit "C" to this Agreement. Events which may trigger CalPeco's questioning of NV Energy's creditworthiness, financial responsibility, or performance viability for purposes of this Section 7.5 include (i) NV Energy has failed to perform, in any material respect, pursuant to the provisions of other contracts, or (ii) NV Energy has debt that (x) was rated as investment grade on the Closing Date and such debt falls below the investment grade rating by at least one rating agency or (y) was below investment grade on the Closing Date and the rating of that debt is downgraded further by at least one rating agency.
ARTICLE VIII 
EXCUSE OF PERFORMANCE; LIMITATION ON EXCUSED PERFORMANCE
      8.1 Excuse of Performance. Subject to Section 8.2, no Party will be considered to be in breach of this Agreement, and a Non-Performance Period will not be deemed to exist, to the extent that such Party's failure or inability to perform its obligations under this Agreement or NV Energy's inability to obtain Emergency Backup Service (a) results from an action or inaction expressly authorized or approved in writing by the other Party, (b) results from an action or inaction required by Law, (c) results from action or inaction taken in accordance with Good Utility Practice, including CalPeco operating and maintaining the Kings Beach Generation Facility pursuant to Section 4.1 and taking action to restore Emergency Backup Service in a manner consistent with Good Utility Practice, (d) is due solely to an Uncontrollable Force, or (e) results from a breach of this Agreement by the other Party.
      8.2 Limitation on Excused Performance. Notwithstanding Section 8.1, no Party will be excused from performance in accordance with Section 8.1(a), (c), (d), or (e) or relieved of liability under this Agreement to the extent that such failure is due to (a) its own negligence, (b) its lack of sufficient monetary resources, or (c) removable or remediable causes that it fails to remove or remedy in a manner consistent with Good Utility Practice and within a commercially reasonable time period. Nothing contained in this Article VIII will be construed to require a Party to settle a strike or labor dispute in which it is involved on terms that it considers, in its sole discretion, to be unreasonable. Nothing contained in this Article VIII is intended or will be construed to abate, postpone or in any respect diminish NV Energy's obligations to make any payments due to CalPeco pursuant to this Agreement.
      8.3 Notice and Action. Any Party rendered unable to fulfill any of its obligations by reason of Uncontrollable Force or otherwise will comply with the applicable notice provisions in this Agreement or otherwise give prompt notice of such fact to the other Party, and will exercise due diligence to remove such inability within a commercially reasonable period of time; provided, that the failure to provide prompt notice will not prevent a Party from being entitled to claim relief for failure to perform its obligations under this Article VIII. Each notice provided pursuant to this Section 8.3 will include an estimate of the amount of time that will be required to remove the inability to perform its obligations under this Agreement.
ARTICLE IX 
TITLE; RISK OF LOSS; INDEMNIFICATION
      9.1 Title; Risk of Loss. Title and risk of loss to any energy supplied by CalPeco hereunder will pass from CalPeco to NV Energy at the Delivery Points. CalPeco assumes all responsibility with respect to such energy prior to its delivery to NV Energy at the Delivery Points. NV Energy assumes all responsibility with respect such energy after its delivery to NV Energy at the Delivery Points.
      9.2 Indemnification. CalPeco will indemnify NV Energy and save it harmless from all losses, liabilities or claims, including reasonable attorneys' fees and court costs, from any and all persons arising from or out of claims of personal injury (including death) or property damage from energy generated by the Kings Beach Generation Facility which attach before title and risk of loss passes from CalPeco to NV Energy. NV Energy will indemnify CalPeco and save it harmless from all losses, liabilities or claims, including reasonable attorneys' fees and court costs, from any and all persons arising from or out of claims regarding personal injury (including death) or property damage from energy generated by the Kings Beach Generation Facility which attach after title and risk of loss passes from CalPeco to NV Energy.
      9.3 Waiver of Consequential Damages; Limitation on Damages. Notwithstanding any other provision of this Agreement, in no event will a Party be liable to the other Party, whether in contract, warranty, tort, negligence, strict liability, or otherwise, for special, indirect, incidental, consequential (including lost profits or revenues, business interruption damages and lost business opportunities), exemplary or punitive damages related to, arising out of, or resulting from performance or nonperformance of this Agreement. With respect to a Party, (a) the limitation on damages under this Section 9.3 will not apply with respect to claims brought by third persons for which such Party is entitled to indemnification under this Agreement, and (b) damages for which a Party may be liable to the other Party under another agreement between the Parties will not be considered to be special, indirect, incidental, consequential, exemplary or punitive damages hereunder.
ARTICLE X 
SUBCONTRACTORS
      Nothing in this Agreement will prevent a Party from utilizing the services of any subcontractor as the Party deems appropriate to perform its obligations under this Agreement on its respective side of the Delivery Points. To the extent a Party utilizes the services of any subcontractor, the Party will require the subcontractor to comply with all applicable terms and conditions of this Agreement. The creation of any subcontract relationship will not relieve a Party of any of its obligations under this Agreement, and the Parties' obligations under this Agreement will not in any way be limited by any limitation of subcontractor's insurance.
ARTICLE XI 
DISPUTE RESOLUTION
      11.1 Submission. In the event either Party has a dispute, or asserts a claim, that arises out of or in connection with this Agreement or its performance, such Party will provide the other Party with written notice of the dispute or claim ("Notice of Dispute"). Such dispute or claim will be referred to a designated senior representative of each Party for resolution on an informal basis as promptly as practicable after receipt of the Notice of Dispute by the other Party. In the event the designated representatives are unable to resolve the claim or dispute through unassisted or assisted negotiations within 30 days of the other Party's receipt of the Notice of Dispute, such claim or dispute will be submitted to arbitration and resolved in accordance with the arbitration procedures set forth below. 
      11.2 Mandatory Arbitration Procedures. Except as provided for in Section 14.2, any arbitration initiated under this Agreement will be conducted before a single neutral arbitrator appointed by the Parties. If the Parties fail to agree upon a single arbitrator within 30 days of the submission of the dispute to arbitration, each Party will choose one arbitrator who will sit on a three member arbitration panel. The two arbitrators so chosen will within 20 days select a third arbitrator to chair the arbitration panel. In either case, the arbitrators will be knowledgeable in electric utility matters, including electric generation and bulk power issues, and will not have any current or past substantial business or financial relationships with any Party (except prior arbitration). The arbitrator(s) will provide each Party an opportunity to be heard and, except as otherwise provided herein, will conduct the arbitration in accordance with the Commercial Arbitration Rules of the American Arbitration Association ("Arbitration Rules") and any applicable FERC regulations or RTO rules; provided, that in the event of a conflict between the Arbitration Rules and the terms of this Article XI, the terms of this Article XI will prevail. The arbitration will be held in Reno, Nevada. 
      11.3 Arbitration Decisions. Unless otherwise agreed by the Parties, the arbitrator(s) will render a decision within 90 days of appointment and will notify the Parties in writing of such decision and the reasons therefor. The arbitrator(s) will be authorized only to interpret and apply the provisions of this Agreement and will have no power to modify or change any provision of this Agreement in any manner. The decision of the arbitrator(s) will be final and binding upon the Parties, and judgment on the award may be entered in any court having jurisdiction. The decision of the arbitrator(s) may be appealed solely on the grounds that the conduct of the arbitrator(s), or the decision itself, violated the standards set forth in the Federal Arbitration Act or the Administrative Dispute Resolution Act. The final decision of the arbitrator(s) must also be filed with FERC if it affects jurisdictional rates, terms and conditions of service, or the Parties' facilities. 
      11.4 Costs. Each Party will be responsible for its own costs incurred during the arbitration process and for the following costs, if applicable: (a) the cost of the arbitrator chosen by the Party to sit on the three member panel and 50% of the cost of the third arbitrator chosen; or (b) 50% of the cost of the single arbitrator jointly chosen by the Parties; provided, that the arbitrator(s) will have the authority to award the Party prevailing in any arbitration its reasonable attorneys' fee and costs.
ARTICLE XII 
REPRESENTATIONS, WARRANTIES, AND COVENANTS
      12.1 Mutual Representations. Warranties, and Covenants. Each Party makes the following representations, warranties and covenants to the other Party:
            (a) it is duly organized, validly existing and in good standing under the laws of the state in which it is organized, formed, or incorporated, as applicable; is qualified to do business in the state or states in which it is required by law to be qualified; and has the corporate (or, if applicable, limited liability company) power and authority to own its properties, to carry on its business as now being conducted and to enter into this Agreement and carry out the transactions contemplated hereby and perform and carry out all covenants and obligations on its part to be performed under and pursuant to this Agreement; 
            (b) it has the right, power and authority to enter into this Agreement, to become a party hereto and to perform its obligations hereunder. Each of its representatives executing this Agreement is authorized to act on its behalf. This Agreement is a legal, valid and binding obligation of such Party, enforceable against it in accordance with its terms, except as the enforceability thereof may be limited by applicable bankruptcy, insolvency, reorganization or other similar laws affecting creditors' rights generally and by general equitable principles (regardless of whether enforceability is sought in a proceeding in equity or at law); 
            (c) the execution, delivery and performance of this Agreement does not violate or conflict with its organizational documents or bylaws (or comparable constituent documents), or any judgment, license, permit, order, material agreement or instrument applicable to or binding upon it or any of its assets; 
            (d) it has sought or obtained, or, in accordance with this Agreement, will seek or obtain, each consent, approval, authorization, order, or acceptance by any Governmental Entity in connection with the execution, delivery and performance of this Agreement, and it will provide to any Governmental Entity notice of any actions under this Agreement that are required by Law; and 
            (e) it is solvent.
      On each request by NV Energy for Emergency Backup Service under this Agreement, NV Energy will be deemed to have repeated the representation and warranty in clause (e) above unless written notice to the contrary is given by NV Energy to CalPeco at the time of its request for Emergency Backup Service. 
      12.2 CalPeco Representations, Warranties, and Covenants. CalPeco represents, warrants, and covenants to NV Energy: 
            (a) it will transfer to NV Energy good title to energy delivered to NV Energy hereunder, free and clear of all liens, claims, and encumbrances arising or attaching prior to the Delivery Points. EXCEPT AS EXPRESSLY SET FORTH IN THIS SECTION 12.2, CALPECO HEREBY DISCLAIMS ALL OTHER WARRANTIES, EXPRESS OR IMPLIED, INCLUDING ANY WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE WITH RESPECT ENERGY DELIVERED OR TO BE DELIVERED UNDER, OR THE PROVISION OF EMERGENCY BACKUP SERVICE UNDER, THIS AGREEMENT; and 
            (b) it will make commercially reasonable efforts (i) consistent with Good Utility Practice to provide Emergency Backup Service to NV Energy consistent with the provisions hereof; (ii) consistent with Good Utility Practice to acquire the fuel required to provide Emergency Backup Service at the Kings Beach Generation Facility; and (iii) to maintain its distribution system consistent with Good Utility Practice.
ARTICLE XIII 
CONDITIONS PRECEDENT
      13.1 Regulatory Approvals. This Agreement is subject to and conditioned upon (a) with respect to CalPeco, approval of this Agreement by the FERC under Section 205 of the Federal Power Act and by the CPUC; (b) with respect to NV Energy, approval of this Agreement by the PUCN, and (c) with respect to both Parties, the occurrence of the Closing under the Asset Purchase Agreement. Without limiting the rights and obligations of the Parties under in the Asset Purchase Agreement, each Party will cooperate with each other, as the other will reasonably request, in connection with the procurement of the regulatory approvals described above. 
      13.2 No FERC Challenges. Neither Party will seek, nor will they support any third person in seeking, to revise the rates, terms or conditions of service, or challenge the validity, of this Agreement, or whether it is just and reasonable, through any means, including without limitation to the FERC pursuant to the provisions of Section 205, 206 or 306 of the Federal Power Act, as such law may be amended or superseded, or any other provisions thereof, except with prior written agreement of the Parties. Except with the prior written agreement of both Parties, the standard of review for (a) any modification to this Agreement requested by a Party that is not agreed to by both Parties will be the "public interest" standard under the Mobile Sierra doctrine, and (b) any modification to this Agreement requested by any Person (other than a Party to this Agreement) or initiated by the FERC will be the most stringent standard permissible under Law.
ARTICLE XIV 
MISCELLANEOUS
      14.1 Binding Effect. This Agreement and the rights and obligations hereof, will be binding upon and will inure to the benefit of the successors and assigns of the Parties hereto. 
      14.2 Change in Law or Regulation.
            (a) If a Party becomes aware that any Governmental Entity having jurisdiction over the transactions contemplated hereby proposes a change in Law that would materially affect the performance of either Party's obligations under this Agreement, such Party will promptly provide notice to the other Party respecting the same. The Parties will, within 15 days following receipt of written notice requesting a meeting to discuss the proposed change in Law, meet to discuss in good faith the implications of the proposed change in Law on the arrangements contemplated by this Agreement. Upon a Change in Law Enactment Date with respect to such a change in Law, the Parties will make commercially reasonable efforts to amend this Agreement (effective as of the effective date of the change in Law) to preserve the benefits and bargains initially agreed to in this Agreement. For the avoidance of doubt, the effectiveness of legislation or regulations that become Law after the date hereof attributable to carbon, greenhouse gases, or climate change may constitute a change in Law under this Section 14.2.
            (b) If (x) the Parties agree that the financial implications of any such change in Law under this Agreement will not, individually or in the aggregate, be more than Two Hundred Fifty Thousand U.S. dollars ($250,000.00), or the Parties otherwise agree (regardless of whether the financial implications of any such change exceed Two Hundred Fifty Thousand U.S. dollars ($250,000)) to subject the matter to the dispute resolution provisions set forth below, and (y) the Parties cannot reach agreement on an amendment prior to the Change in Law Enactment Date, then the Parties will subject the matter for resolution in accordance with the provisions of Sections 11.2, 11.3, and 11.4 of this Agreement, provided, that the following special provisions will apply:
                  (i) within 10 Business Days following the Change in Law Enactment Date, the Parties will confer in an effort to agree upon an independent expert qualified to resolve the dispute. If the Parties are unable to agree upon the appointment of such an independent expert, then at the end of such 10 Business Days each Party will, within 10 Business Days thereafter, notify the other Party in writing of its designation of three proposed independent experts. Each Party will within 5 Business Days strike two of the independent experts proposed by the other Party. The remaining two independent experts will, within five Business Days, select one of them to hear the dispute; provided, that if one of the Parties still objects to the dispute being heard by the selected independent expert, the two proposed independent experts will select a third independent expert (which may be one of the independent experts proposed by the Parties initially) and such third independent expert will hear the dispute; 
                  (ii) the commercial objective of the independent expert will be to restore the Parties to positions that preserve the benefits and bargains initially agreed to by the Parties in this Agreement; 
                  (iii) no Party will be allowed to conduct discovery on the other Party; 
                  (iv) the decision of the independent expert will be based on written submissions by the Parties (due within 60 days following his or her selection pursuant to clause (i) above) and whatever oral presentations or arguments that the independent expert may request or permit; provided, that a Party will be entitled to request that oral presentations or arguments be permitted; and 
                  (v) the independent expert will be instructed to issue a decision within 30 days after conducting whatever proceedings, if any, the independent expert believes are reasonably necessary and appropriate to render a decision, and in any event within 90 days following the independent expert's selection pursuant to clause (i) above. 
      14.3 Assignment.
            (a) This Agreement may be assigned by either Party only with the written consent of the other Party; provided, that either Party may assign this Agreement without the consent of the other Party to any Affiliate (as defined in the Asset Purchase Agreement) with an equal or greater credit rating and with the legal authority and operational ability to satisfy the obligations of the assigning Party under this Agreement or that acquires the electric system of such Party.
            (b) Notwithstanding the foregoing, CalPeco will have the right to assign this Agreement, without the written consent of NV Energy, for collateral security purposes to aid in providing financing for the acquisition contemplated by the Asset Purchase Agreement, provided, that CalPeco will promptly notify NV Energy of any such assignment. Any financing arrangement entered into by CalPeco pursuant to this Section 14.3 will provide that, prior to or upon the exercise of the secured party's, trustee's or mortgagee's assignment right(s) pursuant to said arrangement, the secured creditor, the trustee or mortgagee will notify NV Energy of the date and particulars of any such exercise of assignment right(s).
            (c) Any attempted assignment that violates this Section 14.3 is void and ineffective. No assignment of a Party's rights or obligations under this Agreement, nor any consent thereto, will relieve such Party of its obligations and liabilities under this Agreement, nor will any such assignment expand any obligations of the non-assigning Party. Where required, consent to assignment will not be unreasonably withheld, conditioned or delayed. 
      14.4 Governing Law; Venue. This Agreement (as well as any claim or controversy arising out of or relating to this Agreement) will be governed by and construed in accordance with the laws of the State of New York, without regard to the conflicts of laws rules thereof that would otherwise require the laws of another jurisdiction to apply. Each Party irrevocably submits to the exclusive jurisdiction of the federal and (subject to the following) state courts located in the State of Nevada, waives any objection which it may have to the laying of venue of any proceedings brought in any such court, and waives any claim that such proceedings have been brought in an inconvenient forum; and agrees that any and all claims, controversies or disputes arising from or relating to this Agreement will be submitted in the federal courts of Nevada located in Reno for resolution; provided, however, that in the event jurisdiction may not be had in federal court, then the Parties agree to submit any and all such disputes, claims or controversies to the state district courts of Nevada located in Reno. 
      14.5 Waiver of Jury Trial. EACH OF THE PARTIES HERETO HEREBY IRREVOCABLY WAIVES, TO THE FULLEST EXTENT PERMITTED BY LAW, ANY AND ALL RIGHT TO TRIAL BY JURY IN ANY LEGAL PROCEEDING ARISING OUT OF OR RELATED TO THIS AGREEMENT OR THE RELATED AGREEMENTS OR ANY OF THE TRANSACTIONS CONTEMPLATED HEREBY OR THEREBY. 
      14.6 Notices. Written notice provided under this Agreement should be sent to address indicated below (or at such other address as a Party may specify, provided that notices of a change of address will be effective only upon receipt thereof):
            (a) if to NV Energy:
Sierra Pacific Power Company d/b/a NV Energy
c/o NV Energy
Attn: Office of the General Counsel
6226 West Sahara Avenue
Las Vegas, Nevada 89146
Fax: (702) 402-2069 

with a copy to:
Sierra Pacific Power Company 
Attn: Christopher A. Hilen 
6100 Neil Road
Reno, Nevada 89520-3150
Fax: (775) 834-4811
      
            (b) if to CalPeco:
Liberty Utilities (CalPeco Electric) LLC 
c/o Algonquin Power Management Inc. 
Attn: President
2845 Bristol Circle
Oakville, Ontario, Canada L6H 7H7 
Fax: (905) 465-4514 

with a copy to:
Emem Incorporated
Attn: Corporate Secretary 
1894 Barrington Street 
Halifax, Nova Scotia
B3J 2A8
Fax: (902) 428-6171 

with a copy to:
Davis Wright Tremaine LLP 
Attn: Steven F. Greenwald
505 Montgomery Street, Suite 800 
San Francisco, CA 94111
      Fax: (415) 276-6599
      14.7 Severability. If any provision in this Agreement is finally determined to be invalid, void or unenforceable by any court or other Governmental Entity having jurisdiction, such determination will not invalidate, void or make unenforceable any other provision, agreement or covenant of this Agreement. 
      14.8 Rules of Interpretation. This Agreement, unless a clear contrary intention appears, will be construed and interpreted as follows: (a) the singular number includes the plural number and vice versa; (b) reference to any Person includes such Person's successors and assigns but, in the case of a Party, only if such successors and assigns are permitted by this Agreement, and reference to a Person in a particular capacity excludes such Person in any other capacity or individually; (c) reference to any agreement (including this Agreement), document, instrument or tariff means such agreement, document, instrument or tariff as amended or modified and in effect from time to time in accordance with the terms thereof and, if applicable, the terms hereof; (d) reference to any Law means such Law as amended, modified, codified or reenacted, in whole or in part, and in effect from time to time, including, if applicable, rules and regulations promulgated thereunder; (e) unless expressly stated otherwise, reference to any Article or Section means such Article or Section of this Agreement, as the case may be; (f) "hereunder," "hereof," "herein," "hereto" and words of similar import will be deemed references to this Agreement as a whole and not to any particular Article, Section or other provision hereof or thereof; (g) "including" (and with correlative meaning "include") means including without limiting the generality of any description preceding such term; (h) relative to the determination of any period of time, "from" means "from and including," "to" means "to but excluding" end "through" means "through and including"; and (i) the Schedules to this Agreement are hereby incorporated and made a part hereof as if set forth in full herein and are an integral part of this Agreement.
      14.9 Entire Agreement. This Agreement constitutes the entire agreement between the Parties with reference to the subject matter hereof, and supersedes all prior and contemporaneous understandings or agreements, oral or written, between the Parties with respect to the subject matter of this Agreement. There are no other agreements, representations, warranties, or covenants which constitute any part of the consideration for, or any condition to, either Party's compliance with its obligations under this Agreement. Without limiting the foregoing, this Agreement is intended to apply only to the availability, generation and delivery of energy to the Delivery Points and payment for such capacity and energy pursuant to the terms and conditions set forth herein; this Agreement is not intended to apply to the coordination of electric distribution or transmission facilities owned or operated by the Parties. 
      14.10 No Third Party Beneficiaries. This Agreement is not intended to and does not create rights, remedies, or benefits of any character whatsoever in favor of any persons, corporations, associations, or entities other than the Parties, and the obligations herein assumed are solely for the use end benefit of the Parties, their successors in interest and, where permitted, their assigns. 
      14.11 Waiver. The failure of a Party to this Agreement to insist, on any occasion, upon strict performance of any provision of this Agreement will not be considered a waiver of any obligation, right, or duty of, or imposed upon, such Party. Any waiver at any time by either Party of its rights with respect to this Agreement will not be deemed a continuing waiver or a waiver with respect to any other failure to comply with any other obligation, right, or duty of this Agreement. Any waiver of this Agreement will, if requested, be provided in writing. 
      14.12 Amendment. The Parties may by mutual agreement amend this Agreement by a written instrument duly executed by the Parties. Such executed amendment will become effective and a part of this Agreement upon satisfaction of applicable Law. 
      14.13 No Partnership. This Agreement will not be interpreted or construed to create an association, joint venture, agency relationship, or partnership between the Parties or to impose any partnership obligation or partnership liability upon either Party. Neither Party will have any right, power or authority to enter into any agreement or undertaking for, or act on behalf of, or to act as or be an agent or representative of, or to otherwise bind, the other Party. 
      14.14 Counterparts. This Agreement may be executed in multiple counterparts (each of which will be deemed an original, but all of which together will constitute one and the same instrument), and may be delivered by facsimile or email transmission.
      14.15 No Dedication of Facilities. Nothing in this Agreement will be construed as constituting the dedication of NV Energy's electric system or any portion thereof to the public in California or to CalPeco or the dedication of CalPeco's electric system or any portion thereof to the public in Nevada or to NV Energy. 
      14.16 Other Agreements. Nothing in this Agreement is intended to modify, supersede or otherwise alter any other agreements between the Parties. 
      14.17 Forward Contracts. The Parties acknowledge and agree that all transactions under this Agreement are forward contracts and that the Parties are forward contract merchants, as those terms are used in the United States Bankruptcy Code.
      
      IN WITNESS WHEREOF, the Parties have executed this Agreement effective as of the date first set forth above.
SIERRA PACIFIC POWER COMPANY 
d/b/a NV Energy


By:  		
Name:	William D. Rogers
Title:  	Corporate Senior Vice President, Chief Financial Officer and Treasurer


By:  		
Name: 	Jeffrey L. Ceccarelli
Title: 	President


LIBERTY UTILITIES (CALPECO ELECTRIC), LLC

By: 	California Pacific Utility Ventures, LLC,
Its Sole Member
By:		
Name: 	Ian E. Robertson
Title: 	Authorized Representative


		
By:	 Name: Nancy G. Tower
Title: 	Authorized Representative
      
      
      
SCHEDULE "A"
ALLOCATION OF PERMITTED MACHINE HOURS
      All Machine Hours will be allocated to the Party whose electric system experiences a system failure or otherwise creates the need to generate power at the Kings Beach Generation Facility for Emergency Backup Service. For example, assuming a system failure occurs on (and only on) one Party's electric system, Machine Hours would be allocated as set forth below: 
            (a) if NV Energy is the Party whose system "causes" the need for Emergency Backup Service, then all Machine Hours will be allocated and charged to NV Energy; and 
            (b) if CalPeco is the Party whose system "causes" the need for Emergency Backup Service, then all Machine Hours will be allocated and charged to CalPeco.
      If the system of each Party is concurrently requiring Emergency Backup Service or it cannot be determined whose system is "causing" the need for Emergency Backup Service, then 50% of the Machine Hours will be allocated and charged to each Party.
      If the Kings Beach Generation Facility is generating power for reasons other than to provide Emergency Backup Service, then all Machine Hours will be allocated to the Party requesting the operation of the Kings Beach Generation Facility. For example, if CalPeco uses generation from the Kings Beach Generation Facility for normal maintenance, or for power generation, then all Machine Hours will be allocated and charged to CalPeco.
      
SCHEDULE "B"
SAMPLE CALCULATION OF CAPACITY CHARGE
      The dollar amounts contained herein are illustrative in nature and may not reconcile to the amounts upon which the current rates of the Business were authorized. For purposes of these sample calculations, it is assumed that CalPeco's actual cost of debt is 8%. The sample calculations disregard any adjustments (and the effects thereof) required under Article VI of the Agreement.
Part A.	Calculation of Annual Revenue Requirement for the Kings Beach Generation Facility
      For purposes of unbundling its California jurisdictional cost of service into generation, transmission, and distribution functions, NV Energy used the same methodology in its 2008 General Rate Case as it used in its immediately prior rate case (Docket D.06-08-024). As the Kings Beach Generation Facility constituted NV Energy's generation function in California, key components of the King Beach Generation Facility revenue requirement follow:

Amount (in millions)
Operating Expenses

Other O&amp;M Expenses1
0.10
Fixed Costs1
0.20
Depreciation &amp; Amortization2
0.83
Taxes Other Than Income3
0.16
Deferred Income Taxes4
0.40
Federal Income Taxes5
0.66
California Corporation Tax6
0.18
Total Operating Expenses
$2.53

Rate Base Value of Kings Beach Generation Facility

Gross Plant in Service
$16.50
minus Accumulated Provision for Depreciation &amp; Amortization
0.57 
Net Plant in Service
15.93
plus Additions to Net Plant(1)

Materials &amp; Supplies(1)
0.10
Average Diesel Inventory(1)
0.03 
minus Deductions From Net Plant7

Total Rate Base
$15.42
(A)	Based on assumed weighted average cost of capital.
(B)	Amount equal to Operating Revenues minus sum of Other O&amp;M Expenses, Fixed Costs, Depreciation and Amortization, Taxes Other Than Income, and Implied Interest.
(C)	Statutory rate.

      The annual revenue requirement is the amount of revenue required to achieve the rate of return authorized by the CPUC (being 8.81% in the 2008 General Rate Case). Algebraically, the formula used to determine the revenue requirement can be expressed as:
(X-Y)/Total Rate Base = Authorized Rate of Return, where
X = the revenue requirement
Y = Total Operating Expenses

      Based on the information above, the annual revenue requirement for the Kings Beach Generation Facility would equal $3.97 million.
Part B.	Calculation of Capacity Charge (Annual and Monthly Amounts)
      Based on the information provided in Part A, and assuming a calculation date within Years 1-10, the annual Capacity Charge would equal $2.38 million (i.e., 60% of the $3.97 million annual revenue requirement). Assuming no pro ration of the annual Capacity Charge (including no pro ration for a Non-Performance Period), the monthly amount payable by NV Energy under the Agreement would equal $198,333.33 (i.e., 1/12th of the $2.38 million annual Capacity Charge).
      Based on the information provided in Part A, and assuming a calculation date within Years 11-20, the annual Capacity Charge would equal $1.59 million (i.e., 40% of the $3.97 million annual revenue requirement). Assuming no pro ration of the annual Capacity Charge (including no pro ration for a Non-Performance Period), the monthly amount payable by NV Energy under the Agreement would equal $132,500.00 (i.e., 1/12th of the $1.59 million annual Capacity Charge).
      
SCHEDULE "C"
FORM OF LETTER OF CREDIT
IRREVOCABLE NON-TRANSFERABLE STANDBY LETTER OF CREDIT
DATE OF ISSUANCE:  ___________________________________
TO:	Beneficiary
	Liberty Utilities (CalPeco Electric) LLC
	
	Attn: [_____________________________, Manager]
	Re: Letter of Credit No. _______________________
      
      We hereby establish our Irrevocable Non-Transferable Standby Letter of Credit in your favor as Beneficiary for the account of Sierra Pacific Power Company, a Nevada corporation doing business as NV Energy (the "Account Party"), for the aggregate amount not exceeding________________ United States Dollars ($_________________), available to you at sight upon demand at our counters at [Insert U.S. Location here] on or before the expiration hereof against presentation to us of the following statement, dated and purportedly signed by an authorized signer of the Beneficiary:
"The amount of this drawing USD ____________________ under your Letter of Credit No. ________________ represents funds due us in connection with an event described in Section 7.5 of the Emergency Backup Service Agreement dated as of October 8, 2009 by and between Beneficiary and Account Party, as the same may have been amended (the "Agreement")."
      The amount which may be drawn by you under this Letter of Credit will be automatically reduced by the amount of any drawings paid through the Issuing Bank referencing this Letter of Credit No. _________________ . Partial drawings are permitted hereunder.
      This Letter of Credit will expire on _________________ but will automatically extend without amendment for additional ________________ (___)-day periods from such expiration date and from subsequent expiration dates, if you, as Beneficiary, and the Account Party have not received due notice of our intention not to extend at least ninety (90) days prior to any such expiration date. Upon such notice to you, you may draw on us at sight for an amount not to exceed the balance remaining in this letter of credit within the then-applicable expiry date, by your dated statement purportedly signed by one of your officials reading exactly as follows:
"The amount of this drawing USD __________________ under your Letter of Credit No. _____________ represents funds due us as we have received notice from _________________ of its decision not to automatically extend Letter of Credit No. ______________ and the underlying obligation remains outstanding under the Agreement."
      We hereby agree with you that documents drawn under and in compliance with the terms of this Letter of Credit will be duly honored upon presentation as specified.
      We hereby agree with you that if documents are presented to ________________ under this letter of credit, and provided that such documents presented conform with the terms and conditions of this letter of credit, payment will be initiated by us on or before the third following Business Day. As used in this letter of credit, "Business Day" will mean any day other than a Saturday, Sunday or a day on which banking institutions in the state of ___________ are authorized or required by law to close.
      This Letter of Credit will be governed by the Uniform Customs and Practice for Documentary Credits, 2007 Revision, International Chamber of Commerce Publication No. 600 (the "UCP"), except to the extent that the terms hereof are inconsistent with the provisions of the UCP, including but not limited to Article 36 of the UCP, in which case the terms of this Letter of Credit will govern.
      In the event of an Act of God, riot, civil commotion, insurrection, war or any other cause beyond our control that interrupts our business (collectively, an "Interruption Event") and causes the place for presentation of this Letter of Credit to be closed for business on the last day for presentation, we hereby specifically agree to effect payment if this credit is drawn against within 30 days after the resumption of business.
      This Letter of Credit is not assignable or transferable. Any purported transfer or any purported assignment will be void and of no force or effect.
      This Letter of Credit may not be amended, changed or modified without the express written consent of the Beneficiary, the Issuing Bank and the Account Party.
[BANK SIGNATURE]


SCHEDULE "D" 
KINGS BEACH ENERGY ALLOCATION PROTOCOLS
Guiding Principles
It is intended that the allocation of energy produced by the Kings Beach Generation Facility will be allocated to the Party either (i) requesting dispatch of the Kings Beach Generation Facility for maintenance or other purposes or (ii) whose system gives rise to the need to dispatch of the Kings Beach Generation Facility, in both eases irrespective of where the energy produced by the Kings Beach Generation Facility is actually delivered; energy allocation will be based on the principle of "causality". For example, to the extent a diminution of transmission or distribution capacity on facilities for which a particular Party is responsible gives rise to the need to dispatch the Kings Beach Generation Facility, such Party would be allocated the energy associated with such generation regardless of to which Party the energy produced is actually delivered.
Notwithstanding the above, the Parties recognize that a determination of the "causality" giving rise to the need for dispatch of the Kings Beach Generation Facility may not always be precisely ascertained. The Parties, acting in good faith, will in such instances cooperate to determine whether (i) a system failure on one Party's system "caused" the need to dispatch energy from the Kings Beach Generation Facility during the period, (ii) a system failure on both Parties' systems "caused" the need to dispatch energy from the Kings Beach Generation Facility during the period, or (iii) the event that "caused" the need to dispatch energy from the Kings Beach Generation Facility during the period cannot be determined.
The procedures in this Schedule represent the Parties' best efforts to determine a fair and equitable mechanism for allocation of the energy from the Kings Beach Generation Facility. The Coordination Committee will, upon the request of either Party during the Term, review and suggest modifications, as necessary, to the provisions of this Schedule D to more accurately implement the principles herein.
Allocation Procedures
Energy produced by the Kings Beach Generation Facility will be allocated as follows; 
a.	if NV Energy is the Party whose system "causes" the need to dispatch the Kings Beach Generation Facility, then all energy produced by the Kings Beach Generation Facility will be allocated to NV Energy; 
b.	if CalPeco is the Party whose system "causes" the need to dispatch the Kings Beach Generation Facility, then all energy produced by the Kings Beach Generation Facility will be allocated to CalPeco; 
c.	if the Kings Beach Generation Facility is dispatched for reasons other than to provide Emergency Backup Service, then all energy produced will be allocated to the Party requesting the operation of the Kings Beach Generation Facility. For example, if CalPeco requests the dispatch of the Kings Beach Generation Facility to allow for normal maintenance, or for power generation, then all energy produced thereby will be allocated to CalPeco.
d.	If the system of each Party is concurrently "causing" the need to dispatch the Kings Beach Generation Facility or it cannot be determined whose system is 'causing' the need for such dispatch, then the amount of energy generated by the Kings Beach Generation Facility will be allocated to the Parties in accordance with the following table with reference to the month in which such generation occurred:


Applicable Month
Percentage of Energy
Allocated to NV Energy**
Percentage of Energy 
Allocated to CalPeco*
January
28%
72%
February
26%
74%
March
33%
67%
April
36%
64%
May
35%
65%
June
33%
67%
July
44%
54%
August
47%
53%
September
40%
60%
October
44%
56%
November
28%
72%
December
31%
69%

1 Hypothetical amount assumed for purposes of illustration only.
2 Assumes 20-year depreciation life.
3 This amount is primarily property tax, which has historically been about 1% of net book value.
4 From NV Energy's 2008 General Rate Case.
5 This amount was calculated as shown below.
Item
Amount (in millions)
Operating Revenues
$ 3.97
Other O&amp;M Expenses
0.10
Fixed Costs
0.20
Depreciation and Amortization
0.83
Taxes Other Than Income
0.16
California Corporation Tax
0.18 
Implied interest(A)
0.62
Pretax Income(B)
$ 1.88
Tax Rate(C)
35%
Federal Income Tax
$ 0.66
(A)	Based on assumed weighted average cost of capital.
(B)	Amount equal to Operating Revenues minus sum of Other O&amp;M Expenses, Fixed Costs, Depreciation and Amortization, Taxes Other Than Income, California Corporation Tax, and Implied Interest.
(C)	Statutory rate.
6 This amount was calculated as shown below.
Item
Amount (in millions)
Operating Revenues
$ 3.97
Other O&amp;M Expenses
0.10
Fixed Costs
0.20
Depreciation and Amortization
0.83
Taxes Other Than Income
0.16
Implied interest(A)
0.62
Pretax Income(B)
$ 2.06
Tax Rate(C)
8.84%
California Corporate Tax
$ 0.18
(A)	Based on assumed weighted average cost of capital.
(B)	Amount equal to Operating Revenues minus sum of Other O&amp;M Expenses, Fixed Costs, Depreciation and Amortization, Taxes Other Than Income, and Implied Interest.
(C)	Statutory rate.

7 Amount accounts for parts inventory
* The percentages in this column are preliminary estimates. The final percentages to be included in this column (and to be used by the Parties following the Closing) will be determined based on a study to be performed and completed by NV Energy prior to the Closing.
---------------

------------------------------------------------------------

---------------

------------------------------------------------------------

      EXECUTION COPY


DWT 22320502v1 0089731-000002

29
DWT 22320502v1 0089731-000002




1


[Signature Page to Emergency Backup Service Agreement]
1
DWT 22320502v1 0089731-000002

Schedule A-1
DWT 22320502v1 0089731-000002

Schedule B-1
DWT 22320502v1 0089731-000002

Schedule B-1
DWT 22320502v1 0089731-000002

Schedule C-1
DWT 22320502v1 0089731-000002

Schedule C-1
DWT 22320502v1 0089731-000002

Schedule D-2
DWT 22320502v1 0089731-000002

Schedule D-1
DWT 22320502v1 0089731-000002


Exhibit A
DWT 22320502v1 0089731-000002</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>17</filing_id>
      <filing_title>Notice of Succession</filing_title>
      <filing_type>10</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2013-08-09</current_effective_date>
      <ferc_order_date>2013-09-06</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
    <record_data>
      <record_id>1150</record_id>
      <option_code>A</option_code>
      <record_title>CalPeco FERC Electric Rate Schedule No. 4 -- RSA</record_title>
      <record_content_desc>Rate Schedule No. 4</record_content_desc>
      <record_version_num>2.0.0</record_version_num>
      <record_narrative_name>CalPeco FERC Electric Rate Schedule No. 4 -- RSA</record_narrative_name>
      <collation_value>4000</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2013-08-09</proposed_effective_date>
      <priority_order>500</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>Liberty Utilities (CalPeco Electric) LLC
FERC FPA Electric Tariff
FERC Electric Rate Schedule No. 4
Reliability Support Agreement
Effective Date:  August 9, 2013

RELIABILITY SUPPORT AGREEMENT BETWEEN 
SIERRA PACIFIC POWER COMPANY AND LIBERY UTILITIES (CALPECO ELECTRIC) LLC
      THIS RELIABILITY SUPPORT AGREEMENT (this "Agreement") is made and entered into as of April 15, 2010 (the "Effective Date"), by and between Sierra Pacific Power Company ("Sierra") and Liberty Utilities (CalPeco Electric) LLC ("CalPeco").  Sierra and CalPeco are referred to herein at times individually as a "party" and collectively as the "parties".
      WHEREAS, Sierra owns and operates an electric distribution system and an electric transmission system located in California (the "California Utility") and Truckee Donner Public Utility District ("TDPUD") owns and operates an electric distribution system located in California;
      WHEREAS, Sierra currently provides service to TDPUD and such service includes delivering power from the Truckee Substation to TDPUD at the Glenshire Meter over the 608 Line and the 7400 Distribution Circuit, which are currently owned and operated by Sierra;
      WHEREAS, Sierra and CalPeco entered into an Asset Purchase Agreement dated April 22, 2009 (as amended or supplemented from time to time, the "APA"), pursuant to which Sierra agreed to sell, and CalPeco agreed to purchase, the California Utility (the "Transaction");
      WHEREAS, at the consummation of the Transaction (the "Closing") Sierra will convey to CalPeco the 608 Line and the 7400 Distribution Circuit it currently uses to deliver power to TDPUD at the Glenshire Meter;
      WHEREAS, Sierra and CalPeco have entered into a Service Agreement dated April 22, 2009 (as amended or supplemented from time to time, the "PPA"), whereby Sierra will sell CalPeco its entire electric supply requirements (subject to certain limited exceptions) to provide retail electric service to its customers in the service territory of the California Utility and among the delivery points designated in the PPA is the Truckee Substation;
      WHEREAS, after the Closing, Sierra will deliver power to CalPeco pursuant to the PPA at the Truckee Substation and then CalPeco will deliver such power through the 608 Line and its other distribution facilities to its retail customers in the Glenshire area;
      WHEREAS, CalPeco will not offer any FERC-regulated transmission services on the 608 Line or on any other line it is purchasing from Sierra and CalPeco's use of the 608 Line will be subject exclusively to public utility regulation by the California Public Utilities Commission ("CPUC");
      WHEREAS, on February 18, 2010, Sierra, CalPeco and TDPUD entered into that certain Settlement Agreement (the "Settlement Agreement") pursuant to which the parties agreed to settle certain claims made by the parties regarding the Transaction and under which the parties agreed to enter into this Agreement for purposes of satisfying their respective obligations under Section 4 of the Settlement Agreement;
      WHEREAS, after the Closing, Sierra will no longer own the 608 Line and the 7400 Distribution Circuit and thus is obligated under the Settlement Agreement to construct and install the Glenshire System Adjustments (as defined in the Settlement Agreement), which will enable Sierra to continue to provide transmission services to TDPUD for the delivery of power to TDPUD from the Truckee Substation to the Glenshire Meter, but without the use of the 608 Line and the 7400 Distribution Circuit;
      WHEREAS the Settlement Agreement obligates Sierra to use commercially reasonable efforts to complete the Glenshire System Adjustments by the Closing; and
      WHEREAS, the parties wish to enter into this Agreement in accordance with the Settlement Agreement for the purposes of (a) enabling Sierra after the Closing to continue to provide transmission services to TDPUD for the delivery of power from the Truckee Substation to the Glenshire Meter in instances in which the Glenshire System Adjustments are not available or otherwise not able to deliver power to the Glenshire Meter; and (b) obligating Sierra to deliver power to CalPeco with the use of the Glenshire System Adjustments to the Glenshire Substation in instances in which the 608 Line is inoperable and thus CalPeco is unable to use its own facilities to deliver power that Sierra delivers under the PPA at the Truckee Substation to the Glenshire Substation.
      NOW, THEREFORE, the parties hereby agree as follows:
      1. Definitions.  For purposes of this Agreement, the following definitions are used:
            (a) "FERC" shall mean the Federal Energy Regulatory Commission or any successor organization.
            (b) "Glenshire Meter" shall mean the metering point between the Sierra system and the TDPUD system.
            (c) "Glenshire Substation" shall mean the substation where the 608 Line connects to the 7400 Distribution Circuit, which Sierra currently owns, but which shall be conveyed to CalPeco at the Closing.
            (d) "Good Utility Practice" shall mean practices, methods, standards, guides, and acts that are generally accepted in the electric utility industry or commonly used in prudent utility operations.  Good Utility Practice is not limited to the optimum practices, methods, standards, guides or acts to the exclusion of all others.
            (e) "Governmental Entity" shall mean the United States of America and any other federal, state or local governmental or regulatory authority, department, agency, commission, body, court, or other governmental entity.
            (f) "Law" shall mean any statutes, regulations, rules, ordinances, codes, and similar acts or promulgations of any Governmental Entity, and any order, judgment, writ, injunction, decree, directive, or award of a court, administrative judge, or other Governmental Entity acting in an adjudicative or regulatory capacity, with jurisdiction over the subject matter.
            (g) "OATT" shall mean Open Access Transmission Tariff.
            (h) "Truckee Substation" shall mean the substation which Sierra currently owns and which it will retain ownership of after the Closing and where both the existing 608 Line and the existing 7204 distribution line that connects to TDPUD originate and where the Glenshire System Adjustments will originate for connection to the 7400 Distribution Circuit and to TDPUD.
            (i) "608 Line" shall mean the 60 Kv line presently owned by Sierra, but to be conveyed to CalPeco at the Closing, which delivers power from the Truckee Substation to the Glenshire Substation and which Sierra also currently uses to deliver power to TDPUD at the Glenshire Meter.
            (j) "7400 Distribution Circuit" shall mean the 14.4 kV distribution line presently owned by Sierra, but to be conveyed to CalPeco at the Closing, which originates at the Glenshire Substation and provides an interconnection with TDPUD at the Glenshire Meter and is also used to serve Sierra's retail load.
      2. Alternative Power Delivery Services.  
            (a) TDPUD Alternative Transmission Delivery Service.  During any period in which the Glenshire System Adjustments have not been completed or are out of service for any reason and thus Sierra is not able to transmit power from the Truckee Substation over the Glenshire System Adjustments for delivery to TDPUD at the Glenshire Meter, Sierra shall have the right to use the 608 Line and the 7400 Distribution Circuit for purposes of providing transmission services to TDPUD, and CalPeco shall make the 608 Line and the 7400 Distribution Circuit available to Sierra for this purpose (the "TDPUD Alternative Transmission Delivery Service").
            (b) CalPeco Alternative Delivery Point Service.  During any period after the Closing in which the 608 Line is out of service for any reason and thus CalPeco is not able to transmit power that Sierra delivers to it at the Truckee Substation over the 608 Line to the Glenshire Substation, Sierra shall use the Glenshire System Adjustments to deliver power to CalPeco under the PPA at the point where the Glenshire System Adjustments interconnect to the 7400 Distribution Circuit near the Glenshire Meter in lieu of delivering power to CalPeco at the Truckee Substation and for purposes of enabling CalPeco to serve its retail customers in the Glenshire area (the "CalPeco Alternative Delivery Point Service").  At any time that CalPeco has executed a Network Integration Transmission Service Agreement ("NITSA") with Sierra in accordance with the terms of the Sierra Pacific Resources Operating Companies Open Access Transmission Tariff (the "Sierra OATT"), and CalPeco requests that Sierra deliver power pursuant to the NITSA to the Truckee Substation, but CalPeco is not able to transmit power that Sierra delivers to it at the Truckee Substation over the 608 Line to the Glenshire Substation, Sierra shall use the Glenshire System Adjustments to provide CalPeco Alternative Delivery Point Service and thereby deliver power to CalPeco under the NITSA at the point where the Glenshire System Adjustments interconnect to the 7400 Distribution Circuit near the Glenshire Meter.
            (c) No Charge For Use of Facilities to Provide Alternative Services.  There shall be no charge to any party for the use of any facilities used to provide the TDPUD Alternative Transmission Delivery Service or the CalPeco Alternative Delivery Point Service.
      3. Term.  The term of this Agreement shall commence on the Closing and will continue until 11:59 p.m. Pacific time on the date upon which the parties mutually agree to terminate this Agreement.  Notwithstanding the foregoing, neither CalPeco's obligation to allow Sierra to use the 608 Line and the 7400 Distribution Circuit for purposes of providing the TDPUD Alternative Transmission Delivery Service, nor Sierra's obligation to provide the CalPeco Alternative Delivery Point Service, shall be effective until the conditions set forth in Section 6 have been satisfied.
      4. System Operation and Maintenance.  The parties shall work together with each other with respect to the mechanics of providing the TDPUD Alternative Transmission Delivery Service and CalPeco Alternative Delivery Point Service.  CalPeco shall operate the 608 Line and the 7400 Distribution Circuit, and Sierra shall operate the Glenshire System Adjustments, in accordance with Good Utility Practice.
      5. Indemnification.  CalPeco shall, to the extent not prohibited under applicable law, indemnify and save harmless Sierra from and against any and all claims for damages in favor of any person or persons, corporation or corporations, founded upon or arising out of the CalPeco Alternative Delivery Point Service under Section 2(b).
      6. Regulatory Approvals; Conditions Precedent.  CalPeco's obligation to allow Sierra to use the 608 Line for purposes of Sierra providing the TDPUD Alternative Transmission Delivery Service, and Sierra's obligation to provide the CalPeco Alternative Delivery Point Service, under the terms of this Agreement is subject to and conditioned upon (a) CalPeco having received a no-action letter, waiver, declaratory order, or other issuance from the FERC, where the result of such no-action letter, waiver, declaratory order, or other issuance provides sufficient assurance, as reasonably determined by CalPeco, that FERC will not require CalPeco to file an OATT or otherwise be subject to FERC requirements applicable to transmission providers subject to FERC's jurisdiction, based upon the TDPUD Alternative Transmission Delivery Service; and (b) CalPeco having received a final nonappealable order from the CPUC authorizing CalPeco to allow Sierra to use the 608 Line in accordance with the terms and conditions set forth in this Agreement.  Each party will cooperate with the other party, as the other party will reasonably request, in connection with the procurement prior to Closing of the regulatory approvals described above.  Nothing in this Agreement is intended to subject CalPeco to regulation by FERC.
      7. Compliance with Law.  The obligations of each party under this Agreement are, and the performance of any such obligation hereunder is, subject to applicable Law, including the receipt of approvals from Governmental Entities, if any, required to amend, supplement, terminate or otherwise modify the terms and conditions of this Agreement.  
      8. Representations and Warranties.  Each party represents and warrants to the other party that (a) it has the power and authority to execute and deliver this Agreement and to perform its obligations under this Agreement, provided that CalPeco's obligation to perform the TDPUD Alternative Transmission Delivery Service is subject to the satisfaction of the conditions set forth in Section 6 hereof; (b) upon the execution and delivery hereof, this Agreement will be valid, binding and enforceable upon it in accordance with the terms and conditions set forth herein, except as enforceability may be limited by bankruptcy and similar laws affecting or relating to general principles of equity; and (c) its duly-authorized officers, managers or representatives have executed this Agreement on its behalf.  Sierra represents and warrants to CalPeco that as of the completion of the Glenshire System Adjustments Sierra will have the capability and authority to deliver power to CalPeco, at the point where the Glenshire System Adjustments interconnect to the 7400 Distribution Circuit as contemplated by Section 2(b) of this Agreement through the exclusive use of Sierra-owned facilities and without the need to utilize any facilities owned or operated by TDPUD.
      9. Delay Payment. The Settlement Agreement obligates Sierra to make commercially reasonable efforts to complete the Glenshire System Adjustments by the Closing.  In the event that despite its exercise of such commercially reasonable efforts, Sierra is not able to complete construction of the Glenshire System Adjustments within nine (9) months after the Closing, then Sierra shall pay CalPeco $2500.00 per month starting with the tenth (10th) month after the Closing ("Delay Payment") and continuing each month until Sierra confirms in writing to CalPeco that the Glenshire System Adjustments are operational and, subject to the satisfaction of the conditions precedent in Section 6, available to provide the CalPeco Alternative Delivery Point Service in accordance with Section 2(b) of this Agreement.  To the extent that the Delay Payments set forth in this Section 9 are liquidated, CalPeco and Sierra acknowledge that the damages to CalPeco for Sierra's failure to complete the Glenshire System Adjustments are difficult or impossible to determine, or otherwise obtaining an inadequate remedy is inconvenient and the Delay Payments calculated hereunder constitute a reasonable approximation of the harm or loss.  Nothing in this Section 9 shall limit the remedies which may be available to CalPeco in the event that Sierra fails to use commercially reasonable efforts to complete the Glenshire System Adjustments by the Closing or at any time thereafter.
      10. Waiver of Consequential Damages.  Notwithstanding any other provision of this Agreement, in no event will a party be liable to the any other party, whether in contract, warranty, tort, negligence, strict liability, or otherwise, for special, indirect, incidental, consequential (including lost profits or revenues, business interruption damages and lost business opportunities), exemplary or punitive damages related to, arising out of, or resulting from performance or non-performance of this Agreement.  The limitation on damages under this Section 10 will not apply with respect to claims brought by third persons for which Sierra is entitled to indemnification under Section 5 of this Agreement.
      11. Binding Effect; Assignment.  This Agreement will be binding upon and will inure to the benefit of each party's permitted successors and assigns.  This Agreement may not be assigned by any party without the other party's prior written consent (such consent not to be unreasonably withheld, conditioned or delayed), and an assignment of this Agreement will not relieve the assigning party of its obligations and liabilities hereunder.  Notwithstanding the foregoing, Sierra consents to CalPeco's assignment of this Agreement for collateral security purposes to aid in providing financing for the Transaction.
      12. Governing Law; Venue.  This Agreement (including any claim or controversy arising out of or relating to this Agreement) will be governed by and construed in accordance with the laws of the State of California, without regard to the conflicts of laws rules.  Each party irrevocably submits to the exclusive jurisdiction of the federal and state courts located in the State of California, waives any objection which it may have to the laying of venue of any proceedings brought in any such court, and waives any claim that such proceedings have been brought in an inconvenient forum.  The parties agree that any and all claims, controversies or disputes arising from or relating to this Agreement will be submitted to federal or state courts located in California for resolution. 
      13. Specific Performance; Attorneys' Fees.  The parties expressly agree that a breach of this Agreement by any of the parties will cause irreparable harm to the non-breaching party for which damages would not be an adequate remedy and therefore, the non-breaching party will, in addition to any other rights and remedies available hereunder or at Law, have the right to enforce this Agreement by obtaining an order compelling specific performance of the breaching party's obligations to provide the reliability support provided for under this Agreement.  If any party institutes legal proceedings to enforce this Agreement, the prevailing party will be entitled to recover all reasonable costs incurred by such party (including reasonable attorneys' fees) in addition to any other relief to which such party may be entitled.  EACH PARTY HEREBY IRREVOCABLY WAIVES, TO THE FULLEST EXTENT PERMITTED BY LAW, ANY AND ALL RIGHT TO TRIAL BY JURY IN ANY LEGAL PROCEEDING ARISING OUT OF A CLAIM FOR SPECIFIC PERFORMANCE BROUGHT BY A PARTY PURSUANT TO THIS SECTION 13.
      14. Mediation.  The parties agree to mediate any dispute or claim arising between them out of this Agreement before resorting to court action.  The parties shall use their best good faith efforts to complete the mediation with sixty (60) days of the date that a party makes a written request to the other party(s) to mediate.  Mediation fees, if any, shall be divided equally among the parties involved.  Other than mediation fees, each party will be responsible for its own costs incurred during the mediation process.  The mediation shall be conducted in Reno, Nevada, unless the parties agree to conduct it in a different location.  The mediator chosen shall be knowledgeable in electric utility matters and will not have any current or past substantial business or financial relationships with any disputing party.  If, for any dispute or claim to which this paragraph applies, any party commences an action without first attempting to resolve the matter through mediation or refuses to mediate after a written request has been made, then that party shall not be entitled to recover attorney fees, even if they would otherwise be available to that party in any such action.  Should the parties be unable to resolve the dispute through mediation, they will be free, subject to Section 12 above, to file an action to adjudicate the dispute.  Notwithstanding the foregoing, a claim by a party for specific performance shall not be subject to the mediation procedures and requirements set forth in this Section 14.
      15. Notices.  Written notice provided under this Agreement should be sent to address indicated below (or at such other address as a party may specify, provided that notices of a change of address will be effective only upon receipt thereof):
if to CalPeco:

Liberty Utilities (CalPeco Electric) LLC
c/o Algonquin Power &amp; Utilities Corp.
Attn: President
2845 Bristol Circle
Oakville, Ontario, Canada L6H 7H7
Fax: (905) 465-4514
with a copy to:

Emera Incorporated
Attn: Corporate Secretary
1894 Barrington Street
Halifax, Nova Scotia
B3J 2A8
Fax: (902) 428-6171
with a copy to:

Davis Wright Tremaine LLP
Attn: Steven F. Greenwald
505 Montgomery Street, Suite 800
San Francisco, CA
Fax: (415) 276-6599

If to Sierra:

Sierra Pacific Power Company
Attn:  Office of the General Counsel
6226 West Sahara Avenue
Las Vegas, Nevada 89146
Fax: (702) 402-2069
with a copy to:

Sierra Pacific Power Company
Attn:  Christopher A. Hilen 
6100 Neil Road
Reno, Nevada  89520-3150
Fax: (775) 834-4811
      16. Rules of Interpretation.  Unless a clear contrary intention appears, this Agreement will be construed and interpreted as follows: (a) the singular number includes the plural number and vice versa; (b) reference to any person includes such person's permitted successors and assigns; (c) reference to any agreement (including this Agreement), document, instrument or tariff means such agreement, document, instrument or tariff as amended or modified and in effect from time to time in accordance with the terms thereof; (d) reference to any Law means such Law as amended, modified, codified or reenacted, in whole or in part, and in effect from time to time; (e) "hereunder," "hereof," "herein," "hereto" and words of similar import will be deemed references to this Agreement as a whole and not to any particular Article, Section or other provision hereof or thereof; and (f) "including" (and with correlative meaning "include") means including without limiting the generality of any description preceding such term.
      17. Entire Agreement.  This Agreement constitutes the entire agreement between the parties with reference to the subject matter hereof, and supersedes all prior and contemporaneous understandings or agreements, oral or written, among the parties with respect to the subject matter of this Agreement.  Nothing in this Agreement modifies, supersedes, or otherwise alters any other agreements between the parties.
      18. No Third Party Beneficiaries.  This Agreement is not intended to and does not create rights, remedies, or benefits of any character whatsoever in favor of any person or entity not a party hereto, and the obligations herein assumed are solely for the use end benefit of the parties to this Agreement and their permitted successors and assigns.
      19. Amendment; Counterparts.  The parties may by mutual agreement amend this Agreement by a written instrument duly executed by each party.  This Agreement may be executed in multiple counterparts (each of which will be deemed an original, but all of which together will constitute one and the same instrument), and may be delivered by facsimile or email transmission.
*	*	*	*	*
[Remainder of this page intentionally left blank;
Signature page follows immediately below]
      IN WITNESS WHEREOF, the parties have executed this Agreement effective as of the Effective Date.
 
SIERRA PACIFIC POWER COMPANY 
d/b/a NV ENERGY

By: 						
Name: Roberto R. Denis
Title: Senior Vice President - Energy Delivery

 
LIBERTY UTILITIES (CALPECO ELECTRIC), LLC

By: California Pacific Utility Ventures, LLC, 
Its: Sole Member

By: 						
Name: Ian E. Robertson
Title: Manager
      



DWT 14557263v2 0089731-000002
DWT 14557263v2 0089731-000002

DWT 14557263v2 0089731-000002	9

DWT 14557263v2 0089731-000002
DWT 14557263v2 0089731-000002

[SIGNATURE PAGE TO RELIABILITY SUPPORT AGREEMENT]

DWT 14557263v2 0089731-000002</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>17</filing_id>
      <filing_title>Notice of Succession</filing_title>
      <filing_type>10</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2013-08-09</current_effective_date>
      <ferc_order_date>2013-09-06</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
    <record_data>
      <record_id>1100</record_id>
      <option_code>A</option_code>
      <record_title>CalPeco FERC Electric Rate Schedule No. 3 -- DCA</record_title>
      <record_content_desc>Rate Schedule No. 3</record_content_desc>
      <record_version_num>2.0.0</record_version_num>
      <record_narrative_name>CalPeco FERC Electric Rate Schedule No. 3 -- DCA</record_narrative_name>
      <collation_value>3000</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2013-08-09</proposed_effective_date>
      <priority_order>500</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>Liberty Utilities (CalPeco Electric) LLC
FERC FPA Electric Tariff
FERC Electric Rate Schedule No. 3
Distribution Capacity Agreement
Effective Date:  August 9, 2013
      
      
DISTRIBUTION CAPACITY AGREEMENT
      THIS DISTRIBUTION CAPACITY AGREEMENT (this "Agreement'") is entered into as of the 8th day of October, 2009, by and between SIERRA PACIFIC POWER COMPANY, a Nevada corporation d/b/a NV ENERGY ("NV Energy"), and Liberty Utilities (CalPeco Electric) LLC, a California limited liability company ("CalPeco").  NV Energy and CalPeco are referred to herein collectively as the "Parties" and each individually, a "Party."
      WHEREAS, NV Energy owns and operates an integrated electric transmission and distribution system located in California and Nevada, and provides electric distribution service to Nevada customers located in close proximity to the State Boundary (including areas within or near Incline Village, Stateline and Verdi, Nevada);
      WHEREAS, the Parties have entered into an Asset Purchase Agreement dated April 22, 2009 (the "Asset Purchase Agreement"), pursuant to which CalPeco has agreed to acquire from NV Energy certain electric distribution and generation assets located in California, including certain electric distribution circuits, lines and substations currently used by NV Energy to serve the Incline Village/Stateline/Verdi Customers;
      WHEREAS, upon completion of the transactions contemplated by the Asset Purchase Agreement, (a) CalPeco will own and operate an electric distribution system located in California, (b) NV Energy will own and operate electric transmission facilities in California and electric distribution and transmission systems in Nevada, certain of which are interconnected with CalPeco's system, and (c) NV Energy will supply CalPeco its full requirements of energy and capacity in accordance with the PPA; and
      WHEREAS, the Parties desire to enter into an arrangement under which (a) NV Energy will deliver to CalPeco at the Points of Receipt at the State Boundary the energy required by NV Energy to serve the retail load of Incline Village/Stateline/Verdi Customers, (b) CalPeco will make capacity on its electric distribution system available to NV Energy for the purpose of delivering energy to Delivery Points at the State Boundary in proximity to the Incline Village/Stateline/Verdi Customers, (c) CalPeco will, on NV Energy's behalf, deliver energy delivered by NV Energy from the Points of Receipt to the Delivery Points, and (d) NV Energy will pay to CalPeco the Distribution Capacity Charge and compensate CalPeco for line losses associated with the distribution capacity arrangement contemplated hereby, upon the terms and conditions set forth in this Agreement.
      NOW THEREFORE, in consideration of the covenants, representations, warranties, and agreements hereinafter set forth, and intending to be legally bound hereby, the Parties agree as follows:
ARTICLE I 
DEFINITIONS
      1.1 Definitions.  As used in this Agreement, the following terms have the meaning specified below:
      "Change in Law Enactment Date" means the date upon which a Governmental Entity changes the Law, regardless of whether such change is effective retroactively, immediately, or prospectively.
      "Closing"  has the meaning ascribed thereto in the Asset Purchase Agreement.
      "Coordination Committee" has the meaning set forth in the System Coordination Agreement.
      "CPUC" means the California Public Utilities Commission or any successor organization.
      "Delivery Points" means the points of interconnection between NV Energy's electric distribution system and CalPeco's electric distribution system on the distribution circuits currently designated as (a) circuit numbers 2101, 2200 and 2300 from the Stateline substation in California, (b) circuit numbers 4202 and 5100 from the Brockway substation in California, and/or (c) circuit number 204 from NV Energy's California substation in California, in each case, where such distribution circuits cross the State Boundary.
      "Distribution Capacity Charge" means the monetary amount determined from time to time in accordance with the methodology set forth on Schedule A attached hereto.
      "Effective Date" means the date upon which the Closing occurs.
      "Emergency Backup Service Agreement" means the Emergency Backup Service Agreement dated as of October 8, 2009, by and between NV Energy and CalPeco.
      "FERC" means the Federal Energy Regulatory Commission or any successor organization.
      "Final System Separation Date" means the date, as determined by NV Energy, on which NV Energy no longer requires this Agreement (and the arrangement contemplated hereby) to serve any Incline Village/Stateline/Verdi Customers.
      "Good Utility Practice" means any practices, methods, standards, guides, or acts, as applicable, that (a) are generally accepted in the North American electric industry during the relevant time period in the regulated electric utility industry, (b) are commonly used in prudent utility engineering, construction, project management, and operations, or (c) would be expected if electric distribution and transmission systems are to be conducted at a reasonable cost in a manner consistent with Laws applicable to such system and the objectives of reliability, safety, environmental protection, economy, and expediency.  Good Utility Practice includes practices, methods, or acts generally accepted in the North American electric industry, and is not limited to the optimum practices, methods, or acts to the exclusion of all others.
      "Governmental Entity" means the United States of America and any other federal, state, local, or foreign governmental or regulatory authority, department, agency, commission, body, court, or other governmental entity.
      "Incline Village/Stateline/Verdi Customer" means each retail electric customer located within NV Energy's franchised service territory in Nevada that is, from time to time, served by NV Energy from distribution circuits currently designated as (a) circuit numbers 2101, 2200 and 2300 from the Stateline substation in California, (b) circuit numbers 4202 and 5100 from the Brockway substation in California, or (c) circuit number 204 from NV Energy's California substation in California.  Incline Village/Stateline/Verdi Customers do not include any Borderline Customers (as defined in the Borderline Customer Agreement dated as of October 8, 2009, by and between NV Energy and CalPeco).
      "Interconnection Agreement" means the Interconnection Agreement dated October 8, 2009 by and between NV Energy and CalPeco.
      "Law" means any statutes, regulations, rules, ordinances, codes, and similar acts or promulgations of any Governmental Entity, and any order, judgment, writ, injunction, decree, directive, or award of a court, administrative judge, or other Governmental Entity acting in an adjudicative or regulatory capacity, or of an arbitrator, in each case, with jurisdiction over the subject matter.
      "Loss Adjustment Factor" means, with respect to any Delivery Point, a number agreed upon by the Parties for such Delivery Point representing the Parties' best estimate of the electrical energy losses arising in respect of energy delivered from CalPeco to NV Energy from such Delivery Point, as such number may be revised from time to time (as agreed by the Parties, acting reasonably) to accurately reflect such electrical losses.  The initial Loss Adjustment Factor applicable to each Delivery Point described in the definition thereof will be 1.005.
      "Metering Equipment" has the meaning set forth in the Interconnection Agreement.
      "MW" means megawatt.
      "MWh" means megawatt-hour.
      "OATT" means Open Access Transmission Tariff.
      "Partial System Separation Date" means each date, as determined by NV Energy, on which part of NV Energy's electric system is separated from CalPeco's electric system and, as a result thereof, NV Energy no longer requires this Agreement to serve part (but less than all) of the Incline Village/Stateline/Verdi Customers.
      "Points of Receipt" means the points of interconnection between NV Energy's electric distribution system and CalPeco's electric distribution system where NV Energy delivers energy to CalPeco under this Agreement.  The initial Points of Receipt will be (a) the point of interconnection between NV Energy's Truckee substation in California and CalPeco's 609 and 650 distribution line, the point at which ownership of the 132 transmission line changes from NV Energy to CalPeco, (b) the point of interconnection where the 111, 160, and 634 distribution lines cross the State Boundary, and/or (c) the point of interconnection between NV Energy's California substation in California and CalPeco's 204 distribution circuit.
      "PPA" means the Service Agreement dated April 22, 2009, between NV Energy and CalPeco, as amended by Amendment No.  1 to Service Agreement dated October 8, 2009, pursuant to which NV Energy has agreed to sell CalPeco its full requirements of energy and capacity following the Closing, upon the terms and conditions set forth therein.
      "PUCN" means the Public Utilities Commission of Nevada or any successor organization.
      "Regional Transmission Organization" means a FERC-approved Regional Transmission Organization within the meaning of FERC Order 2000, 65 FR 809 (January 6, 2000).
      "State Boundary" means the California-Nevada state boundary.
      "System Coordination Agreement" means the System Coordination Agreement executed on October 8, 2009, by and between NV Energy and CalPeco.
      "Uncontrollable Force" means any event or circumstance that (a) prevents a Party from performing its obligations under this Agreement, (b) is not within the reasonable control of the claiming Party, and (c) cannot be avoided or overcome by the exercise of due diligence.  Uncontrollable Force may include, but is not restricted to, flood, drought, earthquake, storm, fire, lightning, epidemic, war, riot, act of terrorism, civil disturbance or disobedience, labor dispute, labor or material shortage, outage of generation, transmission or distribution facilities, sabotage, restraint by court order or public authority, and action or inaction of, or failure or inability to obtain the necessary authorizations or approvals from, any Governmental Entity.
      1.2 In addition, each of the following terms has the meaning specified in the Section of this Agreement set forth opposite such term:
Term
Reference
Agreement
Introductory Paragraph
Arbitration Rules
Section 9.2
Asset Purchase Agreement
Recitals
CalPeco
Introductory Paragraph
Energy Loss Balance
Section 2.3(b)
Event of Default
Section 4.2(d)
NERC
Section 3.2
Notice of Dispute
Section 9.1
NV Energy
Introductory Paragraph
Party; Parties
Introductory Paragraph

ARTICLE II 
CAPACITY: DISTRIBUTION CAPACITY CHARGE: LINE LOSS CHARGE
      2.1 Capacity.  CalPeco will provide capacity on its electric distribution system to NV Energy for the purpose of delivering energy (as such energy is delivered to CalPeco by NV Energy) from the Points of Receipt to the Delivery Points.  The maximum MW capacity to be provided to NV Energy by CalPeco under this Agreement will be the maximum MW amount of energy required to serve the retail load of the Incline Village/Stateline/Verdi Customers.  The capacity provided to NV Energy by CalPeco, and the energy CalPeco will deliver to NV Energy under this Agreement, will be used by NV Energy solely to serve the retail load of Incline Village/Stateline/Verdi Customers.
      2.2 Distribution Capacity Charge.
            (a) Commencing on the Effective Date, NV Energy will pay CalPeco the Distribution Capacity Charge on a monthly basis.  The Distribution Capacity Charge will be determined in accordance with the methodology set forth on Schedule A.
            (b) The Parties will recalculate the Distribution Capacity Charge (i) upon the CPUC authorizing the effectiveness of new rates in each general rate case filed by CalPeco with respect to the Business (as defined in the Asset Purchase Agreement), and (ii) following any removal of a Delivery Point by NV Energy.  The adjusted Distribution Capacity Charge will be effective as of, with respect to clause (i) above, the date upon which revised CalPeco rates become effective and, with respect to clause (ii) above, the date upon which NV Energy ceases to use a Delivery Point.  For purposes of illustration,
                        (A) if the CPUC authorizes revised rates for CalPeco as part of a general rate case filed by CalPeco, and as a result of such revised rates a higher or lower amount of the distribution revenue requirement of the Business should be allocated to the Distribution Capacity Assets (as defined in Schedule A) under the methodology set forth on Schedule A, then the Parties will adjust the allocated amount appropriately and recalculate the Distribution Capacity Charge.  As a result of such recalculation, CalPeco will charge NV Energy based on the adjusted Distribution Capacity Charge, on a prospective basis commencing on the date CalPeco is authorized to charge the revised rates; and
                        (B) if, as a result of NV Energy having removed a Delivery Point, fewer Capacity Assets will be used in the distribution capacity arrangement contemplated by this Agreement, then the Parties will recalculate the Distribution Capacity Charge (in accordance with the methodology set forth on Schedule A) to give effect to such change.  As a result of such recalculation, CalPeco will charge NV Energy based on the adjusted Distribution Capacity Charge, on a prospective basis commencing on the date NV Energy ceases to use the removed Delivery Point.
      In connection with any such recalculation under this Section 2.2(b), the Parties will work together, in good faith and in an expeditious manner, to make the appropriate adjustments to the Distribution Capacity Charge.  In the event the Parties cannot agree upon one or proposed adjustments to the Distribution Capacity Charge (as determined in accordance with the methodology set forth on Schedule A), then either Party may submit the disputed matter for resolution pursuant to proceedings contemplated by Article IX of this Agreement; provided, that, if the conditions set forth in Section 10.14(b) have been satisfied, the special dispute resolution provisions set forth in Section 10.14 will apply and be used in lieu of the Article IX procedures for any dispute arising under this Section 2.2(b).
            (c) The Distribution Capacity Charge, as determined in accordance with the methodology set forth on Schedule A and, if applicable, as adjusted and recalculated pursuant to this Section 2.2, is designed and intended to compensate CalPeco for its costs of providing the distribution capacity service contemplated by this Agreement.
            (d) For the avoidance of doubt, the annual and monthly amounts of the Distribution Capacity Charge will be prorated for partial years and months, where amounts for partial years will be prorated on the basis of a 365-day year and amounts for partial months will be prorated based on the Distribution Capacity Charge for the entire month and the number of days in the month.
      2.3 Energy Losses.
            (a) It is understood that energy losses will occur in connection with CalPeco's delivery of energy from Points of Receipt to Delivery Points under this Agreement.  NV Energy will reimburse CalPeco for such losses in accordance with this Section 2.3.
            (b) For each month during the term of this Agreement, energy losses will be calculated by multiplying (i) the amount of energy, measured in whole MWh, delivered into Nevada from California through the Delivery Points, and (ii) the Loss Adjustment Factor.  For purposes of calculating energy losses, the amount of energy delivered to NV Energy by CalPeco under this Agreement (as contemplated by the clause (i) above) will be determined pursuant to Schedule B.  Within 30 days following the last day of each month, CalPeco will deliver to NV Energy a statement of energy losses in respect of each Delivery Point arising in the previous month and the balance of energy losses due and owing in respect of each Delivery Point (the "Energy Loss Balance").  The Parties will, in good faith, act promptly to resolve any disputes in respect of the Energy Loss Balance in accordance with the provisions hereof.
            (c) Within 20 days after its receipt of the Energy Loss Balance from CalPeco in accordance with Section 2.3(b), NV Energy will schedule and deliver to CalPeco the energy required to reimburse CalPeco for energy losses pursuant to this Section 2.3(c).  NV Energy will reimburse CalPeco for energy losses, via physical delivery, by scheduling and delivering an amount of energy (as determined pursuant to Section 2.3(b) above) to CalPeco at a Point of Receipt or a Delivery Point (as defined in the PPA) concurrently with NV Energy's regular energy deliveries under the PPA.  The amount of energy to be scheduled and delivered back to CalPeco under this Section 2.3(c) will equal the amount of whole MWhs owing in respect of the Delivery Points, as calculated in accordance with Section 2.3(b) and set forth in the Energy Loss Balance.  Partial MWhs will continue to remain outstanding and will be accrued on the Energy Loss Balance.
      2.4 Metering Equipment.  The procurement, installation, ownership, testing, maintenance, and operation of Metering Equipment used to measure the amount of energy CalPeco delivers to NV Energy in accordance with this Agreement will be governed by the terms and conditions of other agreements entered into by the Parties, including the Interconnection Agreement.
ARTICLE III 
GENERAL UNDERTAKINGS
      3.1 Regulation.
            (a) NV Energy will remain responsible for providing electric distribution service to Incline Village/Stateline/Verdi Customers.  Nothing in this Agreement terminates, amends, or otherwise alters NV Energy's statutory obligations to provide electric distribution service to Incline Village/Stateline/Verdi Customers located within its Nevada franchised service territory, in accordance with the terms and conditions of service authorized by the PUCN.
            (b) Nothing in this Agreement is intended to subject NV Energy to the jurisdiction of the CPUC, and nothing in this Agreement is intended to subject CalPeco to the jurisdiction of the PUCN.
      3.2 Compliance with Law.  The obligations of each Party hereunder are subject to applicable Law and North American Electric Reliability Corporation ("NERC") regulations, and each Party will operate its electric system in compliance with applicable Law and NERC regulations.
      3.3 System Operation and Maintenance.  Each Party will operate and maintain its electric system in accordance with Good Utility Practice.  Subject to the foregoing, CalPeco will use reasonable diligence in the operation and maintenance of all facilities necessary to deliver energy from the Points of Receipt to the Delivery Points as contemplated by this Agreement.  Subject to the foregoing, NV Energy will use reasonable diligence in the operation and maintenance of all facilities necessary to deliver energy to the Points of Receipt and to accept energy at the Delivery Points as contemplated by this Agreement.
      3.4 Separation Notice and Cooperation.
            (a) Upon commencement of the operational actions necessary to separate the Parties' electric systems, in whole or in part, NV Energy will notify CalPeco of such actions and provide no less than 24 months advance notice of each anticipated Partial System Separation Date or the Final System Separation Date, as applicable, associated with such actions; provided, that 24 months advance notice will not be required (i) if NV Energy promptly notifies CalPeco after becoming aware that NV Energy will be required by Law to separate the Parties' electric systems, or (ii) in connection with the exercise of a Party's rights to separate the electric systems following an Event of Default under this Agreement or pursuant to Section 7.2(c) of the System Coordination Agreement.
            (b) NV Energy will, after providing notice to CalPeco pursuant to Section 3.4(a), keep CalPeco apprised, consistent with reasonable commercial practices, of the status of such actions and the anticipated period of time required to complete such actions.  Without limiting the foregoing, NV Energy will thereafter regularly provide to CalPeco (i) information concerning NV Energy's anticipated plans or on-going actions related to changes that will facilitate a separation of the Parties' electric systems, in whole or in part, and (ii) other information requested by CalPeco that reasonably relates to this Agreement, including information reasonably required by CalPeco to file and prosecute rate requests.
            (c) NV Energy will provide at least 30 days advance notice to CalPeco of any Partial System Separation Date or the Final System Separation Date prior thereto, and the Parties will work together in good faith in connection with any such separation.
      3.5 Points of Receipt: Delivery Points.
            (a) NV Energy will, prior to the Effective Date, have the right to amend the definition of Points of Receipt and/or Delivery Points for the purpose of (i) adding one or more points of interconnection to such definitions, (ii) removing one or more points of interconnection from such definitions, or (iii) modifying the description of one or more points of interconnection currently contemplated by such definitions, provided that each such additional Point of Receipt or Delivery Point is equipped with Metering Equipment.  Any such addition, removal, or modification will be automatically effective prior to the Closing, without further action by the Parties, upon written notice of such addition, removal, or modification from NV Energy to CalPeco.
            (b) NV Energy may, after the Effective Date, request that one or more different or additional points of interconnection become Points or Receipt or Delivery Points hereunder, provided that each such additional Point of Receipt or Delivery Point is equipped with Metering Equipment.  Subject to CalPeco's agreement (such agreement not to be unreasonably withheld, conditioned or delayed), each such different or additional point of interconnection will become a Point of Receipt or a Delivery Point, as applicable, upon receipt of CalPeco's agreement to such request.
            (c) Notwithstanding anything in this Agreement to the contrary, NV Energy will have the right to remove, from time to time after the Effective Date, any Point of Receipt or Delivery Point following a Partial System Separation Date, to the extent NV Energy no longer requires such Point of Receipt or Delivery Point to serve Incline Village/Stateline/Verdi Customers previously served by such Point or Receipt or Delivery Point under this Agreement.  For the avoidance of doubt, nothing in this Section 3.5(c) alters NV Energy's obligations under Section 3.4.
      3.6 System Separation.  In connection with any Partial System Separation Date or the Final System Separation Date, the Party performing or causing to be performed the engineering, permitting, construction, equipment procurement, installation and other work and equipment required to separate the Parties' electric systems will cause the separation to be performed in a manner such that each system remains operable in accordance with Good Utility Practice and such that the level of reliability remains substantially the same.
ARTICLE IV 
TERM; DEFAULT: TERMINATION
      4.1 Term.  Except as otherwise provided by Section 4.2(a), the term of this Agreement will commence on the Effective Date and continue until 11:59 p.m.  Pacific time on the Final System Separation Date.
      4.2 Termination: Events of Default: Remedies.
            (a) This Agreement will terminate automatically upon any termination of the Asset Purchase Agreement prior to the Closing.
            (b) [RESERVED]
            (c) Following the occurrence of an Event of Default, the non-defaulting Party will have the right, but not the obligation, to cause the defaulting Party (at the sole cost and expense of the defaulting Party, notwithstanding any term of this Agreement or any other agreement between the Parties) to cause to be performed and provided all engineering, permitting, construction, equipment procurement, installation and other work and equipment required to separate the Parties' electric systems (x) to the extent necessary, in the reasonable opinion of the non-defaulting Party following consultation with the defaulting Party, to protect the non-defaulting Party against recurrence of the specific adverse effects that gave rise to the Event of Default, and (y) in a manner such that each Party's electric system remains operable in accordance with Good Utility Practice and such that the level of reliability remains substantially the same; provided, that:
                  (i) with respect to an Event of Default arising under Section 4.2(d)(i) of this Agreement, the separation rights of CalPeco under this Section 4.2(c) will relate to all (or, at the sole option of CalPeco, any) portions of the Parties' electric systems at which CalPeco delivers energy to NV Energy under this Agreement; and
                  (ii) the non-defaulting Party will (A) use its commercially reasonable efforts to cause such amounts invested in its electric system by the defaulting Party to be included in the non-defaulting Party's rate base, and (B) to the extent any such amounts are included in the non-defaulting Party's rate base, reimburse the defaulting Party for such amounts.
      For the avoidance of doubt, but expressly subject to Section 4.2(e), the non-defaulting Party may also exercise any other rights or remedies available to it at law or in equity, subject to any limitations set forth herein.  The election by the non-defaulting Party to not exercise its remedies under Section 4.2(c) will not constitute a waiver by such non-defaulting Party of its rights to exercise such remedies with respect to any subsequent breach by the defaulting Party.
            (d) Each of the following events constitutes an "Event of Default":
                  (i) NV Energy fails to pay all monies due to CalPeco in accordance with Article VIII within 15 days following written notice of such failure by NV Energy to make full payment;
                  (ii) NV Energy fails to reimburse CalPeco for energy losses in accordance with Section 2.3 within 15 days following written notice of such failure by NV Energy to make full reimbursement of energy losses; and
                  (iii) other than the defaults set forth in clauses (i) or (ii) above, a Party fails to discharge or perform any material duty or obligation under this Agreement, and such failure is not cured within 30 days after receipt of written notice from the other Party describing such failure, provided, however, that if such failure cannot be cured within such 30-day cure period despite diligent efforts to do so, the 30-day cure period will be extended by up to an additional number of days required to cure such failure provided that the obligated Party continues such diligent efforts and is able to remedy the failure within a reasonable period of time.  For the avoidance of doubt, the failure or inability of CalPeco to perform a material duty or obligation under this Agreement will not constitute an Event of Default pursuant to this clause (iii) if such failure or inability to perform is excused under Section 5.1 and remains excused under Section 5.2 of this Agreement.
            (e) Notwithstanding any other provision herein to the contrary, no Party will, following the occurrence of any Event of Default resulting from a breach by the other Party, have the right to terminate this Agreement prior to the Final System Separation Date.
            (f) Upon termination of this Agreement, (i) CalPeco's obligation to make distribution capacity available under this Agreement for purposes of delivering energy to NV Energy from the Points of Receipt to the Delivery Points will cease, and (ii) NV Energy's obligation to pay CalPeco the Distribution Capacity Charge and reimburse CalPeco for energy losses will survive until such obligations are discharged in accordance with the provisions of this Agreement, Notwithstanding anything set forth in Section 4.2, this Agreement will continue in effect after termination to the extent necessary to permit the determination and enforcement of liability, payment and indemnification obligations arising from acts or events that occurred while this Agreement was in effect.  The termination of this Agreement will not modify or amend any Party's right or obligations under any other agreement between the Parties, except as expressly set forth therein.
ARTICLE V 
EXCUSE OF PERFORMANCE; LIMITATION ON EXCUSED PERFORMANCE
      5.1 Excuse of Performance.  Subject to Section 5.2, no Party will be considered to be in breach of this Agreement to the extent that a failure or inability to perform its obligations under this Agreement (a) results from an action or inaction authorized or approved in writing by the other Party, (b) results from an action or inaction required by Law, (c) results from action or inaction taken, including actions taken to restore outages on generation, transmission and distribution facilities, in accordance with Good Utility Practice, (d) is due solely to an Uncontrollable Force, or (e) results from a breach of this Agreement by the other Party.
      5.2 Limitation on Excused Performance.  Notwithstanding Section 5.1, no Party will be excused from performance in accordance with Section 5.1(a), (c), (d), or (e) or relieved of liability under this Agreement to the extent that such failure is due to (a) its own negligence, (b) its lack of sufficient monetary resources, or (c) removable or remediable causes that it fails to remove or remedy in a manner consistent with Good Utility Practice and within a commercially reasonable time period.  Nothing contained in this Article V will be construed to require a Party to settle a strike or labor dispute in which it is involved on terms that it considers, in its sole discretion, to be unreasonable.  Nothing contained in this Article V is intended or will be construed to abate, postpone or in any respect diminish NV Energy's obligations to make any payments due to CalPeco, or reimburse CalPeco for energy losses, pursuant to this Agreement.
      5.3 Notice and Action.  Any Party rendered unable to fulfill any of its obligations by reason of Uncontrollable Force or otherwise will comply with the applicable notice provisions in this Agreement or otherwise give prompt notice of such fact to the other Party, and will exercise due diligence to remove such inability within a commercially reasonable period of time; provided, that the failure to provide prompt notice will not prevent a Party from being entitled to claim relief for failure to perform its obligations under this Article V.  Each notice provided pursuant to this Section 5.3 will include an estimate of the amount of time that will be required to remove the inability to perform its obligations under this Agreement.
ARTICLE VI 
INDEMNIFICATION: WAIVER OF CONSEQUENTIAL DAMAGES
      6.1 Indemnification.  Each Party will indemnify the other Party and save it harmless from all losses, liabilities or claims, including reasonable attorneys' fees and court costs, from any and all persons arising from or out of claims of personal injury (including death) or property damage from the Party's performance (or non-performance) of its obligations hereunder, except to the extent that such losses, liabilities or claims were caused by the negligence or intentional acts of the other Party.
      6.2 Waiver of Consequential Damages.  Notwithstanding any other provision of this Agreement, in no event will a Party be liable to the other Party, whether in contract, warranty, tort, negligence, strict liability, or otherwise, for special, indirect, incidental, consequential (including lost profits or revenues, business interruption damages and lost business opportunities), exemplary or punitive damages related to, arising out of, or resulting from performance or nonperformance of this Agreement.  With respect to a Party, (a) the limitation on damages under this Section 6.2 will not apply with respect to claims brought by third persons for which such Party is entitled to indemnification under this Agreement, and (b) damages for which a Party may be liable to the other Party under another agreement will not be considered to be special, indirect, incidental, consequential, exemplary or punitive damages under this Agreement.
ARTICLE VII 
CONDITIONS PRECEDENT
      This Agreement is subject to and conditioned upon (a) CalPeco having received a no-action letter, waiver, declaratory order, or other issuance from the FERC, where the result of such no-action letter, waiver, declaratory order, or other issuance provides sufficient assurance, as reasonably determined by CalPeco, that FERC will not require CalPeco to file an OATT or otherwise be subject to FERC requirements applicable to transmission providers subject to FERC's jurisdiction, based on CalPeco's provision of services under this Agreement; (b) NV Energy having received orders from the CPUC and the PUCN approving or authorizing this Agreement, including its payment to CalPeco of the rates and other terms and conditions set forth herein; (c) CalPeco having received an order from the CPUC asserting jurisdiction over and approving or authorizing this Agreement, including its provision of services to NV Energy at the rates and other terms and conditions set forth herein; and (d) the occurrence of the Closing under the Asset Purchase Agreement.  Without limiting the rights and obligations of the Parties under in the Asset Purchase Agreement, each Party will cooperate with the other Party, as the other Party will reasonably request, in connection with the procurement of the regulatory approvals described above.
ARTICLE VIII 
BILLING; PAYMENT
      8.1 Billing.  CalPeco will submit to NV Energy, on or before the 20th day of each calendar month, an invoice of the amount due for the preceding calendar month.  Each invoice will state the calendar month to which the invoice applies and provide sufficient detail in order for NV Energy to assess the accuracy of the invoiced amount.
      8.2 Payment.
            (a) CalPeco will send invoices to NV Energy at the address provided in Section 10.5, and NV Energy will pay invoices within 20 days of receipt.  All payments will be made in immediately available funds payable to CalPeco, or by wire transfer to a bank named and account designated by CalPeco.  Payment of invoices by NV Energy will not constitute a waiver of any rights or claims it may have under this Agreement.
            (b) Amounts, if any, that have not been paid by NV Energy on or before the due date will be payable with interest calculated daily, at a rate equal to the applicable FERC approved interest rate, for the period beginning on the day after the due date and ending on the date of the payment.
      8.3 Billing Disputes.
            (a) If (i) CalPeco fails to issue an invoice for some or all of the charges payable by, or energy losses reimbursable by, NV Energy during a calendar month or (ii) CalPeco finds one or more errors in an invoice, CalPeco will have the right to issue an invoice or a revised invoice for the charges or energy losses; provided, that the invoice or revised invoice must be issued within two years of the date on which the original invoice should have been or was issued, whichever is applicable.  Any such invoice or revised invoice will include an explanation of the charges or the revised charges or energy losses or revised energy losses, as applicable.  CalPeco's invoice or revised invoice will be due and payable by NV Energy (in money or energy, as applicable) on or before the 20th day after it receives any such invoice or revised invoice.
            (b) NV Energy may dispute any of the charges on an invoice by providing written notice of the dispute to CalPeco within two years of the date of the original invoice, or the date of the last revised invoice if one or more revised invoices were issued, for a billing period.  NV Energy's notice will specify the amount in dispute and state the basis for the dispute.  If NV Energy disputes any of the charges on an invoice or a revised invoice, the Parties will promptly meet and endeavor to resolve the dispute.  If the Parties cannot resolve the dispute in this manner within 60 days (or such longer period of time mutually agreed upon by the Parties in writing) of NV Energy's notice to CalPeco of a dispute, either Party may proceed under the provisions of Article IX in this Agreement to resolve the dispute; provided, that in proceeding under the provisions of Article IX, (i) the notice provided by NV Energy under this Section 8.3 will constitute a Notice of Dispute under Section 9.1 and (ii) the 30-day negotiation period contemplated by Section 9.1 will not apply, the result of which is the Parties will initiate arbitration immediately pursuant to the remaining provisions of Article IX.
            (c) NV Energy will be obligated to pay the entire amount of an invoice or a revised invoice, and obligated to reimburse any energy loss stated in an invoice or revised invoice, when due even if it disputes some or all of the charges or energy losses.  If a dispute is ultimately resolved in NV Energy's favor, CalPeco will promptly refund any amounts owed to NV Energy, plus interest calculated daily at a rate equal to the applicable FERC approved interest rate, for the period beginning on the first business day after NV Energy paid the disputed amount to CalPeco and ending on the date CalPeco pays the refund to NV Energy.
ARTICLE IX 
DISPUTE RESOLUTION
      9.1 Submission.  In the event either Party has a dispute, or asserts a claim, that arises out of or in connection with this Agreement or its performance, other than matters to be resolved in accordance with Section 10.14(b), such Party will provide the other Party with written notice of the dispute or claim ("Notice of Dispute").  Such dispute or claim will be referred to a designated senior representative of each Party for resolution on an informal basis as promptly as practicable after receipt of the Notice of Dispute by the other Party.  In the event the designated representatives are unable to resolve the claim or dispute through unassisted or assisted negotiations within 30 days of the other Party's receipt of the Notice of Dispute, such claim or dispute will be submitted to arbitration and resolved in accordance with the arbitration procedures set forth below.
      9.2 Mandatory Arbitration Procedures.  Any arbitration initiated under this Agreement will be conducted before a single neutral arbitrator appointed by the Parties.  If the Parties fail to agree upon a single arbitrator within 30 days of the submission of the dispute to arbitration, each Party will choose one arbitrator who will sit on a three member arbitration panel.  The two arbitrators so chosen will within 20 days select a third arbitrator to chair the arbitration panel.  In either case, the arbitrators will be knowledgeable in electric utility matters, including electric generation and bulk power issues, and will not have any current or past substantial business or financial relationships with any Party (except prior arbitration).  The arbitrator(s) will provide each Party an opportunity to be heard and, except as otherwise provided herein, will conduct the arbitration in accordance with the Commercial Arbitration Rules of the American Arbitration Association ("Arbitration Rules") and any applicable FERC regulations or RTO rules; provided, that in the event of a conflict between the Arbitration Rules and the terms of this Article IX, the terms of this Article IX will prevail.  The arbitration will be held in Reno, Nevada.
      9.3 Arbitration Decisions.  Unless otherwise agreed by the Parties, the arbitrator(s) will render a decision within 90 days of appointment and will notify the Parties in writing of such decision and the reasons therefor.  The arbitrator(s) will be authorized only to interpret and apply the provisions, of this Agreement and will have no power to modify or change any provision of this Agreement in any manner.  The decision of the arbitrator(s) will be final and binding upon the Parties, and judgment on the award may be entered in any court having jurisdiction.  The decision of the arbitrator(s) may be appealed solely on the grounds that the conduct of the arbitrator(s), or the decision itself, violated the standards set forth in the Federal Arbitration Act or the Administrative Dispute Resolution Act.  If required by Law, the final decision of the arbitrator(s) must also be filed with FERC if it affects jurisdictional rates, terms and conditions of service, or the Parties' facilities.
      9.4 Costs.  Each Party will be responsible for its own costs incurred during the arbitration process and for the following costs, if applicable: (a) the cost of the arbitrator chosen by the Party to sit on the three member panel and 50% of the cost of the third arbitrator chosen; or (b) 50% of the cost of the single arbitrator jointly chosen by the Parties; provided, that the arbitrator(s) will have the authority to award the Party prevailing in any arbitration its reasonable attorneys' fee and costs.
ARTICLE X 
MISCELLANEOUS
      10.1 Binding Effect.  This Agreement and the rights and obligations hereof, will be binding upon and will inure to the benefit of the successors and assigns of the Parties hereto.
      10.2 Assignment.
            (a) This Agreement may be assigned by either Party only with the written consent of the other Party; provided, that either Party may assign this Agreement without the consent of the other Party to any Affiliate (as defined in the Asset Purchase Agreement) with an equal or greater credit rating and with the legal authority and operational ability to satisfy the obligations of the assigning Party under this Agreement or that acquires the electric system of such Party.
            (b) Notwithstanding the foregoing, CalPeco will have the right to assign this Agreement, without the written consent of NV Energy, for collateral security purposes to aid in providing financing for the acquisition contemplated by the Asset Purchase Agreement, provided, that CalPeco will promptly notify NV Energy of any such assignment.  Any financing arrangement entered into by CalPeco pursuant to this Section 10.2 will provide that, prior to or upon the exercise of the secured party's, trustee's or mortgagee's assignment right(s) pursuant to said arrangement, the secured creditor, the trustee or mortgagee will notify NV Energy of the date and particulars of any such exercise of assignment right(s).
            (c) Any attempted assignment that violates this Section 10.2 is void and ineffective.  No assignment of a Party's rights or obligations under this Agreement, nor any consent thereto, will relieve such Party of its obligations and liabilities under this Agreement, nor will any such assignment expand any obligations of the non-assigning Party.  Where required, consent to assignment will not be unreasonably withheld, conditioned or delayed.
      10.3 Governing Law; Venue.  This Agreement (as well as any claim or controversy arising out of or relating to this Agreement) will be governed by and construed in accordance with the laws of the State of New York, without regard to the conflicts of laws rules thereof that would otherwise require the laws of another jurisdiction to apply.  Each Party irrevocably submits to the exclusive jurisdiction of the federal and (subject to the following) state courts located in the State of Nevada, waives any objection which it may have to the laying of venue of any proceedings brought in any such court, and waives any claim that such proceedings have been brought in an inconvenient forum; and agrees that any and all claims, controversies or disputes arising from or relating to this Agreement will be submitted in the federal courts of Nevada located in Reno for resolution; provided, however, that in the event jurisdiction may not be had in federal court, then the Parties agree to submit any and all such disputes, claims or controversies to the state district courts of Nevada located in Reno.
      10.4 Waiver of Jury Trial.  EACH OF THE PARTIES HERETO HEREBY IRREVOCABLY WAIVES, TO THE FULLEST EXTENT PERMITTED BY LAW, ANY AND ALL RIGHT TO TRIAL BY JURY IN ANY LEGAL PROCEEDING ARISING OUT OF OR RELATED TO THIS AGREEMENT OR ANY OF THE TRANSACTIONS CONTEMPLATED HEREBY.
      10.5 Notices.  Written notice provided under this Agreement should be sent to address indicated below (or at such other address as a Party may specify, provided that notices of a change of address will be effective only upon receipt thereof):
            (a) if to NV Energy:
Sierra Pacific Power Company
c/o NV Energy
Attn: Office of the General Counsel 
6226 West Sahara Avenue 
Las Vegas, Nevada 89146 
Fax: (702) 402-2069
      with a copy to:
Sierra Pacific Power Company
Attn: Christopher A.  Hilen
6100 Neil Road
Reno, Nevada 89520-3150
Fax:(775)834-4811
            (b) if to CalPeco:
Liberty Utilities (CalPeco Electric), LLC 
c/o Algonquin Power Management Inc.  
Attn: President
2845 Bristol Circle
Oakville, Ontario, Canada L6H 7H7
Fax:(905)465-4514
      with a copy to:
Emera Incorporated 
Attn: Corporate Secretary 
1894 Barrington Street 
Halifax, Nova Scotia B3J 2A8
Fax: (902) 428-6171
      with a copy to:
Davis Wright Tremaine LLP 
Attn: Steven F.  Greenwald 
505 Montgomery Street, Suite 800 
San Francisco, CA94111 
Fax: (415) 276-6599
      10.6 Severability.  If any provision in this Agreement is finally determined to be invalid, void or unenforceable by any court or other Governmental Entity having jurisdiction, such determination will not invalidate, void or make unenforceable any other provision, agreement or covenant of this Agreement.
      10.7 Rules of Interpretation.  This Agreement, unless a clear contrary intention appears, will be construed and interpreted as follows: (a) the singular number includes the plural number and vice versa; (b) reference to any Person includes such Person's successors and assigns but, in the case of a Party, only if such successors and assigns are permitted by this Agreement, and reference to a Person in a particular capacity excludes such Person in any other capacity or individually; (c) reference to any agreement (including this Agreement), document, instrument or tariff means such agreement, document, instrument or tariff as amended or modified and in effect from time to time m accordance with the terms thereof and, if applicable, the terms hereof; (d) reference to any Law means such Law as amended, modified, codified or reenacted, in whole or in part, and in effect from time to time, including, if applicable, rules and regulations promulgated thereunder; (e) unless expressly stated otherwise, reference to any Article or Section means such Article or Section of this Agreement, as the case may be; (f) "hereunder," "hereof," "herein," "hereto" and words of similar import will be deemed references to this Agreement as a whole and not to any particular Article, Section or other provision hereof or thereof; (g) "including" (and with correlative meaning "include") means including without limiting the generality of any description preceding such term; and (h) the Schedule to this Agreement is hereby incorporated and made a part hereof as if set forth in full herein and is an integral part of this Agreement.
      10.8 Entire Agreement.  This Agreement constitutes the entire agreement between the Parties with reference to the subject matter hereof, and supersedes all prior and contemporaneous understandings or agreements, oral or written, between the Parties with respect to the subject matter of this Agreement.  Notwithstanding the foregoing, the Parties acknowledge that certain matters related to the arrangement contemplated by, and the terms and conditions of, this Agreement may be discussed or otherwise addressed by the Coordination Committee (as defined in the System Coordination Agreement), as contemplated by the System Coordination Agreement.  Nothing in this Agreement is intended to modify, supersede, or otherwise alter any other agreements between the Parties.
      10.9 No Third Party Beneficiaries.  This Agreement is not intended to and does not create rights, remedies, or benefits of any character whatsoever in favor of any Person other than the Parties, and the obligations herein assumed are solely for the use end benefit of the Parties, their successors in interest and, where permitted, their assigns.
      10.10 Amendment.  The Parties may by mutual agreement amend this Agreement by a written instrument duly executed by the Parties.  Such amendment will become effective and a part of this Agreement upon satisfaction of applicable Law.
      10.11 No Dedication of Facilities.  Nothing in this Agreement will be construed as constituting the dedication of (a) NV Energy's electric system or any portion thereof to the public in California or to CalPeco, or (b) CalPeco's electric system or any portion thereof to the public in Nevada or to NV Energy. 
      10.12 Counterparts.  This Agreement may be executed in multiple counterparts (each of which will be deemed an original, but all of which together will constitute one and the same instrument), and may be delivered by facsimile or email transmission.
      10.13 Forward Contracts.  The Parties acknowledge and agree that all transactions under this Agreement are forward contracts and that the Parties are forward contract merchants, as those terms are used in the United States Bankruptcy Code.
      10.14 Change in Law.
            (a) If a Party becomes aware that any Governmental Entity having jurisdiction over the transactions contemplated hereby proposes a change in Law that would materially affect the performance of either Party's obligations under this Agreement, such Party will promptly provide notice to the other Party respecting the same.  The Parties will, within 15 days following receipt of written notice requesting a meeting to discuss the proposed change in Law, meet to discuss in good faith the implications of the proposed change in Law on the arrangement contemplated by this Agreement.  Upon the proposed changes achieving a Change in Law Enactment Date, the Parties will make commercially reasonable efforts to amend this Agreement (effective as of the effective date of the change in Law) to preserve the benefits and bargains initially agreed to in this Agreement.  For the avoidance of doubt, effectiveness of legislation or regulations that become Law after the date hereof attributable to carbon, greenhouse gases, or climate change may constitute a change in Law under this Section 10.14.
            (b) If (x) the Parties agree that the financial implications of any such change in Law under this Agreement will not, individually or in the aggregate during the next four years, be more than Two Hundred Thousand U.S. dollars ($200,000.00), or the Parties otherwise agree (regardless of whether the financial implications of any such change exceed Two Hundred Thousand U.S.  dollars ($200,000.00)) to subject the matter to the special dispute resolution provisions set forth below, and (y) the Parties cannot reach agreement on an amendment prior to the Change in Law Enactment Date, then the Parties will subject the matter for resolution in accordance with the provisions of Sections 9.2, 9.3, and 9.4 of this Agreement, provided, that the following special dispute resolution provisions will apply:
                  (i) within 10 business days following the Change in Law Enactment Date, the Parties will confer in an effort to agree upon an independent expert qualified to resolve the dispute.  If the Parties are unable to agree upon the appointment of such an independent expert, then at the end of such 10 business days each Party will, within 10 business days thereafter, notify the other Party in writing of its designation of three proposed independent experts.  Each Party will within five business days strike two of the independent experts proposed by the other Party.  The remaining two independent experts will, within five business days, select one of them to hear the dispute; provided, that if one of the Parties still objects to the dispute being heard by the selected independent expert, the two proposed independent experts will select a third independent expert (which may be one of the independent experts proposed by the Parties initially) and such third independent expert will hear the dispute;
                  (ii) the commercial objective of the independent expert will be to restore the Parties to positions that preserve the benefits and bargains initially agreed to by the Parties in this Agreement;
                  (iii) no Party will be allowed to conduct discovery on the other Party;
                  (iv) the decision of the independent expert will be based on written submissions by the Parties (due within 60 days following his or her selection pursuant to clause (i) above) and whatever oral presentations or arguments that the independent expert may request or permit; provided, that a Party will be entitled to request that oral presentations or arguments be permitted; and
                  (v) the independent expert will be instructed to issue a decision within 30 days after conducting whatever proceedings the independent expert believes are reasonably necessary and appropriate to render a decision, and in any event within 90 days following the independent expert's selection pursuant to clause (i) above.
            (c) If the Parties are unable to amend this Agreement to preserve the benefits and bargains initially agreed to in this Agreement in accordance with the procedures set forth in Section 10.14(a) and the issue does not qualify for the special dispute resolution provisions set forth in Section 10.14(b), then either Party may initiate the provisions of Article IX to resolve the dispute.
Remainder of Page Intentionally Left Blank


      IN WITNESS WHEREOF, the Parties have executed this Agreement effective as of the date first set forth above.
SIERRA PACIFIC POWER COMPANY
d/b/a NV Energy
By:							
Name:	William D. Rogers
Title:	Corporate Senior Vice President, Chief Financial Officer and Treasurer

By:							
Name:	Jeffrey L. Ceccarelli
Title:	President

LIBERTY UTILITIES (CALPECO ELECTRIC), LLC
By:	California Pacific Utility Ventures, LLC,
	Its Sole Member

By:						
Name:	Ian E. Robertson
Title:	Authorized Representative

By:						
Name:	Nancy G. Tower
Title:	Authorized Representative


      
      
      
      
      
      
      
      
      
      [Signature Page to Distribution Capacity Agreement]
SCHEDULE A
Methodology for Calculating Distribution Capacity Charge
Background
      The methodology herein is designed to allocate to NV Energy a fair portion of the capacity costs of the California electric distribution assets that CalPeco uses to provide service to NV Energy under the Agreement.  Conceptually, the methodology involves (i) identifying the costs of the California distribution facilities that CalPeco uses to serve NV Energy; (ii) determining the percentage to which those facilities will be used to serve NV Energy; and (iii) allocating costs to NV Energy by multiplying the numerical results of the preceding two factors.  For simplification, the methodology utilizes forecasts based on historical usage patterns, and uses the total capacity of the distribution circuits used to deliver power to NV Energy as a proxy for the total capacity of all of the California electric distribution facilities used to provide service to NV Energy under this Agreement.
Part A.  Definitions
      For purposes of this Schedule A, the following defined terms have the meanings ascribed below:
      "Distribution Capacity Assets" means the electric distribution assets of the Business (as defined in the Asset Purchase Agreement) that CalPeco uses to provide distribution capacity service to NV Energy under the Agreement;
      "Distribution Capacity Assets Net Book Value" means the net book value of the Distribution Capacity Assets;
      "Distribution Capacity Assets Ratio" means the ratio (expressed as a percentage) obtained by dividing the Distribution Capacity Asset Net Book Value by the Total Net Book Value.  The Distribution Capacity Asset Ratio indicates the amount (expressed as a percentage) of the electric distribution assets of the Business used by CalPeco to provide distribution capacity services to NV Energy under the Agreement;
      "Distribution Capacity Assets Revenue Requirement" means the dollar amount determined pursuant to the allocation described in item 4 of Part B below;
      "NV Energy % of Distribution Capacity Assets" means, as of any determination date, the ratio (expressed as a percentage) obtained by dividing (a) the forecast amount of NV Energy's coincident peak demand, measured in MW, for the Incline Village/Stateline/Verdi Customers by (b) the total capacity, measured in MW, available on the distribution circuits on which the Delivery Points are located; and
      "Total Net Book Value" means the net book value of electric distribution assets of the Business used for ratemaking purposes, as such amount was authorized by the CPUC in the most recent general rate case of the Business.  For example, assuming (a) the "black box" settlement reached by NV Energy in Docket A.08-08-004 is approved by the CPUC prior to December 31, 2009, (b) the net book value amount authorized for ratemaking purposes by the CPUC in such proceeding equals $96,523,000, and (c) a measurement date of December 31, 2009, the Total Net Book Value would be $96,523,000 (i.e., the amount authorized for ratemaking purposes by the CPUC in the most recent general case settlement of the Business prior to December 31, 2009).
Part B.  Calculation Methodology
1. Identify the Distribution Capacity Assets.  For purposes of illustration, if only one transformer at a substation housing five transformers is used to deliver power from a Point of Receipt to a Delivery Point, then only the one transformer used to deliver power is a Distribution Capacity Asset, whereas the other four transformers at the substation are not Distribution Capacity Assets.
2. Calculate the Distribution Capacity Assets Net Book Value.  The Distribution Capacity Assets Net Book Value will be calculated by aggregating the net book value of all components comprising Distribution Capacity Assets.
3. Calculate the Distribution Capacity Assets Ratio.
4. Allocate a portion of the distribution revenue requirement to the Distribution Capacity Assets.  This allocation will be made by multiplying the Distribution Capacity Assets Ratio by the distribution revenue requirement of the Business.  For purposes of this calculation, the distribution revenue requirement of the Business will be determined in accordance with the procedures historically utilized by the CPUC prior to the Closing, provided, that:
(a)	prior to the date that the rates established in the first general rate case after the Closing for the Business are authorized by the CPUC to be effective, the distribution revenue requirement of the Business will be calculated based upon a hypothetical capital structure of 50% debt and 50% equity, an assumed 10.7% return on equity, and CalPeco's actual cost of debt; and
(b)	thereafter, the distribution revenue requirement of the Business will be calculated based upon the actual capital structure (i.e., percentage of equity and debt, return on equity, and cost of debt) approved by the CPUC for CalPeco in the most recent general rate case.
5. Calculate the NV Energy % of Distribution Capacity Assets.  With respect to forecast amounts contemplated by clause (a) of the definition of NV Energy % of Distribution Capacity Assets, forecast amounts will be prepared based upon the historical average monthly coincident peak load, measured in MW, at the Delivery Points.  For purposes of calculating the initial Distribution Capacity Charge payable by NV Energy following the Effective Date, the Parties agree that (a) 21.6 MW1 is the forecast amount of NV Energy's coincident peak demand for the Incline Village/Stateline/Verdi Customers, and (b) 84.2 MW of total capacity is available on the distribution circuits on which the Delivery Points are located.
6. Calculate the annual Distribution Capacity Charge.  The annual amount of the Distribution Capacity Charge will be calculated by multiplying (a) the dollar amount of the distribution revenue requirement allocated to the Distribution Capacity Assets under item 4 above, by (b) the NV Energy % of Distribution Capacity Assets.  The dollar amount calculated under this item 6 represents the fixed annual amount of the Distribution Capacity Charge payable by NV Energy under the Agreement.
7. Calculate the monthly Distribution Capacity Charge.  The monthly amount of the Distribution Capacity Charge will be calculated by dividing the annual Distribution Capacity Charge (calculated under item 6 above) by 12.  The dollar amount calculated under this item 6 represents the fixed monthly amount of the Distribution Capacity Charge payable by NV Energy under the Agreement.


SCHEDULE B
Energy Allocation Protocols
      With respect to any month during which during which NV Energy receives energy from the Kings Beach Generation Facility pursuant to the Emergency Backup Service Agreement, the protocols set forth in this Schedule will be used to determine the amount of energy delivered into Nevada from California by CalPeco under this Agreement for the purpose of calculating the amount of energy losses in Section 2.3.  In the event the Emergency Backup Service Agreement is terminated prior to the Final System Separation Agreement, and NV Energy will continue to receive energy from the Kings Beach Generation Facility under another agreement between the Parties, the Parties, acting in good faith, will work together to appropriately revise the protocols set forth herein.
      For purposes of this Schedule, "Kings Beach Energy" refers to energy generated by the Kings Beach Generation Facility.
Protocol No. 1 - Allocate Kings Beach Energy under the Emergency Backup Service Agreement
      The Parties will allocate Kings Beach Energy in accordance with, and pursuant to, the procedures set forth on Schedule D to the Emergency Backup Service Agreement.
Protocol No. 2 - Determine the Amount of Energy Delivered by CalPeco to NV Energy under the Distribution Capacity Agreement
      If NV Energy is not allocated any Kings Beach Energy pursuant to Protocol No.  1, then the amount of energy delivered by CalPeco to NV Energy under this Agreement during such month will be the aggregate amount of energy delivered by CalPeco to the Delivery Points in such month.
      If NV Energy is allocated all of the Kings Beach Energy pursuant to Protocol No.  1, then the amount of energy delivered by CalPeco to NV Energy under this Agreement during such month will be determined in accordance with the following formula: x = y - z, where:
 "x" equals the aggregate amount of energy delivered by CalPeco to NV Energy under this Agreement;
 "y" equals the aggregate amount of energy delivered by CalPeco to NV Energy at the Delivery Points for such month; and
 "z" equals the aggregate amount of energy allocated to NV Energy pursuant to Protocol No.  1 for such month.
Example:
 Assumptions: (a) CalPeco delivers 100 MWhs of energy to the Delivery Points in a month, and (b) NV Energy is allocated 12 MWhs of energy pursuant to Protocol No.  1.
 CalPeco will be determined to have delivered 88 MWhs (100 MWhs minus 12 MWhs) to NV Energy under this Agreement.  In other words, "x" equals 88 MWhs, "y" equals 100 MWhs, and "z" equals 12 MWhs.
 Based on the foregoing, energy losses under Section 2.3(b) of this Agreement will be determined by multiplying the Loss Adjustment Factor by 88 MWhs.
      If NV Energy is allocated part, but less than all, of the Kings Beach Energy pursuant to Protocol No.  1, then the amount of energy delivered by CalPeco to NV Energy under this Agreement during such month will be determined in accordance with the following formula: x = y - z, where:
 "x" equals the aggregate amount of energy delivered by CalPeco to NV Energy under this Agreement;
 "y" equals the aggregate amount of energy delivered by CalPeco to NV Energy at the Delivery Points for such month; and
 "z" equals the product of (i) the amount of energy allocated to NV Energy pursuant to Protocol No.  1 for such month, and (ii) the applicable "Allocation Percentage" for such month in the table immediately below.
Applicable Month
Allocation Percentage*
January
28%
February
26%
March
33%
April
36%
May
35%
June
33%
July
44%
August
47%
September
40%
October
44%
November
28%
December
31%
*	The percentages in this column are preliminary estimates.  The final percentages to be included in this column (and to be used by the Parties following the Closing) will be determined based on a study to be performed and completed by NV Energy prior to the Closing.
      Example:
 Assumptions: (a) CalPeco delivers 100 MWhs of energy to the Delivery Points in June, and (b) NV Energy is allocated 6 MWhs of energy pursuant to Protocol No.  1.
 CalPeco will be determined to have delivered 98.02 MWhs (100 MWhs minus 1.98 MWhs) to NV Energy under this Agreement.  In other words, "x" equals 98.02 MWhs, "y" equals 100 MWhs, and "z" equals 1.98 MWhs (i.e., 33% of 6 MWhs).
 Based on the foregoing, June energy losses under Section 2.3(b) of this Agreement will be determined by multiplying the Loss Adjustment Factor by 98.02 MWhs.
      
1 This amount is an average of adjusted historical information for the 7-month period of November 2008 through May 2009.  Prior to the Closing, NV Energy will provide an updated forecast amount based on the most recent data available (and which will be used to calculate the initial Distribution Capacity Charge payable by NV Energy following the Effective Date).  Furthermore, because perimeter metering will be required to accurately determine NV Energy's coincident peak demand for the Incline Village/Stateline/Verdi Customers, the Parties will recalculate this amount after compiling 12 months of data through perimeter metering after the Closing.
---------------

------------------------------------------------------------

---------------

------------------------------------------------------------

DWT 22321986v1 0089731-000002

DWT 22321986v1 0089731-000002

DWT 22321986v1 0089731-000002

	19
DWT 22321986v1 0089731-000002





DWT 22321986v1 0089731-000002

DWT 22321986v1 0089731-000002



DWT 22321986v1 0089731-000002</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>17</filing_id>
      <filing_title>Notice of Succession</filing_title>
      <filing_type>10</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2013-08-09</current_effective_date>
      <ferc_order_date>2013-09-06</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
    <record_data>
      <record_id>1050</record_id>
      <option_code>A</option_code>
      <record_title>CalPeco FERC Electric Rate Schedule No. 2 -- BCA</record_title>
      <record_content_desc>Rate Schedule No. 2</record_content_desc>
      <record_version_num>2.0.0</record_version_num>
      <record_narrative_name>CalPeco FERC Electric Rate Schedule No. 2 -- BCA</record_narrative_name>
      <collation_value>2000</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2013-08-09</proposed_effective_date>
      <priority_order>500</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>Liberty Utilities (CalPeco Electric) LLC
FERC FPA Electric Tariff

FERC Electric Rate Schedule No. 2

Borderline Customer Agreement

Effective Date: August 9, 2013


BORDERLINE CUSTOMER AGREEMENT
      THIS BORDERLINE CUSTOMER AGREEMENT (this "Agreement" is entered into as of the 8th day of October, 2009, by and between SIERRA PACIFIC POWER COMPANY, a Nevada corporation d/b/a NV ENERGY ("NV Energy"'), and Liberty Utilities (CalPeco Electric) LLC, a California limited liability company ("CalPeco").  NV Energy and CalPeco are referred to herein collectively as the "Parties" and each individually, a "Party."
      WHEREAS, NV Energy owns and operates an integrated electric transmission and distribution system located in California and Nevada, and provides electric distribution service to certain retail electric customers located in close proximity to the State Boundary (each such retail electric customer, as described more fully in Schedule A attached hereto, is individually referred to in this Agreement as a "Borderline Customer" and, collectively, "Borderline Customers");
      WHEREAS, the Parties have entered into an Asset Purchase Agreement dated April 22, 2009 (the "Asset Purchase Agreement"), pursuant to which CalPeco has agreed to acquire from NV Energy certain electric distribution and generation assets located in California;
      WHEREAS, upon completion of the transactions contemplated by the Asset Purchase Agreement, CalPeco will own and operate an electric distribution system located in California, and NV Energy will own and operate electric transmission facilities in California and electric distribution and transmission systems in Nevada, certain of which are interconnected with CalPeco's system; and
      WHEREAS, in order to minimize certain potential economic and operational inefficiencies associated with operating their respective systems independently after the Closing, the Parties desire to enter into this Agreement to establish an arrangement whereby (a) a Party will deliver and sell energy to the other Party at one or more Delivery Points on the State Boundary, except as otherwise described herein, and (b) the Receiving Party will purchase and resell such energy to Borderline Customers located within the Receiving Party's franchised service territory within the proximity of the Delivery Point, in each case, upon the terms and conditions set forth in this Agreement;
      NOW THEREFORE, in consideration of the covenants, representations, warranties, and agreements hereinafter set forth, and intending to be legally bound hereby, the Parties agree as follows:
ARTICLE I 
DEFINITIONS
      1.1 Definitions.  As used in this Agreement, the following terms have the meaning specified below:
      "Borderline Customer" has the meaning set forth in the Recitals.  Borderline Customers do not include any Incline Village/Stateline/Verdi Customers (as defined in the Distribution Capacity Agreement).
      "CalPeco Rate" means the applicable filed tariff rate that CalPeco has been authorized by the CPUC to charge retail customers within its franchised service territory.
      "Change in Law Enactment Date" means the date upon which a Governmental Entity changes the Law, regardless of whether such change is effective retroactively, immediately, or prospectively.
      "Closing" has the meaning ascribed thereto in the Asset Purchase Agreement.
      "CPUC" means the California Public Utilities Commission or any successor organization.
      "Delivery Points" means the points of delivery at which energy will be supplied by a Supplying Party to the Receiving Party under this Agreement.
      "Distribution Capacity Agreement" means the Distribution Capacity Agreement dated as of October 8, 2009, by and between NV Energy and CalPeco.
      "Effective Date" means the date upon which the Closing occurs.
      "Energy Charge" means the product of the applicable Loss Adjustment Factor multiplied by either (a) during the period in which the Power Purchase Agreement remains in force and effect, an amount per kilowatt hour equal to the then-applicable rate being paid by CalPeco for energy and capacity supplied by NV Energy under the Power Purchase Agreement, or (b) during all other periods, the amount per kilowatt hour calculated pursuant to Section 2.2(b) of this Agreement.  For clarification, the amount per kilowatt hour described in clause (a) hereof is intended to equal the "all-in" rate per kilowatt hour (including the Demand Charge, the Transmission Charge, the Energy Charge, the Energy Charge Adjustment, and the Distribution Charge, each as defined in the Power Purchase Agreement) payable by CalPeco for energy and capacity under the Power Purchase Agreement, the components of which are described in and calculated pursuant to the Power Purchase Agreement.
      "FERC" means the Federal Energy Regulatory Commission or any successor organization.
      "Good Utility Practice" means any practices, methods, standards, guides, or acts, as applicable, that (a) are generally accepted in the North American electric industry during the relevant time period in the regulated electric utility industry, (b) are commonly used in prudent utility engineering, construction, project management, and operations, or (c) would be expected if electric distribution and transmission systems are to be conducted at a reasonable cost in a manner consistent with Laws applicable to such system and the objectives of reliability, safety, environmental protection, economy, and expediency.  Good Utility Practice includes practices, methods, or acts generally accepted in the North American electric industry, and is not limited to the optimum practices, methods, or acts to the exclusion of all others.
      "Governmental Entity" means the United States of America and any other federal, state, local, or foreign governmental or regulatory authority, department, agency, commission, body, court, or other governmental entity.
      "Law" means any statutes, regulations, rules, ordinances, codes, and similar acts or promulgations of any Governmental Entity, and any order, judgment, writ, injunction, decree, directive, or award of a court, administrative judge, or other Governmental Entity acting in an adjudicative or regulatory capacity, or of an arbitrator, in each case, with jurisdiction over the subject matter.
      "Loss Adjustment Factor" means, with respect to any Delivery Point, a number agreed upon by the Parties for such Delivery Point representing the Parties' best estimate of the electrical energy losses arising in respect of energy delivered from a Supplying Party to a Receiving Party from such Delivery Point, as such number may be revised from time to time (as agreed by the Parties, acting reasonably) to accurately reflect such electrical losses.  The initial Loss Adjustment Factor applicable to each Delivery Point is set forth on Schedule B attached hereto.
      "NV Energy Rate" means the applicable filed tariff rate that NV Energy has been authorized by the PUCN to charge retail customers within its franchised service territory.
      "Power Purchase Agreement" means the Service Agreement dated April 22, 2009, between NV Energy and CalPeco, as amended by Amendment No.  1 to Service Agreement dated October 8, 2009, pursuant to which NV Energy has agreed to sell CalPeco its full requirements of energy and capacity following the Closing, upon the terms and conditions set forth therein.
      "PUC" means the CPUC and/or the PUCN, as the context may require.
      "PUCN" means the Public Utilities Commission of Nevada or any successor organization.
      "Receiving Party" means any Party receiving electricity from the other Party.
      "Regional Transmission Organization" means a FERC-approved Regional Transmission Organization within the meaning of FERC Order 2000, 65 FR 809 (January 6, 2000).
      "Supplying Party" means any Party supplying electricity to the other Party.
      "State Boundary" means any point on the California-Nevada state boundary.
      "System Coordination Agreement" means the System Coordination Agreement dated as of October 8, 2009, by and between NV Energy and CalPeco.
      "Uncontrollable Force" means any event or circumstance that (a) prevents a Party from performing its obligations under this Agreement, (b) is not within the reasonable control of the claiming Party, and (c) cannot be avoided or overcome by the exercise of due diligence.  Uncontrollable Force may include, but is not restricted to, flood, drought, earthquake, storm, fire, lightning, epidemic, war, riot, act of terrorism, civil disturbance or disobedience, labor dispute, labor or material shortage, outage of generation, transmission or distribution facilities, sabotage, restraint by court order or public authority, and action or inaction of, or failure or inability to obtain the necessary authorizations or approvals from, any Governmental Entity.
      1.2 In addition, each of the following terms has the meaning specified in the Section of this Agreement set forth opposite such term:
Term
Reference
Adjusted Rate
Section 2.2(b)
Agreement
Introductory Paragraph
Arbitration Rules
Section 9.2
Asset Purchase Agreement
Recitals
CalPeco
Introductory Paragraph
Event of Default
Section 4.2(c)
Notice of Dispute
Section 9.1
NV Energy
Introductory Paragraph
Owed Party
Section 7.2
Owing Party
Section 7.2
Party; Parties
Introductory Paragraph
      
ARTICLE II 
ENERGY SUPPLY; RATES; METERING; ACCESS
      2.1 Energy Supply.
            (a) CalPeco will deliver and sell energy to NV Energy at the State Boundary (except as otherwise provided herein) for the purpose of enabling NV Energy to resell such energy to Borderline Customers located within NV Energy's franchised service territory, and NV Energy will deliver and sell energy to CalPeco at the State Boundary (except as otherwise provided herein) for the purpose of enabling CalPeco to resell such energy to Borderline Customers within CalPeco's franchised service territory, as more fully described in this Agreement.  With respect to each Borderline Customer, the initial Delivery Points are set forth on Schedule A.
            (b) It is understood that, from time to time following the Effective Date, a Receiving Party may desire to add one or more retail electric customers to, or remove one or more retail electric customers from, Schedule A.
                  (i) If from time to time after the Effective Date, a Receiving Party reasonably believes that one or more retail electric customers should be treated as a Borderline Customer hereunder, such Receiving Party will provide written notice (including a proposed Delivery Point for each such additional retail electric customer) to the Supplying Party.  Upon receipt of such written notice, the Parties will cooperate and work in good faith to determine whether and when to supplement Schedule A to add any such additional retail electric customer.  Nothing in this provision will obligate a Supplying Party to agree to supplement Schedule A to add any such additional retail electric customer or to add any such additional retail electric customer at the proposed Delivery Point; instead, the Supplying Party will determine, in its sole discretion, and in a commercially reasonable amount of time whether it is commercially reasonable to add to Schedule A any such retail electric customer at the proposed Delivery Point.  Upon the Supplying Party providing notice that it agrees that any such additional retail electric customer may be added at a Delivery Point, the Receiving Party will prepare and provide the Supplying Party a revised version of Schedule A and service to such additional retail electric customer may commence immediately.
                  (ii) If a Receiving Party ceases to provide retail service to a Borderline Customer, the Receiving Party will provide written notice thereof to the Supplying Party.  Upon receipt of the written notice, Schedule A will be modified to remove such Borderline Customer therefrom, effective as of the date of such written notice.
      2.2 Energy Rates.
            (a) The aggregate amount owed by a Receiving Party for energy received from a Supplying Party during any billing period under this Agreement will be calculated by multiplying (i) the amount of energy consumed by all Borderline Customers, as measured pursuant to Section 2.3, and (ii) the Energy Charge.
            (b) If the Power Purchase Agreement has expired or been terminated, the Parties will negotiate a new amount per kilowatt hour (the "Adjusted Rate") for energy supplied by a Supplying Party to a Receiving Party under this Agreement.  The Parties, acting in good faith, will use their commercially reasonable efforts to negotiate the Adjusted Rate prior to the expiration or termination of the Power Purchase Agreement.  If the Parties are unable to agree upon the Adjusted Rate within 30 days following the expiration or termination of the Power Purchase Agreement, the Adjusted Rate will, unless and until the Parties agree upon an alternative Adjusted Rate, be calculated, effective as of the first day following the date upon which the Power Purchase Agreement expires or terminates, in accordance with the following provisions:
                  (i) if CalPeco is the Supplying Party, the rate to be charged to NV Energy by CalPeco for energy supplied under this Agreement will be the applicable CalPeco Rate; if NV Energy is the Supplying Party, the rate to be charged to CalPeco by NV Energy for energy supplied under this Agreement will be the applicable NV Energy Rate.  It is understood that the applicable PUC-approved tariff to be charged by a Supplying Party under this paragraph will be determined based upon the retail customer classification of each Borderline Customer to whom energy supplied hereunder is to be resold by the Receiving Party.  For purposes of determining the applicable retail classification, a Borderline Customer will be assumed to be located in the franchised service territory of the Supplying Party; and
                  (ii) to the extent differences exist between the Parties' PUC-approved classifications of retail electric customers, the Parties will work together in good faith to ensure that the applicable tariff charged by the Supplying Party to the Receiving Party under this Section 2.2(b) is the most appropriate tariff rate to be charged by the Supplying Party.
            (c) Without limiting Section 3.2, any Adjusted Rate will, if required by Law, become effective only upon submission to the FERC of a filing of the rate adjustment and FERC's acceptance thereof.
      2.3 Metering.
            (a) Each Party acknowledges that (i) the interchange metering equipment necessary to measure energy interchanged at the State Boundary (similar to the interchange metering equipment used to measure energy supplied under the Power Purchase Agreement) has not been installed and, consequently, energy supplied under this Agreement cannot be measured by interchange metering, and (ii) based on the anticipated costs of installing interchange metering equipment, the installation of interchange metering equipment presently appears to be uneconomical.  As a result, the existing meters of Borderline Customers will, for the foreseeable future, be used to calculate the amount of energy supplied under this Agreement, as set forth in clause (b) below.
            (b) Billings for energy supplied by the Parties hereunder will be calculated based upon the sum of the metered consumption of the Receiving Party's Borderline Customers.  In determining these billings, (i) CalPeco will, on a monthly basis, read the meters of Borderline Customers located in its franchised service territory and report (as soon as commercially practicable) the aggregate amount of such metered consumption to NV Energy and provide NV Energy the individual customer bills used to calculate such aggregate amount, in which case NV Energy will be deemed to have supplied such aggregate amount of energy to CalPeco hereunder, and (ii) NV Energy will, on a monthly basis, read the meters of Borderline Customers located in its franchised service territory and report (as soon as commercially practicable) the aggregate amount of such metered consumption to CalPeco and provide CalPeco the individual customer bills used to calculate such aggregate amount, in which case CalPeco will be deemed to have supplied such aggregate amount of energy to NV Energy hereunder.  Each Party will maintain the confidentiality of the individual customer billing information it receives and will use such customer information strictly for purposes of being able to audit and otherwise monitor the other Party's aggregation of the amount of energy supplied.
      2.4 Access.  A Receiving Party will permit the Supplying Party and its employees, agents, representatives, and subcontractors reasonable access, including ingress and egress, to facilities owned or operated by the Receiving Party, at all times as may be reasonably necessary to inspect the metering equipment used to measure and determine the amount of energy supplied by the Supplying Party under this Agreement, subject to obtaining to the extent necessary the approval of the Borderline Customer and to the provision of adequate notice and the usual and customary safety and security restrictions developed, observed and enforced in the ordinary course at such facilities.  Absent extraordinary circumstances a Receiving Party may propose an alternative time to permit the Supplying Party access in accordance with this Section 2.4.  The period of time for which the Supplying Party will have access will be limited to time necessary for it to inspect the metering equipment.
      2.5 Delivery Points.
            (a) Prior to the Effective Date, NV Energy will have the right to (i) add or remove Borderline Customers to Schedule A.  or otherwise modify information relating to such Borderline Customers, and (ii) add, remove, or modify the Delivery Points set forth on Schedule A.  Any such addition, removal, or modification will be automatically effective prior to the Effective Date, without further action by the Parties, upon CalPeco's receipt of written notice from NV Energy of such addition, removal, or modification.
            (b) After the Effective Date, each Party may from time to time request that one or more different or additional points of interconnection become Delivery Points for existing Borderline Customers listed on Schedule A.  Subject to the other Party's agreement (such agreement not to be unreasonably withheld, conditioned or delayed), each such different or additional point of interconnection will become a Delivery Point upon the requesting Party's receipt of the other Party's agreement to such request.
            (c) Without limiting Section 3.2, the addition of or change in a Delivery Point for a Borderline Customer will, if required by Law, become effective only upon submission to the FERC of a filing detailing the change and FERC's acceptance thereof.
ARTICLE III 
GENERAL UNDERTAKINGS
      3.1 Regulation.
            (a) Each Party will remain responsible for providing electric distribution service to Borderline Customers located within its franchised service territory.  Nothing in this Agreement terminates, amends, diminishes or otherwise alters a Receiving Party's statutory obligations to provide electric distribution service to Borderline Customers located in such Party's franchised service territory, in accordance with the terms and conditions of service authorized by the applicable PUC.  A Receiving Party's obligation to provide electric distribution service within its franchised service territory will remain subject to the laws of its jurisdiction and the regulation by its PUC.
            (b) Nothing in this Agreement is intended to subject NV Energy to the jurisdiction of the CPUC, and nothing in this Agreement is intended to subject CalPeco to the jurisdiction of the PUCN.
      3.2 Compliance with Law.  The obligations of each Party hereunder are subject to Law, including the receipt of any approvals from Governmental Entities required to amend the terms and conditions of this Agreement (including, as applicable, the addition of any Borderline Customers, the change of a Delivery Point, and the effectiveness of any Adjusted Rate).  Each Party will operate its electric system in compliance with Law.
      3.3	System Operation and Maintenance.  Each Party will operate and maintain its electric system in accordance with Good Utility Practice.  Subject to the foregoing, a Supplying Party will use reasonable diligence in the operation and maintenance of all facilities necessary to supply energy to the Receiving Party for the purposes contemplated by this Agreement and a Receiving Party will use reasonable diligence in the operation and maintenance of all facilities necessary to receive energy from the Supplying Party for the purposes contemplated by this Agreement.
ARTICLE IV 
TERM; TERMINATION
      4.1 Term.  The initial term of this Agreement will commence on the Effective Date and will continue until the fifth anniversary of the Effective Date.  Unless otherwise terminated pursuant to Section 4.2, this Agreement will renew automatically for consecutive five-year terms unless and until both Parties agree not to renew this Agreement.
      4.2 Termination; Events of Default; Remedies.
            (a) This Agreement will terminate automatically upon any termination of the Asset Purchase Agreement at any time prior to the Closing.  Following the Effective Date, this Agreement will, subject to earlier termination pursuant to this Section 4.2 below, terminate at 11:59 p.m.  Pacific time on the last day of the initial term or any renewal term hereof, as applicable.
            (b) Following the occurrence of an Event of Default, the non-defaulting Party will have the right, but not the obligation, to:
                  (i) extinguish its obligation to be the Supplying Party for any Borderline Customer by written notice to the defaulting Party, which will include the date of the intended extinguishment of such obligation and the name and address of any Borderline Customer for whom such obligation is to be extinguished.  The extinguishment of a non-defaulting Party's supply obligation under this Section 4.2(b)(i) will in no way alter or limit the defaulting Party's obligations as a Supplying Party; and/or
                  (ii) cause the defaulting Party (at the sole cost and expense of the defaulting Party, notwithstanding any term of this Agreement or any other agreement between the Parties) to cause to be performed and provided all engineering, permitting, construction, equipment procurement, installation and other work and equipment required to separate the Parties' electric systems (x) to the extent necessary, in the reasonable opinion of the non-defaulting Party following consultation with the defaulting Party, to protect the non-defaulting Party against recurrence of the specific adverse effects that gave rise to the Event of Default, and (y) in a manner such that each Party's electric system remains operable in accordance with Good Utility Practice and such that the level of reliability remains substantially the same; provided, that:
                        A. with respect to an Event of Default arising under Section 4.2(c)(1), the separation rights of the non-defaulting Party under this Section 4.2(b) will relate to all (or, at the sole option of the non-defaulting Party, any) portions of the Parties' electric systems at which the Supplying Party delivers energy to the Receiving Party under this Agreement; and
                        B. the non-defaulting Party will (i) use its commercially reasonable efforts to cause such amounts invested in its electric system by the defaulting Party to be included in the non-defaulting Party's rate base, and (ii) to the extent any such amounts are included in the non-defaulting Party's rate base, reimburse the defaulting Party for such amounts.
      For the avoidance of doubt, but expressly subject to Section 4.2(d), the non-defaulting Party may also exercise any other rights or remedies available to it at law or in equity, subject to any limitations set forth herein.  The election by the non-defaulting Party to not exercise its remedies under this Section 4.2(b) will not constitute a waiver by such non-defaulting Party of its rights to exercise such remedies with respect to any subsequent breach by the defaulting Party.
            (c) Each of the following events constitutes an "Event of Default":
                  (i) a Party fails to pay the other Party all monies due to such Party in accordance with Article VII within 15 days following written notice by such Party of such failure by the other Party to make full payment; and
                  (ii) other than the default set forth in clause (i) above, a Party fails to discharge or perform any material duty or obligation under this Agreement, and such failure is not cured within 30 days after receipt of written notice from the other Party describing such failure, provided, however, that if such failure cannot be cured within such 30-day cure period despite diligent efforts to do so, the 30-day cure period will be extended by up to an additional number of days required to cure such failure provided that the obligated Party continues such diligent efforts and is able to remedy the failure within a reasonable period of time. For the avoidance of doubt, the failure or inability of a Party to perform a material duty or obligation under this Agreement will not constitute an Event of Default pursuant to this clause (ii) if such failure or inability to perform is excused under Section 8.1 and remains excused under Section 5.2 of this Agreement.
            (d) Notwithstanding any other provision herein to the contrary, no Party will, following the occurrence of an Event of Default resulting from a breach by the other Party, have the right to terminate this Agreement prior to the date upon which both Parties are capable of serving their respective Borderline Customers without the arrangements contemplated by this Agreement. The termination of this Agreement will, if required by Law, become effective only upon submission to the FERC of a filing requesting termination and FERC's acceptance thereof.
            (e) If this Agreement is terminated in accordance with the provisions hereof, each Party's obligation to supply energy to the other Party will cease. Notwithstanding the foregoing, this Agreement will continue in effect after termination to the extent necessary to permit the determination and enforcement of liability, payment and indemnification obligations arising from acts or events that occurred while this Agreement was in effect. The termination of this Agreement will not modify or amend any Party's rights or obligations under any other any agreement between the Parties, except as expressly set forth therein.
ARTICLE V 
TITLE; RISK OF LOSS: LIABILITY; INDEMNIFICATION
      5.1 Title; Risk of Loss; No Warranties. With respect to each Borderline Customer, title and risk of loss to energy supplied hereunder will pass from the Supplying Party to the Receiving Party at the Delivery Point for such Borderline Customer. A Supplying Party will be solely responsible for energy to be supplied prior to the passage of title at each such Delivery Point, and a Receiving Party will be solely responsible for energy supplied after the passage of title at each such Delivery Point. EACH PARTY HEREBY DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING ANY WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE WITH RESPECT TO ENERGY SUPPLIED UNDER THIS AGREEMENT.
      5.2 Liability; Indemnification. Each Party will indemnify the other Party and save it harmless from all losses, liabilities or claims, including reasonable attorneys' fees and court costs, from any and all persons arising from or out of claims of personal injury (including death) or property damage from the Party's performance (or non-performance) of its obligations hereunder, except to the extent that such losses, liabilities or claims were caused by the negligence or intentional acts of the other Party.
      5.3 Waiver of Consequential Damages. Notwithstanding any other provision of this Agreement, in no event will a Party be liable to the other Party, whether in contract, warranty, tort, negligence, strict liability, or otherwise, for special, indirect, incidental, consequential (including lost profits or revenues, business interruption damages and lost business opportunities), exemplary or punitive damages related to, arising out of, or resulting from performance or nonperformance of this Agreement. With respect to a Party, (a) the limitation on damages under this Section 5.3 will not apply with respect to claims brought by third persons for which such Party is entitled to indemnification under this Agreement, and (b) damages for which a Party may be liable to the other Party under another agreement will not be considered to be special, indirect, incidental, consequential, exemplary or punitive damages under this Agreement.
ARTICLE VI 
CONDITIONS PRECEDENT
      This Agreement is subject to and conditioned upon (a) the acceptance of filing of this Agreement, or the approval of this Agreement, by the FERC under Section 205 of the Federal Power Act; (b) CalPeco having received an order from the CPUC authorizing this Agreement or the transactions contemplated hereby, as applicable; (c)NV Energy having received orders from the PUCN authorizing this Agreement or the transactions contemplated hereby, as applicable; and (d) the occurrence of the Closing under the Asset Purchase Agreement. Without limiting the rights and obligations of the Parties under in the Asset Purchase Agreement, each Party will cooperate with each other, as the other will reasonably request, in connection with the procurement of the regulatory approvals described above.
ARTICLE VII 
BILLING; PAYMENT
      7.1 Billing.
            (a) A Supplying Party will submit to a Receiving Party, prior to the 30th day following the end of each calendar quarter, an invoice of the amount due for the preceding calendar quarter. Invoices will be sent to the address of the Receiving Party provided in Section 10.5. Each invoice will state the calendar quarter for which the invoice applies and describe the aggregate amount of energy supplied by the Supplying Party. The amount invoiced will be based upon the metered consumption of the Borderline Customers reported to the Supplying Party by the Receiving Party pursuant to Section 2.3 hereof.
            (b) The Parties will, within 90 days after the end of each calendar year, compare (i) the actual amount of energy provided by a Supplying Party to a Receiving Party during the prior calendar year, and (ii) the amount of energy billed by a Supplying Party to a Receiving Party during the prior calendar year. If a Supplying Party believes that an adjustment is required to ensure that all energy it supplied hereunder has been appropriately charged to the Receiving Party, such Supplying Party will provide notice to the Receiving Party (including supporting documentation) within 30 days following the end of such 90-day period. If a Party receives notice from the other Party that an adjustment is necessary or appropriate, the Parties will cooperate and work in good faith to determine the appropriateness of a requested adjustment. If the Parties are not able to reach an agreement on the requested adjustment within 90 days following the date of such notice, then either Party may submit the matter for resolution pursuant to Article IX, provided, that in proceeding under the provisions of Article IX, (i) the notice provided by a Supplying Party under this Section 7.1(b) will constitute a Notice of Dispute under Section 9.1 and (ii) the 30-day negotiation period contemplated by Section 9.1 will not apply, the result of which is that the Parties will initiate arbitration immediately pursuant to the remaining provisions of Article IX.
            (c) If interchange metering equipment is installed, the effect of which energy supplied under this Agreement can be measured in a manner consistent with the measurement of energy supplied under the Power Purchase Agreement, the Parties will cooperate and work together in good faith to revise the procedures described in Section 2.2 and this Section 7.1 to accommodate the use of such interchange metering equipment. In addition, if interchange metering equipment is installed after the Effective Date, the Parties will (i) modify Schedule A to remove the Delivery Points for Borderline Customers whose consumption can be measured by such interchange metering equipment, and (ii) assuming the Power Purchase Agreement is then in effect, revise Exhibit B to the Power Purchase Agreement to include such Delivery Points, the effect of which will be that energy otherwise supplied to CalPeco by NV Energy under this Agreement will be supplied to CalPeco by NV Energy under the Power Purchase Agreement.
      7.2 Payment.
            (a) For each billing period during the term of this Agreement, it is understood that each Party may be both a Supplying Party and a Receiving Party. For administrative convenience, the Parties will work together in good faith to determine a "net" amount owed by one Party under this Agreement for any billing period, based upon the amounts reflected in the invoices contemplated by Section 7.1.  The Party that owes a "net" amount (the "Owing Party") for such billing period will owe to the other Party (the "Owed Party") the "net" amount within 30 days following the date upon which the Parties agree upon the "net" amount payable for such billing period. All payments will be made in immediately available funds payable to the Owed Party, or by wire transfer to a bank named and account designated by the Owed Party. Payment of invoices by the Owing Party will not constitute a waiver of any rights or claims it may have under this Agreement.
            (b) Amounts, if any, that have not been paid by the Owing Party on or before the due date will be payable with interest calculated daily, at a rate equal to the applicable FERC approved interest rate, for the period beginning on the day after the due date and ending on the date of the payment.
ARTICLE VIII 
EXCUSE OF PERFORMANCE; LIMITATION ON EXCUSED PERFORMANCE
      8.1 Excuse of Performance. Subject to Section 8.2, no Party will be considered to be in breach of this Agreement to the extent that a failure or inability to perform its obligations under this Agreement (a) results from an action or inaction authorized or approved in writing by the other Party, (b) results from an action or inaction required by Law, (c) results from action or inaction, including actions taken to restore outages on generation, transmission and distribution facilities, taken in accordance with Good Utility Practice, (d) is due solely to an Uncontrollable Force, or (e) results from a breach of this Agreement by the other Party.
      8.2 Limitation on Excused Performance. Notwithstanding Section 8.1, no Party will be excused from performance in accordance with Section 8.1(a), (c), (d), or (e) or relieved of liability under this Agreement to the extent that such failure is due to (a) its own negligence, (b) its lack of sufficient monetary resources, or (c) removable or remediable causes that it fails to remove or remedy in a manner consistent with Good Utility Practice and within a commercially reasonable time period. Nothing contained in this Article VIII will be construed to require a Party to settle a strike or labor dispute in which it is involved on terms that it considers, in its sole discretion, to be unreasonable. Nothing contained in this Article VIII is intended or will be construed to abate, postpone or in any respect diminish any Party's obligations to make any payments due to the other Party pursuant to this Agreement.
      8.3 Notice and Action. Any Party rendered unable to fulfill any of its obligations by reason of Uncontrollable Force or otherwise will comply with the applicable notice provisions in this Agreement or otherwise give prompt notice of such fact to the other Party, and will exercise due diligence to remove such inability within a commercially reasonable period of time; provided, that the failure to provide prompt notice will not prevent a Party from being entitled to claim relief for failure to perform its obligations under this Article VIII. Each notice provided pursuant to this Section 8.3 will include an estimate of the amount of time that will be required to remove the inability to perform its obligations under this Agreement.
ARTICLE IX 
DISPUTE RESOLUTION
      9.1 Submission. In the event either Party has a dispute, or asserts a claim, that arises out of or in connection with this Agreement or its performance, except as provided under Section 10.14(b), such Party will provide the other Party with written notice of the dispute or claim ("Notice of Dispute"). Such dispute or claim will be referred to a designated senior representative of each Party for resolution on an informal basis as promptly as practicable after receipt of the Notice of Dispute by the other Party. In the event the designated representatives are unable to resolve the claim or dispute through unassisted or assisted negotiations within 30 days of the other Party's receipt of the Notice of Dispute, such claim or dispute will be submitted to arbitration and resolved in accordance with the arbitration procedures set forth below.
      9.2 Mandatory Arbitration Procedures. Any arbitration initiated under this Agreement will be conducted before a single neutral arbitrator appointed by the Parties. If the Parties fail to agree upon a single arbitrator within 30 days of the submission of the dispute to arbitration, each Party will choose one arbitrator who will sit on a three member arbitration panel. The two arbitrators so chosen will within 20 days select a third arbitrator to chair the arbitration panel. In either case, the arbitrators will be knowledgeable in electric utility matters, including electric generation and bulk power issues, and will not have any current or past substantial business or financial relationships with any Party (except prior arbitration). The arbitrator(s) will provide each Party an opportunity to be heard and, except as otherwise provided herein, will conduct the arbitration in accordance with the Commercial Arbitration Rules of the American Arbitration Association ("Arbitration Rules") and any applicable FERC regulations or RTO rules; provided, that in the event of a conflict between the Arbitration Rules and the terms of this Article IX, the terms of this Article IX will prevail. The arbitration will be held in Reno, Nevada.
      9.3 Arbitration Decisions. Unless otherwise agreed by the Parties, the arbitrator(s) will render a decision within 90 days of appointment and will notify the Parties in writing of such decision and the reasons therefor. The arbitrator(s) will be authorized only to interpret and apply the provisions of this Agreement and will have no power to modify or change any provision of this Agreement in any manner. The decision of the arbitrator(s) will be final and binding upon the Parties, and judgment on the award may be entered in any court having jurisdiction. The decision of the arbitrator(s) may be appealed solely on the grounds that the conduct of the arbitrator(s), or the decision itself, violated the standards set forth in the Federal Arbitration Act or the Administrative Dispute Resolution Act. If required by Law, the final decision of the arbitrator(s) must also be filed with FERC if it affects jurisdictional rates, terms and conditions of service, or the Parties' facilities.
      9.4 Costs. Each Party will be responsible for its own costs incurred during the arbitration process and for the following costs, if applicable: (a) the cost of the arbitrator chosen by the Party to sit on the three member panel and 50% of the cost of the third arbitrator chosen; or (b) 50% of the cost of the single arbitrator jointly chosen by the Parties; provided, that the arbitrator(s) will have the authority to award the Party prevailing in any arbitration its reasonable attorneys' fee and costs.
ARTICLE X 
MISCELLANEOUS
      10.1 Binding Effect. This Agreement and the rights and obligations hereof, will be binding upon and will inure to the benefit of the successors and assigns of the Parties hereto.
      10.2 Assignment.
            (a) This Agreement may be assigned by either Party only with the written consent of the other Party; provided, that either Party may assign this Agreement without the consent of the other Party to any Affiliate (as defined in the Asset Purchase Agreement) with an equal or greater credit rating and with the legal authority and operational ability to satisfy the obligations of the assigning Party under this Agreement or that acquires the electric system of such Party.
            (b) Notwithstanding the foregoing, CalPeco will have the right to assign this Agreement, without the written consent of NV Energy, for collateral security purposes to aid in providing financing for the acquisition contemplated by the Asset Purchase Agreement, provided, that CalPeco will promptly notify NV Energy of any such assignment. Any financing arrangement entered into by CalPeco pursuant to this Section 10.2 will provide that, prior to or upon the exercise of the secured party's, trustee's or mortgagee's assignment right(s) pursuant to said arrangement, the secured creditor, the trustee or mortgagee will notify NV Energy of the date and particulars of any such exercise of assignment right(s).
            (c) Any attempted assignment that violates this Section 10.2 is void and ineffective. No assignment of a Party's rights or obligations under this Agreement, nor any consent thereto, will relieve such Party of its obligations and liabilities under this Agreement, nor will any such assignment expand any obligations of the non-assigning Party. Where required, consent to assignment will not be unreasonably withheld, conditioned or delayed.
      10.3 Governing Law; Venue. This Agreement (as well as any claim or controversy arising out of or relating to this Agreement) will be governed by and construed in accordance with the laws of the State of New York, without regard to the conflicts of laws rules thereof that would otherwise require the laws of another jurisdiction to apply. Each Party irrevocably submits to the exclusive jurisdiction of the federal and (subject to the following) state courts located in the State of Nevada, waives any objection which it may have to the laying of venue of any proceedings brought in any such court, and waives any claim that such proceedings have been brought in an inconvenient forum; and agrees that any and all claims, controversies or disputes arising from or relating to this Agreement will be submitted in the federal courts of Nevada located in Reno for resolution; provided, however, that in the event jurisdiction may not be had in federal court, then the Parties agree to submit any and all such disputes, claims or controversies to the state district courts of Nevada located in Reno.
      10.4 Waiver of Jury Trial. EACH OF THE PARTIES HERETO HEREBY IRREVOCABLY WAIVES, TO THE FULLEST EXTENT PERMITTED BY LAW, ANY AND ALL RIGHT TO TRIAL BY JURY IN ANY LEGAL PROCEEDING ARISING OUT OF OR RELATED TO THIS AGREEMENT OR ANY OF THE TRANSACTIONS CONTEMPLATED HEREBY.
      10.5 Notices. Written notice provided under this Agreement should be sent to address indicated below (or at such other address as a Party may specify, provided that notices of a change of address will be effective only upon receipt thereof):
            (a) if to NV Energy:
Sierra Pacific Power Company
 c/o NV Energy
Attn: Office of the General Counsel 
6226 West Sahara Avenue 
Las Vegas, Nevada 89146 
Fax: (702) 402-2069
      with a copy to:
Sierra Pacific Power Company 
Attn: Christopher A. Hilen 
6100 Neil Road 
Reno, Nevada 89520-3150 
Fax: (775) 834-4811
            (b) if to CalPeco:
Liberty Utilities (CalPeco Electric), LLC
c/o Algonquin Power Management Inc.
Attn: President
2845 Bristol Circle
Oakville, Ontario, Canada L6H 7H7
Fax:(905)465-4514
      with a copy to:
Emera Incorporated 
Attn: Corporate Secretary 
1894 Barrington Street 
Halifax, Nova Scotia B3J 2A8
Fax: (902) 428-6171
      with a copy to:
Davis Wright Tremaine LLP 
Attn: Steven F. Greenwald 
505 Montgomery Street, Suite 800 
San Francisco, CA 94111 
Fax: (415) 276-6599
      10.6 Severability. If any provision in this Agreement is finally determined to be invalid, void or unenforceable by any court or other Governmental Entity having jurisdiction, such determination will not invalidate, void or make unenforceable any other provision, agreement or covenant of this Agreement.
      10.7 Rules of Interpretation. This Agreement, unless a clear contrary intention appears, will be construed and interpreted as follows: (a) the singular number includes the plural number and vice versa; (b) reference to any Person includes such Person's successors and assigns but, in the case of a Party, only if such successors and assigns are permitted by this Agreement, and reference to a Person in a particular capacity excludes such Person in any other capacity or individually; (c) reference to any agreement (including this Agreement), document, instrument or tariff means such agreement, document, instrument or tariff as amended or modified and in effect from time to time in accordance with the terms thereof and, if applicable, the terms hereof; (d) reference to any Law means such Law as amended, modified, codified or reenacted, in whole or in part, and in effect from time to time, including, if applicable, rules and regulations promulgated thereunder; (e) unless expressly stated otherwise, reference to any Article, Section or Schedule means such Article, Section or Schedule of this Agreement, as the case may be; (f) "hereunder," hereof," "herein," "hereto" and words of similar import will be deemed references to this Agreement as a whole and not to any particular Article, Section or other provision hereof or thereof; (g) "including" (and with correlative meaning "include") means including without limiting the generality of any description preceding such term; and (h) the Schedules to this Agreement are hereby incorporated and made a part hereof as if set forth in full herein and are an integral part of this Agreement.
      10.8 Entire Agreement. This Agreement constitutes the entire agreement between the Parties with reference to the subject matter hereof, and supersedes all prior and contemporaneous understandings or agreements, oral or written, between the Parties with respect to the subject matter of this Agreement. Nothing in this Agreement is intended to modify, supersede, or otherwise alter any other agreements between the Parties.
      10.9 No Third Party Beneficiaries. This Agreement is not intended to and does not create rights, remedies, or benefits of any character whatsoever in favor of any Person other than the Parties, and the obligations herein assumed are solely for the use end benefit of the Parties, their successors in interest and, where permitted, their assigns.
      10.10 Amendment. The Parties may by mutual agreement amend this Agreement by a written instrument duly executed by the Parties. Such amendment will become effective and a part of this Agreement upon satisfaction of Law.
      10.11 No Dedication of Facilities. Nothing in this Agreement will be construed as constituting the dedication of (a) NV Energy's electric system or any portion thereof to the public in California or to CalPeco, or (b) CalPeco's electric system or any portion thereof to the public in Nevada or to NV Energy.
      10.12 Counterparts. This Agreement may be executed in multiple counterparts (each of which will be deemed an original, but all of which together will constitute one and the same instrument), and may be delivered by facsimile or email transmission.
      10.13 Forward Contracts. The Parties acknowledge and agree that all transactions under this Agreement are forward contracts and that the Parties are forward contract merchants, as those terms are used in the United States Bankruptcy Code.
      10.14 Change in Law.
            (a) If a Party becomes aware that any Governmental Entity having jurisdiction over the transactions contemplated hereby proposes a change in Law that would materially affect the performance of either Party's obligations under this Agreement, such Party will promptly provide notice to the other Party respecting the same. The Parties will, within 15 days following receipt of written notice requesting a meeting to discuss the proposed change in Law, meet to discuss in good faith the implications of the proposed change in Law on the arrangement contemplated by this Agreement. Upon the proposed changes achieving a Change in Law Enactment Date, the Parties will make commercially reasonable efforts to amend this Agreement (effective as of the effective date of the change in Law) to preserve the benefits and bargains initially agreed to in this Agreement. For the avoidance of doubt, effectiveness of legislation or regulations that become Law after the date hereof attributable to carbon, greenhouse gases, or climate change may constitute a change in Law under this Section 10.14.
            (b) If (x) the Parties agree that the financial implications of any such change in Law under this Agreement will not, individually or in the aggregate during the current term, be more than Seventy-Five Thousand U.S. dollars ($75,000.00), or the Parties otherwise agree (regardless of whether the financial implications of any such change exceed Seventy-Five Thousand U.S. dollars ($75,000.00)) to subject the matter to the special dispute resolution provisions set forth below, and (y) the Parties cannot reach agreement on an amendment prior to the Change in Law Enactment Date, then the Parties will subject the matter for resolution in accordance with the provisions of Sections 9.2, 9.3, and 9.4 of this Agreement, provided, that the following special dispute resolution provisions will apply:
                  (i) within 10 business days following the Change in Law Enactment Date, the Parties will confer in an effort to agree upon an independent expert qualified to resolve the dispute. If the Parties are unable to agree upon the appointment of such an independent expert, then at the end of such 10 business days each Party will, within 10 business days thereafter, notify the other Party in writing of its designation of three proposed independent experts. Each Party will within five business days strike two of the independent experts proposed by the other Party. The remaining two independent experts will, within five business days, select one of them to hear the dispute; provided, that if one of the Parties still objects to the dispute being heard by the selected independent expert, the two proposed independent experts will select a third independent expert (which may be one of the independent experts proposed by the Parties initially) and such third independent expert will hear the dispute;
                  (ii) the commercial objective of the independent expert will be to restore the Parties to positions that preserve the benefits and bargains initially agreed to by the Parties in this Agreement;
                  (iii) no Party will be allowed to conduct discovery on the other Party;
                  (iv) the decision of the independent expert will be based on written submissions by the Parties (due within 60 days following his or her selection pursuant to clause (i) above) and whatever oral presentations or arguments that the independent expert may request or permit; provided, that a Party will be entitled to request that oral presentations or arguments be permitted; and
                  (v) the independent expert will be instructed to issue a decision within 30 days after conducting whatever proceedings the independent expert believes are reasonably necessary and appropriate to render a decision, and in any event within 90 days following the independent expert's selection pursuant to clause (i) above.
            (c) If the Parties are unable to amend this Agreement to preserve the benefits and bargains initially agreed to in this Agreement in accordance with the procedures set forth in Section 10.14(a) and the issue does not qualify for the special dispute resolution procedures set forth at Section 10.14(b), either Party may initiate the provisions of Article IX in this Agreement to resolve the dispute.
Remainder of Page Intentionally Left Blank


      IN WITNESS WHEREOF, the Parties have executed this Agreement effective as of the date first set forth above.
SIERRA PACIFIC POWER COMPANY
dba NV Energy

By:							
Name:	William D. Rogers
Title:	Corporate Senior Vice President, Chief Financial Officer, and Treasurer


By:							
Name:  Jeffrey L. Ceccarelli
Title:	President


LIBERTY UTILITIES (CALPECO ELECTRIC) LLC
By:	California Pacific Utility Ventures, LLC, Its Sole Member

By:							
Name:	Ian E. Robertson
Title:	Authorized Representative


By:							
Name:	Nancy G. Tower
Title:	Authorized Representative

      
      
      
      [Signature Page to Borderline Customer Agreement]



Schedule A


      The information in the tables below is preliminary and will be finalized by NV Energy prior to the Closing.
I.	Borderline Customers located in California (Served by Nevada Facilities or NV Energy's California Transmission Facilities)

Area
Borderline Customer 
(Name and Address)
Retail Classification of
Borderline Customer
Meter
Number
Initial 
Delivery Point




Area
Borderline Customer 
(Name and Address)
Retail Classification of
Borderline Customer
Meter 
Number
Initial 
Delivery Point




II.	Borderline Customers located in Nevada (Served by California Facilities)

Area
Borderline Customer 
(Name and Address)
Retail Classification of
Borderline Customer
Meter
Number
Initial 
Delivery Point




Schedule B
I.	Borderline Customers located in California
      
Delivery Point	Loss Adjustment Factor
All Delivery Points*	1.0
      * Loss adjustment is already included in the all-in rate payable by CalPeco to NV Energy under the Power Purchase Agreement. Therefore, during the term of the Power Purchase Agreement, no adjustments to the amounts payable by CalPeco under this Agreement will be necessary for line losses.
II.	Borderline Customers located in Nevada
Delivery Point	Loss Adjustment Factor
All Delivery Points						1.0
	24
DWT 22317236v1 0089731-000002</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>17</filing_id>
      <filing_title>Notice of Succession</filing_title>
      <filing_type>10</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2013-08-09</current_effective_date>
      <ferc_order_date>2013-09-06</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
    <record_data>
      <record_id>1200</record_id>
      <option_code>A</option_code>
      <record_title>CalPeco FERC Electric Rate Schedule No. 5 -- ESA</record_title>
      <record_content_desc>Rate Schedule No. 5</record_content_desc>
      <record_version_num>4.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>343932928</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2017-06-01</proposed_effective_date>
      <priority_order>1500000000</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>Liberty Utilities (CalPeco Electric) LLC
FERC FPA Electric Tariff
FERC Electric Rate Schedule No. 5
Electric Service Agreement

ELECTRIC SERVICE AGREEMENT
      THIS AGREEMENT is entered into this 8th day of December, 2010, by and between LIBERTY UTILITIES (CALPECO ELECTRIC) LLC ("CalPeco"), Tahoe Vista, Placer County, State of California, hereinafter referred to as "Company," and PACIFIC GAS AND ELECTRIC COMPANY, 77 Beale Street, City and County of San Francisco, State of California, hereinafter referred to as "Customer." 
RECITALS
      A. Customer and Sierra Pacific Power Company ("Sierra") entered into an Electric Service Agreement, dated May 6, 1965, as amended by the Amendment to Electric Service Agreement, dated October 1, 1990 (the "Sierra/PG&amp;E Service Agreement"), for Sierra to provide electric service to Customer for distribution and resale by Customer to the general public from Customer's distribution facilities.  
      B. Sierra and Company have entered into an agreement under which Sierra will sell its California electric distribution system to Company (the "Sale Transaction").  
      C. In connection with the Sale Transaction, Sierra sent a letter to Customer, dated November 15, 2010, notifying Customer of Sierra's intent to cancel the Sierra/PG&amp;E Service Agreement and have the Sierra/PG&amp;E Service Agreement terminate upon the completion of the Sale Transaction, subject to (a) completion of the Sale Transaction, and (b) authorization or acceptance by the Federal Energy Regulatory Commission of this Agreement.  
      D. This Agreement is intended to replace the Sierra/PG&amp;E Service Agreement upon terms and conditions substantially similar to the Sierra/PG&amp;E Service Agreement.  
      E. Company is engaged in the distribution, sale and delivery of electric energy in its service territory in California, and Customer is engaged in the generation, transmission, distribution and sale for resale of electric energy to the general public at various locations in the general vicinity west of Echo Summit, El Dorado County, California.  
      F. Company proposes to operate the necessary service facilities to sell and deliver electric service to Customer, and Customer desires to purchase from Company electric service for distribution and resale to the general public from Customer's distribution facilities.  
AGREEMENT
1. VOLTAGE
      Electric service hereunder shall be supplied and measured by Company at 14,400 nominal volts, and shall be received by Customer at such voltage.  
2. QUANTITIES
      Company agrees to sell and deliver and Customer agrees to purchase and receive the electric service for Customer's aforementioned distribution facilities up to the amount of 2,500 kilowatts or the total requirements of Customer's aforementioned distribution facility, whichever is the lesser amount.  Future service modifications may require further analysis of the parties' respective system capabilities and load projections.  
3. PRICES
      Company agrees to sell and Customer agrees to purchase electric service hereunder at the prices contained in Appendix 1.  
4. TERM OF AGREEMENT
      This Agreement shall become effective on the date of completion of the Sale Transaction, subject to FERC acceptance, and shall remain in effect for an initial period of one (1) year from such date, and from year to year thereafter until, subject to any required FERC acceptance or approval, cancelled by either Company or Customer; provided that, the terminating party shall provide written notice of cancellation to the other party at least 60 days prior to the end of the initial one-year term or any subsequent yearly term thereafter.  Company will then promptly make an appropriate filing to FERC to cancel this Agreement and request an effective date for the cancellation as of the end of the one-year term then in effect.
5. POINT OF DELIVERY
      Customer agrees that for all electric service purchased under this Agreement the point of delivery shall be at Johnson Pass on Echo Summit near Meyers, El Dorado County, State of California, where the Company's facilities contact the Customer's facilities; however, for the convenience of the parties hereto, the meter point shall be at a point of Company's 14,400 nominal volt feeder line about 1,300 yards easterly of the point of delivery.  
6. NOTICES
      All notices and communications, except those specified in the paragraph below, shall be in writing and sent prepaid mail to the addressee stated below, or at such other addressee as may hereafter be designated in writing: 
Company: 	Liberty Utilities (CalPeco Electric) LLC
	Attn: General Manager
	933 Eloise Avenue
	South Lake Tahoe, CA 96150 

Customer: 	Mr. Jess A. Brown
	Director, Energy Solutions &amp; Service
	Pacific Gas and Electric Company
	Mail Code N8C
	P.O. Box 770000
	San Francisco, CA 94177 
	
With a copy to:	Mr. Yilma Hailemichael
	Manager, Transmission Contract Management
	Pacific Gas and Electric Company
	Mail Code B13L
	P.O. Box 770000
	San Francisco, CA 94177 
      Notices with respect to curtailment or restoration of electric service, or with respect to force majeure, shall be sufficient if given by Company in writing, or by telegraph or orally in person or by telephone to the person or persons designated from time to time by Customer as authorized to receive such notices.  
7. METERING
      Company will provide Customer with a meter or meters for each applicable rate schedule.  Customer, acting jointly with Company, may install, maintain and operate at his expense such check metering equipment as desired provided that such equipment shall be so installed as not to interfere with operation of Company's equipment.  Discrepancies between Company's meter and Customer's check meter shall be resolved by the parties, and appropriate billing and meter adjustments made, as soon as practicable after such discrepancy is discovered.  
      The metering equipment installed by Company to measure the electricity used by Customer shall be tested before installation and regularly thereafter by the Company and shall be subject to such standard tests as may be necessary to establish accuracy.  Meters shall be considered accurate if they measure within two percent (2%) of accuracy.  
      Meters in use shall be tested at the request of Customer and in its presence, if desired, provided that, except as may be necessary to resolve a discrepancy between the check meter and the meter-in-use, only one (1) such test shall be made free of charge within a twelve (12) month period and, provided, further, that Customer shall pay the cost of any additional test within such period unless such meter is shown to be inaccurate in excess of two percent (2%).  If on test the average error is two percent (2%) or less, the meter will be adjusted for accurate registration without adjustment of billing.  If the average error is found to be more than two percent (2%) slow or fast, the meter will be accurately adjusted and Company will rebill Customer for the correct amount as calculated for a period equal to one-half (1/2) the time elapsed since the last previous test, but in no case for a period in excess of six (6) months.
      In the event the metering apparatus, for any reason other than incorrect calibration, fails to register the true amount of electricity which has been used by the Customer, the electricity used during the entire period of incorrect registration will be either (a) based on the readings of the check meter, if there is one in place, or (b) estimated.  If usage is estimated, such estimate shall be based upon all known pertinent facts and the amount of electricity so estimated will be used in calculating the bill.  Company will rebill Customer for the adjusted amount for a period equal to one-half (l/2) of the time elapsed since the last previous test of the metering apparatus but in no case for a period in excess of six (6) months.  
8. BILLING AND PAYMENTS
      The meter(s)-in-use will be read at regular intervals and bills will be rendered on a monthly basis.  Bills will be rendered as soon as practical after determination of their amount and shall be due and payable at the office of Company within thirty (30) days from the date of the bill.  If bills are not paid within sixty (60) days from the date of the bill, the unpaid balance shall bear interest from such time at the rate provided from time to time for refunds made under the Federal Power Act.  
9. FORCE MAJEURE
      Except for making payments due, neither the Company nor the Customer shall be liable in damage to the other for any act, omission or circumstances occasioned by or in consequence of any acts of God, strikes, lockouts, acts of the public enemy, wars, blockades, insurrections, riots, epidemics, landslides, lightning, earthquakes, fires, storms, floods, unforeseeable or unusual weather conditions, washouts, arrests and restraint of rulers and peoples, civil disturbances, explosions breakage or accident to machinery, gas pipes or electric lines, temporary failure of electric supply, the binding orders of any court or governmental authority which has been resisted in good faith by all reasonable legal means, and any other cause, whether of the kind herein enumerated, or otherwise, and whether caused or occasioned by or happening on account of the act or omission of Company or Customer or any other party or concern not reasonably within the control of the party claiming suspension and which by the exercise of due diligence such party is unable to prevent or overcome.  A failure to settle or prevent any strike or other controversy with employees or with anyone purporting or seeking to represent employees shall not be considered to be a matter within the control of the party claiming suspension.  
10. MISCELLANEOUS
      This Agreement shall at all times be subject to such changes or modifications by the Federal Energy Regulatory Commission, as said Commission may, from time to time, direct in the exercise of its jurisdiction.  Nothing contained herein shall limit the right of Company or Customer to unilaterally make application to the Federal Energy Regulatory Commission for a change in rates, terms and conditions hereunder pursuant to sections 205 and 206 of the Federal Power Act.  
      This Agreement shall bind and inure to the benefit of the successors and assigns of the respective parties hereto.  
      This Agreement sets forth the parties' entire agreement as to the matters addressed herein, and, as such, it supersedes any and all prior communications, agreements, oral or in writing as to such matters.  

[signature page follows]

      In Witness Whereof, the parties have executed this Agreement effective as of the date first set forth above.  

LIBERTY UTILITIES (CALPECO ELECTRIC) LLC
	(Company)

By: 	

Name: 	

Title: 	



PACIFIC GAS &amp; ELECTRIC COMPANY
	(Company)

By: 	

Name: 	

Title: 	


APPENDIX 1

The charges for service under this Agreement shall consist of a monthly Customer Charge, Demand Charge and Energy Charge:

Customer Charge
$26,868.00
Demand Charge
Per Formula
Energy Charge
Per formula

Demand Charge Formula
The Demand Charge is designed as a direct pass through of the Transmission and Demand Charges for power purchases made by Liberty Utilities (CalPeco Electric), LLC from Sierra Pacific Power Company (Sierra) described in Sections 9.1 and 9.2 of the Service Agreement Between Sierra Pacific Power Company and Liberty Utilities (CalPeco Electric), LLC, as amended, filed with FERC as Sierra's Rate Schedule FERC No. 55.  The Demand Rate shall be the sum of the Transmission Rate and the Demand Rate described in Sections D.1 and D.2 of Exhibit D to Rate Schedule No. 55.  The Demand Charge shall be the product of the Demand Rate times the Billing Demand as defined below.
  
Energy Charge Formula
The Energy Charge is designed to be a direct pass-through of the Energy Charge for power company purchases made by Liberty Utilities (CalPeco Electric), LLC from Sierra as described in Section 9.3 of the Service Agreement Between Sierra Pacific Power Company and Liberty Utilities (CalPeco Electric), LLC, as amended, filed with FERC as Sierra's Rate Schedule FERC No. 55.  The per kwh Energy Charge that Sierra invoices Liberty Utilities (CalPeco Electric) each month, including any True-up Rate or other adjustment described in Section D.4 of Exhibit D to Rate Schedule No. 55, will be used as the rate for Customer's (PG&amp;E's) Billing KWH, as defined below, for that same month. 

Billing Units
A.	Billing Demand
The Billing Demand for Customer for any billing period shall be the greater of the Measured Demand for the current period; or fifty percent (50%) of the highest Measured Demand for the Customer during the preceding eleven (11) months.
B.	Measured Demand
Measured Demand shall be the maximum measured fifteen-minute average kilowatt load during the billing period.  Where multiple delivery points supply systems which are interconnected or which may be switched to interconnected operation with substantial transfers of power between delivery points, the Measured Demand shall be defined as the maximum measured coincidental-fifteen minute average kilowatt load during the billing period of all delivery points supplying such systems.
In instances, however, where the use of energy is intermittent and subject to violent fluctuations, a shorter time interval may be used and the demand determined from special measurements.  Also, at the Liberty Utilities' (CalPeco Electric) option, a thermal type of demand meter which does not reset after a definite time interval may be used for demand measurement.
C.	Billing KWH
The Billing KWH shall be the metered kwh usage for the billing month times a system loss factor of 1.005.
Minimum Bill
The minimum monthly charge for service hereunder shall be the Customer Charge plus the Demand Charge.
 
















4








[Signature page to Electric Service Agreement]


AMENDMENT NO. 1

	9


AMENDMENT NO. 1

	8</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>21</filing_id>
      <filing_title>Clarify Amendment Filing</filing_title>
      <filing_type>130</filing_type>
      <associated_filing_id>20</associated_filing_id>
      <associated_record_id>1200</associated_record_id>
      <associated_option_code>A</associated_option_code>
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2017-06-01</current_effective_date>
      <ferc_order_date>2017-08-29</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
  </ferc_filing_data>
</Document>