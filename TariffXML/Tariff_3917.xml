<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Document xmlns="http://ferc.gov/etariffExport.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ferc_filing_data>
    <schema_version>2</schema_version>
    <company_id>C004647</company_id>
    <lead_applicant_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
    <tariff_id>678</tariff_id>
    <tariff_title>Agreements</tariff_title>
    <tariff_export_date>2025-09-16T20:08Z</tariff_export_date>
    <export_schema_version>2</export_schema_version>
    <record_data>
      <record_id>2</record_id>
      <option_code>A</option_code>
      <record_title>Shared Facilities Agreement</record_title>
      <record_content_desc>Rising Tree III</record_content_desc>
      <record_version_num>1.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>1100000</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2015-08-29</proposed_effective_date>
      <priority_order>600</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data>e1xydGYxXGFkZWZsYW5nMTAyNVxhbnNpXGFuc2ljcGcxMjUyXHVjMVxhZGVmZjBcZGVmZjBcc3RzaGZkYmNoMFxzdHNoZmxvY2gwXHN0c2hmaGljaDBcc3RzaGZiaTBcZGVmbGFuZzEwMzNcZGVmbGFuZ2ZlMTAzM1x0aGVtZWxhbmcxMDMzXHRoZW1lbGFuZ2ZlMFx0aGVtZWxhbmdjczB7XGZvbnR0Ymx7XGYwXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjAyMDYwMzA1MDQwNTAyMDMwNH1UaW1lcyBOZXcgUm9tYW47fXtcZjFcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNjA0MDIwMjAyMDIwMjA0fUFyaWFsO30NCntcZjJcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQwXGZwcnExe1wqXHBhbm9zZSAwMjA3MDMwOTAyMDIwNTAyMDQwNH1Db3VyaWVyIE5ldzt9e1xmM1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MlxmcHJxMntcKlxwYW5vc2UgMDUwNTAxMDIwMTA3MDYwMjA1MDd9U3ltYm9sO317XGY0XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDYwNDAyMDIwMjAyMDIwNH1IZWx2ZXRpY2E7fQ0Ke1xmNVxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDBcZnBycTF7XCpccGFub3NlIDAyMDcwNDA5MDIwMjA1MDIwNDA0fUNvdXJpZXI7fXtcZjZcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDIwNjAzMDQwNTA1MDIwMzA0fVRtcyBSbW47fXtcZjdcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNjA0MDIwMjAyMDMwMjA0fUhlbHY7fQ0Ke1xmOFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwNDA1MDMwNjA1MDYwMjAzMDR9TmV3IFlvcms7fXtcZjlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAwMDAwMDAwMDAwMDAwMDAwMDAwfVN5c3RlbTt9e1xmMTBcZmJpZGkgXGZuaWxcZmNoYXJzZXQyXGZwcnEye1wqXHBhbm9zZSAwNTAwMDAwMDAwMDAwMDAwMDAwMH1XaW5nZGluZ3M7fQ0Ke1xmMTFcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxMjhcZnBycTF7XCpccGFub3NlIDAyMDIwNjA5MDQwMjA1MDgwMzA0fU1TIE1pbmNob3tcKlxmYWx0IFwnODJcJzZjXCc4MlwnNzIgXCc5NlwnYmVcJzkyXCdhOX07fXtcZjEyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxMjlcZnBycTJ7XCpccGFub3NlIDAyMDMwNjAwMDAwMTAxMDEwMTAxfUJhdGFuZ3tcKlxmYWx0IFwnYjlcJ2Q5XCdjNVwnYzF9O30NCntcZjEzXGZiaWRpIFxmbmlsXGZjaGFyc2V0MTM0XGZwcnEye1wqXHBhbm9zZSAwMjAxMDYwMDAzMDEwMTAxMDEwMX1TaW1TdW57XCpcZmFsdCBcJ2NiXCdjZVwnY2NcJ2U1fTt9e1xmMTRcZmJpZGkgXGZyb21hblxmY2hhcnNldDEzNlxmcHJxMntcKlxwYW5vc2UgMDIwMjA1MDAwMDAwMDAwMDAwMDB9UE1pbmdMaVV7XCpcZmFsdCBcJ2I3XCc3M1wnYjJcJ2QzXCdhOVwnZmFcJ2M1XCdlOX07fQ0Ke1xmMTVcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxMjhcZnBycTF7XCpccGFub3NlIDAyMGIwNjA5MDcwMjA1MDgwMjA0fU1TIEdvdGhpY3tcKlxmYWx0IFwnODJcJzZjXCc4MlwnNzIgXCc4M1wnNTNcJzgzXCc1NlwnODNcJzYyXCc4M1wnNGV9O317XGYxNlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTI5XGZwcnEye1wqXHBhbm9zZSAwMjBiMDYwMDAwMDEwMTAxMDEwMX1Eb3R1bXtcKlxmYWx0IFwnYjVcJ2I4XCdiZlwnZjJ9O30NCntcZjE3XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTM0XGZwcnExe1wqXHBhbm9zZSAwMjAxMDYwOTA2MDEwMTAxMDEwMX1TaW1IZWl7XCpcZmFsdCBcJ2JhXCdkYVwnY2NcJ2U1fTt9e1xmMThcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxMzZcZnBycTF7XCpccGFub3NlIDAyMDIwNTA5MDAwMDAwMDAwMDAwfU1pbmdMaVV7XCpcZmFsdCBcJ2IyXCdkM1wnYTlcJ2ZhXCdjNVwnZTl9O30NCntcZjE5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxMjhcZnBycTF7XCpccGFub3NlIDAyMDIwNjA5MDQwMzA1MDgwMzA1fU1pbmNob3tcKlxmYWx0IFwnOTZcJ2JlXCc5MlwnYTl9O317XGYyMFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTI5XGZwcnEye1wqXHBhbm9zZSAwMjBiMDYwMDAwMDEwMTAxMDEwMX1HdWxpbXtcKlxmYWx0IFwnYjFcJ2JjXCdiOFwnYjJ9O30NCntcZjIxXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjA0MDYwNDA1MDUwNTAyMDMwNH1DZW50dXJ5O317XGYyMlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwMjA2MDMwNTA0MDUwMjAzMDR9QW5nc2FuYSBOZXc7fXtcZjIzXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDMwNDAyMDIwMjAyMDIwNH1Db3JkaWEgTmV3O30NCntcZjI0XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjA0MDUwMzA1MDIwMzAzMDIwMn1NYW5nYWw7fXtcZjI1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDYwNDAyMDIwMjAyMDIwNH1MYXRoYTt9e1xmMjZcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAxMGEwNTAyMDUwMzA2MDMwMzAzfVN5bGZhZW47fQ0Ke1xmMjdcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNTAyMDQwMjA0MDIwMjAzfVZyaW5kYTt9e1xmMjhcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNTAyMDQwMjA0MDIwMjAzfVJhYXZpO317XGYyOVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwYjA1MDIwNDAyMDQwMjAyMDN9U2hydXRpO30NCntcZjMwXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxXGZwcnEye1wqXHBhbm9zZSAwMDAwMDQwMDAwMDAwMDAwMDAwMH1TZW5kbnlhO317XGYzMVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwYjA1MDIwNDAyMDQwMjAyMDN9R2F1dGFtaTt9e1xmMzJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNTAyMDQwMjA0MDIwMjAzfVR1bmdhO30NCntcZjMzXGZiaWRpIFxmc2NyaXB0XGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDMwODA2MDAwMDAwMDAwMDAwMDB9RXN0cmFuZ2VsbyBFZGVzc2E7fXtcZjM0XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjA0MDUwMzA1MDQwNjAzMDIwNH1DYW1icmlhIE1hdGg7fXtcZjM1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxMjhcZnBycTJ7XCpccGFub3NlIDAyMGIwNjA0MDIwMjAyMDIwMjA0fUFyaWFsIFVuaWNvZGUgTVM7fQ0Ke1xmMzZcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDQwNTAzMDUwNDA2MDMwMjA0fUNhbWJyaWE7fXtcZjM3XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBmMDUwMjAyMDIwNDAzMDIwNH1DYWxpYnJpO317XGYzOFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwYjA2MDQwMzA1MDQwNDAyMDR9VGFob21hO30NCntcZjM5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDYwNjAyMDIwMjAzMDIwNH1BcmlhbCBOYXJyb3c7fXtcZjQwXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjAyMDQwNDAzMDMwMTAxMDgwM31HYXJhbW9uZDt9e1xmNDFcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDIwNjAzMDUwNDA1MDIwMzA0fVRpbWVzO30NCntcZjQyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEwe1wqXHBhbm9zZSAwMDAwMDAwMDAwMDAwMDAwMDAwMH1UaW1lcyBOZXcgUm9tYW4gQm9sZHtcKlxmYWx0IFRpbWVzIE5ldyBSb21hbn07fXtcZjQzXGZiaWRpIFxmbmlsXGZjaGFyc2V0MFxmcHJxMCBUaW1lc05ld1JvbWFuUFNNVHtcKlxmYWx0IFRpbWVzIE5ldyBSb21hbn07fQ0Ke1xmNDRcZmJpZGkgXGZuaWxcZmNoYXJzZXQyXGZwcnEye1wqXHBhbm9zZSAwMDAwMDAwMDAwMDAwMDAwMDAwMH1NYXJsZXR0O317XGY0NVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTI5XGZwcnEye1wqXHBhbm9zZSAwMjAzMDYwMDAwMDEwMTAxMDEwMX1AQmF0YW5nO317XGY0NlxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDEyOVxmcHJxMXtcKlxwYW5vc2UgMDIwMzA2MDkwMDAxMDEwMTAxMDF9QmF0YW5nQ2hlO30NCntcZjQ3XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTI5XGZwcnExe1wqXHBhbm9zZSAwMjAzMDYwOTAwMDEwMTAxMDEwMX1AQmF0YW5nQ2hlO317XGY0OFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTI5XGZwcnEye1wqXHBhbm9zZSAwMjAzMDYwMDAwMDEwMTAxMDEwMX1HdW5nc3VoO317XGY0OVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTI5XGZwcnEye1wqXHBhbm9zZSAwMjAzMDYwMDAwMDEwMTAxMDEwMX1AR3VuZ3N1aDt9DQp7XGY1MFxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDEyOVxmcHJxMXtcKlxwYW5vc2UgMDIwMzA2MDkwMDAxMDEwMTAxMDF9R3VuZ3N1aENoZTt9e1xmNTFcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxMjlcZnBycTF7XCpccGFub3NlIDAyMDMwNjA5MDAwMTAxMDEwMTAxfUBHdW5nc3VoQ2hlO317XGY1MlxmYmlkaSBcZm5pbFxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAxMDEwMTAxMDEwMTAxMDEwMTAxfURhdW5QZW5oO30NCntcZjUzXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDYwNDAyMDIwMjAyMDIwNH1Eb2tDaGFtcGE7fXtcZjU0XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDUwMzA0MDEwMjAyMDEwNH1FdXBoZW1pYTt9e1xmNTVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNTAyMDQwMjA0MDIwMjAzfVZhbmk7fQ0Ke1xmNTZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDEyOVxmcHJxMntcKlxwYW5vc2UgMDIwYjA2MDAwMDAxMDEwMTAxMDF9QEd1bGltO317XGY1N1xmYmlkaSBcZm1vZGVyblxmY2hhcnNldDEyOVxmcHJxMXtcKlxwYW5vc2UgMDIwYjA2MDkwMDAxMDEwMTAxMDF9R3VsaW1DaGU7fXtcZjU4XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTI5XGZwcnExe1wqXHBhbm9zZSAwMjBiMDYwOTAwMDEwMTAxMDEwMX1AR3VsaW1DaGU7fQ0Ke1xmNTlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDEyOVxmcHJxMntcKlxwYW5vc2UgMDIwYjA2MDAwMDAxMDEwMTAxMDF9QERvdHVtO317XGY2MFxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDEyOVxmcHJxMXtcKlxwYW5vc2UgMDIwYjA2MDkwMDAxMDEwMTAxMDF9RG90dW1DaGU7fXtcZjYxXGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTI5XGZwcnExe1wqXHBhbm9zZSAwMjBiMDYwOTAwMDEwMTAxMDEwMX1ARG90dW1DaGU7fQ0Ke1xmNjJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwODA2MDMwOTAyMDUwMjA0fUltcGFjdDt9e1xmNjNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNTAyMDQwMjA0MDIwMjAzfUlza29vbGEgUG90YTt9e1xmNjRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNTAyMDQwMjA0MDIwMjAzfUthbGluZ2E7fQ0Ke1xmNjVcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDIwNTAzMDMwNDA0MDYwMjAzfUthcnRpa2E7fXtcZjY2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDUwMjA0MDIwNDAyMDIwM31LaG1lciBVSTt9e1xmNjdcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNTAyMDQwMjA0MDIwMjAzfUxhbyBVSTt9DQp7XGY2OFxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDBcZnBycTF7XCpccGFub3NlIDAyMGIwNjA5MDQwNTA0MDIwMjA0fUx1Y2lkYSBDb25zb2xlO317XGY2OVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTI5XGZwcnEye1wqXHBhbm9zZSAwMjBiMDUwMzAyMDAwMDAyMDAwNH1NYWxndW4gR290aGljO317XGY3MFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTI5XGZwcnEye1wqXHBhbm9zZSAwMjBiMDUwMzAyMDAwMDAyMDAwNH1ATWFsZ3VuIEdvdGhpYzt9DQp7XGY3MVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTI4XGZwcnEye1wqXHBhbm9zZSAwMjBiMDYwNDAzMDUwNDA0MDIwNH1NZWlyeW87fXtcZjcyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxMjhcZnBycTJ7XCpccGFub3NlIDAyMGIwNjA0MDMwNTA0MDQwMjA0fUBNZWlyeW87fXtcZjczXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxMjhcZnBycTJ7XCpccGFub3NlIDAyMGIwNjA0MDMwNTA0MDQwMjA0fU1laXJ5byBVSTt9DQp7XGY3NFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTI4XGZwcnEye1wqXHBhbm9zZSAwMjBiMDYwNDAzMDUwNDA0MDIwNH1ATWVpcnlvIFVJO317XGY3NVxmYmlkaSBcZm5pbFxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAxMDEwMTAwMDEwMTAxMDEwMTAxfU1pY3Jvc29mdCBIaW1hbGF5YTt9e1xmNzZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDEzNlxmcHJxMntcKlxwYW5vc2UgMDIwYjA2MDQwMzA1MDQwNDAyMDR9TWljcm9zb2Z0IEpoZW5nSGVpO30NCntcZjc3XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxMzZcZnBycTJ7XCpccGFub3NlIDAyMGIwNjA0MDMwNTA0MDQwMjA0fUBNaWNyb3NvZnQgSmhlbmdIZWk7fXtcZjc4XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxMzRcZnBycTJ7XCpccGFub3NlIDAyMGIwNTAzMDIwMjA0MDIwMjA0fU1pY3Jvc29mdCBZYUhlaTt9DQp7XGY3OVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTM0XGZwcnEye1wqXHBhbm9zZSAwMjBiMDUwMzAyMDIwNDAyMDIwNH1ATWljcm9zb2Z0IFlhSGVpO317XGY4MFxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDEzNlxmcHJxMXtcKlxwYW5vc2UgMDIwMjA1MDkwMDAwMDAwMDAwMDB9QE1pbmdMaVU7fXtcZjgxXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxMzZcZnBycTJ7XCpccGFub3NlIDAyMDIwNTAwMDAwMDAwMDAwMDAwfUBQTWluZ0xpVTt9DQp7XGY4MlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTM2XGZwcnEye1wqXHBhbm9zZSAwMjAyMDUwMDAwMDAwMDAwMDAwMH1NaW5nTGlVX0hLU0NTO317XGY4M1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTM2XGZwcnEye1wqXHBhbm9zZSAwMjAyMDUwMDAwMDAwMDAwMDAwMH1ATWluZ0xpVV9IS1NDUzt9e1xmODRcZmJpZGkgXGZyb21hblxmY2hhcnNldDEzNlxmcHJxMntcKlxwYW5vc2UgMDIwMjA1MDAwMDAwMDAwMDAwMDB9TWluZ0xpVS1FeHRCO30NCntcZjg1XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxMzZcZnBycTJ7XCpccGFub3NlIDAyMDIwNTAwMDAwMDAwMDAwMDAwfUBNaW5nTGlVLUV4dEI7fXtcZjg2XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxMzZcZnBycTJ7XCpccGFub3NlIDAyMDIwNTAwMDAwMDAwMDAwMDAwfVBNaW5nTGlVLUV4dEI7fXtcZjg3XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxMzZcZnBycTJ7XCpccGFub3NlIDAyMDIwNTAwMDAwMDAwMDAwMDAwfUBQTWluZ0xpVS1FeHRCO30NCntcZjg4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxMzZcZnBycTJ7XCpccGFub3NlIDAyMDIwNTAwMDAwMDAwMDAwMDAwfU1pbmdMaVVfSEtTQ1MtRXh0Qjt9e1xmODlcZmJpZGkgXGZyb21hblxmY2hhcnNldDEzNlxmcHJxMntcKlxwYW5vc2UgMDIwMjA1MDAwMDAwMDAwMDAwMDB9QE1pbmdMaVVfSEtTQ1MtRXh0Qjt9DQp7XGY5MFxmYmlkaSBcZnNjcmlwdFxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAzMDAwNTAwMDAwMDAwMDAwMDAwfU1vbmdvbGlhbiBCYWl0aTt9e1xmOTFcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxMjhcZnBycTF7XCpccGFub3NlIDAyMGIwNjA5MDcwMjA1MDgwMjA0fUBNUyBHb3RoaWM7fXtcZjkyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxMjhcZnBycTJ7XCpccGFub3NlIDAyMGIwNjAwMDcwMjA1MDgwMjA0fU1TIFBHb3RoaWM7fQ0Ke1xmOTNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDEyOFxmcHJxMntcKlxwYW5vc2UgMDIwYjA2MDAwNzAyMDUwODAyMDR9QE1TIFBHb3RoaWM7fXtcZjk0XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxMjhcZnBycTJ7XCpccGFub3NlIDAyMGIwNjAwMDcwMjA1MDgwMjA0fU1TIFVJIEdvdGhpYzt9e1xmOTVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDEyOFxmcHJxMntcKlxwYW5vc2UgMDIwYjA2MDAwNzAyMDUwODAyMDR9QE1TIFVJIEdvdGhpYzt9DQp7XGY5NlxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDEyOFxmcHJxMXtcKlxwYW5vc2UgMDIwMjA2MDkwNDAyMDUwODAzMDR9QE1TIE1pbmNobzt9e1xmOTdcZmJpZGkgXGZyb21hblxmY2hhcnNldDEyOFxmcHJxMntcKlxwYW5vc2UgMDIwMjA2MDAwNDAyMDUwODAzMDR9TVMgUE1pbmNobzt9e1xmOThcZmJpZGkgXGZyb21hblxmY2hhcnNldDEyOFxmcHJxMntcKlxwYW5vc2UgMDIwMjA2MDAwNDAyMDUwODAzMDR9QE1TIFBNaW5jaG87fQ0Ke1xmOTlcZmJpZGkgXGZuaWxcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjAwMDUwMDAzMDIwMDA5MDAwMH1NViBCb2xpO317XGYxMDBcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNTAyMDQwMjA0MDIwMjAzfU1pY3Jvc29mdCBOZXcgVGFpIEx1ZTt9e1xmMTAxXGZiaWRpIFxmbmlsXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwMDA1MDQwNzAzMDAwMjAwMDN9TnlhbGE7fQ0Ke1xmMTAyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDUwMjA0MDIwNDAyMDIwM31NaWNyb3NvZnQgUGhhZ3NQYTt9e1xmMTAzXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjAyMDYwMjA3MDEwMDAwMDAwMH1QbGFudGFnZW5ldCBDaGVyb2tlZTt9DQp7XGYxMDRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNTA0MDIwMDAwMDAwMDAzfVNlZ29lIFNjcmlwdDt9e1xmMTA1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDUwMjA0MDIwNDAyMDIwM31TZWdvZSBVSTt9e1xmMTA2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDcwMjA0MDIwNDAyMDIwM31TZWdvZSBVSSBTZW1pYm9sZDt9DQp7XGYxMDdcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNTAyMDQwMjA0MDIwMjAzfVNlZ29lIFVJIExpZ2h0O317XGYxMDhcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNTAyMDQwMjA0MDIwMjAzfVNlZ29lIFVJIFN5bWJvbDt9e1xmMTA5XGZiaWRpIFxmbmlsXGZjaGFyc2V0MTM0XGZwcnEye1wqXHBhbm9zZSAwMjAxMDYwMDAzMDEwMTAxMDEwMX1AU2ltU3VuO30NCntcZjExMFxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDEzNFxmcHJxMXtcKlxwYW5vc2UgMDIwMTA2MDkwMzAxMDEwMTAxMDF9TlNpbVN1bjt9e1xmMTExXGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTM0XGZwcnExe1wqXHBhbm9zZSAwMjAxMDYwOTAzMDEwMTAxMDEwMX1ATlNpbVN1bjt9e1xmMTEyXGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTM0XGZwcnExe1wqXHBhbm9zZSAwMjAxMDYwOTA2MDEwMTAxMDEwMX1TaW1TdW4tRXh0Qjt9DQp7XGYxMTNcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxMzRcZnBycTF7XCpccGFub3NlIDAyMDEwNjA5MDYwMTAxMDEwMTAxfUBTaW1TdW4tRXh0Qjt9e1xmMTE0XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDUwMjA0MDIwNDAyMDIwM31NaWNyb3NvZnQgVGFpIExlO317XGYxMTVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNTAyMDQwMjA0MDIwMjAzfVNob25hciBCYW5nbGE7fQ0Ke1xmMTE2XGZiaWRpIFxmc2NyaXB0XGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDMwMDA1MDAwMDAwMDAwMDAwMDB9TWljcm9zb2Z0IFlpIEJhaXRpO317XGYxMTdcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNjA0MDIwMjAyMDIwMjA0fU1pY3Jvc29mdCBTYW5zIFNlcmlmO30NCntcZjExOFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwYjA2MDQwMjAyMDIwMjAyMDR9QXBhcmFqaXRhO317XGYxMTlcZmJpZGkgXGZuaWxcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjAwMDAwMDAwMDAwMDAwMDAwMH1FYnJpbWE7fXtcZjEyMFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwYjA1MDIwNDAyMDQwMjAyMDN9R2lzaGE7fQ0Ke1xmMTIxXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDYwNDAyMDIwMjAyMDIwNH1Lb2tpbGE7fXtcZjEyMlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwYjA1MDIwNDAyMDQwMjAyMDN9TGVlbGF3YWRlZTt9e1xmMTIzXGZiaWRpIFxmbmlsXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwMDAwMDAwMDAwMDAwMDAwMDB9TWljcm9zb2Z0IFVpZ2h1cjt9DQp7XGYxMjRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwMTAwMDEwMTAxMDEwMTAxfU1vb2xCb3Jhbjt9e1xmMTI1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDYwNDAyMDIwMjAyMDIwNH1VdHNhYWg7fXtcZjEyNlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwYjA2MDQwMjAyMDIwMjAyMDR9VmlqYXlhO30NCntcZjEyN1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwMjA2MDMwNTA0MDUwMjAzMDR9QW5kYWx1czt9e1xmMTI4XGZiaWRpIFxmc2NyaXB0XGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDMwMjA0MDIwNDA0MDYwMzAyMDN9QXJhYmljIFR5cGVzZXR0aW5nO317XGYxMjlcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDIwNjAzMDUwNDA1MDIwMzA0fVNpbXBsaWZpZWQgQXJhYmljO30NCntcZjEzMFxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDBcZnBycTF7XCpccGFub3NlIDAyMDcwMzA5MDIwMjA1MDIwNDA0fVNpbXBsaWZpZWQgQXJhYmljIEZpeGVkO317XGYxMzFcZmJpZGkgXGZuaWxcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjAwMDAwMDAwMDAwMDAwMDAwMH1TYWtrYWwgTWFqYWxsYTt9DQp7XGYxMzJcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDIwNjAzMDUwNDA1MDIwMzA0fVRyYWRpdGlvbmFsIEFyYWJpYzt9e1xmMTMzXGZiaWRpIFxmbmlsXGZjaGFyc2V0MTc3XGZwcnEye1wqXHBhbm9zZSAwMjAxMDgwMzAyMDEwNDAzMDIwM31BaGFyb25pO317XGYxMzRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE3N1xmcHJxMntcKlxwYW5vc2UgMDIwZTA1MDIwNjA0MDEwMTAxMDF9RGF2aWQ7fQ0Ke1xmMTM1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNzdcZnBycTJ7XCpccGFub3NlIDAyMGUwNTAzMDYwMTAxMDEwMTAxfUZyYW5rUnVlaGw7fXtcZjEzNlxmYmlkaSBcZm5pbFxmY2hhcnNldDE3N1xmcHJxMntcKlxwYW5vc2UgMDIwMTA1MDIwNjAxMDEwMTAxMDF9TGV2ZW5pbSBNVDt9e1xmMTM3XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNzdcZnBycTJ7XCpccGFub3NlIDAyMGIwNTAyMDUwMTAxMDEwMTAxfU1pcmlhbTt9DQp7XGYxMzhcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxNzdcZnBycTF7XCpccGFub3NlIDAyMGIwNTA5MDUwMTAxMDEwMTAxfU1pcmlhbSBGaXhlZDt9e1xmMTM5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNzdcZnBycTJ7XCpccGFub3NlIDAyMGUwNTAyMDUwMTAxMDEwMTAxfU5hcmtpc2ltO317XGYxNDBcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxNzdcZnBycTF7XCpccGFub3NlIDAyMDMwNTA5MDUwMTAxMDEwMTAxfVJvZDt9DQp7XGYxNDFcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxMzRcZnBycTF7XCpccGFub3NlIDAyMDEwNjA5MDYwMTAxMDEwMTAxfUZhbmdTb25nO317XGYxNDJcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxMzRcZnBycTF7XCpccGFub3NlIDAyMDEwNjA5MDYwMTAxMDEwMTAxfUBGYW5nU29uZzt9e1xmMTQzXGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTM0XGZwcnExe1wqXHBhbm9zZSAwMjAxMDYwOTA2MDEwMTAxMDEwMX1AU2ltSGVpO30NCntcZjE0NFxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDEzNFxmcHJxMXtcKlxwYW5vc2UgMDIwMTA2MDkwNjAxMDEwMTAxMDF9S2FpVGk7fXtcZjE0NVxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDEzNFxmcHJxMXtcKlxwYW5vc2UgMDIwMTA2MDkwNjAxMDEwMTAxMDF9QEthaVRpO317XGYxNDZcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDIwNjAzMDUwNDA1MDIwMzA0fUFuZ3NhbmFVUEM7fQ0Ke1xmMTQ3XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDYwNDAyMDIwMjAyMDIwNH1Ccm93YWxsaWEgTmV3O317XGYxNDhcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNjA0MDIwMjAyMDIwMjA0fUJyb3dhbGxpYVVQQzt9e1xmMTQ5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDMwNDAyMDIwMjAyMDIwNH1Db3JkaWFVUEM7fQ0Ke1xmMTUwXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjAyMDYwMzA1MDQwNTAyMDMwNH1EaWxsZW5pYVVQQzt9e1xmMTUxXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjAyMDYwMzA1MDQwNTAyMDMwNH1FdWNyb3NpYVVQQzt9e1xmMTUyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDYwNDAyMDIwMjAyMDIwNH1GcmVlc2lhVVBDO30NCntcZjE1M1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwYjA2MDQwMjAyMDIwMjAyMDR9SXJpc1VQQzt9e1xmMTU0XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjAyMDYwMzA1MDQwNTAyMDMwNH1KYXNtaW5lVVBDO317XGYxNTVcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDIwNjAzMDUwNDA1MDIwMzA0fUtvZGNoaWFuZ1VQQzt9DQp7XGYxNTZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNjA0MDIwMjAyMDIwMjA0fUxpbHlVUEM7fXtcZjE1N1xmYmlkaSBcZnNjcmlwdFxmY2hhcnNldDEzNlxmcHJxMXtcKlxwYW5vc2UgMDMwMDA1MDkwMDAwMDAwMDAwMDB9REZLYWktU0I7fXtcZjE1OFxmYmlkaSBcZnNjcmlwdFxmY2hhcnNldDEzNlxmcHJxMXtcKlxwYW5vc2UgMDMwMDA1MDkwMDAwMDAwMDAwMDB9QERGS2FpLVNCO30NCntcZjE1OVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwYjA2MDIwMzA1MDQwMjAyMDR9THVjaWRhIFNhbnMgVW5pY29kZTt9e1xmMTYwXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMGEwNDAyMDEwMjAyMDIwNH1BcmlhbCBCbGFjazt9e1xmMTYxXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBlMDUwMjAzMDMwMzAyMDIwNH1DYW5kYXJhO30NCntcZjE2MlxmYmlkaSBcZnNjcmlwdFxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAzMGYwNzAyMDMwMzAyMDIwMjA0fUNvbWljIFNhbnMgTVM7fXtcZjE2M1xmYmlkaSBcZm1vZGVyblxmY2hhcnNldDBcZnBycTF7XCpccGFub3NlIDAyMGIwNjA5MDIwMjA0MDMwMjA0fUNvbnNvbGFzO317XGYxNjRcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDMwNjAyMDUwMzA2MDMwMzAzfUNvbnN0YW50aWE7fQ0Ke1xmMTY1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDUwMzAyMDIwNDAyMDIwNH1Db3JiZWw7fXtcZjE2NlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwYjA2MDMwMjAxMDIwMjAyMDR9RnJhbmtsaW4gR290aGljIE1lZGl1bTt9e1xmMTY3XGZiaWRpIFxmZGVjb3JcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwNDA0MDYwNTA1MTAwMjAyMGQwMn1HYWJyaW9sYTt9DQp7XGYxNjhcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDQwNTAyMDUwNDA1MDIwMzAzfUdlb3JnaWE7fXtcZjE2OVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwNDA1MDIwNTA1MDUwMzAzMDR9UGFsYXRpbm8gTGlub3R5cGU7fXtcZjE3MFxmYmlkaSBcZm5pbFxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDAwNjAwMDAwMDAwMDAwMDAwfVNlZ29lIFByaW50O30NCntcZjE3MVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwYjA2MDMwMjAyMDIwMjAyMDR9VHJlYnVjaGV0IE1TO317XGYxNzJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNjA0MDMwNTA0MDQwMjA0fVZlcmRhbmE7fXtcZjE3M1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MlxmcHJxMntcKlxwYW5vc2UgMDUwMzAxMDIwMTA1MDkwNjA3MDN9V2ViZGluZ3M7fQ0Ke1xmMTc0XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBmMDMwMjAyMDIwNDAzMDIwNH1DYWxpYnJpIExpZ2h0O317XGYxNzVcZmJpZGkgXGZyb21hblxmY2hhcnNldDJcZnBycTJ7XCpccGFub3NlIDA1MDUwMTAyMDEwMjA1MDIwMjAyfU1UIEV4dHJhO317XGYxNzZcZmJpZGkgXGZyb21hblxmY2hhcnNldDJcZnBycTJ7XCpccGFub3NlIDA1MDIwMTAyMDEwNTA3MDcwNzA3fVdpbmdkaW5ncyAyO30NCntcZjE3N1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MlxmcHJxMntcKlxwYW5vc2UgMDUwNDAxMDIwMTA4MDcwNzA3MDd9V2luZ2RpbmdzIDM7fXtcZjE3OFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTI4XGZwcnEye1wqXHBhbm9zZSAwMjBiMDYwNDAyMDIwMjAyMDIwNH1AQXJpYWwgVW5pY29kZSBNUzt9e1xmMTc5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjA0MDYwMjA1MDMwNTAzMDMwNH1Cb29rIEFudGlxdWE7fQ0Ke1xmMTgwXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDUwMjAyMDIwMjAyMDIwNH1DZW50dXJ5IEdvdGhpYzt9e1xmMTgxXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjA1MDYwNDA1MDUwNTAyMDIwNH1Cb29rbWFuIE9sZCBTdHlsZTt9DQp7XGYxODJcZmJpZGkgXGZuaWxcZmNoYXJzZXQyXGZwcnEye1wqXHBhbm9zZSAwNTAxMDEwMTAxMDEwMTAxMDEwMX1Cb29rc2hlbGYgU3ltYm9sIDc7fXtcZjE4M1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwYjA2MDQwMzA1MDQwNDAyMDR9TVMgUmVmZXJlbmNlIFNhbnMgU2VyaWY7fQ0Ke1xmMTg0XGZiaWRpIFxmbmlsXGZjaGFyc2V0MlxmcHJxMntcKlxwYW5vc2UgMDUwMDA1MDAwMDAwMDAwMDAwMDB9TVMgUmVmZXJlbmNlIFNwZWNpYWx0eTt9e1xmbG9tYWpvclxmMzE1MDBcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDIwNjAzMDUwNDA1MDIwMzA0fVRpbWVzIE5ldyBSb21hbjt9DQp7XGZkYm1ham9yXGYzMTUwMVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwMjA2MDMwNTA0MDUwMjAzMDR9VGltZXMgTmV3IFJvbWFuO317XGZoaW1ham9yXGYzMTUwMlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwNDA1MDMwNTA0MDYwMzAyMDR9Q2FtYnJpYTt9DQp7XGZiaW1ham9yXGYzMTUwM1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwMjA2MDMwNTA0MDUwMjAzMDR9VGltZXMgTmV3IFJvbWFuO317XGZsb21pbm9yXGYzMTUwNFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwMjA2MDMwNTA0MDUwMjAzMDR9VGltZXMgTmV3IFJvbWFuO30NCntcZmRibWlub3JcZjMxNTA1XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjAyMDYwMzA1MDQwNTAyMDMwNH1UaW1lcyBOZXcgUm9tYW47fXtcZmhpbWlub3JcZjMxNTA2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBmMDUwMjAyMDIwNDAzMDIwNH1DYWxpYnJpO30NCntcZmJpbWlub3JcZjMxNTA3XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjAyMDYwMzA1MDQwNTAyMDMwNH1UaW1lcyBOZXcgUm9tYW47fXtcZjE4NVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjM4XGZwcnEyIFRpbWVzIE5ldyBSb21hbiBDRTt9e1xmMTg2XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgVGltZXMgTmV3IFJvbWFuIEN5cjt9DQp7XGYxODhcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MVxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gR3JlZWs7fXtcZjE4OVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYyXGZwcnEyIFRpbWVzIE5ldyBSb21hbiBUdXI7fXtcZjE5MFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc3XGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoSGVicmV3KTt9e1xmMTkxXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNzhcZnBycTIgVGltZXMgTmV3IFJvbWFuIChBcmFiaWMpO30NCntcZjE5MlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTg2XGZwcnEyIFRpbWVzIE5ldyBSb21hbiBCYWx0aWM7fXtcZjE5M1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYzXGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoVmlldG5hbWVzZSk7fXtcZjE5NVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjM4XGZwcnEyIEFyaWFsIENFO317XGYxOTZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBBcmlhbCBDeXI7fQ0Ke1xmMTk4XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgQXJpYWwgR3JlZWs7fXtcZjE5OVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIEFyaWFsIFR1cjt9e1xmMjAwXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNzdcZnBycTIgQXJpYWwgKEhlYnJldyk7fXtcZjIwMVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTc4XGZwcnEyIEFyaWFsIChBcmFiaWMpO30NCntcZjIwMlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTg2XGZwcnEyIEFyaWFsIEJhbHRpYzt9e1xmMjAzXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjNcZnBycTIgQXJpYWwgKFZpZXRuYW1lc2UpO317XGYyMDVcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQyMzhcZnBycTEgQ291cmllciBOZXcgQ0U7fXtcZjIwNlxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDIwNFxmcHJxMSBDb3VyaWVyIE5ldyBDeXI7fQ0Ke1xmMjA4XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTYxXGZwcnExIENvdXJpZXIgTmV3IEdyZWVrO317XGYyMDlcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxNjJcZnBycTEgQ291cmllciBOZXcgVHVyO317XGYyMTBcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxNzdcZnBycTEgQ291cmllciBOZXcgKEhlYnJldyk7fXtcZjIxMVxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDE3OFxmcHJxMSBDb3VyaWVyIE5ldyAoQXJhYmljKTt9DQp7XGYyMTJcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxODZcZnBycTEgQ291cmllciBOZXcgQmFsdGljO317XGYyMTNcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxNjNcZnBycTEgQ291cmllciBOZXcgKFZpZXRuYW1lc2UpO317XGYyOTdcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQwXGZwcnExIE1TIE1pbmNobyBXZXN0ZXJue1wqXGZhbHQgXCc4MlwnNmNcJzgyXCc3MiBcJzk2XCdiZVwnOTJcJ2E5fTt9DQp7XGYyOTVcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQyMzhcZnBycTEgTVMgTWluY2hvIENFe1wqXGZhbHQgXCc4MlwnNmNcJzgyXCc3MiBcJzk2XCdiZVwnOTJcJ2E5fTt9e1xmMjk2XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MjA0XGZwcnExIE1TIE1pbmNobyBDeXJ7XCpcZmFsdCBcJzgyXCc2Y1wnODJcJzcyIFwnOTZcJ2JlXCc5MlwnYTl9O30NCntcZjI5OFxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDE2MVxmcHJxMSBNUyBNaW5jaG8gR3JlZWt7XCpcZmFsdCBcJzgyXCc2Y1wnODJcJzcyIFwnOTZcJ2JlXCc5MlwnYTl9O317XGYyOTlcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxNjJcZnBycTEgTVMgTWluY2hvIFR1cntcKlxmYWx0IFwnODJcJzZjXCc4MlwnNzIgXCc5NlwnYmVcJzkyXCdhOX07fQ0Ke1xmMzAyXGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTg2XGZwcnExIE1TIE1pbmNobyBCYWx0aWN7XCpcZmFsdCBcJzgyXCc2Y1wnODJcJzcyIFwnOTZcJ2JlXCc5MlwnYTl9O317XGYzMDdcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTIgQmF0YW5nIFdlc3Rlcm57XCpcZmFsdCBcJ2I5XCdkOVwnYzVcJ2MxfTt9DQp7XGYzMDVcZmJpZGkgXGZyb21hblxmY2hhcnNldDIzOFxmcHJxMiBCYXRhbmcgQ0V7XCpcZmFsdCBcJ2I5XCdkOVwnYzVcJ2MxfTt9e1xmMzA2XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgQmF0YW5nIEN5cntcKlxmYWx0IFwnYjlcJ2Q5XCdjNVwnYzF9O317XGYzMDhcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MVxmcHJxMiBCYXRhbmcgR3JlZWt7XCpcZmFsdCBcJ2I5XCdkOVwnYzVcJ2MxfTt9DQp7XGYzMDlcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MlxmcHJxMiBCYXRhbmcgVHVye1wqXGZhbHQgXCdiOVwnZDlcJ2M1XCdjMX07fXtcZjMxMlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTg2XGZwcnEyIEJhdGFuZyBCYWx0aWN7XCpcZmFsdCBcJ2I5XCdkOVwnYzVcJ2MxfTt9e1xmMzE3XGZiaWRpIFxmbmlsXGZjaGFyc2V0MFxmcHJxMiBTaW1TdW4gV2VzdGVybntcKlxmYWx0IFwnY2JcJ2NlXCdjY1wnZTV9O30NCntcZjMyN1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMiBQTWluZ0xpVSBXZXN0ZXJue1wqXGZhbHQgXCdiN1wnNzNcJ2IyXCdkM1wnYTlcJ2ZhXCdjNVwnZTl9O317XGYzMzdcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQwXGZwcnExIE1TIEdvdGhpYyBXZXN0ZXJue1wqXGZhbHQgXCc4MlwnNmNcJzgyXCc3MiBcJzgzXCc1M1wnODNcJzU2XCc4M1wnNjJcJzgzXCc0ZX07fQ0Ke1xmMzM1XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MjM4XGZwcnExIE1TIEdvdGhpYyBDRXtcKlxmYWx0IFwnODJcJzZjXCc4MlwnNzIgXCc4M1wnNTNcJzgzXCc1NlwnODNcJzYyXCc4M1wnNGV9O317XGYzMzZcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQyMDRcZnBycTEgTVMgR290aGljIEN5cntcKlxmYWx0IFwnODJcJzZjXCc4MlwnNzIgXCc4M1wnNTNcJzgzXCc1NlwnODNcJzYyXCc4M1wnNGV9O30NCntcZjMzOFxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDE2MVxmcHJxMSBNUyBHb3RoaWMgR3JlZWt7XCpcZmFsdCBcJzgyXCc2Y1wnODJcJzcyIFwnODNcJzUzXCc4M1wnNTZcJzgzXCc2MlwnODNcJzRlfTt9e1xmMzM5XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTYyXGZwcnExIE1TIEdvdGhpYyBUdXJ7XCpcZmFsdCBcJzgyXCc2Y1wnODJcJzcyIFwnODNcJzUzXCc4M1wnNTZcJzgzXCc2MlwnODNcJzRlfTt9DQp7XGYzNDJcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxODZcZnBycTEgTVMgR290aGljIEJhbHRpY3tcKlxmYWx0IFwnODJcJzZjXCc4MlwnNzIgXCc4M1wnNTNcJzgzXCc1NlwnODNcJzYyXCc4M1wnNGV9O317XGYzNDdcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTIgRG90dW0gV2VzdGVybntcKlxmYWx0IFwnYjVcJ2I4XCdiZlwnZjJ9O30NCntcZjM0NVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjM4XGZwcnEyIERvdHVtIENFe1wqXGZhbHQgXCdiNVwnYjhcJ2JmXCdmMn07fXtcZjM0NlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjA0XGZwcnEyIERvdHVtIEN5cntcKlxmYWx0IFwnYjVcJ2I4XCdiZlwnZjJ9O317XGYzNDhcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBEb3R1bSBHcmVla3tcKlxmYWx0IFwnYjVcJ2I4XCdiZlwnZjJ9O30NCntcZjM0OVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIERvdHVtIFR1cntcKlxmYWx0IFwnYjVcJ2I4XCdiZlwnZjJ9O317XGYzNTJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE4NlxmcHJxMiBEb3R1bSBCYWx0aWN7XCpcZmFsdCBcJ2I1XCdiOFwnYmZcJ2YyfTt9e1xmMzU3XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MFxmcHJxMSBTaW1IZWkgV2VzdGVybntcKlxmYWx0IFwnYmFcJ2RhXCdjY1wnZTV9O30NCntcZjM2N1xmYmlkaSBcZm1vZGVyblxmY2hhcnNldDBcZnBycTEgTWluZ0xpVSBXZXN0ZXJue1wqXGZhbHQgXCdiMlwnZDNcJ2E5XCdmYVwnYzVcJ2U5fTt9e1xmMzg3XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEyIEd1bGltIFdlc3Rlcm57XCpcZmFsdCBcJ2IxXCdiY1wnYjhcJ2IyfTt9e1xmMzg1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgR3VsaW0gQ0V7XCpcZmFsdCBcJ2IxXCdiY1wnYjhcJ2IyfTt9DQp7XGYzODZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBHdWxpbSBDeXJ7XCpcZmFsdCBcJ2IxXCdiY1wnYjhcJ2IyfTt9e1xmMzg4XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgR3VsaW0gR3JlZWt7XCpcZmFsdCBcJ2IxXCdiY1wnYjhcJ2IyfTt9e1xmMzg5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgR3VsaW0gVHVye1wqXGZhbHQgXCdiMVwnYmNcJ2I4XCdiMn07fQ0Ke1xmMzkyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgR3VsaW0gQmFsdGlje1wqXGZhbHQgXCdiMVwnYmNcJ2I4XCdiMn07fXtcZjM5NVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjM4XGZwcnEyIENlbnR1cnkgQ0U7fXtcZjM5NlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjA0XGZwcnEyIENlbnR1cnkgQ3lyO317XGYzOThcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MVxmcHJxMiBDZW50dXJ5IEdyZWVrO30NCntcZjM5OVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYyXGZwcnEyIENlbnR1cnkgVHVyO317XGY0MDJcZmJpZGkgXGZyb21hblxmY2hhcnNldDE4NlxmcHJxMiBDZW50dXJ5IEJhbHRpYzt9e1xmNDE0XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMjJcZnBycTIgQW5nc2FuYSBOZXcgKFRoYWkpO317XGY0MjRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIyMlxmcHJxMiBDb3JkaWEgTmV3IChUaGFpKTt9DQp7XGY0NDVcZmJpZGkgXGZyb21hblxmY2hhcnNldDIzOFxmcHJxMiBTeWxmYWVuIENFO317XGY0NDZcZmJpZGkgXGZyb21hblxmY2hhcnNldDIwNFxmcHJxMiBTeWxmYWVuIEN5cjt9e1xmNDQ4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjFcZnBycTIgU3lsZmFlbiBHcmVlazt9e1xmNDQ5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjJcZnBycTIgU3lsZmFlbiBUdXI7fQ0Ke1xmNDUyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxODZcZnBycTIgU3lsZmFlbiBCYWx0aWM7fXtcZjUyNVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjM4XGZwcnEyIENhbWJyaWEgTWF0aCBDRTt9e1xmNTI2XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgQ2FtYnJpYSBNYXRoIEN5cjt9e1xmNTI4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjFcZnBycTIgQ2FtYnJpYSBNYXRoIEdyZWVrO30NCntcZjUyOVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYyXGZwcnEyIENhbWJyaWEgTWF0aCBUdXI7fXtcZjUzMlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTg2XGZwcnEyIENhbWJyaWEgTWF0aCBCYWx0aWM7fXtcZjUzM1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYzXGZwcnEyIENhbWJyaWEgTWF0aCAoVmlldG5hbWVzZSk7fXtcZjUzN1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMiBBcmlhbCBVbmljb2RlIE1TIFdlc3Rlcm47fQ0Ke1xmNTM1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgQXJpYWwgVW5pY29kZSBNUyBDRTt9e1xmNTM2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgQXJpYWwgVW5pY29kZSBNUyBDeXI7fXtcZjUzOFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIEFyaWFsIFVuaWNvZGUgTVMgR3JlZWs7fXtcZjUzOVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIEFyaWFsIFVuaWNvZGUgTVMgVHVyO30NCntcZjU0MFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTc3XGZwcnEyIEFyaWFsIFVuaWNvZGUgTVMgKEhlYnJldyk7fXtcZjU0MVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTc4XGZwcnEyIEFyaWFsIFVuaWNvZGUgTVMgKEFyYWJpYyk7fXtcZjU0MlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTg2XGZwcnEyIEFyaWFsIFVuaWNvZGUgTVMgQmFsdGljO30NCntcZjU0M1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYzXGZwcnEyIEFyaWFsIFVuaWNvZGUgTVMgKFZpZXRuYW1lc2UpO317XGY1NDRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIyMlxmcHJxMiBBcmlhbCBVbmljb2RlIE1TIChUaGFpKTt9e1xmNTQ1XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMzhcZnBycTIgQ2FtYnJpYSBDRTt9e1xmNTQ2XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgQ2FtYnJpYSBDeXI7fQ0Ke1xmNTQ4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjFcZnBycTIgQ2FtYnJpYSBHcmVlazt9e1xmNTQ5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjJcZnBycTIgQ2FtYnJpYSBUdXI7fXtcZjU1MlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTg2XGZwcnEyIENhbWJyaWEgQmFsdGljO317XGY1NTNcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2M1xmcHJxMiBDYW1icmlhIChWaWV0bmFtZXNlKTt9DQp7XGY1NTVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIzOFxmcHJxMiBDYWxpYnJpIENFO317XGY1NTZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBDYWxpYnJpIEN5cjt9e1xmNTU4XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgQ2FsaWJyaSBHcmVlazt9e1xmNTU5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgQ2FsaWJyaSBUdXI7fQ0Ke1xmNTYyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgQ2FsaWJyaSBCYWx0aWM7fXtcZjU2M1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYzXGZwcnEyIENhbGlicmkgKFZpZXRuYW1lc2UpO317XGY1NjVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIzOFxmcHJxMiBUYWhvbWEgQ0U7fXtcZjU2NlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjA0XGZwcnEyIFRhaG9tYSBDeXI7fQ0Ke1xmNTY4XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgVGFob21hIEdyZWVrO317XGY1NjlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBUYWhvbWEgVHVyO317XGY1NzBcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE3N1xmcHJxMiBUYWhvbWEgKEhlYnJldyk7fXtcZjU3MVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTc4XGZwcnEyIFRhaG9tYSAoQXJhYmljKTt9DQp7XGY1NzJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE4NlxmcHJxMiBUYWhvbWEgQmFsdGljO317XGY1NzNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2M1xmcHJxMiBUYWhvbWEgKFZpZXRuYW1lc2UpO317XGY1NzRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIyMlxmcHJxMiBUYWhvbWEgKFRoYWkpO317XGY1NzVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIzOFxmcHJxMiBBcmlhbCBOYXJyb3cgQ0U7fQ0Ke1xmNTc2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgQXJpYWwgTmFycm93IEN5cjt9e1xmNTc4XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgQXJpYWwgTmFycm93IEdyZWVrO317XGY1NzlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBBcmlhbCBOYXJyb3cgVHVyO317XGY1ODJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE4NlxmcHJxMiBBcmlhbCBOYXJyb3cgQmFsdGljO30NCntcZjU4NVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjM4XGZwcnEyIEdhcmFtb25kIENFO317XGY1ODZcZmJpZGkgXGZyb21hblxmY2hhcnNldDIwNFxmcHJxMiBHYXJhbW9uZCBDeXI7fXtcZjU4OFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYxXGZwcnEyIEdhcmFtb25kIEdyZWVrO317XGY1ODlcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MlxmcHJxMiBHYXJhbW9uZCBUdXI7fQ0Ke1xmNTkyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxODZcZnBycTIgR2FyYW1vbmQgQmFsdGljO317XGY1OTVcZmJpZGkgXGZyb21hblxmY2hhcnNldDIzOFxmcHJxMiBUaW1lcyBDRTt9e1xmNTk2XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgVGltZXMgQ3lyO317XGY1OThcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MVxmcHJxMiBUaW1lcyBHcmVlazt9DQp7XGY1OTlcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MlxmcHJxMiBUaW1lcyBUdXI7fXtcZjYwMFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc3XGZwcnEyIFRpbWVzIChIZWJyZXcpO317XGY2MDFcZmJpZGkgXGZyb21hblxmY2hhcnNldDE3OFxmcHJxMiBUaW1lcyAoQXJhYmljKTt9e1xmNjAyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxODZcZnBycTIgVGltZXMgQmFsdGljO30NCntcZjYwM1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYzXGZwcnEyIFRpbWVzIChWaWV0bmFtZXNlKTt9e1xmNjM3XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEyIEBCYXRhbmcgV2VzdGVybjt9e1xmNjM1XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMzhcZnBycTIgQEJhdGFuZyBDRTt9e1xmNjM2XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgQEJhdGFuZyBDeXI7fQ0Ke1xmNjM4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjFcZnBycTIgQEJhdGFuZyBHcmVlazt9e1xmNjM5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjJcZnBycTIgQEJhdGFuZyBUdXI7fXtcZjY0MlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTg2XGZwcnEyIEBCYXRhbmcgQmFsdGljO317XGY2NDdcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQwXGZwcnExIEJhdGFuZ0NoZSBXZXN0ZXJuO30NCntcZjY0NVxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDIzOFxmcHJxMSBCYXRhbmdDaGUgQ0U7fXtcZjY0NlxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDIwNFxmcHJxMSBCYXRhbmdDaGUgQ3lyO317XGY2NDhcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxNjFcZnBycTEgQmF0YW5nQ2hlIEdyZWVrO317XGY2NDlcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxNjJcZnBycTEgQmF0YW5nQ2hlIFR1cjt9DQp7XGY2NTJcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxODZcZnBycTEgQmF0YW5nQ2hlIEJhbHRpYzt9e1xmNjU3XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MFxmcHJxMSBAQmF0YW5nQ2hlIFdlc3Rlcm47fXtcZjY1NVxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDIzOFxmcHJxMSBAQmF0YW5nQ2hlIENFO317XGY2NTZcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQyMDRcZnBycTEgQEJhdGFuZ0NoZSBDeXI7fQ0Ke1xmNjU4XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTYxXGZwcnExIEBCYXRhbmdDaGUgR3JlZWs7fXtcZjY1OVxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDE2MlxmcHJxMSBAQmF0YW5nQ2hlIFR1cjt9e1xmNjYyXGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTg2XGZwcnExIEBCYXRhbmdDaGUgQmFsdGljO317XGY2NjdcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTIgR3VuZ3N1aCBXZXN0ZXJuO30NCntcZjY2NVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjM4XGZwcnEyIEd1bmdzdWggQ0U7fXtcZjY2NlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjA0XGZwcnEyIEd1bmdzdWggQ3lyO317XGY2NjhcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MVxmcHJxMiBHdW5nc3VoIEdyZWVrO317XGY2NjlcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MlxmcHJxMiBHdW5nc3VoIFR1cjt9DQp7XGY2NzJcZmJpZGkgXGZyb21hblxmY2hhcnNldDE4NlxmcHJxMiBHdW5nc3VoIEJhbHRpYzt9e1xmNjc3XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEyIEBHdW5nc3VoIFdlc3Rlcm47fXtcZjY3NVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjM4XGZwcnEyIEBHdW5nc3VoIENFO317XGY2NzZcZmJpZGkgXGZyb21hblxmY2hhcnNldDIwNFxmcHJxMiBAR3VuZ3N1aCBDeXI7fQ0Ke1xmNjc4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjFcZnBycTIgQEd1bmdzdWggR3JlZWs7fXtcZjY3OVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYyXGZwcnEyIEBHdW5nc3VoIFR1cjt9e1xmNjgyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxODZcZnBycTIgQEd1bmdzdWggQmFsdGljO317XGY2ODdcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQwXGZwcnExIEd1bmdzdWhDaGUgV2VzdGVybjt9DQp7XGY2ODVcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQyMzhcZnBycTEgR3VuZ3N1aENoZSBDRTt9e1xmNjg2XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MjA0XGZwcnExIEd1bmdzdWhDaGUgQ3lyO317XGY2ODhcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxNjFcZnBycTEgR3VuZ3N1aENoZSBHcmVlazt9e1xmNjg5XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTYyXGZwcnExIEd1bmdzdWhDaGUgVHVyO30NCntcZjY5MlxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDE4NlxmcHJxMSBHdW5nc3VoQ2hlIEJhbHRpYzt9e1xmNjk3XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MFxmcHJxMSBAR3VuZ3N1aENoZSBXZXN0ZXJuO317XGY2OTVcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQyMzhcZnBycTEgQEd1bmdzdWhDaGUgQ0U7fXtcZjY5NlxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDIwNFxmcHJxMSBAR3VuZ3N1aENoZSBDeXI7fQ0Ke1xmNjk4XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTYxXGZwcnExIEBHdW5nc3VoQ2hlIEdyZWVrO317XGY2OTlcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxNjJcZnBycTEgQEd1bmdzdWhDaGUgVHVyO317XGY3MDJcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxODZcZnBycTEgQEd1bmdzdWhDaGUgQmFsdGljO317XGY3MjRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIyMlxmcHJxMiBEb2tDaGFtcGEgKFRoYWkpO30NCntcZjc0N1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMiBAR3VsaW0gV2VzdGVybjt9e1xmNzQ1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgQEd1bGltIENFO317XGY3NDZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBAR3VsaW0gQ3lyO317XGY3NDhcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBAR3VsaW0gR3JlZWs7fQ0Ke1xmNzQ5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgQEd1bGltIFR1cjt9e1xmNzUyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgQEd1bGltIEJhbHRpYzt9e1xmNzU3XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MFxmcHJxMSBHdWxpbUNoZSBXZXN0ZXJuO317XGY3NTVcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQyMzhcZnBycTEgR3VsaW1DaGUgQ0U7fQ0Ke1xmNzU2XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MjA0XGZwcnExIEd1bGltQ2hlIEN5cjt9e1xmNzU4XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTYxXGZwcnExIEd1bGltQ2hlIEdyZWVrO317XGY3NTlcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxNjJcZnBycTEgR3VsaW1DaGUgVHVyO317XGY3NjJcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxODZcZnBycTEgR3VsaW1DaGUgQmFsdGljO30NCntcZjc2N1xmYmlkaSBcZm1vZGVyblxmY2hhcnNldDBcZnBycTEgQEd1bGltQ2hlIFdlc3Rlcm47fXtcZjc2NVxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDIzOFxmcHJxMSBAR3VsaW1DaGUgQ0U7fXtcZjc2NlxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDIwNFxmcHJxMSBAR3VsaW1DaGUgQ3lyO317XGY3NjhcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxNjFcZnBycTEgQEd1bGltQ2hlIEdyZWVrO30NCntcZjc2OVxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDE2MlxmcHJxMSBAR3VsaW1DaGUgVHVyO317XGY3NzJcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxODZcZnBycTEgQEd1bGltQ2hlIEJhbHRpYzt9e1xmNzc3XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEyIEBEb3R1bSBXZXN0ZXJuO317XGY3NzVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIzOFxmcHJxMiBARG90dW0gQ0U7fQ0Ke1xmNzc2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgQERvdHVtIEN5cjt9e1xmNzc4XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgQERvdHVtIEdyZWVrO317XGY3NzlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBARG90dW0gVHVyO317XGY3ODJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE4NlxmcHJxMiBARG90dW0gQmFsdGljO30NCntcZjc4N1xmYmlkaSBcZm1vZGVyblxmY2hhcnNldDBcZnBycTEgRG90dW1DaGUgV2VzdGVybjt9e1xmNzg1XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MjM4XGZwcnExIERvdHVtQ2hlIENFO317XGY3ODZcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQyMDRcZnBycTEgRG90dW1DaGUgQ3lyO317XGY3ODhcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxNjFcZnBycTEgRG90dW1DaGUgR3JlZWs7fQ0Ke1xmNzg5XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTYyXGZwcnExIERvdHVtQ2hlIFR1cjt9e1xmNzkyXGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTg2XGZwcnExIERvdHVtQ2hlIEJhbHRpYzt9e1xmNzk3XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MFxmcHJxMSBARG90dW1DaGUgV2VzdGVybjt9e1xmNzk1XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MjM4XGZwcnExIEBEb3R1bUNoZSBDRTt9DQp7XGY3OTZcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQyMDRcZnBycTEgQERvdHVtQ2hlIEN5cjt9e1xmNzk4XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTYxXGZwcnExIEBEb3R1bUNoZSBHcmVlazt9e1xmNzk5XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTYyXGZwcnExIEBEb3R1bUNoZSBUdXI7fXtcZjgwMlxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDE4NlxmcHJxMSBARG90dW1DaGUgQmFsdGljO30NCntcZjgwNVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjM4XGZwcnEyIEltcGFjdCBDRTt9e1xmODA2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgSW1wYWN0IEN5cjt9e1xmODA4XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgSW1wYWN0IEdyZWVrO317XGY4MDlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBJbXBhY3QgVHVyO30NCntcZjgxMlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTg2XGZwcnEyIEltcGFjdCBCYWx0aWM7fXtcZjg2NVxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDIzOFxmcHJxMSBMdWNpZGEgQ29uc29sZSBDRTt9e1xmODY2XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MjA0XGZwcnExIEx1Y2lkYSBDb25zb2xlIEN5cjt9e1xmODY4XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTYxXGZwcnExIEx1Y2lkYSBDb25zb2xlIEdyZWVrO30NCntcZjg2OVxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDE2MlxmcHJxMSBMdWNpZGEgQ29uc29sZSBUdXI7fXtcZjg3N1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMiBNYWxndW4gR290aGljIFdlc3Rlcm47fXtcZjg4N1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMiBATWFsZ3VuIEdvdGhpYyBXZXN0ZXJuO317XGY4OTdcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTIgTWVpcnlvIFdlc3Rlcm47fQ0Ke1xmODk1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgTWVpcnlvIENFO317XGY4OTZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBNZWlyeW8gQ3lyO317XGY4OThcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBNZWlyeW8gR3JlZWs7fXtcZjg5OVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIE1laXJ5byBUdXI7fQ0Ke1xmOTAyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgTWVpcnlvIEJhbHRpYzt9e1xmOTA3XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEyIEBNZWlyeW8gV2VzdGVybjt9e1xmOTA1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgQE1laXJ5byBDRTt9e1xmOTA2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgQE1laXJ5byBDeXI7fQ0Ke1xmOTA4XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgQE1laXJ5byBHcmVlazt9e1xmOTA5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgQE1laXJ5byBUdXI7fXtcZjkxMlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTg2XGZwcnEyIEBNZWlyeW8gQmFsdGljO317XGY5MTdcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTIgTWVpcnlvIFVJIFdlc3Rlcm47fQ0Ke1xmOTE1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgTWVpcnlvIFVJIENFO317XGY5MTZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBNZWlyeW8gVUkgQ3lyO317XGY5MThcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBNZWlyeW8gVUkgR3JlZWs7fXtcZjkxOVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIE1laXJ5byBVSSBUdXI7fQ0Ke1xmOTIyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgTWVpcnlvIFVJIEJhbHRpYzt9e1xmOTI3XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEyIEBNZWlyeW8gVUkgV2VzdGVybjt9e1xmOTI1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgQE1laXJ5byBVSSBDRTt9e1xmOTI2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgQE1laXJ5byBVSSBDeXI7fQ0Ke1xmOTI4XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgQE1laXJ5byBVSSBHcmVlazt9e1xmOTI5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgQE1laXJ5byBVSSBUdXI7fXtcZjkzMlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTg2XGZwcnEyIEBNZWlyeW8gVUkgQmFsdGljO317XGY5NDdcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTIgTWljcm9zb2Z0IEpoZW5nSGVpIFdlc3Rlcm47fQ0Ke1xmOTQ4XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgTWljcm9zb2Z0IEpoZW5nSGVpIEdyZWVrO317XGY5NTdcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTIgQE1pY3Jvc29mdCBKaGVuZ0hlaSBXZXN0ZXJuO317XGY5NThcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBATWljcm9zb2Z0IEpoZW5nSGVpIEdyZWVrO30NCntcZjk2N1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMiBNaWNyb3NvZnQgWWFIZWkgV2VzdGVybjt9e1xmOTY1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgTWljcm9zb2Z0IFlhSGVpIENFO317XGY5NjZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBNaWNyb3NvZnQgWWFIZWkgQ3lyO317XGY5NjhcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBNaWNyb3NvZnQgWWFIZWkgR3JlZWs7fQ0Ke1xmOTY5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgTWljcm9zb2Z0IFlhSGVpIFR1cjt9e1xmOTc3XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEyIEBNaWNyb3NvZnQgWWFIZWkgV2VzdGVybjt9e1xmOTc1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgQE1pY3Jvc29mdCBZYUhlaSBDRTt9e1xmOTc2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgQE1pY3Jvc29mdCBZYUhlaSBDeXI7fQ0Ke1xmOTc4XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgQE1pY3Jvc29mdCBZYUhlaSBHcmVlazt9e1xmOTc5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgQE1pY3Jvc29mdCBZYUhlaSBUdXI7fXtcZjk4N1xmYmlkaSBcZm1vZGVyblxmY2hhcnNldDBcZnBycTEgQE1pbmdMaVUgV2VzdGVybjt9e1xmOTk3XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEyIEBQTWluZ0xpVSBXZXN0ZXJuO30NCntcZjEwMDdcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTIgTWluZ0xpVV9IS1NDUyBXZXN0ZXJuO317XGYxMDE3XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEyIEBNaW5nTGlVX0hLU0NTIFdlc3Rlcm47fXtcZjEwMjdcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTIgTWluZ0xpVS1FeHRCIFdlc3Rlcm47fXtcZjEwMzdcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTIgQE1pbmdMaVUtRXh0QiBXZXN0ZXJuO30NCntcZjEwNDdcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTIgUE1pbmdMaVUtRXh0QiBXZXN0ZXJuO317XGYxMDU3XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEyIEBQTWluZ0xpVS1FeHRCIFdlc3Rlcm47fXtcZjEwNjdcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTIgTWluZ0xpVV9IS1NDUy1FeHRCIFdlc3Rlcm47fQ0Ke1xmMTA3N1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMiBATWluZ0xpVV9IS1NDUy1FeHRCIFdlc3Rlcm47fXtcZjEwOTdcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQwXGZwcnExIEBNUyBHb3RoaWMgV2VzdGVybjt9e1xmMTA5NVxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDIzOFxmcHJxMSBATVMgR290aGljIENFO317XGYxMDk2XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MjA0XGZwcnExIEBNUyBHb3RoaWMgQ3lyO30NCntcZjEwOThcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxNjFcZnBycTEgQE1TIEdvdGhpYyBHcmVlazt9e1xmMTA5OVxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDE2MlxmcHJxMSBATVMgR290aGljIFR1cjt9e1xmMTEwMlxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDE4NlxmcHJxMSBATVMgR290aGljIEJhbHRpYzt9e1xmMTEwN1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMiBNUyBQR290aGljIFdlc3Rlcm47fQ0Ke1xmMTEwNVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjM4XGZwcnEyIE1TIFBHb3RoaWMgQ0U7fXtcZjExMDZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBNUyBQR290aGljIEN5cjt9e1xmMTEwOFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIE1TIFBHb3RoaWMgR3JlZWs7fXtcZjExMDlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBNUyBQR290aGljIFR1cjt9DQp7XGYxMTEyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgTVMgUEdvdGhpYyBCYWx0aWM7fXtcZjExMTdcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTIgQE1TIFBHb3RoaWMgV2VzdGVybjt9e1xmMTExNVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjM4XGZwcnEyIEBNUyBQR290aGljIENFO317XGYxMTE2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgQE1TIFBHb3RoaWMgQ3lyO30NCntcZjExMThcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBATVMgUEdvdGhpYyBHcmVlazt9e1xmMTExOVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIEBNUyBQR290aGljIFR1cjt9e1xmMTEyMlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTg2XGZwcnEyIEBNUyBQR290aGljIEJhbHRpYzt9e1xmMTEyN1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMiBNUyBVSSBHb3RoaWMgV2VzdGVybjt9DQp7XGYxMTI1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgTVMgVUkgR290aGljIENFO317XGYxMTI2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgTVMgVUkgR290aGljIEN5cjt9e1xmMTEyOFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIE1TIFVJIEdvdGhpYyBHcmVlazt9e1xmMTEyOVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIE1TIFVJIEdvdGhpYyBUdXI7fQ0Ke1xmMTEzMlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTg2XGZwcnEyIE1TIFVJIEdvdGhpYyBCYWx0aWM7fXtcZjExMzdcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTIgQE1TIFVJIEdvdGhpYyBXZXN0ZXJuO317XGYxMTM1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgQE1TIFVJIEdvdGhpYyBDRTt9e1xmMTEzNlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjA0XGZwcnEyIEBNUyBVSSBHb3RoaWMgQ3lyO30NCntcZjExMzhcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBATVMgVUkgR290aGljIEdyZWVrO317XGYxMTM5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgQE1TIFVJIEdvdGhpYyBUdXI7fXtcZjExNDJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE4NlxmcHJxMiBATVMgVUkgR290aGljIEJhbHRpYzt9e1xmMTE0N1xmYmlkaSBcZm1vZGVyblxmY2hhcnNldDBcZnBycTEgQE1TIE1pbmNobyBXZXN0ZXJuO30NCntcZjExNDVcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQyMzhcZnBycTEgQE1TIE1pbmNobyBDRTt9e1xmMTE0NlxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDIwNFxmcHJxMSBATVMgTWluY2hvIEN5cjt9e1xmMTE0OFxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDE2MVxmcHJxMSBATVMgTWluY2hvIEdyZWVrO317XGYxMTQ5XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTYyXGZwcnExIEBNUyBNaW5jaG8gVHVyO30NCntcZjExNTJcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxODZcZnBycTEgQE1TIE1pbmNobyBCYWx0aWM7fXtcZjExNTdcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTIgTVMgUE1pbmNobyBXZXN0ZXJuO317XGYxMTU1XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMzhcZnBycTIgTVMgUE1pbmNobyBDRTt9e1xmMTE1NlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjA0XGZwcnEyIE1TIFBNaW5jaG8gQ3lyO30NCntcZjExNThcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MVxmcHJxMiBNUyBQTWluY2hvIEdyZWVrO317XGYxMTU5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjJcZnBycTIgTVMgUE1pbmNobyBUdXI7fXtcZjExNjJcZmJpZGkgXGZyb21hblxmY2hhcnNldDE4NlxmcHJxMiBNUyBQTWluY2hvIEJhbHRpYzt9e1xmMTE2N1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMiBATVMgUE1pbmNobyBXZXN0ZXJuO30NCntcZjExNjVcZmJpZGkgXGZyb21hblxmY2hhcnNldDIzOFxmcHJxMiBATVMgUE1pbmNobyBDRTt9e1xmMTE2NlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjA0XGZwcnEyIEBNUyBQTWluY2hvIEN5cjt9e1xmMTE2OFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYxXGZwcnEyIEBNUyBQTWluY2hvIEdyZWVrO317XGYxMTY5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjJcZnBycTIgQE1TIFBNaW5jaG8gVHVyO30NCntcZjExNzJcZmJpZGkgXGZyb21hblxmY2hhcnNldDE4NlxmcHJxMiBATVMgUE1pbmNobyBCYWx0aWM7fXtcZjExOTVcZmJpZGkgXGZuaWxcZmNoYXJzZXQyMzhcZnBycTIgTnlhbGEgQ0U7fXtcZjExOTlcZmJpZGkgXGZuaWxcZmNoYXJzZXQxNjJcZnBycTIgTnlhbGEgVHVyO317XGYxMjAyXGZiaWRpIFxmbmlsXGZjaGFyc2V0MTg2XGZwcnEyIE55YWxhIEJhbHRpYzt9DQp7XGYxMjI1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgU2Vnb2UgU2NyaXB0IENFO317XGYxMjI2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgU2Vnb2UgU2NyaXB0IEN5cjt9e1xmMTIyOFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIFNlZ29lIFNjcmlwdCBHcmVlazt9e1xmMTIyOVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIFNlZ29lIFNjcmlwdCBUdXI7fQ0Ke1xmMTIzMlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTg2XGZwcnEyIFNlZ29lIFNjcmlwdCBCYWx0aWM7fXtcZjEyMzVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIzOFxmcHJxMiBTZWdvZSBVSSBDRTt9e1xmMTIzNlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjA0XGZwcnEyIFNlZ29lIFVJIEN5cjt9e1xmMTIzOFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIFNlZ29lIFVJIEdyZWVrO30NCntcZjEyMzlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBTZWdvZSBVSSBUdXI7fXtcZjEyNDFcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE3OFxmcHJxMiBTZWdvZSBVSSAoQXJhYmljKTt9e1xmMTI0MlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTg2XGZwcnEyIFNlZ29lIFVJIEJhbHRpYzt9e1xmMTI0M1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYzXGZwcnEyIFNlZ29lIFVJIChWaWV0bmFtZXNlKTt9DQp7XGYxMjQ1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgU2Vnb2UgVUkgU2VtaWJvbGQgQ0U7fXtcZjEyNDZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBTZWdvZSBVSSBTZW1pYm9sZCBDeXI7fXtcZjEyNDhcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBTZWdvZSBVSSBTZW1pYm9sZCBHcmVlazt9e1xmMTI0OVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIFNlZ29lIFVJIFNlbWlib2xkIFR1cjt9DQp7XGYxMjUyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgU2Vnb2UgVUkgU2VtaWJvbGQgQmFsdGljO317XGYxMjUzXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjNcZnBycTIgU2Vnb2UgVUkgU2VtaWJvbGQgKFZpZXRuYW1lc2UpO317XGYxMjU1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgU2Vnb2UgVUkgTGlnaHQgQ0U7fQ0Ke1xmMTI1NlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjA0XGZwcnEyIFNlZ29lIFVJIExpZ2h0IEN5cjt9e1xmMTI1OFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIFNlZ29lIFVJIExpZ2h0IEdyZWVrO317XGYxMjU5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgU2Vnb2UgVUkgTGlnaHQgVHVyO317XGYxMjYyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgU2Vnb2UgVUkgTGlnaHQgQmFsdGljO30NCntcZjEyNjNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2M1xmcHJxMiBTZWdvZSBVSSBMaWdodCAoVmlldG5hbWVzZSk7fXtcZjEyNzdcZmJpZGkgXGZuaWxcZmNoYXJzZXQwXGZwcnEyIEBTaW1TdW4gV2VzdGVybjt9e1xmMTI4N1xmYmlkaSBcZm1vZGVyblxmY2hhcnNldDBcZnBycTEgTlNpbVN1biBXZXN0ZXJuO317XGYxMjk3XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MFxmcHJxMSBATlNpbVN1biBXZXN0ZXJuO30NCntcZjEzMDdcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQwXGZwcnExIFNpbVN1bi1FeHRCIFdlc3Rlcm47fXtcZjEzMTdcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQwXGZwcnExIEBTaW1TdW4tRXh0QiBXZXN0ZXJuO317XGYxMzU1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgTWljcm9zb2Z0IFNhbnMgU2VyaWYgQ0U7fXtcZjEzNTZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBNaWNyb3NvZnQgU2FucyBTZXJpZiBDeXI7fQ0Ke1xmMTM1OFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIE1pY3Jvc29mdCBTYW5zIFNlcmlmIEdyZWVrO317XGYxMzU5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgTWljcm9zb2Z0IFNhbnMgU2VyaWYgVHVyO317XGYxMzYwXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNzdcZnBycTIgTWljcm9zb2Z0IFNhbnMgU2VyaWYgKEhlYnJldyk7fQ0Ke1xmMTM2MVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTc4XGZwcnEyIE1pY3Jvc29mdCBTYW5zIFNlcmlmIChBcmFiaWMpO317XGYxMzYyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgTWljcm9zb2Z0IFNhbnMgU2VyaWYgQmFsdGljO317XGYxMzYzXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjNcZnBycTIgTWljcm9zb2Z0IFNhbnMgU2VyaWYgKFZpZXRuYW1lc2UpO30NCntcZjEzNjRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIyMlxmcHJxMiBNaWNyb3NvZnQgU2FucyBTZXJpZiAoVGhhaSk7fXtcZjEzNzVcZmJpZGkgXGZuaWxcZmNoYXJzZXQyMzhcZnBycTIgRWJyaW1hIENFO317XGYxMzc5XGZiaWRpIFxmbmlsXGZjaGFyc2V0MTYyXGZwcnEyIEVicmltYSBUdXI7fXtcZjEzODJcZmJpZGkgXGZuaWxcZmNoYXJzZXQxODZcZnBycTIgRWJyaW1hIEJhbHRpYzt9DQp7XGYxMzkwXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNzdcZnBycTIgR2lzaGEgKEhlYnJldyk7fXtcZjE0MTRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIyMlxmcHJxMiBMZWVsYXdhZGVlIChUaGFpKTt9e1xmMTQyMVxmYmlkaSBcZm5pbFxmY2hhcnNldDE3OFxmcHJxMiBNaWNyb3NvZnQgVWlnaHVyIChBcmFiaWMpO317XGYxNDYxXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNzhcZnBycTIgQW5kYWx1cyAoQXJhYmljKTt9DQp7XGYxNDY1XGZiaWRpIFxmc2NyaXB0XGZjaGFyc2V0MjM4XGZwcnEyIEFyYWJpYyBUeXBlc2V0dGluZyBDRTt9e1xmMTQ2OVxmYmlkaSBcZnNjcmlwdFxmY2hhcnNldDE2MlxmcHJxMiBBcmFiaWMgVHlwZXNldHRpbmcgVHVyO317XGYxNDcxXGZiaWRpIFxmc2NyaXB0XGZjaGFyc2V0MTc4XGZwcnEyIEFyYWJpYyBUeXBlc2V0dGluZyAoQXJhYmljKTt9DQp7XGYxNDcyXGZiaWRpIFxmc2NyaXB0XGZjaGFyc2V0MTg2XGZwcnEyIEFyYWJpYyBUeXBlc2V0dGluZyBCYWx0aWM7fXtcZjE0ODFcZmJpZGkgXGZyb21hblxmY2hhcnNldDE3OFxmcHJxMiBTaW1wbGlmaWVkIEFyYWJpYyAoQXJhYmljKTt9e1xmMTQ5MVxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDE3OFxmcHJxMSBTaW1wbGlmaWVkIEFyYWJpYyBGaXhlZCAoQXJhYmljKTt9DQp7XGYxNDk1XGZiaWRpIFxmbmlsXGZjaGFyc2V0MjM4XGZwcnEyIFNha2thbCBNYWphbGxhIENFO317XGYxNDk5XGZiaWRpIFxmbmlsXGZjaGFyc2V0MTYyXGZwcnEyIFNha2thbCBNYWphbGxhIFR1cjt9e1xmMTUwMVxmYmlkaSBcZm5pbFxmY2hhcnNldDE3OFxmcHJxMiBTYWtrYWwgTWFqYWxsYSAoQXJhYmljKTt9e1xmMTUwMlxmYmlkaSBcZm5pbFxmY2hhcnNldDE4NlxmcHJxMiBTYWtrYWwgTWFqYWxsYSBCYWx0aWM7fQ0Ke1xmMTUxMVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc4XGZwcnEyIFRyYWRpdGlvbmFsIEFyYWJpYyAoQXJhYmljKTt9e1xmMTU5N1xmYmlkaSBcZm1vZGVyblxmY2hhcnNldDBcZnBycTEgRmFuZ1NvbmcgV2VzdGVybjt9e1xmMTYwN1xmYmlkaSBcZm1vZGVyblxmY2hhcnNldDBcZnBycTEgQEZhbmdTb25nIFdlc3Rlcm47fXtcZjE2MTdcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQwXGZwcnExIEBTaW1IZWkgV2VzdGVybjt9DQp7XGYxNjI3XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MFxmcHJxMSBLYWlUaSBXZXN0ZXJuO317XGYxNjM3XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MFxmcHJxMSBAS2FpVGkgV2VzdGVybjt9e1xmMTY1NFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjIyXGZwcnEyIEFuZ3NhbmFVUEMgKFRoYWkpO317XGYxNjY0XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMjJcZnBycTIgQnJvd2FsbGlhIE5ldyAoVGhhaSk7fQ0Ke1xmMTY3NFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjIyXGZwcnEyIEJyb3dhbGxpYVVQQyAoVGhhaSk7fXtcZjE2ODRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIyMlxmcHJxMiBDb3JkaWFVUEMgKFRoYWkpO317XGYxNjk0XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMjJcZnBycTIgRGlsbGVuaWFVUEMgKFRoYWkpO317XGYxNzA0XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMjJcZnBycTIgRXVjcm9zaWFVUEMgKFRoYWkpO30NCntcZjE3MTRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIyMlxmcHJxMiBGcmVlc2lhVVBDIChUaGFpKTt9e1xmMTcyNFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjIyXGZwcnEyIElyaXNVUEMgKFRoYWkpO317XGYxNzM0XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMjJcZnBycTIgSmFzbWluZVVQQyAoVGhhaSk7fXtcZjE3NDRcZmJpZGkgXGZyb21hblxmY2hhcnNldDIyMlxmcHJxMiBLb2RjaGlhbmdVUEMgKFRoYWkpO30NCntcZjE3NTRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIyMlxmcHJxMiBMaWx5VVBDIChUaGFpKTt9e1xmMTc1N1xmYmlkaSBcZnNjcmlwdFxmY2hhcnNldDBcZnBycTEgREZLYWktU0IgV2VzdGVybjt9e1xmMTc2N1xmYmlkaSBcZnNjcmlwdFxmY2hhcnNldDBcZnBycTEgQERGS2FpLVNCIFdlc3Rlcm47fXtcZjE3NzVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIzOFxmcHJxMiBMdWNpZGEgU2FucyBVbmljb2RlIENFO30NCntcZjE3NzZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBMdWNpZGEgU2FucyBVbmljb2RlIEN5cjt9e1xmMTc3OFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIEx1Y2lkYSBTYW5zIFVuaWNvZGUgR3JlZWs7fXtcZjE3NzlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBMdWNpZGEgU2FucyBVbmljb2RlIFR1cjt9DQp7XGYxNzgwXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNzdcZnBycTIgTHVjaWRhIFNhbnMgVW5pY29kZSAoSGVicmV3KTt9e1xmMTc4MlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTg2XGZwcnEyIEx1Y2lkYSBTYW5zIFVuaWNvZGUgQmFsdGljO317XGYxNzg1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgQXJpYWwgQmxhY2sgQ0U7fXtcZjE3ODZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBBcmlhbCBCbGFjayBDeXI7fQ0Ke1xmMTc4OFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIEFyaWFsIEJsYWNrIEdyZWVrO317XGYxNzg5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgQXJpYWwgQmxhY2sgVHVyO317XGYxNzkyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgQXJpYWwgQmxhY2sgQmFsdGljO317XGYxNzk1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgQ2FuZGFyYSBDRTt9DQp7XGYxNzk2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgQ2FuZGFyYSBDeXI7fXtcZjE3OThcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBDYW5kYXJhIEdyZWVrO317XGYxNzk5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgQ2FuZGFyYSBUdXI7fXtcZjE4MDJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE4NlxmcHJxMiBDYW5kYXJhIEJhbHRpYzt9DQp7XGYxODAzXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjNcZnBycTIgQ2FuZGFyYSAoVmlldG5hbWVzZSk7fXtcZjE4MDVcZmJpZGkgXGZzY3JpcHRcZmNoYXJzZXQyMzhcZnBycTIgQ29taWMgU2FucyBNUyBDRTt9e1xmMTgwNlxmYmlkaSBcZnNjcmlwdFxmY2hhcnNldDIwNFxmcHJxMiBDb21pYyBTYW5zIE1TIEN5cjt9e1xmMTgwOFxmYmlkaSBcZnNjcmlwdFxmY2hhcnNldDE2MVxmcHJxMiBDb21pYyBTYW5zIE1TIEdyZWVrO30NCntcZjE4MDlcZmJpZGkgXGZzY3JpcHRcZmNoYXJzZXQxNjJcZnBycTIgQ29taWMgU2FucyBNUyBUdXI7fXtcZjE4MTJcZmJpZGkgXGZzY3JpcHRcZmNoYXJzZXQxODZcZnBycTIgQ29taWMgU2FucyBNUyBCYWx0aWM7fXtcZjE4MTVcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQyMzhcZnBycTEgQ29uc29sYXMgQ0U7fXtcZjE4MTZcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQyMDRcZnBycTEgQ29uc29sYXMgQ3lyO30NCntcZjE4MThcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxNjFcZnBycTEgQ29uc29sYXMgR3JlZWs7fXtcZjE4MTlcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxNjJcZnBycTEgQ29uc29sYXMgVHVyO317XGYxODIyXGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTg2XGZwcnExIENvbnNvbGFzIEJhbHRpYzt9e1xmMTgyM1xmYmlkaSBcZm1vZGVyblxmY2hhcnNldDE2M1xmcHJxMSBDb25zb2xhcyAoVmlldG5hbWVzZSk7fQ0Ke1xmMTgyNVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjM4XGZwcnEyIENvbnN0YW50aWEgQ0U7fXtcZjE4MjZcZmJpZGkgXGZyb21hblxmY2hhcnNldDIwNFxmcHJxMiBDb25zdGFudGlhIEN5cjt9e1xmMTgyOFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYxXGZwcnEyIENvbnN0YW50aWEgR3JlZWs7fXtcZjE4MjlcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MlxmcHJxMiBDb25zdGFudGlhIFR1cjt9DQp7XGYxODMyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxODZcZnBycTIgQ29uc3RhbnRpYSBCYWx0aWM7fXtcZjE4MzNcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2M1xmcHJxMiBDb25zdGFudGlhIChWaWV0bmFtZXNlKTt9e1xmMTgzNVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjM4XGZwcnEyIENvcmJlbCBDRTt9e1xmMTgzNlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjA0XGZwcnEyIENvcmJlbCBDeXI7fQ0Ke1xmMTgzOFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIENvcmJlbCBHcmVlazt9e1xmMTgzOVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIENvcmJlbCBUdXI7fXtcZjE4NDJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE4NlxmcHJxMiBDb3JiZWwgQmFsdGljO317XGYxODQzXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjNcZnBycTIgQ29yYmVsIChWaWV0bmFtZXNlKTt9DQp7XGYxODQ1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgRnJhbmtsaW4gR290aGljIE1lZGl1bSBDRTt9e1xmMTg0NlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjA0XGZwcnEyIEZyYW5rbGluIEdvdGhpYyBNZWRpdW0gQ3lyO317XGYxODQ4XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgRnJhbmtsaW4gR290aGljIE1lZGl1bSBHcmVlazt9DQp7XGYxODQ5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgRnJhbmtsaW4gR290aGljIE1lZGl1bSBUdXI7fXtcZjE4NTJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE4NlxmcHJxMiBGcmFua2xpbiBHb3RoaWMgTWVkaXVtIEJhbHRpYzt9e1xmMTg1NVxmYmlkaSBcZmRlY29yXGZjaGFyc2V0MjM4XGZwcnEyIEdhYnJpb2xhIENFO317XGYxODU2XGZiaWRpIFxmZGVjb3JcZmNoYXJzZXQyMDRcZnBycTIgR2FicmlvbGEgQ3lyO30NCntcZjE4NThcZmJpZGkgXGZkZWNvclxmY2hhcnNldDE2MVxmcHJxMiBHYWJyaW9sYSBHcmVlazt9e1xmMTg1OVxmYmlkaSBcZmRlY29yXGZjaGFyc2V0MTYyXGZwcnEyIEdhYnJpb2xhIFR1cjt9e1xmMTg2MlxmYmlkaSBcZmRlY29yXGZjaGFyc2V0MTg2XGZwcnEyIEdhYnJpb2xhIEJhbHRpYzt9e1xmMTg2NVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjM4XGZwcnEyIEdlb3JnaWEgQ0U7fQ0Ke1xmMTg2NlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjA0XGZwcnEyIEdlb3JnaWEgQ3lyO317XGYxODY4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjFcZnBycTIgR2VvcmdpYSBHcmVlazt9e1xmMTg2OVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYyXGZwcnEyIEdlb3JnaWEgVHVyO317XGYxODcyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxODZcZnBycTIgR2VvcmdpYSBCYWx0aWM7fQ0Ke1xmMTg3NVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjM4XGZwcnEyIFBhbGF0aW5vIExpbm90eXBlIENFO317XGYxODc2XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgUGFsYXRpbm8gTGlub3R5cGUgQ3lyO317XGYxODc4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjFcZnBycTIgUGFsYXRpbm8gTGlub3R5cGUgR3JlZWs7fXtcZjE4NzlcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MlxmcHJxMiBQYWxhdGlubyBMaW5vdHlwZSBUdXI7fQ0Ke1xmMTg4MlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTg2XGZwcnEyIFBhbGF0aW5vIExpbm90eXBlIEJhbHRpYzt9e1xmMTg4M1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYzXGZwcnEyIFBhbGF0aW5vIExpbm90eXBlIChWaWV0bmFtZXNlKTt9e1xmMTg4NVxmYmlkaSBcZm5pbFxmY2hhcnNldDIzOFxmcHJxMiBTZWdvZSBQcmludCBDRTt9e1xmMTg4NlxmYmlkaSBcZm5pbFxmY2hhcnNldDIwNFxmcHJxMiBTZWdvZSBQcmludCBDeXI7fQ0Ke1xmMTg4OFxmYmlkaSBcZm5pbFxmY2hhcnNldDE2MVxmcHJxMiBTZWdvZSBQcmludCBHcmVlazt9e1xmMTg4OVxmYmlkaSBcZm5pbFxmY2hhcnNldDE2MlxmcHJxMiBTZWdvZSBQcmludCBUdXI7fXtcZjE4OTJcZmJpZGkgXGZuaWxcZmNoYXJzZXQxODZcZnBycTIgU2Vnb2UgUHJpbnQgQmFsdGljO317XGYxODk1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgVHJlYnVjaGV0IE1TIENFO30NCntcZjE4OTZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBUcmVidWNoZXQgTVMgQ3lyO317XGYxODk4XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgVHJlYnVjaGV0IE1TIEdyZWVrO317XGYxODk5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgVHJlYnVjaGV0IE1TIFR1cjt9e1xmMTkwMlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTg2XGZwcnEyIFRyZWJ1Y2hldCBNUyBCYWx0aWM7fQ0Ke1xmMTkwNVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjM4XGZwcnEyIFZlcmRhbmEgQ0U7fXtcZjE5MDZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBWZXJkYW5hIEN5cjt9e1xmMTkwOFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIFZlcmRhbmEgR3JlZWs7fXtcZjE5MDlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBWZXJkYW5hIFR1cjt9DQp7XGYxOTEyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgVmVyZGFuYSBCYWx0aWM7fXtcZjE5MTNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2M1xmcHJxMiBWZXJkYW5hIChWaWV0bmFtZXNlKTt9e1xmMTkyNVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjM4XGZwcnEyIENhbGlicmkgTGlnaHQgQ0U7fXtcZjE5MjZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBDYWxpYnJpIExpZ2h0IEN5cjt9DQp7XGYxOTI4XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgQ2FsaWJyaSBMaWdodCBHcmVlazt9e1xmMTkyOVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIENhbGlicmkgTGlnaHQgVHVyO317XGYxOTMyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgQ2FsaWJyaSBMaWdodCBCYWx0aWM7fXtcZjE5MzNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2M1xmcHJxMiBDYWxpYnJpIExpZ2h0IChWaWV0bmFtZXNlKTt9DQp7XGYxOTY3XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEyIEBBcmlhbCBVbmljb2RlIE1TIFdlc3Rlcm47fXtcZjE5NjVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIzOFxmcHJxMiBAQXJpYWwgVW5pY29kZSBNUyBDRTt9e1xmMTk2NlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjA0XGZwcnEyIEBBcmlhbCBVbmljb2RlIE1TIEN5cjt9e1xmMTk2OFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIEBBcmlhbCBVbmljb2RlIE1TIEdyZWVrO30NCntcZjE5NjlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBAQXJpYWwgVW5pY29kZSBNUyBUdXI7fXtcZjE5NzBcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE3N1xmcHJxMiBAQXJpYWwgVW5pY29kZSBNUyAoSGVicmV3KTt9e1xmMTk3MVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTc4XGZwcnEyIEBBcmlhbCBVbmljb2RlIE1TIChBcmFiaWMpO30NCntcZjE5NzJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE4NlxmcHJxMiBAQXJpYWwgVW5pY29kZSBNUyBCYWx0aWM7fXtcZjE5NzNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2M1xmcHJxMiBAQXJpYWwgVW5pY29kZSBNUyAoVmlldG5hbWVzZSk7fXtcZjE5NzRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIyMlxmcHJxMiBAQXJpYWwgVW5pY29kZSBNUyAoVGhhaSk7fQ0Ke1xmMTk3NVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjM4XGZwcnEyIEJvb2sgQW50aXF1YSBDRTt9e1xmMTk3NlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjA0XGZwcnEyIEJvb2sgQW50aXF1YSBDeXI7fXtcZjE5NzhcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MVxmcHJxMiBCb29rIEFudGlxdWEgR3JlZWs7fXtcZjE5NzlcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MlxmcHJxMiBCb29rIEFudGlxdWEgVHVyO30NCntcZjE5ODJcZmJpZGkgXGZyb21hblxmY2hhcnNldDE4NlxmcHJxMiBCb29rIEFudGlxdWEgQmFsdGljO317XGYxOTg1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgQ2VudHVyeSBHb3RoaWMgQ0U7fXtcZjE5ODZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBDZW50dXJ5IEdvdGhpYyBDeXI7fXtcZjE5ODhcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBDZW50dXJ5IEdvdGhpYyBHcmVlazt9DQp7XGYxOTg5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgQ2VudHVyeSBHb3RoaWMgVHVyO317XGYxOTkyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgQ2VudHVyeSBHb3RoaWMgQmFsdGljO317XGYxOTk1XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMzhcZnBycTIgQm9va21hbiBPbGQgU3R5bGUgQ0U7fXtcZjE5OTZcZmJpZGkgXGZyb21hblxmY2hhcnNldDIwNFxmcHJxMiBCb29rbWFuIE9sZCBTdHlsZSBDeXI7fQ0Ke1xmMTk5OFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYxXGZwcnEyIEJvb2ttYW4gT2xkIFN0eWxlIEdyZWVrO317XGYxOTk5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjJcZnBycTIgQm9va21hbiBPbGQgU3R5bGUgVHVyO317XGYyMDAyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxODZcZnBycTIgQm9va21hbiBPbGQgU3R5bGUgQmFsdGljO30NCntcZjIwMTVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIzOFxmcHJxMiBNUyBSZWZlcmVuY2UgU2FucyBTZXJpZiBDRTt9e1xmMjAxNlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjA0XGZwcnEyIE1TIFJlZmVyZW5jZSBTYW5zIFNlcmlmIEN5cjt9e1xmMjAxOFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIE1TIFJlZmVyZW5jZSBTYW5zIFNlcmlmIEdyZWVrO30NCntcZjIwMTlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBNUyBSZWZlcmVuY2UgU2FucyBTZXJpZiBUdXI7fXtcZjIwMjJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE4NlxmcHJxMiBNUyBSZWZlcmVuY2UgU2FucyBTZXJpZiBCYWx0aWM7fXtcZjIwMjNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2M1xmcHJxMiBNUyBSZWZlcmVuY2UgU2FucyBTZXJpZiAoVmlldG5hbWVzZSk7fQ0Ke1xmbG9tYWpvclxmMzE1MDhcZmJpZGkgXGZyb21hblxmY2hhcnNldDIzOFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQ0U7fXtcZmxvbWFqb3JcZjMxNTA5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgVGltZXMgTmV3IFJvbWFuIEN5cjt9e1xmbG9tYWpvclxmMzE1MTFcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MVxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gR3JlZWs7fQ0Ke1xmbG9tYWpvclxmMzE1MTJcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MlxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gVHVyO317XGZsb21ham9yXGYzMTUxM1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc3XGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoSGVicmV3KTt9e1xmbG9tYWpvclxmMzE1MTRcZmJpZGkgXGZyb21hblxmY2hhcnNldDE3OFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKEFyYWJpYyk7fQ0Ke1xmbG9tYWpvclxmMzE1MTVcZmJpZGkgXGZyb21hblxmY2hhcnNldDE4NlxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQmFsdGljO317XGZsb21ham9yXGYzMTUxNlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYzXGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoVmlldG5hbWVzZSk7fXtcZmRibWFqb3JcZjMxNTE4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMzhcZnBycTIgVGltZXMgTmV3IFJvbWFuIENFO30NCntcZmRibWFqb3JcZjMxNTE5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgVGltZXMgTmV3IFJvbWFuIEN5cjt9e1xmZGJtYWpvclxmMzE1MjFcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MVxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gR3JlZWs7fXtcZmRibWFqb3JcZjMxNTIyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjJcZnBycTIgVGltZXMgTmV3IFJvbWFuIFR1cjt9DQp7XGZkYm1ham9yXGYzMTUyM1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc3XGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoSGVicmV3KTt9e1xmZGJtYWpvclxmMzE1MjRcZmJpZGkgXGZyb21hblxmY2hhcnNldDE3OFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKEFyYWJpYyk7fXtcZmRibWFqb3JcZjMxNTI1XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxODZcZnBycTIgVGltZXMgTmV3IFJvbWFuIEJhbHRpYzt9DQp7XGZkYm1ham9yXGYzMTUyNlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYzXGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoVmlldG5hbWVzZSk7fXtcZmhpbWFqb3JcZjMxNTI4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMzhcZnBycTIgQ2FtYnJpYSBDRTt9e1xmaGltYWpvclxmMzE1MjlcZmJpZGkgXGZyb21hblxmY2hhcnNldDIwNFxmcHJxMiBDYW1icmlhIEN5cjt9DQp7XGZoaW1ham9yXGYzMTUzMVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYxXGZwcnEyIENhbWJyaWEgR3JlZWs7fXtcZmhpbWFqb3JcZjMxNTMyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjJcZnBycTIgQ2FtYnJpYSBUdXI7fXtcZmhpbWFqb3JcZjMxNTM1XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxODZcZnBycTIgQ2FtYnJpYSBCYWx0aWM7fQ0Ke1xmaGltYWpvclxmMzE1MzZcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2M1xmcHJxMiBDYW1icmlhIChWaWV0bmFtZXNlKTt9e1xmYmltYWpvclxmMzE1MzhcZmJpZGkgXGZyb21hblxmY2hhcnNldDIzOFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQ0U7fXtcZmJpbWFqb3JcZjMxNTM5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgVGltZXMgTmV3IFJvbWFuIEN5cjt9DQp7XGZiaW1ham9yXGYzMTU0MVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYxXGZwcnEyIFRpbWVzIE5ldyBSb21hbiBHcmVlazt9e1xmYmltYWpvclxmMzE1NDJcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MlxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gVHVyO317XGZiaW1ham9yXGYzMTU0M1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc3XGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoSGVicmV3KTt9DQp7XGZiaW1ham9yXGYzMTU0NFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc4XGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoQXJhYmljKTt9e1xmYmltYWpvclxmMzE1NDVcZmJpZGkgXGZyb21hblxmY2hhcnNldDE4NlxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQmFsdGljO317XGZiaW1ham9yXGYzMTU0NlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYzXGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoVmlldG5hbWVzZSk7fQ0Ke1xmbG9taW5vclxmMzE1NDhcZmJpZGkgXGZyb21hblxmY2hhcnNldDIzOFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQ0U7fXtcZmxvbWlub3JcZjMxNTQ5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgVGltZXMgTmV3IFJvbWFuIEN5cjt9e1xmbG9taW5vclxmMzE1NTFcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MVxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gR3JlZWs7fQ0Ke1xmbG9taW5vclxmMzE1NTJcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MlxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gVHVyO317XGZsb21pbm9yXGYzMTU1M1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc3XGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoSGVicmV3KTt9e1xmbG9taW5vclxmMzE1NTRcZmJpZGkgXGZyb21hblxmY2hhcnNldDE3OFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKEFyYWJpYyk7fQ0Ke1xmbG9taW5vclxmMzE1NTVcZmJpZGkgXGZyb21hblxmY2hhcnNldDE4NlxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQmFsdGljO317XGZsb21pbm9yXGYzMTU1NlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYzXGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoVmlldG5hbWVzZSk7fXtcZmRibWlub3JcZjMxNTU4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMzhcZnBycTIgVGltZXMgTmV3IFJvbWFuIENFO30NCntcZmRibWlub3JcZjMxNTU5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgVGltZXMgTmV3IFJvbWFuIEN5cjt9e1xmZGJtaW5vclxmMzE1NjFcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MVxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gR3JlZWs7fXtcZmRibWlub3JcZjMxNTYyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjJcZnBycTIgVGltZXMgTmV3IFJvbWFuIFR1cjt9DQp7XGZkYm1pbm9yXGYzMTU2M1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc3XGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoSGVicmV3KTt9e1xmZGJtaW5vclxmMzE1NjRcZmJpZGkgXGZyb21hblxmY2hhcnNldDE3OFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKEFyYWJpYyk7fXtcZmRibWlub3JcZjMxNTY1XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxODZcZnBycTIgVGltZXMgTmV3IFJvbWFuIEJhbHRpYzt9DQp7XGZkYm1pbm9yXGYzMTU2NlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYzXGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoVmlldG5hbWVzZSk7fXtcZmhpbWlub3JcZjMxNTY4XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgQ2FsaWJyaSBDRTt9e1xmaGltaW5vclxmMzE1NjlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBDYWxpYnJpIEN5cjt9DQp7XGZoaW1pbm9yXGYzMTU3MVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIENhbGlicmkgR3JlZWs7fXtcZmhpbWlub3JcZjMxNTcyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgQ2FsaWJyaSBUdXI7fXtcZmhpbWlub3JcZjMxNTc1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgQ2FsaWJyaSBCYWx0aWM7fQ0Ke1xmaGltaW5vclxmMzE1NzZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2M1xmcHJxMiBDYWxpYnJpIChWaWV0bmFtZXNlKTt9e1xmYmltaW5vclxmMzE1NzhcZmJpZGkgXGZyb21hblxmY2hhcnNldDIzOFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQ0U7fXtcZmJpbWlub3JcZjMxNTc5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgVGltZXMgTmV3IFJvbWFuIEN5cjt9DQp7XGZiaW1pbm9yXGYzMTU4MVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYxXGZwcnEyIFRpbWVzIE5ldyBSb21hbiBHcmVlazt9e1xmYmltaW5vclxmMzE1ODJcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MlxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gVHVyO317XGZiaW1pbm9yXGYzMTU4M1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc3XGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoSGVicmV3KTt9DQp7XGZiaW1pbm9yXGYzMTU4NFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc4XGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoQXJhYmljKTt9e1xmYmltaW5vclxmMzE1ODVcZmJpZGkgXGZyb21hblxmY2hhcnNldDE4NlxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQmFsdGljO317XGZiaW1pbm9yXGYzMTU4NlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYzXGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoVmlldG5hbWVzZSk7fX0NCntcY29sb3J0Ymw7XHJlZDBcZ3JlZW4wXGJsdWUwO1xyZWQwXGdyZWVuMFxibHVlMjU1O1xyZWQwXGdyZWVuMjU1XGJsdWUyNTU7XHJlZDBcZ3JlZW4yNTVcYmx1ZTA7XHJlZDI1NVxncmVlbjBcYmx1ZTI1NTtccmVkMjU1XGdyZWVuMFxibHVlMDtccmVkMjU1XGdyZWVuMjU1XGJsdWUwO1xyZWQyNTVcZ3JlZW4yNTVcYmx1ZTI1NTtccmVkMFxncmVlbjBcYmx1ZTEyODtccmVkMFxncmVlbjEyOFxibHVlMTI4O1xyZWQwXGdyZWVuMTI4XGJsdWUwOw0KXHJlZDEyOFxncmVlbjBcYmx1ZTEyODtccmVkMTI4XGdyZWVuMFxibHVlMDtccmVkMTI4XGdyZWVuMTI4XGJsdWUwO1xyZWQxMjhcZ3JlZW4xMjhcYmx1ZTEyODtccmVkMTkyXGdyZWVuMTkyXGJsdWUxOTI7XHJlZDI1NVxncmVlbjI1NVxibHVlMjU1O1xjaHlwZXJsaW5rXGN0aW50MjU1XGNzaGFkZTI1NVxyZWQwXGdyZWVuMFxibHVlMjU1O317XCpcZGVmY2hwIH17XCpcZGVmcGFwIA0KXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCB9XG5vcWZwcm9tb3RlIHtcc3R5bGVzaGVldHtccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc25leHQwIFxzcWZvcm1hdCBcc3ByaW9yaXR5MCBcc3R5cnNpZDIxNzY3MzYgTm9ybWFsO317XHMxXHFjIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSANClxhYlxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDE1IFxzbGluazU4IFxzcWZvcm1hdCBcc3ByaW9yaXR5MCBcc3R5cnNpZDIxNzY3MzYgaGVhZGluZyAxO317XHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MTUgXHNsaW5rNTkgXHNxZm9ybWF0IFxzcHJpb3JpdHkwIFxzdHlyc2lkMjE3NjczNiBoZWFkaW5nIDIsSGVhZGluZyAyIENoYXIxLEhlYWRpbmcgMiBDaGFyIENoYXIsSGVhZGluZyAyIENoYXIyLEhlYWRpbmcgMiBDaGFyIENoYXIxLEhlYWRpbmcgMiBDaGFyMSBDaGFyIENoYXIsSGVhZGluZyAyIENoYXIgQ2hhciBDaGFyIENoYXIsSGVhZGluZyAyIENoYXIxIENoYXIxLEhlYWRpbmcgMiBDaGFyIENoYXIgQ2hhcjE7fQ0Ke1xzM1xxaiBcZmk3MjBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHgyMTYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwyXG91dGxpbmVsZXZlbDJcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyNlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MTUgXHNsaW5rNjAgXHNxZm9ybWF0IFxzcHJpb3JpdHkwIFxzdHlyc2lkMjE3NjczNiBoZWFkaW5nIDM7fXtcczRccWogXGZpNzIwXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4MjE2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsM1xvdXRsaW5lbGV2ZWwzXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwIFxydGxjaFxmY3MxIA0KXGFiXGFmMFxhZnMyOFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDE1IFxzbGluazYxIFxzcWZvcm1hdCBcc3ByaW9yaXR5MCBcc3R5cnNpZDIxNzY3MzYgaGVhZGluZyA0O317XHM1XHFsIFxmaS03MjBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDcyMFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsNFxvdXRsaW5lbGV2ZWw0XGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjBcYWZzMjZcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MTUgXHNsaW5rNjIgXHNxZm9ybWF0IFxzcHJpb3JpdHkwIFxzdHlyc2lkMjE3NjczNiBoZWFkaW5nIDU7fXtcczZccWogXGZpLTcyMFxsaTE0NDBccmkwXHNhMjQwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmw1XG91dGxpbmVsZXZlbDVcYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwIFxydGxjaFxmY3MxIA0KXGFiXGFmMFxhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MTUgXHNsaW5rNTIgXHNxZm9ybWF0IFxzcHJpb3JpdHkwIFxzdHlyc2lkMjE3NjczNiBoZWFkaW5nIDY7fXtcczdccWogXGZpLTcyMFxsaTIxNjBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDIxNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDZcb3V0bGluZWxldmVsNlxhZGp1c3RyaWdodFxyaW4wXGxpbjIxNjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMCBcc25leHQxNSBcc2xpbms2MyBcc3Fmb3JtYXQgXHNwcmlvcml0eTAgXHN0eXJzaWQyMTc2NzM2IGhlYWRpbmcgNzt9e1xzOFxxaiBcbGkxNDQwXHJpMFxzYTI0MFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4MjE2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsN1xvdXRsaW5lbGV2ZWw3XGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMCBccnRsY2hcZmNzMSANClxhaVxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQxNSBcc2xpbms2NCBcc3Fmb3JtYXQgXHNwcmlvcml0eTAgXHN0eXJzaWQyMTc2NzM2IGhlYWRpbmcgODt9e1xzOVxxaiBcbGkyMTYwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgyODgwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmw4XG91dGxpbmVsZXZlbDhcYWRqdXN0cmlnaHRccmluMFxsaW4yMTYwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjFcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24wIFxzbmV4dDE1IFxzbGluazY1IFxzcWZvcm1hdCBcc3ByaW9yaXR5MCBcc3R5cnNpZDIxNzY3MzYgaGVhZGluZyA5O317XCpcY3MxMCBcYWRkaXRpdmUgXHNzZW1paGlkZGVuIFxzdW5oaWRldXNlZCBcc3ByaW9yaXR5MSBEZWZhdWx0IFBhcmFncmFwaCBGb250O317XCoNClx0czExXHRzcm93ZFx0cmZ0c1dpZHRoQjNcdHJwYWRkbDEwOFx0cnBhZGRyMTA4XHRycGFkZGZsM1x0cnBhZGRmdDNcdHJwYWRkZmIzXHRycGFkZGZyM1x0YmxpbmQwXHRibGluZHR5cGUzXHRzY2VsbHdpZHRoZnRzMFx0c3ZlcnRhbHRcdHNicmRydFx0c2JyZHJsXHRzYnJkcmJcdHNicmRyclx0c2JyZHJkZ2xcdHNicmRyZGdyXHRzYnJkcmhcdHNicmRydiANClxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjBcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc25leHQxMSBcc3NlbWloaWRkZW4gXHN1bmhpZGV1c2VkIFxzcWZvcm1hdCBOb3JtYWwgVGFibGU7fXsNClxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQxNSBcc2xpbms0NCBcc3ByaW9yaXR5MCBcc3R5cnNpZDIxNzY3MzYgDQpCb2R5IFRleHQ7fXtcczE2XHFsIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMCBcc25leHQxNiBcc3ByaW9yaXR5MCBcc3R5cnNpZDIxNzY3MzYgQm9keSBUZXh0IDM7fXtcczE3XHFqIFxmaTc0MVxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMTUgXHNuZXh0MTcgXHNsaW5rMTE5IFxzcHJpb3JpdHkwIFxzdHlyc2lkMjE3NjczNiBCb2R5IFRleHQgRmlyc3QgSW5kZW50O317XHMxOFxxaiBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwIFxydGxjaFxmY3MxIA0KXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDE4IFxzcHJpb3JpdHkwIFxzdHlyc2lkMjE3NjczNiBCb2R5IFRleHQgSW5kZW50O317DQpcczE5XHFqIFxmaTE0NDBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24xOCBcc25leHQxOSBcc3ByaW9yaXR5MCBcc3R5cnNpZDIxNzY3MzYgQm9keSBUZXh0IEZpcnN0IEluZGVudCAyO317XHMyMFxxaiBcZmk3MDVcbGk3MjBccmkwXHNhMTIwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDIwIFxzcHJpb3JpdHkwIFxzdHlyc2lkMjE3NjczNiBCb2R5IFRleHQgSW5kZW50IDI7fXtcczIxXHFsIFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDAgXHJ0bGNoXGZjczEgDQpcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MjEgXHNwcmlvcml0eTAgXHN0eXJzaWQyMTc2NzM2IEJvZHkgVGV4dCBJbmRlbnQgMzt9e1xzMjJccWwgXGxpMFxyaTBcd2lkY3RscGFyDQpcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMTZcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczE2XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQyMiBcc2xpbms0MyBcc3R5cnNpZDIxNzY3MzYgZm9vdGVyO317DQpcczIzXHFsIFxsaTBccmkwXHdpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MjMgXHNsaW5rNzEgXHN0eXJzaWQyMTc2NzM2IGhlYWRlcjt9e1wqXGNzMjQgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGYwXGZzMjQgXHNiYXNlZG9uMTAgXHNwcmlvcml0eTAgXHN0eXJzaWQyMTc2NzM2IHBhZ2UgbnVtYmVyO317DQpcczI1XHFjIFxsaTBccmkwXHNhMzAwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhZjFcYWZzMzJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xrZXJuaW5nMjhcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24wIFxzbmV4dDI1IFxzbGluazQ3IFxzcWZvcm1hdCBcc3ByaW9yaXR5MCBcc3R5cnNpZDIxNzY3MzYgVGl0bGU7fXtcczI2XHFsIFxsaTE0NDBccmkxNDQwXHNhMTIwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjE0NDBcbGluMTQ0MFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQyNiBcc3ByaW9yaXR5MCBcc3R5cnNpZDIxNzY3MzYgQmxvY2sgVGV4dDt9e1xzMjdccWwgXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSANClxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMTcgXHNuZXh0MjcgXHNwcmlvcml0eTAgXHN0eXJzaWQyMTc2NzM2IE5vdGljZXM7fXtcczI4XHFsIFxsaTQzMjBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNDMyMFxpdGFwMCBccnRsY2hcZmNzMSANClxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQyOCBcc2xpbms0NiBcc3ByaW9yaXR5MCBcc3R5cnNpZDIxNzY3MzYgU2lnbmF0dXJlO317XHMyOVxxbCBcbGkwXHJpMFxzYTEyMFxzbDQ4MFxzbG11bHQxDQpcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQyOSBcc3ByaW9yaXR5MCBcc3R5cnNpZDIxNzY3MzYgQm9keSBUZXh0IDI7fXtcKlx0czMwXHRzcm93ZA0KXHRyYnJkcnRcYnJkcnNcYnJkcncxMCBcdHJicmRybFxicmRyc1xicmRydzEwIFx0cmJyZHJiXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnJcYnJkcnNcYnJkcncxMCBcdHJicmRyaFxicmRyc1xicmRydzEwIFx0cmJyZHJ2XGJyZHJzXGJyZHJ3MTAgDQpcdHJmdHNXaWR0aEIzXHRycGFkZGwxMDhcdHJwYWRkcjEwOFx0cnBhZGRmbDNcdHJwYWRkZnQzXHRycGFkZGZiM1x0cnBhZGRmcjNcdGJsaW5kMFx0YmxpbmR0eXBlM1x0c2NlbGx3aWR0aGZ0czBcdHN2ZXJ0YWx0XHRzYnJkcnRcdHNicmRybFx0c2JyZHJiXHRzYnJkcnJcdHNicmRyZGdsXHRzYnJkcmRnclx0c2JyZHJoXHRzYnJkcnYgDQpccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczIwXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMTEgXHNuZXh0MzAgXHNwcmlvcml0eTAgXHN0eXJzaWQyMTc2NzM2IFRhYmxlIEdyaWQ7fXsNClxzMzFccWwgXGZpLTE3NjdcbGkxNzY3XHJpMFxzYjE4MFx3aWRjdGxwYXJcdHgxNzY3XHRxclx0bGRvdFx0eDkzNTBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE3NjdcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MCBcc3ByaW9yaXR5MzkgXHN0eXJzaWQyMTc2NzM2IHRvYyAxO317XHMzMlxxbCBcbGkyNDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMjQwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24wIFxzbmV4dDAgXHNwcmlvcml0eTM5IFxzdHlyc2lkMjE3NjczNiB0b2MgMjt9e1xzMzNccWwgXGxpNDgwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjQ4MFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMCBcc25leHQwIFxzc2VtaWhpZGRlbiBcc3ByaW9yaXR5MCBcc3R5cnNpZDIxNzY3MzYgdG9jIDM7fXtcczM0XHFsIFxsaTcyMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MCBcc3NlbWloaWRkZW4gXHNwcmlvcml0eTAgXHN0eXJzaWQyMTc2NzM2IHRvYyA0O317XHMzNVxxbCBcbGk5NjBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluOTYwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IA0KXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDAgXHNzZW1paGlkZGVuIFxzcHJpb3JpdHkwIFxzdHlyc2lkMjE3NjczNiB0b2MgNTt9e1xzMzZccWwgXGxpMTIwMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xMjAwXGl0YXAwIFxydGxjaFxmY3MxIA0KXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDAgXHNzZW1paGlkZGVuIFxzcHJpb3JpdHkwIFxzdHlyc2lkMjE3NjczNiB0b2MgNjt9e1xzMzdccWwgXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwIA0KXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDAgXHNzZW1paGlkZGVuIFxzcHJpb3JpdHkwIFxzdHlyc2lkMjE3NjczNiB0b2MgNzt9ew0KXHMzOFxxbCBcbGkxNjgwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE2ODBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MCBcc3NlbWloaWRkZW4gXHNwcmlvcml0eTAgXHN0eXJzaWQyMTc2NzM2IHRvYyA4O317XHMzOVxxbCBcbGkxOTIwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE5MjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MCBcc3NlbWloaWRkZW4gXHNwcmlvcml0eTAgXHN0eXJzaWQyMTc2NzM2IHRvYyA5O317XHM0MFxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXGNicGF0OSBccnRsY2hcZmNzMSANClxhZjM4XGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZjM4XGZzMjBcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDQwIFxzc2VtaWhpZGRlbiBcc3ByaW9yaXR5MCBcc3R5cnNpZDIxNzY3MzYgRG9jdW1lbnQgTWFwO317DQpcczQxXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYzOFxhZnMxNlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGYzOFxmczE2XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQ0MSBcc2xpbms0MiBcc3R5cnNpZDU5OTM1OTkgQmFsbG9vbiBUZXh0O30NCntcKlxjczQyIFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYzOFxhZnMxNiBcbHRyY2hcZmNzMCBcZjM4XGZzMTYgXHNiYXNlZG9uMTAgXHNsaW5rNDEgXHNsb2NrZWQgXHN0eXJzaWQ1OTkzNTk5IEJhbGxvb24gVGV4dCBDaGFyO317XCpcY3M0MyBcYWRkaXRpdmUgXHJ0bGNoXGZjczEgXGFmMFxhZnMxNiBcbHRyY2hcZmNzMCBcZnMxNiBcc2Jhc2Vkb24xMCBcc2xpbmsyMiBcc2xvY2tlZCBcc3R5cnNpZDE2MTUwNDAzIEZvb3RlciBDaGFyO317XCoNClxjczQ0IFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxmczI0IFxzYmFzZWRvbjEwIFxzbGluazE1IFxzbG9ja2VkIFxzcHJpb3JpdHkwIFxzdHlyc2lkNjI5MzI0NSBCb2R5IFRleHQgQ2hhcjt9e1wqXGNzNDUgXGFkZGl0aXZlIFx1bGRiXGNmMiBcc3R5cnNpZDExODc3NTk3IERlbHRhVmlldyBJbnNlcnRpb247fXtcKlxjczQ2IFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIA0KXGZzMjQgXHNiYXNlZG9uMTAgXHNsaW5rMjggXHNsb2NrZWQgXHNwcmlvcml0eTAgXHN0eXJzaWQ4NDg1NzMxIFNpZ25hdHVyZSBDaGFyO317XCpcY3M0NyBcYWRkaXRpdmUgXHJ0bGNoXGZjczEgXGFiXGFmMVxhZnMzMiBcbHRyY2hcZmNzMCBcYlxmczMyXGtlcm5pbmcyOCBcc2Jhc2Vkb24xMCBcc2xpbmsyNSBcc2xvY2tlZCBcc3ByaW9yaXR5MCBcc3R5cnNpZDk1NzQyNDUgVGl0bGUgQ2hhcjt9e1wqXGNzNDggXGFkZGl0aXZlIA0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcY2YyIFxzYmFzZWRvbjEwIFxzcHJpb3JpdHkwIFxzdHlyc2lkNTEzMTg4MCBIeXBlcmxpbms7fXtcczQ5XHFsIFxsaTBccmkwXHNsLTIwMFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc25leHQ0OSBcc3ByaW9yaXR5MCBcc3R5cnNpZDc4NjU1MzMgTWFjUGFjIFRyYWlsZXI7fXtcKlxjczUwIFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxjZjE1IFxzYmFzZWRvbjEwIFxzc2VtaWhpZGRlbiBcc3R5cnNpZDE0NzU1NTM3IFBsYWNlaG9sZGVyIFRleHQ7fXsNClxzNTFccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQ1MSBcc3Fmb3JtYXQgXHNwcmlvcml0eTAgXHN0eXJzaWQ2NzYzOTk3IA0KTy1Cb2R5IFRleHQgKCksMUJvZHksczE7fXtcKlxjczUyIFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxiXGZzMjIgXHNiYXNlZG9uMTAgXHNsaW5rNiBcc2xvY2tlZCBcc3ByaW9yaXR5MCBcc3R5cnNpZDY3NjM5OTcgSGVhZGluZyA2IENoYXI7fXsNClxzNTNccWwgXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxjb250ZXh0dWFsc3BhY2UgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGtlcm5pbmcyNFxsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYzN1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0NTMgXHN1bmhpZGV1c2VkIFxzcWZvcm1hdCBcc3ByaW9yaXR5MzQgXHN0eXJzaWQ2NzYzOTk3IExpc3QgUGFyYWdyYXBoO317XHM1NFxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyMFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0NTQgXHNsaW5rNTUgXHNwcmlvcml0eTk0IFxzdHlyc2lkNjgxNzA3MiBmb290bm90ZSB0ZXh0O317XCpcY3M1NSBcYWRkaXRpdmUgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcc2Jhc2Vkb24xMCBcc2xpbms1NCBcc2xvY2tlZCBcc3ByaW9yaXR5OTQgXHN0eXJzaWQ2ODE3MDcyIA0KRm9vdG5vdGUgVGV4dCBDaGFyO317XCpcY3M1NiBcYWRkaXRpdmUgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcc3VwZXIgXHNiYXNlZG9uMTAgXHN0eXJzaWQ2ODE3MDcyIGZvb3Rub3RlIHJlZmVyZW5jZTt9e1xzNTdccWwgXGxpMFxyaTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQ1NyBcc3Fmb3JtYXQgXHNwcmlvcml0eTEgXHN0eXJzaWQyNzY0MDQwIEJvZHk7fXtcKlxjczU4IFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxiXGZzMjQgXHNiYXNlZG9uMTAgXHNsaW5rMSBcc2xvY2tlZCBcc3ByaW9yaXR5MCBcc3R5cnNpZDI3NjQwNDAgDQpIZWFkaW5nIDEgQ2hhcjt9e1wqXGNzNTkgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjQgXGx0cmNoXGZjczAgXGZzMjRcdWwgXHNiYXNlZG9uMTAgXHNsaW5rMiBcc2xvY2tlZCBcc3ByaW9yaXR5MCBcc3R5cnNpZDI3NjQwNDAgDQpIZWFkaW5nIDIgQ2hhcixIZWFkaW5nIDIgQ2hhcjEgQ2hhcixIZWFkaW5nIDIgQ2hhciBDaGFyIENoYXIsSGVhZGluZyAyIENoYXIyIENoYXIsSGVhZGluZyAyIENoYXIgQ2hhcjEgQ2hhcixIZWFkaW5nIDIgQ2hhcjEgQ2hhciBDaGFyIENoYXIsSGVhZGluZyAyIENoYXIgQ2hhciBDaGFyIENoYXIgQ2hhcixIZWFkaW5nIDIgQ2hhcjEgQ2hhcjEgQ2hhcixIZWFkaW5nIDIgQ2hhciBDaGFyIENoYXIxIENoYXI7fXtcKlxjczYwIFxhZGRpdGl2ZSANClxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjYgXGx0cmNoXGZjczAgXGZzMjYgXHNiYXNlZG9uMTAgXHNsaW5rMyBcc2xvY2tlZCBcc3ByaW9yaXR5MCBcc3R5cnNpZDI3NjQwNDAgSGVhZGluZyAzIENoYXI7fXtcKlxjczYxIFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI4IFxsdHJjaFxmY3MwIFxmczI4IFxzYmFzZWRvbjEwIFxzbGluazQgXHNsb2NrZWQgXHNwcmlvcml0eTAgXHN0eXJzaWQyNzY0MDQwIEhlYWRpbmcgNCBDaGFyO30NCntcKlxjczYyIFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWJcYWlcYWYwXGFmczI2IFxsdHJjaFxmY3MwIFxiXGZzMjZcdWwgXHNiYXNlZG9uMTAgXHNsaW5rNSBcc2xvY2tlZCBcc3ByaW9yaXR5MCBcc3R5cnNpZDI3NjQwNDAgSGVhZGluZyA1IENoYXI7fXtcKlxjczYzIFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxiXGZzMjQgDQpcc2Jhc2Vkb24xMCBcc2xpbms3IFxzbG9ja2VkIFxzcHJpb3JpdHkwIFxzdHlyc2lkMjc2NDA0MCBIZWFkaW5nIDcgQ2hhcjt9e1wqXGNzNjQgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhaVxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGZzMjQgXHNiYXNlZG9uMTAgXHNsaW5rOCBcc2xvY2tlZCBcc3ByaW9yaXR5MCBcc3R5cnNpZDI3NjQwNDAgSGVhZGluZyA4IENoYXI7fXtcKlxjczY1IFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYxXGFmczIyIA0KXGx0cmNoXGZjczAgXGZzMjIgXHNiYXNlZG9uMTAgXHNsaW5rOSBcc2xvY2tlZCBcc3ByaW9yaXR5MCBcc3R5cnNpZDI3NjQwNDAgSGVhZGluZyA5IENoYXI7fXtcKlxjczY2IFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwXGFmczE2IFxsdHJjaFxmY3MwIFxmczE2IFxzYmFzZWRvbjEwIFxzdW5oaWRldXNlZCBcc3R5cnNpZDI3NjQwNDAgYW5ub3RhdGlvbiByZWZlcmVuY2U7fXsNClxzNjdccWwgXGxpMFxyaTBcc2EyMDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczIwXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMzdcaGljaFxhZjM3XGRiY2hcYWYzN1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0NjcgXHNsaW5rNjggXHN1bmhpZGV1c2VkIFxzdHlyc2lkMjc2NDA0MCBhbm5vdGF0aW9uIHRleHQ7fXtcKlxjczY4IFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsb2NoXGYzN1xoaWNoXGFmMzdcZGJjaFxhZjM3IFxzYmFzZWRvbjEwIFxzbGluazY3IFxzbG9ja2VkIFxzdHlyc2lkMjc2NDA0MCBDb21tZW50IFRleHQgQ2hhcjt9ew0KXHM2OVxxbCBcbGkwXHJpMFxzYTIwMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMyMFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjM3XGhpY2hcYWYzN1xkYmNoXGFmMzdcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb242NyBcc25leHQ2NyBcc2xpbms3MCBcc3VuaGlkZXVzZWQgXHN0eXJzaWQyNzY0MDQwIGFubm90YXRpb24gc3ViamVjdDt9e1wqXGNzNzAgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcbG9jaFxmMzdcaGljaFxhZjM3XGRiY2hcYWYzNyBcc2Jhc2Vkb242OCBcc2xpbms2OSBcc2xvY2tlZCBcc3R5cnNpZDI3NjQwNDAgQ29tbWVudCBTdWJqZWN0IENoYXI7fXtcKlxjczcxIFxhZGRpdGl2ZSANClxydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGZzMjQgXHNiYXNlZG9uMTAgXHNsaW5rMjMgXHNsb2NrZWQgXHN0eXJzaWQyNzY0MDQwIEhlYWRlciBDaGFyO317XHM3MlxxbCBcbGkwXHJpMFxzbDQ4MFxzbG11bHQxXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQ3MiBcc3Fmb3JtYXQgXHNwcmlvcml0eTQgXHN0eXJzaWQzNDM4MDc4IE8tQm9keSBUZXh0IChEUyksMkJvZHksczI4O317XHM3M1xxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgDQpcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0NzMgXHNxZm9ybWF0IFxzcHJpb3JpdHk3IFxzdHlyc2lkMzQzODA3OCBPLUJvZHkgVGV4dCAoSiksM0JvZHksczEzO317DQpcczc0XHFsIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzbmV4dDc0IFxzcWZvcm1hdCBcc3ByaW9yaXR5MSBcc3R5cnNpZDM0MzgwNzggDQpPLUJvZHkgVGV4dCAuNSIsMUhhbGYsczI7fXtcczc1XHFsIFxmaTcyMFxsaTBccmkwXHNsNDgwXHNsbXVsdDFcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24wIFxzbmV4dDc1IFxzcWZvcm1hdCBcc3ByaW9yaXR5NSBcc3R5cnNpZDM0MzgwNzggTy1Cb2R5IFRleHQgLjVcJzk0IChEUyksMkhhbGYsczI5O317XHM3NlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0NzYgXHNxZm9ybWF0IFxzcHJpb3JpdHk3IFxzdHlyc2lkMzQzODA3OCBPLUJvZHkgVGV4dCAuNVwnOTQgKEopLDNIYWxmLHMxNDt9e1xzNzdccWwgXGZpMTQ0MFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCANClxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQ3NyBcc3Fmb3JtYXQgXHNwcmlvcml0eTIgXHN0eXJzaWQzNDM4MDc4IE8tQm9keSBUZXh0IDEiLDFGdWxsLHMzO317XHM3OFxxbCBcZmkxNDQwXGxpMFxyaTBcc2w0ODBcc2xtdWx0MQ0KXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0NzggXHNxZm9ybWF0IFxzcHJpb3JpdHk2IFxzdHlyc2lkMzQzODA3OCANCk8tQm9keSBUZXh0IDFcJzk0IChEUyksMkZ1bGwsczMwO317XHM3OVxxaiBcZmkxNDQwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24wIFxzbmV4dDc5IFxzcWZvcm1hdCBcc3ByaW9yaXR5NyBcc3R5cnNpZDM0MzgwNzggTy1Cb2R5IFRleHQgMVwnOTQgKEopLDNGdWxsLHMxNTt9e1xzODBccWwgXGZpLTM2MFxsaTM2MFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDM2MFx3cmFwZGVmYXVsdHtcKlxwbiBccG5sdmxib2R5XGlsdmwwXGxzOVxwbnJub3QwXHBuZGVjIH0NClxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOVxhZGp1c3RyaWdodFxyaW4wXGxpbjM2MFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzbmV4dDgwIFxzcWZvcm1hdCBcc3ByaW9yaXR5MzIgXHN0eXJzaWQzNDM4MDc4IE8tQnVsbGV0ICgpLDFCdWxsZXQsczQ7fXsNClxzODFccWwgXGZpLTM2MFxsaTEwODBccmkwXHNhMjQwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHgxMDgwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxMFxhZGp1c3RyaWdodFxyaW4wXGxpbjEwODBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzbmV4dDgxIFxzcHJpb3JpdHkzMiBcc3R5cnNpZDM0MzgwNzggTy1CdWxsZXQgLjUiLDJCdWxsZXQsczI2O317XHM4MlxxbCBcZmktMzYwXGxpMTgwMFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDE4MDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczExXGFkanVzdHJpZ2h0XHJpbjBcbGluMTgwMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNuZXh0ODIgXHNwcmlvcml0eTMyIFxzdHlyc2lkMzQzODA3OCBPLUJ1bGxldCAxIiwzQnVsbGV0LHMyNzt9e1xzODNccWwgXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSANClxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQ4MyBcc3Fmb3JtYXQgXHNwcmlvcml0eTEwIFxzdHlyc2lkMzQzODA3OCBPLUluZGVudCAuNSIsSGFsZiBJbmRlbnQsczU7fXsNClxzODRccWwgXGxpMTQ0MFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24wIFxzbmV4dDg0IFxzcWZvcm1hdCBcc3ByaW9yaXR5MTEgXHN0eXJzaWQzNDM4MDc4IE8tSW5kZW50IDEiLEZ1bGwgSW5kZW50LHM2O317XHM4NVxxbCBcbGkxNDQwXHJpMTQ0MFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4xNDQwXGxpbjE0NDBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0ODUgXHNwcmlvcml0eTMzIFxzdHlyc2lkMzQzODA3OCBPLVF1b3RlICgpLDFRdW90ZSxzNzt9e1xzODZccWwgXGxpMTQ0MFxyaTE0NDBcc2w0ODBcc2xtdWx0MVx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4xNDQwXGxpbjE0NDBcaXRhcDAgDQpccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0ODYgXHNwcmlvcml0eTMzIFxzdHlyc2lkMzQzODA3OCBPLVF1b3RlIChEUyksMlF1b3RlLHMxNzt9ew0KXHM4N1xxaiBcbGkxNDQwXHJpMTQ0MFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4xNDQwXGxpbjE0NDBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0ODcgXHNwcmlvcml0eTMzIFxzdHlyc2lkMzQzODA3OCBPLVF1b3RlIChKKSwzUXVvdGUsczE2O317XHM4OFxxbCBcZmktNTQ3XGxpNTQ3XHJpMFxzYjcyMFxzYTI0MFxrZWVwXHdpZGN0bHBhclx0cXJcdHgyODgwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW41NDdcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0ODggXHNwcmlvcml0eTQ1IFxzdHlyc2lkMzQzODA3OCBPLVNpZ25hdHVyZSAoTEEpLFNpZyAoTEEpLHMxODt9e1xzODlccWwgXGxpNDMyMFxyaTBcc2EyNDBca2VlcFxrZWVwblx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjQzMjBcaXRhcDAgDQpccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MCBcc3ByaW9yaXR5NDUgXHN0eXJzaWQzNDM4MDc4IE8tU2lnbmF0dXJlLFNpZ3MsczEyO317DQpcczkwXHFjIFxsaTBccmkwXHNhMjQwXGtlZXBca2VlcG5cd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzbmV4dDUxIFxzcWZvcm1hdCBcc3ByaW9yaXR5MzcgXHN0eXJzaWQzNDM4MDc4IE8tVGl0bGUgMywzVGl0bGUsczIyO317XHM5MVxxYyBcbGkwXHJpMFxzYTI0MFxrZWVwXGtlZXBuXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxiXGNhcHNcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0NTEgXHNxZm9ybWF0IFxzcHJpb3JpdHkzNSBcc3R5cnNpZDM0MzgwNzggTy1USVRMRSwxVGl0bGUsczEwO317XHM5MlxxbCBcbGkwXHJpMFxzYTI0MFxrZWVwXGtlZXBuXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCANClxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc25leHQ1MSBcc3Fmb3JtYXQgXHNwcmlvcml0eTQwIFxzdHlyc2lkMzQzODA3OCBPLVRpdGxlIDYsNlRpdGxlLHMxMTt9ew0KXHM5M1xxbCBcbGkwXHJpMFxzYTI0MFxrZWVwXGtlZXBuXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc25leHQ1MSBcc3Fmb3JtYXQgXHNwcmlvcml0eTQxIFxzdHlyc2lkMzQzODA3OCBPLVRpdGxlIDcsN1RpdGxlLHMxOTt9e1xzOTRccWMgXGxpMFxyaTBcc2EyNDBca2VlcFxrZWVwblx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcYlxjYXBzXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDUxIFxzcWZvcm1hdCBcc3ByaW9yaXR5MzkgXHN0eXJzaWQzNDM4MDc4IE8tVGl0bGUgNSw1VGl0bGUsczg7fXtcczk1XHFjIFxsaTBccmkwXHNhMjQwXGtlZXBca2VlcG5cd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIA0KXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0NTEgXHNxZm9ybWF0IFxzcHJpb3JpdHkzNiBcc3R5cnNpZDM0MzgwNzggTy1UaXRsZSAyLDJUaXRsZSxzMjA7fXsNClxzOTZccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMFxoaWNoXGFmMFxkYmNoXGFmMzdcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNuZXh0OTYgXHNwcmlvcml0eTggXHN0eXJzaWQzNDM4MDc4IA0KTm8gU3BhY2luZzt9e1xzOTdccWogXGZpLTcyMFxsaTcyMFxyaTBcc2EyNDBcc2wtMzAwXHNsbXVsdDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxMlxhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIxXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMjA1N1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDIwNTdcbGFuZ2ZlbnAxMDMzIA0KXHNuZXh0OTcgXHNwcmlvcml0eTM0IFxzdHlyc2lkMzQzODA3OCBQYXJ0aWVzO317XHM5OFxxaiBcZmktNzIwXGxpNzIwXHJpMFxzYTI0MFxzbC0zMDBcc2xtdWx0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczEzXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjFcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzIwNTdcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAyMDU3XGxhbmdmZW5wMTAzMyBcc25leHQ5OCBcc3ByaW9yaXR5MzQgXHN0eXJzaWQzNDM4MDc4IEJhY2tncm91bmQ7fXtcczk5XHFyIFxsaTBccmkwXHdpZGN0bHBhclx0cXJcdHg3MjAwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGYzOVxmczE4XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNuZXh0OTkgXHNwcmlvcml0eTQ2IFxzdHlyc2lkMzQzODA3OCBPIFBEIEZvb3Rlcjt9e1xzMTAwXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmNDBcaGljaFxhZjQwXGRiY2hcYWY0MVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDEwMCBcc3ByaW9yaXR5NDYgXHN0eXJzaWQzNDM4MDc4IE8gUmVzdW1lIEFydGljbGVzIE5vIEJ1bGxldHM7fXsNClxzMTAxXHFsIFxmaS0zNjBcbGk3MjBccmkwXHNhNjBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxNFxhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjQwXGhpY2hcYWY0MFxkYmNoXGFmNDFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24xMDAgXHNuZXh0MTAxIFxzcHJpb3JpdHk0NiBcc3R5cnNpZDM0MzgwNzggTyBSZXN1bWUgQXJ0aWNsZXMgQnVsbGV0czt9e1xzMTAyXHFsIFxsaTBccmkwXHNiMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGY0MFxoaWNoXGFmNDBcZGJjaFxhZjQxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjEwMCBcc25leHQxMDIgXHNwcmlvcml0eTQ2IFxzdHlyc2lkMzQzODA3OCBPIFJlc3VtZSBBcnRpY2xlcyBIZWFkaW5nO317XHMxMDNccWwgXGZpMTgwXGxpMFxyaTBcc2E2MFxrZWVwblx3aWRjdGxwYXINClx0eDE4MFx0eDI1MjBcdHgyNzc5XHR4OTk3OVx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcZjQwXGhpY2hcYWY0MFxkYmNoXGFmNDFcY2dyaWRcbm9wcm9vZlxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzbmV4dDAgXHNwcmlvcml0eTQ2IFxzdHlyc2lkMzQzODA3OCBPIFJlc3VtZSBBcnRpY2xlcyBMZWFkaW47fXtcczEwNFxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZjFcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MTA0IFxzcHJpb3JpdHk0NiBcc3R5cnNpZDM0MzgwNzggTyBSZXN1bWUgQXR0b3JuZXkgSUQ7fXtcczEwNVxxbCBcbGkwXHJpMFxzYjI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgDQpcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjQwXGhpY2hcYWY0MFxkYmNoXGFmNDFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNuZXh0MTA1IFxzcHJpb3JpdHk0NiBcc3R5cnNpZDM0MzgwNzggTyBSZXN1bWUgQm9keSBUZXh0O317XHMxMDZccWwgXGZpLTE4MFxsaTE4MFxyaTBcc2ExMjBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xODBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGY0MFxoaWNoXGFmNDBcZGJjaFxhZjQxXGNncmlkXG5vcHJvb2ZcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc25leHQxMDYgXHNwcmlvcml0eTQ2IFxzdHlyc2lkMzQzODA3OCBPIFJlc3VtZSBCdWxsZXQgUXVhbGlmaWNhdGlvbjt9e1wqXGNzMTA3IFxhZGRpdGl2ZSBcYlxmMVxmczIwIFxzcHJpb3JpdHk0NiBcc3R5cnNpZDM0MzgwNzggTyBSZXN1bWUgQ2xpZW50L0Nhc2UvUHJvamVjdCBOYW1lO317DQpcczEwOFxxbCBcbGkxODdccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTg3XGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczE2XGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxmMVxoaWNoXGFmMVxkYmNoXGFmNDFcY2dyaWRcbm9wcm9vZlxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzbmV4dDAgXHNwcmlvcml0eTQ2IFxzdHlyc2lkMzQzODA3OCBPIFJlc3VtZSBDb250YWN0IEluZm9ybWF0aW9uO317XHMxMDlccWwgXGxpMFxyaTBcc2EzNjBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhaVxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGlcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjFcaGljaFxhZjFcZGJjaFxhZjQxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzbmV4dDEwOSBcc3ByaW9yaXR5NDYgXHN0eXJzaWQzNDM4MDc4IE8gUmVzdW1lIEVtYWlsO317XHMxMTBccXIgXGxpMFxyaTBcc2wtMjAwXHNsbXVsdDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIA0KXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMThcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGYzOVxoaWNoXGFmMzlcZGJjaFxhZjQxXGNncmlkXG5vcHJvb2ZcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNuZXh0MTEwIFxzcHJpb3JpdHk0NiBcc3R5cnNpZDM0MzgwNzggTyBSZXN1bWUgRm9vdGVyO317DQpcczExMVxxbCBcbGkwXHJpMFxzYTEyMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMzMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcZjFcaGljaFxhZjFcZGJjaFxhZjQxXGNncmlkXG5vcHJvb2ZcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc25leHQxMDggXHNwcmlvcml0eTQ2IFxzdHlyc2lkMzQzODA3OCBPIFJlc3VtZSBOYW1lO317XHMxMTJccWwgXGxpMFxyaTBcc2ExMjBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMTZcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGYxXGhpY2hcYWYxXGRiY2hcYWY0MVxjZ3JpZFxub3Byb29mXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzbmV4dDExMiBcc3ByaW9yaXR5NDYgXHN0eXJzaWQzNDM4MDc4IE8gUmVzdW1lIFNpZGViYXI7fXtcczExM1xxbCBcZmktMTgwXGxpMTgwXHJpMFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxODBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczE1XGFkanVzdHJpZ2h0XHJpbjBcbGluMTgwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjFcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczE2XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMVxoaWNoXGFmMVxkYmNoXGFmNDFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24wIFxzbmV4dDExMyBcc3ByaW9yaXR5NDYgXHN0eXJzaWQzNDM4MDc4IE8gUmVzdW1lIFNpZGViYXIgQnVsbGV0O317XHMxMTRccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjFcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGJcZnMxOFxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcZjFcaGljaFxhZjFcZGJjaFxhZjQxXGNncmlkXG5vcHJvb2ZcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQxMTQgXHNwcmlvcml0eTQ2IFxzdHlyc2lkMzQzODA3OCBPIFJlc3VtZSBTaWRlYmFyIEhlYWQ7fXsNClxzMTE1XHFsIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0NTEgXHNwcmlvcml0eTM4IFxzdHlyc2lkMzQzODA3OCANCk8tVGl0bGUgNCw0VGl0bGUsczk7fXtcczExNlxxbCBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGlcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNuZXh0NTEgXHNwcmlvcml0eTQyIFxzdHlyc2lkMzQzODA3OCBPLVRpdGxlIDgsOFRpdGxlLHMyMzt9e1xzMTE3XHFjIFxsaTBccmkwXHNhMjQwXGtlZXBca2VlcG5cd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYzN1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDUxIFxzcHJpb3JpdHkzNSBcc3R5cnNpZDM0MzgwNzggTy1DZW50ZXIsQ2VudGVyLHMyMTt9ew0KXHMxMThccWwgXGxpMFxyaTBcc2EyNDBca2VlcFxrZWVwblx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcY2Fwc1xmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24wIFxzbmV4dDUxIFxzcWZvcm1hdCBcc3ByaW9yaXR5NDMgXHN0eXJzaWQzNDM4MDc4IE8tVElUTEUgOSw5VElUTEUsczMxO317XCpcY3MxMTkgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGZzMjQgXHNiYXNlZG9uNDQgXHNsaW5rMTcgXHNsb2NrZWQgXHNwcmlvcml0eTAgXHN0eXJzaWQzNDM4MDc4IEJvZHkgVGV4dCBGaXJzdCBJbmRlbnQgQ2hhcjt9fXtcKlxsaXN0dGFibGUNCntcbGlzdFxsaXN0dGVtcGxhdGVpZC0xOTYxMzIyODQwe1xsaXN0bGV2ZWxcbGV2ZWxuZmMxXGxldmVsbmZjbjFcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MlxsZXZlbHN0YXJ0YXQxXGxldmVsbm9yZXN0YXJ0XGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwOUFSVElDTEUgXCcwMDt9e1xsZXZlbG51bWJlcnNcJzA5O31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGJcaTBcc2NhcHMwXGNhcHMwXHVsbm9uZVxjZjBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXHMxXGZpMFxsaTBcbGluMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsbGVnYWxcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAzXCcwMC5cJzAxO317XGxldmVsbnVtYmVyc1wnMDFcJzAzO31ccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGIwXGkwXHNjYXBzMFxjYXBzMFx1bG5vbmVcY2YwXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxzMlxmaTcyMFxsaTBcamNsaXN0dGFiXHR4MTQ0MFxsaW4wIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxsZWdhbFxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXCcwNVwnMDAuXCcwMS5cJzAyO317XGxldmVsbnVtYmVyc1wnMDFcJzAzXCcwNTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaTBcc2NhcHMwXGNhcHMwXHVsbm9uZVxjZjBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXHMzXGZpNzIwXGxpNzIwXGpjbGlzdHRhYlx0eDIxNjBcbGluNzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDENClxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDMoXCcwMyk7fXtcbGV2ZWxudW1iZXJzXCcwMjt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaTBcc2NhcHMwXGNhcHMwXHVsbm9uZVxjZjBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXHM0XGZpNzIwXGxpNzIwXGpjbGlzdHRhYlx0eDIxNjBcbGluNzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzFcbGV2ZWxuZmNuMVxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwDQpcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDJcJzA0Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGkwXHNjYXBzMFxjYXBzMFx1bG5vbmVcY2YwXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxzNVxmaS03MjBcbGk3MjBcamNsaXN0dGFiXHR4NzIwXGxpbjcyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMzXGxldmVsbmZjbjNcbGV2ZWxqYzBcbGV2ZWxqY24wDQpcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAyXCcwNS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpMFxzY2FwczBcY2FwczBcdWxub25lXGNmMFxmYmlhczBcaHJlczBcY2hocmVzMCBcczZcZmktNzIwXGxpMTQ0MFxqY2xpc3R0YWJcdHgxNDQwXGxpbjE0NDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wDQpcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMlwnMDYuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaTBcc2NhcHMwXGNhcHMwXHVsbm9uZVxjZjBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXHM3XGZpLTcyMFxsaTIxNjBcamNsaXN0dGFiXHR4MjE2MFxsaW4yMTYwIH17XGxpc3RsZXZlbA0KXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDMoXCcwNyk7fXtcbGV2ZWxudW1iZXJzXCcwMjt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaTBcc2NhcHMwXGNhcHMwXHVsbm9uZVxjZjBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXHM4XGZpMFxsaTE0NDANClxqY2xpc3R0YWJcdHgyMTYwXGxpbjE0NDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDMoXCcwOCk7fXtcbGV2ZWxudW1iZXJzXCcwMjt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaTBcc2NhcHMwXGNhcHMwXHVsbm9uZVxjZjBcZmJpYXMwXGhyZXMwXGNoaHJlczAgDQpcczlcZmkwXGxpMjE2MFxqY2xpc3R0YWJcdHgyODgwXGxpbjIxNjAgfXtcbGlzdG5hbWUgUGFyYU51bSBBO31cbGlzdGlkNjU0OTQyMTN9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkMTQwODg5NzY2MlxsaXN0aHlicmlke1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY4OVwnMDFcdS0zOTEzID87fXtcbGV2ZWxudW1iZXJzO31cZjNcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTcyMFxsaW43MjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NjkxDQpcJzAxbzt9e1xsZXZlbG51bWJlcnM7fVxmMlxmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMTQ0MFxsaW4xNDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg2OTNcJzAxXHUtMzkyOSA/O317XGxldmVsbnVtYmVycw0KO31cZjEwXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGkyMTYwXGxpbjIxNjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY4OVwnMDFcdS0zOTEzID87fXtcbGV2ZWxudW1iZXJzO30NClxmM1xmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMjg4MFxsaW4yODgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg2OTFcJzAxbzt9e1xsZXZlbG51bWJlcnM7fVxmMlxmYmlhczBcaHJlczBcY2hocmVzMCANClxmaS0zNjBcbGkzNjAwXGxpbjM2MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY5M1wnMDFcdS0zOTI5ID87fXtcbGV2ZWxudW1iZXJzO31cZjEwXGZiaWFzMFxocmVzMFxjaGhyZXMwIA0KXGZpLTM2MFxsaTQzMjBcbGluNDMyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4Njg5XCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fVxmM1xmYmlhczBcaHJlczBcY2hocmVzMCANClxmaS0zNjBcbGk1MDQwXGxpbjUwNDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY5MVwnMDFvO317XGxldmVsbnVtYmVyczt9XGYyXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk1NzYwXGxpbjU3NjAgfQ0Ke1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NjkzXCcwMVx1LTM5MjkgPzt9e1xsZXZlbG51bWJlcnM7fVxmMTBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTY0ODBcbGluNjQ4MCB9e1xsaXN0bmFtZSANCjt9XGxpc3RpZDIyMjEwNzEwOX17XGxpc3RcbGlzdHRlbXBsYXRlaWQtMjI5MzY1MTUwXGxpc3RzaW1wbGV7XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDFcdS0zOTEzID87fXtcbGV2ZWxudW1iZXJzO31cZjNcZmJpYXMwXGhyZXMwXGNoaHJlczAgXHM4MFxmaS0zNjBcbGkzNjANClxqY2xpc3R0YWJcdHgzNjBcbGluMzYwIH17XGxpc3RuYW1lIDt9XGxpc3RpZDQ4Nzg2ODMzM317XGxpc3RcbGlzdHRlbXBsYXRlaWQyMDAwNjkzMTBcbGlzdGh5YnJpZHtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0yMDkxOTg1NTg4DQpcJzAxXHUtMzkxMyA/O317XGxldmVsbnVtYmVyczt9XGYzXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxzODJcZmktMzYwXGxpMTgwMFxqY2xpc3R0YWJcdHgxODAwXGxpbjE4MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY5MQ0KXCcwMW87fXtcbGV2ZWxudW1iZXJzO31cZjJcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTE0NDBcamNsaXN0dGFiXHR4MTQ0MFxsaW4xNDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg2OTMNClwnMDFcdS0zOTI5ID87fXtcbGV2ZWxudW1iZXJzO31cZjEwXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGkyMTYwXGpjbGlzdHRhYlx0eDIxNjBcbGluMjE2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4Njg5DQpcJzAxXHUtMzkxMyA/O317XGxldmVsbnVtYmVyczt9XGYzXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGkyODgwXGpjbGlzdHRhYlx0eDI4ODBcbGluMjg4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NjkxDQpcJzAxbzt9e1xsZXZlbG51bWJlcnM7fVxmMlxmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMzYwMFxqY2xpc3R0YWJcdHgzNjAwXGxpbjM2MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY5Mw0KXCcwMVx1LTM5MjkgPzt9e1xsZXZlbG51bWJlcnM7fVxmMTBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTQzMjBcamNsaXN0dGFiXHR4NDMyMFxsaW40MzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg2ODkNClwnMDFcdS0zOTEzID87fXtcbGV2ZWxudW1iZXJzO31cZjNcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTUwNDBcamNsaXN0dGFiXHR4NTA0MFxsaW41MDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg2OTENClwnMDFvO317XGxldmVsbnVtYmVyczt9XGYyXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk1NzYwXGpjbGlzdHRhYlx0eDU3NjBcbGluNTc2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NjkzDQpcJzAxXHUtMzkyOSA/O317XGxldmVsbnVtYmVyczt9XGYxMFxmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNjQ4MFxqY2xpc3R0YWJcdHg2NDgwXGxpbjY0ODAgfXtcbGlzdG5hbWUgO31cbGlzdGlkNjIzNzgwMjk0fXtcbGlzdFxsaXN0dGVtcGxhdGVpZC0xMDQ5NTg3MTYyXGxpc3RoeWJyaWR7XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MQ0KXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4Njg5XCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fVxmM1xmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNzIwXGxpbjcyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY5MVwnMDFvO317XGxldmVsbnVtYmVyczt9XGYyXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGkxNDQwXGxpbjE0NDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NjkzDQpcJzAxXHUtMzkyOSA/O317XGxldmVsbnVtYmVyczt9XGYxMFxmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMjE2MFxsaW4yMTYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY4OVwnMDFcdS0zOTEzID87fXtcbGV2ZWxudW1iZXJzO30NClxmM1xmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMjg4MFxsaW4yODgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg2OTFcJzAxbzt9e1xsZXZlbG51bWJlcnM7fVxmMlxmYmlhczBcaHJlczBcY2hocmVzMCANClxmaS0zNjBcbGkzNjAwXGxpbjM2MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY5M1wnMDFcdS0zOTI5ID87fXtcbGV2ZWxudW1iZXJzO31cZjEwXGZiaWFzMFxocmVzMFxjaGhyZXMwIA0KXGZpLTM2MFxsaTQzMjBcbGluNDMyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4Njg5XCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fVxmM1xmYmlhczBcaHJlczBcY2hocmVzMCANClxmaS0zNjBcbGk1MDQwXGxpbjUwNDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY5MVwnMDFvO317XGxldmVsbnVtYmVyczt9XGYyXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk1NzYwXGxpbjU3NjAgfQ0Ke1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NjkzXCcwMVx1LTM5MjkgPzt9e1xsZXZlbG51bWJlcnM7fVxmMTBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTY0ODBcbGluNjQ4MCB9e1xsaXN0bmFtZSANCjt9XGxpc3RpZDY3NzczNjM5NX17XGxpc3RcbGlzdHRlbXBsYXRlaWQtMjA5OTg1NTg4NFxsaXN0aHlicmlke1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTIwOTAxNDM5MTJcJzAxXHUtMzkxMyA/O317XGxldmVsbnVtYmVyczt9DQpcZjNcZnMxNlxmYmlhczBcaHJlczBcY2hocmVzMCBcczExM1xmaS0xODBcbGkxODBcamNsaXN0dGFiXHR4MTgwXGxpbjE4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NjkxXCcwMlwnMDEuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMTQ0MFxqY2xpc3R0YWJcdHgxNDQwXGxpbjE0NDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY5M1wnMDJcJzAyLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTIxNjBcamNsaXN0dGFiXHR4MjE2MFxsaW4yMTYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg2ODlcJzAyXCcwMy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGkyODgwXGpjbGlzdHRhYlx0eDI4ODBcbGluMjg4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NjkxXCcwMlwnMDQuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMzYwMFxqY2xpc3R0YWJcdHgzNjAwXGxpbjM2MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY5M1wnMDJcJzA1Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTQzMjBcamNsaXN0dGFiXHR4NDMyMFxsaW40MzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg2ODlcJzAyXCcwNi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk1MDQwXGpjbGlzdHRhYlx0eDUwNDBcbGluNTA0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NjkxXCcwMlwnMDcuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNTc2MFxqY2xpc3R0YWJcdHg1NzYwXGxpbjU3NjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY5M1wnMDJcJzA4Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTY0ODBcamNsaXN0dGFiXHR4NjQ4MFxsaW42NDgwIH17XGxpc3RuYW1lIDt9XGxpc3RpZDY5MTM0MTYzNX17XGxpc3RcbGlzdHRlbXBsYXRlaWQtMTI0MDE2NDUzMFxsaXN0aHlicmlke1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwDQp7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtODM5MDY0ODM2XCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fVxmM1xmYmlhczBcaHJlczBcY2hocmVzMCBcczgxXGZpLTM2MFxsaTEwODBcamNsaXN0dGFiXHR4MTA4MFxsaW4xMDgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZDY3Njk4NjkxXCcwMW87fXtcbGV2ZWxudW1iZXJzO31cZjJcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTE0NDBcamNsaXN0dGFiXHR4MTQ0MFxsaW4xNDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY5M1wnMDFcdS0zOTI5ID87fXtcbGV2ZWxudW1iZXJzO31cZjEwXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGkyMTYwXGpjbGlzdHRhYlx0eDIxNjBcbGluMjE2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg2ODlcJzAxXHUtMzkxMyA/O317XGxldmVsbnVtYmVyczt9XGYzXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGkyODgwXGpjbGlzdHRhYlx0eDI4ODBcbGluMjg4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg2OTFcJzAxbzt9e1xsZXZlbG51bWJlcnM7fVxmMlxmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMzYwMFxqY2xpc3R0YWJcdHgzNjAwXGxpbjM2MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZDY3Njk4NjkzXCcwMVx1LTM5MjkgPzt9e1xsZXZlbG51bWJlcnM7fVxmMTBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTQzMjBcamNsaXN0dGFiXHR4NDMyMFxsaW40MzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY4OVwnMDFcdS0zOTEzID87fXtcbGV2ZWxudW1iZXJzO31cZjNcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTUwNDBcamNsaXN0dGFiXHR4NTA0MFxsaW41MDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY5MVwnMDFvO317XGxldmVsbnVtYmVyczt9XGYyXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk1NzYwXGpjbGlzdHRhYlx0eDU3NjBcbGluNTc2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg2OTNcJzAxXHUtMzkyOSA/O317XGxldmVsbnVtYmVyczt9XGYxMFxmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNjQ4MFxqY2xpc3R0YWJcdHg2NDgwXGxpbjY0ODAgfXtcbGlzdG5hbWUgO31cbGlzdGlkODUzNzY0MTgzfXtcbGlzdFxsaXN0dGVtcGxhdGVpZDU1Njk3NDRcbGlzdGh5YnJpZHtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzANClxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDc1NjQzMDEwMFwnMDMoXCcwMCk7fXtcbGV2ZWxudW1iZXJzXCcwMjt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTE4MDBcbGluMTgwMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MA0KXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTE5ODY3MDA2NlwnMDJcJzAxLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmYmlhczBcaHJlczBcY2hocmVzMCBcZmktNDY1XGxpMjYyNVxsaW4yNjI1IH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwDQpcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTVcJzAyXCcwMi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMTgwXGxpMzI0MFxsaW4zMjQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwDQpcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MDNcJzAyXCcwMy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMzk2MFxsaW4zOTYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwDQpcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTNcJzAyXCcwNC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNDY4MFxsaW40NjgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwDQpcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTVcJzAyXCcwNS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMTgwXGxpNTQwMFxsaW41NDAwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwDQpcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MDNcJzAyXCcwNi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNjEyMFxsaW42MTIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwDQpcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTNcJzAyXCcwNy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNjg0MFxsaW42ODQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwDQpcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTVcJzAyXCcwOC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMTgwXGxpNzU2MFxsaW43NTYwIH17XGxpc3RuYW1lIDt9XGxpc3RpZDExNTM2NDA4OTF9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkNTQ1ODAxMTM0DQpcbGlzdGh5YnJpZHtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtMTE3MTA4MjkyMFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmYmlhczBcaHJlczBcY2hocmVzMCANClxmaS0zNjBcbGkxODAwXGxpbjE4MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTNcJzAyXCcwMS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCANClxmaS0zNjBcbGkyNTIwXGxpbjI1MjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTVcJzAyXCcwMi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCANClxmaS0xODBcbGkzMjQwXGxpbjMyNDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MDNcJzAyXCcwMy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCANClxmaS0zNjBcbGkzOTYwXGxpbjM5NjAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTNcJzAyXCcwNC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCANClxmaS0zNjBcbGk0NjgwXGxpbjQ2ODAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTVcJzAyXCcwNS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCANClxmaS0xODBcbGk1NDAwXGxpbjU0MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MDNcJzAyXCcwNi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCANClxmaS0zNjBcbGk2MTIwXGxpbjYxMjAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTNcJzAyXCcwNy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCANClxmaS0zNjBcbGk2ODQwXGxpbjY4NDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTVcJzAyXCcwOC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCANClxmaS0xODBcbGk3NTYwXGxpbjc1NjAgfXtcbGlzdG5hbWUgO31cbGlzdGlkMTIyODg4MTUzNH17XGxpc3RcbGlzdHRlbXBsYXRlaWQyMDk5Mjg3Mjc2XGxpc3RoeWJyaWR7XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTc5MjU2OTc0MA0KXCcwMlwnMDAuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTE4MDBcbGluMTgwMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NzEzDQpcJzAyXCcwMS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMjUyMFxsaW4yNTIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NzE1DQpcJzAyXCcwMi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMTgwXGxpMzI0MFxsaW4zMjQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NzAzDQpcJzAyXCcwMy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMzk2MFxsaW4zOTYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NzEzDQpcJzAyXCcwNC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNDY4MFxsaW40NjgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NzE1DQpcJzAyXCcwNS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMTgwXGxpNTQwMFxsaW41NDAwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NzAzDQpcJzAyXCcwNi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNjEyMFxsaW42MTIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NzEzDQpcJzAyXCcwNy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNjg0MFxsaW42ODQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NzE1DQpcJzAyXCcwOC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMTgwXGxpNzU2MFxsaW43NTYwIH17XGxpc3RuYW1lIDt9XGxpc3RpZDE0MDYxNTAzMjN9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkLTE4OTU5ODc1NlxsaXN0aHlicmlke1xsaXN0bGV2ZWxcbGV2ZWxuZmMzXGxldmVsbmZjbjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxDQpcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTE5NDIyNDkwNFwnMDMoXCcwMCk7fXtcbGV2ZWxudW1iZXJzXCcwMjt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXHM5OFxmaS03MjBcbGk3MjBcbGluNzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDENClxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTM0ODA3NTc3XCcwMlwnMDEuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTE0NDBcbGluMTQ0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxDQpcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDEzNDgwNzU3OVwnMDJcJzAyLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxocmVzMFxjaGhyZXMwIFxmaS0xODBcbGkyMTYwXGxpbjIxNjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MQ0KXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQxMzQ4MDc1NjdcJzAyXCcwMy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMjg4MFxsaW4yODgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDENClxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTM0ODA3NTc3XCcwMlwnMDQuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTM2MDBcbGluMzYwMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxDQpcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDEzNDgwNzU3OVwnMDJcJzA1Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxocmVzMFxjaGhyZXMwIFxmaS0xODBcbGk0MzIwXGxpbjQzMjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MQ0KXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQxMzQ4MDc1NjdcJzAyXCcwNi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNTA0MFxsaW41MDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDENClxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTM0ODA3NTc3XCcwMlwnMDcuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTU3NjBcbGluNTc2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxDQpcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDEzNDgwNzU3OVwnMDJcJzA4Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxocmVzMFxjaGhyZXMwIFxmaS0xODBcbGk2NDgwXGxpbjY0ODAgfXtcbGlzdG5hbWUgO31cbGlzdGlkMTU4MTc4NzYwM317XGxpc3RcbGlzdHRlbXBsYXRlaWQxNjAzMDM5NzBcbGlzdGh5YnJpZA0Ke1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg2ODlcJzAxXHUtMzkxMyA/O317XGxldmVsbnVtYmVyczt9XGYzXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk3MjBcbGluNzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzDQpcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NjkxXCcwMW87fXtcbGV2ZWxudW1iZXJzO31cZjJcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTE0NDBcbGluMTQ0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwDQpcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg2OTNcJzAxXHUtMzkyOSA/O317XGxldmVsbnVtYmVyczt9XGYxMFxmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMjE2MFxsaW4yMTYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MQ0KXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY4OVwnMDFcdS0zOTEzID87fXtcbGV2ZWxudW1iZXJzO31cZjNcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTI4ODBcbGluMjg4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlDQpcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg2OTFcJzAxbzt9e1xsZXZlbG51bWJlcnM7fVxmMlxmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMzYwMFxsaW4zNjAwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwDQp7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY5M1wnMDFcdS0zOTI5ID87fXtcbGV2ZWxudW1iZXJzO31cZjEwXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk0MzIwXGxpbjQzMjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZDY3Njk4Njg5XCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fVxmM1xmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNTA0MFxsaW41MDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY5MVwnMDFvO317XGxldmVsbnVtYmVyczt9XGYyXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk1NzYwXGxpbjU3NjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY5Mw0KXCcwMVx1LTM5MjkgPzt9e1xsZXZlbG51bWJlcnM7fVxmMTBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTY0ODBcbGluNjQ4MCB9e1xsaXN0bmFtZSA7fVxsaXN0aWQxOTI0MTQ4MjgzfXtcbGlzdFxsaXN0dGVtcGxhdGVpZC04MjMzMzc0NzhcbGlzdGh5YnJpZHtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMA0KXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDEwNjQ3NzEyNFwnMDMoXCcwMCk7fXtcbGV2ZWxudW1iZXJzXCcwMjt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXHM5N1xmaS03MjBcbGk3MjBcbGluNzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlDQpcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTM0ODA3NTc3XCcwMlwnMDEuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTE0NDBcbGluMTQ0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZQ0KXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDEzNDgwNzU3OVwnMDJcJzAyLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxocmVzMFxjaGhyZXMwIFxmaS0xODBcbGkyMTYwXGxpbjIxNjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmUNClxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQxMzQ4MDc1NjdcJzAyXCcwMy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMjg4MFxsaW4yODgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlDQpcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTM0ODA3NTc3XCcwMlwnMDQuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTM2MDBcbGluMzYwMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZQ0KXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDEzNDgwNzU3OVwnMDJcJzA1Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxocmVzMFxjaGhyZXMwIFxmaS0xODBcbGk0MzIwXGxpbjQzMjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmUNClxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQxMzQ4MDc1NjdcJzAyXCcwNi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNTA0MFxsaW41MDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlDQpcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTM0ODA3NTc3XCcwMlwnMDcuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTU3NjBcbGluNTc2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZQ0KXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDEzNDgwNzU3OVwnMDJcJzA4Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxocmVzMFxjaGhyZXMwIFxmaS0xODBcbGk2NDgwXGxpbjY0ODAgfXtcbGlzdG5hbWUgO31cbGlzdGlkMTkzNTI4NjQ2M317XGxpc3RcbGlzdHRlbXBsYXRlaWQtMjMzMTM5NzA4XGxpc3RoeWJyaWR7XGxpc3RsZXZlbFxsZXZlbG5mYzIzDQpcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY0NjcxMzYwMlwnMDFcdS0zOTEzID87fXtcbGV2ZWxudW1iZXJzO31cZjNcZmJpYXMwXGhyZXMwXGNoaHJlczAgXHMxMDFcZmktMzYwXGxpNzIwXGxpbjcyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjANClxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg2OTFcJzAxbzt9e1xsZXZlbG51bWJlcnM7fVxmMlxmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMTQ0MFxsaW4xNDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MQ0KXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY5M1wnMDFcdS0zOTI5ID87fXtcbGV2ZWxudW1iZXJzO31cZjEwXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGkyMTYwXGxpbjIxNjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZQ0KXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4Njg5XCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fVxmM1xmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMjg4MFxsaW4yODgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTANClxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY5MVwnMDFvO317XGxldmVsbnVtYmVyczt9XGYyXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGkzNjAwXGxpbjM2MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZDY3Njk4NjkzXCcwMVx1LTM5MjkgPzt9e1xsZXZlbG51bWJlcnM7fVxmMTBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTQzMjBcbGluNDMyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg2ODlcJzAxXHUtMzkxMyA/O317XGxldmVsbnVtYmVyczt9XGYzXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk1MDQwXGxpbjUwNDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZDY3Njk4NjkxXCcwMW87fXtcbGV2ZWxudW1iZXJzO31cZjJcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTU3NjBcbGluNTc2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NjkzDQpcJzAxXHUtMzkyOSA/O317XGxldmVsbnVtYmVyczt9XGYxMFxmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNjQ4MFxsaW42NDgwIH17XGxpc3RuYW1lIDt9XGxpc3RpZDIxMDgxOTA0NzZ9fXtcKlxsaXN0b3ZlcnJpZGV0YWJsZXtcbGlzdG92ZXJyaWRlXGxpc3RpZDY1NDk0MjEzXGxpc3RvdmVycmlkZWNvdW50MFxsczF9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkNjU0OTQyMTNcbGlzdG92ZXJyaWRlY291bnQ5e1xsZm9sZXZlbA0KXGxpc3RvdmVycmlkZXN0YXJ0YXRcbGV2ZWxzdGFydGF0MzN9e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDIwfXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlc3RhcnRhdFxsZXZlbHN0YXJ0YXQxfXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlc3RhcnRhdFxsZXZlbHN0YXJ0YXQxfXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlc3RhcnRhdFxsZXZlbHN0YXJ0YXQxfXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlc3RhcnRhdA0KXGxldmVsc3RhcnRhdDF9e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDF9e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDF9e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDF9XGxzMn17XGxpc3RvdmVycmlkZVxsaXN0aWQ2NTQ5NDIxM1xsaXN0b3ZlcnJpZGVjb3VudDd7XGxmb2xldmVsXGxpc3RvdmVycmlkZXN0YXJ0YXRcbGV2ZWxzdGFydGF0MX0NCntcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlc3RhcnRhdFxsZXZlbHN0YXJ0YXQxfXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlc3RhcnRhdFxsZXZlbHN0YXJ0YXQxfXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlc3RhcnRhdFxsZXZlbHN0YXJ0YXQxfXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlc3RhcnRhdFxsZXZlbHN0YXJ0YXQxfXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlc3RhcnRhdFxsZXZlbHN0YXJ0YXQxfXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlc3RhcnRhdA0KXGxldmVsc3RhcnRhdDJ9XGxzM317XGxpc3RvdmVycmlkZVxsaXN0aWQ2Nzc3MzYzOTVcbGlzdG92ZXJyaWRlY291bnQwXGxzNH17XGxpc3RvdmVycmlkZVxsaXN0aWQxMjI4ODgxNTM0XGxpc3RvdmVycmlkZWNvdW50MFxsczV9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkMTE1MzY0MDg5MVxsaXN0b3ZlcnJpZGVjb3VudDBcbHM2fXtcbGlzdG92ZXJyaWRlXGxpc3RpZDE0MDYxNTAzMjNcbGlzdG92ZXJyaWRlY291bnQwXGxzN30NCntcbGlzdG92ZXJyaWRlXGxpc3RpZDE5MjQxNDgyODNcbGlzdG92ZXJyaWRlY291bnQwXGxzOH17XGxpc3RvdmVycmlkZVxsaXN0aWQ0ODc4NjgzMzNcbGlzdG92ZXJyaWRlY291bnQwXGxzOX17XGxpc3RvdmVycmlkZVxsaXN0aWQ4NTM3NjQxODNcbGlzdG92ZXJyaWRlY291bnQwXGxzMTB9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkNjIzNzgwMjk0XGxpc3RvdmVycmlkZWNvdW50MFxsczExfXtcbGlzdG92ZXJyaWRlXGxpc3RpZDE5MzUyODY0NjMNClxsaXN0b3ZlcnJpZGVjb3VudDBcbHMxMn17XGxpc3RvdmVycmlkZVxsaXN0aWQxNTgxNzg3NjAzXGxpc3RvdmVycmlkZWNvdW50MFxsczEzfXtcbGlzdG92ZXJyaWRlXGxpc3RpZDIxMDgxOTA0NzZcbGlzdG92ZXJyaWRlY291bnQwXGxzMTR9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkNjkxMzQxNjM1XGxpc3RvdmVycmlkZWNvdW50MFxsczE1fXtcbGlzdG92ZXJyaWRlXGxpc3RpZDIyMjEwNzEwOVxsaXN0b3ZlcnJpZGVjb3VudDBcbHMxNn19e1wqXHJldnRibCB7VW5rbm93bjt9fQ0Ke1wqXHBncHRibCB7XHBncFxpcGdwMFxpdGFwMFxsaTBccmkwXHNiMFxzYTB9fXtcKlxyc2lkdGJsIFxyc2lkMTIzOTRccnNpZDY5MjU2XHJzaWQ3ODcxOVxyc2lkODM1MTRccnNpZDg2NjcyXHJzaWQxNDgyMThccnNpZDE2MTYwNFxyc2lkMjA3Mzg5XHJzaWQzMjg5NjRccnNpZDMzMjEwM1xyc2lkMzM3NTE3XHJzaWQ0MTU5MDJccnNpZDQ3ODQ3NFxyc2lkNTM5MzAxXHJzaWQ1OTA4MzhccnNpZDYwMTc3OFxyc2lkNjE1Mzk0XHJzaWQ2MTcxNTINClxyc2lkNjU4OTkzXHJzaWQ2NTk5ODZccnNpZDY2MjUzNlxyc2lkNzQ5MTMzXHJzaWQ3OTQ3MjlccnNpZDgxMjczOFxyc2lkODE2NTIzXHJzaWQ4NTI0MTlccnNpZDg2MDg2Mlxyc2lkOTQ0Njc1XHJzaWQxMDAyNzk4XHJzaWQxMDAyOTg2XHJzaWQxMDQ4NzY5XHJzaWQxMTQ0MDcxXHJzaWQxMjA0NDI3XHJzaWQxMjQ4NDUzXHJzaWQxMjU2ODI0XHJzaWQxMjY3NjA1XHJzaWQxMjcyNTM1XHJzaWQxMjc0MzU4XHJzaWQxMzg4ODUxXHJzaWQxNDA3OTY1DQpccnNpZDE1MzQ4NTNccnNpZDE1OTY1NjNccnNpZDE1OTY2MzRccnNpZDE2MDExODhccnNpZDE2Njc1NTdccnNpZDE3MTIxNjRccnNpZDE3Nzk3NjRccnNpZDE4NTM3MzJccnNpZDIwNDI1MzBccnNpZDIwOTg3NTdccnNpZDIxMjg3MzZccnNpZDIxNzY3MzZccnNpZDIxODAxNjBccnNpZDIzMDIyMTVccnNpZDIzMTE3MzhccnNpZDIzMjMxNjVccnNpZDIzMjM4OTRccnNpZDIzNjQyMDJccnNpZDIzNjc1NDJccnNpZDI0MjgxNjhccnNpZDI0NDQyNTANClxyc2lkMjQ1MTQyOFxyc2lkMjUwMjgzM1xyc2lkMjUxMDk4Mlxyc2lkMjY0MjAxMVxyc2lkMjc2MTI5N1xyc2lkMjc2NDA0MFxyc2lkMjc3MDM0M1xyc2lkMjg5MzM1Nlxyc2lkMjkxMzE0M1xyc2lkMjk2MjE1Mlxyc2lkMjk3MjU0MFxyc2lkMzA4MzcwMFxyc2lkMzA4ODkyN1xyc2lkMzA4OTY5NFxyc2lkMzA5MzA0NFxyc2lkMzIxNTkxM1xyc2lkMzIyODgzNVxyc2lkMzI4Mzg1Mlxyc2lkMzMwMTAyNFxyc2lkMzM2MDMxOFxyc2lkMzM3MTkwOQ0KXHJzaWQzNDEyMTk1XHJzaWQzNDEzMTI2XHJzaWQzNDM4MDc4XHJzaWQzNTAxOTQ0XHJzaWQzNjA1NDAyXHJzaWQzNjgxMDM4XHJzaWQzNjg1ODQ1XHJzaWQzNjk5MDE0XHJzaWQzNzQ3MjMzXHJzaWQzNzY1MTYwXHJzaWQzODE0NDA5XHJzaWQzODE3ODE4XHJzaWQzODc5NTg4XHJzaWQzOTUxNDI1XHJzaWQzOTU0Mjk5XHJzaWQzOTYyNzkzXHJzaWQzOTk3NzE3XHJzaWQ0MDA0MjM4XHJzaWQ0MjA5NjY5XHJzaWQ0MjIzMDk4XHJzaWQ0Mjc4NTIwDQpccnNpZDQzNDI4NTlccnNpZDQ0MDk3ODNccnNpZDQ0ODMzMDRccnNpZDQ1MzIyMzZccnNpZDQ1OTE2MDdccnNpZDQ2MDc4OTRccnNpZDQ2MTgwNDdccnNpZDQ2NTU3MThccnNpZDQ2NjcwNzdccnNpZDQ2NzUzMDZccnNpZDQ2NzYzNjdccnNpZDQ3NDk3ODlccnNpZDQ4MTE5NDZccnNpZDQ4MTI3NTRccnNpZDQ4NTI4MjBccnNpZDQ4NTkxMTlccnNpZDUwMDE3MjBccnNpZDUwNDc2MzdccnNpZDUwNjU1MDJccnNpZDUxMzE4ODBccnNpZDUxOTM5NjQNClxyc2lkNTI3MjU5MFxyc2lkNTMyMzM0MVxyc2lkNTM5MTYzNFxyc2lkNTQ0MzA3OVxyc2lkNTQ0NTk3OVxyc2lkNTUxMjAwOFxyc2lkNTUyMjU4NVxyc2lkNTU3NDQyOFxyc2lkNTU5NDUyNFxyc2lkNTcwMzk2MVxyc2lkNTcyNDE5OFxyc2lkNTc3MTA2MVxyc2lkNTc4MTA2MFxyc2lkNTc5Nzc1NFxyc2lkNTkxODMyOVxyc2lkNTk5MzU5OVxyc2lkNjE2MTc3OFxyc2lkNjE3MzQxOFxyc2lkNjE4NjE2MVxyc2lkNjI0MDc1M1xyc2lkNjI1NTM0Mw0KXHJzaWQ2MjU1ODMwXHJzaWQ2MjkzMjQ1XHJzaWQ2MzA3NDE5XHJzaWQ2MzE5Nzc0XHJzaWQ2NDIzMzAxXHJzaWQ2NTg1ODExXHJzaWQ2NjM1NjQ1XHJzaWQ2NjM4NzE4XHJzaWQ2NjQwMDc5XHJzaWQ2NjQ2MDU3XHJzaWQ2Njg4OTQ0XHJzaWQ2NzEwOTYyXHJzaWQ2NzYzOTk3XHJzaWQ2ODE3MDcyXHJzaWQ2ODM5Njg2XHJzaWQ2ODQ1MzMzXHJzaWQ2ODk5MTU5XHJzaWQ2OTY2NDE1XHJzaWQ2OTcyMTg3XHJzaWQ3MDEzMTY0XHJzaWQ3MDc4MDAyDQpccnNpZDcxMDAzNTZccnNpZDcxMDk1MDJccnNpZDcxNjM3OTlccnNpZDcxNzE5OTZccnNpZDcxNzIxNjdccnNpZDcyNzkzOTVccnNpZDczMDA5MzBccnNpZDczNTA0NTVccnNpZDczNTc1MDJccnNpZDczNTg3OTBccnNpZDc0MzYyOTRccnNpZDc0ODc0MDVccnNpZDc0OTA5NzhccnNpZDc1NTY5NzJccnNpZDc3MzczOTdccnNpZDc3NDM3MzJccnNpZDc3NDY2OTJccnNpZDc4NjU1MzNccnNpZDc4NjgwNjBccnNpZDc4NzE3MTlccnNpZDc5MzE0MTUNClxyc2lkNzk0ODgwN1xyc2lkNzk1NjMwNFxyc2lkODA4MDgxMlxyc2lkODE1MDYyM1xyc2lkODE1NDU0NVxyc2lkODIxMDczMFxyc2lkODMzMjkxNFxyc2lkODQ1NzQ0MVxyc2lkODQ2OTkwMFxyc2lkODQ4MjMzNlxyc2lkODQ4NTczMVxyc2lkODQ4NTgyM1xyc2lkODYxMTUyMVxyc2lkODYxNjEzNFxyc2lkODY1NDMxMFxyc2lkODY2NDMyOFxyc2lkODY3MjQxMFxyc2lkODc0MDUzMFxyc2lkODgwNDE4OVxyc2lkODkyNzQ4M1xyc2lkODkzNDg1OA0KXHJzaWQ5MDU2NjcxXHJzaWQ5MDY5MjgyXHJzaWQ5MTgwNDgxXHJzaWQ5MTgxNTE3XHJzaWQ5MTkyMTU5XHJzaWQ5MzMwNjU2XHJzaWQ5MzczNzk4XHJzaWQ5MzgzOTcxXHJzaWQ5Mzg0NTYxXHJzaWQ5NDQ5MDU5XHJzaWQ5NDY1MTMxXHJzaWQ5NTA3MjczXHJzaWQ5NTE5OTM4XHJzaWQ5NTc0MjQ1XHJzaWQ5NTk2MDQ2XHJzaWQ5NzEwMDY1XHJzaWQ5NzIwOTU4XHJzaWQ5Nzk1NDY4XHJzaWQ5ODM3MTgyXHJzaWQxMDAzOTkxOVxyc2lkMTAxMDM3MDYNClxyc2lkMTAxMDY5NDZccnNpZDEwMTc5MzAzXHJzaWQxMDE5MDQ1Nlxyc2lkMTAyMjg1ODhccnNpZDEwMzU5MjU5XHJzaWQxMDQyMzI0M1xyc2lkMTA0NDk1NjBccnNpZDEwNDUxMzE0XHJzaWQxMDUxNjU4NVxyc2lkMTA1NTcwNjlccnNpZDEwNTYxMDg5XHJzaWQxMDU2MjI1M1xyc2lkMTA2OTUxNTRccnNpZDEwNzAyOTM4XHJzaWQxMDc2MTQ4OFxyc2lkMTA4MTU1NjBccnNpZDEwODkyNjMxXHJzaWQxMDg5NjE5Nlxyc2lkMTA5MDUxNzUNClxyc2lkMTA5MTA1MjFccnNpZDExMDM0NzkwXHJzaWQxMTA0MDMwNlxyc2lkMTExNDIxNTJccnNpZDExMTU0NjI1XHJzaWQxMTIxODQzNVxyc2lkMTEyMjg4MjRccnNpZDExMjc3ODgzXHJzaWQxMTI5OTAxNlxyc2lkMTEzMzkxNzdccnNpZDExMzQyMTk3XHJzaWQxMTM0NTE0MFxyc2lkMTEzNDYxMzBccnNpZDExMzQ5NjQ1XHJzaWQxMTM1OTI0OFxyc2lkMTE0MjU5NTFccnNpZDExNDY5NjY1XHJzaWQxMTQ3MDQ3N1xyc2lkMTE1NTAzMzUNClxyc2lkMTE2NzMxNTJccnNpZDExNjk2MTcyXHJzaWQxMTc1ODc1OFxyc2lkMTE3NjMyMTNccnNpZDExODExNzk4XHJzaWQxMTgyNjg2Nlxyc2lkMTE4NjQ4MzVccnNpZDExODc3NTk3XHJzaWQxMTg5Mzc5MFxyc2lkMTE5NDU3NzZccnNpZDEyMDA3MTI4XHJzaWQxMjAxMjI1OVxyc2lkMTIwMTk0NzBccnNpZDEyMDcxMTM5XHJzaWQxMjA4NTc1MFxyc2lkMTIwODU5NDZccnNpZDEyMDg3NTEzXHJzaWQxMjA4ODA2OFxyc2lkMTIwODkyODYNClxyc2lkMTIxMzQwNzlccnNpZDEyMTM5NjE5XHJzaWQxMjQwOTgwMFxyc2lkMTI0MTExMTJccnNpZDEyNDY5Nzc3XHJzaWQxMjQ3MDg0Nlxyc2lkMTI2MTM5ODRccnNpZDEyNjY1NDMxXHJzaWQxMjY2OTg1NVxyc2lkMTI3MzM0MTVccnNpZDEyNzkxODIyXHJzaWQxMjc5Mjk3MFxyc2lkMTI4NTAxMzVccnNpZDEyODY2Nzk0XHJzaWQxMjg2OTcyM1xyc2lkMTI5MTY2OTVccnNpZDEzMDUzMzM4XHJzaWQxMzA3MTE3MFxyc2lkMTMxMTE5MzENClxyc2lkMTMxMTYyMzlccnNpZDEzMTc2NzEzXHJzaWQxMzE4MDg1Nlxyc2lkMTMxOTA3NzdccnNpZDEzMjQ5MDMxXHJzaWQxMzI2Nzc2M1xyc2lkMTMzMTY0ODBccnNpZDEzMzI1MTQ2XHJzaWQxMzM3MDAzMlxyc2lkMTMzNzU1MTNccnNpZDEzMzc2ODQyXHJzaWQxMzM4MDUyMVxyc2lkMTM1MDU3NDVccnNpZDEzNTA3MzEyXHJzaWQxMzUyNzE4Nlxyc2lkMTM1ODkyMDBccnNpZDEzNjM3NDAwXHJzaWQxMzY0NzgzN1xyc2lkMTM4NTYwNTkNClxyc2lkMTM4NTYzNTlccnNpZDEzOTE1NDczXHJzaWQxMzk3NDIzNVxyc2lkMTM5NzUxNzFccnNpZDE0MDUzMDYyXHJzaWQxNDA5MjY3Mlxyc2lkMTQxMDU3MDdccnNpZDE0MTA5ODkwXHJzaWQxNDExNzA0MFxyc2lkMTQxNjQ0NTVccnNpZDE0MTgzOTc0XHJzaWQxNDI4ODAzNlxyc2lkMTQyOTE5MjZccnNpZDE0MzczOTY0XHJzaWQxNDQ0MzU1Mlxyc2lkMTQ2MTYxNDZccnNpZDE0NjI3MDcwXHJzaWQxNDYzMjQ5NFxyc2lkMTQ2NDU5NzgNClxyc2lkMTQ2ODI1ODVccnNpZDE0NjkyNDMwXHJzaWQxNDY5Mjg0OFxyc2lkMTQ3NTI3MTJccnNpZDE0NzU1NTM3XHJzaWQxNDc2MDEzM1xyc2lkMTQ3NzAyMjBccnNpZDE0NzcwMjU1XHJzaWQxNDgxNTYyNFxyc2lkMTQ4MTU3MDNccnNpZDE0ODc3Mzk2XHJzaWQxNDg5MjU5OVxyc2lkMTQ5MDQwMTdccnNpZDE0OTUyMTA3XHJzaWQxNDk2Mjg5Nlxyc2lkMTUwMjA4MTFccnNpZDE1MDg4MDY3XHJzaWQxNTA5MjkxM1xyc2lkMTUxNDMxODcNClxyc2lkMTUyMTE0MjZccnNpZDE1MjE3MTk5XHJzaWQxNTI3MTU3OFxyc2lkMTUyODk5MThccnNpZDE1MzQ2MjgxXHJzaWQxNTQyNjE3OFxyc2lkMTU0MzA2MzRccnNpZDE1NDc0NTE5XHJzaWQxNTQ5ODYzMlxyc2lkMTU1MzkxODhccnNpZDE1NTYzNDg3XHJzaWQxNTY4NDU5N1xyc2lkMTU3NDQxMTZccnNpZDE1NzQ2OTA1XHJzaWQxNTc2MTI2NFxyc2lkMTU3OTQ4ODdccnNpZDE1ODA1OTExXHJzaWQxNTgxNTg5Mlxyc2lkMTU4NzM3MzMNClxyc2lkMTU4ODE5NjZccnNpZDE1OTM0MDI4XHJzaWQxNTk0MTkwMlxyc2lkMTYwMDEwNTNccnNpZDE2MDAyNTY1XHJzaWQxNjAwMzczNFxyc2lkMTYwMTQyNTRccnNpZDE2MDIyNjk2XHJzaWQxNjA3MTI5Nlxyc2lkMTYwODEwMTFccnNpZDE2MTMxMTUxXHJzaWQxNjEzNDMzOFxyc2lkMTYxNTA0MDNccnNpZDE2MTkxNzU1XHJzaWQxNjI2ODM1NFxyc2lkMTY0MDUyODFccnNpZDE2NDgxMzU2XHJzaWQxNjUxODk4NVxyc2lkMTY1Mzc0MjENClxyc2lkMTY1Mzk3OTRccnNpZDE2NTkzODk0XHJzaWQxNjU5NDM2MFxyc2lkMTY2MDU5NDRccnNpZDE2NjEzMTk0XHJzaWQxNjY2Mzg1MX17XG1tYXRoUHJcbW1hdGhGb250MzRcbWJya0JpbjBcbWJya0JpblN1YjBcbXNtYWxsRnJhYzBcbWRpc3BEZWYxXG1sTWFyZ2luMFxtck1hcmdpbjBcbWRlZkpjMVxtd3JhcEluZGVudDE0NDBcbWludExpbTBcbW5hcnlMaW0xfXtcaW5mb3tcY3JlYXRpbVx5cjIwMTVcbW82XGR5MjlcaHIxM1xtaW40MH0NCntccmV2dGltXHlyMjAxNVxtbzZcZHkyOVxocjEzXG1pbjQwfXtcdmVyc2lvbjF9e1xlZG1pbnMwfXtcbm9mcGFnZXMzfXtcbm9md29yZHM0MzM4MH17XG5vZmNoYXJzMjQ3MjY5fXtcbm9mY2hhcnN3czI5MDA2OX17XHZlcm4zMjc3NX19e1wqXHhtbG5zdGJsIHtceG1sbnMxIGh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vb2ZmaWNlL3dvcmQvMjAwMy93b3JkbWx9e1x4bWxuczIgdXJuLWxlZ2FsbWFjcGFjLWRhdGEvMTB9fQ0KXHBhcGVydzEyMjQwXHBhcGVyaDE1ODQwXG1hcmdsMTQ0MFxtYXJncjE0NDBcbWFyZ3QxNDQwXG1hcmdiMTQ0MFxndXR0ZXIwXGx0cnNlY3QgDQpcd2lkb3djdHJsXGZ0bmJqXGFlbmRkb2NcdHJhY2ttb3ZlczBcdHJhY2tmb3JtYXR0aW5nMFxkb25vdGVtYmVkc3lzZm9udDFccmVseW9udm1sMVxkb25vdGVtYmVkbGluZ2RhdGEwXGdyZmRvY2V2ZW50czBcdmFsaWRhdGV4bWwxXHNob3dwbGFjZWhvbGR0ZXh0MFxpZ25vcmVtaXhlZGNvbnRlbnQwXHNhdmVpbnZhbGlkeG1sMFxzaG93eG1sZXJyb3JzMVxub3hsYXR0b3llbg0KXGV4cHNocnRuXG5vdWx0cmxzcGNcZG50Ymxuc2JkYlxub3NwYWNlZm9ydWxcZm9ybXNoYWRlXGhvcnpkb2NcZGdtYXJnaW5cZGdoc3BhY2U1N1xkZ3ZzcGFjZTE4MFxkZ2hvcmlnaW4xNDQwXGRndm9yaWdpbjE0NDBcZGdoc2hvdzFcZGd2c2hvdzINClxqZXhwYW5kXHZpZXdraW5kMVx2aWV3c2NhbGUxMDBccGdicmRyaGVhZFxwZ2JyZHJmb290XHNwbHl0d25pbmVcZnRubHl0d25pbmVcaHRtYXV0c3Bcbm9sbmh0YWRqdGJsXHVzZWx0YmFsblxhbG50YmxpbmRcbHl0Y2FsY3RibHdkXGx5dHRibHJ0Z3JcbG5icmtydWxlXG5vYnJrd3JwdGJsXHNuYXB0b2dyaWRpbmNlbGxccmVtcGVyc29uYWxpbmZvXGFsbG93ZmllbGRlbmRzZWwNClx3cnBwdW5jdFxhc2lhbmJya3J1bGVccnNpZHJvb3Q1OTkzNTk5XG5ld3RibHN0eXJ1bHNcbm9ncm93YXV0b2ZpdFxyZW1kdHRtXHV0aW5sIFxmZXQwe1wqXHdncmZmbXRmaWx0ZXIgMDEzOH1caWxmb21hY2F0Y2xudXAxNg0Ke1wqXGRvY3ZhciB7bXBvMDA1MDAxMDF9e0luY2x1ZGVUaW1lXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj03MjU0ZWI0Ny02YWU5LTQwYmMtYmI0Mi01ZGE2ZjQwNzc3NmFcJ2E2SW5jbHVkZVRpbWVcJ2E2SW5jbHVkZSBUaW1lXCdhNjBcJ2E2OFwnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZVRpbWVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZVRpbWUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MFwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBoOm1tYW0vcG1cJzdiW1ZhcmlhYmxlX19JbnNlcnREYXRlQXNGaWVsZF0gXj8gIC9GXCc3ZCAgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZURhdGVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU2Mjg1OTY1MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzAxNjgzMzk2fXtJbmNsdWRlRHJhZnRcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTc3NjZmM2FlLTkwZTAtNDgxMC1iYWQ1LTU0ZDA5MmE1ZmE3ZFwnYTZJbmNsdWRlRHJhZnRcJ2E2SW5jbHVkZSBEcmFmdFwnYTYwXCdhNjZcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVEcmFmdF1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRHJhZnQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MlwnODdbTXlWYWx1ZV0gXj0NCiB0cnVlIF4/IERSQUZUIF46IFtFbXB0eV1cJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlJcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjYzMzkwMDg4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPX19DQp7XCpcZG9jdmFyIHttcG8wMjg2MzA5N317RG9jSURcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWNhMDhmYzQ5LTdlMjMtNDkxNy04MzJmLWVhYjk1MTc5ODY0ZVwnYTZEb2NJRFwnYTZEb2MgSURcJ2E2MFwnYTYxXCdhNltETVNfX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyDQpzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGUNCkF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2XCdhNlwnYTY3XCdhNlwnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MFwnODdbRE1TXw0KX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyc2lvbl0gXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF5PUiBbVmFyaWFiDQpsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXj8gW0RNU19fQXV0aG9ySURdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBeQU5EIFwnN2JbVmFyaWFibGUNCl9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjBcJ2E2MVwnYTZcJ2E2XCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY4MTg4OTQ1NzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0xDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvMDMxNzE4MTl9e0luY2x1ZGVEcmFmdFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Nzc2NmYzYWUtOTBlMC00ODEwLWJhZDUtNTRkMDkyYTVmYTdkXCdhNkluY2x1ZGVEcmFmdFwnYTZJbmNsdWRlIERyYWZ0XCdhNjBcJ2E2NlwnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURyYWZ0XVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVEcmFmdC5odG1sXCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcyXCc4N1tNeVZhbHVlXSBePQ0KIHRydWUgXj8gRFJBRlQgXjogW0VtcHR5XVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2UlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NjMzOTAwODgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9fX0NCntcKlxkb2N2YXIge21wbzAzMzAxOTYwfXtGb290ZXIoQm90dG9tTGVmdClfMVwnY2NcJ2NkUGFydE51bWJlcj0zXCdjY1wnY2RPYmplY3REYXRhPVNlZ21lbnRJRD0xMDc4fE9iamVjdFR5cGVJRD00MDF8TmFtZT1Gb290ZXIoQm90dG9tTGVmdCl8RGlzcGxheU5hbWU9Rm9vdGVyIChMZWZ0IEFsaWduZWQpfEludGVuZGVkVXNlPTJ8QXV0aG9yTm9kZVVJTGFiZWw9fE1heEF1dGhvcnM9MHxIZWxwVGV4dD1maWxlOi8vL1RyYWlsZXJfVHJhaWxlci5odG1sfE1lbnVJbnNlcnRpb25PcHRpb25zPTI1NnxEZWZhdWx0TWUNCm51SW5zZXJ0aW9uQmVoYXZpb3I9MHxEZWZhdWx0RHJhZ0xvY2F0aW9uPTF8RGVmYXVsdERyYWdCZWhhdmlvcj0wfERlZmF1bHREb3VibGVDbGlja0xvY2F0aW9uPTR8RGVmYXVsdERvdWJsZUNsaWNrQmVoYXZpb3I9MHxMMD0wfEwxPTB8TDI9MHxMMz0wfEw0PTB8QXV0aG9yQ29udHJvbFByb3BlcnRpZXM9fFNob3dDaG9vc2VyPXRydWV8TGlua0F1dGhvcnNUb1BhcmVudERlZj18VHJhbnNsYXRpb25JRD0wfFJlcXVpcmVkU3R5bGVzPU1hY1BhYyBUcg0KYWlsZXJ8VmFyaWFibGVEZWZpbml0aW9uPTQzNDA3NGNlLWEzZGItNDljNy05N2Q2LWFhNzE5NjY2MTcxMVwnYTZJbnNlcnREYXRlQXNGaWVsZFwnYTZJbnNlcnQgRGF0ZS9UaW1lIGFzIEZpZWxkIENvZGVcJ2E2MFwnYTY5XCdhNltUeXBlUHJlZmVyZW5jZV9JbnNlcnREYXRlQXNGaWVsZF1cJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbnNlcnREYXRlQXNGaWVsZC5odG1sXCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2SW5jbHVkZURhdGUsSW5jbHVkZVRpDQptZVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2RlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFZhcmlhYmxlRGVmaW5pdGlvbj04ZWFlNTJjMC1hZmRiLTQxMTItOTZmNi1iOGFlNmFjYmRiYmJcJ2E2SW5jbHVkZVR5cGlzdFwnYTZJbmNsdWRlIFR5cGlzdCBJRFwnYTYwXCdhNjVcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVHlwaXN0XVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNlBcJ2E2RmFsc2VcJ2E2MVwnYTZGYWwNCnNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPTExNGM0ZGYxLTIzZjUtNDU4Mi05N2FlLTgwMWIzOGIxMjZkNlwnYTZJbmNsdWRlQXV0aG9yXCdhNkluY2x1ZGUgQXV0aG9yIElEXCdhNjBcJ2E2NFwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVBdXRob3JdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2QVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWEzNw0KY2U5OTMtNDY0Ni00ZTg4LTk0ZWQtNGEzNmM3YjIxYTY3XCdhNkluY2x1ZGVDbGllbnRNYXR0ZXJcJ2E2SW5jbHVkZSBDbGllbnQgTWF0dGVyIE5vLlwnYTYwXCdhNjNcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlQ2xpZW50TWF0dGVyXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNk1cJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj1jNzM1NGZkZS03NDdkLTRjDQoxMi05OTMxLTAxMTVmNzlkMmFjYlwnYTZJbmNsdWRlVmVyc2lvblwnYTZJbmNsdWRlIFZlcnNpb25cJ2E2MFwnYTYyXCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZVZlcnNpb25dXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8XCdjY1wnY2RSZXNlcnZlZD1tcHM5MjQyNTM4MjAwMDAwMDAwMDAwMDAwMDEwNzgwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0yDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvMDM2NTg1MjF9e0luY2x1ZGVEYXRlXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj1mY2JhNDZlZC00ZDU3LTQ5ZTQtOTAyZC0xMWM0OGUyODlkMmNcJ2E2SW5jbHVkZURhdGVcJ2E2SW5jbHVkZSBEYXRlXCdhNjBcJ2E2N1wnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURhdGVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURhdGUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MlwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBNTS9kZC95eVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVUaW1lXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZEXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1ODg1ODQ0ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG8wMzkyMzI3M317SW5jbHVkZURhdGVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWZjYmE0NmVkLTRkNTctNDllNC05MDJkLTExYzQ4ZTI4OWQyY1wnYTZJbmNsdWRlRGF0ZVwnYTZJbmNsdWRlIERhdGVcJ2E2MFwnYTY3XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRGF0ZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRGF0ZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcyXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IE1NL2RkL3l5XCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZVRpbWVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU4ODU4NDQ4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzAzOTc1ODAzfXtJbmNsdWRlRHJhZnRcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTc3NjZmM2FlLTkwZTAtNDgxMC1iYWQ1LTU0ZDA5MmE1ZmE3ZFwnYTZJbmNsdWRlRHJhZnRcJ2E2SW5jbHVkZSBEcmFmdFwnYTYwXCdhNjZcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVEcmFmdF1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRHJhZnQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MlwnODdbTXlWYWx1ZV0gXj0NCiB0cnVlIF4/IERSQUZUIF46IFtFbXB0eV1cJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlJcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjYzMzkwMDg4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPX19DQp7XCpcZG9jdmFyIHttcG8wNjYyODEyMH17RG9jSURcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWNhMDhmYzQ5LTdlMjMtNDkxNy04MzJmLWVhYjk1MTc5ODY0ZVwnYTZEb2NJRFwnYTZEb2MgSURcJ2E2MFwnYTYxXCdhNltETVNfX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyDQpzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGUNCkF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2XCdhNlwnYTY3XCdhNlwnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MFwnODdbRE1TXw0KX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyc2lvbl0gXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF5PUiBbVmFyaWFiDQpsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXj8gW0RNU19fQXV0aG9ySURdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBeQU5EIFwnN2JbVmFyaWFibGUNCl9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjBcJ2E2MVwnYTZcJ2E2XCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY4MTg4OTQ1NzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0xDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvMDY3NTM1MzR9e0Zvb3RlcihCb3R0b21MZWZ0KV8xXCdjY1wnY2RQYXJ0TnVtYmVyPTNcJ2NjXCdjZE9iamVjdERhdGE9U2VnbWVudElEPTEwNzh8T2JqZWN0VHlwZUlEPTQwMXxOYW1lPUZvb3RlcihCb3R0b21MZWZ0KXxEaXNwbGF5TmFtZT1Gb290ZXIgKExlZnQgQWxpZ25lZCl8SW50ZW5kZWRVc2U9MnxBdXRob3JOb2RlVUlMYWJlbD18TWF4QXV0aG9ycz0wfEhlbHBUZXh0PWZpbGU6Ly8vVHJhaWxlcl9UcmFpbGVyLmh0bWx8TWVudUluc2VydGlvbk9wdGlvbnM9MjU2fERlZmF1bHRNZQ0KbnVJbnNlcnRpb25CZWhhdmlvcj0wfERlZmF1bHREcmFnTG9jYXRpb249MXxEZWZhdWx0RHJhZ0JlaGF2aW9yPTB8RGVmYXVsdERvdWJsZUNsaWNrTG9jYXRpb249NHxEZWZhdWx0RG91YmxlQ2xpY2tCZWhhdmlvcj0wfEwwPTB8TDE9MHxMMj0wfEwzPTB8TDQ9MHxBdXRob3JDb250cm9sUHJvcGVydGllcz18U2hvd0Nob29zZXI9dHJ1ZXxMaW5rQXV0aG9yc1RvUGFyZW50RGVmPXxUcmFuc2xhdGlvbklEPTB8UmVxdWlyZWRTdHlsZXM9TWFjUGFjIFRyDQphaWxlcnxWYXJpYWJsZURlZmluaXRpb249NDM0MDc0Y2UtYTNkYi00OWM3LTk3ZDYtYWE3MTk2NjYxNzExXCdhNkluc2VydERhdGVBc0ZpZWxkXCdhNkluc2VydCBEYXRlL1RpbWUgYXMgRmllbGQgQ29kZVwnYTYwXCdhNjlcJ2E2W1R5cGVQcmVmZXJlbmNlX0luc2VydERhdGVBc0ZpZWxkXVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luc2VydERhdGVBc0ZpZWxkLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZJbmNsdWRlRGF0ZSxJbmNsdWRlVGkNCm1lXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZGXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8VmFyaWFibGVEZWZpbml0aW9uPThlYWU1MmMwLWFmZGItNDExMi05NmY2LWI4YWU2YWNiZGJiYlwnYTZJbmNsdWRlVHlwaXN0XCdhNkluY2x1ZGUgVHlwaXN0IElEXCdhNjBcJ2E2NVwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVUeXBpc3RdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2UFwnYTZGYWxzZVwnYTYxXCdhNkZhbA0Kc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249MTE0YzRkZjEtMjNmNS00NTgyLTk3YWUtODAxYjM4YjEyNmQ2XCdhNkluY2x1ZGVBdXRob3JcJ2E2SW5jbHVkZSBBdXRob3IgSURcJ2E2MFwnYTY0XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUF1dGhvcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZBXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YTM3DQpjZTk5My00NjQ2LTRlODgtOTRlZC00YTM2YzdiMjFhNjdcJ2E2SW5jbHVkZUNsaWVudE1hdHRlclwnYTZJbmNsdWRlIENsaWVudCBNYXR0ZXIgTm8uXCdhNjBcJ2E2M1wnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVDbGllbnRNYXR0ZXJdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWM3MzU0ZmRlLTc0N2QtNGMNCjEyLTk5MzEtMDExNWY3OWQyYWNiXCdhNkluY2x1ZGVWZXJzaW9uXCdhNkluY2x1ZGUgVmVyc2lvblwnYTYwXCdhNjJcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVmVyc2lvbl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxcJ2NjXCdjZFJlc2VydmVkPW1wczkyNDI1MzgyMDAwMDAwMDAwMDAwMDAwMTA3ODAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTINCn19DQp7XCpcZG9jdmFyIHttcG8wNzAzOTgzOX17SW5jbHVkZVRpbWVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTcyNTRlYjQ3LTZhZTktNDBiYy1iYjQyLTVkYTZmNDA3Nzc2YVwnYTZJbmNsdWRlVGltZVwnYTZJbmNsdWRlIFRpbWVcJ2E2MFwnYTY4XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlVGltZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlVGltZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcwXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IGg6bW1hbS9wbVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkICBeOiBbRW1wdHldXCdhNjFcJzg2XCc4NjRcJzg2MlwnODZJbnNlcnREYXRlQXNGaWVsZFwnODdbTXlWYWx1ZV0gXk9SIFtWYXJpYWJsZV9JbmNsdWRlRGF0ZV1cJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2VFwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NTYyODU5NjUwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9DQp9fQ0Ke1wqXGRvY3ZhciB7bXBvMDc1MzIxODV9e0luY2x1ZGVUaW1lXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj03MjU0ZWI0Ny02YWU5LTQwYmMtYmI0Mi01ZGE2ZjQwNzc3NmFcJ2E2SW5jbHVkZVRpbWVcJ2E2SW5jbHVkZSBUaW1lXCdhNjBcJ2E2OFwnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZVRpbWVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZVRpbWUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MFwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBoOm1tYW0vcG1cJzdiW1ZhcmlhYmxlX19JbnNlcnREYXRlQXNGaWVsZF0gXj8gIC9GXCc3ZCAgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZURhdGVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU2Mjg1OTY1MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzA4NjA1NTIyfXtJbmNsdWRlVGltZVwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249NzI1NGViNDctNmFlOS00MGJjLWJiNDItNWRhNmY0MDc3NzZhXCdhNkluY2x1ZGVUaW1lXCdhNkluY2x1ZGUgVGltZVwnYTYwXCdhNjhcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVUaW1lXVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVUaW1lLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxN1wnODYwXCc4NzBcJzg3XCc4N1tNeVZhbHVlXSBePSB0cnUNCmUgXj8gaDptbWFtL3BtXCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVEYXRlXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZUXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1NjI4NTk2NTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG8wOTE5MDU3MX17RG9jSURcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWNhMDhmYzQ5LTdlMjMtNDkxNy04MzJmLWVhYjk1MTc5ODY0ZVwnYTZEb2NJRFwnYTZEb2MgSURcJ2E2MFwnYTYxXCdhNltETVNfX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyDQpzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGUNCkF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2XCdhNlwnYTY3XCdhNlwnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MFwnODdbRE1TXw0KX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyc2lvbl0gXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF5PUiBbVmFyaWFiDQpsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXj8gW0RNU19fQXV0aG9ySURdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBeQU5EIFwnN2JbVmFyaWFibGUNCl9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjBcJ2E2MVwnYTZcJ2E2XCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY4MTg4OTQ1NzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0xDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvMDk2NzM2NTV9e0RvY0lEXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj1jYTA4ZmM0OS03ZTIzLTQ5MTctODMyZi1lYWI5NTE3OTg2NGVcJ2E2RG9jSURcJ2E2RG9jIElEXCdhNjBcJ2E2MVwnYTZbRE1TX19Jc1Byb2ZpbGVkXSBePyBcJzdiW0NIT09TRV9fW0RNU19fTGlicmFyeV1fX1VTW0NIQVJfXzk1XUJMWF9fQkxYX19VU0FfX09IU1VTQV9fVE9LWU9fX09IU1RPS1lPX19BU0lBX19PSFNBU0lBX19FVVJPUEVfX09IU0VVUk9QRV9fQkxYXTpbRE1TX19Eb2NOdW1iZXJdLltETVNfX1Zlcg0Kc2lvbl0gXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0NoYXJfXzExXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXj8gW0RNU19fQ2xpZW50SURdLVtETVNfX01hdHRlcklEXSAgXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlDQpBdXRob3JdIF49IHRydWUgXj8gW0RNU19fQXV0aG9ySURdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBeQU5EIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWVcJzdkIF4/IC8gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtETVNfX1R5cGlzdElEXSBeOiBbRW1wdHldXCc3ZFwnN2QgXjogW0RvY3VtZW50X19GdWxsTmFtZV1cJ2E2XCdhNlwnYTZcJ2E2N1wnYTZcJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYxXCc4NlwnODcwXCc4NzBcJzg3W0RNU18NCl9Jc1Byb2ZpbGVkXSBePyBcJzdiW0NIT09TRV9fW0RNU19fTGlicmFyeV1fX1VTW0NIQVJfXzk1XUJMWF9fQkxYX19VU0FfX09IU1VTQV9fVE9LWU9fX09IU1RPS1lPX19BU0lBX19PSFNBU0lBX19FVVJPUEVfX09IU0VVUk9QRV9fQkxYXTpbRE1TX19Eb2NOdW1iZXJdLltETVNfX1ZlcnNpb25dIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYg0KbGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0NoYXJfXzExXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXj8gW0RNU19fQ2xpZW50SURdLVtETVNfX01hdHRlcklEXSAgXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF4/IFtETVNfX0F1dGhvcklEXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXkFORCBcJzdiW1ZhcmlhYmxlDQpfX0luY2x1ZGVBdXRob3JdIF49IHRydWVcJzdkIF4/IC8gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtETVNfX1R5cGlzdElEXSBeOiBbRW1wdHldXCc3ZFwnN2QgXjogW0RvY3VtZW50X19GdWxsTmFtZV1cJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYwXCdhNjFcJ2E2XCdhNlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2ODE4ODk0NTcwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9MQ0KfX0NCntcKlxkb2N2YXIge21wbzEwMjE1NTM5fXtGb290ZXIoQm90dG9tTGVmdClfMVwnY2NcJ2NkUGFydE51bWJlcj0zXCdjY1wnY2RPYmplY3REYXRhPVNlZ21lbnRJRD0xMDc4fE9iamVjdFR5cGVJRD00MDF8TmFtZT1Gb290ZXIoQm90dG9tTGVmdCl8RGlzcGxheU5hbWU9Rm9vdGVyIChMZWZ0IEFsaWduZWQpfEludGVuZGVkVXNlPTJ8QXV0aG9yTm9kZVVJTGFiZWw9fE1heEF1dGhvcnM9MHxIZWxwVGV4dD1maWxlOi8vL1RyYWlsZXJfVHJhaWxlci5odG1sfE1lbnVJbnNlcnRpb25PcHRpb25zPTI1NnxEZWZhdWx0TWUNCm51SW5zZXJ0aW9uQmVoYXZpb3I9MHxEZWZhdWx0RHJhZ0xvY2F0aW9uPTF8RGVmYXVsdERyYWdCZWhhdmlvcj0wfERlZmF1bHREb3VibGVDbGlja0xvY2F0aW9uPTR8RGVmYXVsdERvdWJsZUNsaWNrQmVoYXZpb3I9MHxMMD0wfEwxPTB8TDI9MHxMMz0wfEw0PTB8QXV0aG9yQ29udHJvbFByb3BlcnRpZXM9fFNob3dDaG9vc2VyPXRydWV8TGlua0F1dGhvcnNUb1BhcmVudERlZj18VHJhbnNsYXRpb25JRD0wfFJlcXVpcmVkU3R5bGVzPU1hY1BhYyBUcg0KYWlsZXJ8VmFyaWFibGVEZWZpbml0aW9uPTQzNDA3NGNlLWEzZGItNDljNy05N2Q2LWFhNzE5NjY2MTcxMVwnYTZJbnNlcnREYXRlQXNGaWVsZFwnYTZJbnNlcnQgRGF0ZS9UaW1lIGFzIEZpZWxkIENvZGVcJ2E2MFwnYTY5XCdhNltUeXBlUHJlZmVyZW5jZV9JbnNlcnREYXRlQXNGaWVsZF1cJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbnNlcnREYXRlQXNGaWVsZC5odG1sXCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2SW5jbHVkZURhdGUsSW5jbHVkZVRpDQptZVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2RlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFZhcmlhYmxlRGVmaW5pdGlvbj04ZWFlNTJjMC1hZmRiLTQxMTItOTZmNi1iOGFlNmFjYmRiYmJcJ2E2SW5jbHVkZVR5cGlzdFwnYTZJbmNsdWRlIFR5cGlzdCBJRFwnYTYwXCdhNjVcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVHlwaXN0XVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNlBcJ2E2RmFsc2VcJ2E2MVwnYTZGYWwNCnNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPTExNGM0ZGYxLTIzZjUtNDU4Mi05N2FlLTgwMWIzOGIxMjZkNlwnYTZJbmNsdWRlQXV0aG9yXCdhNkluY2x1ZGUgQXV0aG9yIElEXCdhNjBcJ2E2NFwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVBdXRob3JdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2QVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWEzNw0KY2U5OTMtNDY0Ni00ZTg4LTk0ZWQtNGEzNmM3YjIxYTY3XCdhNkluY2x1ZGVDbGllbnRNYXR0ZXJcJ2E2SW5jbHVkZSBDbGllbnQgTWF0dGVyIE5vLlwnYTYwXCdhNjNcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlQ2xpZW50TWF0dGVyXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNk1cJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj1jNzM1NGZkZS03NDdkLTRjDQoxMi05OTMxLTAxMTVmNzlkMmFjYlwnYTZJbmNsdWRlVmVyc2lvblwnYTZJbmNsdWRlIFZlcnNpb25cJ2E2MFwnYTYyXCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZVZlcnNpb25dXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8XCdjY1wnY2RSZXNlcnZlZD1tcHM5MjQyNTM4MjAwMDAwMDAwMDAwMDAwMDEwNzgwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0yDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvMTA2OTI3NTF9e0luY2x1ZGVEYXRlXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj1mY2JhNDZlZC00ZDU3LTQ5ZTQtOTAyZC0xMWM0OGUyODlkMmNcJ2E2SW5jbHVkZURhdGVcJ2E2SW5jbHVkZSBEYXRlXCdhNjBcJ2E2N1wnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURhdGVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURhdGUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MlwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBNTS9kZC95eVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVUaW1lXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZEXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1ODg1ODQ0ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG8xMTQzODI4Nn17RG9jSURcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWNhMDhmYzQ5LTdlMjMtNDkxNy04MzJmLWVhYjk1MTc5ODY0ZVwnYTZEb2NJRFwnYTZEb2MgSURcJ2E2MFwnYTYxXCdhNltETVNfX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyDQpzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGUNCkF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2XCdhNlwnYTY3XCdhNlwnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MFwnODdbRE1TXw0KX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyc2lvbl0gXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF5PUiBbVmFyaWFiDQpsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXj8gW0RNU19fQXV0aG9ySURdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBeQU5EIFwnN2JbVmFyaWFibGUNCl9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjBcJ2E2MVwnYTZcJ2E2XCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY4MTg4OTQ1NzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0xDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvMTI2NjE4ODB9e0luY2x1ZGVUaW1lXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj03MjU0ZWI0Ny02YWU5LTQwYmMtYmI0Mi01ZGE2ZjQwNzc3NmFcJ2E2SW5jbHVkZVRpbWVcJ2E2SW5jbHVkZSBUaW1lXCdhNjBcJ2E2OFwnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZVRpbWVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZVRpbWUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MFwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBoOm1tYW0vcG1cJzdiW1ZhcmlhYmxlX19JbnNlcnREYXRlQXNGaWVsZF0gXj8gIC9GXCc3ZCAgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZURhdGVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU2Mjg1OTY1MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzEzODUzMTUxfXtGb290ZXIoQm90dG9tTGVmdClfMVwnY2NcJ2NkUGFydE51bWJlcj0zXCdjY1wnY2RPYmplY3REYXRhPVNlZ21lbnRJRD0xMDc4fE9iamVjdFR5cGVJRD00MDF8TmFtZT1Gb290ZXIoQm90dG9tTGVmdCl8RGlzcGxheU5hbWU9Rm9vdGVyIChMZWZ0IEFsaWduZWQpfEludGVuZGVkVXNlPTJ8QXV0aG9yTm9kZVVJTGFiZWw9fE1heEF1dGhvcnM9MHxIZWxwVGV4dD1maWxlOi8vL1RyYWlsZXJfVHJhaWxlci5odG1sfE1lbnVJbnNlcnRpb25PcHRpb25zPTI1NnxEZWZhdWx0TWUNCm51SW5zZXJ0aW9uQmVoYXZpb3I9MHxEZWZhdWx0RHJhZ0xvY2F0aW9uPTF8RGVmYXVsdERyYWdCZWhhdmlvcj0wfERlZmF1bHREb3VibGVDbGlja0xvY2F0aW9uPTR8RGVmYXVsdERvdWJsZUNsaWNrQmVoYXZpb3I9MHxMMD0wfEwxPTB8TDI9MHxMMz0wfEw0PTB8QXV0aG9yQ29udHJvbFByb3BlcnRpZXM9fFNob3dDaG9vc2VyPXRydWV8TGlua0F1dGhvcnNUb1BhcmVudERlZj18VHJhbnNsYXRpb25JRD0wfFJlcXVpcmVkU3R5bGVzPU1hY1BhYyBUcg0KYWlsZXJ8VmFyaWFibGVEZWZpbml0aW9uPTQzNDA3NGNlLWEzZGItNDljNy05N2Q2LWFhNzE5NjY2MTcxMVwnYTZJbnNlcnREYXRlQXNGaWVsZFwnYTZJbnNlcnQgRGF0ZS9UaW1lIGFzIEZpZWxkIENvZGVcJ2E2MFwnYTY5XCdhNltUeXBlUHJlZmVyZW5jZV9JbnNlcnREYXRlQXNGaWVsZF1cJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbnNlcnREYXRlQXNGaWVsZC5odG1sXCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2SW5jbHVkZURhdGUsSW5jbHVkZVRpDQptZVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2RlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFZhcmlhYmxlRGVmaW5pdGlvbj04ZWFlNTJjMC1hZmRiLTQxMTItOTZmNi1iOGFlNmFjYmRiYmJcJ2E2SW5jbHVkZVR5cGlzdFwnYTZJbmNsdWRlIFR5cGlzdCBJRFwnYTYwXCdhNjVcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVHlwaXN0XVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNlBcJ2E2RmFsc2VcJ2E2MVwnYTZGYWwNCnNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPTExNGM0ZGYxLTIzZjUtNDU4Mi05N2FlLTgwMWIzOGIxMjZkNlwnYTZJbmNsdWRlQXV0aG9yXCdhNkluY2x1ZGUgQXV0aG9yIElEXCdhNjBcJ2E2NFwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVBdXRob3JdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2QVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWEzNw0KY2U5OTMtNDY0Ni00ZTg4LTk0ZWQtNGEzNmM3YjIxYTY3XCdhNkluY2x1ZGVDbGllbnRNYXR0ZXJcJ2E2SW5jbHVkZSBDbGllbnQgTWF0dGVyIE5vLlwnYTYwXCdhNjNcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlQ2xpZW50TWF0dGVyXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNk1cJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj1jNzM1NGZkZS03NDdkLTRjDQoxMi05OTMxLTAxMTVmNzlkMmFjYlwnYTZJbmNsdWRlVmVyc2lvblwnYTZJbmNsdWRlIFZlcnNpb25cJ2E2MFwnYTYyXCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZVZlcnNpb25dXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8XCdjY1wnY2RSZXNlcnZlZD1tcHM5MjQyNTM4MjAwMDAwMDAwMDAwMDAwMDEwNzgwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0yDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvMTQyMDUyOTV9e0luY2x1ZGVEcmFmdFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Nzc2NmYzYWUtOTBlMC00ODEwLWJhZDUtNTRkMDkyYTVmYTdkXCdhNkluY2x1ZGVEcmFmdFwnYTZJbmNsdWRlIERyYWZ0XCdhNjBcJ2E2NlwnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURyYWZ0XVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVEcmFmdC5odG1sXCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcyXCc4N1tNeVZhbHVlXSBePQ0KIHRydWUgXj8gRFJBRlQgXjogW0VtcHR5XVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2UlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NjMzOTAwODgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9fX0NCntcKlxkb2N2YXIge21wbzE0NTE2NzcxfXtJbmNsdWRlRGF0ZVwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249ZmNiYTQ2ZWQtNGQ1Ny00OWU0LTkwMmQtMTFjNDhlMjg5ZDJjXCdhNkluY2x1ZGVEYXRlXCdhNkluY2x1ZGUgRGF0ZVwnYTYwXCdhNjdcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVEYXRlXVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVEYXRlLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxN1wnODYwXCc4NzJcJzg3XCc4N1tNeVZhbHVlXSBePSB0cnUNCmUgXj8gTU0vZGQveXlcJzdiW1ZhcmlhYmxlX19JbnNlcnREYXRlQXNGaWVsZF0gXj8gIC9GXCc3ZCBeOiBbRW1wdHldXCdhNjFcJzg2XCc4NjRcJzg2MlwnODZJbnNlcnREYXRlQXNGaWVsZFwnODdbTXlWYWx1ZV0gXk9SIFtWYXJpYWJsZV9JbmNsdWRlVGltZV1cJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2RFwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NTg4NTg0NDgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9DQp9fQ0Ke1wqXGRvY3ZhciB7bXBvMTU0MzI1MTl9e0Zvb3RlcihCb3R0b21MZWZ0KV8xXCdjY1wnY2RQYXJ0TnVtYmVyPTNcJ2NjXCdjZE9iamVjdERhdGE9U2VnbWVudElEPTEwNzh8T2JqZWN0VHlwZUlEPTQwMXxOYW1lPUZvb3RlcihCb3R0b21MZWZ0KXxEaXNwbGF5TmFtZT1Gb290ZXIgKExlZnQgQWxpZ25lZCl8SW50ZW5kZWRVc2U9MnxBdXRob3JOb2RlVUlMYWJlbD18TWF4QXV0aG9ycz0wfEhlbHBUZXh0PWZpbGU6Ly8vVHJhaWxlcl9UcmFpbGVyLmh0bWx8TWVudUluc2VydGlvbk9wdGlvbnM9MjU2fERlZmF1bHRNZQ0KbnVJbnNlcnRpb25CZWhhdmlvcj0wfERlZmF1bHREcmFnTG9jYXRpb249MXxEZWZhdWx0RHJhZ0JlaGF2aW9yPTB8RGVmYXVsdERvdWJsZUNsaWNrTG9jYXRpb249NHxEZWZhdWx0RG91YmxlQ2xpY2tCZWhhdmlvcj0wfEwwPTB8TDE9MHxMMj0wfEwzPTB8TDQ9MHxBdXRob3JDb250cm9sUHJvcGVydGllcz18U2hvd0Nob29zZXI9dHJ1ZXxMaW5rQXV0aG9yc1RvUGFyZW50RGVmPXxUcmFuc2xhdGlvbklEPTB8UmVxdWlyZWRTdHlsZXM9TWFjUGFjIFRyDQphaWxlcnxWYXJpYWJsZURlZmluaXRpb249NDM0MDc0Y2UtYTNkYi00OWM3LTk3ZDYtYWE3MTk2NjYxNzExXCdhNkluc2VydERhdGVBc0ZpZWxkXCdhNkluc2VydCBEYXRlL1RpbWUgYXMgRmllbGQgQ29kZVwnYTYwXCdhNjlcJ2E2W1R5cGVQcmVmZXJlbmNlX0luc2VydERhdGVBc0ZpZWxkXVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luc2VydERhdGVBc0ZpZWxkLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZJbmNsdWRlRGF0ZSxJbmNsdWRlVGkNCm1lXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZGXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8VmFyaWFibGVEZWZpbml0aW9uPThlYWU1MmMwLWFmZGItNDExMi05NmY2LWI4YWU2YWNiZGJiYlwnYTZJbmNsdWRlVHlwaXN0XCdhNkluY2x1ZGUgVHlwaXN0IElEXCdhNjBcJ2E2NVwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVUeXBpc3RdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2UFwnYTZGYWxzZVwnYTYxXCdhNkZhbA0Kc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249MTE0YzRkZjEtMjNmNS00NTgyLTk3YWUtODAxYjM4YjEyNmQ2XCdhNkluY2x1ZGVBdXRob3JcJ2E2SW5jbHVkZSBBdXRob3IgSURcJ2E2MFwnYTY0XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUF1dGhvcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZBXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YTM3DQpjZTk5My00NjQ2LTRlODgtOTRlZC00YTM2YzdiMjFhNjdcJ2E2SW5jbHVkZUNsaWVudE1hdHRlclwnYTZJbmNsdWRlIENsaWVudCBNYXR0ZXIgTm8uXCdhNjBcJ2E2M1wnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVDbGllbnRNYXR0ZXJdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWM3MzU0ZmRlLTc0N2QtNGMNCjEyLTk5MzEtMDExNWY3OWQyYWNiXCdhNkluY2x1ZGVWZXJzaW9uXCdhNkluY2x1ZGUgVmVyc2lvblwnYTYwXCdhNjJcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVmVyc2lvbl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxcJ2NjXCdjZFJlc2VydmVkPW1wczkyNDI1MzgyMDAwMDAwMDAwMDAwMDAwMTA3ODAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTINCn19DQp7XCpcZG9jdmFyIHttcG8xNTQ4MDU3Mn17SW5jbHVkZURyYWZ0XCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj03NzY2ZjNhZS05MGUwLTQ4MTAtYmFkNS01NGQwOTJhNWZhN2RcJ2E2SW5jbHVkZURyYWZ0XCdhNkluY2x1ZGUgRHJhZnRcJ2E2MFwnYTY2XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRHJhZnRdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURyYWZ0Lmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxXCc4NlwnODcwXCc4NzJcJzg3W015VmFsdWVdIF49DQogdHJ1ZSBePyBEUkFGVCBeOiBbRW1wdHldXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZSXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY2MzM5MDA4ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD19fQ0Ke1wqXGRvY3ZhciB7bXBvMTU5NzI0ODN9e0RvY0lEXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj1jYTA4ZmM0OS03ZTIzLTQ5MTctODMyZi1lYWI5NTE3OTg2NGVcJ2E2RG9jSURcJ2E2RG9jIElEXCdhNjBcJ2E2MVwnYTZbRE1TX19Jc1Byb2ZpbGVkXSBePyBcJzdiW0NIT09TRV9fW0RNU19fTGlicmFyeV1fX1VTW0NIQVJfXzk1XUJMWF9fQkxYX19VU0FfX09IU1VTQV9fVE9LWU9fX09IU1RPS1lPX19BU0lBX19PSFNBU0lBX19FVVJPUEVfX09IU0VVUk9QRV9fQkxYXTpbRE1TX19Eb2NOdW1iZXJdLltETVNfX1Zlcg0Kc2lvbl0gXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0NoYXJfXzExXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXj8gW0RNU19fQ2xpZW50SURdLVtETVNfX01hdHRlcklEXSAgXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlDQpBdXRob3JdIF49IHRydWUgXj8gW0RNU19fQXV0aG9ySURdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBeQU5EIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWVcJzdkIF4/IC8gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtETVNfX1R5cGlzdElEXSBeOiBbRW1wdHldXCc3ZFwnN2QgXjogW0RvY3VtZW50X19GdWxsTmFtZV1cJ2E2XCdhNlwnYTZcJ2E2N1wnYTZcJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYxXCc4NlwnODcwXCc4NzBcJzg3W0RNU18NCl9Jc1Byb2ZpbGVkXSBePyBcJzdiW0NIT09TRV9fW0RNU19fTGlicmFyeV1fX1VTW0NIQVJfXzk1XUJMWF9fQkxYX19VU0FfX09IU1VTQV9fVE9LWU9fX09IU1RPS1lPX19BU0lBX19PSFNBU0lBX19FVVJPUEVfX09IU0VVUk9QRV9fQkxYXTpbRE1TX19Eb2NOdW1iZXJdLltETVNfX1ZlcnNpb25dIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYg0KbGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0NoYXJfXzExXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXj8gW0RNU19fQ2xpZW50SURdLVtETVNfX01hdHRlcklEXSAgXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF4/IFtETVNfX0F1dGhvcklEXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXkFORCBcJzdiW1ZhcmlhYmxlDQpfX0luY2x1ZGVBdXRob3JdIF49IHRydWVcJzdkIF4/IC8gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtETVNfX1R5cGlzdElEXSBeOiBbRW1wdHldXCc3ZFwnN2QgXjogW0RvY3VtZW50X19GdWxsTmFtZV1cJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYwXCdhNjFcJ2E2XCdhNlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2ODE4ODk0NTcwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9MQ0KfX0NCntcKlxkb2N2YXIge21wbzE2MjQxNTQ0fXtJbmNsdWRlVGltZVwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249NzI1NGViNDctNmFlOS00MGJjLWJiNDItNWRhNmY0MDc3NzZhXCdhNkluY2x1ZGVUaW1lXCdhNkluY2x1ZGUgVGltZVwnYTYwXCdhNjhcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVUaW1lXVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVUaW1lLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxN1wnODYwXCc4NzBcJzg3XCc4N1tNeVZhbHVlXSBePSB0cnUNCmUgXj8gaDptbWFtL3BtXCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVEYXRlXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZUXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1NjI4NTk2NTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG8xNjk1NzU2M317Rm9vdGVyKEJvdHRvbUxlZnQpXzFcJ2NjXCdjZFBhcnROdW1iZXI9M1wnY2NcJ2NkT2JqZWN0RGF0YT1TZWdtZW50SUQ9MTA3OHxPYmplY3RUeXBlSUQ9NDAxfE5hbWU9Rm9vdGVyKEJvdHRvbUxlZnQpfERpc3BsYXlOYW1lPUZvb3RlciAoTGVmdCBBbGlnbmVkKXxJbnRlbmRlZFVzZT0yfEF1dGhvck5vZGVVSUxhYmVsPXxNYXhBdXRob3JzPTB8SGVscFRleHQ9ZmlsZTovLy9UcmFpbGVyX1RyYWlsZXIuaHRtbHxNZW51SW5zZXJ0aW9uT3B0aW9ucz0yNTZ8RGVmYXVsdE1lDQpudUluc2VydGlvbkJlaGF2aW9yPTB8RGVmYXVsdERyYWdMb2NhdGlvbj0xfERlZmF1bHREcmFnQmVoYXZpb3I9MHxEZWZhdWx0RG91YmxlQ2xpY2tMb2NhdGlvbj00fERlZmF1bHREb3VibGVDbGlja0JlaGF2aW9yPTB8TDA9MHxMMT0wfEwyPTB8TDM9MHxMND0wfEF1dGhvckNvbnRyb2xQcm9wZXJ0aWVzPXxTaG93Q2hvb3Nlcj10cnVlfExpbmtBdXRob3JzVG9QYXJlbnREZWY9fFRyYW5zbGF0aW9uSUQ9MHxSZXF1aXJlZFN0eWxlcz1NYWNQYWMgVHINCmFpbGVyfFZhcmlhYmxlRGVmaW5pdGlvbj00MzQwNzRjZS1hM2RiLTQ5YzctOTdkNi1hYTcxOTY2NjE3MTFcJ2E2SW5zZXJ0RGF0ZUFzRmllbGRcJ2E2SW5zZXJ0IERhdGUvVGltZSBhcyBGaWVsZCBDb2RlXCdhNjBcJ2E2OVwnYTZbVHlwZVByZWZlcmVuY2VfSW5zZXJ0RGF0ZUFzRmllbGRdXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5zZXJ0RGF0ZUFzRmllbGQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkluY2x1ZGVEYXRlLEluY2x1ZGVUaQ0KbWVcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxWYXJpYWJsZURlZmluaXRpb249OGVhZTUyYzAtYWZkYi00MTEyLTk2ZjYtYjhhZTZhY2JkYmJiXCdhNkluY2x1ZGVUeXBpc3RcJ2E2SW5jbHVkZSBUeXBpc3QgSURcJ2E2MFwnYTY1XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZVR5cGlzdF1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZQXCdhNkZhbHNlXCdhNjFcJ2E2RmFsDQpzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj0xMTRjNGRmMS0yM2Y1LTQ1ODItOTdhZS04MDFiMzhiMTI2ZDZcJ2E2SW5jbHVkZUF1dGhvclwnYTZJbmNsdWRlIEF1dGhvciBJRFwnYTYwXCdhNjRcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlQXV0aG9yXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNkFcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj1hMzcNCmNlOTkzLTQ2NDYtNGU4OC05NGVkLTRhMzZjN2IyMWE2N1wnYTZJbmNsdWRlQ2xpZW50TWF0dGVyXCdhNkluY2x1ZGUgQ2xpZW50IE1hdHRlciBOby5cJ2E2MFwnYTYzXCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUNsaWVudE1hdHRlcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YzczNTRmZGUtNzQ3ZC00Yw0KMTItOTkzMS0wMTE1Zjc5ZDJhY2JcJ2E2SW5jbHVkZVZlcnNpb25cJ2E2SW5jbHVkZSBWZXJzaW9uXCdhNjBcJ2E2MlwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVWZXJzaW9uXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNk1cJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXBzOTI0MjUzODIwMDAwMDAwMDAwMDAwMDAxMDc4MDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9Mg0KfX0NCntcKlxkb2N2YXIge21wbzE3MjQzNzE5fXtEb2NJRFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Y2EwOGZjNDktN2UyMy00OTE3LTgzMmYtZWFiOTUxNzk4NjRlXCdhNkRvY0lEXCdhNkRvYyBJRFwnYTYwXCdhNjFcJ2E2W0RNU19fSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXINCnNpb25dIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZQ0KQXV0aG9yXSBePSB0cnVlIF4/IFtETVNfX0F1dGhvcklEXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXkFORCBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZcJ2E2XCdhNjdcJ2E2XCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcwXCc4N1tETVNfDQpfSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXJzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWINCmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZQ0KX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MFwnYTYxXCdhNlwnYTZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjgxODg5NDU3MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTENCn19DQp7XCpcZG9jdmFyIHttcG8xNzc3ODEwNX17SW5jbHVkZVRpbWVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTcyNTRlYjQ3LTZhZTktNDBiYy1iYjQyLTVkYTZmNDA3Nzc2YVwnYTZJbmNsdWRlVGltZVwnYTZJbmNsdWRlIFRpbWVcJ2E2MFwnYTY4XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlVGltZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlVGltZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcwXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IGg6bW1hbS9wbVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkICBeOiBbRW1wdHldXCdhNjFcJzg2XCc4NjRcJzg2MlwnODZJbnNlcnREYXRlQXNGaWVsZFwnODdbTXlWYWx1ZV0gXk9SIFtWYXJpYWJsZV9JbmNsdWRlRGF0ZV1cJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2VFwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NTYyODU5NjUwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9DQp9fQ0Ke1wqXGRvY3ZhciB7bXBvMTc5NTk2MTN9e0Zvb3RlcihCb3R0b21MZWZ0KV8xXCdjY1wnY2RQYXJ0TnVtYmVyPTNcJ2NjXCdjZE9iamVjdERhdGE9U2VnbWVudElEPTEwNzh8T2JqZWN0VHlwZUlEPTQwMXxOYW1lPUZvb3RlcihCb3R0b21MZWZ0KXxEaXNwbGF5TmFtZT1Gb290ZXIgKExlZnQgQWxpZ25lZCl8SW50ZW5kZWRVc2U9MnxBdXRob3JOb2RlVUlMYWJlbD18TWF4QXV0aG9ycz0wfEhlbHBUZXh0PWZpbGU6Ly8vVHJhaWxlcl9UcmFpbGVyLmh0bWx8TWVudUluc2VydGlvbk9wdGlvbnM9MjU2fERlZmF1bHRNZQ0KbnVJbnNlcnRpb25CZWhhdmlvcj0wfERlZmF1bHREcmFnTG9jYXRpb249MXxEZWZhdWx0RHJhZ0JlaGF2aW9yPTB8RGVmYXVsdERvdWJsZUNsaWNrTG9jYXRpb249NHxEZWZhdWx0RG91YmxlQ2xpY2tCZWhhdmlvcj0wfEwwPTB8TDE9MHxMMj0wfEwzPTB8TDQ9MHxBdXRob3JDb250cm9sUHJvcGVydGllcz18U2hvd0Nob29zZXI9dHJ1ZXxMaW5rQXV0aG9yc1RvUGFyZW50RGVmPXxUcmFuc2xhdGlvbklEPTB8UmVxdWlyZWRTdHlsZXM9TWFjUGFjIFRyDQphaWxlcnxWYXJpYWJsZURlZmluaXRpb249NDM0MDc0Y2UtYTNkYi00OWM3LTk3ZDYtYWE3MTk2NjYxNzExXCdhNkluc2VydERhdGVBc0ZpZWxkXCdhNkluc2VydCBEYXRlL1RpbWUgYXMgRmllbGQgQ29kZVwnYTYwXCdhNjlcJ2E2W1R5cGVQcmVmZXJlbmNlX0luc2VydERhdGVBc0ZpZWxkXVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luc2VydERhdGVBc0ZpZWxkLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZJbmNsdWRlRGF0ZSxJbmNsdWRlVGkNCm1lXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZGXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8VmFyaWFibGVEZWZpbml0aW9uPThlYWU1MmMwLWFmZGItNDExMi05NmY2LWI4YWU2YWNiZGJiYlwnYTZJbmNsdWRlVHlwaXN0XCdhNkluY2x1ZGUgVHlwaXN0IElEXCdhNjBcJ2E2NVwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVUeXBpc3RdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2UFwnYTZGYWxzZVwnYTYxXCdhNkZhbA0Kc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249MTE0YzRkZjEtMjNmNS00NTgyLTk3YWUtODAxYjM4YjEyNmQ2XCdhNkluY2x1ZGVBdXRob3JcJ2E2SW5jbHVkZSBBdXRob3IgSURcJ2E2MFwnYTY0XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUF1dGhvcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZBXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YTM3DQpjZTk5My00NjQ2LTRlODgtOTRlZC00YTM2YzdiMjFhNjdcJ2E2SW5jbHVkZUNsaWVudE1hdHRlclwnYTZJbmNsdWRlIENsaWVudCBNYXR0ZXIgTm8uXCdhNjBcJ2E2M1wnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVDbGllbnRNYXR0ZXJdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWM3MzU0ZmRlLTc0N2QtNGMNCjEyLTk5MzEtMDExNWY3OWQyYWNiXCdhNkluY2x1ZGVWZXJzaW9uXCdhNkluY2x1ZGUgVmVyc2lvblwnYTYwXCdhNjJcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVmVyc2lvbl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxcJ2NjXCdjZFJlc2VydmVkPW1wczkyNDI1MzgyMDAwMDAwMDAwMDAwMDAwMTA3ODAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTINCn19DQp7XCpcZG9jdmFyIHttcG8xODEyNzE5MX17RG9jSURcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWNhMDhmYzQ5LTdlMjMtNDkxNy04MzJmLWVhYjk1MTc5ODY0ZVwnYTZEb2NJRFwnYTZEb2MgSURcJ2E2MFwnYTYxXCdhNltETVNfX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyDQpzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGUNCkF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2XCdhNlwnYTY3XCdhNlwnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MFwnODdbRE1TXw0KX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyc2lvbl0gXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF5PUiBbVmFyaWFiDQpsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXj8gW0RNU19fQXV0aG9ySURdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBeQU5EIFwnN2JbVmFyaWFibGUNCl9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjBcJ2E2MVwnYTZcJ2E2XCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY4MTg4OTQ1NzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0xDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvMTg2Nzg3NTV9e0Zvb3RlcihCb3R0b21MZWZ0KV8xXCdjY1wnY2RQYXJ0TnVtYmVyPTNcJ2NjXCdjZE9iamVjdERhdGE9U2VnbWVudElEPTEwNzh8T2JqZWN0VHlwZUlEPTQwMXxOYW1lPUZvb3RlcihCb3R0b21MZWZ0KXxEaXNwbGF5TmFtZT1Gb290ZXIgKExlZnQgQWxpZ25lZCl8SW50ZW5kZWRVc2U9MnxBdXRob3JOb2RlVUlMYWJlbD18TWF4QXV0aG9ycz0wfEhlbHBUZXh0PWZpbGU6Ly8vVHJhaWxlcl9UcmFpbGVyLmh0bWx8TWVudUluc2VydGlvbk9wdGlvbnM9MjU2fERlZmF1bHRNZQ0KbnVJbnNlcnRpb25CZWhhdmlvcj0wfERlZmF1bHREcmFnTG9jYXRpb249MXxEZWZhdWx0RHJhZ0JlaGF2aW9yPTB8RGVmYXVsdERvdWJsZUNsaWNrTG9jYXRpb249NHxEZWZhdWx0RG91YmxlQ2xpY2tCZWhhdmlvcj0wfEwwPTB8TDE9MHxMMj0wfEwzPTB8TDQ9MHxBdXRob3JDb250cm9sUHJvcGVydGllcz18U2hvd0Nob29zZXI9dHJ1ZXxMaW5rQXV0aG9yc1RvUGFyZW50RGVmPXxUcmFuc2xhdGlvbklEPTB8UmVxdWlyZWRTdHlsZXM9TWFjUGFjIFRyDQphaWxlcnxWYXJpYWJsZURlZmluaXRpb249NDM0MDc0Y2UtYTNkYi00OWM3LTk3ZDYtYWE3MTk2NjYxNzExXCdhNkluc2VydERhdGVBc0ZpZWxkXCdhNkluc2VydCBEYXRlL1RpbWUgYXMgRmllbGQgQ29kZVwnYTYwXCdhNjlcJ2E2W1R5cGVQcmVmZXJlbmNlX0luc2VydERhdGVBc0ZpZWxkXVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luc2VydERhdGVBc0ZpZWxkLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZJbmNsdWRlRGF0ZSxJbmNsdWRlVGkNCm1lXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZGXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8VmFyaWFibGVEZWZpbml0aW9uPThlYWU1MmMwLWFmZGItNDExMi05NmY2LWI4YWU2YWNiZGJiYlwnYTZJbmNsdWRlVHlwaXN0XCdhNkluY2x1ZGUgVHlwaXN0IElEXCdhNjBcJ2E2NVwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVUeXBpc3RdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2UFwnYTZGYWxzZVwnYTYxXCdhNkZhbA0Kc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249MTE0YzRkZjEtMjNmNS00NTgyLTk3YWUtODAxYjM4YjEyNmQ2XCdhNkluY2x1ZGVBdXRob3JcJ2E2SW5jbHVkZSBBdXRob3IgSURcJ2E2MFwnYTY0XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUF1dGhvcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZBXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YTM3DQpjZTk5My00NjQ2LTRlODgtOTRlZC00YTM2YzdiMjFhNjdcJ2E2SW5jbHVkZUNsaWVudE1hdHRlclwnYTZJbmNsdWRlIENsaWVudCBNYXR0ZXIgTm8uXCdhNjBcJ2E2M1wnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVDbGllbnRNYXR0ZXJdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWM3MzU0ZmRlLTc0N2QtNGMNCjEyLTk5MzEtMDExNWY3OWQyYWNiXCdhNkluY2x1ZGVWZXJzaW9uXCdhNkluY2x1ZGUgVmVyc2lvblwnYTYwXCdhNjJcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVmVyc2lvbl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxcJ2NjXCdjZFJlc2VydmVkPW1wczkyNDI1MzgyMDAwMDAwMDAwMDAwMDAwMTA3ODAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTINCn19DQp7XCpcZG9jdmFyIHttcG8yMDE4OTAxMX17SW5jbHVkZURhdGVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWZjYmE0NmVkLTRkNTctNDllNC05MDJkLTExYzQ4ZTI4OWQyY1wnYTZJbmNsdWRlRGF0ZVwnYTZJbmNsdWRlIERhdGVcJ2E2MFwnYTY3XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRGF0ZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRGF0ZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcyXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IE1NL2RkL3l5XCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZVRpbWVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU4ODU4NDQ4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzIwNTA0MTIzfXtJbmNsdWRlRHJhZnRcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTc3NjZmM2FlLTkwZTAtNDgxMC1iYWQ1LTU0ZDA5MmE1ZmE3ZFwnYTZJbmNsdWRlRHJhZnRcJ2E2SW5jbHVkZSBEcmFmdFwnYTYwXCdhNjZcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVEcmFmdF1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRHJhZnQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MlwnODdbTXlWYWx1ZV0gXj0NCiB0cnVlIF4/IERSQUZUIF46IFtFbXB0eV1cJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlJcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjYzMzkwMDg4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPX19DQp7XCpcZG9jdmFyIHttcG8yMDgyMjAxOH17SW5jbHVkZURyYWZ0XCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj03NzY2ZjNhZS05MGUwLTQ4MTAtYmFkNS01NGQwOTJhNWZhN2RcJ2E2SW5jbHVkZURyYWZ0XCdhNkluY2x1ZGUgRHJhZnRcJ2E2MFwnYTY2XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRHJhZnRdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURyYWZ0Lmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxXCc4NlwnODcwXCc4NzJcJzg3W015VmFsdWVdIF49DQogdHJ1ZSBePyBEUkFGVCBeOiBbRW1wdHldXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZSXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY2MzM5MDA4ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD19fQ0Ke1wqXGRvY3ZhciB7bXBvMjA4MjU1ODN9e0luY2x1ZGVEcmFmdFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Nzc2NmYzYWUtOTBlMC00ODEwLWJhZDUtNTRkMDkyYTVmYTdkXCdhNkluY2x1ZGVEcmFmdFwnYTZJbmNsdWRlIERyYWZ0XCdhNjBcJ2E2NlwnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURyYWZ0XVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVEcmFmdC5odG1sXCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcyXCc4N1tNeVZhbHVlXSBePQ0KIHRydWUgXj8gRFJBRlQgXjogW0VtcHR5XVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2UlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NjMzOTAwODgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9fX0NCntcKlxkb2N2YXIge21wbzIxMDU1NzEwfXtJbmNsdWRlRGF0ZVwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249ZmNiYTQ2ZWQtNGQ1Ny00OWU0LTkwMmQtMTFjNDhlMjg5ZDJjXCdhNkluY2x1ZGVEYXRlXCdhNkluY2x1ZGUgRGF0ZVwnYTYwXCdhNjdcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVEYXRlXVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVEYXRlLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxN1wnODYwXCc4NzJcJzg3XCc4N1tNeVZhbHVlXSBePSB0cnUNCmUgXj8gTU0vZGQveXlcJzdiW1ZhcmlhYmxlX19JbnNlcnREYXRlQXNGaWVsZF0gXj8gIC9GXCc3ZCBeOiBbRW1wdHldXCdhNjFcJzg2XCc4NjRcJzg2MlwnODZJbnNlcnREYXRlQXNGaWVsZFwnODdbTXlWYWx1ZV0gXk9SIFtWYXJpYWJsZV9JbmNsdWRlVGltZV1cJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2RFwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NTg4NTg0NDgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9DQp9fQ0Ke1wqXGRvY3ZhciB7bXBvMjI4OTcyMDJ9e0luY2x1ZGVUaW1lXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj03MjU0ZWI0Ny02YWU5LTQwYmMtYmI0Mi01ZGE2ZjQwNzc3NmFcJ2E2SW5jbHVkZVRpbWVcJ2E2SW5jbHVkZSBUaW1lXCdhNjBcJ2E2OFwnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZVRpbWVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZVRpbWUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MFwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBoOm1tYW0vcG1cJzdiW1ZhcmlhYmxlX19JbnNlcnREYXRlQXNGaWVsZF0gXj8gIC9GXCc3ZCAgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZURhdGVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU2Mjg1OTY1MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzIzMDQzMzQwfXtJbmNsdWRlRHJhZnRcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTc3NjZmM2FlLTkwZTAtNDgxMC1iYWQ1LTU0ZDA5MmE1ZmE3ZFwnYTZJbmNsdWRlRHJhZnRcJ2E2SW5jbHVkZSBEcmFmdFwnYTYwXCdhNjZcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVEcmFmdF1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRHJhZnQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MlwnODdbTXlWYWx1ZV0gXj0NCiB0cnVlIF4/IERSQUZUIF46IFtFbXB0eV1cJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlJcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjYzMzkwMDg4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPX19DQp7XCpcZG9jdmFyIHttcG8yMzY2NjE5N317Rm9vdGVyKEJvdHRvbUxlZnQpXzFcJ2NjXCdjZFBhcnROdW1iZXI9M1wnY2NcJ2NkT2JqZWN0RGF0YT1TZWdtZW50SUQ9MTA3OHxPYmplY3RUeXBlSUQ9NDAxfE5hbWU9Rm9vdGVyKEJvdHRvbUxlZnQpfERpc3BsYXlOYW1lPUZvb3RlciAoTGVmdCBBbGlnbmVkKXxJbnRlbmRlZFVzZT0yfEF1dGhvck5vZGVVSUxhYmVsPXxNYXhBdXRob3JzPTB8SGVscFRleHQ9ZmlsZTovLy9UcmFpbGVyX1RyYWlsZXIuaHRtbHxNZW51SW5zZXJ0aW9uT3B0aW9ucz0yNTZ8RGVmYXVsdE1lDQpudUluc2VydGlvbkJlaGF2aW9yPTB8RGVmYXVsdERyYWdMb2NhdGlvbj0xfERlZmF1bHREcmFnQmVoYXZpb3I9MHxEZWZhdWx0RG91YmxlQ2xpY2tMb2NhdGlvbj00fERlZmF1bHREb3VibGVDbGlja0JlaGF2aW9yPTB8TDA9MHxMMT0wfEwyPTB8TDM9MHxMND0wfEF1dGhvckNvbnRyb2xQcm9wZXJ0aWVzPXxTaG93Q2hvb3Nlcj10cnVlfExpbmtBdXRob3JzVG9QYXJlbnREZWY9fFRyYW5zbGF0aW9uSUQ9MHxSZXF1aXJlZFN0eWxlcz1NYWNQYWMgVHINCmFpbGVyfFZhcmlhYmxlRGVmaW5pdGlvbj00MzQwNzRjZS1hM2RiLTQ5YzctOTdkNi1hYTcxOTY2NjE3MTFcJ2E2SW5zZXJ0RGF0ZUFzRmllbGRcJ2E2SW5zZXJ0IERhdGUvVGltZSBhcyBGaWVsZCBDb2RlXCdhNjBcJ2E2OVwnYTZbVHlwZVByZWZlcmVuY2VfSW5zZXJ0RGF0ZUFzRmllbGRdXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5zZXJ0RGF0ZUFzRmllbGQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkluY2x1ZGVEYXRlLEluY2x1ZGVUaQ0KbWVcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxWYXJpYWJsZURlZmluaXRpb249OGVhZTUyYzAtYWZkYi00MTEyLTk2ZjYtYjhhZTZhY2JkYmJiXCdhNkluY2x1ZGVUeXBpc3RcJ2E2SW5jbHVkZSBUeXBpc3QgSURcJ2E2MFwnYTY1XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZVR5cGlzdF1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZQXCdhNkZhbHNlXCdhNjFcJ2E2RmFsDQpzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj0xMTRjNGRmMS0yM2Y1LTQ1ODItOTdhZS04MDFiMzhiMTI2ZDZcJ2E2SW5jbHVkZUF1dGhvclwnYTZJbmNsdWRlIEF1dGhvciBJRFwnYTYwXCdhNjRcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlQXV0aG9yXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNkFcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj1hMzcNCmNlOTkzLTQ2NDYtNGU4OC05NGVkLTRhMzZjN2IyMWE2N1wnYTZJbmNsdWRlQ2xpZW50TWF0dGVyXCdhNkluY2x1ZGUgQ2xpZW50IE1hdHRlciBOby5cJ2E2MFwnYTYzXCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUNsaWVudE1hdHRlcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YzczNTRmZGUtNzQ3ZC00Yw0KMTItOTkzMS0wMTE1Zjc5ZDJhY2JcJ2E2SW5jbHVkZVZlcnNpb25cJ2E2SW5jbHVkZSBWZXJzaW9uXCdhNjBcJ2E2MlwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVWZXJzaW9uXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNk1cJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXBzOTI0MjUzODIwMDAwMDAwMDAwMDAwMDAxMDc4MDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9Mg0KfX0NCntcKlxkb2N2YXIge21wbzIzODkzMTMwfXtEb2NJRFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Y2EwOGZjNDktN2UyMy00OTE3LTgzMmYtZWFiOTUxNzk4NjRlXCdhNkRvY0lEXCdhNkRvYyBJRFwnYTYwXCdhNjFcJ2E2W0RNU19fSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXINCnNpb25dIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZQ0KQXV0aG9yXSBePSB0cnVlIF4/IFtETVNfX0F1dGhvcklEXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXkFORCBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZcJ2E2XCdhNjdcJ2E2XCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcwXCc4N1tETVNfDQpfSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXJzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWINCmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZQ0KX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MFwnYTYxXCdhNlwnYTZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjgxODg5NDU3MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTENCn19DQp7XCpcZG9jdmFyIHttcG8yNTI1ODc5MX17SW5jbHVkZURhdGVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWZjYmE0NmVkLTRkNTctNDllNC05MDJkLTExYzQ4ZTI4OWQyY1wnYTZJbmNsdWRlRGF0ZVwnYTZJbmNsdWRlIERhdGVcJ2E2MFwnYTY3XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRGF0ZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRGF0ZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcyXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IE1NL2RkL3l5XCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZVRpbWVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU4ODU4NDQ4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzI1Njg4NzYxfXtJbmNsdWRlRHJhZnRcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTc3NjZmM2FlLTkwZTAtNDgxMC1iYWQ1LTU0ZDA5MmE1ZmE3ZFwnYTZJbmNsdWRlRHJhZnRcJ2E2SW5jbHVkZSBEcmFmdFwnYTYwXCdhNjZcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVEcmFmdF1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRHJhZnQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MlwnODdbTXlWYWx1ZV0gXj0NCiB0cnVlIF4/IERSQUZUIF46IFtFbXB0eV1cJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlJcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjYzMzkwMDg4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPX19DQp7XCpcZG9jdmFyIHttcG8yNjgwMDg4OX17SW5jbHVkZURyYWZ0XCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj03NzY2ZjNhZS05MGUwLTQ4MTAtYmFkNS01NGQwOTJhNWZhN2RcJ2E2SW5jbHVkZURyYWZ0XCdhNkluY2x1ZGUgRHJhZnRcJ2E2MFwnYTY2XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRHJhZnRdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURyYWZ0Lmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxXCc4NlwnODcwXCc4NzJcJzg3W015VmFsdWVdIF49DQogdHJ1ZSBePyBEUkFGVCBeOiBbRW1wdHldXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZSXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY2MzM5MDA4ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD19fQ0Ke1wqXGRvY3ZhciB7bXBvMjY5MTEzNjB9e0luY2x1ZGVUaW1lXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj03MjU0ZWI0Ny02YWU5LTQwYmMtYmI0Mi01ZGE2ZjQwNzc3NmFcJ2E2SW5jbHVkZVRpbWVcJ2E2SW5jbHVkZSBUaW1lXCdhNjBcJ2E2OFwnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZVRpbWVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZVRpbWUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MFwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBoOm1tYW0vcG1cJzdiW1ZhcmlhYmxlX19JbnNlcnREYXRlQXNGaWVsZF0gXj8gIC9GXCc3ZCAgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZURhdGVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU2Mjg1OTY1MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzI2OTIyODc2fXtJbmNsdWRlRHJhZnRcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTc3NjZmM2FlLTkwZTAtNDgxMC1iYWQ1LTU0ZDA5MmE1ZmE3ZFwnYTZJbmNsdWRlRHJhZnRcJ2E2SW5jbHVkZSBEcmFmdFwnYTYwXCdhNjZcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVEcmFmdF1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRHJhZnQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MlwnODdbTXlWYWx1ZV0gXj0NCiB0cnVlIF4/IERSQUZUIF46IFtFbXB0eV1cJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlJcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjYzMzkwMDg4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPX19DQp7XCpcZG9jdmFyIHttcG8yNzExOTI2MX17Rm9vdGVyKEJvdHRvbUxlZnQpXzFcJ2NjXCdjZFBhcnROdW1iZXI9M1wnY2NcJ2NkT2JqZWN0RGF0YT1TZWdtZW50SUQ9MTA3OHxPYmplY3RUeXBlSUQ9NDAxfE5hbWU9Rm9vdGVyKEJvdHRvbUxlZnQpfERpc3BsYXlOYW1lPUZvb3RlciAoTGVmdCBBbGlnbmVkKXxJbnRlbmRlZFVzZT0yfEF1dGhvck5vZGVVSUxhYmVsPXxNYXhBdXRob3JzPTB8SGVscFRleHQ9ZmlsZTovLy9UcmFpbGVyX1RyYWlsZXIuaHRtbHxNZW51SW5zZXJ0aW9uT3B0aW9ucz0yNTZ8RGVmYXVsdE1lDQpudUluc2VydGlvbkJlaGF2aW9yPTB8RGVmYXVsdERyYWdMb2NhdGlvbj0xfERlZmF1bHREcmFnQmVoYXZpb3I9MHxEZWZhdWx0RG91YmxlQ2xpY2tMb2NhdGlvbj00fERlZmF1bHREb3VibGVDbGlja0JlaGF2aW9yPTB8TDA9MHxMMT0wfEwyPTB8TDM9MHxMND0wfEF1dGhvckNvbnRyb2xQcm9wZXJ0aWVzPXxTaG93Q2hvb3Nlcj10cnVlfExpbmtBdXRob3JzVG9QYXJlbnREZWY9fFRyYW5zbGF0aW9uSUQ9MHxSZXF1aXJlZFN0eWxlcz1NYWNQYWMgVHINCmFpbGVyfFZhcmlhYmxlRGVmaW5pdGlvbj00MzQwNzRjZS1hM2RiLTQ5YzctOTdkNi1hYTcxOTY2NjE3MTFcJ2E2SW5zZXJ0RGF0ZUFzRmllbGRcJ2E2SW5zZXJ0IERhdGUvVGltZSBhcyBGaWVsZCBDb2RlXCdhNjBcJ2E2OVwnYTZbVHlwZVByZWZlcmVuY2VfSW5zZXJ0RGF0ZUFzRmllbGRdXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5zZXJ0RGF0ZUFzRmllbGQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkluY2x1ZGVEYXRlLEluY2x1ZGVUaQ0KbWVcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxWYXJpYWJsZURlZmluaXRpb249OGVhZTUyYzAtYWZkYi00MTEyLTk2ZjYtYjhhZTZhY2JkYmJiXCdhNkluY2x1ZGVUeXBpc3RcJ2E2SW5jbHVkZSBUeXBpc3QgSURcJ2E2MFwnYTY1XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZVR5cGlzdF1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZQXCdhNkZhbHNlXCdhNjFcJ2E2RmFsDQpzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj0xMTRjNGRmMS0yM2Y1LTQ1ODItOTdhZS04MDFiMzhiMTI2ZDZcJ2E2SW5jbHVkZUF1dGhvclwnYTZJbmNsdWRlIEF1dGhvciBJRFwnYTYwXCdhNjRcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlQXV0aG9yXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNkFcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj1hMzcNCmNlOTkzLTQ2NDYtNGU4OC05NGVkLTRhMzZjN2IyMWE2N1wnYTZJbmNsdWRlQ2xpZW50TWF0dGVyXCdhNkluY2x1ZGUgQ2xpZW50IE1hdHRlciBOby5cJ2E2MFwnYTYzXCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUNsaWVudE1hdHRlcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YzczNTRmZGUtNzQ3ZC00Yw0KMTItOTkzMS0wMTE1Zjc5ZDJhY2JcJ2E2SW5jbHVkZVZlcnNpb25cJ2E2SW5jbHVkZSBWZXJzaW9uXCdhNjBcJ2E2MlwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVWZXJzaW9uXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNk1cJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXBzOTI0MjUzODIwMDAwMDAwMDAwMDAwMDAxMDc4MDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9Mg0KfX0NCntcKlxkb2N2YXIge21wbzI3MjExNTI5fXtJbmNsdWRlRHJhZnRcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTc3NjZmM2FlLTkwZTAtNDgxMC1iYWQ1LTU0ZDA5MmE1ZmE3ZFwnYTZJbmNsdWRlRHJhZnRcJ2E2SW5jbHVkZSBEcmFmdFwnYTYwXCdhNjZcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVEcmFmdF1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRHJhZnQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MlwnODdbTXlWYWx1ZV0gXj0NCiB0cnVlIF4/IERSQUZUIF46IFtFbXB0eV1cJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlJcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjYzMzkwMDg4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPX19DQp7XCpcZG9jdmFyIHttcG8yNzI2ODI5Nn17SW5jbHVkZVRpbWVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTcyNTRlYjQ3LTZhZTktNDBiYy1iYjQyLTVkYTZmNDA3Nzc2YVwnYTZJbmNsdWRlVGltZVwnYTZJbmNsdWRlIFRpbWVcJ2E2MFwnYTY4XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlVGltZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlVGltZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcwXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IGg6bW1hbS9wbVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkICBeOiBbRW1wdHldXCdhNjFcJzg2XCc4NjRcJzg2MlwnODZJbnNlcnREYXRlQXNGaWVsZFwnODdbTXlWYWx1ZV0gXk9SIFtWYXJpYWJsZV9JbmNsdWRlRGF0ZV1cJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2VFwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NTYyODU5NjUwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9DQp9fQ0Ke1wqXGRvY3ZhciB7bXBvMjczODg0NzF9e0Zvb3RlcihCb3R0b21MZWZ0KV8xXCdjY1wnY2RQYXJ0TnVtYmVyPTNcJ2NjXCdjZE9iamVjdERhdGE9U2VnbWVudElEPTEwNzh8T2JqZWN0VHlwZUlEPTQwMXxOYW1lPUZvb3RlcihCb3R0b21MZWZ0KXxEaXNwbGF5TmFtZT1Gb290ZXIgKExlZnQgQWxpZ25lZCl8SW50ZW5kZWRVc2U9MnxBdXRob3JOb2RlVUlMYWJlbD18TWF4QXV0aG9ycz0wfEhlbHBUZXh0PWZpbGU6Ly8vVHJhaWxlcl9UcmFpbGVyLmh0bWx8TWVudUluc2VydGlvbk9wdGlvbnM9MjU2fERlZmF1bHRNZQ0KbnVJbnNlcnRpb25CZWhhdmlvcj0wfERlZmF1bHREcmFnTG9jYXRpb249MXxEZWZhdWx0RHJhZ0JlaGF2aW9yPTB8RGVmYXVsdERvdWJsZUNsaWNrTG9jYXRpb249NHxEZWZhdWx0RG91YmxlQ2xpY2tCZWhhdmlvcj0wfEwwPTB8TDE9MHxMMj0wfEwzPTB8TDQ9MHxBdXRob3JDb250cm9sUHJvcGVydGllcz18U2hvd0Nob29zZXI9dHJ1ZXxMaW5rQXV0aG9yc1RvUGFyZW50RGVmPXxUcmFuc2xhdGlvbklEPTB8UmVxdWlyZWRTdHlsZXM9TWFjUGFjIFRyDQphaWxlcnxWYXJpYWJsZURlZmluaXRpb249NDM0MDc0Y2UtYTNkYi00OWM3LTk3ZDYtYWE3MTk2NjYxNzExXCdhNkluc2VydERhdGVBc0ZpZWxkXCdhNkluc2VydCBEYXRlL1RpbWUgYXMgRmllbGQgQ29kZVwnYTYwXCdhNjlcJ2E2W1R5cGVQcmVmZXJlbmNlX0luc2VydERhdGVBc0ZpZWxkXVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luc2VydERhdGVBc0ZpZWxkLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZJbmNsdWRlRGF0ZSxJbmNsdWRlVGkNCm1lXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZGXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8VmFyaWFibGVEZWZpbml0aW9uPThlYWU1MmMwLWFmZGItNDExMi05NmY2LWI4YWU2YWNiZGJiYlwnYTZJbmNsdWRlVHlwaXN0XCdhNkluY2x1ZGUgVHlwaXN0IElEXCdhNjBcJ2E2NVwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVUeXBpc3RdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2UFwnYTZGYWxzZVwnYTYxXCdhNkZhbA0Kc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249MTE0YzRkZjEtMjNmNS00NTgyLTk3YWUtODAxYjM4YjEyNmQ2XCdhNkluY2x1ZGVBdXRob3JcJ2E2SW5jbHVkZSBBdXRob3IgSURcJ2E2MFwnYTY0XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUF1dGhvcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZBXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YTM3DQpjZTk5My00NjQ2LTRlODgtOTRlZC00YTM2YzdiMjFhNjdcJ2E2SW5jbHVkZUNsaWVudE1hdHRlclwnYTZJbmNsdWRlIENsaWVudCBNYXR0ZXIgTm8uXCdhNjBcJ2E2M1wnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVDbGllbnRNYXR0ZXJdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWM3MzU0ZmRlLTc0N2QtNGMNCjEyLTk5MzEtMDExNWY3OWQyYWNiXCdhNkluY2x1ZGVWZXJzaW9uXCdhNkluY2x1ZGUgVmVyc2lvblwnYTYwXCdhNjJcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVmVyc2lvbl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxcJ2NjXCdjZFJlc2VydmVkPW1wczkyNDI1MzgyMDAwMDAwMDAwMDAwMDAwMTA3ODAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTINCn19DQp7XCpcZG9jdmFyIHttcG8yNzgyMTA3MH17SW5jbHVkZVRpbWVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTcyNTRlYjQ3LTZhZTktNDBiYy1iYjQyLTVkYTZmNDA3Nzc2YVwnYTZJbmNsdWRlVGltZVwnYTZJbmNsdWRlIFRpbWVcJ2E2MFwnYTY4XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlVGltZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlVGltZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcwXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IGg6bW1hbS9wbVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkICBeOiBbRW1wdHldXCdhNjFcJzg2XCc4NjRcJzg2MlwnODZJbnNlcnREYXRlQXNGaWVsZFwnODdbTXlWYWx1ZV0gXk9SIFtWYXJpYWJsZV9JbmNsdWRlRGF0ZV1cJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2VFwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NTYyODU5NjUwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9DQp9fQ0Ke1wqXGRvY3ZhciB7bXBvMjg5MDIyMjF9e0RvY0lEXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj1jYTA4ZmM0OS03ZTIzLTQ5MTctODMyZi1lYWI5NTE3OTg2NGVcJ2E2RG9jSURcJ2E2RG9jIElEXCdhNjBcJ2E2MVwnYTZbRE1TX19Jc1Byb2ZpbGVkXSBePyBcJzdiW0NIT09TRV9fW0RNU19fTGlicmFyeV1fX1VTW0NIQVJfXzk1XUJMWF9fQkxYX19VU0FfX09IU1VTQV9fVE9LWU9fX09IU1RPS1lPX19BU0lBX19PSFNBU0lBX19FVVJPUEVfX09IU0VVUk9QRV9fQkxYXTpbRE1TX19Eb2NOdW1iZXJdLltETVNfX1Zlcg0Kc2lvbl0gXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0NoYXJfXzExXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXj8gW0RNU19fQ2xpZW50SURdLVtETVNfX01hdHRlcklEXSAgXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlDQpBdXRob3JdIF49IHRydWUgXj8gW0RNU19fQXV0aG9ySURdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBeQU5EIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWVcJzdkIF4/IC8gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtETVNfX1R5cGlzdElEXSBeOiBbRW1wdHldXCc3ZFwnN2QgXjogW0RvY3VtZW50X19GdWxsTmFtZV1cJ2E2XCdhNlwnYTZcJ2E2N1wnYTZcJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYxXCc4NlwnODcwXCc4NzBcJzg3W0RNU18NCl9Jc1Byb2ZpbGVkXSBePyBcJzdiW0NIT09TRV9fW0RNU19fTGlicmFyeV1fX1VTW0NIQVJfXzk1XUJMWF9fQkxYX19VU0FfX09IU1VTQV9fVE9LWU9fX09IU1RPS1lPX19BU0lBX19PSFNBU0lBX19FVVJPUEVfX09IU0VVUk9QRV9fQkxYXTpbRE1TX19Eb2NOdW1iZXJdLltETVNfX1ZlcnNpb25dIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYg0KbGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0NoYXJfXzExXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXj8gW0RNU19fQ2xpZW50SURdLVtETVNfX01hdHRlcklEXSAgXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF4/IFtETVNfX0F1dGhvcklEXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXkFORCBcJzdiW1ZhcmlhYmxlDQpfX0luY2x1ZGVBdXRob3JdIF49IHRydWVcJzdkIF4/IC8gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtETVNfX1R5cGlzdElEXSBeOiBbRW1wdHldXCc3ZFwnN2QgXjogW0RvY3VtZW50X19GdWxsTmFtZV1cJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYwXCdhNjFcJ2E2XCdhNlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2ODE4ODk0NTcwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9MQ0KfX0NCntcKlxkb2N2YXIge21wbzI5MDY3NjMwfXtJbmNsdWRlVGltZVwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249NzI1NGViNDctNmFlOS00MGJjLWJiNDItNWRhNmY0MDc3NzZhXCdhNkluY2x1ZGVUaW1lXCdhNkluY2x1ZGUgVGltZVwnYTYwXCdhNjhcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVUaW1lXVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVUaW1lLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxN1wnODYwXCc4NzBcJzg3XCc4N1tNeVZhbHVlXSBePSB0cnUNCmUgXj8gaDptbWFtL3BtXCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVEYXRlXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZUXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1NjI4NTk2NTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG8yOTA3OTgzN317SW5jbHVkZVRpbWVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTcyNTRlYjQ3LTZhZTktNDBiYy1iYjQyLTVkYTZmNDA3Nzc2YVwnYTZJbmNsdWRlVGltZVwnYTZJbmNsdWRlIFRpbWVcJ2E2MFwnYTY4XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlVGltZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlVGltZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcwXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IGg6bW1hbS9wbVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkICBeOiBbRW1wdHldXCdhNjFcJzg2XCc4NjRcJzg2MlwnODZJbnNlcnREYXRlQXNGaWVsZFwnODdbTXlWYWx1ZV0gXk9SIFtWYXJpYWJsZV9JbmNsdWRlRGF0ZV1cJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2VFwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NTYyODU5NjUwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9DQp9fQ0Ke1wqXGRvY3ZhciB7bXBvMjkyNTIyMDd9e0RvY0lEXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj1jYTA4ZmM0OS03ZTIzLTQ5MTctODMyZi1lYWI5NTE3OTg2NGVcJ2E2RG9jSURcJ2E2RG9jIElEXCdhNjBcJ2E2MVwnYTZbRE1TX19Jc1Byb2ZpbGVkXSBePyBcJzdiW0NIT09TRV9fW0RNU19fTGlicmFyeV1fX1VTW0NIQVJfXzk1XUJMWF9fQkxYX19VU0FfX09IU1VTQV9fVE9LWU9fX09IU1RPS1lPX19BU0lBX19PSFNBU0lBX19FVVJPUEVfX09IU0VVUk9QRV9fQkxYXTpbRE1TX19Eb2NOdW1iZXJdLltETVNfX1Zlcg0Kc2lvbl0gXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0NoYXJfXzExXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXj8gW0RNU19fQ2xpZW50SURdLVtETVNfX01hdHRlcklEXSAgXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlDQpBdXRob3JdIF49IHRydWUgXj8gW0RNU19fQXV0aG9ySURdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBeQU5EIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWVcJzdkIF4/IC8gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtETVNfX1R5cGlzdElEXSBeOiBbRW1wdHldXCc3ZFwnN2QgXjogW0RvY3VtZW50X19GdWxsTmFtZV1cJ2E2XCdhNlwnYTZcJ2E2N1wnYTZcJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYxXCc4NlwnODcwXCc4NzBcJzg3W0RNU18NCl9Jc1Byb2ZpbGVkXSBePyBcJzdiW0NIT09TRV9fW0RNU19fTGlicmFyeV1fX1VTW0NIQVJfXzk1XUJMWF9fQkxYX19VU0FfX09IU1VTQV9fVE9LWU9fX09IU1RPS1lPX19BU0lBX19PSFNBU0lBX19FVVJPUEVfX09IU0VVUk9QRV9fQkxYXTpbRE1TX19Eb2NOdW1iZXJdLltETVNfX1ZlcnNpb25dIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYg0KbGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0NoYXJfXzExXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXj8gW0RNU19fQ2xpZW50SURdLVtETVNfX01hdHRlcklEXSAgXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF4/IFtETVNfX0F1dGhvcklEXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXkFORCBcJzdiW1ZhcmlhYmxlDQpfX0luY2x1ZGVBdXRob3JdIF49IHRydWVcJzdkIF4/IC8gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtETVNfX1R5cGlzdElEXSBeOiBbRW1wdHldXCc3ZFwnN2QgXjogW0RvY3VtZW50X19GdWxsTmFtZV1cJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYwXCdhNjFcJ2E2XCdhNlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2ODE4ODk0NTcwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9MQ0KfX0NCntcKlxkb2N2YXIge21wbzMxMjU2NDkxfXtJbmNsdWRlRHJhZnRcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTc3NjZmM2FlLTkwZTAtNDgxMC1iYWQ1LTU0ZDA5MmE1ZmE3ZFwnYTZJbmNsdWRlRHJhZnRcJ2E2SW5jbHVkZSBEcmFmdFwnYTYwXCdhNjZcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVEcmFmdF1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRHJhZnQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MlwnODdbTXlWYWx1ZV0gXj0NCiB0cnVlIF4/IERSQUZUIF46IFtFbXB0eV1cJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlJcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjYzMzkwMDg4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPX19DQp7XCpcZG9jdmFyIHttcG8zMTk4MjM1Nn17SW5jbHVkZVRpbWVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTcyNTRlYjQ3LTZhZTktNDBiYy1iYjQyLTVkYTZmNDA3Nzc2YVwnYTZJbmNsdWRlVGltZVwnYTZJbmNsdWRlIFRpbWVcJ2E2MFwnYTY4XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlVGltZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlVGltZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcwXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IGg6bW1hbS9wbVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkICBeOiBbRW1wdHldXCdhNjFcJzg2XCc4NjRcJzg2MlwnODZJbnNlcnREYXRlQXNGaWVsZFwnODdbTXlWYWx1ZV0gXk9SIFtWYXJpYWJsZV9JbmNsdWRlRGF0ZV1cJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2VFwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NTYyODU5NjUwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9DQp9fQ0Ke1wqXGRvY3ZhciB7bXBvMzIyNjM1NDF9e0luY2x1ZGVEYXRlXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj1mY2JhNDZlZC00ZDU3LTQ5ZTQtOTAyZC0xMWM0OGUyODlkMmNcJ2E2SW5jbHVkZURhdGVcJ2E2SW5jbHVkZSBEYXRlXCdhNjBcJ2E2N1wnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURhdGVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURhdGUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MlwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBNTS9kZC95eVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVUaW1lXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZEXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1ODg1ODQ0ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG8zMjUxMDQwMH17RG9jSURcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWNhMDhmYzQ5LTdlMjMtNDkxNy04MzJmLWVhYjk1MTc5ODY0ZVwnYTZEb2NJRFwnYTZEb2MgSURcJ2E2MFwnYTYxXCdhNltETVNfX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyDQpzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGUNCkF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2XCdhNlwnYTY3XCdhNlwnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MFwnODdbRE1TXw0KX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyc2lvbl0gXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF5PUiBbVmFyaWFiDQpsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXj8gW0RNU19fQXV0aG9ySURdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBeQU5EIFwnN2JbVmFyaWFibGUNCl9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjBcJ2E2MVwnYTZcJ2E2XCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY4MTg4OTQ1NzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0xDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvMzMwODEwNTV9e0luY2x1ZGVEYXRlXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj1mY2JhNDZlZC00ZDU3LTQ5ZTQtOTAyZC0xMWM0OGUyODlkMmNcJ2E2SW5jbHVkZURhdGVcJ2E2SW5jbHVkZSBEYXRlXCdhNjBcJ2E2N1wnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURhdGVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURhdGUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MlwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBNTS9kZC95eVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVUaW1lXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZEXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1ODg1ODQ0ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG8zMzA4NjAyMH17SW5jbHVkZURyYWZ0XCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj03NzY2ZjNhZS05MGUwLTQ4MTAtYmFkNS01NGQwOTJhNWZhN2RcJ2E2SW5jbHVkZURyYWZ0XCdhNkluY2x1ZGUgRHJhZnRcJ2E2MFwnYTY2XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRHJhZnRdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURyYWZ0Lmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxXCc4NlwnODcwXCc4NzJcJzg3W015VmFsdWVdIF49DQogdHJ1ZSBePyBEUkFGVCBeOiBbRW1wdHldXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZSXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY2MzM5MDA4ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD19fQ0Ke1wqXGRvY3ZhciB7bXBvMzM3MTQxMTB9e0Zvb3RlcihCb3R0b21MZWZ0KV8xXCdjY1wnY2RQYXJ0TnVtYmVyPTNcJ2NjXCdjZE9iamVjdERhdGE9U2VnbWVudElEPTEwNzh8T2JqZWN0VHlwZUlEPTQwMXxOYW1lPUZvb3RlcihCb3R0b21MZWZ0KXxEaXNwbGF5TmFtZT1Gb290ZXIgKExlZnQgQWxpZ25lZCl8SW50ZW5kZWRVc2U9MnxBdXRob3JOb2RlVUlMYWJlbD18TWF4QXV0aG9ycz0wfEhlbHBUZXh0PWZpbGU6Ly8vVHJhaWxlcl9UcmFpbGVyLmh0bWx8TWVudUluc2VydGlvbk9wdGlvbnM9MjU2fERlZmF1bHRNZQ0KbnVJbnNlcnRpb25CZWhhdmlvcj0wfERlZmF1bHREcmFnTG9jYXRpb249MXxEZWZhdWx0RHJhZ0JlaGF2aW9yPTB8RGVmYXVsdERvdWJsZUNsaWNrTG9jYXRpb249NHxEZWZhdWx0RG91YmxlQ2xpY2tCZWhhdmlvcj0wfEwwPTB8TDE9MHxMMj0wfEwzPTB8TDQ9MHxBdXRob3JDb250cm9sUHJvcGVydGllcz18U2hvd0Nob29zZXI9dHJ1ZXxMaW5rQXV0aG9yc1RvUGFyZW50RGVmPXxUcmFuc2xhdGlvbklEPTB8UmVxdWlyZWRTdHlsZXM9TWFjUGFjIFRyDQphaWxlcnxWYXJpYWJsZURlZmluaXRpb249NDM0MDc0Y2UtYTNkYi00OWM3LTk3ZDYtYWE3MTk2NjYxNzExXCdhNkluc2VydERhdGVBc0ZpZWxkXCdhNkluc2VydCBEYXRlL1RpbWUgYXMgRmllbGQgQ29kZVwnYTYwXCdhNjlcJ2E2W1R5cGVQcmVmZXJlbmNlX0luc2VydERhdGVBc0ZpZWxkXVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luc2VydERhdGVBc0ZpZWxkLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZJbmNsdWRlRGF0ZSxJbmNsdWRlVGkNCm1lXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZGXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8VmFyaWFibGVEZWZpbml0aW9uPThlYWU1MmMwLWFmZGItNDExMi05NmY2LWI4YWU2YWNiZGJiYlwnYTZJbmNsdWRlVHlwaXN0XCdhNkluY2x1ZGUgVHlwaXN0IElEXCdhNjBcJ2E2NVwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVUeXBpc3RdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2UFwnYTZGYWxzZVwnYTYxXCdhNkZhbA0Kc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249MTE0YzRkZjEtMjNmNS00NTgyLTk3YWUtODAxYjM4YjEyNmQ2XCdhNkluY2x1ZGVBdXRob3JcJ2E2SW5jbHVkZSBBdXRob3IgSURcJ2E2MFwnYTY0XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUF1dGhvcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZBXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YTM3DQpjZTk5My00NjQ2LTRlODgtOTRlZC00YTM2YzdiMjFhNjdcJ2E2SW5jbHVkZUNsaWVudE1hdHRlclwnYTZJbmNsdWRlIENsaWVudCBNYXR0ZXIgTm8uXCdhNjBcJ2E2M1wnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVDbGllbnRNYXR0ZXJdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWM3MzU0ZmRlLTc0N2QtNGMNCjEyLTk5MzEtMDExNWY3OWQyYWNiXCdhNkluY2x1ZGVWZXJzaW9uXCdhNkluY2x1ZGUgVmVyc2lvblwnYTYwXCdhNjJcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVmVyc2lvbl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxcJ2NjXCdjZFJlc2VydmVkPW1wczkyNDI1MzgyMDAwMDAwMDAwMDAwMDAwMTA3ODAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTINCn19DQp7XCpcZG9jdmFyIHttcG8zMzc4Mzg0N317SW5jbHVkZURyYWZ0XCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj03NzY2ZjNhZS05MGUwLTQ4MTAtYmFkNS01NGQwOTJhNWZhN2RcJ2E2SW5jbHVkZURyYWZ0XCdhNkluY2x1ZGUgRHJhZnRcJ2E2MFwnYTY2XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRHJhZnRdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURyYWZ0Lmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxXCc4NlwnODcwXCc4NzJcJzg3W015VmFsdWVdIF49DQogdHJ1ZSBePyBEUkFGVCBeOiBbRW1wdHldXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZSXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY2MzM5MDA4ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD19fQ0Ke1wqXGRvY3ZhciB7bXBvMzM4MDAxMDF9e0luY2x1ZGVEYXRlXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj1mY2JhNDZlZC00ZDU3LTQ5ZTQtOTAyZC0xMWM0OGUyODlkMmNcJ2E2SW5jbHVkZURhdGVcJ2E2SW5jbHVkZSBEYXRlXCdhNjBcJ2E2N1wnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURhdGVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURhdGUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MlwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBNTS9kZC95eVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVUaW1lXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZEXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1ODg1ODQ0ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG8zNDI0MzQ3MH17Rm9vdGVyKEJvdHRvbUxlZnQpXzFcJ2NjXCdjZFBhcnROdW1iZXI9M1wnY2NcJ2NkT2JqZWN0RGF0YT1TZWdtZW50SUQ9MTA3OHxPYmplY3RUeXBlSUQ9NDAxfE5hbWU9Rm9vdGVyKEJvdHRvbUxlZnQpfERpc3BsYXlOYW1lPUZvb3RlciAoTGVmdCBBbGlnbmVkKXxJbnRlbmRlZFVzZT0yfEF1dGhvck5vZGVVSUxhYmVsPXxNYXhBdXRob3JzPTB8SGVscFRleHQ9ZmlsZTovLy9UcmFpbGVyX1RyYWlsZXIuaHRtbHxNZW51SW5zZXJ0aW9uT3B0aW9ucz0yNTZ8RGVmYXVsdE1lDQpudUluc2VydGlvbkJlaGF2aW9yPTB8RGVmYXVsdERyYWdMb2NhdGlvbj0xfERlZmF1bHREcmFnQmVoYXZpb3I9MHxEZWZhdWx0RG91YmxlQ2xpY2tMb2NhdGlvbj00fERlZmF1bHREb3VibGVDbGlja0JlaGF2aW9yPTB8TDA9MHxMMT0wfEwyPTB8TDM9MHxMND0wfEF1dGhvckNvbnRyb2xQcm9wZXJ0aWVzPXxTaG93Q2hvb3Nlcj10cnVlfExpbmtBdXRob3JzVG9QYXJlbnREZWY9fFRyYW5zbGF0aW9uSUQ9MHxSZXF1aXJlZFN0eWxlcz1NYWNQYWMgVHINCmFpbGVyfFZhcmlhYmxlRGVmaW5pdGlvbj00MzQwNzRjZS1hM2RiLTQ5YzctOTdkNi1hYTcxOTY2NjE3MTFcJ2E2SW5zZXJ0RGF0ZUFzRmllbGRcJ2E2SW5zZXJ0IERhdGUvVGltZSBhcyBGaWVsZCBDb2RlXCdhNjBcJ2E2OVwnYTZbVHlwZVByZWZlcmVuY2VfSW5zZXJ0RGF0ZUFzRmllbGRdXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5zZXJ0RGF0ZUFzRmllbGQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkluY2x1ZGVEYXRlLEluY2x1ZGVUaQ0KbWVcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxWYXJpYWJsZURlZmluaXRpb249OGVhZTUyYzAtYWZkYi00MTEyLTk2ZjYtYjhhZTZhY2JkYmJiXCdhNkluY2x1ZGVUeXBpc3RcJ2E2SW5jbHVkZSBUeXBpc3QgSURcJ2E2MFwnYTY1XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZVR5cGlzdF1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZQXCdhNkZhbHNlXCdhNjFcJ2E2RmFsDQpzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj0xMTRjNGRmMS0yM2Y1LTQ1ODItOTdhZS04MDFiMzhiMTI2ZDZcJ2E2SW5jbHVkZUF1dGhvclwnYTZJbmNsdWRlIEF1dGhvciBJRFwnYTYwXCdhNjRcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlQXV0aG9yXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNkFcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj1hMzcNCmNlOTkzLTQ2NDYtNGU4OC05NGVkLTRhMzZjN2IyMWE2N1wnYTZJbmNsdWRlQ2xpZW50TWF0dGVyXCdhNkluY2x1ZGUgQ2xpZW50IE1hdHRlciBOby5cJ2E2MFwnYTYzXCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUNsaWVudE1hdHRlcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YzczNTRmZGUtNzQ3ZC00Yw0KMTItOTkzMS0wMTE1Zjc5ZDJhY2JcJ2E2SW5jbHVkZVZlcnNpb25cJ2E2SW5jbHVkZSBWZXJzaW9uXCdhNjBcJ2E2MlwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVWZXJzaW9uXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNk1cJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXBzOTI0MjUzODIwMDAwMDAwMDAwMDAwMDAxMDc4MDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9Mg0KfX0NCntcKlxkb2N2YXIge21wbzM0Mjg4MDQzfXtGb290ZXIoQm90dG9tTGVmdClfMVwnY2NcJ2NkUGFydE51bWJlcj0zXCdjY1wnY2RPYmplY3REYXRhPVNlZ21lbnRJRD0xMDc4fE9iamVjdFR5cGVJRD00MDF8TmFtZT1Gb290ZXIoQm90dG9tTGVmdCl8RGlzcGxheU5hbWU9Rm9vdGVyIChMZWZ0IEFsaWduZWQpfEludGVuZGVkVXNlPTJ8QXV0aG9yTm9kZVVJTGFiZWw9fE1heEF1dGhvcnM9MHxIZWxwVGV4dD1maWxlOi8vL1RyYWlsZXJfVHJhaWxlci5odG1sfE1lbnVJbnNlcnRpb25PcHRpb25zPTI1NnxEZWZhdWx0TWUNCm51SW5zZXJ0aW9uQmVoYXZpb3I9MHxEZWZhdWx0RHJhZ0xvY2F0aW9uPTF8RGVmYXVsdERyYWdCZWhhdmlvcj0wfERlZmF1bHREb3VibGVDbGlja0xvY2F0aW9uPTR8RGVmYXVsdERvdWJsZUNsaWNrQmVoYXZpb3I9MHxMMD0wfEwxPTB8TDI9MHxMMz0wfEw0PTB8QXV0aG9yQ29udHJvbFByb3BlcnRpZXM9fFNob3dDaG9vc2VyPXRydWV8TGlua0F1dGhvcnNUb1BhcmVudERlZj18VHJhbnNsYXRpb25JRD0wfFJlcXVpcmVkU3R5bGVzPU1hY1BhYyBUcg0KYWlsZXJ8VmFyaWFibGVEZWZpbml0aW9uPTQzNDA3NGNlLWEzZGItNDljNy05N2Q2LWFhNzE5NjY2MTcxMVwnYTZJbnNlcnREYXRlQXNGaWVsZFwnYTZJbnNlcnQgRGF0ZS9UaW1lIGFzIEZpZWxkIENvZGVcJ2E2MFwnYTY5XCdhNltUeXBlUHJlZmVyZW5jZV9JbnNlcnREYXRlQXNGaWVsZF1cJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbnNlcnREYXRlQXNGaWVsZC5odG1sXCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2SW5jbHVkZURhdGUsSW5jbHVkZVRpDQptZVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2RlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFZhcmlhYmxlRGVmaW5pdGlvbj04ZWFlNTJjMC1hZmRiLTQxMTItOTZmNi1iOGFlNmFjYmRiYmJcJ2E2SW5jbHVkZVR5cGlzdFwnYTZJbmNsdWRlIFR5cGlzdCBJRFwnYTYwXCdhNjVcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVHlwaXN0XVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNlBcJ2E2RmFsc2VcJ2E2MVwnYTZGYWwNCnNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPTExNGM0ZGYxLTIzZjUtNDU4Mi05N2FlLTgwMWIzOGIxMjZkNlwnYTZJbmNsdWRlQXV0aG9yXCdhNkluY2x1ZGUgQXV0aG9yIElEXCdhNjBcJ2E2NFwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVBdXRob3JdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2QVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWEzNw0KY2U5OTMtNDY0Ni00ZTg4LTk0ZWQtNGEzNmM3YjIxYTY3XCdhNkluY2x1ZGVDbGllbnRNYXR0ZXJcJ2E2SW5jbHVkZSBDbGllbnQgTWF0dGVyIE5vLlwnYTYwXCdhNjNcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlQ2xpZW50TWF0dGVyXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNk1cJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj1jNzM1NGZkZS03NDdkLTRjDQoxMi05OTMxLTAxMTVmNzlkMmFjYlwnYTZJbmNsdWRlVmVyc2lvblwnYTZJbmNsdWRlIFZlcnNpb25cJ2E2MFwnYTYyXCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZVZlcnNpb25dXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8XCdjY1wnY2RSZXNlcnZlZD1tcHM5MjQyNTM4MjAwMDAwMDAwMDAwMDAwMDEwNzgwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0yDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvMzQzODgyOTJ9e0luY2x1ZGVEYXRlXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj1mY2JhNDZlZC00ZDU3LTQ5ZTQtOTAyZC0xMWM0OGUyODlkMmNcJ2E2SW5jbHVkZURhdGVcJ2E2SW5jbHVkZSBEYXRlXCdhNjBcJ2E2N1wnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURhdGVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURhdGUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MlwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBNTS9kZC95eVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVUaW1lXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZEXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1ODg1ODQ0ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG8zNDYzNDM4Mn17Rm9vdGVyKEJvdHRvbUxlZnQpXzFcJ2NjXCdjZFBhcnROdW1iZXI9M1wnY2NcJ2NkT2JqZWN0RGF0YT1TZWdtZW50SUQ9MTA3OHxPYmplY3RUeXBlSUQ9NDAxfE5hbWU9Rm9vdGVyKEJvdHRvbUxlZnQpfERpc3BsYXlOYW1lPUZvb3RlciAoTGVmdCBBbGlnbmVkKXxJbnRlbmRlZFVzZT0yfEF1dGhvck5vZGVVSUxhYmVsPXxNYXhBdXRob3JzPTB8SGVscFRleHQ9ZmlsZTovLy9UcmFpbGVyX1RyYWlsZXIuaHRtbHxNZW51SW5zZXJ0aW9uT3B0aW9ucz0yNTZ8RGVmYXVsdE1lDQpudUluc2VydGlvbkJlaGF2aW9yPTB8RGVmYXVsdERyYWdMb2NhdGlvbj0xfERlZmF1bHREcmFnQmVoYXZpb3I9MHxEZWZhdWx0RG91YmxlQ2xpY2tMb2NhdGlvbj00fERlZmF1bHREb3VibGVDbGlja0JlaGF2aW9yPTB8TDA9MHxMMT0wfEwyPTB8TDM9MHxMND0wfEF1dGhvckNvbnRyb2xQcm9wZXJ0aWVzPXxTaG93Q2hvb3Nlcj10cnVlfExpbmtBdXRob3JzVG9QYXJlbnREZWY9fFRyYW5zbGF0aW9uSUQ9MHxSZXF1aXJlZFN0eWxlcz1NYWNQYWMgVHINCmFpbGVyfFZhcmlhYmxlRGVmaW5pdGlvbj00MzQwNzRjZS1hM2RiLTQ5YzctOTdkNi1hYTcxOTY2NjE3MTFcJ2E2SW5zZXJ0RGF0ZUFzRmllbGRcJ2E2SW5zZXJ0IERhdGUvVGltZSBhcyBGaWVsZCBDb2RlXCdhNjBcJ2E2OVwnYTZbVHlwZVByZWZlcmVuY2VfSW5zZXJ0RGF0ZUFzRmllbGRdXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5zZXJ0RGF0ZUFzRmllbGQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkluY2x1ZGVEYXRlLEluY2x1ZGVUaQ0KbWVcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxWYXJpYWJsZURlZmluaXRpb249OGVhZTUyYzAtYWZkYi00MTEyLTk2ZjYtYjhhZTZhY2JkYmJiXCdhNkluY2x1ZGVUeXBpc3RcJ2E2SW5jbHVkZSBUeXBpc3QgSURcJ2E2MFwnYTY1XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZVR5cGlzdF1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZQXCdhNkZhbHNlXCdhNjFcJ2E2RmFsDQpzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj0xMTRjNGRmMS0yM2Y1LTQ1ODItOTdhZS04MDFiMzhiMTI2ZDZcJ2E2SW5jbHVkZUF1dGhvclwnYTZJbmNsdWRlIEF1dGhvciBJRFwnYTYwXCdhNjRcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlQXV0aG9yXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNkFcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj1hMzcNCmNlOTkzLTQ2NDYtNGU4OC05NGVkLTRhMzZjN2IyMWE2N1wnYTZJbmNsdWRlQ2xpZW50TWF0dGVyXCdhNkluY2x1ZGUgQ2xpZW50IE1hdHRlciBOby5cJ2E2MFwnYTYzXCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUNsaWVudE1hdHRlcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YzczNTRmZGUtNzQ3ZC00Yw0KMTItOTkzMS0wMTE1Zjc5ZDJhY2JcJ2E2SW5jbHVkZVZlcnNpb25cJ2E2SW5jbHVkZSBWZXJzaW9uXCdhNjBcJ2E2MlwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVWZXJzaW9uXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNk1cJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXBzOTI0MjUzODIwMDAwMDAwMDAwMDAwMDAxMDc4MDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9Mg0KfX0NCntcKlxkb2N2YXIge21wbzM0NjcwNzgyfXtEb2NJRFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Y2EwOGZjNDktN2UyMy00OTE3LTgzMmYtZWFiOTUxNzk4NjRlXCdhNkRvY0lEXCdhNkRvYyBJRFwnYTYwXCdhNjFcJ2E2W0RNU19fSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXINCnNpb25dIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZQ0KQXV0aG9yXSBePSB0cnVlIF4/IFtETVNfX0F1dGhvcklEXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXkFORCBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZcJ2E2XCdhNjdcJ2E2XCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcwXCc4N1tETVNfDQpfSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXJzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWINCmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZQ0KX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MFwnYTYxXCdhNlwnYTZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjgxODg5NDU3MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTENCn19DQp7XCpcZG9jdmFyIHttcG8zNDg5MzQ4OX17RG9jSURcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWNhMDhmYzQ5LTdlMjMtNDkxNy04MzJmLWVhYjk1MTc5ODY0ZVwnYTZEb2NJRFwnYTZEb2MgSURcJ2E2MFwnYTYxXCdhNltETVNfX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyDQpzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGUNCkF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2XCdhNlwnYTY3XCdhNlwnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MFwnODdbRE1TXw0KX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyc2lvbl0gXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF5PUiBbVmFyaWFiDQpsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXj8gW0RNU19fQXV0aG9ySURdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBeQU5EIFwnN2JbVmFyaWFibGUNCl9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjBcJ2E2MVwnYTZcJ2E2XCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY4MTg4OTQ1NzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0xDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvMzU4MDA0Mzl9e0luY2x1ZGVEcmFmdFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Nzc2NmYzYWUtOTBlMC00ODEwLWJhZDUtNTRkMDkyYTVmYTdkXCdhNkluY2x1ZGVEcmFmdFwnYTZJbmNsdWRlIERyYWZ0XCdhNjBcJ2E2NlwnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURyYWZ0XVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVEcmFmdC5odG1sXCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcyXCc4N1tNeVZhbHVlXSBePQ0KIHRydWUgXj8gRFJBRlQgXjogW0VtcHR5XVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2UlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NjMzOTAwODgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9fX0NCntcKlxkb2N2YXIge21wbzM3NjE2MDc0fXtJbmNsdWRlRGF0ZVwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249ZmNiYTQ2ZWQtNGQ1Ny00OWU0LTkwMmQtMTFjNDhlMjg5ZDJjXCdhNkluY2x1ZGVEYXRlXCdhNkluY2x1ZGUgRGF0ZVwnYTYwXCdhNjdcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVEYXRlXVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVEYXRlLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxN1wnODYwXCc4NzJcJzg3XCc4N1tNeVZhbHVlXSBePSB0cnUNCmUgXj8gTU0vZGQveXlcJzdiW1ZhcmlhYmxlX19JbnNlcnREYXRlQXNGaWVsZF0gXj8gIC9GXCc3ZCBeOiBbRW1wdHldXCdhNjFcJzg2XCc4NjRcJzg2MlwnODZJbnNlcnREYXRlQXNGaWVsZFwnODdbTXlWYWx1ZV0gXk9SIFtWYXJpYWJsZV9JbmNsdWRlVGltZV1cJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2RFwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NTg4NTg0NDgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9DQp9fQ0Ke1wqXGRvY3ZhciB7bXBvMzgxMzM5MDd9e0luY2x1ZGVEYXRlXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj1mY2JhNDZlZC00ZDU3LTQ5ZTQtOTAyZC0xMWM0OGUyODlkMmNcJ2E2SW5jbHVkZURhdGVcJ2E2SW5jbHVkZSBEYXRlXCdhNjBcJ2E2N1wnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURhdGVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURhdGUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MlwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBNTS9kZC95eVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVUaW1lXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZEXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1ODg1ODQ0ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG8zODk3OTUwMX17SW5jbHVkZVRpbWVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTcyNTRlYjQ3LTZhZTktNDBiYy1iYjQyLTVkYTZmNDA3Nzc2YVwnYTZJbmNsdWRlVGltZVwnYTZJbmNsdWRlIFRpbWVcJ2E2MFwnYTY4XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlVGltZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlVGltZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcwXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IGg6bW1hbS9wbVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkICBeOiBbRW1wdHldXCdhNjFcJzg2XCc4NjRcJzg2MlwnODZJbnNlcnREYXRlQXNGaWVsZFwnODdbTXlWYWx1ZV0gXk9SIFtWYXJpYWJsZV9JbmNsdWRlRGF0ZV1cJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2VFwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NTYyODU5NjUwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9DQp9fQ0Ke1wqXGRvY3ZhciB7bXBvMzkyMDIwNDB9e0luY2x1ZGVUaW1lXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj03MjU0ZWI0Ny02YWU5LTQwYmMtYmI0Mi01ZGE2ZjQwNzc3NmFcJ2E2SW5jbHVkZVRpbWVcJ2E2SW5jbHVkZSBUaW1lXCdhNjBcJ2E2OFwnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZVRpbWVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZVRpbWUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MFwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBoOm1tYW0vcG1cJzdiW1ZhcmlhYmxlX19JbnNlcnREYXRlQXNGaWVsZF0gXj8gIC9GXCc3ZCAgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZURhdGVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU2Mjg1OTY1MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzQwNDUyMTQ3fXtJbmNsdWRlRGF0ZVwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249ZmNiYTQ2ZWQtNGQ1Ny00OWU0LTkwMmQtMTFjNDhlMjg5ZDJjXCdhNkluY2x1ZGVEYXRlXCdhNkluY2x1ZGUgRGF0ZVwnYTYwXCdhNjdcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVEYXRlXVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVEYXRlLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxN1wnODYwXCc4NzJcJzg3XCc4N1tNeVZhbHVlXSBePSB0cnUNCmUgXj8gTU0vZGQveXlcJzdiW1ZhcmlhYmxlX19JbnNlcnREYXRlQXNGaWVsZF0gXj8gIC9GXCc3ZCBeOiBbRW1wdHldXCdhNjFcJzg2XCc4NjRcJzg2MlwnODZJbnNlcnREYXRlQXNGaWVsZFwnODdbTXlWYWx1ZV0gXk9SIFtWYXJpYWJsZV9JbmNsdWRlVGltZV1cJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2RFwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NTg4NTg0NDgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9DQp9fQ0Ke1wqXGRvY3ZhciB7bXBvNDExNDExMDV9e0luY2x1ZGVEYXRlXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj1mY2JhNDZlZC00ZDU3LTQ5ZTQtOTAyZC0xMWM0OGUyODlkMmNcJ2E2SW5jbHVkZURhdGVcJ2E2SW5jbHVkZSBEYXRlXCdhNjBcJ2E2N1wnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURhdGVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURhdGUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MlwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBNTS9kZC95eVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVUaW1lXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZEXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1ODg1ODQ0ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG80MzI5NDI5M317SW5jbHVkZURyYWZ0XCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj03NzY2ZjNhZS05MGUwLTQ4MTAtYmFkNS01NGQwOTJhNWZhN2RcJ2E2SW5jbHVkZURyYWZ0XCdhNkluY2x1ZGUgRHJhZnRcJ2E2MFwnYTY2XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRHJhZnRdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURyYWZ0Lmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxXCc4NlwnODcwXCc4NzJcJzg3W015VmFsdWVdIF49DQogdHJ1ZSBePyBEUkFGVCBeOiBbRW1wdHldXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZSXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY2MzM5MDA4ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD19fQ0Ke1wqXGRvY3ZhciB7bXBvNDM0OTY3Mjh9e0luY2x1ZGVEYXRlXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj1mY2JhNDZlZC00ZDU3LTQ5ZTQtOTAyZC0xMWM0OGUyODlkMmNcJ2E2SW5jbHVkZURhdGVcJ2E2SW5jbHVkZSBEYXRlXCdhNjBcJ2E2N1wnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURhdGVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURhdGUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MlwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBNTS9kZC95eVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVUaW1lXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZEXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1ODg1ODQ0ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG80MzUyNzAwMX17Rm9vdGVyKEJvdHRvbUxlZnQpXzFcJ2NjXCdjZFBhcnROdW1iZXI9M1wnY2NcJ2NkT2JqZWN0RGF0YT1TZWdtZW50SUQ9MTA3OHxPYmplY3RUeXBlSUQ9NDAxfE5hbWU9Rm9vdGVyKEJvdHRvbUxlZnQpfERpc3BsYXlOYW1lPUZvb3RlciAoTGVmdCBBbGlnbmVkKXxJbnRlbmRlZFVzZT0yfEF1dGhvck5vZGVVSUxhYmVsPXxNYXhBdXRob3JzPTB8SGVscFRleHQ9ZmlsZTovLy9UcmFpbGVyX1RyYWlsZXIuaHRtbHxNZW51SW5zZXJ0aW9uT3B0aW9ucz0yNTZ8RGVmYXVsdE1lDQpudUluc2VydGlvbkJlaGF2aW9yPTB8RGVmYXVsdERyYWdMb2NhdGlvbj0xfERlZmF1bHREcmFnQmVoYXZpb3I9MHxEZWZhdWx0RG91YmxlQ2xpY2tMb2NhdGlvbj00fERlZmF1bHREb3VibGVDbGlja0JlaGF2aW9yPTB8TDA9MHxMMT0wfEwyPTB8TDM9MHxMND0wfEF1dGhvckNvbnRyb2xQcm9wZXJ0aWVzPXxTaG93Q2hvb3Nlcj10cnVlfExpbmtBdXRob3JzVG9QYXJlbnREZWY9fFRyYW5zbGF0aW9uSUQ9MHxSZXF1aXJlZFN0eWxlcz1NYWNQYWMgVHINCmFpbGVyfFZhcmlhYmxlRGVmaW5pdGlvbj00MzQwNzRjZS1hM2RiLTQ5YzctOTdkNi1hYTcxOTY2NjE3MTFcJ2E2SW5zZXJ0RGF0ZUFzRmllbGRcJ2E2SW5zZXJ0IERhdGUvVGltZSBhcyBGaWVsZCBDb2RlXCdhNjBcJ2E2OVwnYTZbVHlwZVByZWZlcmVuY2VfSW5zZXJ0RGF0ZUFzRmllbGRdXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5zZXJ0RGF0ZUFzRmllbGQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkluY2x1ZGVEYXRlLEluY2x1ZGVUaQ0KbWVcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxWYXJpYWJsZURlZmluaXRpb249OGVhZTUyYzAtYWZkYi00MTEyLTk2ZjYtYjhhZTZhY2JkYmJiXCdhNkluY2x1ZGVUeXBpc3RcJ2E2SW5jbHVkZSBUeXBpc3QgSURcJ2E2MFwnYTY1XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZVR5cGlzdF1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZQXCdhNkZhbHNlXCdhNjFcJ2E2RmFsDQpzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj0xMTRjNGRmMS0yM2Y1LTQ1ODItOTdhZS04MDFiMzhiMTI2ZDZcJ2E2SW5jbHVkZUF1dGhvclwnYTZJbmNsdWRlIEF1dGhvciBJRFwnYTYwXCdhNjRcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlQXV0aG9yXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNkFcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj1hMzcNCmNlOTkzLTQ2NDYtNGU4OC05NGVkLTRhMzZjN2IyMWE2N1wnYTZJbmNsdWRlQ2xpZW50TWF0dGVyXCdhNkluY2x1ZGUgQ2xpZW50IE1hdHRlciBOby5cJ2E2MFwnYTYzXCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUNsaWVudE1hdHRlcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YzczNTRmZGUtNzQ3ZC00Yw0KMTItOTkzMS0wMTE1Zjc5ZDJhY2JcJ2E2SW5jbHVkZVZlcnNpb25cJ2E2SW5jbHVkZSBWZXJzaW9uXCdhNjBcJ2E2MlwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVWZXJzaW9uXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNk1cJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXBzOTI0MjUzODIwMDAwMDAwMDAwMDAwMDAxMDc4MDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9Mg0KfX0NCntcKlxkb2N2YXIge21wbzQ0NTA3ODMxfXtGb290ZXIoQm90dG9tTGVmdClfMVwnY2NcJ2NkUGFydE51bWJlcj0zXCdjY1wnY2RPYmplY3REYXRhPVNlZ21lbnRJRD0xMDc4fE9iamVjdFR5cGVJRD00MDF8TmFtZT1Gb290ZXIoQm90dG9tTGVmdCl8RGlzcGxheU5hbWU9Rm9vdGVyIChMZWZ0IEFsaWduZWQpfEludGVuZGVkVXNlPTJ8QXV0aG9yTm9kZVVJTGFiZWw9fE1heEF1dGhvcnM9MHxIZWxwVGV4dD1maWxlOi8vL1RyYWlsZXJfVHJhaWxlci5odG1sfE1lbnVJbnNlcnRpb25PcHRpb25zPTI1NnxEZWZhdWx0TWUNCm51SW5zZXJ0aW9uQmVoYXZpb3I9MHxEZWZhdWx0RHJhZ0xvY2F0aW9uPTF8RGVmYXVsdERyYWdCZWhhdmlvcj0wfERlZmF1bHREb3VibGVDbGlja0xvY2F0aW9uPTR8RGVmYXVsdERvdWJsZUNsaWNrQmVoYXZpb3I9MHxMMD0wfEwxPTB8TDI9MHxMMz0wfEw0PTB8QXV0aG9yQ29udHJvbFByb3BlcnRpZXM9fFNob3dDaG9vc2VyPXRydWV8TGlua0F1dGhvcnNUb1BhcmVudERlZj18VHJhbnNsYXRpb25JRD0wfFJlcXVpcmVkU3R5bGVzPU1hY1BhYyBUcg0KYWlsZXJ8VmFyaWFibGVEZWZpbml0aW9uPTQzNDA3NGNlLWEzZGItNDljNy05N2Q2LWFhNzE5NjY2MTcxMVwnYTZJbnNlcnREYXRlQXNGaWVsZFwnYTZJbnNlcnQgRGF0ZS9UaW1lIGFzIEZpZWxkIENvZGVcJ2E2MFwnYTY5XCdhNltUeXBlUHJlZmVyZW5jZV9JbnNlcnREYXRlQXNGaWVsZF1cJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbnNlcnREYXRlQXNGaWVsZC5odG1sXCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2SW5jbHVkZURhdGUsSW5jbHVkZVRpDQptZVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2RlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFZhcmlhYmxlRGVmaW5pdGlvbj04ZWFlNTJjMC1hZmRiLTQxMTItOTZmNi1iOGFlNmFjYmRiYmJcJ2E2SW5jbHVkZVR5cGlzdFwnYTZJbmNsdWRlIFR5cGlzdCBJRFwnYTYwXCdhNjVcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVHlwaXN0XVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNlBcJ2E2RmFsc2VcJ2E2MVwnYTZGYWwNCnNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPTExNGM0ZGYxLTIzZjUtNDU4Mi05N2FlLTgwMWIzOGIxMjZkNlwnYTZJbmNsdWRlQXV0aG9yXCdhNkluY2x1ZGUgQXV0aG9yIElEXCdhNjBcJ2E2NFwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVBdXRob3JdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2QVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWEzNw0KY2U5OTMtNDY0Ni00ZTg4LTk0ZWQtNGEzNmM3YjIxYTY3XCdhNkluY2x1ZGVDbGllbnRNYXR0ZXJcJ2E2SW5jbHVkZSBDbGllbnQgTWF0dGVyIE5vLlwnYTYwXCdhNjNcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlQ2xpZW50TWF0dGVyXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNk1cJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj1jNzM1NGZkZS03NDdkLTRjDQoxMi05OTMxLTAxMTVmNzlkMmFjYlwnYTZJbmNsdWRlVmVyc2lvblwnYTZJbmNsdWRlIFZlcnNpb25cJ2E2MFwnYTYyXCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZVZlcnNpb25dXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8XCdjY1wnY2RSZXNlcnZlZD1tcHM5MjQyNTM4MjAwMDAwMDAwMDAwMDAwMDEwNzgwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0yDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvNDQ4ODQyNzZ9e0RvY0lEXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj1jYTA4ZmM0OS03ZTIzLTQ5MTctODMyZi1lYWI5NTE3OTg2NGVcJ2E2RG9jSURcJ2E2RG9jIElEXCdhNjBcJ2E2MVwnYTZbRE1TX19Jc1Byb2ZpbGVkXSBePyBcJzdiW0NIT09TRV9fW0RNU19fTGlicmFyeV1fX1VTW0NIQVJfXzk1XUJMWF9fQkxYX19VU0FfX09IU1VTQV9fVE9LWU9fX09IU1RPS1lPX19BU0lBX19PSFNBU0lBX19FVVJPUEVfX09IU0VVUk9QRV9fQkxYXTpbRE1TX19Eb2NOdW1iZXJdLltETVNfX1Zlcg0Kc2lvbl0gXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0NoYXJfXzExXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXj8gW0RNU19fQ2xpZW50SURdLVtETVNfX01hdHRlcklEXSAgXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlDQpBdXRob3JdIF49IHRydWUgXj8gW0RNU19fQXV0aG9ySURdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBeQU5EIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWVcJzdkIF4/IC8gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtETVNfX1R5cGlzdElEXSBeOiBbRW1wdHldXCc3ZFwnN2QgXjogW0RvY3VtZW50X19GdWxsTmFtZV1cJ2E2XCdhNlwnYTZcJ2E2N1wnYTZcJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYxXCc4NlwnODcwXCc4NzBcJzg3W0RNU18NCl9Jc1Byb2ZpbGVkXSBePyBcJzdiW0NIT09TRV9fW0RNU19fTGlicmFyeV1fX1VTW0NIQVJfXzk1XUJMWF9fQkxYX19VU0FfX09IU1VTQV9fVE9LWU9fX09IU1RPS1lPX19BU0lBX19PSFNBU0lBX19FVVJPUEVfX09IU0VVUk9QRV9fQkxYXTpbRE1TX19Eb2NOdW1iZXJdLltETVNfX1ZlcnNpb25dIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYg0KbGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0NoYXJfXzExXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXj8gW0RNU19fQ2xpZW50SURdLVtETVNfX01hdHRlcklEXSAgXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF4/IFtETVNfX0F1dGhvcklEXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXkFORCBcJzdiW1ZhcmlhYmxlDQpfX0luY2x1ZGVBdXRob3JdIF49IHRydWVcJzdkIF4/IC8gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtETVNfX1R5cGlzdElEXSBeOiBbRW1wdHldXCc3ZFwnN2QgXjogW0RvY3VtZW50X19GdWxsTmFtZV1cJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYwXCdhNjFcJ2E2XCdhNlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2ODE4ODk0NTcwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9MQ0KfX0NCntcKlxkb2N2YXIge21wbzQ2MDk2OTkyfXtEb2NJRFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Y2EwOGZjNDktN2UyMy00OTE3LTgzMmYtZWFiOTUxNzk4NjRlXCdhNkRvY0lEXCdhNkRvYyBJRFwnYTYwXCdhNjFcJ2E2W0RNU19fSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXINCnNpb25dIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZQ0KQXV0aG9yXSBePSB0cnVlIF4/IFtETVNfX0F1dGhvcklEXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXkFORCBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZcJ2E2XCdhNjdcJ2E2XCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcwXCc4N1tETVNfDQpfSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXJzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWINCmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZQ0KX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MFwnYTYxXCdhNlwnYTZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjgxODg5NDU3MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTENCn19DQp7XCpcZG9jdmFyIHttcG80NjE4NTIzN317SW5jbHVkZVRpbWVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTcyNTRlYjQ3LTZhZTktNDBiYy1iYjQyLTVkYTZmNDA3Nzc2YVwnYTZJbmNsdWRlVGltZVwnYTZJbmNsdWRlIFRpbWVcJ2E2MFwnYTY4XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlVGltZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlVGltZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcwXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IGg6bW1hbS9wbVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkICBeOiBbRW1wdHldXCdhNjFcJzg2XCc4NjRcJzg2MlwnODZJbnNlcnREYXRlQXNGaWVsZFwnODdbTXlWYWx1ZV0gXk9SIFtWYXJpYWJsZV9JbmNsdWRlRGF0ZV1cJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2VFwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NTYyODU5NjUwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9DQp9fQ0Ke1wqXGRvY3ZhciB7bXBvNDY0MDgzNzl9e0RvY0lEXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj1jYTA4ZmM0OS03ZTIzLTQ5MTctODMyZi1lYWI5NTE3OTg2NGVcJ2E2RG9jSURcJ2E2RG9jIElEXCdhNjBcJ2E2MVwnYTZbRE1TX19Jc1Byb2ZpbGVkXSBePyBcJzdiW0NIT09TRV9fW0RNU19fTGlicmFyeV1fX1VTW0NIQVJfXzk1XUJMWF9fQkxYX19VU0FfX09IU1VTQV9fVE9LWU9fX09IU1RPS1lPX19BU0lBX19PSFNBU0lBX19FVVJPUEVfX09IU0VVUk9QRV9fQkxYXTpbRE1TX19Eb2NOdW1iZXJdLltETVNfX1Zlcg0Kc2lvbl0gXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0NoYXJfXzExXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXj8gW0RNU19fQ2xpZW50SURdLVtETVNfX01hdHRlcklEXSAgXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlDQpBdXRob3JdIF49IHRydWUgXj8gW0RNU19fQXV0aG9ySURdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBeQU5EIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWVcJzdkIF4/IC8gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtETVNfX1R5cGlzdElEXSBeOiBbRW1wdHldXCc3ZFwnN2QgXjogW0RvY3VtZW50X19GdWxsTmFtZV1cJ2E2XCdhNlwnYTZcJ2E2N1wnYTZcJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYxXCc4NlwnODcwXCc4NzBcJzg3W0RNU18NCl9Jc1Byb2ZpbGVkXSBePyBcJzdiW0NIT09TRV9fW0RNU19fTGlicmFyeV1fX1VTW0NIQVJfXzk1XUJMWF9fQkxYX19VU0FfX09IU1VTQV9fVE9LWU9fX09IU1RPS1lPX19BU0lBX19PSFNBU0lBX19FVVJPUEVfX09IU0VVUk9QRV9fQkxYXTpbRE1TX19Eb2NOdW1iZXJdLltETVNfX1ZlcnNpb25dIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYg0KbGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0NoYXJfXzExXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXj8gW0RNU19fQ2xpZW50SURdLVtETVNfX01hdHRlcklEXSAgXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF4/IFtETVNfX0F1dGhvcklEXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXkFORCBcJzdiW1ZhcmlhYmxlDQpfX0luY2x1ZGVBdXRob3JdIF49IHRydWVcJzdkIF4/IC8gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtETVNfX1R5cGlzdElEXSBeOiBbRW1wdHldXCc3ZFwnN2QgXjogW0RvY3VtZW50X19GdWxsTmFtZV1cJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYwXCdhNjFcJ2E2XCdhNlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2ODE4ODk0NTcwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9MQ0KfX0NCntcKlxkb2N2YXIge21wbzQ2NDIwMjQ2fXtGb290ZXIoQm90dG9tTGVmdClfMVwnY2NcJ2NkUGFydE51bWJlcj0zXCdjY1wnY2RPYmplY3REYXRhPVNlZ21lbnRJRD0xMDc4fE9iamVjdFR5cGVJRD00MDF8TmFtZT1Gb290ZXIoQm90dG9tTGVmdCl8RGlzcGxheU5hbWU9Rm9vdGVyIChMZWZ0IEFsaWduZWQpfEludGVuZGVkVXNlPTJ8QXV0aG9yTm9kZVVJTGFiZWw9fE1heEF1dGhvcnM9MHxIZWxwVGV4dD1maWxlOi8vL1RyYWlsZXJfVHJhaWxlci5odG1sfE1lbnVJbnNlcnRpb25PcHRpb25zPTI1NnxEZWZhdWx0TWUNCm51SW5zZXJ0aW9uQmVoYXZpb3I9MHxEZWZhdWx0RHJhZ0xvY2F0aW9uPTF8RGVmYXVsdERyYWdCZWhhdmlvcj0wfERlZmF1bHREb3VibGVDbGlja0xvY2F0aW9uPTR8RGVmYXVsdERvdWJsZUNsaWNrQmVoYXZpb3I9MHxMMD0wfEwxPTB8TDI9MHxMMz0wfEw0PTB8QXV0aG9yQ29udHJvbFByb3BlcnRpZXM9fFNob3dDaG9vc2VyPXRydWV8TGlua0F1dGhvcnNUb1BhcmVudERlZj18VHJhbnNsYXRpb25JRD0wfFJlcXVpcmVkU3R5bGVzPU1hY1BhYyBUcg0KYWlsZXJ8VmFyaWFibGVEZWZpbml0aW9uPTQzNDA3NGNlLWEzZGItNDljNy05N2Q2LWFhNzE5NjY2MTcxMVwnYTZJbnNlcnREYXRlQXNGaWVsZFwnYTZJbnNlcnQgRGF0ZS9UaW1lIGFzIEZpZWxkIENvZGVcJ2E2MFwnYTY5XCdhNltUeXBlUHJlZmVyZW5jZV9JbnNlcnREYXRlQXNGaWVsZF1cJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbnNlcnREYXRlQXNGaWVsZC5odG1sXCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2SW5jbHVkZURhdGUsSW5jbHVkZVRpDQptZVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2RlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFZhcmlhYmxlRGVmaW5pdGlvbj04ZWFlNTJjMC1hZmRiLTQxMTItOTZmNi1iOGFlNmFjYmRiYmJcJ2E2SW5jbHVkZVR5cGlzdFwnYTZJbmNsdWRlIFR5cGlzdCBJRFwnYTYwXCdhNjVcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVHlwaXN0XVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNlBcJ2E2RmFsc2VcJ2E2MVwnYTZGYWwNCnNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPTExNGM0ZGYxLTIzZjUtNDU4Mi05N2FlLTgwMWIzOGIxMjZkNlwnYTZJbmNsdWRlQXV0aG9yXCdhNkluY2x1ZGUgQXV0aG9yIElEXCdhNjBcJ2E2NFwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVBdXRob3JdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2QVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWEzNw0KY2U5OTMtNDY0Ni00ZTg4LTk0ZWQtNGEzNmM3YjIxYTY3XCdhNkluY2x1ZGVDbGllbnRNYXR0ZXJcJ2E2SW5jbHVkZSBDbGllbnQgTWF0dGVyIE5vLlwnYTYwXCdhNjNcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlQ2xpZW50TWF0dGVyXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNk1cJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj1jNzM1NGZkZS03NDdkLTRjDQoxMi05OTMxLTAxMTVmNzlkMmFjYlwnYTZJbmNsdWRlVmVyc2lvblwnYTZJbmNsdWRlIFZlcnNpb25cJ2E2MFwnYTYyXCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZVZlcnNpb25dXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8XCdjY1wnY2RSZXNlcnZlZD1tcHM5MjQyNTM4MjAwMDAwMDAwMDAwMDAwMDEwNzgwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0yDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvNDY1NzUyMzB9e0Zvb3RlcihCb3R0b21MZWZ0KV8xXCdjY1wnY2RQYXJ0TnVtYmVyPTNcJ2NjXCdjZE9iamVjdERhdGE9U2VnbWVudElEPTEwNzh8T2JqZWN0VHlwZUlEPTQwMXxOYW1lPUZvb3RlcihCb3R0b21MZWZ0KXxEaXNwbGF5TmFtZT1Gb290ZXIgKExlZnQgQWxpZ25lZCl8SW50ZW5kZWRVc2U9MnxBdXRob3JOb2RlVUlMYWJlbD18TWF4QXV0aG9ycz0wfEhlbHBUZXh0PWZpbGU6Ly8vVHJhaWxlcl9UcmFpbGVyLmh0bWx8TWVudUluc2VydGlvbk9wdGlvbnM9MjU2fERlZmF1bHRNZQ0KbnVJbnNlcnRpb25CZWhhdmlvcj0wfERlZmF1bHREcmFnTG9jYXRpb249MXxEZWZhdWx0RHJhZ0JlaGF2aW9yPTB8RGVmYXVsdERvdWJsZUNsaWNrTG9jYXRpb249NHxEZWZhdWx0RG91YmxlQ2xpY2tCZWhhdmlvcj0wfEwwPTB8TDE9MHxMMj0wfEwzPTB8TDQ9MHxBdXRob3JDb250cm9sUHJvcGVydGllcz18U2hvd0Nob29zZXI9dHJ1ZXxMaW5rQXV0aG9yc1RvUGFyZW50RGVmPXxUcmFuc2xhdGlvbklEPTB8UmVxdWlyZWRTdHlsZXM9TWFjUGFjIFRyDQphaWxlcnxWYXJpYWJsZURlZmluaXRpb249NDM0MDc0Y2UtYTNkYi00OWM3LTk3ZDYtYWE3MTk2NjYxNzExXCdhNkluc2VydERhdGVBc0ZpZWxkXCdhNkluc2VydCBEYXRlL1RpbWUgYXMgRmllbGQgQ29kZVwnYTYwXCdhNjlcJ2E2W1R5cGVQcmVmZXJlbmNlX0luc2VydERhdGVBc0ZpZWxkXVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luc2VydERhdGVBc0ZpZWxkLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZJbmNsdWRlRGF0ZSxJbmNsdWRlVGkNCm1lXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZGXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8VmFyaWFibGVEZWZpbml0aW9uPThlYWU1MmMwLWFmZGItNDExMi05NmY2LWI4YWU2YWNiZGJiYlwnYTZJbmNsdWRlVHlwaXN0XCdhNkluY2x1ZGUgVHlwaXN0IElEXCdhNjBcJ2E2NVwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVUeXBpc3RdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2UFwnYTZGYWxzZVwnYTYxXCdhNkZhbA0Kc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249MTE0YzRkZjEtMjNmNS00NTgyLTk3YWUtODAxYjM4YjEyNmQ2XCdhNkluY2x1ZGVBdXRob3JcJ2E2SW5jbHVkZSBBdXRob3IgSURcJ2E2MFwnYTY0XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUF1dGhvcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZBXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YTM3DQpjZTk5My00NjQ2LTRlODgtOTRlZC00YTM2YzdiMjFhNjdcJ2E2SW5jbHVkZUNsaWVudE1hdHRlclwnYTZJbmNsdWRlIENsaWVudCBNYXR0ZXIgTm8uXCdhNjBcJ2E2M1wnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVDbGllbnRNYXR0ZXJdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWM3MzU0ZmRlLTc0N2QtNGMNCjEyLTk5MzEtMDExNWY3OWQyYWNiXCdhNkluY2x1ZGVWZXJzaW9uXCdhNkluY2x1ZGUgVmVyc2lvblwnYTYwXCdhNjJcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVmVyc2lvbl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxcJ2NjXCdjZFJlc2VydmVkPW1wczkyNDI1MzgyMDAwMDAwMDAwMDAwMDAwMTA3ODAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTINCn19DQp7XCpcZG9jdmFyIHttcG80NjcxNjMyMX17SW5jbHVkZURhdGVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWZjYmE0NmVkLTRkNTctNDllNC05MDJkLTExYzQ4ZTI4OWQyY1wnYTZJbmNsdWRlRGF0ZVwnYTZJbmNsdWRlIERhdGVcJ2E2MFwnYTY3XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRGF0ZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRGF0ZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcyXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IE1NL2RkL3l5XCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZVRpbWVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU4ODU4NDQ4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzQ3MzEyMjE4fXtJbmNsdWRlRHJhZnRcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTc3NjZmM2FlLTkwZTAtNDgxMC1iYWQ1LTU0ZDA5MmE1ZmE3ZFwnYTZJbmNsdWRlRHJhZnRcJ2E2SW5jbHVkZSBEcmFmdFwnYTYwXCdhNjZcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVEcmFmdF1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRHJhZnQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MlwnODdbTXlWYWx1ZV0gXj0NCiB0cnVlIF4/IERSQUZUIF46IFtFbXB0eV1cJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlJcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjYzMzkwMDg4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPX19DQp7XCpcZG9jdmFyIHttcG80NzM0MjU5Mn17SW5jbHVkZURyYWZ0XCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj03NzY2ZjNhZS05MGUwLTQ4MTAtYmFkNS01NGQwOTJhNWZhN2RcJ2E2SW5jbHVkZURyYWZ0XCdhNkluY2x1ZGUgRHJhZnRcJ2E2MFwnYTY2XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRHJhZnRdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURyYWZ0Lmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxXCc4NlwnODcwXCc4NzJcJzg3W015VmFsdWVdIF49DQogdHJ1ZSBePyBEUkFGVCBeOiBbRW1wdHldXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZSXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY2MzM5MDA4ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD19fQ0Ke1wqXGRvY3ZhciB7bXBvNDc5MDI0NzF9e0luY2x1ZGVEcmFmdFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Nzc2NmYzYWUtOTBlMC00ODEwLWJhZDUtNTRkMDkyYTVmYTdkXCdhNkluY2x1ZGVEcmFmdFwnYTZJbmNsdWRlIERyYWZ0XCdhNjBcJ2E2NlwnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURyYWZ0XVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVEcmFmdC5odG1sXCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcyXCc4N1tNeVZhbHVlXSBePQ0KIHRydWUgXj8gRFJBRlQgXjogW0VtcHR5XVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2UlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NjMzOTAwODgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9fX0NCntcKlxkb2N2YXIge21wbzQ5NTUwMDU2fXtEb2NJRFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Y2EwOGZjNDktN2UyMy00OTE3LTgzMmYtZWFiOTUxNzk4NjRlXCdhNkRvY0lEXCdhNkRvYyBJRFwnYTYwXCdhNjFcJ2E2W0RNU19fSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXINCnNpb25dIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZQ0KQXV0aG9yXSBePSB0cnVlIF4/IFtETVNfX0F1dGhvcklEXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXkFORCBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZcJ2E2XCdhNjdcJ2E2XCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcwXCc4N1tETVNfDQpfSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXJzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWINCmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZQ0KX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MFwnYTYxXCdhNlwnYTZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjgxODg5NDU3MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTENCn19DQp7XCpcZG9jdmFyIHttcG81MDEyMDA2Mn17SW5jbHVkZURyYWZ0XCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj03NzY2ZjNhZS05MGUwLTQ4MTAtYmFkNS01NGQwOTJhNWZhN2RcJ2E2SW5jbHVkZURyYWZ0XCdhNkluY2x1ZGUgRHJhZnRcJ2E2MFwnYTY2XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRHJhZnRdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURyYWZ0Lmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxXCc4NlwnODcwXCc4NzJcJzg3W015VmFsdWVdIF49DQogdHJ1ZSBePyBEUkFGVCBeOiBbRW1wdHldXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZSXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY2MzM5MDA4ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD19fQ0Ke1wqXGRvY3ZhciB7bXBvNTA3MTA0NTh9e0luY2x1ZGVUaW1lXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj03MjU0ZWI0Ny02YWU5LTQwYmMtYmI0Mi01ZGE2ZjQwNzc3NmFcJ2E2SW5jbHVkZVRpbWVcJ2E2SW5jbHVkZSBUaW1lXCdhNjBcJ2E2OFwnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZVRpbWVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZVRpbWUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MFwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBoOm1tYW0vcG1cJzdiW1ZhcmlhYmxlX19JbnNlcnREYXRlQXNGaWVsZF0gXj8gIC9GXCc3ZCAgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZURhdGVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU2Mjg1OTY1MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzUxNjc3MDMwfXtJbmNsdWRlVGltZVwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249NzI1NGViNDctNmFlOS00MGJjLWJiNDItNWRhNmY0MDc3NzZhXCdhNkluY2x1ZGVUaW1lXCdhNkluY2x1ZGUgVGltZVwnYTYwXCdhNjhcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVUaW1lXVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVUaW1lLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxN1wnODYwXCc4NzBcJzg3XCc4N1tNeVZhbHVlXSBePSB0cnUNCmUgXj8gaDptbWFtL3BtXCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVEYXRlXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZUXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1NjI4NTk2NTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG81MTk0NTQzMH17SW5jbHVkZVRpbWVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTcyNTRlYjQ3LTZhZTktNDBiYy1iYjQyLTVkYTZmNDA3Nzc2YVwnYTZJbmNsdWRlVGltZVwnYTZJbmNsdWRlIFRpbWVcJ2E2MFwnYTY4XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlVGltZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlVGltZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcwXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IGg6bW1hbS9wbVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkICBeOiBbRW1wdHldXCdhNjFcJzg2XCc4NjRcJzg2MlwnODZJbnNlcnREYXRlQXNGaWVsZFwnODdbTXlWYWx1ZV0gXk9SIFtWYXJpYWJsZV9JbmNsdWRlRGF0ZV1cJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2VFwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NTYyODU5NjUwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9DQp9fQ0Ke1wqXGRvY3ZhciB7bXBvNTIxODMxMDR9e0luY2x1ZGVEYXRlXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj1mY2JhNDZlZC00ZDU3LTQ5ZTQtOTAyZC0xMWM0OGUyODlkMmNcJ2E2SW5jbHVkZURhdGVcJ2E2SW5jbHVkZSBEYXRlXCdhNjBcJ2E2N1wnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURhdGVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURhdGUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MlwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBNTS9kZC95eVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVUaW1lXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZEXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1ODg1ODQ0ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG81MjQ5MjExMn17SW5jbHVkZURyYWZ0XCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj03NzY2ZjNhZS05MGUwLTQ4MTAtYmFkNS01NGQwOTJhNWZhN2RcJ2E2SW5jbHVkZURyYWZ0XCdhNkluY2x1ZGUgRHJhZnRcJ2E2MFwnYTY2XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRHJhZnRdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURyYWZ0Lmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxXCc4NlwnODcwXCc4NzJcJzg3W015VmFsdWVdIF49DQogdHJ1ZSBePyBEUkFGVCBeOiBbRW1wdHldXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZSXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY2MzM5MDA4ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD19fQ0Ke1wqXGRvY3ZhciB7bXBvNTM3MjYyMjB9e0luY2x1ZGVEYXRlXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj1mY2JhNDZlZC00ZDU3LTQ5ZTQtOTAyZC0xMWM0OGUyODlkMmNcJ2E2SW5jbHVkZURhdGVcJ2E2SW5jbHVkZSBEYXRlXCdhNjBcJ2E2N1wnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURhdGVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURhdGUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MlwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBNTS9kZC95eVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVUaW1lXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZEXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1ODg1ODQ0ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG81MzkzNDE0NX17RG9jSURcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWNhMDhmYzQ5LTdlMjMtNDkxNy04MzJmLWVhYjk1MTc5ODY0ZVwnYTZEb2NJRFwnYTZEb2MgSURcJ2E2MFwnYTYxXCdhNltETVNfX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyDQpzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGUNCkF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2XCdhNlwnYTY3XCdhNlwnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MFwnODdbRE1TXw0KX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyc2lvbl0gXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF5PUiBbVmFyaWFiDQpsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXj8gW0RNU19fQXV0aG9ySURdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBeQU5EIFwnN2JbVmFyaWFibGUNCl9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjBcJ2E2MVwnYTZcJ2E2XCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY4MTg4OTQ1NzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0xDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvNTM5ODgwODF9e0luY2x1ZGVUaW1lXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj03MjU0ZWI0Ny02YWU5LTQwYmMtYmI0Mi01ZGE2ZjQwNzc3NmFcJ2E2SW5jbHVkZVRpbWVcJ2E2SW5jbHVkZSBUaW1lXCdhNjBcJ2E2OFwnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZVRpbWVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZVRpbWUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MFwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBoOm1tYW0vcG1cJzdiW1ZhcmlhYmxlX19JbnNlcnREYXRlQXNGaWVsZF0gXj8gIC9GXCc3ZCAgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZURhdGVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU2Mjg1OTY1MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzU0MTIzODQzfXtJbmNsdWRlRGF0ZVwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249ZmNiYTQ2ZWQtNGQ1Ny00OWU0LTkwMmQtMTFjNDhlMjg5ZDJjXCdhNkluY2x1ZGVEYXRlXCdhNkluY2x1ZGUgRGF0ZVwnYTYwXCdhNjdcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVEYXRlXVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVEYXRlLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxN1wnODYwXCc4NzJcJzg3XCc4N1tNeVZhbHVlXSBePSB0cnUNCmUgXj8gTU0vZGQveXlcJzdiW1ZhcmlhYmxlX19JbnNlcnREYXRlQXNGaWVsZF0gXj8gIC9GXCc3ZCBeOiBbRW1wdHldXCdhNjFcJzg2XCc4NjRcJzg2MlwnODZJbnNlcnREYXRlQXNGaWVsZFwnODdbTXlWYWx1ZV0gXk9SIFtWYXJpYWJsZV9JbmNsdWRlVGltZV1cJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2RFwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NTg4NTg0NDgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9DQp9fQ0Ke1wqXGRvY3ZhciB7bXBvNTQ3NDE5OTd9e0luY2x1ZGVUaW1lXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj03MjU0ZWI0Ny02YWU5LTQwYmMtYmI0Mi01ZGE2ZjQwNzc3NmFcJ2E2SW5jbHVkZVRpbWVcJ2E2SW5jbHVkZSBUaW1lXCdhNjBcJ2E2OFwnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZVRpbWVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZVRpbWUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MFwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBoOm1tYW0vcG1cJzdiW1ZhcmlhYmxlX19JbnNlcnREYXRlQXNGaWVsZF0gXj8gIC9GXCc3ZCAgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZURhdGVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU2Mjg1OTY1MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzU0ODUxNjA5fXtJbmNsdWRlVGltZVwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249NzI1NGViNDctNmFlOS00MGJjLWJiNDItNWRhNmY0MDc3NzZhXCdhNkluY2x1ZGVUaW1lXCdhNkluY2x1ZGUgVGltZVwnYTYwXCdhNjhcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVUaW1lXVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVUaW1lLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxN1wnODYwXCc4NzBcJzg3XCc4N1tNeVZhbHVlXSBePSB0cnUNCmUgXj8gaDptbWFtL3BtXCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVEYXRlXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZUXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1NjI4NTk2NTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG81NDk4Mjk5MH17Rm9vdGVyKEJvdHRvbUxlZnQpXzFcJ2NjXCdjZFBhcnROdW1iZXI9M1wnY2NcJ2NkT2JqZWN0RGF0YT1TZWdtZW50SUQ9MTA3OHxPYmplY3RUeXBlSUQ9NDAxfE5hbWU9Rm9vdGVyKEJvdHRvbUxlZnQpfERpc3BsYXlOYW1lPUZvb3RlciAoTGVmdCBBbGlnbmVkKXxJbnRlbmRlZFVzZT0yfEF1dGhvck5vZGVVSUxhYmVsPXxNYXhBdXRob3JzPTB8SGVscFRleHQ9ZmlsZTovLy9UcmFpbGVyX1RyYWlsZXIuaHRtbHxNZW51SW5zZXJ0aW9uT3B0aW9ucz0yNTZ8RGVmYXVsdE1lDQpudUluc2VydGlvbkJlaGF2aW9yPTB8RGVmYXVsdERyYWdMb2NhdGlvbj0xfERlZmF1bHREcmFnQmVoYXZpb3I9MHxEZWZhdWx0RG91YmxlQ2xpY2tMb2NhdGlvbj00fERlZmF1bHREb3VibGVDbGlja0JlaGF2aW9yPTB8TDA9MHxMMT0wfEwyPTB8TDM9MHxMND0wfEF1dGhvckNvbnRyb2xQcm9wZXJ0aWVzPXxTaG93Q2hvb3Nlcj10cnVlfExpbmtBdXRob3JzVG9QYXJlbnREZWY9fFRyYW5zbGF0aW9uSUQ9MHxSZXF1aXJlZFN0eWxlcz1NYWNQYWMgVHINCmFpbGVyfFZhcmlhYmxlRGVmaW5pdGlvbj00MzQwNzRjZS1hM2RiLTQ5YzctOTdkNi1hYTcxOTY2NjE3MTFcJ2E2SW5zZXJ0RGF0ZUFzRmllbGRcJ2E2SW5zZXJ0IERhdGUvVGltZSBhcyBGaWVsZCBDb2RlXCdhNjBcJ2E2OVwnYTZbVHlwZVByZWZlcmVuY2VfSW5zZXJ0RGF0ZUFzRmllbGRdXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5zZXJ0RGF0ZUFzRmllbGQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkluY2x1ZGVEYXRlLEluY2x1ZGVUaQ0KbWVcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxWYXJpYWJsZURlZmluaXRpb249OGVhZTUyYzAtYWZkYi00MTEyLTk2ZjYtYjhhZTZhY2JkYmJiXCdhNkluY2x1ZGVUeXBpc3RcJ2E2SW5jbHVkZSBUeXBpc3QgSURcJ2E2MFwnYTY1XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZVR5cGlzdF1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZQXCdhNkZhbHNlXCdhNjFcJ2E2RmFsDQpzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj0xMTRjNGRmMS0yM2Y1LTQ1ODItOTdhZS04MDFiMzhiMTI2ZDZcJ2E2SW5jbHVkZUF1dGhvclwnYTZJbmNsdWRlIEF1dGhvciBJRFwnYTYwXCdhNjRcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlQXV0aG9yXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNkFcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj1hMzcNCmNlOTkzLTQ2NDYtNGU4OC05NGVkLTRhMzZjN2IyMWE2N1wnYTZJbmNsdWRlQ2xpZW50TWF0dGVyXCdhNkluY2x1ZGUgQ2xpZW50IE1hdHRlciBOby5cJ2E2MFwnYTYzXCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUNsaWVudE1hdHRlcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YzczNTRmZGUtNzQ3ZC00Yw0KMTItOTkzMS0wMTE1Zjc5ZDJhY2JcJ2E2SW5jbHVkZVZlcnNpb25cJ2E2SW5jbHVkZSBWZXJzaW9uXCdhNjBcJ2E2MlwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVWZXJzaW9uXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNk1cJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXBzOTI0MjUzODIwMDAwMDAwMDAwMDAwMDAxMDc4MDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9Mg0KfX0NCntcKlxkb2N2YXIge21wbzU1MDE3MzU4fXtJbmNsdWRlRHJhZnRcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTc3NjZmM2FlLTkwZTAtNDgxMC1iYWQ1LTU0ZDA5MmE1ZmE3ZFwnYTZJbmNsdWRlRHJhZnRcJ2E2SW5jbHVkZSBEcmFmdFwnYTYwXCdhNjZcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVEcmFmdF1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRHJhZnQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MlwnODdbTXlWYWx1ZV0gXj0NCiB0cnVlIF4/IERSQUZUIF46IFtFbXB0eV1cJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlJcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjYzMzkwMDg4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPX19DQp7XCpcZG9jdmFyIHttcG81NTI4NTk0M317RG9jSURcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWNhMDhmYzQ5LTdlMjMtNDkxNy04MzJmLWVhYjk1MTc5ODY0ZVwnYTZEb2NJRFwnYTZEb2MgSURcJ2E2MFwnYTYxXCdhNltETVNfX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyDQpzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGUNCkF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2XCdhNlwnYTY3XCdhNlwnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MFwnODdbRE1TXw0KX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyc2lvbl0gXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF5PUiBbVmFyaWFiDQpsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXj8gW0RNU19fQXV0aG9ySURdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBeQU5EIFwnN2JbVmFyaWFibGUNCl9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjBcJ2E2MVwnYTZcJ2E2XCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY4MTg4OTQ1NzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0xDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvNTYxNDQ5MDV9e0RvY0lEXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj1jYTA4ZmM0OS03ZTIzLTQ5MTctODMyZi1lYWI5NTE3OTg2NGVcJ2E2RG9jSURcJ2E2RG9jIElEXCdhNjBcJ2E2MVwnYTZbRE1TX19Jc1Byb2ZpbGVkXSBePyBcJzdiW0NIT09TRV9fW0RNU19fTGlicmFyeV1fX1VTW0NIQVJfXzk1XUJMWF9fQkxYX19VU0FfX09IU1VTQV9fVE9LWU9fX09IU1RPS1lPX19BU0lBX19PSFNBU0lBX19FVVJPUEVfX09IU0VVUk9QRV9fQkxYXTpbRE1TX19Eb2NOdW1iZXJdLltETVNfX1Zlcg0Kc2lvbl0gXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0NoYXJfXzExXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXj8gW0RNU19fQ2xpZW50SURdLVtETVNfX01hdHRlcklEXSAgXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlDQpBdXRob3JdIF49IHRydWUgXj8gW0RNU19fQXV0aG9ySURdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBeQU5EIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWVcJzdkIF4/IC8gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtETVNfX1R5cGlzdElEXSBeOiBbRW1wdHldXCc3ZFwnN2QgXjogW0RvY3VtZW50X19GdWxsTmFtZV1cJ2E2XCdhNlwnYTZcJ2E2N1wnYTZcJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYxXCc4NlwnODcwXCc4NzBcJzg3W0RNU18NCl9Jc1Byb2ZpbGVkXSBePyBcJzdiW0NIT09TRV9fW0RNU19fTGlicmFyeV1fX1VTW0NIQVJfXzk1XUJMWF9fQkxYX19VU0FfX09IU1VTQV9fVE9LWU9fX09IU1RPS1lPX19BU0lBX19PSFNBU0lBX19FVVJPUEVfX09IU0VVUk9QRV9fQkxYXTpbRE1TX19Eb2NOdW1iZXJdLltETVNfX1ZlcnNpb25dIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYg0KbGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0NoYXJfXzExXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXj8gW0RNU19fQ2xpZW50SURdLVtETVNfX01hdHRlcklEXSAgXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF4/IFtETVNfX0F1dGhvcklEXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXkFORCBcJzdiW1ZhcmlhYmxlDQpfX0luY2x1ZGVBdXRob3JdIF49IHRydWVcJzdkIF4/IC8gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtETVNfX1R5cGlzdElEXSBeOiBbRW1wdHldXCc3ZFwnN2QgXjogW0RvY3VtZW50X19GdWxsTmFtZV1cJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYwXCdhNjFcJ2E2XCdhNlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2ODE4ODk0NTcwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9MQ0KfX0NCntcKlxkb2N2YXIge21wbzU3MzI5OTI5fXtEb2NJRFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Y2EwOGZjNDktN2UyMy00OTE3LTgzMmYtZWFiOTUxNzk4NjRlXCdhNkRvY0lEXCdhNkRvYyBJRFwnYTYwXCdhNjFcJ2E2W0RNU19fSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXINCnNpb25dIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZQ0KQXV0aG9yXSBePSB0cnVlIF4/IFtETVNfX0F1dGhvcklEXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXkFORCBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZcJ2E2XCdhNjdcJ2E2XCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcwXCc4N1tETVNfDQpfSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXJzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWINCmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZQ0KX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MFwnYTYxXCdhNlwnYTZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjgxODg5NDU3MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTENCn19DQp7XCpcZG9jdmFyIHttcG81OTY1MTE4NH17SW5jbHVkZURhdGVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWZjYmE0NmVkLTRkNTctNDllNC05MDJkLTExYzQ4ZTI4OWQyY1wnYTZJbmNsdWRlRGF0ZVwnYTZJbmNsdWRlIERhdGVcJ2E2MFwnYTY3XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRGF0ZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRGF0ZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcyXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IE1NL2RkL3l5XCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZVRpbWVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU4ODU4NDQ4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzU5ODM2OTc4fXtJbmNsdWRlVGltZVwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249NzI1NGViNDctNmFlOS00MGJjLWJiNDItNWRhNmY0MDc3NzZhXCdhNkluY2x1ZGVUaW1lXCdhNkluY2x1ZGUgVGltZVwnYTYwXCdhNjhcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVUaW1lXVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVUaW1lLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxN1wnODYwXCc4NzBcJzg3XCc4N1tNeVZhbHVlXSBePSB0cnUNCmUgXj8gaDptbWFtL3BtXCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVEYXRlXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZUXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1NjI4NTk2NTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG82MDAyNTA0OH17SW5jbHVkZURhdGVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWZjYmE0NmVkLTRkNTctNDllNC05MDJkLTExYzQ4ZTI4OWQyY1wnYTZJbmNsdWRlRGF0ZVwnYTZJbmNsdWRlIERhdGVcJ2E2MFwnYTY3XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRGF0ZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRGF0ZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcyXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IE1NL2RkL3l5XCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZVRpbWVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU4ODU4NDQ4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzYwMjgyNTk0fXtGb290ZXIoQm90dG9tTGVmdClfMVwnY2NcJ2NkUGFydE51bWJlcj0zXCdjY1wnY2RPYmplY3REYXRhPVNlZ21lbnRJRD0xMDc4fE9iamVjdFR5cGVJRD00MDF8TmFtZT1Gb290ZXIoQm90dG9tTGVmdCl8RGlzcGxheU5hbWU9Rm9vdGVyIChMZWZ0IEFsaWduZWQpfEludGVuZGVkVXNlPTJ8QXV0aG9yTm9kZVVJTGFiZWw9fE1heEF1dGhvcnM9MHxIZWxwVGV4dD1maWxlOi8vL1RyYWlsZXJfVHJhaWxlci5odG1sfE1lbnVJbnNlcnRpb25PcHRpb25zPTI1NnxEZWZhdWx0TWUNCm51SW5zZXJ0aW9uQmVoYXZpb3I9MHxEZWZhdWx0RHJhZ0xvY2F0aW9uPTF8RGVmYXVsdERyYWdCZWhhdmlvcj0wfERlZmF1bHREb3VibGVDbGlja0xvY2F0aW9uPTR8RGVmYXVsdERvdWJsZUNsaWNrQmVoYXZpb3I9MHxMMD0wfEwxPTB8TDI9MHxMMz0wfEw0PTB8QXV0aG9yQ29udHJvbFByb3BlcnRpZXM9fFNob3dDaG9vc2VyPXRydWV8TGlua0F1dGhvcnNUb1BhcmVudERlZj18VHJhbnNsYXRpb25JRD0wfFJlcXVpcmVkU3R5bGVzPU1hY1BhYyBUcg0KYWlsZXJ8VmFyaWFibGVEZWZpbml0aW9uPTQzNDA3NGNlLWEzZGItNDljNy05N2Q2LWFhNzE5NjY2MTcxMVwnYTZJbnNlcnREYXRlQXNGaWVsZFwnYTZJbnNlcnQgRGF0ZS9UaW1lIGFzIEZpZWxkIENvZGVcJ2E2MFwnYTY5XCdhNltUeXBlUHJlZmVyZW5jZV9JbnNlcnREYXRlQXNGaWVsZF1cJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbnNlcnREYXRlQXNGaWVsZC5odG1sXCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2SW5jbHVkZURhdGUsSW5jbHVkZVRpDQptZVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2RlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFZhcmlhYmxlRGVmaW5pdGlvbj04ZWFlNTJjMC1hZmRiLTQxMTItOTZmNi1iOGFlNmFjYmRiYmJcJ2E2SW5jbHVkZVR5cGlzdFwnYTZJbmNsdWRlIFR5cGlzdCBJRFwnYTYwXCdhNjVcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVHlwaXN0XVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNlBcJ2E2RmFsc2VcJ2E2MVwnYTZGYWwNCnNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPTExNGM0ZGYxLTIzZjUtNDU4Mi05N2FlLTgwMWIzOGIxMjZkNlwnYTZJbmNsdWRlQXV0aG9yXCdhNkluY2x1ZGUgQXV0aG9yIElEXCdhNjBcJ2E2NFwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVBdXRob3JdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2QVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWEzNw0KY2U5OTMtNDY0Ni00ZTg4LTk0ZWQtNGEzNmM3YjIxYTY3XCdhNkluY2x1ZGVDbGllbnRNYXR0ZXJcJ2E2SW5jbHVkZSBDbGllbnQgTWF0dGVyIE5vLlwnYTYwXCdhNjNcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlQ2xpZW50TWF0dGVyXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNk1cJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj1jNzM1NGZkZS03NDdkLTRjDQoxMi05OTMxLTAxMTVmNzlkMmFjYlwnYTZJbmNsdWRlVmVyc2lvblwnYTZJbmNsdWRlIFZlcnNpb25cJ2E2MFwnYTYyXCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZVZlcnNpb25dXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8XCdjY1wnY2RSZXNlcnZlZD1tcHM5MjQyNTM4MjAwMDAwMDAwMDAwMDAwMDEwNzgwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0yDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvNjA2MDIwNTF9e0Zvb3RlcihCb3R0b21MZWZ0KV8xXCdjY1wnY2RQYXJ0TnVtYmVyPTNcJ2NjXCdjZE9iamVjdERhdGE9U2VnbWVudElEPTEwNzh8T2JqZWN0VHlwZUlEPTQwMXxOYW1lPUZvb3RlcihCb3R0b21MZWZ0KXxEaXNwbGF5TmFtZT1Gb290ZXIgKExlZnQgQWxpZ25lZCl8SW50ZW5kZWRVc2U9MnxBdXRob3JOb2RlVUlMYWJlbD18TWF4QXV0aG9ycz0wfEhlbHBUZXh0PWZpbGU6Ly8vVHJhaWxlcl9UcmFpbGVyLmh0bWx8TWVudUluc2VydGlvbk9wdGlvbnM9MjU2fERlZmF1bHRNZQ0KbnVJbnNlcnRpb25CZWhhdmlvcj0wfERlZmF1bHREcmFnTG9jYXRpb249MXxEZWZhdWx0RHJhZ0JlaGF2aW9yPTB8RGVmYXVsdERvdWJsZUNsaWNrTG9jYXRpb249NHxEZWZhdWx0RG91YmxlQ2xpY2tCZWhhdmlvcj0wfEwwPTB8TDE9MHxMMj0wfEwzPTB8TDQ9MHxBdXRob3JDb250cm9sUHJvcGVydGllcz18U2hvd0Nob29zZXI9dHJ1ZXxMaW5rQXV0aG9yc1RvUGFyZW50RGVmPXxUcmFuc2xhdGlvbklEPTB8UmVxdWlyZWRTdHlsZXM9TWFjUGFjIFRyDQphaWxlcnxWYXJpYWJsZURlZmluaXRpb249NDM0MDc0Y2UtYTNkYi00OWM3LTk3ZDYtYWE3MTk2NjYxNzExXCdhNkluc2VydERhdGVBc0ZpZWxkXCdhNkluc2VydCBEYXRlL1RpbWUgYXMgRmllbGQgQ29kZVwnYTYwXCdhNjlcJ2E2W1R5cGVQcmVmZXJlbmNlX0luc2VydERhdGVBc0ZpZWxkXVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luc2VydERhdGVBc0ZpZWxkLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZJbmNsdWRlRGF0ZSxJbmNsdWRlVGkNCm1lXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZGXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8VmFyaWFibGVEZWZpbml0aW9uPThlYWU1MmMwLWFmZGItNDExMi05NmY2LWI4YWU2YWNiZGJiYlwnYTZJbmNsdWRlVHlwaXN0XCdhNkluY2x1ZGUgVHlwaXN0IElEXCdhNjBcJ2E2NVwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVUeXBpc3RdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2UFwnYTZGYWxzZVwnYTYxXCdhNkZhbA0Kc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249MTE0YzRkZjEtMjNmNS00NTgyLTk3YWUtODAxYjM4YjEyNmQ2XCdhNkluY2x1ZGVBdXRob3JcJ2E2SW5jbHVkZSBBdXRob3IgSURcJ2E2MFwnYTY0XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUF1dGhvcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZBXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YTM3DQpjZTk5My00NjQ2LTRlODgtOTRlZC00YTM2YzdiMjFhNjdcJ2E2SW5jbHVkZUNsaWVudE1hdHRlclwnYTZJbmNsdWRlIENsaWVudCBNYXR0ZXIgTm8uXCdhNjBcJ2E2M1wnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVDbGllbnRNYXR0ZXJdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWM3MzU0ZmRlLTc0N2QtNGMNCjEyLTk5MzEtMDExNWY3OWQyYWNiXCdhNkluY2x1ZGVWZXJzaW9uXCdhNkluY2x1ZGUgVmVyc2lvblwnYTYwXCdhNjJcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVmVyc2lvbl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxcJ2NjXCdjZFJlc2VydmVkPW1wczkyNDI1MzgyMDAwMDAwMDAwMDAwMDAwMTA3ODAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTINCn19DQp7XCpcZG9jdmFyIHttcG82MDk0NTIxOX17SW5jbHVkZVRpbWVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTcyNTRlYjQ3LTZhZTktNDBiYy1iYjQyLTVkYTZmNDA3Nzc2YVwnYTZJbmNsdWRlVGltZVwnYTZJbmNsdWRlIFRpbWVcJ2E2MFwnYTY4XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlVGltZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlVGltZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcwXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IGg6bW1hbS9wbVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkICBeOiBbRW1wdHldXCdhNjFcJzg2XCc4NjRcJzg2MlwnODZJbnNlcnREYXRlQXNGaWVsZFwnODdbTXlWYWx1ZV0gXk9SIFtWYXJpYWJsZV9JbmNsdWRlRGF0ZV1cJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2VFwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NTYyODU5NjUwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9DQp9fQ0Ke1wqXGRvY3ZhciB7bXBvNjE0NjUwMTN9e0luY2x1ZGVEYXRlXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj1mY2JhNDZlZC00ZDU3LTQ5ZTQtOTAyZC0xMWM0OGUyODlkMmNcJ2E2SW5jbHVkZURhdGVcJ2E2SW5jbHVkZSBEYXRlXCdhNjBcJ2E2N1wnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURhdGVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURhdGUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MlwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBNTS9kZC95eVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVUaW1lXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZEXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1ODg1ODQ0ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG82MTY2NjUwN317SW5jbHVkZVRpbWVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTcyNTRlYjQ3LTZhZTktNDBiYy1iYjQyLTVkYTZmNDA3Nzc2YVwnYTZJbmNsdWRlVGltZVwnYTZJbmNsdWRlIFRpbWVcJ2E2MFwnYTY4XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlVGltZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlVGltZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcwXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IGg6bW1hbS9wbVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkICBeOiBbRW1wdHldXCdhNjFcJzg2XCc4NjRcJzg2MlwnODZJbnNlcnREYXRlQXNGaWVsZFwnODdbTXlWYWx1ZV0gXk9SIFtWYXJpYWJsZV9JbmNsdWRlRGF0ZV1cJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2VFwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NTYyODU5NjUwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9DQp9fQ0Ke1wqXGRvY3ZhciB7bXBvNjE3ODI3OTV9e0Zvb3RlcihCb3R0b21MZWZ0KV8xXCdjY1wnY2RQYXJ0TnVtYmVyPTNcJ2NjXCdjZE9iamVjdERhdGE9U2VnbWVudElEPTEwNzh8T2JqZWN0VHlwZUlEPTQwMXxOYW1lPUZvb3RlcihCb3R0b21MZWZ0KXxEaXNwbGF5TmFtZT1Gb290ZXIgKExlZnQgQWxpZ25lZCl8SW50ZW5kZWRVc2U9MnxBdXRob3JOb2RlVUlMYWJlbD18TWF4QXV0aG9ycz0wfEhlbHBUZXh0PWZpbGU6Ly8vVHJhaWxlcl9UcmFpbGVyLmh0bWx8TWVudUluc2VydGlvbk9wdGlvbnM9MjU2fERlZmF1bHRNZQ0KbnVJbnNlcnRpb25CZWhhdmlvcj0wfERlZmF1bHREcmFnTG9jYXRpb249MXxEZWZhdWx0RHJhZ0JlaGF2aW9yPTB8RGVmYXVsdERvdWJsZUNsaWNrTG9jYXRpb249NHxEZWZhdWx0RG91YmxlQ2xpY2tCZWhhdmlvcj0wfEwwPTB8TDE9MHxMMj0wfEwzPTB8TDQ9MHxBdXRob3JDb250cm9sUHJvcGVydGllcz18U2hvd0Nob29zZXI9dHJ1ZXxMaW5rQXV0aG9yc1RvUGFyZW50RGVmPXxUcmFuc2xhdGlvbklEPTB8UmVxdWlyZWRTdHlsZXM9TWFjUGFjIFRyDQphaWxlcnxWYXJpYWJsZURlZmluaXRpb249NDM0MDc0Y2UtYTNkYi00OWM3LTk3ZDYtYWE3MTk2NjYxNzExXCdhNkluc2VydERhdGVBc0ZpZWxkXCdhNkluc2VydCBEYXRlL1RpbWUgYXMgRmllbGQgQ29kZVwnYTYwXCdhNjlcJ2E2W1R5cGVQcmVmZXJlbmNlX0luc2VydERhdGVBc0ZpZWxkXVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luc2VydERhdGVBc0ZpZWxkLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZJbmNsdWRlRGF0ZSxJbmNsdWRlVGkNCm1lXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZGXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8VmFyaWFibGVEZWZpbml0aW9uPThlYWU1MmMwLWFmZGItNDExMi05NmY2LWI4YWU2YWNiZGJiYlwnYTZJbmNsdWRlVHlwaXN0XCdhNkluY2x1ZGUgVHlwaXN0IElEXCdhNjBcJ2E2NVwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVUeXBpc3RdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2UFwnYTZGYWxzZVwnYTYxXCdhNkZhbA0Kc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249MTE0YzRkZjEtMjNmNS00NTgyLTk3YWUtODAxYjM4YjEyNmQ2XCdhNkluY2x1ZGVBdXRob3JcJ2E2SW5jbHVkZSBBdXRob3IgSURcJ2E2MFwnYTY0XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUF1dGhvcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZBXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YTM3DQpjZTk5My00NjQ2LTRlODgtOTRlZC00YTM2YzdiMjFhNjdcJ2E2SW5jbHVkZUNsaWVudE1hdHRlclwnYTZJbmNsdWRlIENsaWVudCBNYXR0ZXIgTm8uXCdhNjBcJ2E2M1wnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVDbGllbnRNYXR0ZXJdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWM3MzU0ZmRlLTc0N2QtNGMNCjEyLTk5MzEtMDExNWY3OWQyYWNiXCdhNkluY2x1ZGVWZXJzaW9uXCdhNkluY2x1ZGUgVmVyc2lvblwnYTYwXCdhNjJcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVmVyc2lvbl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxcJ2NjXCdjZFJlc2VydmVkPW1wczkyNDI1MzgyMDAwMDAwMDAwMDAwMDAwMTA3ODAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTINCn19DQp7XCpcZG9jdmFyIHttcG82MTkxMTkzNX17SW5jbHVkZVRpbWVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTcyNTRlYjQ3LTZhZTktNDBiYy1iYjQyLTVkYTZmNDA3Nzc2YVwnYTZJbmNsdWRlVGltZVwnYTZJbmNsdWRlIFRpbWVcJ2E2MFwnYTY4XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlVGltZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlVGltZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcwXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IGg6bW1hbS9wbVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkICBeOiBbRW1wdHldXCdhNjFcJzg2XCc4NjRcJzg2MlwnODZJbnNlcnREYXRlQXNGaWVsZFwnODdbTXlWYWx1ZV0gXk9SIFtWYXJpYWJsZV9JbmNsdWRlRGF0ZV1cJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2VFwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NTYyODU5NjUwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9DQp9fQ0Ke1wqXGRvY3ZhciB7bXBvNjIyOTQ1OTZ9e0luY2x1ZGVEcmFmdFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Nzc2NmYzYWUtOTBlMC00ODEwLWJhZDUtNTRkMDkyYTVmYTdkXCdhNkluY2x1ZGVEcmFmdFwnYTZJbmNsdWRlIERyYWZ0XCdhNjBcJ2E2NlwnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURyYWZ0XVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVEcmFmdC5odG1sXCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcyXCc4N1tNeVZhbHVlXSBePQ0KIHRydWUgXj8gRFJBRlQgXjogW0VtcHR5XVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2UlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NjMzOTAwODgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9fX0NCntcKlxkb2N2YXIge21wbzYzOTgyNDY5fXtJbmNsdWRlVGltZVwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249NzI1NGViNDctNmFlOS00MGJjLWJiNDItNWRhNmY0MDc3NzZhXCdhNkluY2x1ZGVUaW1lXCdhNkluY2x1ZGUgVGltZVwnYTYwXCdhNjhcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVUaW1lXVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVUaW1lLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxN1wnODYwXCc4NzBcJzg3XCc4N1tNeVZhbHVlXSBePSB0cnUNCmUgXj8gaDptbWFtL3BtXCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVEYXRlXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZUXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1NjI4NTk2NTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG82NDA5NjA4N317Rm9vdGVyKEJvdHRvbUxlZnQpXzFcJ2NjXCdjZFBhcnROdW1iZXI9M1wnY2NcJ2NkT2JqZWN0RGF0YT1TZWdtZW50SUQ9MTA3OHxPYmplY3RUeXBlSUQ9NDAxfE5hbWU9Rm9vdGVyKEJvdHRvbUxlZnQpfERpc3BsYXlOYW1lPUZvb3RlciAoTGVmdCBBbGlnbmVkKXxJbnRlbmRlZFVzZT0yfEF1dGhvck5vZGVVSUxhYmVsPXxNYXhBdXRob3JzPTB8SGVscFRleHQ9ZmlsZTovLy9UcmFpbGVyX1RyYWlsZXIuaHRtbHxNZW51SW5zZXJ0aW9uT3B0aW9ucz0yNTZ8RGVmYXVsdE1lDQpudUluc2VydGlvbkJlaGF2aW9yPTB8RGVmYXVsdERyYWdMb2NhdGlvbj0xfERlZmF1bHREcmFnQmVoYXZpb3I9MHxEZWZhdWx0RG91YmxlQ2xpY2tMb2NhdGlvbj00fERlZmF1bHREb3VibGVDbGlja0JlaGF2aW9yPTB8TDA9MHxMMT0wfEwyPTB8TDM9MHxMND0wfEF1dGhvckNvbnRyb2xQcm9wZXJ0aWVzPXxTaG93Q2hvb3Nlcj10cnVlfExpbmtBdXRob3JzVG9QYXJlbnREZWY9fFRyYW5zbGF0aW9uSUQ9MHxSZXF1aXJlZFN0eWxlcz1NYWNQYWMgVHINCmFpbGVyfFZhcmlhYmxlRGVmaW5pdGlvbj00MzQwNzRjZS1hM2RiLTQ5YzctOTdkNi1hYTcxOTY2NjE3MTFcJ2E2SW5zZXJ0RGF0ZUFzRmllbGRcJ2E2SW5zZXJ0IERhdGUvVGltZSBhcyBGaWVsZCBDb2RlXCdhNjBcJ2E2OVwnYTZbVHlwZVByZWZlcmVuY2VfSW5zZXJ0RGF0ZUFzRmllbGRdXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5zZXJ0RGF0ZUFzRmllbGQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkluY2x1ZGVEYXRlLEluY2x1ZGVUaQ0KbWVcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxWYXJpYWJsZURlZmluaXRpb249OGVhZTUyYzAtYWZkYi00MTEyLTk2ZjYtYjhhZTZhY2JkYmJiXCdhNkluY2x1ZGVUeXBpc3RcJ2E2SW5jbHVkZSBUeXBpc3QgSURcJ2E2MFwnYTY1XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZVR5cGlzdF1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZQXCdhNkZhbHNlXCdhNjFcJ2E2RmFsDQpzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj0xMTRjNGRmMS0yM2Y1LTQ1ODItOTdhZS04MDFiMzhiMTI2ZDZcJ2E2SW5jbHVkZUF1dGhvclwnYTZJbmNsdWRlIEF1dGhvciBJRFwnYTYwXCdhNjRcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlQXV0aG9yXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNkFcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj1hMzcNCmNlOTkzLTQ2NDYtNGU4OC05NGVkLTRhMzZjN2IyMWE2N1wnYTZJbmNsdWRlQ2xpZW50TWF0dGVyXCdhNkluY2x1ZGUgQ2xpZW50IE1hdHRlciBOby5cJ2E2MFwnYTYzXCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUNsaWVudE1hdHRlcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YzczNTRmZGUtNzQ3ZC00Yw0KMTItOTkzMS0wMTE1Zjc5ZDJhY2JcJ2E2SW5jbHVkZVZlcnNpb25cJ2E2SW5jbHVkZSBWZXJzaW9uXCdhNjBcJ2E2MlwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVWZXJzaW9uXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNk1cJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXBzOTI0MjUzODIwMDAwMDAwMDAwMDAwMDAxMDc4MDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9Mg0KfX0NCntcKlxkb2N2YXIge21wbzY0ODQ5MTY4fXtJbmNsdWRlVGltZVwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249NzI1NGViNDctNmFlOS00MGJjLWJiNDItNWRhNmY0MDc3NzZhXCdhNkluY2x1ZGVUaW1lXCdhNkluY2x1ZGUgVGltZVwnYTYwXCdhNjhcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVUaW1lXVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVUaW1lLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxN1wnODYwXCc4NzBcJzg3XCc4N1tNeVZhbHVlXSBePSB0cnUNCmUgXj8gaDptbWFtL3BtXCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVEYXRlXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZUXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1NjI4NTk2NTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG82NDk3MDkyOH17SW5jbHVkZURyYWZ0XCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj03NzY2ZjNhZS05MGUwLTQ4MTAtYmFkNS01NGQwOTJhNWZhN2RcJ2E2SW5jbHVkZURyYWZ0XCdhNkluY2x1ZGUgRHJhZnRcJ2E2MFwnYTY2XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRHJhZnRdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURyYWZ0Lmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxXCc4NlwnODcwXCc4NzJcJzg3W015VmFsdWVdIF49DQogdHJ1ZSBePyBEUkFGVCBeOiBbRW1wdHldXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZSXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY2MzM5MDA4ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD19fQ0Ke1wqXGRvY3ZhciB7bXBvNjUwMjM1NTN9e0RvY0lEXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj1jYTA4ZmM0OS03ZTIzLTQ5MTctODMyZi1lYWI5NTE3OTg2NGVcJ2E2RG9jSURcJ2E2RG9jIElEXCdhNjBcJ2E2MVwnYTZbRE1TX19Jc1Byb2ZpbGVkXSBePyBcJzdiW0NIT09TRV9fW0RNU19fTGlicmFyeV1fX1VTW0NIQVJfXzk1XUJMWF9fQkxYX19VU0FfX09IU1VTQV9fVE9LWU9fX09IU1RPS1lPX19BU0lBX19PSFNBU0lBX19FVVJPUEVfX09IU0VVUk9QRV9fQkxYXTpbRE1TX19Eb2NOdW1iZXJdLltETVNfX1Zlcg0Kc2lvbl0gXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0NoYXJfXzExXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXj8gW0RNU19fQ2xpZW50SURdLVtETVNfX01hdHRlcklEXSAgXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlDQpBdXRob3JdIF49IHRydWUgXj8gW0RNU19fQXV0aG9ySURdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBeQU5EIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWVcJzdkIF4/IC8gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtETVNfX1R5cGlzdElEXSBeOiBbRW1wdHldXCc3ZFwnN2QgXjogW0RvY3VtZW50X19GdWxsTmFtZV1cJ2E2XCdhNlwnYTZcJ2E2N1wnYTZcJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYxXCc4NlwnODcwXCc4NzBcJzg3W0RNU18NCl9Jc1Byb2ZpbGVkXSBePyBcJzdiW0NIT09TRV9fW0RNU19fTGlicmFyeV1fX1VTW0NIQVJfXzk1XUJMWF9fQkxYX19VU0FfX09IU1VTQV9fVE9LWU9fX09IU1RPS1lPX19BU0lBX19PSFNBU0lBX19FVVJPUEVfX09IU0VVUk9QRV9fQkxYXTpbRE1TX19Eb2NOdW1iZXJdLltETVNfX1ZlcnNpb25dIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYg0KbGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0NoYXJfXzExXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXj8gW0RNU19fQ2xpZW50SURdLVtETVNfX01hdHRlcklEXSAgXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF4/IFtETVNfX0F1dGhvcklEXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXkFORCBcJzdiW1ZhcmlhYmxlDQpfX0luY2x1ZGVBdXRob3JdIF49IHRydWVcJzdkIF4/IC8gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtETVNfX1R5cGlzdElEXSBeOiBbRW1wdHldXCc3ZFwnN2QgXjogW0RvY3VtZW50X19GdWxsTmFtZV1cJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYwXCdhNjFcJ2E2XCdhNlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2ODE4ODk0NTcwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9MQ0KfX0NCntcKlxkb2N2YXIge21wbzY1MTQ1ODA4fXtJbmNsdWRlRHJhZnRcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTc3NjZmM2FlLTkwZTAtNDgxMC1iYWQ1LTU0ZDA5MmE1ZmE3ZFwnYTZJbmNsdWRlRHJhZnRcJ2E2SW5jbHVkZSBEcmFmdFwnYTYwXCdhNjZcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVEcmFmdF1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRHJhZnQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MlwnODdbTXlWYWx1ZV0gXj0NCiB0cnVlIF4/IERSQUZUIF46IFtFbXB0eV1cJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlJcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjYzMzkwMDg4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPX19DQp7XCpcZG9jdmFyIHttcG82NTU4MzMxOH17SW5jbHVkZURyYWZ0XCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj03NzY2ZjNhZS05MGUwLTQ4MTAtYmFkNS01NGQwOTJhNWZhN2RcJ2E2SW5jbHVkZURyYWZ0XCdhNkluY2x1ZGUgRHJhZnRcJ2E2MFwnYTY2XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRHJhZnRdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURyYWZ0Lmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxXCc4NlwnODcwXCc4NzJcJzg3W015VmFsdWVdIF49DQogdHJ1ZSBePyBEUkFGVCBeOiBbRW1wdHldXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZSXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY2MzM5MDA4ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD19fQ0Ke1wqXGRvY3ZhciB7bXBvNjY0MzUwMDN9e0RvY0lEXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj1jYTA4ZmM0OS03ZTIzLTQ5MTctODMyZi1lYWI5NTE3OTg2NGVcJ2E2RG9jSURcJ2E2RG9jIElEXCdhNjBcJ2E2MVwnYTZbRE1TX19Jc1Byb2ZpbGVkXSBePyBcJzdiW0NIT09TRV9fW0RNU19fTGlicmFyeV1fX1VTW0NIQVJfXzk1XUJMWF9fQkxYX19VU0FfX09IU1VTQV9fVE9LWU9fX09IU1RPS1lPX19BU0lBX19PSFNBU0lBX19FVVJPUEVfX09IU0VVUk9QRV9fQkxYXTpbRE1TX19Eb2NOdW1iZXJdLltETVNfX1Zlcg0Kc2lvbl0gXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0NoYXJfXzExXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXj8gW0RNU19fQ2xpZW50SURdLVtETVNfX01hdHRlcklEXSAgXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlDQpBdXRob3JdIF49IHRydWUgXj8gW0RNU19fQXV0aG9ySURdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBeQU5EIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWVcJzdkIF4/IC8gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtETVNfX1R5cGlzdElEXSBeOiBbRW1wdHldXCc3ZFwnN2QgXjogW0RvY3VtZW50X19GdWxsTmFtZV1cJ2E2XCdhNlwnYTZcJ2E2N1wnYTZcJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYxXCc4NlwnODcwXCc4NzBcJzg3W0RNU18NCl9Jc1Byb2ZpbGVkXSBePyBcJzdiW0NIT09TRV9fW0RNU19fTGlicmFyeV1fX1VTW0NIQVJfXzk1XUJMWF9fQkxYX19VU0FfX09IU1VTQV9fVE9LWU9fX09IU1RPS1lPX19BU0lBX19PSFNBU0lBX19FVVJPUEVfX09IU0VVUk9QRV9fQkxYXTpbRE1TX19Eb2NOdW1iZXJdLltETVNfX1ZlcnNpb25dIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYg0KbGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0NoYXJfXzExXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXj8gW0RNU19fQ2xpZW50SURdLVtETVNfX01hdHRlcklEXSAgXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF4/IFtETVNfX0F1dGhvcklEXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXkFORCBcJzdiW1ZhcmlhYmxlDQpfX0luY2x1ZGVBdXRob3JdIF49IHRydWVcJzdkIF4/IC8gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtETVNfX1R5cGlzdElEXSBeOiBbRW1wdHldXCc3ZFwnN2QgXjogW0RvY3VtZW50X19GdWxsTmFtZV1cJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYwXCdhNjFcJ2E2XCdhNlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2ODE4ODk0NTcwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9MQ0KfX0NCntcKlxkb2N2YXIge21wbzY2NzkzMjIxfXtJbmNsdWRlVGltZVwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249NzI1NGViNDctNmFlOS00MGJjLWJiNDItNWRhNmY0MDc3NzZhXCdhNkluY2x1ZGVUaW1lXCdhNkluY2x1ZGUgVGltZVwnYTYwXCdhNjhcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVUaW1lXVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVUaW1lLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxN1wnODYwXCc4NzBcJzg3XCc4N1tNeVZhbHVlXSBePSB0cnUNCmUgXj8gaDptbWFtL3BtXCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVEYXRlXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZUXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1NjI4NTk2NTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG82Nzk0NTY5NX17SW5jbHVkZURhdGVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWZjYmE0NmVkLTRkNTctNDllNC05MDJkLTExYzQ4ZTI4OWQyY1wnYTZJbmNsdWRlRGF0ZVwnYTZJbmNsdWRlIERhdGVcJ2E2MFwnYTY3XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRGF0ZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRGF0ZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcyXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IE1NL2RkL3l5XCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZVRpbWVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU4ODU4NDQ4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzY4MjQzMjIzfXtGb290ZXIoQm90dG9tTGVmdClfMVwnY2NcJ2NkUGFydE51bWJlcj0zXCdjY1wnY2RPYmplY3REYXRhPVNlZ21lbnRJRD0xMDc4fE9iamVjdFR5cGVJRD00MDF8TmFtZT1Gb290ZXIoQm90dG9tTGVmdCl8RGlzcGxheU5hbWU9Rm9vdGVyIChMZWZ0IEFsaWduZWQpfEludGVuZGVkVXNlPTJ8QXV0aG9yTm9kZVVJTGFiZWw9fE1heEF1dGhvcnM9MHxIZWxwVGV4dD1maWxlOi8vL1RyYWlsZXJfVHJhaWxlci5odG1sfE1lbnVJbnNlcnRpb25PcHRpb25zPTI1NnxEZWZhdWx0TWUNCm51SW5zZXJ0aW9uQmVoYXZpb3I9MHxEZWZhdWx0RHJhZ0xvY2F0aW9uPTF8RGVmYXVsdERyYWdCZWhhdmlvcj0wfERlZmF1bHREb3VibGVDbGlja0xvY2F0aW9uPTR8RGVmYXVsdERvdWJsZUNsaWNrQmVoYXZpb3I9MHxMMD0wfEwxPTB8TDI9MHxMMz0wfEw0PTB8QXV0aG9yQ29udHJvbFByb3BlcnRpZXM9fFNob3dDaG9vc2VyPXRydWV8TGlua0F1dGhvcnNUb1BhcmVudERlZj18VHJhbnNsYXRpb25JRD0wfFJlcXVpcmVkU3R5bGVzPU1hY1BhYyBUcg0KYWlsZXJ8VmFyaWFibGVEZWZpbml0aW9uPTQzNDA3NGNlLWEzZGItNDljNy05N2Q2LWFhNzE5NjY2MTcxMVwnYTZJbnNlcnREYXRlQXNGaWVsZFwnYTZJbnNlcnQgRGF0ZS9UaW1lIGFzIEZpZWxkIENvZGVcJ2E2MFwnYTY5XCdhNltUeXBlUHJlZmVyZW5jZV9JbnNlcnREYXRlQXNGaWVsZF1cJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbnNlcnREYXRlQXNGaWVsZC5odG1sXCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2SW5jbHVkZURhdGUsSW5jbHVkZVRpDQptZVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2RlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFZhcmlhYmxlRGVmaW5pdGlvbj04ZWFlNTJjMC1hZmRiLTQxMTItOTZmNi1iOGFlNmFjYmRiYmJcJ2E2SW5jbHVkZVR5cGlzdFwnYTZJbmNsdWRlIFR5cGlzdCBJRFwnYTYwXCdhNjVcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVHlwaXN0XVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNlBcJ2E2RmFsc2VcJ2E2MVwnYTZGYWwNCnNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPTExNGM0ZGYxLTIzZjUtNDU4Mi05N2FlLTgwMWIzOGIxMjZkNlwnYTZJbmNsdWRlQXV0aG9yXCdhNkluY2x1ZGUgQXV0aG9yIElEXCdhNjBcJ2E2NFwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVBdXRob3JdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2QVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWEzNw0KY2U5OTMtNDY0Ni00ZTg4LTk0ZWQtNGEzNmM3YjIxYTY3XCdhNkluY2x1ZGVDbGllbnRNYXR0ZXJcJ2E2SW5jbHVkZSBDbGllbnQgTWF0dGVyIE5vLlwnYTYwXCdhNjNcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlQ2xpZW50TWF0dGVyXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNk1cJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj1jNzM1NGZkZS03NDdkLTRjDQoxMi05OTMxLTAxMTVmNzlkMmFjYlwnYTZJbmNsdWRlVmVyc2lvblwnYTZJbmNsdWRlIFZlcnNpb25cJ2E2MFwnYTYyXCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZVZlcnNpb25dXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8XCdjY1wnY2RSZXNlcnZlZD1tcHM5MjQyNTM4MjAwMDAwMDAwMDAwMDAwMDEwNzgwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0yDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvNjgyNjU4Njd9e0luY2x1ZGVEYXRlXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj1mY2JhNDZlZC00ZDU3LTQ5ZTQtOTAyZC0xMWM0OGUyODlkMmNcJ2E2SW5jbHVkZURhdGVcJ2E2SW5jbHVkZSBEYXRlXCdhNjBcJ2E2N1wnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURhdGVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURhdGUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MlwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBNTS9kZC95eVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVUaW1lXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZEXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1ODg1ODQ0ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG82ODg2ODcyMX17RG9jSURcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWNhMDhmYzQ5LTdlMjMtNDkxNy04MzJmLWVhYjk1MTc5ODY0ZVwnYTZEb2NJRFwnYTZEb2MgSURcJ2E2MFwnYTYxXCdhNltETVNfX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyDQpzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGUNCkF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2XCdhNlwnYTY3XCdhNlwnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MFwnODdbRE1TXw0KX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyc2lvbl0gXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF5PUiBbVmFyaWFiDQpsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXj8gW0RNU19fQXV0aG9ySURdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBeQU5EIFwnN2JbVmFyaWFibGUNCl9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjBcJ2E2MVwnYTZcJ2E2XCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY4MTg4OTQ1NzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0xDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvNjk0NTEzMzh9e0luY2x1ZGVUaW1lXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj03MjU0ZWI0Ny02YWU5LTQwYmMtYmI0Mi01ZGE2ZjQwNzc3NmFcJ2E2SW5jbHVkZVRpbWVcJ2E2SW5jbHVkZSBUaW1lXCdhNjBcJ2E2OFwnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZVRpbWVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZVRpbWUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MFwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBoOm1tYW0vcG1cJzdiW1ZhcmlhYmxlX19JbnNlcnREYXRlQXNGaWVsZF0gXj8gIC9GXCc3ZCAgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZURhdGVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU2Mjg1OTY1MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzY5ODA5OTU1fXtGb290ZXIoQm90dG9tTGVmdClfMVwnY2NcJ2NkUGFydE51bWJlcj0zXCdjY1wnY2RPYmplY3REYXRhPVNlZ21lbnRJRD0xMDc4fE9iamVjdFR5cGVJRD00MDF8TmFtZT1Gb290ZXIoQm90dG9tTGVmdCl8RGlzcGxheU5hbWU9Rm9vdGVyIChMZWZ0IEFsaWduZWQpfEludGVuZGVkVXNlPTJ8QXV0aG9yTm9kZVVJTGFiZWw9fE1heEF1dGhvcnM9MHxIZWxwVGV4dD1maWxlOi8vL1RyYWlsZXJfVHJhaWxlci5odG1sfE1lbnVJbnNlcnRpb25PcHRpb25zPTI1NnxEZWZhdWx0TWUNCm51SW5zZXJ0aW9uQmVoYXZpb3I9MHxEZWZhdWx0RHJhZ0xvY2F0aW9uPTF8RGVmYXVsdERyYWdCZWhhdmlvcj0wfERlZmF1bHREb3VibGVDbGlja0xvY2F0aW9uPTR8RGVmYXVsdERvdWJsZUNsaWNrQmVoYXZpb3I9MHxMMD0wfEwxPTB8TDI9MHxMMz0wfEw0PTB8QXV0aG9yQ29udHJvbFByb3BlcnRpZXM9fFNob3dDaG9vc2VyPXRydWV8TGlua0F1dGhvcnNUb1BhcmVudERlZj18VHJhbnNsYXRpb25JRD0wfFJlcXVpcmVkU3R5bGVzPU1hY1BhYyBUcg0KYWlsZXJ8VmFyaWFibGVEZWZpbml0aW9uPTQzNDA3NGNlLWEzZGItNDljNy05N2Q2LWFhNzE5NjY2MTcxMVwnYTZJbnNlcnREYXRlQXNGaWVsZFwnYTZJbnNlcnQgRGF0ZS9UaW1lIGFzIEZpZWxkIENvZGVcJ2E2MFwnYTY5XCdhNltUeXBlUHJlZmVyZW5jZV9JbnNlcnREYXRlQXNGaWVsZF1cJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbnNlcnREYXRlQXNGaWVsZC5odG1sXCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2SW5jbHVkZURhdGUsSW5jbHVkZVRpDQptZVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2RlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFZhcmlhYmxlRGVmaW5pdGlvbj04ZWFlNTJjMC1hZmRiLTQxMTItOTZmNi1iOGFlNmFjYmRiYmJcJ2E2SW5jbHVkZVR5cGlzdFwnYTZJbmNsdWRlIFR5cGlzdCBJRFwnYTYwXCdhNjVcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVHlwaXN0XVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNlBcJ2E2RmFsc2VcJ2E2MVwnYTZGYWwNCnNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPTExNGM0ZGYxLTIzZjUtNDU4Mi05N2FlLTgwMWIzOGIxMjZkNlwnYTZJbmNsdWRlQXV0aG9yXCdhNkluY2x1ZGUgQXV0aG9yIElEXCdhNjBcJ2E2NFwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVBdXRob3JdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2QVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWEzNw0KY2U5OTMtNDY0Ni00ZTg4LTk0ZWQtNGEzNmM3YjIxYTY3XCdhNkluY2x1ZGVDbGllbnRNYXR0ZXJcJ2E2SW5jbHVkZSBDbGllbnQgTWF0dGVyIE5vLlwnYTYwXCdhNjNcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlQ2xpZW50TWF0dGVyXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNk1cJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj1jNzM1NGZkZS03NDdkLTRjDQoxMi05OTMxLTAxMTVmNzlkMmFjYlwnYTZJbmNsdWRlVmVyc2lvblwnYTZJbmNsdWRlIFZlcnNpb25cJ2E2MFwnYTYyXCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZVZlcnNpb25dXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8XCdjY1wnY2RSZXNlcnZlZD1tcHM5MjQyNTM4MjAwMDAwMDAwMDAwMDAwMDEwNzgwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0yDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvNjk5MTkxNzV9e0luY2x1ZGVEcmFmdFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Nzc2NmYzYWUtOTBlMC00ODEwLWJhZDUtNTRkMDkyYTVmYTdkXCdhNkluY2x1ZGVEcmFmdFwnYTZJbmNsdWRlIERyYWZ0XCdhNjBcJ2E2NlwnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURyYWZ0XVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVEcmFmdC5odG1sXCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcyXCc4N1tNeVZhbHVlXSBePQ0KIHRydWUgXj8gRFJBRlQgXjogW0VtcHR5XVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2UlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NjMzOTAwODgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9fX0NCntcKlxkb2N2YXIge21wbzcwMDYxMjAxfXtGb290ZXIoQm90dG9tTGVmdClfMVwnY2NcJ2NkUGFydE51bWJlcj0zXCdjY1wnY2RPYmplY3REYXRhPVNlZ21lbnRJRD0xMDc4fE9iamVjdFR5cGVJRD00MDF8TmFtZT1Gb290ZXIoQm90dG9tTGVmdCl8RGlzcGxheU5hbWU9Rm9vdGVyIChMZWZ0IEFsaWduZWQpfEludGVuZGVkVXNlPTJ8QXV0aG9yTm9kZVVJTGFiZWw9fE1heEF1dGhvcnM9MHxIZWxwVGV4dD1maWxlOi8vL1RyYWlsZXJfVHJhaWxlci5odG1sfE1lbnVJbnNlcnRpb25PcHRpb25zPTI1NnxEZWZhdWx0TWUNCm51SW5zZXJ0aW9uQmVoYXZpb3I9MHxEZWZhdWx0RHJhZ0xvY2F0aW9uPTF8RGVmYXVsdERyYWdCZWhhdmlvcj0wfERlZmF1bHREb3VibGVDbGlja0xvY2F0aW9uPTR8RGVmYXVsdERvdWJsZUNsaWNrQmVoYXZpb3I9MHxMMD0wfEwxPTB8TDI9MHxMMz0wfEw0PTB8QXV0aG9yQ29udHJvbFByb3BlcnRpZXM9fFNob3dDaG9vc2VyPXRydWV8TGlua0F1dGhvcnNUb1BhcmVudERlZj18VHJhbnNsYXRpb25JRD0wfFJlcXVpcmVkU3R5bGVzPU1hY1BhYyBUcg0KYWlsZXJ8VmFyaWFibGVEZWZpbml0aW9uPTQzNDA3NGNlLWEzZGItNDljNy05N2Q2LWFhNzE5NjY2MTcxMVwnYTZJbnNlcnREYXRlQXNGaWVsZFwnYTZJbnNlcnQgRGF0ZS9UaW1lIGFzIEZpZWxkIENvZGVcJ2E2MFwnYTY5XCdhNltUeXBlUHJlZmVyZW5jZV9JbnNlcnREYXRlQXNGaWVsZF1cJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbnNlcnREYXRlQXNGaWVsZC5odG1sXCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2SW5jbHVkZURhdGUsSW5jbHVkZVRpDQptZVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2RlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFZhcmlhYmxlRGVmaW5pdGlvbj04ZWFlNTJjMC1hZmRiLTQxMTItOTZmNi1iOGFlNmFjYmRiYmJcJ2E2SW5jbHVkZVR5cGlzdFwnYTZJbmNsdWRlIFR5cGlzdCBJRFwnYTYwXCdhNjVcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVHlwaXN0XVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNlBcJ2E2RmFsc2VcJ2E2MVwnYTZGYWwNCnNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPTExNGM0ZGYxLTIzZjUtNDU4Mi05N2FlLTgwMWIzOGIxMjZkNlwnYTZJbmNsdWRlQXV0aG9yXCdhNkluY2x1ZGUgQXV0aG9yIElEXCdhNjBcJ2E2NFwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVBdXRob3JdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2QVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWEzNw0KY2U5OTMtNDY0Ni00ZTg4LTk0ZWQtNGEzNmM3YjIxYTY3XCdhNkluY2x1ZGVDbGllbnRNYXR0ZXJcJ2E2SW5jbHVkZSBDbGllbnQgTWF0dGVyIE5vLlwnYTYwXCdhNjNcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlQ2xpZW50TWF0dGVyXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNk1cJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj1jNzM1NGZkZS03NDdkLTRjDQoxMi05OTMxLTAxMTVmNzlkMmFjYlwnYTZJbmNsdWRlVmVyc2lvblwnYTZJbmNsdWRlIFZlcnNpb25cJ2E2MFwnYTYyXCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZVZlcnNpb25dXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8XCdjY1wnY2RSZXNlcnZlZD1tcHM5MjQyNTM4MjAwMDAwMDAwMDAwMDAwMDEwNzgwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0yDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvNzE4MTgxMDd9e0luY2x1ZGVUaW1lXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj03MjU0ZWI0Ny02YWU5LTQwYmMtYmI0Mi01ZGE2ZjQwNzc3NmFcJ2E2SW5jbHVkZVRpbWVcJ2E2SW5jbHVkZSBUaW1lXCdhNjBcJ2E2OFwnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZVRpbWVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZVRpbWUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MFwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBoOm1tYW0vcG1cJzdiW1ZhcmlhYmxlX19JbnNlcnREYXRlQXNGaWVsZF0gXj8gIC9GXCc3ZCAgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZURhdGVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU2Mjg1OTY1MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzczMzA0NzcyfXtJbmNsdWRlRGF0ZVwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249ZmNiYTQ2ZWQtNGQ1Ny00OWU0LTkwMmQtMTFjNDhlMjg5ZDJjXCdhNkluY2x1ZGVEYXRlXCdhNkluY2x1ZGUgRGF0ZVwnYTYwXCdhNjdcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVEYXRlXVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVEYXRlLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxN1wnODYwXCc4NzJcJzg3XCc4N1tNeVZhbHVlXSBePSB0cnUNCmUgXj8gTU0vZGQveXlcJzdiW1ZhcmlhYmxlX19JbnNlcnREYXRlQXNGaWVsZF0gXj8gIC9GXCc3ZCBeOiBbRW1wdHldXCdhNjFcJzg2XCc4NjRcJzg2MlwnODZJbnNlcnREYXRlQXNGaWVsZFwnODdbTXlWYWx1ZV0gXk9SIFtWYXJpYWJsZV9JbmNsdWRlVGltZV1cJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2RFwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NTg4NTg0NDgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9DQp9fQ0Ke1wqXGRvY3ZhciB7bXBvNzM5MjkyMjB9e0luY2x1ZGVEcmFmdFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Nzc2NmYzYWUtOTBlMC00ODEwLWJhZDUtNTRkMDkyYTVmYTdkXCdhNkluY2x1ZGVEcmFmdFwnYTZJbmNsdWRlIERyYWZ0XCdhNjBcJ2E2NlwnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURyYWZ0XVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVEcmFmdC5odG1sXCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcyXCc4N1tNeVZhbHVlXSBePQ0KIHRydWUgXj8gRFJBRlQgXjogW0VtcHR5XVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2UlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NjMzOTAwODgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9fX0NCntcKlxkb2N2YXIge21wbzc0NTAyODYxfXtEb2NJRFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Y2EwOGZjNDktN2UyMy00OTE3LTgzMmYtZWFiOTUxNzk4NjRlXCdhNkRvY0lEXCdhNkRvYyBJRFwnYTYwXCdhNjFcJ2E2W0RNU19fSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXINCnNpb25dIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZQ0KQXV0aG9yXSBePSB0cnVlIF4/IFtETVNfX0F1dGhvcklEXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXkFORCBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZcJ2E2XCdhNjdcJ2E2XCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcwXCc4N1tETVNfDQpfSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXJzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWINCmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZQ0KX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MFwnYTYxXCdhNlwnYTZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjgxODg5NDU3MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTENCn19DQp7XCpcZG9jdmFyIHttcG83NTQ1NDQ2Mn17RG9jSURcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWNhMDhmYzQ5LTdlMjMtNDkxNy04MzJmLWVhYjk1MTc5ODY0ZVwnYTZEb2NJRFwnYTZEb2MgSURcJ2E2MFwnYTYxXCdhNltETVNfX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyDQpzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGUNCkF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2XCdhNlwnYTY3XCdhNlwnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MFwnODdbRE1TXw0KX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyc2lvbl0gXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF5PUiBbVmFyaWFiDQpsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXj8gW0RNU19fQXV0aG9ySURdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBeQU5EIFwnN2JbVmFyaWFibGUNCl9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjBcJ2E2MVwnYTZcJ2E2XCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY4MTg4OTQ1NzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0xDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvNzYyNjQ2NTB9e0Zvb3RlcihCb3R0b21MZWZ0KV8xXCdjY1wnY2RQYXJ0TnVtYmVyPTNcJ2NjXCdjZE9iamVjdERhdGE9U2VnbWVudElEPTEwNzh8T2JqZWN0VHlwZUlEPTQwMXxOYW1lPUZvb3RlcihCb3R0b21MZWZ0KXxEaXNwbGF5TmFtZT1Gb290ZXIgKExlZnQgQWxpZ25lZCl8SW50ZW5kZWRVc2U9MnxBdXRob3JOb2RlVUlMYWJlbD18TWF4QXV0aG9ycz0wfEhlbHBUZXh0PWZpbGU6Ly8vVHJhaWxlcl9UcmFpbGVyLmh0bWx8TWVudUluc2VydGlvbk9wdGlvbnM9MjU2fERlZmF1bHRNZQ0KbnVJbnNlcnRpb25CZWhhdmlvcj0wfERlZmF1bHREcmFnTG9jYXRpb249MXxEZWZhdWx0RHJhZ0JlaGF2aW9yPTB8RGVmYXVsdERvdWJsZUNsaWNrTG9jYXRpb249NHxEZWZhdWx0RG91YmxlQ2xpY2tCZWhhdmlvcj0wfEwwPTB8TDE9MHxMMj0wfEwzPTB8TDQ9MHxBdXRob3JDb250cm9sUHJvcGVydGllcz18U2hvd0Nob29zZXI9dHJ1ZXxMaW5rQXV0aG9yc1RvUGFyZW50RGVmPXxUcmFuc2xhdGlvbklEPTB8UmVxdWlyZWRTdHlsZXM9TWFjUGFjIFRyDQphaWxlcnxWYXJpYWJsZURlZmluaXRpb249NDM0MDc0Y2UtYTNkYi00OWM3LTk3ZDYtYWE3MTk2NjYxNzExXCdhNkluc2VydERhdGVBc0ZpZWxkXCdhNkluc2VydCBEYXRlL1RpbWUgYXMgRmllbGQgQ29kZVwnYTYwXCdhNjlcJ2E2W1R5cGVQcmVmZXJlbmNlX0luc2VydERhdGVBc0ZpZWxkXVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luc2VydERhdGVBc0ZpZWxkLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZJbmNsdWRlRGF0ZSxJbmNsdWRlVGkNCm1lXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZGXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8VmFyaWFibGVEZWZpbml0aW9uPThlYWU1MmMwLWFmZGItNDExMi05NmY2LWI4YWU2YWNiZGJiYlwnYTZJbmNsdWRlVHlwaXN0XCdhNkluY2x1ZGUgVHlwaXN0IElEXCdhNjBcJ2E2NVwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVUeXBpc3RdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2UFwnYTZGYWxzZVwnYTYxXCdhNkZhbA0Kc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249MTE0YzRkZjEtMjNmNS00NTgyLTk3YWUtODAxYjM4YjEyNmQ2XCdhNkluY2x1ZGVBdXRob3JcJ2E2SW5jbHVkZSBBdXRob3IgSURcJ2E2MFwnYTY0XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUF1dGhvcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZBXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YTM3DQpjZTk5My00NjQ2LTRlODgtOTRlZC00YTM2YzdiMjFhNjdcJ2E2SW5jbHVkZUNsaWVudE1hdHRlclwnYTZJbmNsdWRlIENsaWVudCBNYXR0ZXIgTm8uXCdhNjBcJ2E2M1wnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVDbGllbnRNYXR0ZXJdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWM3MzU0ZmRlLTc0N2QtNGMNCjEyLTk5MzEtMDExNWY3OWQyYWNiXCdhNkluY2x1ZGVWZXJzaW9uXCdhNkluY2x1ZGUgVmVyc2lvblwnYTYwXCdhNjJcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVmVyc2lvbl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxcJ2NjXCdjZFJlc2VydmVkPW1wczkyNDI1MzgyMDAwMDAwMDAwMDAwMDAwMTA3ODAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTINCn19DQp7XCpcZG9jdmFyIHttcG83NjkyODI3MH17SW5jbHVkZURhdGVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWZjYmE0NmVkLTRkNTctNDllNC05MDJkLTExYzQ4ZTI4OWQyY1wnYTZJbmNsdWRlRGF0ZVwnYTZJbmNsdWRlIERhdGVcJ2E2MFwnYTY3XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRGF0ZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRGF0ZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcyXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IE1NL2RkL3l5XCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZVRpbWVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU4ODU4NDQ4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzc2OTY3MjE2fXtJbmNsdWRlRGF0ZVwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249ZmNiYTQ2ZWQtNGQ1Ny00OWU0LTkwMmQtMTFjNDhlMjg5ZDJjXCdhNkluY2x1ZGVEYXRlXCdhNkluY2x1ZGUgRGF0ZVwnYTYwXCdhNjdcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVEYXRlXVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVEYXRlLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxN1wnODYwXCc4NzJcJzg3XCc4N1tNeVZhbHVlXSBePSB0cnUNCmUgXj8gTU0vZGQveXlcJzdiW1ZhcmlhYmxlX19JbnNlcnREYXRlQXNGaWVsZF0gXj8gIC9GXCc3ZCBeOiBbRW1wdHldXCdhNjFcJzg2XCc4NjRcJzg2MlwnODZJbnNlcnREYXRlQXNGaWVsZFwnODdbTXlWYWx1ZV0gXk9SIFtWYXJpYWJsZV9JbmNsdWRlVGltZV1cJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2RFwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NTg4NTg0NDgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9DQp9fQ0Ke1wqXGRvY3ZhciB7bXBvNzcyODM5OTB9e0RvY0lEXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj1jYTA4ZmM0OS03ZTIzLTQ5MTctODMyZi1lYWI5NTE3OTg2NGVcJ2E2RG9jSURcJ2E2RG9jIElEXCdhNjBcJ2E2MVwnYTZbRE1TX19Jc1Byb2ZpbGVkXSBePyBcJzdiW0NIT09TRV9fW0RNU19fTGlicmFyeV1fX1VTW0NIQVJfXzk1XUJMWF9fQkxYX19VU0FfX09IU1VTQV9fVE9LWU9fX09IU1RPS1lPX19BU0lBX19PSFNBU0lBX19FVVJPUEVfX09IU0VVUk9QRV9fQkxYXTpbRE1TX19Eb2NOdW1iZXJdLltETVNfX1Zlcg0Kc2lvbl0gXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0NoYXJfXzExXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXj8gW0RNU19fQ2xpZW50SURdLVtETVNfX01hdHRlcklEXSAgXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlDQpBdXRob3JdIF49IHRydWUgXj8gW0RNU19fQXV0aG9ySURdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBeQU5EIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWVcJzdkIF4/IC8gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtETVNfX1R5cGlzdElEXSBeOiBbRW1wdHldXCc3ZFwnN2QgXjogW0RvY3VtZW50X19GdWxsTmFtZV1cJ2E2XCdhNlwnYTZcJ2E2N1wnYTZcJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYxXCc4NlwnODcwXCc4NzBcJzg3W0RNU18NCl9Jc1Byb2ZpbGVkXSBePyBcJzdiW0NIT09TRV9fW0RNU19fTGlicmFyeV1fX1VTW0NIQVJfXzk1XUJMWF9fQkxYX19VU0FfX09IU1VTQV9fVE9LWU9fX09IU1RPS1lPX19BU0lBX19PSFNBU0lBX19FVVJPUEVfX09IU0VVUk9QRV9fQkxYXTpbRE1TX19Eb2NOdW1iZXJdLltETVNfX1ZlcnNpb25dIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYg0KbGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0NoYXJfXzExXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXj8gW0RNU19fQ2xpZW50SURdLVtETVNfX01hdHRlcklEXSAgXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF4/IFtETVNfX0F1dGhvcklEXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXkFORCBcJzdiW1ZhcmlhYmxlDQpfX0luY2x1ZGVBdXRob3JdIF49IHRydWVcJzdkIF4/IC8gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtETVNfX1R5cGlzdElEXSBeOiBbRW1wdHldXCc3ZFwnN2QgXjogW0RvY3VtZW50X19GdWxsTmFtZV1cJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYwXCdhNjFcJ2E2XCdhNlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2ODE4ODk0NTcwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9MQ0KfX0NCntcKlxkb2N2YXIge21wbzc3Mzc0Mjg1fXtGb290ZXIoQm90dG9tTGVmdClfMVwnY2NcJ2NkUGFydE51bWJlcj0zXCdjY1wnY2RPYmplY3REYXRhPVNlZ21lbnRJRD0xMDc4fE9iamVjdFR5cGVJRD00MDF8TmFtZT1Gb290ZXIoQm90dG9tTGVmdCl8RGlzcGxheU5hbWU9Rm9vdGVyIChMZWZ0IEFsaWduZWQpfEludGVuZGVkVXNlPTJ8QXV0aG9yTm9kZVVJTGFiZWw9fE1heEF1dGhvcnM9MHxIZWxwVGV4dD1maWxlOi8vL1RyYWlsZXJfVHJhaWxlci5odG1sfE1lbnVJbnNlcnRpb25PcHRpb25zPTI1NnxEZWZhdWx0TWUNCm51SW5zZXJ0aW9uQmVoYXZpb3I9MHxEZWZhdWx0RHJhZ0xvY2F0aW9uPTF8RGVmYXVsdERyYWdCZWhhdmlvcj0wfERlZmF1bHREb3VibGVDbGlja0xvY2F0aW9uPTR8RGVmYXVsdERvdWJsZUNsaWNrQmVoYXZpb3I9MHxMMD0wfEwxPTB8TDI9MHxMMz0wfEw0PTB8QXV0aG9yQ29udHJvbFByb3BlcnRpZXM9fFNob3dDaG9vc2VyPXRydWV8TGlua0F1dGhvcnNUb1BhcmVudERlZj18VHJhbnNsYXRpb25JRD0wfFJlcXVpcmVkU3R5bGVzPU1hY1BhYyBUcg0KYWlsZXJ8VmFyaWFibGVEZWZpbml0aW9uPTQzNDA3NGNlLWEzZGItNDljNy05N2Q2LWFhNzE5NjY2MTcxMVwnYTZJbnNlcnREYXRlQXNGaWVsZFwnYTZJbnNlcnQgRGF0ZS9UaW1lIGFzIEZpZWxkIENvZGVcJ2E2MFwnYTY5XCdhNltUeXBlUHJlZmVyZW5jZV9JbnNlcnREYXRlQXNGaWVsZF1cJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbnNlcnREYXRlQXNGaWVsZC5odG1sXCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2SW5jbHVkZURhdGUsSW5jbHVkZVRpDQptZVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2RlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFZhcmlhYmxlRGVmaW5pdGlvbj04ZWFlNTJjMC1hZmRiLTQxMTItOTZmNi1iOGFlNmFjYmRiYmJcJ2E2SW5jbHVkZVR5cGlzdFwnYTZJbmNsdWRlIFR5cGlzdCBJRFwnYTYwXCdhNjVcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVHlwaXN0XVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNlBcJ2E2RmFsc2VcJ2E2MVwnYTZGYWwNCnNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPTExNGM0ZGYxLTIzZjUtNDU4Mi05N2FlLTgwMWIzOGIxMjZkNlwnYTZJbmNsdWRlQXV0aG9yXCdhNkluY2x1ZGUgQXV0aG9yIElEXCdhNjBcJ2E2NFwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVBdXRob3JdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2QVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWEzNw0KY2U5OTMtNDY0Ni00ZTg4LTk0ZWQtNGEzNmM3YjIxYTY3XCdhNkluY2x1ZGVDbGllbnRNYXR0ZXJcJ2E2SW5jbHVkZSBDbGllbnQgTWF0dGVyIE5vLlwnYTYwXCdhNjNcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlQ2xpZW50TWF0dGVyXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNk1cJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj1jNzM1NGZkZS03NDdkLTRjDQoxMi05OTMxLTAxMTVmNzlkMmFjYlwnYTZJbmNsdWRlVmVyc2lvblwnYTZJbmNsdWRlIFZlcnNpb25cJ2E2MFwnYTYyXCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZVZlcnNpb25dXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8XCdjY1wnY2RSZXNlcnZlZD1tcHM5MjQyNTM4MjAwMDAwMDAwMDAwMDAwMDEwNzgwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0yDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvNzgxODQ0Njh9e0Zvb3RlcihCb3R0b21MZWZ0KV8xXCdjY1wnY2RQYXJ0TnVtYmVyPTNcJ2NjXCdjZE9iamVjdERhdGE9U2VnbWVudElEPTEwNzh8T2JqZWN0VHlwZUlEPTQwMXxOYW1lPUZvb3RlcihCb3R0b21MZWZ0KXxEaXNwbGF5TmFtZT1Gb290ZXIgKExlZnQgQWxpZ25lZCl8SW50ZW5kZWRVc2U9MnxBdXRob3JOb2RlVUlMYWJlbD18TWF4QXV0aG9ycz0wfEhlbHBUZXh0PWZpbGU6Ly8vVHJhaWxlcl9UcmFpbGVyLmh0bWx8TWVudUluc2VydGlvbk9wdGlvbnM9MjU2fERlZmF1bHRNZQ0KbnVJbnNlcnRpb25CZWhhdmlvcj0wfERlZmF1bHREcmFnTG9jYXRpb249MXxEZWZhdWx0RHJhZ0JlaGF2aW9yPTB8RGVmYXVsdERvdWJsZUNsaWNrTG9jYXRpb249NHxEZWZhdWx0RG91YmxlQ2xpY2tCZWhhdmlvcj0wfEwwPTB8TDE9MHxMMj0wfEwzPTB8TDQ9MHxBdXRob3JDb250cm9sUHJvcGVydGllcz18U2hvd0Nob29zZXI9dHJ1ZXxMaW5rQXV0aG9yc1RvUGFyZW50RGVmPXxUcmFuc2xhdGlvbklEPTB8UmVxdWlyZWRTdHlsZXM9TWFjUGFjIFRyDQphaWxlcnxWYXJpYWJsZURlZmluaXRpb249NDM0MDc0Y2UtYTNkYi00OWM3LTk3ZDYtYWE3MTk2NjYxNzExXCdhNkluc2VydERhdGVBc0ZpZWxkXCdhNkluc2VydCBEYXRlL1RpbWUgYXMgRmllbGQgQ29kZVwnYTYwXCdhNjlcJ2E2W1R5cGVQcmVmZXJlbmNlX0luc2VydERhdGVBc0ZpZWxkXVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luc2VydERhdGVBc0ZpZWxkLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZJbmNsdWRlRGF0ZSxJbmNsdWRlVGkNCm1lXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZGXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8VmFyaWFibGVEZWZpbml0aW9uPThlYWU1MmMwLWFmZGItNDExMi05NmY2LWI4YWU2YWNiZGJiYlwnYTZJbmNsdWRlVHlwaXN0XCdhNkluY2x1ZGUgVHlwaXN0IElEXCdhNjBcJ2E2NVwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVUeXBpc3RdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2UFwnYTZGYWxzZVwnYTYxXCdhNkZhbA0Kc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249MTE0YzRkZjEtMjNmNS00NTgyLTk3YWUtODAxYjM4YjEyNmQ2XCdhNkluY2x1ZGVBdXRob3JcJ2E2SW5jbHVkZSBBdXRob3IgSURcJ2E2MFwnYTY0XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUF1dGhvcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZBXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YTM3DQpjZTk5My00NjQ2LTRlODgtOTRlZC00YTM2YzdiMjFhNjdcJ2E2SW5jbHVkZUNsaWVudE1hdHRlclwnYTZJbmNsdWRlIENsaWVudCBNYXR0ZXIgTm8uXCdhNjBcJ2E2M1wnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVDbGllbnRNYXR0ZXJdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWM3MzU0ZmRlLTc0N2QtNGMNCjEyLTk5MzEtMDExNWY3OWQyYWNiXCdhNkluY2x1ZGVWZXJzaW9uXCdhNkluY2x1ZGUgVmVyc2lvblwnYTYwXCdhNjJcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVmVyc2lvbl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxcJ2NjXCdjZFJlc2VydmVkPW1wczkyNDI1MzgyMDAwMDAwMDAwMDAwMDAwMTA3ODAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTINCn19DQp7XCpcZG9jdmFyIHttcG84MDQ2MjQyNn17Rm9vdGVyKEJvdHRvbUxlZnQpXzFcJ2NjXCdjZFBhcnROdW1iZXI9M1wnY2NcJ2NkT2JqZWN0RGF0YT1TZWdtZW50SUQ9MTA3OHxPYmplY3RUeXBlSUQ9NDAxfE5hbWU9Rm9vdGVyKEJvdHRvbUxlZnQpfERpc3BsYXlOYW1lPUZvb3RlciAoTGVmdCBBbGlnbmVkKXxJbnRlbmRlZFVzZT0yfEF1dGhvck5vZGVVSUxhYmVsPXxNYXhBdXRob3JzPTB8SGVscFRleHQ9ZmlsZTovLy9UcmFpbGVyX1RyYWlsZXIuaHRtbHxNZW51SW5zZXJ0aW9uT3B0aW9ucz0yNTZ8RGVmYXVsdE1lDQpudUluc2VydGlvbkJlaGF2aW9yPTB8RGVmYXVsdERyYWdMb2NhdGlvbj0xfERlZmF1bHREcmFnQmVoYXZpb3I9MHxEZWZhdWx0RG91YmxlQ2xpY2tMb2NhdGlvbj00fERlZmF1bHREb3VibGVDbGlja0JlaGF2aW9yPTB8TDA9MHxMMT0wfEwyPTB8TDM9MHxMND0wfEF1dGhvckNvbnRyb2xQcm9wZXJ0aWVzPXxTaG93Q2hvb3Nlcj10cnVlfExpbmtBdXRob3JzVG9QYXJlbnREZWY9fFRyYW5zbGF0aW9uSUQ9MHxSZXF1aXJlZFN0eWxlcz1NYWNQYWMgVHINCmFpbGVyfFZhcmlhYmxlRGVmaW5pdGlvbj00MzQwNzRjZS1hM2RiLTQ5YzctOTdkNi1hYTcxOTY2NjE3MTFcJ2E2SW5zZXJ0RGF0ZUFzRmllbGRcJ2E2SW5zZXJ0IERhdGUvVGltZSBhcyBGaWVsZCBDb2RlXCdhNjBcJ2E2OVwnYTZbVHlwZVByZWZlcmVuY2VfSW5zZXJ0RGF0ZUFzRmllbGRdXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5zZXJ0RGF0ZUFzRmllbGQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkluY2x1ZGVEYXRlLEluY2x1ZGVUaQ0KbWVcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxWYXJpYWJsZURlZmluaXRpb249OGVhZTUyYzAtYWZkYi00MTEyLTk2ZjYtYjhhZTZhY2JkYmJiXCdhNkluY2x1ZGVUeXBpc3RcJ2E2SW5jbHVkZSBUeXBpc3QgSURcJ2E2MFwnYTY1XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZVR5cGlzdF1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZQXCdhNkZhbHNlXCdhNjFcJ2E2RmFsDQpzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj0xMTRjNGRmMS0yM2Y1LTQ1ODItOTdhZS04MDFiMzhiMTI2ZDZcJ2E2SW5jbHVkZUF1dGhvclwnYTZJbmNsdWRlIEF1dGhvciBJRFwnYTYwXCdhNjRcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlQXV0aG9yXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNkFcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj1hMzcNCmNlOTkzLTQ2NDYtNGU4OC05NGVkLTRhMzZjN2IyMWE2N1wnYTZJbmNsdWRlQ2xpZW50TWF0dGVyXCdhNkluY2x1ZGUgQ2xpZW50IE1hdHRlciBOby5cJ2E2MFwnYTYzXCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUNsaWVudE1hdHRlcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YzczNTRmZGUtNzQ3ZC00Yw0KMTItOTkzMS0wMTE1Zjc5ZDJhY2JcJ2E2SW5jbHVkZVZlcnNpb25cJ2E2SW5jbHVkZSBWZXJzaW9uXCdhNjBcJ2E2MlwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVWZXJzaW9uXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNk1cJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXBzOTI0MjUzODIwMDAwMDAwMDAwMDAwMDAxMDc4MDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9Mg0KfX0NCntcKlxkb2N2YXIge21wbzgyMjU3NjcwfXtJbmNsdWRlRHJhZnRcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTc3NjZmM2FlLTkwZTAtNDgxMC1iYWQ1LTU0ZDA5MmE1ZmE3ZFwnYTZJbmNsdWRlRHJhZnRcJ2E2SW5jbHVkZSBEcmFmdFwnYTYwXCdhNjZcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVEcmFmdF1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRHJhZnQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MlwnODdbTXlWYWx1ZV0gXj0NCiB0cnVlIF4/IERSQUZUIF46IFtFbXB0eV1cJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlJcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjYzMzkwMDg4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPX19DQp7XCpcZG9jdmFyIHttcG84MjQ3Mjc3N317RG9jSURcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWNhMDhmYzQ5LTdlMjMtNDkxNy04MzJmLWVhYjk1MTc5ODY0ZVwnYTZEb2NJRFwnYTZEb2MgSURcJ2E2MFwnYTYxXCdhNltETVNfX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyDQpzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGUNCkF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2XCdhNlwnYTY3XCdhNlwnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MFwnODdbRE1TXw0KX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyc2lvbl0gXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF5PUiBbVmFyaWFiDQpsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXj8gW0RNU19fQXV0aG9ySURdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBeQU5EIFwnN2JbVmFyaWFibGUNCl9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjBcJ2E2MVwnYTZcJ2E2XCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY4MTg4OTQ1NzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0xDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvODM0NzQ4Mzl9e0luY2x1ZGVEYXRlXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj1mY2JhNDZlZC00ZDU3LTQ5ZTQtOTAyZC0xMWM0OGUyODlkMmNcJ2E2SW5jbHVkZURhdGVcJ2E2SW5jbHVkZSBEYXRlXCdhNjBcJ2E2N1wnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURhdGVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURhdGUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MlwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBNTS9kZC95eVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVUaW1lXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZEXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1ODg1ODQ0ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG84MzY5NTY4Nn17RG9jSURcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWNhMDhmYzQ5LTdlMjMtNDkxNy04MzJmLWVhYjk1MTc5ODY0ZVwnYTZEb2NJRFwnYTZEb2MgSURcJ2E2MFwnYTYxXCdhNltETVNfX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyDQpzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGUNCkF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2XCdhNlwnYTY3XCdhNlwnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MFwnODdbRE1TXw0KX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyc2lvbl0gXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF5PUiBbVmFyaWFiDQpsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXj8gW0RNU19fQXV0aG9ySURdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBeQU5EIFwnN2JbVmFyaWFibGUNCl9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjBcJ2E2MVwnYTZcJ2E2XCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY4MTg4OTQ1NzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0xDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvODQ4ODI2MTd9e0luY2x1ZGVEYXRlXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj1mY2JhNDZlZC00ZDU3LTQ5ZTQtOTAyZC0xMWM0OGUyODlkMmNcJ2E2SW5jbHVkZURhdGVcJ2E2SW5jbHVkZSBEYXRlXCdhNjBcJ2E2N1wnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURhdGVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURhdGUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MlwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBNTS9kZC95eVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVUaW1lXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZEXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1ODg1ODQ0ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG84NDk1MTQ4NH17RG9jSURcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWNhMDhmYzQ5LTdlMjMtNDkxNy04MzJmLWVhYjk1MTc5ODY0ZVwnYTZEb2NJRFwnYTZEb2MgSURcJ2E2MFwnYTYxXCdhNltETVNfX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyDQpzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGUNCkF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2XCdhNlwnYTY3XCdhNlwnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MFwnODdbRE1TXw0KX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyc2lvbl0gXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF5PUiBbVmFyaWFiDQpsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXj8gW0RNU19fQXV0aG9ySURdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBeQU5EIFwnN2JbVmFyaWFibGUNCl9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjBcJ2E2MVwnYTZcJ2E2XCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY4MTg4OTQ1NzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0xDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvODUyNDY3OTV9e0Zvb3RlcihCb3R0b21MZWZ0KV8xXCdjY1wnY2RQYXJ0TnVtYmVyPTNcJ2NjXCdjZE9iamVjdERhdGE9U2VnbWVudElEPTEwNzh8T2JqZWN0VHlwZUlEPTQwMXxOYW1lPUZvb3RlcihCb3R0b21MZWZ0KXxEaXNwbGF5TmFtZT1Gb290ZXIgKExlZnQgQWxpZ25lZCl8SW50ZW5kZWRVc2U9MnxBdXRob3JOb2RlVUlMYWJlbD18TWF4QXV0aG9ycz0wfEhlbHBUZXh0PWZpbGU6Ly8vVHJhaWxlcl9UcmFpbGVyLmh0bWx8TWVudUluc2VydGlvbk9wdGlvbnM9MjU2fERlZmF1bHRNZQ0KbnVJbnNlcnRpb25CZWhhdmlvcj0wfERlZmF1bHREcmFnTG9jYXRpb249MXxEZWZhdWx0RHJhZ0JlaGF2aW9yPTB8RGVmYXVsdERvdWJsZUNsaWNrTG9jYXRpb249NHxEZWZhdWx0RG91YmxlQ2xpY2tCZWhhdmlvcj0wfEwwPTB8TDE9MHxMMj0wfEwzPTB8TDQ9MHxBdXRob3JDb250cm9sUHJvcGVydGllcz18U2hvd0Nob29zZXI9dHJ1ZXxMaW5rQXV0aG9yc1RvUGFyZW50RGVmPXxUcmFuc2xhdGlvbklEPTB8UmVxdWlyZWRTdHlsZXM9TWFjUGFjIFRyDQphaWxlcnxWYXJpYWJsZURlZmluaXRpb249NDM0MDc0Y2UtYTNkYi00OWM3LTk3ZDYtYWE3MTk2NjYxNzExXCdhNkluc2VydERhdGVBc0ZpZWxkXCdhNkluc2VydCBEYXRlL1RpbWUgYXMgRmllbGQgQ29kZVwnYTYwXCdhNjlcJ2E2W1R5cGVQcmVmZXJlbmNlX0luc2VydERhdGVBc0ZpZWxkXVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luc2VydERhdGVBc0ZpZWxkLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZJbmNsdWRlRGF0ZSxJbmNsdWRlVGkNCm1lXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZGXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8VmFyaWFibGVEZWZpbml0aW9uPThlYWU1MmMwLWFmZGItNDExMi05NmY2LWI4YWU2YWNiZGJiYlwnYTZJbmNsdWRlVHlwaXN0XCdhNkluY2x1ZGUgVHlwaXN0IElEXCdhNjBcJ2E2NVwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVUeXBpc3RdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2UFwnYTZGYWxzZVwnYTYxXCdhNkZhbA0Kc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249MTE0YzRkZjEtMjNmNS00NTgyLTk3YWUtODAxYjM4YjEyNmQ2XCdhNkluY2x1ZGVBdXRob3JcJ2E2SW5jbHVkZSBBdXRob3IgSURcJ2E2MFwnYTY0XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUF1dGhvcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZBXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YTM3DQpjZTk5My00NjQ2LTRlODgtOTRlZC00YTM2YzdiMjFhNjdcJ2E2SW5jbHVkZUNsaWVudE1hdHRlclwnYTZJbmNsdWRlIENsaWVudCBNYXR0ZXIgTm8uXCdhNjBcJ2E2M1wnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVDbGllbnRNYXR0ZXJdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWM3MzU0ZmRlLTc0N2QtNGMNCjEyLTk5MzEtMDExNWY3OWQyYWNiXCdhNkluY2x1ZGVWZXJzaW9uXCdhNkluY2x1ZGUgVmVyc2lvblwnYTYwXCdhNjJcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVmVyc2lvbl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxcJ2NjXCdjZFJlc2VydmVkPW1wczkyNDI1MzgyMDAwMDAwMDAwMDAwMDAwMTA3ODAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTINCn19DQp7XCpcZG9jdmFyIHttcG84NjQ1OTAwNX17RG9jSURcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWNhMDhmYzQ5LTdlMjMtNDkxNy04MzJmLWVhYjk1MTc5ODY0ZVwnYTZEb2NJRFwnYTZEb2MgSURcJ2E2MFwnYTYxXCdhNltETVNfX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyDQpzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGUNCkF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2XCdhNlwnYTY3XCdhNlwnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MFwnODdbRE1TXw0KX0lzUHJvZmlsZWRdIF4/IFwnN2JbQ0hPT1NFX19bRE1TX19MaWJyYXJ5XV9fVVNbQ0hBUl9fOTVdQkxYX19CTFhfX1VTQV9fT0hTVVNBX19UT0tZT19fT0hTVE9LWU9fX0FTSUFfX09IU0FTSUFfX0VVUk9QRV9fT0hTRVVST1BFX19CTFhdOltETVNfX0RvY051bWJlcl0uW0RNU19fVmVyc2lvbl0gXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlIF5PUiBbVmFyaWFiDQpsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbQ2hhcl9fMTFdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUNsaWVudE1hdHRlcl0gXj0gdHJ1ZSBePyBbRE1TX19DbGllbnRJRF0tW0RNU19fTWF0dGVySURdICBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXj8gW0RNU19fQXV0aG9ySURdIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBeQU5EIFwnN2JbVmFyaWFibGUNCl9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZVwnN2QgXj8gLyBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXj8gW0RNU19fVHlwaXN0SURdIF46IFtFbXB0eV1cJzdkXCc3ZCBeOiBbRG9jdW1lbnRfX0Z1bGxOYW1lXVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjBcJ2E2MVwnYTZcJ2E2XCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY4MTg4OTQ1NzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0xDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvODcyMzIwMTJ9e0luY2x1ZGVEcmFmdFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Nzc2NmYzYWUtOTBlMC00ODEwLWJhZDUtNTRkMDkyYTVmYTdkXCdhNkluY2x1ZGVEcmFmdFwnYTZJbmNsdWRlIERyYWZ0XCdhNjBcJ2E2NlwnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURyYWZ0XVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVEcmFmdC5odG1sXCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcyXCc4N1tNeVZhbHVlXSBePQ0KIHRydWUgXj8gRFJBRlQgXjogW0VtcHR5XVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2UlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NjMzOTAwODgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9fX0NCntcKlxkb2N2YXIge21wbzg3Mzg5NzAyfXtJbmNsdWRlRHJhZnRcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTc3NjZmM2FlLTkwZTAtNDgxMC1iYWQ1LTU0ZDA5MmE1ZmE3ZFwnYTZJbmNsdWRlRHJhZnRcJ2E2SW5jbHVkZSBEcmFmdFwnYTYwXCdhNjZcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVEcmFmdF1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRHJhZnQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjFcJzg2XCc4NzBcJzg3MlwnODdbTXlWYWx1ZV0gXj0NCiB0cnVlIF4/IERSQUZUIF46IFtFbXB0eV1cJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlJcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjYzMzkwMDg4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPX19DQp7XCpcZG9jdmFyIHttcG84ODM0NjQyOH17SW5jbHVkZVRpbWVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPTcyNTRlYjQ3LTZhZTktNDBiYy1iYjQyLTVkYTZmNDA3Nzc2YVwnYTZJbmNsdWRlVGltZVwnYTZJbmNsdWRlIFRpbWVcJ2E2MFwnYTY4XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlVGltZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlVGltZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcwXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IGg6bW1hbS9wbVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkICBeOiBbRW1wdHldXCdhNjFcJzg2XCc4NjRcJzg2MlwnODZJbnNlcnREYXRlQXNGaWVsZFwnODdbTXlWYWx1ZV0gXk9SIFtWYXJpYWJsZV9JbmNsdWRlRGF0ZV1cJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2VFwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NTYyODU5NjUwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9DQp9fQ0Ke1wqXGRvY3ZhciB7bXBvODk5NDI1MDN9e0luY2x1ZGVEYXRlXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj1mY2JhNDZlZC00ZDU3LTQ5ZTQtOTAyZC0xMWM0OGUyODlkMmNcJ2E2SW5jbHVkZURhdGVcJ2E2SW5jbHVkZSBEYXRlXCdhNjBcJ2E2N1wnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURhdGVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURhdGUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MlwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBNTS9kZC95eVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVUaW1lXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZEXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1ODg1ODQ0ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG85MDQwODMyNX17SW5jbHVkZURhdGVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWZjYmE0NmVkLTRkNTctNDllNC05MDJkLTExYzQ4ZTI4OWQyY1wnYTZJbmNsdWRlRGF0ZVwnYTZJbmNsdWRlIERhdGVcJ2E2MFwnYTY3XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRGF0ZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRGF0ZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcyXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IE1NL2RkL3l5XCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZVRpbWVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU4ODU4NDQ4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzkwNjc0MDE5fXtEb2NJRFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Y2EwOGZjNDktN2UyMy00OTE3LTgzMmYtZWFiOTUxNzk4NjRlXCdhNkRvY0lEXCdhNkRvYyBJRFwnYTYwXCdhNjFcJ2E2W0RNU19fSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXINCnNpb25dIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZQ0KQXV0aG9yXSBePSB0cnVlIF4/IFtETVNfX0F1dGhvcklEXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXkFORCBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZcJ2E2XCdhNjdcJ2E2XCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcwXCc4N1tETVNfDQpfSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXJzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWINCmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZQ0KX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MFwnYTYxXCdhNlwnYTZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjgxODg5NDU3MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTENCn19DQp7XCpcZG9jdmFyIHttcG85MDcyOTY3OH17SW5jbHVkZURhdGVcJ2NjXCdjZE9iamVjdERhdGE9VmFyaWFibGVEZWZpbml0aW9uPWZjYmE0NmVkLTRkNTctNDllNC05MDJkLTExYzQ4ZTI4OWQyY1wnYTZJbmNsdWRlRGF0ZVwnYTZJbmNsdWRlIERhdGVcJ2E2MFwnYTY3XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRGF0ZV1cJzg2XCdhNltNeVRhZ1ZhbHVlXSBeIT0gXCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbmNsdWRlRGF0ZS5odG1sXCdhNjFcJzg2MFwnODZcJzg2MTdcJzg2MFwnODcyXCc4N1wnODdbTXlWYWx1ZV0gXj0gdHJ1DQplIF4/IE1NL2RkL3l5XCc3YltWYXJpYWJsZV9fSW5zZXJ0RGF0ZUFzRmllbGRdIF4/ICAvRlwnN2QgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZVRpbWVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU4ODU4NDQ4MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzkxNTUyNDk2fXtEb2NJRFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Y2EwOGZjNDktN2UyMy00OTE3LTgzMmYtZWFiOTUxNzk4NjRlXCdhNkRvY0lEXCdhNkRvYyBJRFwnYTYwXCdhNjFcJ2E2W0RNU19fSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXINCnNpb25dIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZQ0KQXV0aG9yXSBePSB0cnVlIF4/IFtETVNfX0F1dGhvcklEXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXkFORCBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZcJ2E2XCdhNjdcJ2E2XCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcwXCc4N1tETVNfDQpfSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXJzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWINCmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZQ0KX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MFwnYTYxXCdhNlwnYTZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjgxODg5NDU3MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTENCn19DQp7XCpcZG9jdmFyIHttcG85MTk1Mjc4M317SW5jbHVkZURyYWZ0XCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj03NzY2ZjNhZS05MGUwLTQ4MTAtYmFkNS01NGQwOTJhNWZhN2RcJ2E2SW5jbHVkZURyYWZ0XCdhNkluY2x1ZGUgRHJhZnRcJ2E2MFwnYTY2XCdhNltUeXBlUHJlZmVyZW5jZV9JbmNsdWRlRHJhZnRdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURyYWZ0Lmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxXCc4NlwnODcwXCc4NzJcJzg3W015VmFsdWVdIF49DQogdHJ1ZSBePyBEUkFGVCBeOiBbRW1wdHldXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZSXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY2MzM5MDA4ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD19fQ0Ke1wqXGRvY3ZhciB7bXBvOTIyMzc4NTR9e0luY2x1ZGVEYXRlXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj1mY2JhNDZlZC00ZDU3LTQ5ZTQtOTAyZC0xMWM0OGUyODlkMmNcJ2E2SW5jbHVkZURhdGVcJ2E2SW5jbHVkZSBEYXRlXCdhNjBcJ2E2N1wnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURhdGVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZURhdGUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MlwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBNTS9kZC95eVwnN2JbVmFyaWFibGVfX0luc2VydERhdGVBc0ZpZWxkXSBePyAgL0ZcJzdkIF46IFtFbXB0eV1cJ2E2MVwnODZcJzg2NFwnODYyXCc4Nkluc2VydERhdGVBc0ZpZWxkXCc4N1tNeVZhbHVlXSBeT1IgW1ZhcmlhYmxlX0luY2x1ZGVUaW1lXVwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2M1wnYTYxXCdhNlwnYTZEXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2MVwnYTZcJ2E2XCdhNjB8XCdjY1wnY2RSZXNlcnZlZD1tcHY1ODg1ODQ0ODAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0NCn19DQp7XCpcZG9jdmFyIHttcG85Mjc0MjM4OX17Rm9vdGVyKEJvdHRvbUxlZnQpXzFcJ2NjXCdjZFBhcnROdW1iZXI9M1wnY2NcJ2NkT2JqZWN0RGF0YT1TZWdtZW50SUQ9MTA3OHxPYmplY3RUeXBlSUQ9NDAxfE5hbWU9Rm9vdGVyKEJvdHRvbUxlZnQpfERpc3BsYXlOYW1lPUZvb3RlciAoTGVmdCBBbGlnbmVkKXxJbnRlbmRlZFVzZT0yfEF1dGhvck5vZGVVSUxhYmVsPXxNYXhBdXRob3JzPTB8SGVscFRleHQ9ZmlsZTovLy9UcmFpbGVyX1RyYWlsZXIuaHRtbHxNZW51SW5zZXJ0aW9uT3B0aW9ucz0yNTZ8RGVmYXVsdE1lDQpudUluc2VydGlvbkJlaGF2aW9yPTB8RGVmYXVsdERyYWdMb2NhdGlvbj0xfERlZmF1bHREcmFnQmVoYXZpb3I9MHxEZWZhdWx0RG91YmxlQ2xpY2tMb2NhdGlvbj00fERlZmF1bHREb3VibGVDbGlja0JlaGF2aW9yPTB8TDA9MHxMMT0wfEwyPTB8TDM9MHxMND0wfEF1dGhvckNvbnRyb2xQcm9wZXJ0aWVzPXxTaG93Q2hvb3Nlcj10cnVlfExpbmtBdXRob3JzVG9QYXJlbnREZWY9fFRyYW5zbGF0aW9uSUQ9MHxSZXF1aXJlZFN0eWxlcz1NYWNQYWMgVHINCmFpbGVyfFZhcmlhYmxlRGVmaW5pdGlvbj00MzQwNzRjZS1hM2RiLTQ5YzctOTdkNi1hYTcxOTY2NjE3MTFcJ2E2SW5zZXJ0RGF0ZUFzRmllbGRcJ2E2SW5zZXJ0IERhdGUvVGltZSBhcyBGaWVsZCBDb2RlXCdhNjBcJ2E2OVwnYTZbVHlwZVByZWZlcmVuY2VfSW5zZXJ0RGF0ZUFzRmllbGRdXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5zZXJ0RGF0ZUFzRmllbGQuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkluY2x1ZGVEYXRlLEluY2x1ZGVUaQ0KbWVcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNkZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxWYXJpYWJsZURlZmluaXRpb249OGVhZTUyYzAtYWZkYi00MTEyLTk2ZjYtYjhhZTZhY2JkYmJiXCdhNkluY2x1ZGVUeXBpc3RcJ2E2SW5jbHVkZSBUeXBpc3QgSURcJ2E2MFwnYTY1XCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZVR5cGlzdF1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZQXCdhNkZhbHNlXCdhNjFcJ2E2RmFsDQpzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj0xMTRjNGRmMS0yM2Y1LTQ1ODItOTdhZS04MDFiMzhiMTI2ZDZcJ2E2SW5jbHVkZUF1dGhvclwnYTZJbmNsdWRlIEF1dGhvciBJRFwnYTYwXCdhNjRcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlQXV0aG9yXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNkFcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj1hMzcNCmNlOTkzLTQ2NDYtNGU4OC05NGVkLTRhMzZjN2IyMWE2N1wnYTZJbmNsdWRlQ2xpZW50TWF0dGVyXCdhNkluY2x1ZGUgQ2xpZW50IE1hdHRlciBOby5cJ2E2MFwnYTYzXCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZUNsaWVudE1hdHRlcl1cJzg2ZmFsc2VcJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNlwnYTYxXCc4NjBcJzg2XCc4NjI2XCc4NkRvY0lEXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MVwnYTYxXCdhNlwnYTZNXCdhNkZhbHNlXCdhNjFcJ2E2RmFsc2VcJ2E2XCdhNjFcJ2E2XCdhNlwnYTZcJ2E2MXxWYXJpYWJsZURlZmluaXRpb249YzczNTRmZGUtNzQ3ZC00Yw0KMTItOTkzMS0wMTE1Zjc5ZDJhY2JcJ2E2SW5jbHVkZVZlcnNpb25cJ2E2SW5jbHVkZSBWZXJzaW9uXCdhNjBcJ2E2MlwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVWZXJzaW9uXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNk1cJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXBzOTI0MjUzODIwMDAwMDAwMDAwMDAwMDAxMDc4MDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9Mg0KfX0NCntcKlxkb2N2YXIge21wbzkyOTg5NDc1fXtGb290ZXIoQm90dG9tTGVmdClfMVwnY2NcJ2NkUGFydE51bWJlcj0zXCdjY1wnY2RPYmplY3REYXRhPVNlZ21lbnRJRD0xMDc4fE9iamVjdFR5cGVJRD00MDF8TmFtZT1Gb290ZXIoQm90dG9tTGVmdCl8RGlzcGxheU5hbWU9Rm9vdGVyIChMZWZ0IEFsaWduZWQpfEludGVuZGVkVXNlPTJ8QXV0aG9yTm9kZVVJTGFiZWw9fE1heEF1dGhvcnM9MHxIZWxwVGV4dD1maWxlOi8vL1RyYWlsZXJfVHJhaWxlci5odG1sfE1lbnVJbnNlcnRpb25PcHRpb25zPTI1NnxEZWZhdWx0TWUNCm51SW5zZXJ0aW9uQmVoYXZpb3I9MHxEZWZhdWx0RHJhZ0xvY2F0aW9uPTF8RGVmYXVsdERyYWdCZWhhdmlvcj0wfERlZmF1bHREb3VibGVDbGlja0xvY2F0aW9uPTR8RGVmYXVsdERvdWJsZUNsaWNrQmVoYXZpb3I9MHxMMD0wfEwxPTB8TDI9MHxMMz0wfEw0PTB8QXV0aG9yQ29udHJvbFByb3BlcnRpZXM9fFNob3dDaG9vc2VyPXRydWV8TGlua0F1dGhvcnNUb1BhcmVudERlZj18VHJhbnNsYXRpb25JRD0wfFJlcXVpcmVkU3R5bGVzPU1hY1BhYyBUcg0KYWlsZXJ8VmFyaWFibGVEZWZpbml0aW9uPTQzNDA3NGNlLWEzZGItNDljNy05N2Q2LWFhNzE5NjY2MTcxMVwnYTZJbnNlcnREYXRlQXNGaWVsZFwnYTZJbnNlcnQgRGF0ZS9UaW1lIGFzIEZpZWxkIENvZGVcJ2E2MFwnYTY5XCdhNltUeXBlUHJlZmVyZW5jZV9JbnNlcnREYXRlQXNGaWVsZF1cJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbnNlcnREYXRlQXNGaWVsZC5odG1sXCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2SW5jbHVkZURhdGUsSW5jbHVkZVRpDQptZVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2RlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFZhcmlhYmxlRGVmaW5pdGlvbj04ZWFlNTJjMC1hZmRiLTQxMTItOTZmNi1iOGFlNmFjYmRiYmJcJ2E2SW5jbHVkZVR5cGlzdFwnYTZJbmNsdWRlIFR5cGlzdCBJRFwnYTYwXCdhNjVcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVHlwaXN0XVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNlBcJ2E2RmFsc2VcJ2E2MVwnYTZGYWwNCnNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPTExNGM0ZGYxLTIzZjUtNDU4Mi05N2FlLTgwMWIzOGIxMjZkNlwnYTZJbmNsdWRlQXV0aG9yXCdhNkluY2x1ZGUgQXV0aG9yIElEXCdhNjBcJ2E2NFwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVBdXRob3JdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2QVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWEzNw0KY2U5OTMtNDY0Ni00ZTg4LTk0ZWQtNGEzNmM3YjIxYTY3XCdhNkluY2x1ZGVDbGllbnRNYXR0ZXJcJ2E2SW5jbHVkZSBDbGllbnQgTWF0dGVyIE5vLlwnYTYwXCdhNjNcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlQ2xpZW50TWF0dGVyXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNk1cJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj1jNzM1NGZkZS03NDdkLTRjDQoxMi05OTMxLTAxMTVmNzlkMmFjYlwnYTZJbmNsdWRlVmVyc2lvblwnYTZJbmNsdWRlIFZlcnNpb25cJ2E2MFwnYTYyXCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZVZlcnNpb25dXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8XCdjY1wnY2RSZXNlcnZlZD1tcHM5MjQyNTM4MjAwMDAwMDAwMDAwMDAwMDEwNzgwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0yDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvOTUzNzY1MjF9e0luY2x1ZGVUaW1lXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj03MjU0ZWI0Ny02YWU5LTQwYmMtYmI0Mi01ZGE2ZjQwNzc3NmFcJ2E2SW5jbHVkZVRpbWVcJ2E2SW5jbHVkZSBUaW1lXCdhNjBcJ2E2OFwnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZVRpbWVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZVRpbWUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MFwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBoOm1tYW0vcG1cJzdiW1ZhcmlhYmxlX19JbnNlcnREYXRlQXNGaWVsZF0gXj8gIC9GXCc3ZCAgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZURhdGVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU2Mjg1OTY1MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzk1NDU4MDQ5fXtGb290ZXIoQm90dG9tTGVmdClfMVwnY2NcJ2NkUGFydE51bWJlcj0zXCdjY1wnY2RPYmplY3REYXRhPVNlZ21lbnRJRD0xMDc4fE9iamVjdFR5cGVJRD00MDF8TmFtZT1Gb290ZXIoQm90dG9tTGVmdCl8RGlzcGxheU5hbWU9Rm9vdGVyIChMZWZ0IEFsaWduZWQpfEludGVuZGVkVXNlPTJ8QXV0aG9yTm9kZVVJTGFiZWw9fE1heEF1dGhvcnM9MHxIZWxwVGV4dD1maWxlOi8vL1RyYWlsZXJfVHJhaWxlci5odG1sfE1lbnVJbnNlcnRpb25PcHRpb25zPTI1NnxEZWZhdWx0TWUNCm51SW5zZXJ0aW9uQmVoYXZpb3I9MHxEZWZhdWx0RHJhZ0xvY2F0aW9uPTF8RGVmYXVsdERyYWdCZWhhdmlvcj0wfERlZmF1bHREb3VibGVDbGlja0xvY2F0aW9uPTR8RGVmYXVsdERvdWJsZUNsaWNrQmVoYXZpb3I9MHxMMD0wfEwxPTB8TDI9MHxMMz0wfEw0PTB8QXV0aG9yQ29udHJvbFByb3BlcnRpZXM9fFNob3dDaG9vc2VyPXRydWV8TGlua0F1dGhvcnNUb1BhcmVudERlZj18VHJhbnNsYXRpb25JRD0wfFJlcXVpcmVkU3R5bGVzPU1hY1BhYyBUcg0KYWlsZXJ8VmFyaWFibGVEZWZpbml0aW9uPTQzNDA3NGNlLWEzZGItNDljNy05N2Q2LWFhNzE5NjY2MTcxMVwnYTZJbnNlcnREYXRlQXNGaWVsZFwnYTZJbnNlcnQgRGF0ZS9UaW1lIGFzIEZpZWxkIENvZGVcJ2E2MFwnYTY5XCdhNltUeXBlUHJlZmVyZW5jZV9JbnNlcnREYXRlQXNGaWVsZF1cJ2E2XCdhNlwnYTZcJ2E2OFwnYTZUcnVlU3RyaW5nPVllc1wnODZGYWxzZVN0cmluZz1Ob1wnYTZcJ2E2XCdhNmZpbGU6Ly8vVHJhaWxlcl9JbnNlcnREYXRlQXNGaWVsZC5odG1sXCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2SW5jbHVkZURhdGUsSW5jbHVkZVRpDQptZVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2RlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFZhcmlhYmxlRGVmaW5pdGlvbj04ZWFlNTJjMC1hZmRiLTQxMTItOTZmNi1iOGFlNmFjYmRiYmJcJ2E2SW5jbHVkZVR5cGlzdFwnYTZJbmNsdWRlIFR5cGlzdCBJRFwnYTYwXCdhNjVcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlVHlwaXN0XVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNlBcJ2E2RmFsc2VcJ2E2MVwnYTZGYWwNCnNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPTExNGM0ZGYxLTIzZjUtNDU4Mi05N2FlLTgwMWIzOGIxMjZkNlwnYTZJbmNsdWRlQXV0aG9yXCdhNkluY2x1ZGUgQXV0aG9yIElEXCdhNjBcJ2E2NFwnYTZbVHlwZVByZWZlcmVuY2VfX0luY2x1ZGVBdXRob3JdXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2QVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8VmFyaWFibGVEZWZpbml0aW9uPWEzNw0KY2U5OTMtNDY0Ni00ZTg4LTk0ZWQtNGEzNmM3YjIxYTY3XCdhNkluY2x1ZGVDbGllbnRNYXR0ZXJcJ2E2SW5jbHVkZSBDbGllbnQgTWF0dGVyIE5vLlwnYTYwXCdhNjNcJ2E2W1R5cGVQcmVmZXJlbmNlX19JbmNsdWRlQ2xpZW50TWF0dGVyXVwnODZmYWxzZVwnYTZcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MjZcJzg2RG9jSURcJ2E2XCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYxXCdhNjFcJ2E2XCdhNk1cJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTZcJ2E2XCdhNlwnYTYxfFZhcmlhYmxlRGVmaW5pdGlvbj1jNzM1NGZkZS03NDdkLTRjDQoxMi05OTMxLTAxMTVmNzlkMmFjYlwnYTZJbmNsdWRlVmVyc2lvblwnYTZJbmNsdWRlIFZlcnNpb25cJ2E2MFwnYTYyXCdhNltUeXBlUHJlZmVyZW5jZV9fSW5jbHVkZVZlcnNpb25dXCc4NmZhbHNlXCdhNlwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZcJ2E2MVwnODYwXCc4NlwnODYyNlwnODZEb2NJRFwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjFcJ2E2MVwnYTZcJ2E2TVwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNlwnYTZcJ2E2XCdhNjF8XCdjY1wnY2RSZXNlcnZlZD1tcHM5MjQyNTM4MjAwMDAwMDAwMDAwMDAwMDEwNzgwMDAwMDAwMDBcJ2NjXCdjZFRlbXBJRD0yDQp9fQ0Ke1wqXGRvY3ZhciB7bXBvOTU1OTEzMzZ9e0luY2x1ZGVUaW1lXCdjY1wnY2RPYmplY3REYXRhPVZhcmlhYmxlRGVmaW5pdGlvbj03MjU0ZWI0Ny02YWU5LTQwYmMtYmI0Mi01ZGE2ZjQwNzc3NmFcJ2E2SW5jbHVkZVRpbWVcJ2E2SW5jbHVkZSBUaW1lXCdhNjBcJ2E2OFwnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZVRpbWVdXCc4NlwnYTZbTXlUYWdWYWx1ZV0gXiE9IFwnYTZcJ2E2XCdhNjhcJ2E2VHJ1ZVN0cmluZz1ZZXNcJzg2RmFsc2VTdHJpbmc9Tm9cJ2E2XCdhNlwnYTZmaWxlOi8vL1RyYWlsZXJfSW5jbHVkZVRpbWUuaHRtbFwnYTYxXCc4NjBcJzg2XCc4NjE3XCc4NjBcJzg3MFwnODdcJzg3W015VmFsdWVdIF49IHRydQ0KZSBePyBoOm1tYW0vcG1cJzdiW1ZhcmlhYmxlX19JbnNlcnREYXRlQXNGaWVsZF0gXj8gIC9GXCc3ZCAgXjogW0VtcHR5XVwnYTYxXCc4NlwnODY0XCc4NjJcJzg2SW5zZXJ0RGF0ZUFzRmllbGRcJzg3W015VmFsdWVdIF5PUiBbVmFyaWFibGVfSW5jbHVkZURhdGVdXCdhNlRydWVcJ2E2MFwnYTZcJ2E2MFwnYTYzXCdhNjFcJ2E2XCdhNlRcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjU2Mjg1OTY1MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPQ0KfX0NCntcKlxkb2N2YXIge21wbzk2MTkzODc0fXtJbmNsdWRlRGF0ZVwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249ZmNiYTQ2ZWQtNGQ1Ny00OWU0LTkwMmQtMTFjNDhlMjg5ZDJjXCdhNkluY2x1ZGVEYXRlXCdhNkluY2x1ZGUgRGF0ZVwnYTYwXCdhNjdcJ2E2W1R5cGVQcmVmZXJlbmNlX0luY2x1ZGVEYXRlXVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVEYXRlLmh0bWxcJ2E2MVwnODYwXCc4NlwnODYxN1wnODYwXCc4NzJcJzg3XCc4N1tNeVZhbHVlXSBePSB0cnUNCmUgXj8gTU0vZGQveXlcJzdiW1ZhcmlhYmxlX19JbnNlcnREYXRlQXNGaWVsZF0gXj8gIC9GXCc3ZCBeOiBbRW1wdHldXCdhNjFcJzg2XCc4NjRcJzg2MlwnODZJbnNlcnREYXRlQXNGaWVsZFwnODdbTXlWYWx1ZV0gXk9SIFtWYXJpYWJsZV9JbmNsdWRlVGltZV1cJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2RFwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NTg4NTg0NDgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9DQp9fQ0Ke1wqXGRvY3ZhciB7bXBvOTY4MjM3MTB9e0luY2x1ZGVEcmFmdFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Nzc2NmYzYWUtOTBlMC00ODEwLWJhZDUtNTRkMDkyYTVmYTdkXCdhNkluY2x1ZGVEcmFmdFwnYTZJbmNsdWRlIERyYWZ0XCdhNjBcJ2E2NlwnYTZbVHlwZVByZWZlcmVuY2VfSW5jbHVkZURyYWZ0XVwnODZcJ2E2W015VGFnVmFsdWVdIF4hPSBcJ2E2XCdhNlwnYTY4XCdhNlRydWVTdHJpbmc9WWVzXCc4NkZhbHNlU3RyaW5nPU5vXCdhNlwnYTZcJ2E2ZmlsZTovLy9UcmFpbGVyX0luY2x1ZGVEcmFmdC5odG1sXCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcyXCc4N1tNeVZhbHVlXSBePQ0KIHRydWUgXj8gRFJBRlQgXjogW0VtcHR5XVwnYTZcJ2E2VHJ1ZVwnYTYwXCdhNlwnYTYwXCdhNjNcJ2E2MVwnYTZcJ2E2UlwnYTZGYWxzZVwnYTYxXCdhNkZhbHNlXCdhNlwnYTYxXCdhNjFcJ2E2XCdhNlwnYTYwfFwnY2NcJ2NkUmVzZXJ2ZWQ9bXB2NjMzOTAwODgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCdjY1wnY2RUZW1wSUQ9fX0NCntcKlxkb2N2YXIge21wbzk5NDQ0MTYzfXtEb2NJRFwnY2NcJ2NkT2JqZWN0RGF0YT1WYXJpYWJsZURlZmluaXRpb249Y2EwOGZjNDktN2UyMy00OTE3LTgzMmYtZWFiOTUxNzk4NjRlXCdhNkRvY0lEXCdhNkRvYyBJRFwnYTYwXCdhNjFcJ2E2W0RNU19fSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXINCnNpb25dIFwnN2JbVmFyaWFibGVfX0luY2x1ZGVDbGllbnRNYXR0ZXJdIF49IHRydWUgXk9SIFtWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBeT1IgW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZQ0KQXV0aG9yXSBePSB0cnVlIF4/IFtETVNfX0F1dGhvcklEXSBeOiBbRW1wdHldXCc3ZFwnN2JbVmFyaWFibGVfX0luY2x1ZGVUeXBpc3RdIF49IHRydWUgXkFORCBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZcJ2E2XCdhNjdcJ2E2XCdhNlwnYTZcJ2E2XCdhNjFcJzg2MFwnODZcJzg2MVwnODZcJzg3MFwnODcwXCc4N1tETVNfDQpfSXNQcm9maWxlZF0gXj8gXCc3YltDSE9PU0VfX1tETVNfX0xpYnJhcnldX19VU1tDSEFSX185NV1CTFhfX0JMWF9fVVNBX19PSFNVU0FfX1RPS1lPX19PSFNUT0tZT19fQVNJQV9fT0hTQVNJQV9fRVVST1BFX19PSFNFVVJPUEVfX0JMWF06W0RNU19fRG9jTnVtYmVyXS5bRE1TX19WZXJzaW9uXSBcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF5PUiBbVmFyaWFibGVfX0luY2x1ZGVBdXRob3JdIF49IHRydWUgXk9SIFtWYXJpYWINCmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF4/IFtDaGFyX18xMV0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlQ2xpZW50TWF0dGVyXSBePSB0cnVlIF4/IFtETVNfX0NsaWVudElEXS1bRE1TX19NYXR0ZXJJRF0gIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZUF1dGhvcl0gXj0gdHJ1ZSBePyBbRE1TX19BdXRob3JJRF0gXjogW0VtcHR5XVwnN2RcJzdiW1ZhcmlhYmxlX19JbmNsdWRlVHlwaXN0XSBePSB0cnVlIF5BTkQgXCc3YltWYXJpYWJsZQ0KX19JbmNsdWRlQXV0aG9yXSBePSB0cnVlXCc3ZCBePyAvIF46IFtFbXB0eV1cJzdkXCc3YltWYXJpYWJsZV9fSW5jbHVkZVR5cGlzdF0gXj0gdHJ1ZSBePyBbRE1TX19UeXBpc3RJRF0gXjogW0VtcHR5XVwnN2RcJzdkIF46IFtEb2N1bWVudF9fRnVsbE5hbWVdXCdhNlwnYTZUcnVlXCdhNjBcJ2E2XCdhNjBcJ2E2MFwnYTYxXCdhNlwnYTZcJ2E2RmFsc2VcJ2E2MVwnYTZGYWxzZVwnYTZcJ2E2MVwnYTYxXCdhNlwnYTZcJ2E2MHxcJ2NjXCdjZFJlc2VydmVkPW1wdjgxODg5NDU3MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwnY2NcJ2NkVGVtcElEPTENCn19e1wqXGRvY3ZhciB7enptcDEwTGFzdFRyYWlsZXJJbnNlcnRlZH17XmB+I21wIUBjPysjPz8/NTNcJzgweD83bWQxZDBoXCdiNGBcJ2QxP1wnZDJwXCc5YT8gP1wnY2U/XCdjZFwnZTQ/XCdlNT8hMz8/XCdjNVwnOGU/LD9cJ2QwXCc4MFwnZDEgQFwnYzhcJ2QzZzA/XCdhZj8/P24/XCdjMUsmPlwnM2JYOVVLUUk4XjAxMX19DQp7XCpcZG9jdmFyIHt6em1wMTBMYXN0VHJhaWxlckluc2VydGVkXzEwNzh9e15gfiNtcCFAYz8rIz8/PzUzXCc4MHg/N21kMWQwaFwnYjRgXCdkMT9cJ2QycFwnOWE/ID9cJ2NlP1wnY2RcJ2U0P1wnZTU/ITM/P1wnYzVcJzhlPyw/XCdkMFwnODBcJ2QxIEBcJ2M4XCdkM2cwP1wnYWY/Pz9uP1wnYzFLJj5cJzNiWDlVS1FJOF4wMTF9fXtcKlxmdG5zZXAgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyDQpccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IFxjaGZ0bnNlcCANClxwYXIgfX17XCpcZnRuc2VwYyBcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggXGNoZnRuc2VwYyANClxwYXIgfX17XCpcYWZ0bnNlcCBcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggXGNoZnRuc2VwIA0KXHBhciB9fXtcKlxhZnRuc2VwYyBcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggXGNoZnRuc2VwYyANClxwYXIgfX1cbHRycGFyIFxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtcaGVhZGVyciBcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJcczIzXHFyIFxsaTBccmkwXHdpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ5NDQ2NzUgXHJ0bGNoXGZjczEgDQpcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDM0MzgwNzggRXhlY3V0aW9uIENvcHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDk0NDY3NSANClxwYXIgfX17XGZvb3RlcnIgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHMyMlxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMTZcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczE2XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI5MTMxNDMge1xzaHB7XCpcc2hwaW5zdFxzaHBsZWZ0MFxzaHB0b3AwXHNocHJpZ2h0NDAzMlxzaHBib3R0b200MDNcc2hwZmhkcjFcc2hwYnhtYXJnaW5cc2hwYnhpZ25vcmVcc2hwYnlwYXJhXHNocGJ5aWdub3JlXHNocHdyM1xzaHB3cmswXHNocGZibHd0eHQwXHNocHoxXHNocGxpZDIyMjYNCntcc3B7XHNuIHNoYXBlVHlwZX17XHN2IDIwMn19e1xzcHtcc24gZkZsaXBIfXtcc3YgMH19e1xzcHtcc24gZkZsaXBWfXtcc3YgMH19e1xzcHtcc24gbFR4aWR9e1xzdiA2NTUzNn19e1xzcHtcc24gZHhUZXh0TGVmdH17XHN2IDB9fXtcc3B7XHNuIGR5VGV4dFRvcH17XHN2IDB9fXtcc3B7XHNuIGR4VGV4dFJpZ2h0fXtcc3YgMH19e1xzcHtcc24gZHlUZXh0Qm90dG9tfXtcc3YgMH19e1xzcHtcc24gaHNwTmV4dH17XHN2IDIyMjZ9fQ0Ke1xzcHtcc24gZkZpdFNoYXBlVG9UZXh0fXtcc3YgMX19e1xzcHtcc24gZkZpbGxlZH17XHN2IDB9fXtcc3B7XHNuIGZMaW5lfXtcc3YgMH19e1xzcHtcc24gd3pOYW1lfXtcc3YgenptcFRyYWlsZXJfMTA3OF8yfX17XHNwe1xzbiBwb3NyZWxofXtcc3YgMH19e1xzcHtcc24gZGhndH17XHN2IDI1MTY1MjA5Nn19e1xzcHtcc24gZlBzZXVkb0lubGluZX17XHN2IDB9fXtcc3B7XHNuIGZMYXlvdXRJbkNlbGx9e1xzdiAxfX17XHNocHR4dCANClxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxzNDlccWwgXGxpMFxyaTBcc2wtMjAwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBPSFNVU0E6NzU4Mjk2NjcyLjEwIA0KXHBhciANClxwYXIgfX19e1xzaHByc2x0e1wqXGRvXGRvYnhtYXJnaW5cZG9ieXBhcmFcZG9kaGd0ODE5M1xkcHR4YnhcZHB0eGxydGJ7XGRwdHhieHRleHRcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJcczQ5XHFsIFxsaTBccmkwXHNsLTIwMFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjJcYWxhbmcxMDI1IA0KXGx0cmNoXGZjczAgXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggT0hTVVNBOjc1ODI5NjY3Mi4xMCANClxwYXIgDQpccGFyIH19XGRweDBcZHB5MFxkcHhzaXplNDAzMlxkcHlzaXplNDAwXGRwZmlsbGZnY3IyNTVcZHBmaWxsZmdjZzI1NVxkcGZpbGxmZ2NiMjU1XGRwZmlsbGJnY3IyNTVcZHBmaWxsYmdjZzI1NVxkcGZpbGxiZ2NiMjU1XGRwZmlsbHBhdDBcZHBsaW5laG9sbG93fX19fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANClxwYXIgfX17XGZvb3RlcmYgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHMyMlxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMTZcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczE2XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI5MTMxNDMge1xzaHB7XCpcc2hwaW5zdFxzaHBsZWZ0MFxzaHB0b3AwXHNocHJpZ2h0NDAzMlxzaHBib3R0b200MDNcc2hwZmhkcjFcc2hwYnhtYXJnaW5cc2hwYnhpZ25vcmVcc2hwYnlwYXJhXHNocGJ5aWdub3JlXHNocHdyM1xzaHB3cmswXHNocGZibHd0eHQwXHNocHowXHNocGxpZDIyMjcNCntcc3B7XHNuIHNoYXBlVHlwZX17XHN2IDIwMn19e1xzcHtcc24gZkZsaXBIfXtcc3YgMH19e1xzcHtcc24gZkZsaXBWfXtcc3YgMH19e1xzcHtcc24gbFR4aWR9e1xzdiAxMzEwNzJ9fXtcc3B7XHNuIGR4VGV4dExlZnR9e1xzdiAwfX17XHNwe1xzbiBkeVRleHRUb3B9e1xzdiAwfX17XHNwe1xzbiBkeFRleHRSaWdodH17XHN2IDB9fXtcc3B7XHNuIGR5VGV4dEJvdHRvbX17XHN2IDB9fXtcc3B7XHNuIGhzcE5leHR9e1xzdiAyMjI3fX0NCntcc3B7XHNuIGZGaXRTaGFwZVRvVGV4dH17XHN2IDF9fXtcc3B7XHNuIGZGaWxsZWR9e1xzdiAwfX17XHNwe1xzbiBmTGluZX17XHN2IDB9fXtcc3B7XHNuIHd6TmFtZX17XHN2IHp6bXBUcmFpbGVyXzEwNzhfMX19e1xzcHtcc24gcG9zcmVsaH17XHN2IDB9fXtcc3B7XHNuIGRoZ3R9e1xzdiAyNTE2NTEwNzJ9fXtcc3B7XHNuIGZQc2V1ZG9JbmxpbmV9e1xzdiAwfX17XHNwe1xzbiBmTGF5b3V0SW5DZWxsfXtcc3YgMX19e1xzaHB0eHQgDQpcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJcczQ5XHFsIFxsaTBccmkwXHNsLTIwMFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczE2XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggT0hTVVNBOjc1ODI5NjY3Mi4xMCANClxwYXIgDQpccGFyIH19fXtcc2hwcnNsdHtcKlxkb1xkb2J4bWFyZ2luXGRvYnlwYXJhXGRvZGhndDgxOTJcZHB0eGJ4XGRwdHhscnRie1xkcHR4Ynh0ZXh0XGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHM0OVxxbCBcbGkwXHJpMFxzbC0yMDBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIyXGFsYW5nMTAyNSANClxsdHJjaFxmY3MwIFxmczE2XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IE9IU1VTQTo3NTgyOTY2NzIuMTAgDQpccGFyIA0KXHBhciB9fVxkcHgwXGRweTBcZHB4c2l6ZTQwMzJcZHB5c2l6ZTQwM1xkcGZpbGxmZ2NyMjU1XGRwZmlsbGZnY2cyNTVcZHBmaWxsZmdjYjI1NVxkcGZpbGxiZ2NyMjU1XGRwZmlsbGJnY2cyNTVcZHBmaWxsYmdjYjI1NVxkcGZpbGxwYXQwXGRwbGluZWhvbGxvd319fX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQpccGFyIH19e1wqXHBuc2VjbHZsMVxwbnVjcm1ccG5zdGFydDFccG5pbmRlbnQ3MjBccG5oYW5nIHtccG50eHRhIC59fXtcKlxwbnNlY2x2bDJccG51Y2x0clxwbnN0YXJ0MVxwbmluZGVudDcyMFxwbmhhbmcge1xwbnR4dGEgLn19e1wqXHBuc2VjbHZsM1xwbmRlY1xwbnN0YXJ0MVxwbmluZGVudDcyMFxwbmhhbmcge1xwbnR4dGEgLn19e1wqXHBuc2VjbHZsNFxwbmxjbHRyXHBuc3RhcnQxXHBuaW5kZW50NzIwXHBuaGFuZyB7XHBudHh0YSApfX0NCntcKlxwbnNlY2x2bDVccG5kZWNccG5zdGFydDFccG5pbmRlbnQ3MjBccG5oYW5nIHtccG50eHRiICh9e1xwbnR4dGEgKX19e1wqXHBuc2VjbHZsNlxwbmxjbHRyXHBuc3RhcnQxXHBuaW5kZW50NzIwXHBuaGFuZyB7XHBudHh0YiAofXtccG50eHRhICl9fXtcKlxwbnNlY2x2bDdccG5sY3JtXHBuc3RhcnQxXHBuaW5kZW50NzIwXHBuaGFuZyB7XHBudHh0YiAofXtccG50eHRhICl9fXtcKlxwbnNlY2x2bDgNClxwbmxjbHRyXHBuc3RhcnQxXHBuaW5kZW50NzIwXHBuaGFuZyB7XHBudHh0YiAofXtccG50eHRhICl9fXtcKlxwbnNlY2x2bDlccG5sY3JtXHBuc3RhcnQxXHBuaW5kZW50NzIwXHBuaGFuZyB7XHBudHh0YiAofXtccG50eHRhICl9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzMjVccWMgXGxpMFxyaTBcc2EzMDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFmMVxhZnMzMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGtlcm5pbmcyOFxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiB7XCpcYmtta3N0YXJ0IF9Hb0JhY2t9e1wqXGJrbWtlbmQgX0dvQmFja30NClxwYXIgDQpccGFyIA0KXHBhciANClxwYXIgfVxwYXJkIFxsdHJwYXJcczI1XHFjIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkNTkwODM4IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxzY2Fwc1xmNDJcaW5zcnNpZDQ1MzIyMzYgUmlzaW5nIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcc2NhcHNcZjQyXGluc3JzaWQxMDc2MTQ4OCANClRyZWV9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHNjYXBzXGY0MlxpbnNyc2lkNTkwODM4XGNoYXJyc2lkNTkwODM4IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHNjYXBzXGY0MlxpbnNyc2lkNTkxODMyOSBTaGFyZWQgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcc2NhcHNcZjQyXGluc3JzaWQ0NTMyMjM2ICB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHNjYXBzXGY0MlxpbnNyc2lkNTkxODMyOSBBZ3JlZW1lbnRcbGluZSBcbGluZSBcbGluZSBcbGluZSBCeSBhbmQgQW1vbmdcbGluZSBcbGluZSBcbGluZSANClxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcc2NhcHNcZjQyXGluc3JzaWQ0NTMyMjM2IFJpc2luZyB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHNjYXBzXGY0MlxpbnNyc2lkMTA3NjE0ODggVHJlZSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHNjYXBzXGY0MlxpbnNyc2lkNTkxODMyOSBXaW5kIEZhcm0gTH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZjQyXGluc3JzaWQ1OTE4MzI5IExDfQ0Ke1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGY0MlxpbnNyc2lkMjc2MTI5NyANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxzY2Fwc1xmNDJcaW5zcnNpZDU5MTgzMjkgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxzY2Fwc1xmNDJcaW5zcnNpZDQ1MzIyMzYgUmlzaW5nIFRyZWV9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHNjYXBzXGY0MlxpbnNyc2lkNTkxODMyOSAgV2luZCBGYXJtIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZjQyXGluc3JzaWQ0NTMyMjM2IElJfXsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHNjYXBzXGY0MlxpbnNyc2lkNDUzMjIzNiAgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxjYXBzXGY0MlxpbnNyc2lkNTkxODMyOSBMbGN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGNhcHNcZjQyXGluc3JzaWQyNzYxMjk3IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGNhcHNcZjQyXGluc3JzaWQ1OTE4MzI5IFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcc2NhcHNcZjQyXGluc3JzaWQ1OTE4MzI5IGFuZH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcc2NhcHNcZjQyXGluc3JzaWQyNzYxMjk3IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHNjYXBzXGY0MlxpbnNyc2lkNTkxODMyOSBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHNjYXBzXGY0MlxpbnNyc2lkNDUzMjIzNiBSaXNpbmcgVHJlZX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcc2NhcHNcZjQyXGluc3JzaWQ1OTE4MzI5ICBXaW5kIEZhcm0gfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxmNDJcaW5zcnNpZDQ1MzIyMzYgSUlJIH0NCntccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxzY2Fwc1xmNDJcaW5zcnNpZDU5MTgzMjkgTH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcY2Fwc1xmNDJcaW5zcnNpZDU5MTgzMjkgTEN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHNjYXBzXGY0MlxpbnNyc2lkNTkxODMyOSBcbGluZSBcbGluZSBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHNjYXBzXGY0MlxpbnNyc2lkNzc0NjY5MiANCkV4ZWN1dGVkIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcc2NhcHNcZjQyXGluc3JzaWQxMTgyNjg2NiBhcyBvZn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDc3NDY2OTIgIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcc2NhcHNcZjQyXGluc3JzaWQ3NzQ2NjkyIERlY2VtYmVyIDMsfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTAxOTA0NTYgIH17XHJ0bGNoXGZjczEgDQpcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDUzMjIzNiAyMDE0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkwODM4IA0KXHBhciB9XHBhcmQgXGx0cnBhclxzMjVccWwgXGxpMFxyaTBcc2EzMDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDIxNzY3MzYgXHNlY3QgfVxzZWN0ZCBcbHRyc2VjdFxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtcaGVhZGVyciBcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJcczIzXHFsIFxsaTBccmkwXHdpZGN0bHBhcg0KXHRxY1x0eDQ2ODBcdHFyXHR4OTM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDE1Njg0NTk3IA0KDQpccGFyIH19e1xmb290ZXJyIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxzMjJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHRxY1x0eDQ2ODBcdHFyXHR4OTM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczE2XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IA0KXHBhciBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcZnMyNFxpbnNyc2lkMzQzODA3OCAtfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcY3MyNFxmczI0XGluc3JzaWQzNDM4MDc4ICBQQUdFIH19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxjczI0XGZzMjRcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ3MzU3NTAyIA0KMzh9fX1cc2VjdGQgXGx0cnNlY3RcbGluZXgwXGVuZG5oZXJlXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxjczI0XGZzMjRcaW5zcnNpZDM0MzgwNzggLX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDI5MTMxNDMgDQp7XHNocHtcKlxzaHBpbnN0XHNocGxlZnQwXHNocHRvcDBcc2hwcmlnaHQ0MDMyXHNocGJvdHRvbTQwM1xzaHBmaGRyMVxzaHBieG1hcmdpblxzaHBieGlnbm9yZVxzaHBieXBhcmFcc2hwYnlpZ25vcmVcc2hwd3IzXHNocHdyazBcc2hwZmJsd3R4dDBcc2hwejJcc2hwbGlkMjIyOHtcc3B7XHNuIHNoYXBlVHlwZX17XHN2IDIwMn19e1xzcHtcc24gZkZsaXBIfXtcc3YgMH19e1xzcHtcc24gZkZsaXBWfXtcc3YgMH19DQp7XHNwe1xzbiBsVHhpZH17XHN2IDE5NjYwOH19e1xzcHtcc24gZHhUZXh0TGVmdH17XHN2IDB9fXtcc3B7XHNuIGR5VGV4dFRvcH17XHN2IDB9fXtcc3B7XHNuIGR4VGV4dFJpZ2h0fXtcc3YgMH19e1xzcHtcc24gZHlUZXh0Qm90dG9tfXtcc3YgMH19e1xzcHtcc24gaHNwTmV4dH17XHN2IDIyMjh9fXtcc3B7XHNuIGZGaXRTaGFwZVRvVGV4dH17XHN2IDF9fXtcc3B7XHNuIGZGaWxsZWR9e1xzdiAwfX17XHNwe1xzbiBmTGluZX17XHN2IDB9fQ0Ke1xzcHtcc24gd3pOYW1lfXtcc3YgenptcFRyYWlsZXJfMTA3OF80fX17XHNwe1xzbiBwb3NyZWxofXtcc3YgMH19e1xzcHtcc24gZGhndH17XHN2IDI1MTY1MzEyMH19e1xzcHtcc24gZlBzZXVkb0lubGluZX17XHN2IDB9fXtcc3B7XHNuIGZMYXlvdXRJbkNlbGx9e1xzdiAxfX17XHNocHR4dCBcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJcczQ5XHFsIFxsaTBccmkwXHNsLTIwMFxzbG11bHQwDQpcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggT0hTVVNBOjc1ODI5NjY3Mi4xMCANClxwYXIgDQpccGFyIH19fXtcc2hwcnNsdHtcKlxkb1xkb2J4bWFyZ2luXGRvYnlwYXJhXGRvZGhndDgxOTRcZHB0eGJ4XGRwdHhscnRie1xkcHR4Ynh0ZXh0XGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHM0OVxxbCBcbGkwXHJpMFxzbC0yMDBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIyXGFsYW5nMTAyNSANClxsdHJjaFxmY3MwIFxmczE2XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IE9IU1VTQTo3NTgyOTY2NzIuMTAgDQpccGFyIA0KXHBhciB9fVxkcHgwXGRweTBcZHB4c2l6ZTQwMzJcZHB5c2l6ZTQwM1xkcGZpbGxmZ2NyMjU1XGRwZmlsbGZnY2cyNTVcZHBmaWxsZmdjYjI1NVxkcGZpbGxiZ2NyMjU1XGRwZmlsbGJnY2cyNTVcZHBmaWxsYmdjYjI1NVxkcGZpbGxwYXQwXGRwbGluZWhvbGxvd319fX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcZnMyNFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDc4NjU1MzMgDQpccGFyIH19e1xoZWFkZXJmIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxzMjNccWwgXGxpMFxyaTBcd2lkY3RscGFyXHRxY1x0eDQ2ODBcdHFyXHR4OTM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IA0KXHBhciB9fXtcZm9vdGVyZiBcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJcczIyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMxNlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjkxMzE0MyB7XHNocHtcKlxzaHBpbnN0XHNocGxlZnQwXHNocHRvcDBcc2hwcmlnaHQ0MDMyXHNocGJvdHRvbTQwM1xzaHBmaGRyMVxzaHBieG1hcmdpblxzaHBieGlnbm9yZVxzaHBieXBhcmFcc2hwYnlpZ25vcmVcc2hwd3IzXHNocHdyazBcc2hwZmJsd3R4dDBcc2hwejNcc2hwbGlkMjIyOQ0Ke1xzcHtcc24gc2hhcGVUeXBlfXtcc3YgMjAyfX17XHNwe1xzbiBmRmxpcEh9e1xzdiAwfX17XHNwe1xzbiBmRmxpcFZ9e1xzdiAwfX17XHNwe1xzbiBsVHhpZH17XHN2IDI2MjE0NH19e1xzcHtcc24gZHhUZXh0TGVmdH17XHN2IDB9fXtcc3B7XHNuIGR5VGV4dFRvcH17XHN2IDB9fXtcc3B7XHNuIGR4VGV4dFJpZ2h0fXtcc3YgMH19e1xzcHtcc24gZHlUZXh0Qm90dG9tfXtcc3YgMH19e1xzcHtcc24gaHNwTmV4dH17XHN2IDIyMjl9fQ0Ke1xzcHtcc24gZkZpdFNoYXBlVG9UZXh0fXtcc3YgMX19e1xzcHtcc24gZkZpbGxlZH17XHN2IDB9fXtcc3B7XHNuIGZMaW5lfXtcc3YgMH19e1xzcHtcc24gd3pOYW1lfXtcc3YgenptcFRyYWlsZXJfMTA3OF8zfX17XHNwe1xzbiBwb3NyZWxofXtcc3YgMH19e1xzcHtcc24gZGhndH17XHN2IDI1MTY1NDE0NH19e1xzcHtcc24gZlBzZXVkb0lubGluZX17XHN2IDB9fXtcc3B7XHNuIGZMYXlvdXRJbkNlbGx9e1xzdiAxfX17XHNocHR4dCANClxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxzNDlccWwgXGxpMFxyaTBcc2wtMjAwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBPSFNVU0E6NzU4Mjk2NjcyLjEwIA0KXHBhciANClxwYXIgfX19e1xzaHByc2x0e1wqXGRvXGRvYnhtYXJnaW5cZG9ieXBhcmFcZG9kaGd0ODE5NVxkcHR4YnhcZHB0eGxydGJ7XGRwdHhieHRleHRcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJcczQ5XHFsIFxsaTBccmkwXHNsLTIwMFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjJcYWxhbmcxMDI1IA0KXGx0cmNoXGZjczAgXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggT0hTVVNBOjc1ODI5NjY3Mi4xMCANClxwYXIgDQpccGFyIH19XGRweDBcZHB5MFxkcHhzaXplNDAzMlxkcHlzaXplNDAwXGRwZmlsbGZnY3IyNTVcZHBmaWxsZmdjZzI1NVxkcGZpbGxmZ2NiMjU1XGRwZmlsbGJnY3IyNTVcZHBmaWxsYmdjZzI1NVxkcGZpbGxiZ2NiMjU1XGRwZmlsbHBhdDBcZHBsaW5laG9sbG93fX19fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANClxwYXIgfX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyNVxxYyBcbGkwXHJpMFxzYTMwMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWYxXGFmczMyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNca2VybmluZzI4XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFRhYmxlIG9mIENvbnRlbnRzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczMxXHFsIFxmaS0xNzY3XGxpMTc2N1xyaTBcc2IxODBcd2lkY3RscGFyXHR4MTc2N1x0cXJcdGxkb3RcdHg5MzUwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNzY3XGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQp7XGZpZWxkXGZsZGVkaXR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIFRPQyBcXGYgXFx6IFxcdCAiSGVhZGluZyAxLDEsSGVhZGluZyAyLDIiIH19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IEFSVElDTEUgSSBERUZJTklUSU9OUywgSU5URVJQUkVUQVRJT05TIEFORCBFWEhJQklUU317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0ICBQQUdFUkVGIF9Ub2M0MDQwMTMyNzYgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQyOTEzMTQzIHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMjAwMzcwMDM2MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDczNTc1MDIgNX19fVxzZWN0ZCBcbHRyc2VjdFxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMzMlxxbCBcbGkyNDBccmkwXHdpZGN0bHBhclx0eDE3NjdcdHFyXHRsZG90XHR4OTM1MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMjQwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgMS4xfXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgRGVmaW5pdGlvbnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgDQogUEFHRVJFRiBfVG9jNDA0MDEzMjc3IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMyMDAzNzAwMzcwMDAwMDB9fX17XGZsZHJzbHQgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiA2fX19XHNlY3RkIFxsdHJzZWN0XHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSAxLjJ9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBJbnRlcnByZXRhdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCANCiBQQUdFUkVGIF9Ub2M0MDQwMTMyNzggXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMjkxMzE0MyB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzIwMDM3MDAzODAwMDAwMH19fXtcZmxkcnNsdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ3MzU3NTAyIDZ9fX1cc2VjdGQgXGx0cnNlY3RccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDEuM317XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IEluY29ycG9yYXRpb24gb2YgUmVjaXRhbHMgYW5kIEV4aGliaXRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzI3OSBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQyOTEzMTQzIHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMyMDAzNzAwMzkwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDczNTc1MDIgNn19fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMzMVxxbCBcZmktMTc2N1xsaTE3NjdccmkwXHNiMTgwXHdpZGN0bHBhclx0eDE3NjdcdHFyXHRsZG90XHR4OTM1MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTc2N1xpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0Ke1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgQVJUSUNMRSBJSSBURVJNIE9GIEFHUkVFTUVOVH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0ICBQQUdFUkVGIF9Ub2M0MDQwMTMyODAgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMjkxMzE0MyB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMjAwMzgwMDMwMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ3MzU3NTAyIDZ9fX1cc2VjdGQgXGx0cnNlY3QNClxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMzJccWwgXGxpMjQwXHJpMFx3aWRjdGxwYXJcdHgxNzY3XHRxclx0bGRvdFx0eDkzNTBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjI0MFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDIuMX17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFRlcm19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgDQogUEFHRVJFRiBfVG9jNDA0MDEzMjgxIFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMyMDAzODAwMzEwMDAwMDB9fX17XGZsZHJzbHQgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiA2fX19XHNlY3RkIFxsdHJzZWN0XHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSAyLjJ9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBQYXltZW50cyBvbiBUZXJtaW5hdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCANCiBQQUdFUkVGIF9Ub2M0MDQwMTMyODIgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMjkxMzE0MyB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzIwMDM4MDAzMjAwMDAwMH19fXtcZmxkcnNsdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ3MzU3NTAyIDZ9fX1cc2VjdGQgXGx0cnNlY3RccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDIuM317XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFN1cnZpdmFsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IA0KIFBBR0VSRUYgX1RvYzQwNDAxMzI4MyBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQyOTEzMTQzIHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMjAwMzgwMDMzMDAwMDAwfX19e1xmbGRyc2x0IHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDczNTc1MDIgN319fVxzZWN0ZCBcbHRyc2VjdFxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMzMVxxbCBcZmktMTc2N1xsaTE3NjdccmkwXHNiMTgwXHdpZGN0bHBhclx0eDE3NjdcdHFyXHRsZG90XHR4OTM1MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTc2N1xpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0Ke1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgQVJUSUNMRSBJSUkgU0hBUkVEIEZBQ0lMSVRJRVMgQU5EIFJFQUwgUFJPUEVSVFl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMjg0IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzIwMDM4MDAzNDAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiA3fX19XHNlY3RkIFxsdHJzZWN0DQpccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczMyXHFsIFxsaTI0MFxyaTBcd2lkY3RscGFyXHR4MTc2N1x0cXJcdGxkb3RcdHg5MzUwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4yNDBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSAzLjF9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBEZWNsYXJhdGlvbiBvZiBJbnRlbnRpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IC4gIC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfQ0Ke1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMjg1IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzIwMDM4MDAzNTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiA3fX19XHNlY3RkIFxsdHJzZWN0DQpccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSAzLjJ9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBTaGFyZWQgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCANCiBQQUdFUkVGIF9Ub2M0MDQwMTMyODYgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMjkxMzE0MyB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzIwMDM4MDAzNjAwMDAwMH19fXtcZmxkcnNsdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ3MzU3NTAyIDd9fX1cc2VjdGQgXGx0cnNlY3RccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDMuM317XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFNoYXJlZCBSZWFsIFByb3BlcnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IA0KIFBBR0VSRUYgX1RvYzQwNDAxMzI4NyBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQyOTEzMTQzIHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMjAwMzgwMDM3MDAwMDAwfX19e1xmbGRyc2x0IHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDczNTc1MDIgN319fVxzZWN0ZCBcbHRyc2VjdFxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgMy40fXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgU2hhcmVkIEFzc2V0cyBHcm91cHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgDQogUEFHRVJFRiBfVG9jNDA0MDEzMjg4IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMyMDAzODAwMzgwMDAwMDB9fX17XGZsZHJzbHQgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiA3fX19XHNlY3RkIFxsdHJzZWN0XHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSAzLjV9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBBY2Nlc3N9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgDQogUEFHRVJFRiBfVG9jNDA0MDEzMjg5IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMyMDAzODAwMzkwMDAwMDB9fX17XGZsZHJzbHQgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiA4fX19XHNlY3RkIFxsdHJzZWN0XHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSAzLjZ9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBTaGFyZWQgUGVybWl0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgLiAgLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9DQp7XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0ICBQQUdFUkVGIF9Ub2M0MDQwMTMyOTAgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMjkxMzE0MyB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMjAwMzkwMDMwMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ3MzU3NTAyIDh9fX1cc2VjdGQgXGx0cnNlY3QNClxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMzFccWwgXGZpLTE3NjdcbGkxNzY3XHJpMFxzYjE4MFx3aWRjdGxwYXJcdHgxNzY3XHRxclx0bGRvdFx0eDkzNTBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE3NjdcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANCntccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IEFSVElDTEUgSVYgQ09OU1RSVUNUSU9OIEFORCBPV05FUlNISVAgT0YgQU5EIFJJR0hUIFRPIFVTRSBTSEFSRUQgQVNTRVRTfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzI5MSBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQyOTEzMTQzIHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMyMDAzOTAwMzEwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDczNTc1MDIgOX19fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMzMlxxbCBcbGkyNDBccmkwXHdpZGN0bHBhclx0eDE3NjdcdHFyXHRsZG90XHR4OTM1MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMjQwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgNC4xfXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgVW5kaXZpZGVkIE93bmVyc2hpcCBJbnRlcmVzdHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMjkyIFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzIwMDM5MDAzMjAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiA5fX19XHNlY3RkIFxsdHJzZWN0DQpccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSA0LjJ9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBVbmRpdmlkZWQgVXNlIEludGVyZXN0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCANCiBQQUdFUkVGIF9Ub2M0MDQwMTMyOTMgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMjkxMzE0MyB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzIwMDM5MDAzMzAwMDAwMH19fXtcZmxkcnNsdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ3MzU3NTAyIDl9fX1cc2VjdGQgXGx0cnNlY3RccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDQuM317XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IENvbnN0cnVjdGlvbjsgUmVpbWJ1cnNlbWVudCBvZiBDb3N0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0ICBQQUdFUkVGIF9Ub2M0MDQwMTMyOTQgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMjkxMzE0MyB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMjAwMzkwMDM0MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ3MzU3NTAyIDEwfX19XHNlY3RkIFxsdHJzZWN0DQpccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSA0LjR9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBBZGRpdGlvbmFsIFBoYXNlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCANCiBQQUdFUkVGIF9Ub2M0MDQwMTMyOTUgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMjkxMzE0MyB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzIwMDM5MDAzNTAwMDAwMH19fXtcZmxkcnNsdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ3MzU3NTAyIDEyfX19XHNlY3RkIFxsdHJzZWN0XHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSA0LjV9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBBZGRpdGlvbmFsIFNoYXJlZCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzI5NiBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQyOTEzMTQzIHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMyMDAzOTAwMzYwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDczNTc1MDIgMTJ9fX1cc2VjdGQgXGx0cnNlY3QNClxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDQuNn17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IE5vIEFkZGl0aW9uYWwgQ28tT3duZXJzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IA0KIFBBR0VSRUYgX1RvYzQwNDAxMzI5NyBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQyOTEzMTQzIHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMjAwMzkwMDM3MDAwMDAwfX19e1xmbGRyc2x0IHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDczNTc1MDIgMTN9fX1cc2VjdGQgXGx0cnNlY3RccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMzFccWwgXGZpLTE3NjdcbGkxNzY3XHJpMFxzYjE4MFx3aWRjdGxwYXJcdHgxNzY3XHRxclx0bGRvdFx0eDkzNTBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE3NjdcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANCntccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IEFSVElDTEUgViBNRVRFUklORywgTUVBU1VSRU1FTlQgT0YgRU5FUkdZIERFTElWRVJJRVMgQU5EIExPU1NFU317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0ICBQQUdFUkVGIF9Ub2M0MDQwMTMyOTggXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMjkxMzE0MyB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMjAwMzkwMDM4MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ3MzU3NTAyIDEzfX19XHNlY3RkIFxsdHJzZWN0DQpccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczMyXHFsIFxsaTI0MFxyaTBcd2lkY3RscGFyXHR4MTc2N1x0cXJcdGxkb3RcdHg5MzUwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4yNDBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSA1LjF9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBNZWFzdXJlbWVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCANCiBQQUdFUkVGIF9Ub2M0MDQwMTMyOTkgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMjkxMzE0MyB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzIwMDM5MDAzOTAwMDAwMH19fXtcZmxkcnNsdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ3MzU3NTAyIDEzfX19XHNlY3RkIFxsdHJzZWN0XHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSA1LjJ9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBMb3NzZXMgb24gVHJhbnNtaXNzaW9uIExpbmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzAwIFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDMwMDAzMDAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiAxM319fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgNS4zfXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgTWV0ZXIgVGVzdGluZyBhbmQgUmVwYWlyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzMwMSBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQyOTEzMTQzIHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzMDAwMzEwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDczNTc1MDIgMTN9fX1cc2VjdGQgXGx0cnNlY3QNClxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMzFccWwgXGZpLTE3NjdcbGkxNzY3XHJpMFxzYjE4MFx3aWRjdGxwYXJcdHgxNzY3XHRxclx0bGRvdFx0eDkzNTBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE3NjdcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANCntccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IEFSVElDTEUgVkkgT1BFUkFUSU9OIEFORCBNQUlOVEVOQU5DRSBPRiBTSEFSRUQgRkFDSUxJVElFUy59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzAyIFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDMwMDAzMjAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiAxNH19fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMzMlxxbCBcbGkyNDBccmkwXHdpZGN0bHBhclx0eDE3NjdcdHFyXHRsZG90XHR4OTM1MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMjQwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgNi4xfXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgRW5nYWdlbWVudCBvZiBPcGVyYXRvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCANCiBQQUdFUkVGIF9Ub2M0MDQwMTMzMDMgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMjkxMzE0MyB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDMwMDAzMzAwMDAwMH19fXtcZmxkcnNsdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ3MzU3NTAyIDE0fX19XHNlY3RkIFxsdHJzZWN0XHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSA2LjJ9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBTdGFuZGFyZHMgZm9yIE9wZXJhdG9yXHJxdW90ZSBzIFBlcmZvcm1hbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzMwNCBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQyOTEzMTQzIHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzMDAwMzQwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDczNTc1MDIgMTR9fX1cc2VjdGQgXGx0cnNlY3QNClxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDYuM317XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IE8mTSBTZXJ2aWNlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCANCiBQQUdFUkVGIF9Ub2M0MDQwMTMzMDUgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMjkxMzE0MyB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDMwMDAzNTAwMDAwMH19fXtcZmxkcnNsdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ3MzU3NTAyIDE0fX19XHNlY3RkIFxsdHJzZWN0XHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSA2LjR9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBTY2hlZHVsZWQgTWFpbnRlbmFuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgDQogUEFHRVJFRiBfVG9jNDA0MDEzMzA2IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzMDAwMzYwMDAwMDB9fX17XGZsZHJzbHQgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiAxNn19fVxzZWN0ZCBcbHRyc2VjdFxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgNi41fXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgVW5wbGFubmVkIE91dGFnZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgDQogUEFHRVJFRiBfVG9jNDA0MDEzMzA3IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzMDAwMzcwMDAwMDB9fX17XGZsZHJzbHQgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiAxNn19fVxzZWN0ZCBcbHRyc2VjdFxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgNi42fXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgRW1lcmdlbmN5IENvbmRpdGlvbnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgDQogUEFHRVJFRiBfVG9jNDA0MDEzMzA4IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzMDAwMzgwMDAwMDB9fX17XGZsZHJzbHQgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiAxNn19fVxzZWN0ZCBcbHRyc2VjdFxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgNi43fXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgTyZNIENvc3RzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IA0KIFBBR0VSRUYgX1RvYzQwNDAxMzMwOSBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQyOTEzMTQzIHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzAwMDM5MDAwMDAwfX19e1xmbGRyc2x0IHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDczNTc1MDIgMTZ9fX1cc2VjdGQgXGx0cnNlY3RccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDYuOH17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IEJ1ZGdldGluZyBQcm9jZXNzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IA0KIFBBR0VSRUYgX1RvYzQwNDAxMzMxMCBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQyOTEzMTQzIHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzEwMDMwMDAwMDAwfX19e1xmbGRyc2x0IHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDczNTc1MDIgMTZ9fX1cc2VjdGQgXGx0cnNlY3RccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDYuOX17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IEV4dHJhb3JkaW5hcnkgTWFpbnRlbmFuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzExIFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDMxMDAzMTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiAxN319fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgNi4xMH17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFJlc3BvbnNpYmlsaXR5IGZvciBPJk0gQ29zdHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzEyIFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDMxMDAzMjAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiAxN319fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgNi4xMX17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IEJvb2tzIGFuZCBSZWNvcmRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzMxMyBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQyOTEzMTQzIHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzMTAwMzMwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDczNTc1MDIgMTd9fX1cc2VjdGQgXGx0cnNlY3QNClxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDYuMTJ9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBEaXNwdXRlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCANCiBQQUdFUkVGIF9Ub2M0MDQwMTMzMTQgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMjkxMzE0MyB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDMxMDAzNDAwMDAwMH19fXtcZmxkcnNsdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ3MzU3NTAyIDE4fX19XHNlY3RkIFxsdHJzZWN0XHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSA2LjEzfXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgTm8gV2FpdmVyIG9mIFJpZ2h0IHRvIEF1ZGl0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzMxNSBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQyOTEzMTQzIHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzMTAwMzUwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDczNTc1MDIgMTh9fX1cc2VjdGQgXGx0cnNlY3QNClxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDYuMTR9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBPYmxpZ2F0aW9uc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCANCiBQQUdFUkVGIF9Ub2M0MDQwMTMzMTYgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMjkxMzE0MyB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDMxMDAzNjAwMDAwMH19fXtcZmxkcnNsdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ3MzU3NTAyIDE4fX19XHNlY3RkIFxsdHJzZWN0XHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSA2LjE1fXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgUmlzayBvZiBMb3NzOyBJbmRlbW5pdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzE3IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDMxMDAzNzAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiAxOH19fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgNi4xNn17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IExpbWl0YXRpb25zIG9uIE9wZXJhdG9yXHJxdW90ZSBzIEF1dGhvcml0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0ICBQQUdFUkVGIF9Ub2M0MDQwMTMzMTggXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMjkxMzE0MyB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzEwMDM4MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ3MzU3NTAyIDE5fX19XHNlY3RkIFxsdHJzZWN0DQpccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSA2LjE3fXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgUmVwbGFjZW1lbnQgb2YgT3BlcmF0b3IufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzMxOSBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQyOTEzMTQzIHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzMTAwMzkwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDczNTc1MDIgMTl9fX1cc2VjdGQgXGx0cnNlY3QNClxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMzFccWwgXGZpLTE3NjdcbGkxNzY3XHJpMFxzYjE4MFx3aWRjdGxwYXJcdHgxNzY3XHRxclx0bGRvdFx0eDkzNTBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE3NjdcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANCntccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IEFSVElDTEUgVklJIERBTUFHRSBUTywgREVTVFJVQ1RJT04gT1IgRkFJTFVSRSBPRiBTSEFSRUQgRkFDSUxJVElFU317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0ICBQQUdFUkVGIF9Ub2M0MDQwMTMzMjAgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMjkxMzE0MyB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzIwMDMwMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ3MzU3NTAyIDE5fX19XHNlY3RkIFxsdHJzZWN0DQpccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczMyXHFsIFxsaTI0MFxyaTBcd2lkY3RscGFyXHR4MTc2N1x0cXJcdGxkb3RcdHg5MzUwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4yNDBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSA3LjF9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBEYW1hZ2Ugb3IgRGVzdHJ1Y3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIA0KUEFHRVJFRiBfVG9jNDA0MDEzMzIxIFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzMjAwMzEwMDAwMDB9fX17XGZsZHJzbHQgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiAxOX19fVxzZWN0ZCBcbHRyc2VjdFxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMzMVxxbCBcZmktMTc2N1xsaTE3NjdccmkwXHNiMTgwXHdpZGN0bHBhclx0eDE3NjdcdHFyXHRsZG90XHR4OTM1MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTc2N1xpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0Ke1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgQVJUSUNMRSBWSUlJIENFU1NBVElPTiBPRiBPUEVSQVRJT05TIEJZIEEgQ08tT1dORVJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzIyIFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDMyMDAzMjAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiAyMH19fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMzMlxxbCBcbGkyNDBccmkwXHdpZGN0bHBhclx0eDE3NjdcdHFyXHRsZG90XHR4OTM1MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMjQwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgOC4xfXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgQ28tT3duZXIgQ2Vhc2luZyBPcGVyYXRpb25zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzMyMyBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQyOTEzMTQzIHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzMjAwMzMwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDczNTc1MDIgMjB9fX1cc2VjdGQgXGx0cnNlY3QNClxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDguMn17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IENvLU93bmVyIExhc3QgVXNpbmcgU2hhcmVkIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzI0IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDMyMDAzNDAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiAyMH19fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgOC4zfXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgUHJvY2VkdXJlIGZvciBUcmFuc2ZlciBieSBhIENvLU93bmVyIG9mIGl0cyBPd25lcnNoaXAgSW50ZXJlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IC4gIC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzI1IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMjkxMzE0MyB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDMyMDAzNTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ3MzU3NTAyIDIxfX19XHNlY3RkIFxsdHJzZWN0XHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSA4LjR9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBDaGFuZ2UgaW4gT3duZXJzaGlwIEludGVyZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzMyNiBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQyOTEzMTQzIHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzMjAwMzYwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDczNTc1MDIgMjF9fX1cc2VjdGQgXGx0cnNlY3QNClxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMzFccWwgXGZpLTE3NjdcbGkxNzY3XHJpMFxzYjE4MFx3aWRjdGxwYXJcdHgxNzY3XHRxclx0bGRvdFx0eDkzNTBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE3NjdcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANCntccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IEFSVElDTEUgSVggUkVMQVRJT05TSElQIE9GIE9QRVJBVE9SIEFORCBDTy1PV05FUlN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzI3IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDMyMDAzNzAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiAyMX19fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMzMlxxbCBcbGkyNDBccmkwXHdpZGN0bHBhclx0eDE3NjdcdHFyXHRsZG90XHR4OTM1MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMjQwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgOS4xfXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgQWN0aW9ucyBUYWtlbiBieSBPcGVyYXRvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0ICBQQUdFUkVGIF9Ub2M0MDQwMTMzMjggXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMjkxMzE0MyB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzIwMDM4MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ3MzU3NTAyIDIxfX19XHNlY3RkIFxsdHJzZWN0DQpccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSA5LjJ9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBMaW1pdGF0aW9ucyBvbiBPcGVyYXRvclxycXVvdGUgcyBBdXRob3JpdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzI5IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDMyMDAzOTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiAyMn19fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgOS4zfXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgQ29zdHMgYW5kIEV4cGVuc2VzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IA0KIFBBR0VSRUYgX1RvYzQwNDAxMzMzMCBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQyOTEzMTQzIHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzMwMDMwMDAwMDAwfX19e1xmbGRyc2x0IHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDczNTc1MDIgMjJ9fX1cc2VjdGQgXGx0cnNlY3RccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDkuNH17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IE9ibGlnYXRpb25zIHVuZGVyIFNoYXJlZCBSZWFsIFByb3BlcnR5IEFncmVlbWVudHM7IEV4ZXJjaXNlIG9mIE9wdGlvbnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzMxIFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDMzMDAzMTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiAyMn19fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgOS41fXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgQ29uc2VudCBvciBBcHByb3ZhbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCANCiBQQUdFUkVGIF9Ub2M0MDQwMTMzMzIgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMjkxMzE0MyB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDMzMDAzMjAwMDAwMH19fXtcZmxkcnNsdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ3MzU3NTAyIDIzfX19XHNlY3RkIFxsdHJzZWN0XHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSA5LjZ9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBDb25kZW1uYXRpb24gQXdhcmRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IA0KIFBBR0VSRUYgX1RvYzQwNDAxMzMzMyBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQyOTEzMTQzIHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzMwMDMzMDAwMDAwfX19e1xmbGRyc2x0IHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDczNTc1MDIgMjN9fX1cc2VjdGQgXGx0cnNlY3RccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDkuN317XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFRyYW5zZmVyIG9yIEVuY3VtYnJhbmNlIG9mIEludGVyZXN0IGluIFNoYXJlZCBBc3NldHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzM0IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDMzMDAzNDAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiAyM319fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgOS44fXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgQWRkaXRpb25hbCBDby1Pd25lciBSaWdodHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzM1IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDMzMDAzNTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiAyM319fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMzMVxxbCBcZmktMTc2N1xsaTE3NjdccmkwXHNiMTgwXHdpZGN0bHBhclx0eDE3NjdcdHFyXHRsZG90XHR4OTM1MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTc2N1xpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0Ke1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgQVJUSUNMRSBYIENPVkVOQU5UU317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0ICBQQUdFUkVGIF9Ub2M0MDQwMTMzMzYgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMjkxMzE0MyB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzMwMDM2MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ3MzU3NTAyIDI0fX19XHNlY3RkIFxsdHJzZWN0DQpccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczMyXHFsIFxsaTI0MFxyaTBcd2lkY3RscGFyXHR4MTc2N1x0cXJcdGxkb3RcdHg5MzUwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4yNDBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSAxMC4xfXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgTm8gSW50ZXJmZXJlbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDE2MTMxMTUxIC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzM3IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDMzMDAzNzAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiAyNH19fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgMTAuMn17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IEludGVyY29ubmVjdGlvbiBSaWdodHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IC4gIC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IA0KXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzM4IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDMzMDAzODAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiAyNH19fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgMTAuM317XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IEludGVyY29ubmVjdGlvbiBBZ3JlZW1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkMTYxMzExNTEgLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9DQp7XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0ICBQQUdFUkVGIF9Ub2M0MDQwMTMzMzkgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMjkxMzE0MyB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzMwMDM5MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ3MzU3NTAyIDI0fX19XHNlY3RkIFxsdHJzZWN0DQpccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSAxMC40fXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgU2hhcmVkIFJlYWwgUHJvcGVydHkgQWdyZWVtZW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQxNjEzMTE1MSAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSAufXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzM0MCBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzNDAwMzAwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiAyNH19fVxzZWN0ZCBcbHRyc2VjdFxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgMTAuNX17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IE5vIFdhc3RlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDE2MTMxMTUxIC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzQxIFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDM0MDAzMTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiAyNH19fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgMTAuNn17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IE5vIExpZW5zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDE2MTMxMTUxIC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzQyIFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDM0MDAzMjAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiAyNX19fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgMTAuN317XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFN0YW5kYXJkIG9mIFBlcmZvcm1hbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDE2MTMxMTUxIC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfQ0Ke1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzQzIFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDM0MDAzMzAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiAyNX19fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMzMVxxbCBcZmktMTc2N1xsaTE3NjdccmkwXHNiMTgwXHdpZGN0bHBhclx0eDE3NjdcdHFyXHRsZG90XHR4OTM1MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTc2N1xpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0Ke1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgQVJUSUNMRSBYSSBJTlNVUkFOQ0U7IFdBSVZFUn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0ICBQQUdFUkVGIF9Ub2M0MDQwMTMzNDQgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMjkxMzE0MyB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzQwMDM0MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ3MzU3NTAyIDI1fX19XHNlY3RkIFxsdHJzZWN0DQpccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczMyXHFsIFxsaTI0MFxyaTBcd2lkY3RscGFyXHR4MTc2N1x0cXJcdGxkb3RcdHg5MzUwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4yNDBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSAxMS4xfXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgSW5zdXJhbmNlIFJlc3BvbnNpYmlsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzQ1IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDM0MDAzNTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiAyNX19fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgMTEuMn17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFdhaXZlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCANCiBQQUdFUkVGIF9Ub2M0MDQwMTMzNDYgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMjkxMzE0MyB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDM0MDAzNjAwMDAwMH19fXtcZmxkcnNsdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ3MzU3NTAyIDI1fX19XHNlY3RkIFxsdHJzZWN0XHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczMxXHFsIFxmaS0xNzY3XGxpMTc2N1xyaTBcc2IxODBcd2lkY3RscGFyXHR4MTc2N1x0cXJcdGxkb3RcdHg5MzUwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNzY3XGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQp7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBBUlRJQ0xFIFhJSSBUQVhFU317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0ICBQQUdFUkVGIF9Ub2M0MDQwMTMzNDcgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMjkxMzE0MyB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzQwMDM3MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ3MzU3NTAyIDI1fX19XHNlY3RkIFxsdHJzZWN0DQpccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczMyXHFsIFxsaTI0MFxyaTBcd2lkY3RscGFyXHR4MTc2N1x0cXJcdGxkb3RcdHg5MzUwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4yNDBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSAxMi4xfXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgT3BlcmF0b3IgUGF5bWVudCBvZiBQcm9wZXJ0eSBUYXhlcyBhbmQgQXNzZXNzbWVudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzQ4IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDM0MDAzODAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiAyNX19fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgMTIuMn17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFJlaW1idXJzZW1lbnQgT2JsaWdhdGlvbnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzQ5IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDM0MDAzOTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiAyNn19fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgMTIuM317XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFRyYW5zZmVyIFRheGVzLCBTYWxlcyBhbmQgVXNlIFRheGVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzM1MCBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQyOTEzMTQzIHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzNTAwMzAwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDczNTc1MDIgMjZ9fX1cc2VjdGQgXGx0cnNlY3QNClxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDEyLjR9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBDb25zdHJ1Y3Rpb24gb2YgU2hhcmVkIEFzc2V0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQxNjEzMTE1MSAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH0NCntcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzM1MSBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQyOTEzMTQzIHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzNTAwMzEwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDczNTc1MDIgMjZ9fX1cc2VjdGQgXGx0cnNlY3QNClxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMzFccWwgXGZpLTE3NjdcbGkxNzY3XHJpMFxzYjE4MFx3aWRjdGxwYXJcdHgxNzY3XHRxclx0bGRvdFx0eDkzNTBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE3NjdcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANCntccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IEFSVElDTEUgWElJSSBFVkVOVFMgT0YgREVGQVVMVDsgUkVNRURJRVN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzUyIFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDM1MDAzMjAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiAyNn19fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMzMlxxbCBcbGkyNDBccmkwXHdpZGN0bHBhclx0eDE3NjdcdHFyXHRsZG90XHR4OTM1MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMjQwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgMTMuMX17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IERlZmF1bHRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IA0KIFBBR0VSRUYgX1RvYzQwNDAxMzM1MyBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQyOTEzMTQzIHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzUwMDMzMDAwMDAwfX19e1xmbGRyc2x0IHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDczNTc1MDIgMjZ9fX1cc2VjdGQgXGx0cnNlY3RccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDEzLjJ9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBSZW1lZGllcyBVcG9uIERlZmF1bHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzU0IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDM1MDAzNDAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiAyN319fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMzMVxxbCBcZmktMTc2N1xsaTE3NjdccmkwXHNiMTgwXHdpZGN0bHBhclx0eDE3NjdcdHFyXHRsZG90XHR4OTM1MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTc2N1xpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0Ke1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgQVJUSUNMRSBYSVYgTEVOREVSIFBST1RFQ1RJT059e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzU1IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDM1MDAzNTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiAyOH19fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMzMlxxbCBcbGkyNDBccmkwXHdpZGN0bHBhclx0eDE3NjdcdHFyXHRsZG90XHR4OTM1MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMjQwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgMTQuMX17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFJpZ2h0IHRvIEVuY3VtYmVyIGFuZCBBc3NpZ259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzU2IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDM1MDAzNjAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiAyOH19fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgMTQuMn17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IENvLU93bmVyc1xycXVvdGUgIE9ibGlnYXRpb25zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzM1NyBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQyOTEzMTQzIHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzNTAwMzcwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDczNTc1MDIgMjl9fX1cc2VjdGQgXGx0cnNlY3QNClxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDE0LjN9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBMZW5kZXIgT2JsaWdhdGlvbnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzU4IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDM1MDAzODAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiAyOX19fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgMTQuNH17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IExlbmRlclxycXVvdGUgcyBSaWdodCB0byBQb3NzZXNzaW9uLCBSaWdodCB0byBBY3F1aXJlIGFuZCBSaWdodCB0byBBc3NpZ259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzU5IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDM1MDAzOTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiAyOX19fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgMTQuNX17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IE9wcG9ydHVuaXR5IHRvIEN1cmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzYwIFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDM2MDAzMDAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiAzMH19fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgMTQuNn17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IE5ldyBBZ3JlZW1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzYxIFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDM2MDAzMTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiAzMH19fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgMTQuN317XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IExlbmRlciBDb25zZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzM2MiBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQyOTEzMTQzIHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzNjAwMzIwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDczNTc1MDIgMzB9fX1cc2VjdGQgXGx0cnNlY3QNClxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDE0Ljh9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBFc3RvcHBlbCBDZXJ0aWZpY2F0ZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzYzIFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDM2MDAzMzAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiAzMH19fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMzMVxxbCBcZmktMTc2N1xsaTE3NjdccmkwXHNiMTgwXHdpZGN0bHBhclx0eDE3NjdcdHFyXHRsZG90XHR4OTM1MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTc2N1xpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0Ke1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgQVJUSUNMRSBYViBJTkRFTU5JRklDQVRJT059e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzY0IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDM2MDAzNDAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiAzMX19fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMzMlxxbCBcbGkyNDBccmkwXHdpZGN0bHBhclx0eDE3NjdcdHFyXHRsZG90XHR4OTM1MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMjQwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNFxjaGFycnNpZDg4MDMxNDkgMTUuMX17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IENvLU93bmVyIEluZGVtbmlmaWNhdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0ICBQQUdFUkVGIF9Ub2M0MDQwMTMzNjUgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMjkxMzE0MyB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzYwMDM1MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ3MzU3NTAyIDMxfX19XHNlY3RkIFxsdHJzZWN0DQpccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSAxNS4yfXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgQ3Jvc3MtSW5kZW1uaXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzM2NiBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQyOTEzMTQzIHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzNjAwMzYwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDczNTc1MDIgMzF9fX1cc2VjdGQgXGx0cnNlY3QNClxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMzFccWwgXGZpLTE3NjdcbGkxNzY3XHJpMFxzYjE4MFx3aWRjdGxwYXJcdHgxNzY3XHRxclx0bGRvdFx0eDkzNTBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE3NjdcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANCntccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IEFSVElDTEUgWFZJIFdBSVZFUiBPRiBSSUdIVFMgVE8gUEFSVElUSU9OfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzM2NyBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQyOTEzMTQzIHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzNjAwMzcwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDczNTc1MDIgMzF9fX1cc2VjdGQgXGx0cnNlY3QNClxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgQVJUSUNMRSBYVklJIE1JU0NFTExBTkVPVVMgUFJPVklTSU9OU317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0ICBQQUdFUkVGIF9Ub2M0MDQwMTMzNjggXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMjkxMzE0MyB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzYwMDM4MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ3MzU3NTAyIDMxfX19XHNlY3RkIFxsdHJzZWN0DQpccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczMyXHFsIFxsaTI0MFxyaTBcd2lkY3RscGFyXHR4MTc2N1x0cXJcdGxkb3RcdHg5MzUwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4yNDBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSAxNy4xfXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgQ292ZW5hbnRzIFJ1biB3aXRoIHRoZSBMYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzM2OSBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQyOTEzMTQzIHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzNjAwMzkwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDczNTc1MDIgMzF9fX1cc2VjdGQgXGx0cnNlY3QNClxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDE3LjJ9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBGb3JjZSBNYWpldXJlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzM3MCBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQyOTEzMTQzIHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzNzAwMzAwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDczNTc1MDIgMzJ9fX1cc2VjdGQgXGx0cnNlY3QNClxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDE3LjN9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBGRVJDIEZpbGluZyBhbmQgQWNjZXB0YW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQxNjEzMTE1MSAufXtccnRsY2hcZmNzMSBcYWY0MyBcbHRyY2hcZmNzMCBcZjQzXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IC59ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzcxIFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMjkxMzE0MyB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDM3MDAzMTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ3MzU3NTAyIDMyfX19XHNlY3RkIFxsdHJzZWN0XHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSAxNy40fXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgQXNzaWdubWVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCANCiBQQUdFUkVGIF9Ub2M0MDQwMTMzNzIgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMjkxMzE0MyB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDM3MDAzMjAwMDAwMH19fXtcZmxkcnNsdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ3MzU3NTAyIDMzfX19XHNlY3RkIFxsdHJzZWN0XHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczMyXHFsIFxsaTI0MFxyaTBcd2lkY3RscGFyXHR4MTc2N1x0cXJcdGxkb3RcdHg5MzUwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4yNDBcaXRhcDBccGFyYXJzaWQ4OTM0ODU4IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDg5MzQ4NThcY2hhcnJzaWQ4ODAzMTQ5IDE3LjV9ew0KXHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4OTM0ODU4IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDg5MzQ4NTggQWN0aW9ucyBCeSBDby1Pd25lcnN9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODkzNDg1OCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDg5MzQ4NTggIFBBR0VSRUYgX1RvYzQwNDAxMzM3MyBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzNzAwMzMwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiAzM319fVxzZWN0ZCBcbHRyc2VjdFxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODkzNDg1OCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczMyXHFsIFxsaTI0MFxyaTBcd2lkY3RscGFyXHR4MTc2N1x0cXJcdGxkb3RcdHg5MzUwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4yNDBcaXRhcDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTRcY2hhcnJzaWQ4ODAzMTQ5IDE3Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDg5MzQ4NTggNn17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCANCkVudGlyZSBBZ3JlZW1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzM3MyBcXGggfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzNzAwMzMwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiAzM319fVxzZWN0ZCBcbHRyc2VjdFxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4OTM0ODU4IDE3Ljd9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBBbWVuZG1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgDQogUEFHRVJFRiBfVG9jNDA0MDEzMzc0IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzNzAwMzQwMDAwMDB9fX17XGZsZHJzbHQgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiAzM319fVxzZWN0ZCBcbHRyc2VjdFxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4OTM0ODU4IDE3Ljh9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBGdXJ0aGVyIEFzc3VyYW5jZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgDQogUEFHRVJFRiBfVG9jNDA0MDEzMzc1IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzNzAwMzUwMDAwMDB9fX17XGZsZHJzbHQgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiAzM319fVxzZWN0ZCBcbHRyc2VjdFxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4OTM0ODU4IDE3Ljl9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBTZXZlcmFiaWxpdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgDQogUEFHRVJFRiBfVG9jNDA0MDEzMzc2IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzNzAwMzYwMDAwMDB9fX17XGZsZHJzbHQgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiAzNH19fVxzZWN0ZCBcbHRyc2VjdFxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4OTM0ODU4IDE3LjEwfXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgSm9pbnQgUHJlcGFyYXRpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgDQogUEFHRVJFRiBfVG9jNDA0MDEzMzc3IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzNzAwMzcwMDAwMDB9fX17XGZsZHJzbHQgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiAzNH19fVxzZWN0ZCBcbHRyc2VjdFxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4OTM0ODU4IDE3LjExfXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgTm8gV2FpdmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IA0KIFBBR0VSRUYgX1RvYzQwNDAxMzM3OCBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQyOTEzMTQzIHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzcwMDM4MDAwMDAwfX19e1xmbGRyc2x0IHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDczNTc1MDIgMzR9fX1cc2VjdGQgXGx0cnNlY3RccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODkzNDg1OCAxNy4xMn17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IEdvdmVybmluZyBMYXd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgDQogUEFHRVJFRiBfVG9jNDA0MDEzMzc5IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzNzAwMzkwMDAwMDB9fX17XGZsZHJzbHQgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiAzNH19fVxzZWN0ZCBcbHRyc2VjdFxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4OTM0ODU4IDE3LjEzfXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgRGlzcHV0ZSBSZXNvbHV0aW9uIFByb2NlZHVyZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzgwIFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDM4MDAzMDAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiAzNH19fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4OTM0ODU4IDE3LjE0fXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgUmVsYXRpb25zaGlwIG9mIHRoZSBDby1Pd25lcnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzgxIFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDM4MDAzMTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiAzNH19fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4OTM0ODU4IDE3LjE1fXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgTm8gVGhpcmQgUGFydHkgUmlnaHRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IA0KIFBBR0VSRUYgX1RvYzQwNDAxMzM4MiBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQyOTEzMTQzIHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzgwMDMyMDAwMDAwfX19e1xmbGRyc2x0IHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDczNTc1MDIgMzR9fX1cc2VjdGQgXGx0cnNlY3RccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODkzNDg1OCAxNy4xNn17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IE5vIERlZGljYXRpb24gb2YgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0ICBQQUdFUkVGIF9Ub2M0MDQwMTMzODMgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMjkxMzE0MyB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzgwMDMzMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ3MzU3NTAyIDM1fX19XHNlY3RkIFxsdHJzZWN0DQpccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDg5MzQ4NTggMTcuMTd9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBOb3RpY2VzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IA0KIFBBR0VSRUYgX1RvYzQwNDAxMzM4NCBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQyOTEzMTQzIHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzgwMDM0MDAwMDAwfX19e1xmbGRyc2x0IHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDczNTc1MDIgMzV9fX1cc2VjdGQgXGx0cnNlY3RccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODkzNDg1OCAxNy4xOH17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IENvdW50ZXJwYXJ0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCANCiBQQUdFUkVGIF9Ub2M0MDQwMTMzODUgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMjkxMzE0MyB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDM4MDAzNTAwMDAwMH19fXtcZmxkcnNsdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ3MzU3NTAyIDM2fX19XHNlY3RkIFxsdHJzZWN0XHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDg5MzQ4NTggMTcuMTl9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBUaW1pbmcgZm9yIFBlcmZvcm1hbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IA0KIFBBR0VSRUYgX1RvYzQwNDAxMzM4NiBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQyOTEzMTQzIHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzNDAwMzAwMDM0MDAzMDAwMzEwMDMzMDAzMzAwMzgwMDM2MDAwMDAwfX19e1xmbGRyc2x0IHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDczNTc1MDIgMzZ9fX1cc2VjdGQgXGx0cnNlY3RccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODkzNDg1OCAxNy4yMH17XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFdhaXZlciBvZiBDb25zZXF1ZW50aWFsIERhbWFnZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCAgUEFHRVJFRiBfVG9jNDA0MDEzMzg3IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDM4MDAzNzAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiAzN319fVxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4OTM0ODU4IDE3LjIxfXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkODM1MTQgU3Vydml2YWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDgzNTE0IFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgDQogUEFHRVJFRiBfVG9jNDA0MDEzMzg4IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDI5MTMxNDMge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzODAwMzgwMDAwMDB9fX17XGZsZHJzbHQgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNzM1NzUwMiAzN319fVxzZWN0ZCBcbHRyc2VjdFxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4OTM0ODU4IDE3LjIyfXtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkMTYxMzExNTEgTWVtb3JhbmR1bX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCANCiBQQUdFUkVGIF9Ub2M0MDQwMTMzODkgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMjkxMzE0MyB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzQwMDMwMDAzNDAwMzAwMDMxMDAzMzAwMzMwMDM4MDAzOTAwMDAwMH19fXtcZmxkcnNsdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ3MzU3NTAyIDM3fX19XHNlY3RkIFxsdHJzZWN0XHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ4MzUxNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDg5MzQ4NTggMTcuMjN9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkODM1MTQgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ4MzUxNCBPdGhlciBBZ3JlZW1lbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDgzNTE0XGNoYXJyc2lkODgwMzE0OSAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ4MzUxNCBcdGFiIH0NCntcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkODM1MTQgIFBBR0VSRUYgX1RvYzQwNDAxMzM5MCBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQyOTEzMTQzIHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDM0MDAzMDAwMzQwMDMwMDAzMTAwMzMwMDMzMDAzOTAwMzAwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDczNTc1MDIgMzd9fX1cc2VjdGQgXGx0cnNlY3QNClxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDgzNTE0IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgfX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzZWN0ZCBcbHRyc2VjdA0KXHBzejFccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDU5MTgzMjkgRVhISUJJVFN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkNTkxODMyOSBFeGhpYml0IEEgXGVuZGFzaCAgU2NoZWR1bGUgb2YgRGVmaW5pdGlvbnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkNTkxODMyOSBFeGhpYml0IEIgXGVuZGFzaCAgU2hhcmVkIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDEzMjY3NzYzICx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDU5MTgzMjkgIFNoYXJlZCBSZWFsIFByb3BlcnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGJcaW5zcnNpZDEzMjY3NzYzICBhbmQgU2hhcmVkIFBlcm1pdHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH1ccGFyZCBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ2NTk5ODYge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDY1OTk4NiBFeGhpYml0IEMgXGVuZGFzaCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxMzI2Nzc2MyANCkludGVyZXN0cyBhbmQgUHJvcG9ydGlvbmF0ZSBTaGFyZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDY1OTk4NiANClxwYXIgfVxwYXJkIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTMwNzExNzAgRXhoaWJpdCBEIFxlbmRhc2ggIE1hdGVyaWFsIFByb2plY3QgQWdyZWVtZW50cw0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDU5MTgzMjkgRXhoaWJpdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDEzMDcxMTcwIEUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQ1OTE4MzI5IC0gRGlzcHV0ZSBSZXNvbHV0aW9uIFByb3Zpc2lvbnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkNTkxODMyOSBFeGhpYml0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTMwNzExNzAgRiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDU5MTgzMjkgXGVuZGFzaCAgRm9ybSBvZiBKb2luZGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9XHBhcmQgXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTE4Nzc1OTcge1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGNzNDVcYlxpbnNyc2lkMTE4Nzc1OTdcY2hhcnJzaWQxMTg3NzU5NyB7XCpcYmtta3N0YXJ0IF9EVl9DMX1FeGhpYml0IH17XHJ0bGNoXGZjczEgDQpcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxjczQ1XGJcaW5zcnNpZDEzMDcxMTcwIEd9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGNzNDVcYlxpbnNyc2lkMTMwNzExNzBcY2hhcnJzaWQxMTg3NzU5NyAgfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxjczQ1XGJcaW5zcnNpZDExODc3NTk3XGNoYXJyc2lkMTE4Nzc1OTcgXGVuZGFzaCAgRm9ybSBvZiBNZW1vcmFuZHVtfXtccnRsY2hcZmNzMSANClxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGluc3JzaWQxMTg3NzU5N1xjaGFycnNpZDExODc3NTk3IHtcKlxia21rZW5kIF9EVl9DMX0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczI1XHFjIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkNTkwODM4IFxydGxjaFxmY3MxIFxhYlxhZjFcYWZzMzJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xrZXJuaW5nMjhcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQp7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzNTA3MzEyIFxwYWdlIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ1MzIyMzYgUklTSU5HIFRSRUV9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTA4MzggDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgU0hBUkVEIEZBQ0lMSVRJRVMgQUdSRUVNRU5UfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkwODM4IA0KXHBhciANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE3XHFqIFxmaTc0MVxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGJcc2NhcHNcZjQyXGluc3JzaWQ1OTE4MzI5IFRoaXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXHNjYXBzXGY0MlxpbnNyc2lkNDUzMjIzNiBSaXNpbmcgVHJlZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxzY2Fwc1xmNDJcaW5zcnNpZDU5MTgzMjkgIFNoYXJlZCBGYWNpbGl0aWVzIEFncmVlbWVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIChcJzkzfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBBZ3JlZW1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFwnOTQpIGlzIG1hZGUgYW5kIGVudGVyZWQgaW50byB0aGlzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDc3NDY2OTIgM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDc3NDY2OTJcY2hhcnJzaWQ3NzQ2NjkyIHJkfQ0Ke1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ3NzQ2NjkyICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTgyNjg2NiBkYXkgb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNzc0NjY5MiBEZWNlbWJlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ1MzIyMzYgLCAyMDE0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxMjAwNzEyOCAgKHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjAwMTA1MyBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDE2MDAxMDUzIEV4ZWN1dGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQxNjAwMTA1M1xjaGFycnNpZDc3NDM3MzIgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxiXGlcaW5zcnNpZDEyMDA3MTI4XGNoYXJyc2lkNzc0MzczMiBEYXRlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTIwMDcxMjggXCc5NCl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICwgYnkgYW5kIGFtb25nIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ1MzIyMzYgUmlzaW5nIFRyZWV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgIFdpbmQgRmFybVx+TExDIChcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDQ1MzIyMzYgUmlzaW5nIFRyZWUgSX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXCc5NCksIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ1MzIyMzYgUmlzaW5nIFRyZWV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgIFdpbmQgRmFybVx+fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDUzMjIzNiBJSSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IExMQyAoXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ0NTMyMjM2IFJpc2luZyBUcmVlIElJfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcJzk0DQopLCBhbmQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDUzMjIzNiBSaXNpbmcgVHJlZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIFdpbmQgRmFybVx+fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDUzMjIzNiBJSUkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBMTEMgKFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ0NTMyMjM2IFJpc2luZyBUcmVlIElJSX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXCc5NCksIGVhY2ggb2Ygd2hpY2ggaXMgYSBEZWxhd2FyZSBsaW1pdGVkIGxpYWJpbGl0eSBjb21wYW55LiAgVGhlIGZvcmVnb2luZyBhcmUgc29tZXRpbWVzIHJlZmVycmVkIHRvIGhlcmVpbiBpbmRpdmlkdWFsbHkgYXMgYSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXCc5NCBhbmQgY29sbGVjdGl2ZWx5IGFzIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBDby1Pd25lcnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFwnOTQufXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMjVccWMgXGxpMFxyaTBcc2EzMDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFmMVxhZnMzMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGtlcm5pbmcyOFxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBSRUNJVEFMU317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcZmktNzQxXGxpNzQxXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjc0MVxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ0NTMyMjM2IEF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDEzMTI2IC5cdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ1MzIyMzYgVGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCiBDby1Pd25lcnMgYXJlIGRldmVsb3BpbmcgYSBtdWx0aS1waGFzZSB3aW5kIHBvd2VyZWQgZWxlY3RyaWMgZ2VuZXJhdGluZyBmYWNpbGl0eSBnZW5lcmFsbHkga25vd24gYXMgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ1MzIyMzYgUmlzaW5nIFRyZWV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBXaW5kIEZhcm0gbG9jYXRlZCBvbiByZWFsIHByb3BlcnR5IGluIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDUzMjIzNiBLZXJuIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgQ291bnR5LCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NTMyMjM2IENhbGlmb3JuaWEgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAodGhlIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcYlxpXGluc3JzaWQ0NTMyMjM2IFJpc2luZyBUcmVlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgIFdpbmQgRmFybX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXCc5NCkuICBUaGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDUzMjIzNiBSaXNpbmcgVHJlZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAgV2luZCBGYXJtIGlzIGludGVuZGVkIHRvIGJlIGRldmVsb3BlZCBpbiBtdWx0aXBsZSBwaGFzZXMsIGVhY2ggb2Ygd2hpY2ggaXMgY29uc2lkZXJlZCBhIHNlcGFyYXRlIHByb2plY3QgYW5kIHdpbGwgYmUgb3duZWQgYnkgYSBzZXBhcmF0ZSBwcm9qZWN0IGNvbXBhbnkufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDUzMjIzNiBCfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAuXHRhYiBUaGUgaW5zdGFsbGVkIG5hbWVwbGF0ZSBnZW5lcmF0aW5nIGNhcGFjaXR5IG9mIGVhY2ggcGhhc2Ugb2YgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ1MzIyMzYgUmlzaW5nIFRyZWV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgIFdpbmQgRmFybSAoZWFjaCBvZiB3aGljaH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwMTkwNDU2ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IGlzIHJlZmVycmVkIHRvIGhlcmVpbiBhcyBhIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBGYWNpbGl0eX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcJzk0IGFuZCBjb2xsZWN0aXZlbHkgYXMgdGhlIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcJzk0KSwgd2lsbCBiZSBhcHByb3hpbWF0ZWx5On17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMyNlxxbCBcbGkyODUwXHJpMTQ0MFxzYTEyMFx3aWRjdGxwYXJcdHg0NzMxXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMTQ0MFxsaW4yODUwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDQ1MzIyMzYgUlNUIEl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBGYWNpbGl0eTpcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ1MzIyMzYgNzkuMiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IE1XfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDUzMjIzNiBSU1QgSUl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBGYWNpbGl0eTpcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ1MzIyMzYgMTkuOH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIE1XfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NTMyMjM2IFJTVCBJSUl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBGYWNpbGl0eTpcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ1MzIyMzYgOTl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBNV317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjE3NjczNiANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcZmktNzQxXGxpNzQxXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjc0MVxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzYxMjk3IEN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IC5cdGFiIA0KVGhlIENvLU93bmVycyBvd24gb3Igd2lsbCBvd24gdW5kaXZpZGVkIGludGVyZXN0cyBpbiBjZXJ0YWluIHJlYWwgYW5kIHBlcnNvbmFsIHByb3BlcnR5IGFjcXVpcmVkIG9yIHRvIGJlIGFjcXVpcmVkIGZvciB0aGVpciByZXNwZWN0aXZlIEZhY2lsaXRpZXMgYW5kIHdpc2ggdG8gc2hhcmUgdGhlIHVzZSBhbmQgY29zdCBvZiBjZXJ0YWluIGVsZWN0cmljYWwgdHJhbnNtaXNzaW9uLCBjb21tdW5pY2F0aW9uc1wnYjggc3RydWN0dXJlcyBhDQpuZCBvdGhlciBmYWNpbGl0aWVzIGFuZCBhc3NvY2lhdGVkIHJlYWwgcHJvcGVydHkgcmlnaHRzLCBhbmQgdG8gZW5nYWdlIE9wZXJhdG9yIHRvIG9wZXJhdGUsIG1haW50YWluLCByZXBhaXIgYW5kIG1hbmFnZSB0aGUgZm9yZWdvaW5nLCBhbGwgaW4gYWNjb3JkYW5jZSB3aXRoIGFuZCBzdWJqZWN0IHRvIHRoZSB0ZXJtcyBhbmQgY29uZGl0aW9ucyBvZiB0aGlzIEFncmVlbWVudC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIwNDI1MzAgRC5cdGFiIFRoZSBDby1Pd25lcnMgYXJlIGFsc28gcGFydGllcyB0byB0aGF0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ2NTU3MTggY2VydGFpbiBBbWVuZGVkIGFuZCBSZXN0YXRlZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMDQyNTMwIA0KTGFyZ2UgR2VuZXJhdG9yIEludGVyY29ubmVjdGlvbiBBZ3JlZW1lbnQgQ28tVGVuYW5jeSBBZ3JlZW1lbnQgZGF0ZWQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI3MjUzNSBPY3RvYmVyIDI0LCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NjU1NzE4IDIwMTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMDQyNTMwICAodGhlIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQyMDQyNTMwXGNoYXJyc2lkNzA3ODAwMiBMR0lBIENvLVRlbmFuY3kgQWdyZWVtZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjA0MjUzMCBcJzk0KSB3aXRoIHJlc3BlY3QgdG8gdGhlIEludGVyY29ubmVjdGlvbiBBZ3JlZW1lbnQuDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxN1xxaiBcZmk3NDFcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxzY2Fwc1xpbnNyc2lkNTkxODMyOSBOb3cgVGhlcmVmb3JlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAsIGluIGNvbnNpZGVyYXRpb24gb2YgdGhlIHJlY2l0YWxzLCB0aGUgcHJlbQ0KaXNlcywgY292ZW5hbnRzIGFuZCBjb25kaXRpb25zIGNvbnRhaW5lZCBoZXJlaW4sIGFuZCBvdGhlciBnb29kIGFuZCB2YWx1YWJsZSBjb25zaWRlcmF0aW9uLCB0aGUgcmVjZWlwdCBhbmQgc3VmZmljaWVuY3kgb2Ygd2hpY2ggdGhlIENvLU93bmVycyBhY2tub3dsZWRnZSwgdGhlIENvLU93bmVycyBhZ3JlZSBhcyBmb2xsb3dzOn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMxIFxydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgQVJUSUNMRSBJXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhcg0KXHMxXHFjIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDIzNjc1NDIgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxsaW5lIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzI3Nn1ERUZJTklUSU9OUywgSU5URVJQUkVUQVRJT05TIEFORCBFWEhJQklUU317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzI3Nn0NClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMjc3fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDEuMVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IERlZmluaXRpb25zfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMjc3fQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLiAgQXMgdXNlZCBpbg0KIHRoaXMgQWdyZWVtZW50LCBpbmNsdWRpbmcgdGhlIFJlY2l0YWxzLCBhbmQgZXhjZXB0IGFzIHJlcXVpcmVkIGJ5IGdyYW1tYXRpY2FsIHVzYWdlIGFuZCBhcGFydCBmcm9tIHByb3BlciBub3VucywgZWFjaCBjYXBpdGFsaXplZCB0ZXJtIGhhcyB0aGUgbWVhbmluZyBnaXZlbiB0byBpdCBpbiB0aGlzIEFncmVlbWVudCBhbmQgaW4gdGhlIFNjaGVkdWxlIG9mIERlZmluaXRpb25zIGF0dGFjaGVkIGFzIEV4aGliaXQgQS59e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzI3OH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxLjJcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBJbnRlcnByZXRhdGlvbn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzI3OH0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIEluIHRoaXMgQWdyZWVtZW50LCB1bmxlc3MgYSBjbGVhciwgY29udHJhcnkgaW50ZW50aW9uIGFwcGVhcnM6ICAoYSlcfnRoZSBzaW5ndWxhciBpbmNsdWRlcyB0aGUgcGx1cmFsIGFuZCB2aWNlIHZlcnNhOyAoYilcfnJlZmVyZW5jZSB0byBhbnkgUGVyc29uIGluY2x1ZGVzIHN1Y2ggUGVyc29uXHJxdW90ZSANCnMgc3VjY2Vzc29ycyBhbmQgYXNzaWducyBidXQsIGluIHRoZSBjYXNlIG9mIGEgQ28tT3duZXIsIG9ubHkgaWYgc3VjaCBhc3NpZ25zIGFyZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDc3MDIyMCBwZXJtaXR0ZWQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCmJ5IHRoaXMgQWdyZWVtZW50LCBhbmQgcmVmZXJlbmNlIHRvIGEgUGVyc29uIGluIGEgcGFydGljdWxhciBjYXBhY2l0eSBleGNsdWRlcyBzdWNoIFBlcnNvbiBpbiBhbnkgb3RoZXIgY2FwYWNpdHk7IChjKVx+cmVmZXJlbmNlIHRvIGFueSBnZW5kZXIgaW5jbHVkZXMgZWFjaCBvdGhlciBnZW5kZXI7IChkKVx+cmVmZXJlbmNlIHRvIGFueSBhZ3JlZW1lbnQgKGluY2x1ZGluZyB0aGlzIEFncmVlbWVudCksIGRvY3VtZW50IG9yIGluc3RydW1lbnQgDQptZWFucyBzdWNoIGFncmVlbWVudCwgZG9jdW1lbnQgb3IgaW5zdHJ1bWVudCBhcyBhbWVuZGVkIG9yIG1vZGlmaWVkIGFuZCBpbiBlZmZlY3QgZnJvbSB0aW1lIHRvIHRpbWUgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZSB0ZXJtcyB0aGVyZW9mIGFuZCwgaWYgYXBwbGljYWJsZSwgdGhlIHRlcm1zIG9mIHRoaXMgQWdyZWVtZW50OyAoZSlcfg0KcmVmZXJlbmNlIHRvIGFueSBMYXcgbWVhbnMgc3VjaCBMYXcgYXMgYW1lbmRlZCwgbW9kaWZpZWQsIGNvZGlmaWVkLCBvciByZWVuYWN0ZWQsIGluIHdob2xlIG9yIGluIHBhcnQsIGFuZCBpbiBlZmZlY3QgZnJvbSB0aW1lIHRvIHRpbWUsIGluY2x1ZGluZywgaWYgYXBwbGljYWJsZSwgcnVsZXMgYW5kIHJlZ3VsYXRpb25zIHByb211bGdhdGVkIHRoZXJldW5kZXI7IChmKVx+DQpyZWZlcmVuY2UgdG8gYW55IFNlY3Rpb24gbWVhbnMgc3VjaCBTZWN0aW9uIG9mIHRoaXMgQWdyZWVtZW50LCBhbmQgcmVmZXJlbmNlcyBpbiBhbnkgU2VjdGlvbiBvciBkZWZpbml0aW9uIHRvIGFueSBjbGF1c2UgbWVhbnMgc3VjaCBjbGF1c2Ugb2Ygc3VjaCBTZWN0aW9uIG9yIGRlZmluaXRpb247IChnKVx+XCc5M2hlcmV1bmRlcixcJzk0IFwnOTNoZXJlb2YsXCc5NCBcJzkzaGVyZXRvXCc5NA0KIGFuZCB3b3JkcyBvZiBzaW1pbGFyIGltcG9ydCBzaGFsbCBiZSBkZWVtZWQgcmVmZXJlbmNlcyB0byB0aGlzIEFncmVlbWVudCBhcyBhIHdob2xlIGFuZCBub3QgdG8gYW55IHBhcnRpY3VsYXIgU2VjdGlvbiBvciBvdGhlciBwcm92aXNpb24gb2YgdGhpcyBBZ3JlZW1lbnQ7IChoKVx+XCc5M2luY2x1ZGluZ1wnOTQNCiBtZWFucyBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGluZyB0aGUgZ2VuZXJhbGl0eSBvZiBhbnkgZGVzY3JpcHRpb24gc3VjaCB0ZXJtOyBhbmQgKGkpXH5yZWxhdGl2ZSB0byB0aGUgZGV0ZXJtaW5hdGlvbiBvZiBhbnkgcGVyaW9kIG9mIHRpbWUsIFwnOTNmcm9tXCc5NCBtZWFucyBcJzkzZnJvbSBhbmQgaW5jbHVkaW5nXCc5NCwgXCc5M3RvXCc5NCBtZWFucyBcJzkzdG8gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDYyNzA3MCBidXQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBleGNsdWRpbmdcJzk0IGFuZCBcJzkzdGhyb3VnaFwnOTQgbWVhbnMgXCc5M3Rocm91Z2ggYW5kIGluY2x1ZGluZ1wnOTQufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMjc5fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDEuM1x0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IEluY29ycG9yYXRpb24gb2YgUmVjaXRhbHMgYW5kIEV4aGliaXRzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMjc5fQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLiAgVGhlIFJlY2l0YWxzIHNldCBmb3J0aCBpbiB0aGlzIEFncmVlbWVudCBhbmQgdGhlIEV4aGliaXRzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MTMxMjYgYW5kIEF0dGFjaG1lbnRzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQphdHRhY2hlZCBoZXJldG8gYXJlIGluY29ycG9yYXRlZCBpbnRvIHRoaXMgQWdyZWVtZW50IGJ5IHJlZmVyZW5jZSBmb3IgYWxsIHB1cnBvc2VzLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMxIFxydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgQVJUSUNMRSBJSVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzMVxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IFxsaW5lIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzI4MH1URVJNIE9GIEFHUkVFTUVOVH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzI4MH0NClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMjgxfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDIuMVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IFRlcm19e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMyODF9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBUaGlzIEFncmVlbWVudCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDEzMTI2IGlzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgZWZmZWN0aXZlIGFzIG9mIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyMDA3MTI4IHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjAwMTA1MyANCmVhcmxpZXIgb2YgdGhlIEV4ZWN1dGlvbiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjAwNzEyOCBEYXRlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYwMDEwNTMgIGFuZCBhbnkgbGF0ZXIgZGF0ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ3MTAwMzU2IHRoaXMgQWdyZWVtZW50IGlzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTYwMDEwNTMgYWNjZXB0ZWQgYnkgRkVSQyAodGhlIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNzEwMDM1NiBFZmZlY3RpdmUgRGF0ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDcxMDAzNTYgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIGFuZCBzaGFsbCByZW1haW4gaW4gZm9yY2UgYW5kIGVmZmVjdCB1bnRpbH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ2OTI0MzAgLCBzdWJqZWN0IHRvIG9idGFpbmluZyBhbnkgbmVjZXNzYXJ5IEZFUkMgYXBwcm92YWxzLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ2NTU3MTggKGkpIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgdGhlIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU5NjU2MyBlYXJsaWVzdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IG9mICh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjcyNTM1IHZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IClcfnRoZSBkYXRlIHRoYXQgaXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxMjcyNTM1IHRoaXJ0eS1maXZlICgzNSl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB5ZWFycyBhZnRlciB0aGUgRWZmZWN0aXZlIERhdGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjcyNTM1ICx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NjU1NzE4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjcyNTM1IA0KKHcpIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ2NTU3MTggdGhlIGV4cGlyYXRpb24gZGF0ZSBvZiB0aGUgSW50ZXJjb25uZWN0aW9uIEFncmVlbWVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTk2NTYzIA0KKHgpIHRoZSBkYXRlIHRoYXQgYWxsIGludGVyZXN0cyBpbiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgYW5kIHRoZSBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBhcmUgb3duZWQgYnkgYSBzaW5nbGUgUGVyc29uLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICh5KVx+dGhlIHJldGlyZW1lbnQgYW5kIGZpbmFsIGRpc3Bvc2l0aW9uIG9mIGFsbCBjb21wb25lbnRzIG9mIHRoZSBTaGFyZWQgRmFjaWxpdGllc317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY0MDUyODEgIGFuZCBhbGwgU2hhcmVkIFJlYWwgUHJvcGVydHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTk2NTYzICwgYW5kICh6KSB0aGUgZGF0ZSB0aGF0IGFsbCBDby1Pd25lcnMgYW5kIHRoZWlyIExlbmRlcnMgdW5hbmltb3VzbHkgYWdyZWUgdG8gdGVybWluYXRlIHRoaXMgQWdyZWVtZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ0NjU1NzE4ICwgb3IgKGlpKSBzdWNoIG90aGVyIGRhdGUgKGJ1dCBubyBsYXRlciB0aGFuIG5pbmV0eS1uaW5lICg5OSkgeWVhcnMgYWZ0ZXIgdGhlIEVmZmVjdGl2ZSBEYXRlKSBhcyBtYXkgYmUgdW5hbmltb3VzbHkgYWdyZWVkIGJ5IGFsbCBvZiB0aGUgQ28tT3duZXJzIGFuZCB0aGVpciBMZW5kZXJzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAufXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMyODJ9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMi4yXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgUGF5bWVudHMgb24gVGVybWluYXRpb259e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMyODJ9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBVcG9uIHRlcm1pbmF0aW9uIG9mIHRoaXMgQWdyZWVtZW50LCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTc0NDExNiB0aGUgQ28tT3duZXJzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgc2hhbGwgcGF5IE9wZXJhdG9yIGFueSByZW1haW5pbmcgYmFsYW5jZSBvd2VkIGZvciBPcGVyYXRvclxycXVvdGUgDQpzIGNvc3RzIGluY3VycmVkIG9yIGlycmV2b2NhYmwNCnkgY29tbWl0dGVkIHRvIGJlIGluY3VycmVkIHB1cnN1YW50IHRvIHRoaXMgQWdyZWVtZW50IGFzIG9mIHRoZSBkYXRlIG9mIHRlcm1pbmF0aW9uLCB3aXRoaW4gc2l4dHkgKDYwKSBkYXlzIGZvbGxvd2luZyByZWNlaXB0IG9mIGFuIGludm9pY2UgZnJvbSBPcGVyYXRvciByZXF1aXJpbmcgc3VjaCBwYXltZW50OyBwcm92aWRlZCB0aGF0IE9wZXJhdG9yIHNoYWxsIHVzZSBjb21tZXJjaWFsbHkgcmVhc29uYWJsZSBlZmZvcnRzIHRvIG1pbmltaXplIA0Kc3VjaCBjb3N0cy59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMyODN9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMi4zXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgU3Vydml2YWx9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMyODN9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBBbnkgb2JsaWdhdGlvbnMgb2Ygb25lIENvLU93bmVyIHRvIGFub3RoZXIsIGluY2x1ZGluZyBwYXltZW50IG9ibGlnYXRpb25zIGFuZCBpbmRlbW5pdHkgb2JsaWdhdGlvbnMsIGFzIGEgcmVzdWx0IG9mIHRoaXMgQWdyZWVtZW50IHdoaWNoIGFjY3J1ZWQgcHJpb3IgdG8gb3IgYXMgYSByZXN1bHQgb2YgdGVybWluYXRpb24gb2YgdGhpcyBBZ3JlZW1lbnQgc2hhbGwgc3Vydml2ZSB0ZXJtaW5hdGlvbiBvZiB0aA0KaXMgQWdyZWVtZW50Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMxIFxydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgQVJUSUNMRSBJSUlcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczFccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBcbGluZSB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMyODR9U0hBUkVEIEZBQ0lMSVRJRVMgQU5EIFJFQUwgUFJPUEVSVFl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMyODR9DQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzI4NX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU5NjU2M1xjaGFycnNpZDcwNzgwMDIgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy4xXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE1OTY1NjNcY2hhcnJzaWQ3MDc4MDAyIERlY2xhcmF0aW9uIG9mIEludGVudGlvbn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQxNTk2NTYzXGNoYXJyc2lkNzA3ODAwMiAuICB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkMTMzNzY4NDJcY2hhcnJzaWQ2NjM1NjQ1IFRoZSBDby1Pd25lcnMgaGVyZWJ5IGRlY2xhcmUgdGhhdH17XHJ0bGNoXGZjczEgXGFmMSANClxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDY3NjM5OTcgLCBzdWJqZWN0IHRvIHRoZSBsYXN0IHNlbnRlbmNlIG9mIFNlY3Rpb24gNC4xLH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQxMzM3Njg0MlxjaGFycnNpZDY2MzU2NDUgIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQ0NjU1NzE4IHRoZXkgb3duIGFuZCBob2xkIHRpdGxlfXtccnRsY2hcZmNzMSBcYWYxIA0KXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkMTMzNzY4NDJcY2hhcnJzaWQ2NjM1NjQ1ICB0byB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgYW5kIHRoZSBTaGFyZWQgUmVhbCBQcm9wZXJ0eSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkNDY1NTcxOCBhc317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQxMzM3Njg0MlxjaGFycnNpZDY2MzU2NDUgIHRlbmFudHMgaW4gY29tbW9uDQogYW5kIHRoYXQgZWFjaCBDby1Pd25lciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkNDY1NTcxOCBoYXN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkMTMzNzY4NDJcY2hhcnJzaWQ2NjM1NjQ1ICBhbiB1bmRpdmlkZWQgaW50ZXJlc3QgaW4gdGhlIFNoYXJlZCBGYWNpbGl0aWVzIGFuZCB0aGUgU2hhcmVkIFJlYWwgUHJvcGVydHksIGV4cHJlc3NseSB9e1xydGxjaFxmY3MxIA0KXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQ0NjU1NzE4IG9uIGFuZCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkMTMzNzY4NDJcY2hhcnJzaWQ2NjM1NjQ1IHN1YmplY3QgdG8gdGhlIHRlcm1zLCBjb25kaXRpb25zLCBsaW1pdGF0aW9ucyBhbmQgcmVxdWlyZW1lbnRzIHNldCBmb3J0aCBpbiB0aGlzIEFncmVlbWVudC4gIE5vdGhpbmcgY29udGFpbmVkIGluIHRoaXMgQWdyZWVtZW50IHdpbGwgDQpiZSBkZWVtZWQgdG8gY29uc3RpdHV0ZSB0aGUgQ28tT3duZXJzIGFzIHBhcnRuZXJzIG9yIGpvaW50IHZlbnR1cmVycy59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNTk2NTYzXGNoYXJyc2lkNjYzNTY0NSB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMjg1fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMyODZ9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy4yXHRhYn19e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFNoYXJlZCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMyODZ9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBUaGUgQ28tT3duZXJzIHBsYW4gdG8gcHJvY3VyZSwgaW5zdGFsbCBhbmQgY29uc3RydWN0LCBvciBoYXZlIHByb2N1cmVkLCBpbnN0YWxsZWQgYW5kIGNvbnN0cnVjdGVkLCBjZXJ0YWluIGZhY2lsaXRpZXMgZm9yIGVsZWN0cmljYWwgdHJhbnNtaXNzaW9uLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjYxMzk4NCBpbnRlcmNvbm5lY3Rpb24sIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBjb21tdW5pY2F0aW9uc1wnYjggc3RydWN0dXJlcyBhbmQgb3RoZXIgZmFjaWxpdGllcywgYXMgbW9yZSBwYXJ0aWN1bGFybHkgZGVzY3JpYmVkIGluIEV4aGliaXQgQiwgd2hpY2ggbWF5IGJlIGFsdGVyZWQgb3IgcmVjb25zdHJ1Y3RlZCBpbiBhY2NvcmRhbmNlIHdpdGggdGhpcyBBZ3JlZW1lbnQsIGZvciBzaGFyZWQgdXNlIGJ5IHRoZSBDby1Pd25lcnMgKGNvbGxlY3RpdmVseSwgdGhlIFwnOTN9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IFNoYXJlZCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcJzk0KX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDg2NjcyICBmb3IgdGhlIHB1cnBvc2VzIHNldCBmb3J0aCBpbiBFeGhpYml0IEJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjYxMzk4NCANCjsgcHJvdmlkZWQsIHRoYXQgY2VydGFpbiBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgd2lsbCB1c2VkIGFuZCBzaGFyZWQgYnkgYWxsIG9mIHRoZSBDby1Pd25lcnMgYW5kIGNlcnRhaW4gb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzIHdpbGwgb25seSBiZSB1c2VkIGFuZCBzaGFyZWQgYnkgYSBsaW1pdGVkIGdyb3VwIG9mIHRoZSBDby1Pd25lcnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNjEzOTg0IGFzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgZGVzY3JpYmVkIGluIEV4aGliaXQgQiAoZWFjaCBhIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBTaGFyZWQgRmFjaWxpdGllcyBHcm91cH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQpcJzk0KS4gIFRoZSBpbml0aWFsIFNoYXJlZCBGYWNpbGl0aWVzIEdyb3VwcyBzaGFsbCBiZSB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI2MTM5ODQgUlNUfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgU2hhcmVkIEZhY2lsaXRpZXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI2MTM5ODQgDQpHcm91cCwgd2hpY2ggd2lsbCBiZSB1c2VkIGFuZCBzaGFyZWQgYnkgYWxsIENvLU93bmVycywgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBhbmQgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNjEzOTg0IFJTVCBJL0lJfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgU2hhcmVkIEZhY2lsaXRpZXMgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxMjYxMzk4NCBHcm91cCwgd2hpY2ggd2lsbCBiZSB1c2VkIGFuZCBzaGFyZWQgYnkgUmlzaW5nIFRyZWUgSSBhbmQgUmlzaW5nIFRyZWUgSUk7IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQpwcm92aWRlZCB0aGF0IGFkZGl0aW9uYWwgU2hhcmVkIEZhY2lsaXRpZXMgR3JvdXBzIG1heSBiZSBjcmVhdGVkIGluIGNvbm5lY3Rpb24gd2l0aCB0aGUgY29uc3RydWN0aW9uIG9mIHRoZSBBZGRpdGlvbmFsIFBoYXNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTA3NjE0ODggLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IGFzIGRlc2NyaWJlZCBpbiBTZWN0aW9uXH40LjQufXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkMjE3NjczNlxjaGFycnNpZDk0NDY3NSANClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMjg3fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuM1x0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IFNoYXJlZCBSZWFsIFByb3BlcnR5fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMjg3fQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLiAgVGhlIFNoYXJlZCBGYWNpbGl0aWVzIGluIGVhY2ggU2hhcmVkIEZhY2lsaXRpZXMgR3JvdXAgYXJlIG9yIHdpbGwgYmUgbG9jYXRlZCBvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzOTc1MTcxICx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzk3NTE3MSANCm9yIGhhdmUgb3Igd2lsbCBoYXZlIHRoZSBiZW5lZml0IG9mLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IGNlcnRhaW4gcmVhbCBwcm9wZXJ0eSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzk3NTE3MSBhbmQgcmVhbCBwcm9wZXJ0eSByaWdodHMgdGhhdCBhcmUgZGVzY3JpYmVkIG9uIEV4aGliaXQgQiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgKGNvbGxlY3RpdmVseSwgdGhlIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBTaGFyZWQgUmVhbCBQcm9wZXJ0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXCc5NCl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzk3NTE3MSAgYW5kIHRoYXQgd2VyZSBncmFudGVkIHB1cnN1YW50IHRvIGNlcnRhaW59ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzOTc1MTcxIGRlZWRzLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IGVhc2VtZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM5NzUxNzEgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQosIGxlYXNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM5NzUxNzEgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLCBvcHRpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzk3NTE3MSBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgb3Igb3RoZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxMzk3NTE3MSBpbnN0cnVtZW50cyBhbmQgYWdyZWVtZW50cyBhbHNvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgZGVzY3JpYmVkIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzOTc1MTcxIG9uIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgRXhoaWJpdCBCIChjb2xsZWN0aXZlbHksIHRoZSBcJzkzfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBBZ3JlZW1lbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcJzk0KS59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NjM1NjQ1ICAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTE5MjE1OSBUaGUgU2hhcmVkIFJlYWwgUHJvcGVydHkgc2hhbGwgYmUgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NzYzOTk3IHVzZWQgZm9yIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkxOTIxNTkgIHB1cnBvc2VzIGFuZCB1c2VzIGRlc2NyaWJlZCBvbiBFeGhpYml0IEIuICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NjM1NjQ1IEluIGFkZGl0aW9uIHRvIHRoZSB1c2Ugb2YgdGhlIFNoYXJlZCBSZWFsIFByb3BlcnR5IH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDY1NTcxOCBmb3IgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjYzNTY0NSBTaGFyZWQgRmFjaWxpdGllcyBhbmQgb3RoZXIgU2hhcmVkIEFzc2V0cywgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNzE2Mzc5OSB0byB0aGUgZXh0ZW50IHBlcm1pdHRlZCB1bmRlciB0aGUgU2hhcmVkIFJlYWwgcHJvcGVydHkgQWdyZWVtZW50cywgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NjM1NjQ1IHRoZSBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBtYXkgYmUgb2NjdXBpZWQgYW5kIHVzZWQgYnkgYW55IG9mIHRoZSBDby1Pd25lcnMgaW4gdGhlDQogYXBwbGljYWJsZSBTaGFyZWQgQXNzZXRzIEdyb3VwIGZvciBmYWNpbGl0aWVzIG90aGVyIHRoYW4gU2hhcmVkIEZhY2lsaXRpZXMsIHN1Y2ggYXMgY29sbGVjdGlvbiBhbmQgdHJhbnNtaXNzaW9uIGxpbmVzIHNlcGFyYXRlbHkgb3duZWQgYnkgc3VjaCBDby1Pd25lciwgc28gbG9uZyBhcyBzdWNoIG9jY3VwYW5jeSBhbmQgdXNlIGRvZXMgbm90IGFkdmVyc2VseSBhZmZlY3QgdGhlIHVzZSBvZiBzdWNoIFNoYXJlZCBSZWFsIFByb3BlcnR5IGZvciANCnRoZSBTaGFyZWQgRmFjaWxpdGllcy59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTQ2OTY2NSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDI3ODUyMCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMjg4fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuNFx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IFNoYXJlZCBBc3NldHMgR3JvdXBzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMjg4fQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLiAgRWFjaCBTaGFyZWQgRmFjaWxpdGllcyBHcm91cCwgY29tYmluZWQgd2l0aCB0aGUgU2hhcmVkIFJlYWwgUHJvcGVydHkgY29ycmVzcG9uZGluZyB0byB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgaW4gc3VjaCBTaGFyZWQgRmFjaWxpdGllcyBHcm91cCBkZXNjcmliZWQgdW5kZXIgdGhlIHNhbWUgc2VjdGlvbiBpbiBFeGhpYml0IEIgc2hhbGwgYmUgcmVmZXJyZWQgdG8gaGVyZWluIGFzIGEgXCc5M317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgU2hhcmVkIEFzc2V0cyBHcm91cH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXCc5NC4gIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MDExODggVGhlIGluaXRpYWwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYwMTE4OFxjaGFycnNpZDE0NjI3MDcwIFNoYXJlZCB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NjI3MDcwIEFzc2V0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NjI3MDcwXGNoYXJyc2lkMTQ2MjcwNzAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MDExODhcY2hhcnJzaWQxNDYyNzA3MCBHcm91cHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjAxMTg4IA0KIHNoYWxsIGJlIHRoZSBSU1QgU2hhcmVkIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NjI3MDcwIEFzc2V0cyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjAxMTg4IEdyb3VwLCB3aGljaCB3aWxsIGJlIHVzZWQgYW5kIHNoYXJlZCBieSBhbGwgQ28tT3duZXJzLCBhbmQgdGhlIFJTVCBJL0lJIFNoYXJlZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDYyNzA3MCANCkFzc2V0cyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjAxMTg4IEdyb3VwLCB3aGljaCB3aWxsIGJlIHVzZWQgYW5kIHNoYXJlZCBieSBSaXNpbmcgVHJlZSBJIGFuZCBSaXNpbmcgVHJlZSBJSTsgcHJvdmlkZWQgdGhhdCBhZGRpdGlvbmFsIFNoYXJlZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDYyNzA3MCBBc3NldHMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNjAxMTg4IEdyb3VwcyBtYXkgYmUgY3JlYXRlZCBpbiBjb25uZWN0aW9uIHdpdGggdGhlIGNvbnN0cnVjdGlvbiBvZiB0aGUgQWRkaXRpb25hbCBQaGFzZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwNzYxNDg4ICwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYwMTE4OCBhcyBkZXNjcmliZWQgaW4gU2VjdGlvblx+NC40Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjE3NjczNlxjaGFycnNpZDExMzM5MTc3IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMyODl9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy41XHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgQWNjZXNzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMjg5fQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLiAgRWFjaCBDby1Pd25lciBzaGFsbCBoYXZlIGEgbm9uLWV4Y2x1c2l2ZSByaWdodCBvZiBhY2Nlc3MgKGEpXH50byB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgaW4gd2hpY2ggaXQgaGFzIGFuIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwNDQ5NTYwIE93bmVyc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIEludGVyZXN0IGFzIG5lY2Vzc2FyeSB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkxOTIxNTkgKGkpIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgdG8gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTE5MjE1OSBpbnNwZWN0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk3MTAwNjUgc3VjaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MTkyMTU5IA0KU2hhcmVkIEZhY2lsaXRpZXMsIChpaSkgdG8gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBlbnN1cmUgdGhhdCBPcGVyYXRvciBpcyBtZWV0aW5nIGl0cyBvYmxpZ2F0aW9ucyB3aXRoIHJlc3BlY3QgdG8gb3BlcmF0aW9uLCBtYWludGVuYW5jZSBhbmQgcmVwYWlyIG9mIHN1Y2ggU2hhcmVkIEZhY2lsaXRpZXMsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkxOTIxNTkgDQooaWlpKSB0byBtYWtlIGFueSBuZWNlc3NhcnkgcmVwYWlycyB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NzEwMDY1IHN1Y2ggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTE5MjE1OSBTaGFyZWQgRmFjaWxpdGllcyBub3QgdGltZWx5IG1hZGUgYnkgT3BlcmF0b3Igb3IgaW4gdGhlIGV2ZW50IG9mIGFuIEVtZXJnZW5jeX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTI5MTY2OTUgIENvbmRpdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkxOTIxNTkgLCBpbiBlYWNoIGNhc2UgYXMgbmVjZXNzYXJ5IHRvIGVuc3VyZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IHRoYXQgQ28tT3duZXJccnF1b3RlIHMgRmFjaWxpdHkgcmVtYWlucyBvcGVyYXRpb25hbCwgYW5kIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkOTE5MjE1OSAoaXYpIHRvIGV4ZXJjaXNlIGFueSBvdGhlciByaWdodHMgb2YgYSBDby1Pd25lciB1bmRlciB0aGlzIEFncmVlbWVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgOyBhbmQgKGIpXH5vdmVyIGFueSBTaGFyZWQgUmVhbCBQcm9wZXJ0eSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NTA3MjczIGluIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSB3aGljaCBzdWNoIENvLU93bmVyIGhhcyBhbiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjQ4MTM1NiBPd25lcnNoaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NTA3MjczICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IEludGVyZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYxMzQzMzggDQogb3IgYXMgbmVjZXNzYXJ5IG9yIGFwcHJvcHJpYXRlIHRvIGV4ZXJjaXNlIGFueSBvZiBpdHMgcmlnaHRzIGhlcmV1bmRlciB3aXRoIHJlc3BlY3QgdG8gdGhlIFNoYXJlZCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSA7IHByb3ZpZGVkIHRoYXQsIHN1YmplY3QgdG8gdGhlIHByb3Zpc2lvbnMgb2YgU2VjdGlvblx+DQoxMy4xLjQsIGlmIHN1Y2ggQ28tT3duZXIgaXMgbm90IHRoZSBPcGVyYXRvciwgaXQgc2hhbGwgKGkpXH5wcm92aWRlIHJlYXNvbmFibGUgbm90aWNlIHRvIE9wZXJhdG9yLCBhbmQgKGlpKVx+bm90IHVucmVhc29uYWJseSBpbnRlcmZlcmUgd2l0aCBPcGVyYXRvclxycXVvdGUgcyBvcGVyYXRpb24sIG1haW50ZW5hbmNlIG9yIHJlcGFpciBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgb3Igb2YgYW5vdGhlciBDby1Pd25lclxycXVvdGUgDQpzIEZhY2lsaXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNzM1MDQ1NSAuDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzI5MH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNzM1MDQ1NSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAzLjZcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ1NTk0NTI0IFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDczNTA0NTUgU2hhcmVkIFBlcm1pdHN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkNzM1MDQ1NSAuICBUaGUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDY3NjM5OTcgY29uc3RydWN0aW9uLCBvcGVyYXRpb24gYW5kIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQ3MzUwNDU1IA0KdXNlIG9mIGNlcnRhaW4gb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzIGluIGVhY2ggU2hhcmVkIEZhY2lsaXRpZXMgR3JvdXB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkNjc2Mzk5NyAsIGFzIHdlbGwgYXMgdGhlIGNvbnN0cnVjdGlvbiwgb3BlcmF0aW9uIGFuZCB1c2Ugb2YgY2VydGFpbiBwb3J0aW9ucyBvZiBlYWNoIENvLU93bmVyXHJxdW90ZSBzIEZhY2lsaXRpZXMsfXtccnRsY2hcZmNzMSBcYWYxIA0KXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkNzM1MDQ1NSAgd2lsbCBiZSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkNjc2Mzk5NyBzdWJqZWN0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDIwOTg3NTcgIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQ2NzYzOTk3IHRvIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClx1bG5vbmVcaW5zcnNpZDczNTA0NTUgY2VydGFpbiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkNjc2Mzk5NyBzaGFyZWQgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDczNTA0NTUgR292ZXJubWVudGFsIEF1dGhvcml6YXRpb25zIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQ2NzYzOTk3IGFzIH17XHJ0bGNoXGZjczEgXGFmMSANClxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDIwOTg3NTcgc2V0IGZvcnRoIGluIHBhcnRzIEEufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDE2MDcxMjk2IDN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkMjA5ODc1NyAgYW5kIEIuMyBvZiBFeGhpYml0IEIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDczNTA0NTUgKHRoZSBcJzkzfXsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcaVx1bG5vbmVcaW5zcnNpZDczNTA0NTVcY2hhcnJzaWQ1NTk0NTI0IFNoYXJlZCBQZXJtaXRzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDczNTA0NTUgXCc5NCl9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkMTYxMzExNTEgLCBub3QgYWxsIG9mIHdoaWNoIGFwcGx5IHRvIHRoZSBTaGFyZWQgRmFjaWxpdGllc317DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDY3NjM5OTcgLiAgVGhlIFNoYXJlZCBQZXJtaXRzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDczNTA0NTUgIG1heSBiZSBpc3N1ZWQgaW4gdGhlIG5hbWUgb2Ygb25lIG9yIG1vcmUgb2YgdGhlIENvLU93bmVyc317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQxMDg5NjE5NiAsIGJ1dCBzaGFsbH17DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDY4MTcwNzIgLCB0byB0aGUgZXh0ZW50IHRoZXkgYXBwbHkgdG8gdGhlIFNoYXJlZCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDEwODk2MTk2ICwgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDY4MTcwNzIgYW5kIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClx1bG5vbmVcaW5zcnNpZDEwODk2MTk2IHRvIHRoZSBmdWxsZXN0IGV4dGVudCBhbGxvd2VkIGJ5IEFwcGxpY2FibGUgTGF3LCBiZSBoZWxkLCB1c2VkIGFuZCBleGVyY2lzZWQgZm9yIHRoZSBtdXR1YWwgYmVuZWZpdCBvZiB0aGUgQ28tT3duZXJzIGluIHRoZSBhcHBsaWNhYmxlIFNoYXJlZCBBc3NldHMgR3JvDQp1cCBhbmQgdG8gZmFjaWxpdGF0ZSB0aGUgY29uc3RydWN0aW9uLCB1c2UsIG9wZXJhdGlvbiwgbWFpbnRlbmFuY2UgYW5kIHJlcGFpciBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgYXMgcHJvdmlkZWQgaGVyZWluLiAgVGhlIFNoYXJlZCBQZXJtaXRzIHNoYWxsIGJlIGFkbWluaXN0ZXJlZCBpbiB0aGUgc2FtZSBtYW5uZXIgYXMgdGhlIFNoYXJlZCBGYWNpbGl0aWVzIGFzIHByb3ZpZGVkIGluIFNlY3Rpb24gNC4zLjMsIGFuZH17DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDY1ODU4MTEgLCB0byB0aGUgZXh0ZW50IHRoZXkgZG8gYXBwbHkgdG8gdGhlIFNoYXJlZCBGYWNpbGl0aWVzLH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQxMDg5NjE5NiAgdGhlIENvLX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQxMzk3NTE3MSBPd25lcnMgfXtccnRsY2hcZmNzMSBcYWYxIA0KXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkMTA4OTYxOTYgaW4gZWFjaCBTaGFyZWQgQXNzZXQgR3JvdXAgc2hhbGwgaW5kZW1uaWZ5IGFuZCBob2xkIFJpc2luZyBUcmVlIEkgYW5kL29yIE9wZXJhdG9yLCBhcyBhcHBsaWNhYmxlLCBmcm9tIGFuZCBhZ2FpbnN0IH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQxMDg5NjE5NlxjaGFycnNpZDc3NDM3MzIgDQphbnkgY2xhaW1zLCBkZW1hbmRzLCBjb3N0cywgb2JsaWdhdGlvbnMgYW5kIGxpYWJpbGl0aWVzIGJ5IG9yIHRvIEdvdmVybm1lbnRhbCANCkF1dGhvcml0aWVzIG9yIG90aGVyIHRoaXJkIHBhcnRpZXMgYXMgYSByZXN1bHQgb2YgdGhlIHVzZSBvZiB0aGUgU2hhcmVkIFBlcm1pdHMgcmVsYXRpbmcgdG8gc3VjaCBTaGFyZWQgQXNzZXQgR3JvdXAsIGV4Y2VwdCB0byB0aGUgZXh0ZW50IHJlc3VsdGluZyBmcm9tIHRoZSBncm9zcyBuZWdsaWdlbmNlIG9yIHdpbGxmdWwgbWlzY29uZHVjdCBvZiBSaXNpbmcgVHJlZSBJIGFuZC9vciBPcGVyYXRvciwgYXMgYXBwbGljYWJsZX17DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDE1NzQ2OTA1XGNoYXJyc2lkNzc0MzczMiAuICB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkNjU4NTgxMSBUbyB0aGUgZXh0DQplbnQgdGhlIFNoYXJlZCBQZXJtaXRzIGRvIG5vdCBhcHBseSB0byB0aGUgU2hhcmVkIEZhY2lsaXRpZXMsIGJ1dCBpbnN0ZWFkIGFwcGx5IHRvIHRoZSBGYWNpbGl0aWVzIG9yIG90aGVyIHByb3BlcnR5IHNlcGFyYXRlbHkgb3duZWQgYnkgb25lIG9yIG1vcmUgb2YgdGhlIENvLU93bmVycywgdGhleSBzaGFsbCBiZSBhZG1pbmlzdGVyZWQgYnkgT3BlcmF0b3IsIGFuZCB0aGUgQ28tT3duZXJzIHRvIHdob3NlIEZhY2lsaXRpZXMgb3Igb3RoZXIgcHINCm9wZXJ0eSBzdWNoIFNoYXJlZCBQZXJtaXRzIGFwcGx5IHNoYWxsIGluZGVtbmlmeSBhbmQgaG9sZCBPcGVyYXRvciBoYXJtbGVzcyBmcm9tIGFuZCBhZ2FpbnN0IH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQ2NTg1ODExXGNoYXJyc2lkNzc0MzczMiANCmFueSBjbGFpbXMsIGRlbWFuZHMsIGNvc3RzLCBvYmxpZ2F0aW9ucyBhbmQgbGlhYmlsaXRpZXMgYnkgb3IgdG8gR292ZXJubWVudGFsIEF1dGhvcml0aWVzIG9yIG90aGVyIHRoaXJkIHBhcnRpZXMgYXMgYSByZXN1bHQgb2YgdGhlIHVzZSBvZiB0aGUgU2hhcmVkIFBlcm1pdHMsIGV4Y2VwdCB0byB0aGUgZXh0ZW50IHJlc3VsdGluZyBmcm9tIHRoZSBncm9zcyBuZWdsaWdlbmNlIG9yIHdpbGxmdWwgbWlzY29uZHVjdCBvZiBPcGVyYXRvcn17DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDY1ODU4MTEgLCBidXQgdGhlIGNvc3RzIG9mIHN1Y2ggYWRtaW5pc3RyYXRpb24gc2hhbGwgYmUgYm9ybmUgYnkgc3VjaCBDby1Pd25lcnMgYW5kIHNoYWxsIG5vdCBiZSBpbmNsdWRlZCBpbiB0aGUgTyZNIFNlcnZpY2VzIHByb3ZpZGVkIGhlcmV1bmRlci4gIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClx1bG5vbmVcaW5zcnNpZDE1NzQ2OTA1XGNoYXJyc2lkNzc0MzczMiBOb3R3aXRoc3RhbmRpbmcgdGhlIGZvcmVnb2luZyx9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkMTA4OTYxOTYgIGVhY2ggQ28tT3duZXIgaW4gdGhlIGFwcGxpY2FibGUgU2hhcmVkIEFzc2V0IEdyb3VwIHRvIHdoaWNoIGEgU2hhcmVkIFBlcm1pdCByZWxhdGVzIHNoYWxsIGhhdmUgdGhlIHJpZ2h0fXtccnRsY2hcZmNzMSBcYWYxIA0KXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkMTU3NDY5MDUgLCBpbiB0aGUgY2FzZSBvZiBFbWVyZ2VuY3kgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDEyOTE2Njk1IENvbmRpdGlvbiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkMTU3NDY5MDUgDQpvciBpZiBuZWNlc3NhcnkgdG8gcHJldmVudCB0aGUgdGVybWluYXRpb24gb3IgcmV2b2NhdGlvbiBvZiBhIFNoYXJlZCBQZXJtaXQsIHRvIHN0ZXAgaW4gYW5kIGV4ZXJjaXNlIHJpZ2h0cywgcGVyZm9ybSBkdXRpZXMgYW5kIG9ibGlnYXRpb25zIGFuZCB0YWtlIGFjdGlvbnMgdW5kZXIgc3VjaCBTaGFyZWQgUGVybWl0IGFzIG1heSBiZSBuZWNlc3NhcnkgdG8gYXZvaWQgb3IgbWl0aWdhdGUgc3VjaCBFbWVyZ2VuY3kgfXtccnRsY2hcZmNzMSANClxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkMTI5MTY2OTUgQ29uZGl0aW9uIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQxNTc0NjkwNSBvciB0ZXJtaW5hdGlvbiBvciByZXZvY2F0aW9uIG9mIGEgU2hhcmVkIFBlcm1pdCwgYW5kIHNoYWxsIGJlIGVudGl0bGVkIHRvIHRoZSBzYW1lIGluZGVtbmlmaWNhdGlvbiBhcyBSaXNpbmcgVHJlZSBJIG9yIE9wZXJhDQp0b3Igd291bGQgaGF2ZSBiZWVuIHVuZGVyIHRoZSBjaXJjdW1zdGFuY2VzOyBwcm92aWRlZCwgaG93ZXZlciwgdGhhdCBhbnkgQ28tT3duZXIgZXhlcmNpc2luZyBzdWNoIHN0ZXAtaW4gcmlnaHRzIHNoYWxsIGFsc28gaW5kZW1uaWZ5IGFuZCBob2xkIHRoZSBvdGhlciBDby1Pd25lcnMgaW4gdGhlIGFwcGxpY2FibGUgU2hhcmVkIEFzc2V0cyBHcm91cCBmcm9tIGFuZCBhZ2FpbnN0IH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClx1bG5vbmVcaW5zcnNpZDE1NzQ2OTA1XGNoYXJyc2lkNzc0MzczMiBhbnkgY2xhaW1zLCBkZW1hbmRzLCBjb3N0cywgb2JsaWdhdGlvbnMgYW5kIGxpYWJpbGl0aWVzIGJ5IG9yIHRvIEdvdmVybm1lbnRhbCBBdXRob3JpdGllcyBvciBvdGhlciB0aGlyZCBwYXJ0aWVzIGFzIGEgcmVzdWx0IG9mIGl0cyBncm9zcyBuZWdsaWdlbmNlIG9yIHdpbGxmdWwgbWlzY29uZHVjdCBpbiB0aGUgZXhlcmNpc2Ugb2Ygc3VjaCBzdGVwLWluIHJpZ2h0cy59ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzI5MH0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDU1OTQ1MjQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkODY2NzIgMy43XHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ4NjY3MiBUaGlyZCBQYXJ0eSBSaWdodHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ4NjY3MiAuICBUaGUgQ28tT3duZXJzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMwODg5MjcgYW5kIHRoZSBPcGVyYXRvciB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDg2NjcyIGFja25vd2xlZGdlIHRoYXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzMDg4OTI3ICwgaW4gYWRkaXRpb24gdG8gYW55IHJlcXVpcmVtZW50cyBvciByZXN0cmljdGlvbnMgaW4gdGhlIFNoYXJlZCBSZWFsIFByb3BlcnR5IEFncmVlbWVudHMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkODY2NzIgIHRoZWlyIHJpZ2h0cyB0byBjb25zdHJ1Y3R9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMwODg5MjcgLCB1c2UgYW5kIG9wZXJhdGUgdGhlIFNoYXJlZCBGYWNpbGl0aWVzIGlzIHN1YmplY3QgdG8gY2VydGFpbiByaWdodHMgaW4gZmF2b3Igb2YgdGhpcmQgcGFydGllcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ4MjEwNzMwIGFuZC9vciBBZmZpbGlhdGVzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMwODg5MjcgDQphcyBkZXNjcmliZWQgb24gRXhoaWJpdCBCLiAgTm8gQ28tT3duZXIgb3IgT3BlcmF0b3Igd2lsbCBpbnRlcmZlcmUgd2l0aCBzdWNoIHRoaXJkIHBhcnR5IHJpZ2h0cyBpbiBleGVyY2lzaW5nIGl0cyByaWdodHMgYW5kIHBlcmZvcm1pbmcgaXRzIG9ibGlnYXRpb25zIGhlcmV1bmRlci59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ4NjY3MlxjaGFycnNpZDMwODg5MjcgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMxIFxydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgQVJUSUNMRSBJVlx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzMVxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDg3NDA1MzAge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMjkxfUNPTlNUUlVDVElPTiBBTkQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBPV05FUlNISVAgT0YgQU5EIFJJR0hUIFRPIFVTRSBTSEFSRUQgQVNTRVRTfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANCntcKlxia21rZW5kIF9Ub2M0MDQwMTMyOTF9DQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzI5Mn17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA0LjFcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBVbmRpdmlkZWQgT3duZXJzaGlwIEludGVyZXN0c317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzI5Mn0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIEVhY2ggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ4MTU3MDMgQ28tT3duZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyODgwMzYgb2YgU2hhcmVkIEZhY2lsaXRpZXMgYW5kL29yIFNoYXJlZCBSZWFsIFByb3BlcnR5IGluIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIwOTg3NTcgZWFjaCB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0Mjg4MDM2IFNoYXJlZCBBc3NldHMgR3JvdXAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMwNzExNzAgKGEgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQxMzA3MTE3MFxjaGFycnNpZDU1OTQ1MjQgR3JhbnRpbmcgQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzA3MTE3MCBcJzk0KSB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0ODE1NzAzIGhlcmVieSBncmFudHMsIGFzc2lnbnMsIHRyYW5zZmVycyBhbmQgY29udmV5cyB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMDk4NzU3IGl0c2VsZiBhbmQgdG8gZWFjaCBvZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDgxNTcwMyB0aGUgb3RoZXIgQ28tT3duZXJzIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyODgwMzYgb2YgU2hhcmVkIEZhY2lsaXRpZXMgYW5kL29yIFNoYXJlZCBSZWFsIFByb3BlcnR5IGluIHN1Y2ggU2hhcmVkIEFzc2V0cyBHcm91cCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDgxNTcwMyBhbiB1bmRpdmlkZWQgaW50ZXJlc3QsIGFzIHRlbmFudHMtaW4tY29tbW9uLCBpbiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MTYxNzc4IA0Kc3VjaCByaWdodHMsIGJlbmVmaXRzIGFuZCBpbnRlcmVzdHMgYXMgdGhlIEdyYW50aW5nIENvLU93bmVyIG1heSBoYXZlIGluLCB0byBvciB1bmRlciBhbnkgZGVlZHMsIGNvbnZleWFuY2VzLCBncmFudHMsIGVhc2VtZW50cywgYWdyZWVtZW50cywgbGVhc2VzIG9yIG90aGVyIGluc3RydW1lbnRzIG9yIGRvY3VtZW50cyBjcmVhdGluZywgZ3JhbnRpbmcsIGFzc2lnbmluZyBvciBjb24NCnZleWluZyB0aGUgR3JhbnRpbmcgQ28tT3duZXIgaXRzIHJpZ2h0LCB0aXRsZSBhbmQgaW50ZXJlc3QgaW4gc3VjaCBTaGFyZWQgRmFjaWxpdGllcyBhbmQvb3IgU2hhcmVkIFJlYWwgUHJvcGVydHkgKGNvbGxlY3RpdmVseSwgdGhlIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNjE2MTc3OFxjaGFycnNpZDE2MTk3NjUxIFVuZGVybHlpbmcgR3JhbnRpbmcgRG9jdW1lbnRzfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ2MTYxNzc4IFwnOTQpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQxODM5NzQgLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDYxNjE3NzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDYxNzM0MTggdG8gdGhlIGV4dGVudCB0aGF0IHN1Y2ggZ3JhbnQsIGFzc2lnbm1lbnQsIHRyYW5zZmVyIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkNzAxMzE2NCBhbmQgY29udmV5YW5jZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMzY0MjAyIGRvZXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNzAxMzE2NCBub3QgdmlvbGF0ZSwgaW52YWxpZGF0ZSBvciByZXF1aXJlIGFueSBjb25zZW50IHdoaWNoIGhhcyBub3QgYmVlbiBvYnRhaW5lZCB1bmRlciBhbnkgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ2MTYxNzc4IG9mIHRoZSBVbmRlcmx5aW5nIEdyYW50aW5nIERvY3VtZW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDcwMTMxNjQgLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDgxNTcwMyBzdWNoIHRoYXQgZWFjaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI4ODAzNiBzdWNoIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBDby1Pd25lciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMzY0MjAyIGluIGEgU2hhcmVkIEFzc2V0cyBHcm91cCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IHNoYWxsIG93biBhbiB1bmRpdmlkZWQgaW50ZXJlc3QsIGFzIGEgdGVuYW50LWluLWNvbW1vbiwgaW4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyMzY0MjAyIGFsbCBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgYW5kIFNoYXJlZCBSZWFsIFByb3BlcnR5IGluIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgdGhlIGFwcGxpY2FibGUgU2hhcmVkIEFzc2V0cyBHcm91cCBlcXVhbCB0byBpdHMgUHJvcG9ydGlvbmF0ZSBTaGFyZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI4ODAzNiANCmluIHN1Y2ggU2hhcmVkIEFzc2V0cyBHcm91cCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IGFzIGRlc2NyaWJlZCBpbiBFeGhpYml0IEIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNzAxMzE2NCBhbmQgc2hhbGwgYmUgZW50aXRsZWQgdG8gdGhlIGZ1bGwgYmVuZWZpdHMgb2YgYWxsIHJpZ2h0cyBhc3NvY2lhdGVkIHdpdGggc3VjaCBTaGFyZWQgQXNzZXRzIEdyb3VwIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjY0MDA3OSBncmFudGVkLCBjcmVhdGVkIG9yIGNvbnZleWVkIHB1cnN1YW50IHRvIHRoZSBVbmRlcmx5aW5nIEdyYW50aW5nIERvY3VtZW50cyB0byB0aGUgZnVsbGVzdCBleHRlbnQgcGVybWl0dGVkIHRoZXJldW5kZXIgYW5kIHVuZGVyIEFwcGxpY2FibGUgTGF3cyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KKHN1Y2ggdW5kaXZpZGVkIGludGVyZXN0IG9mIGVhY2ggQ28tT3duZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyODgwMzYgaW4gc3VjaCBTaGFyZWQgQXNzZXRzIEdyb3VwIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY2NDAwNzkgYW5kIHJlbGF0ZWQgcmlnaHRzIGFuZCBiZW5lZml0cyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IGJlaW5nIHJlZg0KZXJyZWQgdG8gaW4gdGhpcyBBZ3JlZW1lbnQgYXMgaXRzIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBPd25lcnNoaXAgSW50ZXJlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFwnOTQpLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY3NjM5OTcgDQogIFVwb24gdGVybWluYXRpb24gb2YgdGhpcyBBZ3JlZW1lbnQsIGFsbCBvZiB0aGUgdmFyaW91cyByaWdodHMgYW5kIGludGVyZXN0cyB1bmRlciB0aGUgVW5kZXJseWluZyBHcmFudGluZyBEb2N1bWVudHMgd2lsbCwgd2l0aG91dCB0aGUgbmVlZCBmb3IgZnVydGhlciBhY3Rpb24gYnkgYW55IHBhcnR5LCByZXZlcnQgdG8gdGhlIENvLU93bmVyIG9yIA0KQ28tT3duZXJzIHRvIHdob20gdGhleSB3ZXJlIG9yaWdpbmFsbHkgZ3JhbnRlZCBwcmlvciB0byB0aGUgRWZmZWN0aXZlIERhdGUufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMjkzfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDQuMlx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IFVuZGl2aWRlZCBVc2UgSW50ZXJlc3RzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMjkzfQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLiAgRWFjaCBDby1Pd25lciB3aG8gaGFzIGFuIE93bmVyc2hpcCBJbnRlcmVzdCBpbiBhIFNoYXJlZCBBc3NldHMgR3JvdXAgc2hhbGwgaGF2ZSBhbiB1bmRpdmlkZWQgcmlnaHQgdG8gdGhlIHVzZSBvciBjYXBhY2l0eSBvZiB0aGUgU2hhcmVkIEFzc2V0cyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MTYxNzc4IGluIHN1Y2ggU2hhcmVkIEFzc2V0IEdyb3VwfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQzMzc1MTcgIChhbiBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDMzNzUxN1xjaGFycnNpZDc3NDM3MzIgVW5kaXZpZGVkIFVzZSBJbnRlcmVzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMzNzUxNyBcJzk0KX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLCB3aGljaCByaWdodCB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDMzNzUxNyBzaGFsbCBiZSBzaGFyZWQgd2l0aCB0aGUgb3RoZXIgQ28tT3duZXJzIGluIHRoZSBTaGFyZWQgQXNzZXRzIEdyb3VwcyBpbiBhY2NvcmRhbmNlIHdpdGggdGhlaXIgcmVzcGVjdGl2ZSBQcm9wb3J0aW9uYXRlIFNoYXJlcy4gIEEgQ28tT3duZXJccnF1b3RlIHMgVW5kaXZpZGVkIFVzZSBJbnRlcmVzdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KaXMgZXhlcmNpc2FibGUgdXBvbiB0aGUgQ29tbWlzc2lvbmluZyBEYXRlIG9mIGl0cyBGYWNpbGl0eSBieSBzdWNoIENvLU93bmVyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwNzYxNDg4IGJ5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQpwcm92aWRpbmcgd3JpdHRlbiBub3RpY2UgdG8gT3BlcmF0b3IgYW5kIHRvIHRoZSBvdGhlciBDby1Pd25lcnMgaW4gdGhlIHNhbWUgU2hhcmVkIEFzc2V0cyBHcm91cCB0aGF0IHRoZSBDb21taXNzaW9uaW5nIERhdGUgaGFzIG9jY3VycmVkLCBwcm92aWRlZCB0aGF0IHN1Y2ggQ28tT3duZXIgaGFzIG1hZGUgdGhlIHBheW1lbnQgb3IgcGF5bWVudHMgc2V0IGZvcnRoIGluIFNlY3Rpb25cfg0KNC4zLCBhbmQgdGhhdCBubyBFdmVudCBvZiBEZWZhdWx0IGhhcyBvY2N1cnJlZCBhbmQgaXMgY29udGludWluZyB3aXRoIHJlc3BlY3QgdG8gc3VjaCBDby1Pd25lci4gIEZvciB0aGUgYXZvaWRhbmNlIG9mIGRvdWJ0LCBlYWNoIENvLU93bmVyIHdob3NlIEZhY2lsaXR5IGhhcyBub3QgcmVhY2hlZCBpdHMgQ29tbWlzc2lvbmluZyBEYXRlIGFzIG9mIHRoZSBFZmZlY3RpdmUgRGF0ZSAoYW5kIHRodXMgd2hvc2UgUHJvcG9ydGlvbmENCnRlIFNoYXJlIGluIGFsbCBTaGFyZWQgQXNzZXRzIEdyb3VwcyBpcyAwJSkgc2hhbGwgYmUgZGVlbWVkIG5vdCB0byBoYXZlIGV4ZXJjaXNlZCBpdHMgVW5kaXZpZGVkIFVzZSBJbnRlcmVzdCBpbiBhbnkgU2hhcmVkIEFzc2V0cyBHcm91cCAoYW5kIGFzIGEgcmVzdWx0IHNoYWxsIG5vdCBiZSByZXF1aXJlZCB0byBiZWFyIGNvc3RzIG9yIGV4cGVuc2VzIHJlbGF0ZWQgdG8gYW55IFNoYXJlZCBBc3NldHMgR3JvdXAgbm9yIGhhdmUgdGhlIHJpZ2h0IA0KdG8gdm90ZSBvbiBtYXR0ZXJzIHVubGVzcyBvdGhlcndpc2Ugc2V0IGZvcnRoIGhlcmVpbiksIGJ1dCBzaGFsbCBoYXZlIHRoZSByaWdodCB0byBleGVyY2lzZSBpdHMgVW5kaXZpZGVkIFVzZSBJbnRlcmVzdCBhcyBzZXQgZm9ydGggaW4gdGhpcyBBZ3JlZW1lbnQufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczMgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyNiBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNC4yLjFcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMzXHFqIFxmaTcyMFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MjE2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMlxvdXRsaW5lbGV2ZWwyXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjZcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDU5MTgzMjkgVHJhbnNtaXNzaW9uIExpbmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IC4gIEVhY2ggQ28tT3duZXIgb2YgYSBUcmFuc21pc3Npb24gTGluZSBzaGFsbCBiZSBlbnRpdGxlZCB0byB1c2UgaXRzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIzNjQyMDIgUHJvcG9ydGlvbmF0ZSBTaGFyZSBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAgdGhlIERlbGl2ZXJ5IENhcGFiaWxpdHkgb2YgdGhlIFRyYW5zbWlzc2lvbiBMaW5lLiAgSW4gdGhlIGV2ZW50IG9mIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY2ODg5NDQgKGkpIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgYSBwYXJ0aWFsIGN1cnRhaWxtZW50IG9mIERlbGl2ZXJ5IENhcGFiaWxpdHkgYnkgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ2Njg4OTQ0IHRoZSBDQUlTTyBvciB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBUcmFuc21pc3Npb24gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ0Njc1IE93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjY4ODk0NCAsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2Njg4OTQ0IChpaSkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBhIGRlLXJhdGluZyBvZiB0aGUgVHJhbnNtaXNzaW9uIExpbmUsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY2ODg5NDQgKGlpaSkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjE2MTc3OCBhIGN1cnRhaWxtZW50IGFzIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjY4ODk0NCBkZXRlcm1pbmVkIGJ5IHRoZSBPcGVyYXRvciB0byBiZSBuZWNlc3NhcnkgdG8gbWFpbnRhaW4sIHJlcGFpciwgcmVwbGFjZSwgcmVtb3ZlLCBpbnZlc3RpZ2F0ZSwgaW5zcGVjdCBvciB0ZXN0IHRoZSBUcmFuc21pc3Npb24gTGluZSwgYW55IFNoYXJlZCBGYWNpbGl0eSBvciBhbnkgRmFjaWxpdHksIG9yIChpdikgRW1lcmdlbmN5IENvbmRpdGlvbnMsIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBlYWNoIENvLU93bmVyXHJxdW90ZSBzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIzNjQyMDIgcmlnaHQgdG8gdXNlIHRoZSBEZWxpdmVyeSBDYXBhYmlsaXR5IG9mIHRoZSBUcmFuc21pc3Npb24gTGluZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHdpbGwgYmUgcg0KZWR1Y2VkIHBybyByYXRhIGluIGFjY29yZGFuY2Ugd2l0aCBpdHMgT3duZXJzaGlwIEludGVyZXN0IGZvciB0aGUgZHVyYXRpb24gb2YgdGhlIGN1cnRhaWxtZW50IG9yIGRlLXJhdGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY2ODg5NDQgOyBwcm92aWRlZCwgaG93ZXZlciwgdGhhdCBPcGVyYXRvciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjU5NDM2MCANCnNoYWxsIGJlIGF1dGhvcml6ZWQgdG8gY3VydGFpbCBvbiBhIG5vbi1wcm8gcmF0YSwgYnV0IGVxdWl0YWJsZSBhbmQgcmVhc29uYWJsZSBiYXNpcyAoYSkgaWYgc3VjaCBub24tcHJvIHJhdGEgYWxsb2NhdGlvbiBpcyBuZWNlc3NhcnkgdG8gY29tcGx5IHdpdGggZGlyZWN0aW9ucyBmcm9tIHRoZSBDQUlTTyBvciB0aGUgVHJhbnNtaXNzaW9uIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NDY3NSBPd25lcn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY1OTQzNjAgIGFuZCBkb2VzIG5vdCB2aW9sYXRlIHRoZSB0ZXJtcyBvZiB0aGUgSW50ZXJjb25uZWN0aW9uIEFncmVlbWVudCwgb3IgKGIpIHRvIHRoZSBleHRlbnQgdGhhdCB0aGUgbmVlZCBmb3IgY3VydGFpbG1lbnQgKGluY2x1ZGluZyBFbWVyZ2VuY3kgQ29uZGl0aW9ucykgY2FuIGJlIGF0dHJpYnV0ZWQgdG8gYSBwYXJ0aWN1bGFyIEZhY2lsaXR5fXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IC4gIEluIHRoZSBldmVudCB0aGF0IHRoZSBEZWxpdmVyeSBDYXBhYmlsaXR5IG9mIHRoZSBUcmFuc21pc3Npb24gTGluZSBleGNlZWRzIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNjgxMDM4IGNhcGFjaXR5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgcHJvdmlkZWQgaW4gdGhlIGFwcGxpY2FibGUgSW4NCnRlcmNvbm5lY3Rpb24gQWdyZWVtZW50LCB3aXRoIFRyYW5zbWlzc2lvbiBPd25lclxycXVvdGUgcyBhbmQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ0Njc1IHRoZSBDQUlTT1xycXVvdGUgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExNDI1OTUxIHdyaXR0ZW4gfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IGNvbnNlbnQgYW5kIGFwcHJvdmFsLCBlYWNoIENvLU93bmVyXHJxdW90ZSBzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMzNzUxNyByaWdodCB0byB1c2UgdGhlIERlbGl2ZXJ5IENhcGFiaWxpdHkgb2YgdGhlIFRyYW5zbWlzc2lvbiBMaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQp3aWxsIGJlIGluY3JlYXNlZCBwcm8gcmF0YSBpbiBhY2NvcmRhbmNlIHdpdGggaXRzIE93bmVyc2hpcCBJbnRlcmVzdCBmb3Igc28gbG9uZyBhcyB0aGUgRGVsaXZlcnkgQ2FwYWJpbGl0eSBpcyBpbiBleGNlc3Mgb2YgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM2ODEwMzggY2FwYWNpdHkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCnByb3ZpZGVkIGluIHRoZSBJbnRlcmNvbm5lY3Rpb24gQWdyZWVtZW50IHdpdGggVHJhbnNtaXNzaW9uIE93bmVyXHJxdW90ZSBzIGFuZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDQ2NzUgQ0FJU09ccnF1b3RlIHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTQyNTk1MSB3cml0dGVuIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBjb25zZW50IGFuZCBhcHByb3ZhbC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMyBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI2IFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA0LjIuMlx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNTkxODMyOSBFeGNlc3MgQ2FwYWJpbGl0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLiAgfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzMzc1MTcgTm8gQ28tT3duZXIgc2hhbGwgaGF2ZSB0aGUgcmlnaHQgdG8gdXNlIG1vcmUgdGhhbiBpdHMgUHJvcG9ydGlvbmF0ZSBTaGFyZSBvZiB0aGUgRGVsaXZlcnkgQ2FwYWJpbGl0eSBvZiB0aGUgVHJhbnNtaXNzaW9uIExpbmUuICBIb3dldmVyLCBkdXJpbmcgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCnBlcmlvZHMgaW4gd2hpY2ggYSBDby1Pd25lciBpcyBub3QgdXRpbGl6aW5nIGl0cyBmdWxsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMzNzUxNyBQcm9wb3J0aW9uYXRlIFNoYXJlIG9mIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgdGhlIERlbGl2ZXJ5IENhcGFiaWxpdHkgb2YgdGhlIFRyYW5zbWlzc2lvbiBMaW5lLCB0aGUgb3RoZXIgQ28tT3duZXJ9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMzNzUxNyBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgbWF5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1Njg0NTk3IHVzZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IG1vcmUgdGhhbiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzMzc1MTcgdGhlaXIgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IGZ1bGwgVW5kaXZpZGVkIFVzZSBJbnRlcmVzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMzNzUxNyBzIHRoZXJlaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjU2ODI0ICB3aXRob3V0IGFkZGl0aW9uYWwgY29zdHMgYmV5b25kIGl0cyBQcm9wb3J0aW9uYXRlIFNoYXJlIG9mIE8mTSBDb3N0c317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAsIHN1YmplY3QgdG8gdGhlIG9wZXJhdGluZyBsaW1pdHMgb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzLCBzbyBsb25nIGFzIHN1Y2ggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU2ODQ1OTcgdXNlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQpkb2VzIG5vdCBpbnRlcmZlcmUgd2l0aCBvciBhZHZlcnNlbHkgYWZmZWN0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMzNzUxNyBhbnkgb3RoZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBDby1Pd25lclxycXVvdGUgcyBlbmVyZ3kgc2NoZWR1bGVzIGFuZCBkZWxpdmVyaWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI1NjgyNCANCjsgcHJvdmlkZWQgdGhhdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ4ODA0MTg5IA0KKGkpIHByaW9yIHRvIGFueSBDby1Pd25lciB1c2luZyBtb3JlIHRoYW4gaXRzIFByb3BvcnRpb25hdGUgU2hhcmUgb2YgdGhlIERlbGl2ZXJ5IENhcGFiaWxpdHkgb2YgdGhlIFRyYW5zbWlzc2lvbiBMaW5lLCB0aGUgQ28tT3duZXJzIHNoYWxsIGhhdmUgb2J0YWluZWQgYWxsIG5lY2Vzc2FyeSBHb3Zlcm5tZW50YWwgQXV0aG9yaXphdGlvbnMsIGluY2x1ZGluZyBGRVJDIGFjY2VwdGFuY2UgZm9yIA0KZmlsaW5nIG9mIGFuIGVmZmVjdGl2ZSB0cmFuc21pc3Npb24gc2VydmljZXMgYWdyZWVtZW50IGZvciBzdWNoIHVzYWdlIHRvIHRoZSBleHRlbnQgcmVxdWlyZWQsIGFuZCAoaWkpIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNTY4MjQgDQphbnkgQ28tT3duZXIgdXNpbmcgbW9yZSB0aGFuIGl0cyBQcm9wb3J0aW9uYXRlIFNoYXJlIG9mIHRoZSBEZWxpdmVyeSBDYXBhYmlsaXR5IG9mIHRoZSBUcmFuc21pc3Npb24gTGluZSBzaGFsbCBzdXJyZW5kZXIgc3VjaCBleGNlc3MgRGVsaXZlcnkgQ2FwYWJpbGl0eSBwcm9tcHRseSB3aGVuIGl0IGlzIG5lZWRlZCBieSB0aGUgQ28tT3duZXIgZW50aXRsZWQgdGhlcmV0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkODIxMDczMCAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYyNjgzNTQgIHNoYWxsIGluZGVtbmlmeSBhbmQgaG9sZCBoYXJtbGVzcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ4MjEwNzMwIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjI2ODM1NCBvdGhlciBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkODIxMDczMCBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYyNjgzNTQgIGZvciBMb3NzZXMgcmVzdWx0aW5nIGZyb20gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkODIxMDczMCBhIGZhaWx1cmUgb3IgZGVsYXkgaW4gc3VycmVuZGVyaW5nIHN1Y2ggZXhjZXNzIERlbGl2ZXJ5IENhcGFiaWxpdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjI2ODM1NCAufQ0Ke1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMyOTR9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2NjYzODUxIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDQuM1x0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNjY2Mzg1MSBDb25zdHJ1Y3Rpb247IH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgUmVpbWJ1cnNlbWVudCBvZiBDb3N0c317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzI5NH0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2NjYzODUxIA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMyBccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY2NjM4NTEgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNC4zLjFcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMzXHFqIFxmaTcyMFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MjE2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMlxvdXRsaW5lbGV2ZWwyXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkOTQ0Njc1IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjZcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE2NjYzODUxIFN1YmplY3QgdG8gaXRzIHJpZ2h0IHRvIHJlaW1idXJzZW1lbnQgYXMgc2V0IGZvcnRoIGhlcmVpbiwgUmlzaW5nIFRyZWUgSSB3aWxsIGRlc2lnbiwgcGVybWl0IGFuZCBjb25zdHJ1Y3QgfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxpbnNyc2lkNjE2MTc3OCBhbGwgb2YgfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY2NjM4NTEgDQp0aGUgU2hhcmVkIEZhY2lsaXRpZXMgaW4gYWNjb3JkYW5jZSB3aXRoIEFwcGxpY2FibGUgfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY1MTg5ODUgTGF3c317XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2NjYzODUxICwgR29vZCBVdGlsaXR5IFByYWN0aWNlIGFuZCB0aGUgZGVzY3JpcHRpb24gb2YgdGhlIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTY1MTg5ODUgU2hhcmVkfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY2NjM4NTEgIEZhY2lsaXRpZXMgb24gfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY2NjM4NTFcY2hhcnJzaWQ5NDQ2NzUgRXhoaWJpdCBCfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY2NjM4NTEgIGF0dGFjaGVkIGhlcmV0by4gIH17DQpccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM1MjcxODYgDQpVcG9uIGNvbXBsZXRpb24sIHRlc3RpbmcgYW5kIGNvbW1pc3Npb25pbmcgb2YgZWFjaCBhcHBsaWNhYmxlIGdyb3VwIG9mIFNoYXJlZCBGYWNpbGl0aWVzLCBSaXNpbmcgVHJlZSBJIHdpbGwgYXNzaWduLCB0cmFuc2ZlciBhbmQgY29udmV5IHN1Y2ggU2hhcmVkIEZhY2lsaXRpZXMgdG8gdGhlIENvLU93bmVycyBpbiB0aGUgYXBwbGljYWJsZSBTaGFyZWQgQXNzZXQgR3JvdXAgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZWkNCnIgcmVzcGVjdGl2ZSBQcm9wb3J0aW9uYXRlIFNoYXJlcywgaW5jbHVkaW5nIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NzUyNzEyIHJpZ2h0cyB1bmRlciBjb25zdHJ1Y3Rpb24gYW5kIHN1cHBseSBjb250cmFjdHMgYW5kIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzNTI3MTg2IA0KY29udHJhY3Rvciwgc3VwcGxpZXIgYW5kL29yIG1hbnVmYWN0dXJlciB3YXJyYW50aWVzIHJlbGF0ZWQgdG8gc3VjaCBTaGFyZWQgRmFjaWxpdGllcywgd2hpY2ggd2FycmFudGllcyB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGluc3JzaWQxNDc1MjcxMiBtYXl9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGluc3JzaWQxMzUyNzE4NiAgYmUgZW5mb3JjZWQgfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDc1MjcxMiBhcyBwcm92aWRlZCBiZWxvd317XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzNTI3MTg2IC4gIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcc2NhcHNcaW5zcnNpZDEzNTI3MTg2XGNoYXJyc2lkNTU5NDUyNCBIb3dldmVyLCBub3R3aXRoc3Rhbg0KZGluZyBhbnl0aGluZyBoZXJlaW4gdG8gdGhlIGNvbnRyYXJ5LCBSaXNpbmcgVHJlZSBJIHNoYWxsIGhhdmUgbm8gbGlhYmlsaXR5IHRvIHRoZSBvdGhlciBDby1Pd25lcnMgZm9yIGFueSBkZWZlY3QgaW4gdGhlIGRlc2lnbiwgY29uc3RydWN0aW9uIG9yIHV0aWxpdHkgb2YgYW55IG9mIHRoZSBTaGFyZWQgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcc2NhcHNcaW5zcnNpZDE1NzQ2OTA1IA0KLiAgUmlzaW5nIFRyZWUgSSBtYWtlcyBubyByZXByZXNlbnRhdGlvbnMgb3Igd2FycmFudGllcyBvZiBhbnkga2luZCB3aXRoIHJlc3BlY3QgdG8gdGhlIGNvbmRpdGlvbiwgdXNlIG9yIGZpdG5lc3Mgb2YgYW55IG9mIHRoZSBTaGFyZWQgUmVhbCBwcm9wZXJ0eSB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXHNjYXBzXGluc3JzaWQxMDU2MTA4OSBvciB3aXRoIHJlc3BlY3QgdG8gfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IA0KXGx0cmNoXGZjczAgXHNjYXBzXGluc3JzaWQxNTc0NjkwNSB0aGUgZGVzaWduLCBjb25zdHJ1Y3Rpb24sIG9wZXJhdGlvbiBvciB1dGlsaXR5IG9mIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcc2NhcHNcaW5zcnNpZDEwNTYxMDg5IGFueSBvZiB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXHNjYXBzXGluc3JzaWQxNTc0NjkwNSB0aGUgU2hhcmVkIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIA0KXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcc2NhcHNcaW5zcnNpZDEwNTYxMDg5ICx9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXHNjYXBzXGluc3JzaWQxMjY3NjA1XGNoYXJyc2lkNTU5NDUyNCAgYW5kIGhlcmVieSBkaXNjbGFpbXMgYW55IHdhcnJhbnR5IG9mIG1lcmNoYW50YWJpbGl0eSBvciBmaXRuZXNzIGZvciBhIHBhcnRpY3VsYXINCiBwdXJwb3NlIG9yIGFueSBvdGhlciB3YXJyYW50eSBvZiBhbnkga2luZCB3aXRoIHJlc3BlY3QgdG8gfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxzY2Fwc1xpbnNyc2lkMTA1NjEwODkgdGhlIFNoYXJlZCBSZWFsIFByb3BlcnR5IG9yIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcc2NhcHNcaW5zcnNpZDEyNjc2MDVcY2hhcnJzaWQ1NTk0NTI0IHRoZSBTaGFyZWQgRmFjaWxpdGllcy59ew0KXHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNjc2MDUgICBFYWNoIG9mIHRoZSBDby1Pd25lcnMgYWdyZWVzIHRoYXQgdGhleSB3aWxsIGxvb2sgc29sZWx5IHRvIHRoZSBkZXNpZ25lcnMsIGNvbnRyYWN0b3JzLCBzdXBwbGllcnMsIG1hbnVmYWN0dXJlcnMgYW5kIG90aGVyIFBlcnNvbnMgd2hvIHBhcnRpY2lwYXRlDQpkIGluIHRoZSBkZXNpZ24gYW5kL29yIGNvbnN0cnVjdGlvbiBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgd2l0aCByZXNwZWN0IHRvIGFueSBkZWZlY3RzIG9yIGJyZWFjaGVzIG9mIGNvbnRyYWN0IG9yIHdhcnJhbnR5LiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY2NjM4NTEgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMzIFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjYgXGx0cmNoXGZjczAgXGluc3JzaWQxNjUxODk4NSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA0LjMuMlx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY1MTg5ODUgDQpSaXNpbmcgVHJlZSBJSSBhbmQgUmlzaW5nIFRyZWUgSUlJIHNoYWxsIGVhY2ggcmVpbWJ1cnNlIFJpc2luZyBUcmVlIEkgZm9yIGFsbCBjb3N0cyBhbmQgZXhwZW5zZXMgaW5jdXJyZWQgYnkgUmlzaW5nIFRyZWUgSSBpbiBkZQ0Kc2lnbmluZywgcGVybWl0dGluZyBhbmQgY29uc3RydWN0aW5nIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBpbiBhY2NvcmRhbmNlIHdpdGggdGhlaXIgcmVzcGVjdGl2ZSBQcm9wb3J0aW9uYXRlIFNoYXJlcyBvZiB0aGUgY29zdHMgb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI2NzYwNSB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgaW4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY1MTg5ODUgDQplYWNoIFNoYXJlZCBGYWNpbGl0aWVzIEdyb3VwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI2NzYwNSAgb2Ygd2hpY2ggdGhleSBhcmUgbWVtYmVycywgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZWlyIFByb3BvcnRpb25hdGUgU2hhcmVzIGluIGVhY2ggc3VjaCBTaGFyZWQgQXNzZXRzIEdyb3VwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYwMDM3MzQgDQo7IHByb3ZpZGVkLCBob3dldmVyLCB0aGF0IGZvciBwdXJwb3NlcyBvZiB0aGlzIFNlY3Rpb24gNC4zLjIsIHRoZSBDby1Pd25lcnNccnF1b3RlICByZXNwZWN0aXZlIFByb3BvcnRpb25hdGUgU2hhcmVzIHNoYWxsIGJlIGRldGVybWluZWQgb24gdGhlIGJhc2lzIG9mIHRoZSBuYW1lcGxhdGUgY2FwYWNpdGllcyBzZXQgZm9ydGggaW4gUmVjaXRhbCBCLCByZWdhcmRsZXNzIG9mIHdoZXRoZXIgb3Igbm8NCnQgYSBGYWNpbGl0eSBoYXMgYWNoaWV2ZWQgaXRzIENvbW1pc3Npb25pbmcgRGF0ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNjc2MDUgLiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY1MTg5ODUgU3VjaCByZWltYnVyc2VtZW50IHNoYWxsIGJlIG1hZGUgd2l0aGluIGZpZnRlZW4gKDE1KSBkYXlzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDUzOTMwMSBhZnRlcg0KfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY1MTg5ODUgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDUzOTMwMSByZWNlaXB0IG9mIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNTY4MjQgKGkpIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ0ODMzMDQgYSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjU2ODI0IA0Kbm90aWNlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ0ODMzMDQgZnJvbSBSaXNpbmcgVHJlZSBJIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNTY4MjQgdGhhdCBcJzkzRmluYWwgQ29tcGxldGlvblwnOTQgb3IgaXRzIGVxdWl2YWxlbnQgZm9yIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBpbiBzdWNoIFNoYXJlZCBBc3NldHMgR3JvdXAgaGFzIG9jY3VycmVkIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkNDQ4MzMwNCB1bmRlciB0aGUgY29uc3RydWN0aW9uIGNvbnRyYWN0IHRoZXJlZm9yLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjU2ODI0IGFuZCAoaWkpIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDUzOTMwMSANCmEgc3RhdGVtZW50IG9mIHRoZSBhbW91bnQgdG8gYmUgcmVpbWJ1cnNlZCAoaW5jbHVkaW5nIGFwcHJvcHJpYXRlIHN1cHBvcnRpbmcgZG9jdW1lbnRhdGlvbil9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjEzNDMzOCANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczMgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyNiBcbHRyY2hcZmNzMCBcaW5zcnNpZDU1MjI1ODUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNC4zLjNcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU1MjI1ODUgRWFjaCBDby1Pd25lciBpbnRlbmRzIHRoYXQgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MTM0MzM4IGxsIH17DQpccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ3NTI3MTIgcmlnaHRzIHVuZGVyIGNvbnN0cnVjdGlvbiBhbmQgc3VwcGx5IGNvbnRyYWN0cyBhbmQgY29udHJhY3Rvciwgc3VwcGxpZXIgYW5kL29yIG1hbnVmYWN0dXJlciB3YXJyYW50aWVzIHJlbGF0ZWQgdG8gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYxMzQzMzggYW55IFNoYXJlZCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDc1MjcxMiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDQ4MzMwNCBzaGFsbCBiZSBoZWxkIGJ5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NzUyNzEyIHRoZSBhcHBsaWNhYmxlIENvLU93bmVycyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NDgzMzA0IGluIHN1Y2ggU2hhcmVkIEFzc2V0cyBHcm91cH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYxMzQzMzggLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0Nzg0NzQgYW5kIGVhY2ggQ28tT3duZXIgc2hhbGwgY29vcGVyYXRlIHdpdGggZWFjaCBvdGhlciB0byBlbnN1cmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYxMzQzMzggZW5mb3JjZWFifXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDc4NDc0IGlsaXR5fXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjEzNDMzOCAgYnkgYW55IG9mIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ0ODMzMDQgc3VjaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjEzNDMzOCBDby1Pd25lcnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDc1MjcxMiAgb3IgYnkgT3BlcmF0b3IgYXMgYWcNCmVudCBmb3IgdGhlIENvLU93bmVyc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MTM0MzM4IDsgcHJvdmlkZWQgdGhhdCBlbmZvcmNlbWVudCBvZiBhbnkgc3VjaCBjb250cmFjdCBvciB3YXJyYW50eSBzaGFsbCBvbmx5IGJlIGRvbmUgYnkgUmlzaW5nIFRyZWUgSX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NzUyNzEyIA0KIHVudGlsIHRoZSBjb21wbGV0aW9uIG9mIGFsbCBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgYW5kIGJ5IE9wZXJhdG9yIHRoZXJlYWZ0ZXIsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYxMzQzMzggIHVubGVzcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NDgzMzA0IFJpc2luZyBUcmVlIEkgb3IgT3BlcmF0b3IsIGFzIGFwcGxpY2FibGUsfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNjEzNDMzOCAgaGFzIGZhaWxlZCB0byBkbyBzbyB3aXRoaW4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDQ4MzMwNCBuaW5ldHkgKDkwKX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MTM0MzM4ICBkYXlzIGFmdGVyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NzUyNzEyIHdyaXR0ZW4gfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNjEzNDMzOCBub3RpY2UgZnJvbSBhbnkgb3RoZXIgQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NDgzMzA0ICBzZXR0aW5nIGZvcnRoIHRoZSByZWFzb25zIHRoYXQgc3VjaCBjb250cmFjdCBvciB3YXJyYW50eSBoYXMgYmVlbiBicmVhY2hlZCBhbmQgbXVzdCBiZSBlbmZvcmNlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NjQ1OTc4ICx9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NzUyNzEyICB1bmxlc3MgdGhlcmUgaXMgYSBkaXNwdXRlIHJlZ2FyZGluZyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDY0NTk3OCBzdWNoIGVuZm9yY2VtZW50LCBpbiB3aGljaCBldmVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ0ODMzMDQgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQ2NDU5NzggdGhlIG90aGVyIENvLU93bmVyXHJxdW90ZSBzIHNoYWxsIG5vdCBleGVyY2lzZSBzdWNoIHJpZ2h0cyB1bnRpbCBzdWNoIGRpc3B1dGUgaXMgcmVzb2x2ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjEzNDMzOCAuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMzIFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjYgXGx0cmNoXGZjczAgXGluc3JzaWQxNDY0NTk3OCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA0LjMuNFx0YWJ9fVxwYXJkIFxsdHJwYXJcczNccWogXGZpNzIwXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgyMTYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwyXG91dGxpbmVsZXZlbDJcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDY0NTk3OCANClRvIHRoZSBleHRlbnQgdGhhdCBpdCBkb2VzIG5vdCBvdGhlcndpc2UgaGF2ZSB0aGUgbmVjZXNzYXJ5IHJlYWwgcHJvcGVydHkgaW50ZXJlc3RzIGFuZCByaWdodHMsIFJpc2luZyBUcmVlIEkgc2hhbGwgaGF2ZSwgYW5kIGVhY2ggb2YgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNDY5Nzc3IG90aGVyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NjQ1OTc4IENvLU93bmVycyB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNDY5Nzc3IHNoYWxsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MDAzNzM0IGFuZCBoZXJlYnkgZG8gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ2NDU5NzggZ3JhbnQgdG8gUmlzaW5nIFRyZWUgSX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MDAzNzM0ICx9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NjQ1OTc4ICB0aGUgYmVuZWZpdCBvZiBhbmQgdGhlIHJpZ2h0IHRvIHVzZSBhbGwgb2YgdGhlIFNoYXJlZCBSZWFsIFByb3BlcnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjQ1MTQyOCAsIHN1YmplY3QgdG8gYW55IHJlc3RyaWN0aW9ucyBvciBsaW1pdGF0aW9ucyBpbiB0aGUgVW5kZXJseWluZyBHcmFudGluZyBEb2N1bWVudHMsfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDY0NTk3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjQ1MTQyOCBmb3IgdGhlIHB1cnBvc2Ugb2YgY29uc3RydWN0aW5nLCBpbnN0YWxsaW5nLCB0ZXN0aW5nIGFuZCBjb21taXNzaW9uaW5nIHRoZSBTaGFyZWQgRmFjaWxpdGllcy59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNDUxNDI4XGNoYXJyc2lkMTAxMDM3MDYgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMzIFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjYgXGx0cmNoXGZjczAgXGluc3JzaWQyNDUxNDI4IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDQuMy41XHRhYn19XHBhcmQgXGx0cnBhclxzM1xxaiBcZmk3MjBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDIxNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDJcb3V0bGluZWxldmVsMlxhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDU1OTQ1MjQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNDUxNDI4IA0KTm90d2l0aHN0YW5kaW5nIHRoZSBmYWN0IHRoYXQgdGhlIGRlc2lnbiwgY29uc3RydWN0aW9uLCB0ZXN0aW5nIGFuZCBjb21taXNzaW9uaW5nIG9mIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBpcyBiZWluZyBkb25lIGJ5IFJpc2luZyBUcmVlIEksIHRoZSBDby1Pd25lcnMgYWdyZWUgdGhhdCB0aGV5IHdpbGwgc2hhcmUgdGhlIHJpc2tzIHRoZXJlb2YgYW1vbmcgdGhlbXNlbHZlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkODIxMDczMCAgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZWlyIHJlc3BlY3RpdmUgUHJvcG9ydGlvbmF0ZSBTaGFyZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNDUxNDI4IC4gIEFjY29yZGluZ2x5LCBlYWNoIG9mIHRoZSBDby1Pd25lcnMgd2lsbCBpbmRlbW5pZnkgYW5kIGhvbGQgUmlzaW5nIFRyZWUgSSBoYXJtbGVzcyBmcm9tIGFuZCBhZ2FpbnN0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkODIxMDczMCBpdHMgUHJvcG9ydGlvbmF0ZSBTaGFyZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNjgxMDM4IG9mIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI0NTE0MjggYW55IGNsYWltcywgZGVtYW5kcywgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkODQ1NzQ0MSANCmNvc3RzLCBvYmxpZ2F0aW9ucyBhbmQgbGlhYmlsaXRpZXMgYnkgb3IgdG8gdGhpcmQgcGFydGllcyBhcyBhIHJlc3VsdCBvZiB0aGUgZGVzaWduLCBjb25zdHJ1Y3Rpb24sIHRlc3RpbmcgYW5kIGNvbW1pc3Npb25pbmcgb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNDUxNDI4IA0KZXhjZXB0IHRvIHRoZSBleHRlbnQgcmVzdWx0aW5nIGZyb20gdGhlIGdyb3NzIG5lZ2xpZ2VuY2Ugb3Igd2lsbGZ1bCBtaXNjb25kdWN0IG9mIFJpc2luZyBUcmVlIEl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjAwMzczNCA7IHByb3ZpZGVkLCBob3dldmVyLCB0aGF0IGZvciBwdXJwb3NlcyBvZiB0aGlzIFNlY3Rpb24gNC4zLjUsIHRoZSBDby1Pd25lcnNccnF1b3RlICByZXNwZWN0aXZlDQogUHJvcG9ydGlvbmF0ZSBTaGFyZXMgc2hhbGwgYmUgZGV0ZXJtaW5lZCBvbiB0aGUgYmFzaXMgb2YgdGhlIG5hbWVwbGF0ZSBjYXBhY2l0aWVzIHNldCBmb3J0aCBpbiBSZWNpdGFsIEIsIHJlZ2FyZGxlc3Mgb2Ygd2hldGhlciBvciBub3QgYSBGYWNpbGl0eSBoYXMgYWNoaWV2ZWQgaXRzIENvbW1pc3Npb25pbmcgRGF0ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ4MTE5NDYgLiB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI0NTE0MjhcY2hhcnJzaWQ1NTk0NTI0IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMyOTV9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNC40XHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgQWRkaXRpb25hbCBQaGFzZXN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMyOTV9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDU2MTA4OSBBZGRpdGlvbmFsIGdlbmVyYXRpbmcgZmFjaWxpdGllcywgd2hldGhlciBvd25lZCBieSBhIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgQ28tT3duZXIgb3IgaXRzIEFmZmlsaWF0ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDU2MTA4OSANCm9yIGJ5IGFub3RoZXIgUGVyc29uIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgKH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwNTYxMDg5IGVhY2ggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBhbiBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgQWRkaXRpb25hbCBQaGFzZX17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcJzk0KX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwNTYxMDg5ICBtYXkgYmUgY29ubmVjdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDIyMzA5OCAgdG8gdGhlIFNoYXJlZCBGYWNpbGl0aWVzIGFuZCBtYXkgdXNlIHRoZSBTaGFyZWQgQXNzZXRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5ICwgdG8gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTA1NjEwODkgdGhlIGV4dGVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIGNvbXBhdGlibGUgd2l0aCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDU2MTA4OSB0aGUgZXhpc3RpbmcgU2hhcmVkIEZhY2lsaXRpZXMgYW5kIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBUcmFuc21pc3Npb24gT3duZXJccnF1b3RlIHMgaW50ZXJjb25uZWN0aW9uIGZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDU2MTA4OSAsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgc3ViamVjdCB0byB0aGUgdGVybXMgYW5kIGNvbmRpdGlvbnMgb2YgdGhpcyBBZ3JlZW1lbnR9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI2NDIwMTEgIGFuZCBhbnkgcmVxdWlyZWQgRkVSQyBhcHByb3ZhbHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDU2MTA4OSAsIGJ1dCBvbmx5IHVwb24gdGhlIHVuYW5pbW91cyB3cml0dGVuIGFwcHJvdmFsIG9mIGFsbCBvZiB0aGUgQ28tT3duZXJzIGFuZCB0aGVpciByZXNwZWN0aXZlIExlbmRlcnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1Nzk3NzU0IA0KIGFuZCBzdWJqZWN0IHRvIHRoZSByZWNlaXB0IG9mIGFsbCBuZWNlc3NhcnkgY29uc2VudHMgYW5kIGFwcHJvdmFscyBmcm9tIEdvdmVybm1lbnRhbCBBdXRob3JpdGllcywgb3duZXJzIG9mIGFueSBTaGFyZWQgUmVhbCBQcm9wZXJ0eSwgdGhlIFRyYW5zbWlzc2lvbiBPd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQyMjMwOTggLCBDQUlTT317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTc5Nzc1NCAgYW5kIG90aGVyIG5lY2Vzc2FyeSBQZXJzb25zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAuICBUaGUgb3duZXIgb2Ygc3VjaCBBZGRpdGlvbmFsIFBoYXNlIHNoYWxsIGV4ZWN1dGUgYSBqb2luZGVyLCB0aGUgZm9ybSBvZiB3aGljaCBpcyBhdHRhY2hlZCBhcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzA3MTE3MCBFeGhpYml0IEZ9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1NTM5MTg4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KaGVyZXRvLCBhbmQgdGhlIENvLU93bmVycyBzaGFsbCBleGVjdXRlIGFuIGFwcHJvcHJpYXRlIGFtZW5kbWVudCB0byB0aGlzIEFncmVlbWVudCB0byByZWZsZWN0IHRoZSBVbmRpdmlkZWQgVXNlIEludGVyZXN0IG9mIHRoZSBBZGRpdGlvbmFsIFBoYXNlIGluIHRoZSBhcHBsaWNhYmxlIFNoYXJlZCBBc3NldHMgR3JvdXBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTA1NjEwODkgDQogYW5kIHN1Y2ggb3RoZXIgbWF0dGVycyBhcyB0aGUgQ28tT3duZXJzIGFuZCB0aGUgb3duZXIgb2YgdGhlIEFkZGl0aW9uYWwgUGhhc2UgbWF5IGFncmVlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAuICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2OTY2NDE1IA0KQW55IHN1Y2ggYW1lbmRtZW50IHRvIHRoaXMgQWdyZWVtZW50IHNoYWxsIGJlIGZpbGVkIHdpdGggRkVSQyB1bmRlciBTZWN0aW9uIDIwNSBvZiB0aGUgRlBBLCBjb25zaXN0ZW50IHdpdGggU2VjdGlvbiAxNy4zIGhlcmVvZiwgYW5kIHNoYWxsIG5vdCBiZWNvbWUgZWZmZWN0aXZlIHVudGlsIGFjY2VwdGVkIGJ5IEZFUkMuICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KTm90d2l0aHN0YW5kaW5nIGFueXRoaW5nIGNvbnRhaW5lZCBoZXJlaW4gdG8gdGhlIGNvbnRyYXJ5LCB0aGUgb3duZXIgb2YgdGhlIEFkZGl0aW9uYWwgUGhhc2Ugc2hhbGwgYmVhciBhbnkgaW5jcmVtZW50YWwgY29zdHMgYW5kIGV4cGVuc2VzIG9mIG1vZGlmeWluZyBhbmQgdXBncmFkaW5nIHRoZSBhcHBsaWNhYmxlIGV4aXN0aW5nIFNoYXJlZCBGYWNpbGl0aWVzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDUzOTMwMSANCm9yIGFjcXVpcmluZyBhZGRpdGlvbmFsIFNoYXJlZCBSZWFsIFByb3BlcnR5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgdG8gYWNjb21tb2RhdGUgdGhlIGNvbm5lY3Rpb24gb2YgaXRzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwNTYxMDg5IGdlbmVyYXRpbmcgZmFjaWxpdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IC59ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQyMTc2NzM2XGNoYXJyc2lkOTQ0Njc1IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMyOTZ9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMjk5MDE2IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDQuNVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxMTI5OTAxNiBBZGRpdGlvbmFsIFNoYXJlZCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMjk2fQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEyOTkwMTYgDQpPbmNlIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBkZXNjcmliZWQgb24gRXhoaWJpdCBCIGhhdmUgYmVlbiBjb25zdHJ1Y3RlZCwgbm8gQ28tT3duZXIgbWF5IG1vZGlmeSwgYWRkIHRvIG9yIHJlbW92ZSBhbnkgb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzLCBleGNlcHQgKGkpIGFzIG1heSBiZSByZXF1aXJlZCBieSBBcHBsaWNhYmxlIExhd3MgYW5kIGFmdGVyIG5vdCBsZXNzIHRoYW4gdGhpcnQNCnkgKDMwKSBkYXlzIHdyaXR0ZW4gbm90aWNlIHRvIHRoZSBvdGhlciBDby1Pd25lcnMsIG9yIChpaSkgd2l0aCB0aGUgcHJpb3Igd3JpdHRlbiBjb25zZW50IG9mIGFsbCBDby1Pd25lcnMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTc5Nzc1NCAgYW5kIHRoZWlyIHJlc3BlY3RpdmUgTGVuZGVyc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMjk5MDE2ICB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDQ3ODQ3NCAofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEyOTkwMTYgc3VjaCBjb25zZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDc4NDc0ICBvZiB0aGUgQ28tT3duZXJzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEyOTkwMTYgIG5vdCB0byBiZSB1bnJlYXNvbmFibHkgd2l0aGhlbGR9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDQ3ODQ3NCApfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEyOTkwMTYgLiBJbiBlaXRoZXIgY2FzZSwgdGhlIENvLU93bmVyIHByb3Bvc2luZyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTQzMDYzNCB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMjk5MDE2ICBtb2RpZnksIGFkZCANCnRvIG9yIHJlbW92ZSBhbnkgb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDYyNTU4MzAgc2hhbGwgb2J0YWluIGEgcmVwb3J0IGJ5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMjk5MDE2IGEgcXVhbGlmaWVkIGluZGVwZW5kZW50IGVuZ2luZWVyIHJlYXNvbmFibHkgYWNjZXB0YWJsZSB0byBhbGwgQ28tT3duZXJzIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkNjI1NTgzMCBmaW5kaW5nIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMjk5MDE2IHRoYXQgc3VjaCBtb2RpZmljYXRpb25zLCBhZGRpdGlvbnMgb3IgcmVtb3ZhbHMgd2lsbCBub3QgYWR2ZXJzZWx5IGFmZmVjdCB0aGUgb3BlcmF0aW9uLCBwZXJmb3JtYW5jZSwgcmVsaWFiaWwNCml0eSBvciBtYWludGVuYW5jZSBjb3N0cyBvZiBhbnkgRmFjaWxpdHkgKGV4Y2VwdCBhcyBtYXkgYmUgYWdyZWVkIGJ5IHRoZSBvd25lciBvZiBzdWNoIFByb2plY3QpLiAgSW4gY29ubmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MTUzOTQgY3Rpb24gd2l0aCB0aGUgYXBwcm92YWwgb2YgYW55IHN1Y2ggbW9kaWZpY2F0aW9ucywgYWRkaXRpb25zIG9yIHJlbW92YWxzIG9mIFNoYXJlZH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTEyOTkwMTYgIEZhY2lsaXRpZXMsIHRoZSBDby19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MTUzOTQgT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTI5OTAxNiBzIHNoYWxsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDYxNTM5NCBuZWdvdGlhdGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDExMjk5MDE2ICBpbiBnb29kIGZhaXRoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDYxNTM5NCBhbmQgYWdyZWUgb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTI5OTAxNiAgKGEpIHRoZSBkZXNpZ24gYW5kIGNvbnN0cnVjdGlvbiBvZiBzdWNoIG1vZGlmaWNhdGlvbnMgYW5kL29yIGFkZGl0aW9uYWwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ2MTUzOTQgU2hhcmVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEyOTkwMTYgIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MTUzOTQgIGFuZC9vciB0aGUgcGxhbiBvZiByZW1vdmFsIG9mIHN1Y2ggU2hhcmVkIEZhY2lsaXRpZXMsIGFzIGFwcGxpY2FibGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTI5OTAxNiANCiwgKGIpIHRoZSBhbGxvY2F0aW9uIG9mIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDYxNTM5NCBkZXNpZ24gYW5kIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMjk5MDE2IGNvbnN0cnVjdGlvbiBjb3N0cyBvZiB0aGUgbW9kaWZpY2F0aW9ucyBhbmQvb3IgYWRkaXRpb25hbCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MTUzOTQgU2hhcmVkfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTI5OTAxNiAgRmFjaWxpdGllcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MTUzOTQgYW5kL29yIHRoZSBjb3N0cyBvZiByZW1vdmFsIG9mIHN1Y2ggU2hhcmVkIEZhY2lsaXRpZXMsIGFzIGFwcGxpY2FibGUsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMjk5MDE2IGFtb25nIHRoZSBDby19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDYxNTM5NCBPd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMjk5MDE2IHMsIGFuZCAoYykgdGhlIGFsbG9jYXRpb24gb2YgY29zdHMgYXNzb2NpYXRlZCB3aXRoIHRoZSBvcGVyYXRpb24gYW5kIG1haW50ZW5hbmNlIG9mIHRoZSBtb2RpZmllZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MTUzOTQgU2hhcmVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxMTI5OTAxNiAgRmFjaWxpdGllcyBhbmQvb3IgdGhlIGFkZGl0aW9uYWwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjE1Mzk0IFNoYXJlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMjk5MDE2ICBGYWNpbGl0aWVzIGFtb25nIHRoZSBDby19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MTUzOTQgT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDExMjk5MDE2IHM7IHByb3ZpZGVkIHRoYXQgbm8gQ28tfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjE1Mzk0IE93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEyOTkwMTYgIHNoYWxsIGJlIHJlcXVpcmVkIHRvIHJlaW1idXJzZSBhbnkgb3RoZXIgQ28tfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjE1Mzk0IE93bmVyfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTI5OTAxNiAgZm9yIGFueSBjb3N0cyBpbmN1cnJlZCBpbiB0aGUgY29uc3RydWN0aW9uLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MTUzOTQgcmVtb3ZhbCwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEyOTkwMTYgb3BlcmF0aW9uIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDYxNTM5NCBvcn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEyOTkwMTYgIG1haW50ZW5hbmNlIG9mIGFueSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MTUzOTQgbW9kaWZpZWQsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEyOTkwMTYgIGFkZGl0aW9uYWwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjE1Mzk0IGFuZC9vciByZW1vdmVkIFNoYXJlZH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEyOTkwMTYgIEZhY2lsaXRpZXMgdW5sZXNzIGl0IGhhcyBleHByZXNzbHkgYWdyZWVkIHRvIGRvIHNvIGluIHdyaXRpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MTUzOTQgLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzI5N317XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYxMzQzMzggXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNC42XHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkNzA3ODAwMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNjEzNDMzOCBObyBBZGRpdGlvbmFsIENvLU93bmVyc317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlxjZjZcaW5zcnNpZDE2MTM0MzM4XGNoYXJyc2lkMTYxMzQzMzgge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzI5N30NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE2MTM0MzM4IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MTM0MzM4IC4gIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ3ODQ3NCBFeGNlcHQgYXMgcHJvdmlkZWQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYwMDM3MzQgaGVyZWlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDc4NDc0ICwgbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU3OTc3NTQgb317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDU5MTYwNyANCiBQZXJzb24gbWF5IGJlY29tZSBhIENvLU93bmVyIHVuZGVyIHRoaXMgQWdyZWVtZW50IG9yIGFuIGFkZGl0aW9uYWwgY28tb3duZXIgb2YgYW55IG9mIHRoZSBTaGFyZWQgRmFjaWxpdGllcywgdGhlIFNoYXJlZCBSZWFsIFByb3BlcnR5IG9yIHRoZSBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBBZ3JlZW1lbnRzIHdpdGhvdXQgdGhlIHByaW9yIHdyaXR0ZW4gY29uc2VudCBvZiBhbGwgb2YgdGhlIENvLU93bmVycy4gIEFueSBQZXJzb24gYmVjb21pbmcgYQ0KIENvLU93bmVyIHVuZGVyIHRoaXMgQWdyZWVtZW50IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU3OTc3NTQgc2hhbGwgZXhlY3V0ZSBhIGpvaW5kZXIsIHRoZSBmb3JtIG9mIHdoaWNoIGlzIGF0dGFjaGVkIGFzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMDcxMTcwIEV4aGliaXQgRn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU3OTc3NTQgDQogaGVyZXRvIGFuZCBzdWNoIG90aGVyIGFtZW5kbWVudHMgYXMgdGhlIENvLU93bmVycyBoYXZlIGRldGVybWluZWQgbWF5IGJlIG5lY2Vzc2FyeS59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjEzNDMzOCANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczEgXHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCBBUlRJQ0xFIFZcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczFccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBcbGluZSB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMyOTh9TUVURVJJTkcsIE1FQVNVUkVNRU5UIE9GIEVORVJHWSBERUxJVkVSSUVTIEFORCBMT1NTRVN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMyOTh9DQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzI5OX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA1LjFcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBNZWFzdXJlbWVudH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzI5OX0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE2MDAzNzM0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI3MjUzNSBFbmVyZ3l9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjA4ODA2OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSB0cmFuc21pdHRlZCBvbiB0aGUgVHJhbnNtaXNzaW9uIExpbmUgc2hhbGwgYmUgbWVhc3VyZWQgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxMjcyNTM1IGZvciBlYWNoIEZhY2lsaXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkODA4MDgxMiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjE1Mzk0IGluIGVhY2ggU2V0dGxlbWVudCBJbnRlcnZhbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDgwODA4MTIgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTI3MjUzNSBieSB0aGUgcmV2ZW51ZSBtZXRlciBmb3Igc3VjaCBGYWNpbGl0eS59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjAwMzczNCAgIEhvd2V2ZXIsIGlmIGFuZCBmb3IgdGhlIHBlcmlvZCB0aGF0IHRoZXJlIGlzIGFuIGVxdWlwbWVudCBmYWlsdXJlIG9yIG90aGVyIGV2ZW50IHRoYXQgcHJldmVudHMgb3IgaW50ZXJmZXJlcyB3aQ0KdGggdGhlIG9wZXJhdGlvbiBvZiB0aGUgc2VwYXJhdGUgbWV0ZXJpbmcsIGVuZXJneSB0cmFuc21pdHRlZCBvbiB0aGUgVHJhbnNtaXNzaW9uIExpbmUgc2hhbGwgYmUgbWVhc3VyZWQgYW5kIGFsbG9jYXRlZCBiZXR3ZWVuIHRoZSBGYWNpbGl0aWVzIGluIGVhY2ggU2V0dGxlbWVudCBJbnRlcnZhbCBpbiBwcm9wb3J0aW9uIHRvIHRoZWlyIHJlc3BlY3RpdmUgTWV0ZXJlZCBFbmVyZ3kgZHVyaW5nIHN1Y2ggU2V0dGxlbWVudCBJbnRlcnZhbCBhcyBmDQpvbGxvd3M6fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYwMDM3MzRcY2hhcnJzaWQxMzE3NjcxMyANClxwYXIgfVxwYXJkIFxsdHJwYXJcczE1XHFqIFxsaTc0MVxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW43NDFcaXRhcDBccGFyYXJzaWQxNjAwMzczNCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MDAzNzM0IA0KRmFjaWxpdHkgRW5lcmd5ID0gKEZhY2lsaXR5IE1ldGVyZWQgRW5lcmd5L1RvdGFsIE1ldGVyZWQgRW5lcmd5KSB4IFBPSSBNZXRlcmVkIEVuZXJneQ0KXHBhciB3aGVyZSwgZm9yIHB1cnBvc2VzIG9mIHRoZSBhYm92ZSBmb3JtdWxhOg0KXHBhciBGYWNpbGl0eSBFbmVyZ3kgPSB0aGUgRW5lcmd5IGFsbG9jYXRlZCB0byB0aGUgRmFjaWxpdHkgaW4gdGhlIFNldHRsZW1lbnQgSW50ZXJ2YWwNClxwYXIgRmFjaWxpdHkgTWV0ZXJlZCBFbmVyZ3kgPSBNZXRlcmVkIEVuZXJneSBmb3Igc3VjaCBGYWNpbGl0eSBpbiB0aGUgU2V0dGxlbWVudCBJbnRlcnZhbA0KXHBhciBUb3RhbCBNZXRlcmVkIEVuZXJneSA9IHRvdGFsIE1ldGVyZWQgRW5lcmd5IGZvciBhbGwgRmFjaWxpdGllcyBpbiB0aGUgU2V0dGxlbWVudCBJbnRlcnZhbA0KXHBhciB9XHBhcmQgXGx0cnBhclxzMTVccWogXGxpNzQxXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjc0MVxpdGFwMFxwYXJhcnNpZDEzMTc2NzEzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYwMDM3MzQgUE9JIE1ldGVyZWQgRW5lcmd5ID0gdGhlIGFtb3VudCBvZiBFbmVyZ3kgbWVhc3VyZWQgYnkgdGhlIENBSVNPIGF0IHRoZSB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ2MDc4OTQgUH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MDAzNzM0IG9pbnQgb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDYwNzg5NCBJfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYwMDM3MzQgbnRlcmNvbm5lY3Rpb24gaW4gdGhlIFNldHRsZW1lbnQgSW50ZXJ2YWx9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzZcY2hhcnJzaWQxNDY4MjU4NSANClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzAwfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDUuMlx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IExvc3NlcyBvbiBUcmFuc21pc3Npb24gTGluZX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzMwMH0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIExpbmUgTG9zc2VzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDYyNTU4MzAgd2lsbCBiZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IGF1dG9tYXRpY2FsbHkgYWxsb2NhdGVkIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDYyNTU4MzAgYW1vbmcgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IHRoZSBDby1Pd25lcnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2OTcyMTg3ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjAwMzczNCB0aHJvdWdoIHRoZSBtZWFzdXJlbWVudCBvZiBlbmVyZ3kgZGVsaXZlcmllcyBhcyBkZXNjcmliZWQgaW4gU2VjdGlvbiA1LjEsIHdoaWNoIGlzIG5ldCBvZiBsb3NzZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDQ2MDc4OTQgIG9yIGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgZm9ybXVsYSBzZXQgZm9ydGggaW4gU2VjdGlvbiA1LjEsIHdoaWNoIGluY2x1ZGVzIExpbmUgTG9zc2VzIGluIHRoZSBtZWFzdXJlbWVudCBvZiBQT0kgTWV0ZXJlZCBFbmVyZ3l9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjAwMzczNCAuICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDIxNzY3MzZcY2hhcnJzaWQ1NTk0NTI0IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzMDF9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNS4zXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgTWV0ZXIgVGVzdGluZyBhbmQgUmVwYWlyfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzAxfQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMyBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI2IFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA1LjMuMVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczNccWogXGZpNzIwXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgyMTYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwyXG91dGxpbmVsZXZlbDJcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyNlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkNTkxODMyOSBJbnNwZWN0aW9uIGFuZCBUZXN0aW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAuICBFYWNoIENvLU93bmVyIHdpbGwgY2F1c2UgaXRzIHJldmVudWUgbWV0ZXIgdG8gYmUgaW5zcGVjdGVkIGFuZCB0ZXN0ZWQgdXBvbiBpdHMgaW5zdGFsbGF0aW9uIGFuZCBhdCBsZWFzdCBvbmNlIGV2ZXJ5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyMDg5Mjg2IA0KdHdlbnR5LWZvdXIgKDI0KX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIG1vbnRocyB0aGVyZWFmdGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTQ0MzA3OSANCiwgb3IgbW9yZSBmcmVxdWVudGx5IGlmIHJlcXVpcmVkIGJ5IENBSVNPIHJ1bGVzIG9yIHRoZSBDQUlTTyBUYXJpZmYsIGJ5IHRoZSBJbnRlcmNvbm5lY3Rpb24gQWdyZWVtZW50LCBvciBieSBhbnkgcG93ZXIgcHVyY2hhc2UgYWdyZWVtZW50IHRvIHdoaWNoIGEgQ28tT3duZXIgaXMgYSBwYXJ0eSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBhbmQgYXQgYW55IG90aGVyIHJlYXNvbmFibGUgdGltZSB1cG9uIA0KfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY2MDU5NDQgT3BlcmF0b3JccnF1b3RlIHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICByZXF1ZXN0LCB3aGljaCBtYXkgbm90IGJlIG1hZGUgbW9yZSB0aGFuIHR3aWNlIGVhY2ggeWVhci4gIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2NjA1OTQ0IE9wZXJhdG9yfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB3aWxsIHBheSB0aGUgY29zdHMgb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTcyMDk1OCBzdWNoIGluc3BlY3Rpb24gYW5kIHRlc3RpbmcgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY2MDU5NDQgKHdoaWNoIHNoYWxsIGJlIGNvbnNpZGVyZWQgYW4gTyZNIENvc3QpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5ICwgdW5sZXNzIHRoZSByZXN1bHRzIG9mIHRoZSB0ZXN0IHNob3cgdGhlIENvLU93bmVyXHJxdW90ZSBzIG1ldGVyIHRvIGJlIGluYWNjdXJhdGUgYnkgbW9yZSB0aGFuIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk3MjA5NTggW317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgdHdvLXRlbnRocyBvZiBvbmUgcGVyY2VudCAoMC4yJSl9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk3MjA5NTggXX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcY3M1NlxzdXBlclxpbnNyc2lkOTcyMDk1OCBcY2hmdG4ge1xmb290bm90ZSBcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJcczU0XHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSANClxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczIwXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGNzNTZcc3VwZXJcaW5zcnNpZDM0MzgwNzggXGNoZnRuIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggIENvbmZvcm0gdG8gcGVyY2VudGFnZSBpbiBzZWN0aW9uIDUuMy4yLn19fXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICwgaW4gd2hpY2ggY2FzZSB0aGUgQ28tT3duZXIgd2hvIG93bnMgdGhlIG1ldGVyIHdpbGwgcGF5IHRoZSBjb3N0cyBvZiB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTcyMDk1OCBpbnNwZWN0aW9uIGFuZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KdGVzdC4gIEVhY2ggQ28tT3duZXIgd2lsbCBnaXZlIHRoZSBvdGhlciBDby1Pd25lcnMgcmVhc29uYWJsZSBhZHZhbmNlIG5vdGljZSBvZiB0ZXN0cyBvZiBpdHMgbWV0ZXIgYW5kIHRoZSBvdGhlciBDby1Pd25lcnMgaGF2ZSB0aGUgcmlnaHQgdG8gd2l0bmVzcyBzdWNoIHRlc3RzLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMzIFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjYgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDUuMy4yXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ1OTE4MzI5IENhbGlicmF0aW9uIG9yIFJlcGFpcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQouICBJZiBhIHRlc3Qgc2hvd3MgYSBDby1Pd25lclxycXVvdGUgcyBtZXRlciB0byBiZSBpbmFjY3VyYXRlLCB0aGUgb3duZXIgb2YgdGhlIG1ldGVyIHdpbGwgdXNlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2NjA1OTQ0IGNvbW1lcmNpYWxseSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KcmVhc29uYWJsZSBlZmZvcnRzIHRvIGNhdXNlIGl0cyBtZXRlciB0byBiZSBjYWxpYnJhdGVkLCByZXBhaXJlZCBvciByZXBsYWNlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2NjA1OTQ0ICBhcyBzb29uIGFzIHJlYXNvbmFibHkgcHJhY3RpY2FsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAuICBJZiBhIHRlc3Qgc2hvd3MgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNjYwNTk0NCBhIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgQ28tT3duZXJccnF1b3RlIHMgbWV0ZXIgdG8gYmUgaW5hY2N1cmF0ZSBieSBtb3JlIHRoYW4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY2MDU5NDQgW317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgdHdvLXRlbnRocyBvZiBvbmUgcGVyY2VudCAoMC4yJSl9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2NjA1OTQ0IF19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICwgYW4gYWRqdXN0bWVudCB3aWxsIGJlIG1hZGUgY29ycmVjdGluZyBhbGwgbWVhc3VyZW1lbnRzIG1hZGUgYnkgdGhlIG1ldGVyIGZvdW5kIHRvIGJlIGluYWNjdXJhdGUgZm9yIHRoZSBhY3R1YWwgcGVyaW9kIGR1cmluZyB3aGljaCBpbmFjY3VyYXRlIG1lYXN1cmVtZW50cyB3ZXINCmUgbWFkZSwgaWYgc3VjaCBwZXJpb2QgY2FuIGJlIGRldGVybWluZWQsIG9yLCBpZiBub3QsIHRoZSBwZXJpb2QgaW1tZWRpYXRlbHkgcHJlY2VkaW5nIHRoZSBtZXRlciB0ZXN0IGVxdWFsIHRvIHRoZSBsZXNzZXIgb2Ygb25lLWhhbGYgdGhlIHRpbWUgZnJvbSB0aGUgZGF0ZSBvZiB0aGUgbGFzdCB0ZXN0IG9mIHRoZSBpbmFjY3VyYXRlIG1ldGVyIG9yIG9uZSBodW5kcmVkIGVpZ2h0eSAoMTgwKSBkYXlzLiAgU3VjaCBhZGp1c3RtZW50cyB3aWxsIA0KYmUgcmVmbGVjdGVkIGFzIGNoYXJnZXMgb3IgY3JlZGl0cywgYXMgYXBwbGljYWJsZSwgb24gdGhlIGludm9pY2VzIGZvciBPJk0gU2VydmljZXMgcmVuZGVyZWQgbW9udGhseSBieSBPcGVyYXRvciB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjc5MTgyMiB0aGUgQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IHMufXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMSBccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIEFSVElDTEUgVklcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczFccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBcbGluZSB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzMDJ9T1BFUkFUSU9OIEFORCBNQUlOVEVOQU5DRSBPRiBTSEFSRUQgRkFDSUxJVElFUy59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzMDJ9DQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzMwM317XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA2LjFcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBFbmdhZ2VtZW50IG9mIE9wZXJhdG9yfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzAzfQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLiAgVGhlIENvLU93bmVycyBoZXJlYnkgZW5nYWdlIE9wZXJhdG9yIHRvIG1hbmFnZSwgb3BlcmF0ZSwgbWFpbnRhaW4gYW5kIHJlcGFpciB0aGUgU2hhcmVkIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ3MTYzNzk5IA0KLCB0byBhZG1pbmlzdGVyIGFuZCB0YWtlIGFsbCBuZWNlc3NhcnkgYWN0aW9ucyB1bmRlciB0aGUgU2hhcmVkIFJlYWwgUHJvcGVydHkgQWdyZWVtZW50cywgdG8gYWRtaW5pc3RlciBhbmQgdGFrZSBhbGwgbmVjZXNzYXJ5IGFjdGlvbnMgdW5kZXIgdGhlIFNoYXJlZCBQZXJtaXRzLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQogYW5kIHRvIHBlcmZvcm0gb3RoZXIgZHV0aWVzIHBlcnRhaW5pbmcgdG8gdGhlIFNoYXJlZCBBc3NldHMgKHRoZSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgTyZNIFNlcnZpY2VzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcJzk0KSwgYWxsIGFzIHNldCBmb3J0aCBpbiB0aGlzIEFncmVlbWVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNDYwNzg5NCA7IHByb3ZpZGVkLCBob3dldmVyLCB0aGF0IHRvIHRoZSBleHRlbnQgZG8gbm90IGFwcGx5IHRvIHRoZSBTaGFyZWQgRmFjaWxpdGllcywgYnV0IGluc3RlYWQgYXBwbHkgdG8gdGhlIEZhY2lsaXRpZXMgb3Igb3RoZXIgcHJvcGVydHkgc2VwYXJhdGVseSBvd25lZCBieSBvbmUgb3IgbW9yZSBvZiB0aGUgQ28tT3duZXJzLCB0aGUgYQ0KZG1pbmlzdHJhdGlvbiBvZiBzdWNoIFNoYXJlZCBQZXJtaXRzIHNoYWxsIG5vdCBiZSBpbmNsdWRlZCBpbiBPJk0gU2VydmljZXMsIGJ1dCBzaGFsbCBiZSBwYWlkIGZvciBzZXBhcmF0ZWx5IGJ5IHRoZSBDby1Pd25lcnMgYmVuZWZpdGluZyBmcm9tIHN1Y2ggU2hhcmVkIFBlcm1pdHMgaW4gcHJvcG9ydGlvbiB0byB0aGVpciByZXNwZWN0aXZlIGJlbmVmaXRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCi4gIE9wZXJhdG9yIGFjY2VwdHMgc3VjaCBlbmdhZ2VtZW50IGFuZCBhZ3JlZXMgdG8gcGVyZm9ybSBzdWNoIGR1dGllcyBpbiBhY2NvcmRhbmNlIHdpdGggdGhlIHRlcm1zIGFuZCBjb25kaXRpb25zIGhlcmVvZi4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTA0ODc2OSAgT3BlcmF0b3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MTgxNTE3IFxycXVvdGUgDQpzIGF1dGhvcml0eSBzaGFsbCBiZSBsaW1pdGVkIHRvIHBlcmZvcm1pbmcgdGhlIE8mTSBTZXJ2aWNlcyBhbmQgc3VjaCBvdGhlciBzZXJ2aWNlcyBhcyBtYXkgYmUgYXBwcm92ZWQgYnkgYWxsIG9mIHRoZSBDby1Pd25lcnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDQ4NzY5ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MTgxNTE3IA0KYW5kIHNoYWxsIGJlIGZ1cnRoZXIgbGltaXRlZCBhcyBwcm92aWRlZCBpbiBTZWN0aW9uIDYuMTZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjkxNjY5NSAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDIxNzY3MzZcY2hhcnJzaWQ3NzQzNzMyIA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzMDR9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNi4yXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgU3RhbmRhcmRzIGZvciBPcGVyYXRvclxycXVvdGUgcyBQZXJmb3JtYW5jZX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzMwNH0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIE9wZXJhdG9yIHNoYWxsIHBlcmZvcm0gdGhlIE8mTSBTZXJ2aWNlcyBpbiBhY2NvcmRhbmNlIHdpdGggR29vZCBVdGlsaXR5IFByYWN0aWNlLCB0aGUgTWF0ZXJpYWwgUHJvamVjdCBBZ3JlZW1lbnRzLCB0aGUgU2hhcmVkIFJlYWwgUHJvcGVydHkgQWdyZWVtZW50cywgdGhpcyBBZ3JlZW1lbnQgYW5kIGFsbCBvdGhlciBhZ3JlZW1lbnRzIHJlbGF0aW5nIHRvIG93bg0KZXJzaGlwLCBjb25zdHJ1Y3Rpb24sIG9wZXJhdGlvbiBhbmQgbWFpbnRlbmFuY2Ugb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzLCBBcHBsaWNhYmxlIExhd3MgYW5kIHJlcXVpcmVtZW50cyBvZiBHb3Zlcm5tZW50YWwgQXV0aG9yaXRpZXMsIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gYWxsIEhhemFyZG91cyBNYXRlcmlhbHMgTGF3cyBhbmQgYWxsIEVudmlyb25tZW50YWwgTGF3cywgYW5kIGFsbCBzYWZldHkgcG9saWNpZXMgYW5kIHByb2NlDQpkdXJlcyAoY29sbGVjdGl2ZWx5LCB0aGUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IFBlcmZvcm1hbmNlIFN0YW5kYXJkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcJzk0KS59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzMDV9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNi4zXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgTyZNIFNlcnZpY2VzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzA1fQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLiAgT3BlcmF0b3Igc2hhbGwgcHJvdmlkZSBvciBjYXVzZSB0byBiZSBwcm92aWRlZCB0aGUgZm9sbG93aW5nIHNlcnZpY2VzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMwOTMwNDQgKGFuZCBzdWNoIG90aGVyIHNlcnZpY2VzIGFzIG1heSBiZSBhZ3JlZWQgZnJvbSB0aW1lIHRvIHRpbWUgYnkgdGhlIENvLU93bmVycyBhbmQgT3BlcmF0b3IpIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBvbiBiZWhhbGYgb2YgZWFjaCBvZiB0aGUgQ28tT3duZXJzIHdobyBoYXZlIGFuIFVuZGl2aWRlZCBVc2UgSW50ZXJlc3QgZnJvbSBhbmQgYWZ0ZXIgdGhlIGRhdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU4OTkzIGVhY2ggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBzdWNoIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkNjU4OTkzIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgaGFzIG5vdGlmaWVkIE9wZXJhdG9yIG9mIGl0cyBleGVyY2lzZWQgcmlnaHQgdG8gYW4gVW5kaXZpZGVkIFVzZSBJbnRlcmVzdCBpbiB0aGUgU2hhcmVkIEFzc2V0cyBwdXJzdWFudCB0byBTZWN0aW9uXH40LjIgKHRoZSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGJcaVxpbnNyc2lkNTkxODMyOSBPJk0gU2VydmljZXMgQ29tbWVuY2VtZW50IERhdGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFwnOTQpOn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM0IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjggXGx0cmNoXGZjczAgXGluc3JzaWQzMDkzMDQ0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChhKVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczRccWogXGZpNzIwXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgyMTYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwzXG91dGxpbmVsZXZlbDNcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyOFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMzA5MzA0NCBtYW5hZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICwgc3VwZXJ2aXNlLCBvcGVyYXRlLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzMDkzMDQ0IGluc3BlY3QsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgcmVwYWlyIGFuZCBtYWludGFpbiB0aGUgU2hhcmVkIEFzc2V0cyBpbiBhY2NvcmRhbmNlIHdpdGggfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NjQ2MDU3IHRoZSBQZXJmb3JtYW5jZSBTdGFuZGFyZCBhbmQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSB0aGUgQXBwcm92ZWQgQnVkZ2V0LCBpbmNsdWRpbmcgdGhlIGRheSB0byBkYXkgbWFuYWdlbWVudCBvZiB0aGUgU2hhcmVkIEFzc2V0czt9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNCBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI4IFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoYilcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgcGF5IGFuZCBjb2xsZWN0IGFtb3VudHMgZHVlIGluIGNvbm5lY3Rpb24gd2l0aCB0aGUgU2hhcmVkIA0KQXNzZXRzIGluY2x1ZGluZyBidXQgbm90IGxpbWl0ZWQgdG8gdGF4ZXMgYW5kIGFzc2Vzc21lbnRzIHB1cnN1YW50IHRvIFNlY3Rpb25cfjEyLjIsIGFuZCBtYWludGFpbiBvbmUgb3IgbW9yZSBiYW5rIGFjY291bnRzIHdoZXJlaW4gZnVuZHMgcmVjZWl2ZWQgYnkgdGhlIE9wZXJhdG9yIGluIGNvbm5lY3Rpb24gd2l0aCBpdHMgZHV0aWVzIGhlcmVpbiBzaGFsbCBiZSBtYWludGFpbmVkO317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjE3NjczNiANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczQgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyOCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGMpXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IGV4cGVuZCBtb25pZXMgbmVjZXNzYXJ5IGZvciB0aGUgbWFuYQ0KZ2VtZW50LCBvcGVyYXRpb24sIG1haW50ZW5hbmNlIGFuZCByZXBhaXIgb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzO317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM0IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjggXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChkKVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBub3RpZnkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY2MTMxOTQgZWFjaCB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDY1ODk5MyBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIG9mIGFueSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzMDkzMDQ0IG1hdGVyaWFsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgbm90aWNlIChvciBhbnkgb3RoZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQzMDkzMDQ0IG1hdGVyaWFsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgaW5mb3JtYXRpb24gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzA5MzA0NCB0aGF0IHdvdWxkIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgcmVhc29uYWJseSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzMDkzMDQ0IA0KYmUgZXhwZWN0ZWQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSB0byBhZmZlY3QgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1ODk5MyBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgcykgcmVjZWl2ZWQgYnkgT3BlcmF0b3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzMDkzMDQ0ICwgd2hldGhlcn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgZnJvbSBhbnkgQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzMDkzMDQ0ICwgYW5vdGhlciBQZXJzb24gb3IgYSBHb3Zlcm5tZW50YWwgQXV0aG9yaXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSA7fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANCg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNCBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI4IFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoZSlcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgbWFuYWdlIGNvbXBsaWFuY2Ugd2l0aCB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzA5MzA0NCBDby1Pd25lcnMNClxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgcmlnaHRzIGluIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMwOTMwNDQgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgU2hhcmVkIFJlYWwgUHJvcGVydHkgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZSBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBBZ3JlZW1lbnRzLCBpbmNsdWRpbmcgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1MTMxODgwIHRpbWVseSBleGVyY2lzaW5nIG9wdGlvbnMgdW5kZXIgdGhlIFNoYXJlZCBSZWFsIFByb3BlcnR5IEFncmVlbWVudHMgdG8gYWNxdWlyZSBwcm9wZXJ0eSwgZW50ZXIgaW50byBhIGxlYXNlIG9yIGV4dGVuZCBhIGxlYXNlIHRlcm0gW2luIGFjY29yZGFuY2Ugd2l0aCBpbnN0cnVjdGlvbnMgZnJvbSB0aGUgQ28tT3duZXJzLCBhbmQgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IG1ha2luZyBwYXltZW50cyByZXF1aXJlZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1MTMxODgwIHVuZGVyIHRoZSBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBBZ3JlZW1lbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCjsgcHJvdmlkZWQgdGhhdCB0aGUgT3BlcmF0b3Igc2hhbGwgaGF2ZSBubyByaWdodCB0byBhbWVuZCB0aGUgU2hhcmVkIFJlYWwgUHJvcGVydHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzMDkzMDQ0ICBBZ3JlZW1lbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSA7IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMwOTMwNDQgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM0IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjggXGx0cmNoXGZjczAgXGluc3JzaWQzMDkzMDQ0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChmKVx0YWJ9bWFuYWdlIHBlcmZvcm1hbmNlIGJ5IHRoZSBDby1Pd25lcnMgdW5kZXIgIHRoZSBNYXRlcmlhbCBQcm9qZWN0IEFncmVlbWVudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTc0NDExNiANCiBhbmQgdG8gY29vcmRpbmF0ZSB3aXRoIHRoZSBcJzkzTWFuYWdlclwnOTQgdW5kZXIgdGhlIExHSUEgQ28tVGVuYW5jeSBBZ3JlZW1lbnQgaW4gdGhlIHBlcmZvcm1hbmNlIG9mIGl0cyBhbmQgdGhlIENvLU93bmVyc1xycXVvdGUgIG9ibGlnYXRpb25zIHRoZXJldW5kZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzMDkzMDQ0IDsgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM0IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjggXGx0cmNoXGZjczAgXGluc3JzaWQzMDkzMDQ0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChnKVx0YWJ9Z2l2ZSBhbmQgcmVjZWl2ZSBuDQpvdGljZXMgYW5kIGNvbW11bmljYXRlIHdpdGggdGhlIENBSVNPIGFuZCB0aGUgVHJhbnNtaXNzaW9uIE93bmVyIHdpdGggcmVzcGVjdCB0byB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgYW5kIHRoZSBjb21taXNzaW9uaW5nLCBvcGVyYXRpb24sIG1haW50ZW5hbmNlIGFuZCByZXBhaXIgb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzOyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1MTMxODgwIA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNCBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI4IFxsdHJjaFxmY3MwIFxpbnNyc2lkNTEzMTg4MCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoaClcdGFifW1hbmFnZSBjb21wbGlhbmNlIG9mIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBhbmQgU2hhcmVkIFJlYWwgUHJvcGVydHkgd2l0aCBhbGwgYXBwbGljYWJsZSBFbnZpcm9ubWVudGFsIExhd3MgYW5kIFBlcm1pdHM7IH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNCBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI4IFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoaSlcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQp3aXRoIHJlc3BlY3QgdG8gdGhlIFNoYXJlZCBSZWFsIFByb3BlcnR5IGFuZCB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgbG9jYXRlZCBvbiB0aGUgU2hhcmVkIFJlYWwgUHJvcGVydHksIG92ZXJzZWUgYWxsIGludmVzdGlnYXRpb25zLCBzdHVkaWVzLCBjbGVhbiB1cCwgY29ycmVjdGl2ZSBhY3Rpb24gb3IgcmVzcG9uc2Ugb3IgcmVtZWRpYWwgYWN0aW9uIHINCmVxdWlyZWQgYnkgYW55IEdvdmVybm1lbnRhbCBBdXRob3JpdHkgbm93IG9yIGhlcmVhZnRlciBhdXRob3JpemVkIHRvIHJlZ3VsYXRlIGVudmlyb25tZW50YWwgb3Igb3RoZXIgbWF0dGVycyBvciBieSBhbnkgY29uc2VudCBkZWNyZWUgb3IgY291cnQgb3IgYWRtaW5pc3RyYXRpdmUgb3JkZXIgbm93IG9yIGhlcmVhZnRlciBhcHBsaWNhYmxlIHRvIHRoZSB1c2UsIG9wZXJhdGlvbiBvciBvd25lcnNoaXAgb2YgdGhlIFNoYXJlZCBSZWFsIFByb3Blcg0KdHkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ4MTU3MDMgYnkgYSBDby1Pd25lciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IG9yIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBsb2NhdGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDgxNTcwMyBkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCiBvbiB0aGUgU2hhcmVkIFJlYWwgUHJvcGVydHkufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzA2fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDYuNFx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IFNjaGVkdWxlZCBNYWludGVuYW5jZX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzMwNn0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gICBPcGVyYXRvciBzaGFsbCBzY2hlZHVsZSBtYWludGVuYW5jZSBhbmQgYW55IHBsYW5uZWQgb3V0YWdlcyBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgc28gYXMgdG8gbWluaW1pemUgaW50ZXJmZXJlbmNlIHdpdGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzA5MzA0NCB0aGUgQ28tT3duZXJzXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgIHNjaGVkdWxlZCBlbmVyZ3kgZGVsaXZlcmllcy4gIE1haW50ZW5hbmNlIGFuZCBhbnkgcGxhbm5lZCBvdXRhZ2VzIG9mIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBzaGFsbCBiZSBzY2hlZHVsZWQsIHRvIHRoZSBtYXhpbXVtIGV4dGVudCBwb3NzaWJsZSwgZHVyaW5nIHNjaGVkdWxlZCBtYWludGVuYW5jZSBvdXRhZ2VzIG9mIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzMDkzMDQ0IA0KQ28tT3duZXJzXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBGYWNpbGl0aWVzLiAgRWFjaCBDby1Pd25lciB3aWxsIHByb3ZpZGUgdG8gdGhlIE9wZXJhdG9yIGFuZCB0aGUgb3RoZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTE2NzMxNTIgQ28tT3duZXJzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgYnkgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTY3MzE1MiBbfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBKYW51YXJ5XH4xfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTE2NzMxNTIgXX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQogb2YgZWFjaCB5ZWFyIGEgc2NoZWR1bGUgb2YgcGxhbm5lZCBtYWludGVuYW5jZSBvdXRhZ2VzIG9uIHN1Y2ggQ28tT3duZXJccnF1b3RlIHMgRmFjaWxpdHkgZm9yIHRoZSBzdWJzZXF1ZW50IHR3ZWx2ZS0gbW9udGggcGVyaW9kLiAgU2NoZWR1bGVkIG91dGFnZXMgb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzIHdpbGwgYmUgc3ViamVjdCB0byB0aGUgYXBwcm92YWwgb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxMTY3MzE1MiBhbGwgYWZmZWN0ZWQgQ28tT3duZXJzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAsIHN1Y2ggYXBwcm92YWwgbm90IHRvIGJlIHVucmVhc29uYWJseSB3aXRoaGVsZC4gIE9wZXJhdG9yIHdpbGwgc2VlayB0byBsaW1pdCB0aGUgZHVyYXRpb24gb2YgYW55IG91dGFnZSwgcGxhbm5lZCBvciB1bnBsYW5uZWQsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTE2NzMxNTIgdG8gdGhlIG1heGltdW0gZXh0ZW50IHJlYXNvbmFibHkgcG9zc2libGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBjb25zaXN0ZW50IHdpdGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTE2NzMxNTIgQXBwbGljYWJsZSBMYXdzIGFuZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KR29vZCBVdGlsaXR5IFByYWN0aWNlLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzMwN317XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA2LjVcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBVbnBsYW5uZWQgT3V0YWdlc317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzMwN30NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIE9wZXJhdG9yIHdpbGwgbm90aWZ5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1ODk5MyB0aGUgQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KcyBvZiBhbGwgZW1lcmdlbmN5IG9yIHVucGxhbm5lZCBvdXRhZ2VzIG9mIGFueSBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgYXMgc29vbiBhcyBwcmFjdGljYWJsZSwgaW4gYWNjb3JkYW5jZSB3aXRoIEdvb2QgVXRpbGl0eSBQcmFjdGljZSwgYW5kIHdpbGwgcHJvdmlkZSBhbiBlc3RpbWF0ZWQgdGltZSBvZiByZXR1cm4gb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzIHRvIHNlcnZpY2UsIG9yIGlmIG5vdCBrbm93biwgd2lsbCBrZWVwIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU4OTkzIHRoZSBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgcyBhZHZpc2VkIHJlZ2FyZGluZyB0aGUgc3RhdHVzIG9mIHNhbWUufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzA4fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDYuNlx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IEVtZXJnZW5jeSBDb25kaXRpb25zfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzA4fQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLiAgSW4gdGhlIGV2ZW50IG9mIGFuIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExNjczMTUyIGVtZXJnZW5jeSBjb25kaXRpb24gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCmludm9sdmluZyB0aGUgU2hhcmVkIEFzc2V0cyB0aGF0IGNvdWxkIGJlIHJlYXNvbmFibHkgZXhwZWN0ZWQgYnkgT3BlcmF0b3IgdG8gcmVzdWx0IGluIHBvc3NpYmxlIHBlcnNvbmFsIGluanVyeSwgbG9zcyBvZiBsaWZlLCBkYW1hZ2UgdG8gb3IgZGVzdHJ1Y3Rpb24gb2YgcHJvcGVydHksIG9yIGRhbmdlciB0byB0aGUgcHVibGljfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTE2NzMxNTIgIChhbiBcJzkzfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkMTE2NzMxNTJcY2hhcnJzaWQ3MDc4MDAyIEVtZXJnZW5jeSBDb25kaXRpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTY3MzE1MiBcJzk0KX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLCB0aGUgT3BlcmF0b3Igc2hhbGwsIHdpdGhvdXQgdGhlIG5lZWQgZm9yIHByaW9yIG5vdGlmaWNhdGlvbiBvZiB0aGUgfQ0Ke1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTg5OTMgQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IHMsIHRha2Ugc3VjaCBhY3Rpb24gYXMgbWF5IGJlIHJlYXNvbmFibGUgYW5kIG5lY2Vzc2FyeSwgYXMgZGV0ZXJtaW5lZCBpbiB0aGUgc29sZSBkaXNjcmV0aW9uIG9mIHRoZSBPcGVyYXRvciwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxMTY3MzE1MiBpbmNsdWRpbmcgY3VydGFpbGluZyBlbmVyZ3kgZGVsaXZlcmllcyBvbiB0aGUgVHJhbnNtaXNzaW9uIExpbmUgYXMgcHJvdmlkZWQgaW4gU2VjdGlvbiA0LjIuMSwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCnRvIHByZXZlbnQsIGF2b2lkIG9yIG1pdGlnYXRlIHN1Y2ggbG9zcywgYW5kIHNoYWxsLCBhcyBzb29uIGFzIHJlYXNvbmFibHkgcHJhY3RpY2FibGUsIHJlcG9ydCBhbnkgc3VjaCBlbWVyZ2VuY3ksIGluY2x1ZGluZyB0aGUgT3BlcmF0b3JccnF1b3RlIHMgcmVzcG9uc2UgdGhlcmV0bywgdG8gdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1ODk5MyBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBzLCBhbmQgIE9wZXJhdG9yIHNoYWxsIGJlIGNvbXBlbnNhdGVkIGJ5IHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTg5OTMgQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KcyBmb3IgdGhlIGNvc3RzIG9mIHRha2luZyBzdWNoIGFjdGlvbnMgaW4gcHJvcG9ydGlvbiB0byB0aGVpciBPd25lcnNoaXAgSW50ZXJlc3QgaW4gdGhlIFNoYXJlZCBBc3NldHMgc28gYWZmZWN0ZWQuIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzMwOX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA2LjdcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBPJk0gQ29zdHN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzMDl9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBDb3N0cyBvZiBwZXJmb3JtaW5nIE8mTSBTZXJ2aWNlcyAodGhlIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBPJk0gQ29zdHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFwnOTQpIA0Kc2hhbGwgaW5jbHVkZSBhbGwgcGF5bWVudHMgbWFkZSBhbmQgZXhwZW5zZXMgaW5jdXJyZWQgYnkgT3BlcmF0b3IgaW4gcGVyZm9ybWluZyBPJk0gU2VydmljZXMgKGF0IGNvc3QgYW5kIHdpdGhvdXQgbWFya3VwKSwgaW5jbHVkaW5nIGJ1dCBub3QgbGltaXRlZCB0byByZWxhdGVkIG92ZXJoZWFkIGFuZCBhcHBsaWNhYmxlIHRheGVzLCBhbmQgY29zdHMgKGV4Y2VwdCBpbnN1cmFuY2UgY29zdHMpIHJlbGF0ZWQgdG8gb3duZXJzaGlwIG9mIHRoZSBTDQpoYXJlZCBBc3NldHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTc0NDExNiAgYW5kIHNoYWxsIGJlIGFsbG9jYXRlZCBhbW9uZyB0aGUgQ28tT3duZXJzIGFzIHByb3ZpZGVkIGluIFNlY3Rpb24gNi4xMH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwNDg3NjkgDQogIE8mTSBDb3N0cyBzaGFsbCBub3QgaW5jbHVkZSBhbnkgY29zdHMgcmVsYXRlZCB0byB1c2Ugb2YgYW55IG9mIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBieSBQZXJzb25zIG90aGVyIHRoYW4gQ28tT3duZXJzLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIGFueSBjb3N0cyBvciBleHBlbnNlcyByZQ0KbGF0ZWQgdG8gcG9ydGlvbnMgb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzIGxlYXNlZCBvciBzdWJsZWFzZWQgdG8gc3VjaCBQZXJzb25zIChpbmNsdWRpbmcgdGhlIHN1YmxlYXNlIG9mIGEgcG9ydGlvbiBvZiB0aGUgb3BlcmF0aW9ucyBhbmQgbWFpbnRlbmFuY2UgYnVpbGRpbmcgdG8gTG9uZSBWYWxsZXkgU29sYXIgUGFyayBJIExMQyBhbmQgTG9uZSBWYWxsZXkgU29sYXIgUGFyayBJSSBMTEMpLn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzEwfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDYuOFx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IEJ1ZGdldGluZyBQcm9jZXNzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzEwfQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLiAgRWFjaCB5ZWFyIGR1cmluZyB0aGUgdGVybSBvZiB0aGlzIEFncmVlbWVudCwgT3BlcmF0b3Igd2lsbCBwcmVwYXJlIGEgZm9yZWNhc3QgYnVkZ2V0IG9mIE8mTSBDb3N0cyBmb3IgdGhlIGZvbGxvd2luZyBjYWxlbmRhciB5ZWFyIGFuZCB3aWxsIHByb3ZpZGUgYSBjb3B5IHRvIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1ODk5MyB0aGUgQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgcyBieSBPY3RvYmVyXH4zMS4gIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk4MzcxODIgVGhlIGZvcmVjYXN0IGJ1ZGdldCBzaGFsbCBzZXBhcmF0ZWx5IGFsbG9jYXRlIGNvc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjA4NTc1MCBzIGFuZCBleHBlbnNlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk4MzcxODIgDQogdG8gZWFjaCBTaGFyZWQgQXNzZXRzIEdyb3VwIHRvIHRoZSBleHRlbnQgcmVhc29uYWJseSBwcmFjdGljYWwuICBUaGUgZm9yZWNhc3QgYnVkZ2V0IG11c3QgYmUgYXBwcm92ZWQgYnkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI4NjY3OTQgdHdvLXRoaXJkc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk4MzcxODIgIG9mIHRoZSBDby1Pd25lcnN9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDM2ODEwMzggIChiYXNlZCBvbiB0aGVpciByZXNwZWN0aXZlIFByb3BvcnRpb25hdGUgU2hhcmVzKX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk4MzcxODIgLCBzdWNoIGNvbnNlbnQgbm90IHRvIGJlIHVucmVhc29uYWJseSB3aXRoaGVsZC4gIFRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTg5OTMgQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgcyB3aWxsIGhhdmUgdGhpcnR5ICgzMCkgZGF5cyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5ODM3MTgyIGFmdGVyIHJlY2VpcHQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSB0byByZXZpZXcgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTgzNzE4MiBhbmQgYXBwcm92ZSB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgdGhlIGZvcmVjYXN0IGJ1ZGdldCBhbmQgZGlzY3VzcyBhbnkgY29uY2VybnMgd2l0aCB0aGUgZm9yZWNhc3QgYnVkZ2V0IHdpdGggT3BlcmF0b3IuICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NDQ1OTc5IElmIHR3by10aGlyZHMgb3IgbW9yZSBvZiB0aGUgQ28tT3duZXJzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM2ODEwMzggDQooYmFzZWQgb24gdGhlaXIgcmVzcGVjdGl2ZSBQcm9wb3J0aW9uYXRlIFNoYXJlcykgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTQ0NTk3OSBhcHByb3ZlIHRoZSBmb3JlY2FzdCBidWRnZXQsIGl0IHNoYWxsIGJlIGRlZW1lZCBhcHByb3ZlZCBmb3IgYWxsIHB1cnBvc2VzIGhlcmV1bmRlciBhbmQgc2hhbGwgYmUgYmluZGluZyBvbiBhbGwgQ28tT3duZXJzLiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxMjg2Njc5NCBJbiB0aGUgZXZlbnQgbGVzcyB0aGFuIHR3by10aGlyZHMgb2YgdGhlIENvLU93bmVycyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNjgxMDM4IChiYXNlZCBvbiB0aGVpciByZXNwZWN0aXZlIFByb3BvcnRpb25hdGUgU2hhcmVzKSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjg2Njc5NCANCmFwcHJvdmUgdGhlIGZvcmVjYXN0IGJ1ZGdldCwgdGhlIG1hdHRlciB3aWxsIGJlIHN1Ym1pdHRlZCB0byBkaXNwdXRlIHJlc29sdXRpb24gcHVyc3VhbnQgdG8gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMwNzExNzAgRXhoaWJpdCBFfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI4NjY3OTQgOyBwcm92aWRlZCwgaG93ZXZlciwgdGhhdCBwZW5kaW5nIHJlc29sdXRpb24gb2YgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTAzNDc5MCBhbnkgc3VjaCBkaXNwdXRlLCB0aGUgZm9yZWNhc3QgYnVkZ2V0IHNoYWxsIGJlIHRoZSBvcGVyYXRpdmUgYnVkZ2V0IGZvciB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgZXhjZXB0IHRoYXQgdGhlIGFnZ3JlZ2F0ZSBPJk0gQ29zdHMgaW4gZWFjaCBjYXRlZ29yeSBvZiBleHBlbnNlcyBzaGFsbCBiZSBsaW1pdGVkIHRvIG9uZQ0KIGh1bmRyZWQgdHdlbnR5LWZpdmUgcGVyY2VudCAoMTI1JSkgb2YgdGhlIGFtb3VudCBmb3Igc3VjaCBjYXRlZ29yeSBpbiB0aGUgcHJldmlvdXMgQW5udWFsIE8mTSBCdWRnZXQuICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5ODM3MTgyIEFmdGVyIGFwcHJvdmFsIG9mIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMDM0NzkwIA0KYW5kLCBpZiBhcHBsaWNhYmxlLCByZXNvbHV0aW9uIG9mIGFueSBkaXNwdXRlcywgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTgzNzE4MiB0aGUgZm9yZWNhc3QgYnVkZ2V0IChzdWNoIGFwcHJvdmVkIGZvcmVjYXN0IGJ1ZGdldCwgdGhlIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkOTgzNzE4MiBBbm51YWwgTyZNIEJ1ZGdldH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkOTgzNzE4MiBcJzk0KSwgZWFjaCBDby1Pd25lciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IHNoYWxsIHBheSBPcGVyYXRvciAxLzEyIG9mIGl0cyBQcm9wb3J0aW9uYXRlIFNoYXJlIG9mIHRoZSBBbm51YWwgTyZNIEJ1ZGdldH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMDM0NzkwICBwbHVzIGFueSBhcHBsaWNhYmxlIGNvc3RzIG9yIGNoYXJnZXMgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MzA3NDE5IHBheWFibGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEwMzQ3OTAgZm9yIEV4dHJhb3JkaW5hcnkgTWFpbnRlbmFuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBieSB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTAzNTkyNTkgZmlmdGggKDV9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwMzU5MjU5XGNoYXJyc2lkOTQ0Njc1IHRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTAzNTkyNTkgKX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIGRheSBvZiBlYWNoIGNhbGVuZGFyIG1vbnRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTgzNzE4MiANCiBkdXJpbmcgdGhlIGVuc3VpbmcgY2FsZW5kYXIgeWVhci4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzg3OTU4OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTgzNzE4MiBPcGVyYXRvciBzaGFsbCByZWNvbmNpbGUgdGhlIGFjdHVhbCBhbW91bnRzIHBhaWQgZm9yIE8mTSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzODc5NTg4IENvc3RzfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5ODM3MTgyICB0byB0aGUgZm9yZWNhc3QgYnVkZ2V0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM4Nzk1ODggYWZ0ZXIgdGhlIGVuZCBvZiB0aGUgY2FsZW5kYXIgeWVhciBhcyBwcm92aWRlZCBpbiBTZWN0aW9uIDYuMTB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDUxMzE4ODAgICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkMjE3NjczNlxjaGFycnNpZDcwNzgwMDIgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzMxMX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA2LjlcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBFeHRyYW9yZGluYXJ5IE1haW50ZW5hbmNlfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzExfQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLiAgRWFjaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTg5OTMgQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBhZ3JlZXMgdG8gcmVpbWJ1cnNlIE9wZXJhdG9yIGZvciBpdHMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkODMzMjkxNCBQcm9wb3J0aW9uYXRlIFNoYXJlfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBvZiB0aGUgY29zdHMgb2YgYW55IG1haW50ZW5hbmNlIG9yIG90aGVyIHNlcnZpY2VzIHJlcXVpcmVkIGluIHRoZSBldmVudCBvZiB1bnVzdWFsIG9yIGNhdGFzdHJvcGhpYyBjaXJjdW1zdGFuY2VzLCB0byB0aGUgZXh0ZW50IHN1Y2ggY29zdHMgd2VyZSBub3QgaW5jbHVkZWQgaW4gdGhlIGZvcmVjYXN0IGJ1ZGdldCBmb3IgTyZNIFNlcnZpY2VzIChcJzkzfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBFeHRyYW9yZGluYXJ5IE1haW50ZW5hbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcJzk0KS4gIEluIHN1Y2ggZXZlbnQsIE9wZXJhdG9yIHdpbGwgcHJlcGFyZSBhIGZvcmVjYXN0IGJ1ZGdldCBmb3Igc3VjaCBFeHRyYW9yZGluYXJ5IE1haW50ZW5hbmNlIGZvciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTg5OTMgDQp0aGUgQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IHNccnF1b3RlICByZXZpZXcgYW5kIHBlcmZvcm1hbmNlIG9mIHRoZSBFeHRyYW9yZGluYXJ5IE1haW50ZW5hbmNlIHdpbGwgYmUgc3ViamVjdCB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTg5OTMgdGhlIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBzDQpccnF1b3RlICBwcmlvciBhcHByb3ZhbCwgbm90IHRvIGJlIHVucmVhc29uYWJseSB3aXRoaGVsZCwgdW5sZXNzIGltbWVkaWF0ZSBhY3Rpb24gaXMgcmVxdWlyZWQgZHVlIHRvIGFuIEVtZXJnZW5jeSBDb25kaXRpb24gcHVyc3VhbnQgdG8gU2VjdGlvblx+Ni42Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY4OTkxNTkgDQogIE9uIG9yIGJlZm9yZSB0aGUgdGVudGggKDEwdGgpIGRheSBvZiB0aGUgbW9udGggYWZ0ZXIgdGhlIG1vbnRoIGluIHdoaWNoIGFueSBFeHRyYW9yZGluYXJ5IE1haW50ZW5hbmNlIGNvc3RzIGFyZSBpbmN1cnJlZCwgT3BlcmF0b3Igc2hhbGwgaW52b2ljZSB0aGUgQ28tT3duZXJzIGZvciB0aGVpciByZXNwZWN0aXZlIFVuZGl2aWRlZCBVc2UgSW50ZXJlc3QgDQpvZiBzdWNoIGNvc3RzLiAgQW55IGFtb3VudHMgc28gaW52b2ljZWQgd2lsbCBiZSBhdCB0aGUgc2FtZSB0aW1lIGFzIHRoZSBuZXh0IG1vbnRobHkgcGF5bWVudCBvbiBhY2NvdW50IG9mIHRoZSBBbm51YWwgTyZNIEJ1ZGdldCBhcyBwcm92aWRlZCBpbiBTZWN0aW9uIDYuOC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzMTJ9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNi4xMFx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IFJlc3BvbnNpYmlsaXR5IGZvciBPJk0gQ29zdHN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzMTJ9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBFYWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM4Nzk1ODggQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBzaGFsbCBiZSByZXNwb25zaWJsZSBmb3IgaXRzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDgzMzI5MTQgUHJvcG9ydGlvbmF0ZSBTaGFyZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAgb2YgTyZNIENvc3RzLCBpbmNsdWRpbmcgdGhlIGNvc3RzIG9mIGFueSBFeHRyYW9yZGluYXJ5IE1haW50ZW5hbmNlIGluY3VycmVkIGJ5IE9wZXJhdG9yLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ4MzMyOTE0IHdpdGggcmVzcGVjdCB0byBlYWNoIFNoYXJlZCBBc3NldHMgR3JvdXAgYXMgdG8gd2hpY2ggaXQgaXMgYSBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMzg3OTU4OCA7IHByb3ZpZGVkIHRoYXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2ODk5MTU5ICwgZXhjZXB0IGluIHRoZSBjYXNlIG9mIEVtZXJnZW5jeSBDb25kaXRpb25zLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM4Nzk1ODggIE9wZXJhdG9yIHdpbGwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjMwNzQxOSANCm5vdCBpbmN1ciBPJk0gQ29zdHMgaW4gYW55IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExNDcwNDc3IG1ham9yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjMwNzQxOSAgY2F0ZWdvcnkgb2YgTyZNIENvc3RzIG9yIGluIHRoZSBhZ2dyZWdhdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjg5OTE1OSANCnRoYXQgZXhjZWVkIHRoZSBidWRnZXRlZCBhbW91bnQgZm9yIHN1Y2ggY2F0ZWdvcnkgb3IgdGhlIHRvdGFsIGFtb3VudCBvZiBPJk0gQ29zdHMsIGFzIGFwcGxpY2FibGUsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDYzMDc0MTkgYnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzODc5NTg4ICBtb3JlIHRoYW4gdGVuIHBlcmNlbnQgKDEwJSl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDYzMDc0MTkgIG9mIHRoZSBhbW91bnRzIHNob3duIG9uIHRoZSBBbm51YWwgTyZNIEJ1ZGdldH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM4Nzk1ODggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDYzMDc0MTkgd2l0aG91dCB0aGUgd3JpdHRlbiBjb25zZW50IG9mIGF0IGxlYXN0IHR3by10aGlyZHMgb2YgdGhlIGFwcGxpY2FibGUgQ28tT3duZXJzfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQzNjgxMDM4ICAoYmFzZWQgb24gdGhlaXIgcmVzcGVjdGl2ZSBQcm9wb3J0aW9uYXRlIFNoYXJlcyl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IC4gIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY4OTkxNTkgV2l0aGluIHNpeHR5ICg2MCkgZGF5c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1MzQ2MjgxIA0KIGFmdGVyIHRoZSBlbmQgb2YgZWFjaCBjYWxlbmRhciB5ZWFyLCBPcGVyYXRvciBzaGFsbCBpbnZvaWNlIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTg5OTMgQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTM0NjI4MSBzIGZvciwgb3Igc2hhbGwgcmVmdW5kIHRvIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTg5OTMgQ28tT3duZXJ9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1MzQ2MjgxIHMsIGFzIGFwcGxpY2FibGUsIHRoZWlyIFANCnJvcG9ydGlvbmF0ZSBTaGFyZXMgb2YgdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiB0aGUgQW5udWFsIE8mTSBCdWRnZXQgYW5kIHRoZSBhY3R1YWwgYW1vdW50IG9mIE8mTSBDb3N0cyBwYWlkIG9yIGluY3VycmVkIGluIHN1Y2ggY2FsZW5kYXIgeWVhci4gIEFueSBpbnZvaWNlIGZvciBzdWNoIGFtb3VudHMgc2hhbGwgYmUgcGFpZCB3aXRoaW4gdGhpcnR5ICgzMCkgZGF5cyBhZnRlciByZWNlaXB0LiAgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFRoZSBpbnZvaWNlcyBzaGFsbCBiZSBkZWxpdmVyZWQgdG8gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU4OTkzIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBzIGFzIHNldCBmb3J0aCBpbiBTZWN0aW9uXH4xNy4xNS4gIEFueSBhbW91bnRzIG5vdCBwYWlkIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTUzNDYyODEgd2hlbiBkdWV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBzaGFsbCBiZSBkZWVtZWQgZGVsaW5xdWVudCBhbmQgc2hhbGwgYWNjcnVlIGludGVyZXN0IGF0IHRoZSB0aGVuLWVmZmVjdGl2ZSBwcmltZSByYXRlIG9mIGludGVyZXN0IHB1Ymxpc2hlZCB1bmRlciBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGlcaW5zcnNpZDU5MTgzMjlcY2hhcnJzaWQ3NzQzNzMyIE1vbmV5IFJhdGVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcJzk0IGJ5IFRoZSBXYWxsIFN0cmVldCBKb3VybmFsLCBwbHVzIHR3byBwZXJjZW50IHBlciBhbm51bSBmcm9tIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTM0NjI4MSBkdWUgZGF0ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgdG8gdGhlIGRhdGUgb2YgcGF5bWVudCAodGhlIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBMYXRlIFBheW1lbnQgUmF0ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXCc5NCkuICBJbiB0aGUgZXZlbnQgdGhhdCBhbnkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTUzNDYyODEgZHVlIGRhdGUgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IGZhbGxzIHVwb24gYSB3ZWVrZW5kIGRheSBvciBiYW5rIGhvbGlkYXksIHN1Y2ggcGF5bWVudCBzaGFsbCBiZSBkdWUgYW5kIHBheWFibGUgb24gdGhlIGZpcnN0IEJ1c2luZXNzIERheSBpbW1lZGlhdGVseSB0aGVyZWFmdGVyLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzMxM317XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEzNDIxOTcgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNi4xMVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxMTM0MjE5NyBCb29rcyBhbmQgUmVjb3Jkc317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzMxM30NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTM0MjE5NyANCk9wZXJhdG9yIHNoYWxsIG1haW50YWluIGJvb2tzIGFuZCByZWNvcmRzIGluIHN1ZmZpY2llbnQgZGV0YWlsIHRvIHZlcmlmeSBhbW91bnRzIGR1ZSBhbmQgcGF5YWJsZSBoZXJldW5kZXIgZm9yIGEgcGVyaW9kIG9mIG5vdCBsZXNzIHRoYW4gdGhyZWUgKDMpIHllYXJzIGFmdGVyIHRoZSBlbmQgb2YgdGhlIGNhbGVuZGFyIG1vbnRoIHRvIHdoaWNoIHRoZXkgcmVsYXRlLCBhbmQgYWxsIHN1Y2ggYm9va3MgYW5kIHJlY29yZHMgc2hhbGwgYmUgYQ0KdmFpbGFibGUgZm9yIGluc3BlY3Rpb24gYW5kL29yIGNvcHlpbmcgYnkgZWFjaCBDby1Pd25lciBvciBpdHMgYXV0aG9yaXplZCByZXByZXNlbnRhdGl2ZSBhdCB0aGUgY29zdCBhbmQgZXhwZW5zZSBvZiBzdWNoIENvLU93bmVyIGFuZCBhdCByZWFzb25hYmxlIHRpbWVzIGR1cmluZyByZWd1bGFyIGJ1c2luZXNzIGhvdXJzLCB1cG9uIHJlYXNvbmFibGUgbm90aWNlIHRvIE9wZXJhdG9yLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkOTM4Mzk3MSANClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzE0fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDYuMTJcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBEaXNwdXRlc317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzMxNH0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIElmIGEgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU4OTkzIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgZGlzcHV0ZXMgdGhlIGFjY3VyYWN5IG9mIGFsbCBvciBhbnkgcG9ydGlvbiBvZiBhbiBpbnZvaWNlLCBzdWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1ODk5MyBDby1Pd25lcn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgc2hhbGwsIG5ldmVydGhlbGVzcywgcGF5IHRoZSBmdWxsIGFtb3VudCBvZiB0aGUgaW52b2ljZSAoaW5jbHVkaW5nIHRoZSBkaXNwdXRlZCBwb3J0aW9uKSBhbmQgc3VibWl0IHRvIE9wZXJhdG9yIGEgd3JpdHRlbiBzdGF0ZW1lbnQgZGV0YWlsaW5nIHRoZSBpdGVtcyBkaXNwdXRlZC4gIElmIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNjU4OTkzIHRoZSBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIGFuZCBPcGVyYXRvciBhcmUgdW5hYmxlIHRvIHJlc29sdmUgdGhlIGRpc3B1dGVkIGl0ZW1zLCB0aGUgbWF0dGVyIHdpbGwgYmUgcmVzb2x2ZWQgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZSBkaXNwdXRlIHJlc29sdXRpb24gcHJvdmlzaW9ucyBpbiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDEzMDcxMTcwIEV4aGliaXQgRX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLiAgSWYgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU4OTkzIHRoZSBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHByZXZhaWxzIHdpdGggcmVzcGVjdCB0byB0aGUgZGlzcHV0ZWQgYW1vdW50cywgT3BlcmF0b3Igc2hhbGwgcmVmdW5kIH0NCntccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU4OTkzIHRoZSBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHRoZSBkaXNwdXRlZCBhbW91bnRzLCBpbmNsdWRpbmcgaW50ZXJlc3Qgb24gdGhlIGRpc3B1dGVkIGFtb3VudHMgYXQgdGhlIExhdGUgUGF5bWVudCBSYXRlLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzMxNX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA2LjEzXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgTm8gV2FpdmVyIG9mIFJpZ2h0IHRvIEF1ZGl0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzE1fQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLiAgQW55IHBheW1lbnQgbWFkZSBieSBhIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1ODk5MyBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHB1cnN1YW50IHRvIHRoaXMgQWdyZWVtZW50IHNoYWxsIG5vdCBjb25zdGl0dXRlIGEgd2FpdmVyIG9mIGFueSByaWdodCBvZiBzdWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNjU4OTkzIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgdG8gcXVlc3Rpb24gb3IgY29udGVzdCB0aGUgYWNjdXJhY3kgb2YgYW55IGNoYXJnZSwgb3IgdG8gcmVxdWVzdCBhbmQgcmVjZWl2ZSBmcm9tIE9wZXJhdG9yIHN1ZmZpY2llbnQgZGF0YSB0byBhdWRpdCBhbnkgY2hhcmdlIGNvbmNlcm5pbmcgd2hpY2ggYSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDY1ODk5MyBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIGhhcyBhIHF1ZXN0aW9uIG9yIHdoaWNoIGlzIG9yIG1heSBiZSBjb250ZXN0ZWQsIHByb3ZpZGVkLCBob3dldmVyLCB0aGF0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1ODk5MyBhIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCiBtdXN0IGluaXRpYXRlIGFueSBhdWRpdCBvciBkYXRhIHJlcXVlc3Qgbm8gbGF0ZXIgdGhhbiANCnR3ZWx2ZSAoMTIpIG1vbnRocyBhZnRlciB0aGUgRHVlIERhdGUgb2YgYW55IHN1Y2ggYmlsbCBvciBjaGFyZ2UgYW5kIGJlYXIgcmVhc29uYWJsZSBjb3N0cyBhc3NvY2lhdGVkIHdpdGggc3VjaCBhdWRpdCwgYW5kIHByb3ZpZGVkIGZ1cnRoZXIgdGhhdCBpZiBhcyBhIHJlc3VsdCBvZiB0aGUgYXVkaXQgYSBkZXRlcm1pbmF0aW9uIGlzIG1hZGUgdGhhdCBlcnJvcnMgd2VyZSBtYWRlIGJ5IE9wZXJhdG9yLCBPcGVyYXRvciBzaGFsbCwgaW4gYWRkaQ0KdGlvbiB0byBjb3JyZWN0aW5nIHRoZSBlcnJvciwgIHJlaW1idXJzZSB0aGUgY29zdHMgb2YgdGhlIGF1ZGl0IHRvIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTg5OTMgQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IHMuIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzMxNn17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA2LjE0XHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgT2JsaWdhdGlvbnN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzMTZ9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBUaGUgT3BlcmF0b3Igc2hhbGwgaGF2ZSBubyBsaWFiaWxpdHkgZm9yIGFueSBvYmxpZ2F0aW9ucyBleGNlcHQgdGhvc2UgZXhwcmVzc2x5IHN0YXRlZCBpbiB0aGlzIEFncmVlbWVudCwgYW5kIG5vdGhpbmcgaW4gdGhpcyBBZ3JlZW1lbnQgc2hhbGwgb2JsaWdhdGUgdGhlIA0KT3BlcmF0b3IgdG8gcGVyZm9ybSBhbnkgZHV0aWVzIG9yIGFzc3VtZSBhbnkgbGlhYmlsaXRpZXMgdW5kZXIgYW55IGFncmVlbWVudCB0byB3aGljaCB0aGUgT3BlcmF0b3IgaXMgbm90IGRpcmVjdGx5IGEgcGFydHkgdW5sZXNzIHN1Y2ggZHV0aWVzIGFyZSBhbHNvIGV4cHJlc3NseSBzdGF0ZWQgaW4gdGhpcyBBZ3JlZW1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MzgzOTcxIA0KIG9yIG90aGVyd2lzZSBleHByZXNzbHkgYWdyZWVkIHRvIGJ5IE9wZXJhdG9yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAsIGFuZCB0aGVuIG9ubHkgdG8gc3VjaCBleHRlbnQuICBUaGUgQ28tT3duZXJzIGFja25vd2xlZGdlIHRoYXQgdGhlIE9wZXJhdG9yXHJxdW90ZSANCnMgcGVyZm9ybWFuY2UgdW5kZXIgdGhpcyBBZ3JlZW1lbnQgaXMgZGVwZW5kZW50IHVwb24gdGhlIENvLU93bmVycyBoYXZpbmcgY29tcGxpZWQgd2l0aCB0aGVpciBvYmxpZ2F0aW9ucyB1bmRlciB0aGlzIEFncmVlbWVudCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MzgzOTcxIChpbmNsdWRpbmcgd2l0aCByZXNwZWN0IHRvIHBheW1lbnQpIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBhbmQgdGhlIE9wZXJhdG9yIGhhdmluZyB0aW1lbHkgYW5kIGFwcHJvcHJpYXRlIGFjY2VzcyB0byBhbGwgcGFydHMgb2YgdGhlIFNoYXJlZCBBc3NldHMgYW5kIGFjY2VzcyB0byBhbGwgZG9jdW1lbnRzIGFzIHJlYXNvbmFibHkgcmVxdWlyZWQgYnkgdGhlIE9wZXJhdG9yLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzMxN317XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA2LjE1XHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgUmlzayBvZiBMb3NzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEzNDIxOTcgOyBJbmRlbW5pdHl9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzMTd9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTM0MjE5NyANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczMgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyNiBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNi4xNS4xXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzM1xxaiBcZmk3MjBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDIxNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDJcb3V0bGluZWxldmVsMlxhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDk0NDY3NSBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI2XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IEFzIGJldHdlZW4gdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1ODk5MyBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgcyBhbmQgdGhlIE9wZXJhdG9yLCB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU4OTkzIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IHMgc2hhbGwgYmUgcmVzcG9uc2libGUgZm9yIHRoZSByaXNrIG9mIGxvc3MgdG8gdGhlIFNoYXJlZCBGDQphY2lsaXRpZXMgb3IgYW55IHBvcnRpb24gdGhlcmVvZiBkdXJpbmcgdGhlIHJlcGFpciwgbWFuYWdlbWVudCwgb3BlcmF0aW9uIGFuZCBtYWludGVuYW5jZSBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMsIHJlZ2FyZGxlc3Mgb2YgY2F1c2UsIGV4Y2VwdCB0byB0aGUgZXh0ZW50IHN1Y2ggbG9zcyBpcyBjYXVzZWQgaW4gd2hvbGUgb3IgaW4gcGFydCBieSB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEzNDIxOTcgDQpmcmF1ZCBvciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IHdpbGxmdWwgbWlzY29uZHVjdCBvZiB0aGUgT3BlcmF0b3IufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczMgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyNiBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMzQyMTk3IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDYuMTUuMlx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEzNDIxOTcgT3BlcmF0b3Igc2hhbGwgbm90IGJlIGxpYWJsZSB0byBhbnkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ2NTg5OTMgQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTM0MjE5NyAgZm9yIGFueSBhY3QgcGVyZm9ybWVkIGluIGdvb2QgZmFpdGggYnkgT3BlcmF0b3IgaW4gdGhlIGRpc2NoYXJnZSBvZiBpdHMgZHV0aWVzIGhlcmV1bmRlciBhcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDIyODU4OCBPcGVyYXRvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTEzNDIxOTcgIG9yIGluIHRoZSBleGVyY2lzZSBvZiBpdHMgcG93ZXJzIGFuZCBhdXRob3JpdHkgaGVyZXVuZGVyIGFzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwMjI4NTg4IE9wZXJhdG9yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEzNDIxOTcgLCBpbmNsdWRpbmcgZGFtYWdlcyBhcmlzaW5nIG91dCBvZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDEwMjI4NTg4IGFueSBjdXJ0YWlsbWVudCBvZiB1c2Ugb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzIG9yIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMzQyMTk3IHRoZSBkaXNjb25uZWN0aW9uIG9mLCBvciB0aGUgZWxlY3Rpb24gbm90IHRvIGRpc2Nvbm5lY3QsIGEgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTAyMjg1ODggRmFjaWxpdHl9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDExMzQyMTk3ICBmcm9tIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDIyODU4OCBTaGFyZWQgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMzQyMTk3ICwgdW5sZXNzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwMjI4NTg4IE9wZXJhdG9yXHJxdW90ZSBzIGFjdHMgb3Igb21pc3Npb25zIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEzNDIxOTcgY29uc3RpdHV0ZSBmcmF1ZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwMjI4NTg4ICBvciB3aWxsZnVsIG1pc2NvbmR1Y3QufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEzNDIxOTcgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMzIFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjYgXGx0cmNoXGZjczAgXGluc3JzaWQxMTM0MjE5NyBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA2LjE1LjNcdGFifUVhY2ggQ28tT3duZXIgc2hhbGwsIHBybyByYXRhIGluIGFjY29yZGFuY2Ugd2kNCnRoIGl0cyBQcm9wb3J0aW9uYXRlIEludGVyZXN0LCBpbmRlbW5pZnkgYW5kIGhvbGQgaGFybWxlc3MgT3BlcmF0b3IgYW5kIGl0cyBlbXBsb3llZXMgYW5kIGFnZW50cywgZnJvbSBhbnkgY2xhaW0sIGxvc3MsIGxpYWJpbGl0eSBvciBkYW1hZ2UgaW5jdXJyZWQgYnkgcmVhc29uIG9mIGFueSBhY3QgcGVyZm9ybWVkIG9yIG9taXR0ZWQgdG8gYmUgcGVyZm9ybWVkIGJ5IGl0IGluIGl0cyByZWFzb25hYmxlIGp1ZGdtZW50LCBpbiBnb29kIGZhaXRoLA0KIG9yIGluIHJlYXNvbmFibGUgcmVsaWFuY2Ugb24gYWR2aWNlIG9mIE9wZXJhdG9yXHJxdW90ZSANCnMgYXR0b3JuZXlzIG9yIGFjY291bnRhbnRzLCBpbiBjb25uZWN0aW9uIHdpdGggdGhlIFNoYXJlZCBGYWNpbGl0aWVzLCB0aGUgU2hhcmVkIFJlYWwgUHJvcGVydHkgb3IgdGhpcyBBZ3JlZW1lbnQgKG90aGVyIHRoYW4gYXMgYSByZXN1bHQgb2YgdGhlIGZyYXVkIG9yIHdpbGxmdWwgbWlzY29uZHVjdCBvZiBPcGVyYXRvciksIGluY2x1ZGluZyByZWFzb25hYmxlIGF0dG9ybmV5c1xycXVvdGUgDQogZmVlcyBpbmN1cnJlZCBieSBPcGVyYXRvciBpbiBjb25uZWN0aW9uIHdpdGggdGhlIGRlZmVuc2Ugb2YgYW55IGFjdGlvbiBiYXNlZCBvbiBhbnkgc3VjaCBhbGxlZ2VkIGFjdCBvciBvbWlzc2lvbi59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTM0MjE5N1xjaGFycnNpZDk0NDY3NSANClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzE4fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxMTM0MjE5NyBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA2LjE2XHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkOTQ0Njc1IFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDExMzQyMTk3IExpbWl0YXRpb25zIG9uIE9wZXJhdG9yXHJxdW90ZSBzIEF1dGhvcml0eX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlxjZjZcaW5zcnNpZDExMzQyMTk3XGNoYXJyc2lkMTEzNDIxOTcge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzMxOH0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDExMzQyMTk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDExMzQyMTk3IC4gICBOb3R3aXRoc3RhbmRpbmcgYW55dGhpbmcgaGVyZWluIHRvIHRoZSBjb250cmFyeSwgT3BlcmF0b3Igc2hhbGwgaGF2ZSBubyBhdXRob3JpdHkgdG8gYW5kIA0Kc2hhbGwgbm90IChpKSBhbWVuZCBvciB0ZXJtaW5hdGUgYW55IE1hdGVyaWFsIFByb2plY3QgQWdyZWVtZW50IG9yIGVudGVyIGludG8sIGFtZW5kIG9yIHRlcm1pbmF0ZSBhbnkgb3RoZXIgY29udHJhY3Qgb3IgYWdyZWVtZW50IG9uIGJlaGFsZiBvZiB0aGUgQ28tT3duZXJzLCAoaWkpIGNyZWF0ZSBhbnkgbGllbiBvciBzZWN1cml0eSBpbnRlcmVzdCBvbiBvciBpbiBhbnkgU2hhcmVkIEZhY2lsaXRpZXMsIFNoYXJlZCBSZWFsIFByb3BlcnR5IG9yDQogYW55IG90aGVyIGFzc2V0IG9mIGFueSBvciBhbGwgb2YgdGhlIENvLU93bmVyc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM3NjUxNjAgLCBleGNlcHQgYXMgZXhwcmVzc2x5IHBlcm1pdHRlZCB1bmRlciBTZWN0aW9uIDEwLjEuNn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMzQyMTk3IA0KLCAoaWlpKSBidXksIHNlbGwsIGNvbnZleSBvciBvdGhlcndpc2UgZGlzcG9zZSBvZiBhbnkgU2hhcmVkIEZhY2lsaXRpZXMgb3IgU2hhcmVkIFJlYWwgUHJvcGVydHksIChpdikgaW5jdXIgYW55IGRlYnQgb3Igb3RoZXIgb2JsaWdhdGlvbnMgb24gYmVoYWxmIG9mIGFueSBvciANCmFsbCBvZiB0aGUgQ28tT3duZXJzLCBleGNlcHQgaW4gY29ubmVjdGlvbiB3aXRoIHRoZSBPJk0gU2VydmljZXMgb3IgYXMgcHJvdmlkZWQgaW4gdGhpcyBBZ3JlZW1lbnQgb3IgYW5vdGhlciB3cml0dGVuIGFncmVlbWVudCBhbW9uZyBPcGVyYXRvciBhbmQgdGhlIENvLU93bmVyc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkxODE1MTcgDQosIG9yICh2KSBlbnRlciBpbnRvIGxlYXNlcyBvciBzdWJsZWFzZXMgb2Ygb3IgZ3JhbnQgbGljZW5zZXMgb3Igb3RoZXIgcmlnaHRzIHdpdGggcmVzcGVjdCB0byBhbnkgU2hhcmVkIEZhY2lsaXRpZXMgb3IgU2hhcmVkIFJlYWwgRXN0YXRlIGV4Y2VwdCB3aXRoIHRoZSB3cml0dGVuIGFwcHJvdmFsIG9mIGFsbCBvZiB0aGUgQ28tT3duZXJzLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMzQyMTk3IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzMTl9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwMjI4NTg4IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDYuMTdcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ5NDQ2NzUgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTAyMjg1ODggUmVwbGFjZW1lbnQgb2YgT3BlcmF0b3IufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMTAyMjg1ODhcY2hhcnJzaWQxMDIyODU4OCB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzE5fQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTAyMjg1ODggXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTAyMjg1ODggLiAgIE9wZXJhdG9yIG1heSBvbmx5IGJlIHJlbW92ZWQgdXBvbiB0aGUgdm90ZSBvZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MTgxNTE3IHR3by10aGlyZHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDIyODU4OCAgb2YgdGhlIENvLU93bmVyc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM2ODEwMzggDQogKGJhc2VkIG9uIHRoZWlyIHJlc3BlY3RpdmUgUHJvcG9ydGlvbmF0ZSBTaGFyZXMpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTAyMjg1ODggLiAgQW55IG5ldyBPcGVyYXRvciBtdXN0IGJlIGFwcHJvdmVkIGJ5IHRoZSB1bmFuaW1vdXMgdm90ZSBvZiB0aGUgQ28tT3duZXJzLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMzQyMTk3IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMSBccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIEFSVElDTEUgVklJXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhcg0KXHMxXHFjIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgXGxpbmUge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzIwfURBTUFHRSBUT317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5OTM1OTkgLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IERFU1RSVUNUSU9OIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5OTM1OTkgT1IgRkFJTFVSRSB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgT0YgU0hBUkVEIEZBQ0lMSVRJRVN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzMjB9DQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzMyMX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA3LjFcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBEYW1hZ2Ugb3IgRGVzdHJ1Y3Rpb259e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzMjF9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBJbiB0aGUgZXZlbnQgb2YgYW55IGRhbWFnZSBvciBkZXN0cnVjdGlvbiB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5OTM1OTkgLCBvciBvdGhlciBmYWlsdXJlIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgYWxsIG9yIGFueSBwYXJ0IG9mIHRoZSBTaGFyZWQgRmFjaWxpdGllDQpzIHRoYXQgYWZmZWN0cyB0aGUgYnVzaW5lc3Mgb3BlcmF0aW9ucyBvZiBvbmUgb3IgbW9yZSBDby1Pd25lcnMgaW4gYSBTaGFyZWQgQXNzZXRzIEdyb3VwIChlYWNoIGFuIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBBZmZlY3RlZCBQYXJ0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXCc5NA0KKSwgc3VjaCBBZmZlY3RlZCBQYXJ0eSBzaGFsbCwgc3ViamVjdCB0byBhbnkgY29udHJhcnkgcmVxdWlyZW1lbnRzIGluIE1hdGVyaWFsIFByb2plY3QgQWdyZWVtZW50cyBvciBBcHBsaWNhYmxlIExhdywgdGFrZSBhbGwgY29tbWVyY2lhbGx5IHJlYQ0Kc29uYWJsZSBhY3Rpb25zIGFzIG1heSBiZSBuZWNlc3Nhcnkgb3IgYXBwcm9wcmlhdGUgdG8gcmVwYWlyIG9yIHJlcGxhY2UgdGhlIGFmZmVjdGVkIFNoYXJlZCBGYWNpbGl0aWVzIG9yIG90aGVyIGZhY2lsaXRpZXMgaW4gb3JkZXIgdG8gcmVzdG9yZSB0aGUgYWZmZWN0ZWQgU2hhcmVkIEZhY2lsaXRpZXMgb3Igb3RoZXIgZmFjaWxpdGllcyB0byBzdWJzdGFudGlhbGx5IHRoZSBzYW1lIGNvbmRpdGlvbiAob3IgYmV0dGVyKSBhcyBiZWZvcmUgc3VjDQpoIGRhbWFnZSBvciBkZXN0cnVjdGlvbiAoYW5kIGFueSBjb3N0cyBhc3NvY2lhdGVkIHdpdGggc3VjaCBhY3Rpb25zLCBhZnRlciBhY2NvdW50aW5nIGZvciByZWNvdmVyaWVzIHVuZGVyIGFueSBhcHBsaWNhYmxlIGluc3VyYW5jZSBwb2xpY2llcywgd2lsbCBiZSBzaGFyZWQgYnkgdGhlIENvLU93bmVycyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjE2MDQgaW4gc3VjaCBTaGFyZWQgQXNzZXRzIEdyb3VwIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBwcm8gcmF0YSBiYXNlZCBvbiB0aGVpciBPd25lcnNoaXAgSW50ZXJlc3RzLCBhcyBhcHBsaWNhYmxlKS4gIEZvbGxvd2luZyBhbnkgc3VjaCBkYW1hZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NTc0NDI4ICwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBkZXN0cnVjdGlvbn17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTU3NDQyOCAgb3IgZmFpbHVyZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLCBpZiAoaSlcfg0KdGhlIEFmZmVjdGVkIFBhcnR5IGZhaWxzIHRvIGRpbGlnZW50bHkgcHJvY2VlZCB3aXRoIHRoZSByZXBhaXIgb3IgcmVwbGFjZW1lbnQgb2YgdGhlIGFmZmVjdGVkIFNoYXJlZCBGYWNpbGl0aWVzIG9yIG90aGVyIGZhY2lsaXRpZXMgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZSBwcmVjZWRpbmcgc2VudGVuY2UsIG9yIChpaSlcfnRoZSBBZmZlDQpjdGVkIFBhcnR5IG5vdGlmaWVzIHRoZSBvdGhlciBDby1Pd25lcnMgdGhhdCBpdCBkb2VzIG5vdCBpbnRlbmQgdG8gcmVwYWlyIG9yIHJlcGxhY2UgdGhlIGFmZmVjdGVkIFNoYXJlZCBGYWNpbGl0aWVzIG9yIG90aGVyIGZhY2lsaXRpZXMsIHRoZW4gaW4gZWl0aGVyIHN1Y2ggY2FzZSwgdGhlIG90aGVyIENvLU93bmVycyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjE2MDQgDQppbiB0aGUgcmVsZXZhbnQgU2hhcmVkIEFzc2V0cyBHcm91cCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IHNoYWxsIGhhdmUgdGhlIHJpZ2h0IHRvIHJlcGFpciBvciByZXBsYWNlIHRoZSBhZmZlY3RlZCBTaGFyZWQgRmFjaWxpdGllcyBvciBvdGhlciBmYWNpbGl0aWVzIChvciBhIHBvcnRpb24gdGhlcmVvZiBzdWZmaWNpZW50IHRvIHNlcnZlIHN1Y2ggb3RoZXIgQ28tT3duZXJzXHJxdW90ZSANCiByZXF1aXJlbWVudHMpIGFuZCBjb250aW51ZSB0aGUgb3BlcmF0aW9uIGFuZCBtYWludGVuYW5jZSB0aGVyZW9mIGZvciB0aGUgcmVtYWluZGVyIG9mIHRoZSBUZXJtO317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMjE4NDM1ICBwcm92aWRlZCB0aGF0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYxNjA0ICx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTIxODQzNSANCiBpbiBzdWNoIGV2ZW50IHRoZSBBZmZlY3RlZCBQYXJ0eSBzaGFsbCBiZSBvYmxpZ2F0ZWQgdG8gdGhlIENvLU93bmVycyBmdW5kaW5nIHRoZSByZXBhaXIgb3IgcmVwbGFjZW1lbnQgb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MTYwNCBvciBvdGhlciBmYWNpbGl0aWVzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMjE4NDM1IA0KdG8gdGhlIGV4dGVudCBvZiBpdHMgUHJvcG9ydGlvbmF0ZSBTaGFyZSBvZiB0aGUgY29zdHMgb2YgcmVwYWlyIG9yIHJlcGxhY2VtZW50OyBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBwcm92aWRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMjE4NDM1ICBmdXJ0aGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCiwgdGhhdCBzdWNoIG90aGVyIENvLU93bmVycyBzaGFsbCBub3QgdW5yZWFzb25hYmx5IGludGVyZmVyZSB3aXRoIHRoZSBidXNpbmVzcyBvcGVyYXRpb25zIG9mIHRoZSBBZmZlY3RlZCBQYXJ0eS4gIEluIGFsbCBldmVudHMsIHRoZSBDby1Pd25lcnMgc2hhbGwgY29vcGVyYXRlIHdpdGggZWFjaCBvdGhlciBpbiBnb29kIGZhaXRoIHRvIG1pbmltaXplIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MTYwNCANCnRoZSBjb3N0IG9mIHJlcGFpciBvciByZXBsYWNlbWVudCBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgYW5kIG1pbmltaXplIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgdGhlIGltcGFjdCB0aGVyZW9mIG9uIHRoZSBDby1Pd25lcnMgYW5kIHRoZWlyIHJlc3BlY3RpdmUgYnVzaW5lc3Mgb3BlcmF0aW9ucy59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMSBccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIEFSVElDTEUgVklJSVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzMVxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IFxsaW5lIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzMyMn1DRVNTQVRJT04gT0YgT1BFUkFUSU9OUyBCWSBBIENPLU9XTkVSfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzIyfQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzMjN9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNDg0NTNcY2hhcnJzaWQxMjQ4NDUzIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDguMVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxMjQ4NDUzXGNoYXJyc2lkMTI0ODQ1MyBDby1Pd25lciBDZWFzaW5nIE9wZXJhdGlvbnN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcdWxub25lXGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzIzfQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLiAgSW4gdGhlIGV2ZW50IGEgQ28tT3duZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4MDU5MTEgZGVjaWRlcyB0byBzaHV0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgZG93biwgZGVjb21taXNzaW9uLCBhYmFuZG9uIG9yIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODA1OTExIGNlYXNlIH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBvcGVyYXRpb24gb2YgaXRzIEZhY2lsaXR5IChzdWNoIENvLU93bmVyLCBhIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBDby1Pd25lciBDZWFzaW5nIEJ1c2luZXNzIE9wZXJhdGlvbnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFwnOTQNCiksIGl0IHNoYWxsIHByb3ZpZGUgdGhlIG90aGVyIENvLU93bmVycyB3aXRoIGF0IGxlYXN0IHNpeCAoNikgbW9udGhzXHJxdW90ZSAgcHJpb3Igd3JpdHRlbiBub3RpY2Ugb2Ygc3VjaCBzaHV0LWRvd24sIGFiYW5kb25tZW50LCBkZWNvbW1pc3Npb25pbmcsIG9yIGNlc3NhdGlvbiBvZiBvcGVyYXRpb25zLiAgVGhlIENvLU93bmVyIENlYXNpbmcgQnVzaW5lc3MgT3BlcmF0aW9ucyBzaGFsbCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE3MTIxNjQgcmVhc29uYWJseSBjb29wZXJhdGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB3aXRoIHRoZSBvdGhlciBDby1Pd25lcnMgaW4gb3JkZXIgdG8gbWluaW1pemUgYW55IGludGVyZmVyZW5jZSB3aXRoIHN1Y2ggb3RoZXIgQ28tT3duZXJzXHJxdW90ZSAgYnVzaW5lc3Mgb3BlcmF0aW9ucywgYW5kIHRoZSBDby1Pd25lciBDZWFzaW5nIEJ1c2luZXNzIE9wZXJhdGlvbnMgc2hhbGx9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk3OTU0NjggLCBhdCB0aGUgcmVxdWVzdCBvZiB0aGUgb3RoZXIgQ28tT3duZXJzLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHRha2Ugc3VjaCBhY3Rpb25zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4MDU5MTEgIGFzIG1heSBiZSBuZWNlc3Nhcnkgb3IgYXBwcm9wcmlhdGV9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE3MTIxNjQgLCBjb25zaXN0ZW50IHdpdGggR29vZCBVdGlsaXR5IFByYWN0aWNlLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODA1OTExICB0byBzYWZlbHkgZGlzY29ubmVjdCBpdHMgRmFjaWxpdHkgZnJvbSB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgYW5kIHRvIGNlYXNlIHVzaW5nIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBhbmQgdGhlIFNoYXJlZCBSZWFsIFByb3BlcnR5fXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4MDU5MTEgaW5jbHVkaW5nIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgZ3JhbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTgwNTkxMSBpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KIHN1Y2ggcmlnaHRzIGFuZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTgwNTkxMSBleGVjdXRpbmcgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBhbmQgZGVsaXZlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODA1OTExIGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHN1Y2ggYWdyZWVtZW50c317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ2MTYxNDYgLCBhc3NpZ25tZW50cywgYW5kIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgaW5zdHJ1bWVudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTgwNTkxMSAgYXMgbWF5IGJlIG5lY2Vzc2FyeSB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEyMTg0MzUgdHJhbnNmZXIgYW5kIGNvbnZleSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDYxNjE0NiBpdHMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEyMTg0MzUgT3duZXJzaGlwIEludGVyZXN0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NjE2MTQ2IGluIHRoZSB9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMjE4NDM1IFNoYXJlZCBBc3NldHMgaW4gdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NjE2MTQ2IGFwcGxpY2FibGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEyMTg0MzUgU2hhcmVkIEFzc2V0IEdyb3VwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjg5OTE1OSAocyl9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NjE2MTQ2ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTgwNTkxMSB0byB0aGUgb3RoZXIgQ28tT3duZXJzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NjE2MTQ2IGluIGFjY29yZGFuY2Ugd2l0aCBTZWN0aW9uIDguMywgc3ViamVjdCB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDY5MjQzMCBvYnRhaQ0KbmluZyBhbnkgbmVjZXNzYXJ5IEZFUkMgYXBwcm92YWxzLCBhbmQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ2MTYxNDYgY29tcGxpYW5jZSB3aXRoIHJlcXVpcmVtZW50cyBvZiBhbnkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ2OTI0MzAgb3RoZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ2MTYxNDYgDQpHb3Zlcm5tZW50YWwgQXV0aG9yaXR5IGFuZCBBcHBsaWNhYmxlIExhdy4gIFRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTQ0MDcxIHJlbWFpbmluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NjE2MTQ2ICBDby1Pd25lcnMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTc5NTQ2OCANCmluIHRoZSBTaGFyZWQgQXNzZXQgR3JvdXAgd2lsbCBhc3N1bWUgZGVjb21taXNzaW9uaW5nIG9ibGlnYXRpb25zIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExNDQwNzEgZm9yIHRoZSBTaGFyZWQgRmFjaWxpdGllcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5Nzk1NDY4IGluIGFjY29yZGFuY2Ugd2l0aCB0aGVpciBQcm9wb3J0aW9uYXRlIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTE0NDA3MSBTaGFyZSBvZiB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTc5NTQ2OCBTaGFyZWQgQXNzZXRzIGFjcXVpcmVkIGZyb20gdGhlIENvLU93bmVyIENlYXNpbmcgQnVzaW5lc3MgT3BlcmF0aW9uc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDgxMjczOCANCi4gIFRoZSBDby1Pd25lciBDZWFzaW5nIEJ1c2luZXNzIE9wZXJhdGlvbnMgc2hhbGwgYWxzbyBncmFudCB0byB0aGUgb3RoZXIgQ28tT3duZXJzIHN1Y2ggcmlnaHRzIGFuZCBpbnRlcmVzdHMgYXMgbWF5IHJlYXNvbmFibHkgYmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjcyNTM1ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IG5lY2Vzc2FyeSB0byBlbmFibGUgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ4MTI3MzggdG8gZW5hYmxlIHRoZSByZW1haW5pbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBDby1Pd25lcnMgdG8gY29udGludWUgdXNpbmcsIG9wZXJhdGluZywgYW5kIG1haW50YWluaW5nIHRoZSBTaGFyZWQgRmFjaWxpdGllcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ4MTI3MzggDQphcyB0aGV5IGhhdmUgYmVlbiB1c2VkLCBpbmNsdWRpbmcgaWYgbmVjZXNzYXJ5IHRoZSBjb25zdHJ1Y3Rpb24gb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBzdWNoIGFkZGl0aW9uYWwgZmFjaWxpdGllcyBhcyBtYXkgYmUgbmVjZXNzYXJ5IHRvIHJlcGxhY2UgU2hhcmVkIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ4MTI3MzggIHdoaWNoIGFyZSBuDQpvIGxvbmdlciB1c2FibGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IC4gIEFmdGVyIHN1Y2ggYWJhbmRvbm1lbnQsIGRlY29tbWlzc2lvbmluZywgc2h1dCBkb3duIG9yIGNlc3NhdGlvbiBvZiBidXNpbmVzcyBvcGVyYXRpb25zIGJ5IHRoZSBDby1Pd25lciBDZWFzaW5nIEJ1c2luZXNzIE9wZXJhdGlvbnMsIHRoZSBvdGhlciBDby1Pd25lcnMgc2hhbGwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ3NTU2OTcyIGFzc3VtZSBhbmQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBiZSByZXNwb25zaWJsZSBmb3IgYWxsIGNvc3RzLCBsaWFiaWxpdGllcyBhbmQgZXhwZW5zZXMgYXNzb2NpYXRlZCB3aXRoIHRoZSB1c2UsIG9wZXJhdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDc1NTY5NzIgLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAgbWFpbnRlbmFuY2UgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1NjY3MSAoYW5kIG93bmVyc2hpcCBhbmQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNzU1Njk3MiBkZWNvbW1pc3Npb25pbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDU2NjcxICwgaWYgYXBwbGljYWJsZSl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDc1NTY5NzIgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzIChhbmQgYW55IG90aGVyIGZhY2lsaXRpZXMgdGhhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1NjY3MSB0IG1heSBiZWNvbWUgU2hhcmVkIEZhY2lsaXRpZXMpLiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzI0fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ3NTU2OTcyXGNoYXJyc2lkNzU1Njk3MiBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA4LjJcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkNzU1Njk3MlxjaGFycnNpZDc1NTY5NzIgQ28tT3duZXIgTGFzdCBVc2luZyBTaGFyZWQgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlx1bG5vbmVcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzMjR9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBUaGUgQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzg1NjA1OSAocyl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBsYXN0IHVzaW5nIHRoZSBTaGFyZWQgRmFjaWxpdGllcyAoYXMgY29uZmlybWVkIGluIHdyaXRpbmcgYnkgdGhlIENvLU93bmVycyBwdXJzdWFudCB0byB0aGUgbGFzdCB0d28gc2VudGVuY2VzIG9mIHRoaXMgU2VjdGlvbg0KXH44LjJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjU5Mzg5NCApfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgc2hhbGwgaGF2ZSB0aGUgb2JsaWdhdGlvbiB0byBkZWNvbW1pc3Npb24gc3VjaCBTaGFyZWQgRmFjaWxpdGllcyB0byB0aGUgZXh0ZW50IGNvbnRyYWN0dWFsbHkgcmVxdWlyZWQgb3IgcHVyc3VhbnQgdG8gQXBwbGljYWJsZSBMYXcgKHRoZSBcJzkzfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBEZWNvbW1pc3Npb25pbmcgT2JsaWdhdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXCc5NCk7IHByb3ZpZGVkLCBob3dldmVyLCB0aGF0IGlmIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODU2MDU5IHR3byBvciBtb3JlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBDby1Pd25lcnMgZGlzY29udGludWUgdXNpbmcgdGhlIFNoYXJlZCBGYWNpbGl0aWVzIGNvbnRlbXBvcmFuZW91c2x5LCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzg1NjA1OSBzdWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQpDby1Pd25lcnMgc2hhbGwgc2hhcmUgaW4gYW55IERlY29tbWlzc2lvbmluZyBPYmxpZ2F0aW9uIG9uIGEgYmFzaXMgcmVmbGVjdGluZyB0aGVpciBPd25lcnNoaXAgSW50ZXJlc3RzIGluIHN1Y2ggU2hhcmVkIEZhY2lsaXRpZXMsIHdoZXJlIGFwcGxpY2FibGUuICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzg1NjA1OSBJZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQogYSBDby1Pd25lciBkZXRlcm1pbmVzIHRoYXQgaXQgbm8gbG9uZ2VyIGRlc2lyZXMgdG8gdXRpbGl6ZSB0aGUgU2hhcmVkIEZhY2lsaXRpZXMsIGl0IHNoYWxsIHByb3ZpZGUgc3VjaCBub3RpY2UgdG8gdGhlIG90aGVyIENvLU93bmVycyAodGhlIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBMYXN0IFVzZSBOb3RpY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgXCc5NCkgYXQgbGVhc3Qgc2l4ICg2KSBtb250aHMgcHJpb3IgdG8gdGhlIGRhdGUgb24gd2hpY2ggaXQgd2lsbCBjZWFzZSB0byB1dGlsaXplIHRoZSBTaGFyZWQgRmFjaWxpdGllcywgaW4gd2hpY2ggY2FzZSBzdWNoIENvLU93bmVyIHNoYWxsLCBhcyBvZiBzdWNoIHNwZWNpZmllZCBkYXRlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTAxMDY5NDYgDQogYW5kIHN1YmplY3QgdG8gYW55IHJlcXVpcmVkIEZFUkMgbm90aWZpY2F0aW9ucyBvciBvYnRhaW5pbmcgYW55IG5lY2Vzc2FyeSBGRVJDIGFwcHJvdmFsc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLCBoYXZlIG5vIGZ1cnRoZXIgcmlnaHQgdG8gdXRpbGl6ZSB0aGUgU2hhcmVkIEZhY2lsaXRpZXMuICBUaGUgQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzg1NjA1OSANCihzKX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHRoYXQgcmVjZWl2ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODU2MDU5ICh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzg1NjA1OSApfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5ICBzdWNoIExhc3QgVXNlIE5vdGljZSBzaGFsbCwgd2l0aGluIGZvcnR5LWZpdmUgKDQ1KSBkYXlzIG9mIHN1Y2ggcmVjZWlwdCwgZWl0aGVyIChpKVx+YWdyZWUgdGhhdCBpdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzg1NjA1OSBvciB0aGV5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQphbHNvIG5vIGxvbmdlciBkZXNpcmUgdG8gdXRpbGl6ZSB0aGUgU2hhcmVkIEZhY2lsaXRpZXMsIGluIHdoaWNoIGNhc2UgdGhlIENvLU93bmVycyBzaGFsbCBiZSBkZWVtZWQgdG8gaGF2ZSBkaXNjb250aW51ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDc1NTY5NzIgZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHVzZSANCm9mIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBjb250ZW1wb3JhbmVvdXNseSBhbmQgc2hhbGwgc2hhcmUgaW4gYW55IERlY29tbWlzc2lvbmluZyBPYmxpZ2F0aW9uIGFzIHNldCBmb3J0aCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzg1NjA1OSBhYm92ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLCBvciAoaWkpXH59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDEzODU2MDU5IHN0YXRlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgdGhhdCBpdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzg1NjA1OSBvciB0aGV5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgaW50ZW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4NTYwNTkgKH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4NTYwNTkgKX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHRvIGNvbnRpbnVlIHRvIHV0aWxpemUgdGhlIFNoYXJlZCBGYWNpbGl0aWVzLCBpbiB3aGljaCBjYXNlIHN1Y2ggQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzg1NjA1OSAocyl9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHNoYWxsIGFzc3VtZSB0aGUgRGVjb21taXNzaW9uaW5nIE9ibGlnYXRpb24ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTE0NDA3MSAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzMyNX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTg1MzczMiBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA4LjNcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxMTQ0MDcxIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE4NTM3MzIgUHJvY2VkdXJlIGZvciBUcmFuc2ZlciBieSBhIENvLU93bmVyIG9mIGl0cyBPd25lcnNoaXAgSW50ZXJlc3R9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkMTg1MzczMiAufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDYyOTMyNDUgICBUaGUgY29uc2lkZXJhdGlvbiBmb3IgdHJhbnNmZXIgb2YgYSBDby1Pd25lclxycXVvdGUgDQpzIE93bmVyc2hpcCBJbnRlcmVzdCBpbiBpdHMgU2hhcmVkIEFzc2V0cyB0byBvdGhlciBDby1Pd25lcihzKSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkMTY1OTM4OTQgcHVyc3VhbnQgdG8gdGhlIGZvcmVnb2luZyB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkNjI5MzI0NSBzaGFsbCBiZSBhbiBhbW91bnQgZXF1YWwgdG8gdGhlIGZhaXINCiBtYXJrZXQgdmFsdWUgb2YgdGhlIFNoYXJlZCBBc3NldHMuICBUaGUgZmFpciBtYXJrZXQgdmFsdWUgb2YgdGhlIFNoYXJlZCBBc3NldHMgc2hhbGwgYmUgZGV0ZXJtaW5lZCBieSBhZ3JlZW1lbnQgb2YgdGhlIENvLU93bmVycyBvZiB0aGUgU2hhcmVkIEFzc2V0cyBiZWluZyB0cmFuc2ZlcnJlZCwgb3IgaWYgdGhleSBhcmUgdW5hYmxlIHRvIGFncmVlLCBieSBhcHByYWlzYWwgY29uZHVjdGVkIGJ5IGFuIGFwcHJhaXNhbCBjb25kdWN0ZWQgYnkgYQ0Kbg0KIGFwcHJhaXNlciBzZWxlY3RlZCBqb2ludGx5IGJ5IHN1Y2ggQ28tT3duZXJzLiAgSWYgdGhlIENvLU93bmVycyBhcmUgdW5hYmxlIHRvIGFncmVlIG9uIGEgc2luZ2xlIGFwcHJhaXNlciwgdGhlbiBlYWNoIENvLU93bmVyIHNoYWxsIHNlbGVjdCBhbiBhcHByYWlzZXIsIGFuZCBzdWNoIGFwcHJhaXNlcnMgc2hhbGwgc2VsZWN0IGFuIGluZGVwZW5kZW50IGFwcHJhaXNlciB0byBkZXRlcm1pbmUgZmFpciBtYXJrZXQgdmFsdWUgb2YgdGhlIFNoYXJlDQpkIEFzc2V0cy4gIFN1Y2ggZGV0ZXJtaW5hdGlvbiBvZiB0aGUgZmFpciBtYXJrZXQgdmFsdWUgc2hhbGwgYmUgZmluYWwgYW5kIGJpbmRpbmcgb24gdGhlIENvLU93bmVycy57XCpcYmtta2VuZCBfVG9jNDA0MDEzMzI1fSAgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDE4NTM3MzIgICB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkMTE0NDA3MSANClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzI2fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ2MjkzMjQ1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDguNFx0YWJ9fVxwYXJkIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDYyOTMyNDUge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ2MjkzMjQ1IENoYW5nZSBpbiBPd25lcnNoaXAgSW50ZXJlc3R9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQ2MjkzMjQ1IA0Ke1wqXGJrbWtlbmQgX1RvYzQwNDAxMzMyNn0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDYyOTMyNDUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkNjI5MzI0NSAuIEluIHRoZSBldmVudCBvZiBhIGNoYW5nZSBpbiB0aGUgT3duZXJzaGlwIEludGVyZXN0cyBvZiB0aGUgQ28tT3duZXJzIGluIGEgU2hhcmVkIEFzc2V0IEdyb3VwLCBlYWNoIENvLU93bmVyXHJxdW90ZSBzIE93bmVyc2hpcCBJbnRlcmVzdCBhbmQvb3IgVW5kaXZpZGVkIFVzZSBJbnRlcmVzdCwgYW5kIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTg5OTMgDQpDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDYyOTMyNDUgc1xycXVvdGUgDQogcmVpbWJ1cnNlbWVudCBwZXJjZW50YWdlcyBmb3IgTyZNIENvc3RzIChpbmNsdWRpbmcgdGF4ZXMpIHdpbGwgYmUgYWRqdXN0ZWQsIGFuZCB0aGlzIEFncmVlbWVudCBzaGFsbCBiZSBhbWVuZGVkIHRvIHJlZmxlY3Qgc3VjaCBhZGp1c3RtZW50LiAgQW55IGNoYW5nZSBpbiBPd25lcnNoaXAgSW50ZXJlc3Qgb2YgYSBDby1Pd25lciBzaGFsbCBiZSBzdWJqZWN0IHRvIHJlcXVpcmVkIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTAxMDY5NDYgRkVSQyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MjkzMjQ1IGFwcHJvdmFscyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDEwNjk0NiBhbmQgYW55IG90aGVyIGZpbGluZ3Mgd2l0aCBvciBhcHByb3ZhbHMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjI5MzI0NSANCmJ5IEdvdmVybm1lbnRhbCBBdXRob3JpdGllcyBhbmQgY29tcGxpYW5jZSB3aXRoIEFwcGxpY2FibGUgTGF3cy4gIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDYyOTMyNDVcY2hhcnJzaWQ2MjkzMjQ1IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMSBccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIEFSVElDTEUgSVhcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczFccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBcbGluZSB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzMjd9UkVMQVRJT05TSElQIE9GIE9QRVJBVE9SIEFORCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTg5OTMgQ08tT1dORVJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzMjd9DQoNClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzI4fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDkuMVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IEFjdGlvbnMgVGFrZW4gYnkgT3BlcmF0b3J9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzMjh9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NjY3MDc3IEV4Y2VwdCBhcyBwcm92aWRlZCBpbiBTZWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTE3NjMyMTMgIDkuOH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ2NjcwNzcgLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzg1NjA1OSANCk9wZXJhdG9yIGlzIGF1dGhvcml6ZWQgdG8gdGFrZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NjY3MDc3IGFsbCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IGFjdGlvbnMgb3IgYWN0aXZpdGllcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzg1NjA1OSBvbiBiZWhhbGYgb2YgdGhlIENvLU93bmVycyB0aGF0IH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ4MTU3MDMgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDgxNTcwMyBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgaGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDgxNTcwMyB2ZX17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgdGhlIHJpZ2h0IG9yIG9ibGlnYXRpb24gdG8gdGFrZSBvciBwZXJmb3JtIHdpdGggcmVzcGVjdCB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NjY3MDc3IHRoZSBjb25zdHJ1Y3Rpb24sIGluc3RhbGxhdGlvbiwgb3BlcmF0aW9uLCBtYWludGVuYW5jZSwgcmVwYWlyLCByZXN0b3JhdGlvbiwgcmVtb3ZhbCBhbmQvb3IgcmVwbGFjZW1lbnQgb2YgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IHRoZSBTaGFyZWQgQXNzZXRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4NTYwNTkgLCBhbmQgT3BlcmF0b3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBzaGFsbCB0YWtlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODU2MDU5IGFuZCB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgcGVyZm9ybSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzg1NjA1OSBzdWNoIGFjdGlvbnMgYW5kIGFjdGl2aXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDM3Mzk2NCAgaW4gbGlldSBvZiB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU4OTkzIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDM3Mzk2NCBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAuICBBIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1ODk5MyBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIGFuZCBpdHMgaW52aXRlZXMgc2hhbGwgaGF2ZSB0aGUgcmlnaHQgdG8gaW5zcGVjdCB0aGUgU2hhcmVkIEZhY2lsaXRpZXN9DQp7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0ODE1NzAzICBhbmQgdGhlIFNoYXJlZCBSZWFsIFByb3BlcnR5IHRvIHRoZSBmdWxsIGV4dGVudCBwZXJtaXR0ZWQgYnkgdGhlIFNoYXJlZCBSZWFsIFByb3BlcnR5IEFncmVlbWVudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KLCBwcm92aWRlZCBob3dldmVyLCB0aGF0IHN1Y2ggaW5zcGVjdGlvbiBzaGFsbCBub3QgdW5yZWFzb25hYmx5IGludGVyZmVyZSB3aXRoIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NjY3MDc3IGNvbnN0cnVjdGlvbiwgaW5zdGFsbGF0aW9uLCBvcGVyYXRpb24sIG1haW50ZW5hbmNlLCByZXBhaXIsIHJlc3RvcmF0aW9uLCByZW1vdmFsIGFuZC9vciByZXBsYWNlbWVudH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkNDY2NzA3N1xkZWxyc2lkNDY2NzA3NyAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZQ0KcywgYW5kIGFueSBQZXJzb25zIGluc3BlY3RpbmcgdGhlIFNoYXJlZCBGYWNpbGl0aWVzIHNoYWxsIGFiaWRlIGJ5IGFueSBhbmQgYWxsIHNhZmV0eSBydWxlcyBhbmQgcHJvY2VkdXJlcyBlc3RhYmxpc2hlZCBieSBPcGVyYXRvciB0aGF0IGFyZSBub3QgaW5jb25zaXN0ZW50IHdpdGggdGhpcyBBZ3JlZW1lbnQgb3Igb3RoZXJ3aXNlIGFwcGxpY2FibGUgdG8gdGhlIFByb2plY3QsIGFzIGNvbW11bmljYXRlZCBieSB0aGUgT3BlcmF0b3IgcHJpb3IgDQp0byB0aGVpciBhY2Nlc3MgdG8gdGhlIFNoYXJlZCBGYWNpbGl0aWVzOyBhbmQgcHJvdmlkZWQgZnVydGhlciBPcGVyYXRvciBtYXkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU0MzA2MzQgcmVxdWlyZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHRoYXQgc3VjaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTg5OTMgQ28tT3duZXJ9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIGFuZCBpdHMgaW52aXRlZXMgbXVzdCBiZSBhY2NvbXBhbmllZCBieSBPcGVyYXRvci59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzMjl9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNzkyOTcwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDkuMlx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxMjc5Mjk3MCBMaW1pdGF0aW9ucyBvbiBPcGVyYXRvclxycXVvdGUgcyBBdXRob3JpdHl9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzMjl9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBPcGVyYXRvciBzaGFsbCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjc5Mjk3MCBub3QsIHdpdGhvdXQgdGhlIHByaW9yIGFwcHJvdmFsIG9mIGFsbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIG9mIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTg5OTMgQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNzkyOTcwICwgdGFrZSBhbnkgb2YgdGhlIGZvbGxvd2luZyBhY3Rpb25zO317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH1ccGFyZCBcbHRycGFyXHMxNVxxaiBcZmk3MjBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkNzc0MzczMiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNzkyOTcwIDkuMi4xXHRhYiANCkNyZWF0ZSBvciBjYXVzZSB0byBiZSBjcmVhdGVkIGFueSBsaWVuLCBzZWN1cml0eSBpbnRlcmVzdCBvciBjaGFyZ2Ugb24gdGhlIFNoYXJlZCBGYWNpbGl0aWVzIG9yIHRoZSBTaGFyZWQgUmVhbCBQcm9wZXJ0eTsNClxwYXIgOS4yLjJcdGFiIEFtZW5kIG9yIG1vZGlmeSB0aGUgdGVybXMgb2YgdGhpcyBBZ3JlZW1lbnQ7DQpccGFyIDkuMi4zXHRhYiBTZWxsLCBhc3NpZ24sIG1vcnRnYWdlLCBlbmN1bQ0KYmVyLCBjb252ZXkgb3Igb3RoZXJ3aXNlIHRyYW5zZmVyIGFsbCBvciBhbnkgcG9ydGlvbiBvZiBhbnkgZXN0YXRlLCByaWdodCwgdGl0bGUgb3IgaW50ZXJlc3Qgb2YgdGhlIENvLU93bmVycyBpbiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgYW5kL29yIHRoZSBTaGFyZWQgUmVhbCBQcm9wZXJ0eSwgZXhjZXB0IGZvciBkaXNwb3NhbCBvZiB1c2VkLCBvYnNvbGV0ZSBvciB3b3JuIG91dCBlcXVpcG1lbnQgdGhhdCBpcyBiZWluZyByZXBsYWNlZCBvciBpDQpuIGNvbm5lY3Rpb24gd2l0aCB0aGUgZGVjb21taXNzaW9uaW5nIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBhbmQgdGhlIHdpbmRpbmcgdXAgb2YgdGhpcyBBZ3JlZW1lbnQ7DQpccGFyIDkuMi40XHRhYiBCb3Jyb3cgYW55IGZ1bmRzIG9yIGluY3VyIGFueSBpbmRlYnRlZG5lc3Mgb24gYmVoYWxmIG9mIHRoZSBDby1Pd25lcnM7DQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDc0MzYyOTQgOS4yLjVcdGFiIEluY3VyIGV4cGVuc2VzIG9uIGJlaGFsZiBvZiB0aGUgQ28tT3duZXJzIGV4Y2VwdCBpbiBhY2NvcmRhbmNlIHdpdGggdGhpcyBBZ3JlZW1lbnQ7DQpccGFyIDkuMi42XHRhYiBFbnRlciBpbnRvIGFueSBjb250cmFjdHMgb3IgY29tbWl0bWVudHMgaW4gZXhjZXNzIG9mIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNzI1MzUgRml2ZSBIdW5kcmVkIFRob3VzYW5kIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDc0MzYyOTQgRG9sbGFycyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjcyNTM1ICgkNTAwLDAwMCkgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ3NDM2Mjk0IG9yIHdpdGggYSBkdXJhdGlvbiBvZiBncmVhdGVyIHRoYW4gb25lICgxKSB5ZWFyLCBleGNlcHQgYXMgcHJvdmlkZWQgaW4gdGhlIEFubnVhbCBPJk0gQnVkZ2V0IGFuZC9vciB0aGUgYXBwcm92ZWQgYnVkZ2V0IGZvciBFeHRyYW9yZGluYXJ5IE1haW50ZW5hbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYwMTQyNTQgOyBvcn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNzQzNjI5NCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYwMTQyNTQgOS4yLjdcdGFiIENvbXByb21pc2UgYW55IGNsYWltLCBkZW1hbmQgb3IgbGVnYWwgcHJvY2VlZGluZyB3aGVyZSB0aGUgbGlhYmlsaXR5IGlzIG5vdCBmdWxseSBjb3ZlcmVkIGJ5IGluc3VyYW5jZS4NClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzMwfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDkuM1x0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IENvc3RzIGFuZCBFeHBlbnNlc317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzMzMH0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDg2NzI0MTAgRXhjZXB0IHdpdGggcmVzcGVjdCB0byB0aGUgZGVzaWduIGFuZCBjb25zdHJ1Y3Rpb24gb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY1Mzc0MjEgLCB3aGljaCBpcyBjb3ZlcmVkIGluIFNlY3Rpb24gNC4zLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgT3BlcmF0b3JccnF1b3RlIA0KcyBjb3N0cyBhbmQgZXhwZW5zZXMgaW5jdXJyZWQgaW4gdGhlIGV4ZXJjaXNlIG9mIHJpZ2h0cyBhbmQgcGVyZm9ybWFuY2Ugb2Ygb2JsaWdhdGlvbnMgb24gYmVoYWxmIG9mIHRoZSBDby1Pd25lcnMgdW5kZXIgdGhlIFNoYXJlZCBSZWFsIFByb3BlcnR5IEFncmVlbWVudHMgYW5kIHRoaXMgQWdyZWVtZW50IHNoYWxsIGJlIGNvbnNpZGVyZWQgcmVpbWJ1cnNhYmxlIE8mTSBDb3N0cyBmb3IgcHVycG9zZXMgb2YgdGhpcyBBZ3JlZW1lbnQufXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzMzF9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgOS40XHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgT2JsaWdhdGlvbnMgdW5kZXIgU2hhcmVkIFJlYWwgUHJvcGVydHkgQWdyZWVtZW50c317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMzQ1MTQwIDsgRXhlcmNpc2Ugb2YgT3B0aW9uc317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzMzMX0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMzQ1MTQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzMTVccWogXGZpNzIwXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDU1OTQ1MjQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTM0NTE0MCA5LjQuMVx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBPcGVyYXRvcg0KXHJxdW90ZSBzIG9ibGlnYXRpb24gdG8gcGVyZm9ybSBvYmxpZ2F0aW9ucyB1bmRlciB0aGUgU2hhcmVkIFJlYWwgUHJvcGVydHkgQWdyZWVtZW50cyBzaGFsbCBpbmNsdWRlIHRoZSBvYmxpZ2F0aW9uIHRvIGZ1bGZpbGwgaW5kZW1uaXR5IG9ibGlnYXRpb25zOyBwcm92aWRlZCB0aGF0LCBPcGVyYXRvclxycXVvdGUgcyBjb3N0cyBpbiBwZXJmb3JtYW5jZSBvZiBzdWNoIG9ibGlnYXRpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE2NTkzODk0IHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBzaGFsbCBiZSBzdWJqZWN0IHRvIGluZGVtbmlmaWNhdGlvbiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjU5Mzg5NCBwdXJzdWFudCB0byBTZWN0aW9uIDYuMTUgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCiBBcnRpY2xlIFhWLiAgSWYsIHB1cnN1YW50IHRvIEFydGljbGUgWFYsIHRoZSBjb3N0IG9mIHBlcmZvcm1hbmNlIHdvdWxkIHVsdGltYXRlbHkgYmUgcmVxdWlyZWQgdG8gYmUgcGFpZCBlbnRpcmVseSBieSBhIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1ODk5MyBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQogKGkuZS4sIHRoZSBpbmRlbW5pZmllZCBjbGFpbXMgYXJlIHNvbGVseSBkdWUgdG8gbmVnbGlnZW5jZSBvZiBzdWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1ODk5MyBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgKSwgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1ODk5MyBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgc2hhbGwgaW5zdGVhZCBhc3N1bWUgdGhlIGRpcmVjdCBvYmxpZ2F0aW9uIHRvIHBlcmZvcm0gc3VjaCBpbmRlbW5pdHkgb2JsaWdhdGlvbnMgYW5kIE9wZXJhdG9yIHNoYWxsIGhhdmUgbm8gb2JsaWdhdGlvbiB0byBkbyBzby4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEzNDUxNDAgOS40LjJcdGFiIE9wZXJhdG9yIHNoYWxsIG1vbml0b3IgdGhlIGRhdGVzIGZvciB0aGUgZXhlcmNpc2Ugb2YgYWxsIG9wdGlvbnMgYW5kIG90aGVyIGVsZWN0aW9ucyB1bmRlciB0aGUgU2hhcmVkIFJlYWwgUHJvcGVydHkgQWdyZWVtZW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1OTQxOTAyICx9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDExMzQ1MTQwICBzaGFsbCBub3RpZnkgdGhlIENvLU93bmVycyBvZiB0aGUgZGVhZGxpbmVzIGZvciBleGVyY2lzaW5nIHN1Y2ggb3B0aW9ucyBvciBlbGVjdGlvbnMgbm90IGxlc3MgdGhhbiBbc2l4dHkgKDYwKV0gZGF5cyBiZWZvcmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU5NDE5MDIgc3VjaCBkZWFkbGluZXMsIGFuZCBzaGFsbCBzZWVrIHQNCmhlIGRlY2lzaW9uIG9mIHRoZSBDby1Pd25lcnMgd2l0aCByZXNwZWN0IHRvIHRoZSBleGVyY2lzZSBvZiBzdWNoIG9wdGlvbnMgb3Igb3RoZXIgZWxlY3Rpb25zIGluIGEgdGltZWx5IG1hbm5lci4gIE5vIG9wdGlvbiBvciBvdGhlciBlbGVjdGlvbiBzaGFsbCBiZSBleGVyY2lzZWQgZXhjZXB0IHdpdGggdGhlIGNvbnNlbnQgb2YgYXQgbGVhc3QgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzY4MTAzOCB0d28tfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTk0MTkwMiB0aGlyZHMgIG9mIHRoZSBDby1Pd25lcnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNjgxMDM4ICAoYmFzZWQgb24gdGhlaXIgcmVzcGVjdGl2ZSBQcm9wb3J0aW9uYXRlIFNoYXJlcyl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTk0MTkwMiAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxMTM0NTE0MCANClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzMyfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ3MTcxOTk2XGNoYXJyc2lkNzE3MTk5NiBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA5LjVcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkNzE3MTk5NlxjaGFycnNpZDcxNzE5OTYgQ29uc2VudCBvciBBcHByb3ZhbH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlx1bG5vbmVcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzMzJ9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBPcGVyYXRvciBzaGFsbCBub3QgZ3JhbnQgYW55IGNvbnNlbnQgb3IgYXBwcm92YWwgb2YgdGhlIENvLU93bmVycyByZXF1aXJlZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjUzNzQyMSB1bmRlciBvZiBhbnkgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB0aGUgU2hhcmVkIFJlYWwgUHJvcGVydHkgQWdyZWVtZW50cyB9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2NTkzODk0IG9yIE1hdGVyaWFsIFByb2plY3QgQWdyZWVtZW50cyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IHdpdGhvdXQgdGhlIHByaW9yIHdyaXR0ZW4gY29uc2VudCBvZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjUzNzQyMSBhbGwgb2YgdGhlIGFmZmVjdGVkIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNzE3MTk5NiBDby1Pd25lcnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICwgd2hpY2ggc2hhbGwgbm90IGJlIHVucmVhc29uYWJseSB3aXRoaGVsZCBvciBkZWxheWVkLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzMzM317XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNzE3MTk5NlxjaGFycnNpZDcxNzE5OTYgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgOS42XHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDcxNzE5OTZcY2hhcnJzaWQ3MTcxOTk2IENvbmRlbW5hdGlvbiBBd2FyZHN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcdWxub25lXGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzMzfQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLiAgQW55IGNvbmRlbW5hdGlvbiBvciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjUzNzQyMSBzaW1pbGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgYXdhcmRzIHRvIHdoaWNoIHRoZSBDby1Pd25lcnMgc2hhbGwgYmVjb21lIGVudGl0bGVkIHVuZGVyIHRoZSBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBBZ3JlZW1lbnRzIG9yIH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY1Mzc0MjEgd2l0aCByZXNwZWN0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgdG8gdGhlIFNoYXJlZCBGYWNpbGl0aWVzIHNoYWxsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY1Mzc0MjEgDQogYmUgdXNlZCB0byByZXBhaXIsIHJlc3RvcmUgb3IgcmVwbGFjZSB0aGUgYWZmZWN0ZWQgU2hhcmVkIFJlYWwgUHJvcGVydHkgYW5kL29yIFNoYXJlZCBGYWNpbGl0aWVzIHVubGVzcyBzdWNoIHJlcGFpciwgcmVzdG9yYXRpb24gb3IgcmVwbGFjZW1lbnQgaXMgbm90IGZlYXNpYmxlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTE3NjMyMTMgDQosIHRoZSBjb25kZW1uYXRpb24gb3Igb3RoZXIgYXdhcmQgaXMgaW5zdWZmaWNpZW50IHRvIGNvbXBsZXRlIHN1Y2ggcmVwYWlyLCByZXN0b3JhdGlvbiBvciByZXBsYWNlbWVudCwgb3IgYWxsIG9mIHRoZSBDby1Pd25lcnMgYWdyZWUgb3RoZXJ3aXNlIGluIHdyaXRpbmcuICBJZiBzdWNoIGNvbmRlbW5hdGlvbiBvciBvdGhlciBhd2FyZHMgYXJlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY1OTM4OTQgDQogbm90IHVzZWQgdG8gcmVwYWlyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTE3NjMyMTMgLCByZXN0b3JlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY1OTM4OTQgIG9yIHJlcGxhY2UgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTE3NjMyMTMgdGhlIGFmZmVjdGVkIFNoYXJlZCBSZWFsIFByb3BlcnR5IGFuZC9vciB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE2NTkzODk0IFNoYXJlZCBGYWNpbGl0aWVzLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExNzYzMjEzIHRoZXkgc2hhbGwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBiZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTc2MzIxMyANCmRpdmlkZWQgYW1vbmcgdGhlIENvLU93bmVycyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IGluIHByb3BvcnRpb24gdG8gdGhlaXIgcmVzcGVjdGl2ZSBPd25lcnNoaXAgSW50ZXJlc3RzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTE3NjMyMTMgIGluIHRoZSBhZmZlY3RlZCBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBhbmQvb3IgU2hhcmVkIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLCBwcm92aWRlZCB0aGF0IGlmIHN1Y2ggc3VtcyBhcmUgaW4gcmVpbWJ1cnNlbWVudCBvZiBvciBjb21wZW5zYXRpb24gZm9yIHNwZWNpZmljIGNvc3RzIG9yIGRhbWFnZXMgaW5jdXJyZWQgYnkgdGhlIENvLU93bmVycyBpbiByYXRpb3MgZGlmZmVyZW50IGZyb20gdGhhdCBvZiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ3MTcxOTk2IGlyfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBPd25lcnNoaXAgSW50ZXJlc3RzLCB0aGVuIHN1Y2ggZGlmZmVyZW50IHJhdGlvcyBzaGFsbCBiZSB1c2VkIGluIGFwcG9ydGlvbm1lbnQgb2Ygc3VjaCBzdW1zIGFtb25nIHRoZSBDby1Pd25lcnMufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzM0fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ3MTcxOTk2XGNoYXJyc2lkNzE3MTk5NiBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA5LjdcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkNzE3MTk5NlxjaGFycnNpZDcxNzE5OTYgVHJhbnNmZXIgb3IgRW5jdW1icmFuY2Ugb2YgSW50ZXJlc3QgaW4gU2hhcmVkIEFzc2V0c317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlx1bG5vbmVcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzMzR9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBOb3R3aXRoc3RhbmRpbmcgYW55dGhpbmcgdG8gdGhlIGNvbnRyYXJ5IGNvbnRhaW5lZCBpbiB0aGlzIEFncmVlbWVudCBvciB0aGUgU2hhcmVkIFJlYWwgUHJvcGVydHkgQWdyZWVtZW50cywgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYwMjI2OTYgDQphbmQgd2l0aG91dCBsaW1pdGluZyB0aGUgb3RoZXIgcmVxdWlyZW1lbnRzIGFuZCBsaW1pdGF0aW9ucyBpbiB0aGlzIEFncmVlbWVudCB3aXRoIHJlc3BlY3QgdGhlcmV0bywgaW5jbHVkaW5nIFNlY3Rpb24gMTAuNiBhbmQgQXJ0aWNsZSBYSVYsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQppbiBubyBldmVudCBzaGFsbCBhIENvLU93bmVyIGFzc2lnbiwgdHJhbnNmZXIgb3IgY29udmV5LCBvciBtb3J0Z2FnZSwgcGxlZGdlIG9yIG90aGVyd2lzZSBlbmN1bWJlciBpdHMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTE3NjMyMTMgT3duZXJzaGlwIEludGVyZXN0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgaW4gYW55IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTE3NjMyMTMgU2hhcmVkIEFzc2V0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgZXhjZXB0IGluIGNvbm5lY3Rpb24gd2l0aCBhIHNpbXVsdGFuZW91cyBhc3NpZ25tZW50LCB0cmFuc2ZlciBvciBjb252ZXlhbmNlLCBvciBtb3J0Z2FnZSwgcGxlZGdlIG9yIG90aGVyIGVuY3VtYnJhbmNlLCBvZiB0aGUgRmFjaWxpdHkgb3duZWQgYnkgc3VjaCBDby1Pd25lciBhbmQgfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTc2MzIxMyBzdWNoIENvLU93bmVyXHJxdW90ZSBzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgaW50ZXJlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTc2MzIxMyBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgaW4gdGhpcyBBZ3JlZW1lbnQufXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxMTc2MzIxMyAgIEFueSBzdWNoIGFzc2lnbm1lbnQsIHRyYW5zZmVyLCBjb252ZXlhbmNlLCBtb3J0Z2FnZSwgcGxlZGdlIG9yIGVuY3VtYnJhbmNlIGFuZCB0aGUgcmlnaHRzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MDIyNjk2IA0KYWNxdWlyZWQgaW4gY29ubmVjdGlvbiB0aGVyZXdpdGggc2hhbGwgYmUgc3ViamVjdCBpbiBhbGwgcmVzcGVjdHMgdG8gdGhlIHRlcm1zIGFuZCBjb25kaXRpb25zIG9mIHRoaXMgQWdyZWVtZW50Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzMzNX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTEzMTg4MCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA5LjhcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTEzMTg4MCBBZGRpdGlvbmFsIENvLU93bmVyIFJpZ2h0c317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlx1bG5vbmVcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzMzV9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1MTMxODgwIA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMyBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI2IFxsdHJjaFxmY3MwIFxpbnNyc2lkNTEzMTg4MCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA5LjguMVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczNccWogXGZpNzIwXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgyMTYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwyXG91dGxpbmVsZXZlbDJcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQ3MDc4MDAyIFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjZcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDUxMzE4ODAgRWFjaCBDby19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDg3NzM5NiBPfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTEzMTg4MCB3bmVyIHNoYWxsIGhhdmUgdGhlIHJpZ2h0LCBpbiB0aGUgY2FzZSBvZiBhbiBFbWVyZ2VuY3kgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ4NzczOTYgQ29uZGl0aW9uIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTEzMTg4MCB0aGF0IGFmZmVjdHMgc3VjaCBDby1Pd25lclxycXVvdGUgcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDg3NzM5NiBGYWNpbGl0eSBvciB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgbmVjZXNzYXJ5IHRvIHNlcnZlIHN1Y2ggQ28tT3duZXJccnF1b3RlIA0KcyBGYWNpbGl0eSwgdG8gbWFrZSBzdWNoIHJlcGFpcnMgYW5kIHRvIHRha2Ugc3VjaCBvdGhlciBhY3Rpb25zIHdpdGggcmVzcGVjdCB0byB0aGUgU2hhcmVkIEZhY2lsaXQNCmllcyBhcyBtYXkgYmUgcmVhc29uYWJseSBuZWNlc3NhcnkgdG8gYXZvaWQgb3IgbWl0aWdhdGUgbG9zcyBhcyBhIHJlc3VsdCBvZiBzdWNoIEVtZXJnZW5jeSBDb25kaXRpb247IHByb3ZpZGVkLCBob3dldmVyLCB0aGF0LCB0byB0aGUgZXh0ZW50IHRoYXQgY2lyY3Vtc3RhbmNlcyBwZXJtaXQsIGEgQ28tT3duZXIgc2hhbGwgbWFrZSByZWFzb25hYmxlIGVmZm9ydHMgdG8gY29udGFjdCB0aGUgT3BlcmF0b3IgYW5kIHRvIGhhdmUgdGhlIE9wZXJhdA0Kb3IgcmVwYWlyIG9yIG90aGVyd2lzZSB0YWtlIGFjdGlvbiB3aXRoIHJlc3BlY3QgdG8gdGhlIFNoYXJlZCBGYWNpbGl0aWVzIGJlZm9yZSBtYWtpbmcgc3VjaCByZXBhaXJzIG9yIHRha2luZyBzdWNoIG90aGVyIGFjdGlvbnMufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTEzMTg4MCANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczMgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyNiBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgOS44LjJcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgRWFjaCBDby1Pd25lciBzaGFsbCBoYXZlIHRoZSByaWdodCB0byBwYXJ0aWNpcGF0ZSB3aXRoIHRoZSBvdGhlcn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMzc2NTE2MCAgQ28tT3duZXJzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCiBpbiBjb25uZWN0aW9uIHdpdGggYW55IGRpc3B1dGUgd2l0aCBhIGxhbmRvd25lciBvciBvdGhlciBDby1Pd25lciBhcmlzaW5nIHVuZGVyIHRoZSBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBBZ3JlZW1lbnRzLCBhbmQgdGhlIENvLU93bmVycyBzaGFsbCBmdWxseSBjb29wZXJhdGUgYW5kIGNvbW11bmljYXRlIHdpdGggb25lIGFub3RoZXIgaW4gdGhhdCByZWdhcmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDg3NzM5NiAuDQoNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczMgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyNiBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0ODc3Mzk2IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDkuOC4zXHRhYn1JZiB0aGUgT3BlcmF0b3IgZmFpbHMgdG8gdGFrZSBhbnkgYWN0aW9uIG9yIHBlcmZvDQpybSBhbnkgb2YgdGhlIHNlcnZpY2VzIGl0IGlzIG9ibGlnYXRlZCB0byBkbyBvciBwZXJmb3JtIHVuZGVyIHRoaXMgQWdyZWVtZW50IGFmdGVyIHJlYXNvbmFibGUgbm90aWNlLCBhbmQgaWYgc3VjaCBmYWlsdXJlIHRvIGFjdCBvciBwZXJmb3JtIGhhcyBhIG1hdGVyaWFsIGFkdmVyc2UgZWZmZWN0IG9uIHRoZSB1c2Ugb3Igb3BlcmF0aW9uIG9mIHN1Y2ggQ28tT3duZXJccnF1b3RlIA0KcyBGYWNpbGl0eSBvciB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgbmVjZXNzYXJ5IHRvIHNlcnZlIHN1Y2ggQ28tT3duZXJccnF1b3RlIHMgRmFjaWxpdHksIHN1Y2ggQ28tT3duZXIgbWF5IHRha2Ugc3VjaCBhY3Rpb25zIGFzIG1heSByZWFzb25hYmx5IGJlIG5lY2Vzc2FyeSB0byBjb3JyZWN0IHRoZSBPcGVyYXRvclxycXVvdGUgDQpzIGZhaWx1cmUgdG8gYWN0IG9yIHBlcmZvcm0gYW5kIHNoYWxsIGJlIGVudGl0bGVkIHRvIHJlY292ZXIgYWxsIHJlYXNvbmFibGUgY29zdHMgb2YgZG9pbmcgc28gZnJvbSB0aGUgT3BlcmF0b3I7IHByb3ZpZGVkIHRoYXQgc3UNCmNoIENvLU93bmVyIHNoYWxsIGdpdmUgdGhlIG90aGVyIENvLU93bmVycyBhbmQgdGhlIE9wZXJhdG9yIG5vdCBsZXNzIHRoYW4gdGVuICgxMCkgZGF5cyBwcmlvciB3cml0dGVuIG5vdGljZSAoaW4gYWRkaXRpb24gdG8gYW55IG5vdGljZSB0byB0aGUgT3BlcmF0b3Igc2Vla2luZyB0byBoYXZlIHRoZSBPcGVyYXRvciB0YWtlIHRoZSByZXF1aXJlZCBhY3Rpb24gb3IgcGVyZm9ybSB0aGUgcmVxdWlyZWQgc2VydmljZXMpIGJlZm9yZSB0YWtpbmcgcw0KdWNoIGFjdGlvbnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMSBccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIEFSVElDTEUgWFx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzMVxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IFxsaW5lIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzMzNn1DT1ZFTkFOVFN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzMzZ9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBFYWNoIENvLU93bmVyIGhlcmVieSBjb3ZlbmFudHMgYXMgZm9sbG93czp9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzMzd9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyODY5NzIzXGNoYXJyc2lkMzY4NTg0NSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxMC4xXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkNzA3ODAwMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxMjg2OTcyM1xjaGFycnNpZDM2ODU4NDUgTm8gSW50ZXJmZXJlbmNlfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDEyODY5NzIzIC4gIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQ1OTE4MzI5XGNoYXJyc2lkNzA3ODAwMiBFeGNlcHQgYXMgb3RoZXJ3aXNlIHNldCBmb3J0aCBpbiB0aGlzIEFncmVlbWVudCwgZWFjaCBDby1Pd25lcg0KXHJxdW90ZSBzIHVzZSBvZiB0aGUgU2hhcmVkIEFzc2V0cyBzaGFsbCBub3QgaW50ZXJmZXJlIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQxNjAyMjY5NiBpbiBhbnkgbWF0ZXJpYWwgcmVzcGVjdCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkNTkxODMyOVxjaGFycnNpZDcwNzgwMDIgd2l0aCB0aGUgdXNlIGFuZCBlbmpveW1lbnQgYnkgdGhlIG90aGUNCnIgQ28tT3duZXJzIG9mIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQxNjAyMjY5NiB0aGV9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkNTkxODMyOVxjaGFycnNpZDcwNzgwMDIgIFNoYXJlZCBBc3NldHMgb3Igb3RoZXIgcmlnaHRzIGFyaXNpbmcgdW5kZXIgdGhpcyBBZ3JlZW1lbnR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcdWxub25lXGluc3JzaWQxNjE5MTc1NSAgdG8gdGhlIGV4dGVudCBwcm92aWRlZCBpbiB0aGlzIEFncmVlbWVudH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQzNzY1MTYwXGNoYXJyc2lkNzA3ODAwMiAsIGluY2x1ZGluZyBjdXJ0YWlsaW5nIG9yIGRpbWluaXNoaW5nIGFub3RoZXIgQ28tT3duZXJzIGFiaWxpdHkgdG8gfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXHVsbm9uZVxpbnNyc2lkMTYxOTE3NTUgdXNlIGl0cyBQcm9wb3J0aW9uYXRlIFNoYXJlIG9mIHRoZSBEZWxpdmVyeSBDYXBhY2l0eSBvZiB0aGUgVHJhbnNtaXNzaW9uIExpbmV9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkNTkxODMyOVxjaGFycnNpZDcwNzgwMDIgLntcKlxia21rZW5kIF9Ub2M0MDQwMTMzMzd9IH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClx1bG5vbmVcaW5zcnNpZDIxNzY3MzZcY2hhcnJzaWQ3MDc4MDAyIA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI4Njk3MjMgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTAuMlx0YWJ9fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI4Njk3MjMgIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyODY5NzIzXGNoYXJyc2lkMzY4NTg0NSANCntcKlxia21rc3RhcnQgX1RvYzQwNDAxMzMzOH1JbnRlcmNvbm5lY3Rpb24gUmlnaHRzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDEyODY5NzIzIC4gIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQ1OTE4MzI5XGNoYXJyc2lkNzA3ODAwMiANCkVhY2ggQ28tT3duZXIgc2hhbGwgYmUgcmVzcG9uc2libGUgZm9yIHNlY3VyaW5nIGFuZCBtYWludGFpbmluZyBzdWNoIHJpZ2h0cyBhcyBhcmUgbmVjZXNzYXJ5IHRvIGludGVyY29ubmVjdCBzdWNoIENvLU93bmVyXHJxdW90ZSBzIEZhY2lsaXR5IHdpdGggdGhlIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQzNzY1MTYwXGNoYXJyc2lkNzA3ODAwMiBUcmFuc21pc3Npb24gT3duZXJccnF1b3RlIHMgfXsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkNTkxODMyOVxjaGFycnNpZDcwNzgwMDIgdHJhbnNtaXNzaW9uIHN5c3RlbSBhdCB0aGUgUG9pbnQgb2YgSW50ZXJjb25uZWN0aW9uLn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQyMTc2NzM2XGNoYXJyc2lkNzA3ODAwMiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzM4fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzMzl9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyODY5NzIzIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDEwLjNcdGFifX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyODY5NzIzIEludGVyY29ubmVjdGlvbiBBZ3JlZW1lbnR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcdWxub25lXGluc3JzaWQxMjg2OTcyMyAuICB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkMTYwMTQyNTQgVGhlIHJpZ2h0cyBhbmQgcmVzcG9uc2liaWxpdGllcyBvZiB0aGUgQ28tT3duZXJzIHdpdGggcmVzcGVjdCB0byB0aGUgSW50ZXJjb25uZWN0aW9uIEFncmVlbWVudCBzaGFsbCBiZSBnb3Zlcm5lZCBieSB0aGUgTEdJQSBDby1UZW5hbmN5IEFncmVlbWVudC4gIE5vbmV0aGVsZXNzLCBhfXsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkNTkxODMyOVxjaGFycnNpZDcwNzgwMDIgIENvLU93bmVyLCB1cG9uIHJlY2VpdmluZyBub3RpY2Ugb2YgZGVmYXVsdCBmcm9tIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQzNzY1MTYwXGNoYXJyc2lkNzA3ODAwMiB0aGUgQ0FJU099e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcdWxub25lXGluc3JzaWQ1OTE4MzI5XGNoYXJyc2lkNzA3ODAwMiAgb3IgVHJhbnNtaXNzaW9uIE93bmVyIHVuZGVyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQxMjg2OTcyMyB0aGV9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkMTI4Njk3MjNcY2hhcnJzaWQ3MDc4MDAyICB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcdWxub25lXGluc3JzaWQ1OTE4MzI5XGNoYXJyc2lkNzA3ODAwMiBJbnRlcmNvbm5lY3Rpb24gQWdyZWVtZW50LCBzaGFsbCBwcm92aWRlIGEgY29weSBvZiBzdWNoIG5vdGljZSBvZiBkZWZhdWx0IHRvIHRoZSBvdGhlciBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQzNzY1MTYwXGNoYXJyc2lkNzA3ODAwMiBzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXHVsbm9uZVxpbnNyc2lkNTkxODMyOVxjaGFycnNpZDcwNzgwMDIgIHdpdGhpbiAyNCBob3VycyBvZiByZWNlaXZpbmcgc3VjaCBub3RpY2UufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDIxNzY3MzZcY2hhcnJzaWQ3MDc4MDAyIHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzMzl9DQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzM0MH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI4Njk3MjMgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTAuNFx0YWJ9fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI4Njk3MjMgU2hhcmVkIFJlYWwgUHJvcGVydHkgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxMjg2OTcyM1xjaGFycnNpZDU1OTQ1MjQgQWdyZWVtZW50c317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQxMjg2OTcyMyAuICB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkNTkxODMyOVxjaGFycnNpZDcwNzgwMDIgRWFjaCBDby1Pd25lciBzaGFsbCBwcm92aWRlIGFsbCBvdGhlciBDby1Pd25lcnMgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXHVsbm9uZVxpbnNyc2lkMTQ4MTU3MDNcY2hhcnJzaWQ3MDc4MDAyIGFuZCB0byBlYWNoIExlbmRlciwgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDU5MTgzMjlcY2hhcnJzaWQ3MDc4MDAyIHdpdGhpbiAyNCBob3Vyc317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQxNDgxNTcwM1xjaGFycnNpZDcwNzgwMDIgLH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClx1bG5vbmVcaW5zcnNpZDU5MTgzMjlcY2hhcnJzaWQ3MDc4MDAyIA0KIGEgY29weSBvZiBhIG5vdGljZSBvZiBhbnkgZGVmYXVsdCBieSBvciBkaXNhZ3JlZW1lbnQgd2l0aCBhIGxhbmRvd25lciwgb3Igbm90aWNlIG9mIGRlZmF1bHQgYnkgYSBDby1Pd25lciwgdW5kZXIgYW55IFNoYXJlZCBSZWFsIFByb3BlcnR5IEFncmVlbWVudCwgYXMgd2VsbCBhcyBhbnkgY29tbXVuaWNhdGlvbiB3aXRoIHN1Y2ggbGFuZG93bmVyIG9yIGFueSBvdGhlciByZWxldmFudCBDby1Pd25lciByZWxhDQp0ZWQgdG8gdGhlIFNoYXJlZCBSZWFsIFByb3BlcnR5IEFncmVlbWVudCBvciByaWdodHMgb3Igb2JsaWdhdGlvbnMgdGhlcmV1bmRlci59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkMjE3NjczNlxjaGFycnNpZDcwNzgwMDIge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzM0MH0NClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzQxfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxMjg2OTcyMyBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxMC41XHRhYn19e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxMjg2OTcyMyBObyB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDEyODY5NzIzXGNoYXJyc2lkNTU5NDUyNCBXYXN0ZX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQxMjg2OTcyMyAuICB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkNTkxODMyOVxjaGFycnNpZDcwNzgwMDIgDQpObyBDby1Pd25lciBzaGFsbCB1c2Ugb3IgcGVybWl0IHRoZSB1c2Ugb2YgdGhlIFNoYXJlZCBBc3NldHMgaW4gYW55IG1hbm5lciB0aGF0IHdvdWxkIGNyZWF0ZSB3YXN0ZSBvciBudWlzYW5jZSwgb3IgdGhhdCB3b3VsZCBtYXRlcmlhbGx5IGluY3JlYXNlIHRoZSBwcmVtaXVtLCBvciBtYXRlDQpyaWFsbHkgamVvcGFyZGl6ZSB0aGUgaXNzdWFuY2Ugb3IgbWFpbnRlbmFuY2Ugb2YgYW55IGluc3VyYW5jZSBwb2xpY3kgb2YgYW55IENvLU93bmVyIHJlbGF0aW5nIHRvIHRoZSBTaGFyZWQgQXNzZXRzLn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQyMTc2NzM2XGNoYXJyc2lkNzA3ODAwMiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzQxfQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzNDJ9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyODY5NzIzIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDEwLjZcdGFifX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyODY5NzIzIE5vIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTI4Njk3MjNcY2hhcnJzaWQ1NTk0NTI0IExpZW5zfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDEyODY5NzIzIC4gIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQ1OTE4MzI5XGNoYXJyc2lkNzA3ODAwMiANClN1YmplY3QgdG8gQXJ0aWNsZSBYSVYsIG5vIENvLU93bmVyIHNoYWxsIGNyZWF0ZSwgcGVybWl0IG9yIHN1ZmZlciB0byBleGlzdCBieSwgdGhyb3VnaCBvciB1bmRlciBzdWNoIENvLU93bmVyIGFueSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkMjEyODczNlxjaGFycnNpZDcwNzgwMDIgbGllbn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClx1bG5vbmVcaW5zcnNpZDU5MTgzMjlcY2hhcnJzaWQ3MDc4MDAyIHMgb24gdGhlIFNoYXJlZCBBc3NldHMsIGV4Y2VwdCBmb3IgKGEpXH59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkMjEyODczNlxjaGFycnNpZDcwNzgwMDIgbGllbn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQ0ODU5MTE5XGNoYXJyc2lkNzA3ODAwMiBzIGZvciB0fXtccnRsY2hcZmNzMSBcYWYxIA0KXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkNTkxODMyOVxjaGFycnNpZDcwNzgwMDIgYXhlcyB0aGF0IGFyZSBub3QgeWV0IGRlbGlucXVlbnQgb3IgYXJlIGJlaW5nIGNvbnRlc3RlZCBpbiBnb29kIGZhaXRoIGJ5IGFwcHJvcHJpYXRlIHByb2NlZWRpbmdzLCBhbmQgKGIpXH5tZWNoYW5pY1xycXVvdGUgcywgbWF0ZXJpYWxtZW5ccnF1b3RlIHMgb3Igb3RoZXIgbGlrZSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcdWxub25lXGluc3JzaWQyMTI4NzM2XGNoYXJyc2lkNzA3ODAwMiBsaWVufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDU5MTgzMjlcY2hhcnJzaWQ3MDc4MDAyIHMgdGhhdCBhcmlzZSBmcm9tIHRoZSBjb25zdHJ1Y3Rpb24sIHJlY29uc3RydWN0aW9uLCBvd25lcnNoaXAgb3Igb3BlcmF0aW9uIG9mIHN1Y2ggU2hhcmVkIEFzc2V0czsgcHJvdmlkZWQgdGhhdCBpZiBhbnkgbWVjaGFuaWNzXHJxdW90ZSANCiBsaWVucyBvciBzaW1pbGFyIGxpZW5zIGF0dGFjaGVkIHRvIHRoZSBTaGFyZWQgQXNzZXRzLCB0aGUgQ28tT3duZXIgcGVyZm9ybWluZyBvciBjb250cmFjdGluZyBvciBjYXVzaW5nIHRoZSBlbmdhZ2VtZW50IG9mIHRoZSBob2xkZXIgb2Ygc3VjaCBhdHRhY2hlZCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkMjEyODczNlxjaGFycnNpZDcwNzgwMDIgbGllbn17XHJ0bGNoXGZjczEgXGFmMSANClxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDU5MTgzMjlcY2hhcnJzaWQ3MDc4MDAyICBzaGFsbCwgd2l0aGluIHRoaXJ0eSAoMzApIGRheXMgYWZ0ZXIgaXQgcmVjZWl2ZXMgbm90aWNlIG9mIHRoZSBmaWxpbmcsIGVpdGhlciBib25kIGFyb3VuZCBzdWNoIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQyMTI4NzM2XGNoYXJyc2lkNzA3ODAwMiBsaWVufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXHVsbm9uZVxpbnNyc2lkNTkxODMyOVxjaGFycnNpZDcwNzgwMDIgIG9yIGVzdGFibGlzaCBhcHByb3ByaWF0ZSByZXNlcnZlcyB0aGVyZWZvciwgb3Igb3RoZXJ3aXNlIHJlbW92ZSBzdWNoIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQyMTI4NzM2XGNoYXJyc2lkNzA3ODAwMiBsaWVufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDU5MTgzMjlcY2hhcnJzaWQ3MDc4MDAyIA0KIGZyb20gc3VjaCBTaGFyZWQgQXNzZXRzIHB1cnN1YW50IHRvIGFwcGxpY2FibGUgTGF3IChlYWNoIG9mIChhKSBhbmQgKGIpLCBhIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcaVx1bG5vbmVcaW5zcnNpZDU5MTgzMjlcY2hhcnJzaWQ3MDc4MDAyIFBlcm1pdHRlZCBMaWVufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDU5MTgzMjlcY2hhcnJzaWQ3MDc4MDAyIFwnOTQpLg0Ke1wqXGJrbWtlbmQgX1RvYzQwNDAxMzM0Mn0gfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDIxNzY3MzZcY2hhcnJzaWQ3MDc4MDAyIA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzNDN9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyODY5NzIzXGNoYXJyc2lkNzA3ODAwMiBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxMC43XHRhYn19e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxMjg2OTcyM1xjaGFycnNpZDcwNzgwMDIgU3RhbmRhcmQgb2YgUGVyZm9ybWFuY2V9ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQxMjg2OTcyMyAuICB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkNTkxODMyOVxjaGFycnNpZDcwNzgwMDIgRWFjaCBDby1Pd25lciBzaGFsbCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkMTEzNDUxNDAgDQpjb25zdHJ1Y3QsIG9wZXJhdGUgYW5kIG1haW50YWluIGl0cyBGYWNpbGl0eSBhbmQgc2hhbGwgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDU5MTgzMjlcY2hhcnJzaWQ3MDc4MDAyIHBlcmZvcm0gaXRzIG9ibGlnYXRpb25zIHVuZGVyIHRoaXMgQWdyZWVtZW50IGluIGFjY29yZGFuY2Ugd2l0aCAoYSlcfmFsbCBBcHBsaWNhYmxlIExhd3N9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcdWxub25lXGluc3JzaWQxMjg2OTcyMyAsIGluY2x1ZGluZyB0aGUgQ0FJU08gVGFyaWZmLCBhbmQgUGVybWl0c317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQ1OTE4MzI5XGNoYXJyc2lkNzA3ODAwMiAsIChiKVx+R29vZCBVdGlsaXR5IFByYWN0aWNlLCAoYylcfnRoZSB0ZXJtcyBhbmQgY29uZGl0aW9ucyBvZiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcdWxub25lXGluc3JzaWQzNzY1MTYwXGNoYXJyc2lkNzA3ODAwMiB0aGUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDU5MTgzMjlcY2hhcnJzaWQ3MDc4MDAyIEludGVyY29ubmVjdGlvbiBBZ3JlZW1lbnQgYW5kIGFsbCBhcHBsaWNhYmxlIHJlcXVpcmVtZW50cyB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkMzc2NTE2MFxjaGFycnNpZDcwNzgwMDIgdGhlcmV1bmRlcn17DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDU5MTgzMjlcY2hhcnJzaWQ3MDc4MDAyICwgKGQpXH50aGUgdGVybXMgYW5kIGNvbmRpdGlvbnMgb2YgdGhlIE1hdGVyaWFsIFByb2plY3QgQWdyZWVtZW50cyB0byB3aGljaCBpdCBpcyBhIHBhcnR5LCBhbmQgKGUpXH50aGUgdGVybXMgYW5kIGNvbmRpdGlvbnMgb2YgYWxsIFNoYXJlZCBSZWFsIFByb3BlcnR5IEFncmVlbWVudHMufXtccnRsY2hcZmNzMSBcYWYxIA0KXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkMjE3NjczNlxjaGFycnNpZDcwNzgwMDIge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzM0M30NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczEgXHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCBBUlRJQ0xFIFhJXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhcg0KXHMxXHFjIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgXGxpbmUge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzQ0fUlOU1VSQU5DRTsgV0FJVkVSfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzQ0fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzNDV9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDcxNzE5OTZcY2hhcnJzaWQ3MTcxOTk2IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDExLjFcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkNzE3MTk5NlxjaGFycnNpZDcxNzE5OTYgSW5zdXJhbmNlIFJlc3BvbnNpYmlsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcdWxub25lXGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzQ1fQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU5NDE5MDIgT3BlcmF0b3Igc2hhbGwgcHJvY3VyZSBhbmQgbWFpbnRhaW4sIG9uIGJlaGFsZiBvZiB0aGUgQ28tT3duZXJzLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIGFsbC1yaXNrIHByb3BlcnR5IGluc3VyYW5jZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTk0MTkwMiANCmZvciB0aGUgZnVsbCByZXBsYWNlbWVudCBjb3N0IG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgdGhlIFNoYXJlZCBBc3NldHMsIGFuZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTk0MTkwMiBjb21wcmVoZW5zaXZlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgZ2VuZXJhbCBsaWFiaWxpdHkgaW5zdXJhbmNlIGluc3VyaW5nIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU5NDE5MDIgQ28tT3duZXJzIGFuZCBPcGVyYXRvciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IGFnYWluc3QgY2xhaW1zIG9yIGxvc3NlcyBjYXVzZWQgYnkgb3IgYXJpc2luZyBvdXQgb2YgdGhlIG93bmVyc2hpcCwgb3BlcmF0aW9uIGFuZCBtYWludGVuYW5jZSBvZiB0aGUgU2hhcmVkIEFzc2V0cywgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNTk0MTkwMiBpbiBzdWNoIGFtb3VudHMgYW5kIHdpdGggc3VjaCBjb3ZlcmFnZXMgYXMgYXJlIGN1c3RvbWFyeX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM2ODU4NDUgLCBjb21tZXJjaWFsbHkgcmVhc29uYWJsZSBhbmQgY29uc2lzdGVudCB3aXRoIEdvb2QgVXRpbGl0eSBQcmFjdGljZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1OTQxOTAyIA0KLCBhcyB3ZWxsIGFzIGFueSBhZGRpdGlvbmFsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgaW5zdXJhbmNlIGFzIG1heSBiZSByZXF1aXJlZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTk0MTkwMiB1bmRlciBhbnkgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB0aGUgU2hhcmVkIFJlYWwgUHJvcGVydHkgQWdyZWVtZW50c317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzY4NTg0NSAgb3IgTWF0ZXJpYWwgUHJvamVjdCBBZ3JlZW1lbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAuIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1OTQxOTAyICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjAxNDI1NCBQcm9jdXJlbWVudCBvZiBzdWNoIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBpbnN1cmFuY2Ugc2hhbGwgYmUgcGFydCBvZiB0aGUgTyZNIFNlcnZpY2VzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU5NDE5MDIgLCBhbmQgdGhlIGNvc3QgdGhlcmVvZiBzaGFsbCBiZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIE8mTSBDb3N0cy4gIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMzY4NTg0NSBBbGwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM2ODU4NDUgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHNoYWxsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM2ODU4NDUgYmUgfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjAxNDI1NCBuYW1lZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNjg1ODQ1IGFzIGxvc3MgcGF5ZWVzIG9yIG5hbWVkIGluc3VyZWRzLCBhcyBhcHBsaWNhYmxlLCB1bmRlciBzdWNofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgcG9saWNpZXMuICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNjg1ODQ1IA0KT3BlcmF0b3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBzaGFsbCBwcm92aWRlIGNlcnRpZmljYXRlcyBvZiBpbnN1cmFuY2UgY292ZXJhZ2UgdG8gdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MDE0MjU0IENvLU93bmVycyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IHVwb24gcmVxdWVzdC59e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE1NTYzNDg3ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkMjE3NjczNlxjaGFycnNpZDk0NDY3NSANClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzQ2fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ3MTcxOTk2XGNoYXJyc2lkNzE3MTk5NiBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxMS4yXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDcxNzE5OTZcY2hhcnJzaWQ3MTcxOTk2IFdhaXZlcn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlx1bG5vbmVcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzNDZ9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBOb3R3aXRoc3RhbmRpbmcgYW55IHByb3Zpc2lvbiB0byB0aGUgY29udHJhcnkgaW4gdGhpcyBBZ3JlZW1lbnQsIGVhY2ggb2YgdGhlIENvLU93bmVycyBoZXJlYnkgd2FpdmVzIGFueSBhbmQgYWxsIHJpZ2h0cyBvZiByZWNvdmVyeSwgY2xhaW0sIGFjdGlvbiBvciBjYXVzZSBvZiBhY3Rpb24gYWdhaW5zdCB0aGUgb3RoZXIgQ28tT3duZXJzIGFuZCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDEyNzQzNTggaXIgQWZmaWxpYXRlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLCBmb3IgYW55IGxvc3Mgb3IgZGFtYWdlIHRoYXQgbWF5IG9jY3VyIHRvIHRoZSBTaGFyZWQgRmFjaWxpdGllcywgb3IgYW55IHBlcnNvbmFsIHByb3BlcnR5IG9mIHN1Y2ggQ28tT3duZXIgaW4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM5MTU0NzMgb3Igbm9uIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCnRoZSBTaGFyZWQgUmVhbCBQcm9wZXJ0eSwgYnkgcmVhc29uIG9mIGZpcmUsIHRoZSBlbGVtZW50cyBvciBhbnkgb3RoZXIgY2F1c2Ugd2hpY2ggaXMgcmVxdWlyZWQgdG8gYmUgaW5zdXJlZCBieSBwcm9wZXJ0eSBpbnN1cmFuY2UgcG9saWNpZXMgb2J0YWluZWQgcHVyc3VhbnQgdG8gdGhpcyBBZ3JlZW1lbnQsIHJlZ2FyZGxlc3Mgb2YgY2F1c2Ugb3Igb3JpZ2luLCBpbmNsdWRpbmcgbmVnbGlnZW5jZSBvZiB0aGUgb3RoZXIgQ28tT3duZXIgaGVyZQ0KdG8sIG9yIGl0cyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjc0MzU4IEFmZmlsaWF0ZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICwgYW5kIGVhY2ggQ28tT3duZXIgc2hhbGwgY2F1c2UgaXRzIGluc3VyZXIgdG8gd2FpdmUgc3Vicm9nYXRpb24gIHJpZ2h0cyBhZ2FpbnN0IHRoZSBvdGhlciBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTM5MTU0NzMgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMxIFxydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgQVJUSUNMRSBYSUlcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczFccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBcbGluZSB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzNDd9VEFYRVN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzNDd9DQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzM0OH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNzE3MTk5NlxjaGFycnNpZDcxNzE5OTYgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTIuMVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ3MTcxOTk2XGNoYXJyc2lkNzE3MTk5NiBPcGVyYXRvciBQYXltZW50IG9mIFByb3BlcnR5IFRheGVzIGFuZCBBc3Nlc3NtZW50c317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlx1bG5vbmVcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzNDh9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBPcGVyYXRvciB3aWxsIHBheSwgd2hlbiBkdWUsIGFsbCByZWFsIGFuZCBwZXJzb25hbCBwcm9wZXJ0eSB0YXhlcyBhbmQgYXNzDQplc3NtZW50cywgZ2VuZXJhbCBvciBzcGVjaWFsLCBsZXZpZWQgYWdhaW5zdCB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgb3IgdGhlaXIgb3BlcmF0aW9uLCBvciBwYXltZW50IG9ibGlnYXRpb25zIGluIGxpZXUgb2Ygc3VjaCB0YXhlcywgb3IgdGhhdCBhcmUgcGF5YWJsZSBwdXJzdWFudCB0byB0aGUgU2hhcmVkIFJlYWwgUHJvcGVydHkgQWdyZWVtZW50cywgc3ViamVjdCB0byBPcGVyYXRvclxycXVvdGUgDQpzIHJpZ2h0IHRvIGNvbnRlc3QgdGhlIHZhbGlkaXR5IG9mIHN1Y2ggdGF4ZXMgb3IgYXNzZXNzbWVudHMgYW5kIGEgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU4OTkzIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBccnF1b3RlIA0KcyByaWdodCB0byByZXF1aXJlIE9wZXJhdG9yIGNvbnRlc3QgdGhlIHZhbGlkaXR5IG9mIHN1Y2ggdGF4ZXMgb3IgYXNzZXNzbWVudHMgYXQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU4OTkzIHRoZSBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXHJxdW90ZSBzIGV4cGVuc2UufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTE0NzA0NzcgICB9DQp7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzM0OX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNzE3MTk5NlxjaGFycnNpZDcxNzE5OTYgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTIuMlx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ3MTcxOTk2XGNoYXJyc2lkNzE3MTk5NiBSZWltYnVyc2VtZW50IE9ibGlnYXRpb25zfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XHVsbm9uZVxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzM0OX0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIEVhY2ggQ28tT3duZXIgc2hhbGwgYmUgcmVzcG9uc2libGUgZm9yLCBhbmQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU4OTkzIHRoZSBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgcyB3aWxsIHJlaW1idXJzZSBPcGVyYXRvciBmb3IgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNzE3MTk5NiANCnN1Y2ggQ28tT3duZXJccnF1b3RlIHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICByZXNwZWN0aXZlIFByb3BvcnRpb25hdGUgU2hhcmUgaW4gb25lIG9yIG1vcmUgU2hhcmVkIEFzc2V0IEdyb3VwcyBpbiB3aGljaCBpdCBoYXMgYW4gT3duZXJzaGlwIEludGVyZXN0LCBvZiB0aGUgdGF4ZXMgYW5kIGFzc2Vzc21lbnRzIGRlc2NyaWJlZCBpbiBTZWN0aW9uXH4xMi4xIGFzIE8mTSBDb3N0c317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTE0NzA0NzcgIGFzIHByb3ZpZGVkIGluIEFydGljbGUgVkl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzNTB9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTIuM1x0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IFRyYW5zZmVyIFRheGVzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM5MTU0NzMgLCBTYWxlcyBhbmQgVXNlIFRheGVzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzUwfQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDU5MTgzMjlcY2hhcnJzaWQxNTg4MTk2NiAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgIEluIHRoZSBldmVudCBvZiBhIHRyYW5zZmVyIG9yIHNhbGUgb2YgYWxsIG9yIHBhcnQgb2YgYSBDby1Pd25lclxycXVvdGUgcyBPd25lcnNoaXAgSW50ZXJlc3QgaW4gYSBTaGFyZWQgQXNzZXQsIGFwcGxpY2FibGUgdHJhbnNmZXIgdGF4ZXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTg4MTk2NiBhbmQgc2FsZXMgYW5kIHVzZSB0YXhlcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IHdpbGwgYmUgYm9ybmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTMyMzM0MSBieSB0aGUgcHVyY2hhc2VyKHMpIG9yIHRyYW5zZmVyZWUocykgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBvZiBzdWNoIFNoYXJlZCBBc3NldH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNzE3MTk5NiA7IHByb3ZpZGVkIHRoYXQgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM5OTc3MTcgbm9uLXRyYW5zZmVycmluZyBDby1Pd25lcnMgc2hhbGwgaGF2ZSBubyBvYmxpZ2F0aW9uIHdpdGggcmVzcGVjdCB0byBhbnkgc3VjaCB0cmFuc2ZlciB0YXhlcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg4MTk2NiANCm9yIHNhbGVzIGFuZCB1c2UgdGF4ZXMsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM5OTc3MTcgYW5kIHNoYWxsIGJlIGhlbGQgaGFybWxlc3MgYWdhaW5zdCBzYW1lIGJ5IHRoZSB0cmFuc2ZlcnJpbmcgQ28tT3duZXIgKHVubGVzcyB0aGV5IGFyZSB0aGUgcHVyY2hhc2VyIG9yIHRyYW5zZmVyZWUgb2Ygc3VjaCBTaGFyZWQgQXNzZXQpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCi4gIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODU2MzU5IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzNTF9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODU2MzU5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDEyLjRcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ1MzIzMzQxIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODU2MzU5IENvbnN0cnVjdGlvbiBvZiBTaGFyZWQgQXNzZXR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDQ0MzU1MiBzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDEzODU2MzU5IA0KLiAgSW4gdGhlIGV2ZW50IG9mIGNvbnN0cnVjdGlvbiBvZiBhbiBBZGRpdGlvbmFsIFBoYXNlIG9yIG90aGVyIFNoYXJlZCBBc3NldHMgd2hlcmUgY29uc3RydWN0aW9uIGNvc3RzIGFyZSBzaGFyZWQgYnkgQ28tT3duZXJzIG9mIHRoZSBTaGFyZWQgQXNzZXRzLCBhbGwgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDUzMjMzNDEgYXBwbGljYWJsZSBzYWxlcyBhbmQgdXNlIHRheGVzIGFuZCB9ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQxMzg1NjM1OSB0cmFuc2ZlciB0YXhlcyBzaGFsbCBiZSBib3JuZSBieSB0aGUgQ28tT3duZXJzIG9mIHN1Y2ggU2hhcmVkIEFzc2V0cyBpbiBhY2NvcmRhbmNlIHdpdGggdGhlaXIgcmVzcGVjdGl2ZSBPd25lcnNoaXAgSW50ZXJlc3RzIGluIHRoZSBTaGFyZWQgQXNzZXRzLntcKlxia21rZW5kIF9Ub2M0MDQwMTMzNTF9ICAgfXtccnRsY2hcZmNzMSBcYWYxIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMSBccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIEFSVElDTEUgWElJSVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzMVxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IFxsaW5lIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzM1Mn1FVkVOVFMgT0YgREVGQVVMVDsgUkVNRURJRVN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzNTJ9DQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzM1M317XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxMy4xXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgRGVmYXVsdHN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzNTN9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBUaGUgb2NjdXJyZW5jZSBhbmQgY29udGludWF0aW9uIG9mIGFueSBvZiB0aGUgZm9sbG93aW5nIGV2ZW50cyBzaGFsbCBjb25zdGl0dXRlIGFuIGV2ZW50IG9mIGRlZmF1bHQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjcxMDk2MiBieX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIGEgQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDY3MTA5NjIgIG9yIE9wZXJhdG9yLCBhcyBhcHBsaWNhYmxlLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHVuZGVyIHRoaXMgQWdyZWVtZW50IChhbiBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgRXZlbnQgb2YgRGVmYXVsdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXCc5NCk6fXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMyBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI2IFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxMy4xLjFcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMzXHFqIFxmaTcyMFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MjE2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMlxvdXRsaW5lbGV2ZWwyXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjZcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDU5MTgzMjkgUGF5bWVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLg0KICBBIENvLU93bmVyIGZhaWxzIHRvIHBheSB3aGVuIGR1ZSBhbnkgYW1vdW50cyByZXF1aXJlZCB0byBieSBwYWlkIGJ5IHN1Y2ggQ28tT3duZXIgdW5kZXIgdGhpcyBBZ3JlZW1lbnQsIGFuZCBzdWNoIGZhaWx1cmUgdG8gcGF5IGlzIG5vdCBjdXJlZCB3aXRoaW4gdGVuICgxMCkgZGF5cyBmb2xsb3dpbmcgd3JpdHRlbiBub3RpY2UgZnJvbSBhbnkgb3RoZXIgQ28tT3duZXIgb3IgdGhlIE9wZXJhdG9yIHNwZWNpZnlpbmcgdGhlIGFtb3VudCB0byBiDQplIHBhaWQsIHByb3ZpZGVkIHRoYXQgc3VjaCBwZXJpb2Qgc2hhbGwgYmUgZXh0ZW5kZWQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTIxMzk2MTkgd2l0aCByZXNwZWN0IHRvIGEgZGlzcHV0ZWQgcG9ydGlvbiBvZiBzdWNoIGFtb3VudCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KZm9yIHNvIGxvbmcgYXMgdGhlIGFsbGVnZWRseSBkZWZhdWx0aW5nIENvLU93bmVyIGlzIGRpc3B1dGluZyBpbiBnb29kIGZhaXRoIHN1Y2ggYW1vdW50IHB1cnN1YW50IHRvIHRoZSBwcm9jZWR1cmVzIHNldCBmb3J0aCBpbiBTZWN0aW9uXH42LjEyLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMzIFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjYgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDEzLjEuMlx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNTkxODMyOSBCYW5rcnVwdGN5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAuICBJZiBhIENvLU93bmVyIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM5NzQyMzUgb3IgdGhlIE9wZXJhdG9yIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQpmaWxlcyBhIHBldGl0aW9uIG9yIG90aGVyd2lzZSBjb21tZW5jZXMsIG9yIGF1dGhvcml6ZXMgb3IgYWNxdWllc2NlcyBpbiB0aGUgY29tbWVuY2VtZW50IG9mLCBhIHByb2NlZWRpbmcgb3IgY2F1c2UgdW5kZXIgYW55IGJhbmtydXB0Y3ksIGluc29sdmVuY3ksIHJlY2VpdmVyc2hpcCBvciBzaW1pbGFyIGxhdyBmb3IgdGhlIHByb3RlY3Rpb24gb2YgY3JlZGl0b3JzIG9yIHN1ZmZlcnMgdGhlIGZpDQpsaW5nIG9mIGFuIGludm9sdW50YXJ5IGJhbmtydXB0Y3kgcGV0aXRpb24gb3IgcHJvY2VlZGluZyBjb21tZW5jZWQgYWdhaW5zdCBpdCwgd2hpY2ggaW4gdGhlIGNhc2Ugb2YgYW4gaW52b2x1bnRhcnkgcGV0aXRpb24gb3IgcHJvY2VlZGluZyByZW1haW5zIHVuZGlzbWlzc2VkIGFuZCB1bnN0YXllZCBmb3IgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTIxMzk2MTkgc2l4dHkgKDYwKX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgZGF5czt9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMyBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI2IFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxMy4xLjNcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDU5MTgzMjkgT3RoZXIgRGVmYXVsdHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KLiAgQSBDby1Pd25lciBmYWlscyB0byBjdXJlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyMTM5NjE5IGFueSBicmVhY2ggb3IgZGVmYXVsdCBpbiB0aGUgcGVyZm9ybWFuY2Ugb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBhbnkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTIxMzk2MTkgDQptYXRlcmlhbCBjb3ZlbmFudCBvciBvYmxpZ2F0aW9uIGhlcmV1bmRlciBpbiBhbnkgbWF0ZXJpYWwgcmVzcGVjdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLCB3aXRoaW4gdGhpcnR5ICgzMCkgZGF5cyBmb2xsb3dpbmcgd3JpdHRlbiBub3RpY2UgZnJvbSBhbnkgb3RoZXIgQ28tT3duZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTIxMzk2MTkgb3IgT3BlcmF0b3IgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IHNwZWNpZnlpbmcgdGhlIG5hdHVyZSBvZiB0aGUgZmFpbHVyZSB0byBwZXJmb3JtLCBwcm92aWRlZCB0aGF0IGlmIHRoZSBkZWZhdWx0IA0KaXMgbm90IHJlYXNvbmFibHkgY2FwYWJsZSBvZiBiZWluZyBjdXJlZCB3aXRoaW4gdGhpcnR5ICgzMCkgZGF5cywgdGhlbiB0aGUgZGVmYXVsdGluZyBDby1Pd25lciBtYXkgYmUgYWxsb3dlZCBzdWNoIGxvbmdlciBwZXJpb2QgYXMgdGhlIENvLU93bmVycyBtdXR1YWxseSBhZ3JlZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMDczODkgKG5vdCB0byBleGNlZWQgbmluZXR5ICg5MCkgZGF5cykgfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IGFzIG1heSBiZSByZWFzb25hYmx5IG5lY2Vzc2FyeSB1bmRlciB0aGUgY2lyY3Vtc3RhbmNlcyB0byBjdXJlIHN1Y2ggZmFpbHVyZSBzbyBsb25nIGFzIHRoZSBkZWZhdWx0aW5nIENvLU93bmVyIGlzIHB1cnN1aW5nIGEgY3VyZSB3aXRoIHJlYXNvbmFibGUgZGlsaWdlbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTIxMzk2MTkgDQo7IHByb3ZpZGVkLCBmdXJ0aGVyLCB0aGF0IGlmIGFueSBjb3ZlbmFudCBvciBvYmxpZ2F0aW9uIHJlbGF0ZXMgdG8gdGhlIHBlcmZvcm1hbmNlIG9mIGFueSBjb3ZlbmFudCBvciBvYmxpZ2F0aW9uIHVuZGVyIGEgU2hhcmVkIFJlYWwgUHJvcGVydHkgQWdyZWVtZW50IG9yIE1hdGVyaWFsDQogUHJvamVjdCBBZ3JlZW1lbnQsIHN1Y2ggZGVmYXVsdCBtdXN0IGJlIGN1cmVkIG5vIGxhdGVyIHRoYW4gW3RlbiAoMTApXSBkYXlzIGJlZm9yZSB0aGUgZXhwaXJhdGlvbiBvZiBhbnkgY3VyZSBwZXJpb2QgaW4gc3VjaCBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBBZ3JlZW1lbnQgb3IgTWF0ZXJpYWwgUHJvamVjdCBBZ3JlZW1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IC59e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMzIFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjYgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDEzLjEuNFx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNTkxODMyOSBEZWZhdWx0IGJ5IE9wZXJhdG9yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCi4gIE9wZXJhdG9yIGZhaWxzIHRvIHBlcmZvcm0gYW55IG9mIGl0cyBtYXRlcmlhbCANCm9wZXJhdGlvbiwgbWFpbnRlbmFuY2UsIHJlcGFpciBvciBvdGhlciBvYmxpZ2F0aW9ucyBpbiB0aGlzIEFncmVlbWVudCwgd2l0aCByZXNwZWN0IHRvIGFsbCBvciBhIHBvcnRpb24gb2YgdGhlIFNoYXJlZCBBc3NldHMsIGFuZCBzdWNoIGZhaWx1cmUgaXMgbm90IGN1cmVkIHdpdGhpbiB0ZW4gKDEwKSBkYXlzIGZvbGxvd2luZyB3cml0dGVuIG5vdGljZSBieSBhIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1ODk5MyANCkNvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSA7IHByb3ZpZGVkIHRoYXQsIHRoYXQgaWYgc3VjaCBmYWlsdXJlIGJ5IE9wZXJhdG9yIGNyZWF0ZXMgYW4gRW1lcmdlbmN5IENvbmRpdGlvbiBvciBtYXRlcmlhbGx5IGludGVyZmVyZXMgd2l0aCBhIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1ODk5MyBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBccnF1b3RlIHMgVW5kaXZpZGVkIFVzZSBJbnRlcmVzdCBpbiBTaGFyZWQgRmFjaWxpdGllcyBpbiB3aGljaCBpdCBoYXMgYW4gT3duZXJzaGlwIEludGVyZXN0LCBvciBvcGVyYXRpb24gb2YgaXRzIEZhY2lsaXR5LCBvbmx5IHN1Y2ggYWR2YW5jZSB3cml0dGVuIG5vdGljZSwgaWYgYW55LCBhcyBtYXkgYmUgcmVhc29uYWINCmx5IHByYWN0aWNhYmxlIHVuZGVyIHRoZSBjaXJjdW1zdGFuY2VzIHNoYWxsIGJlIHJlcXVpcmVkLCBidXQgaWYgc3VjaCBhZHZhbmNlIG5vdGljZSBpcyBub3QgcHJvdmlkZWQsIHdyaXR0ZW4gbm90aWNlIHRoZXJlb2Ygc2hhbGwgYmUgcHJvdmlkZWQgcHJvbXB0bHkgdGhlcmVhZnRlciBieSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTg5OTMgdGhlIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5ICB0byBPcGVyYXRvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIwNzM4OSA7IHByb3ZpZGVkIGZ1cnRoZXIgdGhhdCBpZiB0aGUgZGVmYXVsdCBpcyBub3QgcmVhc29uYWJseSBjYXBhYmxlIG8NCmYgYmVpbmcgY3VyZWQgd2l0aGluIHRlbiAoMTApIGRheXMsIHRoZW4gdGhlIGRlZmF1bHRpbmcgQ28tT3duZXIgbWF5IGJlIGFsbG93ZWQgc3VjaCBsb25nZXIgcGVyaW9kIGFzIHRoZSBDby1Pd25lcnMgbXV0dWFsbHkgYWdyZWUgKG5vdCB0byBleGNlZWQgW25pbmV0eSAoOTApXSBkYXlzKSBhcyBtYXkgYmUgcmVhc29uYWJseSBuZWNlc3NhcnkgdW5kZXIgdGhlIGNpcmN1bXN0YW5jZXMgdG8gY3VyZSBzdWNoIGZhaWx1cmUgc28gbG9uZyBhcyB0aA0KZSBkZWZhdWx0aW5nIENvLU93bmVyIGlzIHB1cnN1aW5nIGEgY3VyZSB3aXRoIHJlYXNvbmFibGUgZGlsaWdlbmNlOyBvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMzIFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjYgXGx0cmNoXGZjczAgXGluc3JzaWQyMDczODkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTMuMS41XHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyMDczODkgQXNzaWdubWVudDsgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNTkxODMyOSANCk1lcmdlciwgQ29uc29saWRhdGlvbiB3aXRob3V0IEFzc3VtcHRpb24gb2YgT2JsaWdhdGlvbnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IC4gIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIwNzM4OSBBIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgQ28tT3duZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjA3Mzg5IA0KYXNzaWducyBvciBvdGhlcndpc2UgdHJhbnNmZXJzIGl0cyByaWdodHMgdW5kZXIgdGhpcyBBZ3JlZW1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MTcxNTIgIGV4Y2VwdCBhcyBleHByZXNzbHkgcGVybWl0dGVkIGhlcmV1bmRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIwNzM4OSAsIG9yIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQpjb25zb2xpZGF0ZXMgb3IgYW1hbGdhbWF0ZXMgd2l0aCwgb3IgbWVyZ2VzIHdpdGggb3IgaW50bywgb3IgdHJhbnNmZXJzIGFsbCBvciBzdWJzdGFudGlhbGx5IGFsbCBvZiBpdHMgYXNzZXRzIHRvLCBhbm90aGVyIGVudGl0eSBhbmQsIGF0IHRoZSB0aW1lIG9mIHN1Y2ggY29uc29saWRhdGlvbiwgYW1hbGdhbWF0aW9uLCBtZXJnZXIgb3IgdHJhbnNmZXIsIHRoZSByZXN1bHRpbmcsIHN1cnZpdmluZyBvciB0cmFuc2ZlcmVlIGVudGl0eSBmYWlscw0KIHRvIGFzc3VtZSBhbGwgdGhlIG9ibGlnYXRpb25zIG9mIHN1Y2ggQ28tT3duZXIgdW5kZXIgdGhpcyBBZ3JlZW1lbnQgdG8gd2hpY2ggaXQgb3IgaXRzIHByZWRlY2Vzc29yIHdhcyBhIHBhcnR5IGJ5IG9wZXJhdGlvbiBvZiBsYXcgb3IgcHVyc3VhbnQgdG8gYW4gYWdyZWVtZW50IHJlYXNvbmFibHkgc2F0aXNmYWN0b3J5IHRvIHRoZSBvdGhlciBDby1Pd25lcnMufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANCg0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzNTR9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTMuMlx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IFJlbWVkaWVzIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MDE0MjU0IFVwb24gfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBEZWZhdWx0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzU0fQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMzIFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjYgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDEzLjIuMVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczNccWogXGZpNzIwXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgyMTYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwyXG91dGxpbmVsZXZlbDJcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyNlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBJZiBhbnkgZGVmYXVsdCBpcyBub3QgY3VyZWQgd2l0aGluIHRoZSBhcHBsaWNhYmxlIGN1cmUgcGVyaW9kIChpZiBhbnkpIHByb3ZpZGVkIGluIFNlY3Rpb25cfjEzLjEgYnkgbWFraW5nIG9yIHRlbmRlcmluZyB0aGUgcmVxdWlyZWQgcGF5bWVudCBvciBwZXJmb3JtYW5jZSwgZWFjaCBub24tZGVmYXVsdGluZyBDby1Pd25lciBzaGFsbCBoYXZlIHRoZSByaWdodCAoaSlcfg0KdG8gY3VyZSB0aGUgZGVmYXVsdCBhdCB0aGUgZXhwZW5zZSBvZiB0aGUgZGVmYXVsdGluZyBDby1Pd25lciwgaW4gd2hpY2ggZXZlbnQgdGhlIGRlZmF1bHRpbmcgQ28tT3duZXIgc2hhbGwgcmVpbWJ1cnNlIHRoZSBjdXJpbmcgQ28tT3duZXIgYWxsIG9mIHRoZSBjdXJpbmcgQ28tT3duZXJccnF1b3RlIA0KcyBjb3N0cyBvZiBjdXJlIHdpdGhpbiB0aGlydHkgKDMwKSBkYXlzIG9mIGludm9pY2UsIG9yIGN1cmluZyBDby1Pd25lciBtYXkgb2Zmc2V0IHN1Y2ggY29zdHMgYWdhaW5zdCBhbnkgc3VtcyB0aGVuIG9yIHRoZXJlYWZ0ZXIgb3dlZCBieSB0aGUgY3VyaW5nIENvLU93bmVyIHRvIHRoZSBkZWZhdWx0aW5nIENvLU93bmVyOyAoaWkpXH50byBlbmZvcmNlIHNwZWNpZmljIHBlcmZvcm1hbmNlOyBvciAoaWlpKVx+DQp0byBlbmZvcmNlIGFueSBvdGhlciByZW1lZHkgYXZhaWxhYmxlIHRvIHRoZSBub24tZGVmYXVsdGluZyBDby1Pd25lciBhdCBsYXcgb3IgaW4gZXF1aXR5LCBzdWJqZWN0IHRvIFNlY3Rpb25cfjEzLjIuNSBhbmQgQXJ0aWNsZSBYVkkufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczMgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyNiBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTMuMi4yXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IElmIE9wZXJhdG9yIGRlZmF1bHRzIHB1cnN1YW50IHRvIFNlY3Rpb25cfjEzLjEuNCwgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNjk3MjE4NyBueX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1ODk5MyBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQogbWF5IGF0IGl0cyBvcHRpb24gYWNjZXNzIHRoZSBTaGFyZWQgQXNzZXRzIGFuZCBwZXJmb3JtIChvciBjYXVzZSB0byBiZSBwZXJmb3JtZWQpIG9wZXJhdGlvbiwgbWFpbnRlbmFuY2UsIHJlcGFpciBvciBvdGhlciBkdXRpZXMgb24gYmVoYWxmIG9mIE9wZXJhdG9yLCBhbmQgT3BlcmF0b3Igc2hhbGwgcmVpbWJ1cnNlIHN1Y2ggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU4OTkzIENvLU93bmVyfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxycXVvdGUgcyByZWFzb25hYmxlIGNvc3RzIGFuZCBleHBlbnNlcyBpbmN1cnJlZCBieSAob3Igb24gYmVoYWxmIG9mKSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTg5OTMgc3VjaCBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHByb21wdGx5IHVwb24gT3BlcmF0b3JccnF1b3RlIA0KcyByZWNlaXB0IG9mIGFuIGludm9pY2UgYWNjb21wYW5pZWQgYnkgZG9jdW1lbnRhdGlvbiBldmlkZW5jaW5nIHN1Y2ggY29zdHMgYW5kIGV4cGVuc2VzIGFuZCB0aGVpciByZWFzb25hYmxlbmVzczsgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczMgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyNiBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTMuMi4zXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IEluIGFkZGl0aW9uIHRvIHRoZSByZW1lZGllcyBwcm92aWRlZCBpbiBTZWN0aW9uXH4NCjEzLjIuMSBhbmQgMTMuMi4yLCBpZiB0aGUgZGVmYXVsdGluZyBDby1Pd25lciBpcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMDczODkgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgT3BlcmF0b3IsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDYxNzE1MiB0aGUgb3RoZXIgQ28tT3duZXJzICh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDExNDcwNDc3IHRoZSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDIwNzM4OVxjaGFycnNpZDk0NDY3NSBOb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOVxjaGFycnNpZDk0NDY3NSAtfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDIwNzM4OVxjaGFycnNpZDk0NDY3NSBEZWZhdWx0aW5nIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjlcY2hhcnJzaWQ5NDQ2NzUgQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkMjA3Mzg5XGNoYXJyc2lkOTQ0Njc1IHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MTcxNTIgXCc5NCl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBzaGFsbCBoYXZlIHRoZSByaWdodCwgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMDczODkgYnkgdW5hbmltb3VzIGNvbnNlbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2OTcyMTg3ICBvZiB0aGUgTm9uLURlZmF1bHRpbmcgQ28tT3duZXJzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIwNzM4OSANCnRvIHJlbW92ZSB0aGUgZGVmYXVsdGluZyBDby1Pd25lciBmcm9tIGl0cyBwb3NpdGlvbiBhcyBPcGVyYXRvciBhbmQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMDczODkgYXBwb2ludCBvbmUgb2YgdGhlbXNlbHZlcyBhcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IHRoZSBPcGVyYQ0KdG9yIGZvciBwdXJwb3NlcyBvZiB0aGlzIEFncmVlbWVudC4gIFRoZSBDby1Pd25lcnMgc2hhbGwgY29vcGVyYXRlIHdpdGggZWFjaCBvdGhlciBpbiBlZmZlY3Rpbmcgc3VjaCB0cmFuc2l0aW9uIGFuZCBwcm92aWRlIGFsbCBub3RpY2VzIHRvIHRoaXJkIHBhcnRpZXMgYW5kIHRha2UgYWxsIG90aGVyIGFjdGlvbnMgZGVlbWVkIG5lY2Vzc2FyeSBvciBhZHZpc2FibGUgYnkgYW55IG9mIHRoZW0gd2l0aCByZXNwZWN0IHRvIHN1Y2ggY2hhbmdlIGluDQogc3RhdHVzLiAgRWZmZWN0aXZlIGFzIG9mIHRoZSBkYXRlIHRoZSBub24tZGVmYXVsdGluZyBDby1Pd25lciBiZWNvbWVzIE9wZXJhdG9yLCBpdCBzaGFsbCBhc3N1bWUgcmVzcG9uc2liaWxpdHkgZm9yIGFsbCBvYmxpZ2F0aW9ucyBvZiBPcGVyYXRvciB0aGVyZWFmdGVyIGFjY3J1aW5nIHVuZGVyIHRoaXMgQWdyZWVtZW50IGFuZCB0aGUgZGVmYXVsdGluZyBDby1Pd25lciBzaGFsbCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDY1ODk5MyBoYXZlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgYWxsIG9ibGlnYXRpb25zIG9mIGEgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU4OTkzIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgdGhlcmVhZnRlciBhY2NydWluZyB1bmRlciB0aGlzIEFncmVlbWVudC4gfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMyBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI2IFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxMy4yLjRcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgTm90d2l0aHN0YW5kaW5nIGFueXRoaW5nIGNvbnRhaW5lZCBpbiB0aGlzIEFncmVlbWVudCB0byB0aGUgY29udHJhcnksIGlmIGEgQ28tT3duZXINClxycXVvdGUgcyBkZWZhdWx0IHVuZGVyIHRoaXMgQWdyZWVtZW50IGNyZWF0ZXMgYSBtYXRlcmlhbCBpbnRlcmZlcmVuY2Ugd2l0aCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MTcxNTIgYSBOb24tRGVmYXVsdGluZyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IENvLU93bmVyXHJxdW90ZSBzIG9wZXJhdGlvbnMgb3IgbWFpbnRlbmFuY2Ugb2Ygc3VjaCBObw0Kbi1EZWZhdWx0aW5nIENvLU93bmVyXHJxdW90ZSBzIEZhY2lsaXRpZXMsIHRoZSBOb24tRGVmYXVsdGluZyBDby1Pd25lcihzKSBzaGFsbCBoYXZlIHRoZSByaWdodCB0byBhbnkgZXhwZWRpdGVkIHJlbWVkaWVzIHRoYXQgbWF5IGJlIGF2YWlsYWJsZSBoZXJldW5kZXIgYXQgbGF3IG9yIGluIGVxdWl0eSwgaW5jbHVkaW5nIHRoZSByaWdodCB0byBjdXJlIHN1Y2ggZGVmYXVsdCBhcyBwcm92aWRlZCBpbiBTZWN0aW9uXH4xMy4yLjEsIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjE3MTUyIHRoZSByaWdodCB0byBzZWVrIHNwZWNpZmljIHBlcmZvcm1hbmNlIG9mIHRoaXMgQWdyZWVtZW50LCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KYW5kIHRoZSByaWdodCB0byByZWltYnVyc2VtZW50IG9mIGFsbCByZWFzb25hYmxlIGNvc3RzIGFjdHVhbGx5IGluY3VycmVkIGJ5IHN1Y2ggTm9uLURlZmF1bHRpbmcgQ28tT3duZXIgaW4gZWZmZWN0aW5nIHN1Y2ggY3VyZS59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMyBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI2IFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxMy4yLjVcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQpJbiBubyBldmVudCBzaGFsbCBhbnkgQ28tT3duZXIgYmUgZW50aXRsZWQgdG8gdGVybWluYXRlIHRoaXMgQWdyZWVtZW50IG9uIGFjY291bnQgb2YgZGVmYXVsdCBieSBhbm90aGVyIENvLU93bmVyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExNDcwNDc3IG9yIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzOTc0MjM1IHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDExNDcwNDc3IE9wZXJhdG9yIGhlcmV1bmRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTQ3MDQ3NyAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBOb25lIG9mIHRoZSBiYW5rcnVwdGN5IG9yIGluc29sdmVuY3kgb2YgYSBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTE0NzA0NzcgIG9yIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzOTc0MjM1IHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTQ3MDQ3NyBPcGVyYXRvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLCBvciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MTcxNTIgDQphbiBFdmVudCBvZiBEZWZhdWx0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgYnkgYSBDby1Pd25lciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTQ3MDQ3NyBvciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzk3NDIzNSB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTE0NzA0NzcgT3BlcmF0b3IgfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IHVuZGVyIHRoaXMgQWdyZWVtZW50IHNoYWxsIGJlIGdyb3VuZHMgZm9yIHRlcm1pbmF0aW5nIHRoaXMgQWdyZWVtZW50Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyODY5NzIzIA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMyBccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI4Njk3MjMgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTMuMi42XHRhYn19e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGluc3JzaWQxMjg2OTcyMyBUaGUgQ28tT3duZXJzIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzOTc0MjM1IA0KYW5kIHRoZSBPcGVyYXRvciB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGluc3JzaWQxMjg2OTcyMyBhZ3JlZSB0aGF0IGRhbWFnZXMgbWF5IGJlIGFuIGluYWRlcXVhdGUgcmVtZWR5IGZvciBjZXJ0YWluIEV2ZW50cyBvZiBEZWZhdWx0LCBhbmQgdGhhdCBlYWNoIENvLU93bmVyIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzOTc0MjM1IGFuZCB0aGUgT3BlcmF0b3IgfXsNClxydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGluc3JzaWQxMjg2OTcyMyBzaGFsbCBiZSBlbnRpdGxlZCB0byBzZWVrIGluanVuY3RpdmUgYW5kIG90aGVyIGVxdWl0YWJsZSByZWxpZWYsIGluY2x1ZGluZyBzcGVjaWZpYyBwZXJmb3JtYW5jZSwgYWdhaW5zdCBhbnkgb3RoZXIgQ28tT3duZXIgb3IgdGhlIE9wZXJhdG9yIHRvIHByZXZlbnQgb3IgcmVtZWR5IHN1Y2ggRXZlbnQgb2YgRGVmYXVsdH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTI4Njk3MjMgLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMxIFxydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgQVJUSUNMRSBYSVZcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczFccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBcbGluZSB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzNTV9TEVOREVSIFBST1RFQ1RJT059e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzNTV9DQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzM1Nn17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNC4xXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgUmlnaHQgdG8gRW5jdW1iZXIgYW5kIEFzc2lnbn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzM1Nn0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNjY5ODU1IEFzIHByb3ZpZGVkIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgU2VjdGlvblx+MTcuMywgZWFjaCBDby1Pd25lciBtYXksIHVwb24gbm90aWNlIHRvIHRoZSBvdGhlciBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM5NjI3OTMgc317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgYnV0IHdpdGhvdXQgdGhlIG90aGVyIENvLU93bmVyc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM5NjI3OTMgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KIGNvbnNlbnQgb3IgYXBwcm92YWwsIG1vcnRnYWdlLCBjb2xsYXRlcmFsbHkgYXNzaWduLCBvciBvdGhlcndpc2UgZW5jdW1iZXIgYW5kIGdyYW50IGEgc2VjdXJpdHkgaW50ZXJlc3QgaW4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM5NzQyMzUgaXRzIHJpZ2h0cyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2OTcyMTg3IA0KdG8gYW55IHBhcnR5IHByb3ZpZGluZyBkZWJ0IG9yIGVxdWl0eSBmaW5hbmNpbmcgb3IgcmVmaW5hbmNpbmcgKGNvbGxlY3RpdmVseSwgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ2OTcyMTg3XGNoYXJyc2lkMTIxOTE3MzYgTGVuZGVyc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY5NzIxODcgXCc5NCkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxMzk3NDIzNSB1bmRlciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IHRoaXMgQWdyZWVtZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM5NzQyMzUgIGluIGFuZCB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IHRoZSBTaGFyZWQgUmVhbCBQDQpyb3BlcnR5LCB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgb3IgdGhlIGVsZWN0cmljYWwgYW5kL29yIHRyYW5zbWlzc2lvbiBjYXBhY2l0eSBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzOTYyNzkzICBpbiBhIFNoYXJlZCBBc3NldHMgR3JvdXAgaW4gd2hpY2ggaXQgaGFzIGFuIE93bmVyc2hpcCBJbnRlcmVzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAgKGNvbGxlY3RpdmVseSwgdGhlIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBTZWN1cml0eSBBc3NldHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFwnOTQpLCB3aGljaCBzYWlkIHNlY3VyaXR5IGludGVyZXN0cyBpbiBhbGwgb3IgYSBwYXJ0IG9mIHRoZSBTfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQzOTYyNzkzIGVjdXJpdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBBc3NldHMgYXJlIGNvbGxlY3RpdmVseSByZWZlcnJlZCB0byBoZXJlaW4gYXMgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IExlbmRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ0NzQ5Nzg5IHN9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IFxycXVvdGUgcyBMaWVuc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXCc5NC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzNTd9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTQuMlx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IENvLU93bmVyc1xycXVvdGUgIE9ibGlnYXRpb25zfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzU3fQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLiAgRWFjaCBDby1Pd25lciBhZ3JlZXMgdG8gY29uc2VudCBpbiB3cml0aW5nIHRvIGZpbmFuY2luZyBkb2N1bWVudHMgYXMgbWF5IHJlYXNvbmFibHkgYmUgcmVxdWlyZWQgYnkgTGVuZGVycy4gIEFzIGEgcHJlY29uZGl0aW9uIHRvIGV4ZXJjaXNpbmcgYW55IHJlbWVkaWVzIHJlbGF0ZWQgdG8gYW55IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyMzk0IEV2ZW50IG9mIERlZmF1bHR9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIGJ5IGEgQ28tT3duZXIgdW5kZXIgdGhpcyBBZ3JlZW1lbnQsIHRoZSBvdGhlciBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExNjk2MTcyIHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBzaGFsbCBnaXZlIHdyaXR0ZW4gbm90aWNlIG9mIGRlZmF1bHQgdG8gZWFjaCBMZW5kZXIgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzk3NDIzNSB0aGF0IGhhcyBnaXZlbiB3cml0dGVuIG5vdGljZSBvZiBpdHMgTGVuZGVyXHJxdW90ZSBzIExpZW4gYW5kIG5vdGljZSBhZGRyZXNzIHRvIHRoZSBDby1Pd25lcnMgYW5kIHRoZSBPcGVyYXRvciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IGF0IHRoZSBzYW1lDQogdGltZSBpdCBkZWxpdmVycyBub3RpY2Ugb2YgZGVmYXVsdCB0byB0aGUgQ28tT3duZXIsIHNwZWNpZnlpbmcgaW4gZGV0YWlsIHRoZSBhbGxlZ2VkIGV2ZW50IG9mIGRlZmF1bHQgYW5kIHRoZSByZXF1aXJlZCBjdXJlLiAgRWFjaCBMZW5kZXIgc2hhbGwgaGF2ZSB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTIzOTQgcmlnaHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDc3MDI1NSANCiwgYnV0IG5vdCB0aGUgb2JsaWdhdGlvbix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjM5NCAgdG8gY3VyZSBhbnkgRXZlbnQgb2YgRGVmYXVsdCBieSB0aGUgQ28tT3duZXIgdG8gd2hpY2ggaXQgaXMgYSBMZW5kZXIgYW5kIHNoYWxsIGhhdmUgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgc2FtZSBhbW91bnQgb2YgdGltZSB0byBjdXJlIHRoZSB9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NzcwMjU1IEV2ZW50IG9mIERlZmF1bHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBhcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjM5NCBzdWNofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgQ28tT3duZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTIzOTQgDQpwbHVzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyODY5NzIzIHRoaXJ0eSAoMzApfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTIzOTQgIGRheXMgaW4gdGhlIGNhc2Ugb2YgYSBtb25ldGFyeSBFdmVudCBvZiBEZWZhdWx0IGFuZCBwbHVzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyODY5NzIzIHNpeHR5ICg2MCl9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDEyMzk0ICBkYXlzIGluIHRoZSBjYXNlIG9mIGFsbCBvdGhlciBFdmVudHMgb2YgRGVmYXVsdCBieSBzdWNoIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI4Njk3MjMgOyBwcm92aWRlZCB0aGF0IGlmIHBvc3NlDQpzc2lvbiBvZiB0aGUgcHJvcGVydHkgaXMgbmVjZXNzYXJ5IGluIG9yZGVyIHRvIGN1cmUgYW4gRXZlbnQgb2YgRGVmYXVsdCwgdGhlIGN1cmUgcGVyaW9kIHNoYWxsIGJlIGV4dGVuZCBieSB1cCB0byBhbiBhZGRpdGlvbmFsIG9uZSBodW5kcmVkIGVpZ2h0eSAoMTgwKSBkYXlzIGluIG9yZGVyIHRvIGVuYWJsZSB0aGUgTGVuZGVyIHRvIGNvbmR1Y3QgZm9yZWNsb3N1cmUgcHJvY2VlZGluZ3N9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjlcY2hhcnJzaWQ5Mzg0NTYxIC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICAgVGhlIExlbmRlciBzaGFsbCBoYXZlIHRoZSByaWdodH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NzcwMjU1ICwgYnV0IG5vdCB0aGUgb2JsaWdhdGlvbix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KIHRvIHN1YnN0aXR1dGUgaXRzZWxmIGZvciB0aGUgQ28tT3duZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTIzOTQgdG8gd2hpY2ggaXQgaXMgdGhlIExlbmRlciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IGFuZCBwZXJmb3JtIHRoZSBkdXRpZXMgb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTIzOTQgc3VjaH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgQ28tT3duZXIgaGVyZXVuZGVyIGZvciBwdXJwb3NlcyBvZiBjdXJpbmcgc3VjaCBldmVudCBvZiBkZWZhdWx0LiAgRWFjaCBDby1Pd25lciBleHByZXNzbHkgY29uc2VudHMgdG8gc3VjaCBzdWJzdGl0dXRpb24sIGFncmVlcyB0byBhY2NlDQpwdCBzdWNoIHBlcmZvcm1hbmNlIGFuZCBhdXRob3JpemVzIHRoZSBMZW5kZXIgKG9yIGl0cyBlbXBsb3llZXMsIGFnZW50cywgcmVwcmVzZW50YXRpdmVzIG9yIGNvbnRyYWN0b3JzKSB0byBlbnRlciB1cG9uIHRoZSBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBhbmQgdGhlIFNoYXJlZCBGYWNpbGl0aWVzIHRvIGNvbXBsZXRlIHN1Y2ggcGVyZm9ybWFuY2Ugd2l0aCBhbGwgb2YgdGhlIHJpZ2h0cyBhbmQgcHJpdmlsZWdlcyBvZiB9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyMzk0IHN1Y2h9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBDby1Pd25lciBoZXJldW5kZXIufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzU4fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE0LjNcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBMZW5kZXIgT2JsaWdhdGlvbnN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzNTh9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBBbnkgTGVuZGVyIHRoYXQgZG9lcyBub3QgZGlyZWN0bHkgaG9sZCBhbiBpbnRlcmVzdCB1bmRlciB0aGlzIEFncmVlbWVudCwgb3Igd2hvc2UgaW50ZXJlc3QgaXMgaGVsZCBzb2xlbHkgZm9yIHNlY3VyaXR5IHB1cnBvc2VzLCBzaGFsbCBoYXZlIG5vIG9ibGlnYXRpb24gb3IgbGlhYmlsaXR5IHRvIGFueSBvdGhlciBDby1Pd25lciBmb3IgcGVyZm9ybWFuY2Ugb2YgYSBDby1Pd25lclxycXVvdGUgcyBvYmxpDQpnYXRpb25zIHVuZGVyIHRoaXMgQWdyZWVtZW50IHByaW9yIHRvIHRoZSB0aW1lIHRoZSBMZW5kZXIgZGlyZWN0bHkgaG9sZHMgYW4gaW50ZXJlc3QgaW4gdGhpcyBBZ3JlZW1lbnQsIG9yIHN1Y2NlZWRzIHRvIHRpdGxlIHRvIGEgQ28tT3duZXJccnF1b3RlIA0KcyBpbnRlcmVzdC4gIEEgTGVuZGVyIHNoYWxsIGJlIGxpYWJsZSB0byBwZXJmb3JtIG9ibGlnYXRpb25zIG9mIGEgQ28tT3duZXIgdG8gYW5vdGhlciBDby1Pd25lciB1bmRlciB0aGlzIEFncmVlbWVudCBvbmx5IGZvciBhbmQgZHVyaW5nIHRoZSBwZXJpb2QgaXQgZGlyZWN0bHkgaG9sZHMgc3VjaCBpbnRlcmVzdC4gIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyMzk0IElufXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB0aGUgZXZlbnQgdGhhdCBhIExlbmRlciBlbGVjdHMgdG8gKGkpXH5wZXJmb3JtIGEgQ28tT3duZXJccnF1b3RlIHMgb2JsaWdhdGlvbnMgdW5kZXIgdGhpcyBBZ3JlZW1lbnQsIChpaSlcfmNvbnRpbnVlIG9wZXJhdGlvbiBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMsIChpaWkpXH5hY3F1aXJlIGFueSBwb3J0aW9uIG9mIGEgQ28tT3duZXJccnF1b3RlIHMgcmlnaA0KdCwgdGl0bGUgb3IgaW50ZXJlc3QgaW4gYWxsIG9yIGFueSBvZiB0aGUgU317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExNjk2MTcyIGVjdXJpdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBBc3NldHMgb3IgKGl2KVx+ZW50ZXIgaW50byBhIG5ldyBqb2ludCBvd25lcnNoaXAgYWdyZWVtZW50IGFzIHByb3ZpZGVkIGluIFNlY3Rpb25cfg0KMTQuNiwgdGhlbiBzdWNoIExlbmRlciBzaGFsbCBub3QgaGF2ZSBhbnkgcGVyc29uYWwgbGlhYmlsaXR5IHRvIGEgQ28tT3duZXIgaW4gY29ubmVjdGlvbiB0aGVyZXdpdGgsIGFuZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjM5NCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBzb2xlIHJlY291cnNlIGluDQogdGhlIGV2ZW50IG9mIGRlZmF1bHQgYnkgc3VjaCBMZW5kZXIgc2hhbGwgYmUgdG8gZXhlY3V0ZSBhZ2FpbnN0IHN1Y2ggTGVuZGVyXHJxdW90ZSBzIGludGVyZXN0IGluIHRoZSBTfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTE2OTYxNzIgZWN1cml0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgICBBc3NldHMuICBNb3Jlb3ZlciwgYW55IExlbmRlciB3aG8gYWNxdWlyZXMgdGhlIFMNCn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExNjk2MTcyIGVjdXJpdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KIEFzc2V0cyBwdXJzdWFudCB0byBmb3JlY2xvc3VyZSBvciBhbiBhc3NpZ25tZW50IGluIGxpZXUgb2YgZm9yZWNsb3N1cmUgc2hhbGwgbm90IGJlIGxpYWJsZSB0byBwZXJmb3JtIGFueSBvYmxpZ2F0aW9ucyB1bmRlciB0aGUgQWdyZWVtZW50IHRvIHRoZSBleHRlbnQgdGhlIHNhbWUgYXJlIGluY3VycmVkIG9yIGFjY3J1ZSBhZnRlciBzdWNoIExlbmRlciBubyBsb25nZXIgaGFzIG93bmVyc2hpcCBvZiB0aGUgU317XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTE2OTYxNzIgZWN1cml0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIEFzc2V0cy59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzNTl9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTQuNFx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IExlbmRlclxycXVvdGUgcyBSaWdodCB0byBQb3NzZXNzaW9uLCBSaWdodCB0byBBY3F1aXJlIGFuZCBSaWdodCB0byBBc3NpZ259e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzNTl9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBBIExlbmRlciBzaGFsbCBoYXZlIHRoZSBhYnNvbHV0ZSByaWdodDogKGkpXH50byBhc3NpZ24gaXRzIExlbmRlclxycXVvdGUgcyBMaWVuOyAoaWkpXH50byBlbmZvcmNlIGl0cyBMZW5kZXJccnF1b3RlIHMgTGllbiBhbmQgYWNxdWlyZSB0aXRsZSB0byBhbGwgb3IgYW55IHBvcnRpb24gb2YgdGhlIFN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTY5NjE3MiBlY3VyaXR5fXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBBc3NldHMgYnkgYW55IGxhd2Z1bCBtZWFuczsgKGlpaSlcfnRvIHRha2UgcG9zc2Vzc2lvbiBvZiBhbmQgb3BlcmF0ZSBhbGwgb3IgYW55IHBvcnRpb24gb2YgdGhlIFN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTY5NjE3MiBlY3VyaXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCiBBc3NldHMgYW5kIHRvIHBlcmZvcm0gYWxsIG9ibGlnYXRpb25zIHRvIGJlIHBlcmZvcm1lZCBieSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NzcxMDYxIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IENvLU93bmVyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU3NzEwNjEgdG8gd2hpY2ggaXQgaXMgdGhlIExlbmRlcn17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAsIG9yIHRvIGNhdXNlIGEgcmVjZWl2ZXIgdG8gYmUgYXBwb2ludGVkIHRvIGRvIHNvOyBhbmQgKGl2KVx+dG8gYWNxdWlyZSBhbGwgb3IgYW55IHBvcnRpb24gb2YgdGhlIFN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTY5NjE3MiBlY3VyaXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCiBBc3NldHMgYnkgZm9yZWNsb3N1cmUgb3IgYnkgYW4gYXNzaWdubWVudCBpbiBsaWV1IG9mIGZvcmVjbG9zdXJlIGFuZCB0aGVyZWFmdGVyIHdpdGhvdXQgQ28tT3duZXJzXHJxdW90ZSAgY29uc2VudCB0byBhc3NpZ24gb3IgdHJhbnNmZXIgYWxsIG9yIGFueSBwb3J0aW9uIG9mIHRoZSBTfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQxMDk4OTAgZWN1cml0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAgQXNzZXRzIHRvIGEgdGhpcmQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQxMDk4OTAgcGFydHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IC4gIE5vIENvLX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU3NzEwNjEgT3duZXJzXHJxdW90ZSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCmNvbnNlbnQgc2hhbGwgYmUgcmVxdWlyZWQgZm9yIGFueSBvZiB0aGUgZm9yZWdvaW5nLCBhbmQgdXBvbiBhY3F1aXNpdGlvbiBvZiB0aGUgaW50ZXJlc3RzIG9mIGFsbCBvciBhbnkgcG9ydGlvbiBvZiB0aGUgU317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MTA5ODkwIGVjdXJpdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KIEFzc2V0cyBieSBhIExlbmRlciBvciBhbnkgb3RoZXIgdGhpcmQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQxMDk4OTAgcGFydHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB3aG8gYWNxdWlyZXMgdGhlIHNhbWUgZnJvbSBvciBvbiBiZWhhbGYgb2YgdGhlIExlbmRlciwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTc3MTA2MSB0aGUgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTc3MTA2MSBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgc2hhbGwgcmVjb2duaXplIHRoZSBMZW5kZXIgb3Igc3VjaCBvdGhlciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDEwOTg5MCBwYXJ0eX17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgKGFzIHRoZSBjYXNlIG1heSBiZSkgYXMgdGhlIG90aGVyIENvLU93bmVyXHJxdW90ZSBzIHByb3BlciBzdWNjZXNzb3IsIGFuZCB0aGlzIEFncmVlbWVudCBzaGFsbCByZW1haW4gaW4gZnVsbCBmb3JjZSBhbmQgZWZmZWN0Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzM2MH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNC41XHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgT3Bwb3J0dW5pdHkgdG8gQ3VyZX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzM2MH0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIEZvbGxvd2luZyBhY3F1aXNpdGlvbiBvZiBhbGwgb3IgYSBwb3J0aW9uIG9mIHRoZSBTfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQxMDk4OTAgZWN1cml0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIEFzc2V0cyBieSB0aGUgTGVuZGVyIGFzIGEgcmVzdWx0IG9mIGVpdGhlciBmb3JlY2xvc3VyZQ0KIG9yIGFjY2VwdGFuY2Ugb2YgYW4gYXNzaWdubWVudCBpbiBsaWV1IG9mIGZvcmVjbG9zdXJlLCBvciBieSBhIHB1cmNoYXNlciBhdCBhIGZvcmVjbG9zdXJlIHNhbGUsIHRoaXMgQWdyZWVtZW50IHNoYWxsIGNvbnRpbnVlIGluIGZ1bGwgZm9yY2UgYW5kIGVmZmVjdCBhbmQgdGhlIExlbmRlciBvciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDEwOTg5MCBwYXJ0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAgYWNxdWlyaW5nIHRpdGxlIHRvIHRoZSBTfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQxMDk4OTAgZWN1cml0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIEFzc2V0cyBzaGFsbCwgYXMgcHJvbXB0bHkgYXMgcmVhc29uYWJseSBwb3NzaWJsZQ0KLCBjb21tZW5jZSB0aGUgY3VyZSBvZiBhbGwgZGVmYXVsdHMgdW5kZXIgdGhpcyBBZ3JlZW1lbnQgYW5kIHRoZXJlYWZ0ZXIgZGlsaWdlbnRseSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NzcxMDYxIHB1cnN1ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IHN1Y2ggY3VyZSB0byBjb21wbGV0aW9uOyBwcm92aWRlZCwgaG93ZXZlciwgdGhhdCB0aGUgTGVuZGVyIG9yIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQxMDk4OTAgcGFydHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBhY3F1aXJpbmcgdGl0bGUgdG8gdGhlIFN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDEwOTg5MCBlY3VyaXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCiBBc3NldHMgc2hhbGwgbm90IGJlIHJlcXVpcmVkIHRvIGN1cmUgdGhvc2UgZGVmYXVsdHMgd2hpY2ggYXJlIG5vdCBzdXNjZXB0aWJsZSBvZiBiZWluZyBjdXJlZCBvciBwZXJmb3JtZWQgYnkgc3VjaCBDby1Pd25lciAoXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IE5vbi1DdXJhYmxlIERlZmF1bHRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcJzk0DQopLiAgTm9uLUN1cmFibGUgRGVmYXVsdHMgc2hhbGwgYmUgZGVlbWVkIHdhaXZlZCBieSBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExODkzNzkwIHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB1cG9uIGNvbXBsZXRpb24gb2YgZm9yZWNsb3N1cmUgcHJvY2VlZGluZ3Mgb3IgYWNxdWlzaXRpb24gb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxMTg5Mzc5MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgQ28tT3duZXJccnF1b3RlIHMgaW50ZXJlc3QgaW4gdGhlIFNoYXJlZCBBc3NldHMgYnkgc3VjaCBDbw0KLU93bmVyLiAgSWYgYSBMZW5kZXIgaXMgcHJvaGliaXRlZCBieSBhbnkgcHJvY2VzcyBvciBpbmp1bmN0aW9uIGlzc3VlZCBieSBhbnkgY291cnQgb3IgYnkgcmVhc29uIG9mIGFueSBhY3Rpb24gb2YgYW55IGNvdXJ0IGhhdmluZyBqdXJpc2RpY3Rpb24gb3ZlciBhbnkgYmFua3J1cHRjeSBvciBpbnNvbHZlbmN5IHByb2NlZWRpbmcgaW52b2x2aW5nIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTE4OTM3OTBcY2hhcnJzaWQxMTg5Mzc5MCBhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjlcY2hhcnJzaWQxMTg5Mzc5MCBvdGhlciBDby1Pd25lciBmcm9tIGNvbW1lbmNpbmcgb3IgcHJvc2VjdXRpbmcgdGhlIGFwcHJvDQpwcmlhdGUganVkaWNpYWwgb3Igbm9uLWp1ZGljaWFsIHByb2NlZWRpbmdzLCB0aGVuIGFueSBjdXJlIHBlcmlvZCBmb3IgY29tbWVuY2luZyBzdWNoIHByb2NlZWRpbmdzIHNoYWxsIGJlIGV4dGVuZGVkIGZvciB0aGUgcGVyaW9kIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgc3VjaCBwcm9oaWJpdGlvbi59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzNjF9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTQuNlx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IE5ldyBBZ3JlZW1lbnR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzNjF9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBJbiB0aGUgZXZlbnQgdGhhdCB0aGlzIEFncmVlbWVudCBpcyByZWplY3RlZCBvciBkaXNhZmZpcm1lZCBwdXJzdWFudCB0byBiYW5rcnVwdGN5IGxhdyBvciBhbnkgb3RoZXIgbGF3IGFmZmVjdGluZyBjcmVkaXRvcnNccnF1b3RlIA0KIHJpZ2h0cywgdGhlbiwgc28gbG9uZyBhcyBhIExlbmRlciBoYXMgY3VyZWQgYW55IHN1Y2ggbW9uZXRhcnkgZXZlbnQgb2YgZGVmYXVsdCBhbmQgaXMgbWFraW5nIGNvbW1lcmNpYWxseSByZWFzb25hYmxlIGVmZm9ydHMgdG8gY3VyZSBhbnkgc3VjaCBub24tbW9uZXRhcnkgZXZlbnQgb2YgZGVmYXVsdCBhcyBwcm92aWRlZCBoZXJlaW4sIHRoZSBub24tZGVmYXVsdGluZyBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQxMDk4OTAgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHNoYWxsLCBpbW1lZGlhdGVseSB1cG9uIHdyaXR0ZW4gcmVxdWVzdCBmcm9tIHN1Y2ggTGVuZGVyIHJlY2VpdmVkIHdpdGhpbiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NzcxMDYxIHNpeHR5ICg2MCl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KIGRheXMgYWZ0ZXIgYW55IHN1Y2ggZXZlbnQsIHdpdGhvdXQgZGVtYW5kaW5nIGFkZGl0aW9uYWwgY29uc2lkZXJhdGlvbiB0aGVyZWZvciwgZW50ZXIgaW50byBhIG5ldyBzaGFyZWQgZmFjaWxpdGllcyBhZ3JlZW1lbnQgd2l0aCBzdWNoIExlbmRlciwgd2hpY2ggbmV3IHNoYXJlZCBmYWNpbGl0aWVzIGFncmVlbWVudCBzaGFsbCAoaSlcfg0KY29udGFpbiB0aGUgc2FtZSBjb3ZlbmFudHMsIGFncmVlbWVudHMsIHRlcm1zLCBwcm92aXNpb25zIGFuZCBsaW1pdGF0aW9ucyBhcyB0aGlzIEFncmVlbWVudCAoZXhjZXB0IGZvciBhbnkgcmVxdWlyZW1lbnRzIHRoYXQgaGF2ZSBiZWVuIGZ1bGZpbGxlZCBieSB0aGUgQ28tT3duZXJzIHByaW9yIHRvIHN1Y2ggdGVybWluYXRpb24sIGZvcmVjbG9zdXJlLCByZWplY3Rpb24gb3IgZGlzYWZmaXJtYW5jZSksIGFuZCAoaWkpXH4NCmJlIGZvciBhIHRlcm0gY29tbWVuY2luZyBvbiB0aGUgZGF0ZSBvZiBzdWNoIHRlcm1pbmF0aW9uLCBmb3JlY2xvc3VyZSwgcmVqZWN0aW9uIG9yIGRpc2FmZmlybWFuY2UgYW5kIGNvbnRpbnVpbmcgZm9yIHRoZSByZW1haW5pbmcgdGVybSBvZiB0aGlzIEFncmVlbWVudCBiZWZvcmUgZ2l2aW5nIGVmZmVjdCB0byBzdWNoIHRlcm1pbmF0aW9uLCBmb3JlY2xvc3VyZSwgcmVqZWN0aW9uIG9yIGRpc2FmZmlybWFuY2UuICBBdCB0aGUgb3B0aQ0Kb24gb2YgdGhlIExlbmRlciwgdGhlIG5ldyBzaGFyZWQgZmFjaWxpdGllcyBhZ3JlZW1lbnQgbWF5IGJlIGV4ZWN1dGVkIGJ5IGEgZGVzaWduZWUgb2Ygc3VjaCBMZW5kZXIsIHdpdGggdGhlIExlbmRlciBhc3N1bWluZyB0aGUgYnVyZGVucyBhbmQgb2JsaWdhdGlvbnMgb2YgdGhlIGRlZmF1bHRpbmcgQ28tT3duZXIgaGVyZXVuZGVyLiAgSWYgbW9yZSB0aGFuIG9uZSBMZW5kZXIgbWFrZXMgYSB3cml0dGVuIHJlcXVlc3QgZm9yIGEgbmV3IHNoYXJlDQpkIGZhY2lsaXRpZXMgYWdyZWVtZW50IHB1cnN1YW50IGhlcmV0bywgdGhlbiB0aGUgc2FtZSBzaGFsbCBiZSBkZWxpdmVyZWQgdG8gdGhlIExlbmRlciB3aG9zZSBsaWVuIGlzIHNlbmlvciBpbiBwcmlvcml0eS59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzNjJ9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTQuN1x0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IExlbmRlciBDb25zZW50fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzYyfQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLiAgTm90d2l0aHN0YW5kaW5nIGFueSBwcm92aXNpb24gb2YgdGhpcyBBZ3JlZW1lbnQgdG8gdGhlIGNvbnRyYXJ5LCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NzcxMDYxIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTc3MTA2MSBzfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBzaGFsbCBub3QgYWNjZXB0IGEgdGVybWluYXRpb24gb2YgdGhpcyBBZ3JlZW1lbnQgd2l0aG91dCB0aGUgcHJpb3Igd3JpdHRlbiBjb25zZW50IG9mIGVhY2ggTGVuZGVyLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzM2M317XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNC44XHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgRXN0b3BwZWwgQ2VydGlmaWNhdGVzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzYzfQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTc3MTA2MSBFYWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQpDby1Pd25lciBzaGFsbCBleGVjdXRlIGVzdG9wcGVsIGNlcnRpZmljYXRlcyBjZXJ0aWZ5aW5nIGFzIHRvIHRydXRoZnVsIG1hdHRlcnMsIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhhdCBubyBkZWZhdWx0IHRoZW4gZXhpc3RzIHVuZGVyIHRoaXMgQWdyZWVtZW50LCBpZiBzdWNoIGJlIHRoZSBjYXNlOyBjb25zZW50cyB0byBhc3NpZ25tZW50OyBhbmQgbm9uLWRpc3R1cmJhbmNlIGFncmVlbWVudHMgYXMgfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NzcxMDYxIGFub3RoZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBDby1Pd25lciBvDQpyIGFueSBMZW5kZXIgbWF5IHJlYXNvbmFibHkgcmVxdWVzdCBmcm9tIHRpbWUgdG8gdGltZS4gIFRoZSBDby1Pd25lcnMgc2hhbGwgY29vcGVyYXRlIGluIGFtZW5kaW5nIHRoaXMgQWdyZWVtZW50IGZyb20gdGltZSB0byB0aW1lIHRvIGluY2x1ZGUgYW55IHByb3Zpc2lvbiB0aGF0IG1heSBiZSByZWFzb25hYmx5IHJlcXVlc3RlZCBieSBhIExlbmRlciB0byBwcmVzZXJ2ZSBhIExlbmRlclxycXVvdGUgcyBMaWVuLn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczEgXHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCBBUlRJQ0xFIFhWXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhcg0KXHMxXHFjIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgXGxpbmUge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzY0fUlOREVNTklGSUNBVElPTn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzM2NH0NClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzY1fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE1LjFcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBDby1Pd25lciBJbmRlbW5pZmljYXRpb259e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzNjV9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjY2NTQzMSBPcGVyYXRvciBhbmQgZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgYWNoIENvLU93bmVyIChcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgSW5kZW1uaXRvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQpcJzk0KSBhZ3JlZXMgdG8gaW5kZW1uaWZ5LCBkZWZlbmQgYW5kIGhvbGQgaGFybWxlc3MgdGhlIG90aGVyIENvLU93bmVycyBhbmQgc3VjaCBvdGhlciBDby1Pd25lcnNccnF1b3RlICBBZmZpbGlhdGVzLCBlcXVpdHkgb3duZXJzLCBBZmZpbGlhdGVzIG9mIGl0cyBlcXVpdHkgb3duZXJzIGFuZCBlYWNoIG9mIHRoZWlyIHJlc3BlY3RpdmUgb2ZmaWNlcnMsIGRpcmVjDQp0b3JzLCBzdG9ja2hvbGRlcnMsIGVtcGxveWVlcywgYWdlbnRzLCBzdWNjZXNzb3JzIGFuZCBhc3NpZ25zIChjb2xsZWN0aXZlbHksIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBJbmRlbW5pdGVlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXCc5NA0KKSBmcm9tIGFuZCBhZ2FpbnN0IGFueSBhbmQgYWxsIGxvc3NlcywgZGFtYWdlcywgZXhwZW5zZXMsIGluanVyaWVzLCBsaWFiaWxpdGllcywgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM1ODkyMDAganVkZ21lbnRzLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IGNsYWltcywgZGVtYW5kc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzNTg5MjAwIA0KLCB0YXhlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIG9yIHBlbmFsdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzNTg5MjAwICwgaW5jbHVkaW5nIGJ1dCBub3QgbGltaXRlZCB0byBhdHRvcm5leXNccnF1b3RlICBmZWVzIGFuZCBjb3VydCBjb3N0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDEyNjY1NDMxXGNoYXJyc2lkMTI2NjU0MzEgKFwnOTNMb3NzZXNcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI2NjU0MzEgKSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0Kc3VzdGFpbmVkIG9yIGluY3VycmVkIGJ5IEluZGVtbml0ZWVzIHRvIHRoZSBleHRlbnQgY2F1c2VkIGJ5IHRoZSBuZWdsaWdlbmNlIG9yIHdpbGxmdWwgbWlzY29uZHVjdCBvZiBJbmRlbW5pdG9yLCBpdHMgYWdlbnRzIG9yIGNvbnRyYWN0b3JzLCBvciBjYXVzZWQgYnkgSW5kZW1uaXRvclxycXVvdGUgcyBicmVhY2ggb2YgYW55IG9mIGl0cyBvYmxpZ2F0aW9ucyB1bmRlciB0aGlzIEFncmVlbWVudCwgDQppbmNsdWRpbmcgYnV0IG5vdCBsaW1pdGVkIHRvIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzNTg5MjAwIExvc3Nlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzNTg5MjAwIGluY3VycmVkIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQpieSByZWFzb24gb2YgcGh5c2ljYWwgZGFtYWdlIHRvIHRoZSBwcm9wZXJ0eSBvZiB0aGlyZCBwYXJ0aWVzIG9yIGJvZGlseSBpbmp1cnksIGluY2x1ZGluZyBkZWF0aCwgb2YgdGhpcmQgcGVyc29uc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDYxODYxNjEgLiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBJbiB0aGUgZXZlbnQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ2MTg2MTYxIGEgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM1ODkyMDAgTG9zc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIGlzIGNhdXNlZCBieSB0aGUgam9pbnQgb3IgY29uY3VycmVudCBuZWdsaWdlbmNlIG9mIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDYxODYxNjEgb25lIG9yIG1vcmUgb2YgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IHRoZSBDby1Pd25lcnMsIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzU4OTIwMCBMfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBvc3Mgc2hhbGwgYmUgYm9ybmUgYnkgZWFjaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MTg2MTYxIHN1Y2ggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IENvLU93bmVyIGluIHByb3BvcnRpb24gdG8gaXRzIGRlZ3JlZSBvZiBuZWdsaWdlbmNlLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzM2Nn17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNS4yXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgQ3Jvc3MtSW5kZW1uaXR5fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzY2fQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLiAgVGhlIENvLU93bmVycyBpbnRlbmQgdGhhdCB0aGUgb2JsaWdhdGlvbnMgc2V0IGZvcnRoIGluIFNlY3Rpb25cfjE1LjEgaW5jbHVkZSB0aGUgZHV0eSBvZiBhIENvLU93bmVyIChcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgQ3Jvc3MtSW5kZW1uaXRvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXCc5NA0KKSwgaW4gdGhlIGV2ZW50IGFub3RoZXIgQ28tT3duZXIgb3IgQ28tT3duZXJzIChcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgQ3Jvc3MtSW5kZW1uaXRlZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXCc5NCkgc3VzdGFpbnMgb3IgaW5jdXJzIGFueSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzU4OTIwMCBMfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IG9zcyBhcyB0aGUgcmVzdWx0IG9mIHRoZSBqb2ludCBhbmQgc2V2ZXJhbCBsaWFiaWxpdHkgb2YgQ3Jvc3MtSW5kZW1uaXRvciBhbmQgQ3Jvc3MtSW5kZW1uaXRlZSB0byBhIHRoaXJkIHBhcnR5LCBzdWNoIHRoYXQgdGhlIENyb3NzLUluZGVtbml0ZWUgc2hhbGwgYmUgZW50aXRsZWQgdG8gcmVjb3ZlciBmcm9tIHRoZSBDcm9zcy1JbmRlbW5pdG9yIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjE4NjE2MSB0aGUgQ3Jvc3MtSW5kZW1uaXRvclxycXVvdGUgcyBzaGFyZSBvZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IGFueSBhbmQgYWxsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzNTg5MjAwIEx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0Kb3NzZXMgc3VzdGFpbmVkIG9yIGluY3VycmVkIGJ5IENyb3NzLUluZGVtbml0ZWUuIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMxIFxydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgQVJUSUNMRSBYVklcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczFccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBcbGluZSB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzNjd9V0FJVkVSIE9GIFJJR0hUUyBUTyBQQVJUSVRJT059e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzNjd9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxN1xxaiBcZmk3NDFcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBFYWNoIENvLU93bmVyIGhlcmVieSB3YWl2ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDYxODYxNjEgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIGFueSByaWdodHMgaXQgbWF5IGhhdmUgdG8gcGFydGl0aW9uIHRoZSBTaGFyZWQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjE4NjE2MSANCkZhY2lsaXRpZXMsIHRoZSBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBvciBhbnkgY29tcG9uZW50IHRoZXJlb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KIG9yIGFueSBjb21wb25lbnQgdGhlcmVvZiBkdXJpbmcgdGhlIHRlcm0gb2YgdGhpcyBBZ3JlZW1lbnQsIHdoZXRoZXIgYnkgcGFydGl0aW9uIGluIGtpbmQgb3IgYnkgc2FsZSBhbmQgZGl2aXNpb24gb2YgdGhlIHByb2NlZWRzLCBhbmQgZWFjaCBDby1Pd25lciBmdXJ0aGVyIGFncmVlcyB0aGF0IGl0IHdpbGwgbm90IHJlc29ydCB0byBhbnkgYWN0aW9uIGF0IGxhdyBvciBpbiBlcXVpdHkgdG8gcGFydGl0aW9uIHRoZSBTaA0KYXJlZCBGYWNpbGl0aWVzLCB0aGUgU2hhcmVkIFJlYWwgUHJvcGVydHkgb3IgYW55IGNvbXBvbmVudCB0aGVyZW9mLCBhbmQgaXQgd2FpdmVzIHRoZSBiZW5lZml0cyBvZiBsYXdzIHRoYXQgbWF5IG5vdyBvciBoZXJlYWZ0ZXIgYXV0aG9yaXplIHN1Y2ggcGFydGl0aW9uIGZvciB0aGUgdGVybSBvZiB0aGlzIEFncmVlbWVudC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMSBccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIEFSVElDTEUgWFZJSVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzMVxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IFxsaW5lIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzM2OH1NSVNDRUxMQU5FT1VTIFBST1ZJU0lPTlN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzNjh9DQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzM2OX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNy4xXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgQ292ZW5hbnRzIFJ1biB3aXRoIHRoZSBMYW5kfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzY5fQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLiAgVGhlIENvLU93bmVycw0KIGhlcmVieSBhZ3JlZSB0aGF0IGFsbCBvZiB0aGUgY292ZW5hbnRzLCBjb25zZW50cyBhbmQgYWdyZWVtZW50cyBjb250YWluZWQgaW4gdGhpcyBBZ3JlZW1lbnQgdG91Y2ggYW5kIGNvbmNlcm4gdGhlIHJlYWwgZXN0YXRlIGRlc2NyaWJlZCBpbiB0aGlzIEFncmVlbWVudCBhbmQgYXJlIGV4cHJlc3NseSBpbnRlbmRlZCB0bywgYW5kIHNoYWxsLCBiZSBjb3ZlbmFudHMgcnVubmluZyB3aXRoIHRoZSBsYW5kIGFuZCBzaGFsbCBiZSBiaW5kaW5nIGFuDQpkIGEgYnVyZGVuIHVwb24gc2FpZCByZWFsIGVzdGF0ZSBhbmQgZWFjaCBDby1Pd25lclxycXVvdGUgDQpzIHByZXNlbnQgb3IgZnV0dXJlIGVzdGF0ZSBvciBpbnRlcmVzdCB0aGVyZWluIGFuZCB1cG9uIGVhY2ggb2YgdGhlIENvLU93bmVycywgdGhlaXIgcmVzcGVjdGl2ZSBzdWNjZXNzb3JzIGFuZCBhc3NpZ25zIGFzIGhvbGRlcnMgb2YgYW4gZXN0YXRlIG9yIGludGVyZXN0IGluIHNhaWQgcmVhbCBlc3RhdGUgKGluY2x1ZGluZyBhbnkgbGVuZGVyIG9yIG90aGVyIA0KcGVyc29uIGFjcXVpcmluZyB0aXRsZSBmcm9tIGFueSBzdWNoIHBlcnNvbiB1cG9uIGZvcmVjbG9zdXJlIG9yIGJ5IGRlZWQgaW4gbGlldSBvZiBmb3JlY2xvc3VyZSksIGFuZCBzaGFsbCBiZW5lZml0IHRoZSBDby1Pd25lcnMgYW5kIHRoZWlyIHJlc3BlY3RpdmUgc3VjY2Vzc29ycyBhbmQgYXNzaWducyBhbmQgdGhlIHJlYWwgZXN0YXRlIGFuZCBhbnkgcHJlc2VudCBvciBmdXR1cmUgaG9sZGVyIG9mIGFuIGVzdGF0ZSBvciBpbnRlcmVzdCB0aGVyDQplDQppbiBhbmQgYW55IG90aGVyIGZlZSBhbmQgbGVhc2Vob2xkIGVzdGF0ZXMgYWNxdWlyZWQgYnkgYW55IENvLU93bmVyLCBpdHMgc3VjY2Vzc29ycyBhbmQgYXNzaWducyBmb3IgaXRzIHJlc3BlY3RpdmUgRmFjaWxpdHkuICBUbyB0aGUgZXh0ZW50IGFueSBvZiB0aGUgcHJvdmlzaW9ucyBvZiB0aGlzIEFncmVlbWVudCBhcmUgbm90IGVuZm9yY2VhYmxlIGFzIGNvdmVuYW50cyBydW5uaW5nIHdpdGggdGhlIGxhbmQsIHRoZXkgc2hhbGwgYmUgZW5mb3INCmNlYWJsZSBhcyBlcXVpdGFibGUgc2Vydml0dWRlcy59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzNzB9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTcuMlx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IEZvcmNlIE1hamV1cmV9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzNzB9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBJZiBhIENvLU93bmVyIGlzIGRlbGF5ZWQgb3IgcmVuZGVyZWQgd2hvbGx5IG9yIHBhcnRpYWxseSB1bmFibGUgdG8gcGVyZm9ybSBpdHMgb2JsaWdhdGlvbnMgaGVyZXVuZGVyIGR1ZSB0byBhbiBldmVudCBvZiBGb3JjZSBNYWpldXJlLCB0aGF0IENvLU93bmVyICh0aGUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IENsYWltaW5nIFBhcnR5fXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFwnOTQpIHdpbGwgYmUgZXhjdXNlZCBmcm9tIHdoYXRldmVyIHBlcmZvcm1hbmNlIGlzIGFmZmVjdGVkIGJ5IHRoZSBldmVudCBvZiBGb3JjZSBNYWpldXJlIHRvIHRoZSBleHRlbnQgc28gYWZmZWN0ZWQsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDU5MTgzMjkgcHJvdmlkZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ1OTE4MzI5IGhvd2V2ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICwgdGhhdDogKGkpXH4NCnRoZSBDbGFpbWluZyBQYXJ0eSBzaGFsbCBnaXZlIHRoZSBvdGhlciBDby1Pd25lcnMgbm90aWNlIGRlc2NyaWJpbmcgdGhlIHBhcnRpY3VsYXJzIG9mIHRoZSBvY2N1cnJlbmNlIHByb21wdGx5IGFmdGVyIHRoZSBvY2N1cnJlbmNlIG9mIHRoZSBGb3JjZSBNYWpldXJlDQosIGFuZCwgaW4gbm8gZXZlbnQgbW9yZSB0aGFuIHRocmVlICgzKSBkYXlzIGFmdGVyIHRoZSBDbGFpbWluZyBQYXJ0eSBiZWNvbWVzIGF3YXJlIG9mIHN1Y2ggb2NjdXJyZW5jZTsgKGlpKVx+DQp3aXRoaW4gZml2ZSAoNSkgZGF5cyBhZnRlciBnaXZpbmcgdGhlIG5vdGljZSBkZXNjcmliZWQgaW4gY2xhdXNlIChpKSBhYm92ZSwgdGhlIENsYWltaW5nIFBhcnR5IHNoYWxsIGdpdmUgdGhlIG90aGVyIENvLU93bmVycyBpdHMgYmVzdCBlc3RpbWF0ZSBvZiB0aGUgZXhwZWN0ZWQgZHVyYXRpb24gb2YgdGhlIGV2ZW50IGFuZCBwcm9iYWJsZSBpbXBhY3Qgb24gdGhlIHBlcmZvcm1hbmNlIG9mIHRoZSBDbGFpbWluZyBQYXJ0eVxycXVvdGUgDQpzIG9ibGlnYXRpb25zIGhlcmV1bmRlciwgYW5kIHNoYWxsIGNvbnRpbnVlIHRvIGZ1cm5pc2ggdGltZWx5IHJlZ3VsYXIgcmVwb3J0cyB3aXRoIHJlc3BlY3QgdGhlcmV0byBkdXJpbmcgdGhlIGNvbnRpbnVhdGlvbiBvZiB0aGUgRm9yY2UgTWFqZXVyZTsgKGlpaSlcfnRoZSBzdXNwZW4NCnNpb24gb2YgcGVyZm9ybWFuY2Ugc2hhbGwgYmUgb2Ygbm8gZ3JlYXRlciBzY29wZSBhbmQgb2Ygbm8gbG9uZ2VyIGR1cmF0aW9uIHRoYW4gaXMgcmVhc29uYWJseSByZXF1aXJlZCBieSB0aGUgRm9yY2UgTWFqZXVyZTsgKGl2KVx+DQpubyBkZWZhdWx0IG9mIGEgQ28tT3duZXIgd2hpY2ggYXJvc2UgYmVmb3JlIHRoZSBvY2N1cnJlbmNlIG9mIHRoZSBGb3JjZSBNYWpldXJlIGV2ZW50IGNhdXNpbmcgdGhlIHN1c3BlbnNpb24gb2YgcGVyZm9ybWFuY2Ugc2gNCmFsbCBiZSBleGN1c2VkIGFzIGEgcmVzdWx0IG9mIHRoZSBvY2N1cnJlbmNlLCBidXQgc28gbG9uZyBhcyB0aGUgQ2xhaW1pbmcgUGFydHkgc2hhbGwgaGF2ZSBjb21tZW5jZWQgYW5kIGlzIGRpbGlnZW50bHkgY29udGludWluZyB0byBhdHRlbXB0IHRvIGN1cmUgc3VjaCBkZWZhdWx0IHByaW9yIHRvIHRoZSBvY2N1cnJlbmNlIG9mIHRoZSBGb3JjZSBNYWpldXJlLCB0aGUgY3VyZSBwZXJpb2QgKGlmIGFueSkgd2l0aCByZXNwZWN0IHRvIHN1Y2ggZA0KZWZhdWx0IHNoYWxsIGJlIGV4dGVuZGVkIG9uIGEgZGF5LWZvci1kYXkgYmFzaXMgdG8gdGhlIGV4dGVudCBhIGN1cmUgaXMgcHJldmVudGVkIGFzIGEgZGlyZWN0IHJlc3VsdCBvZiB0aGUgRm9yY2UgTWFqZXVyZTsgKHYpXH50aGUgQ2xhaW1pbmcgUGFydHkgc2hhbGwgZXhlcmNpc2UgYWxsIHJlYXNvbmFibGUgZWZmb3J0cyB0byBtaXRpZ2F0ZSBvciBsaW1pdCBkYW1hZ2VzIHRvIHRoZSBvdGhlciBDby1Pd25lcnM7IGFuZCAodmkpXH4NCnRoZSBDbGFpbWluDQpnIFBhcnR5IHNoYWxsIHVzZSBhbGwgcmVhc29uYWJsZSBlZmZvcnRzIHRvIGNvbnRpbnVlIHRvIHBlcmZvcm0gaXRzIG9ibGlnYXRpb25zIGhlcmV1bmRlciBhbmQgdG8gY29ycmVjdCBvciBjdXJlIHRoZSBldmVudCBvciBjb25kaXRpb24gZXhjdXNpbmcgcGVyZm9ybWFuY2UuICBJbiByZXNvbHZpbmcgYW55IGRpc3B1dGUgYmV0d2VlbiB0aGUgQ28tT3duZXJzLCB0aGUgYnVyZGVuIG9mIHByb29mIGFzIHRvIHdoZXRoZXIgYSBGb3JjZSBNYWpldXINCmUgaGFzIG9jY3VycmVkIGFuZCB3aGV0aGVyIHRoZSBGb3JjZSBNYWpldXJlIGV4Y3VzZXMgdGhlIENsYWltaW5nIFBhcnR5IGZyb20gcGVyZm9ybWFuY2UgdW5kZXIgdGhpcyBBZ3JlZW1lbnQgc2hhbGwgYmUgdXBvbiB0aGUgQ2xhaW1pbmcgUGFydHkufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzcxfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxMDkxMDUyMSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNy4zXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkODYxNjEzNCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxMDkxMDUyMSBGRVJDIEZpbGluZyBhbmQgQWNjZXB0YW5jZX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQxMDkxMDUyMSAuXHRhYiAgIH17XHJ0bGNoXGZjczEgXGFmNDMgXGx0cmNoXGZjczAgXGY0M1x1bG5vbmVcaW5zcnNpZDEwOTEwNTIxXGNoYXJyc2lkODYxNjEzNCBUaGUgQ28tT3duZXJzIGFja25vd2xlZGdlIGFuZCBhZ3JlZSB0aGF0OiAofXtccnRsY2hcZmNzMSANClxhZjQzIFxsdHJjaFxmY3MwIFxmNDNcdWxub25lXGluc3JzaWQxMTM1OTI0OFxjaGFycnNpZDg2MTYxMzQgaX17XHJ0bGNoXGZjczEgXGFmNDMgXGx0cmNoXGZjczAgXGY0M1x1bG5vbmVcaW5zcnNpZDEwOTEwNTIxXGNoYXJyc2lkODYxNjEzNCApIHRoaXMgQWdyZWVtZW50IHdpbGwgYmUgcHVibGljbHkgDQphdmFpbGFibGUgdGhyb3VnaCBpdHMgZmlsaW5nIHdpdGggRkVSQyBmb3IgYWNjZXB0YW5jZSB1bmRlciBTZWN0aW9uIDIwNSBvZiB0aGUgRlBBOyAofXtccnRsY2hcZmNzMSBcYWY0MyBcbHRyY2hcZmNzMCBcZjQzXHVsbm9uZVxpbnNyc2lkMTEzNTkyNDhcY2hhcnJzaWQ4NjE2MTM0IGlpfXtccnRsY2hcZmNzMSBcYWY0MyBcbHRyY2hcZmNzMCBcZjQzXHVsbm9uZVxpbnNyc2lkMTA5MTA1MjFcY2hhcnJzaWQ4NjE2MTM0IA0KKSBzdWJzZXF1ZW50IGFtZW5kbWVudHMgdG8gdGhpcyBBZ3JlZW1lbnQgfXtccnRsY2hcZmNzMSBcYWY0MyBcbHRyY2hcZmNzMCBcZjQzXHVsbm9uZVxpbnNyc2lkMjc2NDA0MCB0aGF0IGludm9sdmUgRkVSQy1qdXJpc2RpY3Rpb25hbCB0cmFuc21pc3Npb24gZmFjaWxpdGllcyBvciBzZXJ2aWNlfXtccnRsY2hcZmNzMSBcYWY0MyBcbHRyY2hcZmNzMCBcZjQzXHVsbm9uZVxpbnNyc2lkMjc2NDA0MFxjaGFycnNpZDg2MTYxMzQgIH17DQpccnRsY2hcZmNzMSBcYWY0MyBcbHRyY2hcZmNzMCBcZjQzXHVsbm9uZVxpbnNyc2lkMTA5MTA1MjFcY2hhcnJzaWQ4NjE2MTM0IG11c3QgYmUgZmlsZWQgd2l0aCBhbmQgYWNjZXB0ZWQgYnkgRkVSQywgYW5kIHRoZSBlZmZlY3RpdmVuZXNzIG9mIHN1Y2ggYW1lbmRtZW50cyB3aWxsIGJlIGNvbnRpbmdlbnQgb24gc3VjaCBGRVJDIGFjY2VwdGFuY2U7ICh9e1xydGxjaFxmY3MxIFxhZjQzIFxsdHJjaFxmY3MwIA0KXGY0M1x1bG5vbmVcaW5zcnNpZDExMzU5MjQ4XGNoYXJyc2lkODYxNjEzNCBpaWl9e1xydGxjaFxmY3MxIFxhZjQzIFxsdHJjaFxmY3MwIFxmNDNcdWxub25lXGluc3JzaWQxMDkxMDUyMVxjaGFycnNpZDg2MTYxMzQgKSBjaGFuZ2VzIGluIG93bmVyc2hpcCBjb250ZW1wbGF0ZWQgYnkgdGhpcyBBZ3JlZW1lbnQgbWF5IGJlIHN1YmplY3QgdG8gcHJpb3IgRkVSQyBhcHByb3ZhbDsgYW5kICh9e1xydGxjaFxmY3MxIFxhZjQzIFxsdHJjaFxmY3MwIA0KXGY0M1x1bG5vbmVcaW5zcnNpZDExMzU5MjQ4XGNoYXJyc2lkODYxNjEzNCBpdn17XHJ0bGNoXGZjczEgXGFmNDMgXGx0cmNoXGZjczAgXGY0M1x1bG5vbmVcaW5zcnNpZDEwOTEwNTIxXGNoYXJyc2lkODYxNjEzNCApIGRpc2Nvbm5lY3Rpb25zIG9yIHRlcm1pbmF0aW9ucyBjb250ZW1wbGF0ZWQgYnkgdGhpcyBBZ3JlZW1lbnQgbWF5IHJlcXVpcmUgcHJpb3IgRkVSDQpDIGFwcHJvdmFsLiAgUHJvbXB0bHkgYWZ0ZXIgdGhlIEV4ZWN1dGlvbiBEYXRlIG9yIGFmdGVyIGFueSBhbWVuZG1lbnQgdG8gdGhlIEFncmVlbWVudCwgdGhlIENvLU93bmVycyB3aWxsIHByZXBhcmUgYSBkcmFmdCBmaWxpbmcgdG8gc2VlayBhY2NlcHRhbmNlIGJ5IEZFUkMgb2YgdGhlIEFncmVlbWVudCBvciBzdWNoIGFtZW5kbWVudCBhbmQgdGhlIENvLU93bmVycyB3aWxsIGNvb3BlcmF0ZSB0byBtYWtlIGFueSBjaGFuZ2VzIHRvIHRoZSBmaWwNCmluZyByZXF1ZXN0ZWQgYnkgdGhlIG90aGVyIENvLU93bmVycyBhbmQgd2lsbCBmaWxlIHRoZSBBZ3JlZW1lbnQgb3Igc3VjaCBhbWVuZG1lbnQgZm9yIGFjY2VwdGFuY2UgYnkgRkVSQy4gIH17XHJ0bGNoXGZjczEgXGFmNDMgXGx0cmNoXGZjczAgXGY0M1x1bG5vbmVcaW5zcnNpZDExMzU5MjQ4XGNoYXJyc2lkODYxNjEzNCANCkNvbnRlbXBvcmFuZW91c2x5IHdpdGggdGhlIGZpbGluZyBvZiB0aGlzIEFncmVlbWVudCB3aXRoIEZFUkMsIHRoZSBDby1Pd25lcnMgd2lsbCBhcHBseSB0byBGRVJDIGZvciByZWd1bGF0b3J5IHdhaXZlcnMgZXhlbXB0aW5nIHRoZSBDby1Pd25lcnMgZnJvbSBjb21wbGlhbmNlIHdpdGggfXtccnRsY2hcZmNzMSBcYWY0MyBcbHRyY2hcZmNzMCBcZjQzXHVsbm9uZVxpbnNyc2lkMTQwOTI2NzJcY2hhcnJzaWQ4NjE2MTM0IA0KRkVSQyBPcmRlciBOb3MuIDg4OCwgODg5IGFuZCA4OTAsIGFuZCBGRVJDXHJxdW90ZSBzIHJlZ3VsYXRpb25zIGF0IDE4IEMuRi5SLiBcJ2E3IDM1LjI4LCBhbmQgMTggQy5GLlIuIFBhcnRzIDM3IGFuZCAzNTguICB9e1xydGxjaFxmY3MxIFxhZjQzIFxsdHJjaFxmY3MwIFxmNDNcdWxub25lXGluc3JzaWQxMDkxMDUyMVxjaGFycnNpZDg2MTYxMzQgDQpFYWNoIENvLU93bmVyIGFncmVlcyB0aGF0IGl0IHdpbGwgbm90IG9wcG9zZSBhY2NlcHRhbmNlIG9mIHRoZSBBZ3JlZW1lbnQgb3IgfXtccnRsY2hcZmNzMSBcYWY0MyBcbHRyY2hcZmNzMCBcZjQzXHVsbm9uZVxpbnNyc2lkMTQwOTI2NzJcY2hhcnJzaWQ4NjE2MTM0IGFufXtccnRsY2hcZmNzMSBcYWY0MyBcbHRyY2hcZmNzMCBcZjQzXHVsbm9uZVxpbnNyc2lkMTA5MTA1MjFcY2hhcnJzaWQ4NjE2MTM0ICBhbWVuZG1lbnQgYnkgRkVSQ317DQpccnRsY2hcZmNzMSBcYWY0MyBcbHRyY2hcZmNzMCBcZjQzXHVsbm9uZVxpbnNyc2lkMTQwOTI2NzJcY2hhcnJzaWQ4NjE2MTM0ICwgb3IgdGhlIGdyYW50aW5nIGJ5IEZFUkMgb2YgdGhlIHdhaXZlcnMgZGVzY3JpYmVkIGluIHRoZSBwcmVjZWRpbmcgc2VudGVuY2UsfXtccnRsY2hcZmNzMSBcYWY0MyBcbHRyY2hcZmNzMCBcZjQzXHVsbm9uZVxpbnNyc2lkMTA5MTA1MjFcY2hhcnJzaWQ4NjE2MTM0IA0KIGFuZCB0aGF0IGl0IHdpbGwgcmVhc29uYWJseSBjb29wZXJhdGUgd2l0aCB0aGUgb3RoZXIgQ28tT3duZXJzIHRvIGFkZHJlc3MgYW55IGlzc3VlcyByYWlzZWQgYnkgRkVSQyBpbiBjb25uZWN0aW9uIHdpdGggdGhlIGZpbGluZ317XHJ0bGNoXGZjczEgXGFmNDMgXGx0cmNoXGZjczAgXGY0M1x1bG5vbmVcaW5zcnNpZDE0MDkyNjcyXGNoYXJyc2lkODYxNjEzNCBzIGRlc2NyaWJlZCBpbiB0aGlzIFNlY3Rpb24gMTcuM317XHJ0bGNoXGZjczEgDQpcYWY0MyBcbHRyY2hcZmNzMCBcZjQzXHVsbm9uZVxpbnNyc2lkMTA5MTA1MjFcY2hhcnJzaWQ4NjE2MTM0IC59e1xydGxjaFxmY3MxIFxhZjQzIFxsdHJjaFxmY3MwIFxmNDNcdWxub25lXGluc3JzaWQxNDA5MjY3MlxjaGFycnNpZDg2MTYxMzQgIH17XHJ0bGNoXGZjczEgXGFmNDMgXGx0cmNoXGZjczAgXGY0M1x1bG5vbmVcaW5zcnNpZDEwOTEwNTIxXGNoYXJyc2lkODYxNjEzNCANCiBTdWJqZWN0IHRvIHRoZSB0ZXJtcyBhbmQgY29uZGl0aW9ucyBzZXQgZm9ydGggaGVyZWluLCB0aGUgQ28tT3duZXJzIGFncmVlIHRvIGV4ZWN1dGUgYW5kIGRlbGl2ZXIgYWxsIGRvY3VtZW50cyByZWFzb25hYmx5IG5lY2Vzc2FyeSBmb3IgdGhpcyBBZ3JlZW1lbnQgdG8gY29tcGx5IHdpdGggRkVSQyByZXF1aXJlbWVudHMufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTA5MTA1MjEgDQp7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzcxfQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzNzJ9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTcuNFx0YWJ9fVxwYXJkIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgQXNzaWdubWVudH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzM3Mn0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIFRoaXMgQWdyZWVtZW50IHdpbGwgYmUgYmluZGluZyBvbiBhbmQgaW51cmUgdG8gdGhlIGJlbmVmaXQgb2YgdGhlIENvLU93bmVycyBhbmQgdGhlaXIgcmVzcGVjdGl2ZSBzdWNjZXNzb3JzIGFuZCBwZXJtaXR0ZWQgYXNzaWducy4gIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY2MjUzNiANCkFsbCB0cmFuc2ZlcnMsIGNvbnZleWFuY2VzLCBhc3NpZ25tZW50cyBvZiBTaGFyZWQgRmFjaWxpdGllcyBvciBTaGFyZWQgUmVhbCBwcm9wZXJ0eSB3aWxsIGJlIHN1YmplY3QgdG8gdGhlIHRlcm1zIGFuZCBjb25kaXRpb25zIG9mIHRoaXMgQWdyZWVtZW50LCB3aGV0aGVyIG9yIG5vdCBleHBsaWNpdGx5IHN0YXRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDUyNzI1OTAgLiAgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IEVhY2ggQ28tT3duZXIgbWF5LCBhdCBhbnkgdGltZSBhbmQgZnJvbSB0aW1lIHRvIHRpbWUsIHVwb24gbm90aWNlIGJ1dCB3aXRob3V0IHRoZSBvdGhlciBDby19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjY2OTg1NSBPd25lcnNccnF1b3RlICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IGNvbnNlbnQgb3IgYXBwcm92YWx9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MDE0MjU0ICx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICAoaSlcfn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNjY5ODU1IHN1YmplY3QgdG8gY29tcGxpYW5jZSB3aXRoIFNlY3Rpb25cfjkuNywgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCnRyYW5zZmVyIG9yIGFzc2lnbiB0aGlzIEFncmVlbWVudCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTQyNjE3OCBhbmQgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgcmlnaHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTQyNjE3OCBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTQyNjE3OCBhbmQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBvYmxpZ2F0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU0MjYxNzggc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHVuZGVyIHRoaXMgQWdyZWVtZW50IHRvIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTI2Njk4NTVcY2hhcnJzaWQ5Mzg0NTYxIGEgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI2Njk4NTVcY2hhcnJzaWQ1OTA4MzggUGVyc29uIHRoYXQgYWNxdWlyZXMgYWxsIG9yIHN1YnN0YW50aWFsbHkgYWxsIG9mIHN1Y2ggQ28tT3duZXJccnF1b3RlIHMgYXNzZXRzLCBpbmNsdWRpbmcgc3VjaCBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNjY5ODU1IA0KXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjY2OTg1NVxjaGFycnNpZDU5MDgzOCBzIFNoYXJlZCBBc3NldHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjY2OTg1NSAsIGFuZCBhZ3JlZXMgdG8gYXNzdW1lIGFsbCBvYmxpZ2F0aW9ucyBvZiB0aGF0IENvLU93bmVyIHVuZGVyIHRoaXMgQWdyZWVtZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxMjY2OTg1NVxjaGFycnNpZDU5MDgzOCAgKGEgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDEyNjY5ODU1XGNoYXJyc2lkNTkwODM4IFwnOTNQZXJtaXR0ZWQgQXNzaWduZWVcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI2Njk4NTVcY2hhcnJzaWQ1OTA4MzggKX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgOyBhbmQvb3IgKGlpKVx+DQp9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTkyNiBjcmVhdGUgTGVuZGVyXHJxdW90ZSBzIExpZW5zIHB1cnN1YW50IHRvIEFydGljbGUgWElWfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYwMTQyNTQgLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MDE0MjU0ICBPdGhlcndpc2UNCn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY2MjUzNiAsIG5vIENvLU93bmVyIHNoYWxsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYwMTQyNTQgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgdHJhbnNmZXIgb3IgYXNzaWduIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY2MjUzNiANCmFsbCBvciBhbnkgcGFydCBvZiBpdHMgcmlnaHQsIHRpdGxlIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1NDI2MTc4ICBpbnRlcmVzdCBpbiBvciB0byB0aGlzIEFncmVlbWVudCBvciBhbnkgb2YgaXRzIHJpZ2h0cyBoZXJldW5kZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSB3aXRob3V0IHRoZSBwcmlvciBjb25zZW50IG9mIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTU0MjYxNzggYWxsIG9mIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgdGhlIG90aGVyIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4NTYzNTkgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIzMjM4OTQgOyBwcm92aWRlZCwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjYyNTM2IA0KZnVydGhlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIzMjM4OTQgLCB0aGF0IGlmIEZFUkMgYXBwcm92YWwgaXMgcmVxdWlyZWQgZm9yIGFueSBzdWNoIGFzc2lnbm1lbnQgb3IgdHJhbnNmZXIsIGl0IHNoYWxsIG5vdCBiZSBlZmZlY3RpdmUgdW5sZXNzIGFuZCB1bnRpbCBGRVJDIGFwcHJvdmFsIGhhcyBiZWVuIG9idGFpbmVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAuICB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1NDI2MTc4IEZvciBwdXJwb3NlcyBvZiB0aGlzIEFncmVlbWVudCwgYSBDaGFuZ2Ugb2YgQ29udHJvbCBvZiBhIENvLU93bmVyIHNoYWxsIGJlIGNvbnNpZGVyZWQgYW4gYXNzaWdubWVudCBieSBzdWNoIENvLU93bmVyIG9mIGl0cyByaWdodHMgYW5kIGludGVyZXN0cyB1bmRlciB0aGlzIEFncg0KZWVtZW50IGFuZCBzaGFsbCBiZSBzdWJqZWN0IHRvIHRoZSByZXF1aXJlbWVudHMgaGVyZXVuZGVyIHdpdGggcmVzcGVjdCB0byBhc3NpZ25tZW50cy4gIEFueSBQZXJtaXR0ZWQgQXNzaWduZWUgc2hhbGwgYXNzdW1lIGFsbCBvZiB0aGUgb2JsaWdhdGlvbnMgb2YgdGhlIGFzc2lnbmluZyBDby1Pd25lciBoZXJldW5kZXIgYW5kIHNoYWxsIGV4ZWN1dGUgYW55IGRvY3VtZW50cyB3aGljaCBtYXkgcmVhc29uYWJseSBiZSByZXF1aXJlZCBieSB0aGUgDQpvDQp0aGVyIENvLU93bmVycywgb3IgYnkgTGVuZGVycywgaW5jbHVkaW5nIGJ1dCBub3QgbGltaXRlZCB0byBhbnkgZG9jdW1lbnQgaW4gY29ubmVjdGlvbiB3aXRoIGEgZ292ZXJubWVudGFsIHBlcm1pdCwgYXBwcm92YWwsIGF1dGhvcml6YXRpb24sIGVudGl0bGVtZW50IG9yIG90aGVyIGNvbnNlbnQuICBVbmRlciBubyBjaXJjdW1zdGFuY2VzIHNoYWxsIGFueSBMZW5kZXIgb3IgUGVybWl0dGVkIEFzc2lnbmVlIGhhdmUgYW55IGdyZWF0ZXIgcmlnaHQNCnMgb2Ygb3duZXJzaGlwIG9yIHVzZSBvZiB0aGUgU2hhcmVkIEFzc2V0cyB0aGFuIHRoZSByaWdodHMgZ3JhbnRlZCB0byB0aGUgQ28tT3duZXJzIGluIHRoaXMgQWdyZWVtZW50LiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTIzOTRcY2hhcnJzaWQxMTg5Mzc5MCBBbnkgYXNzaWdubWVudCBwZXJtaXR0ZWQgdW5kZXIgdGhpcyBBZ3JlZW1lbnQgc2hhbGwgcmVsZWFzZSB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDEyMzk0IHRoZSBhc3NpZ25pbmcgQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjM5NFxjaGFycnNpZDExODkzNzkwICBmcm9tIG9ibGlnYXRpb25zIGFjY3J1aW5nIGFmdGVyIHRoZSBkYXRlIHRoYXQgbGlhYmlsaXR5IGlzIGFzc3VtZWQgYnkgDQphIHRyYW5zZmVyZWUsIGJ1dCB0aGUgYXNzaWduaW5nIENvLU93bmVyIHNoYWxsIGNvbnRpbnVlIHRvIGJlIGxpYWJsZSB0byB0aGUgb3RoZXIgQ28tT3duZXJzIGZvciBhbGwgcGVyZm9ybWFuY2UgZHVlIGJ5IHRoZSBhc3NpZ25pbmcgQ28tT3duZXIgZm9yIG1hdHRlcnMgdGhhdCBoYXZlIGFjY3J1ZWQgYW5kIGFyZSB1bnNhdGlzZmllZCBhcyBvZiB0aGUgZGF0ZSBvZiB0aGUgYXNzaWdubWVudC59e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDEyMzk0ICAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBBbnkgcHVycG9ydGVkIGFzc2lnbm1lbnQgaW4gY29udHJhdmVudGlvbiBvZiB0aGlzIFNlY3Rpb25cfjE3LjMgd2lsbCBiZSB2b2lkLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQyMTc2NzM2XGNoYXJyc2lkOTQ0Njc1IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzNzN9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1MjcxNTc4XGNoYXJyc2lkMTMxNzY3MTMgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTcuNVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTI3MTU3OFxjaGFycnNpZDEzMTc2NzEzIEFjdGlvbnMgQnkgQ28tT3duZXJzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDE1MjcxNTc4XGNoYXJyc2lkMTMxNzY3MTMgLiAgVW5sZXNzIGV4cHJlc3NseSBwcm92aWRlZCBvdGhlcndpc2UsIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQzNjgxMDM4XGNoYXJyc2lkMTMxNzY3MTMgdm90aW5nIGJ5IHRoZSB9ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQxNTI3MTU3OFxjaGFycnNpZDEzMTc2NzEzIENvLU93bmVyc317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQzNjgxMDM4XGNoYXJyc2lkMTMxNzY3MTMgIHNoYWxsIGJlIGluIHByb3BvcnRpb24gdG8gdGhlaXIgcmVzcGVjdGl2ZSBQcm9wb3J0aW9uYXRlIFNoYXJlc317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClx1bG5vbmVcaW5zcnNpZDE2MTkxNzU1XGNoYXJyc2lkMTMxNzY3MTMgLCBzbyB0aGF0IHRoZSB3ZWlnaHQgb2YgZWFjaCBDby1Pd25lclxycXVvdGUgcyB2b3RlIGlzIHByb3BvcnRpb25hbCB0byB0aGUgbmFtZXBsYXRlIGNhcGFjaXRpZXMgb2YgdGhlaXIgcmVzcGVjdGl2ZSBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDM2ODEwMzhcY2hhcnJzaWQxMzE3NjcxMyAufXtccnRsY2hcZmNzMSANClxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNTI3MTU3OFxjaGFycnNpZDEzMTc2NzEzIA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNy42XHRhYn19e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IEVudGlyZSBBZ3JlZW1lbnR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IA0Ke1wqXGJrbWtlbmQgX1RvYzQwNDAxMzM3M30NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIFRoaXMgQWdyZWVtZW50IGlzIHRoZSBDby1Pd25lcnNccnF1b3RlICBjb21wbGV0ZSBhbmQgZmluYWwgZXhwcmVzc2lvbiBvZiBhZ3JlZW1lbnQgcmVnYXJkaW5nIHRoZSBtYXR0ZXJzIGFkZHJlc3NlZCBpbiB0aGlzIEFncmVlbWVudCBhbmQgc3VwZXJzZWRlcyBhbGwgcHJpb3IgYWdyZWVtZW50cywgcmVwcmVzZW50YXRpbw0KbnMsIHVuZGVyc3RhbmRpbmdzLCBvZmZlcnMgYW5kIGNvbW11bmljYXRpb25zLCB3aGV0aGVyIG9yYWwgb3Igd3JpdHRlbiwgcmVnYXJkaW5nIHN1Y2ggbWF0dGVycy59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzNzR9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTcuN1x0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IEFtZW5kbWVudH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzM3NH0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIFRoaXMgQWdyZWVtZW50IGNhbiBiZSBhbWVuZGVkIG9ubHkgYnkgYSBtdXR1YWxseSBhZ3JlZWFibGUgd3JpdHRlbiBhbWVuZG1lbnQgZXhlY3V0ZWQgYnkgYW4gYXV0aG9yaXplZCByZXByZXNlbnRhdGl2ZSBvZiBlYWNoIENvLU93bmVyLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzM3NX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNy44XHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgRnVydGhlciBBc3N1cmFuY2VzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzc1fQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLiAgRWFjaCBDby1Pd25lciBhZ3JlZSB0byBleGVjdXRlIGFuZCBkZWxpdmVyIGFueSBhZGRpdGlvbmFsIGluc3RydW1lbnRzLCBhZ3JlZW1lbnRzIG9yIGFtZW5kbWVudHMsIGFuZCB0byB0YWtlIHN1Y2ggb3RoZXIgYWN0aW9ucyBhcyBtYXkgYmUgbmVjZXNzYXJ5IG9yIHJlYXNvbmFibHkgcmVxdWVzdGVkIGJ5IHRoZSBvdGhlciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzg1NjM1OSBDfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IG8tT3duZXJzIHRvIGVmZmVjdHVhdGUgb3IgZXZpZGVuY2UgdGhpcyBBZ3JlZW1lbnQgYW5kIHdoaWNoDQogYXJlIG5vdCBpbmNvbnNpc3RlbnQgd2l0aCB0aGUgcHJvdmlzaW9ucyBoZXJlb2YsIGRvIG5vdCBhZHZlcnNlbHkgYWZmZWN0IHRoZSByaWdodHMgb2Ygb3RoZXIgQ28tT3duZXJzLCB2aW9sYXRlIHRoZSB0ZXJtcyBhbmQgc3Bpcml0IG9mIHRoaXMgQWdyZWVtZW50LCBhbmQgd2hpY2ggZG8gbm90IGludm9sdmUgYXNzdW1wdGlvbnMgb2Ygb2JsaWdhdGlvbnMgb3IgbWF0ZXJpYWxseSBhZmZlY3QgdGhlIGNvc3Qgb2YgcGVyZm9ybWFuY2UsIG90aGUNCnIgdGhhbiB0aG9zZSBwcm92aWRlZCBmb3IgaW4gdGhpcyBBZ3JlZW1lbnQsIGluIG9yZGVyIHRvIGdpdmUgZnVsbCBlZmZlY3QgdG8gYW5kIGNhcnJ5IG91dCB0aGUgaW50ZW50IG9mIHRoaXMgQWdyZWVtZW50LCBpbmNsdWRpbmcgY29vcGVyYXRpbmcgaW4gY29uZmlybWluZyB0aGUgZ3JhbnQgb3IgYXNzaWdubWVudCBvZiBwcm9wZXJ0eSByaWdodHMgb3IgdGhlIHJlc2VydmF0aW9uIG9yIHJldGVudGlvbiBvZiBwcm9wZXJ0eSByaWdodHMuIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzc2fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE3LjlcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBTZXZlcmFiaWxpdHl9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzNzZ9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBJZiBhbnkgcHJvdmlzaW9uIG9mIHRoaXMgQWdyZWVtZW50IGlzIGhlbGQgaW52YWxpZCBvciB1bmVuZm9yY2VhYmxlLCBhbGwgb3RoZXIgcHJvdmlzaW9ucyB3aWxsIG5vdCBiZSBhZmZlY3RlZC4gIFdpdGggcmVzcGVjdCB0byB0aGUgcHJvdmlzaW9uIGhlbGQgaW52YWxpZCBvciB1bmVuZm9yY2VhYmxlLCB0aGUgQ28tT3duZXJzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDcxNzIxNjcgDQphZ3JlZSB0byBjb29wZXJhdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYxOTE3NTUgdG8gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBhbWVuZCB0aGlzIEFncmVlbWVudCBhcyBuZWNlc3NhcnkgdG8gZWZmZWN0IHRoZSBDby1Pd25lcnNccnF1b3RlICBvcmlnaW5hbCBpbnRlbnQgYXMgY2xvc2VseSBhcyBwb3NzaWJsZS59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzM3N317XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNy4xMFx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IEpvaW50IFByZXBhcmF0aW9ufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzc3fQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLiAgVGhpcyBBZ3JlZW1lbnQgb3IgYW55IHVuY2VydGFpbnR5IG9yIGFtYmlndWl0eSB0aGVyZWluIHNoYWxsIG5vdCBiZSBjb25zdHJ1ZWQgYWdhaW5zdCBhbnkgb25lIENvLU93bmVyLCBidXQgcmF0aGVyIHNoYWxsIGJlIGNvbnN0cnVlZCBhcyB0aG91Z2ggYWxsIENvLU93bmVycyBqb2ludGx5IHByZXBhcmVkIHRoaXMgQWdyZWVtZW50Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjE3NjczNiANClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzc4fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE3LjExXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgTm8gV2FpdmVyfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzc4fQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgDQouICBJZiBvbiBhbnkgb2NjYXNpb24gYSBDby1Pd25lciBkb2VzIG5vdCBpbnNpc3QgdXBvbiB0aGUgcGVyZm9ybWFuY2Ugb2YgYW55IHRlcm0sIGNvbmRpdGlvbiBvciBwcm92aXNpb24gb2YgdGhpcyBBZ3JlZW1lbnQsIHN1Y2ggZm9yYmVhcmFuY2Ugd2lsbCBub3Qgb3BlcmF0ZSBvciBiZSBjb25zdHJ1ZWQgYXMgYW4gYWNjZXB0YW5jZSBvZiBhbnkgdmFyaWF0aW9uIGluIGFueSB0ZXJtLCBjb25kaXRpb24gb3IgcHJvdmlzaW9uIG9mIHRoaXMgQWcNCnJlZW1lbnQgb3IgcmVsaW5xdWlzaG1lbnQgb2YgYW55IHJpZ2h0IHVuZGVyIHRoaXMgQWdyZWVtZW50LiAgTm8gd2FpdmVyIGJ5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODU2MzU5IGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBDby1Pd25lciBvZiBhbnkgcmlnaHQgb3Igb2YgYW55IGRlZmF1bHQgYnkgdGhlIG90aGVyIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxMzg1NjM1OSBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgdW5kZXIgdGhpcyBBZ3JlZW1lbnQgd2lsbCBiZSBlZmZlY3RpdmUgdW5sZXNzIGl0IGlzIGluIHdyaXRpbmcgYW5kIHNpZ25lZCBieSB0aGUgd2FpdmluZyBDby1Pd25lciwgYW5kIG5vIHdhaXZlciB3aWxsDQogb3BlcmF0ZSBvciBiZSBjb25zdHJ1ZWQgYXMgYSB3YWl2ZXIgb2YgYW55IG90aGVyIG9yIGZ1cnRoZXIgcmlnaHQgb3IgYXMgYSB3YWl2ZXIgb2YgYW55IGZ1dHVyZSBkZWZhdWx0LCB3aGV0aGVyIG9mIGxpa2Ugb3IgZGlmZmVyZW50IGNoYXJhY3RlciBvciBuYXR1cmUufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzc5fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE3LjEyXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgR292ZXJuaW5nIExhd317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlxjZjZcaW5zcnNpZDIxNzY3MzYge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzM3OX0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIFRoaXMgQWdyZWVtZW50IHNoYWxsIGJlIGdvdmVybmVkIGJ5LCBjb25zdHJ1ZWQgYW5kIGVuZm9yY2VkIGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgbGF3cyBvZiB0aGUgU3RhdGUgb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY1Mzk3OTQgQ2FsaWZvcm5pYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLCB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE2NTM5Nzk0IHdpdGhvdXQgcmVnYXJkIHRvIHByaW5jaXBsZXMgb2YgY29uZmxpY3Qgb2YgbGF3c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzM4MH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzc0NzIzM1xjaGFycnNpZDM3NDcyMzMgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTcuMTNcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMzc0NzIzM1xjaGFycnNpZDM3NDcyMzMgRGlzcHV0ZSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQzNzQ3MjMzIFJlc29sdXRpb24gfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzc0NzIzM1xjaGFycnNpZDM3NDcyMzMgUHJvY2VkdXJlc317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdlx1bG5vbmVcY2Y2XGluc3JzaWQyMTc2NzM2IA0Ke1wqXGJrbWtlbmQgX1RvYzQwNDAxMzM4MH0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IC4gIERpc3B1dGVzIGFtb25nIHRoZSBDby1Pd25lcnMgc2hhbGwgYmUgcmVzb2x2ZWQgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZSBwcm9jZWR1cmVzIHNldCBmb3J0aCBpbiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzA3MTE3MCBFeGhpYml0IEV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzM4MX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNy4xNFx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IFJlbGF0aW9uc2hpcCBvZiB0aGUgQ28tT3duZXJzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzgxfQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLiAgVGhpcyBBZ3JlZW1lbnQgd2lsbCBub3QgYmUgaW50ZXJwcmV0ZWQgb3IgY29uc3RydWVkIHRvIChpKVx+Y3JlYXRlIGFuIGFzc29jaWF0aW9uLCBqb2ludCB2ZW50dXJlIG9yIHBhcnRuZXJzaGlwIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNzQzNTggYW1vbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KIHRoZSBDby1Pd25lcnMgb3IgaW1wb3NlIGFueSBwYXJ0bmVyc2hpcCBvYmxpZ2F0aW9uIG9yIGxpYWJpbGl0eSBvbiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjc0MzU4IGFueX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIENvLU93bmVyLCBvciAoaWkpXH5jcmVhdGUgYW55IGFnZW5jeSByZWxhdGlvbnNoaXAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxMjc0MzU4IGFtb25nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgdGhlIENvLU93bmVycyBvciBpbXBvc2UgYW55IGZpZHVjaWFyeSBkdXR5IG9mIGFueSBraW5kIG9uIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNzQzNTggYW55fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgQ28tT3duZXIsIG9yIChpaWkpXH4NCmNyZWF0ZSBhIGxlYXNlIG9mIGFueSBwcm9wZXJ0eSBvZiBhbnkga2luZC4gIFN1YmplY3QgdG8gT3BlcmF0b3JccnF1b3RlIHMgcHJvdmlzaW9uIG9mIE8mTSBTZXJ2aWNlcywgbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNzQzNTggb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQogQ28tT3duZXIgd2lsbCBoYXZlIGFueSByaWdodCwgcG93ZXIgb3IgYXV0aG9yaXR5IHRvIGVudGVyIGludG8gYW55IGFncmVlbWVudCBvciB1bmRlcnRha2luZyBmb3IsIG9yIGFjdCBvbiBiZWhhbGYgb2YsIG9yIHRvIGFjdCBhcyBvciBiZSBhbiBhZ2VudCBvciByZXByZXNlbnRhdGl2ZSBvZiwgb3Igb3RoZXJ3aXNlIHRvIGJpbmQsIHRoZSBvdGhlciBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTI3NDM1OCBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAuICBFYWNoIENvLU93bmVyIHdhaXZlcyBhbnkgYW5kIGFsbCByaWdodHMgdGhhdCBpdCBtYXkgb3RoZXJ3aXNlIGhhdmUgdW5kZXIgQXBwbGljYWJsZSBMYXdzIG9yIGxlZ2FsIHByZWNlZGVudHMgdG8gbWFrZSBhbnkgY2xhaW1zIG9yIHRha2UgYW55IGFjdGlvbiBhZ2FpbnN0IHRoZSBvdGhlciBDby1Pd25lcn17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI3NDM1OCBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgb3IgYW55IG9mIGl0cyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjc0MzU4IEFmZmlsaWF0ZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KIGluIHJlc3BlY3Qgb2YgdGhpcyBBZ3JlZW1lbnQgYmFzZWQgb24gYW55IHRoZW9yeSBvZiBhZ2VuY3ksIGZpZHVjaWFyeSBkdXR5IG9yIG90aGVyIHNwZWNpYWwgc3RhbmRhcmQgb2YgY2FyZS59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzODJ9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTcuMTVcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBObyBUaGlyZCBQYXJ0eSBSaWdodHN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzODJ9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBFeGNlcHQgd2l0aCByZXNwZWN0IHRvIHRoZSByaWdodHMgb2YgTGVuZGVycyBhcyBzZXQgZm9ydGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5MjYgaW4gQXJ0aWNsZSBYSVZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KLCB0aGUgY292ZW5hbnRzIGNvbnRhaW5lZCBoZXJlaW4gYXJlIG1hZGUgc29sZWx5IGZvciB0aGUgYmVuZWZpdCBvZiB0aGUgQ28tT3duZXJzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1MjcxNTc4IGFuZCB0aGUgT3BlcmF0b3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICwgYW5kIHNoYWxsIG5vdCBiZSBjb25zdHJ1ZWQgYXMgYmVuZWZpdGluZyBhbnkgfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0MzQyODU5IFB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IGVyc29uIHRoYXQgaXMgbm90IGEgQ28tT3duZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTUyNzE1Nzggb3IgdGhlIE9wZXJhdG9yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzODN9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTcuMTZcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBObyBEZWRpY2F0aW9uIG9mIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzODN9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBBbnkgdW5kZXJ0YWtpbmcgYnkgb25lIENvLU93bmVyIHRvIHRoZSBvdGhlciBDby1Pd25lcnMgdW5kZXIgdGhpcyBBZ3JlZW1lbnQgc2hhbGwgbm90IGNvbnN0aXR1dGUgdGhlIGRlZGljYXRpb24gb2YgdGhlIGVsZWN0cmljIGZhY2lsaXRpZXMgb3IgYW55IHBvcnRpb24gdGhlcmVvZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMzIzODk0IG9yIGFueSBvdGhlciBwcm9wZXJ0eSB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgb2YgdGhlIHVuZGVydGFraW5nIENvLU93bmVyIHRvIHRoZSBwdWJsaWMgb3IgdG8gdGhlIG90aGVyIENvLU93bmVycywgYW5kIGl0IGlzIHVuZGVyc3Rvb2QgYW5kIGFncmVlZCB0aGF0IGFueSBzdWNoIHVuZGVydGFraW5nIGJ5IGEgQ28tT3duZXIgd2lsbCBjZWFzZSB1cG9uIHRoZSB0ZXJtaW5hdGlvbiBvZiBpdHMgb2JsaWdhdGlvbnMgaGVyZXVuZGVyLn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjMyMzg5NCAgIE5vdGhpbmcgaGVyZWluIHNoYWxsIGNvbnN0aXR1dGUgYSBkZWRpY2F0aW9uIG9yIGFuIG9mZmVyIHRvIGRlZGljYXRlIGFueSBTaGFyZWQgRmFjaWxpdGllcyBvciBTaGFyZWQgUmVhbCBQcm9wZXJ0eSB0byB0aGUgcHVibGljfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDIwOTY2OSAgb3IgZm9yIHB1YmxpYyBzZXJ2aWNlfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMzIzODk0IC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzODR9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTcuMTdcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBOb3RpY2VzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzg0fQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLiAgRXhjZXB0IGFzIG90aGVyd2lzZSBwcm92aWRlZCBpbiB0aGlzIEFncmVlbWVudCwgYWxsIG5vdGljZXMgYW5kIG90aGVyIGNvbW11bmljYXRpb25zIHRvIGJlIGdpdmVuIG9yIG1hZGUgdW5kZXIgdGhpcyBBZ3JlZW1lbnQgd2lsbCBiZSBpbiB3cml0aW5nLCB3aWxsIGJlIGFkZHJlc3NlZCBhcyBzcGVjaWZpZWQgYmVsb3csIGFuZCB3aWxsIGVpdGhlciBiZSBwZXJzb25hbGx5IGRlbGl2ZXJlZCBvciBzZW50IGJ5IA0KY291cmllciBzZXJ2aWNlLCBieSByZWdpc3RlcmVkIG9yIGNlcnRpZmllZCBtYWlsLCBvciBieSBmYWNzaW1pbGUufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgXGx0cnJvd31cdHJvd2QgXGlyb3cwXGlyb3diYW5kMFxsdHJyb3dcdHMxMVx0cmdhcGgxMDhcdHJsZWZ0NDUwXHRyZnRzV2lkdGgxXHRyZnRzV2lkdGhCM1x0cmF1dG9maXQxXHRycGFkZGwxMDhcdHJwYWRkcjEwOFx0cnBhZGRmbDNcdHJwYWRkZnQzXHRycGFkZGZiM1x0cnBhZGRmcjNcdGJscnNpZDczNTc1MDJcdGJsbGtoZHJyb3dzXHRibGxraGRyY29sc1x0Ymxsa25vY29sYmFuZFx0YmxpbmQ1NThcdGJsaW5kdHlwZTMgXGNsdmVydGFsdA0KXGNsYnJkcnRcYnJkcnRibCBcY2xicmRybFxicmRydGJsIFxjbGJyZHJiXGJyZHJ0YmwgXGNsYnJkcnJcYnJkcnRibCBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgyMzQwXGNsc2hkcmF3bmlsIFxjZWxseDI3OTBcY2x2ZXJ0YWxjXGNsYnJkcnRcYnJkcnRibCBcY2xicmRybFxicmRydGJsIFxjbGJyZHJiXGJyZHJ0YmwgXGNsYnJkcnJcYnJkcnRibCBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGg2Njc4XGNsc2hkcmF3bmlsIA0KXGNlbGx4OTQ2OFxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFx5dHMxMSBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ0NTkxNjA3IEl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NTkxNjA3XGNoYXJyc2lkNDU5MTYwNyBmIHRvIFJpc2luZyBUcmVlIEl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NTkxNjA3IDpcY2VsbCB9XHBhcmRccGxhaW4gXGx0cnBhcg0KXHMyN1xxbCBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXHBhcmFyc2lkNTEzMTg4MFx5dHMxMSBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ0NTkxNjA3XGNoYXJyc2lkNzA3ODAwMiBSaXNpbmcgVHJlZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDQ1OTE2MDdcY2hhcnJzaWQ3MzU3NTAyICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NTkxNjA3IFdpbmQgRmFybSBMTENcbGluZSA4MDggVHJhdmlzLCBTdWl0ZSA3MDBcbGluZSBIb3VzdG9uLCBUWCA3NzAwMlxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkNDU5MTYwN1xjaGFycnNpZDk0NDY3NSBBdHRuOiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjcyNTM1ICBHZW5lcmFsIENvdW5zZWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NTkxNjA3XGNoYXJyc2lkOTQ0Njc1IFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ1OTE2MDcgRmFjc2ltaWxlOiAgKDcxMykgMjY1LTAzNjUNClxsaW5lIEUtbWFpbDogfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI3MjUzNVxjaGFycnNpZDgzNTE0IGxlZ2FsLm5vdGljZXNAZWRwci5jb219e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NTkxNjA3IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NTkxNjA3XGNoYXJyc2lkNzA3ODAwMiB3aXRoIGEgY29weSB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ1OTE2MDcgOlxsaW5lIFxsaW5lIEVEUCBSZW5ld2FibGVzIE5vcnRoIEFtZXJpY2EgTExDXGxpbmUgODA4IFRyYXZpcywgU3VpdGUgNzAwXGxpbmUgSG91c3RvbiwgVFggNzcwMDJcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDQ1OTE2MDdcY2hhcnJzaWQ5NDQ2NzUgQXR0bjogR2VuZXJhbCBDb3Vuc2VsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDU5MTYwNyBcbGluZSBGYWNzaW1pbGU6ICAoNzEzKSAyNjUtMDM2NVxsaW5lIEUtbWFpbDogbGVzbGllLmZyZWltYW5AZWRwci5jb21cY2VsbCB9XHBhcmRccGxhaW4gXGx0cnBhcg0KXHFsIFxsaTBccmkwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDU5MTYwNyANClx0cm93ZCBcaXJvdzBcaXJvd2JhbmQwXGx0cnJvd1x0czExXHRyZ2FwaDEwOFx0cmxlZnQ0NTBcdHJmdHNXaWR0aDFcdHJmdHNXaWR0aEIzXHRyYXV0b2ZpdDFcdHJwYWRkbDEwOFx0cnBhZGRyMTA4XHRycGFkZGZsM1x0cnBhZGRmdDNcdHJwYWRkZmIzXHRycGFkZGZyM1x0Ymxyc2lkNzM1NzUwMlx0Ymxsa2hkcnJvd3NcdGJsbGtoZHJjb2xzXHRibGxrbm9jb2xiYW5kXHRibGluZDU1OFx0YmxpbmR0eXBlMyBcY2x2ZXJ0YWx0XGNsYnJkcnQNClxicmRydGJsIFxjbGJyZHJsXGJyZHJ0YmwgXGNsYnJkcmJcYnJkcnRibCBcY2xicmRyclxicmRydGJsIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDIzNDBcY2xzaGRyYXduaWwgXGNlbGx4Mjc5MFxjbHZlcnRhbGNcY2xicmRydFxicmRydGJsIFxjbGJyZHJsXGJyZHJ0YmwgXGNsYnJkcmJcYnJkcnRibCBcY2xicmRyclxicmRydGJsIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDY2NzhcY2xzaGRyYXduaWwgXGNlbGx4OTQ2OA0KXHJvdyBcbHRycm93fVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFx5dHMxMSBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ0NTkxNjA3IElmfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDU5MTYwN1xjaGFycnNpZDQ1OTE2MDcgIHRvIFJpc2luZyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NTkxNjA3XGNoYXJyc2lkNzA3ODAwMiBUcmVlIElJOn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ1OTE2MDcgXGNlbGwgfVxwYXJkXHBsYWluIFxsdHJwYXINClxzMjdccWwgXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxwYXJhcnNpZDUxMzE4ODBceXRzMTEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNDU5MTYwN1xjaGFycnNpZDcwNzgwMDIgUmlzaW5nIFRyZWV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ0NTkxNjA3XGNoYXJyc2lkNzM1NzUwMiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDU5MTYwNyBXaW5kIEZhcm0gSUkgTExDXGxpbmUgODA4IFRyYXZpcywgU3VpdGUgNzAwXGxpbmUgSG91c3RvbiwgVFggNzcwMDIgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ0NTkxNjA3XGNoYXJyc2lkMTQ2ODI1ODUgQXR0bn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MTkxNzU1XGNoYXJyc2lkMTQ2ODI1ODUgOn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MTkxNzU1XGNoYXJyc2lkMTMxNzY3MTMgICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjcyNTM1IEdlbmVyYWwgQ291bnNlbH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNDU5MTYwN1xjaGFycnNpZDczNTc1MDIgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDU5MTYwNyBGYWNzaW1pbGU6ICAoNzEzKSAyNjUtMDM2NVxsaW5lIEUtbWFpbDogfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI3MjUzNVxjaGFycnNpZDgzNTE0IGxlZ2FsLm5vdGljZXNAZWRwci5jb219e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ1OTE2MDcgDQpccGFyIHdpdGggYSBjb3B5IHRvOlxsaW5lIFxsaW5lIEVEUCBSZW5ld2FibGVzIE5vcnRoIEFtZXJpY2EgTExDXGxpbmUgODA4IFRyYXZpcywgU3VpdGUgNzAwXGxpbmUgSG91c3RvbiwgVFggNzcwMDIgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDU5MTYwN1xjaGFycnNpZDk0NDY3NSBBdHRuOiBHZW5lcmFsIENvdW5zZWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NTkxNjA3IFxsaW5lIA0KRmFjc2ltaWxlOiAgKDcxMykgMjY1LTAzNjVcbGluZSBFLW1haWw6ICBsZXNsaWUuZnJlaW1hbkBlZHByLmNvbVxjZWxsIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NTkxNjA3IFx0cm93ZCBcaXJvdzFcaXJvd2JhbmQxXGx0cnJvdw0KXHRzMTFcdHJnYXBoMTA4XHRybGVmdDQ1MFx0cmZ0c1dpZHRoMVx0cmZ0c1dpZHRoQjNcdHJhdXRvZml0MVx0cnBhZGRsMTA4XHRycGFkZHIxMDhcdHJwYWRkZmwzXHRycGFkZGZ0M1x0cnBhZGRmYjNcdHJwYWRkZnIzXHRibHJzaWQ3MzU3NTAyXHRibGxraGRycm93c1x0Ymxsa2hkcmNvbHNcdGJsbGtub2NvbGJhbmRcdGJsaW5kNTU4XHRibGluZHR5cGUzIFxjbHZlcnRhbHRcY2xicmRydFxicmRydGJsIFxjbGJyZHJsXGJyZHJ0YmwgXGNsYnJkcmINClxicmRydGJsIFxjbGJyZHJyXGJyZHJ0YmwgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMjM0MFxjbHNoZHJhd25pbCBcY2VsbHgyNzkwXGNsdmVydGFsY1xjbGJyZHJ0XGJyZHJ0YmwgXGNsYnJkcmxcYnJkcnRibCBcY2xicmRyYlxicmRydGJsIFxjbGJyZHJyXGJyZHJ0YmwgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoNjY3OFxjbHNoZHJhd25pbCBcY2VsbHg5NDY4XHJvdyBcbHRycm93fVxwYXJkXHBsYWluIFxsdHJwYXINClxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXHl0czExIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NTkxNjA3IEl9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ1OTE2MDdcY2hhcnJzaWQ0NTkxNjA3IGYgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDU5MTYwN1xjaGFycnNpZDcwNzgwMDIgdG8gUmlzaW5nIFRyZWUgSUlJfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDU5MTYwNyA6XGNlbGwgfVxwYXJkXHBsYWluIFxsdHJwYXINClxzMjdccWwgXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxwYXJhcnNpZDUxMzE4ODBceXRzMTEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNDU5MTYwN1xjaGFycnNpZDUxMzE4ODAgUmlzaW5nIFRyZWV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ0NTkxNjA3XGNoYXJyc2lkNzM1NzUwMiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDU5MTYwNyBXaW5kIEZhcm0gSUlJIExMQ1xsaW5lIDgwOCBUcmF2aXMsIFN1aXRlIDcwMFxsaW5lIEhvdXN0b24sIFRYIDc3MDAyXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ0NTkxNjA3XGNoYXJyc2lkOTQ0Njc1IEF0dG59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjE5MTc1NVxjaGFycnNpZDk0NDY3NSA6IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MTkxNzU1ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjcyNTM1IEdlbmVyYWwgQ291bnNlbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNDU5MTYwN1xjaGFycnNpZDk0NDY3NSBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NTkxNjA3IEZhY3NpbWlsZTogICg3MTMpIDI2NS0wMzY1XGxpbmUgRS1tYWlsOiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjcyNTM1XGNoYXJyc2lkODM1MTQgbGVnYWwubm90aWNlc0BlZHByLmNvbX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ1OTE2MDcgDQoNClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTEzMTg4MCB3aXRoIGEgY29weSB0bzpcbGluZSBcbGluZSBFRFAgUmVuZXdhYmxlcyBOb3J0aCBBbWVyaWNhIExMQ1xsaW5lIDgwOCBUcmF2aXMsIFN1aXRlIDcwMFxsaW5lIEhvdXN0b24sIFRYIDc3MDAyIFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDUxMzE4ODBcY2hhcnJzaWQ5NDQ2NzUgQXR0bjogR2VuZXJhbCBDb3Vuc2VsfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1MTMxODgwIFxsaW5lIEZhY3NpbWlsZTogICg3MTMpIDI2NS0wMzY1XGxpbmUgRS1tYWlsOiAgbGVzbGllLmZyZWltYW5AZWRwci5jb219e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NTkxNjA3IFxjZWxsIH1ccGFyZFxwbGFpbiBcbHRycGFyDQpccWwgXGxpMFxyaTBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NTkxNjA3IA0KXHRyb3dkIFxpcm93Mlxpcm93YmFuZDJcbGFzdHJvdyBcbHRycm93XHRzMTFcdHJnYXBoMTA4XHRybGVmdDQ1MFx0cmZ0c1dpZHRoMVx0cmZ0c1dpZHRoQjNcdHJhdXRvZml0MVx0cnBhZGRsMTA4XHRycGFkZHIxMDhcdHJwYWRkZmwzXHRycGFkZGZ0M1x0cnBhZGRmYjNcdHJwYWRkZnIzXHRibHJzaWQ3MzU3NTAyXHRibGxraGRycm93c1x0Ymxsa2hkcmNvbHNcdGJsbGtub2NvbGJhbmRcdGJsaW5kNTU4XHRibGluZHR5cGUzIFxjbHZlcnRhbHQNClxjbGJyZHJ0XGJyZHJ0YmwgXGNsYnJkcmxcYnJkcnRibCBcY2xicmRyYlxicmRydGJsIFxjbGJyZHJyXGJyZHJ0YmwgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMjM0MFxjbHNoZHJhd25pbCBcY2VsbHgyNzkwXGNsdmVydGFsY1xjbGJyZHJ0XGJyZHJ0YmwgXGNsYnJkcmxcYnJkcnRibCBcY2xicmRyYlxicmRydGJsIFxjbGJyZHJyXGJyZHJ0YmwgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoNjY3OFxjbHNoZHJhd25pbCANClxjZWxseDk0Njhccm93IH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkNDU5MTYwNyANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBBbGwgbm90aWNlcyB3aWxsIGJlIGRlZW1lZCBkZWxpdmVyZWQgKGkpXH53aGVuIHByZXNlbnRlZCBwZXJzb25hbGx5LCAoaWkpXH5pZiBnaXZlbiBieSBmYWNzaW1pbGUgb3IgYnkgZS1tYWlsLCBvbiBkaXNwYXRjaCB0byB0aGUgcmVjZWl2aW5nIENvLU93bmVyXHJxdW90ZSBzIGZhY3NpbWlsZSBudW1iZXIgb3IgDQplLW1haWwgYWRkcmVzcyBzcGVjaWZpZWQgYWJvdmUgKHdpdGggY29uZmlybWF0aW9uKSB1bmxlc3MgZGlzcGF0Y2hlZCBhZnRlciB0aGUgcmVjaXBpZW50XHJxdW90ZSANCnMgbm9ybWFsIGJ1c2luZXNzIGhvdXJzIG9uIGEgQnVzaW5lc3MgRGF5IG9yIGRpc3BhdGNoZWQgb24gYW55IGRheSBvdGhlciB0aGFuIGEgQnVzaW5lc3MgRGF5LCBpbiB3aGljaCBjYXNlIHN1Y2ggbm90aWNlIHNoYWxsIGJlIGRlZW1lZCB0byBoYXZlIGJlZW4gZGVsaXZlcmVkIG9uIHRoZSBuZXh0IEJ1c2luZXNzIERheX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzOTc0MjM1IA0KLCBzbyBsb25nIGFzIGEgY29weSBvZiBzdWNoIGZhY3NpbWlsZSBvciBlbWFpbCBpcyBhbHNvIGRlbGl2ZXJlZCBieSBVbml0ZWQgU3RhdGVzIG1haWwsIHBvc3RhZ2UgcHJlcGFpZCwgcmVnaXN0ZXJlZCBvciBjZXJ0aWZpZWQsIHJldHVybiByZWNlaXB0IHJlcXVlc3RlZCwgb3IgYnkgYSBuYXRpb25hbGx5IHJlY29nbml6ZWQgb3Zlcm5pZ2h0IHByaXZhdGUgY291cmllciBzZXJ2aWNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IDsgKGlpaSlcfnVwb24gcmVjZWlwdCBpZiBkZWxpdmVyZWQgYnkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM5NzQyMzUgYSBuYXRpb25hbGx5IHJlY29nbml6ZWQgb3Zlcm5pZ2h0IHByaXZhdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCmNvdXJpZXIgc2VydmljZSB0byBlYWNoIHJlY2VpdmluZyBDby1Pd25lciBhdCB0aGUgYXBwbGljYWJsZSBhZGRyZXNzIHNwZWNpZmllZCBhYm92ZSAob3Igc3VjaCBvdGhlciBhZGRyZXNzIGFzIHRoZSByZWNlaXZpbmcgQ28tT3duZXIgbWF5IGhhdmUgc3BlY2lmaWVkIGJ5IG5vdGljZSBkZWxpdmVyZWQgdG8gdGhlIGRlbGl2ZXJpbmcgQ28tT3duZXIpLCBvciAoaXYpXH4NCmZpdmUgKDUpIGRheXMgYWZ0ZXIgYmVpbmcgZGVwb3NpdGVkIGluIGEgVW5pdGVkIFN0YXRlcyBQb3N0YWwgU2VydmljZSByZWNlcHRhY2xlLCBwb3N0YWdlIHByZXBhaWQsIHJlZ2lzdGVyZWQgb3IgY2VydGlmaWVkLCByZXR1cm4gcmVjZWlwdCByZXF1ZXN0ZWQsIGFkZHJlc3NlZCB0byB0aGUgcmVjZWl2aW5nIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQwNTMwNjIgKHMpfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBhdCB0aGUgYWRkcmVzcyBzcGVjaWZpZWQgYWJvdmUgKG9yIHN1Y2ggb3RoZXIgYWRkcmVzcyBhDQpzIHN1Y2ggcmVjZWl2aW5nIENvLU93bmVyIG1heSBoYXZlIHNwZWNpZmllZCBieSBub3RpY2UgZGVsaXZlcmVkIHRvIHRoZSBkZWxpdmVyaW5nIENvLU93bmVyIGF0IGl0cyBhZGRyZXNzIG9yIGZhY3NpbWlsZSBudW1iZXIgc3BlY2lmaWVkIGFib3ZlKS4gIEEgQ28tT3duZXIgbWF5IGNoYW5nZSBhbnkgb3IgYWxsIG9mIGl0cyBhZGRyZXNzLCBmYWNzaW1pbGUgbnVtYmVyIG9yIGUtbWFpbCBhZGRyZXNzLCB0byB3aGljaCBub3RpY2VzIGFuZCBjb20NCm11bmljYXRpb25zIGFyZSB0byBiZSBzZW50IGJ5IGdpdmluZyBub3RpY2UgYXMgcmVxdWlyZWQgYnkgdGhpcyBTZWN0aW9uXH4xNy4xNS59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzODV9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTcuMThcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBDb3VudGVycGFydHN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzODV9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBUaGlzIEFncmVlbWVudCBtYXkgYmUgZXhlY3V0ZWQgaW4gb25lIG9yIG1vcmUgY291bnRlcnBhcnRzLCBlYWNoIG9mIHdoaWNoIHdpbGwgYmUgYW4gb3JpZ2luYWwgYnV0IGFsbCBvZiB3aGljaCwgdGFrZW4gdG9nZXRoZXIsIHdpbGwgY29uc3RpdHV0ZSBvbmx5IG9uZSBsZWdhbCBpbnMNCnRydW1lbnQuICBJdCB3aWxsIG5vdCBiZSBuZWNlc3NhcnkgaW4gbWFraW5nIHByb29mIG9mIHRoaXMgQWdyZWVtZW50IHRvIHByb2R1Y2Ugb3IgYWNjb3VudCBmb3IgbW9yZSB0aGFuIG9uZSBjb3VudGVycGFydC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzODZ9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczIgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTcuMTlcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBUaW1pbmcgZm9yIFBlcmZvcm1hbmNlfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx2XGNmNlxpbnNyc2lkMjE3NjczNiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzg2fQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgLiAgTm90d2l0aHN0YW5kaW5nIGFueXRoaW5nIGhlcmVpbiB0byB0aGUgY29udHJhcnksIGlmIHRoZSB0aW1lIGZvciBwZXJmb3JtaW5nIGFuIG9ibGlnYXRpb24gdW5kZXIgdGhpcyBBZ3JlZW1lDQpudCBleHBpcmVzIG9uIGEgZGF5IHRoYXQgaXMgbm90IGEgQnVzaW5lc3MgRGF5LCB0aGUgdGltZSBmb3IgcGVyZm9ybWluZyBzaGFsbCBiZSBleHRlbmRlZCB1bnRpbCB0aGF0IHRpbWUgb24gdGhlIG5leHQgQnVzaW5lc3MgRGF5Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzM4N317XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNy4yMFx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IFdhaXZlciBvZiBDb25zZXF1ZW50aWFsIERhbWFnZXN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzODd9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjUzOTc5NCBFQUNIIE9GIFRIRSBDTy1PV05FUlMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQwNTMwNjIgQU5EIE9QRVJBVE9SIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2NTM5Nzk0IEVYUFJFU1NMWSBXQUlWRVMgQU5EIElOIE5PIEVWRU5UIFNIQUxMIEFOWSBPRiBUSEUgDQpDTy1PV05FUlN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDA1MzA2MiAsIE9QRVJBVE9SfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY1Mzk3OTQgDQogT1IgQU5ZIE9GIFRIRUlSIFJFU1BFQ1RJVkUgT0ZGSUNFUlMsIERJUkVDVE9SUywgTUVNQkVSUywgUEFSVE5FUlMsIFNIQVJFSE9MREVSUywgRU1QTE9ZRUVTLCBBR0VOVFMgT1IgQUZGSUxJQVRFUyBCRUNPTUUgTElBQkxFIFRPIFRIRSBPVEhFUiBGT1IgU1BFQ0lBTCwgSU5ESVJFQ1QsIEVYRU1QTEFSWSwgUFVOSVRJVkUgT1IgQ09OU0VRVUVOVElBTCBEQU1BR0VTIE9GIEFOWSBOQVRVUkUgV0hBVFNPRVZFUiBDT04NCk5FQ1RFRCBXSVRIIE9SIFJFU1VMVElORyBGUk9NIFBFUkZPUk1BTkNFIE9SIE5PTi1QRVJGT1JNQU5DRSBPRiBUSElTIEFHUkVFTUVOVCwgT1IgT1RIRVJXSVNFLiAgVEhJUyBXQUlWRVIgSU5DTFVERVMsIFdJVEhPVVQgTElNSVRBVElPTiwgREFNQUdFUyBPUiBDTEFJTVMgSU4gVEhFIE5BVFVSRSBPRiBMT1NUIFJFVkVOVUVTLCBJTkNPTUV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0MjA5NjY5ICwgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjE5MTc1NSBbfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDIwOTY2OSBUQVggUFJFRkVSRU5DRVN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjE5MTc1NSBdIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQxNjE5MTc1NSBbcGxlYXNlIGV4cGxhaW5dfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNjUzOTc5NCAgT1IgUFJPRklUUywgTE9TUyBPRiBVU0UsIE8NClIgQ09TVCBPRiBDQVBJVEFMLCBJUlJFU1BFQ1RJVkUgT0YgV0hFVEhFUiBTVUNIIERBTUFHRVMgQVJFIFJFQVNPTkFCTFkgRk9SRVNFRUFCTEUgQU5EIElSUkVTUEVDVElWRSBPRiBXSEVUSEVSIFNVQ0ggQ0xBSU1TIEFSRSBCQVNFRCBVUE9OIE5FR0xJR0VOQ0UsIFNUUklDVCBMSUFCSUxJVFksIENPTlRSQUNULCBPUEVSQVRJT04gT0YgTEFXIE9SIE9USEVSV0lTRX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLg0KfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzg4fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyIFxydGxjaFxmY3MxIFxhYlxhaVxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE3LjIxXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgU3Vydml2YWx9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHZcY2Y2XGluc3JzaWQyMTc2NzM2IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzODh9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAuICBOb3R3aXRoc3RhbmRpbmcgYW55IG90aGVyIHByb3Zpc2lvbiBvZiB0aGlzIEFncmVlbWVudCwgdGhlIHByb3Zpc2lvbnMgb2YgQXJ0aWNsZSBJLCBTZWN0aW9ucyAyLjIgYW5kIDIuMywgQXJ0aWNsZSBYSUkgKFRheGVzKSwgQXJ0aWNsZSBYViAoSW5kZW1uaWZpY2F0aW9uKSwgYW5kIEFydGljbGUgWFZJSSBzaGFsbCBzdXJ2aXZlIHRoZSB0ZXJtaW5hdGlvbiBvZiB0aGlzIEFncmVlbWVudC59e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzM4OX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDM0Mjg1OSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNy4yMlx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDU5MDgzOCBccnRsY2hcZmNzMSBcYWJcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ0MzQyODU5IE1lbW9yYW5kdW19e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkNDM0Mjg1OSAuICBFYWNoIENvLU93bmVyIGFncmVlcyB0byBzaWduIGFuZCBhY2tub3dsZWRnZSB0aGUgTWVtb3JhbmR1bSBvZiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkMTMzNzU1MTMgUmlzaW5nIFRyZWV9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcdWxub25lXGluc3JzaWQ0MzQyODU5ICBTaGFyZWQgRmFjaWxpdGllcyBBZ3JlZW1lbnQgKH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlxpXHVsbm9uZVxpbnNyc2lkNDM0Mjg1OSBcJzkzTWVtb3JhbmR1bVwnOTR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkNDM0Mjg1OSApIGluIHRoZSBmb3JtIGF0dGFjaGVkIGhlcmV0byBhcyB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcdWxub25lXGluc3JzaWQxMzA3MTE3MCBFeGhpYml0IEd9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkNDM0Mjg1OSAuICBPcGVyYXRvciBzaGFsbCByZWNvcmQgdGhlIE1lbW9yYW5kdW0gcHJvbXB0bHkgaW4gdGhlIE9mZmljZSBvZiB0aGUgQ291bnR5IFJlY29yZGVyIG9mIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQ5MTkyMTU5IEtlcm4gfXtccnRsY2hcZmNzMSBcYWYxIA0KXGx0cmNoXGZjczAgXHVsbm9uZVxpbnNyc2lkNDM0Mjg1OSBDb3VudHksIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQ5MTkyMTU5IENhbGlmb3JuaWEgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bG5vbmVcaW5zcnNpZDQzNDI4NTkgYXQgdGhlIGV4cGVuc2Ugb2YgdGhlIENvLU93bmVyc317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxub25lXGluc3JzaWQyMzIzODk0IC59ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDIzMjM4OTRcY2hhcnJzaWQ3MDc4MDAyIHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzODl9DQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzM5MH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMiBccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjMyMzg5NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNy4yM1x0YWJ9fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjMyMzg5NCBPdGhlciBBZ3JlZW1lbnRzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXHVsbm9uZVxpbnNyc2lkMjMyMzg5NCAuICBUaGUgcmlnaHRzIGFuZCBvYmxpZ2F0aW9ucyBvZiB0aGUgQ28tT3duZXJzIGFuZCBPcGVyYXRvciBoZXJldW5kZXIgYXJlIGluZGVwZW5kZW50IG9mIGFuZCBpbiBhZGRpdGlvbiB0byBhbnkgcmlnaHRzIGFuZCBvYmxpZ2F0aW9ucyBvZiBzdWNoIHBhcnRpZXMgdW5kZXIgdGhlIExHSUEgQ28tVGVuYW5jeSBBZ3JlZW1lbnR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcdWxub25lXGluc3JzaWQ0MzQyODU5IC57XCpcYmtta2VuZCBfVG9jNDA0MDEzMzkwfSAgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkwODM4IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcYlxpbnNyc2lkNTkxODMyOSBTaWduYXR1cmVzIGZvbGxvdyBvbiBuZXh0IHBhZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxN1xxaiBcZmk3NDFcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBccGFnZSBUbyBldmlkZW5jZSBpdHMgYWNjZXB0YW5jZSBvZiB0aGlzIEFncmVlbWVudCwgYW5kIGludGVuZGluZyB0byBiZSBsZWdhbGx5IGJvdW5kLCBlYWNoIENvLU93bmVyIGhhcyBjYXVzZWQgaXRzIGF1dGhvcml6ZWQgcmVwcmVzZW50YXRpdmUgdG8gc2lnbiBiZWxvdyBhcyBvZiB0aGUgZGF0ZSBmaXJzdCB3cml0dGVuIGFib3ZlLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQoNClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczI4XHFsIFxsaTQzMjBccmkwXHNhMjQwXHdpZGN0bHBhclx0cXJcdHg5MjM0XHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW40MzIwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTE2NzMxNTIgUmlzaW5nIFRyZWV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDU5MTgzMjkgIFdpbmQgRmFybSBMTENcbGluZSBcbGluZSBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ1OTE4MzI5IFx0YWIgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBCeTpcbGluZSBUaXRsZTp9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH1ccGFyZCBcbHRycGFyXHMyOFxxbCBcbGk0MzIwXHJpMFxzYTI0MFx3aWRjdGxwYXJcdHFyXHR4OTIzNFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNDMyMFxpdGFwMFxwYXJhcnNpZDExODY0ODM1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxMTg2NDgzNSBcbGluZSBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDExODY0ODM1IFx0YWIgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTE4NjQ4MzUgQnk6XGxpbmUgVGl0bGU6DQpccGFyIH1ccGFyZCBcbHRycGFyXHMyOFxxbCBcbGk0MzIwXHJpMFxzYTI0MFx3aWRjdGxwYXJcdHFyXHR4OTIzNFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNDMyMFxpdGFwMCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTE2NzMxNTIgUmlzaW5nIFRyZWUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQ0MzQyODU5IFdpbmQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQ1OTE4MzI5IEZhcm0gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxMTY3MzE1MiBJSSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcYlxpbnNyc2lkNTkxODMyOSBMTENcbGluZSBcbGluZSBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ1OTE4MzI5IFx0YWIgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBCeTpcbGluZSBUaXRsZTp9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9XHBhcmQgXGx0cnBhclxzMjhccWwgXGxpNDMyMFxyaTBcc2EyNDBcd2lkY3RscGFyXHRxclx0eDkyMzRcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjQzMjBcaXRhcDBccGFyYXJzaWQxMTg2NDgzNSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTE4NjQ4MzUgXGxpbmUgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxMTg2NDgzNSBcdGFiIFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExODY0ODM1IEJ5OlxsaW5lIFRpdGxlOg0KXHBhciB9XHBhcmQgXGx0cnBhclxzMjhccWwgXGxpNDMyMFxyaTBcc2EyNDBcd2lkY3RscGFyXHRxclx0eDkyMzRcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjQzMjBcaXRhcDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDExNjczMTUyIFJpc2luZyBUcmVlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkNTkxODMyOSBXaW5kIEZhcm0gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxMTY3MzE1MiBJSUkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQ1OTE4MzI5IExMQ1xsaW5lIFxsaW5lIFxsaW5lIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNTkxODMyOSBcdGFiIFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgQnk6XGxpbmUgVGl0bGU6fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfVxwYXJkIFxsdHJwYXJcczI4XHFsIFxsaTQzMjBccmkwXHNhMjQwXHdpZGN0bHBhclx0cXJcdHg5MjM0XHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW40MzIwXGl0YXAwXHBhcmFyc2lkMTE4NjQ4MzUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDExODY0ODM1IFxsaW5lIFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTE4NjQ4MzUgXHRhYiBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTg2NDgzNSBCeTpcbGluZSBUaXRsZToNClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyMTc2NzM2IA0KXHBhciBcc2VjdCB9XHNlY3RkIFxsdHJzZWN0XHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XGZvb3RlcnIgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHMyMlxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIA0KXGFmMFxhZnMxNlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQpccGFyIFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxmczI0XGluc3JzaWQzNDM4MDc4IEEtfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcY3MyNFxmczI0XGluc3JzaWQzNDM4MDc4ICBQQUdFIH19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxjczI0XGZzMjRcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ3MzU3NTAyIA0KNn19fVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGZzMjRcaW5zcnNpZDM0MzgwNzggDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDc4NjU1MzMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjkxMzE0MyB7XHNocHtcKlxzaHBpbnN0XHNocGxlZnQwXHNocHRvcDBcc2hwcmlnaHQ0MDMyXHNocGJvdHRvbTQwM1xzaHBmaGRyMVxzaHBieG1hcmdpblxzaHBieGlnbm9yZVxzaHBieXBhcmFcc2hwYnlpZ25vcmVcc2hwd3IzXHNocHdyazBcc2hwZmJsd3R4dDBcc2hwejRcc2hwbGlkMjIzMHtcc3B7XHNuIHNoYXBlVHlwZX17XHN2IDIwMn19e1xzcHtcc24gZkZsaXBIfXtcc3YgMH19e1xzcHtcc24gZkZsaXBWfXtcc3YgMH19DQp7XHNwe1xzbiBsVHhpZH17XHN2IDMyNzY4MH19e1xzcHtcc24gZHhUZXh0TGVmdH17XHN2IDB9fXtcc3B7XHNuIGR5VGV4dFRvcH17XHN2IDB9fXtcc3B7XHNuIGR4VGV4dFJpZ2h0fXtcc3YgMH19e1xzcHtcc24gZHlUZXh0Qm90dG9tfXtcc3YgMH19e1xzcHtcc24gaHNwTmV4dH17XHN2IDIyMzB9fXtcc3B7XHNuIGZGaXRTaGFwZVRvVGV4dH17XHN2IDF9fXtcc3B7XHNuIGZGaWxsZWR9e1xzdiAwfX17XHNwe1xzbiBmTGluZX17XHN2IDB9fQ0Ke1xzcHtcc24gd3pOYW1lfXtcc3YgenptcFRyYWlsZXJfMTA3OF81fX17XHNwe1xzbiBwb3NyZWxofXtcc3YgMH19e1xzcHtcc24gZGhndH17XHN2IDI1MTY1NTE2OH19e1xzcHtcc24gZlBzZXVkb0lubGluZX17XHN2IDB9fXtcc3B7XHNuIGZMYXlvdXRJbkNlbGx9e1xzdiAxfX17XHNocHR4dCBcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJcczQ5XHFsIFxsaTBccmkwXHNsLTIwMFxzbG11bHQwDQpcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggT0hTVVNBOjc1ODI5NjY3Mi4xMCANClxwYXIgDQpccGFyIH19fXtcc2hwcnNsdHtcKlxkb1xkb2J4bWFyZ2luXGRvYnlwYXJhXGRvZGhndDgxOTZcZHB0eGJ4XGRwdHhscnRie1xkcHR4Ynh0ZXh0XGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHM0OVxxbCBcbGkwXHJpMFxzbC0yMDBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIyXGFsYW5nMTAyNSANClxsdHJjaFxmY3MwIFxmczE2XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IE9IU1VTQTo3NTgyOTY2NzIuMTAgDQpccGFyIA0KXHBhciB9fVxkcHgwXGRweTBcZHB4c2l6ZTQwMzJcZHB5c2l6ZTQwM1xkcGZpbGxmZ2NyMjU1XGRwZmlsbGZnY2cyNTVcZHBmaWxsZmdjYjI1NVxkcGZpbGxiZ2NyMjU1XGRwZmlsbGJnY2cyNTVcZHBmaWxsYmdjYjI1NVxkcGZpbGxwYXQwXGRwbGluZWhvbGxvd319fX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ3ODY1NTMzIA0KXHBhciB9fVxwYXJkXHBsYWluIFxsdHJwYXJcczI1XHFjIFxsaTBccmkwXHNhMzAwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhZjFcYWZzMzJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xrZXJuaW5nMjhcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgRVhISUJJVCBBXGxpbmUgU0NIRURVTEUgT0YgREVGSU5JVElPTlN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcYlxpXGluc3JzaWQ1OTE4MzI5IEFkZGl0aW9uYWwgUGhhc2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBtZWFufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMxMTE5MzEgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzM3NTUxMyANCmFkZGl0aW9uYWwgZ2VuZXJhdGlvbiBmYWNpbGl0aWVzIG93bmVkIGJ5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgYSBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMzc1NTEzICx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBpdHMgQWZmaWxpYXRlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTMzNzU1MTMgb3IgYW5vdGhlciBQZXJzb24gdGhhdCBoYXZlIGJlZW4gYXBwcm92ZWQgYnkgdGhlIENvLU93bmVycyB0byBiZSBjb25uZWN0ZWQgdG8gYW5kIHRvIHVzZSB0aGUgU2hhcmVkIEZhY2lsaXRpZXMufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgQWZmZWN0ZWQgUGFydHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzExMTkzMSBoYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB0aGUgbWVhbmluZyBnaXZlbiBpbiBTZWN0aW9uXH43LjEufXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBBZmZpbGlhdGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBtZWFucywgd2l0aCByDQplc3BlY3QgdG8gYW55IENvLU93bmVyLCBhbnkgUGVyc29uIGRpcmVjdGx5IG9yIGluZGlyZWN0bHkgY29udHJvbGxpbmcsIGNvbnRyb2xsZWQgYnkgb3IgdW5kZXIgY29tbW9uIGNvbnRyb2wgd2l0aCBzdWNoIENvLU93bmVyLiAgVGhlIHRlcm0gXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IGNvbnRyb2x9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFwnOTQNCiBhbmQgY29ycmVsYXRpdmUgdGVybXMgaW5jbHVkZXMgdGhlIHBvc3Nlc3Npb24sIGRpcmVjdGx5IG9yIGluZGlyZWN0bHkgYW5kIHdoZXRoZXIgYWN0aW5nIGFsb25lIG9yIGluIGNvbmp1bmN0aW9uIHdpdGggb3RoZXJzLCBvZiB0aGUgYXV0aG9yaXR5IHRvIGRpcmVjdCBvciBjYXVzZSB0aGUgZGlyZWN0aW9uIG9mIHRoZSBtYW5hZ2VtZW50IG9yIHBvbGljaWVzIG9mIGEgUGVyc29uLiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IEFncmVlbWVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIGhhcyB0aGUgbWVhbmluZyBzZXQgZm9ydGggaW4gdGhlIFByZWFtYmxlLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5OTM1OTkgICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBBbm51YWwgTyZNIEJ1ZGdldH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMTExOTMxIGhhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHRoZSBtZWFuaW5nIGdpdmVuIGluIFNlY3Rpb25cfjYuOC59ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IEFwcGxpY2FibGUgTGF3c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIG1lYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzExMTkzMSBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgYWxsIGFwcGxpYw0KYWJsZSBjb25zdGl0dXRpb25hbCBwcm92aXNpb25zLCBzdGF0dXRlcywgYWN0cywgY29kZXMsIGxhd3MsIHJ1bGVzLCByZWd1bGF0aW9ucywgb3JkaW5hbmNlcywgb3JkZXJzLCBpbnRlcnByZXRhdGlvbnMsIHBlcm1pdHMsIHRyZWF0aWVzLCBqdWRnbWVudHMsIGRlY3JlZXMsIHJ1bGluZ3MsIGRlY2lzaW9ucywgaW5qdW5jdGlvbnMsIHdyaXRzIGFuZCBvcmRlcnMgb2YgYSBHb3Zlcm5tZW50YWwgQXV0aG9yaXR5Ln17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgQnVzaW5lc3MgRGF5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgbWVhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMTExOTMxIHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBhDQpueSBkYXkgZXhjZXB0IGEgU2F0dXJkYXksIFN1bmRheSBvciBvdGhlciBkYXlzIG9uIHdoaWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI1MTA5ODIgc3RhdGUgb3IgZmVkZXJhbCBiYW5rcyBpbiBbTG9zIEFuZ2VsZXMsIENhbGlmb3JuaWFdfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCiBhcmUgY2xvc2VkIG9yIGF1dGhvcml6ZWQgdG8gYmUgY2xvc2VkLiAgQSBCdXNpbmVzcyBEYXkgc2hhbGwgYmVnaW4gYXQgODowMCBhLm0uIGFuZCBlbmQgYXQgNTowMCBwLm0uIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI1MTA5ODIgUFBUfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDY2ODg5NDQgQ0FJU08gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMxMTE5MzEgbWVhbnMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjY4ODk0NCB0aGUgQ2FsaWZvcm5pYSBJbmRlcGVuZGVudCBTeXN0ZW0gT3BlcmF0aW9uIENvcnBvcmF0aW9uIG9yIGl0cyBzdWNjZXNzb3IgYWdlbmN5Ln17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjY4ODk0NFxjaGFycnNpZDk0NDY3NSANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDYxNTM5NCBDQUlTTyBUYXJpZmZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MTUzOTQgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMTgwODU2IA0KbWVhbnMgdGhlIENhbGlmb3JuaWEgSW5kZXBlbmRlbnQgU3lzdGVtIE9wZXJhdG9yIENvcnBvcmF0aW9uLCBGaWZ0aCBSZXBsYWNlbWVudCBGRVJDIEVsZWN0cmljIFRhcmlmZiAoT3BlbiBBY2Nlc3MgVHJhbnNtaXNzaW9uIFRhcmlmZiksIGFzIGl0IG1heSBiZSBhbWVuZGVkLCBzdXBwbGVtZW50ZWQgb3IgcmVwbGFjZWQgKGluIHdob2xlIG9yIGluIHBhcnQpIGZyb20gdGltZSB0byB0aW1lLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNjE1Mzk0XGNoYXJyc2lkOTQ0Njc1IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBDYXBpdGFsIEltcHJvdmVtZW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIG1lYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzExMTkzMSBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCiBhbnkgYWRkaXRpb25zLCBtb2RpZmljYXRpb25zIG9yIHN1YnN0aXR1dGlvbnMgdG8gdGhlIFNoYXJlZCBGYWNpbGl0aWVzIG9yIFNoYXJlZCBSZWFsIFByb3BlcnR5IHdoaWNoLCBpbiBhY2NvcmRhbmNlIHdpdGggZ2VuZXJhbGx5IGFjY2VwdGVkIGFjY291bnRpbmcgcHJpbmNpcGxlcywgc2hvdWxkIGJlIGNhcGl0YWxpemVkLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQxNTQyNjE3OCBDaGFuZ2Ugb2YgQ29udHJvbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1NDI2MTc4ICBtZWFuc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NDY3NSAsIHdpdGggcmVzcGVjdCB0byBhbnkgUGVyc29uLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1NDI2MTc4ICB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NDY3NSANCnRoZSBjaGFuZ2UsIGluIG9uZSB0cmFuc2FjdGlvbiBvciBhIHNlcmllcyBvZiB0cmFuc2FjdGlvbnMsIG9mIHRoZSBkaXJlY3Qgb3IgaW5kaXJlY3Qgb3duZXJzaGlwIG9mIGZpZnR5IHBlcmNlbnQgKDUwJSkgb3IgbW9yZSBvZiB0aGUgZXF1aXR5IG93bmVyc2hpcCBpbnRlcmVzdHMgb2Ygc3VjaCBQZXJzb24gb3RoZXIgdGhhbiBzb2xlbHkgZm9yIGZpbmFuY2luZyBwdXJwb3Nlcy4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTQyNjE3OFxjaGFycnNpZDk0NDY3NSANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgQ2xhaW1pbmcgUGFydHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzExMTkzMSBoYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB0aGUgbWVhbmluZyBnaXZlbiBpbiBTZWN0aW9uXH4xNy4yLn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgQ29tbWlzc2lvbmluZyBEYXRlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgbWVhbnMsIGFzIGFwcGxpY2FibGUsIHRoZSBkYXRlIG9mIGNvbW1pc3Npb25pbmcgb2YgdGhlIGZpcnN0IHdpbmQgdHVyYmluZSBvZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNTEwOTgyIHRoZSBGYWNpbGl0eX17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgb3IgQWRkaXRpb25hbCBQaGFzZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI1MTA5ODIgIGluIHF1ZXN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgQ28tT3duZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5ICBDby1Pd25lcnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBoYXMgdGhlIG1lYW5pbmcgZ2l2ZW4gaW4gdGhlIFByZQ0KYW1ibGUufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgQ28tT3duZXIgQ2Vhc2luZyBCdXNpbmVzcyBPcGVyYXRpb25zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMxMTE5MzEgaGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCiB0aGUgbWVhbmluZyBnaXZlbiBpbiBTZWN0aW9uXH44LjEufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgQ3Jvc3MgSW5kZW1uaXRlZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMTExOTMxIGhhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHRoZSBtZWFuaW5nIGdpdmVuIGluIFNlY3Rpb25cfjE1LjIufXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBDcm9zcyBJbmRlbW5pdG9yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMxMTE5MzEgaGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgdGhlIG1lYW5pbmcgZ2l2ZW4gaW4gU2VjdGlvblx+MTUuMi59ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IERlY29tbWlzc2lvbmluZyBPYmxpZ2F0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMxMTE5MzEgaGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgdGhlIG1lYW5pbmcgZ2l2ZW4gaW4gU2VjdGlvblx+DQo4LjEufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgRGVsaXZlcnkgQ2FwYWJpbGl0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMTExOTMxIG1lYW5zIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQp0aGUgYW1vdW50IG9mIGVsZWN0cmljYWwgZW5lcmd5IHRoYXQgY2FuIGJlIGRlbGl2ZXJlZCB0byB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ0Njc1IFBvaW50IG9mIEludGVyY29ubmVjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIGF0IGFueSBpbnN0YW50IG9mIHRpbWUuIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQoNClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgRWZmZWN0aXZlIERhdGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzExMTkzMSBoYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB0aGUgbWVhbmluZyBnaXZlbiBpbiBTZWN0aW9uXH4zLjEufXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBFbWVyZ2VuY3kgQ29uZGl0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMxMTE5MzEgaGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgdGhlIG1lYW5pbmcgZ2l2ZW4gaW4gU2VjdGlvblx+Ni42Ln17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgRW52aXJvbm1lbnRhbCBMYXdzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgbWVhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMTExOTMxIHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBhbGwgQXBwbGljYWJsZSBMYXdzIHJlbGF0aW5nIHRvIChpKVx+DQpmYWNpbGl0eSBzaXRpbmcsIGxhbmQgdXNlIGFuZCBlbnZpcm9ubWVudGFsIG1hdHRlcnM7IChpaSlcfnRoZSBjb250cm9sIG9mIGFueSBwb2xsdXRhbnQsIG9yIHByb3RlY3Rpb24gb2YgdGhlIGFpciwgd2F0ZXIsIG9yIGxhbmQ7IChpaWkpXH5zb2xpZCwgZ2FzZW91cyBvciBsaXF1aWQgd2FzdGUgZ2VuZXJhdGlvbiwgaGFuZGxpbmcsIHRyZWF0bWVudCwgc3RvcmFnZSwgZGlzcG9zYWwgb3IgdHJhbnNwb3J0YXRpb247IChpdilcfg0KZXhwb3N1cmUgdG8gaGF6YXJkb3VzLCB0b3hpYyBvciBvdGhlciBoYXJtZnVsIHN1YnN0YW5jZXM7IGFuZCAodilcfnRoZSBwcm90ZWN0aW9uIGFuZCBlbmhhbmNlbWVudCBvZiB0aGUgZW52aXJvbm1lbnQuICBFbnZpcm9ubWVudGFsIExhd3MgaW5jbHVkZXMgbGF3cyB3aGljaCByZWxhdGVzIHRvIGVudmlyb25tZW50YWwgcXVhbGl0eSwgaGVhbHRoLCBzYWZldHksIHBvbGx1dGkNCm9uLCBjb250YW1pbmF0aW9uLCBjbGVhbnVwLCBvciB0aGUgcHJvdGVjdGlvbiBvZiBodW1hbiBoZWFsdGgsIGFtYmllbnQgYWlyLCB3YXRlcnMgKGluY2x1ZGluZyBncm91bmQgd2F0ZXJzKSBvciBsYW5kLCBhbmQ6IHRoZSBDbGVhbiBBaXIgQWN0LCA0MiBVLlMuQy4gXCdhNzc0MDEgZXQgc2VxLiAoQ0FBKSwgdGhlIENsZWFuIFdhdGVyIEFjdCwgMzMgVS5TLkMuIFwnYTcNCiAxMjUxIGV0IHNlcS4gKENXQSksIHRoZSBOYXRpb25hbCBFbnZpcm9ubWVudGFsIFBvbGljeSBBY3QsIDQyIFUuUy5DLiBcJ2E3IDQzMjEgZXQgc2VxLiwgdGhlIEVuZGFuZ2VyZWQgU3BlY2llcyBBY3QsIDE2IFUuUy5DLiBcJ2E3IDE1MzEgZXQgc2VxLiwgdGhlIFJlc291cmNlIENvbnNlcnZhdGlvbiBSZWNvdmVyeSBBY3QsIDQyIFUuUy5DLiBcJ2E3DQo2OTAxIGV0IHNlcS4gKFJDUkEpLCB0aGUgU2FmZSBEcmlua2luZyBXYXRlciBBY3QuIDQyIFUuUy5DLiBcJ2E3MzAwZiBldCBzZXEuLCB0aGUgQ29tcHJlaGVuc2l2ZSBFbnZpcm9ubWVudGFsIFJlc3BvbnNlLCBDb21wZW5zYXRpb24sIGFuZCBMaWFiaWxpdHkgQWN0IGFzIGFtZW5kZWQgYnkgdGhlIFN1cGVyZnVuZCBBbWVuZG1lbnRzIGFuZCBSZWF1dGhvcml6YXRpb24gQWN0LCAzMiBVLlMuQy4gXCdhNw0KOTYwMSBldCBzZXEuIChDRVJDTEEpLCB0aGUgRmVkZXJhbCBJbnNlY3RpY2lkZSwgRnVuZ2ljaWRlIGFuZCBSb2RlbnRpY2lkZSBBY3QsIDcgVS5TLkMuIFwnYTcgMTM2IGV0IHNlcS4sIHRoZSBIYXphcmRvdXMgU3Vic3RhbmNlcyBUcmFuc3BvcnRhdGlvbiBBY3QsIDQ5IFUuUy5DLiBcJ2E3MTgwMSBldCBzZXEuLCB0aGUgVG94aWMgU3Vic3RhbmNlcyBDb250cm9sIEFjdCwgMTUgVS5TLkMuIFwnYTcNCjI2MDEgZXQgc2VxLiAoVFNDQSksIGFuZCB0aGUgRW1lcmdlbmN5IFBsYW5uaW5nIGFuZCBDb21tdW5pdHkgUmlnaHQtdG8tS25vdyBBY3QsIDQyIFUuUy5DLiBcJ2E3MTEwMDEgZXQgc2VxLiwgYW55IHN0YXRlIG9yIGxvY2FsIGxhd3MgcmVsYXRpbmcgdG8gcGVybWl0cywgbG9jYWwgbGFuZCB1c2UgY29udHJvbCBvcmRpbmFuY2VzIA0Kb3Igc2ltaWxhciBsYXdzLCBhbmQgYW55IHN0YXRlIG9yIGxvY2FsIGxhd3MgaW1wbGVtZW50aW5nIG9yIHN1YnN0YW50aWFsbHkgZXF1aXZhbGVudCB0byB0aGUgZm9yZWdvaW5nIGZlZGVyYWwgcmVxdWlyZW1lbnRzLCBhbmQgb3RoZXIgc2ltaWxhciBsYXdzLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IEV2ZW50IG9mIERlZmF1bHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzExMTkzMSBoYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB0aGUgbWVhbmluZyBhcyBnaXZlbiBpbiBTZWN0aW9uXH4xMy4xLn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgRXh0cmFvcmRpbmFyeSBNYWludGVuYW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMTExOTMxIGhhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHRoZSBtZWFuaW5nIGdpdmVuIGluIFNlY3Rpb25cfg0KNi45Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IEZhY2lsaXR5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBoYXZlIHRoZSBtZWFuaW5ncyBnaXZlbiBpbiBSZWNpdGFsIA0KfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjUxMDk4MiBCfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTIwODU5NDYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQxMjA4NTk0NiBGRVJDfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTIwODU5NDYgIG1lYW5zIHRoZSBGZWRlcmFsIEVuZXJneSBSZWd1bGF0b3J5IENvbW1pc3Npb24gYW5kIGFueSBzdWNjZXNzb3IufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDg0Njk5MDBcY2hhcnJzaWQ4NDY5OTAwIEZpYmVyIE9wdGljIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ4NDY5OTAwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzExMTkzMSBoYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ4NDY5OTAwIA0KIHRoZSBtZWFuaW5nIGdpdmVuIGluIEV4aGliaXQgQi59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ4NDY5OTAwXGNoYXJyc2lkODQ2OTkwMCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgRm9yY2UgTWFqZXVyZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIG1lYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzExMTkzMSBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCiBhbiBldmVudCBvciBjaXJjdW1zdGFuY2Ugd2hpY2ggcHJldmVudHMgYSBDby1Pd25lciBmcm9tIHBlcmZvcm1pbmcgaXRzIG9ibGlnYXRpb25zIHVuZGVyIHRoaXMgQWdyZWVtZW50LCB3aGljaCBldmVudCBvciBjaXJjdW1zdGFuY2UgaXMgbm90IHdpdGhpbiB0aGUgcmVhc29uYWJsZSBjb250cm9sIG9mLCBvciBhIHJlc3VsdCBvZiB0aGUgbmVnbGlnZW5jZSBvZiwgdGhlIENsYWltaW5nIFBhcnR5LCBhbmQgd2hpY2gsIGJ5IHRoZSBleGVyY2lzZQ0KIA0Kb2YgY29tbWVyY2lhbGx5IHJlYXNvbmFibGUgZWZmb3J0cywgdGhlIENsYWltaW5nIFBhcnR5IGlzIHVuYWJsZSB0byBvdmVyY29tZSBvciBhdm9pZCBvciBjYXVzZSB0byBiZSBhdm9pZGVkLiAgRm9yY2UgTWFqZXVyZSBpbmNsdWRlcyB0aGUgZm9sbG93aW5nOiBmaXJlczsgc3Rvcm1zOyBlYXJ0aHF1YWtlczsgZmxvb2RzOyBsaWdodG5pbmc7IGxhbmRzbGlkZXM7IHZvbGNhbmljIGVydXB0aW9uczsgaHVycmljYW5lczsgdGlkYWwgd2F2ZXM7IGVwDQppDQpkZW1pY3M7IGV4cGxvc2lvbnM7IGN5Y2xvbmVzOyB0b3JuYWRvZXM7IGFjdHMgb2YgR29kOyB0ZW1wZXN0czsgb3RoZXIgbmF0dXJhbCBkaXNhc3RlcnM7IHN0cmlrZXMsIHdvcmsgc3RvcHBhZ2VzLCB3YWxrb3V0cywgbG9ja291dHMgYW5kIG90aGVyIGxhYm9yIGRpZmZpY3VsdGllczsgY2l2aWwgZGlzdHVyYmFuY2VzOyBzYWJvdGFnZTsgdmFuZGFsaXNtOyBsYWJvciwgbWF0ZXJpYWwgYW5kIGVxdWlwbWVudCBzaG9ydGFnZXMgKGluY2x1ZGluZyANCnNwYXJlIHBhcnRzIHNob3J0YWdlcyk7IGVxdWlwbWVudCBmYWlsdXJlIG9yIGJyZWFrZG93bjsgaW50ZXJydXB0aW9ucyB0byB0cmFuc3BvcnRhdGlvbjsgYWN0cyBvZiBtaWxpdGFyeSBhdXRob3JpdGllczsgY291cnQgYWN0aW9uczsgd2FyIChkZWNsYXJlZCBvciBub3QpOyByaW90OyBwdWJsaWMgZGlzb3JkZXI7IGNvbmRlbW5hdGlvbiBvZiBwcm9wZXJ0eTsgcXVhcmFudGluZTsgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ5NDQ2NzUgYWN0aW9ucywgZmFpbHVyZXMgdG8gYWN0IG9yIGRlbGF5cyBpbiBhY3RpbmcgYnkgYW55IEdvdmVybm1lbnRhbCBBdXRob3JpdHk7IGFuZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KbGF0ZSBkZWxpdmVyeSBvciBub24tZGVsaXZlcnkgb2YgbWFjaGluZXJ5LCBlcXVpcG1lbnQsIGZ1ZWwsIG1hdGVyaWFscywgY29tcG9uZW50cywgcGFydHMgb3IgY29uc3VtYWJsZXMgYW5kIGRlbGF5IGluIHRoZSBwZXJmb3JtYW5jZSBvciB0aGUgbm9uLXBlcmZvcm1hbmNlIGJ5IGEgQ28tT3duZXJccnF1b3RlIHMgY29udHJhY3RvcnMgb3Igc3ViY29udHJhY3RvcnMsIGluIGVhY2ggY2FzZSBhcyBhIHJlc3VsdCBvZiBhbiB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NDY3NSBldmVudCBvciBvY2N1cnJlbmNlIHRoYXQgaXMgb3RoZXJ3aXNlIGFuIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgZXZlbnQgb2YgRm9yY2UgTWFqZXVyZS4gIEEgQ28tT3duZXIgd2lsbCBub3QgY2xhaW0gRm9yY2UgTWFqZXVyZSBiYXNlZCBvbiAoaSlcfnRoZSBsb3NzIG9mIG1hcmtldCBmb3IgYSBGYWNpbGl0eVxycXVvdGUgDQpzIGVsZWN0cmljYWwgb3V0cHV0LCAoaWkpXH50aGUgZWNvbm9taWMgaW5mZWFzaWJpbGl0eSBvZiBnZW5lcmF0aW5nIGVsZWN0cmljaXR5IGZyb20gYSBDby1Pd25lclxycXVvdGUgcyBGYWNpbGl0eSwgb3IgKGlpaSlcfml0cyBpbmFiaWxpdHkgdG8gbWFrZSBhIHBheW1lbnQgb2JsaWdhdGlvbi59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkMzIyODgzNSBGUEF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzMjI4ODM1ICBtZWFucyB0aGUgRmVkZXJhbCBQb3dlciBBY3QsIGFzIGFtZW5kZWQsIGFuZCB0aGUgcmVndWxhdGlvbnMgb2YgRkVSQyB0aGVyZXVuZGVyLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMyMjg4MzVcY2hhcnJzaWQzMjI4ODM1IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBHb29kIFV0aWxpdHkgUHJhY3RpY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBtZWFufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMxMTE5MzEgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQogYW55IG9mIHRoZSBwcmFjdGljZXMsIG1ldGhvZHMgYW5kIGFjdHMgZW5nYWdlZCBpbiBvciBhcHByb3ZlZCBieSBhDQogc2lnbmlmaWNhbnQgcG9ydGlvbiBvZiB0aGUgZWxlY3RyaWMgdXRpbGl0eSBpbmR1c3RyeSBkdXJpbmcgdGhlIHJlbGV2YW50IHRpbWUgcGVyaW9kLCBvciBhbnkgb2YgdGhlIHByYWN0aWNlcywgbWV0aG9kcyBhbmQgYWN0cyB3aGljaCwgaW4gdGhlIGV4ZXJjaXNlIG9mIHJlYXNvbmFibGUganVkZ21lbnQgaW4gbGlnaHQgb2YgdGhlIGZhY3RzIGtub3duIGF0IHRoZSB0aW1lIHRoZSBkZWNpc2lvbiB3YXMgbWFkZSwgY291bGQgaGF2ZSBiZWVuIGUNCngNCnBlY3RlZCB0byBhY2NvbXBsaXNoIHRoZSBkZXNpcmVkIHJlc3VsdCBhdCBhIHJlYXNvbmFibGUgY29zdCBjb25zaXN0ZW50IHdpdGggZ29vZCBidXNpbmVzcyBwcmFjdGljZXMsIHJlbGlhYmlsaXR5LCBzYWZldHkgYW5kIGV4cGVkaXRpb24uICBHb29kIFV0aWxpdHkgUHJhY3RpY2UgaXMgbm90IGludGVuZGVkIHRvIGJlIGxpbWl0ZWQgdG8gdGhlIG9wdGltdW0gcHJhY3RpY2UsIG1ldGhvZCBvciBhY3QgdG8gdGhlIGV4Y2x1c2lvbiBvZiBhbGwgbw0KdA0KaGVycywgYnV0IHJhdGhlciB0byBiZSBhY2NlcHRhYmxlIHByYWN0aWNlcywgbWV0aG9kcyBvciBhY3RzIGdlbmVyYWxseSBhY2NlcHRlZCBpbiB0aGUgcmVnaW9uIGluIHdoaWNoIHRoZSBGYWNpbGl0aWVzIGFyZSBsb2NhdGVkLiAgR29vZCBVdGlsaXR5IFByYWN0aWNlIHNoYWxsIGluY2x1ZGUsIGJ1dCBub3QgYmUgbGltaXRlZCB0bywgTkVSQyBjcml0ZXJpYSwgcnVsZXMsIGd1aWRlbGluZXMgYW5kIHN0YW5kYXJkcywgY3JpdGVyaWEsIHJ1bGVzDQosIGd1aWRlbGluZXMgYW5kIHN0YW5kYXJkcywgYW5kIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NDY3NSB0aGUgQ0FJU09ccnF1b3RlIHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KIGNyaXRlcmlhLCBydWxlcywgZ3VpZGVsaW5lcyBhbmQgc3RhbmRhcmRzLCB3aGVyZSBhcHBsaWNhYmxlLCBhcyB0aGV5IG1heSBiZSBhbWVuZGVkIGZyb20gdGltZSB0byB0aW1lLCBpbmNsdWRpbmcgdGhlIHJ1bGVzLCBndWlkZWxpbmVzIGFuZCBjcml0ZXJpYSBvZiBhbnkgc3VjY2Vzc29yIG9yZ2FuaXphdGlvbiB0byB0aGUgZm9yZWdvaW5nIGVudGl0aWVzLiAgV2hlbiBhcA0KcGxpZWQgdG8gdGhlIENvLU93bmVycyBpbiB0aGVpciBvcGVyYXRpb24gb2YgdGhlaXIgRmFjaWxpdGllcywgdGhlIHRlcm0gR29vZCBVdGlsaXR5IFByYWN0aWNlIHNoYWxsIGFsc28gaW5jbHVkZSBzdGFuZGFyZHMgYXBwbGljYWJsZSB0byBhbiBpbmRlcGVuZGVudCBwb3dlciBwcm9kdWNlciBjb25uZWN0aW5nIHRvIHRoZSBkaXN0cmlidXRpb24gb3IgdHJhbnNtaXNzaW9uIGZhY2lsaXRpZXMgb3Igc3lzdGVtIG9mIGEgdXRpbGl0eS59ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IEdvdmVybm1lbnRhbCBBdXRob3JpdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBtZWFufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMxMTE5MzEgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQogYW55IGZlZGVyYWwsIHN0YXRlLCBsb2NhbCwgdHJpYmFsIG9yIGZvcmVpZ24gZ292ZXJubWVudGFsIGF1dGhvcml0eSAoaW5jbHVkaW5nIGFueSByZWd1bGF0b3J5IGF1dGhvcml0eSk7IGEgc3RhdGUsIHByb3ZpbmNlLCBjb21tb253ZWFsdGgsIHRlcnJpdG9yeSBvciBkaXN0cmljdCB0aGVyZW9mOyBhIGNvdW50eSBvciBwYXJpc2g7IGEgY2l0eSwgdG93biwgdG93bnNoaXAsIHZpbGxhZ2Ugb3Igb3RoZXIgbXVuDQppY2lwYWxpdHk7IGEgZGlzdHJpY3QsIHdhcmQgb3Igb3RoZXIgc3ViZGl2aXNpb24gb2YgYW55IG9mIHRoZSBmb3JlZ29pbmc7IGFuIGV4ZWN1dGl2ZSwgbGVnaXNsYXRpdmUgb3Igb3RoZXIgZ292ZXJuaW5nIGJvZHkgb2YgYW55IG9mIHRoZSBmb3JlZ29pbmc7IGFueSBhZ2VuY3ksIGF1dGhvcml0eSwgYm9hcmQsIGRlcGFydG1lbnQsIHN5c3RlbSwgc2VydmljZSwgb2ZmaWNlLCBjb21taXNzaW9uLCBjb21taXR0ZWUsIGNvdW5jaWwgb3Igb3RoZXINCiBhZG1pbmlzdHJhdGl2ZSBib2R5IG9mIGFueSBvZiB0aGUgZm9yZWdvaW5nOyBhbnkgY291cnQgb3Igb3RoZXIganVkaWNpYWwgYm9keTsgYW5kIGFueSBvZmZpY2VyLCBvZmZpY2lhbCBvciBvdGhlciByZXByZXNlbnRhdGl2ZSBvZiBhbnkgb2YgdGhlIGZvcmVnb2luZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwNTE2NTg1IA0KLCBvciBxdWFzaS1nb3Zlcm5tZW50YWwgZW50aXR5IGFjdGluZyB1bmRlciBkZWxlZ2F0ZWQgYXV0aG9yaXR5LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIGhhdmluZyBvciBhc3NlcnRpbmcganVyaXNkaWN0aW9uIG92ZXIgYSBDby1Pd25lciwgdGhlIHN1YmplY3QgbWF0dGVyIG9mIHRoaXMgQWdyZWVtZW50LCBvciB0aGlzIEFncmVlbWVudC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH1ccGFyZCBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ4NjY3MiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ4NjY3MiBHcmFudGluZyBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDg2NjcyIA0KIGhhcyB0aGUgbWVhbmluZyBnaXZlbiBpbiBTZWN0aW9uXH40LjEuDQpccGFyIH1ccGFyZCBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBIYXphcmRvdXMgTWF0ZXJpYWxzIExhd3N9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBtZWFufXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxMzExMTkzMSBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgYW55IGFwcGxpY2FibGUgbGF3IG9yIHJlZ3VsYXRpb24gcmVsYXRpbmcgdG8gYW55IHN1YnN0YW5jZSwgbWF0ZXJpYWwgb3Igd2FzdGUgY2xhc3NpZmllZCBhcyBoYXphcmRvdXMgb3IgdG94aWMsIG9yIHdoaWNoIGlzIHJlZ3VsYXRlZCBhcyB3YXN0ZS59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IEluZGVtbml0ZWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMxMTE5MzEgaGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgdGhlIG1lYW5pbmcgZ2l2ZW4gaW4gU2VjdGlvblx+MTUuMS59ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IEluZGVtbml0b3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzExMTkzMSBoYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB0aGUgbWVhbmluZyBnaXZlbiBpbiBTZWN0aW9uXH4xNS4xLiB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IEludGVyY29ubmVjdGlvbiBBZ3JlZW1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjY2Mzg1MSBtZWFufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMxMTE5MzEgc317XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTY2NjM4NTEgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIwNDI1MzAgdGhhdCBjZXJ0YWluIExhcmdlIEdlbmVyYXRvciBJbnRlcmNvbm5lY3Rpb24gQWdyZWVtZW50IGRhdGVkIGFzIG9mIE1hcmNoIDI3LCANCjIwMTMsIGJ5IGFuZCBhbW9uZyB0aGUgQ0FJU08sIHRoZSBUcmFuc21pc3Npb24gT3duZXIsIHRoZSBDby1Pd25lcnMgKGluIHRoZSBjYXNlIG9mIFJpc2luZyBUcmVlIElJSSwgYXMgc3VjY2Vzc29yIHRvIEFkZGlzb24gV2luZCBSZXNvdXJjZXMsIExMQyksIGFuZCBSaXNpbmcgVHJlZSBJLCBhcyBtYW5hZ2VyLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IExhc3QgVXNlIE5vdGljZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMTExOTMxIGhhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHRoZSBtZWFuaW5nIGdpdmVuIGluIFNlY3Rpb25cfjguMS59ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IExhdGUgUGF5bWVudCBSYXRlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgaGFzIHRoZSBtZWFuaW5nIHNldCBmb3J0aCBpbiBTZWN0aW9uXH42LjEwLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IExlbmRlcnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzExMTkzMSBoYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB0aGUgbWVhbmluZyBnaXZlbiBpbiBTZWN0aW9uXH4xNC4xLn17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgTGVuZGVyXHJxdW90ZSBzIExpZW5zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMxMTE5MzEgaGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgdGhlIG1lYW5pbmcgZ2l2ZW4gaW4gU2VjdGlvblx+MTQuMS4gDQp9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkMjA0MjUzMCBMR0lBIENvLVRlbmFuY3kgQWdyZWVtZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjA0MjUzMCAgaGFzIHRoZSBtZWFuaW5nIGdpdmVuIGluIFJlY2l0YWwgRC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMDQyNTMwXGNoYXJyc2lkNzA3ODAwMiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgTGluZSBMb3NzZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBtZWFufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMxMTE5MzEgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIGxvc3Mgb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNzEyMTY0IGVsZWN0cmljIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgZW5lcmd5IHRyYW5zbWl0dGVkIG9uIFRyYW5zbWlzc2lvbiBMaW5lLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQxMzU4OTIwMFxjaGFycnNpZDEzNTg5MjAwIExvc3Nlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzNTg5MjAwICBoYXMgdGhlIG1lYW5pbmcgZ2l2ZW4gaW4gU2VjdGlvbiAxNS4xLg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBNYXRlcmlhbCBQcm9qZWN0IEFncmVlbWVudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBtZWFufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMxMTE5MzEgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjUxMDk4MiB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBJbnRlcmNvbm5lY3Rpb24gQWdyZWVtZW50LCB0aGlzIEFncmVlbWVudCwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU3NjEyNjQgdGhlIExHSUEgQ28tVGVuYW5jeSBBZ3JlZW1lbnQsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQpwdXJjaGFzZSBvciB3YXJyYW50eSBhZ3JlZW1lbnRzIHJlbGF0aW5nIHRvIFNoYXJlZCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEyMjg4MjQgLCBhbmQgY2VydGFpbiBvdGhlciBhZ3JlZW1lbnRzIHJlbGF0ZWQgdG8gdGhlIGNvbnN0cnVjdGlvbiwgb3BlcmF0aW9uIGFuZCB1c2Ugb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzLCBhcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDEzMDcxMTcwIHNldCBmb3J0aCBvbiBFeGhpYml0IEQsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgYW5kIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMDcxMTcwIHN1Y2ggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCm90aGVyIGFncmVlbWVudHMgdG8gYmUgaW5jbHVkZWQgdXBvbiB0aGUgbXV0dWFsIGFncmVlbWVudCBvZiB0aGUgQ28tT3duZXJzLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTA4MzhcY2hhcnJzaWQ1OTA4MzggTWVtb3JhbmR1bX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQzNDI4NTkgIGhhcyB0aGUgbWVhbmluZyBnaXZlbiBpbiBTZWN0aW9uIDE3LjIwLiAgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ0NjA3ODk0IE1ldGVyZWQgRW5lcmd5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDYwNzg5NCAgbWVhbnMgdGhlIGFtb3VudCBvZiBlbGVjdHJpYyBlbmVyZ3kgbWVhc3VyZWQgYXQgYSBnaXZlbiBwb2ludCwgc3VjaCBhcyBhdCB0aGUgb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNDYwNzg5NFxjaGFycnNpZDEzMTc2NzEzIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBNV317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIG1lYW5zIG1lZ2F3YXR0cy59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBORVJDIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgbWVhbnMgdGhlIE5vcnRoIEFtZXJpY2FuIEVsZWN0cmljIFJlbGlhYmlsaXR5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE3MTIxNjQgQ29ycG9yYXRpb24gYW5kIGl0cyBzdWNjZXNzb3JzfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBOb24tQ3VyYWJsZSBEZWZhdWx0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMTExOTMxIGhhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHRoZSBtZWFuaW5nIGdpdmVuIGluIFNlY3Rpb25cfjE0LjUufXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBOb24tRGVmYXVsdGluZyBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMTExOTMxIGhhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHRoZSBtZWFuaW5nIGdpdmVuIGluIFNlY3Rpb25cfg0KMTMuMi59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTQyNjE3OCAzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgTyZNIENvc3RzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMxMTE5MzEgaGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgdGhlIG1lYW5pbmcgZ2l2ZW4gaW4gU2VjdGlvblx+Ni43LiAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBPJk0gRmFjaWxpdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBtZWFucyBhbiBvcGVyYXRpb24gYW5kIG1haW50ZW5hbmNlIGJ1aWxkaW5nIGFuZCByZWxhdGVkIGZhY2lsaXRpZXMgZm9yIGEgRmFjaWxpdHksIGluY2x1ZGluZyBlcXVpcG1lbnQgYW5kIHN5c3RlbXMgaG91c2VkIHRoZXJlaW4ufXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBPJk0gU2VydmljZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzExMTkzMSBoYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB0aGUgbWVhbmluZyBnaXZlbiBpbiBTZWN0aW9uXH42LjEuIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgTyZNIFNlcnZpY2VzIENvbW1lbmNlbWVudCBEYXRlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMxMTE5MzEgaGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCiB0aGUgbWVhbmluZyBnaXZlbiBpbiBTZWN0aW9uXH42LjMufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgT3BlcmF0b3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBtZWFufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMxMTE5MzEgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHRoZSBDby1Pd25lciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI1MTA5ODIgb3Igb3RoZXIgUGVyc29uIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQplbmdhZ2VkIGJ5IHRoZSBDby1Pd25lcnMgdG8gbWFuYWdlLCBvcGVyYXRlLCBtYWludGFpbiBhbmQgcmVwYWlyIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBhbmQgdG8gcGVyZm9ybSBvdGhlciBkdXRpZXMgcGVydGFpbmluZyB0byB0aGUgU2hhcmVkIEFzc2V0cyBhcyBzZXQgZm9ydGggaW4gdGhlIEFncmVlbWVudC4gICBUaGUgT3BlcmF0b3Igc2hhbGwgaW5pdGlhbGx5IGJlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjUxMDk4MiBSaXNpbmcgVHJlZSBJfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ0OTA1OSAgb3IgYW4gQWZmaWxpYXRlIGRlc2lnbmF0ZWQgYnkgaXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICwgc3ViamVjdCB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTQyNjE3OCByZXBsYWNlbWVudCB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgcHVyc3VhbnQgdG8gU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1NDI2MTc4IHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFx+fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU0MjYxNzggNi4xNyBhbmQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCjEzLjIuMi59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBPd25lcnNoaXAgSW50ZXJlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBtZWFufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMxMTE5MzEgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgDQogdGhlIHVuZGl2aWRlZCBpbnRlcmVzdCBvZiBhIENvLU93bmVyIGluIGEgU2hhcmVkIEFzc2V0IEdyb3VwLCBhcyBzZXQgZm9ydGggaW4gRXhoaWJpdCBCLiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBQZXJmb3JtYW5jZSBTdGFuZGFyZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIGhhcyB0aGUgbWVhbmluZyBnaXZlbiBpbiBTZWN0aW9uXH42LjIufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDIzMjM4OTQgUGVybWl0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjMyMzg5NCAgbWVhbnMgYW55IHBlcm1pdCwgbGljZW5zZSwgYXBwcm92YWwsIGNvbnNlbnQsIHJpZ2h0IHRvIHVzZSwgZnJhbmNoaXNlIG9yIHNpbWlsYXIgYXV0aG9yaXphdGlvbiBmcm9tIGFueSBHb3Zlcm5tZW50YWwgQXV0aG9yaXR5Ln17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjMyMzg5NFxjaGFycnNpZDcwNzgwMDIgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IFBlcm1pdHRlZCBBc3NpZ25lZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMTExOTMxIGhhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHRoZSBtZWFuaW5nIGdpdmVuIGluIFNlY3Rpb25cfn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU0MjYxNzggMTcuM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExODkzNzkwIC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBQZXJzb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBtZWFucyBhbnkgbmF0dXJhbCBwZXJzb24sIGNvcnBvcg0KYXRpb24sIGdlbmVyYWwgcGFydG5lcnNoaXAsIGxpbWl0ZWQgcGFydG5lcnNoaXAsIGxpbWl0ZWQgbGlhYmlsaXR5IGNvbXBhbnksIHByb3ByaWV0b3JzaGlwLCBvdGhlciBidXNpbmVzcyBvcmdhbml6YXRpb24sIHRydXN0LCB1bmlvbiwgYXNzb2NpYXRpb24gb3IgR292ZXJubWVudGFsIEF1dGhvcml0eS59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBQb2ludCBvZiBJbnRlcmNvbm5lY3Rpb24gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjY0NjA1NyBtZWFufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMxMTE5MzEgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY2NDYwNTcgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkODY2NzIgdGhlIHBvaW50IGF0IHdoaWNoIHRoZSBUcmFuc21pc3Npb24gTGluZSBpbnRlcmNvbm5lY3RzIHRvIHRoZSBTb3V0aGVybiBDYWxpZm9ybmlhIEVkaXNvbiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NjI1MzYgMjIwIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDg2NjcyIA0Ka1YgV2luZCBIdWIgU3Vic3RhdGlvbiwgYXMgbW9yZSBwYXJ0aWN1bGFybHkgZGVzY3JpYmVkIGluIHRoZSBJbnRlcmNvbm5lY3Rpb24gQWdyZWVtZW50Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH1ccGFyZCBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ4NDgyMzM2IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDI1MTA5ODIgUFBUIG9yIFByZXZhaWxpbmcgUGFjaWZpYyBUaW1lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjUxMDk4MiANCiBtZWFucyB0aGUgdGhlbiBhcHBsaWNhYmxlIHRpbWUgaW4gdGhlIFBhY2lmaWMgdGltZSB6b25lLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI1MTA5ODJcY2hhcnJzaWQ5NDQ2NzUgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ4NDgyMzM2IFByb2plY3QgU3Vic3RhdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDg0ODIzMzYgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMTExOTMxIG1lYW5zIHRoZSBcJzkzUHJvamVjdCBTdWJzdGF0aW9uXCc5NCBhcyBkZXNjcmliZWQgb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDg0ODIzMzYgIEV4aGliaXQgQi4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IFByb3BvcnRpb25hdGUgU2hhcmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IA0KIG1lYW5zLCBhcyBhcHBsaWVkIHdpdGggcmVzcGVjdCB0byB0aGUgc2hhcmluZyBhbmQgYWxsb2NhdGlvbiBvZiBjb3N0cywgcmlnaHRzLCBpbnRlcmVzdCwgb2JsaWdhdGlvbnMgYW5kL29yIGxpYWJpbGl0aWVzIHJlbGF0ZWQgdG8gYSBTaGFyZWQgQXNzZXRzIEdyb3VwIGFtb25nIGl0cyBDby1Pd25lcnMsIHRoZSBwcm9wb3J0aW9uIG9mIGEgRmFjaWxpdHlccnF1b3RlIA0KcyBpbnN0YWxsZWQgbmFtZXBsYXRlIGNhcGFjaXR5IGNvbm5lY3RlZCB0byBzdWNoIFNoYXJlZCBBc3NldHMgR3JvdXAgYmVhcnMgdG8gdGhlIGFnZ3JlZ2F0ZSBpbnN0YWxsZWQgbmFtZXBsYXRlIGNhcGFjaXR5IG9mIGFsbCBzdWNoIEZhY2lsaXRpZXMgdXNpbmcgc3VjaCBTaGFyZWQgQXNzZXRzIGF0IHRoZSB0aW1lOyBwcm92aWRlZCB0aGF0LCBmb3IgdGhlIHB1cnBvc2Ugb2Ygc3VjaCBjYWxjdWxhdGlvbiwgdGhlIGluc3RhbGxlZCBuDQphbWVwbGF0ZSBjYXBhY2l0eSBvZjogICgxKSBhbnkgRmFjaWxpdHkgdGhhdCBoYXMgbm90IHlldCBhY2hpZXZlZCBpdHMgQ29tbWlzc2lvbmluZyBEYXRlIHNoYWxsIGJlIGRlZW1lZCB0byBiZSAwIE1XOyBhbmQgKDIpIGFueSBGYWNpbGl0eSB0aGF0IGhhcyBhY2hpZXZlZCBpdHMgQ29tbWlzc2lvbmluZyBEYXRlIHNoYWxsIGJlIGRlZW1lZCB0byBiZSB0aGUgcG9ydGlvbiBvZiB0aGUgZXhwZWN0ZWQgbmFtZXBsYXRlIGNhcGFjaXR5IHNldCBmb3INCnRoIGluIFJlY2l0YWwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY2NjM4NTEgQiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IHRoYXQgaXMgZXhwZWN0ZWQgdG8gYmUgY29ubmVjdGVkIHRvIHN1Y2ggU2hhcmVkIEFzc2V0cyBHcm91cC4gIEluIHRoaXMgQWdyZWVtZW50LCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDg5MjU5OSANCmV4Y2VwdCBhcyBvdGhlcndpc2UgZXhwcmVzc2x5IHByb3ZpZGVkLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IGEgcmVmZXJlbmNlIHRvIGEgUHJvcG9ydGlvbmF0ZSBTaGFyZSB3aXRoIHJlc3BlY3QgdG8gYSBnaXZlbiBDby1Pd25lciBzaGFsbCBtZWFuIHRoZSBQcm9wb3J0aW9uYXRlIFNoYXJlIG9mIHN1Y2ggQ28tT3duDQplciBpbiBlYWNoIG9mIHRoZSBTaGFyZWQgQXNzZXRzIEdyb3VwcyBpbiB3aGljaCBzdWNoIENvLU93bmVyIGhhcyBhbiBVbmRpdmlkZWQgVXNlIEludGVyZXN0Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH1ccGFyZCBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQyNzYxMjk3IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDI3NjEyOTcgUlNUfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDI3NjEyOTdcY2hhcnJzaWQxMDE5MDQ1NiANCiBJIEZhY2lsaXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2MTI5NyAgbWVhbnMgdGhlIHBvcnRpb24gb2YgdGhlIFJpc2luZyBUcmVlIFdpbmQgRmFybSBvd25lZCBieSBSaXNpbmcgVHJlZSBJLiAgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQyNzYxMjk3IFJTVH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQyNzYxMjk3XGNoYXJyc2lkMTAxOTA0NTYgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQyNzYxMjk3IEl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkMjc2MTI5N1xjaGFycnNpZDEwMTkwNDU2IEkgRmFjaWxpdHl9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjEyOTcgIG1lYW5zIHRoZSBwb3J0aW9uIG9mIHRoZSBSaXNpbmcgVHJlZSBXaW5kIEZhcm0gb3duZWQgYnkgUmlzaW5nIFRyZWUgSUkuICANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDI3NjEyOTcgUlNUfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDI3NjEyOTdcY2hhcnJzaWQxMDE5MDQ1NiAgSX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQyNzYxMjk3IElJfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDI3NjEyOTdcY2hhcnJzaWQxMDE5MDQ1NiAgRmFjaWxpdHl9DQp7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjEyOTcgIG1lYW5zIHRoZSBwb3J0aW9uIG9mIHRoZSBSaXNpbmcgVHJlZSBXaW5kIEZhcm0gb3duZWQgYnkgUmlzaW5nIFRyZWUgSUlJLiAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNjY2Mzg1MSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQxNjY2Mzg1MSBSU1QgU2hhcmVkIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjY2Mzg1MSAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzExMTkzMSBoYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjY2Mzg1MSAgdGhlIG1lYW5pbmcgZ2l2ZW4gaW4gRXhoaWJpdCBCLg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkMTY2NjM4NTEgUlNUIEkvSUkgU2hhcmVkIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjY2Mzg1MSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMxMTE5MzEgaGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY2NjM4NTEgDQogdGhlIG1lYW5pbmcgZ2l2ZW4gaW4gRXhoaWJpdCBCLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgU2VjdXJpdHkgQXNzZXRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxMzExMTkzMSBoYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB0aGUgbWVhbmluZyBnaXZlbiBpbiBTZWN0aW9uXH4xNC4xLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ2MTUzOTQgU2V0dGxlbWVudCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MTUzOTRcY2hhcnJzaWQ5NDQ2NzUgSW50ZXJ2YWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MTUzOTQgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMTExOTMxIGhhc317XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkNjE1Mzk0ICB0aGUgbWVhbmluZyBnaXZlbiBpbiB0aGUgQ0FJU08gVGFyaWZmLg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOVxjaGFycnNpZDI1MTA5ODIgU2hhcmVkIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IEFzc2V0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwODE1NTYwIG1lYW59e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMTExOTMxIHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDgxNTU2MCAgYW55IG9yIGFsbCBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgYW5kIHRoZSBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBpbiBhIFNoYXJlZCBBc3NldHMgR3JvdXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IFNoYXJlZCBBc3NldHMgR3JvdXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkMTMxMTE5MzEgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMTExOTMxIGhhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHRoZSBtZWFuaW5nIGdpdmVuIGluIFNlY3Rpb25cfjMufQ0Ke1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTIyODgyNCA0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgU2hhcmVkIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzExMTkzMSBoYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB0aGUgbWVhbmluZyBnaXZlbiBpbiBTZWN0aW9uXH4zLn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEyMjg4MjQgMn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IFNoYXJlZCBGYWNpbGl0aWVzIEdyb3VwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMxMTE5MzEgaGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgdGhlIG1lYW5pbmcgZ2l2ZW4gaW4gU2VjdGlvblx+My59ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMjI4ODI0IDJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9XHBhcmQgXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTU3NDY5MDUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkMTU3NDY5MDUgU2hhcmVkIFBlcm1pdHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTc0NjkwNSANCiBoYXMgdGhlIG1lYW5pbmcgZ2l2ZW4gaW4gU2VjdGlvblx+My42Lg0KXHBhciB9XHBhcmQgXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgU2hhcmVkIFJlYWwgUHJvcGVydHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMTExOTMxIGhhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIHRoZSBtZWFuaW5nIGdpdmVuIGluIFNlY3Rpb25cfjMufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEyMjg4MjQgM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgU2hhcmVkIFJlYWwgUHJvcGVydHkgQWdyZWVtZW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIG1lYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzExMTkzMSBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCiB0aGUgZWFzZW1lbnQgYWdyZWVtZW50cyBvciBjb252ZXlhbmNlIGRvY3VtZW50cyBkZXNjcmliZWQgaW4gRXhoaWJpdCBCLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IFRyYW5zbWlzc2lvbiBMaW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMxMTE5MzEgaGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgdGhlIG1lYW5pbmcgZ2l2ZW4gaW4gRXhoaWJpdCBCLiAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBUcmFuc21pc3Npb24gT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBtZWFufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMxMTE5MzEgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTY1OTQzNjAgU291dGhlcm4gQ2FsaWZvcm5pYSBFZGlzb24gQ29tcGFueX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLCBpdHMgc3VjY2Vzc29ycyBhbmQgYXNzaWduZWVzLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ2NjQwMDc5IFVuZGVybHlpbmcgR3JhbnRpbmcgRG9jdW1lbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjY0MDA3OSAgaGFzIHRoZSBtZWFuaW5nIGdpdmVuIGluIFNlY3Rpb24gNC4xLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY2NDAwNzlcY2hhcnJzaWQ1NTk0NTI0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBVbmRpdmlkZWQgVXNlIEludGVyZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMxMTE5MzEgaGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgdGhlIG1lYW5pbmcgZ2l2ZW4gaW4gU2VjdGlvblx+NC4yLn0NCntccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgXHNlY3QgfVxzZWN0ZCBcbHRyc2VjdFxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVxzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xmb290ZXJyIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxzMjJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHRxY1x0eDQ2ODBcdHFyXHR4OTM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSANClxhZjBcYWZzMTZcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczE2XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IA0KXHBhciBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcZnMyNFxpbnNyc2lkMzQzODA3OCBCLX17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGNzMjRcZnMyNFxpbnNyc2lkMzQzODA3OCAgUEFHRSB9fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcY3MyNFxmczI0XGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkNzM1NzUwMiANCjQzfX19XHNlY3RkIFxsdHJzZWN0XGxpbmV4MFxlbmRuaGVyZVxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcZnMyNFxpbnNyc2lkMzQzODA3OCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkNzg2NTUzMyBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyOTEzMTQzIHtcc2hwe1wqXHNocGluc3Rcc2hwbGVmdDBcc2hwdG9wMFxzaHByaWdodDQwMzJcc2hwYm90dG9tNDAzXHNocGZoZHIxXHNocGJ4bWFyZ2luXHNocGJ4aWdub3JlXHNocGJ5cGFyYVxzaHBieWlnbm9yZVxzaHB3cjNcc2hwd3JrMFxzaHBmYmx3dHh0MFxzaHB6NVxzaHBsaWQyMjMxe1xzcHtcc24gc2hhcGVUeXBlfXtcc3YgMjAyfX17XHNwe1xzbiBmRmxpcEh9e1xzdiAwfX17XHNwe1xzbiBmRmxpcFZ9e1xzdiAwfX0NCntcc3B7XHNuIGxUeGlkfXtcc3YgMzkzMjE2fX17XHNwe1xzbiBkeFRleHRMZWZ0fXtcc3YgMH19e1xzcHtcc24gZHlUZXh0VG9wfXtcc3YgMH19e1xzcHtcc24gZHhUZXh0UmlnaHR9e1xzdiAwfX17XHNwe1xzbiBkeVRleHRCb3R0b219e1xzdiAwfX17XHNwe1xzbiBoc3BOZXh0fXtcc3YgMjIzMX19e1xzcHtcc24gZkZpdFNoYXBlVG9UZXh0fXtcc3YgMX19e1xzcHtcc24gZkZpbGxlZH17XHN2IDB9fXtcc3B7XHNuIGZMaW5lfXtcc3YgMH19DQp7XHNwe1xzbiB3ek5hbWV9e1xzdiB6em1wVHJhaWxlcl8xMDc4XzZ9fXtcc3B7XHNuIHBvc3JlbGh9e1xzdiAwfX17XHNwe1xzbiBkaGd0fXtcc3YgMjUxNjU2MTkyfX17XHNwe1xzbiBmUHNldWRvSW5saW5lfXtcc3YgMH19e1xzcHtcc24gZkxheW91dEluQ2VsbH17XHN2IDF9fXtcc2hwdHh0IFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxzNDlccWwgXGxpMFxyaTBcc2wtMjAwXHNsbXVsdDANClxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBPSFNVU0E6NzU4Mjk2NjcyLjEwIA0KXHBhciANClxwYXIgfX19e1xzaHByc2x0e1wqXGRvXGRvYnhtYXJnaW5cZG9ieXBhcmFcZG9kaGd0ODE5N1xkcHR4YnhcZHB0eGxydGJ7XGRwdHhieHRleHRcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJcczQ5XHFsIFxsaTBccmkwXHNsLTIwMFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjJcYWxhbmcxMDI1IA0KXGx0cmNoXGZjczAgXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggT0hTVVNBOjc1ODI5NjY3Mi4xMCANClxwYXIgDQpccGFyIH19XGRweDBcZHB5MFxkcHhzaXplNDAzMlxkcHlzaXplNDAzXGRwZmlsbGZnY3IyNTVcZHBmaWxsZmdjZzI1NVxkcGZpbGxmZ2NiMjU1XGRwZmlsbGJnY3IyNTVcZHBmaWxsYmdjZzI1NVxkcGZpbGxiZ2NiMjU1XGRwZmlsbHBhdDBcZHBsaW5laG9sbG93fX19fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDc4NjU1MzMgDQpccGFyIH19XHBhcmRccGxhaW4gXGx0cnBhclxzMjVccWMgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI4ODAzNiBccnRsY2hcZmNzMSBcYWJcYWYxXGFmczMyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xrZXJuaW5nMjhcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IEVYSElCSVQgQn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MDcxMjk2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTk5ODYgU0hBUkVEIEZBQ0lMSVRJRVN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxMzI2Nzc2MyAsfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU5OTg2ICBTSEFSRUQgUkVBTCBQUk9QRVJUWX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMjY3NzYzICBBTkQgU0hBUkVEIFBFUk1JVFN9ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1OTk4NiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI3MjUzNSANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCBBLlx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczZccWogXGZpLTcyMFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4LTMxNTBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDVcb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDY1OTk4NiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgQXNzZXRzIEpvaW50bHkgT3duZWQgYW5kIFNoYXJlZCBieSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI4ODAzNiBBbGwgQ28tT3duZXJzIChSU1QgU2hhcmVkIEZhY2lsaXRpZXMgR3JvdXApfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczcgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkNTkxODMyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxLlx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzN1xxaiBcZmktNzIwXGxpMTQ0MFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmw2XG91dGxpbmVsZXZlbDZcYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkNjU5OTg2IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBTaGFyZWQgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkxNDQwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxNjA3MTI5NiBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjA3MTI5NiBhLlx0YWIgUHJvamVjdCBTdWJzdGF0aW9uOiAgU2VlIEV4aGliaXQgQi0xIGF0dGFjaGVkIGhlcmV0by4NClxwYXIgYi5cdGFiIFRyYW5zbWlzc2lvbiBMaW5lOiAgU2VlIEV4aGliaXQgQi0yIGF0dGFjaGVkIGhlcmV0by4NClxwYXIgYy5cdGFiIFJvYWRzDQpccGFyIGQuXHRhYiBPJk0gQnVpbGRpbmcNClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkODYxMTUyMSBlLlx0YWIgQ29uZG9yIERldGVjdGlvbiBUb3dlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDg2MTE1MjFcY2hhcnJzaWQ0ODEzNTgyIA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNyBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDIuXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhcg0KXHM3XHFqIFxmaS03MjBcbGkxNDQwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDZcb3V0bGluZWxldmVsNlxhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQ2NTk5ODYgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFNoYXJlZCBSZWFsIFByb3BlcnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQxMzE3NjcxMyBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjA3MTI5NiBhLlx0YWIgUHJvamVjdCBTdWJzdGF0aW9uOiAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOThcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk4XGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgVGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGFsZn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU291dGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3RpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMCwgVG93bnNoaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGgsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBSYW5nZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBXZXN0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQmVybmFyZGlub317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE1lcmlkaWFuLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW4gdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdW5pbmNvcnBvcmF0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFyZWEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ291bnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEtlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kLTJcZXhwbmR0dy0xMFxpbnNyc2lkMjc2NDA0MCByfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBuLCBTdGF0ZSBvZiBDYWxpZm9ybmlhLCBhY2NvcmRpbmcgdG8gdGhlIG9mZmljaWFsIHBsYXQgdGhlcmVvZi4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5Mlxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTJcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBFeGNlcHRpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVyZWZyb219e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbGx9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9pbCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBnYXN9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG90aGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBtaW5lcmFsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZGVwb3NpdHMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0byBwYXRlbnRlZCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0b2dldGhlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2l9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTFcZXhwbmR0dy02XGluc3JzaWQyNzY0MDQwIHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJpZ2h0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0byBwcm9zcGVjdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmb3IsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbWluZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ0XGV4cG5kdHcyMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZW1vdmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FtZSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWNjb3JkaW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcHJvdmlzaW9uc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQWN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNFxleHBuZHR3MjBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgSnVuZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0yXGV4cG5kdHctMTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTkzOCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBleGNlcHRlZCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZXNlcnZlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGJ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVW5pdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU3RhdGVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQW1lcmljYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwYXRlbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZWNvcmRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEF1Z3VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtM1xleHBuZHR3LTE3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDIzLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDE5OTB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJvb2t9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgNjQyMix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBQYWdlIDE5MDQgb2YgT2ZmaWNpYWwgUmVjb3Jkcy4NClxwYXIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkxNDQwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxMzE3NjcxMyBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEFQTjogIDIzNy0xNDEtMjINClxwYXIgfVxwYXJkIFxsdHJwYXJcczE1XHFqIFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQxMzE3NjcxMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MDcxMjk2IGIuXHRhYiBUcmFuc21pc3Npb24gTGluZTogIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzMTVccWogXGZpMzYwXGxpMTA4MFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDBcY2hhcnJzaWQzMjQwNzc1IFRyYWN0IDENClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmkwXHNiMTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBUaGUgRWFzdCBoYWxmIG9mIHRoZSBFYXN0IGhhbGYgb2YgU2VjdGlvbiA5LCBUb3duc2hpcCAxMSBOb3J0aCwgUmFuZ2UgMTMgV2VzdCwgU2FuIEJlcm5hcmRpbm8gQmFzZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmQgTWVyaWRpYW59e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMzE2NDgwICBpbiB0aGUgdW5pbmNvcnBvcmF0ZWQgYXJlYSBvZiB0aGUgQ291bnR5IG9mIEtlcm4sIFN0YXRlIG9mIENhbGlmb3JuaWEsIGFzIHBlciB0aGUgb2ZmaWNpYWwgcGxhdCB0aGVyZW9mIG9uIGZpbGUgaW4gdGhlIE9mZmljZSBvZiB0aGUgU3VydmV5b3IgR2VuZXJhbCwgYXBwcm92ZWQgU2VwdGVtYmVyIDE5LCAxODU2fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIC4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmkxNTRcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjE1NFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgRXhjZXB0aW4NCmcgdGhlcmVmcm9tIG9uZSBoYWxmIG9mIGFsbCBvaWwsIGdhcyBhbmQgb3RoZXIgaHlkcm9jYXJib24gc3Vic3RhbmNlcyBhbmQgbWluZXJhbHMgaW4gYW5kIHVuZGVyIHNhaWQgbGFuZCwgYXMgZXhjZXB0ZWQgaW4gZGVlZCBkYXRlZCBEZWNlbWJlciAxLCAxOTU1IGZyb20gTSZSIFNoZWVwIENvbXBhbnksIHJlY29yZGVkIE1hcmNofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dy0yXGluc3JzaWQyNzY0MDQwICB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMjIsIDE5NTYgaW4gQm9vayAyNTgxLCBQYWdlIDIzMyBvZiBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBBUE46ICAyMzctMDIyLTEzDQpccGFyIH1ccGFyZCBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczE1XHFqIFxsaTEwODBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCAyfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwXGNoYXJyc2lkMzI0MDc3NSANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMTA4MFxyaTBcc2wtMjQwXHNsbXVsdDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGxpMTQ5NFxyaTgyXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW44MlxsaW4xNDk0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANCkF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzdHJpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb25lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBodW5kcmVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2V2ZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCB5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAtZml2ZSAoMTc1KX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZlZXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2lkdGgsIHNpdHVhdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTb3V0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFwnYmN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCBTfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBlY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIDE3LCBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpOb3J0aCwgUmFuZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFdlc3QsIFNhbn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQmVybmFyZGlub317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJhc2UgYW5kfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBNZXJpZGlhbiwgS2Vybn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENvdW50eSx9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENhbGlmb3JuaWEsIGJlaW5nIGEgcG9ydGlvbiBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoYXQgcHJvcH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcnR5IGNvbnZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCBlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB5ZWQgdG99e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFJlc2lkdWFsIFJhbmNofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ29ycG9yYXRpb24sIGlufXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCb29rfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgNjA3MCwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCBQfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhZ2VzIDEyMH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxN1xpbnNyc2lkMjc2NDA0MCA5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAtMTIxMCwgcmVjfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCBvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZGVkIG9uIE5vdmVtYmVyIDI1LCAxOTg3LCBLZXJuIENvdW50eSBEZWVkIFJlY29yZHMsIGFuZCBiZWluZyBtb3JlIHBhcnRpY3VsYXJseSBkZXNjcmliZWQgYXMgZm9sbG93czoNClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMTA4MFxyaTBcc2wtMjQwXHNsbXVsdDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGxpMTQ5NFxyaTkwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45MFxsaW4xNDk0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClRoYXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzdHJpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsYW5kLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdpdGhpbiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxLDkwMH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmVldH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzYWlkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcHJvcGVydHksIGJlaW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvbmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBodW5kcmVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzZXZlbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTFcZXhwbmR0dy02XGluc3JzaWQyNzY0MDQwIHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIC1maXZlICh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwIDF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDc1KX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZlZXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGluIHdpZHRoLCB0aGUgc291fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGVybHkgbGluZSBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2hpY2ggaXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgY317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2luY2lkZW50IGFuZCBwYXJhbGxlbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2l0aCB0aGUgbm9ydGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCBlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBybHkgcmlnaHQgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdheSBsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtM1xleHBuZHR3LTE3XGluc3JzaWQyNzY0MDQwIG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGYgT2FrIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgQ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmVlayBSb2FkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgKENvdW50eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUm9hZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgNjQ4KSwgc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxpbmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGJlaW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMzAuMDB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZlZXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBub3J0aGVybHkgb2YgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBjZW50ZXJsaW5lIG9mIHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByb2FkLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2h9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTVcaW5zcnNpZDI3NjQwNDAgZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbiBtZWFzdXJlZCBhdCByaWdodCBhbmdsZXMuICANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTI1MjBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMjUyMFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczE1XHFqIFxsaTE1MzBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTUzMFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEFQTjogIDIzNy0wMzEtMDQNClxwYXIgfVxwYXJkIFxsdHJwYXJcczE1XHFqIFxsaTI1MjBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMjUyMFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFx0YWIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcbGkxNDk0XHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjE0OTRcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIA0KXHBhciBUaGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgRWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBIYWxmfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTYsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRvd25zaGlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGgsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUmFuZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBXZXN0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCZXJuYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtMVxleHBuZHR3LTlcaW5zcnNpZDI3NjQwNDAgcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZGlubyBNZXJpZGlhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTMzMTY0ODAgIGluIHRoZSBDb3VudHkgb2YgS2VybiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2lhbCBwbGF0IG9mIHNhaWQgbGFuZCBieSB0aGUgU3VydmV5b3IgR2VuZXJhbCBkYXRlZCBTZXB0ZW1iZXIgMTksIDE4NTZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIC4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0OTRccmk5M1xub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTNcbGluMTQ5NFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBFeGNlcHRpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlcmVmcm9tfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhaWR9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFufXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdW5kaXZpZGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEvMTZ0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzM0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFsbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzMzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGNvYWwsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9pbCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvaWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2hhbGUsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZ2FzLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwaG9zcGhhdGUsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc299e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaXVtfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kIG90aGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbWluZXJhbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZGVwb3NpdHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbiBzYWlkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlc2VydmVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG8gdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTdGF0ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDYWxpZm9ybmlhLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGJ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwcm92aXNpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTFcZXhwbmR0dy04XGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZSBsZWdpc2xhdGlvbiwgc3RhdHV0ZXMgb2YgMTkyMSBwYWdlIDQwNCBhbmQgYW1lbmRtZW50cyB0aGVyZXRvLg0KXHBhciANClxwYXIgQWxzb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGV4Y2VwdGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZXJlZnJvbX17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGFsZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbGx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvaWwsIGh5ZHJvY2FyYm9uc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2ltaWxhcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbWluZXJhbHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBidXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdpdGhvdXQgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmlnaHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGVudHJ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0byBkZXB0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCA1MDB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmZWV0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmcm9tfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzdXJmYWNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlcmVvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwcm9wZXJ0eS59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZ3JhbnRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBKLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEoufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBLZXNzbGVyLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBycmllZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbWFuLCBpbiBkZWVkIHJlY29yZGVkIEF1Z3VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANCjIzLCAxOTU2IGluIEJvb2sgMjY1NCwgcGFnZSAzMDAgb2Ygb2ZmaWNpYWwgcmVjb3Jkcy4NClxwYXIgDQpccGFyIEFQTjogIDIzNy0wMzEtMDgNClxwYXIgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDk0XHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjE0OTRcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCA0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0OTRccmk5M1xub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTNcbGluMTQ5NFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ5NFxyaTgyXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW44MlxsaW4xNDk0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxMVxleHBuZHR3NTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBzdHJpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxMVxleHBuZHR3NTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMTBcZXhwbmR0dzU0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxhbmQsfQ0Ke1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMTFcZXhwbmR0dzU1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9uZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxMVxleHBuZHR3NTZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaHVuZHJlZH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDExXGV4cG5kdHc1NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzZXZlbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTFcZXhwbmR0dy02XGluc3JzaWQyNzY0MDQwIHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIC1maXZlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMTFcZXhwbmR0dzU1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwICgxNzUpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDExXGV4cG5kdHc1NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmZWV0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMTBcZXhwbmR0dzUzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDExXGV4cG5kdHc1NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3aWR0aCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxMVxleHBuZHR3NTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2l0dWF0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMTFcZXhwbmR0dzU1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMTFcZXhwbmR0dzU1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxMFxleHBuZHR3NTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU291dGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxMFxleHBuZHR3NTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgXCdiZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ5XGV4cG5kdHc0OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDExXGV4cG5kdHc1N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCB0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxMFxleHBuZHR3NTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTYsIFRvd25zaGlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoLCBSYW5nZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBXZXN0LCBTYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCZXJuYXJkaW5vfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCYXNlIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE1lcmlkaWFuLCBLZXJufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDb3VudHksfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ2FsaWZvcm5pYSwgYmVpbmcgYSBwb3J0aW9uIG9mfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGF0IHByb3B9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCBlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBydHkgY29udn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgeWVkIHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVGhlIE11fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCByfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpZWwgUG9sbGlhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgRm91bmRhdGlvbiwgYnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIERvY3VtZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm8uIDAyMDcyMjA2MzEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZWNvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZGVkIG9uIE5vdmVtYmVyIDIsIDIwMDcsIEtlcm4gQ291bnR5IERlZWQgUmVjb3JkcywgYW5kIA0KYmVpbmcgbW9yZSBwYXJ0aWN1bGFybHkgZGVzY3JpYmVkIGFzIGZvbGxvd3M6DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTEwODBccmkwXHNsLTI0MFxzbG11bHQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxsaTE0OTRccmk5MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTBcbGluMTQ5NFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpUaGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBFYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb25lfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBodW5kcmVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2V2ZW50eS1maXZlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAoMTc1KX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZlZXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU291dGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBcJ2JkLCBTZWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxNix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0b2dldGhlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2l0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoYXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTNcaW5zcnNpZDI3NjQwNDAgb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIGh1bmRyZWQgc2V2ZW50eS1maXZlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgKDE3NSl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIGZvb3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzdHJpcCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNvdXRoZXJseX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxpbmV9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2hpY2h9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlzIGNvaW5jaWRlbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHBhcmFsbGVsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2l0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbm9ydH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0zXGV4cG5kdHctMThcaW5zcnNpZDI3NjQwNDAgaH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZXJseX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJpZ2h0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiB3YXl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsaW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiBPYWsgQ3JlZWt9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBSb2FkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAoQ291bnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUm9hZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm8ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgNjQ4KX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxpbmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGJlaW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMzAuMDB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZlZXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBub3J0aGVybHkgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGNlbnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwIGx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGluZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIHNhaWQgcm9hZCwgd2hlbiBtZWFzdXJlZCBhdCByaWdodCBhbmdsZXMuDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDk0XHJpOTNcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkzXGxpbjE0OTRcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTE1MzBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTUzMFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBUE46ICAyMzctMDMxLTM4DQpccGFyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGxpMTQ5NFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xNDk0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IDV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGxpMTQ5NFxyaTkzXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDk0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClRoZSBXZXN0IGhhbGYgb2YgdGhlIE5vcnRod2VzdCBxdWFydGVyIG9mIHRoZSBOb3J0aHdlc3QgcXVhcnRlciBvZiANCnRoZSBOb3J0aHdlc3QgcXVhcnRlciBvZiBTZWN0aW9uIDEwLCBUb3duc2hpcCAxMSBOb3J0aCwgUmFuZ2UgMTMgV2VzdCwgU2FuIEJlcm5hcmRpbm8gTWVyaWRpYW4sIGluIHRoZSB1bmluY29ycG9yYXRlZCBhcmVhLCBDb3VudHkgb2YgS2VybiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgYWNjb3JkaW5nIHRvIHRoZSBPZmZpY2lhbCBQbGF0IHRoZXJlb2YuDQpccGFyIA0KXHBhciBFeGNlcHRpbmcgdGhlcmVmcm9tIGFsbCBvaWwsIGdhcyBhbmQgb3RoZXIgbWluZXJhbCANCmRlcG9zaXRzIGluIHRoZSBsYW5kIHNvIHBhdGVudGVkLCB0b2dldGhlciB3aXRoIHRoZSByaWdodCB0byBwcm9zcGVjdCBmb3IsIG1pbmUgYW5kIHJlbW92ZSB0aGUgc2FtZSBhY2NvcmRpbmcgdG8gdGhlIHByb3Zpc2lvbnMgb2Ygc2FpZCBBY3Qgb2YgSnVuZSAxLCAxOTM4LCBhcyByZXNlcnZlZCBpbiBEZWVkIHJlY29yZGVkIEF1Z3VzdCAxNCwgMTk2MyBpbiBCb29rIDM2MzQsIFBhZ2UgODM1IG9mIE9mZmljaWFsIFJlY29yZHMufXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkxNTMwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE1MzBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEFQTjogIDIzNy0xNDEtMDENClxwYXIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcbGkxNDk0XHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjE0OTRcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgNn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDk0XHJpOTNcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkzXGxpbjE0OTRcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgVGhlIEVhc3QgaGFsZiBvZiB0aGUgTm9ydGh3ZXN0IHF1YXJ0ZXIgb2YgdGhlIE5vcnRod2VzdCBxdWFydGVyIG9mIHRoZSBOb3J0aHdlc3QgcXVhcnRlciBvZiBTZWN0aW9uIDEwLCBUb3duc2hpcCAxMSBOb3J0aCwgUmFuZ2UgMTMgV2VzdCwgU2FuIEJlcm5hcmRpbm8gTWVyaWRpYW4sIGluIHRoZSB1bmluY29ycG9yYXRlZCBhcmVhLCBDb3VudHkgb2YgS2VybiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgYWNjb3JkaW5nDQogdG8gdGhlIE9mZmljaWFsIFBsYXQgdGhlcmVvZi4NClxwYXIgDQpccGFyIEV4Y2VwdGluZyB0aGVyZWZyb20gYWxsIG9pbCwgZ2FzIGFuZCBvdGhlciBtaW5lcmFsIGRlcG9zaXRzIGluIHRoZSBsYW5kIHNvIHBhdGVudGVkLCB0b2dldGhlciB3aXRoIHRoZSByaWdodCB0byBwcm9zcGVjdCBmb3IsIG1pbmUgYW5kIHJlbW92ZSB0aGUgc2FtZSBhY2NvcmRpbmcgdG8gdGhlIHByb3Zpc2lvbnMgb2Ygc2FpZCBBY3Qgb2YgSnVuZSAxLCAxOTM4LCBhcyByZXNlcnZlZCBpbiBEDQplZWQgcmVjb3JkZWQgU2VwdGVtYmVyIDIwLCAxOTY3IGluIEJvb2sgNDA5MCwgUGFnZSA4NTEgb2YgT2ZmaWNpYWwgUmVjb3Jkcy59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkxNTMwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE1MzBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEFQTjogIDIzNy0xNDEtMDINClxwYXIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcbGkxNDk0XHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjE0OTRcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgN317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDk0XHJpMjYwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4yNjBcbGluMTQ5NFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBUaGUgV2VzdCBoYWxmIG9mIHRoZSBOb3J0aGVhc3QgcXVhcnRlciBvZiB0aGUgTm9ydGh3ZXN0IHF1YXJ0ZXIgb2YgdGhlIE5vcnRod2VzdCBxdWFydGVyIG9mIFNlY3Rpb24gMTAsIFRvd25zaGlwIDExIE5vcnRoLCBSYW5nZSAxMyBXZXN0LCBTYW4gQmVybmFyZGlubyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzMxNjQ4MCBCYXNlIGFuZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgTWVyaWRpYW4sIGluIHRoZSB1bmluY29ycG9yYXRlZCBhcmVhLCBDb3VudHkgb2YgS2VybiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2lhbCBwbGF0IHRoZXJlb2YuDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkxNTMwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE1MzBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEFQTjogIDIzNy0xNDEtMDMNClxwYXIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcbGkxNDk0XHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjE0OTRcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgOH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDk0XHJpOTNcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkzXGxpbjE0OTRcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgVGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgRWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGhhbGZ9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aGVhc3QgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGh3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3RpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwIG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEwLCBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBSYW5nZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBXZXN0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2FufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQmVybmFyZGlub317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTWVyaWRpYW4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ291bnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEtlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kLTJcZXhwbmR0dy0xMFxpbnNyc2lkMjc2NDA0MCByfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBuLCBTdGF0ZSBvZiBDYWxpZm9ybmlhLCBhY2NvcmRpbmcgdG8gdGhlIG9mZmljaWFsIHBsYXQgdGhlcmVvZi4NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMzMTY0ODAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNTMwXHJpOTNcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkzXGxpbjE1MzBcaXRhcDBccGFyYXJzaWQxNDkwNDAxNyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMzE2NDgwIA0KRXhjZXB0aW5nIHRoZXJlZnJvbSBhbGwgb2lsLCBnYXMgYW5kIG90aGVyIG1pbmVyYWwgZGVwb3NpdHMsIGluIHRoZSBsYW5kIHNvIHBhdGVudGVkLCB0b2dldGhlciB3aXRoIHRoZSByaWdodCB0byANCnByb3NwZWN0IGZvciwgbWluZSBhbmQgcmVtb3ZlIHRoZSBzYW1lLCBhY2NvcmRpbmcgdG8gdGhlIHByb3Zpc2lvbnMgb2Ygc2FpZCBBY3Qgb2YgSnVuZSAxLCAxOTM4LCBhcyBleGNlcHRlZCBhbmQgcmVzZXJ2ZWQgYnkgdGhlIFVuaXRlZCBTdGF0ZXMgb2YgQW1lcmljYSByZWNvcmRlZCBpbiBCb29rIDMyNTksIFBhZ2UgNjQxIG9mIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHMxNVxxaiBcbGkxNTMwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE1MzBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBUE46ICAyMzctMTQxLTA0DQpccGFyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGxpMTQ5NFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xNDk0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IDl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ5NFxyaTk4XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OFxsaW4xNDk0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIFRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBFYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGhhbGZ9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ4XGV4cG5kdHc0MFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTb3V0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDhcZXhwbmR0dzQwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGh3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwIG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTAsIFRvd25zaGlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUmFuZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgV2VzdCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJlcm5hcmRpbm99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBNZXJpZGlhbix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGluIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHVuaW5jb3Jwb3JhdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhcmVhLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENvdW50eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBLZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0yXGV4cG5kdHctMTBcaW5zcnNpZDI3NjQwNDAgcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2lhbCBwbGF0IHRoZXJlb2YuDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDk0XHJpOTJcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkyXGxpbjE0OTRcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgRXhjZXB0aW5nIHRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmVmcm9tIGFsbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9pbCwgZ2FzfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvdGhlciBtaW5lfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCByfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbCBkZXBvc2l0cyx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW4gdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc299e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHBhdGVudGVkLCB0b2dldGhlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCB0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KcmlnaHQgdG8gcHJvc3BlY3QgZm9yLCBtaW5lIGFuZCByZW1vdmUgc2FtZSwgYWNjb3JkaW5nIHRvIHRoZSBwcm92aXNpb25zIG9mIHNhaWQgQWN0IG9mIEp1bmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxLCAxOTM4LCBhcyBleGN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHctMVxpbnNyc2lkMjc2NDA0MCBlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwdGVkIGFuZCByZXNlcnZlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBieX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBVbml0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTdGF0ZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBbWVyaWNhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHBhdGVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlY29yZGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEF1Z3VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0yXGV4cG5kdHctMTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMyx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTk2MH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJvb2t9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAzMjkwLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBQYWdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtMVxleHBuZHR3LTZcaW5zcnNpZDI3NjQwNDAgOH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgNn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkxNTMwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE1MzBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEFQTjogIDIzNy0xNDEtMTMNClxwYXIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcbGkxNDk0XHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjE0OTRcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgMTANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0OTRccmk5OFxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOThcbGluMTQ5NFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGFsZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0MFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aGVhc3R9DQp7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNvdXRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGh3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3RpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwIG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMCwgVG93bnNoaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGgsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUmFuZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgV2VzdCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJlcm5hcmRpbm99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE1lcmlkaWFuLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGluIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdW5pbmNvcnBvcmF0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhcmVhLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ291bnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEtlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZC0yXGV4cG5kdHctMTBcaW5zcnNpZDI3NjQwNDAgcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpuLCBTdGF0ZSBvZiBDYWxpZm9ybmlhLCBhY2NvcmRpbmcgdG8gdGhlIG9mZmljaWFsIHBsYXQgdGhlcmVvZi4NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMTA4MFxyaTBcc2wtMjQwXHNsbXVsdDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGxpMTQ5NFxyaTkzXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDk0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANCkV4Y2VwdGluZyB0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwIGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlZnJvbSBhbGx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvaWwsIGdhc317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb3RoZXIgbWluZX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWwgZGVwb3NpdHMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGluIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwYXRlbnRlZCwgdG9nZXRoZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3aX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByaWdodCB0byBwcm9zcGVjdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZm9yLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG1pbmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZW1vdmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhbWUsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhY2NvcmRpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcHJvdmlzaW9uc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEFjdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBKdW5lIDEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTkzOCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwIGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgeGNlcHRlZCBhbmQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZXNlcnZlZCBieX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgdGhlIFVuaXRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFN0YXRlcyBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgQW1lcmljYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQp0aGUgcGF0ZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmVjb3JkZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZXB0ZW1iZXJ9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAyOCwgMTk2MH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbiBCb29rfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAzMzA2LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzMxNjQ4MCBQYWdlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCA4NjQsIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkxNTMwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE1MzBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEFQTjogIDIzNy0xNDEtMjANClxwYXIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcbGkxNDk0XHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjE0OTRcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgMTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ5NFxyaTk4XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OFxsaW4xNDk0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIFRoZSBXZXN0IGhhbGYgb2YgdGhlIE5vcnRod2VzdCBxdWFydGVyIG9mIHRoZSBTb3V0aGVhc3QgcXVhcnRlciBvZiB0aGUgTm9ydGh3ZXN0IHF1YXJ0ZXIgb2YgU2VjdGl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEwLCBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBSYW5nZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBXZXN0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2FufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQmVybmFyZGlub317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTWVyaWRpYW4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW4gdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB1bmluY29ycG9yYXRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFyZWEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDb3VudHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgS2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTJcZXhwbmR0dy0xMFxpbnNyc2lkMjc2NDA0MCByfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBuLCBTdGF0ZSBvZiBDYWxpZm9ybmlhLCBhY2NvcmRpbmcgdG8gdGhlIG9mZmljaWFsIA0KcGxhdCBvZiBzYWlkIGxhbmQgZmlsZWQgaW4gdGhlIERpc3RyaWN0IExhbmQgT2ZmaWNlIE9jdG9iZXIgNywgMTkzNi4NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMTA4MFxyaTBcc2wtMjQwXHNsbXVsdDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGxpMTQ5NFxyaTkzXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDk0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANCkV4Y2VwdGluZyB0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwIGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlZnJvbSBhbGx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvaWwsIGdhc317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb3RoZXIgbWluZX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWwgZGVwb3NpdHMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGluIGFuZCB1bmRlciBzYWlkIGxhbmQsIHRvZ2V0aGVyfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3aX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwIHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGggdGhlfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByaWdodCB0byBwcm9zcGVjdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZvcix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG1pbmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZW1vdmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhbWUsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWNjb3JkaW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcHJvdmlzaW9uc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBY3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgSnVuZSAxLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTkzOCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwIGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHhjZXB0ZWQgYW5kIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwIHJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgZXNlcnZlZCBieX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZSBVbml0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIFN0YXRlcyBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEFtZXJpY2F9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANCmlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlIHBhdGVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlY29yZGVkfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZXB0ZW1iZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMjgsIDE5NjB9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbiBCb29rfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMzMwNix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzMxNjQ4MCBQYWdlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgODYzLCBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciANClxwYXIgQVBOOiAgMjM3LTE0MS0yMQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMTUzMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNTMwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGxpMTQ5NFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xNDk0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IDEyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0OTRccmk5OFxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOThcbGluMTQ5NFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBUaGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgRWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0MFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYWxmfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kOFxleHBuZHR3NDBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGh3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0MFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTb3V0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjdGl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCBvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEwLCBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFJhbmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFdlc3QsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2FufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCZXJuYXJkaW5vfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTWVyaWRpYW4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB1bmluY29ycG9yYXRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXJlYSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDb3VudHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgS2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQtMlxleHBuZHR3LTEwXGluc3JzaWQyNzY0MDQwIHJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG4sIFN0YXRlIG9mIENhbGlmb3JuaWEsIGFjY29yZGluZyB0byB0aGUgb2ZmaWNpYWwgcGxhdCB0aGVyZW9mLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ5NFxyaTkyXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45MlxsaW4xNDk0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEV4Y2VwdGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZXJlZnJvbX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFsbH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2lsLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGdhc317XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb3RoZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG1pbmVyYWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBkZXBvc2l0cyx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGluIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvIHBhdGVudGVkLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvZ2V0aGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3aX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtMVxleHBuZHR3LTZcaW5zcnNpZDI3NjQwNDAgdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmlnaHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvIHByb3NwZWN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZvcix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBtaW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDRcZXhwbmR0dzIxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlbW92ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzYW1lLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhY2NvcmRpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwcm92aXNpb25zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBY3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ0XGV4cG5kdHcyMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBKdW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kLTJcZXhwbmR0dy0xMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxOTM4LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGV4Y2VwdGVkIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlc2VydmVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBVbml0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTdGF0ZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBbWVyaWNhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHBhdGVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlY29yZGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQXVndXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZC0zXGV4cG5kdHctMTdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMjMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTk5MH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQm9va317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCA2NDIyLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFBhZ2UgMTkwNCBvZiBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMTUzMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNTMwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzMTVccWogXGZpNDE0XGxpMTA4MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMTMxNzY3MTMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEFQTjogIDIzNy0xNDEtMjINClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMzMTY0ODAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHMxNVxxaiBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMTMxNzY3MTMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjA3MTI5NiBjLlx0YWIgQ29sbGVjdGlvbiBhbmQgRGlzdHJpYnV0aW9uIExpbmVzOiAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkwXHJpOThcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk4XGxpbjBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5OFxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOThcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGFsZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0MFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aHdlc3R9DQp7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNvdXRoZWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGh3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3RpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwIG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMCwgVG93bnNoaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGgsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUmFuZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgV2VzdCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJlcm5hcmRpbm99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE1lcmlkaWFuLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGluIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdW5pbmNvcnBvcmF0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhcmVhLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ291bnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEtlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZC0yXGV4cG5kdHctMTBcaW5zcnNpZDI3NjQwNDAgcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpuLCBTdGF0ZSBvZiBDYWxpZm9ybmlhLCBhY2NvcmRpbmcgdG8gdGhlIG9mZmljaWFsIHBsYXQgdGhlcmVvZi4NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMTQ0MFxyaTBcc2wtMjQwXHNsbXVsdDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkyXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45MlxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANCkV4Y2VwdGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZXJlZnJvbX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFsbH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2lsLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGdhc317XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb3RoZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG1pbmVyYWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBkZXBvc2l0cyx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGluIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvIHBhdGVudGVkLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvZ2V0aGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3aX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtMVxleHBuZHR3LTZcaW5zcnNpZDI3NjQwNDAgdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmlnaHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvIHByb3NwZWN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZvcix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBtaW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDRcZXhwbmR0dzIxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlbW92ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzYW1lLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhY2NvcmRpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwcm92aXNpb25zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBY3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ0XGV4cG5kdHcyMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBKdW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kLTJcZXhwbmR0dy0xMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxOTM4LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGV4Y2VwdGVkIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlc2VydmVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBVbml0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTdGF0ZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBbWVyaWNhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHBhdGVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlY29yZGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQXVndXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZC0zXGV4cG5kdHctMTdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMjMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTk5MH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQm9va317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCA2NDIyLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFBhZ2UgMTkwNCBvZiBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBBUE46ICAyMzctMTQxLTIyDQpccGFyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IDJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkzXHNiMTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkzXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgVGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgRWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGhhbGZ9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTb3V0aGVhc3QgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTb3V0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGh3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3RpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZC0xXGV4cG5kdHctNVxpbnNyc2lkMjc2NDA0MCBvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMCwgVG93bnNoaXAgMTEgTm9ydGgsIFJhbmdlIDEzIFdlc3QsIFNhbiBCZXJuYXJkaW5vIEJhc2UgYW5kIE1lcmlkaWFufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMzMTY0ODAgDQosIGluIHRoZSB1bmluY29ycG9yYXRlZCBhcmVhLCBDb3VudHkgb2YgS2VybiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgYWNjb3JkaW5nIHRvIHRoZSBPZmZpY2lhbCBQbGF0IHRoZXJlb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIC4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5NFxzYjI5XG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45NFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEV4Y2VwdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMzE2NDgwIGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ1XGV4cG5kdHcyN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVyZWZyb219e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjZcaW5zcnNpZDI3NjQwNDAgIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbGx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2lsLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ1XGV4cG5kdHcyNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxMzMxNjQ4MCBnYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjhcaW5zcnNpZDEzMzE2NDgwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ1XGV4cG5kdHcyNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIG90aGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG1pbmVyYWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpkZXBvc2l0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMzE2NDgwICBpbiB0aGUgbGFuZCBzbyBQYXRlbnRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ1XGV4cG5kdHcyN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0b2dldGhlcn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzI0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdpdGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmlnaHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ1XGV4cG5kdHcyN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwcm9zcGVjdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ1XGV4cG5kdHcyN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmb3IsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbWluZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ1XGV4cG5kdHcyNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmQgcmVtb3ZlIHRoZSBzYW1lIGFjY29yZGluZyB0byB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxMzMxNjQ4MCBwcm92aXNpb25zIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Ygc2FpZCBBY3Qgb2YgSnVuZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxLCAxOTM4fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxMzMxNjQ4MCAsIGFzIHJlc2VydmVkIGJ5IHRoZSBVbml0ZWQgU3RhdGVzIG9mIEFtZXJpY2EgaW4gcGF0ZW50IHJlY29yZGVkIERlY2VtYmVyIDcsIDE5NjIgaW4gQm9vayAzNTUyLCBQYWdlKHMpIDk2NiBvZiBPZmZpY2lhbCBSZWNvcmRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAuDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEFQTjogIDIzNy0xNDEtMjUNClxwYXIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTNcc2IxMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTNcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBUaGUgV2VzdCBoYWxmIG9mIHRoZSBTb3V0aGVhc3QgcXVhcnRlciBvZiB0aGUgU291dGhlYXN0IHF1YXJ0ZXIgb2YgdGhlIE5vcnRod2VzdCBxdWFydGVyIG9mIFNlY3RpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZC0xXGV4cG5kdHctNVxpbnNyc2lkMjc2NDA0MCBvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMCwgVG93bnNoaXAgMTEgTm9ydGgsIFJhbmdlIDEzIFdlc3QsIFNhbiBCZXJuYXJkaW5vIE1lcmlkaWFuLCBpbiB0aGUgdW5pbmNvcnBvcmF0ZWQgYXJlYSwgQ291bnR5IG9mIEtlcm4sIFN0YXRlIG9mIENhbGlmb3JuaWEsIGFjY29yZGluZyB0byB0aGUgT2ZmaWNpYWwgUGxhdCB0aGVyZW9mLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxxaiBcbGkxNDQwXHJpMFxzYjE2XHNsLTI2MFxzbG11bHQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MFxjaGFycnNpZDExNzQ5NTMyIA0KXHBhciBFeGNlcHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjdcaW5zcnNpZDI3NjQwNDBcY2hhcnJzaWQxMTc0OTUzMiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MFxjaGFycnNpZDExNzQ5NTMyIHRoZXJlZnJvbX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ1XGV4cG5kdHcyNlxpbnNyc2lkMjc2NDA0MFxjaGFycnNpZDExNzQ5NTMyICB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDBcY2hhcnJzaWQxMTc0OTUzMiBhbGwgb2lsLCBnYXMgYW5kIG90aGVyIG1pbmVyYWwgZGVwb3NpdHMsIGluIHRoZSBsYW5kIHNvIHBhdGVudGVkLCB0b2dldGhlciB3aXRoIHRoZSByaWdodCB0byBwcm9zDQpwZWN0IGZvciwgbWluZSBhbmQgcmVtb3ZlIHRoZSBzYW1lLCBhY2NvcmRpbmcgdG8gdGhlIHByb3Zpc2lvbnMgb2Ygc2FpZCBBY3Qgb2YgSnVuZSAxLCAxOTM4LCBhcyBleGNlcHRlZCBhbmQgcmVzZXJ2ZWQgYnkgdGhlIFVuaXRlZCBTdGF0ZXMgb2YgQW1lcmljYSBpbiB0aGUgcGF0ZW50IHJlY29yZGVkIEF1Z3VzdCAyMywgMTk5MCBvbiBCb29rIDY0MjIsIFBhZ2UgMjM4NiBvZiBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBBUE46ICAyMzctMTQxLTI2DQpccGFyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IDR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkzXHNiMTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkzXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgVGhlIEVhc3QgaGFsZiBvZiB0aGUgU291dGh3ZXN0IHF1YXJ0ZXIgb2YgdGhlIFNvdXRoZWFzdCBxdWFydGVyIG9mIHRoZSBOb3J0aHdlc3QgcXVhcnRlciBvZiBTZWN0aX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtMVxleHBuZHR3LTVcaW5zcnNpZDI3NjQwNDAgb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTAsIFRvd25zaGlwIDExIE5vcnRoLCBSYW5nZSAxMyBXZXN0LCBTYW4gQmVybmFyZGlubyBNZXJpZGlhbiwgaW4gdGhlIHVuaW5jb3Jwb3JhdGVkIGFyZWEsIENvdW50eSBvZiBLZXJuLCBTdGF0ZSBvZiBDYWxpZm9ybmlhLCBhY2NvcmRpbmcgdG8gdGhlIE9mZmljaWFsIFBsYXQgdGhlcmVvZi4NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJccWogXGxpMTQ0MFxyaTBcc2IxNlxzbC0yNjBcc2xtdWx0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDBcY2hhcnJzaWQxMTc0OTUzMiANClxwYXIgRXhjZXB0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI3XGluc3JzaWQyNzY0MDQwXGNoYXJyc2lkMTE3NDk1MzIgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDBcY2hhcnJzaWQxMTc0OTUzMiB0aGVyZWZyb219e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjZcaW5zcnNpZDI3NjQwNDBcY2hhcnJzaWQxMTc0OTUzMiAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwXGNoYXJyc2lkMTE3NDk1MzIgDQphbGwgb2lsLCBnYXMgYW5kIG90aGVyIG1pbmVyYWwgZGVwb3NpdHMsIGluIHRoZSBsYW5kIHNvIHBhdGVudGVkLCB0b2dldGhlciB3aXRoIHRoZSByaWdodCB0byBwcm9zcGVjdCBmb3IsIG1pbmUgYW5kIHJlbW92ZSB0aGUgc2FtZSwgYWNjb3JkaW5nIHRvIHRoZSBwcm92aXNpb25zIG9mIHNhaWQgQWN0IG9mIEp1bmUgMSwgMTkzOCwgYXMgZXhjZXB0ZWQgYW5kIHJlc2VydmVkIGJ5IA0KdGhlIFVuaXRlZCBTdGF0ZXMgb2YgQW1lcmljYSBpbiB0aGUgcGF0ZW50IHJlY29yZGVkIEphbnVhcnkgNCwgMTk2MiBvbiBCb29rIDM0NDksIFBhZ2UgNDQgb2YgT2ZmaWNpYWwgUmVjb3Jkcy4NClxwYXIgDQpccGFyIEFQTjogIDIzNy0xNDEtMjcNClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCANClxwYXIgVHJhY3QgNX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDBcY2hhcnJzaWQxMTc0OTUzMiANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5M1xub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTNcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBUaGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgRWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ5XGV4cG5kdHc0OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYWxmfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOVxleHBuZHR3NDVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kOVxleHBuZHR3NDdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU291dGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ5XGV4cG5kdHc0OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ5XGV4cG5kdHc0NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ5XGV4cG5kdHc0NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTb3V0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOVxleHBuZHR3NDZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDlcZXhwbmR0dzQ1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDlcZXhwbmR0dzQ1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDlcZXhwbmR0dzQ4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoZWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kOVxleHBuZHR3NDVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOVxleHBuZHR3NDdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMzE2NDgwIFNlY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ5XGV4cG5kdHc0NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMCwgVG93bnNoaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUmFuZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBXZXN0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCZXJuYXJkaW5vfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTWVyaWRpYW4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHVuaW5jb3Jwb3JhdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXJlYSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ291bnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgS2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQtMlxleHBuZHR3LTEwXGluc3JzaWQyNzY0MDQwIHJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG4sIFN0YXRlIG9mIENhbGlmb3JuaWEsIGFjY29yZGluZyB0byB0aGUgb2ZmaWNpYWwgcGxhdCB0aGVyZW9mLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxxaiBcbGkxNDQwXHJpMFxzYjE2XHNsLTI2MFxzbG11bHQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMzMTY0ODAgRXhjZXB0IHRoZXJlZnJvbSBhbGwgb2lsLCBnYXMgYW5kIG90aGVyIGh5ZHJvY2FyYm9uIHN1YnN0YW5jZXMsIGFzIHJlc2VydmVkIGluIEJvb2sgMzMyNiwgUGFnZSA5ODIsIG9mIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMzE2NDgwXGNoYXJyc2lkMTE3NDk1MzIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQVBOOiAgMjM3LTE0Mi0yNQ0KXHBhciANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCA2fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MFxjaGFycnNpZDExNzQ5NTMyIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkzXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIFRoZSBXZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGFsZiBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU291dGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNvdXRoZWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3RpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEwLCBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFJhbmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFdlc3QsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2FufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCZXJuYXJkaW5vfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTWVyaWRpYW4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB1bmluY29ycG9yYXRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXJlYSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDb3VudHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgS2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQtMlxleHBuZHR3LTEwXGluc3JzaWQyNzY0MDQwIHJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG4sIFN0YXRlIG9mIENhbGlmb3JuaWEsIGFjY29yZGluZyB0byB0aGUgb2ZmaWNpYWwgcGxhdCB0aGVyZW9mLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBBUE46ICAyMzctMTQyLTI2DQpccGFyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IDd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwXGNoYXJyc2lkMTE3NDk1MzIgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTNcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkzXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgVGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgV2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGhhbGZ9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTb3V0aHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU291dGh3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoZWFzdCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3RpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwIG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEwLCBUb3duc2hpcCAxMSBOb3J0aCwgUmFuZ2UgMTMgV2VzdCwgU2FuIEJlcm5hcmRpbm8gQmFzZSBhbmQgTWVyaWRpYW4uDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTE0NDBccmkwXHNiMTZcc2wtMjAwXHNsbXVsdDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGZzMjBcaW5zcnNpZDI3NjQwNDBcY2hhcnJzaWQxMTc0OTUzMiANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5MlxzYjI5XG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45MlxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIEV4Y2VwdGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZXJlZnJvbX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgdG8gdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVW5pdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpTdGF0ZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbGx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvaWwsfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBnYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG90aGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbWluZXJhbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZGVwb3NpdHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRlbnRlZCwgdG9nZXRoZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdpdGggdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmlnaHQgdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHByb3NwZWN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZm9yLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbWluZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmVtb3ZlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzYW1lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWNjb3JkaW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0byB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwcm92aXNpb25zIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBY3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIEp1bmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMSwgMTkzOCwgYXMgcmVzZXJ2ZWQgaW4gcGF0ZW50IHJlY29yZGVkIEp1bmV9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAyOSwgMTk5MCBpbiBCb29rIDY0MDAsIFBhZ2UgMjM2MCBvZiBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBBUE46ICAyMzctMTQyLTMyDQpccGFyIH1ccGFyZCBcbHRycGFyXHMxNVxxbCBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCA4fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MFxjaGFycnNpZDExNzQ5NTMyIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkyXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45MlxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIFRoZSBXZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIGhhbGZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIE5vcnRod2VzdCBxdWFydGVyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICBOb3J0aHdlc3QgcXVhcnRlciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgU291dGhlYXN0IHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMCx9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRvd25zaGlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoLCBSYW5nZSAxMyBXZXN0LCBpbiB0aGUgdW5pbmNvcnBvcmF0ZWQgYXJlYSwgQ291bnR5IG9mIEtlcm4sIFN0YXRlIG9mIENhbGlmb3JuaWEsIFNhbiBCZXJuYXJkaW5vIEJhc2UgYW5kIE1lcmlkaWFuLCBhY2NvcmRpbmcgdG8gdGhlIG9mZmljaWFsIHBsYXQgdGhlcmVvZi4NClxwYXIgDQpccGFyIEV4Y2VwdGluZyBhbmQgcmVzZXJ2aW5nIHRvIHRoZSBVbml0ZWQgU3RhdGVzIGFsbCBvaWwsIGdhcyBhbmQgb3RoZXIgbWluZXJhbCBkZXBvc2l0cywgaW4gdGhlIGxhbmQgc28gcGF0ZW50ZWQsIHRvZ2V0aGVyIHdpdGggdGhlIHJpZ2h0IHRvIA0KcHJvc3BlY3QgZm9yLCBtaW5lIGFuZCByZW1vdmUgdGhlIHNhbWUgYWNjb3JkaW5nIHRvIHRoZSBwcm92aXNpb25zIG9mIHNhaWQgQWN0IG9mIEp1bmUgMSwgMTkzOCwgaW4gcGF0ZW50IHJlY29yZGVkIEF1Z3VzdCAyOSwgMTk2MSBpbiBCb29rIDM0MTAsIFBhZ2UgMjE0LCBvZiBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWwgXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBBUE46ICAyMzctMTUyLTAxDQpccGFyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IDl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwXGNoYXJyc2lkMTE3NDk1MzIgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTJcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkyXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgVGhlIEVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgaGFsZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgTm9ydGh3ZXN0IHF1YXJ0ZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIE5vcnRod2VzdCBxdWFydGVyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICBTb3V0aGVhc3QgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEwLH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVG93bnNoaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGgsIFJhbmdlIDEzIFdlc3QsIGluIHRoZSB1bmluY29ycG9yYXRlZCBhcmVhLCBDb3VudHkgb2YgS2VybiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgU2FuIEJlcm5hcmRpbm8gQmFzZSBhbmQgTWVyaWRpYW4sIGFjY29yZGluZyB0byB0aGUgb2ZmaWNpYWwgcGxhdCB0aGVyZW9mLg0KXHBhciANClxwYXIgRXhjZXB0aW5nIHRoZXJlZnJvbSBhbGwgb2lsLCBnDQphcyBhbmQgb3RoZXIgbWluZXJhbCBkZXBvc2l0cywgaW4gdGhlIGxhbmQgc28gcGF0ZW50ZWQsIHRvZ2V0aGVyIHdpdGggdGhlIHJpZ2h0IHRvIHByb3NwZWN0IGZvciwgbWluZSBhbmQgcmVtb3ZlIHRoZSBzYW1lIGFjY29yZGluZyB0byB0aGUgcHJvdmlzaW9ucyBvZiBzYWlkIEFjdCBvZiBKdW5lIDEsIDE5MzgsIGFzIHJlc2VydmVkIGJ5IHRoZSBVbml0ZWQgU3RhdGVzIG9mIEFtZXJpY2EgaW4gdGhlIHBhdGVudCByZWNvcmRlZCBBcHJpbCAyMSwNCiAxOTYwIGluIEJvb2sgMzI2MCwgUGFnZSA4NDIsIG9mIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxbCBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEFQTjogIDIzNy0xNTItMDINClxwYXIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgMTB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwXGNoYXJyc2lkMTE3NDk1MzIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTJcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkyXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KVGhlIFdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgaGFsZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgTm9ydGhlYXN0IHF1YXJ0ZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIE5vcnRod2VzdCBxdWFydGVyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICBTb3V0aGVhc3QgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEwLH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVG93bnNoaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGgsIFJhbmdlIDEzIFdlc3QsIGluIHRoZSB1bmluY29ycG9yYXRlZCBhcmVhLCBDb3VudHkgb2YgS2VybiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgU2FuIEJlcm5hcmRpbm8gQmFzZSBhbmQgTWVyaWRpYW4sIGFjY29yZGluZyB0byB0aGUgb2ZmaWNpYWwgcGxhdCB0aGVyZW9mLg0KXHBhciANClxwYXIgRXhjZXB0aW5nIHRoZXJlZnJvbSBhbGwgb2lsLCBnYXMgYW5kIG90aGVyIG1pbmVyYWwgZGVwb3NpdHMsIGluIHRoZSBsYW5kIHNvIHBhdGVudGVkLCB0b2dldGhlciB3aXRoIHRoZSByaWdodCB0byBwcm9zcGVjdCBmb3IsIG1pbmUgYW5kIHJlbW92ZSB0aGUgc2FtZSBhYw0KY29yZGluZyB0byB0aGUgcHJvdmlzaW9ucyBvZiBzYWlkIEFjdCBvZiBKdW5lIDEsIDE5MzgsIGFzIHJlc2VydmVkIGJ5IHRoZSBVbml0ZWQgU3RhdGVzIG9mIEFtZXJpY2EgaW4gdGhlIHBhdGVudCBkYXRlZCBKYW51YXJ5IDE0LCAxOTYwIFBhdGVudCBOby4gMTIwMzc1NSBhbmQgcmVjb3JkZWQgQXVndXN0IDE3LCAxOTYwIGluIEJvb2sgMzI5MywgUGFnZSA5NDksIG9mIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxbCBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEFQTjogIDIzNy0xNTItMDMNClxwYXIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgMTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwXGNoYXJyc2lkMTE3NDk1MzIgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTJcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkyXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgVGhlIEVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgaGFsZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgTm9ydGhlYXN0IHF1YXJ0ZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIE5vcnRod2VzdCBxdWFydGVyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICBTb3V0aGVhc3QgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEwLH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVG93bnNoaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGgsIFJhbmdlIDEzIFdlc3QsIGluIHRoZSB1bmluY29ycG9yYXRlZCBhcmVhLCBDb3VudHkgb2YgS2VybiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgU2FuIEJlcm5hcmRpbm8gTWVyaWRpYW4sIGFjY29yZGluZyB0byB0aGUgb2ZmaWNpYWwgcGxhdCB0aGVyZW9mLg0KXHBhciANClxwYXIgRXhjZXB0IGFsbCBvaWwsIGdhcyBhbmQgb3RoZXIgbWluZXJhbCBkZXBvc2l0cywgaW4gdGhlIGxhbmQgc28gcGF0ZW50ZWQsIHRvZ2V0aGVyIHdpdGggdGhlIHJpZ2h0IHRvIHByb3NwZWN0IGZvciwgbWluZSBhbmQgcmVtb3ZlIHRoZSBzYW1lLCBhcyByZXNlcnZlZCBieSB0aGUgVW5pdGVkIFN0YXRlcyBvZiBBbWVyaWNhIGluIHRoZSBwYXRlbnQgcmVjb3JkZWQgT2N0b2JlciAyNiwgMTk2MCBpbiBCb29rIDMzMTQsIFBhZw0KZSA4ODAsIG9mIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxbCBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEFQTjogIDIzNy0xNTItMDQNClxwYXIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgMTJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwXGNoYXJyc2lkMTE3NDk1MzIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxbCBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTJcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkyXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KVGhlIFdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgaGFsZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgTm9ydGh3ZXN0IHF1YXJ0ZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIE5vcnRoZWFzdCBxdWFydGVyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICBTb3V0aGVhc3QgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEwLH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVG93bnNoaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGgsIFJhbmdlIDEzIFdlc3QsIGluIHRoZSB1bmluY29ycG9yYXRlZCBhcmVhLCBDb3VudHkgb2YgS2VybiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgU2FuIEJlcm5hcmRpbm8gTWVyaWRpYW4sIGFjY29yZGluZyB0byB0aGUgb2ZmaWNpYWwgcGxhdCB0aGVyZW9mLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWwgXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBBUE46ICAyMzctMTUyLTA1DQpccGFyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MFxjaGFycnNpZDExNzQ5NTMyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWwgXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTk4XHNiMTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk4XGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgVGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOVxleHBuZHR3NDVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGFsZn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDlcZXhwbmR0dzQ1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kOFxleHBuZHR3NDJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOVxleHBuZHR3NDVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kOFxleHBuZHR3NDJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ4XGV4cG5kdHc0MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ4XGV4cG5kdHc0MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTb3V0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDhcZXhwbmR0dzQyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDlcZXhwbmR0dzQ1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3RpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kLTFcZXhwbmR0dy01XGluc3JzaWQyNzY0MDQwIG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTAsIFRvd25zaGlwIDExIE5vcnRoLCBSYW5nZSAxMyBXZXN0LCBTYW4gQmVybmFyZGlubyBCYXNlIA0KYW5kIE1lcmlkaWFuLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkxXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45MVxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEV4Y2VwdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFsbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9pbCx9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGdhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG90aGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbWluZXJhbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZGVwb3NpdHMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG9nZXRoZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdpdGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJpZ2h0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHByb3NwZWN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZm9yLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbWluZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZCByZW1vdmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZSBzYW1lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFjY29yZGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHByb3Zpc2lvbnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQWN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgSnVuZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0yXGV4cG5kdHctMTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTkzOCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZXNlcnZlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGJ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFVuaXRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTdGF0ZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBbX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0xXGV4cG5kdHctNlxpbnNyc2lkMjc2NDA0MCBlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByaWNhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGluIHBhdGVudCByZWNvcmRlZCBBcHJpbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dy0xXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDUsIDE5NjAgaW4gQm9vayAzMjU2LCBQYWdlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMzE2NDgwIDE4IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2YgT2ZmaWNpYWwgUmVjb3Jkcy4NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFsIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgQVBOOiAgMjM3LTE1Mi0wNg0KXHBhciANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCAxNH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDBcY2hhcnJzaWQxMTc0OTUzMiANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFsIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5Mlxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTJcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpUaGUgTm9ydGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgaGFsZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH0NCntccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgV2VzdCBoYWxmIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICBOb3J0aGVhc3QgcXVhcnRlciBvZiB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDEzMzE2NDgwIE5vcnRoZWFzdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIFNvdXRoZWFzdCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTAsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpOb3J0aCwgUmFuZ2UgMTMgV2VzdCwgaW4gdGhlIHVuaW5jb3Jwb3JhdGVkIGFyZWEsIENvdW50eSBvZiBLZXJuLCBTdGF0ZSBvZiBDYWxpZm9ybmlhLCBTYW4gQmVybmFyZGlubyBNZXJpZGlhbiwgYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2lhbCBwbGF0IHRoZXJlb2YuDQpccGFyIA0KXHBhciBFeGNlcHRpbmcgdGhlcmVmcm9tIGFsbCBvaWwsIGdhcyBhbmQgb3RoZXIgbWluZXJhbCBkZXBvc2l0cywgaW4gdGhlIGxhbmQgc28gcGF0ZW50ZWQsIHRvZ2V0aGVyIHdpdGggdGhlIHJpZ2h0IHRvIHByb3NwZWN0IGZvciwgbWluZSBhbmQgcmVtb3ZlIHRoDQplIHNhbWUsIGFjY29yZGluZyB0byB0aGUgcHJvdmlzaW9ucyBvZiBzYWlkIEFjdCBvZiBKdW5lIDEsIDE5MzgsIGFzIGV4Y2VwdGVkIGFuZCByZXNlcnZlZCBieSB0aGUgVW5pdGVkIFN0YXRlcyBvZiBBbWVyaWNhIGluIHRoZSBwYXRlbnQgcmVjb3JkZWQgSnVuZSAxNiwgMTk2MCBpbiBCb29rIDMyNzYsIFBhZ2UgNTEsIG9mIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxbCBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEFQTjogIDIzNy0xNTItMzMNClxwYXIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgMTV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwXGNoYXJyc2lkMTE3NDk1MzIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxbCBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTNcc2IxMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTNcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBUaGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBXZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGFsZn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRod2VzdCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRvd25zaGlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFJhbmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFdlc3QsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCZXJuYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0xXGV4cG5kdHctOFxpbnNyc2lkMjc2NDA0MCByfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBkaW5vIE1lcmlkaWFuLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB1bmluY29ycG9yYXRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXJlYSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDb3VudHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgS2Vybix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFN0YXRlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENhbGlmb3JuaWEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWNjb3JkaW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2ZmaWNpYWwgcGxhdCB0aGVyZW9mLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkzXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEV4Y2VwdGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVyZWZyb219e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb25lLWhhbGZ9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbGx9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvaWwsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGdhcyx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBtaW5lcmFsc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvdGhlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoeWRyb2NhcmJvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHN1YnN0YW5jZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbmF0dXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZ2FzLCB1bmRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzYWlkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlc2VydmVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE0mUn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNoZWVwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDby4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIERlZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZWNvcmRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm92ZW1iZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTFcZXhwbmR0dy04XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDIyLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTk1NX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCb29rfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMjUxOSwgUGFnZSAyODMsIG9mIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxbCBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEFQTjogIDIzNy0yODQtMDENClxwYXIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgMTZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwXGNoYXJyc2lkMTE3NDk1MzIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxbCBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpMTczXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4xNzNcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBUaGUgV2VzdCBoYWxmIG9mIHRoZSBXZXN0IGhhbGYgb2YgdGhlIE5vcnRoZWFzdA0KIHF1YXJ0ZXIgb2YgdGhlIE5vcnRod2VzdCBxdWFydGVyIG9mIFNlY3Rpb24gMTEsIFRvd25zaGlwIDExIE5vcnRoLCBSYW5nZSAxMyBXZXN0LCBTYW4gQmVybmFyZGlubyBCYXNlIGFuZCBNZXJpZGlhbiwgaW4gdGhlIHVuaW5jb3Jwb3JhdGVkIGFyZWEsIENvdW50eSBvZiBLZXJuLCBTdGF0ZSBvZiBDYWxpZm9ybmlhLCBhcyBwZXIgQ2VydGlmaWNhdGUgb2YgQ29tcGxpYW5jZSBOby4gNDQ2IHJlY29yZGVkIE1heX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dy0yXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDI4LCAxOTgyIGluIEJvb2sgNTQ2MiwgUGFnZSAxNDgzIG9mIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpMzA4NVxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMzA4NVxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkwXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBFeGNlcHQgNTAlIG9mIGFsbCBvaWwgYW5kIG1pbmVyYWwgcmlnaHRzIGFzIHJlc2VydmVkIGluIHJlY29yZHMgb2Ygc2FpZCBDb3VudHkuDQpccGFyIA0KXHBhciBBUE46ICAyMzctMjg0LTAyDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCANClxwYXIgVHJhY3QgMTd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwXGNoYXJyc2lkMTE3NDk1MzIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxbCBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOThcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk4XGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KVGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgRWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGhhbGZ9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBXZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGFsZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoZWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRvd25zaGlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMSBOb3J0aCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBSYW5nZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBXZXN0LCBTYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJlcm5hcmRpbm99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBNZXJpZGlhbix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGluIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHVuaW5jb3Jwb3JhdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhcmVhLCBDb3VudHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgS2Vybix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTdGF0ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2YgQ2FsaWZvcm5pYSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMTBcZXhwbmR0dzUxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFjY29yZGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDEwXGV4cG5kdHc1NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxMFxleHBuZHR3NTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMTFcZXhwbmR0dzU1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mZmljaWFsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDEwXGV4cG5kdHc1MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBtYXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxMFxleHBuZHR3NTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMTBcZXhwbmR0dzU0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxMFxleHBuZHR3NTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxMFxleHBuZHR3NTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxMFxleHBuZHR3NTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmlsZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxMFxleHBuZHR3NTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxMFxleHBuZHR3NTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDEwXGV4cG5kdHc1MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCdXJlYXV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxMFxleHBuZHR3NTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMTBcZXhwbmR0dzUyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIExhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxMFxleHBuZHR3NTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTWFuYWdlbWVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxMFxleHBuZHR3NTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQphbmQgYXBwcm92ZWQgYnkgdGhlIFN1cnZleW9yIEdlbmVyYWwgb24gU2VwdGVtYmVyIDE5LCAxODU2Lg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkzXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEV4Y2VwdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZXJlZnJvbX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9uZS1oYWxmIG9mfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWxsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2lsLH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZ2FzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBtaW5lcmFsc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaHlkcm9jYXJib259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzdWJzdGFuY2VzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdW5kZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0xXGV4cG5kdHctOVxpbnNyc2lkMjc2NDA0MCBpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGFuZCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFzIGV4Y2VwdGVkIGluIER9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCBlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBlZCBkYXRlZCBBdWd1c3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDQsIDE5NTUgZnJvbX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE0mUiBTaGVlcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ28uLCB0byBDLk0ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVHVybGV5LCByZWNvcmRlZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwIE59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG92ZW1iZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAyMiwgMTk1NSBpbiBCb29rIDI1MTksIFBhZ2UgMjg5LCBvZiBPZmZpY2lhbCBSZWNvcmRzLiANCiBTYWlkIGRlZWQgcHJvdmlkZXMgaW4gcGFydDoNClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBUaGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByaWdodH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBjb25kdWN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZHJpbGxpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb3RoZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9wZXJhdGlvbnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB1cG9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzdXJmYWNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxhbmRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZGVzY3JpYmVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb3IgYW55fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwb3J0aW9uIHRoZXJlb2YsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2l0aG91dH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmlyc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYXZpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNlY3VyZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdyaXR0ZW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBjb25zZW50IG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWNvbmQgcGFydGllcyx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZWlyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGVpcnMgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtM1xleHBuZHR3LTE4XGluc3JzaWQyNzY0MDQwIHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlnbnMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZSBvd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvd25lcnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc3VjaH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcG9ydGlvbnMgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHN1cmZhY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbWF5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHVzZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmb3IgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZHJpbGxpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzaXRlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHN1cmZhY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9wZXJhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW9ucyx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGJ1dCBub3RoaW5nIGhlcmVpbiBjb250YWluZWQgc2hhbGwgYmUgZGVlbWVkIHRvIHByZXZlbnQgdGhlIEdyYW50b3IgaXRzIHN1Y2Nlc3NvcnMgYW5kIGFzc2lnbnMgZnJvbSBleHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCByfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFjdGluZyBvciBjYXB0dXJpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzYWlkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvaWwsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZ2FzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG90aGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBoeWRyb2NhcmJvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHN1YnN0YW5jZXMgb3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIG1pbmVyYWxzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANCmRyaWxsaW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhZGphY2VudH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBuZWlnfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kLTJcZXhwbmR0dy0xM1xpbnNyc2lkMjc2NDA0MCBofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBib3JpbmcgbGFuZHMgYW5kL29yIGZyb20gY29uZHVjdGluZyBzdX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwIGJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTFcaW5zcnNpZDI3NjQwNDAgLX17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzdXJmYWNlIGRyaWxsaW5nIG9yIG90aGVyIG9wZXJhdGlvbnMgdW5kZXIgc2FpZCBsYW5kcyBsYXN0IGFib3ZlIGR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpzY3JpYmVkIGF0IHN1Y2ggZGVwdGhzIGFzIG5vdCB0byBkaXN0dXJiIHRoZSBzdXJmYWNlIHRoZXJlb2Ygb3IgYW55IGltcHJvdmVtZW50cyB0aGVyZW9uLCB3YXMgd2FpdmVkIGJ5IHRoZSBHcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBudG9ycyBpbiBzYWlkIERlZWQuDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTJcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkyXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgRXhjZXB0aW5nIHRoZXJlZnJvbX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZSBOb3J0aGVhc3QgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgb2YgdGhlIE5vcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwIHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGh3ZXN0IHF1YXJ0ZXIgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIHRoZSBOb3J0aGVhc3QgcXVhcnRlciBvZiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTFcZXhwbmR0dy04XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRod2VzdCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIHNlY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNvdXRoZWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGh3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDVcZXhwbmR0dzI2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZSBOb3J0aHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXIgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzYWlkIHNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCBjfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aW9uIGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlY29udmV5ZWQgYnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBEb2N1bWVudCByZWNvcmRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCb29rIDUxMDEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUGFnZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMjI0NSBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE9mZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgaX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgY2lhbCBSZWNvcmRzLg0KXHBhciANClxwYXIgQVBOOiAgMjM3LTI4NC0wNQ0KXHBhciANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IDE4fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MFxjaGFycnNpZDExNzQ5NTMyIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMFxyaTkyXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45MlxsaW4wXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOThcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk4XGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBUaGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIFdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYWxmfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEVhc3R9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGhhbGZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExLCBOb3J0aCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFJhbmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFdlc3QsIFNhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJlcm5hcmRpbm99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE1lcmlkaWFuLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGluIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdW5pbmNvcnBvcmF0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhcmVhLCBDb3VudHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgS2Vybix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFN0YXRlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2YgQ2FsaWZvcm5pYSwgYWNjb3JkaW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0byB0aGUgb2ZmaWNpYWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwbGF0IHRoZXJlb2YuDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTJcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkyXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgRXhjZXB0aW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZXJlZnJvbX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvbmUtaGFsZn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFsbH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9pbCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMzE2NDgwIGdhcyx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxNlxpbnNyc2lkMTMzMTY0ODAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbWluZXJhbHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaHlkcm9jYXJib25zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHVuZGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsYW5kLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KZXhjZXB0ZWQgYnkgTSZSIFNoZWVwIENvLiwgaW4gZGVlZCByZWNvcmRlZCBOb3ZlbWJlciAyMiwgMTk1NSBpbiBCb29rIDI1MTksIFBhZ2UgMjg5IG9mIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIA0KXHBhciBBUE46ICAyMzctMjg0LTA2DQpccGFyIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgMTl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwXGNoYXJyc2lkMTE3NDk1MzIgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTJcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkyXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5OFxzYjI5XG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgRWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYWxmfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEVhc3R9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYWxmfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoZWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGh3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwIG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHduc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExIE5vcnRoLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ5XGV4cG5kdHc0NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBSYW5nZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDlcZXhwbmR0dzQ3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDlcZXhwbmR0dzQ1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFdlc3QsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kOFxleHBuZHR3NDRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2FufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDlcZXhwbmR0dzQ1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJlcm5hcmRpbm99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ5XGV4cG5kdHc0NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBNZXJpZGlhbix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOVxleHBuZHR3NDZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ4XGV4cG5kdHc0NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOVxleHBuZHR3NDdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdW5pbmNvcnBvcmF0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ5XGV4cG5kdHc0NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhcmVhLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDb3VudHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ5XGV4cG5kdHc0N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ5XGV4cG5kdHc0NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBLZXJuLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDlcZXhwbmR0dzQ2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFN0YXRlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDlcZXhwbmR0dzQ2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIENhbGlmb3JuaWEsIGFjY29yZGluZyB0byB0aGUgb2ZmaWNpYWwgcGxhdCB0aGVyZW9mLg0KDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTNcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkzXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgRXhjZXB0aW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlcmVmcm9tfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb25lLWhhbGZ9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWxsfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvaWwsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZ2FzLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbWluZXJhbHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGh5ZHJvY2FyYm9uc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGluIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdW5kZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzYWlkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCBnfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBldGhlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdpdGggdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByaWdodHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbmNpZGVudGFsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVyZXRvLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBleGNlcHRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGJ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBNJlJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTaGVlcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ28uLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBkZWVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmVjb3JkZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vdmVtYmVyIDIyLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDE5NTV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIEJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9vayAyNTE5LCBQYWdlIDI4OSwgb2YgT2ZmaWNpYWwgUmVjb3Jkcy4NClxwYXIgDQpccGFyIEFQTjogIDIzNy0yODQtMDcNClxwYXIgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCAyMH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDBcY2hhcnJzaWQxMTc0OTUzMiANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5M1xub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTNcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkyXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45MlxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVGhlIFNvdXRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aHdlc3QgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgb2YgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2YgU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExLH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVG93bnNoaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoIFJhbmdlIDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgV2VzdCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJlcm5hcmRpbm99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE1lcmlkaWFuLCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdW5pbmNvcnBvcmF0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhcmVhLCBDb3VudHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIEtlcm4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU3RhdGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIENhbGlmb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtMlxleHBuZHR3LTExXGluc3JzaWQyNzY0MDQwIHJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG5pYSwgYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2lhbCBwbGF0IHRoZXJlb2YuDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpODFcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjgxXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgRXhjZXB0aW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlcmVmcm9tfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgXCdiZH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbGx9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9pbCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBnYXMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBtaW5lcmFsc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaHlkcm9jYXJib259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzdWJzdGFuY2VzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbiBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB1bmRlciBzYWlkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsYW5kLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFzIGV4Y2VwdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBieX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwICZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBSfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTaGVlcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENvLix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZGVlZCByZWNvcmRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm92ZW1iZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAyMix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDE5NTV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQm9va317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDI1MTksfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBQYWdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMjgzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxODAwXHJpOTNcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkzXGxpbjE4MDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTE0NDBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDEzMTc2NzEzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQVBOOiAgMjM3LTI4NS0wNQ0KXHBhciB9XHBhcmQgXGx0cnBhclxzMTVccWogXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDEzMTc2NzEzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYwNzEyOTYgZC5cdGFiIFJvYWRzOg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IDF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwXGNoYXJyc2lkMTE3NDk1MzIgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpMFxzYjEwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgVGhlIEVhc3QgaGFsZiBvZiB0aGUgRWFzdCBoYWxmIG9mIFNlY3Rpb24gOSwgVG93bnNoaXAgMTEgTm9ydGgsIFJhbmdlIDEzIFdlc3QsIFNhbiBCZXJuYXJkaW5vIEJhc2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kIE1lcmlkaWFufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxMzMxNjQ4MCAsIGluIHRoZSB1bmluY29ycG9yYXRlZCBhcmVhIG9mIHRoZSBDb3VudHkgb2YgS2VybiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgYXMgcGVyIHRoZSBvZmZpY2lhbCBwbGF0IHRoZXJlb2Ygb24gZmlsZSBpbiB0aGUgT2ZmaWNlIG9mIHRoZSBTdXJ2ZXlvciBHZW5lcmFsLCBhcHByb3ZlZCBTZXB0ZW1iZXIgMTksIDE4NTZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIC4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmkxNTRcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjE1NFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgRXhjZXB0aW5nIHRoZXJlZnJvbSBvbmUgaGFsZiBvZiBhbGwgb2lsLCBnYXMgDQphbmQgb3RoZXIgaHlkcm9jYXJib24gc3Vic3RhbmNlcyBhbmQgbWluZXJhbHMgaW4gYW5kIHVuZGVyIHNhaWQgbGFuZCwgYXMgZXhjZXB0ZWQgaW4gZGVlZCBkYXRlZCBEZWNlbWJlciAxLCAxOTU1IGZyb20gTSZSIFNoZWVwIENvbXBhbnksIHJlY29yZGVkIE1hcmNofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dy0yXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgMjIsIDE5NTYgaW4gQm9vayAyNTgxLCBQYWdlIDIzMyBvZiBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBBUE46ICAyMzctMDIyLTEzDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcbGkwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCAyDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDBcY2hhcnJzaWQxMTc0OTUzMiANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgSGFsZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aGVhc3R9DQp7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBRdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxNix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBSYW5nZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFdlc3QsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2FufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJlcm5hfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kLTFcZXhwbmR0dy05XGluc3JzaWQyNzY0MDQwIHJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGRpbm8gTWVyaWRpYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzMxNjQ4MCANCiwgaW4gdGhlIENvdW50eSBvZiBLZXJuLCBTdGF0ZSBvZiBDYWxpZm9ybmlhLCBhY2NvcmRpbmcgdG8gdGhlIG9mZmljaWFsIHBsYXQgb2Ygc2FpZCBsYW5kIGJ5IHRoZSBTdXJ2ZXlvciBHZW5lcmFsIGRhdGVkIFNlcHRlbWJlciAxOSwgMTg1Nn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkzXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEV4Y2VwdGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVyZWZyb219e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FpZH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW59e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB1bmRpdmlkZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMS8xNnRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWxsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgY29hbCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2lsLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzMyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9pbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzaGFsZSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBnYXMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHBob3NwaGF0ZSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCBkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpdW19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmQgb3RoZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBtaW5lcmFsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBkZXBvc2l0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGluIHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmVzZXJ2ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0byB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFN0YXRlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENhbGlmb3JuaWEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHByb3Zpc2lvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtMVxleHBuZHR3LThcaW5zcnNpZDI3NjQwNDAgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgY3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlIGxlZ2lzbGF0aW9uLCBzdGF0dXRlcyBvZiAxOTIxIHBhZ2UgNDA0IGFuZCBhbWVuZG1lbnRzIHRoZXJldG8uDQpccGFyIA0KXHBhciBBbHNvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZXhjZXB0aW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlcmVmcm9tfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYWxmfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFsbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9pbCwgaHlkcm9jYXJib25zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzaW1pbGFyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBtaW5lcmFsc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGJ1dH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2l0aG91dCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByaWdodH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZW50cnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvIGRlcHRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDUwMH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZlZXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZyb219e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHN1cmZhY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVyZW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHByb3BlcnR5Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBncmFudGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEoufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgSi59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEtlc3NsZXIsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJyaWVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBtYW4sIGluIGRlZWQgcmVjb3JkZWQgQXVndXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dy0xXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDIzLCAxOTU2IGluDQogQm9vayAyNjU0LCBQYWdlIDMwMCBvZiBPZmZpY2lhbCByZWNvcmRzLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTgwMFxyaTkzXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xODAwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTNcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkzXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBUE46ICAyMzctMDMxLTA4DQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkwXHJpOTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkwXGxpbjBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IDMNClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTgyXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW44MlxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxMVxleHBuZHR3NTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBzdHJpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxMVxleHBuZHR3NTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMTBcZXhwbmR0dzU0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxhbmQsfQ0Ke1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMTFcZXhwbmR0dzU1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9uZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxMVxleHBuZHR3NTZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaHVuZHJlZH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDExXGV4cG5kdHc1NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzZXZlbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTFcZXhwbmR0dy02XGluc3JzaWQyNzY0MDQwIHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIC1maXZlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMTFcZXhwbmR0dzU1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwICgxNzUpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDExXGV4cG5kdHc1NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmZWV0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMTBcZXhwbmR0dzUzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDExXGV4cG5kdHc1NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3aWR0aCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxMVxleHBuZHR3NTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2l0dWF0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMTFcZXhwbmR0dzU1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMTFcZXhwbmR0dzU1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxMFxleHBuZHR3NTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU291dGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxMFxleHBuZHR3NTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgXCdiZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ5XGV4cG5kdHc0OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDExXGV4cG5kdHc1N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCB0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxMFxleHBuZHR3NTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTYsIFRvd25zaGlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoLCBSYW5nZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBXZXN0LCBTYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCZXJuYXJkaW5vfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCYXNlIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE1lcmlkaWFuLCBLZXJufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDb3VudHksfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ2FsaWZvcm5pYSwgYmVpbmcgYSBwb3J0aW9uIG9mfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGF0IHByb3B9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCBlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBydHkgY29udn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgeWVkIHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVGhlIE11fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCByfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpZWwgUG9sbGlhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgRm91bmRhdGlvbiwgYnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIERvY3VtZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm8uIDAyMDcyMjA2MzEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZWNvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpkZWQgb24gTm92ZW1iZXIgMiwgMjAwNywgS2VybiBDb3VudHkgRGVlZCBSZWNvcmRzLCBhbmQgYmVpbmcgbW9yZSBwYXJ0aWN1bGFybHkgZGVzY3JpYmVkIGFzIGZvbGxvd3M6DQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkwXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgVGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgRWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9uZX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaHVuZHJlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNldmVudHktZml2ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgKDE3NSl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmZWV0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNvdXRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgXCdiZCwgU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTYsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG9nZXRoZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdpdGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGF0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dy0zXGluc3JzaWQyNzY0MDQwIG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBodW5kcmVkIHNldmVudHktZml2ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwICgxNzUpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBmb290fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc3RyaXAsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzb3V0aGVybHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsaW5lfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdoaWNofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpcyBjb2luY2lkZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwYXJhbGxlbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdpdGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG5vcnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQtM1xleHBuZHR3LTE4XGluc3JzaWQyNzY0MDQwIGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGVybHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByaWdodH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Ygd2F5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGluZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2YgT2FrIENyZWVrfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUm9hZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgKENvdW50eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFJvYWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDY0OCl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsaW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBiZWluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDMwLjAwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmZWV0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbm9ydGhlcmx5IG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBjZW50ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCBsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiBzYWlkIHJvYWQsIHdoZW4gbWVhc3VyZWQgYXQgcmlnaHQgYW5nbGVzLg0KXHBhciANClxwYXIgQVBOOiAgMjM3LTAzMS0zOA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkzXHNiMTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkzXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IDQNClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5M1xzYjEwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIFRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYWxmfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGh3ZXN0IHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVG93bnNoaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGgsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUmFuZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgV2VzdCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJlcm5hfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kLTFcZXhwbmR0dy04XGluc3JzaWQyNzY0MDQwIHJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGRpbm8gTWVyaWRpYW4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHVuaW5jb3Jwb3JhdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhcmVhLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENvdW50eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBLZXJuLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU3RhdGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ2FsaWZvcm5pYSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhY2NvcmRpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZmZpY2lhbCBwbGF0IHRoZXJlb2YuDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTNcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkzXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgRXhjZXB0aW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZXJlZnJvbX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0MFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvbmUtaGFsZn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFsbH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9pbCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZ2FzLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG1pbmVyYWxzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG90aGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGh5ZHJvY2FyYm9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc3Vic3RhbmNlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBuYXR1cn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBnYXMsIHVuZGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmVzZXJ2ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBieX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTSZSfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2hlZXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENvLix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgRGVlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlY29yZGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3ZlbWJlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtMVxleHBuZHR3LThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMjIsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxOTU1fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJvb2t9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAyNTE5LCBQYWdlIDI4Mywgb2YgT2ZmaWNpYWwgUmVjb3Jkcy4NClxwYXIgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTNcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkzXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxMzMxNjQ4MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMzE2NDgwIEFQTjogIDIzNy0yODQtMDENClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5M1xub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTNcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDE0OTA0MDE3IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMzMTY0ODAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTNcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkzXGxpbjE0NDBcaXRhcDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxMzMxNjQ4MFxjaGFycnNpZDE1NTQwNzYzIFRyYWN0IDV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxMzMxNjQ4MFxjaGFycnNpZDE0OTA0MDE3IA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkzXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMzE2NDgwIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRoZSBXZXN0IGhhbGYgb2YgdGhlIE5vcnRod2VzdCBxdWFydGVyIG9mIHRoZSBOb3J0aHdlc3QgcXVhcnRlciBvZiB0aGUgTm9ydGh3ZXN0IHF1YXJ0ZXIgb2YgU2VjdGlvbiAxMCwgVG93bnNoaXAgMTEgTm9ydGgsIFJhbmdlIDEzIFdlc3QsIFNhbiBCZXJuYXJkaW5vIE1lcmlkaWFuLCBpbiB0aGUgdW5pbmNvcg0KcG9yYXRlZCBhcmVhLCBDb3VudHkgb2YgS2VybiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgYWNjb3JkaW5nIHRvIHRoZSBPZmZpY2lhbCBQbGF0IHRoZXJlb2YuDQpccGFyIA0KXHBhciBFeGNlcHRpbmcgdGhlcmVmcm9tIGFsbCBvaWwsIGdhcyBhbmQgb3RoZXIgbWluZXJhbCBkZXBvc2l0cyBpbiB0aGUgbGFuZCBzbyBwYXRlbnRlZCwgdG9nZXRoZXIgd2l0aCB0aGUgcmlnaHQgdG8gcHJvc3BlY3QgZm9yLCBtaW5lIGFuZCByZW1vdmUgdGhlIHNhbWUgYWNjb3JkaW5nIHRvIA0KdGhlIHByb3Zpc2lvbnMgb2Ygc2FpZCBBY3Qgb2YgSnVuZSAxLCAxOTM4LCBhcyByZXNlcnZlZCBpbiBEZWVkIHJlY29yZGVkIEF1Z3VzdCAxNCwgMTk2MyBpbiBCb29rIDM2MzQsIFBhZ2UgODM1IG9mIE9mZmljaWFsIFJlY29yZHMufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBBUE46ICAyMzctMTQxLTAxDQpccGFyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDEzMzE2NDgwIDZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkzXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIFRoZSBFYXN0IGhhbGYgb2YgdGhlIE5vcnRod2VzdCBxdWFydGVyIG9mIHRoZSBOb3J0aHdlc3QgcXVhcnRlciBvZiB0aGUgTm9ydGh3ZXN0IHF1YXJ0ZXIgb2YgDQpTZWN0aW9uIDEwLCBUb3duc2hpcCAxMSBOb3J0aCwgUmFuZ2UgMTMgV2VzdCwgU2FuIEJlcm5hcmRpbm8gTWVyaWRpYW4sIGluIHRoZSB1bmluY29ycG9yYXRlZCBhcmVhLCBDb3VudHkgb2YgS2VybiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgYWNjb3JkaW5nIHRvIHRoZSBPZmZpY2lhbCBQbGF0IHRoZXJlb2YuDQpccGFyIA0KXHBhciBFeGNlcHRpbmcgdGhlcmVmcm9tIGFsbCBvaWwsIGdhcyBhbmQgb3RoZXIgbWluZXJhbCBkZXBvc2l0cyBpbiB0aGUgbGFuZCBzbyBwYXRlDQpudGVkLCB0b2dldGhlciB3aXRoIHRoZSByaWdodCB0byBwcm9zcGVjdCBmb3IsIG1pbmUgYW5kIHJlbW92ZSB0aGUgc2FtZSBhY2NvcmRpbmcgdG8gdGhlIHByb3Zpc2lvbnMgb2Ygc2FpZCBBY3Qgb2YgSnVuZSAxLCAxOTM4LCBhcyByZXNlcnZlZCBpbiBEZWVkIHJlY29yZGVkIFNlcHRlbWJlciAyMCwgMTk2NyBpbiBCb29rIDQwOTAsIFBhZ2UgODUxIG9mIE9mZmljaWFsIFJlY29yZHMufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEFQTjogIDIzNy0xNDEtMDINClxwYXIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTMzMTY0ODAgN317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpMjYwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4yNjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBUaGUgV2VzdCBoYWxmIG9mIHRoZSBOb3J0aGVhc3QgcXVhcnRlciBvZiB0aGUgTm9ydGh3ZXN0IHF1YXJ0ZXIgb2YgdGhlIE5vcnRod2VzdCBxdWFydGVyIG9mIFNlY3Rpb24gMTAsIFRvd25zaGlwIDExIE5vcnRoLCBSYW5nZSAxMyBXZXN0LCBTYW4gQmVybmFyZGlubyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzMxNjQ4MCBCYXNlIGFuZCB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTWVyaWRpYW4sIGluIHRoZSB1bmluY29ycG9yYXRlZCBhcmVhLCBDb3VudHkgb2YgS2VybiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2lhbCBwbGF0IHRoZXJlb2YuDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEFQTjogIDIzNy0xNDEtMDMNClxwYXIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTMzMTY0ODAgOH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTNcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkzXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KVGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgRWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGhhbGZ9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aGVhc3QgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGh3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3RpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwIG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEwLCBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBSYW5nZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBXZXN0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2FufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQmVybmFyZGlub317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTWVyaWRpYW4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ291bnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEtlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kLTJcZXhwbmR0dy0xMFxpbnNyc2lkMjc2NDA0MCByfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBuLCBTdGF0ZSBvZiBDYWxpZm9ybmlhLCBhY2NvcmRpbmcgdG8gdGhlIG9mZmljaWFsIHBsYXQgdGhlcmVvZi4NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5M1xub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTNcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDEzMzE2NDgwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDEzMzE2NDgwIEV4Y2VwdGluZyB0aGVyZWZyb20gYWxsIG9pbCwgZ2FzIGFuZCBvdGhlciBtaW5lcmFsIGRlcG9zaXRzLCBpbiB0aGUgbGFuZCBzbyBwYXRlbnRlZCwgdG9nZXRoZXIgd2l0aCB0aGUgcmlnaHQgdG8gcHJvc3BlY3QgZm9yLCBtaW5lIGFuZCByZW1vdmUgdGhlIHNhbWUsIGFjY29yZGluZyB0byB0aGUgcHJvdmlzaW9ucyBvZiBzYWlkIEFjdCBvZiBKdW5lIDEsIDE5MzgsIGFzIGV4Y2VwdGVkIA0KYW5kIHJlc2VydmVkIGJ5IHRoZSBVbml0ZWQgU3RhdGVzIG9mIEFtZXJpY2EgcmVjb3JkZWQgaW4gQm9vayAzMjU5LCBQYWdlIDY0MSBvZiBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxMzMxNjQ4MCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBUE46ICAyMzctMTQxLTA0DQpccGFyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDEzMzE2NDgwIDl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTk4XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIFRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBFYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGhhbGZ9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0MFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTb3V0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDhcZXhwbmR0dzQwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGh3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwIG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTAsIFRvd25zaGlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUmFuZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgV2VzdCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJlcm5hcmRpbm99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBNZXJpZGlhbix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGluIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHVuaW5jb3Jwb3JhdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhcmVhLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENvdW50eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBLZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0yXGV4cG5kdHctMTBcaW5zcnNpZDI3NjQwNDAgcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2lhbCBwbGF0IHRoZXJlb2YuDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTJcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkyXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgRXhjZXB0aW5nIHRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmVmcm9tIGFsbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9pbCwgZ2FzfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvdGhlciBtaW5lfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCByfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbCBkZXBvc2l0cyx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW4gdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc299e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHBhdGVudGVkLCB0b2dldGhlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCB0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJpZ2h0IHRvIA0KcHJvc3BlY3QgZm9yLCBtaW5lIGFuZCByZW1vdmUgc2FtZSwgYWNjb3JkaW5nIHRvIHRoZSBwcm92aXNpb25zIG9mIHNhaWQgQWN0IG9mIEp1bmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxLCAxOTM4LCBhcyBleGN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHctMVxpbnNyc2lkMjc2NDA0MCBlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwdGVkIGFuZCByZXNlcnZlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBieX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBVbml0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTdGF0ZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBbWVyaWNhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHBhdGVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlY29yZGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEF1Z3VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0yXGV4cG5kdHctMTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMyx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTk2MH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJvb2t9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAzMjkwLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBQYWdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtMVxleHBuZHR3LTZcaW5zcnNpZDI3NjQwNDAgOH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgNn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEFQTjogIDIzNy0xNDEtMTMNClxwYXIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTMzMTY0ODAgMTB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTk4XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIFRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBFYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGhhbGZ9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0MFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNvdXRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGh3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwIG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTAsIFRvd25zaGlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUmFuZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgV2VzdCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJlcm5hcmRpbm99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBNZXJpZGlhbix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGluIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHVuaW5jb3Jwb3JhdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhcmVhLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENvdW50eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBLZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0yXGV4cG5kdHctMTBcaW5zcnNpZDI3NjQwNDAgcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2lhbCBwbGF0IHRoZXJlb2YuDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTE0NDBccmkwXHNsLTI0MFxzbG11bHQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5M1xub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTNcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpFeGNlcHRpbmcgdGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCBlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZWZyb20gYWxsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2lsLCBnYXN9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG90aGVyIG1pbmV9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwIHJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFsIGRlcG9zaXRzLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcGF0ZW50ZWQsIHRvZ2V0aGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2l9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwIHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGggdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmlnaHQgdG8gcHJvc3BlY3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZvcix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBtaW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmVtb3ZlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzYW1lLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWNjb3JkaW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHByb3Zpc2lvbnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBY3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgSnVuZSAxLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDE5MzgsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCBlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIHhjZXB0ZWQgYW5kIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwIHJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGVzZXJ2ZWQgYnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIHRoZSBVbml0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTdGF0ZXMgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIEFtZXJpY2F9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KdGhlIHBhdGVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlY29yZGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VwdGVtYmVyfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMjgsIDE5NjB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW4gQm9va317XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMzMwNix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwYWdlIDg2NCwgT2ZmaWNpYWwgUmVjb3Jkcy4NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgQVBOOiAgMjM3LTE0MS0yMA0KXHBhciANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNjY3NTU3IDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5OFxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOThcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBUaGUgV2VzdCBoYWxmIG9mIHRoZSBOb3J0aHdlc3QgcXVhcnRlciBvZiB0aGUgU291dGhlYXN0IHF1YXJ0ZXIgb2YgdGhlIE5vcnRod2VzdCBxdWFydGVyIG9mIFNlY3RpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwIG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG59e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMCwgVG93bnNoaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGgsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUmFuZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgV2VzdCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJlcm5hcmRpbm99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE1lcmlkaWFuLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGluIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdW5pbmNvcnBvcmF0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhcmVhLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ291bnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEtlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZC0yXGV4cG5kdHctMTBcaW5zcnNpZDI3NjQwNDAgcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpuLCBTdGF0ZSBvZiBDYWxpZm9ybmlhLCBhY2NvcmRpbmcgdG8gdGhlIG9mZmljaWFsIHBsYXQgb2Ygc2FpZCBsYW5kIGZpbGVkIGluIHRoZSBEaXN0cmljdCBMYW5kIE9mZmljZSBPY3RvYmVyIDcsIDE5MzYuDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTNcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkzXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgRXhjZXB0aW5nIHRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmVmcm9tIGFsbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9pbCwgZ2FzfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvdGhlciBtaW5lfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCByfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbCBkZXBvc2l0cyx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW4gYW5kIHVuZGVyIHNhaWQgbGFuZCwgdG9nZXRoZXJ9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJpZ2h0IHRvIHByb3NwZWN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZm9yLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbWluZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlbW92ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FtZSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhY2NvcmRpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwcm92aXNpb25zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEFjdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBKdW5lIDEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxOTM4LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgeGNlcHRlZCBhbmQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBlc2VydmVkIGJ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlIFVuaXRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgU3RhdGVzIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQW1lcmljYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGUgcGF0ZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmVjb3JkZWR9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlcHRlbWJlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAyOCwgMTk2MH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGluIEJvb2t9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAzMzA2LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2Njc1NTcgUGFnZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDg2MywgT2ZmaWNpYWwgUmVjb3Jkcy4NClxwYXIgDQpccGFyIEFQTjogIDIzNy0xNDEtMjENClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNjY3NTU3IDEyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5OFxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOThcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBUaGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgRWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0MFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYWxmfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kOFxleHBuZHR3NDBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGh3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0MFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTb3V0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjdGl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCBvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEwLCBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFJhbmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFdlc3QsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2FufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCZXJuYXJkaW5vfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTWVyaWRpYW4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB1bmluY29ycG9yYXRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXJlYSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDb3VudHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgS2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQtMlxleHBuZHR3LTEwXGluc3JzaWQyNzY0MDQwIHJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG4sIFN0YXRlIG9mIENhbGlmb3JuaWEsIGFjY29yZGluZyB0byB0aGUgb2ZmaWNpYWwgcGxhdCB0aGVyZW9mLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkyXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45MlxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEV4Y2VwdGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZXJlZnJvbX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFsbH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2lsLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGdhc317XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb3RoZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG1pbmVyYWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBkZXBvc2l0cyx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGluIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvIHBhdGVudGVkLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvZ2V0aGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3aX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtMVxleHBuZHR3LTZcaW5zcnNpZDI3NjQwNDAgdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmlnaHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvIHByb3NwZWN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZvcix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBtaW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDRcZXhwbmR0dzIxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlbW92ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzYW1lLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhY2NvcmRpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwcm92aXNpb25zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBY3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ0XGV4cG5kdHcyMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBKdW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kLTJcZXhwbmR0dy0xMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxOTM4LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGV4Y2VwdGVkIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlc2VydmVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBVbml0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTdGF0ZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBbWVyaWNhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHBhdGVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlY29yZGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQXVndXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZC0zXGV4cG5kdHctMTdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMjMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTk5MH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQm9va317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCA2NDIyLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFBhZ2UgMTkwNCBvZiBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBBUE46ICAyMzctMTQxLTIyDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgDQpccGFyIFRyYWN0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE2Njc1NTcgMTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkzXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTNcc2IxMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTNcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgRWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGhhbGZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU291dGhlYXN0IHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTb3V0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGh3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0xXGV4cG5kdHctNVxpbnNyc2lkMjc2NDA0MCBvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQoxMCwgVG93bnNoaXAgMTEgTm9ydGgsIFJhbmdlIDEzIFdlc3QsIFNhbiBCZXJuYXJkaW5vIEJhc2UgYW5kIE1lcmlkaWFuLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTk0XHNiMjlcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk0XGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgRXhjZXB0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY2NzU1NyBpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlcmVmcm9tfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI2XGluc3JzaWQyNzY0MDQwICB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWxsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9pbCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTY2NzU1NyBnYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjhcaW5zcnNpZDE2Njc1NTcgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgb3RoZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbWluZXJhbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ1XGV4cG5kdHcyNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANCmRlcG9zaXRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY2NzU1NyAgaW4gdGhlIGxhbmQgc28gUGF0ZW50ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwICx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG9nZXRoZXJ9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3aXRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJpZ2h0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNVxleHBuZHR3MjdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcHJvc3BlY3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZm9yLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG1pbmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kIHJlbW92ZSB0aGUgc2FtZSBhY2NvcmRpbmcgdG8gdGhlIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTY2NzU1NyBwcm92aXNpb25zIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Ygc2FpZCBBY3Qgb2YgSnVuZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxLCAxOTM4fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNjY3NTU3ICwgYXMgcmVzZXJ2ZWQgYnkgdGhlIFVuaXRlZCBTdGF0ZXMgb2YgQW1lcmljYSBpbiBwYXRlbnQgcmVjb3JkZWQgRGVjZW1iZXIgNywgMTk2MiBpbiBCb29rIDM1NTIsIFBhZ2UocykgOTY2IG9mIE9mZmljaWFsIFJlY29yZHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIC4NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgQVBOOiAgMjM3LTE0MS0yNQ0KXHBhciANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNjY3NTU3IDE0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5M1xzYjEwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIFRoZSBXZXN0IGhhbGYgb2YgdGhlIFNvdXRoZWFzdCBxdWFydGVyIG9mIHRoZSBTb3V0aGVhc3QgcXVhcnRlciBvZiB0aGUgTm9ydGh3ZXN0IHF1YXJ0ZXIgb2YgU2VjdGl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTFcZXhwbmR0dy01XGluc3JzaWQyNzY0MDQwIG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEwLCBUb3duc2hpcCAxMSBOb3J0aCwgUmFuZ2UgMTMgV2VzdCwgU2FuIEJlcm5hcmRpbm8gTWVyaWRpYW4sIGluIHRoZSB1bmluY29ycG9yYXRlZCBhcmVhLCBDb3VudHkgb2YgS2VybiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgYWNjb3JkaW5nIHRvIHRoZSBPZmZpY2lhbCBQbGF0IHRoZXJlb2YuDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFqIFxsaTE0NDBccmkwXHNiMTZcc2wtMjYwXHNsbXVsdDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwXGNoYXJyc2lkMTE3NDk1MzIgDQpccGFyIEV4Y2VwdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ1XGV4cG5kdHcyN1xpbnNyc2lkMjc2NDA0MFxjaGFycnNpZDExNzQ5NTMyICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwXGNoYXJyc2lkMTE3NDk1MzIgdGhlcmVmcm9tfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI2XGluc3JzaWQyNzY0MDQwXGNoYXJyc2lkMTE3NDk1MzIgIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MFxjaGFycnNpZDExNzQ5NTMyIA0KYWxsIG9pbCwgZ2FzIGFuZCBvdGhlciBtaW5lcmFsIGRlcG9zaXRzLCBpbiB0aGUgbGFuZCBzbyBwYXRlbnRlZCwgdG9nZXRoZXIgd2l0aCB0aGUgcmlnaHQgdG8gcHJvc3BlY3QgZm9yLCBtaW5lIGFuZCByZW1vdmUgdGhlIHNhbWUsIGFjY29yZGluZyB0byB0aGUgcHJvdmlzaW9ucyBvZiBzYWlkIEFjdCBvZiBKdW5lIDEsIDE5MzgsIGFzIGV4Y2VwdGVkIGFuZCByZXNlcnZlZCBieSB0aGUgVW5pdGVkIFMNCnRhdGVzIG9mIEFtZXJpY2EgaW4gdGhlIHBhdGVudCByZWNvcmRlZCBBdWd1c3QgMjMsIDE5OTAgb24gQm9vayA2NDIyLCBQYWdlIDIzODYgb2YgT2ZmaWNpYWwgUmVjb3Jkcy4NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgQVBOOiAgMjM3LTE0MS0yNg0KXHBhciANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNjY3NTU3IDE1fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5M1xzYjEwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIFRoZSBFYXN0IGhhbGYgb2YgdGhlIFNvdXRod2VzdCBxdWFydGVyIG9mIHRoZSBTb3V0aGVhc3QgcXVhcnRlciBvZiB0aGUgTm9ydGh3ZXN0IHF1YXJ0ZXIgb2YgU2VjdGl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTFcZXhwbmR0dy01XGluc3JzaWQyNzY0MDQwIG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG59e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEwLCBUb3duc2hpcCAxMSBOb3J0aCwgUmFuDQpnZSAxMyBXZXN0LCBTYW4gQmVybmFyZGlubyBNZXJpZGlhbiwgaW4gdGhlIHVuaW5jb3Jwb3JhdGVkIGFyZWEsIENvdW50eSBvZiBLZXJuLCBTdGF0ZSBvZiBDYWxpZm9ybmlhLCBhY2NvcmRpbmcgdG8gdGhlIE9mZmljaWFsIFBsYXQgdGhlcmVvZi4NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJccWogXGxpMTQ0MFxyaTBcc2IxNlxzbC0yNjBcc2xtdWx0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDBcY2hhcnJzaWQxMTc0OTUzMiANClxwYXIgRXhjZXB0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI3XGluc3JzaWQyNzY0MDQwXGNoYXJyc2lkMTE3NDk1MzIgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDBcY2hhcnJzaWQxMTc0OTUzMiB0aGVyZWZyb219e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjZcaW5zcnNpZDI3NjQwNDBcY2hhcnJzaWQxMTc0OTUzMiAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwXGNoYXJyc2lkMTE3NDk1MzIgYWxsIG9pbCwgZ2FzIGFuZCBvdGhlciBtaW5lcmFsIGRlcG9zaXRzLCBpbiB0aGUgbGFuZCBzbyBwYXRlbnRlZCwgdG9nZXRoZXIgd2l0aCB0aGUgcmlnaHQgdG8gcHJvDQpzcGVjdCBmb3IsIG1pbmUgYW5kIHJlbW92ZSB0aGUgc2FtZSwgYWNjb3JkaW5nIHRvIHRoZSBwcm92aXNpb25zIG9mIHNhaWQgQWN0IG9mIEp1bmUgMSwgMTkzOCwgYXMgZXhjZXB0ZWQgYW5kIHJlc2VydmVkIGJ5IHRoZSBVbml0ZWQgU3RhdGVzIG9mIEFtZXJpY2EgaW4gdGhlIHBhdGVudCByZWNvcmRlZCBKYW51YXJ5IDQsIDE5NjIgb24gQm9vayAzNDQ5LCBQYWdlIDQ0IG9mIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIA0KXHBhciBBUE46ICAyMzctMTQxLTI3DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTNcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkzXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNjY3NTU3IDE2fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkzXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIFRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBFYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDlcZXhwbmR0dzQ4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGhhbGZ9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ5XGV4cG5kdHc0NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ5XGV4cG5kdHc0N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTb3V0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDlcZXhwbmR0dzQ4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDlcZXhwbmR0dzQ1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDlcZXhwbmR0dzQ1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNvdXRoZWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ5XGV4cG5kdHc0NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kOVxleHBuZHR3NDVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOVxleHBuZHR3NDVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kOVxleHBuZHR3NDhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ5XGV4cG5kdHc0NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ5XGV4cG5kdHc0N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY2NzU1NyBTZWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kOVxleHBuZHR3NDZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTAsIFRvd25zaGlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGgsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFJhbmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgV2VzdCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQmVybmFyZGlub317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE1lcmlkaWFuLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB1bmluY29ycG9yYXRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFyZWEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENvdW50eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEtlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kLTJcZXhwbmR0dy0xMFxpbnNyc2lkMjc2NDA0MCByfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBuLCBTdGF0ZSBvZiBDYWxpZm9ybmlhLCBhY2NvcmRpbmcgdG8gdGhlIG9mZmljaWFsIHBsYXQgdGhlcmVvZi4NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJccWogXGxpMTQ0MFxyaTBcc2IxNlxzbC0yNjBcc2xtdWx0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTNcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkzXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxNjY3NTU3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjY3NTU3IA0KRXhjZXB0IHRoZXJlZnJvbSBhbGwgb2lsLCBnYXMgYW5kIG90aGVyIGh5ZHJvY2FyYm9uIHN1YnN0YW5jZXMsIGFzIHJlc2VydmVkIGluIEJvb2sgMzMyNiwgUGFnZSA5ODIsIG9mIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFqIFxsaTE0NDBccmkwXHNiMTZcc2wtMjYwXHNsbXVsdDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjY3NTU3XGNoYXJyc2lkMTE3NDk1MzIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQVBOOiAgMjM3LTE0Mi0yNQ0KXHBhciANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNjY3NTU3IDE3fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5M1xub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTNcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpUaGUgV2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGhhbGYgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNvdXRoZWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTb3V0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwIG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMCwgVG93bnNoaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGgsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBSYW5nZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBXZXN0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQmVybmFyZGlub317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE1lcmlkaWFuLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW4gdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdW5pbmNvcnBvcmF0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFyZWEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ291bnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEtlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kLTJcZXhwbmR0dy0xMFxpbnNyc2lkMjc2NDA0MCByfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBuLCBTdGF0ZSBvZiBDYWxpZm9ybmlhLCBhY2NvcmRpbmcgdG8gdGhlIG9mZmljaWFsIHBsYXQgdGhlcmVvZi4NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgQVBOOiAgMjM3LTE0Mi0yNg0KXHBhciANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNjY3NTU3IDE4fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5M1xub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTNcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpUaGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBXZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGFsZn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNvdXRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTb3V0aHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGhlYXN0IHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjdGl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTAsIFRvd25zaGlwIDExIE5vcnRoLCBSYW5nZSAxMyBXZXN0LCBTYW4gQmVybmFyZGlubyBCYXNlIGFuZCBNZXJpZGlhbi4NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMTQ0MFxyaTBcc2IxNlxzbC0yMDBcc2xtdWx0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZnMyMFxpbnNyc2lkMjc2NDA0MFxjaGFycnNpZDExNzQ5NTMyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkyXHNiMjlcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkyXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgRXhjZXB0aW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlcmVmcm9tfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCB0byB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBVbml0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClN0YXRlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFsbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9pbCx9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGdhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb3RoZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBtaW5lcmFsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBkZXBvc2l0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGluIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGVudGVkLCB0b2dldGhlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2l0aCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByaWdodCB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcHJvc3BlY3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmb3IsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBtaW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZW1vdmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhbWV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhY2NvcmRpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHByb3Zpc2lvbnMgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEFjdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2YgSnVuZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxLCAxOTM4LCBhcyByZXNlcnZlZCBpbiBwYXRlbnQgcmVjb3JkZWQgSnVuZX17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dy0xXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDI5LCAxOTkwIGluIEJvb2sgNjQwMCwgUGFnZSAyMzYwIG9mIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEFQTjogIDIzNy0xNDItMzINClxwYXIgfVxwYXJkIFxsdHJwYXJcczE1XHFsIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE2Njc1NTcgMTl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWwgXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkyXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45MlxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClRoZSBXZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIGhhbGZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIE5vcnRod2VzdCBxdWFydGVyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICBOb3J0aHdlc3QgcXVhcnRlciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgU291dGhlYXN0IHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMCx9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRvd25zaGlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoLCBSYW5nZSAxMyBXZXN0LCBpbiB0aGUgdW5pbmNvcnBvcmF0ZWQgYXJlYSwgQ291bnR5IG9mIEtlcm4sIFN0YXRlIG9mIENhbGlmb3JuaWEsIFNhbiBCZXJuYXJkaW5vIEJhc2UgYW5kIE1lcmlkaWFuLCBhY2NvcmRpbmcgdG8gdGhlIG9mZmljaWFsIHBsYXQgdGhlcmVvZi4NClxwYXIgDQpccGFyIEV4Y2VwdGluZyBhbmQgcmVzZXJ2aW5nIHRvIHRoZSBVbml0ZWQgU3RhdGVzIGFsbCBvaWwsIGdhcyBhbmQgb3RoZXIgbWluZXJhbCBkZXBvc2l0cywgaW4gdGhlIGxhbmQgc28gcGF0ZW50ZWQsIHRvZ2V0aGVyIHdpdGggdGhlIHJpZ2h0IHRvIHByb3NwZWN0IGZvciwgbWluZSBhbmQgcmVtb3ZlIHRoZSBzYW1lIGFjY29yZGluZyB0byB0aGUgcHJvdmlzaW9ucyBvZiBzYWlkIEFjdCBvZiBKdW5lIDEsIDE5MzgsIGluIHBhdGVudCByZWNvcmRlZCBBDQp1Z3VzdCAyOSwgMTk2MSBpbiBCb29rIDM0MTAsIFBhZ2UgMjE0LCBvZiBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWwgXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBBUE46ICAyMzctMTUyLTAxDQpccGFyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE2Njc1NTcgMjB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWwgXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkyXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45MlxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClRoZSBFYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIGhhbGZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIE5vcnRod2VzdCBxdWFydGVyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICBOb3J0aHdlc3QgcXVhcnRlciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgU291dGhlYXN0IHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMCx9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRvd25zaGlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoLCBSYW5nZSAxMyBXZXN0LCBpbiB0aGUgdW5pbmNvcnBvcmF0ZWQgYXJlYSwgQ291bnR5IG9mIEtlcm4sIFN0YXRlIG9mIENhbGlmb3JuaWEsIFNhbiBCZXJuYXJkaW5vIEJhc2UgYW5kIE1lcmlkaWFuLCBhY2NvcmRpbmcgdG8gdGhlIG9mZmljaWFsIHBsYXQgdGhlcmVvZi4NClxwYXIgDQpccGFyIEV4Y2VwdGluZyB0aGVyZWZyb20gYWxsIG9pbCwgZ2FzIGFuZCBvdGhlciBtaW5lcmFsIGRlcG9zaXRzLCBpbiB0aGUgbGFuZCBzbyBwYXRlbnRlZCwgdG9nZXRoZXIgd2l0aCB0aGUgcmlnaHQgdG8gcHJvc3BlY3QgZm9yLCBtaW5lIGFuZCByZW1vdmUgdGgNCmUgc2FtZSBhY2NvcmRpbmcgdG8gdGhlIHByb3Zpc2lvbnMgb2Ygc2FpZCBBY3Qgb2YgSnVuZSAxLCAxOTM4LCBhcyByZXNlcnZlZCBieSB0aGUgVW5pdGVkIFN0YXRlcyBvZiBBbWVyaWNhIGluIHRoZSBwYXRlbnQgcmVjb3JkZWQgQXByaWwgMjEsIDE5NjAgaW4gQm9vayAzMjYwLCBQYWdlIDg0Miwgb2YgT2ZmaWNpYWwgUmVjb3Jkcy4NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFsIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgQVBOOiAgMjM3LTE1Mi0wMg0KXHBhciANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNjY3NTU3IDIxfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFsIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5Mlxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTJcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpUaGUgV2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICBoYWxmfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICBOb3J0aGVhc3QgcXVhcnRlciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgTm9ydGh3ZXN0IHF1YXJ0ZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIFNvdXRoZWFzdCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTAsfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aCwgUmFuZ2UgMTMgV2VzdCwgaW4gdGhlIHVuaW5jb3Jwb3JhdGVkIGFyZWEsIENvdW50eSBvZiBLZXJuLCBTdGF0ZSBvZiBDYWxpZm9ybmlhLCBTYW4gQmVybmFyZGlubyBCYXNlIGFuZCBNZXJpZGlhbiwgYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2lhbCBwbGF0IHRoZXJlb2YuDQpccGFyIA0KXHBhciBFeGNlcHRpbmcgdGhlcmVmcm9tIGFsbCBvaWwsIGdhcyBhbmQgb3RoZXIgbWluZXJhbCBkZXBvc2l0cywgaW4gdGhlIGxhbmQgc28gcGF0ZW50ZWQsIHRvZ2V0aGVyIHdpdGggdGhlIHJpZ2h0IHRvIHByb3NwZWN0IGZvciwgbWluZSBhbmQgcmVtb3ZlIHRoZSBzYW1lIGFjY29yZGluZyB0byB0aGUgcHJvdmlzaW9ucyBvZiBzYWlkIEFjdCBvZiBKdW5lIDEsIDE5MzgsIGFzIHJlc2VydmVkIGJ5IHRoZSBVbml0ZWQgU3RhdGVzIG9mIEFtZXJpY2EgaQ0KbiB0aGUgcGF0ZW50IGRhdGVkIEphbnVhcnkgMTQsIDE5NjAgUGF0ZW50IE5vLiAxMjAzNzU1IGFuZCByZWNvcmRlZCBBdWd1c3QgMTcsIDE5NjAgaW4gQm9vayAzMjkzLCBQYWdlIDk0OSwgb2YgT2ZmaWNpYWwgUmVjb3Jkcy4NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFsIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgQVBOOiAgMjM3LTE1Mi0wMw0KXHBhciANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNjY3NTU3IDIyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFsIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5Mlxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTJcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpUaGUgRWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICBoYWxmfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICBOb3J0aGVhc3QgcXVhcnRlciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgTm9ydGh3ZXN0IHF1YXJ0ZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIFNvdXRoZWFzdCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTAsfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aCwgUmFuZ2UgMTMgV2VzdCwgaW4gdGhlIHVuaW5jb3Jwb3JhdGVkIGFyZWEsIENvdW50eSBvZiBLZXJuLCBTdGF0ZSBvZiBDYWxpZm9ybmlhLCBTYW4gQmVybmFyZGlubyBNZXJpZGlhbiwgYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2lhbCBwbGF0IHRoZXJlb2YuDQpccGFyIA0KXHBhciBFeGNlcHQgYWxsIG9pbCwgZ2FzIGFuZCBvdGhlciBtaW5lcmFsIGRlcG9zaXRzLCBpbiB0aGUgbGFuZCBzbyBwYXRlbnRlZCwgdG9nZXRoZXIgd2l0DQpoIHRoZSByaWdodCB0byBwcm9zcGVjdCBmb3IsIG1pbmUgYW5kIHJlbW92ZSB0aGUgc2FtZSwgYXMgcmVzZXJ2ZWQgYnkgdGhlIFVuaXRlZCBTdGF0ZXMgb2YgQW1lcmljYSBpbiB0aGUgcGF0ZW50IHJlY29yZGVkIE9jdG9iZXIgMjYsIDE5NjAgaW4gQm9vayAzMzE0LCBQYWdlIDg4MCwgb2YgT2ZmaWNpYWwgUmVjb3Jkcy4NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFsIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgQVBOOiAgMjM3LTE1Mi0wNA0KXHBhciANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNjY3NTU3IDIzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFsIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5Mlxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTJcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpUaGUgV2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICBoYWxmfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICBOb3J0aHdlc3QgcXVhcnRlciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgTm9ydGhlYXN0IHF1YXJ0ZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIFNvdXRoZWFzdCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTAsfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aCwgUmFuZ2UgMTMgV2VzdCwgaW4gdGhlIHVuaW5jb3Jwb3JhdGVkIGFyZWEsIENvdW50eSBvZiBLZXJuLCBTdGF0ZSBvZiBDYWxpZm9ybmlhLCBTYW4gQmVybmFyZGlubyBNZXJpZGlhbiwgYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2lhbCBwbGF0IHRoZXJlb2YuDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxbCBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEFQTjogIDIzNy0xNTItMDUNClxwYXIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTY2NzU1NyAyNH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxbCBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOThcc2IxMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOThcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBUaGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgRWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ5XGV4cG5kdHc0NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYWxmfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kOVxleHBuZHR3NDVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGh3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ4XGV4cG5kdHc0MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ5XGV4cG5kdHc0NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ4XGV4cG5kdHc0MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDhcZXhwbmR0dzQyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDhcZXhwbmR0dzQyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNvdXRoZWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kOFxleHBuZHR3NDJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOVxleHBuZHR3NDVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjdGl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQtMVxleHBuZHR3LTVcaW5zcnNpZDI3NjQwNDAgb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANCjEwLCBUb3duc2hpcCAxMSBOb3J0aCwgUmFuZ2UgMTMgV2VzdCwgU2FuIEJlcm5hcmRpbm8gQmFzZSBhbmQgTWVyaWRpYW4uDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTFcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkxXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgRXhjZXB0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWxsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2lsLH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZ2FzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb3RoZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBtaW5lcmFsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBkZXBvc2l0cyx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0b2dldGhlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2l0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmlnaHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcHJvc3BlY3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmb3IsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBtaW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kIHJlbW92ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlIHNhbWV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWNjb3JkaW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcHJvdmlzaW9uc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBY3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBKdW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kLTJcZXhwbmR0dy0xMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxOTM4LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlc2VydmVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVW5pdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFN0YXRlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEFtfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kLTFcZXhwbmR0dy02XGluc3JzaWQyNzY0MDQwIGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJpY2F9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW4gcGF0ZW50IHJlY29yZGVkIEFwcmlsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3LTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgNSwgMTk2MCBpbiBCb29rIDMyNTYsIFBhZ2UgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY2NzU1NyAxOCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxbCBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEFQTjogIDIzNy0xNTItMDYNClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5Mlxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTJcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQoNClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE2Njc1NTcgMjV9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTJcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkyXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgVGhlIE5vcnRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIGhhbGZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9DQp7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIFdlc3QgaGFsZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgTm9ydGhlYXN0IHF1YXJ0ZXIgb2YgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQxNjY3NTU3IE5vcnRoZWFzdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIFNvdXRoZWFzdCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTAsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpOb3J0aCwgUmFuZ2UgMTMgV2VzdCwgaW4gdGhlIHVuaW5jb3Jwb3JhdGVkIGFyZWEsIENvdW50eSBvZiBLZXJuLCBTdGF0ZSBvZiBDYWxpZm9ybmlhLCBTYW4gQmVybmFyZGlubyBNZXJpZGlhbiwgYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2lhbCBwbGF0IHRoZXJlb2YuDQpccGFyIA0KXHBhciBFeGNlcHRpbmcgdGhlcmVmcm9tIGFsbCBvaWwsIGdhcyBhbmQgb3RoZXIgbWluZXJhbCBkZXBvc2l0cywgaW4gdGhlIGxhbmQgc28gcGF0ZW50ZWQsIHRvZ2V0aGVyIHdpdGggdGhlIHJpZ2h0IHRvIHByb3NwZWN0IGZvciwgbWluZSBhbmQgcmVtb3ZlIHRoZSBzYW1lLCBhY2NvcmRpbmcgdG8gdGhlIHByb3Zpc2lvbnMgb2Ygc2FpZCBBY3Qgb2YgSnVuZSAxLCAxOTM4LCBhcyBleGNlcHRlZCBhbmQgcmVzZXJ2ZWQgYnkgdGhlIFUNCm5pdGVkIFN0YXRlcyBvZiBBbWVyaWNhIGluIHRoZSBwYXRlbnQgcmVjb3JkZWQgSnVuZSAxNiwgMTk2MCBpbiBCb29rIDMyNzYsIFBhZ2UgNTEsIG9mIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxbCBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEFQTjogIDIzNy0xNTItMzMNClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5OFxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOThcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE2Njc1NTcgMjZ9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOThcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk4XGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgVGhlIFNvdX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwIHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGh3ZXN0IHF1fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcnRlciBvZn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlIFNvdXRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDlcZXhwbmR0dzQ5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxMFxleHBuZHR3NTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTUsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDEwXGV4cG5kdHc1MFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDEwXGV4cG5kdHc1MFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxMFxleHBuZHR3NTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGgsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMTBcZXhwbmR0dzUwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFJhbmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDEwXGV4cG5kdHc1MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDEwXGV4cG5kdHc1MFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBXZXN0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ5XGV4cG5kdHc0OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxMFxleHBuZHR3NTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQmVybmFyZGlub317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxMFxleHBuZHR3NTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTWVyaWRpYW4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMTBcZXhwbmR0dzUxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDEwXGV4cG5kdHc1MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGUgQ291bnR5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzMwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBLZXJuLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTdGF0ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ2FsaWZvcm5pYSwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFjY29yZGluZyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzMzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mZmljaWFsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ1XGV4cG5kdHcyOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANCnBsYXQgb2YgdGhlIHN1cnZleSBvZiBzYWlkIGxhbmQsIGFwcHJvdmVkIGJ5IHRoZSBTdXJ2ZXlvciBHZW5lcmFsIE9jdG9iZXIgNywgMTkzNi4NClxwYXIgDQpccGFyIEV4Y2VwdCBvbmUgaGFsZiBvZiBhbGwgb2lsLCBnYXMgYW5kIG1pbmVyYWxzIGFuZCBoeWRyb2NhcmJvbiBzdWJzdGFuY2VzIGluIGFuZCB1bmRlciBzYWlkIGxhbmQgYXMgcmVzZXJ2ZWQgYnkgdGhlIE0gJiBSIFNoZWVwIENvLiBpbiBkZWVkIGRhdGVkIEF1Z3VzdCA0LCAxOTU1LCByZWNvcmRlZCBpbiBCb29rIDI1MTksIFBhZ2UgMjk4IG9mIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIA0KXHBhciBBUE46ICAyMzctMTg1LTA3DQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTNcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkzXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE2Njc1NTcgMjd9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTNcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkzXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5M1xzYjEwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBXZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGFsZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aHdlc3QgcXVhcnRlcn17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFJhbmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFdlc3QsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2FufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCZXJuYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtMVxleHBuZHR3LThcaW5zcnNpZDI3NjQwNDAgcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZGlubyBNZXJpZGlhbix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB1bmluY29ycG9yYXRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFyZWEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDb3VudHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgS2Vybix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTdGF0ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDYWxpZm9ybmlhLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWNjb3JkaW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mZmljaWFsIHBsYXQgdGhlcmVvZi4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5M1xub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTNcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBFeGNlcHRpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlcmVmcm9tfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9uZS1oYWxmfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWxsfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2lsLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBnYXMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbWluZXJhbHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb3RoZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaHlkcm9jYXJib259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzdWJzdGFuY2VzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzM0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG5hdHVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGdhcywgdW5kZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZXNlcnZlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGJ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBNJlJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTaGVlcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ28uLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBEZWVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmVjb3JkZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vdmVtYmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZC0xXGV4cG5kdHctOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAyMix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDE5NTV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQm9va317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDI1MTksIFBhZ2UgMjgzLCBvZiBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWwgXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBBUE46ICAyMzctMjg0LTAxDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgDQpccGFyIFRyYWN0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE2Njc1NTcgMjh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWwgXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTE3M1xub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMTczXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgVGhlIFdlc3QgaGFsZiBvZiB0aGUgV2VzdCBoYWxmIG9mIHRoZSBOb3J0aGVhc3QgcXVhcnRlciBvZiB0aGUgTm9ydGh3ZXN0IHF1YXJ0ZXIgb2YgU2VjdGlvbiAxMSwgVG93bnNoaXAgMTEgTm9ydGgsIFJhbmdlIDEzIFdlc3QsDQogU2FuIEJlcm5hcmRpbm8gQmFzZSBhbmQgTWVyaWRpYW4sIGluIHRoZSB1bmluY29ycG9yYXRlZCBhcmVhLCBDb3VudHkgb2YgS2VybiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgYXMgcGVyIENlcnRpZmljYXRlIG9mIENvbXBsaWFuY2UgTm8uIDQ0NiByZWNvcmRlZCBNYXl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCAyOCwgMTk4MiBpbiBCb29rIDU0NjIsIFBhZ2UgMTQ4MyBvZiBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTMwODVcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjMwODVcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45MFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgRXhjZXB0IDUwJSBvZiBhbGwgb2lsIGFuZCBtaW5lcmFsIHJpZ2h0cyBhcyByZXNlcnZlZCBpbiByZWNvcmRzIG9mIHNhaWQgQ291bnR5Lg0KXHBhciANClxwYXIgQVBOOiAgMjM3LTI4NC0wMg0KXHBhciANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE2Njc1NTcgMjl9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkwXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5OFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOThcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgRWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGhhbGZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgV2VzdH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGFsZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGh3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjY3NTU3IFRvd25zaGlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTEsIE5vcnRoLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUmFuZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgV2VzdCwgU2FufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQmVybmFyZGlub317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTWVyaWRpYW4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW4gdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB1bmluY29ycG9yYXRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFyZWEsIENvdW50eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBLZXJuLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU3RhdGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiBDYWxpZm9ybmlhLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDEwXGV4cG5kdHc1MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhY2NvcmRpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMTBcZXhwbmR0dzU0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMTBcZXhwbmR0dzUxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxMVxleHBuZHR3NTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2ZmaWNpYWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxMFxleHBuZHR3NTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbWFwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDEwXGV4cG5kdHc1MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDEwXGV4cG5kdHc1NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzYWlkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDEwXGV4cG5kdHc1MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMTBcZXhwbmR0dzUyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDEwXGV4cG5kdHc1M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmaWxlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMTBcZXhwbmR0dzUyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDEwXGV4cG5kdHc1M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxMFxleHBuZHR3NTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQnVyZWF1fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDEwXGV4cG5kdHc1M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDEwXGV4cG5kdHc1MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBMYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDEwXGV4cG5kdHc1NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBNYW5hZ2VtZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMTBcZXhwbmR0dzUyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZCBhcHByb3ZlZCBieSB0aGUgU3VydmV5b3IgR2VuZXJhbCBvbiBTZXB0ZW1iZXIgMTksIDE4NTYuDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTNcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkzXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgRXhjZXB0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlcmVmcm9tfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb25lLWhhbGYgb2Z9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbGx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvaWwsfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBnYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG1pbmVyYWxzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoeWRyb2NhcmJvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHN1YnN0YW5jZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB1bmRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kLTFcZXhwbmR0dy05XGluc3JzaWQyNzY0MDQwIGl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsYW5kLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXMgZXhjZXB0ZWQgaW4gRH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwIGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGVkIGRhdGVkIEF1Z3VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgNCwgMTk1NSBmcm9tfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTSZSIFNoZWVwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDby4sIHRvIEMuTS59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBUdXJsZXksIHJlY29yZGVkIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgTn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb3ZlbWJlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KMjIsIDE5NTUgaW4gQm9vayAyNTE5LCBQYWdlIDI4OSwgb2YgT2ZmaWNpYWwgUmVjb3Jkcy4gIFNhaWQgZGVlZCBwcm92aWRlcyBpbiBwYXJ0Og0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45MFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIFRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJpZ2h0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG99e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGNvbmR1Y3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBkcmlsbGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvdGhlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb3BlcmF0aW9uc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHVwb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHN1cmZhY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGFuZHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBkZXNjcmliZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvciBhbnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHBvcnRpb24gdGhlcmVvZix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3aXRob3V0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmaXJzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGhhdmluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2VjdXJlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd3JpdHRlbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGNvbnNlbnQgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY29uZCBwYXJ0aWVzLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlaXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoZWlycyBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZC0zXGV4cG5kdHctMThcaW5zcnNpZDI3NjQwNDAgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaWducyx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlIG93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG93bmVyc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzdWNofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwb3J0aW9ucyBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc3VyZmFjZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBtYXl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBiZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdXNlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZvciBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBkcmlsbGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNpdGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc3VyZmFjZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb3BlcmF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCB0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpb25zLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYnV0IG5vdGhpbmcgaGVyZWluIGNvbnRhaW5lZCBzaGFsbCBiZSBkZWVtZWQgdG8gcHJldmVudCB0aGUgR3JhbnRvciBpdHMgc3VjY2Vzc29ycyBhbmQgYXNzaWducyBmcm9tIGV4dH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwIHJ9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWN0aW5nIG9yIGNhcHR1cmluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9pbCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBnYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb3RoZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIGh5ZHJvY2FyYm9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc3Vic3RhbmNlcyBvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgbWluZXJhbHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBieX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KZHJpbGxpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFkamFjZW50fXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG5laWd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQtMlxleHBuZHR3LTEzXGluc3JzaWQyNzY0MDQwIGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGJvcmluZyBsYW5kcyBhbmQvb3IgZnJvbSBjb25kdWN0aW5nIHN1fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgYn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctMVxpbnNyc2lkMjc2NDA0MCAtfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHN1cmZhY2UgZHJpbGxpbmcgb3Igb3RoZXIgb3BlcmF0aW9ucyB1bmRlciBzYWlkIGxhbmRzIGxhc3QgYWJvdmUgZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCBlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANCnNjcmliZWQgYXQgc3VjaCBkZXB0aHMgYXMgbm90IHRvIGRpc3R1cmIgdGhlIHN1cmZhY2UgdGhlcmVvZiBvciBhbnkgaW1wcm92ZW1lbnRzIHRoZXJlb24sIHdhcyB3YWl2ZWQgYnkgdGhlIEdyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG50b3JzIGluIHNhaWQgRGVlZC4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5Mlxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTJcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBFeGNlcHRpbmcgdGhlcmVmcm9tfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlIE5vcnRoZWFzdCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBvZiB0aGUgTm9yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaHdlc3QgcXVhcnRlciBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgdGhlIE5vcnRoZWFzdCBxdWFydGVyIG9mIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtMVxleHBuZHR3LThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGh3ZXN0IHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzYWlkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgc2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU291dGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzMzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzMxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoZWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNVxleHBuZHR3MjZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlIE5vcnRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlciBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhaWQgc2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwIGN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRpb24gYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmVjb252ZXllZCBieX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIERvY3VtZW50IHJlY29yZGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJvb2sgNTEwMSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBQYWdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAyMjQ1IG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgT2ZmfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCBpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBjaWFsIFJlY29yZHMuDQpccGFyIA0KXHBhciBBUE46ICAyMzctMjg0LTA1DQpccGFyIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTY2NzU1NyAzMH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5Mlxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTJcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTk4XG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBXZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGFsZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBFYXN0fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYWxmfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoZWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVG93bnNoaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMSwgTm9ydGgsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBSYW5nZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBXZXN0LCBTYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCZXJuYXJkaW5vfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBNZXJpZGlhbix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHVuaW5jb3Jwb3JhdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXJlYSwgQ291bnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEtlcm4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTdGF0ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIENhbGlmb3JuaWEsIGFjY29yZGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG8gdGhlIG9mZmljaWFsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcGxhdCB0aGVyZW9mLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkyXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45MlxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEV4Y2VwdGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVyZWZyb219e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb25lLWhhbGZ9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbGx9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvaWwsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjY3NTU3IGdhcyx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxNlxpbnNyc2lkMTY2NzU1NyAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBtaW5lcmFsc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoeWRyb2NhcmJvbnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdW5kZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzYWlkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxhbmQsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZXhjZXB0ZWQgYnkgTSYNClIgU2hlZXAgQ28uLCBpbiBkZWVkIHJlY29yZGVkIE5vdmVtYmVyIDIyLCAxOTU1IGluIEJvb2sgMjUxOSwgUGFnZSAyODkgb2YgT2ZmaWNpYWwgUmVjb3Jkcy4NClxwYXIgDQpccGFyIEFQTjogIDIzNy0yODQtMDYNClxwYXIgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNjY3NTU3IDMxfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkyXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45MlxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOThcc2IyOVxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOThcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIEVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGFsZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBFYXN0fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGFsZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCBvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3bnNoaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMSwgTm9ydGgsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDlcZXhwbmR0dzQ1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFJhbmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kOVxleHBuZHR3NDdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOVxleHBuZHR3NDVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgV2VzdCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ4XGV4cG5kdHc0NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOVxleHBuZHR3NDVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQmVybmFyZGlub317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDlcZXhwbmR0dzQ2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE1lcmlkaWFuLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ5XGV4cG5kdHc0NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDhcZXhwbmR0dzQ0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ5XGV4cG5kdHc0N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB1bmluY29ycG9yYXRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDlcZXhwbmR0dzQ1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFyZWEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQ0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENvdW50eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDlcZXhwbmR0dzQ3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDlcZXhwbmR0dzQ1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEtlcm4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kOVxleHBuZHR3NDZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU3RhdGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOVxleHBuZHR3NDZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2YgQ2FsaWZvcm5pYSwgYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2lhbCBwbGF0IHRoZXJlb2YuDQoNClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5M1xub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTNcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBFeGNlcHRpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVyZWZyb219e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvbmUtaGFsZn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbGx9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9pbCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBnYXMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBtaW5lcmFsc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaHlkcm9jYXJib25zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW4gYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB1bmRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwIGd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGV0aGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2l0aCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJpZ2h0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGluY2lkZW50YWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZXJldG8sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGV4Y2VwdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE0mUn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNoZWVwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDby4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGRlZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZWNvcmRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm92ZW1iZXIgMjIsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTk1NX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgQn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb29rIDI1MTksIFBhZ2UgMjg5LCBvZiBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTE0NDBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBUE46ICAyMzctMjg0LTA3XHRhYiBcdGFiIFx0YWIgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDBcY2hhcnJzaWQxMjQ3MzI1IFRyYWN0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE2Njc1NTcgMzJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwXGNoYXJyc2lkMTI0NzMyNSANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5Mlxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTJcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpUaGUgU291dGh3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aHdlc3QgcXVhcnRlcn17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2YgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2YgU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVG93bnNoaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoIFJhbmdlIDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBXZXN0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQmVybmFyZGlub317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE1lcmlkaWFuLCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdW5pbmNvcnBvcmF0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFyZWEsIENvdW50eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIEtlcm4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTdGF0ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIENhbGlmb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0yXGV4cG5kdHctMTFcaW5zcnNpZDI3NjQwNDAgcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbmlhLCBhY2NvcmRpbmcgdG8gdGhlIG9mZmljaWFsIHBsYXQgdGhlcmVvZi4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk4MVxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluODFcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBFeGNlcHRpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVyZWZyb219e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBcJ2JkfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFsbH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2lsLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGdhcyx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG1pbmVyYWxzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoeWRyb2NhcmJvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHN1YnN0YW5jZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGluIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHVuZGVyIHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxhbmQsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXMgZXhjZXB0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGJ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgJn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNoZWVwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ28uLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBkZWVkIHJlY29yZGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3ZlbWJlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDIyLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTk1NX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCb29rfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMjUxOSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFBhZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAyODN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgT2ZmaWNpYWwgUmVjb3Jkcy4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE4MDBccmk5M1xub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTNcbGluMTgwMFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMTQ0MFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMTMxNzY3MTMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBUE46ICAyMzctMjg1LTA1XHRhYiBcdGFiIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzMTVccWogXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDEzMTc2NzEzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYwNzEyOTYgZS5cdGFiIENyb3NzaW5nIEFncmVlbWVudHM6DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMxNSBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoaSlcdGFifX1ccGFyZCBcbHRycGFyDQpcczE1XHFqIFxmaS0zNjBcbGkxODAwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczZcYWRqdXN0cmlnaHRccmluMFxsaW4xODAwXGl0YXAwXHBhcmFyc2lkMTQwNzk2NSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpQZXJtaXQgdG8gQ3Jvc3MgUmlnaHQgb2YgV2F5IEZhY2lsaXRpZXMgZGF0ZWQgSnVseSAyOCwgMjAxNCBieSBhbmQgYmV0d2VlbiBSaXNpbmcgVHJlZSBXaW5kIEZhcm0gTExDLA0KIEVsIFBhc28gTmF0dXJhbCBHYXMgQ29tcGFueSwgTExDIGFuZCBNb2phdmUgUGlwZWxpbmUgQ29tcGFueSwgTExDIGZvciBwZXJtYW5lbnQgcm9hZCBhbmQgZmliZXIgb3B0aWMgY3Jvc3Npbmcgb2YgTW9qYXZlIFBpcGVsaW5lIENvbXBhbnksIExMQyBhbmQgRWwgUGFzbyBOYXR1cmFsIEdhcyBDb21wYW55LCBMTENccnF1b3RlIHMgcGlwZWxpbmVzLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMTUgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGlpKVx0YWJ9UGVybWl0IHRvIENyb3NzIFJpZ2h0IG9mIFdheSBGYWNpbGl0aWVzIGRhdGVkIEp1bHkgMjgsIDIwMTQgYnkgDQphbmQgYmV0d2VlbiBSaXNpbmcgVHJlZSBXaW5kIEZhcm0gSUkgTExDLCBFbCBQYXNvIE5hdHVyYWwgR2FzIENvbXBhbnksIExMQyBhbmQgTW9qYXZlIFBpcGVsaW5lIENvbXBhbnksIExMQyBmb3IgcGVybWFuZW50IHJvYWQgYW5kIGZpYmVyIG9wdGljIGNyb3NzaW5nIG9mIE1vamF2ZSBQaXBlbGluZSBDb21wYW55LCBMTEMgYW5kIEVsIFBhc28gTmF0dXJhbCBHYXMgQ29tcGFueSwgTExDXHJxdW90ZSBzIHBpcGVsaW5lcy59e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDBcY2hhcnJzaWQyNzgwMDgyIA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMTUgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGlpaSlcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUGVybWl0IHRvIENyb3NzIFJpZ2h0IA0Kb2YgV2F5IEZhY2lsaXRpZXMgZGF0ZWQgSnVseSAyOCwgMjAxNCBieSBhbmQgYmV0d2VlbiBSaXNpbmcgVHJlZSBXaW5kIEZhcm0gSUlJIExMQywgRWwgUGFzbyBOYXR1cmFsIEdhcyBDb21wYW55LCBMTEMgYW5kIE1vamF2ZSBQaXBlbGluZSBDb21wYW55LCBMTEMgZm9yIHBlcm1hbmVudCByb2FkIGFuZCBmaWJlciBvcHRpYyBjcm9zc2luZyBvZiBNb2phdmUgUGlwZWxpbmUgQ29tcGFueSwgTExDIGFuZCBFbCBQYXNvIE5hdHVyYWwgR2FzIENvbXBhDQpueSwgTExDXHJxdW90ZSBzIHBpcGVsaW5lcy4ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MFxjaGFycnNpZDI3ODAwODIgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMxNSBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoaXYpXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KTGV0dGVyIG9mIENyb3NzaW5nIENvbnNlbnQgZGF0ZWQgRmVicnVhcnkgMjYsIDIwMTQgZnJvbSBBVCZUIHRvIFJpc2luZyBUcmVlIFdpbmQgRmFybSBMTEMsIFJpc2luZyBUcmVlIFdpbmQgRmFybSBJSSBMTEMsIGFuZCBSaXNpbmcgVHJlZSBXaW5kIEZhcm0gSUlJIExMQyBmb3IgY3Jvc3Npbmcgb2YgQVQmVFxycXVvdGUgcyBpbmZyYXN0cnVjdHVyZS4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczE1IFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwICh2KVx0YWJ9TGV0dGVyIG9mIENyb3NzaW5nIENvbnNlbnQgZGF0ZWQgTWF5IDE0LCANCjIwMTQgZnJvbSBQRyZFIHRvIFJpc2luZyBUcmVlIFdpbmQgRmFybSBMTEMsIFJpc2luZyBUcmVlIFdpbmQgRmFybSBJSSBMTEMsIGFuZCBSaXNpbmcgVHJlZSBXaW5kIEZhcm0gSUlJIExMQyBmb3Igcm9hZCBhbmQgdHJhbnNtaXNzaW9uIGxpbmUgY3Jvc3Npbmcgb2YgUEcmRVxycXVvdGUgcyBwaXBlbGluZXMuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMxNSBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAodmkpXHRhYn1MZXR0ZXIgb2YgQ3Jvc3NpbmcgQ29uc2VudCBkYXRlZCBTZXB0ZW1iZXIgMTAsIDIwMTQgZnJvbSBQRyZFIHRvIFJpc2luZyBUcmVlIFdpbmQgRmFybQ0KIExMQywgUmlzaW5nIFRyZWUgV2luZCBGYXJtIElJIExMQywgYW5kIFJpc2luZyBUcmVlIFdpbmQgRmFybSBJSUkgTExDIGZvciBmaWJlciBvcHRpYyBsaW5lIGNyb3NzaW5nIG9mIFBHJkVccnF1b3RlIHMgcGlwZWxpbmVzLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMTUgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKHZpaSlcdGFifVBlcm1pdCB0byBDcm9zcyBSaWdodCBvZiBXYXkgRmFjaWxpdGllcyBkYXRlZCBOb3ZlbWJlciAxMSwgMjAxNCBieSBhbmQgYmV0d2VlbiBSaXNpbmcgVHJlZSBXaW5kIEZhcm0gTExDLCBFbCBQYXNvIE5hdHVyYWwgR2FzIENvbXBhbnksIA0KTExDIGFuZCBNb2phdmUgUGlwZWxpbmUgQ29tcGFueSwgTExDIGZvciBwZXJtYW5lbnQgdHJhbnNtaXNzaW9uIGxpbmUgY3Jvc3Npbmcgb2YgTW9qYXZlIFBpcGVsaW5lIENvbXBhbnksIExMQyBhbmQgRWwgUGFzbyBOYXR1cmFsIEdhcyBDb21wYW55LCBMTENccnF1b3RlIHMgcGlwZWxpbmVzLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMTUgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKHZpaWkpXHRhYn1QZXJtaXQgdG8gQ3Jvc3MgUmlnaHQgb2YgV2F5IEZhY2lsaXRpZXMgZGF0ZWQgTm92ZW1iZXIgMTEsIDIwMTQgYnkgYW5kIGJldHdlZW4gUmlzaW5nIFRyZWUgV2luZCANCkZhcm0gSUkgTExDLCBFbCBQYXNvIE5hdHVyYWwgR2FzIENvbXBhbnksIExMQyBhbmQgTW9qYXZlIFBpcGVsaW5lIENvbXBhbnksIExMQyBmb3IgcGVybWFuZW50IHRyYW5zbWlzc2lvbiBsaW5lIGNyb3NzaW5nIG9mIE1vamF2ZSBQaXBlbGluZSBDb21wYW55LCBMTEMgYW5kIEVsIFBhc28gTmF0dXJhbCBHYXMgQ29tcGFueSwgTExDXHJxdW90ZSBzIHBpcGVsaW5lcy4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczE1IFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChpeClcdGFifVBlcm1pdCB0byBDcm9zcyBSaWdodCBvZiBXYXkgRmFjaWxpdGllcyBkYXRlZCBOb3ZlbWJlcg0KIDExLCAyMDE0IGJ5IGFuZCBiZXR3ZWVuIFJpc2luZyBUcmVlIFdpbmQgRmFybSBJSUkgTExDLCBFbCBQYXNvIE5hdHVyYWwgR2FzIENvbXBhbnksIExMQyBhbmQgTW9qYXZlIFBpcGVsaW5lIENvbXBhbnksIExMQyBmb3IgcGVybWFuZW50IHRyYW5zbWlzc2lvbiBsaW5lIGNyb3NzaW5nIG9mIE1vamF2ZSBQaXBlbGluZSBDb21wYW55LCBMTEMgYW5kIEVsIFBhc28gTmF0dXJhbCBHYXMgQ29tcGFueSwgTExDXHJxdW90ZSBzIHBpcGVsaW5lcy4NCg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMTUgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKHgpXHRhYn1MZXR0ZXIgb2YgQw0Kcm9zc2luZyBDb25zZW50IGRhdGVkIE1heSAyOCwgMjAxNCBmcm9tIFNDRSB0byBSaXNpbmcgVHJlZSBXaW5kIEZhcm0gTExDLCBSaXNpbmcgVHJlZSBXaW5kIEZhcm0gSUkgTExDLCBhbmQgUmlzaW5nIFRyZWUgV2luZCBGYXJtIElJSSBMTEMgZm9yIGNyb3NzaW5nIG9mIFNDRVxycXVvdGUgcyBvdmVyaGVhZCBkaXN0cmlidXRpb24gbGluZXMufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwXGNoYXJyc2lkMjc4MDA4MiANClxwYXIgfVxwYXJkIFxsdHJwYXJcczE1XHFqIFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTU5NjA0NiBmLlx0YWIgTmVpZ2hib3IgQWdyZWVtZW50cw0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IDENClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmkwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgTG90IDI4IG9mIFNlY3Rpb24gMiwgVG93bnNoaXAgMTEgTm9ydGgsIFJhbmdlIDEzIFdlc3QsIFNhbiBCZXJuYXJkaW5vIEJhc2UgYW5kIE1lcmlkaWFuIGluIHRoZSB1bmluY29ycG9yYXRlZCBhcmVhLCBDb3VudHkgb2YgS2VybiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2lhbCBwbGF0IHRoZXJlb2YuDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpNjQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW42NDBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBBUE46ICAyMzctMTIxLTIyDQpccGFyIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgMg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTY0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluNjQwXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5OFxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOThcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIExvdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDQ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAyLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClRvd25zaGlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoLH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFJhbmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNFxleHBuZHR3MjFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgV2VzdCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2FufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNFxleHBuZHR3MjFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQmVybmFyZGlub317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBNZXJpZGlhbix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ0XGV4cG5kdHcyMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ0XGV4cG5kdHcyMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB1bmluY29ycG9yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dy00XGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KdGVkIGFyZWEsIENvdW50eSBvZiBLZXJuLCBTdGF0ZSBvZiBDYWxpZm9ybmlhLCBhY2NvcmRpbmcgdG8gdGhlIG9mZmljaWFsIHBsYXQgdGhlcmVvZi4NClxwYXIgDQpccGFyIEFQTjogIDIzNy0xMjItMDENClxwYXIgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCAzDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOThcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk4XGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmkxMFxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMTBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIExvdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDYzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAyLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClRvd25zaGlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoLH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFJhbmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNFxleHBuZHR3MjFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgV2VzdCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2FufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNFxleHBuZHR3MjFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQmVybmFyZGlub317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBNZXJpZGlhbix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ0XGV4cG5kdHcyMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ0XGV4cG5kdHcyMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB1bmluY29ycG9yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dy00XGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRlZCBhcmVhLCANCkNvdW50eSBvZiBLZXJuLCBTdGF0ZSBvZiBDYWxpZm9ybmlhLCBhY2NvcmRpbmcgdG8gdGhlIG9mZmljaWFsIHBsYXQgdGhlcmVvZi4NClxwYXIgDQpccGFyIEFQTjogIDIzNy0xMjItMTkNClxwYXIgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCA0DQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpMTBcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjEwXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5OFxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOThcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIExvdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDU5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAyLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClRvd25zaGlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoLH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFJhbmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNFxleHBuZHR3MjFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgV2VzdCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2FufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNFxleHBuZHR3MjFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQmVybmFyZGlub317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBNZXJpZGlhbix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ0XGV4cG5kdHcyMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ0XGV4cG5kdHcyMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB1bmluY29ycG9yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dy00XGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRlZCBhcmVhLCBDb3VudHkgb2YgS2VybiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgDQphY2NvcmRpbmcgdG8gdGhlIG9mZmljaWFsIHBsYXQgdGhlcmVvZi4NClxwYXIgDQpccGFyIEFQTjogIDIzNy0xMjItMjMNClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIA0KXHBhciBUcmFjdCA1fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MFxjaGFycnNpZDgwNjY1NTYgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOThcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk4XGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgVGhlIGVhc3QgaGFsZiBvZiB0aGUgbm9ydGhlYXN0IHF1YXJ0ZXIgb2YgdGhlIHNvdXRoZWFzdCBxdWFydGVyIG9mIHRoZSBzb3V0aHdlc3QgcXVhcnRlciBvZiBTZWN0aX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwIG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG4gMiwgVG93bnNoaXAgMTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ0XGV4cG5kdHcyNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUmFuZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ1XGV4cG5kdHcyNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBXZXN0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDRcZXhwbmR0dzIzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCZXJuYXJkaW5vfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNFxleHBuZHR3MjRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTWVyaWRpYW4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNFxleHBuZHR3MjJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHVuaW5jb3Jwb3JhdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNFxleHBuZHR3MjNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXJlYSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ291bnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNVxleHBuZHR3MjVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgS2Vybix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ0XGV4cG5kdHcyNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTdGF0ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiBDYWxpZm9ybmlhLCBhY2NvcmRpbmcgdG8gdGhlIG9mZmljaWFsIHBsYXQgdGhlcmVvZi4NCg0KXHBhciANClxwYXIgQVBOOiAgMjM3LTEzMS0yNA0KXHBhciANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IDYNClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5OFxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOThcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBUaGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgV2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ5XGV4cG5kdHc0N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYWxmfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOVxleHBuZHR3NDdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kOVxleHBuZHR3NDVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDlcZXhwbmR0dzQ2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ5XGV4cG5kdHc0NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ5XGV4cG5kdHc0NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ5XGV4cG5kdHc0NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY2NzU1NyBTb3V0aHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOVxleHBuZHR3NDdcaW5zcnNpZDE2Njc1NTcgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDlcZXhwbmR0dzQ1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDlcZXhwbmR0dzQ1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDlcZXhwbmR0dzQ1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNvdXRoZWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ5XGV4cG5kdHc0NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kOVxleHBuZHR3NDdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOVxleHBuZHR3NDVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjdGl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQtMVxleHBuZHR3LTVcaW5zcnNpZDI3NjQwNDAgb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ5XGV4cG5kdHc0NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAyLCBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFJhbmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFdlc3QsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2FufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCZXJuYXJkaW5vfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQxNjY3NTU3IEJhc2UgJiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgTWVyaWRpYW4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW4gdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQp1bmluY29ycG9yYXRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFyZWF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjY3NTU3ICBvZiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENvdW50eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBLZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtMlxleHBuZHR3LTEwXGluc3JzaWQyNzY0MDQwIHJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG4sIFN0YXRlIG9mIENhbGlmb3JuaWEsIGFjY29yZGluZyB0byB0aGUgb2ZmaWNpYWwgcGxhdCB0aGVyZW9mLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkyXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45MlxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpODY2XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW44NjZcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEFQTjogIDIzNy0xMzItMTkNClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIA0KXHBhciBUcmFjdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNjY3NTU3IDd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwXGNoYXJyc2lkODA2NjU1NiANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk4NjZcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjg2NlxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTNcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkzXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBUaGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIEVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYWxmfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoZWFzdCBxdWFydGVyfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU291dGh3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNvdXRoZWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjdGl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQtMVxleHBuZHR3LThcaW5zcnNpZDI3NjQwNDAgb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDIsIFRvd25zaGlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNVxleHBuZHR3MjlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGgsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNVxleHBuZHR3MjhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUmFuZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ1XGV4cG5kdHcyOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBXZXN0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ1XGV4cG5kdHcyOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ1XGV4cG5kdHcyOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCZXJuYXJkaW5vfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJhc2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ1XGV4cG5kdHcyOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAmfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE1lcmlkaWFuLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzMwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDVcZXhwbmR0dzI4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHVuaW5jb3Jwb3JhdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFyZWF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ1XGV4cG5kdHcyOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANCnRoZSBDb3VudHkgb2YgS2VybiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2lhbCBwbGF0IHRoZXJlb2YuDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpODY2XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW44NjZcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBBUE46ICAyMzctMTQyLTIwDQpccGFyIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTY2NzU1NyA4fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTg2NlxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluODY2XGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5OFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOThcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICBFYXN0IGhhbGYgb2YgdGhlIE5vcnRod2VzdCBxdWFydGUNCnIgb2YgdGhlIFNvdXRoZWFzdCBxdWFydGVyIG9mIHRoZSBTb3V0aGVhc3QgcXVhcnRlciBvZiBTZWN0aW9uIDIsIFRvd25zaGlwIDExIE5vcnRoLCBSYW5nZSAxMyBXZXN0LCBTYW4gQmVybmFyZGlubyBNZXJpZGlhbiwgaW4gdGhlIHVuaW5jb3Jwb3JhdGVkIGFyZWEsIENvdW50eSBvZiBLZXJuLCBTdGF0ZSBvZiBDYWxpZm9ybmlhLCBhY2NvcmRpbmcgdG8gdGhlIG9mZmljaWFsIHBsYXQgdGhlcmVvZi4NClxwYXIgDQpccGFyIEFQTjogIDIzNy0xMzItMjINClxwYXIgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNjY3NTU3IDl9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOThcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk4XGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpMTYzXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4xNjNcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KVGhhdCBwb3J0aW9uIG9mIHRoZSBXZXN0IGhhbGYgb2YgdGhlIFNvdXRoZWFzdCBxdWFydGVyIG9mIHRoZSBTb3V0aGVhc3QgcXVhcnRlciBvZiB0aGUgU291dGhlYXN0IHF1YXJ0ZXIgb2YgU2VjdGlvbiAyLCBUb3duc2hpcCAxMSBOb3J0aCwgUmFuZ2UgMTMgV2VzdCwgU2FuIEJlcm5hcmRpbm8gQmFzZSBhbmQgTWVyaWRpYW4sIGluIHRoZSB1bi1pbmNvcnBvcmF0ZWQgYXJlYSwgQ291bnR5IG9mIEtlcm4sIFN0YXRlIG9mIENhbGlmb3JuaWEsIGENCnMgcGVyIHRoZSBPZmZpY2lhbCBQbGF0IHRoZXJlb2Ygb24gZmlsZSBpbiB0aGUgT2ZmaWNlIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dy0zXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZSBTdXJ2ZXlvciBHZW5lcmFsLCBkZXNjcmliZWQgYXMgZm9sbG93czoNClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJccWogXGxpMTQ0MFxyaTBcc2IxNlxzbC0yNjBcc2xtdWx0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMFxhZnMyNiBcbHRyY2hcZmNzMCBcZnMyNlxpbnNyc2lkMjc2NDA0MFxjaGFycnNpZDg2ODIwMDUgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpMTc0XG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4xNzRcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBCZWdpbm5pbmcgYXQgdGhlIE5vcnRoZWFzdCBjb3JuZXIgb2YgdGhlIFdlc3QgaGFsZiBvZiB0aGUgU291dGhlYXN0IHF1YXJ0ZXIgb2YgdGhlIFNvdXRoZWFzdCBxdWFydGVyIG9mIHRoZSBTb3V0aGVhc3QgcXVhcnRlciBvZiBzYWlkIFNlY3Rpb24gMjsgVGhlbmNlIA0KU291dGhlcmx5IDEzMiBmZWV0OyBUaGVuY2UgV2VzdGVybHkgMTY1IGZlZXQ7IFRoZW5jZSBOb3J0aGVybHkgMTMyIGZlZXQ7IFRoZW5jZSBFYXN0ZXJseSAxNjUgZmVldCB0byB0aGUgcG9pbnQgb2YgYmVnaW5uaW5nLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxxaiBcbGkxNDQwXHJpMFxzYjE2XHNsLTI2MFxzbG11bHQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYwXGFmczI2IFxsdHJjaFxmY3MwIFxmczI2XGluc3JzaWQyNzY0MDQwXGNoYXJyc2lkODY4MjAwNSANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmkxMzVcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjEzNVxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIEV4Y2VwdGluZyB0aGVyZWZyb20gYWxsIG9pbCwgZ2FzIGFuZCBvdGhlciBtaW5lcmFsIGRlcG9zaXRzIGluIHRoZSBsYW5kIHNvIHBhdGVudGVkLCB0b2dldGhlciB3aXRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dy0xXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KdGhlIHJpZ2h0IHRvIHByb3NwZWN0IGZvciwgbWluZSBhbmQgcmVtb3ZlIHRoZSBzYW1lIGFjY29yZGluZyB0byB0aGUgcHJvdmlzaW9ucyBvZiBzYWlkIEFjdCBvZiBKdW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dy0yXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KMSwgMTkzOCwgYXMgcmVzZXJ2ZWQgYnkgdGhlIFVuaXRlZCBTdGF0ZXMgb2YgQW1lcmljYSwgaW4gUGF0ZW50IHJlY29yZGVkIEZlYnJ1YXJ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dy0xXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDI0LCAxOTYwIGluIEJvb2sgMzI0MiwgUGFnZSAxNTEgb2YgT2ZmaWNpYWwgUmVjb3Jkcy4NClxwYXIgDQpccGFyIEFQTjogIDIzNy0xMzItMjYNClxwYXIgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNjY3NTU3IDEwfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwXGNoYXJyc2lkODA2NjU1NiANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmkxMzVcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjEzNVxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTJcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkyXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBUaGF0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBwb3J0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYWxmIG9mfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzb3V0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc291dGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNvdXRoZWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtMVxleHBuZHR3LTdcaW5zcnNpZDI3NjQwNDAgcX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBvZiBTZWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClRvd25zaGlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aCx9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFJhbmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFdlc3QsIFMuQi5CLk0uLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB1bmluY29ycG9yYXRlZCBhcmVhLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ291bnR5IG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgS2Vybix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTJcZXhwbmR0dy0xMVxpbnNyc2lkMjc2NDA0MCBTfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0YXRlIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBDYWxpZm9ybmlhLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcGVyfQ0Ke1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBPZmZpY2lhbH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUGxhdCB0aGVyZW9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZpbGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgT2ZmaWNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU3VydmV5b3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBHZW5lcmFsLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZGVzY317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtMlxleHBuZHR3LTEwXGluc3JzaWQyNzY0MDQwIHJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGliZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFzIGZvbGxvd3M6DQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTNcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkzXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgQmVnaW5uaW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhIHBvaW50fXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxNjV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmZWV0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3ZXN0IG9mIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG5vcnRoZWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgY29ybmVyIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3ZXN0IGhhbGZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNvdXRoZWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwIHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZSBzb3V0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDhcZXhwbmR0dzQwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDhcZXhwbmR0dzQwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNvdXRoZWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0MFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kOFxleHBuZHR3NDBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDhcZXhwbmR0dzQxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDI7fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDhcZXhwbmR0dzQxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTY1fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kOFxleHBuZHR3NDFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmVldDt9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kOFxleHBuZHR3NDFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc291dGhlcmx5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEzMn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZlZXQ7IHRoZW5jZSBlYXN0ZXJseSAxNjUgZmVldDsgdGhlbmNlIG5vcnRoZXJseSAxMzIgZmVldCwgdG8gdGhlIGJlZ2lubmluZyBwb2ludC4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFsIFxsaTE0NDBccmktMjBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbi0yMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEV4Y2VwdGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZXJlZnJvbX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbGx9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9pbCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBnYXN9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvdGhlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbWluZXJhbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBkZXBvc2l0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcGF0ZW50ZWQsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG9nZXRoZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3aXRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZC0xXGV4cG5kdHctNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJpZ2h0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvIHByb3NwZWN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmb3IsIG1pbmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlbW92ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZSBzYW1lLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWNjb3JkaW5nIHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlIHB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwIHJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG92aXNpb25zIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FpZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwIEF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGN0IG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgSnVuZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMSwgMTkzOCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlc2VydmVkIGJ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzI0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDRcZXhwbmR0dzI0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFVuaXRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTdGF0ZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ0XGV4cG5kdHcyNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ1XGV4cG5kdHcyNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBbWVyaWNhLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDRcZXhwbmR0dzIzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzI0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFBhdGVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDRcZXhwbmR0dzIyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlY29yZGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzI0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEZlYnJ1YXJ5IDI0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDRcZXhwbmR0dzI0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDE5NjB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ0XGV4cG5kdHcyNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBib29rfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzI0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDMyNDJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ0XGV4cG5kdHcyNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwYWdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzI0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDE1MX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDRcZXhwbmR0dzI0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE9mZml9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwIGN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlhbCBSZWNvcmRzLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkzXHNiMjlcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkzXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgQVBOOiAgMjM3LTEzMi0yNw0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgDQpccGFyIFRyYWN0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE2Njc1NTcgMTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwXGNoYXJyc2lkODA2NjU1NiANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmkxMzVcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjEzNVxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpMTAwXHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4xMDBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRoZSBlYXN0IGhhbGZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNvdXRoZWFzdCBxdWFydGVyIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGUgc291dGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlciBvZiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNvdXRoZWFzdCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2YgU2VjdGl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgb317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBuIDIsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwIFR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG93bnNoaXAgMTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjY3NTU3ICBOb3J0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCAsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFJhbmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEzfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIFd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGVzdCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2FufXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQmVybmFyZGlub317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBNZXJpZGlhbix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDb3VudHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBLZXJuLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTdGF0ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENhbGlmb3JuaWEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWNjb3JkaW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KdG8gdGhlIE9mZmljaWFsIFBsYXQgb2Ygc2FpZCBsYW5kIGZpbGVkIGluIHRoZSBEaXN0cmljdCBMYW5kIE9mZmljZSBPY3RvYmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dy0xXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDcsIDE5MzYuDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEV4Y2VwdGluZyB0aGVyZWZyb20gdGhhdCBwb3J0aW9uIHdpdGhpbiB0aGUgZm9sbG93aW5nIGRlc2NyaWJlZCBsYW5kOg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTgyXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW44MlxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIFRoYXQgcG9ydGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGVhc3QgaGFsZn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2YgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc291dGhlYXN0IHF1YXJ0ZXJ9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzb3V0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyIG9mIHRoZX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc291dGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCBxfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIFNlY3Rpb24gMiwgVG93bnNoaXAgMTEgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY2NzU1NyBOb3J0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCAsIFJhbmdlIDEzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2Njc1NTcgV2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KUy5CLkJNLiwgaW4gdGhlIENvdW50eSBvZiBLZXJuLCBTdGF0ZSBvZiBDYWxpZm9ybmlhLCBhY2NvcmRpbmcgdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGUgT317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwIGZ9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmljaWFsIFB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCBsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhdCB0aGVyZW9mLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbHlpbmcgc291dGhlYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCB0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBlcmx5IG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGluZSB0aGF0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgbGllcyAxMDB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmVldCBub3J0aHdlc3RlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZC0xXGV4cG5kdHctNlxpbnNyc2lkMjc2NDA0MCByfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIGx5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2YsIHBhcmFsbGVsIHdpdGggYW5kIG1lYXN1cmVkIGF0IHJpZ2h0IGFuZ2xlcyBmcm9tIHRoZSBmb2xsb3dpbmcgZGVzY3JpYmVkIGxpbmUgYW5kIGl0cyBwcm9sb25nYXRpb246DQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTFcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkxXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgQmVnaW5uaW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwb2ludH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTb3V0aGVybHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxpbmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDIsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZGlzdGFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlcmVvbiBTb3V0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDg5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kLTJcZXhwbmR0dy0xNFxpbnNyc2lkMjc2NDA0MCBcJ2IwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAyM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwIFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAyNVwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdlc3QsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMS43NX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmVldCBmcm9tfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzb3V0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBjb3JuZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2VjdGlvbjt9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBUaGVuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG5vcnRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgNDdcJ2IwNDdccnF1b3RlIDU3XCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZWFzdCAyLjQwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwb2ludH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwIGl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGVhc3Rlcmx5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGluZX17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Ygc2FpZCBzZWN0aW9uLCBkaXN0YW50IHRoZXJlb24gbm9ydGggMVwnYjAwMFxycXVvdGUgNTRcJzk0IGVhc3QgMS41OSBmZWV0IGZyb20gc2FpZCBzb3V0aGVhc3Qgc2VjdGlvbiBjb3JuZXIuDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpMTc2NVxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMTc2NVxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQmFzaXMgb2YgYmVhcmluZ3MgaXMgTGFtYmVydCBQcm9qZWN0aW9uLCBOb3J0aCBBbWVyaWNhbiAxOTI3IERBVFVNLCBDYWxpZm9ybmlhIFpvbmUgNS4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5MVxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTFcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBUb2dldGhlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3aXRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFsbH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBncmFudG9yc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByaWdodCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aXRsZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGludGVyZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFsbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3YXRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2F0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJpZ2h0cyx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3aGV0aGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc3VyZmFjZSBvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzdWJzdXJmYWNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNFxleHBuZHR3MjBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb3RoZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBraW5kLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbmNsdWRpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ0XGV4cG5kdHcyMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbGx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXBwdXJ0ZW5hbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3YXRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByaWdodHMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFsbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdhdGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdhdGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmlnaHRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNFxleHBuZHR3MjBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW4gYW55fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2lzZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW5jaWRlbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmVhbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcHJvcGVydHkgaGVyZWlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZGVzY3JpYmVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHVzZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZXJlb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBjb25uZWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVyZXdpdGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dy00XGluc3JzaWQyNzY0MDQwIGJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgeX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGRlZWQgcmVjb3JkZWQgRmVicnVhcnkgMTQsIDE5NjcgaW4gYm9vayA0MDI0LCBwYWdlIDY3OCBvZiBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkzXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEFsc28gZXh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCBjfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBlcHQgdGhlcmVmcm9tfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWxsIG99ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwIGl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGwsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZ2FzIGFuZH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb3RoZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBtaW5lcmFsIGRlcG9zaXRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZCB1bmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwIGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHIgc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxhbmQgdG9nZXRoZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3aXRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByaWdodCB0byBwcm9zcGVjdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZvcix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG1pbmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlbW92ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FtZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFjY29yZGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHByb3Zpc2lvbnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEFjdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBKdW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kLTJcZXhwbmR0dy0xM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDE5MzgsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTFcaW5zcnNpZDI3NjQwNDAgZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCB4Y2VwdGVkIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZXNlcnZlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIGJ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBVbml0ZWR9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTdGF0ZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBbWVyaWNhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUGF0ZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlY29yZGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgRmVicnVhcnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCA5LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDE5NjAsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTVcaW5zcnNpZDI3NjQwNDAgIEJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9va317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAzMjM3LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICBQfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMzM5IG9mIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpMTM1XG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4xMzVcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTk4XG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMTY2NzU1NyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQxNjY3NTU3IEFQTjogIDIzNy0xMzItNDENClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5OFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOThcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDE0OTA0MDE3IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDE2Njc1NTdcY2hhcnJzaWQxNDkwNDAxNyANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDE2Njc1NTdcY2hhcnJzaWQxNDkwNDAxNyBUcmFjdCAxMg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTk4XG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OFxsaW4xNDQwXGl0YXAwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpMjYwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4yNjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KVGhlIFdlc3QgaGFsZiBvZiB0aGUgTm9ydGhlYXN0IHF1YXJ0ZXIgb2YgdGhlIE5vcnRod2VzdCBxdWFydGVyIG9mIHRoZSBOb3J0aHdlc3QgcXVhcnRlciBvZiBTZWN0aW9uIDEwLCBUb3duc2hpcCAxMSBOb3J0aCwgUmFuZ2UgMTMgV2VzdCwgU2FuIEJlcm5hcmRpbm8gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY2NzU1NyBCYXNlIGFuZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgTWVyaWRpYW4sIGluIHRoZSB1bmluY29ycG9yYXRlZCBhcmVhLCBDb3VudHkgb2YgS2VybiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2lhbCBwbGF0IHRoZXJlb2YuDQpccGFyIA0KXHBhciBBUE46ICAyMzctMTQxLTAzDQpccGFyIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTY2NzU1NyAxM317XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmkyNjBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjI2MFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOThcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk4XGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBUaGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBFYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGhhbGZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU291dGhlYXN0fQ0Ke1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0MFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCBvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTAsIFRvd25zaGlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFJhbmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFdlc3QsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCZXJuYXJkaW5vfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBNZXJpZGlhbix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHVuaW5jb3Jwb3JhdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXJlYSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENvdW50eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBLZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtMlxleHBuZHR3LTEwXGluc3JzaWQyNzY0MDQwIHJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG4sDQogU3RhdGUgb2YgQ2FsaWZvcm5pYSwgYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2lhbCBwbGF0IHRoZXJlb2YuDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTJcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkyXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgRXhjZXB0aW5nIHRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmVmcm9tIGFsbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9pbCwgZ2FzfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvdGhlciBtaW5lfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCByfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbCBkZXBvc2l0cyx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW4gdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc299e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHBhdGVudGVkLCB0b2dldGhlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCB0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KcmlnaHQgdG8gcHJvc3BlY3QgZm9yLCBtaW5lIGFuZCByZW1vdmUgc2FtZSwgYWNjb3JkaW5nIHRvIHRoZSBwcm92aXNpb25zIG9mIHNhaWQgQWN0IG9mIEp1bmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxLCAxOTM4LCBhcyBleGN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHctMVxpbnNyc2lkMjc2NDA0MCBlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwdGVkIGFuZCByZXNlcnZlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBieX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBVbml0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTdGF0ZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBbWVyaWNhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHBhdGVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlY29yZGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEF1Z3VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0yXGV4cG5kdHctMTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMyx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTk2MH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJvb2t9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAzMjkwLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBQYWdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtMVxleHBuZHR3LTZcaW5zcnNpZDI3NjQwNDAgOH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgNn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIA0KXHBhciBBUE46ICAyMzctMTQxLTEzDQpccGFyIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTY2NzU1NyAxNH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5Mlxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTJcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTk4XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVGhlIFdlc3QgaGFsZiBvZiB0aGUgU291dGhlYXN0IHF1YXJ0ZXIgb2YgdGhlIE5vcnRod2VzdCBxdWFydGVyIG9mIHRoZSANCk5vcnRod2VzdCBxdWFydGVyIG9mIFNlY3Rpb24gMTAsIFRvd25zaGlwIDExIE5vcnRoLCBSYW5nZSAxMyBXZXN0LCBTYW4gQmVybmFyZGlubyBNZXJpZGlhbiwgaW4gdGhlIHVuaW5jb3Jwb3JhdGVkIGFyZWEsIENvdW50eSBvZiBLZXJuLCBTdGF0ZSBvZiBDYWxpZm9ybmlhLCBhY2NvcmRpbmcgdG8gdGhlIE9mZmljaWFsIFBsYXQgdGhlcmVvZi4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5Mlxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTJcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBBUE46ICAyMzctMTQxLTE0DQpccGFyIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTY2NzU1NyAxNX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5Mlxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTJcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTk4XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgRWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0MFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYWxmfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoZWFzdH0NCntccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0MFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU291dGh3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjdGl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEwLCBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBSYW5nZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBXZXN0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2FufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQmVybmFyZGlub317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTWVyaWRpYW4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW4gdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB1bmluY29ycG9yYXRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFyZWEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDb3VudHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgS2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTJcZXhwbmR0dy0xMFxpbnNyc2lkMjc2NDA0MCByfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANCm4sIFN0YXRlIG9mIENhbGlmb3JuaWEsIGFjY29yZGluZyB0byB0aGUgb2ZmaWNpYWwgcGxhdCB0aGVyZW9mLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkzXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEV4Y2VwdGluZyB0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwIGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlZnJvbSBhbGx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvaWwsIGdhc317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb3RoZXIgbWluZX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWwgZGVwb3NpdHMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGluIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwYXRlbnRlZCwgdG9nZXRoZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3aX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByaWdodCB0byBwcm9zcGVjdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZm9yLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG1pbmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZW1vdmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhbWUsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhY2NvcmRpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcHJvdmlzaW9uc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEFjdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBKdW5lIDEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTkzOCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwIGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgeGNlcHRlZCBhbmQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZXNlcnZlZCBieX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgdGhlIFVuaXRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFN0YXRlcyBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgQW1lcmljYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQp0aGUgcGF0ZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmVjb3JkZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZXB0ZW1iZXJ9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAyOCwgMTk2MH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbiBCb29rfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAzMzA2LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHBhZ2UgODY0LCBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciANClxwYXIgQVBOOiAgMjM3LTE0MS0yMA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgDQpccGFyIFRyYWN0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE2Njc1NTcgMTZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkzXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOThcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk4XGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBUaGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBFYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGhhbGZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGhlYXN0fQ0Ke1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZSBTb3V0aHdlc3QgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0MFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjdGl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEwLCBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBSYW5nZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBXZXN0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2FufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQmVybmFyZGlub317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQxNjY3NTU3IEJhc2UgJiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE1lcmlkaWFuLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgaW4gdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdW5pbmNvcnBvcmF0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIGFyZWEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ291bnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEtlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZC0yXGV4cG5kdHctMTBcaW5zcnNpZDI3NjQwNDAgcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpuLCBTdGF0ZSBvZiBDYWxpZm9ybmlhLCBhY2NvcmRpbmcgdG8gdGhlIG9mZmljaWFsIHBsYXQgdGhlcmVvZi4NClxwYXIgDQpccGFyIEFQTjogIDIzNy0xNDItMjANClxwYXIgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNjY3NTU3IDE3fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTk4XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIFRoZSBXZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGhhbGZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDhcZXhwbmR0dzQwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlIFNvdXRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjdGl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCBvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEwLCBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFJhbmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFdlc3QsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2FufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCZXJuYXJkaW5vfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTWVyaWRpYW4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB1bmluY29ycG9yYXRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXJlYSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDb3VudHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgS2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQtMlxleHBuZHR3LTEwXGluc3JzaWQyNzY0MDQwIHJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG4sIFN0YXRlIG9mIENhbGlmb3JuaWEsIGFjY29yZGluZyB0byB0aGUgb2ZmaWNpYWwgcGxhdCB0aGVyZW9mLg0KXHBhciANClxwYXIgQVBOOiAgMjM3LTE1MS0wNw0KXHBhciANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE2Njc1NTcgMTh9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOThcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk4XGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgVGhlIEVhc3QgaGFsZiBvZiB0aGUgTm9ydGh3ZXN0IHF1YXJ0ZXIgb2YgdGhlIFNvdXRoZWFzdCBxdWFydGVyIG9mIHRoZSBTb3V0aHdlc3QgcXVhcnRlciBvZiBTZWN0aX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCBvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTAsIFRvd25zaGlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFJhbmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFdlc3QsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCZXJuYXJkaW5vfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBNZXJpZGlhbix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHVuaW5jb3Jwb3JhdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXJlYSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENvdW50eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBLZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtMlxleHBuZHR3LTEwXGluc3JzaWQyNzY0MDQwIHJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KbiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2lhbCBwbGF0IHRoZXJlb2YuDQpccGFyIA0KXHBhciBBUE46ICAyMzctMTUxLTIyDQpccGFyIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTY2NzU1NyAxOX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5OFxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOThcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkyXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45MlxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVGhlIEVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgaGFsZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICBTb3V0aHdlc3QgcXVhcnRlciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgTm9ydGh3ZXN0IHF1YXJ0ZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIFNvdXRoZWFzdCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTAsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpOb3J0aCwgUmFuZ2UgMTMgV2VzdCwgaW4gdGhlIHVuaW5jb3Jwb3JhdGVkIGFyZWEsIENvdW50eSBvZiBLZXJuLCBTdGF0ZSBvZiBDYWxpZm9ybmlhLCBTYW4gQmVybmFyZGlubyBNZXJpZGlhbiwgYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2lhbCBwbGF0IHRoZXJlb2YuDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOThcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk4XGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgQVBOOiAgMjM3LTE1Mi0xNQ0KXHBhciANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IDI1DQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOThcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk4XGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5Mlxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTJcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRoZSBXZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIGhhbGZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgU291dGh3ZXN0IHF1YXJ0ZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIE5vcnRod2VzdCBxdWFydGVyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICBTb3V0aGVhc3QgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEwLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgVG93bnNoaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KTm9ydGgsIFJhbmdlIDEzIFdlc3QsIGluIHRoZSB1bmluY29ycG9yYXRlZCBhcmVhLCBDb3VudHkgb2YgS2VybiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgU2FuIEJlcm5hcmRpbm8gQmFzZSBhbmQgTWVyaWRpYW4sIGFjY29yZGluZyB0byB0aGUgb2ZmaWNpYWwgcGxhdCB0aGVyZW9mLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTk4XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkxNDQwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxMzE3NjcxMyBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEFQTjogIDIzNy0xNTItMTYNClxwYXIgfVxwYXJkIFxsdHJwYXJcczE1XHFqIFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTU5NjA0NiBnfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYwNzEyOTYgLlx0YWIgTyZNIEJ1aWxkaW5nDQpccGFyIH1ccGFyZCBcbHRycGFyXHMxNVxxaiBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxjZjFcaW5zcnNpZDI3NjQwNDBcY2hhcnJzaWQxNDg5ODA2NiANClRoZSBTb3V0aHdlc3QgcXVhcnRlciBvZiB0aGUgU291dGhlYXN0IHF1YXJ0ZXIgb2YgdGhlIE5vcnRod2VzdCBxdWFydGVyIG9mIFNlY3Rpb24gMTUsIFRvd25zaGlwIDExIE5vcnRoLCBSYW5nZSAxMyBXZXN0LCBTLkIuQi5NLiwgaW4gdGhlIHVuaW5jb3Jwb3JhdGVkIGFyZWEsIENvdW50eSBvZiBLZXJuLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQyNzY0MDQwICBTdGF0ZSBvZiBDYWxpZm9ybmlhLg0KXHBhciANClxwYXIgRXhjZXB0IGFuIHVuZGl2aWRlZCBcJ2JkIGludGVyZXN0IGluIDUwJSBvZiB0aGUgb2lsLCBnYXMsIG1pbmVyYWxzIGFuZCBvdGhlciBoeWRyb2NhcmJvbiBzdWJzdGFuY2VzLCBhZmZlY3Rpbmcgc2FpZCBsYW5kIGFzIHJlc2VydmVkIGJ5IGRlZWRzIG9mIHJlY29yZC4NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxjZjFcaW5zcnNpZDI3NjQwNDBcY2hhcnJzaWQxNDg5ODA2NiBcbGluZSBCeSBhIGRvY3VtZW50IGVudGl0bGVkIFwnOTNPcmRlciBTZXR0bGluZyBGaXJzdCBBY2NvdW50IGFuZCBSZXBvcnQgb2YgRXhlY3V0b3JzDQosIGZvciBQcmVsaW1pbmFyeSBEaXN0cmlidXRpb24gaW4gdGhlIG1hdHRlciBvZiB0aGUgZXN0YXRlIG9mIE9zY2FyIFJ1ZG5pY2ssIGRlY2Vhc2VkLCBmaWxlZCBpbiB0aGUgU3VwZXJpb3IgQ291cnQgb2YgdGhlIFN0YXRlIG9mIENhbGlmb3JuaWEgZm9yIHRoZSBDb3VudHkgb2YgS2VybiwgQ2FzZSBOby4gMTU3NzYsIHRoZSBkZWNlZGVudHMgaW50ZXJlc3QgaW4gdGhlIGFib3ZlIG1pbmVyYWwgZXhjZXB0aW9uIHdhcyBkaXN0cmlidXRlZCB0byANClNvcGhpZSBSdWRuaWNrLCBNYXJjdXMgUnVkbmljayBhbmQgRnJhbmNlcyBBLiBNb29yZSwgVHJ1c3RlZXMgb2YgdGhlIFRlc3RhbWVudGFyeSBUcnVzdCBjcmVhdGVkIGJ5IHRoZSBkZWNlZGVudHMgV2lsbCBieSBkb2N1bWVudCByZWNvcmRlZCBKYW51YXJ5IDEyLCAxOTc5IGluIGJvb2sgNTE2OCwgcGFnZSA3OTcgb2YgT2ZmaWNpYWwgUmVjb3Jkcy5cbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KDQpccGFyIH1ccGFyZCBcbHRycGFyXHMxNVxxaiBcbGkxNDQwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxMzE3NjcxMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQVBOOiAgMjM3LTE4NS0wNQ0KXHBhciB9XHBhcmQgXGx0cnBhclxzMTVccWogXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NTk2MDQ2IGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjA3MTI5NiAuXHRhYiBMYXlkb3duIEFyZWENClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmkwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KVGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGh3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTUsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzM0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRvd25zaGlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGgsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUmFuZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBXZXN0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kLTNcZXhwbmR0dy0xNVxpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBuIEJlcm5hcmRpbm8gQmFzZSBhbmQgTWVyaWRpYW4uDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTJcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkyXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgRXhjZXB0aW5nIHRoZXJlZnJvbX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGhhbGYgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbGx9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9pbCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY2NzU1NyBnYXN9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQxNjY3NTU3ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG1pbmVyYWxzIGFuZCBoeWRyb2NhcmJvbn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc3Vic3RhbmNlcyB1bmRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZCBpbn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsYW5kIHJlc2VydmVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBieX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE0mUn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2hlZXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDby4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGRlZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGRhdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQXVndXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kLTJcZXhwbmR0dy0xMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCA0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDE5NTV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlY29yZGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3ZlbWJlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtMVxleHBuZHR3LTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMjIsIDE5NTV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJvb2sgMjUxOSwgUGFnZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDI4OX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDRcZXhwbmR0dzIxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE9mZmljaWFsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFJlY29yZHMuIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEFsc299e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZXhjZXB0aW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNFxleHBuZHR3MjBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlcmVmcm9tfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFsbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9pbCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2Njc1NTcgZ2FzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDE2Njc1NTcgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG90aGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNFxleHBuZHR3MjBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaHlkcm9jYXJib259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc3Vic3RhbmN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHctMlxpbnNyc2lkMjc2NDA0MCBlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZCBtaW5lcmFsc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHVuZGVyIHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBub3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwcmV2aW91c2x5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBleGNlcHRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZXNlcnZlZCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmVzZXJ2ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBieX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQmVuamFtaW4gV2ludGVyLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANCmEgbWFycmllZCBtYW4sIGluIGRlZWQgcmVjb3JkZWQgb24gQm9vayA1OTU0LCBQYWdlIDIxOTIgb2YgT2ZmaWNpYWwgUmVjb3Jkcy4NClxwYXIgDQpccGFyIEFORA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkzXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIFRoZSBOb3J0aHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNvdXRod2VzdCBxdWFydGVyfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDE1LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRvd25zaGlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUmFuZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgV2VzdCwgU317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtM1xleHBuZHR3LTE1XGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG4gQmVybmFyZGlubyBCYXNlIGFuZCBNZXJpZGlhbi4NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMTAyNlxyaTBcc2IxNlxzbC0yNjBcc2xtdWx0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjEwMjZcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMFxhZnMyNiBcbHRyY2hcZmNzMCBcZnMyNlxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5Mlxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTJcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpFeGNlcHRpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVyZWZyb219e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYWxmfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFsbH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2lsLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGdhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbWluZXJhbHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGh5ZHJvY2FyYm9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzdWJzdGFuY2VzIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB1bmRlciBzYWlkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXMgcmVzZXJ2ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBNJlJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2hlZXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDby4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzM0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZGVlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBkYXRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzMyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEF1Z3VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCA0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzMzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDE5NTV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmVjb3JkZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3ZlbWJlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDIyLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzMzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDE5NTV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCb29rfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDI1MTksIFBhZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAyODl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ0XGV4cG5kdHcyMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBPZmZpY2lhbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBSZWNvcmRzLiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBbHNvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGV4Y2VwdGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDRcZXhwbmR0dzIwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZXJlZnJvbX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbGx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvaWwsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjY3NTU3IGdhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQxNjY3NTU3ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvdGhlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDRcZXhwbmR0dzIwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGh5ZHJvY2FyYm9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHN1YnN0YW5jfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3LTJcaW5zcnNpZDI3NjQwNDAgZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmQgbWluZXJhbHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB1bmRlciBzYWlkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbm90fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcHJldmlvdXNseX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZXhjZXB0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmVzZXJ2ZWQsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlc2VydmVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJlbmphbWluIFdpbnRlcix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQphIG1hcnJpZWQgbWFuLCBpbiBkZWVkIHJlY29yZGVkIGluIEJvb2sgNTk1NCwgUGFnZSAyMTkyIG9mIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIA0KXHBhciBBTkQNClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5M1xub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTNcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBUaGUgU291dGh3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aHdlc3QgcXVhcnRlcn17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxNSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFJhbmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFdlc3QsIFN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTNcZXhwbmR0dy0xNVxpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBuIEJlcm5hcmRpbm8gQmFzZSBhbmQgTWVyaWRpYW4uDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDQwXHJpOTJcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkyXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgRXhjZXB0aW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlcmVmcm9tfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGFsZn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbGx9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9pbCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBnYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG1pbmVyYWxzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoeWRyb2NhcmJvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc3Vic3RhbmNlcyBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdW5kZXIgc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFzIHJlc2VydmVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzM0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGJ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTSZSfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNoZWVwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ28uLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzM0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGRlZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZGF0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBdWd1c3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgNCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxOTU1fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlY29yZGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm92ZW1iZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAyMix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxOTU1fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzM0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQm9va317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAyNTE5LCBQYWdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMjg5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNFxleHBuZHR3MjFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgT2ZmaWNpYWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUmVjb3Jkcy4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQWxzb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBleGNlcHRpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ0XGV4cG5kdHcyMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVyZWZyb219e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWxsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2lsLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4ODg1MSBnYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMTM4ODg1MSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb3RoZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ0XGV4cG5kdHcyMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoeWRyb2NhcmJvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzdWJzdGFuY317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dy0yXGluc3JzaWQyNzY0MDQwIGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kIG1pbmVyYWxzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdW5kZXIgc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG5vdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHByZXZpb3VzbHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGV4Y2VwdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlc2VydmVkLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZXNlcnZlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGJ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCZW5qYW1pbiBXaW50ZXIsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGEgDQptYXJyaWVkIG1hbiwgaW4gZGVlZCByZWNvcmRlZCBpbiBCb29rIDU5NTQsIFBhZ2UgMjE5MiBvZiBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkyXG5vd2lkY3RscGFyXHR4MjU2Mlx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTJcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDEzMTc2NzEzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTE0NDBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDEzMTc2NzEzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQVBOIDIzNy0xODUtMDENClxwYXIgfVxwYXJkIFxsdHJwYXJcczE1XHFqIFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQzMDgzNzAwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkODYxMTUyMSBpLlx0YWIgQ29uZG9yIERldGVjdGlvbiBUb3dlcg0KXHBhciB9XHBhcmQgXGx0cnBhclxzMTVccWogXGxpMTQ0MFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMzA4MzcwMCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDc5NDcyOSANClRoZSBFYXN0IGhhbGYgb2YgdGhlIFNvdXRod2VzdCBxdWFydGVyIG9mIHRoZSBOb3J0aGVhc3QgcXVhcnRlciBvZiBmcmFjdGlvbmFsIFNlY3Rpb24gMTgsIFRvd25zaGlwIDExIE5vcnRoLCBSYW5nZSAxNCBXZXN0LCBTLkIuTS4sIGFjY29yZGkNCm5nIHRvIHRoZSBPZmZpY2lhbCBQbGF0IG9mIHRoZSBzdXJ2ZXkgb2Ygc2FpZCBsYW5kIG9uIGZpbGUgaW4gdGhlIE9mZmljZSBvZiB0aGUgQnVyZWF1IG9mIExhbmQgTWFuYWdlbWVudCBhbmQgYXBwcm92ZWQgb24gTm92ZW1iZXIgMjEsIDE4OTQufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkODYxMTUyMSANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNzk0NzI5IEFQTiAyMzctMDgzLTA5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNzk0NzI5XGNoYXJyc2lkNDgxMzU4MiANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczcgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMzA4ODkyNyBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAzLlx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzN1xxaiBcZmktNzIwXGxpMTQ0MFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmw2XG91dGxpbmVsZXZlbDZcYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMzA4ODkyNyBTaGFyZWQgUGVybWl0cw0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMTUgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgYS5cdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczE1XHFqIFxmaS0zNjBcbGkxODAwXHJpMFxzYTEyMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczdcYWRqdXN0cmlnaHRccmluMFxsaW4xODAwXGl0YXAwXHBhcmFyc2lkMTQwNzk2NSBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEtlcm4gQ291bnR5IFN1YnN0YXRpb24gQnVpbGRpbmcgcGVybWl0IE5vLiBLMjAxNDAzNjA5IGlzc3VlZCBBdWd1c3QgMjksIDIwMTQuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMxNSBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCBiLlx0YWJ9S2VybiBDb3VudHkgVHJhbnNtaXNzaW9uIExpbmUgQnVpbGRpbmcgUGVybWl0IE5vLiBLMjAxNDA0MjM0IGlzc3VlZCBBdWd1c3QgMTQsIDIwMTQuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMxNSBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCBjLlx0YWJ9S2VybiBDb3VudHkgRW5jcm9hY2htZW50IFBlcm1pdCBmb3IgZmlsbWluZyBvZiByb2Fkcy4gUGVybWl0IE5vLiAwMzUzLTE0IGlzc3VlZCBBcHJpbCA5LCAyMDE0Lg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMTUgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgZC5cdGFifUtlcm4gQ291bnR5IEVuY3JvYWNobWVudCBQZXJtaXQgZm9yIGJvcmluZyB1bmRlciBPYWsgQ3JlZWsgUm9hZC4gUGVybWl0IE5vLiAwNjI2LTE0IGlzc3VlZCBKdW5lIDEyLCAyMDE0Lg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMTUgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgZS5cdGFifUtlcm4gQ291bnR5IEVuY3JvYWNobWVudCBQZXJtaXQgZm9yIHByaXZhdGUgYWNjZXNzLiBQZXJtaXQgTm8uIDAzNjMtMTQgaXNzdWVkIEFwcmlsIDksIDIwMTQuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMxNSBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCBmLlx0YWJ9S2VybiBDb3VudHkgRW5jcm9hY2htZW50IFBlcm1pdCBmb3IgdHJhbnNtaXNzaW9uIGxpbmUgcHJpdmF0ZSBhY2Nlc3MuIFBlcm1pdCBOby4gMDgwOS0xNCBpc3N1ZWQgQXVndXN0IDYsIDIwMTQuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMxNSBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCBnLlx0YWJ9S2VybiBDb3VudHkgRW5jcm9hY2htZW50IFBlcm1pdCBmb3IgdHJhbnNtaXNzaW9uIGxpbmUgY29uc3RydWN0aW9uLiBQZXJtaXQgTm8uIDA0NzctMTQgaXNzdWVkIE1heSA4LCAyMDE0Lg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMTUgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgaC5cdGFifUtlcm4gQ291bnR5IEVuY3JvYWNobWVudCBQZXJtaXQgZm9yIHRyZW5jaGluZyBpbiBLZXJuIENvdW50eSBmcmFuY2hpc2UuIFBlcm1pdCBOby4gMTIwMS0xNCBkYXRlZCBOb3ZlbWJlciA1LCAyMDE0Lg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMTUgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgaS5cdGFifUVhZ2xlIFRha2UgUGVybWl0OyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDI3NjQwNDBcY2hhcnJzaWQ1NzAxNjQ5IHlldCB0byBiZSBpc3N1ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgIGJ5IHRoZSBVUyBGaXNoIGFuZCBXaWxkbGlmZSBTZXJ2aWNlLiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQyNzY0MDQwIFtkb2VzIG5vdCByZWxhdGUgdG8gU2hhcmVkIEZhY2lsaXRpZXNdfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczE1IFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIGouXHRhYn1BdXRob3JpdHkgdG8gY29uc3RydWN0IDEyNS1rdyBlbWVyZ2VuY2UgZ2VuZXJhdG9yIGlzc3VlZCBieSBLZXJuIENvdW50eSBBaXIgUG9sbHV0aW9uIENvbnRyb2wgRGlzdHJpY3Qgb24gT2N0b2JlciA4LCAyMDE0Lg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMTUgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgay5cdGFifUtlcm4gQ291bnR5IE9yZGluYW5jZSBOby4gRjU4OSBncmFudGluZyBSaXNpbmcgVHJlZSBXaW5kIEZhcm0gTExDIGEgZnJhbmNoaXNlIHRvDQogY29uc3RydWN0LCBpbnN0YWxsLCBtYWludGFpbiwgb3BlcmF0ZSwgcmVwYWlyLCByZW5ldyBhbmQgcmVtb3ZlIHVuZGVyZ3JvdW5kIGZpYmVyIG9wdGljIGNhYmxlIGRhdGVkIE5vdmVtYmVyIDQsIDIwMTQuIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMjc2NDA0MFxjaGFycnNpZDY1MTgxNjEgW1BhcnRpYWwgYXNzaWdubWVudCB0byBSaXNpbmcgVHJlZSBJSSBhbmQgUmlzaW5nIFRyZWUgSUlJIHBlbmRpbmcuXX17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczcgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMzA4ODkyNyBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA0Llx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzN1xxaiBcZmktNzIwXGxpMTQ0MFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxXGlsdmw2XG91dGxpbmVsZXZlbDZcYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMzA4ODkyNyBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMwODg5MjcgVGhpcmQgUGFydHkgUmlnaHRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzA4ODkyN1xjaGFycnNpZDMwODg5MjcgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcZmktNzIwXGxpMjE2MFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4yMTYwXGl0YXAwXHBhcmFyc2lkMzA4MzcwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjA3MTI5NiBhLlx0YWIgTyZNIEJ1aWxkaW5nOiAgUmlnaHRzIG9mIExvbmUgVmFsbGV5IFNvbGFyIFBhcmsgSSBMTEMgYW5kIExvbmUgVmFsbGV5IFNvbGFyIFBhcmsgSUkgTExDIChjb2xsZWN0aXZlbHksIHRoZSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDE2MDcxMjk2XGNoYXJyc2lkNDgxMzU4MiBTdWJsZXNzZWVzfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjA3MTI5NiBcJzk0KSB1bmRlciB0aGF0IGNlcnRhaW4gU3VibGVhc2UgQWdyZWVtZW50IGRhdGVkIFtfX19fX10sIDIwMTQgYnkgYW5kIGJldHdlZW4gdGhlIENvLU93bmVycywgYXMgc3VibGVzc29ycywgYW5kIHRoZSBTdWJsZXNzZWVzLCBhcyBzdWJsZXNzZWVzLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIEIuXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhcg0KXHM2XHFqIFxmaS03MjBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMVxpbHZsNVxvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkNjU5OTg2IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBBc3NldHMgSm9pbnRseSBPd25lZCBhbmQgU2hhcmVkIGJ5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0Mjg4MDM2IFJpc2luZyBUcmVlIEkgYW5kIFJpc2luZyBUcmVlIElJIChSU1QgSS9JSSBTaGFyZWQgRmFjaWxpdGllcyBHcm91cCl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNyBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQ1OTE4MzI5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDEuXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhcg0KXHM3XHFqIFxmaS03MjBcbGkxNDQwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDZcb3V0bGluZWxldmVsNlxhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQ2NTk5ODYgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFNoYXJlZCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTE0NDBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDE2MDcxMjk2IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MDcxMjk2IGEuXHRhYiBSb2Fkcw0KXHBhciBiLlx0YWIgTWV0ZW9yb2xvZ2ljYWwgVG93ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjA3MTI5NlxjaGFycnNpZDQ4MTM1ODIgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM3IFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDU5MTgzMjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMi5cdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczdccWogXGZpLTcyMFxsaTE0NDBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzM1xpbHZsNlxvdXRsaW5lbGV2ZWw2XGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDE0MDc5NjUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFNoYXJlZCBSZWFsIFByb3BlcnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMyNjc3NjMgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMTMxNzY3MTMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYwNzEyOTYgYS5cdGFiIENvbGxlY3Rpb24gYW5kIERpc3RyaWJ1dGlvbiBMaW5lczogIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IDENClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgVGhlIFNvdXRoIGhhbGYgb2YgdGhlIFNvdXRoIGhhbGYgb2YgdGhlIFdlc3QgaGFsZiBvZiB0aGUgU291dGhlYXN0IHF1YXJ0ZXIgDQpvZiBmcmFjdGlvbmFsIFNlY3Rpb24gMzYsIFRvd25zaGlwIDEyIE5vcnRoLCBSYW5nZSAxMyBXZXN0LCBTYW4gQmVybmFyZGlubyBNZXJpZGlhbiwgIGluIHRoZSB1bmluY29ycG9yYXRlZCBhcmVhLCBDb3VudHkgb2YgS2VybiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2lhbCBwbGF0IHRoZXJlb2YuDQpccGFyIA0KXHBhciBBUE46ICAyMjQtNDQwLTMxDQpccGFyIH1ccGFyZCBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCAyDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIFRoZSBTb3V0aGVhc3QgcXVhcnRlciBvZiB0aGUgTm9ydGh3ZXMNCnQgcXVhcnRlciBvZiB0aGF0IHBvcnRpb24gb2YgdGhlIE5vcnRoIGhhbGYgb2YgdGhlIE5vcnRoZWFzdCBxdWFydGVyIG9mIHRoZSBTb3V0aHdlc3QgcXVhcnRlciBvZiBTZWN0aW9uIDEsIFRvd25zaGlwIDExIE5vcnRoLCBSYW5nZSAxMyBXZXN0LCBTYW4gQmVybmFyZGlubyBNZXJpZGlhbiwgaW4gdGhlIENvdW50eSAgb2YgIEtlcm4sICBTdGF0ZSAgb2YgIENhbGlmb3JuaWEsICBhY2NvcmRpbmcgIHRvICB0aGUgIG9mZmljaWFsICBwbGF0ICB0aA0KZXJlb2YsICBseWluZyAgbm9ydGhlcmx5ICBvZiAgdGhlIG5vcnRod2VzdGVybHkgbGluZSBvZiB0aGF0IGNlcnRhaW4gc3RyaXAgb2YgbGFuZCAyMDAgZmVldCBpbiB3aWR0aCBjb252ZXllZCB0byB0aGUgQ2l0eSBvZiBMb3MgQW5nZWxlcywgYSBtdW5pY2lwYWwgY29ycG9yYXRpb24gYnkgZGVlZCByZWNvcmRlZCBNYXJjaCAxMywgMTkyMCBpbiBCb29rIDM0NiwgUGFnZSA0MjEgb2YgRGVlZHMuDQpccGFyIA0KXHBhciBFeGNlcHQgdGhlcmVmcm9tIHRoYXQgcG9ydGlvbiBvZiBzYWlkIGxhbmQgZGVlZGVkIHRvIHRoZSBDaXR5IG9mIExvcyBBbmdlbGVzLCBhIG11bmljaXBhbCBjb3Jwb3JhdGlvbiBieSBkZWVkIHJlY29yZGVkIEFwcmlsIDE4LCAxOTY4IGluIEJvb2sgNDE1MSwgUGFnZSA0MDAgb2YgT2ZmaWNpYWwgUmVjb3Jkcy4NClxwYXIgDQpccGFyIEFQTjogIDIzNy0yNjEtMDMNClxwYXIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgMw0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBUaGUgU291dGggaGFsZiBvZiB0aGUgTm9ydGh3ZXN0IHF1YXJ0ZXIgb2YgdGhlIFNvdXRod2VzdCBxdWFydGVyIG9mIFNlY3Rpb24gMSwgVA0Kb3duc2hpcCAxMSBOb3J0aCwgUmFuZ2UgMTMgV2VzdCwgU2FuIEJlcm5hcmRpbm8gTWVyaWRpYW4sIGV4Y2VwdGluZyBmcm9tIHRoZSBTb3V0aCBoYWxmIG9mIHRoZSBOb3J0aHdlc3QgcXVhcnRlciBvZiB0aGUgU291dGh3ZXN0IHF1YXJ0ZXIgb2Ygc2FpZCBTZWN0aW9uIDEsIHRoYXQgcG9ydGlvbiB0aGVyZW9mIHdpdGhpbiB0aGF0IGNlcnRhaW4gc3RyaXAgb2YgbGFuZCAyMDAgZmVldCBpbiB3aWR0aCwgY29udmV5ZWQgdG8gdGhlIENpdHkgb2YgDQpMDQpvcyBBbmdlbGVzLCBhIG11bmljaXBhbCBjb3Jwb3JhdGlvbiwgYnkgRGVlZCByZWNvcmRlZCBNYXJjaCAxMywgMTkyMCBpbiBCb29rIDM0NiwgUGFnZSA0MjEgb2YgRGVlZHM7IGFsc28gZXhjZXB0aW5nIHRoZXJlZnJvbSB0aGF0IHBvcnRpb24gdGhlcmVvZiBjb252ZXllZCB0byB0aGUgQ2l0eSBvZiBMb3MgQW5nZWxlcyBpbiBkZWVkIHJlY29yZGVkIEp1bmUgMTksIDE5Njggb24gQm9vayA0MTcxLCBQYWdlIDI1NiBvZiBPZmZpY2lhbCBSZWNvcmQNCnMuDQpccGFyIA0KXHBhciBBUE46ICAyMzctMjYxLTA2DQpccGFyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IDQNClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgVGhlIE5vcnRoIGhhbGYgb2YgdGhlIE5vcnRod2VzdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzg4ODUxIHF1YXJ0ZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiB0aGUgTm9ydGhlYXN0IHF1YXJ0ZXIgb2YgU2VjdGlvbiAxLCBUb3duc2hpcCAxMSBOb3J0aCwgUmFuZ2UgMTMgV2VzdCwgU2FuIEJlcm5hcmRpbm8gTWVyaWRpYW4uDQpccGFyIA0KXHBhciBFeGNlcHRpbmcgdGhlcmVmcm9tIGFueSBwb3J0aW9uIG9mIHNhaWQgbGFuZCBhcyBkZWVkZWQgdG8gdGhlIENpdHkgb2YgTG9zIEFuZ2VsZXMsIGEgbXVuaWNpcGFsIGNvcnBvcmF0aW9uIGZvciBMb3MgQW5nZWxlcyBBcXVlZHVjdCBieSBkZWVkIHJlY29yZGVkIEFwcmlsIDE4LCAxOTY5IGluIEJvb2sgNDE1MSwgUGFnZSAzOTMsIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIA0KXHBhciBBUE46ICAyMzctMjYxLTEzDQpccGFyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IDUNClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgUGFyY2VsIDQgb2YgUGFyY2VsIE1hcCBOby4gNDEyMCwgaW4gdGhlIHVuaW5jb3Jwb3JhdGVkIGFyZWEsIENvdW50eSBvZiBLZXJuLCBTdGF0ZSBvZiBDYWxpZm9ybmlhLCBhcyBwZXIgbWFwIHJlY29yZGVkIEphbnVhcnkgNCwgMTk3OCBpbiBCb29rIDIwLCBQYWdlIDYgb2YgTWFwcyBvZiBQYXJjZWwgTWFwcywgaW4gdGhlIE9mZmljZSBvZiB0aGUgQ291bnR5IFJlY29yZGVyIG9mIHNhaWQgQ291bnR5Lg0KXHBhciANClxwYXIgQVBOOiAgMjM3LTI2MS0yMg0KXHBhciANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCA2DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIFRoZSBXZXN0IGhhbGYgb2YgdGhlIEVhc3QgaGFsDQpmIG9mIHRoZSBOb3J0aCBoYWxmIG9mIHRoZSBOb3J0aHdlc3QgcXVhcnRlciBvZiBTZWN0aW9uIDEsIFRvd25zaGlwIDExIE5vcnRoLCBSYW5nZSAxMyBXZXN0LCBTYW4gQmVybmFyZGlubyBNZXJpZGlhbiwgaW4gdGhlIHVuaW5jb3Jwb3JhdGVkIGFyZWEsIENvdW50eSBvZiBLZXJuLCBTdGF0ZSBvZiBDYWxpZm9ybmlhLCBseWluZyBub3J0aGVybHkgYW5kIHdlc3Rlcmx5IG9mIHRoZSBub3J0aHdlc3QgbGluZSBvZiB0aGF0IHBvcnRpb24gdGhlcmUNCm9mIHdpdGhpbiB0aGF0IGNlcnRhaW4gc3RyaXAgb2YgbGFuZCAyMDAgZmVldCBpbiB3aWR0aCwgY29udmV5ZWQgdG8gdGhlIENpdHkgb2YgTG9zIEFuZ2VsZXMsIGEgbXVuaWNpcGFsIGNvcnBvcmF0aW9uLCBieSBkZWVkIHJlY29yZGVkIE1hcmNoIDEzLCAxOTIwIGluIEJvb2sgMzQ2LCBQYWdlIDQyMSBvZiBEZWVkcywgdGhlIGNlbnRlcmxpbmUgb2Ygd2hpY2ggaXMgZGVzY3JpYmVkIGFzIGZvbGxvd3M6DQpccGFyIA0KXHBhciBCZWdpbm5pbmcgYXQgYSBwb2ludCBvbiB0aGUgZWFzdCBsaW5lIG9mIHNhaWQgU2VjdGlvbiAxLCBhIGRpc3RhbmNlIG9mIDUsMTUzLjI4IGZlZXQgbm9ydGggMDBcJ2IwMDhccnF1b3RlIDEwXCc5NCB3ZXN0IG9mIHRoZSBzb3V0aGVhc3QgY29ybmVyIG9mIHNhaWQgU2VjdGlvbiAxLCBhbmQgcnVubmluZyB0aGVuY2UgU291dGggNTFcJ2IwMjJccnF1b3RlIDMwXCc5NA0KIHdlc3QgNTE5LjgwIGZlZXQgdG8gYSBwb2ludDsgdGhlbmNlIG9uIGEgY3VydmUgdG8gdGhlIGxlZnQgaGF2aW5nIGEgcmFkaXVzIG9mIDcxNi4yMyBmZWV0LCBhIGRpc3RhbmNlIG9mIDEwNS4yMSBmZWV0OyB0aGVuY2UgU291dGggNDJcJ2IwNTdccnF1b3RlIDMwXCc5NA0KIHdlc3QsIDEsNDAwLjExIGZlZXQ7IHRoZW5jZSBvbiBhIGN1cnZlIHRvIHRoZSByaWdodCwgIGhhdmluZyBhIHJhZGl1cyBvZiA3MTYuMjMgZmVldCwgYSBkaXN0YW5jZSBvZiA4OS41OCBmZWV0OyB0aGVuY2UgU291dGggNTBcJ2IwMDdccnF1b3RlIDMwXCc5NCB3ZXN0LCAxLDA1OS44MCBmZWV0OyB0aGVuY2Ugb24gYSBjdXJ2ZSB0byB0aGUgbGVmdCwgaGF2aW5nIGEgcmFkaXVzIG9mIDM1OC4xNw0KIGZlZXQsIGEgZGlzdGFuY2Ugb2YgMjI2LjE0IGZlZXQ7IHRoZW5jZSBTb3V0aCAxM1wnYjA1NlxycXVvdGUgMzBcJzk0IHdlc3QsIDQ1MC4xMiBmZWV0OyB0aGVuY2Ugb24gYSBjdXJ2ZSB0byB0aGUgcmlnaHQsIGhhdmluZyBhIHJhZGl1cyBvZiAzMDUuMTcgZmVldCwgYSBkaXN0YW5jZSBvZiAxOTYuNDUgZmVldDsgdGhlbmNlIFNvdXRoIDQ1XCdiMDIyXHJxdW90ZSAzMFwnOTQNCiB3ZXN0LCAxLDA5Ny44OCBmZWV0OyB0aGVuY2Ugb24gYSBjdXJ2ZSB0byB0aGUgbGVmdCwgaGF2aW5nIGEgcmFkaXVzIG9mIDM1OC4xNyBmZWV0LCBhIGRpc3RhbmNlIG9mIDEwNy4xMyBmZWV0OyB0aGVuY2UgU291dGggMjhcJ2IwMTRccnF1b3RlIA0KIHdlc3QgNzA1LjA1IGZlZXQ7IHRoZW5jZSBvbiBhIGN1cnZlIHRvIHRoZSByaWdodCwgaGF2aW5nIGEgcmFkaXVzIG9mIDM1OC4xNyBmZWV0LCBhIGRpc3RhbmNlIG9mIDE0OS45NSBmZWV0OyB0aGVuY2UgU291dGggNTJcJ2IwMTNccnF1b3RlIDMwXCc5NCB3ZXN0LCA4NzYuMzAgZmVldCB0byBhIHBvaW50IG9uIHRoZSBTb3V0aCBsaW5lIG9mIHNhaWQgU2VjdA0KaW9uLCBhIGRpc3RhbmNlIG9mIDY2MCBmZWV0IGVhc3Qgb2YgdGhlIHNvdXRod2VzdCBjb3JuZXIgdGhlcmVvZiwgYXMgcGVyIENlcnRpZmljYXRlIG9mIENvbXBsaWFuY2UgcmVjb3JkZWQgTm92ZW1iZXIgNiwgMTk4OSBpbiBCb29rIDYzMTEsIFBhZ2UgMjM3MywgT2ZmaWNpYWwgUmVjb3Jkcy4NClxwYXIgDQpccGFyIEFsc28gZXhjZXB0IHRoZSBOb3J0aCBoYWxmIG9mIHRoZSBOb3J0aHdlc3QgcXVhcnRlciBvZiB0aGUgTm9ydGhlYXN0IHF1YXJ0ZXIgb2YgU2VjdGlvbiAxLCBUb3duc2hpcCAxMSBOb3J0aCwgUmFuZ2UgMTMgV2VzdCwgU2FuIEJlcm5hcmRpbm8gTWVyaWRpYW4uDQpccGFyIA0KXHBhciBBbHNvIGV4Y2VwdGluZyB0aGF0IHBvcnRpb24gb2Ygc2FpZCBsYW5kIGFzIGRlZWRlZCB0byB0aGUgQ2l0eSBvZiBMb3MgQW5nZWxlcywgYSBtdW5pY2lwYWwgY29ycG9yYXRpb24sIGFzIHNob3duIGluIHNhaWQgZGVlZCByZWNvcmRlZCBBcHJpbCAxOCwgMTk4OCBpbiBCb29rIDQxNTEsIFBhZ2UgMzkzLCBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciANClxwYXIgQVBOOiAgMjM3LTI2MS0yMw0KXHBhciANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCA3DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEFsbCB0aGF0IHBvcnRpb24gb2YgdGhlIFNvdXRod2VzdCBxdWFydGVyIG9mIFNlY3Rpb24gMSwgVG93bnNoaXAgMTEgTm9ydGgsIFJhbmdlIDEzIFdlc3QsIFNhbiBCZXJuYXJkaW5vIE1lcmlkaWFuLCBpbiB0aGUgdW5pbmNvcnBvcmF0ZWQgYXJlYSBvZiB0aGUgQ291bnR5IG9mIEtlcm4sIFN0YXRlIG9mIENhbGlmb3JuaWEsIGJlaW5nIG1vcmUgcGFydGljdWxhcmx5IGRlc2NyaWJlZCBhcyBmb2xsb3dzOg0KXHBhciANClxwYXIgQ29tbWVuY2luZyBhdCB0aGUgU291dGh3ZXN0IGNvcm5lciBvZiBzYWlkIFNlY3Rpb24sIHRoZW5jZSBOb3J0aCAwMSBkZWdyZWVzIDAxIG1pbnV0ZXMgMTIgc2Vjb25kcyBFYXN0IG9uIGFuZCBhbG9uZyB0aGUgV2VzdCBsaW5lIG9mIHNhaWQgU2VjdGlvbiBhIGRpc3RhbmNlIG9mIDEzOC44MSBmZWV0IHRvIGEgcG9pbnQgaW4gdGhlIE5vcnRoZXJseSBib3VuZGFyeSBvZiB0aGUgTG9zIEFuZ2VsZXMgQXF1ZWR1Y3QsIGFzIGNvbnZlDQp5ZWQgdG8gdGhlIENpdHkgb2YgTG9zIEFuZ2VsZXMgaW4gdGhlIERlZWQgcmVjb3JkZWQgTWF5IDMxLCAxOTY4IGluIEJvb2sgNDE2NSwgUGFnZSA0MzQgb2YgT2ZmaWNpYWwgUmVjb3Jkcywgc2FpZCBwb2ludCBhbHNvIGJlaW5nIHRoZSBUcnVlIFBvaW50IG9mIEJlZ2lubmluZzsgdGhlbmNlIGNvbnRpbnVpbmcgTm9ydGggMDEgZGVncmVlIDAxIG1pbnV0ZXMgMTIgc2Vjb25kcyBFYXN0IG9uIGFuIGFsb25nIHNhaWQgV2VzdCBsaW5lIGEgZGlzdGENCm4NCmNlIG9mIDEyMDMuMjEgZmVldCB0byBhIHBvaW50IG9uIHRoZSBOb3J0aCBsaW5lIG9mIHRoZSBTb3V0aHdlc3QgcXVhcnRlciBvZiB0aGUgU291dGh3ZXN0IHF1YXJ0ZXIgb2Ygc2FpZCBTZWN0aW9uOyB0aGVuY2UgTm9ydGggODkgZGVncmVlcyAyNCBtaW51dGVzIDUyIHNlY29uZHMgRWFzdCBvbiBhbmQgYWxvbmcgc2FpZCBOb3J0aCBsaW5lIGEgZGlzdGFuY2Ugb2YgMSwxODcuMDAgZmVldCB0byBhIHBvaW50IG9uIHRoZSBOb3J0aGVybHkgYm91bg0KZA0KYXJ5IG9mIHNhaWQgTG9zIEFuZ2VsZXMgQXF1ZWR1Y3QsIHNhaWQgcG9pbnQgYWxzbyBiZWluZyB0aGUgYmVnaW5uaW5nIG9uIGEgbm9uLXRhbmdlbnQgMzQ1MC41MSBmb290IHJhZGl1cyBjdXJ2ZSwgZnJvbSB3aGljaCBwb2ludCB0aGUgcmFkaXVzIHBvaW50IGJlYXJzIFNvdXRoIDU5IGRlZ3JlZXMgMTMgbWludXRlcyAzNyBzZWNvbmRzIEVhc3Q7IHRoZW5jZSBTb3V0aHdlc3Rlcmx5LCBvbiBhbmQgYWxvbmcgc2FpZCBOb3J0aGVybHkgYm91bmRhDQpyDQp5IGFuZCBjdXJ2ZSwgdGhyb3VnaCBhIGNlbnRyYWwgYW5nbGUgb2YgMDMgZGVncmVlcyAyMCBtaW51dGVzIDAxIHNlY29uZHMgYW4gYXJjIGRpc3RhbmNlIG9mIDIwMC43NiBmZWV0IHRvIHRoZSBiZWdpbm5pbmcgb2YgYSAzODYuOTYgZm9vdCByYWRpdXMgcmV2ZXJzZSBjdXJ2ZTsgdGhlbmNlIFNvdXRod2VzdGVybHksIG9uIGFuZCBhbG9uZyBzYWlkIE5vcnRoZXJseSBib3VuZGFyeSBhbmQgY3VydmUsIHRocm91Z2ggYSBjZW50cmFsIGFuZ2xlIG8NCmYgMjAgZGVncmVlcyAyMSBtaW51dGVzIDQwIHNlY29uZHMgYW4gYXJjIGRpc3RhbmNlIG9mIDEzNy41MSBmZWV0OyB0aGVuY2UgU291dGggNDcgZGVncmVlcyA0OCBmZWV0IDAyIHNlY29uZHMgV2VzdCBvbiBhbmQgYWxvbmcgc2FpZCBOb3J0aGVybHkgYm91bmRhcnkgYSBkaXN0YW5jZSBvZiAxMzg2LjYxIGZlZXQgdG8gdGhlIFRydWUgUG9pbnQgb2YgQmVnaW5uaW5nLg0KXHBhciANClxwYXIgQVBOOiAgMjM3LTI2MS0zMCAoZm9ybWVybHkgMjM3LTI2MS0xMCkNClxwYXIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgOA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBBIHRyYWN0IG9mIGxhbmQgc2l0dWF0ZWQgaW4gdGhlIE5vcnRoIGhhbGYgb2YgdGhlIE5vcnRoIGhhbGYgb2YgdGhlIEVhc3QgaGFsZiBvZiB0aGUgRWFzdCBoYWxmIG9mIFNlY3Rpb24gMTEsIFRvd25zaGlwIDExIE5vcnRoLCBSYW5nZSAxMyBXZXN0LCBTYW4gQmVybmFyZGlubyBCYXNlIGFuZCBNZXJpZGlhbiwgS2VybiBDb3VudHksIENhbGlmb3JuaWEsIGJlaW5nIGEgcG9ydGlvbiBvZiB0aGF0IHByb3BlcnR5IGRlc2NyaWJlZCBpbiBCb28NCmsgNDc2OSwgUGFnZSA3OTgsIHJlY29yZGVkIG9uIEZlYnJ1YXJ5IDgsIDE5NzMsIEtlcm4gQ291bnR5IERlZWQgUmVjb3JkcywgYW5kIGJlaW5nIG1vcmUgcGFydGljdWxhcmx5IGRlc2NyaWJlZCBhcyBmb2xsb3dzOg0KXHBhciANClxwYXIgVGhhdCBwb3J0aW9uIG9mIHNhaWQgcHJvcGVydHkgbHlpbmcgbm9ydGh3ZXN0IG9mIHRoYXQgcHJvcGVydHkgZGVzY3JpYmVkIGluIEJvb2sgNDE5OCwgUGFnZSA0MjksIEtlcm4gQ291bnR5IERlZWQgUmVjb3Jkcy4NClxwYXIgDQpccGFyIEFQTjogIDIzNy0yODUtMDMNClxwYXIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgOQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBUaGUgU291dGhlYXN0IFwnYmMgb2YgdGhlIE5vcnRod2VzdCBcJ2JjIG9mIHRoZSBOb3J0aGVhc3QgXCdiYyBvZiBTZWN0aW9uIDExLCBUb3duc2hpcCAxMSBOb3J0aCwgUmFuZ2UgMTMgV2VzdCwgU2FuIEJlcm5hcmRpbm8gQmFzZSBhbmQgTWVyaWRpYW4uDQpccGFyIA0KXHBhciBFWENFUFQ6DQpccGFyIFBhcmNlbCBOby4gODAgY29tcHJpc2luZyBvZiB0aGF0IHBvcnRpb24gb2YgdGhlIFNvdXRoZWFzdCBcJ2JjIG9mIHRoZSBOb3J0aHdlc3QgXCdiYyBvZiB0aGUgTm9ydGhlYXN0IFwnYmMNCiBvZiBTZWN0aW9uIDExLCBUb3duc2hpcCAxMSBOb3J0aCwgUmFuZ2UgMTMgV2VzdCwgU2FuIEJlcm5hcmRpbm8gTWVyaWRpYW4sIGluIHRoZSBDb3VudHkgb2YgS2VybiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2lhbCBwbGF0IHRoZXJlb2YsIGx5aW5nIHNvdXRoZWFzdGVybHkgb2YgYSBsaW5lIHRoYXQgbGllcyAxMDAgZmVldCBub3J0aGVhc3Rlcmx5IG9mLCBwYXJhbGxlbCB3aXRoIGFuZCBtZWFzdQ0KcmVkIGF0IHJpZ2h0IGFuZ2xlcyBmcm9tIHRoZSBmb2xsb3dpbmcgZGVzY3JpYmVkIGxpbmUgYW5kIGl0cyBwcm9sb25nYXRpb246DQpccGFyIA0KXHBhciBCZWdpbm5pbmcgYXQgYSBwb2ludCBpbiB0aGUgU291dGhlcmx5IGxpbmUgb2Ygc2FpZCBTZWN0aW9uIDExLCBkaXN0YW50IHRoZXJlb24gTm9ydGggODkgZGVncmVlcyAzMCBtaW51dGVzIDIxIHNlY29uZHMgRWFzdCA3NjkuNzQgZmVldCBmcm9tIHRoZSBTb3V0aHdlc3QgY29ybmVyIG9mIHNhaWQgU2VjdGlvbjsgdA0KaGVuY2UgTm9ydGggMjkgZGVncmVlcyAxMSBtaW51dGVzIDQ4IHNlY29uZHMgRWFzdCAxNzQwLjg0IGZlZXQgdG8gdGhlIGJlZ2lubmluZyBvZiBhIGN1cnZlIGNvbmNhdmUgc291dGhlYXN0ZXJseSBhbmQgaGF2aW5nIGEgcmFkaXVzIG9mIDQ1NS4xOSBmZWV0OyB0aGVuY2Ugbm9ydGhlYXN0ZXJseSBhbG9uZyBzYWlkIGN1cnZlIHRocm91Z2ggYW4gYW5nbGUgb2YgNDcgZGVncmVlcyA0NyBtaW51dGVzIDQzIHNlY29uZHMsIGFuIGFyYyBsZW5ndGggDQpvDQpmIDM3OS43MSBmZWV0IHRvIHRoZSBiZWdpbm5pbmcgb2YgYSByZXZlcnNlIGN1cnZlIGNvbmNhdmUgbm9ydGh3ZXN0ZXJseSBhbmQgaGF2aW5nIGEgcmFkaXVzIG9mIDI1MC4wNCBmZWV0OyBhIHJhZGlhbCBsaW5lIGF0IHNhaWQgcG9pbnQgb2YgcmV2ZXJzZSBjdXJ2YXR1cmUgYmVhcnMgTm9ydGggMTMgZGVncmVlcyAwMCBtaW51dGVzIDI5IHNlY29uZHMgV2VzdDsgdGhlbmNlIG5vcnRoZWFzdGVybHkgYWxvbmcgc2FpZCByZXZlcnNlIGN1cnZlLCANCnQNCmhyb3VnaCBhbiBhbmdsZSBvZiA1MiBkZWdyZWVzIDE2IG1pbnV0ZXMgMTggc2Vjb25kcywgYW4gYXJjIGxlbmd0aCBvZiAyMjguMTEgZmVldDsgdGhlbmNlIE5vcnRoIDI0IGRlZ3JlZXMgNDMgbWludXRlcyAxMyBzZWNvbmRzIEVhc3QgNTYwLjgxIGZlZXQgdG8gdGhlIGJlZ2lubmluZyBvZiBhIGN1cnZlIGNvbmNhdmUgc291dGhlYXN0ZXJseSBhbmQgaGF2aW5nIGEgcmFkaXVzIG9mIDM2NS4wNiBmZWV0OyB0aGVuY2Ugbm9ydGhlYXN0ZXJseSBhbA0Kbw0Kbmcgc2FpZCBjdXJ2ZSwgdGhyb3VnaCBhbiBhbmdsZSBvZiAzNyBkZWdyZWVzIDA1IG1pbnV0ZXMgMzggc2Vjb25kcywgYW4gYXJjIGxlbmd0aCBvZiAyMzYuMzQgZmVldDsgdGhlbmNlIE5vcnRoIDYxIGRlZ3JlZXMgNDggbWludXRlcyA1MSBzZWNvbmRzIEVhc3QgNzIzLjIzIGZlZXQgdG8gdGhlIGJlZ2lubmluZyBvZiBhIGN1cnZlIGNvbmNhdmUgbm9ydGh3ZXN0ZXJseSBhbmQgaGF2aW5nIGEgcmFkaXVzIG9mIDMxMC4xNiBmZWV0OyB0aGVuY2UgDQpuDQpvcnRoZWFzdGVybHkgYWxvbmcgc2FpZCBjdXJ2ZSB0aHJvdWdoIGFuIGFuZ2xlIG9mIDU2IGRlZ3JlZXMgMjYgbWludXRlcyAyNyBzZWNvbmRzLCBhbiBhcmMgbGVuZ3RoIG9mIDMwNS41NCBmZWV0IHRvIHRoZSBiZWdpbm5pbmcgb2YgYSByZXZlcnNlIGN1cnZlLCBjb25jYXZlIHNvdXRoZWFzdGVybHkgYW5kIGhhdmluZyBhIHJhZGl1cyBvZiA3NjUuMTIgZmVldCwgYSByYWRpYWwgbGluZSBhdCBzYWlkIHBvaW50IG9mIHJldmVyc2UgY3VydmF0dXINCmUNCiBiZWFycyBTb3V0aCA4NCBkZWdyZWVzIDM3IG1pbnV0ZXMgMzYgc2Vjb25kcyBFYXN0OyB0aGVuY2UgTm9ydGhlYXN0ZXJseSBhbG9uZyBzYWlkIHJldmVyc2UgY3VydmUgdGhyb3VnaCBhbiBhbmdsZSBvZiAzNCBkZWdyZWVzIDQ0IG1pbnV0ZXMgNTcgc2Vjb25kcywgYW4gYXJjIGxlbmd0aCBvZiA0NjQuMDMgZmVldDsgdGhlbmNlIE5vcnRoIDQwIGRlZ3JlZXMgMDcgbWludXRlcyAyMSBzZWNvbmRzIEVhc3QgZmVldCB0byB0aGUgYmVnaW5uaW5nIA0Kbw0KZiBhIGN1cnZlIGNvbmNhdmUgU291dGhlYXN0ZXJseSBhbmQgaGF2aW5nIGEgcmFkaXVzIG9mIDIwMDAuMzAgZmVldDsgdGhlbmNlIE5vcnRoZWFzdGVybHkgYWxvbmcgc2FpZCBjdXJ2ZSwgdGhyb3VnaCBhbiBhbmdsZSBvZiA3IGRlZ3JlZXMgNDAgbWludXRlcyAzNiBzZWNvbmRzLCBhbiBhcmMgbGVuZ3RoIG9mIDI2OC4wMSBmZWV0OyB0aGVuY2UgTm9ydGggNDcgZGVncmVlcyA0NyBtaW51dGVzIDU3IHNlY29uZHMgRWFzdCAxNTY0LjYyIGZlZXQgDQp0byBhIHBvaW50IGluIHRoZSBOb3J0aGVybHkgbGluZSBvZiBzYWlkIFNlY3Rpb24gMTEsIGRpc3RhbnQgdGhlcmVvbiBTb3V0aCA4OSBkZWdyZWVzIDIzIG1pbnV0ZXMgMjUgc2Vjb25kcyBXZXN0IDEuNzUgZmVldCBmcm9tIHRoZSBOb3J0aGVhc3QgY29ybmVyIG9mIHNhaWQgU2VjdGlvbi4NClxwYXIgDQpccGFyIEFQTjogIDIzNy0yODUtMDQNClxwYXIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgMTANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgVGhlIFNvdXRod2VzdCBxdWFydGVyIG9mIHRoZSBOb3J0aHdlc3QgcXVhcnRlciBvZiB0aGUgTm9ydGhlYXN0IHF1YXJ0ZXIgb2YgU2VjdGlvbiAxMSwgVG93bnNoaXAgMTEgTm9ydGggUmFuZ2UgMTMgV2VzdCwgU2FuIEJlcm5hcmRpbm8gTWVyaWRpYW4sIGluIHRoZSB1bmluY29ycG9yYXRlZCBhcmVhLCBDb3VudHkgb2YgS2VybiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2lhbCBwbGF0IHRoZXJlb2YuDQoNClxwYXIgDQpccGFyIEV4Y2VwdGluZyB0aGVyZWZyb20gXCdiZCBvZiBhbGwgb2lsLCBnYXMsIG1pbmVyYWxzIGFuZCBoeWRyb2NhcmJvbiBzdWJzdGFuY2VzIGluIGFuZCB1bmRlciBzYWlkIGxhbmQsIGFzIGV4Y2VwdGVkIGJ5IE0gJiBSIFNoZWVwIENvLiwgaW4gZGVlZCByZWNvcmRlZCBOb3ZlbWJlciAyMiwgMTk1NSBpbiBCb29rIDI1MTksIFBhZ2UgMjgzIG9mIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIA0KXHBhciBBUE46ICAyMzctMjg1LTA1DQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDc5NDcyOSANClxwYXIgfVxwYXJkIFxsdHJwYXJcczE1XHFqIFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQxMzE3NjcxMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MDcxMjk2IGIuXHRhYiBSb2Fkcw0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IDENClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0MDRccmk5N1xzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTdcbGluMTQwNFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBUaGUgU291dGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGFsZiBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU291dGggaH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxmIG9mfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgV317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZXN0IGhhbGZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNvdXRoZWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIGZyYWN0aW9uYWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3Rpb24gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZC0yXGV4cG5kdHctMTFcaW5zcnNpZDI3NjQwNDAgM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgNiwgVG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwIHd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG5zaGlwIDEyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFJhbmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgV2VzdCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2FufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQmVybmFyZGlub317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBNZXJpZGlhbiwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNFxleHBuZHR3MjFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdW5pbmNvcnBvcmF0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXJlYSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDb3VudHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBLZXJuLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTdGF0ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDRcZXhwbmR0dzI0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIENhbGlmb3JuaWEsIGFjY29yZGluZyB0byB0aGUgb2ZmaWNpYWwgcGxhdCB0aGVyZW9mLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBBUE46ICAyMjQtNDQwLTMxDQpccGFyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IDINClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxsaTE0MDRccmkxMDBcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjEwMFxsaW4xNDA0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRoZSBlYXN0IGhhbGZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIHNvdXRoZWFzdCBxdWFydGVyIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlIHNvdXRoZWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgcXVhcnRlciBvZiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzb3V0aGVhc3QgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgb2YgU2VjdGl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbiAyLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCBUfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANCm93bnNoaXAgMTEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFJhbmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEzfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIFd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGVzdCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2FufXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQmVybmFyZGlub317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBNZXJpZGlhbix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDb3VudHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBLZXJuLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTdGF0ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENhbGlmb3JuaWEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWNjb3JkaW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvIHRoZSBPZmZpY2lhbCANClBsYXQgb2Ygc2FpZCBsYW5kIGZpbGVkIGluIHRoZSBEaXN0cmljdCBMYW5kIE9mZmljZSBPY3RvYmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dy0xXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDcsIDE5MzYuDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDA0XHJpMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4xNDA0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEV4Y2VwdGluZyB0aGVyZWZyb20gdGhhdCBwb3J0aW9uIHdpdGhpbiB0aGUgZm9sbG93aW5nIGRlc2NyaWJlZCBsYW5kOg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQwNFxyaTgyXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW44MlxsaW4xNDA0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIFRoYXQgcG9ydGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGVhc3QgaGFsZn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2YgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc291dGhlYXN0IHF1YXJ0ZXJ9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzb3V0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyIG9mIHRoZX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc291dGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCBxfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIFNlY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIDIsIFRvd25zaGlwIDExIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODg4NTEgTm9ydGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwICwgUmFuZ2UgMTMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4ODg1MSBXZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAsIFMuQi5CTS4sIGlufXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGUgQ291bnR5IG9mIEtlcm4sIFN0YXRlIG9mIENhbGlmb3JuaWEsIGFjY29yZGluZyB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlIE99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCBmfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmaWNpYWwgUH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwIGx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgYXQgdGhlcmVvZix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBseWluZyBzb3V0aGVhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwIHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgZXJseSBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsaW5lIHRoYXQNCn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsaWVzIDEwMH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmZWV0IG5vcnRod2VzdGV9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtMVxleHBuZHR3LTZcaW5zcnNpZDI3NjQwNDAgcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANCm9mLCBwYXJhbGxlbCB3aXRoIGFuZCBtZWFzdXJlZCBhdCByaWdodCBhbmdsZXMgZnJvbSB0aGUgZm9sbG93aW5nIGRlc2NyaWJlZCBsaW5lIGFuZCBpdHMgcHJvbG9uZ2F0aW9uOg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQwNFxyaTkxXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45MVxsaW4xNDA0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEJlZ2lubmluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGF0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcG9pbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU291dGhlcmx5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsaW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAyLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGRpc3RhbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZXJlb24gU291dGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCA4OX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0yXGV4cG5kdHctMTRcaW5zcnNpZDI3NjQwNDAgXCdiMH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMjN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMjVcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3ZXN0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEuNzV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZlZXQgZnJvbX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc291dGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgY29ybmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNlY3Rpb247fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVGhlbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBub3J0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDQ3XCdiMDQ3XHJxdW90ZSA1N1wnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGVhc3QgMi40MH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcG9pbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCBpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBlYXN0ZXJseX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxpbmV9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIHNhaWQgc2VjdGlvbiwgZGlzdGFudCB0aGVyZW9uIG5vcnRoIDFcJ2IwMDBccnF1b3RlIDU0XCc5NCBlYXN0IDEuNTkgZmVldCBmcm9tIHNhaWQgc291dGhlYXN0IHNlY3Rpb24gY29ybmVyLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQwNFxyaTE3NjVcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjE3NjVcbGluMTQwNFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQwNFxyaTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMTQwNFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJhc2lzIG9mIGJlYXJpbmdzIGlzIExhbWJlcnQgUHJvamVjdGlvbiwgTm9ydGggQW1lcmljYW4gMTkyNyBEQVRVTSwgQ2FsaWZvcm5pYSBab25lIDUuDQpccGFyIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQwNFxyaTkxXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45MVxsaW4xNDA0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVG9nZXRoZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCB3aXRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFsbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZ3JhbnRvcnN9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByaWdodCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGl0bGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbnRlcmVzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbGx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3YXRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2F0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByaWdodHMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3aGV0aGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHN1cmZhY2Ugb3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzdWJzdXJmYWNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW55fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNFxleHBuZHR3MjFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb3RoZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAga2luZCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ0XGV4cG5kdHcyMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbmNsdWRpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWxsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXBwdXJ0ZW5hbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2F0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByaWdodHMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFsbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3YXRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3YXRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmlnaHRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGluIGFueX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2lzZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGluY2lkZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmVhbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHByb3BlcnR5IGhlcmVpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZGVzY3JpYmVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHVzZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVyZW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBjb25uZWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlcmV3aXRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dy00XGluc3JzaWQyNzY0MDQwIGJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIGRlZWQgcmVjb3JkZWQgRmVicnVhcnkgMTQsIDE5NjcgaW4gYm9vayA0MDI0LCBwYWdlIDY3OCBvZiBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQwNFxyaTkzXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDA0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEFsc28gZXh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCBjfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBlcHQgdGhlcmVmcm9tfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWxsIG99ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwIGl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGwsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZ2FzIGFuZH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb3RoZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBtaW5lcmFsIGRlcG9zaXRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZCB1bmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwIGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHIgc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxhbmQgdG9nZXRoZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3aXRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByaWdodCB0byBwcm9zcGVjdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZvcix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG1pbmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlbW92ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FtZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFjY29yZGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHByb3Zpc2lvbnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEFjdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBKdW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kLTJcZXhwbmR0dy0xM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDE5MzgsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTFcaW5zcnNpZDI3NjQwNDAgZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCB4Y2VwdGVkIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZXNlcnZlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIGJ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBVbml0ZWR9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTdGF0ZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBbWVyaWNhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUGF0ZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlY29yZGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgRmVicnVhcnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCA5LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDE5NjAsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTVcaW5zcnNpZDI3NjQwNDAgIEJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9va317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAzMjM3LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICBQfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMzM5IG9mIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIA0KXHBhciBBUE46ICAyMzctMTMyLTQxDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgMw0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGxpMTQwNFxyaTk4XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OFxsaW4xNDA0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIFRoZSBTb3V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCB0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoZWFzdCBxdX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KcnRlciBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZSBOb3J0aHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiB0aGF0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcG9ydGlvbiBvZn17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlIE5vfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGhhbGYgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCBOfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvcnRoZWFzdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTNcaW5zcnNpZDI3NjQwNDAgcX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdWFydGVyIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGUgU291dGh3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDEwXGV4cG5kdHc1MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMTBcZXhwbmR0dzUwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDlcZXhwbmR0dzQ5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxMFxleHBuZHR3NTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMTBcZXhwbmR0dzUwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRvd25zaGlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMTBcZXhwbmR0dzUwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDEwXGV4cG5kdHc1MFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxMFxleHBuZHR3NTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUmFuZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMTBcZXhwbmR0dzUxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMTBcZXhwbmR0dzUwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFdlc3QsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDlcZXhwbmR0dzQ5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDEwXGV4cG5kdHc1MFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCZXJuYXJkaW5vfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDEwXGV4cG5kdHc1MFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBNZXJpZGlhbix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxMFxleHBuZHR3NTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMTBcZXhwbmR0dzUxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZSBDb3VudHkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEtlcm4sIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzMxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFN0YXRlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDYWxpZm9ybmlhLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWNjb3JkaW5nIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzMzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ1XGV4cG5kdHcyOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2ZmaWNpYWwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHBsYXQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlcmVvZiwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGx5aW5nIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzMyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG5vcnRoZXJseSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlIG5vcnRod2VzdGVybHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsaW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiB0aGF0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgY2VydGFpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc3RyaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiBsYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAyMDB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmZWV0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdpZHRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBjb252ZXllZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDaXR5IG9mIExvc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQW5nZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtM1xleHBuZHR3LTE5XGluc3JzaWQyNzY0MDQwIGx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGVzLCBhIG11bmljaXBhbCBjb3Jwb3JhdGlvbiBieSBkZWVkIHJlY29yZGVkIE1hcmNofXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTMsIDE5MjAgaW4gQm9vayAzNDYsIFBhZ2UgNDIxIG9mIERlZWRzLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGk5OTBccmkwXHNsLTI0MFxzbG11bHQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluOTkwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGxpMTQwNFxyaTkzXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDA0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANCkV4Y2VwdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ1XGV4cG5kdHcyN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVyZWZyb219e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhhdH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHBvcnRpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQ1XGV4cG5kdHcyNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzYWlkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ1XGV4cG5kdHcyNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBkZWVkZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ1XGV4cG5kdHcyN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ2l0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDVcZXhwbmR0dzI4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIExvc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDVcZXhwbmR0dzI2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEFuZ2VsZXMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ1XGV4cG5kdHcyNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBtdW5pY2lwYWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgY29ycG9yYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0yXGV4cG5kdHctMTBcaW5zcnNpZDI3NjQwNDAgdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzI0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KYnkgZGVlZCByZWNvcmRlZCBBcHJpbCAxOCwgMTk2OCBpbiBCb29rIDQxNTEsIFBhZ2UgNDAwIG9mIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIA0KXHBhciBBUE46ICAyMzctMjYxLTAzDQpccGFyIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgVHJhY3QgNA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQwNFxyaTkzXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45M1xsaW4xNDA0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDA0XHJpMTAwXHNiMTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjEwMFxsaW4xNDA0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVGhlIFNvdXRoIGhhbGYgb2YgdGhlIE5vcnRod2VzdCBxdWFydGVyIG9mIHRoZSBTb3V0aHdlc3QgcXVhcnRlciBvZiBTZWN0aW9uIDEsIFRvd25zaGlwIDExIE5vcnRoLH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgUmFuZ2UgMTMgV2VzdCwgU2FufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQmVybmFyZGlub317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTWVyaWRpYW4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZXhjZXB0aW5nfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmcm9tIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNvdXRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYWxmIG9mIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTb3V0aHd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQtMVxleHBuZHR3LTdcaW5zcnNpZDI3NjQwNDAgZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc3QgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzYWlkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjdGlvbiAxLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhhdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHBvcnRpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZXJlb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3aXRoaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoYXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBjZXJ0YWlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzdHJpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMjAwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmZWV0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdpZHRoLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBjb252ZXllZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG8gdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ2l0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTG9zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBbmdlbGVzLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBtdW5pY2lwYWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBjb3Jwb3JhdGlvbix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBieX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBEZWVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZWNvcmRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE1hcmNofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kLTNcZXhwbmR0dy0xNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMyx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTkyMH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJvb2t9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAzNDYsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFBhZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDQyMSBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxMFxleHBuZHR3NTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgRGVlZHM7fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMTFcZXhwbmR0dzU2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFsc299e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMTFcZXhwbmR0dzU1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGV4Y2VwdGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDExXGV4cG5kdHc1NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVyZWZyb219e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMTBcZXhwbmR0dzU0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoYXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxMVxleHBuZHR3NTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcG9ydGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxMVxleHBuZHR3NTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlcmVvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDExXGV4cG5kdHc1NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBjb252ZXllZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxMVxleHBuZHR3NTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxMVxleHBuZHR3NTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDEwXGV4cG5kdHc1NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDaXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMTBcZXhwbmR0dzU0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDExXGV4cG5kdHc1N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBMb3N9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxMVxleHBuZHR3NTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQW5nZWxlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxMFxleHBuZHR3NTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxMVxleHBuZHR3NTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZGVlZCByZWNvcmRlZCBKdW5lIDE5LCAxOTY4IG9uIEJvb2sgNDE3MSwgUGFnZSAyNTYgb2YgT2ZmaWNpYWwgUmVjb3Jkcy4NClxwYXIgDQpccGFyIEFQTjogIDIzNy0yNjEtMDYNClxwYXIgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcZmkzNjBcbGkxMDgwXHJpOTlcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk5XGxpbjEwODBcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MCBUcmFjdCA1DQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDA0XHJpMTAwXHNiMTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjEwMFxsaW4xNDA0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDA0XHJpNjQwXHNiMjlcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjY0MFxsaW4xNDA0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVGhlIE5vcnRoIGhhbGYgb2YgdGhlIE5vcnRod2VzdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzg4ODUxIHF1YXJ0ZXIgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIHRoZSBOb3J0aGVhc3QgcXVhcnRlciBvZiBTZWN0aW9uIDEsIFRvd25zaGlwIDExIE5vcnRoLCBSYW5nZSAxMyBXZXN0LCBTYW4gQmVybmFyZGlubyBNZXJpZGlhbi4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0MDRccmk5Mlxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTJcbGluMTQwNFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBFeGNlcHRpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVyZWZyb219e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbnl9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHBvcnRpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZGVlZGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ2l0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBMb3N9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBbmdlbGVzLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG11bmljaXBhbCBjb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0yXGV4cG5kdHctMTNcaW5zcnNpZDI3NjQwNDAgcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcG9yYXRpb24gZm9yIExvcyBBbmdlbGVzIEFxdWVkdWN0IGJ5IGRlZWQgcmVjb3JkZWQgQXByaWwgMTgsIDE5NjkgaW4gQm9vayA0MTUxLCBQYWdlIDM5MywgT2ZmaWNpYWwgUmVjb3Jkcy4NClxwYXIgDQpccGFyIEFQTjogIDIzNy0yNjEtMTMNClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIA0KXHBhciBUcmFjdCA2fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MFxjaGFycnNpZDgwNjY1NTYgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDA0XHJpOTJcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkyXGxpbjE0MDRcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0MDRccmk5OFxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOThcbGluMTQwNFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFBhcmNlbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpQYXJjZWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTWFwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vLn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDQxMjAsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHVuaW5jb3Jwb3JhdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXJlYSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ291bnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgS2Vybix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTdGF0ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENhbGl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTJcZXhwbmR0dy0xNFxpbnNyc2lkMjc2NDA0MCBmfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvcm5pYSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhcyBwZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbWFwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmVjb3JkZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgSmFudWFyeX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dy0zXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDQsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDE5Nzh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCb29rfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMjAsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFBhZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCA2fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTWFwc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFBhcmNlbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBNYXBzLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE9mZmljZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0xXGV4cG5kdHctOVxpbnNyc2lkMjc2NDA0MCB1fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBudHkgUmVjb3JkZXIgb2Ygc2FpZCBDb3VudHkuDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDA0XHJpOTJcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkyXGxpbjE0MDRcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgQVBOOiAgMjM3LTI2MS0yMg0KXHBhciANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IDcNClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0MDRccmk5Mlxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTJcbGluMTQwNFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQwNFxyaTk4XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OFxsaW4xNDA0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgV2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYWxmfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEVhc3R9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYWxmfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGFsZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRvd25zaGlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTJcZXhwbmR0dy0xMFxpbnNyc2lkMjc2NDA0MCAxfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIDF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGgsIFJhbmdlIDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpXZXN0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJlcm5hcmRpbm99e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE1lcmlkaWFuLCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdW5pbmNvcnBvcmF0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhcmVhLCBDb3VudHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIEtlcm4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU3RhdGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIENhbGlmb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtMlxleHBuZHR3LTExXGluc3JzaWQyNzY0MDQwIHJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG5pYSwgbHlpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG5vcnRoZXJseX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2VzdGVybHkgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG5vcnRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxpbmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhhdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcG9ydGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZXJlb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdpdGhpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoYXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGNlcnRhaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzdHJpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMjAwIGZlZXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ0XGV4cG5kdHcyMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3aWR0aCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgY29udmV5ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ0XGV4cG5kdHcyMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ0XGV4cG5kdHcyMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDaXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTG9zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEFuZ2VsZXMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNFxleHBuZHR3MjBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBtdW5pY2lwYWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBjb3Jwb3JhdGlvbix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBkZWVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJlY29yZGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNFxleHBuZHR3MjBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTWFyY2ggMTMsIDE5MjAgaW4gQm9vayAzNDYsIFBhZ2UgNDIxIG9mIERlZWRzLCB0aGUgY2VudGVybGluZSBvZiB3aGljaCBpcyBkZXNjcmliZWQgYXMgZm9sbG93czoNClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0MDRccmk5MVxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTFcbGluMTQwNFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBCZWdpbm5pbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHBvaW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsaW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGRpc3RhbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgNSwxNTMuMjh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmVldH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG5vcnRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDAwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCBcJ2IwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAwOFxycXVvdGUgMTBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc291dGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgY29ybmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcnVubmluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTb3V0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCA1MVwnYjAyMlxycXVvdGUgMzBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCA1MTkuODB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZWV0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANCnBvaW50OyB0aGVuY2Ugb24gYSBjdXJ2ZSB0byB0aGUgbGVmdCBoYXZpbmcgYSByYWRpdXMgb2YgNzE2LjIzIGZlZXQsIGEgZGlzdGFuY2Ugb2YgMTA1LjIxIGZlZXQ7IHRoZW5jZSBTb3V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaCA0MlwnYjA1N1xycXVvdGUgMzBcJzk0IHdlc3QsfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxLDQwMC4xMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZlZXQ7fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYSBjdXJ2ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByaWdodCwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGF2aW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmFkaXVzIG9mIDcxNi4yM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZlZXQsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZGlzdGFuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgODkuNTh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZlZXQ7IHRoZW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNvdXRoIDUwXCdiMDA3XHJxdW90ZSAzMFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdlc3QsIDEsMDU5LjgwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmVldDt9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhIGN1cnZlIHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlIGxlZnQsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYXZpbmcgYSByYWRpdXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMzU4LjE3fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmVldCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGEgZGlzdGFuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMjI2LjE0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmVldDt9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNvdXRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxM1wnYjA1NlxycXVvdGUgMzBcJzk0IHdlc3QsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgNDUwLjEyfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmZWV0OyB0aGVuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBjdXJ2ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJpZ2h0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGhhdmluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYSByYWRpdXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAzMDUuMTd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmVldCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGRpc3RhbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTk2LjQ1fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmVldDt9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU291dGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgNDV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQtMVxleHBuZHR3LTdcaW5zcnNpZDI3NjQwNDAgXCdiMH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMjJccnF1b3RlIDMwXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ1XGV4cG5kdHcyOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3ZXN0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzMzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEsMDk3Ljg4fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDZcZXhwbmR0dzMxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZlZXQ7fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYSBjdXJ2ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsZWZ0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGF2aW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmFkaXVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDM1OC4xN317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZlZXQsIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGRpc3RhbmNlIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTA3LjEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmZWV0OyB0aGVuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTb3V0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMjhcJ2IwMTRccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDcwNS4wNSBmZWV0O317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgY3VydmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmlnaHQsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGF2aW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ0XGV4cG5kdHcyMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByYWRpdXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAzNTguMTd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmVldCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGRpc3RhbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTQ5Ljk1fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmVldDt9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU291dGggNTJcJ2IwMTNccnF1b3RlIDMwXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdlc3QsfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCA4NzYuMzB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmZWV0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHBvaW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNvdXRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsaW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aW9uLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGRpc3RhbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiA2NjB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmZWV0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZSBzb3V0aHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgY29ybmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlcmVvZix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ2VydGlmaWNhdGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDb21wbGlhbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmVjb3JkZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm92ZW1iZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQtMVxleHBuZHR3LTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgNix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTk4OX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJvb2t9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCA2MzExLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dy0yXGluc3JzaWQyNzY0MDQwIFB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgYWdlIDIzNzMsIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDA0XHJpOThcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk4XGxpbjE0MDRcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgQWxzb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBleGNlcHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGFsZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVG93bnNofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3LTNcaW5zcnNpZDI3NjQwNDAgaX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMSBOb3J0aCwgUmFuZ2UgMTMgV2VzdCwgU2FuIEJlcm5hcmRpbm8gTWVyaWRpYW4uDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDA0XHJpOTNcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkzXGxpbjE0MDRcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgQWxzb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGV4Y2VwdGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoYXR9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHBvcnRpb24gb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzYWlkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGRlZWRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDaXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIExvc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQW5nZWxlcyx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBtdW5pY2lwYWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBjb3Jwb3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQtMVxleHBuZHR3LTZcaW5zcnNpZDI3NjQwNDAgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGlvbix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANCmFzIHNob3duIGluIHNhaWQgZGVlZCByZWNvcmRlZCBBcHJpbCAxOCwgMTk4OCBpbiBCb29rIDQxNTEsIFBhZ2UgMzkzLCBPZmZpY2lhbCBSZWNvcmRzLg0KXHBhciANClxwYXIgQVBOOiAgMjM3LTI2MS0yMw0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgDQpccGFyIFRyYWN0IDh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwXGNoYXJyc2lkODA2NjU1NiANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0MDRccmk5Mlxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTJcbGluMTQwNFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBBbGx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGF0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcG9ydGlvbn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2YgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU291dGh3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyIG9mIFNlY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgVG93bnNoaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGgsIFJhbmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFdlc3QsIFNhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0xXGV4cG5kdHctNlxpbnNyc2lkMjc2NDA0MCBufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhcmRpbm8gTWVyaWRpYW4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW4gdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB1bmluY29ycG9yYXRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFyZWF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDb3VudHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgS2VybiwgU3RhdGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ2FsaWZvcm5pYSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBiZWluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbW9yZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHBhcnRpY3V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxN1xpbnNyc2lkMjc2NDA0MCBsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhcmx5IGRlc2NyaWJlZCBhcyBmb2xsb3dzOg0KXHBhciANClxwYXIgQ29tbWVuY2luZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTb3V0aHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgY29ybmVyfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3Rpb24sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDAxfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZGVncmVlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAwMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG1pbnV0ZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzZWNvbmRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEVhc3Qgb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFsb25nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBXZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsaW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aW9uIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGRpc3RhbmNlIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTM4LjgxfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmZWV0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG8gYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcG9pbnQgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoZXJseX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGJvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgdX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbmRhcnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBMb3N9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQW5nZWxlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEFxdWVkdWN0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGNvbnZleWVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENpdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBMb3N9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBbmdlbGVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIERlZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZWNvcmRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBNYXkgMzEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMTk2OH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgaX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBuIEJvb2t9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCA0MTY1LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KUGFnZSA0MzR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE9mZmljaWFsfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBSZWNvcmRzLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHBvaW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWxzb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYmVpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRydWV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBQb2ludH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBCZWdpbm5pbmc7fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVuY2UgY29udGludWluZyBOb3J0aCAwMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGRlZ3JlZSAwMSBtaW51fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCB0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBlcyAxMiBzZWNvbmRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgRWFzdCBvbiBhbn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWxvbmcgc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFdlc3QgbGluZSBhIGR9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwIGl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHN0YW5jZSBvZiAxMjAzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZC0zXGV4cG5kdHctMTdcaW5zcnNpZDI3NjQwNDAgLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMjEgZmVldCB0b317XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcG9pbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsaW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU291dGh3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTb3V0aHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTZWN0aW9uO317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwIG59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoIDg5IGRlZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZWVzIDI0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbWludXRlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgNTIgc2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMjc2NDA0MCBjfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvbmRzIEVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9uIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFsb25nIHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlkIE5vcnRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGluZSBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBkaXN0YW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIDEsMTg3LjAwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmZWV0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwIHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG8gYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDVcZXhwbmR0dzI5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHBvaW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb24gdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aGVybHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBib3VuZGFyeX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzYWlkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBMb3N9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBbmdlbGVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBcXVlZHVjdCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzYWlkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwb2ludH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFsc299e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGJlaW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBiZWdpbm5pbmcgb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBub317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtMVxleHBuZHR3LTdcaW5zcnNpZDI3NjQwNDAgbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgLXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG5nZW50IDM0NTAuNTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmb290fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByYWRpdXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBjdXJ2ZSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZyb219e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3aGljaH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcG9pbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJhZGl1c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHBvaW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBiZWFyc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNvdXRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCA1OX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGRlZ3JlZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbWludXRlcyAzN317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtMlxleHBuZHR3LTEzXGluc3JzaWQyNzY0MDQwIGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGNvbmRzIEVhc3Q7fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTb3V0aHdlc3Rlcmx5LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFsb25nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGhlcmx5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYm91bmRhcnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGN1cnZlLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhyb3VnaH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGNlbnRyYWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmdsZSBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMDMgZGVncmVlcyAyMCBtaW51fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZXMgMDEgc2Vjb25kc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW4gYXJjIGRpc3RhbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2YgMjAwLjc2IGZlZXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvIHRoZSBiZWdpbm5pbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiBhIDM4Ni45Nn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZm9vdCByYWRpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgdX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcyByZXZlcnNlIGN1cnZlO317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNvdXRod2VzdGVybHksfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYWxvbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGhlcmx5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYm91bmRhcnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBjdXJ2ZSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aHJvdWdofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgY2VudHJhbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFuZ2xlIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAyMCBkZWdyZWVzIDIxfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbWludXRlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgNDB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzZWNvbmRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbiBhcmN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBkaXN0YW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2YgMTM3LjUxfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmVldDt9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNvdXRoIDQ3fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBkZWdyZWVzIDQ4fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmVldH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMDJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDI3NjQwNDAgY317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb25kcyBXZXN0IG9uIGFuZCBhbG9uZyBzYWlkIE5vcnRoZXJseSBib3VuZGFyeSBhIGRpc3RhbmNlIG9mIDEzODYuNjEgZmVldCB0byB0aGUgVHJ1ZSBQb2ludCBvZiBCZWdpbm5pbmcuDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDA0XHJpMTAwXHNiMTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjEwMFxsaW4xNDA0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEFQTjogIDIzNy0yNjEtMzAgKGZvcm1lcmx5IDIzNy0yNjEtMTApDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxaiBcbGkxNDA0XHJpOTNcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkzXGxpbjE0MDRcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxmaTM2MFxsaTEwODBccmk5OVxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTlcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNzY0MDQwIFRyYWN0IDkNClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0MDRccmk5M1xub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTNcbGluMTQwNFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQwNFxyaTgyXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW44MlxsaW4xNDA0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgdHJhY3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZiBsYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpzaXR1YXRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlIE5vcnRofXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYWxmIG9mIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRoIGhhbGYgb2Z9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZSBFYXN0IGhhbGYgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGUgRWFzdCBoYWxmfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExLCBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aCwgUmFuZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgV2VzdCwgU2FufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQmVybmFyZGlub317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQmFzZSBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBNZXJpZGlhbiwgS2Vybn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQ291bnR5LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KQ2FsaWZvcm5pYSwgYmVpbmcgYSBwb3J0aW9uIG9mIHRoYXQgcHJvcGVydHkgZGVzY3JpYmVkIGluIEJvb2sgNDc2OSwgUGFnZSA3OTgsIHJlY29yZGVkIG9uIEZlYnJ1YXJ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDgsIDE5NzMsIEtlcm4gQ291bnR5fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBEZWVkIFJlY29yZHMsIGFuZCBiZWluZyBtb3JlIHBhcnRpY3VsYXJseSBkZXNjcmliZWQgYXMgZm9sbG93czoNClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFsIFxsaTE0MDRccmk5NFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTRcbGluMTQwNFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBUaGF0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHBvcnRpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzYWlkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDlcZXhwbmR0dzQ1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHByb3BlcnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kOFxleHBuZHR3NDFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbHlpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOFxleHBuZHR3NDRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbm9ydGh3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kOFxleHBuZHR3NDJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kOVxleHBuZHR3NDVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhhdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDhcZXhwbmR0dzQxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHByb3BlcnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGRlc2NyaWJlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDhcZXhwbmR0dzQzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDhcZXhwbmR0dzQzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIEJvb2t9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ4XGV4cG5kdHc0MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCA0MTk4LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBQYWdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kOFxleHBuZHR3NDBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgNDI5LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZC0xXGV4cG5kdHctNlxpbnNyc2lkMjc2NDA0MCBLfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNzY0MDQwIGVybiBDb3VudHkgRGVlZCBSZWNvcmRzLg0KXHBhciANClxwYXIgQVBOOiAgMjM3LTI4NS0wMw0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI3NjQwNDAgDQpccGFyIFRyYWN0IDEwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjc2NDA0MFxjaGFycnNpZDgwNjY1NTYgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1N1xxbCBcbGkxNDA0XHJpOTRcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjk0XGxpbjE0MDRcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFsIFxsaTE0MDRccmkyNTNcc2IxMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMjUzXGxpbjE0MDRcaXRhcDBccGFyYXJzaWQyNzY0MDQwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBUaGUgU291dGhlYXN0IFwnYmMgb2YgdGhlIE5vcnRod2VzdCBcJ2JjIG9mIHRoZSBOb3J0aGVhc3QgXCdiYw0KIG9mIFNlY3Rpb24gMTEsIFRvd25zaGlwIDExIE5vcnRoLCBSYW5nZSAxMyBXZXN0LCBTYW4gQmVybmFyZGlubyBCYXNlIGFuZCBNZXJpZGlhbi4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0MDRccmkzMDJcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjMwMlxsaW4xNDA0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEVYQ0VQVDoNClxwYXIgUGFyY2VsIE5vLiA4MCBjb21wcmlzaW5nIG9mIHRoYXQgcG9ydGlvbiBvZiB0aGUgU291dGhlYXN0IFwnYmMgb2YgdGhlIE5vcnRod2VzdCBcJ2JjIG9mIHRoZSBOb3J0aGVhc3QgXCdiYyBvZiBTZWN0aW9uIA0KMTEsIFRvd25zaGlwIDExIE5vcnRoLCBSYW5nZSAxMyBXZXN0LCBTYW4gQmVybmFyZGlubyBNZXJpZGlhbiwgaW4gdGhlIENvdW50eSBvZiBLZXJuLCBTdGF0ZSBvZiBDYWxpZm9ybmlhLCBhY2NvcmRpbmcgdG8gdGhlIG9mZmljaWFsIHBsYXQgdGhlcmVvZiwgbHlpbmcgc291dGhlYXN0ZXJseSBvZiBhIGxpbmUgdGhhdCBsaWVzIDEwMCBmZWV0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3LTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbm9ydGhlYXN0ZXJseSBvZiwgcGFyYWxsZWwgd2l0aCBhbmQgbWVhc3VyZWQgYXQgcmlnaHQgYW5nbGVzIGZyb20gdGhlIGZvbGxvd2luZyBkZXNjcmliZWQgbGluZSBhbmQgaXRzIHByb2xvbmdhdGlvbjoNClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJccWogXGxpOTkwXHJpMFxzbC0yMDBcc2xtdWx0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjk5MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxmczIwXGluc3JzaWQyNzY0MDQwIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGxpMTQwNFxyaTE4MFxzYjI5XG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4xODBcbGluMTQwNFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBCZWdpbm5pbmcgYXQgYSBwb2ludCBpbiB0aGUgU291dGhlcmx5IGxpbmUgb2Ygc2FpZCBTZWN0aW9uIDExLCBkaXN0YW50IHRoZXJlb24gTm9ydGggODkgZGVncmVlcyAzMH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCANCm1pbnV0ZXMgMjEgc2Vjb25kcyBFYXN0IDc2OS43NCBmZWV0IGZyb20gdGhlIFNvdXRod2VzdCBjb3JuZXIgb2Ygc2FpZCBTZWN0aW9uOyB0aGVuY2UgTm9ydGggMjkgZGVncg0KZWVzIDExIG1pbnV0ZXMgNDggc2Vjb25kcyBFYXN0IDE3NDAuODQgZmVldCB0byB0aGUgYmVnaW5uaW5nIG9mIGEgY3VydmUgY29uY2F2ZSBzb3V0aGVhc3Rlcmx5IGFuZCBoYXZpbmcgYSByYWRpdXMgb2YgNDU1LjE5IGZlZXQ7IHRoZW5jZSBub3J0aGVhc3Rlcmx5IGFsb25nIHNhaWQgY3VydmUgdGhyb3VnaCBhbiBhbmdsZSBvZiA0NyBkZWdyZWVzIDQ3IG1pbnV0ZXMgNDMgc2Vjb25kcywgYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHctMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhcmMgbGVuZ3RoIG9mIDM3OS43MSBmZWV0IHRvIHRoDQplIGJlZ2lubmluZyBvZiBhIHJldmVyc2UgY3VydmUgY29uY2F2ZSBub3J0aHdlc3Rlcmx5IGFuZCBoYXZpbmcgYSByYWRpdXMgb2YgMjUwLjA0IGZlZXQ7IGEgcmFkaWFsIGxpbmUgYXQgc2FpZCBwb2ludCBvZiByZXZlcnNlIGN1cnZhdHVyZSBiZWFycyBOb3J0aCAxMyBkZWdyZWVzIDAwIG1pbnV0ZXMgMjkgc2Vjb25kcyBXZXN0OyB0aGVuY2Ugbm9ydGhlYXN0ZXJseSBhbG9uZyBzYWlkIHJldmVyc2UgY3VydmUsIHRocm91Z2ggYW4gYW5nbGUgb2YNCiANCjUyIGRlZ3JlZXMgMTYgbWludXRlcyAxOCBzZWNvbmRzLCBhbiBhcmMgbGVuZ3RoIG9mIDIyOC4xMSBmZWV0OyB0aGVuY2UgTm9ydGggMjQgZGVncmVlcyA0MyBtaW51dGVzIDEzIHNlY29uZHMgRWFzdCA1NjAuODEgZmVldCB0byB0aGUgYmVnaW5uaW5nIG9mIGEgY3VydmUgY29uY2F2ZSBzb3V0aGVhc3Rlcmx5IGFuZCBoYXZpbmcgYSByYWRpdXMgb2YgMzY1LjA2IGZlZXQ7IHRoZW5jZSBub3J0aGVhc3Rlcmx5IGFsb25nIHNhaWQgY3VydmUsIHRocg0Kbw0KdWdoIGFuIGFuZ2xlIG9mIDM3IGRlZ3JlZXMgMDUgbWludXRlcyAzOCBzZWNvbmRzLCBhbiBhcmMgbGVuZ3RoIG9mIDIzNi4zNCBmZWV0OyB0aGVuY2UgTm9ydGggNjEgZGVncmVlcyA0OCBtaW51dGVzIDUxIHNlY29uZHMgRWFzdCA3MjMuMjMgZmVldCB0byB0aGUgYmVnaW5uaW5nIG9mIGEgY3VydmUgY29uY2F2ZSBub3J0aHdlc3Rlcmx5IGFuZCBoYXZpbmcgYSByYWRpdXMgb2YgMzEwLjE2IGZlZXQ7IHRoZW5jZSBub3J0aGVhc3Rlcmx5IGFsb25nDQogc2FpZCBjdXJ2ZSB0aHJvdWdoIGFuIGFuZ2xlIG9mIDU2IGRlZ3JlZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQoyNiBtaW51dGVzIDI3IHNlY29uZHMsIGFuIGFyYyBsZW5ndGggb2YgMzA1LjU0IGZlZXQgdG8gdGhlIGJlZ2lubmluZyBvZiBhIHJldmVyc2UgY3VydmUsIGNvbmNhdmUgc291dGhlYXN0ZXJseSBhbmQgaGF2aW5nIGEgcmFkaXVzIG9mIDc2NS4xMiBmZWV0LCBhIHJhZGlhbCBsaW5lIGF0IHNhaWQgcG9pbnQgb2YgcmV2ZXJzZSBjdXJ2YXR1cmUgYmVhcnMgU291dGggODQgZGVnDQpyZWVzIDM3IG1pbnV0ZXMgMzYgc2Vjb25kcyBFYXN0OyB0aGVuY2UgTm9ydGhlYXN0ZXJseSBhbG9uZyBzYWlkIHJldmVyc2UgY3VydmUgdGhyb3VnaCBhbiBhbmdsZSBvZiAzNCBkZWdyZWVzIDQ0IG1pbnV0ZXMgNTcgc2Vjb25kcywgYW4gYXJjIGxlbmd0aCBvZiA0NjQuMDMgZmVldDsgdGhlbmNlIE5vcnRoIDQwIGRlZ3JlZXMgMDcgbWludXRlcyAyMSBzZWNvbmRzIEVhc3QgZmVldCB0byB0aGUgYmVnaW5uaW5nIG9mIGEgY3VydmUgY29uY2F2ZSANClNvdXRoZWFzdGVybHkgYW5kIGhhdmluZyBhIHJhZGl1cyBvZiAyMDAwLjMwIGZlZXQ7IHRoZW5jZSBOb3J0aGVhc3Rlcmx5IGFsb25nIHNhaWQgY3VydmUsIHRocm91Z2ggYW4gYW5nbGUgb2YgNyBkZWdyZWVzIDQwIG1pbnV0ZXMgMzYgc2Vjb25kcywgYW4gYXJjIGxlbmd0aCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTFcaW5zcnNpZDI3NjQwNDAgb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBmIDI2OC4wMSBmZWV0OyB0aGVuY2UgTm9ydGggNDcgZGVncmVlcyA0NyBtaW51dGVzIDU3IHNlY29uZHMgRWFzdCAxNTY0LjYyIGZlZXQgdG8gYSBwb2ludCBpbiB0aGUgTm9ydGhlcmx5IGxpbmUgb2Ygc2FpZCBTZWN0aW9uIDExLCBkaXN0YW50IHRoZXJlb24gU291dGggODkgZGVncmVlcyAyMyBtaW51dGVzIDI1IHNlY29uZHMgV2VzdCAxLjc1IGZlZXQgZnJvbSB0aGUgTm9ydGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgY29ybmVyIG9mIHNhaWQgU2VjdGlvbi4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTQxNFxyaTE4MFxzYjI5XG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4xODBcbGluNDE0XGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkxNDA0XHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0MDRcaXRhcDBccGFyYXJzaWQyNzY0MDQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQVBOOiAgMjM3LTI4NS0wNA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ3OTQ3MjkgDQpccGFyIH1ccGFyZCBcbHRycGFyXHMxNVxxaiBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMTMxNzY3MTMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjA3MTI5NiBjLlx0YWIgTWV0ZW9yb2xvZ2ljYWwgVG93ZXINClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5OFxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOThcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBUaGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgV2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYWxmfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgRWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYWxmfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGFsZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIE5vcnRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFRvd25zaGlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtMlxleHBuZHR3LTEwXGluc3JzaWQyNzY0MDQwIDF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBOb3J0aCwgUmFuZ2UgMTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBXZXN0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI3NjQwNDAgU2FufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQmVybmFyZGlub317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KTWVyaWRpYW4sIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdW5pbmNvcnBvcmF0ZWR9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGFyZWEsIENvdW50eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIEtlcm4sfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTdGF0ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIENhbGlmb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0yXGV4cG5kdHctMTFcaW5zcnNpZDI3NjQwNDAgcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbmlhLCBseWluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG5vcnRoZXJseX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2VzdGVybHkgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG5vcnRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbGluZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGF0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcG9ydGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlcmVvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdpdGhpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhhdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGNlcnRhaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHN0cmlwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBsYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMjAwIGZlZXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3aWR0aCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBjb252ZXllZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDaXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTG9zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQW5nZWxlcyx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG11bmljaXBhbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBjb3Jwb3JhdGlvbix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBieX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBkZWVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNFxleHBuZHR3MjBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmVjb3JkZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpNYXJjaCAxMywgMTkyMCBpbiBCb29rIDM0NiwgUGFnZSA0MjEgb2YgRGVlZHMsIHRoZSBjZW50ZXJsaW5lIG9mIHdoaWNoIGlzIGRlc2NyaWJlZCBhcyBmb2xsb3dzOg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkxXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45MVxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMjc2NDA0MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgDQpccGFyIEJlZ2lubmluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcG9pbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxpbmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzYWlkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZGlzdGFuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCA1LDE1My4yOH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmZWV0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgbm9ydGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMDB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQyNzY0MDQwIFwnYjB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDA4XHJxdW90ZSAxMFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzb3V0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBjb3JuZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBzYWlkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBydW5uaW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzM0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNvdXRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDUxXCdiMDIyXHJxdW90ZSAzMFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDUxOS44MH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCBmfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBlZXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KcG9pbnQ7IHRoZW5jZSBvbiBhIGN1cnZlIHRvIHRoZSBsZWZ0IGhhdmluZyBhIHJhZGl1cyBvZiA3MTYuMjMgZmVldCwgYSBkaXN0YW5jZSBvZiAxMDUuMjEgZmVldDsgdGhlbmNlIFNvdX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMjc2NDA0MCB0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoIDQyXCdiMDU3XHJxdW90ZSAzMFwnOTQgd2VzdCx9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEsNDAwLjExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmVldDt9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhIGN1cnZlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJpZ2h0LCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYXZpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByYWRpdXMgb2YgNzE2LjIzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmVldCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBkaXN0YW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCA4OS41OH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmVldDsgdGhlbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU291dGggNTBcJ2IwMDdccnF1b3RlIDMwXCc5NH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2VzdCwgMSwwNTkuODB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmZWV0O317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGEgY3VydmUgdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGUgbGVmdCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGhhdmluZyBhIHJhZGl1c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAzNTguMTd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmZWV0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYSBkaXN0YW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAyMjYuMTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmZWV0O317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU291dGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDEzXCdiMDU2XHJxdW90ZSAzMFwnOTQgd2VzdCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCA0NTAuMTJ9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZlZXQ7IHRoZW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGN1cnZlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcmlnaHQsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaGF2aW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhIHJhZGl1c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzMzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDMwNS4xN317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmZWV0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzMxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzBcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZGlzdGFuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxOTYuNDV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmZWV0O317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczMFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTb3V0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCA0NX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0xXGV4cG5kdHctN1xpbnNyc2lkMjc2NDA0MCBcJ2IwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAyMlxycXVvdGUgMzBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHdlc3QsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMSwwOTcuODh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNlxleHBuZHR3MzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmVldDt9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjlcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczMVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhIGN1cnZlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxlZnQsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYXZpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByYWRpdXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgMzU4LjE3fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZmVldCwgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZGlzdGFuY2Ugb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxMDcuMTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZlZXQ7IHRoZW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNvdXRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAyOFwnYjAxNFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgNzA1LjA1IGZlZXQ7fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIwXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBjdXJ2ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByaWdodCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYXZpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MThcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDRcZXhwbmR0dzIxXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHJhZGl1c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDM1OC4xN317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmZWV0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjFcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZGlzdGFuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxN1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxOFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxNDkuOTV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBmZWV0O317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczMlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxOVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBTb3V0aCA1MlwnYjAxM1xycXVvdGUgMzBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgd2VzdCx9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDg3Ni4zMH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZlZXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcG9pbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgU291dGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxpbmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3Rpb24sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZGlzdGFuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mIDY2MH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGZlZXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlIHNvdXRod2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBjb3JuZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGVyZW9mLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEzXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHBlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBDZXJ0aWZpY2F0ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDJcZXhwbmR0dzEyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENvbXBsaWFuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxM1xpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCByZWNvcmRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQzXGV4cG5kdHcxNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3ZlbWJlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0xXGV4cG5kdHctNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCA2LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxOTg5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgQm9va317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDYzMTEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTJcaW5zcnNpZDI3NjQwNDAgUH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjc2NDA0MCBhZ2UgMjM3MywgT2ZmaWNpYWwgUmVjb3Jkcy4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5OFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOThcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBBbHNvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGV4Y2VwdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBoYWxmfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzVcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kN1xleHBuZHR3MzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9ydGh3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczNVxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBOb3J0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzZcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM1XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIFNlY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ3XGV4cG5kdHczNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCAxLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczNlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBUb3duc2h9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHctM1xpbnNyc2lkMjc2NDA0MCBpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM2XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIDExIE5vcnRoLCBSYW5nZSAxMyBXZXN0LCBTYW4gQmVybmFyZGlubyBNZXJpZGlhbi4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5M1xub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTNcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDI3NjQwNDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KXHBhciBBbHNvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZXhjZXB0aW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdGhhdH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgcG9ydGlvbiBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGxhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgZGVlZGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIENpdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDI3NjQwNDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTG9zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMjc2NDA0MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBbmdlbGVzLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIG11bmljaXBhbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIGNvcnBvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0xXGV4cG5kdHctNlxpbnNyc2lkMjc2NDA0MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCB0aW9uLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQyNzY0MDQwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNzY0MDQwIA0KYXMgc2hvd24gaW4gc2FpZCBkZWVkIHJlY29yZGVkIEFwcmlsIDE4LCAxOTg4IGluIEJvb2sgNDE1MSwgUGFnZSAzOTMsIE9mZmljaWFsIFJlY29yZHMuDQpccGFyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMTQ0MFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMTMxNzY3MTMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBBUE46ICAyMzctMjYxLTIzDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM3IFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDMwODg5MjcgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy5cdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczdccWogXGZpLTcyMFxsaTE0NDBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzM1xpbHZsNlxvdXRsaW5lbGV2ZWw2XGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDE0MDc5NjUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzMDg4OTI3IFNoYXJlZCBQZXJtaXRzDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMxNSBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCBhLlx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzMTVccWogXGZpLTM2MFxsaTE4MDBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzNVxhZGp1c3RyaWdodFxyaW4wXGxpbjE4MDBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgS2VybiBDb3VudHkgR3JhZGluZyBQZXJtaXQgTm8uIEsyMDE0MDIxMjM6IElzc3VlZCBKdWx5IDI1LCAyMDE0DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMxNSBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjc2NDA0MCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCBiLlx0YWJ9DQpJbmNpZGVudGFsIFRha2UgUGVybWl0IDIwODEtMjAxNC0wMjMtMDQ6IElzc3VlZCB0byBSaXNpbmcgVHJlZSBXaW5kIEZhcm0gTExDIGFuZCBSaXNpbmcgVHJlZSBXaW5kIEZhcm0gSUkgTExDIGJ5IENhbGlmb3JuaWEgRGVwYXJ0bWVudCBvZiBGaXNoIGFuZCBXaWxkbGlmZQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMTUgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgYy5cdGFifU5vdGljZSBvZiANCkFwcGxpY2FiaWxpdHkgdW5kZXIgV2FzdGUgRGlzY2hhcmdlIFJlcXVpcmVtZW50cyBXRElEIE5vLiA2QjE1MTQwMzAwNDogSXNzdWVkIHRvIFJpc2luZyBUcmVlIFdpbmQgRmFybSBMTEMgYW5kIFJpc2luZyBUcmVlIFdpbmQgRmFybSBJSSBMTEMgYnkgTGFob250YW4gUmVnaW9uYWwgV2F0ZXIgUXVhbGl0eSBDb250cm9sIEJvYXJkDQpccGFyIH1ccGFyZCBcbHRycGFyXHMxNVxxaiBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxNjA3MTI5NiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MDcxMjk2XGNoYXJyc2lkMTQwNDE1MzAgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM3IFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDMwODg5MjcgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNC5cdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczdccWogXGZpLTcyMFxsaTE0NDBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzM1xpbHZsNlxvdXRsaW5lbGV2ZWw2XGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDE0MDc5NjUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzMDg4OTI3IFRoaXJkIFBhcnR5IFJpZ2h0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkxNDQwXHJpMFxzYTEyMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxMjcyNTM1IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI3NjQwNDAgTm9uZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNzI1MzVcY2hhcnJzaWQxMzE3NjcxMyANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJccWogXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkNTE5Mzk2NCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1MTkzOTY0XGNoYXJyc2lkNTE5Mzk2NCANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjc2Mzk5NyBccGFnZSANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczUxXHFjIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDY3NjM5OTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxiXGluc3JzaWQ2NzYzOTk3IEVYSElCSVQgQi0xDQpccGFyIA0KXHBhciBQUk9KRUNUIFNVQlNUQVRJT04gU0hBUkVEIEZBQ0lMSVRJRVMNClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjc2Mzk5NyANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZjNcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmM1xkYmNoXGFmMFxoaWNoXGYzIFwnYjdcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczZccWwgXGZpLTM2MFxsaTcyMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM0XG91dGxpbmVsZXZlbDVcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgT25lICgxKSAyMzBrViBEZWFkIEVuZCBTdHJ1Y3R1cmUgaW5jbHVkaW5nIHRoZSBmb2xsb3dpbmcgZXF1aXBtZW50IGFuZCBtYXRlcmlhbDoNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifX1ccGFyZCBcbHRycGFyDQpcczZccWwgXGZpLTM2MFxsaTEwODBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzNFxpbHZsMVxvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDE0MDc5NjUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCANClRhcGVyZWQgVHVidWxhciBTdHJ1Y3R1cmFsIFN0ZWVsIGFuZCBhc3NvY2lhdGVkIGhhcmR3YXJlDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn1TdHJ1Y3R1cmUgYW5kIGVxdWlwbWVudCBncm91bmRpbmcgY29uZHVjdG9yIGFuZCBhc3NvY2lhdGVkIGhhcmR3YXJlDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn1UaHJlZSAoMykgTGlnaHRuaW5nIFN1cmdlIEFycmVzdG9ycywgMTgwa1YsIDE0NGtWIE1DT1YNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifVRocmVlICgzKSBDb21wcmVzc2lvbiBUZWVzLCA3OTUgQUNTUiB0byBORU1BIDQtSG9sZSBQYWQNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifVRoaXJ0eSAoMzApIEZlZXQgb2YgMTI3MiBrY21pbCBBQUMgKE5hcmNpc3N1cykgY29uZHVjdG9yDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn1TaXggKDYpIFdlbGRlZCBUZXJtaW5hbCBBZGFwdG9ycywgMTI3MiBrY21pbCBBQUMgdG8gTkVNQSA0LUhvbGUgUGFkDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn1UaHJlZSAoMykgU3RhdGlvbiBQb3N0IEluc3VsYXRvcnMsIDIzMGtWLCBUUi0zMDgNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifVRocmVlICgzKSBDYWJsZSBTdXBwb3J0cywgMi0xMjcyIEFBQyBjb25kdWN0b3JzIHRvIDVcJzk0IEJvbHQgQ2lyY2xlDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn1GaXZlIEh1bmRyZWQgKDUwMCkgRmVldCBvZiAxMjcyIGtjbWlsIEFBQyAoTmFyY2lzc3VzKSBjb25kdWN0b3INClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifUFzIE5lZWRlZCBDYWJsZSBTcGFjZXJzIDItMTI3MiBBQUMgY29uZHVjdG9ycywgNFwnOTQgc2VwYXJhdGlvbg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNlxxaiBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDY3NjM5OTcge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZjNcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmM1xkYmNoXGFmMFxoaWNoXGYzIFwnYjdcdGFifX1ccGFyZCBcbHRycGFyDQpcczZccWwgXGZpLTM2MFxsaTcyMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM0XG91dGxpbmVsZXZlbDVcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgDQpUaHJlZSAoMykgMjMwa1YgU2luZ2xlIFBoYXNlIEJ1cyBTdXBwb3J0cywgaW5jbHVkaW5nIHRoZSBmb2xsb3dpbmcgZXF1aXBtZW50IGFuZCBtYXRlcmlhbDoNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifX1ccGFyZCBcbHRycGFyDQpcczZccWwgXGZpLTM2MFxsaTEwODBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzNFxpbHZsMVxvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDE0MDc5NjUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBTdHJ1Y3R1cmFsIFN0ZWVsIGFuZCBBc3NvY2lhdGVkIGhhcmR3YXJlDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn1TdHJ1Y3R1cmUgYW5kIGVxdWlwbWVudCBncm91bmRpbmcgY29uZHVjdG9yIGFuZCBhc3NvY2lhdGVkIGhhcmR3YXJlDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn1UaHJlZSAoMykgU3RhdGlvbiBQb3N0IEluc3VsYXRvcnMsIDIzMGtWLCBUUi0zMDgNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifVRocmVlICgzKSBDYWJsZSBTdXBwb3J0cywgMi0xMjcyIEFBQyBjb25kdWN0b3JzIHRvIDVcJzk0IEJvbHQgQ2lyY2xlDQpccGFyIH1ccGFyZCBcbHRycGFyXHM2XHFqIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDVcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkNjc2Mzk5NyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmM1xpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgXGxvY2hcYWYzXGRiY2hcYWYwXGhpY2hcZjMgXCdiN1x0YWJ9fVxwYXJkIFxsdHJwYXINClxzNlxxbCBcZmktMzYwXGxpNzIwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczRcb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDE0MDc5NjUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBPbmUgKDEpDQogMjMwa1YsIDEyMDBBLCBHYW5nZWQgMy1QaGFzZSwgTW90b3IgT3BlcmF0ZWQgRGlzY29ubmVjdCBTd2l0Y2ggaW5jbHVkaW5nIHRoZSBmb2xsb3dpbmcgZXF1aXBtZW50IGFuZCBtYXRlcmlhbDoNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifX1ccGFyZCBcbHRycGFyDQpcczZccWwgXGZpLTM2MFxsaTEwODBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzNFxpbHZsMVxvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDE0MDc5NjUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBTdHJ1Y3R1cmFsIFN0ZWVsIGFuZCBBc3NvY2lhdGVkIGhhcmR3YXJlDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn1TdHJ1Y3R1cmUgYW5kIGVxdWlwbWVudCBncm91bmRpbmcgY29uZHVjdG9yLCBhc3NvY2lhdGVkIGhhcmR3YXJlLCBhbmQgc3dpdGNoIGdyb3VuZGluZyBwbGF0Zm9ybQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9U2l4ICg2KSBTdGF0aW9uIFBvc3QgSW5zdWxhdG9ycywgMjMwa1YsIFRSLTMwOA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9U2l4ICg2KSBXZWxkZWQgVGVybWluYWwgQWRhcHRvcnMsIDItMTI3MiBrY21pbCBBQUMgdG8gTkVNQSA0LUhvbGUgUGFkDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn1TaXh0eSAoNjApIEZlZXQgb2YgMTI3MiBrY21pbCBBQUMgKE5hcmNpc3N1cykgY29uZHVjdG9yDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn1BcyBOZWVkZWQgQ2FibGUgU3BhY2VycyAyLTEyNzIgQUFDIGNvbmR1Y3RvcnMsIDRcJzk0IHNlcGFyYXRpb24NClxwYXIgfVxwYXJkIFxsdHJwYXJcczZccWogXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ2NzYzOTk3IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGYzXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcbG9jaFxhZjNcZGJjaFxhZjBcaGljaFxmMyBcJ2I3XHRhYn19XHBhcmQgXGx0cnBhcg0KXHM2XHFsIFxmaS0zNjBcbGk3MjBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzNFxvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMTQwNzk2NSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIE9uZSAoMSkgMjMwa1YsIE1ldGVyaW5nIFN0YXQNCmlvbiwgaW5jbHVkaW5nIHRoZSBmb2xsb3dpbmcgZXF1aXBtZW50IGFuZCBtYXRlcmlhbDoNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifX1ccGFyZCBcbHRycGFyDQpcczZccWwgXGZpLTM2MFxsaTEwODBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzNFxpbHZsMVxvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDE0MDc5NjUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBTdHJ1Y3R1cmFsIFN0ZWVsIGFuZCBBc3NvY2lhdGVkIGhhcmR3YXJlDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn1TdHJ1Y3R1cmUgYW5kIGVxdWlwbWVudCBncm91bmRpbmcgY29uZHVjdG9yIGFuZCBhc3NvY2lhdGVkIGhhcmR3YXJlDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn1FcXVpcG1lbnQgY29udHJvbCB3aXJpbmcgYW5kIGludGVyY29ubmVjdGluZyBjb25kdWl0IGluY2x1ZGluZyBKdW5jdGlvbiBCb3hlcw0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9VGhyZWUgKDMpIDIzMGtWLCA2MDA6NSBTaW5nbGUgUmF0aW8gRHVhbCBXaW5kaW5nLCBJbnN0cnVtZW50IEN1cnJlbnQgVHJhbnNmb3JtZXJzDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn1UaHJlZSAoMykgMjMwa1YsIDEyMDAvMjAwMDoxOjEgRHVhbCBXaW5kaW5nLCBJbnN0cnVtZW50IFBvdGVudGlhbCBUcmFuc2Zvcm1lcnMNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifVNpeCAoNikgV2VsZGVkIFRlcm1pbmFsIEFkYXB0b3JzLCAyLTEyNzIga2NtaWwgQUFDIHRvIE5FTUEgNC1Ib2xlIFBhZA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9VGhyZWUgKDMpIENhYmxlIFNwYWNlciBUZWVzLCAyLTEyNzIga2NtaWwgQUFDIHRvIE5FTUEgNC1Ib2xlIFBhZA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9VGhyZWUgKDMpIEFsdW1pbnVtIENhYmxlIFN1cHBvcnQgQnJhY2tldHMNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifVRoaXJ0eSAoMzApIEZlZXQgb2YgMTI3MiBrY21pbCBBQUMgKE5hcmNpc3N1cykgY29uZHVjdG9yDQpccGFyIH1ccGFyZCBcbHRycGFyXHM2XHFqIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDVcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkNjc2Mzk5NyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmM1xpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgXGxvY2hcYWYzXGRiY2hcYWYwXGhpY2hcZjMgXCdiN1x0YWJ9fVxwYXJkIFxsdHJwYXINClxzNlxxbCBcZmktMzYwXGxpNzIwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczRcb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDE0MDc5NjUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCANCjIzMGtWIFN1YnN0YXRpb24gU3VtbWF0aW9uIEJ1cyBpbmNsdWRpbmcgdGhlIGZvbGxvd2luZyBlcXVpcG1lbnQgYW5kIG1hdGVyaWFsOg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9fVxwYXJkIFxsdHJwYXINClxzNlxxbCBcZmktMzYwXGxpMTA4MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM0XGlsdmwxXG91dGxpbmVsZXZlbDVcYWRqdXN0cmlnaHRccmluMFxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMTQwNzk2NSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIA0KT25lICgxKSAyMzBrViwgVGhyZWUgUGhhc2UgTG93IEJ1cyBTdXBwb3J0LCB3aGljaCBpbmNsdWRlczoNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZjEwXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcbG9jaFxhZjEwXGRiY2hcYWYwXGhpY2hcZjEwIFwnYTdcdGFifX1ccGFyZCBcbHRycGFyDQpcczZccWwgXGZpLTM2MFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzNFxpbHZsMlxvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDE0MDc5NjUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBTdHJ1Y3R1cmFsIFN0ZWVsIGFuZCBBc3NvY2lhdGVkIGhhcmR3YXJlDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGYxMFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgXGxvY2hcYWYxMFxkYmNoXGFmMFxoaWNoXGYxMCBcJ2E3XHRhYn1TdHJ1Y3R1cmUgZ3JvdW5kaW5nIGNvbmR1Y3RvciBhbmQgYXNzb2NpYXRlZCBoYXJkd2FyZQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmMTBcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmMTBcZGJjaFxhZjBcaGljaFxmMTAgXCdhN1x0YWJ9VGhyZWUgKDMpIFN0YXRpb24gUG9zdCBJbnN1bGF0b3JzLCAyMzBrViwgVFItMzA4DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGYxMFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgXGxvY2hcYWYxMFxkYmNoXGFmMFxoaWNoXGYxMCBcJ2E3XHRhYn1UaHJlZSAoMykgQnVzIFN1cHBvcnRzLCA0XCc5NCBJUFMgQWx1bWludW0gQnVzIHRvIDVcJzk0IEJvbHQgQ2lyY2xlDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGYxMFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgXGxvY2hcYWYxMFxkYmNoXGFmMFxoaWNoXGYxMCBcJ2E3XHRhYn1UaHJlZSAoMykgV2VsZGVkIFRlcm1pbmFsIEFkYXB0b3JzLCAyLTEyNzIga2NtaWwgQUFDIHRvIE5FTUEgNC1Ib2xlIFBhZA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmMTBcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmMTBcZGJjaFxhZjBcaGljaFxmMTAgXCdhN1x0YWJ9VGhpcnR5ICgzMCkgRmVldCBvZiAxMjcyIGtjbWlsIEFBQyAoTmFyY2lzc3VzKSBjb25kdWN0b3INClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifX1ccGFyZCBcbHRycGFyDQpcczZccWwgXGZpLTM2MFxsaTEwODBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzNFxpbHZsMVxvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDE0MDc5NjUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCANClRoaXJ0ZWVuICgxMykgMjMwa1YsIFNpbmdsZSBQaGFzZSBMb3cgQnVzIFN1cHBvcnRzLCB3aGljaCBpbmNsdWRlczoNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZjEwXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcbG9jaFxhZjEwXGRiY2hcYWYwXGhpY2hcZjEwIFwnYTdcdGFifX1ccGFyZCBcbHRycGFyDQpcczZccWwgXGZpLTM2MFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzNFxpbHZsMlxvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDE0MDc5NjUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBTdHJ1Y3R1cmFsIFN0ZWVsIGFuZCBBc3NvY2lhdGVkIGhhcmR3YXJlDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGYxMFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgXGxvY2hcYWYxMFxkYmNoXGFmMFxoaWNoXGYxMCBcJ2E3XHRhYn1TdHJ1Y3R1cmUgZ3JvdW5kaW5nIGNvbmR1Y3RvciBhbmQgYXNzb2NpYXRlZCBoYXJkd2FyZQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmMTBcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmMTBcZGJjaFxhZjBcaGljaFxmMTAgXCdhN1x0YWJ9VGhpcnRlZW4gKDEzKSBTdGF0aW9uIFBvc3QgSW5zdWxhdG9ycywgMjMwa1YsIFRSLTMwOA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmMTBcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmMTBcZGJjaFxhZjBcaGljaFxmMTAgXCdhN1x0YWJ9VGhpcnRlZW4gKDEzKSBCdXMgU3VwcG9ydHMsIDRcJzk0IElQUyBBbHVtaW51bSBCdXMgdG8gNVwnOTQgQm9sdCBDaXJjbGUNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifX1ccGFyZCBcbHRycGFyDQpcczZccWwgXGZpLTM2MFxsaTEwODBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzNFxpbHZsMVxvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDE0MDc5NjUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCANClNpeCAoNikgMjMwa1YsIFNpbmdsZSBQaGFzZSBIaWdoIEJ1cyBTdXBwb3J0cywgd2hpY2ggaW5jbHVkZXM6DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGYxMFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgXGxvY2hcYWYxMFxkYmNoXGFmMFxoaWNoXGYxMCBcJ2E3XHRhYn19XHBhcmQgXGx0cnBhcg0KXHM2XHFsIFxmaS0zNjBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczRcaWx2bDJcb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgU3RydWN0dXJhbCBTdGVlbCBhbmQgQXNzb2NpYXRlZCBoYXJkd2FyZQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmMTBcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmMTBcZGJjaFxhZjBcaGljaFxmMTAgXCdhN1x0YWJ9U3RydWN0dXJlIGdyb3VuZGluZyBjb25kdWN0b3IgYW5kIGFzc29jaWF0ZWQgaGFyZHdhcmUNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZjEwXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcbG9jaFxhZjEwXGRiY2hcYWYwXGhpY2hcZjEwIFwnYTdcdGFifVNpeCAoNikgU3RhdGlvbiBQb3N0IEluc3VsYXRvcnMsIDIzMGtWLCBUUi0zMDgNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZjEwXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcbG9jaFxhZjEwXGRiY2hcYWYwXGhpY2hcZjEwIFwnYTdcdGFifVNpeCAoNikgQnVzIFN1cHBvcnRzLCA0XCc5NCBJUFMgQWx1bWludW0gQnVzIHRvIDVcJzk0IEJvbHQgQ2lyY2xlDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn19XHBhcmQgXGx0cnBhcg0KXHM2XHFsIFxmaS0zNjBcbGkxMDgwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczRcaWx2bDFcb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjEwODBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgDQpGb3VyICg0KSAyMzBrViwgVGhyZWUgUGhhc2UgSGlnaCBCdXMgU3VwcG9ydCwgd2hpY2ggaW5jbHVkZXM6DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGYxMFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgXGxvY2hcYWYxMFxkYmNoXGFmMFxoaWNoXGYxMCBcJ2E3XHRhYn19XHBhcmQgXGx0cnBhcg0KXHM2XHFsIFxmaS0zNjBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczRcaWx2bDJcb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgU3RydWN0dXJhbCBTdGVlbCBhbmQgQXNzb2NpYXRlZCBoYXJkd2FyZQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmMTBcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmMTBcZGJjaFxhZjBcaGljaFxmMTAgXCdhN1x0YWJ9U3RydWN0dXJlIGdyb3VuZGluZyBjb25kdWN0b3IgYW5kIGFzc29jaWF0ZWQgaGFyZHdhcmUNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZjEwXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcbG9jaFxhZjEwXGRiY2hcYWYwXGhpY2hcZjEwIFwnYTdcdGFifVR3ZWx2ZSAoMTIpIFN0YXRpb24gUG9zdCBJbnN1bGF0b3JzLCAyMzBrViwgVFItMzA4DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGYxMFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgXGxvY2hcYWYxMFxkYmNoXGFmMFxoaWNoXGYxMCBcJ2E3XHRhYn1Ud2VsdmUgKDEyKSBCdXMgU3VwcG9ydHMsIDRcJzk0IElQUyBBbHVtaW51bSBCdXMgdG8gNVwnOTQgQm9sdCBDaXJjbGUNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifX1ccGFyZCBcbHRycGFyDQpcczZccWwgXGZpLTM2MFxsaTEwODBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzNFxpbHZsMVxvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDE0MDc5NjUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCANClRocmVlICgzKSAyMzBrViwgVGhyZWUgUGhhc2UgTG93IEJ1cyBTdXBwb3J0LCB3aGljaCBpbmNsdWRlczoNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZjEwXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcbG9jaFxhZjEwXGRiY2hcYWYwXGhpY2hcZjEwIFwnYTdcdGFifX1ccGFyZCBcbHRycGFyDQpcczZccWwgXGZpLTM2MFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzNFxpbHZsMlxvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDE0MDc5NjUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBTdHJ1Y3R1cmFsIFN0ZWVsIGFuZCBBc3NvY2lhdGVkIGhhcmR3YXJlDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGYxMFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgXGxvY2hcYWYxMFxkYmNoXGFmMFxoaWNoXGYxMCBcJ2E3XHRhYn1TdHJ1Y3R1cmUgZ3JvdW5kaW5nIGNvbmR1Y3RvciBhbmQgYXNzb2NpYXRlZCBoYXJkd2FyZQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmMTBcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmMTBcZGJjaFxhZjBcaGljaFxmMTAgXCdhN1x0YWJ9TmluZSAoOSkgU3RhdGlvbiBQb3N0IEluc3VsYXRvcnMsIDIzMGtWLCBUUi0zMDgNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZjEwXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcbG9jaFxhZjEwXGRiY2hcYWYwXGhpY2hcZjEwIFwnYTdcdGFifU5pbmUgKDkpIEJ1cyBTdXBwb3J0cywgNFwnOTQgSVBTIEFsdW1pbnVtIEJ1cyB0byA1XCc5NCBCb2x0IENpcmNsZQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmMTBcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmMTBcZGJjaFxhZjBcaGljaFxmMTAgXCdhN1x0YWJ9TmluZSAoOSkgV2VsZGVkIFRlcm1pbmFsIEFkYXB0b3JzLCAyLTEyNzIga2NtaWwgQUFDIHRvIE5FTUEgNC1Ib2xlIFBhZA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmMTBcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmMTBcZGJjaFxhZjBcaGljaFxmMTAgXCdhN1x0YWJ9TmluZXR5ICg5MCkgRmVldCBvZiAxMjcyIGtjbWlsIEFBQyAoTmFyY2lzc3VzKSBjb25kdWN0b3INClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifX1ccGFyZCBcbHRycGFyDQpcczZccWwgXGZpLTM2MFxsaTEwODBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzNFxpbHZsMVxvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDE0MDc5NjUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCANCk5pbmUgKDkpIDIzMGtWLCBBbHVtaW51bSBBLUZyYW1lcywgd2hpY2ggaW5jbHVkZXM6DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGYxMFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgXGxvY2hcYWYxMFxkYmNoXGFmMFxoaWNoXGYxMCBcJ2E3XHRhYn19XHBhcmQgXGx0cnBhcg0KXHM2XHFsIFxmaS0zNjBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczRcaWx2bDJcb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgRWlnaHRlZW4gKDE4KSBUZWUgQ29ubmVjdG9yLCA0XCc5NCBJUFMgTWFpbiB0byAzDQpcJzk0IElQUyBUYXAsIDE1XCdiMA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmMTBcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmMTBcZGJjaFxhZjBcaGljaFxmMTAgXCdhN1x0YWJ9TmluZSAoOSkgVGVlIENvbm5lY3RvciwgNFwnOTQgSVBTIE1haW4gdG8gMi0zXCc5NCBJUFMgVGFwcywgMTVcJ2IwDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGYxMFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgXGxvY2hcYWYxMFxkYmNoXGFmMFxoaWNoXGYxMCBcJ2E3XHRhYn1Ud28gSHVuZHJlZCBUZW4gKDIxMCkgRmVldCBvZiAzXCc5NCBJUFMgQWx1bWludW0gQnVzLCA2MDYzLVQ2DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn19XHBhcmQgXGx0cnBhcg0KXHM2XHFsIFxmaS0zNjBcbGkxMDgwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczRcaWx2bDFcb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjEwODBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgRWlnaHQgSHVuZHJlZCBGaWZ0eSAoODUwKSBGZWV0IG9mIDRcJzk0DQogSVBTIEFsdW1pbnVtIEJ1cywgNjA2My1UNg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9RWlnaHQgSHVuZHJlZCBGaWZ0eSAoODUwKSBGZWV0IG9mIDc5NSBrY21pbCBBQ1NSIChEcmFrZSkgQ29uZHVjdG9yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkNjc2Mzk5NyANCg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkNjc2Mzk5NyBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZjNcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmM1xkYmNoXGFmMFxoaWNoXGYzIFwnYjdcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczZccWwgXGZpLTM2MFxsaTcyMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM0XG91dGxpbmVsZXZlbDVcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgQWJvdmUgYW5kIEJlbG93IEdyb3VuZCBSYWNld2F5cyBpbmNsdWRpbmcgdGhlIGZvbGxvd2luZyBtYXRlcmlhbHMNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifX1ccGFyZCBcbHRycGFyDQpcczZccWwgXGZpLTM2MFxsaTEwODBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzNFxpbHZsMVxvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDE0MDc5NjUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCANCkNvbmR1aXRzLCBmaXR0aW5ncywgYW5kIGNvbm5lY3RvcnMgY29ubmVjdGluZyBzaGFyZWQgZmFjaWxpdHkgZXF1aXBtZW50IG9yIGFwcGFyYXR1cyB0byBvdGhlciBTdWJzdGF0aW9uIGNvbXBvbmVudHMgbG9jYXRlZCB3aXRoaW4gdGhlIFN1YnN0YXRpb24NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifUNhYmxlIFRyZW5jaCwgVHJlbmNoIENvdmVycywgVHJlbmNoIEhhbmdlcnMsIGFuZCBUcmVuY2ggR3JvdW5kaW5nIE1hdGVyaWFscw0KXHBhciB9XHBhcmQgXGx0cnBhclxzNlxxaiBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDY3NjM5OTcge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZjNcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmM1xkYmNoXGFmMFxoaWNoXGYzIFwnYjdcdGFifX1ccGFyZCBcbHRycGFyDQpcczZccWwgXGZpLTM2MFxsaTcyMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM0XG91dGxpbmVsZXZlbDVcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgU3Vic3RhdGlvbiBHcm91bmQgR3JpZCBpbmNsdWRpbmcgdGhlIGZvbGxvd2luZyBtYXRlcmlhbHMNCg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9fVxwYXJkIFxsdHJwYXINClxzNlxxbCBcZmktMzYwXGxpMTA4MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM0XGlsdmwxXG91dGxpbmVsZXZlbDVcYWRqdXN0cmlnaHRccmluMFxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMTQwNzk2NSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIA0KVHdlbnR5IFRocmVlIFRob3VzYW5kICgyMywwMDApIEZlZXQgb2YgIzQvMCBrY21pbCAxOSBTdHJhbmQsIEJhcmUgQ29wcGVyIA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9RXhvdGhlcm1pYyBDcm9zcyBjb25uZWN0aW9ucyB+IGluY2x1ZGluZyBtb2xkcywgc2hvdHMsIGFuZCBhY2Nlc3Nvcmllcw0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9RXhvdGhlcm1pYyBUZWUgY29ubmVjdGlvbnMgfiBpbmNsdWRpbmcgbW9sZHMsIHNob3RzLCBhbmQgYWNjZXNzb3JpZXMNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifUV4b3RoZXJtaWMgTHVnIGNvbm5lY3Rpb25zIH4gaW5jbHVkaW5nIG1vbGRzLCBzaG90cywgYW5kIGFjY2Vzc29yaWVzDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDY3NjM5OTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDE0NTIwMTYgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM1MyBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxrZXJuaW5nMjRcbG9jaFxhZjNcaGljaFxhZjNcZGJjaFxhZjM3XGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkMTQ1MjAxNiBcbG9jaFxhZjNcZGJjaFxhZjM3XGhpY2hcZjMgXCdiN1x0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzNTNccWogXGZpLTM2MFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM0XGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMTQwNzk2NVxjb250ZXh0dWFsc3BhY2UgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNca2VybmluZzI0XGxvY2hcYWYwXGhpY2hcYWYwXGRiY2hcYWYzN1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQxNDUyMDE2IFxoaWNoXGFmMFxkYmNoXGFmMzdcbG9jaFxmMCANClN1YnN0YXRpb24gTGlnaHRpbmcgYW5kIExpZ2h0bmluZyBQcm90ZWN0aW9uIGluY2x1ZGluZyB0aGUgZm9sbG93aW5nIG1hdGVyaWFscw0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNTMgXHJ0bGNoXGZjczEgXGFmMiBcbHRyY2hcZmNzMCBca2VybmluZzI0XGxvY2hcYWYyXGhpY2hcYWYyXGRiY2hcYWYzN1xpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDE0NTIwMTYgXGhpY2hcYWYyXGRiY2hcYWYzN1xsb2NoXGYyIG9cdGFifX1ccGFyZCBcbHRycGFyDQpcczUzXHFqIFxmaS0zNjBcbGkxMDgwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczRcaWx2bDFcYWRqdXN0cmlnaHRccmluMFxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMTQwNzk2NVxjb250ZXh0dWFsc3BhY2Uge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkMTQ1MjAxNiBcaGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgDQpFaWdodCAoOCkgU3RhdGljIE1hc3RzLCA5MFxoaWNoXGYwIFxycXVvdGUgXGxvY2hcZjAgIFRhbGwgd2l0aCBwcm92aXNpb24gZm9yIHlhcmQgbGlnaHRpbmcNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczUzIFxydGxjaFxmY3MxIFxhZjIgXGx0cmNoXGZjczAgXGtlcm5pbmcyNFxsb2NoXGFmMlxoaWNoXGFmMlxkYmNoXGFmMzdcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQxNDUyMDE2IFxoaWNoXGFmMlxkYmNoXGFmMzdcbG9jaFxmMiBvXHRhYn1caGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgRmlmdGVlbiAoMTUpIDQwMFcsIEhQUyBGbG9vZCBMaWdodHMNClxwYXIgfVxwYXJkIFxsdHJwYXJcczUzXHFsIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDY3NjM5OTdcY29udGV4dHVhbHNwYWNlIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDE0NTIwMTYgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM1MyBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxrZXJuaW5nMjRcbG9jaFxhZjNcaGljaFxhZjNcZGJjaFxhZjM3XGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkMTQ1MjAxNiBcbG9jaFxhZjNcZGJjaFxhZjM3XGhpY2hcZjMgXCdiN1x0YWJ9fVxwYXJkIFxsdHJwYXINClxzNTNccWogXGZpLTM2MFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM0XGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMTQwNzk2NVxjb250ZXh0dWFsc3BhY2Uge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkMTQ1MjAxNiBcaGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgDQpTdWJzdGF0aW9uIEZlbmNpbmcgaW5jbHVkaW5nIHRoZSBmb2xsb3dpbmcgbWF0XGhpY2hcYWYwXGRiY2hcYWYzN1xsb2NoXGYwIGVyaWFscw0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNTMgXHJ0bGNoXGZjczEgXGFmMiBcbHRyY2hcZmNzMCBca2VybmluZzI0XGxvY2hcYWYyXGhpY2hcYWYyXGRiY2hcYWYzN1xpbnNyc2lkNjc2Mzk5N1xjaGFycnNpZDE0NTIwMTYgXGhpY2hcYWYyXGRiY2hcYWYzN1xsb2NoXGYyIG9cdGFifX1ccGFyZCBcbHRycGFyDQpcczUzXHFqIFxmaS0zNjBcbGkxMDgwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczRcaWx2bDFcYWRqdXN0cmlnaHRccmluMFxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMTQwNzk2NVxjb250ZXh0dWFsc3BhY2Uge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkMTQ1MjAxNiBcaGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgDQpGaWZ0ZWVuIEh1bmRyZWQgKDE1MDApIEZlZXQgb2YgZmVuY2UsIDhcaGljaFxmMCBccnF1b3RlIFxsb2NoXGYwICB0YWxsLCA3XGhpY2hcZjAgXHJxdW90ZSBcbG9jaFxmMCAgbWVzaCB3aXRoIHRocmVlIHN0cmFuZHMgb2YgYmFyYmVkIHdpcmUNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczUzIFxydGxjaFxmY3MxIFxhZjIgXGx0cmNoXGZjczAgXGtlcm5pbmcyNFxsb2NoXGFmMlxoaWNoXGFmMlxkYmNoXGFmMzdcaW5zcnNpZDY3NjM5OTdcY2hhcnJzaWQxNDUyMDE2IFxoaWNoXGFmMlxkYmNoXGFmMzdcbG9jaFxmMiBvXHRhYn1caGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgRmVuY2UgcG9zdHMsIGdhdGVzLCBoYW5nZXJzLCBhbmQgZ3JvdW5kaW5nIG1hdGVyaWFscw0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTFccWMgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkNjc2Mzk5NyBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkOTM3MjI0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkNjc2Mzk5NyBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ2NzYzOTk3IFxwYWdlIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTFccWMgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkNjc2Mzk5NyBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGJcaW5zcnNpZDY3NjM5OTcgRVhISUJJVCBCLTINClxwYXIgDQpccGFyIFRSQU5TTUlTU0lPTiBMSU5FIFNIQVJFRCBGQUNJTElUSUVTDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY3NjM5OTcgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFqIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDEzMTc2NzEzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZGJjaFxhZjM3XGluc3JzaWQxMDAzOTkxOVxjaGFycnNpZDExNDE3MDMzIFxoaWNoXGFmMFxkYmNoXGFmMzdcbG9jaFxmMCANCjMuOTktbWlsZSAyMjBrViBnZW5lcmF0aW9uIHRpZS1saW5lLCBvcHRpY2FsIGdyb3VuZCB3aXJlIG9uIHRoZSBnZW5lcmF0aW9uIHRpZS1saW5lIGZvciB0aGUgcHJpbWFyeSB0ZWxlY29tbXVuaWNhdGlvbnMgcGF0aCwgc2luZ2xlLW1vZGUgZmliZXIgb3B0aWMgY2FibGUgZm9yIHRoZSBkaXZlcnNlIHRlbGVjb21tdW5pY2F0aW9ucyBwYXRoLCBhcHB1cnRlbmFudCBzdHJ1Y3R1cmVzLCBhbmQgZmFjaWxpdGllcywgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGRiY2hcYWYzN1xpbnNyc2lkMTAwMzk5MTkgXGhpY2hcYWYwXGRiY2hcYWYzN1xsb2NoXGYwIGluY2x1ZGluZyB0aGUgZm9sbG93XGhpY2hcYWYwXGRiY2hcYWYzN1xsb2NoXGYwIGluZzoNClxwYXIgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM1MyBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxrZXJuaW5nMjRcbG9jaFxhZjNcaGljaFxhZjNcZGJjaFxhZjM3XGluc3JzaWQxMDAzOTkxOSBcbG9jaFxhZjNcZGJjaFxhZjM3XGhpY2hcZjMgXCdiN1x0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzNTNccWogXGZpLTM2MFxsaTcyMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM4XGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMTQwNzk2NVxjb250ZXh0dWFsc3BhY2UgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNca2VybmluZzI0XGxvY2hcYWYwXGhpY2hcYWYwXGRiY2hcYWYzN1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwMDM5OTE5IFxoaWNoXGFmMFxkYmNoXGFmMzdcbG9jaFxmMCBGb3J0eSBUd28gKDQyKSB0cmFuc21pc3Npb24gc3RydWN0dXJlcyBpbmNsdWRpbmcgdGhlIGZvbGxvd2luZyBtYXRlcmlhbHM6DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM1MyBccnRsY2hcZmNzMSBcYWYyIFxsdHJjaFxmY3MwIFxrZXJuaW5nMjRcbG9jaFxhZjJcaGljaFxhZjJcZGJjaFxhZjM3XGluc3JzaWQxMDAzOTkxOSBcaGljaFxhZjJcZGJjaFxhZjM3XGxvY2hcZjIgb1x0YWJ9fVxwYXJkIFxsdHJwYXINClxzNTNccWogXGZpLTM2MFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxpbHZsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxNDA3OTY1XGNvbnRleHR1YWxzcGFjZSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwMDM5OTE5IFxoaWNoXGFmMFxkYmNoXGFmMzdcbG9jaFxmMCBGb3J0eSBUd28gKDQyKSB0dWJ1bGFyIHN0ZWVsIHBvbGVzDQoNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczUzIFxydGxjaFxmY3MxIFxhZjIgXGx0cmNoXGZjczAgXGtlcm5pbmcyNFxsb2NoXGFmMlxoaWNoXGFmMlxkYmNoXGFmMzdcaW5zcnNpZDEwMDM5OTE5IFxoaWNoXGFmMlxkYmNoXGFmMzdcbG9jaFxmMiBvXHRhYn1caGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgT25lIEh1bmRyZWQgVHdlbnR5ICgxMjApIDIzMGtWIDMwSyBJbnN1bGF0b3JzDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM1MyBccnRsY2hcZmNzMSBcYWYyIFxsdHJjaFxmY3MwIFxrZXJuaW5nMjRcbG9jaFxhZjJcaGljaFxhZjJcZGJjaFxhZjM3XGluc3JzaWQxMDAzOTkxOSBcaGljaFxhZjJcZGJjaFxhZjM3XGxvY2hcZjIgb1x0YWJ9XGhpY2hcYWYwXGRiY2hcYWYzN1xsb2NoXGYwIFxoaWNoXGYwIA0KT25lIEh1bmRyZWQgVHdlbnR5ICgxMjApIFN1c3BlbnNpb24gSGFyZHdhcmUgQXNzZW1ibGllcyBmb3IgNzk1IEtDTUlMIEFDU1IgXCc5M1xsb2NoXGYwIFxoaWNoXGYwIERyYWtlXCc5NA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNTMgXHJ0bGNoXGZjczEgXGFmMiBcbHRyY2hcZmNzMCBca2VybmluZzI0XGxvY2hcYWYyXGhpY2hcYWYyXGRiY2hcYWYzN1xpbnNyc2lkMTAwMzk5MTkgXGhpY2hcYWYyXGRiY2hcYWYzN1xsb2NoXGYyIG9cdGFifVxoaWNoXGFmMFxkYmNoXGFmMzdcbG9jaFxmMCBGb3J0eSAoNDApIDJcaGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgMzBrViA1MEsgSW5zdWxhdG9ycw0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNTMgXHJ0bGNoXGZjczEgXGFmMiBcbHRyY2hcZmNzMCBca2VybmluZzI0XGxvY2hcYWYyXGhpY2hcYWYyXGRiY2hcYWYzN1xpbnNyc2lkMTAwMzk5MTkgXGhpY2hcYWYyXGRiY2hcYWYzN1xsb2NoXGYyIG9cdGFifVxoaWNoXGFmMFxkYmNoXGFmMzdcbG9jaFxmMCBcaGljaFxmMCBGb3J0eSAoNDApIERlYWQgRW5kIEhhcmR3YXJlIEFzc2VtYmxpZXMgZm9yIDc5NSBLQ01JTCBBQ1NSIFwnOTMNClxsb2NoXGYwIFxoaWNoXGYwIERyYWtlXCc5NA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNTMgXHJ0bGNoXGZjczEgXGFmMiBcbHRyY2hcZmNzMCBca2VybmluZzI0XGxvY2hcYWYyXGhpY2hcYWYyXGRiY2hcYWYzN1xpbnNyc2lkMTAwMzk5MTkgXGhpY2hcYWYyXGRiY2hcYWYzN1xsb2NoXGYyIG9cdGFifVxoaWNoXGFmMFxkYmNoXGFmMzdcbG9jaFxmMCBGb3J0eSBGaXZlICg0NSkgT1BHVyBIYXJkd2FyZSBBc3NlbWJsaWVzDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM1MyBccnRsY2hcZmNzMSBcYWYyIFxsdHJjaFxmY3MwIFxrZXJuaW5nMjRcbG9jaFxhZjJcaGljaFxhZjJcZGJjaFxhZjM3XGluc3JzaWQxMDAzOTkxOSBcaGljaFxhZjJcZGJjaFxhZjM3XGxvY2hcZjIgb1x0YWJ9XGhpY2hcYWYwXGRiY2hcYWYzN1xsb2NoXGYwIFxoaWNoXGYwIEZvdXIgKDQpIERlYWQgRW5kIEhhcmR3YXJlIEFzc2VtYmxpZXMgZm9yIDMvOFwnOTRcbG9jaFxmMCANCiBTaGllbGQgV2lyZQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNTMgXHJ0bGNoXGZjczEgXGFmMiBcbHRyY2hcZmNzMCBca2VybmluZzI0XGxvY2hcYWYyXGhpY2hcYWYyXGRiY2hcYWYzN1xpbnNyc2lkMTAwMzk5MTlcY2hhcnJzaWQxMTIwNzgwNSBcaGljaFxhZjJcZGJjaFxhZjM3XGxvY2hcZjIgb1x0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTAwMzk5MTlcY2hhcnJzaWQxMTIwNzgwNSANClxoaWNoXGFmMFxkYmNoXGFmMzdcbG9jaFxmMCBTdHJ1Y3R1cmUgZ3JvdW5kaW5nIHJvZHMgYW5kIGFzc29jaWF0ZWQgaGFyZHdhcmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDAzOTkxOSANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczUzIFxydGxjaFxmY3MxIFxhZjIgXGx0cmNoXGZjczAgXGtlcm5pbmcyNFxsb2NoXGFmMlxoaWNoXGFmMlxkYmNoXGFmMzdcaW5zcnNpZDEwMDM5OTE5IFxoaWNoXGFmMlxkYmNoXGFmMzdcbG9jaFxmMiBvXHRhYn1caGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgU3RydWN0dXJlIHNpZ25hZ2UNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczUzIFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGtlcm5pbmcyNFxsb2NoXGFmM1xoaWNoXGFmM1xkYmNoXGFmMzdcaW5zcnNpZDEwMDM5OTE5IFxsb2NoXGFmM1xkYmNoXGFmMzdcaGljaFxmMyBcJ2I3XHRhYn19XHBhcmQgXGx0cnBhcg0KXHM1M1xxaiBcZmktMzYwXGxpNzIwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQxNDA3OTY1XGNvbnRleHR1YWxzcGFjZSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwMDM5OTE5IFxoaWNoXGFmMFxkYmNoXGFmMzdcbG9jaFxmMCBTZVxoaWNoXGFmMFxkYmNoXGFmMzdcbG9jaFxmMCBcaGljaFxmMCANCnZlbnR5IFRob3VzYW5kIFR3byBIdW5kcmVkICg3MCwyMDApIEZlZXQgb2YgNzk1IEtDTUlMIEFDU1IgXCc5M1xsb2NoXGYwIFxoaWNoXGYwIERyYWtlXCc5NFxsb2NoXGYwICBDb25kdWN0b3INClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczUzIFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGtlcm5pbmcyNFxsb2NoXGFmM1xoaWNoXGFmM1xkYmNoXGFmMzdcaW5zcnNpZDEwMDM5OTE5IFxsb2NoXGFmM1xkYmNoXGFmMzdcaGljaFxmMyBcJ2I3XHRhYn1caGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgDQpUd2VudHkgVGhyZWUgVGhvdXNhbmQgKDIzLDAwMCkgRmVldCBvZiA0OCBGaWJlciwgU2luZ2xlIE1vZGUgT1BHVywgRE5PIDYyMTENClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczUzIFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGtlcm5pbmcyNFxsb2NoXGFmM1xoaWNoXGFmM1xkYmNoXGFmMzdcaW5zcnNpZDEwMDM5OTE5IFxsb2NoXGFmM1xkYmNoXGFmMzdcaGljaFxmMyBcJ2I3XHRhYn1caGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgXGhpY2hcZjAgVGhyZWUgKDMpIE9QR1cgXCc5M1xsb2NoXGYwIFxoaWNoXGYwIENveW90ZVwnOTRcbG9jaFxmMCANCiBTcGxpY2VzIGluY2x1ZGluZyBzcGxpY2UgY2FzZSwgc3BsaWNlcyBhbmQgbW91bnRpbmcgaGFyZHdhcmUuIA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNTMgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBca2VybmluZzI0XGxvY2hcYWYzXGhpY2hcYWYzXGRiY2hcYWYzN1xpbnNyc2lkMTAwMzk5MTkgXGxvY2hcYWYzXGRiY2hcYWYzN1xoaWNoXGYzIFwnYjdcdGFifVxoaWNoXGFmMFxkYmNoXGFmMzdcbG9jaFxmMCBPbmUgVGhvdXNhbmQgRm91XGhpY2hcYWYwXGRiY2hcYWYzN1xsb2NoXGYwIA0KciBIdW5kcmVkIGFuZCBGaWZ0eSAoMSw0NTApIEJpcmQgRmxpZ2h0IERpdmVydGVycw0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNTMgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBca2VybmluZzI0XGxvY2hcYWYzXGhpY2hcYWYzXGRiY2hcYWYzN1xpbnNyc2lkMTAwMzk5MTkgXGxvY2hcYWYzXGRiY2hcYWYzN1xoaWNoXGYzIFwnYjdcdGFifVxoaWNoXGFmMFxkYmNoXGFmMzdcbG9jaFxmMCBcaGljaFxmMCBUd28gSHVuZHJlZCAoMjAwKSBGZWV0IG9mIDMvOFwnOTRcbG9jaFxmMCANCiBIUyA3LVN0cmFuZCBTaGllbGQgV2lyZQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNTMgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBca2VybmluZzI0XGxvY2hcYWYzXGhpY2hcYWYzXGRiY2hcYWYzN1xpbnNyc2lkMTAwMzk5MTkgXGxvY2hcYWYzXGRiY2hcYWYzN1xoaWNoXGYzIFwnYjdcdGFifVxoaWNoXGFmMFxkYmNoXGFmMzdcbG9jaFxmMCANClR3ZW50eSBGaXZlIFRob3VzYW5kIEZpdmUgSHVuZHJlZCAoMjUsNTAwKSBGZWV0IG9mIEFEU1MgRmliZXIgT3B0aWMgQ2FibGUNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczUzIFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGtlcm5pbmcyNFxsb2NoXGFmM1xoaWNoXGFmM1xkYmNoXGFmMzdcaW5zcnNpZDEwMDM5OTE5IFxsb2NoXGFmM1xkYmNoXGFmMzdcaGljaFxmMyBcJ2I3XHRhYn1caGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgXGhpY2hcZjAgVHdlbnR5IFR3byBUaG91c2FuZCAoMjIsMDAwKSBGZWV0IG9mIDEgXCdiY1wnOTRcbG9jaFxmMCANCiBpbm5lciBkdWN0DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1MVxxaiBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxMzE3NjcxMyBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ2NzYzOTk3XGNoYXJyc2lkMTI2NDIwNyANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJccWogXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkNTE5Mzk2NCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1MTkzOTY0XGNoYXJyc2lkOTQ0Njc1IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMjBccWogXGZpNzA1XGxpNzIwXHJpMFxzYTEyMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTdccWogXGZpNzQxXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDIxNzY3MzYgXHNlY3QgfVxzZWN0ZCBcbHRyc2VjdFxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVxzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xmb290ZXJyIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxzMjJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHRxY1x0eDQ2ODBcdHFyXHR4OTM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCANClxydGxjaFxmY3MxIFxhZjBcYWZzMTZcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczE2XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxmczI0XGluc3JzaWQzNDM4MDc4IEMtfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgDQpcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxjczI0XGZzMjRcaW5zcnNpZDM0MzgwNzggIFBBR0UgfX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGNzMjRcZnMyNFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDczNTc1MDIgMX19fVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgDQpcZnMyNFxpbnNyc2lkMzQzODA3OCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjBcYWZzMTYgXGx0cmNoXGZjczAgDQpcZnMxNlxpbnNyc2lkMzQzODA3OCANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkNzg2NTUzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI5MTMxNDMgDQp7XHNocHtcKlxzaHBpbnN0XHNocGxlZnQwXHNocHRvcDBcc2hwcmlnaHQ0MDMyXHNocGJvdHRvbTQwM1xzaHBmaGRyMVxzaHBieG1hcmdpblxzaHBieGlnbm9yZVxzaHBieXBhcmFcc2hwYnlpZ25vcmVcc2hwd3IzXHNocHdyazBcc2hwZmJsd3R4dDBcc2hwejZcc2hwbGlkMjIzMntcc3B7XHNuIHNoYXBlVHlwZX17XHN2IDIwMn19e1xzcHtcc24gZkZsaXBIfXtcc3YgMH19e1xzcHtcc24gZkZsaXBWfXtcc3YgMH19DQp7XHNwe1xzbiBsVHhpZH17XHN2IDQ1ODc1Mn19e1xzcHtcc24gZHhUZXh0TGVmdH17XHN2IDB9fXtcc3B7XHNuIGR5VGV4dFRvcH17XHN2IDB9fXtcc3B7XHNuIGR4VGV4dFJpZ2h0fXtcc3YgMH19e1xzcHtcc24gZHlUZXh0Qm90dG9tfXtcc3YgMH19e1xzcHtcc24gaHNwTmV4dH17XHN2IDIyMzJ9fXtcc3B7XHNuIGZGaXRTaGFwZVRvVGV4dH17XHN2IDF9fXtcc3B7XHNuIGZGaWxsZWR9e1xzdiAwfX17XHNwe1xzbiBmTGluZX17XHN2IDB9fQ0Ke1xzcHtcc24gd3pOYW1lfXtcc3YgenptcFRyYWlsZXJfMTA3OF83fX17XHNwe1xzbiBwb3NyZWxofXtcc3YgMH19e1xzcHtcc24gZGhndH17XHN2IDI1MTY1NzIxNn19e1xzcHtcc24gZlBzZXVkb0lubGluZX17XHN2IDB9fXtcc3B7XHNuIGZMYXlvdXRJbkNlbGx9e1xzdiAxfX17XHNocHR4dCBcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJcczQ5XHFsIFxsaTBccmkwXHNsLTIwMFxzbG11bHQwDQpcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggT0hTVVNBOjc1ODI5NjY3Mi4xMCANClxwYXIgDQpccGFyIH19fXtcc2hwcnNsdHtcKlxkb1xkb2J4bWFyZ2luXGRvYnlwYXJhXGRvZGhndDgxOThcZHB0eGJ4XGRwdHhscnRie1xkcHR4Ynh0ZXh0XGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHM0OVxxbCBcbGkwXHJpMFxzbC0yMDBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIyXGFsYW5nMTAyNSANClxsdHJjaFxmY3MwIFxmczE2XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IE9IU1VTQTo3NTgyOTY2NzIuMTAgDQpccGFyIA0KXHBhciB9fVxkcHgwXGRweTBcZHB4c2l6ZTQwMzJcZHB5c2l6ZTQwM1xkcGZpbGxmZ2NyMjU1XGRwZmlsbGZnY2cyNTVcZHBmaWxsZmdjYjI1NVxkcGZpbGxiZ2NyMjU1XGRwZmlsbGJnY2cyNTVcZHBmaWxsYmdjYjI1NVxkcGZpbGxwYXQwXGRwbGluZWhvbGxvd319fX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ3ODY1NTMzIA0KXHBhciB9fVxwYXJkXHBsYWluIFxsdHJwYXJcczI1XHFjIFxsaTBccmkwXHNhMzAwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhZjFcYWZzMzJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xrZXJuaW5nMjhcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgRVhISUJJVCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTk5ODYgQ317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOVxjaGFycnNpZDY1OTk4NiBJTlRFUkVTVFMgQU5EIFBST1BPUlRJT05BVEUgU0hBUkVTfXsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcYlxpbnNyc2lkNTkxODMyOSBBLlx0YWIgVW5kaXZpZGVkIE93bmVyc2hpcCBJbnRlcmVzdHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxN1xxaiBcZmk3NDFcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBUaGUgT3duZXJzaGlwIEludGVyZXN0IG9mIGVhY2ggQ28tT3duZXIgaW4gZWFjaCBTaGFyZWQgQXNzZXRzIEdyb3VwIHNoYWxsIGJlIGFzIHNldCBmb3J0aCBpbiBUYWJsZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ4NjY0MzI4IEMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBiZWxvdy4gIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjE3NjczNiANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGJcaW5zcnNpZDU5MTgzMjkgQi5cdGFiIFByb3BvcnRpb25hdGUgU2hhcmVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTdccWogXGZpNzQxXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgVGhlIFByb3BvcnRpb25hdGUgU2hhcmUgb2YgZWFjaCBDby1Pd25lciBzaGFsbCBiZSBhcyBzZXQgZm9ydGggaW4gVGFibGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkODY2NDMyOCBDIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgYmVsb3cuIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxiXGluc3JzaWQ1OTE4MzI5IEMuXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDExMzQ5NjQ1IFNoYXJlZCBBc3NldCBHcm91cHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxMTM0OTY0NVxjaGFycnNpZDk0NDY3NSBSU1QgU2hhcmVkIEZhY2lsaXRpZXMgR3JvdXAgKEFsbCBDby19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTQzMDYzNFxjaGFycnNpZDk0NDY3NSBPd25lcnMpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTEzNDk2NDVcY2hhcnJzaWQ5NDQ2NzUgDQpccGFyIFxsdHJyb3d9XHRyb3dkIFxpcm93MFxpcm93YmFuZDBcbHRycm93XHRzMTFcdHJnYXBoMTA4XHRybGVmdC0xMDhcdHJicmRydFxicmRyc1xicmRydzEwIFx0cmJyZHJsXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmJcYnJkcnNcYnJkcncxMCBcdHJicmRyclxicmRyc1xicmRydzEwIFx0cmJyZHJoXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnZcYnJkcnNcYnJkcncxMCANClx0cmZ0c1dpZHRoM1x0cndXaWR0aDYxMDFcdHJmdHNXaWR0aEIzXHRyYXV0b2ZpdDFcdHJwYWRkbDEwOFx0cnBhZGRyMTA4XHRycGFkZGZsM1x0cnBhZGRmdDNcdHJwYWRkZmIzXHRycGFkZGZyM1x0Ymxyc2lkOTQ0Njc1XHRibGxraGRycm93c1x0Ymxsa2xhc3Ryb3dcdGJsbGtoZHJjb2xzXHRibGxrbGFzdGNvbFx0YmxpbmQwXHRibGluZHR5cGUzIFxjbHZlcnRhbGJcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYg0KXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDI0NjlcY2xzaGRyYXduaWwgXGNlbGx4MjM2MVxjbHZlcnRhbGJcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxMTMzXGNsc2hkcmF3bmlsIFxjZWxseDM0OTRcY2x2ZXJ0YWxiXGNsYnJkcnRcYnJkcm5vbmUgDQpcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxMjU2XGNsc2hkcmF3bmlsIFxjZWxseDQ3NTBcY2x2ZXJ0YWxiXGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTI0M1xjbHNoZHJhd25pbCBcY2VsbHg1OTkzDQpccGFyZFxwbGFpbiBcbHRycGFyXHMxN1xxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBccGFyYXJzaWQ1OTE4MzI5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIA0KXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcYlxmczIyXGluc3JzaWQxMTM0OTY0NVxjaGFycnNpZDU5MTgzMjkgRXF1aXBtZW50IE5hbWVcY2VsbCB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGJcZnMyMlxpbnNyc2lkMTEzNDk2NDUgUlNUIEl9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGJcZnMyMlxpbnNyc2lkMTEzNDk2NDVcY2hhcnJzaWQ1OTE4MzI5IFxjZWxsIH1ccGFyZCBcbHRycGFyDQpcczE3XHFjIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMCB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcYlxmczIyXGluc3JzaWQxMTM0OTY0NSBSU1QgSX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcYlxmczIyXGluc3JzaWQxMTM0OTY0NVxjaGFycnNpZDU5MTgzMjkgSVxjZWxsIA0KfVxwYXJkIFxsdHJwYXJcczE3XHFjIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxwYXJhcnNpZDU5MTgzMjkge1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGJcZnMyMlxpbnNyc2lkMTEzNDk2NDUgUlNUIElJSX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCANClxiXGZzMjJcaW5zcnNpZDExMzQ5NjQ1XGNoYXJyc2lkNTkxODMyOSBcY2VsbCB9XHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEzNDk2NDVcY2hhcnJzaWQ1OTE4MzI5IFx0cm93ZCBcaXJvdzBcaXJvd2JhbmQwXGx0cnJvd1x0czExXHRyZ2FwaDEwOFx0cmxlZnQtMTA4XHRyYnJkcnRcYnJkcnNcYnJkcncxMCBcdHJicmRybFxicmRyc1xicmRydzEwIFx0cmJyZHJiXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnJcYnJkcnNcYnJkcncxMCBcdHJicmRyaFxicmRyc1xicmRydzEwIFx0cmJyZHJ2DQpcYnJkcnNcYnJkcncxMCBcdHJmdHNXaWR0aDNcdHJ3V2lkdGg2MTAxXHRyZnRzV2lkdGhCM1x0cmF1dG9maXQxXHRycGFkZGwxMDhcdHJwYWRkcjEwOFx0cnBhZGRmbDNcdHJwYWRkZnQzXHRycGFkZGZiM1x0cnBhZGRmcjNcdGJscnNpZDk0NDY3NVx0Ymxsa2hkcnJvd3NcdGJsbGtsYXN0cm93XHRibGxraGRyY29sc1x0Ymxsa2xhc3Rjb2xcdGJsaW5kMFx0YmxpbmR0eXBlMyBcY2x2ZXJ0YWxiXGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmwNClxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgyNDY5XGNsc2hkcmF3bmlsIFxjZWxseDIzNjFcY2x2ZXJ0YWxiXGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTEzM1xjbHNoZHJhd25pbCBcY2VsbHgzNDk0XGNsdmVydGFsYg0KXGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTI1NlxjbHNoZHJhd25pbCBcY2VsbHg0NzUwXGNsdmVydGFsYlxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIA0KXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTI0M1xjbHNoZHJhd25pbCBcY2VsbHg1OTkzXHJvdyBcbHRycm93fVx0cm93ZCBcaXJvdzFcaXJvd2JhbmQxXGx0cnJvd1x0czExXHRyZ2FwaDEwOFx0cmxlZnQtMTA4XHRyYnJkcnRcYnJkcnNcYnJkcncxMCBcdHJicmRybFxicmRyc1xicmRydzEwIFx0cmJyZHJiXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnJcYnJkcnNcYnJkcncxMCBcdHJicmRyaFxicmRyc1xicmRydzEwIFx0cmJyZHJ2DQpcYnJkcnNcYnJkcncxMCBcdHJmdHNXaWR0aDNcdHJ3V2lkdGg2MTAxXHRyZnRzV2lkdGhCM1x0cmF1dG9maXQxXHRycGFkZGwxMDhcdHJwYWRkcjEwOFx0cnBhZGRmbDNcdHJwYWRkZnQzXHRycGFkZGZiM1x0cnBhZGRmcjNcdGJscnNpZDk0NDY3NVx0Ymxsa2hkcnJvd3NcdGJsbGtsYXN0cm93XHRibGxraGRyY29sc1x0Ymxsa2xhc3Rjb2xcdGJsaW5kMFx0YmxpbmR0eXBlMyBcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmwNClxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgyNDY5XGNsc2hkcmF3bmlsIFxjZWxseDIzNjFcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTEzM1xjbHNoZHJhd25pbCBcY2VsbHgzNDk0XGNsdmVydGFsdA0KXGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTI1NlxjbHNoZHJhd25pbCBcY2VsbHg0NzUwXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIA0KXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTI0M1xjbHNoZHJhd25pbCBcY2VsbHg1OTkzXHBhcmRccGxhaW4gXGx0cnBhclxzMTdccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXHBhcmFyc2lkNTkxODMyOSBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDExMzQ5NjQ1XGNoYXJyc2lkNTkxODMyOSBQcm9qZWN0IFN1YnN0YXRpb25cY2VsbCB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDExMzQ5NjQ1IDQwJX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCANClxmczIyXGluc3JzaWQxMTM0OTY0NVxjaGFycnNpZDU5MTgzMjkgXGNlbGwgfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQxMTM0OTY0NSAxfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQxMTM0OTY0NVxjaGFycnNpZDU5MTgzMjkgMCVcY2VsbCB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDExMzQ5NjQ1IDV9ew0KXHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMTEzNDk2NDVcY2hhcnJzaWQ1OTE4MzI5IDAlXGNlbGwgfVxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMzQ5NjQ1IFx0cm93ZCBcaXJvdzFcaXJvd2JhbmQxXGx0cnJvd1x0czExXHRyZ2FwaDEwOFx0cmxlZnQtMTA4XHRyYnJkcnRcYnJkcnNcYnJkcncxMCBcdHJicmRybFxicmRyc1xicmRydzEwIFx0cmJyZHJiXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnJcYnJkcnNcYnJkcncxMCANClx0cmJyZHJoXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnZcYnJkcnNcYnJkcncxMCBcdHJmdHNXaWR0aDNcdHJ3V2lkdGg2MTAxXHRyZnRzV2lkdGhCM1x0cmF1dG9maXQxXHRycGFkZGwxMDhcdHJwYWRkcjEwOFx0cnBhZGRmbDNcdHJwYWRkZnQzXHRycGFkZGZiM1x0cnBhZGRmcjNcdGJscnNpZDk0NDY3NVx0Ymxsa2hkcnJvd3NcdGJsbGtsYXN0cm93XHRibGxraGRyY29sc1x0Ymxsa2xhc3Rjb2xcdGJsaW5kMFx0YmxpbmR0eXBlMyBcY2x2ZXJ0YWx0DQpcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgyNDY5XGNsc2hkcmF3bmlsIFxjZWxseDIzNjFcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgDQpcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxMTMzXGNsc2hkcmF3bmlsIFxjZWxseDM0OTRcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTI1NlxjbHNoZHJhd25pbCBcY2VsbHg0NzUwXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiDQpcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTI0M1xjbHNoZHJhd25pbCBcY2VsbHg1OTkzXHJvdyBcbHRycm93fVxwYXJkXHBsYWluIFxsdHJwYXJcczE3XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxwYXJhcnNpZDU5MTgzMjkgXHJ0bGNoXGZjczEgDQpcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQxMTM0OTY0NVxjaGFycnNpZDU5MTgzMjkgVHJhbnNtaXNzaW9uIExpbmVcY2VsbCB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDExMzQ5NjQ1IDQwJX17DQpccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQxMTM0OTY0NVxjaGFycnNpZDU5MTgzMjkgXGNlbGwgfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQxMTM0OTY0NSAxfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQxMTM0OTY0NVxjaGFycnNpZDU5MTgzMjkgMCVcY2VsbCB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgDQpcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMTEzNDk2NDUgNX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMTEzNDk2NDVcY2hhcnJzaWQ1OTE4MzI5IDAlXGNlbGwgfVxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wIFxydGxjaFxmY3MxIA0KXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMzQ5NjQ1IFx0cm93ZCBcaXJvdzJcaXJvd2JhbmQyXGx0cnJvd1x0czExXHRyZ2FwaDEwOFx0cmxlZnQtMTA4XHRyYnJkcnRcYnJkcnNcYnJkcncxMCBcdHJicmRybFxicmRyc1xicmRydzEwIFx0cmJyZHJiDQpcYnJkcnNcYnJkcncxMCBcdHJicmRyclxicmRyc1xicmRydzEwIFx0cmJyZHJoXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnZcYnJkcnNcYnJkcncxMCANClx0cmZ0c1dpZHRoM1x0cndXaWR0aDYxMDFcdHJmdHNXaWR0aEIzXHRyYXV0b2ZpdDFcdHJwYWRkbDEwOFx0cnBhZGRyMTA4XHRycGFkZGZsM1x0cnBhZGRmdDNcdHJwYWRkZmIzXHRycGFkZGZyM1x0Ymxyc2lkOTQ0Njc1XHRibGxraGRycm93c1x0Ymxsa2xhc3Ryb3dcdGJsbGtoZHJjb2xzXHRibGxrbGFzdGNvbFx0YmxpbmQwXHRibGluZHR5cGUzIFxjbHZlcnRhbHRcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYg0KXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDI0NjlcY2xzaGRyYXduaWwgXGNlbGx4MjM2MVxjbHZlcnRhbHRcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxMTMzXGNsc2hkcmF3bmlsIFxjZWxseDM0OTRcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgDQpcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxMjU2XGNsc2hkcmF3bmlsIFxjZWxseDQ3NTBcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTI0M1xjbHNoZHJhd25pbCBcY2VsbHg1OTkzXHJvdyANClxsdHJyb3d9XHBhcmRccGxhaW4gXGx0cnBhclxzMTdccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXHBhcmFyc2lkNTkxODMyOSBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTM0OTY0NSBGaWJlciBPcHRpYyBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQxMTM0OTY0NVxjaGFycnNpZDU5MTgzMjkgXGNlbGwgfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQxMTM0OTY0NSA0MCV9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgDQpcZnMyMlxpbnNyc2lkMTEzNDk2NDVcY2hhcnJzaWQ1OTE4MzI5IFxjZWxsIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMTEzNDk2NDUgMX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMTEzNDk2NDVcY2hhcnJzaWQ1OTE4MzI5IDAlXGNlbGwgfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQxMTM0OTY0NSA1fXsNClxydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDExMzQ5NjQ1XGNoYXJyc2lkNTkxODMyOSAwJVxjZWxsIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTM0OTY0NSBcdHJvd2QgXGlyb3czXGlyb3diYW5kM1xsdHJyb3dcdHMxMVx0cmdhcGgxMDhcdHJsZWZ0LTEwOFx0cmJyZHJ0XGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmxcYnJkcnNcYnJkcncxMCBcdHJicmRyYlxicmRyc1xicmRydzEwIFx0cmJyZHJyXGJyZHJzXGJyZHJ3MTAgDQpcdHJicmRyaFxicmRyc1xicmRydzEwIFx0cmJyZHJ2XGJyZHJzXGJyZHJ3MTAgXHRyZnRzV2lkdGgzXHRyd1dpZHRoNjEwMVx0cmZ0c1dpZHRoQjNcdHJhdXRvZml0MVx0cnBhZGRsMTA4XHRycGFkZHIxMDhcdHJwYWRkZmwzXHRycGFkZGZ0M1x0cnBhZGRmYjNcdHJwYWRkZnIzXHRibHJzaWQ5NDQ2NzVcdGJsbGtoZHJyb3dzXHRibGxrbGFzdHJvd1x0Ymxsa2hkcmNvbHNcdGJsbGtsYXN0Y29sXHRibGluZDBcdGJsaW5kdHlwZTMgXGNsdmVydGFsdA0KXGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMjQ2OVxjbHNoZHJhd25pbCBcY2VsbHgyMzYxXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIA0KXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTEzM1xjbHNoZHJhd25pbCBcY2VsbHgzNDk0XGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDEyNTZcY2xzaGRyYXduaWwgXGNlbGx4NDc1MFxjbHZlcnRhbHRcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYg0KXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDEyNDNcY2xzaGRyYXduaWwgXGNlbGx4NTk5M1xyb3cgXGx0cnJvd31ccGFyZFxwbGFpbiBcbHRycGFyXHMxN1xxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBccGFyYXJzaWQ1OTE4MzI5IFxydGxjaFxmY3MxIA0KXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMzQ5NjQ1IFJvYWRzIFtpbiBTZWN0aW9ucyB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDk0NDkwNTkgOSwgMTAsIDExLCAxNSBhbmQgMTZ9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDExMzQ5NjQ1IF1cY2VsbCB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDExMzQ5NjQ1IDQwJVxjZWxsIDF9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDExMzQ5NjQ1XGNoYXJyc2lkNTkxODMyOSAwJX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMTEzNDk2NDUgXGNlbGwgNX17DQpccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQxMTM0OTY0NVxjaGFycnNpZDU5MTgzMjkgMCV9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDExMzQ5NjQ1IFxjZWxsIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMCANClxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTM0OTY0NSBcdHJvd2QgXGlyb3c0XGlyb3diYW5kNFxsdHJyb3dcdHMxMVx0cmdhcGgxMDhcdHJsZWZ0LTEwOFx0cmJyZHJ0XGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmxcYnJkcnNcYnJkcncxMCANClx0cmJyZHJiXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnJcYnJkcnNcYnJkcncxMCBcdHJicmRyaFxicmRyc1xicmRydzEwIFx0cmJyZHJ2XGJyZHJzXGJyZHJ3MTAgDQpcdHJmdHNXaWR0aDNcdHJ3V2lkdGg2MTAxXHRyZnRzV2lkdGhCM1x0cmF1dG9maXQxXHRycGFkZGwxMDhcdHJwYWRkcjEwOFx0cnBhZGRmbDNcdHJwYWRkZnQzXHRycGFkZGZiM1x0cnBhZGRmcjNcdGJscnNpZDk0NDY3NVx0Ymxsa2hkcnJvd3NcdGJsbGtsYXN0cm93XHRibGxraGRyY29sc1x0Ymxsa2xhc3Rjb2xcdGJsaW5kMFx0YmxpbmR0eXBlMyBcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmINClxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgyNDY5XGNsc2hkcmF3bmlsIFxjZWxseDIzNjFcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTEzM1xjbHNoZHJhd25pbCBcY2VsbHgzNDk0XGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIA0KXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTI1NlxjbHNoZHJhd25pbCBcY2VsbHg0NzUwXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDEyNDNcY2xzaGRyYXduaWwgXGNlbGx4NTk5M1xyb3cgDQpcbHRycm93fVxwYXJkXHBsYWluIFxsdHJwYXJcczE3XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxwYXJhcnNpZDU5MTgzMjkgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTM5MzAxIE8mTSBGYWNpbGl0eVxjZWxsIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkNTM5MzAxIDQwJVxjZWxsIDF9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDUzOTMwMVxjaGFycnNpZDU5MTgzMjkgMCV9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDUzOTMwMSBcY2VsbCANCjV9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDUzOTMwMVxjaGFycnNpZDU5MTgzMjkgMCV9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDUzOTMwMSBcY2VsbCB9XHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjAgDQpccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTM5MzAxIFx0cm93ZCBcaXJvdzVcaXJvd2JhbmQ1XGx0cnJvd1x0czExXHRyZ2FwaDEwOFx0cmxlZnQtMTA4XHRyYnJkcnRcYnJkcnNcYnJkcncxMCBcdHJicmRybFxicmRyc1xicmRydzEwIA0KXHRyYnJkcmJcYnJkcnNcYnJkcncxMCBcdHJicmRyclxicmRyc1xicmRydzEwIFx0cmJyZHJoXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnZcYnJkcnNcYnJkcncxMCANClx0cmZ0c1dpZHRoM1x0cndXaWR0aDYxMDFcdHJmdHNXaWR0aEIzXHRyYXV0b2ZpdDFcdHJwYWRkbDEwOFx0cnBhZGRyMTA4XHRycGFkZGZsM1x0cnBhZGRmdDNcdHJwYWRkZmIzXHRycGFkZGZyM1x0Ymxyc2lkMjUxMDk4Mlx0Ymxsa2hkcnJvd3NcdGJsbGtsYXN0cm93XHRibGxraGRyY29sc1x0Ymxsa2xhc3Rjb2xcdGJsaW5kMFx0YmxpbmR0eXBlMyBcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmINClxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgyNDY5XGNsc2hkcmF3bmlsIFxjZWxseDIzNjFcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTEzM1xjbHNoZHJhd25pbCBcY2VsbHgzNDk0XGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIA0KXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTI1NlxjbHNoZHJhd25pbCBcY2VsbHg0NzUwXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDEyNDNcY2xzaGRyYXduaWwgXGNlbGx4NTk5M1xyb3cgDQpcbHRycm93fVxwYXJkXHBsYWluIFxsdHJwYXJcczE3XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxwYXJhcnNpZDU5MTgzMjkgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEzNDk2NDUgW290aGVyXVxjZWxsIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMTEzNDk2NDUgNDAlXGNlbGwgMX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMTEzNDk2NDVcY2hhcnJzaWQ1OTE4MzI5IDAlfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQxMTM0OTY0NSANClxjZWxsIDV9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDExMzQ5NjQ1XGNoYXJyc2lkNTkxODMyOSAwJX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMTEzNDk2NDUgXGNlbGwgfVxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wIA0KXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMzQ5NjQ1IFx0cm93ZCBcaXJvdzZcaXJvd2JhbmQ2XGxhc3Ryb3cgXGx0cnJvd1x0czExXHRyZ2FwaDEwOFx0cmxlZnQtMTA4XHRyYnJkcnRcYnJkcnNcYnJkcncxMCBcdHJicmRybA0KXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmJcYnJkcnNcYnJkcncxMCBcdHJicmRyclxicmRyc1xicmRydzEwIFx0cmJyZHJoXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnZcYnJkcnNcYnJkcncxMCANClx0cmZ0c1dpZHRoM1x0cndXaWR0aDYxMDFcdHJmdHNXaWR0aEIzXHRyYXV0b2ZpdDFcdHJwYWRkbDEwOFx0cnBhZGRyMTA4XHRycGFkZGZsM1x0cnBhZGRmdDNcdHJwYWRkZmIzXHRycGFkZGZyM1x0Ymxyc2lkMjUxMDk4Mlx0Ymxsa2hkcnJvd3NcdGJsbGtsYXN0cm93XHRibGxraGRyY29sc1x0Ymxsa2xhc3Rjb2xcdGJsaW5kMFx0YmxpbmR0eXBlMyBcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmINClxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgyNDY5XGNsc2hkcmF3bmlsIFxjZWxseDIzNjFcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTEzM1xjbHNoZHJhd25pbCBcY2VsbHgzNDk0XGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIA0KXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTI1NlxjbHNoZHJhd25pbCBcY2VsbHg0NzUwXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDEyNDNcY2xzaGRyYXduaWwgXGNlbGx4NTk5M1xyb3cgDQp9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBca2VlcG5cd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkOTQ0Njc1IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH1ccGFyZCBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFxrZWVwblx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxMTM0OTY0NVxjaGFycnNpZDk0NDY3NSBSU1QgSS9JSSBTaGFyZWQgRmFjaWxpdGllcyBHcm91cCAoUmlzaW5nIFRyZWUgSSBhbmQgUmlzaW5nIFRyZWUgSUkgb25seSkNCg0KXHBhciBcbHRycm93fVx0cm93ZCBcaXJvdzBcaXJvd2JhbmQwXGx0cnJvd1x0czExXHRyZ2FwaDEwOFx0cmxlZnQtMTA4XHRyYnJkcnRcYnJkcnNcYnJkcncxMCBcdHJicmRybFxicmRyc1xicmRydzEwIFx0cmJyZHJiXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnJcYnJkcnNcYnJkcncxMCBcdHJicmRyaFxicmRyc1xicmRydzEwIFx0cmJyZHJ2XGJyZHJzXGJyZHJ3MTAgDQpcdHJmdHNXaWR0aDNcdHJ3V2lkdGg2MTM4XHRyZnRzV2lkdGhCM1x0cmF1dG9maXQxXHRycGFkZGwxMDhcdHJwYWRkcjEwOFx0cnBhZGRmbDNcdHJwYWRkZnQzXHRycGFkZGZiM1x0cnBhZGRmcjNcdGJscnNpZDk0NDY3NVx0Ymxsa2hkcnJvd3NcdGJsbGtsYXN0cm93XHRibGxraGRyY29sc1x0Ymxsa2xhc3Rjb2xcdGJsaW5kMFx0YmxpbmR0eXBlMyBcY2x2ZXJ0YWxiXGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmINClxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgzMDc4XGNsc2hkcmF3bmlsIFxjZWxseDI5NzBcY2x2ZXJ0YWxiXGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTQ0MFxjbHNoZHJhd25pbCBcY2VsbHg0NDEwXGNsdmVydGFsYlxjbGJyZHJ0XGJyZHJub25lIA0KXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTYyMFxjbHNoZHJhd25pbCBcY2VsbHg2MDMwXHBhcmRccGxhaW4gXGx0cnBhclxzMTdccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXHBhcmFyc2lkMTEzNDk2NDUgXHJ0bGNoXGZjczEgDQpcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxiXGZzMjJcaW5zcnNpZDExMzQ5NjQ1XGNoYXJyc2lkNTkxODMyOSBFcXVpcG1lbnQgTmFtZVxjZWxsIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcYlxmczIyXGluc3JzaWQxMTM0OTY0NSBSU1QgSX17DQpccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxiXGZzMjJcaW5zcnNpZDExMzQ5NjQ1XGNoYXJyc2lkNTkxODMyOSBcY2VsbCB9XHBhcmQgXGx0cnBhclxzMTdccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wIHtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxiXGZzMjJcaW5zcnNpZDExMzQ5NjQ1IA0KUlNUIEl9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGJcZnMyMlxpbnNyc2lkMTEzNDk2NDVcY2hhcnJzaWQ1OTE4MzI5IElcY2VsbCB9XHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEzNDk2NDVcY2hhcnJzaWQ1OTE4MzI5IFx0cm93ZCBcaXJvdzBcaXJvd2JhbmQwXGx0cnJvd1x0czExXHRyZ2FwaDEwOFx0cmxlZnQtMTA4XHRyYnJkcnRcYnJkcnNcYnJkcncxMCBcdHJicmRybFxicmRyc1xicmRydzEwIFx0cmJyZHJiXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnINClxicmRyc1xicmRydzEwIFx0cmJyZHJoXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnZcYnJkcnNcYnJkcncxMCANClx0cmZ0c1dpZHRoM1x0cndXaWR0aDYxMzhcdHJmdHNXaWR0aEIzXHRyYXV0b2ZpdDFcdHJwYWRkbDEwOFx0cnBhZGRyMTA4XHRycGFkZGZsM1x0cnBhZGRmdDNcdHJwYWRkZmIzXHRycGFkZGZyM1x0Ymxyc2lkOTQ0Njc1XHRibGxraGRycm93c1x0Ymxsa2xhc3Ryb3dcdGJsbGtoZHJjb2xzXHRibGxrbGFzdGNvbFx0YmxpbmQwXHRibGluZHR5cGUzIFxjbHZlcnRhbGJcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYg0KXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDMwNzhcY2xzaGRyYXduaWwgXGNlbGx4Mjk3MFxjbHZlcnRhbGJcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxNDQwXGNsc2hkcmF3bmlsIFxjZWxseDQ0MTBcY2x2ZXJ0YWxiXGNsYnJkcnRcYnJkcm5vbmUgDQpcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxNjIwXGNsc2hkcmF3bmlsIFxjZWxseDYwMzBccm93IFxsdHJyb3d9XHRyb3dkIFxpcm93MVxpcm93YmFuZDFcbHRycm93XHRzMTFcdHJnYXBoMTA4XHRybGVmdC0xMDhcdHJicmRydFxicmRyc1xicmRydzEwIFx0cmJyZHJsXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmJcYnJkcnNcYnJkcncxMCANClx0cmJyZHJyXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmhcYnJkcnNcYnJkcncxMCBcdHJicmRydlxicmRyc1xicmRydzEwIA0KXHRyZnRzV2lkdGgzXHRyd1dpZHRoNjEzOFx0cmZ0c1dpZHRoQjNcdHJhdXRvZml0MVx0cnBhZGRsMTA4XHRycGFkZHIxMDhcdHJwYWRkZmwzXHRycGFkZGZ0M1x0cnBhZGRmYjNcdHJwYWRkZnIzXHRibHJzaWQ5NDQ2NzVcdGJsbGtoZHJyb3dzXHRibGxrbGFzdHJvd1x0Ymxsa2hkcmNvbHNcdGJsbGtsYXN0Y29sXHRibGluZDBcdGJsaW5kdHlwZTMgXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiDQpcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMzA3OFxjbHNoZHJhd25pbCBcY2VsbHgyOTcwXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDE0NDBcY2xzaGRyYXduaWwgXGNlbGx4NDQxMFxjbHZlcnRhbHRcY2xicmRydFxicmRybm9uZSANClxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDE2MjBcY2xzaGRyYXduaWwgXGNlbGx4NjAzMFxwYXJkXHBsYWluIFxsdHJwYXJcczE3XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxwYXJhcnNpZDExMzQ5NjQ1IFxydGxjaFxmY3MxIA0KXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMTEzNDk2NDVcY2hhcnJzaWQ1OTE4MzI5IFxjZWxsIFxjZWxsIFxjZWxsIH1ccGFyZFxwbGFpbiBcbHRycGFyDQpccWwgXGxpMFxyaTBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTM0OTY0NVxjaGFycnNpZDU5MTgzMjkgDQpcdHJvd2QgXGlyb3cxXGlyb3diYW5kMVxsdHJyb3dcdHMxMVx0cmdhcGgxMDhcdHJsZWZ0LTEwOFx0cmJyZHJ0XGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmxcYnJkcnNcYnJkcncxMCBcdHJicmRyYlxicmRyc1xicmRydzEwIFx0cmJyZHJyXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmhcYnJkcnNcYnJkcncxMCBcdHJicmRydlxicmRyc1xicmRydzEwIA0KXHRyZnRzV2lkdGgzXHRyd1dpZHRoNjEzOFx0cmZ0c1dpZHRoQjNcdHJhdXRvZml0MVx0cnBhZGRsMTA4XHRycGFkZHIxMDhcdHJwYWRkZmwzXHRycGFkZGZ0M1x0cnBhZGRmYjNcdHJwYWRkZnIzXHRibHJzaWQ5NDQ2NzVcdGJsbGtoZHJyb3dzXHRibGxrbGFzdHJvd1x0Ymxsa2hkcmNvbHNcdGJsbGtsYXN0Y29sXHRibGluZDBcdGJsaW5kdHlwZTMgXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiDQpcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMzA3OFxjbHNoZHJhd25pbCBcY2VsbHgyOTcwXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDE0NDBcY2xzaGRyYXduaWwgXGNlbGx4NDQxMFxjbHZlcnRhbHRcY2xicmRydFxicmRybm9uZSANClxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDE2MjBcY2xzaGRyYXduaWwgXGNlbGx4NjAzMFxyb3cgXGx0cnJvd31ccGFyZFxwbGFpbiBcbHRycGFyXHMxN1xxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBccGFyYXJzaWQ3NzQzNzMyIA0KXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMzQ5NjQ1IFJvYWRzIFtpbiBTZWN0aW9ucyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NTk2MDQ2IDEsIDIsIDM1IGFuZCAzNl19e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDExMzQ5NjQ1IFxjZWxsIH1ccGFyZCBcbHRycGFyXHMxN1xxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBccGFyYXJzaWQxMTM0OTY0NSB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMTEzNDk2NDUgODAlXGNlbGwgMn17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiANClxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQxMTM0OTY0NVxjaGFycnNpZDU5MTgzMjkgMCV9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDExMzQ5NjQ1IFxjZWxsIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMCBccnRsY2hcZmNzMSANClxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTM0OTY0NSBcdHJvd2QgXGlyb3cyXGlyb3diYW5kMlxsdHJyb3dcdHMxMVx0cmdhcGgxMDhcdHJsZWZ0LTEwOFx0cmJyZHJ0XGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmxcYnJkcnNcYnJkcncxMCBcdHJicmRyYg0KXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnJcYnJkcnNcYnJkcncxMCBcdHJicmRyaFxicmRyc1xicmRydzEwIFx0cmJyZHJ2XGJyZHJzXGJyZHJ3MTAgDQpcdHJmdHNXaWR0aDNcdHJ3V2lkdGg2MTM4XHRyZnRzV2lkdGhCM1x0cmF1dG9maXQxXHRycGFkZGwxMDhcdHJwYWRkcjEwOFx0cnBhZGRmbDNcdHJwYWRkZnQzXHRycGFkZGZiM1x0cnBhZGRmcjNcdGJscnNpZDk0NDY3NVx0Ymxsa2hkcnJvd3NcdGJsbGtsYXN0cm93XHRibGxraGRyY29sc1x0Ymxsa2xhc3Rjb2xcdGJsaW5kMFx0YmxpbmR0eXBlMyBcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmINClxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgzMDc4XGNsc2hkcmF3bmlsIFxjZWxseDI5NzBcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTQ0MFxjbHNoZHJhd25pbCBcY2VsbHg0NDEwXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIA0KXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTYyMFxjbHNoZHJhd25pbCBcY2VsbHg2MDMwXHJvdyBcbHRycm93fVxwYXJkXHBsYWluIFxsdHJwYXINClxzMTdccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXHBhcmFyc2lkMTEzNDk2NDUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMzM3MTkwOSBNZXQgVG93ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NTk2MDQ2ICBSU1QgMS1CL1JTVCAyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEzNDk2NDUgXGNlbGwgfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQxMTM0OTY0NSA4MCVcY2VsbCAyfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcaW5zcnNpZDExMzQ5NjQ1XGNoYXJyc2lkNTkxODMyOSAwJX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMTEzNDk2NDUgXGNlbGwgfVxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IA0KXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMzQ5NjQ1IFx0cm93ZCBcaXJvdzNcaXJvd2JhbmQzXGxhc3Ryb3cgXGx0cnJvd1x0czExXHRyZ2FwaDEwOFx0cmxlZnQtMTA4XHRyYnJkcnRcYnJkcnNcYnJkcncxMCBcdHJicmRybFxicmRyc1xicmRydzEwIFx0cmJyZHJiXGJyZHJzXGJyZHJ3MTAgDQpcdHJicmRyclxicmRyc1xicmRydzEwIFx0cmJyZHJoXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnZcYnJkcnNcYnJkcncxMCANClx0cmZ0c1dpZHRoM1x0cndXaWR0aDYxMzhcdHJmdHNXaWR0aEIzXHRyYXV0b2ZpdDFcdHJwYWRkbDEwOFx0cnBhZGRyMTA4XHRycGFkZGZsM1x0cnBhZGRmdDNcdHJwYWRkZmIzXHRycGFkZGZyM1x0Ymxyc2lkOTQ0Njc1XHRibGxraGRycm93c1x0Ymxsa2xhc3Ryb3dcdGJsbGtoZHJjb2xzXHRibGxrbGFzdGNvbFx0YmxpbmQwXHRibGluZHR5cGUzIFxjbHZlcnRhbHRcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYg0KXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDMwNzhcY2xzaGRyYXduaWwgXGNlbGx4Mjk3MFxjbHZlcnRhbHRcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxNDQwXGNsc2hkcmF3bmlsIFxjZWxseDQ0MTBcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgDQpcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxNjIwXGNsc2hkcmF3bmlsIFxjZWxseDYwMzBccm93IH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFxrZWVwblx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgDQpcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEzNDk2NDUgDQpccGFyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTdccWogXGZpNzQxXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjE3NjczNiBcc2VjdCB9XHNlY3RkIFxsdHJzZWN0XHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XGZvb3RlcnIgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHMyMlxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIA0KXHJ0bGNoXGZjczEgXGFmMFxhZnMxNlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQpccGFyIFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxmczI0XGluc3JzaWQzNDM4MDc4IEQtfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcY3MyNFxmczI0XGluc3JzaWQzNDM4MDc4ICBQQUdFIH19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxjczI0XGZzMjRcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ3MzU3NTAyIA0KMX19fVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQyOTEzMTQzIA0Ke1xzaHB7XCpcc2hwaW5zdFxzaHBsZWZ0MFxzaHB0b3AwXHNocHJpZ2h0NDAzMlxzaHBib3R0b200MDNcc2hwZmhkcjFcc2hwYnhtYXJnaW5cc2hwYnhpZ25vcmVcc2hwYnlwYXJhXHNocGJ5aWdub3JlXHNocHdyM1xzaHB3cmswXHNocGZibHd0eHQwXHNocHo3XHNocGxpZDIyMzN7XHNwe1xzbiBzaGFwZVR5cGV9e1xzdiAyMDJ9fXtcc3B7XHNuIGZGbGlwSH17XHN2IDB9fXtcc3B7XHNuIGZGbGlwVn17XHN2IDB9fQ0Ke1xzcHtcc24gbFR4aWR9e1xzdiA1MjQyODh9fXtcc3B7XHNuIGR4VGV4dExlZnR9e1xzdiAwfX17XHNwe1xzbiBkeVRleHRUb3B9e1xzdiAwfX17XHNwe1xzbiBkeFRleHRSaWdodH17XHN2IDB9fXtcc3B7XHNuIGR5VGV4dEJvdHRvbX17XHN2IDB9fXtcc3B7XHNuIGhzcE5leHR9e1xzdiAyMjMzfX17XHNwe1xzbiBmRml0U2hhcGVUb1RleHR9e1xzdiAxfX17XHNwe1xzbiBmRmlsbGVkfXtcc3YgMH19e1xzcHtcc24gZkxpbmV9e1xzdiAwfX0NCntcc3B7XHNuIHd6TmFtZX17XHN2IHp6bXBUcmFpbGVyXzEwNzhfOH19e1xzcHtcc24gcG9zcmVsaH17XHN2IDB9fXtcc3B7XHNuIGRoZ3R9e1xzdiAyNTE2NTgyNDB9fXtcc3B7XHNuIGZQc2V1ZG9JbmxpbmV9e1xzdiAwfX17XHNwe1xzbiBmTGF5b3V0SW5DZWxsfXtcc3YgMX19e1xzaHB0eHQgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHM0OVxxbCBcbGkwXHJpMFxzbC0yMDBcc2xtdWx0MA0KXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczE2XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IE9IU1VTQTo3NTgyOTY2NzIuMTAgDQpccGFyIA0KXHBhciB9fX17XHNocHJzbHR7XCpcZG9cZG9ieG1hcmdpblxkb2J5cGFyYVxkb2RoZ3Q4MTk5XGRwdHhieFxkcHR4bHJ0YntcZHB0eGJ4dGV4dFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxzNDlccWwgXGxpMFxyaTBcc2wtMjAwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMlxhbGFuZzEwMjUgDQpcbHRyY2hcZmNzMCBcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBPSFNVU0E6NzU4Mjk2NjcyLjEwIA0KXHBhciANClxwYXIgfX1cZHB4MFxkcHkwXGRweHNpemU0MDMyXGRweXNpemU0MDNcZHBmaWxsZmdjcjI1NVxkcGZpbGxmZ2NnMjU1XGRwZmlsbGZnY2IyNTVcZHBmaWxsYmdjcjI1NVxkcGZpbGxiZ2NnMjU1XGRwZmlsbGJnY2IyNTVcZHBmaWxscGF0MFxkcGxpbmVob2xsb3d9fX19e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGZzMjRcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ3ODY1NTMzIA0KXHBhciB9fVxwYXJkXHBsYWluIFxsdHJwYXJcczI1XHFjIFxsaTBccmkwXHNhMTIwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkNzMwMDkzMCBccnRsY2hcZmNzMSBcYWJcYWYxXGFmczMyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xrZXJuaW5nMjhcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxMzA3MTE3MCBFWEhJQklUIERcbGluZSBcbGluZSBNQVRFUklBTCBQUk9KRUNUIEFHUkVFTUVOVFMNClxwYXIgfVxwYXJkIFxsdHJwYXJcczI1XHFjIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkNzMwMDkzMCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1NzYxMjY0IChDZXJ0YWluIE90aGVyIEFncmVlbWVudHMgUmVsYXRpbmcgdG8gdGhlIENvbnN0cnVjdGlvbiwgDQpccGFyIH1ccGFyZCBcbHRycGFyXHMyNVxxYyBcbGkwXHJpMFxzYTMwMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDEzMDcxMTcwIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU3NjEyNjQgT3BlcmF0aW9uIGFuZCBVc2Ugb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzKQ0KXHBhciB9XHBhcmQgXGx0cnBhclxzMjVccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ3MzAwOTMwIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMTMwNzExNzBcY2hhcnJzaWQ3MzAwOTMwIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQxNTc2MTI2NFxjaGFycnNpZDczMDA5MzAgMS59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQxNTc2MTI2NCANCiAgQSBIaWdoIFZvbHRhZ2UgT3BlcmF0aW9ucyBhbmQgTWFpbnRlbmFuY2UgQWdyZWVtZW50IHRvIGJlIGVudGVyZWQgaW50byBieSBhbmQgYmV0d2VlbiB0aGUgQ28tT3duZXJzIGFuZCBFRFAgUmVuZXdhYmxlcyBOb3J0aCBBbWVyaWNhIExMQyAob3Igb25lIG9mIGl0cyBBZmZpbGlhdGVzKS4gIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1NzYxMjY0XGNoYXJyc2lkNzMwMDkzMCBbZXhwZWN0ZWR9e1xydGxjaFxmY3MxIA0KXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDczMDA5MzAgIHRvIGJlIHNpZ25lZCBiZWZvcmUgRGVjZW1iZXIgMzEsIDIwMTRdfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU3NjEyNjQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDczMDA5MzBcY2hhcnJzaWQ3MzAwOTMwIA0KXHBhciAyLiAgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkNzMwMDkzMCBBIFNlcnZpY2VzIEFncmVlbWVudCBmb3IgYSBSZW1vdGUgT3BlcmF0aW9ucyBDb250cm9sIENlbnRlciB0byBiZSBlbnRlcmVkIGludG8gYnkgYW5kIGJldHdlZW4gdGhlIENvLU93bmVycyBhbmQgRURQIFJlbmV3YWJsZXMgTm9ydGggQW1lcmljYSBMTEMgKG9yIG9uZSBvZiBpdHMgQWZmaWxpYXRlcykuICB9e1xydGxjaFxmY3MxIFxhZjEgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDczMDA5MzBcY2hhcnJzaWQxNTk5NjI5NCBbZXhwZWN0ZWR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ3MzAwOTMwICB0byBiZSBzaWduZWQgYmVmb3JlIERlY2VtYmVyIDMxLCAyMDE0XX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDczMDA5MzAgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYjBcaVxpbnNyc2lkNzMwMDkzMFxjaGFycnNpZDczMDA5MzAgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDE1NzYxMjY0XGNoYXJyc2lkNzMwMDkzMCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU3NjEyNjQgXHNlY3QgfVxzZWN0ZCBcbHRyc2VjdFxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVxzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xmb290ZXJyIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxzMjJccWwgXGxpMFxyaTBcd2lkY3RscGFyDQpcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMTZcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczE2XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IA0KXHBhciBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcZnMyNFxpbnNyc2lkMzQzODA3OCBFLX17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGNzMjRcZnMyNFxpbnNyc2lkMzQzODA3OCAgUEFHRSB9fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcY3MyNFxmczI0XGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkNzM1NzUwMiANCjJ9fX1cc2VjdGQgXGx0cnNlY3RcbGluZXgwXGVuZG5oZXJlXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkMjkxMzE0MyANCntcc2hwe1wqXHNocGluc3Rcc2hwbGVmdDBcc2hwdG9wMFxzaHByaWdodDQwMzJcc2hwYm90dG9tNDAzXHNocGZoZHIxXHNocGJ4bWFyZ2luXHNocGJ4aWdub3JlXHNocGJ5cGFyYVxzaHBieWlnbm9yZVxzaHB3cjNcc2hwd3JrMFxzaHBmYmx3dHh0MFxzaHB6OFxzaHBsaWQyMjM0e1xzcHtcc24gc2hhcGVUeXBlfXtcc3YgMjAyfX17XHNwe1xzbiBmRmxpcEh9e1xzdiAwfX17XHNwe1xzbiBmRmxpcFZ9e1xzdiAwfX0NCntcc3B7XHNuIGxUeGlkfXtcc3YgNTg5ODI0fX17XHNwe1xzbiBkeFRleHRMZWZ0fXtcc3YgMH19e1xzcHtcc24gZHlUZXh0VG9wfXtcc3YgMH19e1xzcHtcc24gZHhUZXh0UmlnaHR9e1xzdiAwfX17XHNwe1xzbiBkeVRleHRCb3R0b219e1xzdiAwfX17XHNwe1xzbiBoc3BOZXh0fXtcc3YgMjIzNH19e1xzcHtcc24gZkZpdFNoYXBlVG9UZXh0fXtcc3YgMX19e1xzcHtcc24gZkZpbGxlZH17XHN2IDB9fXtcc3B7XHNuIGZMaW5lfXtcc3YgMH19DQp7XHNwe1xzbiB3ek5hbWV9e1xzdiB6em1wVHJhaWxlcl8xMDc4Xzl9fXtcc3B7XHNuIHBvc3JlbGh9e1xzdiAwfX17XHNwe1xzbiBkaGd0fXtcc3YgMjUxNjU5MjY0fX17XHNwe1xzbiBmUHNldWRvSW5saW5lfXtcc3YgMH19e1xzcHtcc24gZkxheW91dEluQ2VsbH17XHN2IDF9fXtcc2hwdHh0IFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxzNDlccWwgXGxpMFxyaTBcc2wtMjAwXHNsbXVsdDANClxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBPSFNVU0E6NzU4Mjk2NjcyLjEwIA0KXHBhciANClxwYXIgfX19e1xzaHByc2x0e1wqXGRvXGRvYnhtYXJnaW5cZG9ieXBhcmFcZG9kaGd0ODIwMFxkcHR4YnhcZHB0eGxydGJ7XGRwdHhieHRleHRcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJcczQ5XHFsIFxsaTBccmkwXHNsLTIwMFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjJcYWxhbmcxMDI1IA0KXGx0cmNoXGZjczAgXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggT0hTVVNBOjc1ODI5NjY3Mi4xMCANClxwYXIgDQpccGFyIH19XGRweDBcZHB5MFxkcHhzaXplNDAzMlxkcHlzaXplNDAzXGRwZmlsbGZnY3IyNTVcZHBmaWxsZmdjZzI1NVxkcGZpbGxmZ2NiMjU1XGRwZmlsbGJnY3IyNTVcZHBmaWxsYmdjZzI1NVxkcGZpbGxiZ2NiMjU1XGRwZmlsbHBhdDBcZHBsaW5laG9sbG93fX19fXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxmczI0XGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNzg2NTUzMyANClxwYXIgfX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyNVxxYyBcbGkwXHJpMFxzYTMwMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWYxXGFmczMyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNca2VybmluZzI4XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IEVYSElCSVQgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMwNzExNzAgRX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXGxpbmUgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNTkxODMyOSBESVNQVVRFIFJFU09MVVRJT04gUFJPQ0VEVVJFU317XHJ0bGNoXGZjczEgDQpcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IDEuXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ1OTE4MzI5IENvbnNpZGVyYXRpb24gYnkgdGhlIEF1dGhvcml6ZWQgUmVwcmVzZW50YXRpdmVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE3XHFqIFxmaTc0MVxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IEFsbCBxdWVzdGlvbnMgY29uY2VybmluZyBpbnRlcnByZXRhdGlvbiBvZiB0aGlzIEFncmVlbWVudCwgdGhlIGFjY2VwdGFibGUgZnVsZmlsbG1lbnQgb2YgdGhlIENvLU93bmVyc1xycXVvdGUgDQogcmVzcGVjdGl2ZSBvYmxpZ2F0aW9ucyBoZXJldW5kZXIsIGFzIHdlbGwgYXMgYWxsIG90aGVyIHF1ZXN0aW9ucyByZWdhcmRpbmcgdGhpcyBBZ3JlZW1lbnQgaW4gZWFjaCBjYXNlIHRoYXQgY2Fubm90IHJlYWRpbHkgYmUgcmVzb2x2ZWQgYnkgdGhlIENvLU93bmVycyBzaGFsbCBiZSByZXNvbHZlZCBpbiBhY2NvcmRhbmNlIHdpdGggdGhpcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzA3MTE3MCBFeGhpYml0IEV9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLiAgSW4gdGhlIGV2ZW50IHRoYXQgdGhlIGF1dGhvcml6ZWQgcmVwcmVzZW50YXRpdmVzIG9mIHRoZSBDby1Pd25lcnMgY2Fubm90IHJlYWNoIGFncmVlbWVudCBvbiBhbnkgcXVlc3Rpb24gYXJpc2luZyB1bmRlciB0aGlzIEFncmVlbWVudCwgc3VjaCBkaXNwdXRlIHNoYWxsIGJlIHJlZmVycmVkIHRvIHNlbmlvciBvZmZpY2VycyBvZiB0aGUgQ28tT3duZXJzIA0KcHVyc3VhbnQgdG8gUGFyYWdyYXBoIDIgYmVsb3cufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IDIuXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ1OTE4MzI5IE5lZ290aWF0aW9ucyBieSBTZW5pb3IgT2ZmaWNlcnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTdccWogXGZpNzQxXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgQW55IGRpc3B1dGVzIGFyaXNpbmcgcHVyc3VhbnQgdG8gdGhpcyBBZ3JlZW1lbnQgdGhhdCBjYW5ub3QgYmUgcmVzb2x2ZWQgYnkgdGhlIGF1dGhvcml6ZWQgcmVwcmVzZW50YXRpdmVzIG9mIHRoZSBDby1Pd25lcnMgd2l0aGluIGZvdXJ0ZWVuICgxNCkgZGF5cyBhZnRlciByZWNlaXB0IG9mIG5vdGljZSBvZiBzdWNoIGRpc3B1dGUgKHNwZWNpZmljYWxseSByZWZlcmVuY2luZyB0aGlzIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTMwNzExNzAgRXhoaWJpdCBFfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSApIHNoYWxsIGJlIHJlZmVycmVkIHRvIHRoZSB2aWNlIHByZXNpZGVudCBvciBvdGhlciBzZW5pb3Igb2ZmaWNlciBvZiBlYWNoIG9mIHRoZSBDby1Pd25lcnMgaGF2aW5nIGV4ZWN1dGl2ZSByZXNwb25zaWJpbGl0eSBmb3Igc3VjaCBDby1Pd25lclxycXVvdGUgDQpzIEZhY2lsaXR5LiAgSWYgc3VjaCBzZW5pb3Igb2ZmaWNlcnMsIG5lZ290aWF0aW5nIGluIGdvb2QgZmFpdGgsIGZhaWwgdG8gcmUNCmFjaCBhbiBhZ3JlZW1lbnQgd2l0aGluIGEgcmVhc29uYWJsZSBwZXJpb2Qgb2YgdGltZSwgbm90IGV4Y2VlZGluZyB0d2VudHkgKDIwKSBkYXlzIGFmdGVyIHN1Y2ggcmVmZXJyYWwsIHRoZW4gYW55IENvLU93bmVyIHRvIHN1Y2ggZGlzcHV0ZSBtYXkgaW5zdGl0dXRlIHByb2NlZWRpbmdzIGFzIHNldCBmb3J0aCBpbiBQYXJhZ3JhcGggMyBiZWxvdy59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgMy5cdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDU5MTgzMjkgRm9ybWFsIERpc3B1dGUgUmVzb2x1dGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxN1xxaiBcZmk3NDFcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSAoYSlcdGFiIElmIGEgZGlzcHV0ZSBkZXNjcmliZWQgaW4gUGFyYWdyYXBoIDIgaXMgbm90IHJlc29sdmVkIGJ5IHRoZSBleGVjdXRpdmUgbWFuYWdlbWVudCBvZiB0aGUgQ28tT3duZXJzLCB0aGUgQ28tT3duZXJzIHNoYWxsIGVuZ2FnZSBpbiBub24tYmluZGluZyBtZWRpYXRpb24gb2Ygc3VjaCBkaXNwdXRlLiAgU3VjaCBtZWRpYXRpb24gc2hhbGwgYmUgY29uZHVjdGVkIChpKVx+aW4gfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQzNzQ3MjMzIEhvdXN0b24sIFRleGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAsIChpaSlcfndpdGhpbiB0aGlydHkgKDMwKSBkYXlzIG9mIGEgQ28tT3duZXIgaW5zdGl0dXRpbmcgZGlzcHV0ZSByZXNvbHV0aW9uIHVuZGVyIHRoaXMgUGFyYWdyYXBoIDMsIChpaWkpXH4NCmJ5IGEgc2luZ2xlLCBpbXBhcnRpYWwgbWVkaWF0b3Igd2hvIGlzIHNlbGVjdGVkIGJ5IHRoZSBtdXR1YWwgYWdyZWVtZW50IG9mIHRoZSBDby1Pd25lcnMsIGFuZCAoaXYpXH5pbiBhY2NvcmRhbmNlIHdpdGggc3VjaCBwcm9jZWR1cmVzIGFzIG1heSBiZSBhZG9wdGUNCmQgYnkgc3VjaCBtZWRpYXRvci4gIFN1Y2ggbWVkaWF0aW9uIHNoYWxsIG5vdCwgd2l0aG91dCB0aGUgZXhwcmVzcyBhZ3JlZW1lbnQgb2YgdGhlIENvLU93bmVycyBhdCB0aGUgdGltZSwgZXh0ZW5kIGZvciBhIHBlcmlvZCBvZiBtb3JlIHRoYW4gdHdvICgyKSBkYXlzLiAgRWFjaCBDby1Pd25lciBtYXkgYmUgcmVwcmVzZW50ZWQgYnkgcGVyc29ucyBvZiBzdWNoIENvLU93bmVyXHJxdW90ZSANCnMgY2hvaWNlIGR1cmluZyBzdWNoIG1lZGlhdGlvbi4gIE5vdGhpbmcNCiBoZXJlaW4gc2hhbGwgYmUgZGVlbWVkIHRvIGdyYW50IGFueSBtZWRpYXRvciB0aGUgYXV0aG9yaXR5IHRvIGltcG9zZSBhIHJlc29sdXRpb24gb2YgYW55IGRpc3B1dGUgYmVpbmcgbWVkaWF0ZWQuICBBbnkgaW5mb3JtYXRpb24gaW50cm9kdWNlZCwgcHJvcG9zYWxzIG1hZGUgb3IgcG9zaXRpb25zIHRha2VuIGluIHRoZSBtZWRpYXRpb24gc2hhbGwgYmUgZGVlbWVkIHRvIGJlIGNvbmZpZGVudGlhbCBhbmQgZm9yIHNldHRsZW1lbnQgcHVycG9zZQ0KcyBvbmx5IGFuZCBtYXkgbm90IGJlIGludHJvZHVjZWQgYnkgdGhlIG90aGVyIENvLU93bmVyIGluIGFueSBzdWJzZXF1ZW50IGxpdGlnYXRpb24gb2YgdGhlIG1hdHRlcnMgc3ViamVjdCB0byBtZWRpYXRpb24uICBUaGUgQ28tT3duZXJzIHNoYWxsIHNoYXJlIHRoZSBjb3N0cyBvZiB0aGUgbWVkaWF0b3IsIGluY2x1ZGluZyBhbnkgZmVlcyBhbmQgbWVldGluZyByb29tIHJlbnRhbHMufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IChiKVx0YWIgSWYgYSBkaXNwdXRlIGRlc2NyaWJlZCBpbiBQYXJhZ3JhDQpwaCAyIGlzIG5vdCByZXNvbHZlZCBieSB0aGUgZXhlY3V0aXZlIG1hbmFnZW1lbnQgb2YgdGhlIENvLU93bmVycyBhbmQgdGhlIENvLU93bmVycyBoYXZlIG5vdCBvdGhlcndpc2UgcmVzb2x2ZWQgc3VjaCBkaXNwdXRlIHRocm91Z2ggbWVkaWF0aW9uIHB1cnN1YW50IHRvIFBhcmFncmFwaCAzKGEpLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNzQ3MjMzIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU5MTgzMjkgIENvLU93bmVyIG1heSBzdWJtaXQgdGhlIG1hdHRlciBhdCBpc3N1ZSBmb3IgcmVzb2x1dGlvbiBpbiBhbiBhY3Rpb24gYnJvdWdodCBiZWZvcmUgdGhlIGNvdXJ0cyBvZiB0aGUgU3RhdGUgb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTE5MjE1OSBDYWxpZm9ybmlhIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgaW4gfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ5MTkyMTU5IEtlcm4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBDb3VudHkgb3IgaW4gdGhlIFVuaXRlZCBTdGF0ZXMgRGlzdHJpY3QgQ291cnQgZm9yIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MTkyMTU5IEVhc3Rlcm4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBEaXN0cmljdCBvZiB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkxOTIxNTkgQ2FsaWZvcm5pYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLCB3aGljaCBjb3VydHMgc2hhbGwgaGF2ZSBub24tZXhjbHVzaXZlIGp1cmlzZGljdGlvbiB3aXRoIHJlc3BlY3QgdG8gc3VjaCBtYXR0ZXJzLiAgRk9SIFBVUlBPU0VTIE9GIFRIRSBGT1JFR09JTkcsIEJZIEVYRUNVVElPDQpOIE9GIFRISVMgQUdSRUVNRU5ULCBFQUNIIENPLU9XTkVSIEhFUkVCWSBJUlJFVk9DQUJMWSBBQ0NFUFRTIEZPUiBJVFNFTEYgQU5EIElOIFJFU1BFQ1QgT0YgSVRTIFBST1BFUlRZLCBHRU5FUkFMTFkgQU5EIFVOQ09ORElUSU9OQUxMWSwgVEhFIE5PTi1FWENMVVNJVkUgSlVSSVNESUNUSU9OIE9GIFNVQ0ggQ09VUlRTIEFORCBFQUNIIENPLU9XTkVSIEhFUkVCWSBDT05TRU5UUyBUTyBUSEUgU0VSVklDRSBPRiBQUk9DRVNTIE9VVCBPRiBBTlkgU1UNCkNIIEFDVElPTiBPUiBQUk9DRUVESU5HIEJZIFRIRSBNQUlMSU5HIE9GIENPUElFUyBUSEVSRU9GIEJZIFJFR0lTVEVSRUQgT1IgQ0VSVElGSUVEIE1BSUwsIFBPU1RBR0UgUFJFUEFJRCwgVE8gU1VDSCBQRVJTT04gSU4gQUNDT1JEQU5DRSBXSVRIIFRIRSBOT1RJQ0UgUFJPVklTSU9OUyBPRiBUSElTIEFHUkVFTUVOVC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IDQuXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ1OTE4MzI5IFNwZWNpZmljIFBlcmZvcm1hbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAuICBOb3R3aXRoc3RhbmRpbmcgYW55dGhpbmcgdG8gdGhlIGNvbnRyYXJ5IGNvbnRhaW5lDQpkIGluIHRoaXMgQWdyZWVtZW50LCBpZiwgZHVlIHRvIGEgbWF0ZXJpYWwgYnJlYWNoIG9yIHRocmVhdGVuZWQgbWF0ZXJpYWwgYnJlYWNoIG9yIGRlZmF1bHQgb3IgdGhyZWF0ZW5lZCBkZWZhdWx0LCBhIENvLU93bmVyIGlzIHN1ZmZlcmluZyBvciB3aWxsIHN1ZmZlciBpcnJlcGFyYWJsZSBoYXJtIGZvciB3aGljaCBtb25ldGFyeSBkYW1hZ2VzIGFyZSBpbmFkZXF1YXRlLCBzdWNoIENvLU93bmVyIG1heSBwZXRpdGlvbiBhIGNvdXJ0IG9mIGNvbXANCmV0ZW50IGp1cmlzZGljdGlvbiBmb3IgaW5qdW5jdGl2ZSByZWxpZWYsIHNwZWNpZmljIHBlcmZvcm1hbmNlIG9yIG90aGVyIGVxdWl0YWJsZSByZWxpZWYufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSA1Llx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNTkxODMyOSBDb250aW51aW5nIE9ibGlnYXRpb25zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCi4gIE5vdHdpdGhzdGFuZGluZyB0aGUgZm9yZWdvaW5nLCBhbGwgdGVybXMsIGNvbmRpdGlvbnMsIGFuZCBvYmxpZ2F0aW9ucyBvZiB0aGUgQ28tT3duZXJzIGNvbnRhaW5lZCBpbiB0aGlzIEFncmVlbWVudCBzaGFsbCBjb250aW51ZSBhbmQgcmVtYWkNCm4gaW4gZWZmZWN0IGR1cmluZyB0aGUgY291cnNlIG9mIGFueSBkaXNwdXRlIHJlc29sdXRpb24sIG9yIG90aGVyIHByb2NlZWRpbmcgcHVyc3VhbnQgaGVyZXRvLCBhbmQgZWFjaCBvZiB0aGUgQ28tT3duZXJzIHNoYWxsIHByb2NlZWQgd2l0aCBwZXJmb3JtYW5jZSBvZiBpdHMgb2JsaWdhdGlvbnMgcGVuZGluZyB0aGUgcmVzb2x1dGlvbiBvZiB0aGUgcXVlc3Rpb24sIGRpc3B1dGUgb3IgY2xhaW0ufXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IDYuXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ1OTE4MzI5IE1hdHRlcnMgTm90IFN1YmplY3QgdG8gRGlzcHV0ZSBSZXNvbHV0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSANCi4gIE5vdHdpdGhzdGFuZGluZyBhbnl0aGluZyB0byB0aGUgY29udHJhcnkgaW4gdGhpcyBBZ3JlZW1lbnQsIG5vIGRpc3B1dGUgdGhhdCBjb25jZXJucyBhIG1hdHRlciwgZGVjaXNpb24gb3Igb3RoZXIgaXNzdWUgdGhhdCBpcyB0byBiZSBkZWNpZGVkIGJ5IGEgQ28tT3duZXIgYWN0aW5nIGluIGl0cyBzb2xlIGRpc2NyZXRpb24gc2hhbGwgYmUgc3ViamVjdCB0byB0aGUgZGlzcHV0ZSByZXNvbHV0aW9uIHByb3Zpc2lvbnMgb2YgdGhpcyB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMDcxMTcwIEV4aGliaXQgRX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjE3NjczNiANClxwYXIgXHNlY3QgfVxzZWN0ZCBcbHRyc2VjdFxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVxzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDIxNzY3MzZcc2Z0bmJqIHtcZm9vdGVyciBcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJcczIyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgDQpccnRsY2hcZmNzMSBcYWYwXGFmczE2XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczIyXHFjIFxsaTBccmkwXHdpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ3ODY1NTMzIHtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxmczI0XGluc3JzaWQzNDM4MDc4IEYtfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCANClxsdHJjaFxmY3MwIFxmczI0XGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNzE2Mzc5OSAgUEFHRSAgIFxcKiBNRVJHRUZPUk1BVCB9fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDczNTc1MDIgMn19fVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgDQpcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDI5MTMxNDMge1xzaHB7XCpcc2hwaW5zdFxzaHBsZWZ0MFxzaHB0b3AwXHNocHJpZ2h0NDAzMlxzaHBib3R0b200MDNcc2hwZmhkcjFcc2hwYnhtYXJnaW5cc2hwYnhpZ25vcmVcc2hwYnlwYXJhXHNocGJ5aWdub3JlXHNocHdyM1xzaHB3cmswXHNocGZibHd0eHQwXHNocHo5XHNocGxpZDIyMzUNCntcc3B7XHNuIHNoYXBlVHlwZX17XHN2IDIwMn19e1xzcHtcc24gZkZsaXBIfXtcc3YgMH19e1xzcHtcc24gZkZsaXBWfXtcc3YgMH19e1xzcHtcc24gbFR4aWR9e1xzdiA2NTUzNjB9fXtcc3B7XHNuIGR4VGV4dExlZnR9e1xzdiAwfX17XHNwe1xzbiBkeVRleHRUb3B9e1xzdiAwfX17XHNwe1xzbiBkeFRleHRSaWdodH17XHN2IDB9fXtcc3B7XHNuIGR5VGV4dEJvdHRvbX17XHN2IDB9fXtcc3B7XHNuIGhzcE5leHR9e1xzdiAyMjM1fX0NCntcc3B7XHNuIGZGaXRTaGFwZVRvVGV4dH17XHN2IDF9fXtcc3B7XHNuIGZGaWxsZWR9e1xzdiAwfX17XHNwe1xzbiBmTGluZX17XHN2IDB9fXtcc3B7XHNuIHd6TmFtZX17XHN2IHp6bXBUcmFpbGVyXzEwNzhfMTB9fXtcc3B7XHNuIHBvc3JlbGh9e1xzdiAwfX17XHNwe1xzbiBkaGd0fXtcc3YgMjUxNjYwMjg4fX17XHNwe1xzbiBmUHNldWRvSW5saW5lfXtcc3YgMH19e1xzcHtcc24gZkxheW91dEluQ2VsbH17XHN2IDF9fXtcc2hwdHh0IA0KXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHM0OVxxbCBcbGkwXHJpMFxzbC0yMDBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IE9IU1VTQTo3NTgyOTY2NzIuMTAgDQpccGFyIA0KXHBhciB9fX17XHNocHJzbHR7XCpcZG9cZG9ieG1hcmdpblxkb2J5cGFyYVxkb2RoZ3Q4MjAxXGRwdHhieFxkcHR4bHJ0YntcZHB0eGJ4dGV4dFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxzNDlccWwgXGxpMFxyaTBcc2wtMjAwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMlxhbGFuZzEwMjUgDQpcbHRyY2hcZmNzMCBcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBPSFNVU0E6NzU4Mjk2NjcyLjEwIA0KXHBhciANClxwYXIgfX1cZHB4MFxkcHkwXGRweHNpemU0MDMyXGRweXNpemU0MDNcZHBmaWxsZmdjcjI1NVxkcGZpbGxmZ2NnMjU1XGRwZmlsbGZnY2IyNTVcZHBmaWxsYmdjcjI1NVxkcGZpbGxiZ2NnMjU1XGRwZmlsbGJnY2IyNTVcZHBmaWxscGF0MFxkcGxpbmVob2xsb3d9fX19e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGZzMjRcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ3ODY1NTMzIA0KXHBhciB9fVxwYXJkXHBsYWluIFxsdHJwYXJcczI1XHFjIFxsaTBccmkwXHNhMzAwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhZjFcYWZzMzJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xrZXJuaW5nMjhcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgRVhISUJJVCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxMzA3MTE3MCBGfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcbGluZSBGT1JNIE9GIEpPSU5ERVJcbGluZSBUT1xsaW5lIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1OTk4NiBSSVNJTkcgVFJFRX17XHJ0bGNoXGZjczEgDQpcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAgU0hBUkVEIEZBQ0lMSVRJRVMgQUdSRUVNRU5UfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE3XHFqIFxmaTc0MVxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IFJlZmVyZW5jZSBpcyBoZXJlYnkgbWFkZSB0byB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU5OTg2IFJpc2luZyBUcmVlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU5OTg2XGNoYXJyc2lkMTU0MDgxMjcgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgIFNoYXJlZCBGYWNpbGl0aWVzIEFncmVlbWVudCBkYXRlZCB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MTUwNDAzIEp1bmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU5OTg2IFtfX119e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICwgMjAxMCBieSBhbmQgYW1vbmcgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU5OTg2IFJpc2luZyBUcmVlfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ2NTk5ODZcY2hhcnJzaWQxNTQwODEyNyAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBXaW5kIEZhcm0gTExDLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTk5ODYgUmlzaW5nIFRyZWV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTk5ODZcY2hhcnJzaWQxNTQwODEyNyAgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IFdpbmQgRmFybSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTk5ODYgSUkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBMTEMgYW5kIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1OTk4NiBSaXNpbmcgVHJlZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNjU5OTg2XGNoYXJyc2lkMTU0MDgxMjcgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgV2luZCBGYXJtIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1OTk4NiBJSUkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBMTEMgKFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBTRkF9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXCc5NCkuIFVubGVzcyBvdGhlcndpc2UgaW5kaWNhdGVkLCBjYXBpdGFsaXplZCB0ZXJtcyB1c2VkIGJ1dCBub3QgZGVmaW5lZCBoZXJlaW4gc2hhbGwgaGF2ZSB0aGUgbWVhbmluZyBhc2NyaWJlZCB0byB0aGVtIGluIHRoZSBTRkEsIGFzIHRoZSBjb250ZXh0IGRpY3RhdGVzLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQoNClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBCeSBpdHMgZXhlY3V0aW9uIGJlbG93LCB0aGUgdW5kZXJzaWduZWQsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IFtpbnNlcnQgbmFtZSBhbmQgZm9ybS9qdXJpc2RpY3Rpb24gb2YgTmV3IENvLU93bmVyXX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgICh0aGUgXCc5M317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDU5MTgzMjkgTmV3IENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSBcJzk0KSwgYWdyZWVzIHRvIGJlY29tZSwgYW5kIGRvZXMgaGVyZWJ5IGJlY29tZSwgYSBDby1Pd25lciB3aXRoIHJlc3BlY3QgdG8gdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQ1OTE4MzI5IA0KW2Rlc2NyaWJlIFByb2plY3QgKG9yIHBvcnRpb24gdGhlcmVvZikgYmVpbmcgYWRkZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICAodGhlIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkNTkxODMyOSBOZXcgUHJvamVjdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXCc5NCkgdW5kDQplciB0aGUgU0ZBLCBhbmQgYWdyZWVzIHRvIGJlIGJvdW5kIGJ5IHRoZSBTRkEgZnJvbSBhbmQgYWZ0ZXIgdGhlIGRhdGUgaGVyZW9mLiBXaXRob3V0IGxpbWl0aW5nIHRoZSBmb3JlZ29pbmcsIGZyb20gYW5kIGFmdGVyIHRoZSBkYXRlIGhlcmVvZiwgYWxsIHJlZmVyZW5jZXMgaW4gdGhlIFNGQSB0byB0aGUgb3duZXIgb2YgdGhlIE5ldyBQcm9qZWN0IHNoYWxsIGJlIGRlZW1lZCB0byByZWZlciB0byBOZXcgQ28tT3duZXIufXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTc2NzM2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IEJ5IGl0cyBleGVjdXRpb24gYmVsb3csIE5ldyBDby1Pd25lciBjb3ZlbmFudHMsIHJlcHJlc2VudHMgYW5kIHdhcnJhbnRzIGFzIGZvbGxvd3M6fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkxODMyOSAxLlx0YWIgTmV3IENvLU93bmVyIHdpbGwgZXhwcmVzc2x5IGFzc3VtZSBpbiB3cml0aW5nIGFsbCBvYmxpZ2F0aW9ucyBhcyBhIENvLU93bmVyIHVuZGVyIHRoZSBTRkEgd2l0aCByZXNwZWN0IHRvIHRoZSBOZXcgUHJvamVjdCBhbmQgaXRzIE93bmVyc2hpcCBJbnRlcmVzdCBhbmQgVW5kaXZpZGVkIFVzZSBJbnRlcmVzdCAoaWYgYXBwDQpsaWNhYmxlKSB0byB0aGUgZXh0ZW50IG9mIHRoZSBOZXcgUHJvamVjdCwgaW4gZWFjaCBjYXNlIGFyaXNpbmcgb24gb3IgYWZ0ZXIgdGhlIGRhdGUgaGVyZW9mO317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgMi5cdGFiIFRoZSBhZm9yZW1lbnRpb25lZCBOZXcgUHJvamVjdCBpcyBpbiBhY2NvcmRhbmNlIHdpdGggU2VjdGlvblx+NC40IG9mIHRoZSBTRkE7IGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgMy5cdGFiIE5ldyBDby1Pd25lciB3aWxsIGNvbXBseSB3aXRoIGFsbCBjb3ZlbmFudHMgYW5kIG9ibGlnYXRpb25zIGNvbnRhaW5lZCBpbiB0aGUgU0ZBLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTkxODMyOSBbc2lnbmF0dXJlIHBhZ2UgZm9sbG93cy5dfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjE3NjczNiANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczI1XHFjIFxsaTBccmkwXHNhMzAwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhZjFcYWZzMzJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xrZXJuaW5nMjhcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5MTgzMjkgXHBhZ2UgU0lHTkFUVVJFIFBBR0UgVE9cbGluZSBKT0lOREVSXGxpbmUgVE9cbGluZSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTk5ODYgUklTSU5HIFRSRUV9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5ICBTSEFSRUQgRkFDSUxJVElFUyBBR1JFRU1FTlR9e1xydGxjaFxmY3MxIFxhZjEgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjE3NjczNiANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE3XHFqIFxmaTc0MVxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTE4MzI5IElOIFdJVE5FU1MgV0hFUkVPRiwgdGhlIHVuZGVyc2lnbmVkIGhhcyBleGVjdXRlZCBhbmQgZGVsaXZlcmVkIHRoaXMgam9pbmRlciB0byB0aGUgU0ZBIGFzIG9mIHRoaXMgX19fX18gZGF5IG9mIF9fX19fX19fX19fX19fX19fLCAyMF9fLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxNzY3MzYgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjE3NjczNiANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczI4XHFsIFxsaTQzMjBccmkwXHNhMjQwXHdpZGN0bHBhclx0cXJcdHg5MTc3XHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW40MzIwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcYlxpbnNyc2lkNTkxODMyOSBbSU5TRVJUIE5BTUUgT0YgTkVXIENPLU9XTkVSXVxsaW5lIFxsaW5lIFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDU5MTgzMjkgXHRhYiBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTE4MzI5IEJ5OlxsaW5lIE5hbWU6XGxpbmUgVGl0bGU6DQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDg0ODU3MzEgXHNlY3QgfVxzZWN0ZCBcbHRyc2VjdFxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVxzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDIxNzY3MzZcc2Z0bmJqIHtcZm9vdGVyciBcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJcczIyXHFsIFxsaTBccmkwXHdpZGN0bHBhcg0KXHRxY1x0eDQ2ODBcdHFyXHR4OTM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczE2XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczIyXHFjIFxsaTBccmkwXHdpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ3ODY1NTMzIHtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxmczI0XGluc3JzaWQzNDM4MDc4IEctfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCANClxsdHJjaFxmY3MwIFxmczI0XGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNzE2Mzc5OSAgUEFHRSAgIFxcKiBNRVJHRUZPUk1BVCB9fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDczNTc1MDIgNX19fVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgDQpcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDI5MTMxNDMge1xzaHB7XCpcc2hwaW5zdFxzaHBsZWZ0MFxzaHB0b3AwXHNocHJpZ2h0NDAzMlxzaHBib3R0b200MDNcc2hwZmhkcjFcc2hwYnhtYXJnaW5cc2hwYnhpZ25vcmVcc2hwYnlwYXJhXHNocGJ5aWdub3JlXHNocHdyM1xzaHB3cmswXHNocGZibHd0eHQwXHNocHoxMFxzaHBsaWQyMjM2DQp7XHNwe1xzbiBzaGFwZVR5cGV9e1xzdiAyMDJ9fXtcc3B7XHNuIGZGbGlwSH17XHN2IDB9fXtcc3B7XHNuIGZGbGlwVn17XHN2IDB9fXtcc3B7XHNuIGxUeGlkfXtcc3YgNzIwODk2fX17XHNwe1xzbiBkeFRleHRMZWZ0fXtcc3YgMH19e1xzcHtcc24gZHlUZXh0VG9wfXtcc3YgMH19e1xzcHtcc24gZHhUZXh0UmlnaHR9e1xzdiAwfX17XHNwe1xzbiBkeVRleHRCb3R0b219e1xzdiAwfX17XHNwe1xzbiBoc3BOZXh0fXtcc3YgMjIzNn19DQp7XHNwe1xzbiBmRml0U2hhcGVUb1RleHR9e1xzdiAxfX17XHNwe1xzbiBmRmlsbGVkfXtcc3YgMH19e1xzcHtcc24gZkxpbmV9e1xzdiAwfX17XHNwe1xzbiB3ek5hbWV9e1xzdiB6em1wVHJhaWxlcl8xMDc4XzExfX17XHNwe1xzbiBwb3NyZWxofXtcc3YgMH19e1xzcHtcc24gZGhndH17XHN2IDI1MTY2MTMxMn19e1xzcHtcc24gZlBzZXVkb0lubGluZX17XHN2IDB9fXtcc3B7XHNuIGZMYXlvdXRJbkNlbGx9e1xzdiAxfX17XHNocHR4dCANClxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxzNDlccWwgXGxpMFxyaTBcc2wtMjAwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBPSFNVU0E6NzU4Mjk2NjcyLjEwIA0KXHBhciANClxwYXIgfX19e1xzaHByc2x0e1wqXGRvXGRvYnhtYXJnaW5cZG9ieXBhcmFcZG9kaGd0ODIwMlxkcHR4YnhcZHB0eGxydGJ7XGRwdHhieHRleHRcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJcczQ5XHFsIFxsaTBccmkwXHNsLTIwMFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjJcYWxhbmcxMDI1IA0KXGx0cmNoXGZjczAgXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggT0hTVVNBOjc1ODI5NjY3Mi4xMCANClxwYXIgDQpccGFyIH19XGRweDBcZHB5MFxkcHhzaXplNDAzMlxkcHlzaXplNDAzXGRwZmlsbGZnY3IyNTVcZHBmaWxsZmdjZzI1NVxkcGZpbGxmZ2NiMjU1XGRwZmlsbGJnY3IyNTVcZHBmaWxsYmdjZzI1NVxkcGZpbGxiZ2NiMjU1XGRwZmlsbHBhdDBcZHBsaW5laG9sbG93fX19fXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxmczI0XGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNzg2NTUzMyANClxwYXIgfX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyOFxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcdHFyXHR4OTE3N1x3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDg0ODU3MzEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxjczQ1XGJcaW5zcnNpZDg0ODU3MzFcY2hhcnJzaWQxMzUwNzMxMiB7XCpcYmtta3N0YXJ0IF9EVl9DNTN9RVhISUJJVCB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGNzNDVcYlxpbnNyc2lkMTMwNzExNzAge1wqXGJrbWtlbmQgX0RWX0M1M31HfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIA0KXGJcaW5zcnNpZDg0ODU3MzFcY2hhcnJzaWQxMzUwNzMxMiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxjczQ1XGJcaW5zcnNpZDE1Njg0NTk3XGNoYXJyc2lkMTM1MDczMTIge1wqXGJrbWtzdGFydCBfRFZfQzU0fUZPUk0gT0YgTUVNT1JBTkRVTX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkODQ4NTczMVxjaGFycnNpZDEzNTA3MzEyIHtcKlxia21rZW5kIF9EVl9DNTR9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDk1NzQyNDUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTU2ODQ1OTcgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk1NzQyNDVcY2hhcnJzaWQxNTY4NDU5NyBSRUNPUkRJTkcgUkVRVUVTVEVEIEJZfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTU3NDI0NVxjaGFycnNpZDE1Njg0NTk3IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NTc0MjQ1XGNoYXJyc2lkMTU2ODQ1OTcgQU5EIFdIRU4gUkVDT1JERUQgTUFJTCBUTzoNClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTU3NDI0NVxjaGFycnNpZDE1Njg0NTk3IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzMzcxOTA5XGNoYXJyc2lkMTU2ODQ1OTcgUklTSU5HIFRSRUUgV0lORCBGQVJNIExMQ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk1NzQyNDVcY2hhcnJzaWQxNTY4NDU5NyANClxwYXIgODA4IFRyYXZpcywgU3VpdGUgNzAwDQpccGFyIEhvdXN0b24sIFRYIDc3MDAyDQpccGFyIEF0dG46IEdlbmVyYWwgQ291bnNlbA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5NTc0MjQ1XGNoYXJyc2lkNzQ4NjUzMCBcdGFiIFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMjVccWMgXGxpMFxyaTBcc2EzMDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ5NTc0MjQ1IFxydGxjaFxmY3MxIFxhYlxhZjFcYWZzMzJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGtlcm5pbmcyOFxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDk1NzQyNDUgTUVNT1JBTkRVTSBPRlxsaW5lIFNIQVJFRCBGQUNJTElUfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU5OTg2IEl9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ5NTc0MjQ1IA0KRVMgQUdSRUVNRU5UIEFORFxsaW5lIEdSQU5UIE9GIFJJR0hUUw0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTdccWogXGZpNzQxXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkOTU3NDI0NSBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NTc0MjQ1IFRISVMgTUVNT1JBTkRVTSBPRiBTSEFSRUQgRkFDSUxJVElFUyBBR1JFRU1FTlQgQU5EIEdSQU5UIE9GIFJJR0hUUyAodGhpcyBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTU3NDI0NVxjaGFycnNpZDEwMzc4NDQxIE1lbW9yYW5kdW19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NTc0MjQ1IFwnOTQNCiksIGlzIG1hZGUgYW5kIGVudGVyZWQgaW50byBhcyBvZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ3NzQ2NjkyIERlY2VtYmVyIDMsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTU3NDI0NSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU5OTg2IDIwMTQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTU3NDI0NSAodGhlIFwnOTN9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDc3NDY2OTIgRXhlY3V0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNzc0NjY5MlxjaGFycnNpZDEwMzc4NDQxICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5NTc0MjQ1XGNoYXJyc2lkMTAzNzg0NDEgRGF0ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk1NzQyNDUgXCc5NA0KKSwgYnkgYW5kIGFtb25nIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1OTk4NiBSaXNpbmcgVHJlZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk1NzQyNDVcY2hhcnJzaWQxNTQwODEyNyAgV2luZCBGYXJtIExMQyAoXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1OTk4NiBSaXNpbmcgVHJlZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNjU5OTg2XGNoYXJyc2lkMTU0MDgxMjcgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1OTk4NiBJfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTU3NDI0NVxjaGFycnNpZDE1NDA4MTI3IFwnOTQpLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTk5ODYgUmlzaW5nIFRyZWV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDY1OTk4NlxjaGFycnNpZDE1NDA4MTI3ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NTc0MjQ1XGNoYXJyc2lkMTU0MDgxMjcgV2luZCBGYXJtIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1OTk4NiBJSX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1OTk4NlxjaGFycnNpZDE1NDA4MTI3ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDk1NzQyNDVcY2hhcnJzaWQxNTQwODEyNyBMTEMgKFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTk5ODYgUmlzaW5nIFRyZWV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTk5ODZcY2hhcnJzaWQxNTQwODEyNyAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU5OTg2IElJfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ5NTc0MjQ1XGNoYXJyc2lkMTU0MDgxMjcgXCc5NCksIGFuZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTk5ODYgUmlzaW5nIFRyZWV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTk5ODZcY2hhcnJzaWQxNTQwODEyNyAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTU3NDI0NVxjaGFycnNpZDE1NDA4MTI3IFdpbmQgRmFybSB9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1OTk4NiBJSUl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTk5ODZcY2hhcnJzaWQxNTQwODEyNyAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTU3NDI0NVxjaGFycnNpZDE1NDA4MTI3IExMQyAoXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1OTk4NiBSaXNpbmcgVHJlZX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkNjU5OTg2XGNoYXJyc2lkMTU0MDgxMjcgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1OTk4NiBJSUl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NTc0MjQ1XGNoYXJyc2lkMTU0MDgxMjcgXCc5NCksIGVhY2ggb2Ygd2hpY2ggaXMgYSBEZWxhd2FyZSBsaW1pdGVkIGxpYWJpbGl0eSBjb21wYW55LiAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNjU5OTg2IFJpc2luZyBUcmVlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU5OTg2XGNoYXJyc2lkMTU0MDgxMjcgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1OTk4NiBJLCBSaXNpbmcgVHJlZSBJSSBhbmQgUmlzaW5nIFRyZWV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTk5ODZcY2hhcnJzaWQxNTQwODEyNyAgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ2NTk5ODYgSUlJIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk1NzQyNDVcY2hhcnJzaWQxNTQwODEyNyBhcmUgc29tZXRpbWVzIHJlZmVycmVkIHRvIGhlcmVpbiBpbmRpdmlkdWFsbHkgYXMgYSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTU3NDI0NVxjaGFycnNpZDg4NjUwNTcgQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDk1NzQyNDVcY2hhcnJzaWQxNTQwODEyNyBcJzk0IGFuZCBjb2xsZWN0aXZlbHkgYXMgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDk1NzQyNDVcY2hhcnJzaWQ4ODY1MDU3IENvLU93bmVyc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk1NzQyNDVcY2hhcnJzaWQxNTQwODEyNyBcJzk0DQouIFRoZSBDby1Pd25lcnMgYXJlIGNvbGxlY3RpdmVseSByZWZlcnJlZCB0byBoZXJlaW4gYXMgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDk1NzQyNDVcY2hhcnJzaWQ4ODY1MDU3IFBhcnRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5NTc0MjQ1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NTc0MjQ1XGNoYXJyc2lkMTU0MDgxMjcgDQogYW5kIGluZGl2aWR1YWxseSBhcyBhIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5NTc0MjQ1XGNoYXJyc2lkODg2NTA1NyBQYXJ0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk1NzQyNDVcY2hhcnJzaWQxNTQwODEyNyBcJzk0Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk1NzQyNDUgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxXHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkNTkwODM4IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTIwNDQyNyB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzOTF9QS5cdGFiIH17XHJ0bGNoXGZjczEgXGFiMFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzOTUxNDI1XGNoYXJyc2lkMzk1MTQyNSBUaGUgUGFydGllcyBoYXZlIGVudGVyZWQgaW50byB0aGF0IGNlcnRhaW4gdW5yZWNvcmRlZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcYjBcaW5zcnNpZDY1OTk4NlxjaGFycnNpZDk0NDY3NSBSaXNpbmcgVHJlZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1OTk4NlxjaGFycnNpZDE1NDA4MTI3ICB9e1xydGxjaFxmY3MxIFxhYjBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzk1MTQyNVxjaGFycnNpZDM5NTE0MjUgU2hhcmVkIEZhY2lsaXRpZXMgQWdyZWVtZW50IG9mIGV2ZW4gZGF0ZSBoZXJld2l0aH17XHJ0bGNoXGZjczEgXGFiMFxhZjAgDQpcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDUzOTE2MzQgIH17XHJ0bGNoXGZjczEgXGFiMFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzOTUxNDI1XGNoYXJyc2lkMzk1MTQyNSAodGhlIFwnOTN9e1xydGxjaFxmY3MxIFxhYjBcYWYwIFxsdHJjaFxmY3MwIFxiMFx1bFxpbnNyc2lkMzk1MTQyNVxjaGFycnNpZDM5NTE0MjUgQWdyZWVtZW50fXtccnRsY2hcZmNzMSBcYWIwXGFmMCBcbHRyY2hcZmNzMCANClxiMFxpbnNyc2lkMzk1MTQyNVxjaGFycnNpZDM5NTE0MjUgXCc5NCksIHdoaWNoIGFmZmVjdHMgKGkpIGNlcnRhaW4gcmVhbCBwcm9wZXJ0eSBtb3JlIHBhcnRpY3VsYXJseSBkZXNjcmliZWQgaW4gRXhoaWJpdCBBIGF0dGFjaGVkIGhlcmV0byBhbmQgbWFkZSBhIHBhcnQgaGVyZW9mIChzdWNoIHJlYWwgcHJvcGVydHkgY29sbGVjdGl2ZWx5LCB0aGUgXCc5M317XHJ0bGNoXGZjczEgXGFiMFxhZjAgXGx0cmNoXGZjczAgDQpcYjBcdWxcaW5zcnNpZDM5NTE0MjVcY2hhcnJzaWQzOTUxNDI1IFByb3BlcnR5fXtccnRsY2hcZmNzMSBcYWIwXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDM5NTE0MjVcY2hhcnJzaWQzOTUxNDI1IFwnOTQpLn17XHJ0bGNoXGZjczEgXGFiMFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQxMzUwNzMxMiB7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzkxfQ0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjA0NDI3IHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzM5Mn1CLlx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkNTkwODM4XGNoYXJyc2lkNTkwODM4IA0KVGhlIFBhcnRpZXMgaGF2ZSBleGVjdXRlZCBhbmQgYWNrbm93bGVkZ2VkIHRoaXMgTWVtb3JhbmR1bSBhbmQgYXJlIHJlY29yZGluZyB0aGUgc2FtZSBmb3IgdGhlIHB1cnBvc2Ugb2YgcHJvdmlkaW5nIGNvbnN0cnVjdGl2ZSBub3RpY2Ugb2YgdGhlIEFncmVlbWVudCBhbmQgdGhlIFBhcnRpZXNccnF1b3RlIA0KIHJpZ2h0cyB0aGVyZXVuZGVyLiAgQ2FwaXRhbGl6ZWQgdGVybXMgdXNlZCBhbmQgbm90IGRlZmluZWQgaGVyZWluIGhhdmUgdGhlIG1lYW5pbmcgZ2l2ZW4gdGhlIHNhbWUgaW4gdGhlIEFncmVlbWVudC57XCpcYmtta2VuZCBfVG9jNDA0MDEzMzkyfQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNFxxaiBcbGkxNDQwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWwzXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDEwNTYyMjUzIFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjhcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk1NzQyNDUgTk9XLCBUSEVSRUZPUkUsIHRoZSBQYXJ0aWVzIGhlcmVieSBhZ3JlZSBhcyBmb2xsb3dzOn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwNTYyMjUzIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNFxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWwzXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDEwNTYyMjUzIHtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxpbnNyc2lkMTA1NjIyNTMgMS5cdGFiIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCANClxiXGluc3JzaWQ5NTc0MjQ1XGNoYXJyc2lkMTA1NjIyNTMgR3JhbnQgb2YgUmlnaHRzfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxpbnNyc2lkOTU3NDI0NVxjaGFycnNpZDEwNTYyMjUzIC4gIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM5NTE0MjVcY2hhcnJzaWQxMDU2MjI1MyANClN1YmplY3QgdG8gdGhlIHRlcm1zIGFuZCBjb25kaXRpb25zIG9mIHVzZSBzZXQgZm9ydGggaW4gdGhlIEFncmVlbWVudCBhbmQgdGhlIHRlcm1zIGFuZCBjb25kaXRpb25zIGluIGVhY2ggb2YgdGhlIFNoYXJlZCBSZWFsIFByb3BlcnR5IEFncmVlbWVudHN9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGluc3JzaWQxMDU2MjI1MyA6fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxMzUwNzMxMlxjaGFycnNpZDEwNTYyMjUzIA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNCBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI4IFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU5OTg2IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChhKVx0YWJ9fVxwYXJkIFxsdHJwYXJcczRccWogXGZpNzIwXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgyMTYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMyXGlsdmwzXG91dGxpbmVsZXZlbDNcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjU5OTg2IA0KZWFjaCBDby1Pd25lciBvZiBTaGFyZWQgRmFjaWxpdGllcyBhbmQvb3IgU2hhcmVkIFJlYWwgUHJvcGVydHkgaW4gYSBTaGFyZWQgQXNzZXRzIEdyb3VwIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM5NTQyOTkgKGEgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQzOTU0Mjk5XGNoYXJyc2lkNTUyNDMzMSBHcmFudGluZyBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMzk1NDI5OSBcJzk0KSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NTk5ODYgaGVyZWJ5IHNlbGxzLCBncmFudHMsIGFzc2lnbnMsIHRyYW5zZmVycyBhbmQgY29udmV5cyB0byB0aGUgb3RoZXIgQ28tT3duZXJzIG9mIFNoYXJlZCBGYWNpbGl0aWVzIGFuZC9vciBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBpbiBzdWNoIFNoYXJlZCBBc3NlDQp0cyBHcm91cCBhbiB1bmRpdmlkZWQgaW50ZXJlc3QsIGFzIHRlbmFudHMtaW4tY29tbW9uLCBpbiBzdWNoIFNoYXJlZCBBc3NldHMgR3JvdXAsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM5NTQyOTkgDQppbmNsdWRpbmcgc3VjaCByaWdodHMsIGJlbmVmaXRzIGFuZCBpbnRlcmVzdHMgYXMgdGhlIEdyYW50aW5nIENvLU93bmVyIG1heSBoYXZlIGluLCB0byBvciB1bmRlciBhbnkgZGVlZHMsIGNvbnZleWFuY2VzLCBncmFudHMsIGVhc2VtZW50cywgYWdyZWVtZW50cywgbGVhc2VzIG9yIG90aGVyIGluc3RydQ0KbWVudHMgb3IgZG9jdW1lbnRzIGNyZWF0aW5nLCBncmFudGluZywgYXNzaWduaW5nIG9yIGNvbnZleWluZyB0aGUgR3JhbnRpbmcgQ28tT3duZXIgaXRzIHJpZ2h0LCB0aXRsZSBhbmQgaW50ZXJlc3QgaW4gc3VjaCBTaGFyZWQgQXNzZXQgR3JvdXAsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY1OTk4NiANCnN1Y2ggdGhhdCBlYWNoIHN1Y2ggQ28tT3duZXIgc2hhbGwgb3duIGFuIHVuZGl2aWRlZCBpbnRlcmVzdCwgYXMgYSB0ZW5hbnQtaW4tY29tbW9uLCBpbiB0aGUgYXBwbGljYWJsZSBTaGFyZWQgQXNzZXRzIEdyb3VwIGVxdWFsIHRvIGl0cyBQcm9wb3J0aW9uYXRlIFNoYXJlIGluIHN1Y2ggU2hhcmVkIEFzc2V0cyBHcm91cCBhcyBkZXNjcmliZWQgaW4gRXhoaWJpdCBCIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCANClxpbnNyc2lkOTU3NDI0NVxjaGFycnNpZDEzNTA3MzEyIGF0dGFjaGVkIHRvIHRoZSBBZ3JlZW1lbnQ7fXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxpbnNyc2lkMzk1NDI5OSAgfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkwODM4XGNoYXJyc2lkMTM1MDczMTIgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM0IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjggXGx0cmNoXGZjczAgXGluc3JzaWQzOTU0Mjk5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChiKVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzk1NDI5OSANCmVhY2ggQ28tT3duZXIgd2hvIGhhcyBhbiBPd25lcnNoaXAgSW50ZXJlc3QgaW4gYSBTaGFyZWQgQXNzZXRzIEdyb3VwIHNoYWxsIGhhdmUgYW4gdW5kaXZpZGVkIHJpZ2h0IHRvIHRoZSB1c2Ugb3IgY2FwYWNpdHkgb2YgdGhlIFNoYQ0KcmVkIEFzc2V0cyBpbiBzdWNoIFNoYXJlZCBBc3NldCBHcm91cCBlcXVhbCB0byBpdHMgUHJvcG9ydGlvbmF0ZSBTaGFyZSB0aGVyZWluLCB3aGljaCByaWdodCBpcyBleGVyY2lzYWJsZSB1cG9uIHRoZSBDb21taXNzaW9uaW5nIERhdGUgb2YgaXRzIEZhY2lsaXR5LCBhbGwgYXMgbW9yZSBwYXJ0aWN1bGFybHkgc2V0IGZvcnRoIGluIHRoZSBBZ3JlZW1lbnQuICBJbiBhZGRpdGlvbiwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDY5Mjg0OCBlYWNoIENvLU93bmVyIHNoYWxsIGhhdmUgYSBub24tZXhjbHVzaXZlIHJpZ2h0IG9mIGFjY2VzcyAoYSlcfnRvIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBpbiB3aGljaCBpdCBoYXMgYW4gVW5kaXZpZGVkIFVzZSBJbnRlcmVzdCBhcyBwcm92aWRlZCBpbiB0aGUgQWdyZWVtZW50LCBhbmQgKGIpXH4NCm92ZXIgYW55IFNoYXJlZCBSZWFsIFByb3BlcnR5IHVuZGVybHlpbmcgb3IgcmVxdWlyZWQgZm9yIHRoZSB1c2Ugb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzIGluIHdoaWNoIHN1Y2ggQ28tT3duZXIgaGFzIGFuIFVuZGl2aWRlZCBVc2UgSW50ZXJlc3QsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk1NzQyNDUgc3ViamVjdCB0byB0aGUgdGVybXMgYW5kIGNvbmRpdGlvbnMgY29udGFpbmVkIGluIHRoZSBBZ3JlZW1lbnQuIA0KfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkwODM4IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDk0NDY3NSBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDU5MDgzOFxjaGFycnNpZDU5MDgzOCB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzOTN9Mi59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ4NjA4NjIgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NTc0MjQ1XGNoYXJyc2lkNDQ4MTgyNSBUZXJtfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGIwXGluc3JzaWQ1OTA4MzhcY2hhcnJzaWQ1OTA4MzggLiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQxNDY5Mjg0OFxjaGFycnNpZDk0NDY3NSBUaGlzIEFncmVlbWVudCBpcyBlZmZlY3RpdmUgYXMgb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzM3MTkwOSB0aGUgRWZmZWN0aXZlIERhdGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcYjBcaW5zcnNpZDE0NjkyODQ4XGNoYXJyc2lkOTQ0Njc1ICBhbmQgc2hhbGwgcmVtYWluIGluIGZvcmNlIGFuZCBlZmZlY3QgdW50aWwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzM3MTkwOSAoaSkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMTQ2OTI4NDhcY2hhcnJzaWQ5NDQ2NzUgdGhlIGVhcmxpZXN0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxiMFxpbnNyc2lkMTQ2OTI4NDhcY2hhcnJzaWQ3NzQ2NjkyIG9mIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDc3NDY2OTJcY2hhcnJzaWQ3NzQ2NjkyICh2KVx+dGhlIGRhdGUgdGhhdCBpcyB0aGlydHktZml2ZSAoMzUpIHllYXJzIGFmdGVyIHRoZSBFZmZlY3RpdmUgRGF0ZSwgKHcpIHRoZSBleHBpcmF0aW9uIGRhdGUgb2YgdGhlIEludGVyY29ubmVjdGlvbiBBZ3JlZW1lbnQsfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ3NzQ2NjkyICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQxNDY5Mjg0OFxjaGFycnNpZDk0NDY3NSAgKHgpIHRoZSBkYXRlIHRoYXQgYWxsIGludGVyZXN0cyBpbiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgYW5kIHRoZSBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBhcmUgb3duZWQgYnkgYSBzaW5nbGUgUGVyc29uLCAoeSlcfg0KdGhlIHJldGlyZW1lbnQgYW5kIGZpbmFsIGRpc3Bvc2l0aW9uIG9mIGFsbCBjb21wb25lbnRzIG9mIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBhbmQgYWxsIFNoYXJlZCBSZWFsIFByb3BlcnR5LCBhbmQgKHopIHRoZSBkYXRlIHRoYXQgYWxsIENvLU93bmVycyBhbmQgdGhlaXIgTGVuZGVycyB1bmFuaW1vdXNseSBhZ3JlZSB0byB0ZXJtaW5hdGUgdGhpcyBBZ3JlZW1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcYjBcaW5zcnNpZDMzNzE5MDkgLCBvciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzMzcxOTA5XGNoYXJyc2lkNzc0MzczMiAoaWkpIHN1Y2ggb3RoZXIgZGF0ZSAoYnV0IG5vIGxhdGVyIHRoYW4gbmluZXR5LW5pbmUgKDk5KSB5ZWFycyBhZnRlciB0aGUgRWZmZWN0aXZlIERhdGUpIGFzIG1heSBiZSB1bmFuaW1vdXNseSBhZ3JlZWQgYnkgYWxsIG9mIHRoZSBDby1Pd25lcnMgYW5kIHRoZWlyIExlbmRlcnN9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDE0NjkyODQ4XGNoYXJyc2lkOTQ0Njc1IC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTA4Mzgge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzM5M30NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkODYwODYyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzM5NH0zLlx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTU3NDI0NVxjaGFycnNpZDQ0ODE4MjUgT3RoZXIgUHJvdmlzaW9uc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk1NzQyNDUgLiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcYjBcaW5zcnNpZDU5MDgzOFxjaGFycnNpZDU5MDgzOCBUaGUgcmlnaHRzIGdyYW50ZWQgaGVyZXVuZGVyIGFyZSBvZiB0aGUgbmF0dXJlLCBhbmQgYXJlIHN1YmplY3QgdG8gdGhlIHJlcXVpcmVtZW50cyBhbmQgbGltaXRhdGlvbnMsIHNldCBmb3J0aCBpbiB0aGUgQWdyZWVtZW50LiBUaGUgQWdyZWVtZW50IGFsc28gY29udGFpbnMgdmFyaW91cyBjb3ZlbmFuDQp0cywgb2JsaWdhdGlvbnMgYW5kIHJpZ2h0cyBvZiB0aGUgUGFydGllcywgaW5jbHVkaW5nLCB3aXRob3V0IGxpbWl0YXRpb24sIHByb3Zpc2lvbnMgcmVsYXRpbmcgdG8gdXNlLCBjb25kdWN0IG9mIG9wZXJhdGlvbnMsIGFzc2lnbm1lbnQsIG93bmVyc2hpcCBvZiBpbXByb3ZlbWVudHMsIGZlZXMsIGRlZmF1bHQsIGN1cmUgcmlnaHRzIGFuZCBsZW5kZXIgcHJvdGVjdGlvbnMufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1OTA4Mzgge1wqXGJrbWtlbmQgX1RvYzQwNDAxMzM5NH0NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkODYwODYyIHtcKlxia21rc3RhcnQgX1RvYzQwNDAxMzM5NX00Llx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTU3NDI0NVxjaGFycnNpZDQ0ODE4MjUgUHVycG9zZSBvZiB0aGlzIE1lbW9yYW5kdW19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NTc0MjQ1IC4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGIwXGluc3JzaWQ1OTA4MzhcY2hhcnJzaWQ1OTA4MzggVGhlIHRlcm1zLA0KIGNvbmRpdGlvbnMgYW5kIGNvdmVuYW50cyBvZiB0aGUgQWdyZWVtZW50IGFyZSBpbmNvcnBvcmF0ZWQgaGVyZWluIGJ5IHJlZmVyZW5jZSBhcyB0aG91Z2ggZnVsbHkgc2V0IGZvcnRoIGhlcmVpbi4gVGhpcyBNZW1vcmFuZHVtIGRvZXMgbm90IHN1cGVyc2VkZSwgbW9kaWZ5LCBhbWVuZCBvciBvdGhlcndpc2UgY2hhbmdlIHRoZSB0ZXJtcywgY29uZGl0aW9ucyBvciBjb3ZlbmFudHMgb2YgdGhlIEFncmVlbWVudCwgYW5kIHRoaXMgTWVtb3JhbmR1DQptIHNoYWxsIG5vdCBiZSB1c2VkIGluIGludGVycHJldGluZyB0aGUgdGVybXMsIGNvbmRpdGlvbnMgb3IgY292ZW5hbnRzIG9mIHRoZSBBZ3JlZW1lbnQuIEluIHRoZSBldmVudCBvZiBhbnkgY29uZmxpY3QgYmV0d2VlbiB0aGlzIE1lbW9yYW5kdW0gYW5kIHRoZSBBZ3JlZW1lbnQsIHRoZSBBZ3JlZW1lbnQgc2hhbGwgY29udHJvbC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTA4MzggDQp7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzk1fQ0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQ4NjA4NjIge1wqXGJrbWtzdGFydCBfVG9jNDA0MDEzMzk2fTUuXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NTc0MjQ1XGNoYXJyc2lkNDQ4MTgyNSBCaW5kaW5nIG9uIFN1Y2Nlc3NvcnMgYW5kIEFzc2lnbnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NTc0MjQ1IC4gIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkNTkwODM4XGNoYXJyc2lkNTkwODM4IFRoZSBQYXJ0aWVzIGhlcmVieSBhZ3JlZSB0aGENCnQgYWxsIG9mIHRoZSBjb3ZlbmFudHMsIGNvbnNlbnRzIGFuZCBhZ3JlZW1lbnRzIGNvbnRhaW5lZCBpbiB0aGUgQWdyZWVtZW50IHRvdWNoIGFuZCBjb25jZXJuIHRoZSBQcm9wZXJ0eSBhbmQgYXJlIGV4cHJlc3NseSBpbnRlbmRlZCB0bywgYW5kIHNoYWxsLCBiZSBjb3ZlbmFudHMgcnVubmluZyB3aXRoIHRoZSBsYW5kIGFuZCBzaGFsbCBiZSBiaW5kaW5nIGFuZCBhIGJ1cmRlbiB1cG9uIHNhaWQgcmVhbCBlc3RhdGUgYW5kIGVhY2ggUGFydHkNClxycXVvdGUgcyANCnByZXNlbnQgb3IgZnV0dXJlIGVzdGF0ZSBvciBpbnRlcmVzdCB0aGVyZWluIGFuZCB1cG9uIGVhY2ggb2YgdGhlIFBhcnRpZXMsIHRoZWlyIHJlc3BlY3RpdmUgc3VjY2Vzc29ycyBhbmQgYXNzaWducyBhcyBob2xkZXJzIG9mIGFuIGVzdGF0ZSBvciBpbnRlcmVzdCBpbiBzYWlkIHJlYWwgZXN0YXRlIChpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uLCBhbnkgbGVuZGVyIG9yIG90aGVyIHBlcnNvbiBhY3F1aXJpbmcgdGl0bGUgZnJvbSBhbnkgcw0KdQ0KY2ggcGVyc29uIHVwb24gZm9yZWNsb3N1cmUgb3IgYnkgZGVlZCBpbiBsaWV1IG9mIGZvcmVjbG9zdXJlKSwgYW5kIHNoYWxsIGJlbmVmaXQgdGhlIFBhcnRpZXMgYW5kIHRoZWlyIHJlc3BlY3RpdmUgc3VjY2Vzc29ycyBhbmQgYXNzaWducyBhbmQgdGhlIHJlYWwgZXN0YXRlIGFuZCBhbnkgcHJlc2VudCBvciBmdXR1cmUgaG9sZGVyIG9mIGFuIGVzdGF0ZSBvciBpbnRlcmVzdCB0aGVyZWluLiAgVG8gdGhlIGV4dGVudCBhbnkgb2YgdGhlIHByb3ZpDQpzaW9ucyBvZiB0aGlzIEFncmVlbWVudCBhcmUgbm90IGVuZm9yY2VhYmxlIGFzIGNvdmVuYW50cyBydW5uaW5nIHdpdGggdGhlIGxhbmQsIHRoZXkgc2hhbGwgYmUgZW5mb3JjZWFibGUgYXMgZXF1aXRhYmxlIHNlcnZpdHVkZXMufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTkwODM4IHtcKlxia21rZW5kIF9Ub2M0MDQwMTMzOTZ9DQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDg2MDg2MiB7XCpcYmtta3N0YXJ0IF9Ub2M0MDQwMTMzOTd9Ni5cdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk1NzQyNDVcY2hhcnJzaWQ0NDgxODI1IENvdW50ZXJwYXJ0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk1NzQyNDUgLiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcYjBcaW5zcnNpZDU5MDgzOFxjaGFycnNpZDU5MDgzOCBUaGlzIE1lbW9yYW5kdW0gbWF5IGJlIGV4ZWN1dGVkIGluIGNvdW50ZXJwYXJ0cywgZWFjaCBvZiB3aGljaCBzaGFsbCBiZSBkZWVtZWQgYW4gb3JpZ2luYWwgYW5kIGFsbCBvZiB3aGljaCB3aGVuIHRha2VuIHRvZ2V0aGVyIHNoYWxsIGNvbnN0aXR1dGUgb25lIGFuZCB0aGUgc2FtZSBkb2N1bWVudC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1OTA4MzggDQp7XCpcYmtta2VuZCBfVG9jNDA0MDEzMzk3fQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkOTU3NDI0NSBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWJcYWYwIA0KXGx0cmNoXGZjczAgXGJcaW5zcnNpZDk1NzQyNDVcY2hhcnJzaWQ0NDgxODI1IFtTSUdOQVRVUkVTIE9OIE5FWFQgUEFHRV19e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDk1NzQyNDUgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxN1xxaiBcZmk3NDFcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ5NTc0MjQ1IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIA0KXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkOTU3NDI0NSAgXHBhZ2UgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTU3NDI0NSBJTiBXSVRORVNTIFdIRVJFT0YsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExOTQ1Nzc2IHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NTc0MjQ1IA0KaGUgUGFydGllcyBoYXZlIGNhdXNlZCB0aGlzIE1lbW9yYW5kdW0gdG8gYmUgZXhlY3V0ZWQgYXMgb2YgdGhlIGRhdGUgZmlyc3Qgd3JpdHRlbiBhYm92ZS4NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczI4XHFsIFxsaTQzMjBccmkwXHNhMjQwXHdpZGN0bHBhclx0cXJcdHg5MjM0XHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW40MzIwXGl0YXAwXHBhcmFyc2lkOTU3NDI0NSBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0NjkyODQ4IFJpc2luZyBUcmVlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQ5NTc0MjQ1ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDExOTQ1Nzc2IFdpbmQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQ5NTc0MjQ1IEZhcm0gTExDXGxpbmUgXGxpbmUgXGxpbmUgfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5NTc0MjQ1IFx0YWIgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTU3NDI0NSBCeTpcbGluZSBUaXRsZToNClxwYXIgfVxwYXJkIFxsdHJwYXJcczI4XHFsIFxsaTQzMjBccmkwXHNhMjQwXHdpZGN0bHBhclx0cXJcdHg5MjM0XHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW40MzIwXGl0YXAwXHBhcmFyc2lkMTE4NjQ4MzUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDExODY0ODM1IFxsaW5lIFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTE4NjQ4MzUgXHRhYiBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTg2NDgzNSBCeTpcbGluZSBUaXRsZToNClxwYXIgfVxwYXJkIFxsdHJwYXJcczI4XHFsIFxsaTQzMjBccmkwXHNhMjQwXHdpZGN0bHBhclx0cXJcdHg5MjM0XHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW40MzIwXGl0YXAwXHBhcmFyc2lkOTU3NDI0NSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk1NzQyNDUgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQ2OTI4NDggUmlzaW5nIFRyZWUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQ5NTc0MjQ1IFdpbmQgRmFybSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0NjkyODQ4IElJIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkOTU3NDI0NSBMTENcbGluZSBcbGluZSBcbGluZSB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDk1NzQyNDUgXHRhYiBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NTc0MjQ1IEJ5OlxsaW5lIFRpdGxlOg0KXHBhciB9XHBhcmQgXGx0cnBhclxzMjhccWwgXGxpNDMyMFxyaTBcc2EyNDBcd2lkY3RscGFyXHRxclx0eDkyMzRcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjQzMjBcaXRhcDBccGFyYXJzaWQxMTg2NDgzNSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTE4NjQ4MzUgXGxpbmUgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxMTg2NDgzNSBcdGFiIFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExODY0ODM1IEJ5OlxsaW5lIFRpdGxlOg0KXHBhciB9XHBhcmQgXGx0cnBhclxzMjhccWwgXGxpNDMyMFxyaTBcc2EyNDBcd2lkY3RscGFyXHRxclx0eDkyMzRcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjQzMjBcaXRhcDBccGFyYXJzaWQ5NTc0MjQ1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxMTg2NDgzNSANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDY5Mjg0OCBSaXNpbmcgVHJlZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDk1NzQyNDVcY2hhcnJzaWQ1MDU4NzU0IFdpbmQgRmFybSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0NjkyODQ4IElJSX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxiXGluc3JzaWQxNDY5Mjg0OFxjaGFycnNpZDUwNTg3NTQgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkOTU3NDI0NVxjaGFycnNpZDUwNTg3NTQgTExDDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk1NzQyNDUgIF9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXw0KXHBhciB9XHBhcmQgXGx0cnBhclxzMjhccWwgXGxpNDMyMFxyaTBcd2lkY3RscGFyXHRxclx0eDkyMzRcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjQzMjBcaXRhcDBccGFyYXJzaWQ5NTc0MjQ1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTU3NDI0NSBCeToNClxwYXIgVGl0bGU6DQpccGFyIH1ccGFyZCBcbHRycGFyXHMyOFxxbCBcbGk0MzIwXHJpMFxzYTI0MFx3aWRjdGxwYXJcdHFyXHR4OTIzNFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNDMyMFxpdGFwMFxwYXJhcnNpZDExODY0ODM1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxMTg2NDgzNSBcbGluZSBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDExODY0ODM1IFx0YWIgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTE4NjQ4MzUgQnk6XGxpbmUgVGl0bGU6DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ5NTc0MjQ1IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NjkyODQ4IFtBZGQgbm90YXJpYWwgYWNrbm93bGVkZ21lbnRzXQ0KXHBhciB9XHBhcmQgXGx0cnBhclxzMTVccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTU2ODQ1OTcge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NTc0MjQ1IFxwYWdlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkOTU3NDI0NVxjaGFycnNpZDE1Njg0NTk3IEVYSElCSVQgQQ0KDQpccGFyIH1ccGFyZCBcbHRycGFyXHMxNVxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcdHgyODgwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkOTU3NDI0NSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTU2ODQ1OTdcY2hhcnJzaWQxNTY4NDU5NyBERVNDUklQVElPTiBPRiBUSEUgUFJPUEVSVFl9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcYlxpbnNyc2lkOTU3NDI0NVxjaGFycnNpZDE1Njg0NTk3IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NTc0MjQ1IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMjhccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTU2ODQ1OTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBcc2VjdCB9XHNlY3RkIFxsdHJzZWN0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMzQzODA3OFxzZnRuYmoge1xmb290ZXJyIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxzMjJccWMgXGxpMFxyaTBcd2lkY3RscGFyDQpcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMTZcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczE2XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIA0KXGZzMjRcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQzMjE1OTEzICBQQUdFICAgXFwqIE1FUkdFRk9STUFUIH19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkNzM1NzUwMiAxOH19fVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgDQpcZnMyNFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDMyMTU5MTMgDQpccGFyIH1ccGFyZCBcbHRycGFyXHMyMlxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANClxwYXIgfX17XGhlYWRlcmYgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHMyM1xxciBcbGkwXHJpMFx3aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNDY3NTMwNiBFWEVDVVRJT04gVkVSU0lPTg0KXHBhciB9fXtcZm9vdGVyZiBcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJcczIyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMxNlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDI5MTMxNDMge1xzaHB7XCpcc2hwaW5zdFxzaHBsZWZ0MFxzaHB0b3AwXHNocHJpZ2h0NDAzMlxzaHBib3R0b200MDBcc2hwZmhkcjFcc2hwYnhtYXJnaW5cc2hwYnhpZ25vcmVcc2hwYnlwYXJhXHNocGJ5aWdub3JlXHNocHdyM1xzaHB3cmswXHNocGZibHd0eHQwXHNocHoxMVxzaHBsaWQyMjM5DQp7XHNwe1xzbiBzaGFwZVR5cGV9e1xzdiAyMDJ9fXtcc3B7XHNuIGZGbGlwSH17XHN2IDB9fXtcc3B7XHNuIGZGbGlwVn17XHN2IDB9fXtcc3B7XHNuIGxUeGlkfXtcc3YgNzg2NDMyfX17XHNwe1xzbiBkeFRleHRMZWZ0fXtcc3YgMH19e1xzcHtcc24gZHlUZXh0VG9wfXtcc3YgMH19e1xzcHtcc24gZHhUZXh0UmlnaHR9e1xzdiAwfX17XHNwe1xzbiBkeVRleHRCb3R0b219e1xzdiAwfX17XHNwe1xzbiBmRml0U2hhcGVUb1RleHR9e1xzdiAxfX0NCntcc3B7XHNuIGZGaWxsZWR9e1xzdiAwfX17XHNwe1xzbiBmTGluZX17XHN2IDB9fXtcc3B7XHNuIHd6TmFtZX17XHN2IHp6bXBUcmFpbGVyXzEwNzhfMX19e1xzcHtcc24gcG9zcmVsaH17XHN2IDB9fXtcc3B7XHNuIG1ldHJvQmxvYn17XHN2IHtcKlxzdmIgDQo1MDRiMDMwNDE0MDAwNjAwMDgwMDAwMDAyMTAwYjY4MzM4OTJmZTAwMDAwMGUxMDEwMDAwMTMwMDAwMDA1YjQzNmY2ZTc0NjU2ZTc0NWY1NDc5NzA2NTczNWQyZTc4NmQ2Yzk0OTE0MTRlYzMzMDEwNDVmNzQ4ZGNjMWYyMTYyNTRlYmI0MDA4MjVlOTgyYjQ0YjQwYTgxYzYwNjQ0ZjEyOGI2NDZjNzk0YzY4NmY4ZjkzYjYxYjQ0OTE1OGRhMzNmZmJmMjdiYmRjMWNjNjQxNGMxOGQ4M2FhYWU0MmEyZmE0NDBkMmNlNThlYTJhZjliZWRmNjUwZjUyNzAwNA0KMzIzMDM4YzI0YTFlOTFlNWE2YmViZDI5Zjc0NzhmMmM1MjlhYjg5MjdkOGNmZTUxMjlkNjNkOGVjMGI5ZjM0ODY5ZDJiYTMwNDI0Y2M3ZDAyOTBmZmEwMzNhNTRlYmEyYjg1N2RhNTE0NDhhNTk5YzNiNjQ1ZDM2ZDhjMmU3MTBjNWY2OTBhZTRmMjYwMTA3OTZlMmU5YjQzOGIzMmEwOWRlMGY1NjQzNGNhNjZhMjJmMzgzOTI5ZDA5Nzk0YTJlM2JkYzViY2Y3NzQ5NDNhYTVmMDlmM2U0M2FlMDljN2I0OTRmMTNhYzQxZjEwYTIxM2VjMzk4MzQ5NDA5YWMNCjcwZWQxYWE3ZjNiZjNiNjZjOTkxMzNkN2I2NTY2M2RlMDRkZTJlYTk4YmQzYjU2ZWUzYmUyOGUwZjRkZmYyMjZjNWRlNzBiYWI0YWJlNTgzZWE2ZjAwMDAwMGZmZmYwMzAwNTA0YjAzMDQxNDAwMDYwMDA4MDAwMDAwMjEwMDM4ZmQyMWZmZDYwMDAwMDA5NDAxMDAwMDBiMDAwMDAwNWY3MjY1NmM3MzJmMmU3MjY1NmM3M2E0OTBjMTZhYzMzMDBjODZlZjgzYmQ4M2QxN2Q3MTlhYzMxOGEzNGUyZmEzZDA2YmU5MWVjMGQ4OGE2MzFhNWI0NjMyZDlmYWY2DQozMzgzYzEzMjdhZGI1MWJmZDBmNzg5N2Y3ZmY4NGM4YjVhOTEyNTUyMzZiMGViN2E1MDk4MWRmOTk4ODM4MWY3Y2JmMWU5MDU5NDU0OWJiZDVkMjhhMzgxMWIwYTFjYzZjNzg3ZmQxOTE3NWJkYjkxY2NiMTg4NmE5NDJjMDZlNjVhY2JhYmQ2ZTI2NjRjNTYzYTJhOThkYjY2MjI0ZWI2YjY5MTgzMmVkNjVkNmQ0MDNkZjRmZGIzZTZkZjBjMTgzNzRjNzVmMjA2ZjhlNDA3NTA5NzViNjllNjNmZWMxNDFkOTNkMDU0M2I0NzQ5ZDMzNDQ1Nzc4ZmFhM2Q3ZA0KZTQzM2FlOGQ2MjM5NjAzNWUwNTliZTQzYzZiNTZiY2Y4MWJlZWZkZGZkZDMxYmQ4OTYzOWJhMjNkYjg0NmZlNGI2N2UxY2E4NjUzZjdhYmRlOTcyZmMwMjAwMDBmZmZmMDMwMDUwNGIwMzA0MTQwMDA2MDAwODAwMDAwMDIxMDA3NmI5OTlhOGJjMDIwMDAwYjkwNTAwMDAwZTAwMDAwMDY0NzI3MzJmNjUzMjZmNDQ2ZjYzMmU3ODZkNmNhYzU0ZGI2ZTljMzAxMDdkYWZkNDdmYjBmYzRlYjg4NDY1MDE4NThkOTI2NWE5MmFhNTE3MjllOTczZTQwNWIzNTgNCjA1OWJkYWRlODVhNGVhYmY3NzZjYzI2NjkzYWE1MmQ1OTYwNzM0YjZjN2M3NzM2NmNlY2NjNWU1ZDhiNWU4NDBhNTYyODI2N2Q4M2ZmMzMwYTJiYzE0MTVlM2JiMGM3ZmI5MmI5YzE4MjNhNTA5YWY0ODJiMzhjZGYwMDM1NWY4NzJmNWY2Y2RjNWQwYTczNDEwOGQ2ODJiMmExMTgwNzA5NTBlN2Q4NjFiYWRmYmQ0NzU1NWQ5ZDA4ZWE4MzNkMTUzMGU4N2I1OTAxZGQxYjA5NDNiYjc5MjY0MDBmNGFlNzUwM2NmOGJkYzQxYzhhYTk3YTJhNDRhYzE2ZTNlDQoxZGUyOTVjNWFmNmI1YWVhNGY3NWFkYTg0NjZkODYyMTM2NmRmZmQyZmViN2U2ZWZhZTJlNDhiYTkzYTQ2ZjU4ZjkxNDA2Zjk4YjI4M2FjMjM4M2M3YTg0Y2E4OTI2NjgyZmQ5MmY1MDFkMmJhNTUwYTJkNjY3YTVlODVjNTFkN2FjYTQ5NjAzYjBmMWJkNTc2YzZlMWJkMjUzY2IwNTkyYTNmYTYzOWFkNGZmODMyZDNmMWUzZTRiYzRhYTBjNDcxODcxZDI0MTg5MWUxZmJiZmU0ZTEyZDY1Mjc5ZWY3YmNiZjhkZTM3NTkxYTdhOTU4MmYzNmQwZmVlN2FiYw0KMTYyMzU0ZGIzMjU2ZmQ4ZDI4YmYyYWM0YzViYTIxN2M0N2FmYTQxNDQzNDM0OTA1NTFkYTliZWVjOWQ1MDk0NzE5OTBlZGYwNDE1NGYwMWNkOTZiNjE4MWM2NWE3NjI2ODU5MDE0MDRlODUwYWQ4NzYzODVlOGE4NTEwOTliYzEyMmYyY2UwMzM4MmFlMTJjNTg4NDllNjc0YmU4OTI3NGJlZGQ0YmE1ZGY1MWQxMjE2MzY0NTg4MjAyMmMzYTM5ZGMyODBkM2NjMDc1NzYzMThmNzE1MWIwYjZiNTJhNjhmOThiMGQ3MDljNzZlMDZkYjg2YWNlNGMxNGI2YTgNCmRmMTMyZmQ5YzQ5YjM4NzRjMjIwZGEzOGExOTdlN2NlNTViMTBlOWRhOGYwOTc4YmZjM2M1ZmFmNzNmZjg3NzlkNzBmZDM4NjU1MTVlNWU2OTk1OTYwN2VmODY3MDU3YzkyZmEyNDhkYTNjNDk0Njg1OTY1ZTA0YzQ4NGFlZWI2ZWI1NmEyMDMwMTgxMTdmNjMzZDU4MmUwNGZkY2RjOTc2MWQ4NjNlMGYyOGE5MjFmODRkZTc1OTAzODQ1MTQyZjlkYjAwODE3NGViMmY0NjJjN2YzOTNlYjI0ZjJjMjI0Y2M4Yjk3OTQ2ZTE4YTdmZjRlMDkwZDE5NGUxNmMxDQo2MjEyZDM2ZmI5NDFhNTlmOGI3ZGMyOGRhNDFkZDMzMDQyNWFkNjY1MzgzZTNhOTFkNDQ4NzBjMzJiNWI1YTBkNmE5ZWVjOTM1NDk4ZjA5ZjUzMDExOTliMGI2ZDA1NmIzNDNhYTk1NThmZGJkMTc2ODg3ZjNlMzdjMjU2NTQwZjIwNjEyOTQwNjEyMDQ2OTg3ZjYwMzQ0MjNlNjIzNGMwMmNjOWIwZmFiNjI3OTI2MmQ0YmVlN2QwMDY2NmYwY2M4NjljOGRlZDZjMTA1ZWMyZDUwYzZiOGMyNjczYWRhNzAxYjVlZjI1ZGIzNTgwM2MzN2RhMTViNDRhYzFhYw0KOGE0ZDRmNGQ1MTAwMDViMzgwZjk2MGM5M2NjZDMyMzM4MDRlZDdkNmViNzllMmFlN2UwMjAwMDBmZmZmMDMwMDUwNGIwMzA0MTQwMDA2MDAwODAwMDAwMDIxMDA1YzQxNjZjMGQ5MDAwMDAwMDQwMTAwMDAwZjAwMDAwMDY0NzI3MzJmNjQ2Zjc3NmU3MjY1NzYyZTc4NmQ2YzRjOGYzMTRmYzMzMDEwODU3N2E0ZmUwN2ViMmFiMTIwNmEyN2EwMGE0MjljYWFhYTYwNjFhMzY1NjFiYmM2NDcxMjYxOWZhM2Q4NGQ0MjdmM2QyZTBiMmNhNzc3N2FhN2Y3YmUNCjJiMzdiM2IzNjJhNDIxNzQ5ZTM1NjQyYjA1ODJiOGY2YTZlMzQ2YzNmYmUxZTVmNjAxNDQ4OGM4MDZhZDY3ZDJmMDRkMDEzNmQ1ZTJhYWM0YzJmODg5ZGY2OGRjYzc0NmE0MTAwZTA1NmE2ODYzZWMwYjI5NDNkZDkyYzNiMGYyM2Q3MWYyM2VmZGUwMzBhNjc1NjhhNDE5NzA0YWUxY2VjYTVjYTliNTc0ZDg3MTZhNjhiMWE3NWQ0YmY1ZDdmZWU0MzRhY2U3ZTdmZWU2ZjU5MWYyZTk1Y2RiOTEzZmNlNTkxNjI5ZDNmYTdhMzk2ZjlmNDA0NDlhZTNkZjMxDQo1Y2YwMTMzYTU0ODllOWU4NGY2YzgyYjAxYWQyMjNmMTc3MjZlZjVlZGRlNTIwOGUxN2ExNDA1NmE1ZmMwZjVmZmQwMDAwMDBmZmZmMDMwMDUwNGIwMTAyMmQwMDE0MDAwNjAwMDgwMDAwMDAyMTAwYjY4MzM4OTJmZTAwMDAwMGUxMDEwMDAwMTMwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwNWI0MzZmNmU3NDY1NmU3NDVmNTQ3OTcwNjU3MzVkMmU3ODZkNmM1MDRiMDEwMjJkMDAxNDAwMDYwMDA4MDAwMDAwMjEwMDM4ZmQyMWZmZDYwMA0KMDAwMDk0MDEwMDAwMGIwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDJmMDEwMDAwNWY3MjY1NmM3MzJmMmU3MjY1NmM3MzUwNGIwMTAyMmQwMDE0MDAwNjAwMDgwMDAwMDAyMTAwNzZiOTk5YThiYzAyMDAwMGI5MDUwMDAwMGUwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDJlMDIwMDAwNjQ3MjczMmY2NTMyNmY0NDZmNjMyZTc4NmQ2YzUwNGIwMTAyMmQwMDE0MDAwNjAwMDgwMDAwMDAyMTAwNWM0MTY2YzBkOTAwMDAwMDA0MDEwMDAwMGYwMDAwMDANCjAwMDAwMDAwMDAwMDAwMDAwMDAwMTYwNTAwMDA2NDcyNzMyZjY0NmY3NzZlNzI2NTc2MmU3ODZkNmM1MDRiMDUwNjAwMDAwMDAwMDQwMDA0MDBmMzAwMDAwMDFjMDYwMDAwMDAwMH19fXtcc3B7XHNuIGRoZ3R9e1xzdiAyNTE2NjIzMzZ9fXtcc3B7XHNuIGZIaWRkZW59e1xzdiAwfX17XHNwe1xzbiBmUHNldWRvSW5saW5lfXtcc3YgMH19e1xzcHtcc24gZkxheW91dEluQ2VsbH17XHN2IDF9fXtcc2hwdHh0IFxsdHJwYXIgDQpccGFyZFxwbGFpbiBcbHRycGFyXHM0OVxxbCBcbGkwXHJpMFxzbC0yMDBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IE9IU1VTQTo3NjE5ODQ1NzkuMTAgDQpccGFyIA0KXHBhciB9fX17XHNocHJzbHR7XCpcZG9cZG9ieG1hcmdpblxkb2J5cGFyYVxkb2RoZ3Q4MjAzXGRwdHhieFxkcHR4bHJ0YntcZHB0eGJ4dGV4dFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxzNDlccWwgXGxpMFxyaTBcc2wtMjAwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMlxhbGFuZzEwMjUgDQpcbHRyY2hcZmNzMCBcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBPSFNVU0E6NzYxOTg0NTc5LjEwIA0KXHBhciANClxwYXIgfX1cZHB4MFxkcHkwXGRweHNpemU0MDMyXGRweXNpemU0MDBcZHBmaWxsZmdjcjI1NVxkcGZpbGxmZ2NnMjU1XGRwZmlsbGZnY2IyNTVcZHBmaWxsYmdjcjI1NVxkcGZpbGxiZ2NnMjU1XGRwZmlsbGJnY2IyNTVcZHBmaWxscGF0MFxkcGxpbmVob2xsb3d9fX19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IA0KXHBhciB9fVxwYXJkXHBsYWluIFxsdHJwYXJcczUxXHFjIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzggXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxiXGluc3JzaWQzNDM4MDc4IEZJUlNUIEFNRU5ETUVOVCBUTw0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTFccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzIxNTkxMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMzQzODA3OCBSSVNJTkcgVFJFRSBTSEFSRUQgRkFDSUxJVElFUyBBR1JFRU1FTlQNClxwYXIgfVxwYXJkIFxsdHJwYXJcczUxXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDMyMTU5MTMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcc2NhcHNcZjQyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTI0MTIzNTUgDQpUaGlzIEZpcnN0IEFtZW5kbWVudCB0byBSaXNpbmcgVHJlZSBTaGFyZWQgRmFjaWxpdGllcyBBZ3JlZW1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4ICAoXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTI0MTIzNTUgQW1lbmRtZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBcJzk0DQopIGlzIG1hZGUgYW5kIGVudGVyZWQgaW50byB0aGlzIDI5dGggZGF5IG9mIEp1bmUsIDIwMTUsIGJ5IGFuZCBhbW9uZyBSaXNpbmcgVHJlZSBXaW5kIEZhcm1cfkxMQyAoXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQzNDM4MDc4IFJpc2luZyBUcmVlIEl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IFwnOTQpLCBSaXNpbmcgVHJlZSBXaW5kIEZhcm1cfklJIExMQyAoXCc5M30NCntccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDM0MzgwNzggUmlzaW5nIFRyZWUgSUl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IFwnOTQpLCBhbmQgUmlzaW5nIFRyZWUgV2luZCBGYXJtXH5JSUkgTExDIChcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDM0MzgwNzggUmlzaW5nIFRyZWUgSUlJfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQzNDM4MDc4IFwnOTQpLCBlYWNoIG9mIHdoaWNoIGlzIGEgRGVsYXdhcmUgbGltaXRlZCBsaWFiaWxpdHkgY29tcGFueS4gIFRoZSBmb3JlZ29pbmcgYXJlIHNvbWV0aW1lcyByZWZlcnJlZCB0byBoZXJlaW4gaW5kaXZpZHVhbGx5IGFzIGEgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQzNDM4MDc4IENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANClwnOTQgYW5kIGNvbGxlY3RpdmVseSBhcyBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDM0MzgwNzggQ28tT3duZXJzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBcJzk0Lg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTFccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMzQzODA3OCBSRUNJVEFMU317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1MVxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBBLlx0YWIgDQpUaGUgQ28tT3duZXJzIGhhdmUgcHJldmlvdXNseSBlbnRlcmVkIGludG8gdGhhdCBjZXJ0YWluIFJpc2luZyBUcmVlIFNoYXJlZCBGYWNpbGl0aWVzIEFncmVlbWVudCBkYXRlZCBEZWNlbWJlciAzLCAyMDE0ICh0aGUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTI0MTIzNTUgQWdyZWVtZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANClwnOTQpIHdpdGggcmVzcGVjdCB0byB0aGUgc2hhcmVkIGZhYw0KaWxpdGllcyBhbmQgc2hhcmVkIHJlYWwgcHJvcGVydHkgdXNlZCBpbiBjb25uZWN0aW9uIHdpdGggZWFjaCBwaGFzZSBvZiBhIHRocmVlIHBoYXNlIHdpbmQgcG93ZXJlZCBlbGVjdHJpYyBnZW5lcmF0aW5nIGZhY2lsaXR5IGdlbmVyYWxseSBrbm93biBhcyB0aGUgUmlzaW5nIFRyZWUgV2luZCBGYXJtIGxvY2F0ZWQgb24gcmVhbCBwcm9wZXJ0eSBpbiBLZXJuIENvdW50eSwgQ2FsaWZvcm5pYSAodGhlIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQzNDM4MDc4IFJpc2luZyBUcmVlIFdpbmQgRmFybX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggXCc5NCkuICANClxwYXIgQi5cdGFiIEEgbWVtb3JhbmR1bSBvZiB0aGUgQWdyZWVtZW50IHdhcyByZWNvcmRlZCBpbiB0aGUgT2ZmaWNpYWwgUmVjb3JkcyBvZiBLZXJuIENvdW50eSwgQ2FsaWZvcm5pYSBvbiBEZWNlbWJlciAxMCwgMjAxNCwgYXMgSW5zdHJ1bWVudCBOby4gMDIxNDE1Mjc1OS4NClxwYXIgQy5cdGFiIFRoZSBDby1Pd25lcnMgbm93IHdpc2ggdG8gYW1lbmQgdGhlIEFncmVlbWVudCBpbiBjZXJ0YWluIHJlc3BlY3RzIHRvIGNsYXJpZnkgdGhlIG93bmVyc2hpcCBhbmQgdXNlIG9mIGNlcnRhaW4gU2hhcmVkIEZhY2lsaXRpZXMgYW5kIFNoYXJlZCBQZXJtaXRzIGFuZCB0byBtYWtlIG90aGVyIGNoYW5nZXMgaW4gYW5kIGNvcnJlY3Rpb25zIHRvIHRoZSBBZ3JlZW1lbnQuDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcc2NhcHNcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5NTA1ODgwIE5vdywgdGhlcmVmb3JlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAsIGZvciBnb29kIGFuZCB2YWx1YWJsZSBjb25zaWRlcmF0aW9uLCB0aGUgcmVjZWlwdCBvZiB3aGljaCBpcyBoZXJlYnkgYWNrbm93bGVkZ2VkLCB0aGUgQ28tT3duZXJzIGFncmVlIGFzIGZvbGxvd3M6DQpccGFyIDEuXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTUwNTg4MCBEZWZpbml0aW9uc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggLiAgRXgNCmNlcHQgYXMgb3RoZXJ3aXNlIGRlZmluZWQgaGVyZWluLCBjYXBpdGFsaXplZCB0ZXJtcyB1c2VkIGluIHRoaXMgQW1lbmRtZW50IHdpbGwgaGF2ZSB0aGUgbWVhbmluZ3MgZGVmaW5lZCBpbiB0aGUgQWdyZWVtZW50LCBhbmQgdGhlIHJ1bGVzIG9mIGludGVycHJldGF0aW9uIGluIHRoZSBBZ3JlZW1lbnQgc2hhbGwgYXBwbHkgdG8gdGhpcyBBbWVuZG1lbnQuDQpccGFyIDIuXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQzNDM4MDc4IFNoYXJlZCBSZWFsIFByb3BlcnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAuICBTZWN0aW9uIDMuMyBvZiB0aGUgQWdyZWVtZW50IGlzIGFtZW5kZWQgYnkgcHV0dGluZyBhIGNvbW1hIGFmdGVyIFwnOTNjb2xsZWN0aW9uIGFuZCB0cmFuc21pc3Npb24gbGluZXNcJzk0DQogaW4gdGhlIHRoaXJkIHRvIGxhc3QgbGluZSBvZiB0aGF0IHNlY3Rpb24gYW5kIGluc2VydGluZyB0aGUgd29yZHMgXCc5M2ZpYmVyIG9wdGljIGNhYmxlIGFuZCBvdGhlciBjb21tdW5pY2F0aW9ucyBmYWNpbGl0aWVzXCc5NCBpbW1lZGlhdGVseSB0aGVyZWFmdGVyLg0KXHBhciAzLlx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMzQzODA3OCBTaGFyZWQgUGVybWl0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggLiAgU2VjdGlvbiAzLjYgb2YgdGhlIEFncmVlbWVudCBpcyBhbWVuZGVkIGFuZCByZXN0YXRlZCBpbiBpdHMgZW50aXJldHkgYXMgZm9sbG93czoNClxwYXIgfVxwYXJkIFxsdHJwYXJcczUxXHFqIFxmaTcyMFxsaTcyMFxyaTcyMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW43MjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggMy42XHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ0NjA2NzMyIFNoYXJlZCBQZXJtaXRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANCi4gIFRoZSBjb25zdHJ1Y3Rpb24sIG9wZXJhdGlvbiBhbmQgdXNlIG9mIGNlcnRhaW4gb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzIGluIGVhY2ggU2hhcmVkIEZhY2lsaXRpZXMgR3JvdXAsIGFzIHdlbGwgYXMgdGhlIGNvbnN0cnVjdGlvbiwgb3BlcmF0aW9uIGFuZCB1c2Ugb2YgY2VydGFpbiBwb3J0aW9ucyBvZiBlYWNoIENvLU93bmVyXHJxdW90ZSANCnMgRmFjaWxpdGllcywgd2lsbCBiZSBzdWJqZWN0IHRvIGNlcnRhaW4gc2hhcmVkIEdvdmVybm1lbnRhbCBBdXRob3JpemF0aW9ucyBhcyBzZXQgZm9ydGggaW4gcGFydHMgQS4zIGFuZCBCLjMgb2YgRXhoaWJpdCBCICh0aGUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNTU5NDUyNCBTaGFyZWQgUGVybWl0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMzQzODA3OCBcJzk0DQopLCBub3QgYWxsIG9mIHdoaWNoIGFwcGx5IHRvIHRoZSBTaGFyZWQgRmFjaWxpdGllcy4gIFRoZSBTaGFyZWQgUGVybWl0cyBtYXkgYmUgaXNzdWVkIGluIHRoZSBuYW1lIG9mIG9uZSBvciBtb3JlIG9mIHRoZSBDby1Pd25lcnMsIGJ1dCBzaGFsbCwgdG8gdGhlIGV4dGVudCB0aGV5IGFwcGx5IHRvIHRoZSBTaGFyZWQgRmFjaWxpdGllcywgYW5kIHRvIHRoZSBmdWxsZXN0IGV4dGVudCBhbGxvd2VkIGJ5IEFwcGxpY2FibGUgTGF3LCBiZSBoZWxkLCANCnVzZWQgYW5kIGV4ZXJjaXNlZCBmb3IgdGhlIG11dHVhbCBiZW5lZml0IG9mIHRoZSBDby1Pd25lcnMgaW4gdGhlIGFwcGxpY2FibGUgU2hhcmVkIEFzc2V0cyBHcm91cCBhbmQgdG8gZmFjaWxpdGF0ZSB0aGUgY29uc3RydWN0aW9uLCB1c2UsIG9wZXJhdGlvbiwgbWFpbnRlbmFuY2UgYW5kIHJlcGFpciBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgYXMgcHJvdmlkZWQgaGVyZWluLiAgVGhlIFNoYXJlZCBQZXJtaXRzIHNoYWxsIGJlIGFkbWluaXN0ZQ0Kcg0KZWQgaW4gdGhlIHNhbWUgbWFubmVyIGFzIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBhcyBwcm92aWRlZCBpbiBTZWN0aW9uIDQuMy4zLCBhbmQsIHRvIHRoZSBleHRlbnQgdGhleSBkbyBhcHBseSB0byB0aGUgU2hhcmVkIEZhY2lsaXRpZXMsIHRoZSBDby1Pd25lcnMgaW4gZWFjaCBTaGFyZWQgQXNzZXQgR3JvdXAgc2hhbGwgaW5kZW1uaWZ5IGFuZCBob2xkIFJpc2luZyBUcmVlIEkgYW5kL29yIE9wZXJhdG9yLCBhcyBhcHBsaWNhYmxlLCBoYXJtbGVzDQpzIGZyb20gYW5kIGFnYWluc3QgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDc3NDM3MzIgDQphbnkgY2xhaW1zLCBkZW1hbmRzLCBjb3N0cywgb2JsaWdhdGlvbnMgYW5kIGxpYWJpbGl0aWVzIGJ5IG9yIHRvIEdvdmVybm1lbnRhbCBBdXRob3JpdGllcyBvciBvdGhlciB0aGlyZCBwYXJ0aWVzIGFzIGEgcmVzdWx0IG9mIHRoZSB1c2Ugb2YgdGhlIFNoYXJlZCBQZXJtaXRzIHJlbGF0aW5nIHRvIHN1Y2ggU2hhcmVkIEFzc2V0IEdyb3VwLCBleGNlcHQgdG8gdGhlIGV4dGVudCByZXN1bHRpbmcgZnJvbSB0aGV9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggIGJyZWFjaCBieSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTI4NTAzNzEgUmlzaW5nIFRyZWUgSSBhbmQvb3IgT3BlcmF0b3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IA0KIG9mIGl0cyBvYmxpZ2F0aW9ucyB1bmRlciB0aGlzIEFncmVlbWVudCwgdGhlIEludGVyY29ubmVjdGlvbiBBZ3JlZW1lbnQgb3IgdGhlIExHSUEgQ28tVGVuYW5jeSBBZ3JlZW1lbnQsIGFzIGFwcGxpY2FibGUsIG9yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDc3NDM3MzIgDQogZ3Jvc3MgbmVnbGlnZW5jZSBvciB3aWxsZnVsIG1pc2NvbmR1Y3Qgb2YgUmlzaW5nIFRyZWUgSSBhbmQvb3IgT3BlcmF0b3IsIGFzIGFwcGxpY2FibGUuICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IFRvIHRoZSANCmV4dGVudCB0aGUgU2hhcmVkIFBlcm1pdHMgZG8gbm90IGFwcGx5IHRvIHRoZSBTaGFyZWQgRmFjaWxpdGllcywgYnV0IGluc3RlYWQgYXBwbHkgdG8gdGhlIEZhY2lsaXRpZXMgb3Igb3RoZXIgcHJvcGVydHkgc2VwYXJhdGVseSBvd25lZCBieSBvbmUgb3IgbW9yZSBvZiB0aGUgQ28tT3duZXJzLCB0aGUgU2hhcmVkIFBlcm1pdHMgc2hhbGwgYmUgYWRtaW5pc3RlcmVkIGJ5IE9wZXJhdG9yLCBidXQgdGhlIENvLU93bmVycyBzaGFsbCB0YWtlIHN1Yw0KaA0KIGFjdGlvbnMgYXMgYXJlIHJlcXVpcmVkIGJ5IHRoZSBPcGVyYXRvciBvciBvdGhlcndpc2UgdG8gZW5zdXJlIHRoYXQgZWFjaCBzdWNoIEZhY2lsaXR5IGlzIG9wZXJhdGVkIGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgcmVxdWlyZW1lbnRzIG9mIHN1Y2ggU2hhcmVkIFBlcm1pdC4gIFJlZ2FyZGxlc3Mgb2Ygd2hldGhlciBvciBub3QgdGhlIFNoYXJlZCBQZXJtaXRzIGFwcGx5IHRvIFNoYXJlZCBGYWNpbGl0aWVzLCBPcGVyYXRvciBzaGFsbCBoYXZlDQogDQphY2Nlc3MgdG8gYWxsIHJlYWwgcHJvcGVydHkgYW5kIHJlYWwgcHJvcGVydHkgcmlnaHRzLCBpbmNsdWRpbmcgU2hhcmVkIFJlYWwgcHJvcGVydHkgYW5kIHJlYWwgcHJvcGVydHkgb3IgcmVhbCBwcm9wZXJ0eSByaWdodHMgb3duZWQsIGxlYXNlZCwgaGVsZCBvciBvdGhlcndpc2UgY29udHJvbGxlZCBieSBhbnkgb2YgdGhlIENvLU93bmVycyBpbiBvcmRlciB0byBhZG1pbmlzdGVyIGFuZCBwZXJmb3JtIHRoZSByZXF1aXJlbWVudHMgb2YgdGhlIFMNCmgNCmFyZWQgUGVybWl0cy4gIFRvIHRoZSBleHRlbnQgdGhhdCBldmVudHMgb2NjdXJyaW5nIGF0IG9yIHdpdGggcmVzcGVjdCB0byBhIHBhcnRpY3VsYXIgRmFjaWxpdHkgY29uc3RpdHV0ZSB2aW9sYXRpb25zIG9mIGEgU2hhcmVkIFBlcm1pdCBvciByZXF1aXJlIG1vZGlmaWNhdGlvbnMgdG8gdGhlIEZhY2lsaXRpZXMgb3duZWQgYnkgb3RoZXIgQ28tT3duZXJzIG9yIHRvIHRoZSBvcGVyYXRpb25zIG9mIHN1Y2ggRmFjaWxpdGllcywgZWFjaCBDby1Pdw0KbmVyIHdob3NlIEZhY2lsaXR5IGlzIHJlc3BvbnNpYmxlIGZvciBzdWNoIHZpb2xhdGlvbnMgb3IgdGhlIHJlcXVpcmVtZW50IGZvciBzdWNoIG1vZGlmaWNhdGlvbnMgc2hhbGwgaW5kZW1uaWZ5IGFuZCBob2xkIE9wZXJhdG9yIGFuZCBlYWNoIG90aGVyIENvLU93bmVyIGhhcm1sZXNzIGZyb20gYW5kIGFnYWluc3QgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDc3NDM3MzIgDQphbnkgY2xhaW1zLCBkZW1hbmRzLCBjb3N0cywgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBsb3NzZXMsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ3NzQzNzMyIG9ibGlnYXRpb25zIGFuZCBsaWFiaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggLCBpbmNsdWRpbmcgY29zdHMgaW1wb3NlZH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDc3NDM3MzIgIGJ5IG9yIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggbGlhYmlsaXRpZXMgb3Igb2JsaWdhdGlvbnMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDc3NDM3MzIgdG8gR292ZXJubWVudGFsIEF1dGhvcml0aWVzIG9yIG90aGVyIHRoaXJkIHBhcnRpZXMNCn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggIGFuZCBsb3N0IHJldmVudWVzIGR1ZSB0byBjdXJ0YWlsbWVudCBvciBvdGhlciByZW1lZGllcyBvcmRlcmVkIGJ5IGEgR292ZXJubWVudGFsIEF1dGhvcml0eSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNzc0MzczMiAgYXMgYSByZXN1bHQgb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQzNDM4MDc4IHN1Y2ggZXZlbnRzLCBpbmNsdWRpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNzc0MzczMiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBhY3Rpb25zIG9yIG9taXNzaW9ucyB1bmRlciwgZmFpbHVyZSB0byBjb21wbHkgd2l0aCBvciB2aW9sYXRpb25zIG9mIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDc3NDM3MzIgdGhlIFNoYXJlZCBQZXJtaXRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAgYnkgc3VjaCBDby1Pd25lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ3NzQzNzMyICwgZXhjZXB0IHRvIHRoZSBleHRlbnQgcmVzdWx0aW5nIGZyb20gdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTA3NTU4MjMgIGJyZWFjaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDEwNzU1ODIzICBvYmxpZ2F0aW9ucyB1bmRlciB0aGlzIEFncmVlbWVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggLCB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxMDc1NTgyMyB0aGUgSW50ZXJjb25uZWN0aW9uIEFncmVlbWVudCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IG9yIHRoZSBMR0lBIENvLVRlbmFuY3kgQWdyZWVtZW50IGJ5IG9yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDEwNzU1ODIzICB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ3NzQzNzMyIGdyb3NzIG5lZ2xpZ2VuY2Ugb3Igd2lsbGZ1bCBtaXNjb25kdWN0IG9mIE9wZXJhdG9yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANCiBvciB0aGUgQ28tT3duZXIgc2Vla2luZyB0byBiZSBpbmRlbW5pZmllZC4gIElmIHRoZSB2aW9sYXRpb25zIG9mIHRoZSBTaGFyZWQgUGVybWl0cyBvciB0aGUgZXZlbnRzIHJlcXVpcmluZyBtb2RpZmljYXRpb24gb2YgRmFjaWxpdGllcyBhcmUgdGhlIHJlc3BvbnNpYmlsaXR5IG9mIG1vcmUgdGhhbiBvbmUgQ28tT3duZXIsIHRoZSBmb3JlZ29pbmcgaW5kZW1uaXR5IG9ibGlnYXRpb25zIHdpbGwgYmUgZXF1aQ0KdGFibHkgYXBwb3J0aW9uZWQgYW1vbmcgdGhlIHJlc3BvbnNpYmxlIENvLU93bmVycywgY29uc2lkZXJpbmcgYWxsIG9mIHRoZSBmYWN0cyBhbmQgY2lyY3Vtc3RhbmNlcyByZWxhdGluZyB0byB0aGUgdmlvbGF0aW9ucyBvciBtb2RpZmljYXRpb25zIGluIHF1ZXN0aW9uLiAgVGhlIGNvc3RzIG9mIGFkbWluaXN0cmF0aW9uIG9mIHRoZSBTaGFyZWQgUGVybWl0cyBpbiBjb25uZWN0aW9uIHdpdGggYW55IHZpb2xhdGlvbnMsIGNsYWltZWQgdmlvbGF0DQppDQpvbnMgb3IgcmVxdWlyZWQgbW9kaWZpY2F0aW9ucyBzaGFsbCBiZSBib3JuZSBieSB0aGUgcmVzcG9uc2libGUgQ28tT3duZXJzIGFuZCBzaGFsbCBub3QgYmUgaW5jbHVkZWQgaW4gdGhlIE8mTSBTZXJ2aWNlcyBwcm92aWRlZCBoZXJldW5kZXIuICBGb3IgcHVycG9zZXMgb2YgdGhlIGZvcmVnb2luZyBpbmRlbW5pdHkgb2JsaWdhdGlvbiwgYW5kIG5vdHdpdGhzdGFuZGluZyBhbnl0aGluZyBpbiBTZWN0aW9uIDE3LjIwIG9yIGVsc2V3aGVyZSBpbiANCnRoaXMgQWdyZWVtZW50IHRvIHRoZSBjb250cmFyeSwgbG9zdCByZXZlbnVlcyAoaW5jbHVkaW5nIGxvc3QgcHJvZHVjdGlvbiB0YXggY3JlZGl0cyBhbmQgb3RoZXIgbG9zdCB0YXggYmVuZWZpdHMgYW5kIGNyZWRpdHMpIHNoYWxsIGJlIGNvbnNpZGVyZWQgZGlyZWN0LCBub3QgY29uc2VxdWVudGlhbCwgZGFtYWdlcyBhbmQgc2hhbGwgYmUgcmVjb3ZlcmFibGUgYnkgdGhlIGFmZmVjdGVkIENvLU93bmVyLiAgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNzc0MzczMiBOb3R3aXRoc3RhbmRpbmcgdGhlIGZvcmVnb2luZyx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IA0KIGVhY2ggQ28tT3duZXIgaW4gdGhlIGFwcGxpY2FibGUgU2hhcmVkIEFzc2V0IEdyb3VwIHRvIHdoaWNoIGEgU2hhcmVkIFBlcm1pdCByZWxhdGVzIHNoYWxsIGhhdmUgdGhlIHJpZ2h0LCBpbiB0aGUgY2FzZSBvZiBFbWVyZ2VuY3kgQ29uZGl0aW9uIG9yIGlmIG5lY2Vzc2FyeSB0byBwcmV2ZW50IHRoZSB0ZXJtaW5hdGlvbiBvciByZXZvY2F0aW9uIG9mIGEgU2hhcmVkIFBlcm1pdCwgdG8gc3RlcCBpbiBhbmQgZXhlcmNpc2UgcmlnaHRzLA0KIHBlcmZvcm0gZHV0aWVzIGFuZCBvYmxpZ2F0aW9ucyBhbmQgdGFrZSBhY3Rpb25zIHVuZGVyIHN1Y2ggU2hhcmVkIFBlcm1pdCBhcyBtYXkgYmUgbmVjZXNzYXJ5IHRvIGF2b2lkIG9yIG1pdGlnYXRlIHN1Y2ggRW1lcmdlbmN5IENvbmRpdGlvbiBvciB0ZXJtaW5hdGlvbiBvciByZXZvY2F0aW9uIG9mIGEgU2hhcmVkIFBlcm1pdCwgYW5kIHNoYWxsIGJlIGVudGl0bGVkIHRvIHRoZSBzYW1lIGluZGVtbmlmaWNhdGlvbiBhcyBSaXNpbmcgVHJlZSBJDQogb3IgT3BlcmF0b3Igd291bGQgaGF2ZSBiZWVuIHVuZGVyIHRoZSBjaXJjdW1zdGFuY2VzOyBwcm92aWRlZCwgaG93ZXZlciwgdGhhdCBhbnkgQ28tT3duZXIgZXhlcmNpc2luZyBzdWNoIHN0ZXAtaW4gcmlnaHRzIHNoYWxsIGFsc28gaW5kZW1uaWZ5IGFuZCBob2xkIHRoZSBvdGhlciBDby1Pd25lcnMgaW4gdGhlIGFwcGxpY2FibGUgU2hhcmVkIEFzc2V0cyBHcm91cCBmcm9tIGFuZCBhZ2FpbnN0IH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDc3NDM3MzIgYW55IGNsYWltcywgZGVtYW5kcywgY29zdHMsIG9ibGlnYXRpb25zIGFuZCBsaWFiaWxpdGllcyBieSBvciB0byBHb3Zlcm5tZW50YWwgQXV0aG9yaXRpZXMgb3Igb3RoZXIgdGhpcmQgcGFydGllcyBhcyBhIHJlc3VsdCBvZiBpdHMgZ3Jvc3MgbmVnbGlnZW5jZSBvciB3aWxsZnVsIG1pc2NvbmR1Y3QgaW4gdGhlIGV4ZXJjaXNlIG9mIHN1Y2ggc3RlcC1pbiByaWdodHN9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTFccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggNC5cdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDM0MzgwNzggDQpVbmRpdmlkZWQgVXNlIEludGVyZXN0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggLiAgU2VjdGlvbiA0LjIgb2YgdGhlIEFncmVlbWVudCBpcyBhbWVuZGVkIGFuZCByZXN0YXRlZCBpbiBpdHMgZW50aXJldHkgYXMgZm9sbG93czoNClxwYXIgfVxwYXJkIFxsdHJwYXJcczUxXHFqIFxmaTcyMFxsaTcyMFxyaTcyMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW43MjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggNC4yXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQzNDM4MDc4IA0KVW5kaXZpZGVkIFVzZSBJbnRlcmVzdHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IC4gIEVhY2ggQ28tT3duZXIgd2hvIGhhcyBhbiBPd25lcnNoaXAgSW50ZXJlc3QgaW4gYSBTaGFyZWQgQXNzZXRzIEdyb3VwIHNoYWxsIGhhdmUgYW4gdW5kaXZpZGVkIHJpZ2h0IHRvIHRoZSB1c2Ugb3IgY2FwYWNpdHkgb2YgdGhlIFNoYXJlZCBBc3NldHMgaW4gc3VjaCBTaGFyZWQgQXNzZXQgR3JvdXAgKGFuIFwnOTN9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNzc0MzczMiBVbmRpdmlkZWQgVXNlIEludGVyZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBcJzk0DQopLCB3aGljaCByaWdodCBzaGFsbCBiZSBzaGFyZWQgd2l0aCB0aGUgb3RoZXIgQ28tT3duZXJzIGluIHRoZSBTaGFyZWQgQXNzZXRzIEdyb3VwcyBpbiBhY2NvcmRhbmNlIHdpdGggdGhlaXIgcmVzcGVjdGl2ZSBQcm9wb3J0aW9uYXRlIFNoYXJlcy4gIEEgQ28tT3duZXJccnF1b3RlIA0KcyBVbmRpdmlkZWQgVXNlIEludGVyZXN0IGlzIGV4ZXJjaXNhYmxlIChhKSB3aXRoIHJlc3BlY3QgdG8gU2hhcmVkIEFzc2V0cyBjb25zdGl0dXRpbmcgcm9hZHMgb3INCiwgaWYgYXBwbGljYWJsZSwgdGhlIG1ldGVvcm9sb2dpY2FsIHRvd2VyLCBhcyBvZiB0aGUgRXhlY3V0aW9uIERhdGUsIGFuZCAoYikgd2l0aCByZXNwZWN0IHRvIG90aGVyIFNoYXJlZCBBc3NldHMsIHVwb24gdGhlIE1lY2hhbmljYWwgQ29tcGxldGlvbiBEYXRlIG9mIGl0cyBGYWNpbGl0eSBieSBzdWNoIENvLU93bmVyIGJ5IHByb3ZpZGluZyB3cml0dGVuIG5vdGljZSB0byBPcGVyYXRvciBhbmQgdG8gdGhlIG90aGVyIENvLU93bmVycyBpbiB0aA0KZSBzYW1lIFNoYXJlZCBBc3NldHMgR3JvdXAgdGhhdCB0aGUgTWVjaGFuaWNhbCBDb21wbGV0aW9uIERhdGUgaGFzIG9jY3VycmVkLCBwcm92aWRlZCB0aGF0IHN1Y2ggQ28tT3duZXIgaGFzIG1hZGUgdGhlIHBheW1lbnQgb3IgcGF5bWVudHMgc2V0IGZvcnRoIGluIFNlY3Rpb25cfg0KNC4zLCBhbmQgdGhhdCBubyBFdmVudCBvZiBEZWZhdWx0IGhhcyBvY2N1cnJlZCBhbmQgaXMgY29udGludWluZyB3aXRoIHJlc3BlY3QgdG8gc3VjaCBDby1Pd25lci4gIEYNCm9yIHRoZSBhdm9pZGFuY2Ugb2YgZG91YnQsIGVhY2ggQ28tT3duZXIgd2hvc2UgRmFjaWxpdHkgaGFzIG5vdCByZWFjaGVkIGl0cyBNZWNoYW5pY2FsIENvbXBsZXRpb24gRGF0ZSBhcyBvZiB0aGUgRWZmZWN0aXZlIERhdGUgKGFuZCB0aHVzIHdob3NlIFByb3BvcnRpb25hdGUgU2hhcmUgaW4gYWxsIFNoYXJlZCBBc3NldHMgR3JvdXBzIGlzIDAlKSBzaGFsbCBiZSBkZWVtZWQgbm90IHRvIGhhdmUgZXhlcmNpc2VkIGl0cyBVbmRpdmlkZWQgVXNlIA0KSQ0KbnRlcmVzdCBpbiBhbnkgU2hhcmVkIEFzc2V0cyBHcm91cCBleGNlcHQgd2l0aCByZXNwZWN0IHRvIHJvYWRzIG9yLCBpZiBhcHBsaWNhYmxlLCB0aGUgbWV0ZW9yb2xvZ2ljYWwgdG93ZXIgKGFuZCBhcyBhIHJlc3VsdCBzaGFsbCBub3QgYmUgcmVxdWlyZWQgdG8gYmVhciBjb3N0cyBvciBleHBlbnNlcyByZWxhdGVkIHRvIGFueSBTaGFyZWQgQXNzZXRzIEdyb3VwIGV4Y2VwdCBmb3Igcm9hZCBtYWludGVuYW5jZSBub3IgaGF2ZSB0aGUgcmlnaHQgDQp0byB2b3RlIG9uIG1hdHRlcnMgdW5sZXNzIG90aGVyd2lzZSBzZXQgZm9ydGggaGVyZWluKSwgYnV0IHNoYWxsIGhhdmUgdGhlIHJpZ2h0IHRvIGV4ZXJjaXNlIGl0cyBVbmRpdmlkZWQgVXNlIEludGVyZXN0IGFzIHNldCBmb3J0aCBpbiB0aGlzIEFncmVlbWVudC4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczUxXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IDUuXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQzNDM4MDc4IA0KQ29uc3RydWN0aW9uIG9mIFNoYXJlZCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAuICBTZWN0aW9uIDQuMy4xIG9mIHRoZSBBZ3JlZW1lbnQgaXMgYW1lbmRlZCBhbmQgcmVzdGF0ZWQgaW4gaXRzIGVudGlyZXR5IGFzIGZvbGxvd3M6DQpccGFyIH1ccGFyZCBcbHRycGFyXHM1MVxxaiBcZmk3MjBcbGk3MjBccmk3MjBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluNzIwXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IDQuMy4xXHRhYiANClN1YmplY3QgdG8gaXRzIHJpZ2h0IHRvIHJlaW1idXJzZW1lbnQgYXMgc2V0IGZvcnRoIGhlcmVpbiwgUmlzaW5nIFRyZWUgSSB3aWxsIGRlc2lnbiwgcGVybWl0IGFuZCBjb25zdHJ1Y3QgYWxsIG9mIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBpbiBhY2NvcmRhbmNlIHdpdGggQXBwbGljYWJsZSBMYXdzLCBHb29kIFV0aWxpdHkgUHJhY3RpY2UgYW5kIHRoZSBkZXNjcmlwdGlvbiBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgb24gfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTQ0Njc1IEV4aGliaXQgQn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQogYXR0YWNoZWQgaGVyZXRvLiAgTm90d2l0aHN0YW5kaW5nIGFueXRoaW5nIGNvbnRhaW5lZCB0byB0aGUgY29udHJhcnkgaW4gdGhpcyBBZ3JlZW1lbnQsIGFzIG9mIEp1bmUgMzAsIDIwMTUsIHRoZSBkYXRlIG9uIHdoaWNoIHRoZSBpbml0aWFsIHBvcnRpb24gb2YgdGhlIHBheW1lbnQgYnkgdGhlIG90aGVyIENvLU93bmVycyBvZiByZWltYnVyc2VtZW50IGFtb3VudHMgZHVlIHRvIFJpc2luZyBUcmVlIEkgYXMgcHJvdmlkZWQgaW4gU2VjdGlvbiANCjQNCi4zLjIgc2hhbGwgb2NjdXIsIFJpc2luZyBUcmVlIEkgd2lsbCBiZSBkZWVtZWQgdG8gaGF2ZSBhc3NpZ25lZCwgdHJhbnNmZXJyZWQgYW5kIGNvbnZleWVkIHN1Y2ggU2hhcmVkIEZhY2lsaXRpZXMgdG8gdGhlIENvLU93bmVycyAoaW5jbHVkaW5nIFJpc2luZyBUcmVlIEkpIGluIHRoZSBhcHBsaWNhYmxlIFNoYXJlZCBBc3NldCBHcm91cCBpbiBhY2NvcmRhbmNlIHdpdGggdGhlaXIgcmVzcGVjdGl2ZSBQcm9wb3J0aW9uYXRlIFNoYXJlcywgaW5jbA0KdWRpbmcgcmlnaHRzIHVuZGVyIGNvbnN0cnVjdGlvbiBhbmQgc3VwcGx5IGNvbnRyYWN0cyAgKGluY2x1ZGluZyB0aGUgYWdyZWVtZW50cyBzZXQgZm9ydGggb24gRXhoaWJpdCBEKSBhbmQgY29udHJhY3Rvciwgc3VwcGxpZXIgYW5kL29yIG1hbnVmYWN0dXJlciB3YXJyYW50aWVzIHJlbGF0ZWQgdG8gc3VjaCBTaGFyZWQgRmFjaWxpdGllcywgd2hpY2ggd2FycmFudGllcyBtYXkgYmUgZW5mb3JjZWQgYXMgcHJvdmlkZWQgYmVsb3cuICB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcc2NhcHNcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ1NTk0NTI0IEhvd2V2ZXIsIA0Kbm90d2l0aHN0YW5kaW5nIGFueXRoaW5nIGhlcmVpbiB0byB0aGUgY29udHJhcnksIFJpc2luZyBUcmVlIEkgc2hhbGwgaGF2ZSBubyBsaWFiaWxpdHkgdG8gdGhlIG90aGVyIENvLU93bmVycyBmb3IgYW55IGRlZmVjdCBpbiB0aGUgZGVzaWduLCBjb25zdHJ1Y3Rpb24gb3IgdXRpbGl0eSBvZiBhbnkgb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxzY2Fwc1xpbnNyc2lkMzQzODA3OCANCi4gIFJpc2luZyBUcmVlIEkgbWFrZXMgbm8gcmVwcmVzZW50YXRpb25zIG9yIHdhcnJhbnRpZXMgb2YgYW55IGtpbmQgd2l0aCByZXNwZWN0IHRvIHRoZSBjb25kaXRpb24sIHVzZSBvciBmaXRuZXNzIG9mIGFueSBvZiB0aGUgU2hhcmVkIFJlYWwgcHJvcGVydHkgb3Igd2l0aCByZXNwZWN0IHRvIHRoZSBkZXNpZ24sIGNvbnN0cnVjdGlvbiwgb3BlcmF0aW9uIG9yIHV0aWxpdHkgb2YgYW55IG9mIHRoZSBTaGFyZWQgRmFjaWxpdGllcyx9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcc2NhcHNcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ1NTk0NTI0ICBhbmQgaGVyZWJ5IGRpc2NsYWltcyBhbnkgd2FycmFudHkgb2YgbWVyY2hhbnRhYmlsaXR5IG9yIGZpdG5lc3MgZm9yIGEgcGFydGljdWxhciBwdXJwb3NlIG9yIGFueSBvdGhlciB3YXJyYW50eSBvZiBhbnkga2luZCB3aXRoIHJlc3BlY3QgdG8gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHNjYXBzXGluc3JzaWQzNDM4MDc4IHRoZSBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBvciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHNjYXBzXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNTU5NDUyNCB0aGUgU2hhcmVkIEZhY2lsaXRpZXMufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANCiAgRWFjaCBvZiB0aGUgQ28tT3duZXJzIGFncmVlcyB0aGF0IHRoZXkgd2lsbCBsb29rIHNvbGVseSB0byB0aGUgZGVzaWduZXJzLCBjb250cmFjdG9ycywgc3VwcGxpZXJzLCBtYW51ZmFjdHVyZXJzIGFuZCBvdGhlciBQZXJzb25zIHdobyANCnBhcnRpY2lwYXRlZCBpbiB0aGUgZGVzaWduIGFuZC9vciBjb25zdHJ1Y3Rpb24gb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzIHdpdGggcmVzcGVjdCB0byBhbnkgZGVmZWN0cyBvciBicmVhY2hlcyBvZiBjb250cmFjdCBvciB3YXJyYW50eS59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTM1OTU0MzYgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1MVxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCA2Llx0YWIgDQpSZWltYnVyc2FibGUgQ29zdHMuIFNlY3Rpb24gNC4zLjIgaXMgYW1lbmRlZCBhbmQgcmVzdGF0ZWQgaW4gaXRzIGVudGlyZXR5IGFzIGZvbGxvd3M6DQpccGFyIFx0YWIgNC4zLjIgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5NTEyNyBSaXNpbmcgVHJlZSBJSSBhbmQgUmlzDQppbmcgVHJlZSBJSUkgc2hhbGwgZWFjaCByZWltYnVyc2UgUmlzaW5nIFRyZWUgSSBmb3IgYWxsIGNvc3RzIGFuZCBleHBlbnNlcyBpbmN1cnJlZCBieSBSaXNpbmcgVHJlZSBJIGluIGRlc2lnbmluZywgcGVybWl0dGluZyBhbmQgY29uc3RydWN0aW5nIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBpbiBhY2NvcmRhbmNlIHdpdGggdGhlaXIgcmVzcGVjdGl2ZSBQcm9wb3J0aW9uYXRlIFNoYXJlcyBvZiB0aGUgY29zdHMgb2YgdGhlIFNoYXJlZCBGYWNpbGkNCnRpZXMgaW4gZWFjaCBTaGFyZWQgRmFjaWxpdGllcyBHcm91cCBvZiB3aGljaCB0aGV5IGFyZSBtZW1iZXJzLCBpbiBhY2NvcmRhbmNlIHdpdGggdGhlaXIgUHJvcG9ydGlvbmF0ZSBTaGFyZXMgaW4gZWFjaCBzdWNoIFNoYXJlZCBBc3NldHMgR3JvdXA7IHByb3ZpZGVkLCBob3dldmVyLCB0aGF0IGZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IG9yIHB1cnBvc2VzIG9mIHRoaXMgU2VjdGlvbiA0LjMuMn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDk1MTI3ICwgdGhlIENvLU93bmVycycgcmVzcGVjdGl2ZSBQcm9wb3J0aW9uYXRlIFNoYXJlcyBzaGFsbCANCmJlIGRldGVybWluZWQgb24gdGhlIGJhc2lzIG9mIHRoZSBuYW1lcGxhdGUgY2FwYWNpdGllcyBzZXQgZm9ydGggaW4gUmVjaXRhbCBCLCByZWdhcmRsZXNzIG9mIHdoZXRoZXIgb3Igbm90IGEgRmFjaWxpdHkgaGFzIGFjaGlldmVkIGl0cyBDb21taXNzaW9uaW5nIERhdGUuIFN1Y2ggcmVpbWJ1cnNlbWVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDk1MTI3ICBzaGFsbCBiZSBtYWRlIHdpdGhpbiBmaWZ0ZWVuICgxNSkgZGF5cyBhZnRlciByZWNlaXB0IG9mIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggb25lIG9yIG1vcmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTUxMjcgIG5vdGljZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMzQzODA3OCBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDk1MTI3ICBmcm9tIFJpc2luZyBUcmVlIEl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4ICwgd2hpY2ggbm90aWNlcyBzaGFsbCBiZSBhY2NvbXBhbmllZCBieSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDk1MTI3IA0KYSBzdGF0ZW1lbnQgb2YgdGhlIGFtb3VudCB0byBiZSByZWltYnVyc2VkIChpbmNsdWRpbmcgYXBwcm9wcmlhdGUgc3VwcG9ydGluZyBkb2N1bWVudGF0aW9uKX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggLiA3Llx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMzQzODA3OCBBZGRpdGlvbmFsIENvLU93bmVyc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMzQzODA3OCAuICBTZWN0aW9uIDQuNiBpcyBhbWVuZGVkIGFuZCByZXN0YXRlZCBpbiBpdHMgZW50aXJldHkgYXMgZm9sbG93czoNClxwYXIgfVxwYXJkIFxsdHJwYXJcczUxXHFqIFxmaTcyMFxsaTcyMFxyaTcyMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW43MjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggNC42XHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ3NTAzNjU2IE5vIEFkZGl0aW9uYWwgQ28tT3duZXJzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANCi4gIEV4Y2VwdCBhcyBwcm92aWRlZCBoZXJlaW4sIGluY2x1ZGluZyBTZWN0aW9uIDE3LjQsIG5vIFBlcnNvbiBtYXkgYmVjb21lIGEgQ28tT3duZXIgdW5kZXIgdGhpcyBBZ3JlZW1lbnQgb3IgYW4gYWRkaXRpb25hbCBjby1vd25lciBvZiBhbnkgb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzLCB0aGUgU2hhcmVkIFJlYWwgUHJvcGVydHkgb3IgdGhlIFNoYXJlZCBSZWFsIFByb3BlcnR5IEFncmVlbWVudHMgd2l0aG91dCB0aGUgcHJpb3INCiB3cml0dGVuIGNvbnNlbnQgb2YgYWxsIG9mIHRoZSBDby1Pd25lcnMuICBBbnkgUGVyc29uIGJlY29taW5nIGEgQ28tT3duZXIgdW5kZXIgdGhpcyBBZ3JlZW1lbnQgKGluY2x1ZGluZyBhbiBhc3NpZ25lZSB1bmRlciBTZWN0aW9uIDE3LjQpIHNoYWxsIGV4ZWN1dGUgYSBqb2luZGVyLCB0aGUgZm9ybSBvZiB3aGljaCBpcyBhdHRhY2hlZCBhcyBFeGhpYml0IEYgaGVyZXRvIGFuZCwgZXhjZXB0IGZvciBhbiBhc3NpZ25lZSBwdXJzdWFudCB0byBTZQ0KY3Rpb24gMTcuNCwgc3VjaCBvdGhlciBhbWVuZG1lbnRzIGFzIHRoZSBDby1Pd25lcnMgaGF2ZSBkZXRlcm1pbmVkIG1heSBiZSBuZWNlc3NhcnkuDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1MVxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCA4Llx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDgyMTUzODkgDQpNZWFzdXJlbWVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggLiAgVGhlIGZpcnN0IHBhcmFncmFwaCBvZiBTZWN0aW9uIDUuMSBpcyBhbWVuZGVkIGFuZCByZXN0YXRlZCBpbiBpdHMgZW50aXJldHkgYXMgZm9sbG93czoNClxwYXIgfVxwYXJkIFxsdHJwYXJcczUxXHFqIFxmaTcyMFxsaTcyMFxyaTcyMFxzYTI0MFx3aWRjdGxwYXJcdHgyMTYwXHR4MTI1MTBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW43MjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggNS4xXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxMzU4NzcwNSBNZWFzdXJlbWVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggLiAgRW5lcmd5IHRyYW5zbWl0dGVkIG9uIHRoZSBUcmFuc21pc3Npb24gTGluZSBzaGFsbCANCmJlIG1lYXN1cmVkIGZvciBlYWNoIEZhY2lsaXR5IGluIGVhY2ggU2V0dGxlbWVudCBJbnRlcnZhbCBieSB0aGUgcmV2ZW51ZSBtZXRlciBmb3Igc3VjaCBGYWNpbGl0eS4gIEhvd2V2ZXIsIGlmIGFuZCBmb3IgdGhlIHBlcmlvZCB0aGF0IHRoZXJlIGlzIGFuIGVxdWlwbWVudCBmYWlsdXJlIG9yIG90aGVyIGV2ZW50IHRoYXQgcHJldmVudHMgb3IgaW50ZXJmZXJlcyB3aXRoIHRoZSBvcGVyYXRpb24gb2YgdGhlIHNlcGFyYXRlIG1ldGVyaW5nLCBlbg0KZXJneSB0cmFuc21pdHRlZCBvbiB0aGUgVHJhbnNtaXNzaW9uIExpbmUgc2hhbGwgYmUgbWVhc3VyZWQgYW5kIGFsbG9jYXRlZCBiZXR3ZWVuIHRoZSBGYWNpbGl0aWVzIGluIGVhY2ggU2V0dGxlbWVudCBJbnRlcnZhbCBpbiBwcm9wb3J0aW9uIHRvIHRoZWlyIHJlc3BlY3RpdmUgTWV0ZXJlZCBFbmVyZ3kgYXMgbWVhc3VyZWQgYnkgdGhlIEZhY2lsaXR5XHJxdW90ZSANCnMgY2hlY2sgbWV0ZXIgb3Igb3RoZXIgYXZhaWxhYmxlIG1ldGVyKHMpIGR1cmluZyBzdWNoIFNldHRsZW1lbnQgSW50ZXJ2YWwgYXMgc2V0IGZvcnRoIGJlbG93LiAgSW4gdGhlIGV2ZW50IHRoYXQgbm8gbWV0ZXIgZGF0YSBpcyBhdmFpbGFibGUsIHN1Y2ggYWxsb2NhdGlvbiBzaGFsbCBiZSBtYWRlIGluIGEgcmVhc29uYWJsZSBtYW5uZXIgb24gdGhlIGJhc2lzIG9mIHdoYXRldmVyIGRhdGEgYW5kIGluZm9ybWF0aW9uIGlzIGF2YWlsYWJsZS4NCg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTFccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggOS5cdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ4MjE1Mzg5IA0KRW5nYWdlbWVudCBvZiBPcGVyYXRvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggLiAgU2VjdGlvbiA2LjEgaXMgYW1lbmRlZCBhbmQgcmVzdGF0ZWQgaW4gaXRzIGVudGlyZXR5IGFzIGZvbGxvd3M6DQpccGFyIH1ccGFyZCBcbHRycGFyXHM1MVxxaiBcZmk3MjBcbGk3MjBccmk3MjBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluNzIwXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IDYuMVx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTM1ODc3MDUgRW5nYWdlbWVudCBvZiBPcGVyYXRvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQouICBUaGUgQ28tT3duZXJzIGhlcmVieSBlbmdhZ2UgT3BlcmF0b3IgdG8gbWFuYWdlLCBvcGVyYXRlLCBtYWludGFpbiBhbmQgcmVwYWlyIHRoZSBTaGFyZWQgRmFjaWxpdGllcywgdG8gYWRtaW5pc3RlciBhbmQgdGFrZSBhbGwgbmVjZXNzYXJ5IGFjdGlvbnMgdW5kZXIgdGhlIFNoYXJlZCBSZWFsIFByb3BlcnR5IEFncmVlbWVudHMsIHRvDQogYWRtaW5pc3RlciBhbmQgdGFrZSBhbGwgbmVjZXNzYXJ5IGFjdGlvbnMgdW5kZXIgdGhlIFNoYXJlZCBQZXJtaXRzLCBhbmQgdG8gcGVyZm9ybSBvdGhlciBkdXRpZXMgcGVydGFpbmluZyB0byB0aGUgU2hhcmVkIEFzc2V0cyAodGhlIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkMzQzODA3OCBPJk0gU2VydmljZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IFwnOTQNCiksIGFsbCBhcyBzZXQgZm9ydGggaW4gdGhpcyBBZ3JlZW1lbnQ7IHByb3ZpZGVkLCBob3dldmVyLCB0aGF0IHRvIHRoZSBleHRlbnQgb25lIG9yIG1vcmUgUGVybWl0cyBkbyBub3QgDQphcHBseSB0byB0aGUgU2hhcmVkIEZhY2lsaXRpZXMsIGJ1dCBpbnN0ZWFkIGFwcGx5IHRvIHRoZSBGYWNpbGl0aWVzIG9yIG90aGVyIHByb3BlcnR5IHNlcGFyYXRlbHkgb3duZWQgYnkgbW9yZSB0aGFuIG9uZSBvZiB0aGUgQ28tT3duZXJzLCBPcGVyYXRvciB3aWxsIHN0aWxsIGFkbWluaXN0ZXIgYW5kIHRha2UgYWxsIG5lY2Vzc2FyeSBhY3Rpb25zIHVuZGVyIHN1Y2ggc2VwYXJhdGUgUGVybWl0cywgYnV0IHRoZSBhZG1pbmlzdHJhdGlvbiBvZiANCmENCm5kIGFjdGlvbnMgdGFrZW4gdW5kZXIgc3VjaCBzZXBhcmF0ZSBQZXJtaXRzIHNoYWxsIG5vdCBiZSBpbmNsdWRlZCBpbiBPJk0gU2VydmljZXMsIGJ1dCBzaGFsbCBiZSBwYWlkIGZvciBzZXBhcmF0ZWx5IGJ5IHRoZSBDby1Pd25lcnMgYmVuZWZpdGluZyBmcm9tIHN1Y2ggU2hhcmVkIFBlcm1pdHMgaW4gcHJvcG9ydGlvbiB0byB0aGVpciByZXNwZWN0aXZlIGJlbmVmaXRzLiAgT3BlcmF0b3IgYWNjZXB0cyBzdWNoIGVuZ2FnZW1lbnQgYW5kIGFncg0KZWVzIHRvIHBlcmZvcm0gc3VjaCBkdXRpZXMgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZSB0ZXJtcyBhbmQgY29uZGl0aW9ucyBoZXJlb2YuICBPcGVyYXRvclxycXVvdGUgDQpzIGF1dGhvcml0eSBzaGFsbCBiZSBsaW1pdGVkIHRvIHBlcmZvcm1pbmcgdGhlIE8mTSBTZXJ2aWNlcyBhbmQgc3VjaCBvdGhlciBzZXJ2aWNlcyBhcyBtYXkgYmUgYXBwcm92ZWQgYnkgYWxsIG9mIHRoZSBDby1Pd25lcnMgYW5kIHNoYWxsIGJlIGZ1cnRoZXIgbGltaXRlZCBhcyBwcm92aWRlZCBpbiBTZWN0aW9uIDYuMTYuDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1MVxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAxMC5cdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ4MjE1Mzg5IA0KU2NoZWR1bGVkIE1haW50ZW5hbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAuICBTZWN0aW9uIDYuNCBpcyBhbWVuZGVkIGFuZCByZXN0YXRlZCBpbiBpdHMgZW50aXJldHkgYXMgZm9sbG93czoNClxwYXIgfVxwYXJkIFxsdHJwYXJcczUxXHFqIFxmaTcyMFxsaTcyMFxyaTcyMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW43MjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggNi40XHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQyODkwNzkgU2NoZWR1bGVkIE1haW50ZW5hbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAuICBPcGVyYXRvciBzaGFsbCBzY2hlZHVsZSBtYWludGVuYW5jZSBhbmQgYW55IHBsYW5uZWQgb3V0YWdlcyBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgc28gYXMgdG8gbWluaW1pemUgaW50ZXJmZXJlbmNlIHdpdGggdGhlIENvLU93bmVyc1xycXVvdGUgDQogc2NoZWR1bGVkIGVuZXJneSBkZWxpdmVyaWVzLiAgTWFpbnRlbmFuY2UgYW5kIGFueSBwbGFubmVkIG91dGFnZXMgb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzIHNoYWxsIGJlIHNjaGVkdWxlZCwgdG8gdGhlIG1heGltdW0gZXh0ZW50IHBvc3NpYmxlLCBkdXJpbmcgc2NoZWR1bGVkIG1haW50ZW5hbmNlIG91dGFnZXMgb2YgdGhlIENvLU93bmVyc1xycXVvdGUgIEZhY2lsaXRpZXMuICBFYWNoIENvLU93bmVyIHdpbGwgcHJvdmlkZSB0DQpvIHRoZSBPcGVyYXRvciBhbmQgdGhlIG90aGVyIENvLU93bmVycyBubyBsYXRlciB0aGFuIGZpZnRlZW4gKDE1KSBCdXNpbmVzcyBEYXlzIGFmdGVyIEphbnVhcnlcfjEgb2YgZWFjaCB5ZWFyIGEgc2NoZWR1bGUgb2YgcGxhbm5lZCBtYWludGVuYW5jZSBvdXRhZ2VzIG9uIHN1Y2ggQ28tT3duZXJccnF1b3RlIA0KcyBGYWNpbGl0eSBmb3IgdGhlIHN1YnNlcXVlbnQgdHdlbHZlLSBtb250aCBwZXJpb2QuICBTY2hlZHVsZWQgb3V0YWdlcyBvZiB0aGUgU2hhcmVkIEZhYw0KaWxpdGllcyB3aWxsIGJlIHN1YmplY3QgdG8gdGhlIGFwcHJvdmFsIG9mIGFsbCBhZmZlY3RlZCBDby1Pd25lcnMsIHN1Y2ggYXBwcm92YWwgbm90IHRvIGJlIHVucmVhc29uYWJseSB3aXRoaGVsZC4gIE9wZXJhdG9yIHdpbGwgc2VlayB0byBsaW1pdCB0aGUgZHVyYXRpb24gb2YgYW55IG91dGFnZSwgcGxhbm5lZCBvciB1bnBsYW5uZWQsIHRvIHRoZSBtYXhpbXVtIGV4dGVudCByZWFzb25hYmx5IHBvc3NpYmxlIGNvbnNpc3RlbnQgd2l0aCBBcHBsDQppY2FibGUgTGF3cyBhbmQgR29vZCBVdGlsaXR5IFByYWN0aWNlLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTFccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggMTEuXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkODIxNTM4OSANCkRpc3B1dGVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAuICBTZWN0aW9uIDYuMTIgaXMgYW1lbmRlZCBhbmQgcmVzdGF0ZWQgaW4gaXRzIGVudGlyZXR5IGFzIGZvbGxvd3M6DQpccGFyIH1ccGFyZCBcbHRycGFyXHM1MVxxaiBcZmk3MjBcbGk3MjBccmk3MjBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluNzIwXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IDYuMTJcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDI4OTA3OSBEaXNwdXRlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggLiAgSWYgYSBDby1Pd25lciBkaXNwdXRlcyB0aGUgYWNjdXJhY3kgb2YgYWxsIG9yIGFueSBwb3J0aW9uIG9mIGFuIGludm9pY2UsIHN1Y2ggQ28tT3duZXIgc2hhbGwsIG5ldmVydGhlbGVzcywgcGF5IHRoZSBmdWxsIGENCm1vdW50IG9mIHRoZSBpbnZvaWNlIChpbmNsdWRpbmcgdGhlIGRpc3B1dGVkIHBvcnRpb24pIGFuZCBzdWJtaXQgdG8gT3BlcmF0b3IgYSB3cml0dGVuIHN0YXRlbWVudCBkZXRhaWxpbmcgdGhlIGl0ZW1zIGRpc3B1dGVkOyBwcm92aWRlZCwgaG93ZXZlciwgdGhhdCBpZiB0aGUgdGhpcmQgcGFydHkgY29udHJhY3QgdW5kZXIgd2hpY2ggdGhlIGNvc3RzIGFuZCBleHBlbnNlcyBpbnZvaWNlZCB3ZXJlIGluY3VycmVkIHBlcm1pdHMgdGhlIHdpdGhobw0KbA0KZGluZyBvZiBkaXNwdXRlZCBwYXltZW50cywgYW5kIGlmIE9wZXJhdG9yIGhhcyBub3QgYWxyZWFkeSBwYWlkIHN1Y2ggdGhpcmQgcGFydHkgZm9yIHN1Y2ggY29zdHMgYW5kIGV4cGVuc2VzLCBhIENvLU93bmVyIG1heSBkaXNwdXRlIHRoZSBhY2N1cmFjeSBvZiBhbGwgb3IgYSBwYXJ0IG9mIGFuIGludm9pY2UgYnkgc3VibWl0dGluZyBhIHdyaXR0ZW4gbm90aWNlIG9mIGRpc3B1dGUgYW5kIGEgd3JpdHRlbiBzdGF0ZW1lbnQgZGV0YWlsaW5nIHRoDQplDQogaXRlbXMgZGlzcHV0ZWQgYW5kIG1heSB3aXRoaG9sZCBwYXltZW50IHRvIHRoZSBleHRlbnQgYWxsb3dlZCB1bmRlciB0aGUgdGhpcmQgcGFydHkgY29udHJhY3QgdW50aWwgdGhlIGVhcmxpZXIgb2YgdGhlIHJlc29sdXRpb24gb2YgdGhlIGRpc3B1dGUgb3IgdGhlIHRpbWUgd2hlbiBwYXltZW50IG1heSBubyBsb25nZXIgYmUgd2l0aGhlbGQgdW5kZXIgdGhlIHRoaXJkIHBhcnR5IGNvbnRyYWN0LCBhdCB3aGljaCBwb2ludCB0aGUgQ28tT3duZXINCiANCmRpc3B1dGluZyB0aGUgYWNjdXJhY3kgb2YgYW4gaW52b2ljZSBzaGFsbCBwcm9tcHRseSBwYXkgdGhlIGRpc3B1dGVkIGFtb3VudCB0byBPcGVyYXRvciBhcyBwcm92aWRlZCBhYm92ZS4gIElmIHRoZSBDby1Pd25lciBhbmQgT3BlcmF0b3IgYXJlIHVuYWJsZSB0byByZXNvbHZlIHRoZSBkaXNwdXRlZCBpdGVtcywgdGhlIG1hdHRlciB3aWxsIGJlIHJlc29sdmVkIGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgZGlzcHV0ZSByZXNvbHV0aW9uIHByb3Zpcw0KaW9ucyBpbiBFeGhpYml0IEUuICBJZiB0aGUgQ28tT3duZXIgcHJldmFpbHMgd2l0aCByZXNwZWN0IHRvIHRoZSBkaXNwdXRlZCBhbW91bnRzLCBPcGVyYXRvciBzaGFsbCByZWZ1bmQgdGhlIENvLU93bmVyIHRoZSBkaXNwdXRlZCBhbW91bnRzLCBpbmNsdWRpbmcgaW50ZXJlc3Qgb24gdGhlIGRpc3B1dGVkIGFtb3VudHMgYXQgdGhlIExhdGUgUGF5bWVudCBSYXRlLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTFccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggMTIuXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQzNDM4MDc4IA0KUmlzayBvZiBMb3NzOyBJbmRlbW5pdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IC4gU2VjdGlvbiA2LjE1IGlzIGFtZW5kZWQgYW5kIHJlc3RhdGVkIGluIGl0cyBlbnRpcmV0eSBhcyBmb2xsb3dzOg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTFccWogXGxpNzIwXHJpNzIwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjcyMFxsaW43MjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxMzU3MTE1MyANCjYuMTUuMSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTM1NzExNTMgDQpBcyBiZXR3ZWVuIHRoZSBDby1Pd25lcnMgYW5kIHRoZSBPcGVyYXRvciwgdGhlIENvLU93bmVycyBzaGFsbCBiZSByZXNwb25zaWJsZSBmb3IgdGhlIHJpc2sgb2YgbG9zcyB0byB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgb3IgYW55IHBvcnRpb24gdGhlcmVvZiBkdXJpbmcgdGhlIHJlcGFpciwgbWFuYWdlbWVudCwgb3BlcmF0aW9uIGFuZCBtYWludGVuYW4NCmNlIG9mIHRoZSBTaGFyZWQgRmFjaWxpdGllcywgcmVnYXJkbGVzcyBvZiBjYXVzZSwgZXhjZXB0IHRvIHRoZSBleHRlbnQgc3VjaCBsb3NzIGlzIGNhdXNlZCBpbiB3aG9sZSBvciBpbiBwYXJ0IGJ5IHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggIGdyb3NzIG5lZ2xpZ2VuY2UsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDEzNTcxMTUzIA0KIGZyYXVkIG9yIHdpbGxmdWwgbWlzY29uZHVjdCBvZiB0aGUgT3BlcmF0b3IufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANClxwYXIgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTM1NzExNTMgNi4xNS4yIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTM1NzExNTMgT3BlcmF0b3Igc2hhbGwgbm90IGJlIGxpYWJsZSB0byBhbnkgQ28tT3duZXIgZm9yIGFueSBhY3QgcGVyZm9ybWUNCmQgaW4gZ29vZCBmYWl0aCBieSBPcGVyYXRvciBpbiB0aGUgZGlzY2hhcmdlIG9mIGl0cyBkdXRpZXMgaGVyZXVuZGVyIGFzIE9wZXJhdG9yIG9yIGluIHRoZSBleGVyY2lzZSBvZiBpdHMgcG93ZXJzIGFuZCBhdXRob3JpdHkgaGVyZXVuZGVyIGFzIE9wZXJhdG9yLCBpbmNsdWRpbmcgZGFtYWdlcyBhcmlzaW5nIG91dCBvZiBhbnkgY3VydGFpbG1lbnQgb2YgdXNlIG9mIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBvciB0aGUgZGlzY29ubmVjdGlvbiBvZg0KLCBvciB0aGUgZWxlY3Rpb24gbm90IHRvIGRpc2Nvbm5lY3QsIGEgRmFjaWxpdHkgZnJvbSB0aGUgU2hhcmVkIEZhY2lsaXRpZXMsIHVubGVzc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxMzU3MTE1MyBPcGVyYXRvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQogaGFzIG1hdGVyaWFsbHkgYnJlYWNoZWQgaXRzIG9ibGlnYXRpb25zIGhlcmV1bmRlciBvciBPcGVyYXRvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxMzU3MTE1MyAncyBhY3RzIG9yIG9taXNzaW9ucyBjb25zdGl0dXRlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAsIGdyb3NzIG5lZ2xpZ2VuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxMzU3MTE1MyAgZnJhdWQgb3Igd2lsbGZ1bCBtaXNjb25kdWN0Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQpccGFyIFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDEzNTcxMTUzIDYuMTUuMyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTM1NzExNTMgRWFjaCBDby1Pd25lciBzaA0KYWxsLCBwcm8gcmF0YSBpbiBhY2NvcmRhbmNlIHdpdGggaXRzIFByb3BvcnRpb25hdGUgSW50ZXJlc3QsIGluZGVtbmlmeSBhbmQgaG9sZCBoYXJtbGVzcyBPcGVyYXRvciBhbmQgaXRzIGVtcGxveWVlcyBhbmQgYWdlbnRzLCBmcm9tIGFueSBjbGFpbSwgbG9zcywgbGlhYmlsaXR5IG9yIGRhbWFnZSBpbmN1cnJlZCBieSByZWFzb24gb2YgYW55IGFjdCBwZXJmb3JtZWQgb3Igb21pdHRlZCB0byBiZSBwZXJmb3JtZWQgYnkgaXQgaW4gaXRzIHJlYXNvDQpuYWJsZSBqdWRnbWVudCwgaW4gZ29vZCBmYWl0aCwgb3IgaW4gcmVhc29uYWJsZSByZWxpYW5jZSBvbiBhZHZpY2Ugb2YgT3BlcmF0b3IncyBhdHRvcm5leXMgb3IgYWNjb3VudGFudHMsIGluIGNvbm5lY3Rpb24gd2l0aCB0aGUgU2hhcmVkIEZhY2lsaXRpZXMsIHRoZSBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBvciB0aGlzIEFncmVlbWVudCAob3RoZXIgdGhhbiBhcyBhIHJlc3VsdCBvZiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDM0MzgwNzggIGdyb3NzIG5lZ2xpZ2VuY2UsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDEzNTcxMTUzICBmcmF1ZCBvciB3aWxsZnVsIG1pc2NvbmR1Y3Qgb2YgT3BlcmF0b3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4ICBvciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTY1MjY0NzggDQphIGJyZWFjaCBieSBPcGVyYXRvciBvZiBpdHMgb2JsaWdhdGlvbnMgdW5kZXIgdGhpcyBBZ3JlZW1lbnQsIHRoZSBJbnRlcmNvbm5lY3Rpb24gQWdyZWVtZW50IG9yIHRoZSBMR0lBIENvLVRlbmFuY3kgQWdyZWVtZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDEzNTcxMTUzIA0KKSwgaW5jbHVkaW5nIHJlYXNvbmFibGUgYXR0b3JuZXlzJyBmZWVzIGluY3VycmVkIGJ5IE9wZXJhdG9yIGluIGNvbm5lY3Rpb24gd2l0aCB0aGUgZGVmZW5zZSBvZiBhbnkgYWN0aW9uIGJhc2VkIG9uIGFueSBzdWNoIGFsbGVnZWQgYWN0IG9yLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTFccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggMTMuXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkODIxNTM4OSANCkxpbWl0YXRpb25zIG9uIE9wZXJhdG9yXHJxdW90ZSBzIEF1dGhvcml0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggLiAgU2VjdGlvbiA2LjE2IGlzIGFtZW5kZWQgYW5kIHJlc3RhdGVkIGluIGl0cyBlbnRpcmV0eSBhcyBmb2xsb3dzOg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTFccWogXGZpNzIwXGxpNzIwXHJpNzIwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjcyMFxsaW43MjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCA2LjE2XHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxNjQ3NTA3OCBMaW1pdGF0aW9ucyBvbiBPcGVyYXRvclxycXVvdGUgcyBBdXRob3JpdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IC4gIE5vdHdpdGhzdGFuZGluZyBhbnl0aGluZyBoZXJlaW4gdG8gdGhlIGNvbnRyYXJ5IGFuZCBpbiBhZGRpdGlvbiB0byB0aGUgDQpsaW1pdGF0aW9ucyBzZXQgZm9ydGggaW4gU2VjdGlvbiA5LjIsIE9wZXJhdG9yIHNoYWxsIGhhdmUgbm8gYXV0aG9yaXR5IHRvIGFuZCBzaGFsbCBub3QgKGkpIGFtZW5kLCBhc3NpZ24gb3IgdGVybWluYXRlIGFueSBNYXRlcmlhbCBQcm9qZWN0IEFncmVlbWVudCBvciBlbnRlciBpbnRvLCBhbWVuZCwgYXNzaWduIG9yIHRlcm1pbmF0ZSBhbnkgb3RoZXIgY29udHJhY3Qgb3IgYWdyZWVtZW50IG9uIGJlaGFsZiBvZiB0aGUgQ28tT3duZXJzLCAoaWkNCikNCiBjcmVhdGUgYW55IGxpZW4gb3Igc2VjdXJpdHkgaW50ZXJlc3Qgb24gb3IgaW4gYW55IFNoYXJlZCBGYWNpbGl0aWVzLCBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBvciBhbnkgb3RoZXIgYXNzZXQgb2YgYW55IG9yIGFsbCBvZiB0aGUgQ28tT3duZXJzLCBleGNlcHQgYXMgZXhwcmVzc2x5IHBlcm1pdHRlZCB1bmRlciBTZWN0aW9uIDEwLjYsIChpaWkpIGJ1eSwgc2VsbCwgY29udmV5IG9yIG90aGVyd2lzZSBkaXNwb3NlIG9mIGFueSBTaGFyZWQgRmFjaQ0KbA0KaXRpZXMgb3IgU2hhcmVkIFJlYWwgUHJvcGVydHksIChpdikgaW5jdXIgYW55IGRlYnQgb3Igb3RoZXIgb2JsaWdhdGlvbnMgb24gYmVoYWxmIG9mIGFueSBvciBhbGwgb2YgdGhlIENvLU93bmVycywgZXhjZXB0IHNob3J0IHRlcm0gYWNjb3VudHMgcGF5YWJsZSBpbiBjb25uZWN0aW9uIHdpdGggdGhlIE8mTSBTZXJ2aWNlcyBvciBhcyBwcm92aWRlZCBpbiBhIHNlcGFyYXRlIHdyaXR0ZW4gYWdyZWVtZW50IGFtb25nIE9wZXJhdG9yIGFuZCBhbGwgDQpvDQpmIHRoZSBDby1Pd25lcnMsICh2KSBlbnRlciBpbnRvIGxlYXNlcyBvciBzdWJsZWFzZXMgb2Ygb3IgZ3JhbnQgbGljZW5zZXMgb3Igb3RoZXIgcmlnaHRzIHdpdGggcmVzcGVjdCB0byBhbnkgU2hhcmVkIEZhY2lsaXRpZXMgb3IgU2hhcmVkIFJlYWwgRXN0YXRlLCBvciAodmkpIHRlcm1pbmF0ZSBvciByZWR1Y2UgYW55IGluc3VyYW5jZSBjb3ZlcmFnZSBiZWxvdyB0aGF0IHdoaWNoIGlzIHJlcXVpcmVkIHVuZGVyIHRoZSBNYXRlcmlhbCBQcm9qZWMNCnQgQWdyZWVtZW50cywgZXhjZXB0IGluIGVhY2ggY2FzZSB3aXRoIHRoZSB3cml0dGVuIGFwcHJvdmFsIG9mIGFsbCBvZiB0aGUgQ28tT3duZXJzLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTFccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggMTQuXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQzNDM4MDc4IA0KUmVwbGFjZW1lbnQgb2YgT3BlcmF0b3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IC5cdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxMzc5MjMzMyBTZWN0aW9uIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggNi4xN317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDEzNzkyMzMzICBpcyBhbWVuZGVkIGFuZCByZXN0YXRlZCBpbiBpdHMgZW50aXJldHkgYXMgZm9sbG93czp9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTFccWogXGZpNzIwXGxpNzIwXHJpNzIwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjcyMFxsaW43MjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IHtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxjZjFcaW5zcnNpZDM0MzgwNzggNi4xN1x0YWIgfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIA0KXHVsXGNmMVxpbnNyc2lkMzQzODA3OCBSZXBsYWNlbWVudCBvZiB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXHVsXGNmMVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDEzNzkyMzMzIE9wZXJhdG9yfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxjZjFcaW5zcnNpZDM0MzgwNzggLiB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgDQpcY2YxXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTM3OTIzMzMgT3BlcmF0b3IgbWF5IGJlfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxjZjFcaW5zcnNpZDM0MzgwNzggIHJlbW92ZWQgdXBvbiB0aGUgdm90ZSwgd2l0aG91dCB0aGUgcGFydGljaXBhdGlvbiBvZiB0aGV9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGNmMVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDE0ODE1MTA1ICBDby1Pd25lciB9ew0KXHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQzNDM4MDc4IHRoYXQgaXN9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGNmMVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDE0ODE1MTA1ICBPcGVyYXRvciB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGNmMVxpbnNyc2lkMzQzODA3OCBhdCBzdWNoIHRpbWUsIG9mIChpKSB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgDQpcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTM3OTIzMzMgdHdvLXRoaXJkcyBvZiB0aGUgQ28tT3duZXJzIChiYXNlZCBvbiB0aGVpciByZXNwZWN0aXZlIFByb3BvcnRpb25hdGUgU2hhcmVzKX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQzNDM4MDc4ICBvciAoaWkpIGEgbWFqb3JpdHkgb2YgdGhlIENvLU93bmVycyB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgDQpcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTIwMTkxMjEgKGJhc2VkIG9uIHRoZWlyIHJlc3BlY3RpdmUgUHJvcG9ydGlvbmF0ZSBTaGFyZXN9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGNmMVxpbnNyc2lkMzQzODA3OCApLCB1cG9uIHRoZWlyIHJlYXNvbmFibGUgZGV0ZXJtaW5hdGlvbiB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgDQpcY2YxXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTIwMTkxMjEgdGhhdCB0aH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQzNDM4MDc4IGVyZSBpcyBDYXVzZSBmb3IgcmVtb3ZhbC4gTm90d2l0aHN0YW5kaW5nIGFueXRoaW5nIGNvbnRhaW5lZCBpbiB0aGlzIEFncmVlbWVudCB0byB0aGUgY29udHJhcnksIHRoZSBhcHBvaW50bWVudCBvZiBhfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIA0KXGNmMVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDEzNzkyMzMzIG55IG5ldyBPcGVyYXRvcn17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQzNDM4MDc4ICB1bmRlciB0aGlzIEFncmVlbWVudCwgd2hldGhlciBhcyBhIHJlc3VsdCBvZiBhbnkgcmVtb3ZhbCBvZiB0aGUgZXhpc3RpbmcgT3BlcmF0b3IgdW5kZXIgdGhpcyB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgDQpcdWxcY2YxXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTM3OTIzMzMgU2VjdGlvbiA2LjE3fXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxjZjFcaW5zcnNpZDM0MzgwNzggIG9yIG90aGVyd2lzZSAoaW5jbHVkaW5nIGFzIGEgcmVzdWx0IG9mIGEgdHJhbnNmZXIgb3IgYXNzaWdubWVudCB1bmRlciB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgDQpcdWxcY2YxXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTM3OTIzMzMgU2VjdGlvbiAxNy40fXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxjZjFcaW5zcnNpZDM0MzgwNzggKX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTM3OTIzMzMgIG11c3QgYmUgYXBwcm92ZWQgYnkgfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIA0KXGNmMVxpbnNyc2lkMzQzODA3OCBhIG1ham9yaXR5fXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxjZjFcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxMzc5MjMzMyAgdm90ZSBvZiB0aGUgQ28tT3duZXJzfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxjZjFcaW5zcnNpZDM0MzgwNzggDQogKHdpdGhvdXQgdGhlIHBhcnRpY2lwYXRpb24sIGZvciB0aGUgYXZvaWRhbmNlIG9mIGRvdWJ0LCBvZiBhbnkgQ28tT3duZXIgd2hpY2ggaXMgYmVpbmcgcmVtb3ZlZCBhcyB0aGUgT3BlcmF0b3IgdW5kZXIgdGhpcyB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXHVsXGNmMVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDEzNzkyMzMzIFNlY3Rpb24gNi4xN317XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCANClxjZjFcaW5zcnNpZDM0MzgwNzggKS59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTQ2MzY3NjggDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1MVxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAxNS5cdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ4MjE1Mzg5IA0KQ29uZGVtbmF0aW9uIEF3YXJkc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggLiAgU2VjdGlvbiA5LjYgaXMgYW1lbmRlZCBhbmQgcmVzdGF0ZWQgaW4gaXRzIGVudGlyZXR5IGFzIGZvbGxvd3M6DQpccGFyIH1ccGFyZCBcbHRycGFyXHM1MVxxaiBcZmk3MjBcbGk3MjBccmk3MjBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluNzIwXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IDkuNlx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTQzODg0MSBDb25kZW1uYXRpb24gQXdhcmRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAuICBBbg0KeSBjb25kZW1uYXRpb24gb3Igc2ltaWxhciBhd2FyZHMgdG8gd2hpY2ggdGhlIENvLU93bmVycyBzaGFsbCBiZWNvbWUgZW50aXRsZWQgdW5kZXIgdGhlIFNoYXJlZCBSZWFsIFByb3BlcnR5IEFncmVlbWVudHMgb3Igd2l0aCByZXNwZWN0IHRvIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBzaGFsbCBiZSB1c2VkIHRvIHJlcGFpciwgcmVzdG9yZSBvciByZXBsYWNlIHRoZSBhZmZlY3RlZCBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBhbmQvb3IgU2hhcmVkIEZhDQpjDQppbGl0aWVzIHVubGVzcyBzdWNoIHJlcGFpciwgcmVzdG9yYXRpb24gb3IgcmVwbGFjZW1lbnQgaXMgbm90IGZlYXNpYmxlLCB0aGUgY29uZGVtbmF0aW9uIG9yIG90aGVyIGF3YXJkIGlzIGluc3VmZmljaWVudCB0byBjb21wbGV0ZSBzdWNoIHJlcGFpciwgcmVzdG9yYXRpb24gb3IgcmVwbGFjZW1lbnQsIG9yIGFsbCBvZiB0aGUgQ28tT3duZXJzIGFncmVlIG90aGVyd2lzZSBpbiB3cml0aW5nLiAgSWYgc3VjaCBjb25kZW1uYXRpb24gb3Igb3RoZXINCiANCmF3YXJkcyBhcmUgbm90IHVzZWQgdG8gcmVwYWlyLCByZXN0b3JlIG9yIHJlcGxhY2UgdGhlIGFmZmVjdGVkIFNoYXJlZCBSZWFsIFByb3BlcnR5IGFuZC9vciBTaGFyZWQgRmFjaWxpdGllcywgdGhleSBzaGFsbCBiZSBkaXZpZGVkIGFtb25nIHRoZSBDby1Pd25lcnMgaW4gcHJvcG9ydGlvbiB0byB0aGVpciByZXNwZWN0aXZlIE93bmVyc2hpcCBJbnRlcmVzdHMgaW4gdGhlIGFmZmVjdGVkIFNoYXJlZCBSZWFsIFByb3BlcnR5IGFuZC9vciBTaGFyZQ0KZA0KIEZhY2lsaXRpZXMsIHByb3ZpZGVkIHRoYXQgaWYgc3VjaCBzdW1zIGFyZSBpbiByZWltYnVyc2VtZW50IG9mIG9yIGNvbXBlbnNhdGlvbiBmb3Igc3BlY2lmaWMgY29zdHMgb3IgZGFtYWdlcyBpbmN1cnJlZCBieSB0aGUgQ28tT3duZXJzIGluIHJhdGlvcyBkaWZmZXJlbnQgZnJvbSB0aGF0IG9mIHRoZWlyIE93bmVyc2hpcCBJbnRlcmVzdHMsIHRoZW4gc3VjaCBkaWZmZXJlbnQgcmF0aW9zIHNoYWxsIGJlIHVzZWQgaW4gYXBwb3J0aW9ubWVudCBvDQpmDQogc3VjaCBzdW1zIGFtb25nIHRoZSBDby1Pd25lcnMuICBJZiB0aGUgQ28tT3duZXJzIGFyZSB1bmFibGUgdG8gYWdyZWUgb24gd2hldGhlciBvciBub3QgYSByZXBhaXIsIHJlc3RvcmF0aW9uIG9yIHJlcGxhY2VtZW50IGlzIGZlYXNpYmxlLCB0aGUgY29uZGVtbmF0aW9uIG9yIG90aGVyIGF3YXJkIHNoYWxsIGJlIGRpdmlkZWQgYW1vbmcgYW5kIGRpc3RyaWJ1dGVkIHRvIHRoZSBDby1Pd25lcnMgYXMgcHJvdmlkZWQgaW4gdGhlIHByZWNlZGluZyANCnMNCmVudGVuY2UsIGFuZCBhIENvLU93bmVyIHdpc2hpbmcgdG8gZG8gc28gbWF5IHJlcGFpciwgcmVzdG9yZSBvciByZXBsYWNlIHRoZSBhZmZlY3RlZCBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBhbmQvb3IgU2hhcmVkIEZhY2lsaXRpZXMgZm9yIGl0cyBvd24gYWNjb3VudCBhbmQgdXNlLCBidXQgYXQgaXRzIG93biBleHBlbnNlLCBhbmQgbm8gb3RoZXIgQ28tT3duZXIgc2hhbGwgaGF2ZSB0aGUgcmlnaHQgdG8gdXNlIHN1Y2ggcmVwYWlyZWQsIHJlc3Rvcg0KZWQgb3IgcmVwbGFjZWQgcHJvcGVydHkgb3IgZmFjaWxpdGllcyB1bmxlc3MgYW5kIHVudGlsIGl0IGhhcyByZWltYnVyc2VkIHRoZSBDby1Pd25lciB0aGF0IGVmZmVjdGVkIHRoZSByZXBhaXIsIHJlc3RvcmF0aW9uIG9yIHJlcGxhY2VtZW50IGZvciB0aGUgb3RoZXIgQ28tT3duZXJccnF1b3RlIA0KcyBQcm9wb3J0aW9uYXRlIFNoYXJlIG9mIHRoZSBjb3N0cyBvZiBzdWNoIHJlcGFpciwgcmVzdG9yYXRpb24gb3IgcmVwbGFjZW1lbnQuICBBbnkgcHJvcGVydHkgb3INCiBmYWNpbGl0aWVzIHdob3NlIHJlcGFpciwgcmVzdG9yYXRpb24gb3IgcmVwbGFjZW1lbnQgaXMgcGFpZCBmb3IgYnkgbGVzcyB0aGFuIGFsbCBvZiB0aGUgQ28tT3duZXJzIHNoYWxsIG5vdCBiZWNvbWUgU2hhcmVkIFJlYWwgUHJvcGVydHkgYW5kL29yIFNoYXJlZCBGYWNpbGl0aWVzLCBhcyBhcHBsaWNhYmxlLCB1bmRlciB0aGlzIEFncmVlbWVudCB1bmxlc3MgYW5kIHVudGlsIHN1Y2ggY29zdHMgaGF2ZSBiZWVuIHBhaWQgKGluY2x1ZGluZyByZQ0KaW1idXJzZW1lbnRzKSBieSBhbGwgQ28tT3duZXJzIGluIGFjY29yZGFuY2Ugd2l0aCB0aGVpciByZXNwZWN0aXZlIFByb3BvcnRpb25hdGUgU2hhcmVzLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTFccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggMTZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMzIxMzE0MyAuXHRhYiB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDM0MzgwNzggRGVmYXVsdCBieSBPcGVyYXRvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggLiBTZWN0aW9uIDEzLjEuNCBpcyBhbWVuZGVkIGFuZCByZXN0YXRlZCBpbiBpdHMgZW50aXJldHkgYXMgZm9sbG93czoNClxwYXIgfVxwYXJkIFxsdHJwYXJcczUxXHFqIFxmaTcyMFxsaTcyMFxyaTcyMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW43MjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTAzNjgyMTcgMTMuMS40IH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiANClxsdHJjaFxmY3MwIFx1bFxjZjFcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxMDM2ODIxNyBEZWZhdWx0IGJ5IE9wZXJhdG9yLn17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTAzNjgyMTcgIE9wZXJhdG9yIGZhaWxzIHRvIHBlcmZvcm0gYW55IG9mIGl0cyBtYXRlcmlhbCBvcA0KZXJhdGlvbiwgbWFpbnRlbmFuY2UsIHJlcGFpciBvciBvdGhlciBvYmxpZ2F0aW9ucyBpbiB0aGlzIEFncmVlbWVudCx9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGNmMVxpbnNyc2lkMzQzODA3OCAgdGhlIEludGVyY29ubmVjdGlvbiBBZ3JlZW1lbnQgb3IgdGhlIExHSUEgQ28tVGVuYW5jeSBBZ3JlZW1lbnR9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgDQpcY2YxXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTAzNjgyMTcgLCBhbmQgc3VjaCBmYWlsdXJlIGlzIG5vdCBjdXJlZCB3aXRoaW4gdGVuICgxMCkgZGF5cyBmb2xsb3dpbmcgd3JpdHRlbiBub3RpY2UgYnkgYSBDby1Pd25lcjsgcHJvdmlkZWQgdGhhdCwgdGhhdCBpZiBzdWNoIGZhaWwNCnVyZSBieSBPcGVyYXRvciBjcmVhdGVzIGFuIEVtZXJnZW5jeSBDb25kaXRpb24gb3IgbWF0ZXJpYWxseSBpbnRlcmZlcmVzIHdpdGggYSBDby1Pd25lcidzIFVuZGl2aWRlZCBVc2UgSW50ZXJlc3QgaW4gU2hhcmVkIEZhY2lsaXRpZXMgaW4gd2hpY2ggaXQgaGFzIGFuIE93bmVyc2hpcCBJbnRlcmVzdCwgb3Igb3BlcmF0aW9uIG9mIGl0cyBGYWNpbGl0eSwgb25seSBzdWNoIGFkdmFuY2Ugd3JpdHRlbiBub3RpY2UsIGlmIGFueSwgYXMgbWF5IGJlIA0Kcg0KZWFzb25hYmx5IHByYWN0aWNhYmxlIHVuZGVyIHRoZSBjaXJjdW1zdGFuY2VzIHNoYWxsIGJlIHJlcXVpcmVkLCBidXQgaWYgc3VjaCBhZHZhbmNlIG5vdGljZSBpcyBub3QgcHJvdmlkZWQsIHdyaXR0ZW4gbm90aWNlIHRoZXJlb2Ygc2hhbGwgYmUgcHJvdmlkZWQgcHJvbXB0bHkgdGhlcmVhZnRlciBieSB0aGUgQ28tT3duZXIgdG8gT3BlcmF0b3I7IHByb3ZpZGVkIGZ1cnRoZXIgdGhhdCBpZiB0aGUgZGVmYXVsdCBpcyBub3QgcmVhc29uYWJseSBjDQphcGFibGUgb2YgYmVpbmcgY3VyZWQgd2l0aGluIHRlbiAoMTApIGRheXMsIHRoZW4gdGhlIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQzNDM4MDc4IE9wZXJhdG9yfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxjZjFcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxMDM2ODIxNyAgbWF5IGJlIGFsbG93ZWQgc3VjaCBsb25nZXIgcGVyaW9kIGFzIHRoZSBDby1Pd25lcnN9ew0KXHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQzNDM4MDc4ICBtdXR1YWxseSBhZ3JlZSAobm90IHRvIGV4Y2VlZCBzaXh0eSAoNjApfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxjZjFcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxMDM2ODIxNyANCiBkYXlzKSBhcyBtYXkgYmUgcmVhc29uYWJseSBuZWNlc3NhcnkgdW5kZXIgdGhlIGNpcmN1bXN0YW5jZXMgdG8gY3VyZSBzdWNoIGZhaWx1cmUgc28gbG9uZyBhcyB0aGUgfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxjZjFcaW5zcnNpZDM0MzgwNzggT3BlcmF0b3J9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGNmMVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDEwMzY4MjE3IA0KIGlzIHB1cnN1aW5nIGEgY3VyZSB3aXRoIHJlYXNvbmFibGUgZGlsaWdlbmNlfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxjZjFcaW5zcnNpZDM0MzgwNzggLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ0NzM1OTQyIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTFccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggMTcuXHRhYiANClRoZSBmaXJzdCBzZW50ZW5jZSBvZiBTZWN0aW9uIDEzLjIuMyBpcyBhbWVuZGVkIGFuZCByZXN0YXRlZCBpbiBpdHMgZW50aXJldHkgYXMgZm9sbG93czoNClxwYXIgfVxwYXJkIFxsdHJwYXJcczUxXHFqIFxmaTcyMFxsaTcyMFxyaTcyMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW43MjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggXHRhYiB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgDQpcY2YxXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTIxOTc0MzggSW4gYWRkaXRpb24gdG8gdGhlIHJlbWVkaWVzIHByb3ZpZGVkIGluIFNlY3Rpb24gMTMuMi4xIGFuZCAxMy4yLjIsIGlmIHRoZSBkZWZhdWx0aW5nIENvLU93bmVyIGlzIHRoZSBPcGVyYXRvciwgdGhlIG90aGVyIENvLU93bmVycyAodGhlIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcaVxjZjFcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxMjE5NzQzOCANCiJOb24tRGVmYXVsdGluZyBDby1Pd25lcnMiKSB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGNmMVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDEyMTk3NDM4IHNoYWxsIGhhdmUgdGhlIHJpZ2h0LCBieSB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGNmMVxpbnNyc2lkMzQzODA3OCBhIG1ham9yaXR5fXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIA0KXGNmMVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDEyMTk3NDM4ICB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGNmMVxpbnNyc2lkMzQzODA3OCB2b3RlIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTIxOTc0Mzggb2YgdGhlIE5vbi1EZWZhdWx0aW5nIENvLU93bmVyc317XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCANClxjZjFcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTIxOTc0MzggKGJhc2VkIG9uIHRoZWlyIHJlc3BlY3RpdmUgUHJvcG9ydGlvbmF0ZSBTaGFyZXMpLCB0byByZW1vdmUgdGhlIGRlZmF1bHRpbmcgQ28tT3duZXIgZnJvbSBpdHMgcG9zaXRpb24gYXMgT3BlcmF0b3IgYW5kIHRvIGFwcG9pDQpudCBvbmUgb2YgdGhlbXNlbHZlcyBhcyB0aGUgT3BlcmF0b3IgZm9yIHB1cnBvc2VzIG9mIHRoaXMgQWdyZWVtZW50Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTFccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggMTguXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQzNDM4MDc4IEFzc2lnbm1lbnR9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggLiBTZWN0aW9uIDE3LjR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTY0MDM4NyAgaXMgYW1lbmRlZCBhbmQgcmVzdGF0ZWQgaW4gaXRzIGVudGlyZXR5IGFzIGZvbGxvd3M6fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczUxXHFqIFxmaTcyMFxsaTcyMFxyaTcyMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW43MjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggXHRhYiB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgDQpcY2YxXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTY0MDM4NyAxNy40IH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcdWxcY2YxXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTY0MDM4NyBBc3NpZ25tZW50Ln17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTY0MDM4NyANCiBUaGlzIEFncmVlbWVudCB3aWxsIGJlIGJpbmRpbmcgb24gYW5kIGludXJlIHRvIHRoZSBiZW5lZml0IG9mIHRoZSBDby1Pd25lcnMgYW5kIHRoZWlyIHINCmVzcGVjdGl2ZSBzdWNjZXNzb3JzIGFuZCBwZXJtaXR0ZWQgYXNzaWducy4gQWxsIHRyYW5zZmVycywgY29udmV5YW5jZXMsIGFzc2lnbm1lbnRzIG9mIFNoYXJlZCBGYWNpbGl0aWVzIG9yIFNoYXJlZCBSZWFsIHByb3BlcnR5IHdpbGwgYmUgc3ViamVjdCB0byB0aGUgdGVybXMgYW5kIGNvbmRpdGlvbnMgb2YgdGhpcyBBZ3JlZW1lbnQsIHdoZXRoZXIgb3Igbm90IGV4cGxpY2l0bHkgc3RhdGVkLiBFYWNoIENvLU93bmVyIG1heSwgYXQgYW55IHRpbQ0KZSBhbmQgZnJvbSB0aW1lIHRvIHRpbWUsIHVwb24gbm90aWNlIGJ1dCB3aXRob3V0IHRoZSBvdGhlciBDby1Pd25lcnMnIGNvbnNlbnQgb3IgYXBwcm92YWwsfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxjZjFcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTY0MDM4NyANCihpKSBzdWJqZWN0IHRvIGNvbXBsaWFuY2Ugd2l0aCBTZWN0aW9uIDkuNywgdHJhbnNmZXIgb3IgYXNzaWduIHRoaXMgQWdyZWVtZW50IGFuZCB0aGUgcmlnaHRzIGFuZCBvYmxpZ2F0aW9ucyB1bmRlciB0aGlzIEFncmVlbWVudCB0byBhIFBlcnNvbiB0aGF0IGFjcXVpcmVzIGFsbCBvciBzdWINCnN0YW50aWFsbHkgYWxsIG9mIHN1Y2ggQ28tT3duZXIncyBhc3NldHMsIGluY2x1ZGluZyBzdWNoIENvLU93bmVyJ3MgU2hhcmVkIEFzc2V0cywgYW5kIGFncmVlcyB0byBhc3N1bWUgYWxsIG9ibGlnYXRpb25zIG9mIHRoYXQgQ28tT3duZXIgdW5kZXIgdGhpcyBBZ3JlZW1lbnQgKGEgfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxpXGNmMVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDk2NDAzODcgDQoiUGVybWl0dGVkIEFzc2lnbmVlIik7IH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTY0MDM4NyBhbmQvb3IgKGlpKSBjcmVhdGUgTGVuZGVyJ3MgTGllbnMgcHVyc3VhbnQgdG8gQXJ0aWNsZSBYSVZ9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGNmMVxpbnNyc2lkMzQzODA3OCAsIHByb3ZpZGVkLCANCnRoYXQsIGZvciB0aGUgYXZvaWRhbmNlIG9mIGRvdWJ0LCBhbnkgc3VjaCBhc3NpZ25tZW50IHNoYWxsIGluIGFsbCBldmVudHMgYmUgc3ViamVjdCB0byBjb21wbGlhbmNlIHdpdGggU2VjdGlvbiA2LjE3IGFuZCBubyBhc3NpZ25lZSB0aGF0IGFzc3VtZXMgYW55IENvLU93bmVyXHJxdW90ZSANCnMgKGluY2x1ZGluZyBhbnkgQ28tT3duZXIgdGhhdCBpcyBjdXJyZW50bHkgT3BlcmF0b3IpIGludGVyZXN0IGluIHRoaXMgQWdyZWVtZW50IHNoYWxsIGJlY29tZSBPcGVyYXRvciwgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCBTZWN0aW9uIDYuMTd9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGNmMVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDk2NDAzODcgDQouIE90aGVyd2lzZSwgbm8gQ28tT3duZXIgc2hhbGwgdHJhbnNmZXIgb3IgYXNzaWduIGFsbCBvciBhbnkgcGFydCBvZiBpdHMgcmlnaHQsIHRpdGxlIGFuZCBpbnRlcmVzdCBpbiBvciB0byB0aGlzIEFncmVlbWVudCBvciBhbnkgb2YgaXRzIHJpZ2h0cyBoZXJldW5kZXIgd2l0aG91dCB0aGUgcHJpb3IgY29uc2VudCBvZiBhbGwgb2YgdGhlIG90aGVyIENvLU93bmVyczsgDQpwcm92aWRlZCwgZnVydGhlciwgdGhhdCBpZiBGRVJDIGFwcHJvdmFsIGlzIHJlcXVpcmVkIGZvciBhbnkgc3VjaCBhc3NpZ25tZW50IG9yIHRyYW5zZmVyLCBpdCBzaGFsbCBub3QgYmUgZWZmZWN0aXZlIHVubGVzcyBhbmQgdW50aWwgRkVSQyBhcHByb3ZhbCBoYXMgYmVlbiBvYnRhaW5lZC4gRm9yIHB1cnBvc2VzIG9mIHRoaXMgQWdyZWVtZW50LCBhIENoYW5nZSBvZiBDb250cm9sIG9mIGEgQ28tT3duZXIgc2hhbGwgYmUgY29uc2lkZXJlZCBhbiANCmENCnNzaWdubWVudCBieSBzdWNoIENvLU93bmVyIG9mIGl0cyByaWdodHMgYW5kIGludGVyZXN0cyB1bmRlciB0aGlzIEFncmVlbWVudCBhbmQgc2hhbGwgYmUgc3ViamVjdCB0byB0aGUgcmVxdWlyZW1lbnRzIGhlcmV1bmRlciB3aXRoIHJlc3BlY3QgdG8gYXNzaWdubWVudHMuIEFueSBQZXJtaXR0ZWQgQXNzaWduZWUgc2hhbGwgYXNzdW1lIGFsbCBvZiB0aGUgb2JsaWdhdGlvbnMgb2YgdGhlIGFzc2lnbmluZyBDby1Pd25lciBoZXJldW5kZXIgYW5kIA0Kcw0KaGFsbCBleGVjdXRlIGFueSBkb2N1bWVudHMgd2hpY2ggbWF5IHJlYXNvbmFibHkgYmUgcmVxdWlyZWQgYnkgdGhlIG90aGVyIENvLU93bmVycywgb3IgYnkgTGVuZGVycywgaW5jbHVkaW5nIGJ1dCBub3QgbGltaXRlZCB0byBhbnkgZG9jdW1lbnQgaW4gY29ubmVjdGlvbiB3aXRoIGEgZ292ZXJubWVudGFsIHBlcm1pdCwgYXBwcm92YWwsIGF1dGhvcml6YXRpb24sIGVudGl0bGVtZW50IG9yIG90aGVyIGNvbnNlbnQuIFVuZGVyIG5vIGNpcmN1bXN0DQphDQpuY2VzIHNoYWxsIGFueSBMZW5kZXIgb3IgUGVybWl0dGVkIEFzc2lnbmVlIGhhdmUgYW55IGdyZWF0ZXIgcmlnaHRzIG9mIG93bmVyc2hpcCBvciB1c2Ugb2YgdGhlIFNoYXJlZCBBc3NldHMgdGhhbiB0aGUgcmlnaHRzIGdyYW50ZWQgdG8gdGhlIENvLU93bmVycyBpbiB0aGlzIEFncmVlbWVudC4gQW55IGFzc2lnbm1lbnQgcGVybWl0dGVkIHVuZGVyIHRoaXMgQWdyZWVtZW50IHNoYWxsIHJlbGVhc2UgdGhlIGFzc2lnbmluZyBDby1Pd25lciBmcm8NCm0NCiBvYmxpZ2F0aW9ucyBhY2NydWluZyBhZnRlciB0aGUgZGF0ZSB0aGF0IGxpYWJpbGl0eSBpcyBhc3N1bWVkIGJ5IGEgdHJhbnNmZXJlZSwgYnV0IHRoZSBhc3NpZ25pbmcgQ28tT3duZXIgc2hhbGwgY29udGludWUgdG8gYmUgbGlhYmxlIHRvIHRoZSBvdGhlciBDby1Pd25lcnMgZm9yIGFsbCBwZXJmb3JtYW5jZSBkdWUgYnkgdGhlIGFzc2lnbmluZyBDby1Pd25lciBmb3IgbWF0dGVycyB0aGF0IGhhdmUgYWNjcnVlZCBhbmQgYXJlIHVuc2F0aXNmaQ0KZWQgYXMgb2YgdGhlIGRhdGUgb2YgdGhlIGFzc2lnbm1lbnQuIEFueSBwdXJwb3J0ZWQgYXNzaWdubWVudCBpbiBjb250cmF2ZW50aW9uIG9mIHRoaXMgU2VjdGlvbiAxNy4zIHdpbGwgYmUgdm9pZC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTY0MDM4NyANClxwYXIgfVxwYXJkIFxsdHJwYXJcczUxXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IDE5Llx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMzQzODA3OCBOb3RpY2VzfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IC4gU2VjdGlvbiAxNy4xNyBpcyBhbWVuZGVkIGJ5IGFkZGluZyB0aGUgZm9sbG93aW5nIG5vdGljZSBpbmZvcm1hdGlvbiB0byB0aGUgZXhpc3RpbmcgYWRkcmVzc2VzIHNldCBmb3J0aCBmb3IgUmlzaW5nIFRyZWUgSUlJOg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTFccWogXGZpNzIwXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggXHRhYiB3aXRoIGZ1cnRoZXIgY29waWVzIHRvOg0KXHBhciANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczg0XHFsIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDM0MzgwNzggXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDQyODA4NjggSlBNIENhcGl0YWwgQ29ycG9yYXRpb24NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMzQzODA3OFxjb250ZXh0dWFsc3BhY2UgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDQyODA4NjggMTAgU291dGggRGVhcmJvcm4sIDEydGggRmxvb3INClxwYXIgTWFpbCBDb2RlIElMSSAwNTAyDQpccGFyIENoaWNhZ28sIElsbGlub2lzIDYwNjAzLTIwMDMNClxwYXIgQXR0ZW50aW9uOiAgUHJlc2lkZW50DQpccGFyIFRlbGVwaG9uZTogICgzMTIpIDczMi0zNDE2DQpccGFyIH1ccGFyZCBcbHRycGFyXHFqIFxmaTE0NDBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDQyODA4NjggRW1haWw6ICB9e1xmaWVsZFxmbGRkaXJ0eXtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQzNDM4MDc4ICBIWVBFUkxJTksgIm1haWx0bzpqcG1jYy5lbmVyZ3lAanBtb3JnYW4uY29tIiB9fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcY2YxOFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDQyODA4NjgganBtY2MuZW5lcmd5QGpwbW9yZ2FuLmNvbX19fVxzZWN0ZCBcbHRyc2VjdA0KXGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMzQzODA3OFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNDI4MDg2OCAgYW5kIH17XGZpZWxkXGZsZGRpcnR5e1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4ICBIWVBFUkxJTksgIm1haWx0bzp9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ0MjgwODY4IGpvZWwuc3BlbmFkZWxAanBtb3JnYW4uY29tfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAiIH19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxjczQ4XHVsXGNmMlxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDY4NTc0MSBqb2VsLnNwZW5hZGVsQGpwbW9yZ2FuLmNvbX19fVxzZWN0ZCBcbHRyc2VjdA0KXGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMzQzODA3OFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNDI4MDg2OCANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMzQzODA3OFxjb250ZXh0dWFsc3BhY2Uge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IEJhbmtlcnMgQ29tbWVyY2lhbCBDb3Jwb3JhdGlvbiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxNDI5MjM1NiBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IDQ0NSBTb3V0aCBGaWd1ZXJvYSBTdHJlZXQsIEcxNC0yMDBcbGluZSBMb3MgQW5nZWxlcywgQ0EgOTAwNzFcbGluZSBBdHRlbnRpb246XH4gMjAxNSBWZW50byBYSUlJIEFjY291bnQgT2ZmaWNlcg0KXHBhciANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczUxXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzggXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAyMC5cdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDM0MzgwNzggQW1lbmRlZCBNZW1vcmFuZHVtfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAuICBFYWNoIENvLU93bmVyIA0KYWdyZWVzIHRvIHNpZ24gYW5kIGFja25vd2xlZGdlIGFuIEFtZW5kZWQgTWVtb3JhbmR1bSBvZiBSaXNpbmcgVHJlZSBTaGFyZWQgRmFjaWxpdGllcyBBZ3JlZW1lbnQgKH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQzNDM4MDc4IFwnOTNBbWVuZGVkIE1lbW9yYW5kdW1cJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANCikgaW4gdGhlIGZvcm0gYXR0YWNoZWQgdG8gdGhpcyBBbWVuZG1lbnQgYXMgRXhoaWJpdCBFLiAgQWZ0ZXIgaXQgaGFzIGJlZW4gc2lnaG5lZCBhbmQgYWNrbm93bGVkZ2VkIGJ5IGFsbCBvZiB0aGUgQ28tb3duZXJzLCBPcGVyYXRvciBzaGFsbCANCnJlY29yZCB0aGUgQW1lbmRlZCBNZW1vcmFuZHVtIHByb21wdGx5IGluIHRoZSBPZmZpY2Ugb2YgdGhlIENvdW50eSBSZWNvcmRlciBvZiBLZXJuIENvdW50eSwgQ2FsaWZvcm5pYSBhdCB0aGUgZXhwZW5zZSBvZiB0aGUgQ28tT3duZXJzLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ4NTM5OTgxIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IDIxLlx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDgyMTUzODkgTWlub3IgQWRkaXRpb25hbCBBbWVuZG1lbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAuICBUaGUgZm9sbG93aW5nIHNlY3Rpb25zIGFyZSBoZXJlYnkgYW1lbmRlZCBhcyBmb2xsb3dzOg0KDQpccGFyIChhKVx0YWIgU2VjdGlvbiA1LjMgaXMgaGVyZWJ5IGFtZW5kZWQgYnkgZGVsZXRpbmcgdGhlIGJyYWNrZXRzIGluIFNlY3Rpb25zIDUuMy4xIGFuZCA1LjMuMiBhbmQgYnkgZGVsZXRpbmcgZm9vdG5vdGUgMSBpbiBTZWN0aW9uIDUuMy4xLg0KXHBhciAoYilcdGFiIFNlY3Rpb24gNi4xMCBpcyBhbWVuZGVkIGJ5IGNoYW5naW5nIFwnOTNTZWN0aW9uIDE3LjE1XCc5NCB0byBcJzkzU2VjdGlvbiAxNy4xN1wnOTQgaW4gdGhlIHRoaXJ0ZWVudGggKDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDcxNTI4NjMgdGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4ICkgbGluZSBvZiB0aGF0IHNlY3Rpb24uDQpccGFyIChjKVx0YWIgU2VjdGlvbiA2LjEzIGlzIGFtZW5kZWQgYnkgY2hhbmdpbmcgXCc5M0R1ZSBEYXRlXCc5NCB0byBcJzkzZHVlIGRhdGVcJzk0IGluIHRoZSBzaXh0aCAoNn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ3MTUyODYzIHRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCApIGxpbmUgb2YgdGhhdCBzZWN0aW9uLg0KXHBhciAoZClcdGFiIFNlY3Rpb24gOS4xIGlzIGFtZW5kZWQgYnkgcmVwbGFjaW5nIFwnOTNTZWN0aW9uIDkuOFwnOTQgaW4gdGhlIGZpcnN0IGxpbmUgb2YgdGhlIHNlY3Rpb24gd2l0aCBcJzkzU2VjdGlvbnMgNi4xNiwgOS4yIGFuZCA5LjhcJzk0Lg0KXHBhciAoZSlcdGFiIFNlY3Rpb24gOS4yIGlzIGFtZW5kZWQgYnkgYWRkaW5nIHRoZSBwaHJhc2UgXCc5M0luIGFkZGl0aW9uIHRvIHRoZSBsaW1pdGF0aW9ucyBzZXQgZm9ydGggaW4gU2VjdGlvbiA2LjE2LFwnOTQgYXQgdGhlIGJlZ2lubmluZyBvZiB0aGF0IHNlY3Rpb24uDQpccGFyIChmKVx0YWIgU2VjdGlvbiAxNC4xIGlzIGFtZW5kZWQgYnkgcmVwbGFjaW5nIHRoZSBwaHJhc2UgXCc5M2FueSBwYXJ0eSBwcm92aWRpbmcgZGVidCBvciBlcXVpdHkgZmluYW5jaW5nIG9yIHJlZmluYW5jaW5nXCc5NCBpbiB0aGUgZm91cnRoICg0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxzdXBlclxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDgyMTUzODkgdGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDM0MzgwNzggKSBsaW5lIG9mIHRoYXQgc2VjdGlvbiB3aXRoIHRoZSBwaHJhc2UgXCc5M2FueSBwYXJ0eSBwcm92aWRpbmcgZGVidCwgdGF4IGVxdWl0eSBvciBvdGhlciBlcXVpdHkgZmluYW5jaW5nIG9yIHJlZmluYW5jaW5nXCc5NC4NClxwYXIgKGcpXHRhYiBTZWN0aW9uIDE3LjMgaXMgYW1lbmRlZCBieSByZXBsYWNpbmcgdGhlIHJlZmVyZW5jZSB0byBcJzkzU2VjdGlvbiAxNy4zXCc5NCBpbiB0aGUgZmlyc3QgbGluZSBvZiB0aGUgc2VjdGlvbiB3aXRoIFwnOTNTZWN0aW9uIDE3LjRcJzk0Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ3MDgzODE2IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IDIyLlx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMzQzODA3OCBBbWVuZG1lbnRzIHRvIERlZmluaXRpb25zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAuDQpccGFyIChhKVx0YWIgVGhlIGZvbGxvd2luZyBkZWZpbml0aW9ucyBpbiBFeGhpYml0IEEgdG8gdGhlIEFncmVlbWVudCBhcmUgYW1lbmRlZCBhbmQgcmVzdGF0ZWQgaW4gdGhlaXIgZW50aXJldGllcyBhcyBmb2xsb3dzOg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTFccWogXGZpNzIwXGxpNzIwXHJpNzIwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjcyMFxsaW43MjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDM0MzgwNzggTWF0ZXJpYWwgUHJvamVjdCBBZ3JlZW1lbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQzNDM4MDc4IA0KIG1lYW5zIHRoZSBJbnRlcmNvbm5lY3Rpb24gQWdyZWVtZW50LCB0aGlzIEFncmVlbWVudCwgdGhlIExHSUEgQ28tVGVuYW5jeSBBZ3JlZW1lbnQsIHRoZSBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBBZ3JlZW1lbnRzLCBwdXJjaGFzZSBvciB3YXJyYW50eSBhZ3JlZW1lbnRzIHJlbGF0aW5nIHRvIFNoYXJlZCBGYWNpbGl0aWVzLCBhbmQgc3VjaCBvdGhlciBhZ3JlZW1lbnRzIHRvIGJlIGluY2x1ZGVkIHVwb24gdGhlIG11dHVhbCBhZ3JlZW1lbnQgb2YgDQp0aGUgQ28tT3duZXJzLCBpbmNsdWRpbmcgdGhvc2Ugb24gRXhoaWJpdCBELn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ4MjE1Mzg5IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkMzQzODA3OCBNZXRlcmVkIEVuZXJneX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggIG1lYW5zIHRoZSBhbW91bnQgb2YgZWxlY3RyaWMgZW5lcmd5IG1lYXN1cmVkIGF0IGEgZ2l2ZW4gcG9pbnQuDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcZmk3MjBcbGk3MjBccmk3MjBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluNzIwXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzggXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDM0MzgwNzggT3BlcmF0b3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4ICBtZWFucyB0aGUgQ28tT3duZXIgb3Igb3RoZXIgUGVyc29uIGVuZ2FnZWQgYnkgdGhlIENvLU93bmVycyB0byBtYW5hZ2UsIG9wZXJhdGUsIG1haW50YWluIGFuZCByZXBhaXIgdGhlIFNoYXJlZCBGYWNpbGl0aWVzIGFuZA0KIHRvIHBlcmZvcm0gb3RoZXIgZHV0aWVzIHBlcnRhaW5pbmcgdG8gdGhlIFNoYXJlZCBBc3NldHMgYXMgc2V0IGZvcnRoIGluIHRoZSBBZ3JlZW1lbnQuICBJZiB0aGUgT3BlcmF0b3IgaXMgYSBDby1Pd25lciwgcmVmZXJlbmNlcyB0byBcJzkzT3BlcmF0b3JcJzk0DQogc2hhbGwgbWVhbiB0aGUgQ28tT3duZXIgYWN0aW5nIG9ubHkgaW4gaXRzIGNhcGFjaXR5IGFzIE9wZXJhdG9yIGFuZCBub3QgaW4gYW55IG90aGVyIGNhcGFjaXR5LiAgVGhlIE9wZXJhdG9yIHNoYWxsIGluaXRpYWxseSBiZSBSaXNpbmcgVHJlZSBJIG9yIGFuIEFmZmlsaWF0ZSBkZXNpZ25hdGVkIGJ5IGl0LCBzdWJqZWN0IHRvIHJlcGxhY2VtZW50IHB1cnN1YW50IHRvIFNlY3Rpb25zXH42LjE3IGFuZCAxMy4yLjIuIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTFccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IChiKVx0YWIgVGhlIGZvbGxvd2luZyBkZWZpbml0aW9ucyBhcmUgYWRkZWQgdG8gRXhoaWJpdCBBIHRvIHRoZSBBZ3JlZW1lbnQgaW4gdGhlIGFwcHJvcHJpYXRlIGFscGhhYmV0aWNhbCBvcmRlcjoNClxwYXIgfVxwYXJkIFxsdHJwYXJcczUxXHFqIFxmaTcyMFxsaTcyMFxyaTcyMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW43MjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkODI3Nzc0NSBDYXVzZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ4Mjc3NzQ1IG1lYW5zIHdpdGggcmVzcGVjdCB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBPcGVyYXRvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ4Mjc3NzQ1IA0KLCBhY3RpbmcgaW4gdGhlIGNhcGFjaXR5IGFzIHN1Y2gsIGZyYXVkLCB3aWxsZnVsIG1pc2FwcHJvcHJpYXRpb24gb2YgZnVuZHMsIGdyb3NzIG5lZ2xpZ2VuY2UsIG9yIHdpbGxmdWwgbWlzY29uZHVjdCBvciBhIHdpbGxmdWwgdmlvbGF0aW9uIG9mIGEgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANCm1hdGVyaWFsIHByb3Zpc2lvbiBvZiB0aGlzIEFncmVlbWVudCwgdGhlIEludGVyY29ubmVjdGlvbiBBZ3JlZW1lbnQgb3IgdGhlIExHSUEgQ28tVGVuYW5jeSBBZ3JlZW1lbnQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDgyNzc3NDUgYXBwbGljYWJsZSB0byB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBPcGVyYXRvcn17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDgyNzc3NDUgLCBzb2xlbHkgaW4gdGhhdCBjYXBhY2l0eS59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkMzQzODA3OCANClxwYXIgTWVjaGFuaWNhbCBDb21wbGV0aW9uIERhdGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4ICBtZWFucyB0aGUgZGF0ZSB0aGF0IHRoZSBmaXJzdCB3aW5kIHR1cmJpbmUgb2YgdGhlIEZhY2lsaXR5IG9yIEFkZGl0aW9uYWwgUGhhc2UgaW4gcXVlc3Rpb24gaXMgbWVjaGFuaWNhbGx5IGNvbXBsZXRlIGFuZCByZWFkeSB0byBlbmVyZ2l6ZWQsIGNvbW1pc3Npb25lZCBhbmQgdGVzdGVkLn17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDEwOTcwMTQ5IA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTFccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggMjMuXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQzNDM4MDc4IEENCm1lbmRtZW50cyB0byBFeGhpYml0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggLg0KXHBhciBhLlx0YWIgRXhoaWJpdCBBIHRvIHRoZSBBZ3JlZW1lbnQgaXMgYW1lbmRlZCBieSBkZWxldGluZyB0aGUgZGVmaW5pdGlvbiBvZiBcJzkzRmliZXIgT3B0aWMgRmFjaWxpdGllc1wnOTQuDQpccGFyIGIuXHRhYiBFeGhpYml0IEIgdG8gdGhlIEFncmVlbWVudCBpcyBhbWVuZGVkIGluIHRoZSBmb2xsb3dpbmcgcmVzcGVjdHM6DQpccGFyIH1ccGFyZCBcbHRycGFyXHM1MVxxaiBcZmk3MjBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggKGkpXHRhYiBTZWN0aW9uIEEuMSBvZiBFeGhpYml0IEIgaXMgYW1lbmRlZCBhbmQgcmVzdGF0ZWQgaW4gaXRzIGVudGlyZXR5DQogYXMgc2V0IGZvcnRoIGluIFNlY3Rpb24gMSBvZiBFeGhpYml0IEIgYXR0YWNoZWQgaGVyZXRvLg0KXHBhciAoaWkpXHRhYiBUaGUgaGVhZGluZyB0byBTZWN0aW9uIEEuMi5jIG9mIEV4aGliaXQgQiBpcyBhbWVuZGVkIGFuZCByZXN0YXRlZCBpbiBpdHMgZW50aXJldHkgdG8gYmUgXCc5M0NvbGxlY3Rpb24gYW5kIERpc3RyaWJ1dGlvbiBMaW5lcyAoaW5jbHVkaW5nIGZpYmVyIG9wdGljIGNhYmxlIGFuZCBvdGhlciBjb21tdW5pY2F0aW9ucyBmYWNpbGl0aWVzKVwnOTQuDQpccGFyIChpaWkpXHRhYiBUcmFjdCAyMSBhcyBzZXQgZm9ydGggaW4gU2VjdGlvbiAyLmEgb2YgRXhoaWJpdCBCIGF0dGFjaGVkIGhlcmV0byBzaGFsbCBiZSBhZGRlZCB0byB0aGUgZW5kIG9mIFNlY3Rpb24gQS4yLmMgb2YgRXhoaWJpdCBCLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGZpNzIwXGxpNzIwXHJpMFxzYTI0MFxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggKGl2KSBcdGFiIFRoZSBsZWdhbCBkZXNjcmlwdGlvbiBvZiBUcmFjdCA3IGluIFNlY3Rpb24gQS4yLmYgb2YgRXhoaWJpdCBCIGlzIGFtZW5kZWQgYW5kIHJlc3RhdGVkIGluIGl0cyBlbnRpcmV0eSBhcyBzZXQgZm9ydGggaW4gU2VjdGkNCm9uIDMuYSBvZiBFeGhpYml0IEIgYXR0YWNoZWQgaGVyZXRvLCBhbmQgY2VydGFpbiBwYXJjZWxzIG9mIHJlYWwgcHJvcGVydHkgYXJlIGFkZGVkIHRvIFNlY3Rpb24gQS4yLmYgb2YgRXhoaWJpdCBhcyBwcm92aWRlZCBpbiBTZWN0aW9uIDMuYyBvZiBFeGhpYml0IEIgYXR0YWNoZWQgaGVyZXRvLiBUaGUgbmFtZSBvZiBUcmFjdCBOdW1iZXIgMjUgaW4gU2VjdGlvbiBBLjIuZiBvZiBFeGhpYml0IEIgaXMgYW1lbmRlZCB0byBiZSBUcmFjdCBOdW1iZQ0KciAyMC4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxmaTcyMFxsaTcyMFxyaTg2NlxzYTI0MFxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluODY2XGxpbjcyMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4ICh2KVx0YWIgDQpTZWN0aW9ucyBBLjIuaiBhbmQgQS4yLmsgYXMgc2V0IGZvcnRoIGluIFNlY3Rpb24gMiBvZiBFeGhpYml0IEIgYXR0YWNoZWQgaGVyZXRvIGFyZSBhZGRlZCB0byBFeGhpYml0IEIgdG8gdGhlIEFncmVlbWVudCBhZnRlciBTZWN0aW9uIEEuMi5pIGFuZCBiZWZvcmUgU2VjdGlvbiBBLjMuDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1MVxxaiBcZmk3MjBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMzQzODA3OCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4ICh2aSlcdGFiIFNlY3Rpb24gQS4zLmsgb2YgRXhoaWJpdCBCIGlzIGFtZW5kZWQgYW5kIHJlc3RhdGVkIGluIGl0cyBlbnRpcmV0eSBhcyBmb2xsb3dzOiBcJzkzDQprLiAgS2VybiBDb3VudHkgT3JkaW5hbmNlIE5vLiBGNTg5IGdyYW50aW5nIFJpc2luZyBUcmVlIFdpbmQgRmFybSBMTEMgYSBmcmFuY2hpc2UgdG8gY29uc3RydWN0LCBpbnN0YWxsLCBtYWludGFpbiwgb3BlcmF0ZSwgcmVwYWlyLCByZW5ldyBhbmQgcmVtb3ZlIHVuZGVyZ3JvdW5kIGZpYmVyIG9wdGljIGNhYmxlIGRhdGVkIE5vdmVtYmVyIDQsIDIwMTQsIGFzIHBhcnRpYWxseSBhc3NpZ25lZCB0byBSaXNpbmcgVHJlZSBXaW5kIEZhcm0gSUkgTA0KTEMgYW5kIFJpc2luZyBUcmVlIFdpbmQgRmFybSBJSUkgTExDIG9uIE1hcmNoIDE3LCAyMDE1LlwnOTQNClxwYXIgKHZpaSlcdGFiIFNlY3Rpb24gQS40LmEgb2YgRXhoaWJpdCBCIGlzIGFtZW5kZWQgYW5kIHJlc3RhdGVkIGluIGl0cyBlbnRpcmV0eSBhcyBzZXQgZm9ydGggaW4gU2VjdGlvbiA0IG9mIEV4aGliaXQgQiBhdHRhY2hlZCBoZXJldG8NClxwYXIgKHZpaWkpXHRhYiBTZWN0aW9uIEIuMS5iIG9mIEV4aGliaXQgQiBpcyBhbWVuZGVkIGFuZCByZXN0YXRlZCBpbiBpdHMgZW50aXJldHkgYXMgZm9sbG93czogXCc5Mw0KYi4gIE1ldGVvcm9sb2dpY2FsIFRvd2VyLCBpbmNsdWRpbmcgaW5zdHJ1bWVudGF0aW9uLCBwb3dlciBsb29wIGFuZCBmaWJlciBvcHRpYyBjYWJsZSBhbmQgYXNzb2NpYXRlZCBzcGxpY2UgYm94ZXMsIGp1bmN0aW9uIGJveGVzIGFuZCB0ZXJtaW5hdGlvbnMgZnJvbSB0aGUgQ29udHJvbCBCdWlsZGluZyAoZGVzY3JpYmVkIG9uIEV4aGliaXQgQi0xKSB0byB0aGUgdG93ZXIuXCc5NA0KXHBhciAoaXgpXHRhYiBUaGUgaGVhZGluZyB0byBTZWN0aW9uIEIuMi5hIG9mIEV4aGliaXQgQiBpcyBhbWVuZGVkIGFuZCByZXN0YXRlZCBpbiBpdHMgZW50aXJldHkgdG8gYmUgXCc5M0NvbGxlY3Rpb24gYW5kIERpc3RyaWJ1dGlvbiBMaW5lcyAoaW5jbHVkaW5nIGZpYmVyIG9wdGljIGNhYmxlIGFuZCBvdGhlciBjb21tdW5pY2F0aW9ucyBmYWNpbGl0aWVzKVwnOTQuDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1MVxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBjLlx0YWIgDQpFeGhpYml0IEItMSB0byB0aGUgQWdyZWVtZW50IGlzIGFtZW5kZWQgYW5kIHJlc3RhdGVkIGluIGl0cyBlbnRpcmV0eSBhcyBzZXQgZm9ydGggb24gRXhoaWJpdCBCLTEgYXR0YWNoZWQgaGVyZXRvLg0KXHBhciBkLlx0YWIgRXhoaWJpdCBCLTIgdG8gdGhlIEFncmVlbWVudCBpcyBhbWVuZGVkIGFuZCByZXN0YXRlZCBpbiBpdHMgZW50aXJldHkgYXMgc2V0IGZvcnRoIG9uIEV4aGliaXQgQi0yIGF0dGFjaGVkIGhlcmV0by4NClxwYXIgZS5cdGFiIEV4aGliaXQgQyB0byB0aGUgQWdyZWVtZW50IGlzIGFtZW5kZWQgYW5kIHJlc3RhdGVkIGluIGl0cyBlbnRpcmV0eSBhcyBzZXQgZm9ydGggb24gRXhoaWJpdCBDIGF0dGFjaGVkIGhlcmV0by4NClxwYXIgZi5cdGFiIEV4aGliaXQgRCB0byB0aGUgQWdyZWVtZW50IGlzIGFtZW5kZWQgYW5kIHJlc3RhdGVkIGluIGl0cyBlbnRpcmV0eSBhcyBzZXQgZm9ydGggb24gRXhoaWJpdCBEIGF0dGFjaGVkIGhlcmV0by4NClxwYXIgMjQuXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQzNDM4MDc4IE5vIE90aGVyIEFtZW5kbWVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggLiAgRXhjZXB0IGFzIGV4cHJlc3NseSBzZXQgZm9ydGggaW4gdGhpcyBBbWVuZG1lbnQsIHRoZSBBZ3JlZW1lbnQgaXMgdW5tb2RpZmllZCBhbmQgY29udGludWVzIGluIGZ1bGwgZm9yY2UgDQphbmQgZWZmZWN0LiAgRnJvbSBhbmQgYWZ0ZXIgdGhlIGRhdGUgaGVyZW9mLCByZWZlcmVuY2VzIHRvIHRoZSBBZ3JlZW1lbnQgd2lsbCBiZSB1bmRlcnN0b29kIHRvIHJlZmVyIHRvIHRoZSBBZ3JlZW1lbnQgYXMgYW1lbmRlZCBieSB0aGlzIEFtZW5kbWVudC4NClxwYXIgMjUuXHRhYiB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXHVsXGNmMVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDE2MjYyMTk5IEdvdmVybmluZyBMYXcufXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxjZjFcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxNjI2MjE5OSAgVGhpcyBBfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxjZjFcaW5zcnNpZDM0MzgwNzggbWVuZG1lbnR9ew0KXHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTYyNjIxOTkgIHNoYWxsIGJlIGdvdmVybmVkIGJ5LCBjb25zdHJ1ZWQgYW5kIGVuZm9yY2VkIGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgbGF3cyBvZiB0aGUgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgd2l0aG91dCByZWdhcmQgdG8gcHJpbmNpcGxlcyBvZiBjb25mbGljdCBvZiBsYXdzLn17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiANClxsdHJjaFxmY3MwIFxjZjFcaW5zcnNpZDM0MzgwNzggDQpccGFyIDI2Llx0YWIgfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFx1bFxjZjFcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxNjI2MjE5OSBDb3VudGVycGFydHMufXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxjZjFcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxNjI2MjE5OSAgVGhpcyBBfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxjZjFcaW5zcnNpZDM0MzgwNzggbWVuZG1lbnR9ew0KXHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTYyNjIxOTkgIG1heSBiZSBleGVjdXRlZCBpbiBvbmUgb3IgbW9yZSBjb3VudGVycGFydHMsIGVhY2ggb2Ygd2hpY2ggd2lsbCBiZSBhbiBvcmlnaW5hbCBidXQgYWxsIG9mIHdoaWNoLCB0YWtlbiB0b2dldGhlciwgd2lsbCBjb25zdGl0dXRlIG9ubHkgb25lIGxlZ2FsIGluDQpzdHJ1bWVudC4gSXQgd2lsbCBub3QgYmUgbmVjZXNzYXJ5IGluIG1ha2luZyBwcm9vZiBvZiB0aGlzIEF9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGNmMVxpbnNyc2lkMzQzODA3OCBtZW5kbWVudH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTYyNjIxOTkgIHRvIHByb2R1Y2Ugb3IgYWNjb3VudCBmb3IgbW9yZSB0aGFuIG9uZSBjb3VudGVycGFydC59ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1MVxxaiBcZmk3MjBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczUxXHFjIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGlcaW5zcnNpZDM0MzgwNzggW1RoZSBuZXh0IHBhZ2UgaXMgdGhlIHNpZ25hdHVyZSBwYWdlLl1cc2VjdCB9XHNlY3RkIFxsdHJzZWN0DQpccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XGhlYWRlcnIgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHMyM1xxbCBcbGkwXHJpMFx3aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIA0KXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxNTY4NDU5NyANClxwYXIgfX17XGZvb3RlcnIgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHMyMlxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMTZcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczE2XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcZnMyNFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDM0MzgwNzggDQpccGFyIH1ccGFyZCBcbHRycGFyXHMyMlxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcZnMyNFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDM0MzgwNzggXHRhYiBCLTN9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgDQpcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQzNDM4MDc4IA0KXHBhciB9XHBhcmQgXGx0cnBhclxzMjJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHRxY1x0eDQ2ODBcdHFyXHR4OTM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQyOTEzMTQzIA0Ke1xzaHB7XCpcc2hwaW5zdFxzaHBsZWZ0MFxzaHB0b3AwXHNocHJpZ2h0NDAzMlxzaHBib3R0b200MDBcc2hwZmhkcjFcc2hwYnhtYXJnaW5cc2hwYnhpZ25vcmVcc2hwYnlwYXJhXHNocGJ5aWdub3JlXHNocHdyM1xzaHB3cmswXHNocGZibHd0eHQwXHNocHoxM1xzaHBsaWQyMjM4e1xzcHtcc24gc2hhcGVUeXBlfXtcc3YgMjAyfX17XHNwe1xzbiBmRmxpcEh9e1xzdiAwfX17XHNwe1xzbiBmRmxpcFZ9e1xzdiAwfX0NCntcc3B7XHNuIGxUeGlkfXtcc3YgODUxOTY4fX17XHNwe1xzbiBkeFRleHRMZWZ0fXtcc3YgMH19e1xzcHtcc24gZHlUZXh0VG9wfXtcc3YgMH19e1xzcHtcc24gZHhUZXh0UmlnaHR9e1xzdiAwfX17XHNwe1xzbiBkeVRleHRCb3R0b219e1xzdiAwfX17XHNwe1xzbiBmRml0U2hhcGVUb1RleHR9e1xzdiAxfX17XHNwe1xzbiBmRmlsbGVkfXtcc3YgMH19e1xzcHtcc24gZkxpbmV9e1xzdiAwfX17XHNwe1xzbiB3ek5hbWV9e1xzdiANCnp6bXBUcmFpbGVyXzEwNzhfNH19e1xzcHtcc24gcG9zcmVsaH17XHN2IDB9fXtcc3B7XHNuIG1ldHJvQmxvYn17XHN2IHtcKlxzdmIgDQo1MDRiMDMwNDE0MDAwNjAwMDgwMDAwMDAyMTAwYjY4MzM4OTJmZTAwMDAwMGUxMDEwMDAwMTMwMDAwMDA1YjQzNmY2ZTc0NjU2ZTc0NWY1NDc5NzA2NTczNWQyZTc4NmQ2Yzk0OTE0MTRlYzMzMDEwNDVmNzQ4ZGNjMWYyMTYyNTRlYmI0MDA4MjVlOTgyYjQ0YjQwYTgxYzYwNjQ0ZjEyOGI2NDZjNzk0YzY4NmY4ZjkzYjYxYjQ0OTE1OGRhMzNmZmJmMjdiYmRjMWNjNjQxNGMxOGQ4M2FhYWU0MmEyZmE0NDBkMmNlNThlYTJhZjliZWRmNjUwZjUyNzAwNA0KMzIzMDM4YzI0YTFlOTFlNWE2YmViZDI5Zjc0NzhmMmM1MjlhYjg5MjdkOGNmZTUxMjlkNjNkOGVjMGI5ZjM0ODY5ZDJiYTMwNDI0Y2M3ZDAyOTBmZmEwMzNhNTRlYmEyYjg1N2RhNTE0NDhhNTk5YzNiNjQ1ZDM2ZDhjMmU3MTBjNWY2OTBhZTRmMjYwMTA3OTZlMmU5YjQzOGIzMmEwOWRlMGY1NjQzNGNhNjZhMjJmMzgzOTI5ZDA5Nzk0YTJlM2JkYzViY2Y3NzQ5NDNhYTVmMDlmM2U0M2FlMDljN2I0OTRmMTNhYzQxZjEwYTIxM2VjMzk4MzQ5NDA5YWMNCjcwZWQxYWE3ZjNiZjNiNjZjOTkxMzNkN2I2NTY2M2RlMDRkZTJlYTk4YmQzYjU2ZWUzYmUyOGUwZjRkZmYyMjZjNWRlNzBiYWI0YWJlNTgzZWE2ZjAwMDAwMGZmZmYwMzAwNTA0YjAzMDQxNDAwMDYwMDA4MDAwMDAwMjEwMDM4ZmQyMWZmZDYwMDAwMDA5NDAxMDAwMDBiMDAwMDAwNWY3MjY1NmM3MzJmMmU3MjY1NmM3M2E0OTBjMTZhYzMzMDBjODZlZjgzYmQ4M2QxN2Q3MTlhYzMxOGEzNGUyZmEzZDA2YmU5MWVjMGQ4OGE2MzFhNWI0NjMyZDlmYWY2DQozMzgzYzEzMjdhZGI1MWJmZDBmNzg5N2Y3ZmY4NGM4YjVhOTEyNTUyMzZiMGViN2E1MDk4MWRmOTk4ODM4MWY3Y2JmMWU5MDU5NDU0OWJiZDVkMjhhMzgxMWIwYTFjYzZjNzg3ZmQxOTE3NWJkYjkxY2NiMTg4NmE5NDJjMDZlNjVhY2JhYmQ2ZTI2NjRjNTYzYTJhOThkYjY2MjI0ZWI2YjY5MTgzMmVkNjVkNmQ0MDNkZjRmZGIzZTZkZjBjMTgzNzRjNzVmMjA2ZjhlNDA3NTA5NzViNjllNjNmZWMxNDFkOTNkMDU0M2I0NzQ5ZDMzNDQ1Nzc4ZmFhM2Q3ZA0KZTQzM2FlOGQ2MjM5NjAzNWUwNTliZTQzYzZiNTZiY2Y4MWJlZWZkZGZkZDMxYmQ4OTYzOWJhMjNkYjg0NmZlNGI2N2UxY2E4NjUzZjdhYmRlOTcyZmMwMjAwMDBmZmZmMDMwMDUwNGIwMzA0MTQwMDA2MDAwODAwMDAwMDIxMDA4NmM4OWY1YWJjMDIwMDAwYjkwNTAwMDAwZTAwMDAwMDY0NzI3MzJmNjUzMjZmNDQ2ZjYzMmU3ODZkNmNhYzU0NWI2ZjliMzAxNDdlOWZiNGZmNjBmOTlkNzIyOTI0ODA0YWFhMzY4NDY5NTI3NzkxZGEzZDU3MGU5ODYwMGQNCjZjNjYzYjIxNmRiNWZmYmU2MzEzOTJiNDdiOTliNmYxNjAxZDdjOGViZjczZmJjZWI5YmFkZTc3MmRkYTUxYTk5OGUwMTlmNjJmM2M4YzI4MmY0NWM1ZjgyNmMzZGYxZTBhMjdjNjQ4NjljMjJiZDIwYTRlMzNmYzQ0MTViZTVlYmM3Zjc3MzVmNDI5MGQ0NDIzZGE4YTRhMDQyMDVjYTU0MzlmZTE0NmViM2U3NTVkNTUzNmI0MjNlYTQyZjQ5NDgzYjIxNmIyMjMxYTdlZTVjNmFkMjQxOTAwYmQ2YmRkYzBmMzY2ZWUyMDY0ZDU0YjUxNTJhNWUwMzYxZjk1DQo3ODYxZjFlYjlhOTZmYTRiNWQyYmFhNTE5YjYxODg0ZGRiNTNkYTczNmQ0ZTc3NzE0NWQyOGQyNDdkYzNjYTQzMThlNDJmYTJlODA4ZTNlMGY0MDg5NTEzNGRkMDU2YjJkZmEwM2E1NjRhYTE0NGFkMmY0YWQxYjlhMmFlNTk0OTZkMGU5MDhkZWZiZGM5ZTZiZTIxM2RiNWI5NDA3MTU0N2YyYzkzZmE3ZmIwZTVlN2RkNTc4OTU4OTVlMTA4MjM0ZTNhNjhkMWYzNzNkNzNmNDhjMjVhMmExZjdkNmYxZTNmODZhNjRhNDNhZjUyMzBiZWVmYzE1Y2VmNmZjNQ0KMWViYTZkMzM1NmZkOWQyOGJmMmJjNGM1YjIyMTdjNDM2ZmE0MTQ0MzQzNDkwNTUxZmFlNmE1N2JmNjc0YzQ1MTA2NjQzZDdjMTIxNWI4MjM1YjJkMmNkMGJlOTY5ZDI5MjExNDA1MDEzYTc0ZWJlOWQ4MjFiYWQ3YTg4NGNiMjA5YTc5OTcwMWE4NGFkMDA1NTFlODc5YjY4NTJlNDlhN2Q3YmQ1NGZhMDMxNTFkMzI0Mjg2MjUzMGMwYTI5M2RkOWRkMjI2MWE5MjRlMjZjNjE5MTcwNTZiNWJjYjgyOTZiZmJhMDBjM2YxMDY3Y2MzNTNhMzMzNTFkOGE2YmUNCjI0NWViMjhhNTc3MWU4ODRjMTZjZTU4NDVlOWUzYjM3YzUzMjc0NjY4NTNmOGZmMmNiN2NiOWNjZmQ5ZmM2YWYxZmE2MGRhYjJhY2E4ZDliODk2MDdlZjg2NzBkM2M1MDdkYTRjNjkxNjI0YWI0YWMzMjcwMjYyNDI1MzdlYjY1MmJkMThlMDBjMTBiZmJkOTlhODNlNjY0ZTZiZTBlYzMxNjAxNzI3OTkzOTIxZjg0ZGU2ZDkwMzhjNTJjOWUzYjYxMTE0NjRlMzJmNzYyYzdmMzkzZGI2NGU2ODU0OTk4MTdhZjUzYmE2MzljZmU3YjRhNjhjODcwMTIwNWQxDQo0OGE2NTNkMDZmNzI4MzRlOWY5YTdkOTYxYjQ5M2JhNjYxODViNGFjY2I3MDdjMzQyMmE5YTFlMDhhNTdiNmI1MWFkODNjY2E2N2E1MzBlMTlmNGEwMWVkOWUxYTZkMDk2YjM4M2FiMjU1ZWZkNzdiM2IyMTdlMzAwZGMyNWE1NDRmNDA2MTI5ODA2MTQwNDZkODdmMjAzNDQyM2U2MzM0YzAyZWM5YjBmYWIxMjU5MjYyZDQ3ZWU0MzAwNjY2ZjE0YzgyOWM4NGY1MjQxMDVlYzJkMzBjNmI4YzQ2NzFhOWM3MDViNWVkMjVkYjM0ODAzYzBkZGEwZDhjNGFjMQ0KMmM4YmNkNGM4ZDUxMWMwNjBjZjY4MzRkZTZiMGNiY2MwMjNhZmZiNzU2YTc4ZGJiZjgwNTAwMDBmZmZmMDMwMDUwNGIwMzA0MTQwMDA2MDAwODAwMDAwMDIxMDA1YzQxNjZjMGQ5MDAwMDAwMDQwMTAwMDAwZjAwMDAwMDY0NzI3MzJmNjQ2Zjc3NmU3MjY1NzYyZTc4NmQ2YzRjOGYzMTRmYzMzMDEwODU3N2E0ZmUwN2ViMmFiMTIwNmEyN2EwMGE0MjljYWFhYTYwNjFhMzY1NjFiYmM2NDcxMjYxOWZhM2Q4NGQ0MjdmM2QyZTBiMmNhNzc3N2FhN2Y3YmUNCjJiMzdiM2IzNjJhNDIxNzQ5ZTM1NjQyYjA1ODJiOGY2YTZlMzQ2YzNmYmUxZTVmNjAxNDQ4OGM4MDZhZDY3ZDJmMDRkMDEzNmQ1ZTJhYWM0YzJmODg5ZGY2OGRjYzc0NmE0MTAwZTA1NmE2ODYzZWMwYjI5NDNkZDkyYzNiMGYyM2Q3MWYyM2VmZGUwMzBhNjc1NjhhNDE5NzA0YWUxY2VjYTVjYTliNTc0ZDg3MTZhNjhiMWE3NWQ0YmY1ZDdmZWU0MzRhY2U3ZTdmZWU2ZjU5MWYyZTk1Y2RiOTEzZmNlNTkxNjI5ZDNmYTdhMzk2ZjlmNDA0NDlhZTNkZjMxDQo1Y2YwMTMzYTU0ODllOWU4NGY2YzgyYjAxYWQyMjNmMTc3MjZlZjVlZGRlNTIwOGUxN2ExNDA1NmE1ZmMwZjVmZmQwMDAwMDBmZmZmMDMwMDUwNGIwMTAyMmQwMDE0MDAwNjAwMDgwMDAwMDAyMTAwYjY4MzM4OTJmZTAwMDAwMGUxMDEwMDAwMTMwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwNWI0MzZmNmU3NDY1NmU3NDVmNTQ3OTcwNjU3MzVkMmU3ODZkNmM1MDRiMDEwMjJkMDAxNDAwMDYwMDA4MDAwMDAwMjEwMDM4ZmQyMWZmZDYwMA0KMDAwMDk0MDEwMDAwMGIwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDJmMDEwMDAwNWY3MjY1NmM3MzJmMmU3MjY1NmM3MzUwNGIwMTAyMmQwMDE0MDAwNjAwMDgwMDAwMDAyMTAwODZjODlmNWFiYzAyMDAwMGI5MDUwMDAwMGUwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDJlMDIwMDAwNjQ3MjczMmY2NTMyNmY0NDZmNjMyZTc4NmQ2YzUwNGIwMTAyMmQwMDE0MDAwNjAwMDgwMDAwMDAyMTAwNWM0MTY2YzBkOTAwMDAwMDA0MDEwMDAwMGYwMDAwMDANCjAwMDAwMDAwMDAwMDAwMDAwMDAwMTYwNTAwMDA2NDcyNzMyZjY0NmY3NzZlNzI2NTc2MmU3ODZkNmM1MDRiMDUwNjAwMDAwMDAwMDQwMDA0MDBmMzAwMDAwMDFjMDYwMDAwMDAwMH19fXtcc3B7XHNuIGRoZ3R9e1xzdiAyNTE2NjQzODR9fXtcc3B7XHNuIGZIaWRkZW59e1xzdiAwfX17XHNwe1xzbiBmUHNldWRvSW5saW5lfXtcc3YgMH19e1xzcHtcc24gZkxheW91dEluQ2VsbH17XHN2IDF9fXtcc2hwdHh0IFxsdHJwYXIgDQpccGFyZFxwbGFpbiBcbHRycGFyXHM0OVxxbCBcbGkwXHJpMFxzbC0yMDBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IE9IU1VTQTo3NjE5ODQ1NzkuMTAgDQpccGFyIA0KXHBhciB9fX17XHNocHJzbHR7XCpcZG9cZG9ieG1hcmdpblxkb2J5cGFyYVxkb2RoZ3Q4MjA1XGRwdHhieFxkcHR4bHJ0YntcZHB0eGJ4dGV4dFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxzNDlccWwgXGxpMFxyaTBcc2wtMjAwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMlxhbGFuZzEwMjUgDQpcbHRyY2hcZmNzMCBcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBPSFNVU0E6NzYxOTg0NTc5LjEwIA0KXHBhciANClxwYXIgfX1cZHB4MFxkcHkwXGRweHNpemU0MDMyXGRweXNpemU0MDBcZHBmaWxsZmdjcjI1NVxkcGZpbGxmZ2NnMjU1XGRwZmlsbGZnY2IyNTVcZHBmaWxsYmdjcjI1NVxkcGZpbGxiZ2NnMjU1XGRwZmlsbGJnY2IyNTVcZHBmaWxscGF0MFxkcGxpbmVob2xsb3d9fX19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IA0KXHBhciB9fXtcaGVhZGVyZiBcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJcczIzXHFsIFxsaTBccmkwXHdpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANClxwYXIgfX17XGZvb3RlcmYgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHMyMlxxYyBcbGkwXHJpMFx3aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMTZcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczE2XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQpccGFyIH1ccGFyZCBcbHRycGFyXHMyMlxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANClxwYXIgfX1ccGFyZFxwbGFpbiBcbHRycGFyXHMxN1xxaiBcZmk3NDFcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggVG8gZXZpZGVuY2UgaXRzIGFjY2VwdGFuY2Ugb2YgdGhpcyBBbWVuZG1lbnQsIGFuZCBpbnRlbmRpbmcgdG8gYmUgbGVnYWxseSBib3VuZCwgZWFjaCBDby1Pd25lciBoYXMgY2F1c2VkIGl0cyBhdXRob3JpemVkIHJlcHJlc2VudGF0aXZlIHRvIHNpZ24gYmVsb3cgYXMgb2YgdGhlIGRhdGUgZmlyc3Qgd3JpdHRlbiBhYm92ZS4NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczI4XHFsIFxsaTQzMjBccmkwXHNhMjQwXHdpZGN0bHBhclx0cXJcdHg5MjM0XHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW40MzIwXGl0YXAwXHBhcmFyc2lkMzQzODA3OCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDM0MzgwNzggUmlzaW5nIFRyZWUgV2luZCBGYXJtIExMQ1xsaW5lIFxsaW5lIFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDM0MzgwNzggXHRhYiBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IEJ5OlxsaW5lIFRpdGxlOg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDM0MzgwNzggXGxpbmUgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMzQzODA3OCBcdGFiIFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggQnk6XGxpbmUgVGl0bGU6DQpccGFyIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDM0MzgwNzggUmlzaW5nIFRyZWUgV2luZCBGYXJtIElJIExMQ1xsaW5lIFxsaW5lIFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDM0MzgwNzggXHRhYiBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IEJ5OlxsaW5lIFRpdGxlOg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDM0MzgwNzggXGxpbmUgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMzQzODA3OCBcdGFiIFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggQnk6XGxpbmUgVGl0bGU6DQpccGFyIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDM0MzgwNzggUmlzaW5nIFRyZWUgV2luZCBGYXJtIElJSSBMTENcbGluZSBcbGluZSBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQzNDM4MDc4IFx0YWIgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBCeTpcbGluZSBUaXRsZToNClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQzNDM4MDc4IFxsaW5lIFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDM0MzgwNzggXHRhYiBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IEJ5OlxsaW5lIFRpdGxlOg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IA0KXHBhciBcc2VjdCB9XHNlY3RkIFxsdHJzZWN0XHBnbnJlc3RhcnRccGduc3RhcnRzMlxwZ251Y2x0clxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xwZ25objFcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQzNDM4MDc4XHNmdG5iaiB7XGZvb3RlcmYgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHMyMlxxYyBcbGkwXHJpMFx3aWRjdGxwYXINClx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMxNlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCANClxmczI0XGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMzQzODA3OCBCLTItMQ0KXHBhciB9XHBhcmQgXGx0cnBhclxzMjJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHRxY1x0eDQ2ODBcdHFyXHR4OTM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQpccGFyIH19XHBhcmRccGxhaW4gXGx0cnBhclxzNTFccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGJcaW5zcnNpZDM0MzgwNzggRVhISUJJVCBCDQpccGFyIEFNRU5ETUVOVFMgVE8gRVhISUJJVCBCIFRPIFRIRSBBR1JFRU1FTlR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTFccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggMS5cdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxMTMwNDAxIA0KQW1lbmRlZCBhbmQgcmVzdGF0ZWQgU2VjdGlvbiBBLjF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IDoNClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczdccWogXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWw2XGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMzQzODA3OCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggMS5cdGFiIFNoYXJlZCBGYWNpbGl0aWVzDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkxNDQwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggYS5cdGFiIFByb2plY3QgU3Vic3RhdGlvbjogIFNlZSBFeGhpYml0IEItMSBhdHRhY2hlZCBoZXJldG8uDQpccGFyIGIuXHRhYiBUcmFuc21pc3Npb24gTGluZTogIFNlZSBFeGhpYml0IEItMiBhdHRhY2hlZCBoZXJldG8uDQpccGFyIH1ccGFyZCBcbHRycGFyXHMxNVxxaiBcZmktNzIwXGxpMjE2MFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4yMTYwXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ0NjA2NzMyIGMuXHRhYiANClN1cGVydmlzb3J5IENvbnRyb2wgYW5kIERhdGEgQWNxdWlzaXRpb24gKFNDQURBKSBTeXN0ZW0sIGFzIGZ1cnRoZXIgZGVzY3JpYmVkIG9uIEV4aGliaXQgQi0yIGF0dGFjaGVkIGhlcmV0bywgZXhjbHVkaW5nIGZlZWRlciByZWxheXMsIGJyZWFrZXJzIGFuZCBjb2xsZWN0aW9uIHN5c3RlbSBmaWJlciBvcHRpYyBjYWJsZXMgZm9yIHRoZSBpbmRpdmlkdWFsIHdpbmQgdHVyYmluZSBnZW5lcmF0b3JzfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IA0KXHBhciB9XHBhcmQgXGx0cnBhclxzMTVccWogXGxpMTQ0MFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggZC5cdGFiIFJvYWRzDQpccGFyIGUuXHRhYiBPJk0gQnVpbGRpbmcNClxwYXIgZi5cdGFiIENvbmRvciBEZXRlY3Rpb24gVG93ZXINClxwYXIgfVxwYXJkIFxsdHJwYXJcczE1XHFqIFxmaS03MjBcbGkyMTYwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjIxNjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDQ2MDY3MzIgZy5cdGFiIA0KTWV0ZW9yb2xvZ2ljYWwgVG93ZXIsIGluY2x1ZGluZyBpbnN0cnVtZW50YXRpb24sIHBvd2VyIGxvb3AgYW5kIGZpYmVyIG9wdGljIGNhYmxlIGFuZCBhc3NvY2lhdGVkIHNwbGljZSBib3hlcywganVuY3Rpb24gYm94ZXMgYW5kIHRlcm1pbmF0aW9ucyBmcm9tIHRoZSBDb250cm9sIEJ1aWxkaW5nIChkZXNjcmliZWQgb24gRXhoaWJpdCBCLTEpIHRvIHRoZSB0b3dlcg0KXHBhciBoLlx0YWIgRW52aXJvbm1lbnRhbCBNaXRpZ2F0aW9uIFBhcmNlbHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTFccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IDIuXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQzNDM4MDc4IEFkZGl0aW9uIHRvIFNlY3Rpb24gQS4yLmN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IDsNClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU3XHFqIFxsaTcyMFxyaTg2NlxzYTI0MFxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluODY2XGxpbjcyMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzggXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBhLlx0YWIgVGhlIGZvbGxvd2luZyBwYXJjZWxzIGFyZSBhZGRlZCB0byBTZWN0aW9uIEEuMi5jOg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGZpLTcyMFxsaTIxNjBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMjE2MFxpdGFwMFxwYXJhcnNpZDM0MzgwNzggXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDQyNTY5NyBUcmFjdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQzNDM4MDc4IDIxfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQyNTYyMDgwIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxxaiBcbGkxNDQwXHJpOThcc2EyNDBcc2wtMjUwXHNsbXVsdDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xhZGp1c3RyaWdodFxyaW45OFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMzQzODA3OCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNDI1Njk3IFRoZSBTb3V0aHdlc3QgcXVhcnRlciANCm9mIHRoZSBTb3V0aHdlc3QgcXVhcnRlciBvZiBTZWN0aW9uIDE1LCBUb3duc2hpcCAxMSBOb3J0aCwgUmFuZ2UgMTMgV2VzdCwgU2FuIEJlcm5hcmRpbm8gTWVyaWRpYW4sIGluIHRoZSBDb3VudHkgb2YgS2VybiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2lhbCBwbGF0IG9mIHRoZSBzdXJ2ZXkgb2Ygc2FpZCBsYW5kLCBhcHByb3ZlZCBieSB0aGUgU3VydmV5b3IgR2VuZXJhbCBPY3RvYmVyIDcsIDE5MzYuDQoNClxwYXIgRXhjZXB0IG9uZSBoYWxmIG9mIGFsbCBvaWwsIGdhcyBhbmQgbWluZXJhbHMgYW5kIGh5ZHJvY2FyYm9uIHN1YnN0YW5jZXMgaW4gYW5kIHVuZGVyIHNhaWQgbGFuZCBhcyByZXNlcnZlZCBieSB0aGUgTSAmIFIgU2hlZXAgQ28uIGluIGRlZWQgZGF0ZWQgQXVndXN0IDQsIDE5NTUsIHJlY29yZGVkIGluIEJvb2sgMjUxOSwgUGFnZSAyOTggb2YgT2ZmaWNpYWwgUmVjb3Jkcy4NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxmaS03MjBcbGkyMTYwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjIxNjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggQVBOOiAgMjM3LTE4NS0wN317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ0MjU2OTcgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1MVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggMy5cdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDM0MzgwNzggQW1lbmRlZCBhbmQgcmVzdGF0ZWQgZGVzY3JpcHRpb24gaW4gU2VjdGlvbiBBLjIuZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggOw0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTFccWogXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IGEuXHRhYiANClRoZSBkZXNjcmlwdGlvbiBvZiBUcmFjdCA3IGlzIGFtZW5kZWQgYW5kIHJlc3RhdGVkIGluIGl0cyBlbnRpcmV0eSBhcyBmb2xsb3dzOg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGZpMzYwXGxpMTA4MFxyaTk5XHNhMjQwXHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW45OVxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMzQzODA3OCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQzNDM4MDc4IFRyYWN0IDd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkODA2NjU1NiANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5M1xzYTI0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTNcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IFRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDM0MzgwNzggRWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IGhhbGZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBvZn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggTm9ydGhlYXN0IHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBTb3V0aHdlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBxdWFydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggU291dGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBTZWN0aX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZC0xXGV4cG5kdHctOFxpbnNyc2lkMzQzODA3OCBvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggMiwgVG93bnNoaXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ1XGV4cG5kdHcyOVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAxMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ1XGV4cG5kdHcyOVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBOb3J0aCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ1XGV4cG5kdHcyOFxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBSYW5nZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ2XGV4cG5kdHczMFxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAxM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDVcZXhwbmR0dzI5XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IFdlc3QsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI4XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IFNhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDVcZXhwbmR0dzI5XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IEJlcm5hcmRpbm99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjlcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggQmFzZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDVcZXhwbmR0dzI4XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4ICZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjlcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggTWVyaWRpYW4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNlxleHBuZHR3MzBcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjlcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNVxleHBuZHR3MjhcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggdW5pbmNvcnBvcmF0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNVxleHBuZHR3MjhcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggYXJlYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDZcZXhwbmR0dzMwXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDVcZXhwbmR0dzI4XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IA0KdGhlIENvdW50eSBvZiBLZXJuLCBTdGF0ZSBvZiBDYWxpZm9ybmlhLCBhY2NvcmRpbmcgdG8gdGhlIG9mZmljaWFsIHBsYXQgdGhlcmVvZi4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk4NjZcc2EyNDBcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjg2NlxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggQVBOOiAgMjM3LTEzMi0yMA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTdccWogXGxpNzIwXHJpODY2XHNhMjQwXHNsLTI1MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW44NjZcbGluNzIwXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggYi5cdGFiIFRoZSBuYW1lIG9mIFRyYWN0IE51bWJlciAyNSBpcyBhbWVuZGVkIHRvIGJlIFRyYWN0IE51bWJlciAyMC4NClxwYXIgYy5cdGFiIFRoZSBmb2xsb3dpbmcgcGFyY2VscyBhcmUgYWRkZWQgdG8gU2VjdGlvbiBBLjIuZjoNClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk4NjZcc2EyNDBcc2wtMjUwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjg2NlxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxODQ4MzUwIFRyYWN0IDIxDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFqIFxsaTE0NDBccmk5MlxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjkyXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDM0MzgwNzggVGhhdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IHBvcnRpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBvZn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggd2VzdH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggaGFsZiBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggc291dGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IHNvdXRoZWFzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBzb3V0aGVhc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZC0xXGV4cG5kdHctN1xpbnNyc2lkMzQzODA3OCBxfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQzNDM4MDc4IHVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IG9mIFNlY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQoyLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAxMX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQzNDM4MDc4ICBOfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBvcnRoLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxNFxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBSYW5nZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDNcZXhwbmR0dzE1XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQzNDM4MDc4ICBXfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBlc3QsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTRcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggUy5CLkIuTS4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTVcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzE0XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IHVuaW5jb3Jwb3JhdGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggYXJlYSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggQ291bnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kM1xleHBuZHR3MTVcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTNcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggS2Vybix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQzXGV4cG5kdHcxNVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDNcZXhwbmR0dzE5XGluc3JzaWQzNDM4MDc4IFN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IHRhdGUgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQzNDM4MDc4IENhbGlmb3JuaWEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBwZXJ9DQp7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IE9mZmljaWFsfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBQbGF0IHRoZXJlb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggZmlsZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBPZmZpY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBTdXJ2ZXlvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IEdlbmVyYWwsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBkZXNjfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZC0yXGV4cG5kdHctMTBcaW5zcnNpZDM0MzgwNzggcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggaWJlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggYXMgZm9sbG93czoNClxwYXIgfVxwYXJkIFxsdHJwYXJccWogXGxpMTQ0MFxyaTkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9cYWRqdXN0cmlnaHRccmluOTBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IFN0YXJ0aW5nIGF0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQzNDM4MDc4IHR9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggaGUgbm9ydGh3ZXN0IGNvcm5lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IG9mIHRoZSB3ZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBoYWxmIG9mIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IHNvdXRoZWFzdCBxdWFydGVyIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCB0aGUgc291dGhlYXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggcXVhcnRlciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kLTNcZXhwbmR0dy0xN1xpbnNyc2lkMzQzODA3OCBvfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IGYgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggc291dGhlYXN0IHF1YXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggc2FpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDM0MzgwNzggU2VjdGlvbiAyO317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IHRoZW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IA0KaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggc291dGhlcmx5fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBkaXJlY3Rpb24sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggMTMyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBmZWV0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IHBvaW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IGJlZ2lubmluZzsgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kLTJcZXhwbmR0dy0xM1xpbnNyc2lkMzQzODA3OCBufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBjZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IGVhc3Rlcmx5IDMzMH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggZmVldDt9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3M1xpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCB0aGVuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IFNvdXRoZXJseSAxMzJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBmZWV0O317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggdGhlbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggd2VzdGVybHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IDMzMH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IGZlZXQ7IHRoZW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggbm9ydGhlcmx5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggMTMyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBmZWV0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IHBvaX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDM0MzgwNzggbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IG9mIGJlZ2lubmluZy4NClxwYXIgfVxwYXJkIFxsdHJwYXJccWogXGxpMTQ0MFxyaTkyXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9cYWRqdXN0cmlnaHRccmluOTJcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IEV4Y2VwdGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggdGhlcmVmcm9tfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IGFsbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDM0MzgwNzggb2lsLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IGdhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IGFuZH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IG90aGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggbWluZXJhbH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzExXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IGRlcG9zaXRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBsYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggc299e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggcGF0ZW50ZWQsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCB0b2dldGhlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCB3aXRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kLTFcZXhwbmR0dy01XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IHJpZ2h0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggdG8gcHJvc3BlY3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggZm9yLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggbWluZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCByZW1vdmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBzYW1lLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IGFjY29yZGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMlxleHBuZHR3MTBcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBwcm92aXNpb25zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDJcZXhwbmR0dzEwXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBzYWlkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzlcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggQWN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMlxleHBuZHR3MTFcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBKdW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kLTNcZXhwbmR0dy0xNVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAxLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc5XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IDE5Mzh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQyXGV4cG5kdHcxMFxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQyXGV4cG5kdHcxMVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dy0xXGluc3JzaWQzNDM4MDc4IHJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDM0MzgwNzggZXNlcnZlZCBieX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMlxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjFcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQpVbml0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjFcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggU3RhdGVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIyXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IG9mfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjNcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggQW1lcmljYSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjFcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ0XGV4cG5kdHcyMlxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBQYXRlbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kM1xleHBuZHR3MTlcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggcmVjb3JkZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ0XGV4cG5kdHcyMlxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBGZWJydWFyeX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQtMlxleHBuZHR3LTEwXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IDI0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDRcZXhwbmR0dzIyXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IDE5NjB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kNFxleHBuZHR3MjFcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ0XGV4cG5kdHcyMlxpbnNyc2lkMzQzODA3OCAgQn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggb29rfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDRcZXhwbmR0dzIyXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IDMyNDIsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kNFxleHBuZHR3MjFcaW5zcnNpZDM0MzgwNzggIFB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IGFnZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMlxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAxNTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ0XGV4cG5kdHcyMlxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ0XGV4cG5kdHcyMVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBPZmZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQtMVxleHBuZHR3LTdcaW5zcnNpZDM0MzgwNzggaX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggY2lhbCBSZWNvcmRzLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTg2NlxzYTI0MFxzbC0yNTBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluODY2XGxpbjE0NDBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxODQ4MzUwIEFQTiAyMzctMTMyLTI4DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1MVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggMy5cdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDM0MzgwNzggTmV3IFNlY3Rpb25zIEEuMi5qIGFuZCBBLjIua317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggOg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTFccWogXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IGouXHRhYiBNZXRlb3JvbG9naWNhbCBUb3dlciAoUlNULTNBKQ0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTFccWogXGxpMTQ0MFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDM0MzgwNzggVHJhY3QgMQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTdccWogXGxpMTQ0MFxyaTkzXHNiMTBcc2EyNDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkzXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDM0MzgwNzggVGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggV2VzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHczXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IGhhbGZ9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcxXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggdGhlfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBOb3J0aHdlc3QgcXVhcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBTZWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggMTEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHcyXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IDExfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBOb3J0aCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBSYW5nZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggMTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3MlxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBXZXN0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzFcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggU2FufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzJcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggQmVybmF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQtMVxleHBuZHR3LThcaW5zcnNpZDM0MzgwNzggcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggZGlubyBNZXJpZGlhbix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzNcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggdW5pbmNvcnBvcmF0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IGFyZWEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggQ291bnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IEtlcm4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBTdGF0ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3NFxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBDYWxpZm9ybmlhLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IGFjY29yZGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dzRcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHc0XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IG9mZmljaWFsIHBsYXQgdGhlcmVvZi4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczU3XHFqIFxsaTE0NDBccmk5M1xzYTI0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluOTNcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IEV4Y2VwdGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IHRoZXJlZnJvbX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ4XGV4cG5kdHc0MFxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBvbmUtaGFsZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczNVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQzNDM4MDc4IG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM4XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IGFsbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczNlxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBvaWwsfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggZ2FzLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczNVxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBtaW5lcmFsc317XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM1XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQ3XGV4cG5kdHczN1xpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBvdGhlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDdcZXhwbmR0dzM1XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IGh5ZHJvY2FyYm9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDdcZXhwbmR0dzM3XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IHN1YnN0YW5jZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQ2XGV4cG5kdHczNFxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzdcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggbmF0dXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQzNDM4MDc4IGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IGx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kN1xleHBuZHR3MzZcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggZ2FzLCB1bmRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzhcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc4XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IHNhaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBsYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NlxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc2XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IHJlc2VydmVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBieX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IE0mUn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzZcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggU2hlZXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBDby4sfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IERlZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc3XGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IHJlY29yZGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggTm92ZW1iZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQtMVxleHBuZHR3LThcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggMjIsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggMTk1NX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxleHBuZDFcZXhwbmR0dzdcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBCb29rfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3OFxpbnNyc2lkMzQzODA3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAyNTE5LCBQYWdlIDI4Mywgb2YgT2ZmaWNpYWwgUmVjb3Jkcy4NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFsIFxsaTE0NDBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDM0MzgwNzggXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBBUE46ICAyMzctMjg0LTAxDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1MVxxaiBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMzQzODA3OCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IGsuXHRhYiBFbnZpcm9ubWVudGFsIE1pdGlnYXRpb24gUGFyY2Vscw0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxxaiBcbGkxMjYwXHJpODZcc2EyNDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjg2XGxpbjEyNjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcYlxpXGRiY2hcYWYzMTUwNVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDE0MTgwODE4IFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxkYmNoXGFmMzE1MDVcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxNDE4MDgxOCB7XCpcYmtta3N0YXJ0IF9EVl9NNjh9e1wqXGJrbWtlbmQgX0RWX002OH1caGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgVHJhY3QgMX17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMzE1MDVcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ1MzUyIA0KXHBhciB9XHBhcmQgXGx0cnBhclxxaiBcbGkxNDQwXHJpOTJcc2EyNDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkyXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDE0NTAzNzE5IHtcKlxia21rc3RhcnQgX0RWX002OX17XCpcYmtta3N0YXJ0IF9EVl9NNzB9e1wqXGJrbWtlbmQgX0RWX002OX17XCpcYmtta2VuZCBfRFZfTTcwfQ0KVGhlIG5vcnRod2VzdCBxdWFydGVyIG9mIHRoZSBzb3V0aHdlc3QgcXVhcnRlciBvZiBTZWN0aW9uIDExLCBUb3duc2hpcCAxMSBOb3J0aCwgUmFuZ2UgMTMgV2VzdCwgU2FuIEJlcm5hcmRpbm8gTWVyaWRpYW4sIGluIHRoZSB1bmluY29ycG9yYXRlZCBhcmVhLCBDb3VudHkgb2YgS2VybiwgU3RhdGUgb2YgQ2FsaWZvcm5pYSwgYWNjb3JkaW5nIHRvIHRoZSBPZmZpY2lhbCBQbGF0IHRoZXJlb2YuDQpccGFyIH1ccGFyZCBcbHRycGFyXHFqIFxsaTE0NDBccmk4MVxzYTI0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluODFcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTQ1MDM3MTkgRXhjZXB0IHRoZXJlZnJvbSBcJ2JkDQogb2YgYWxsIG9pbCwgZ2FzIGFuZCBtaW5lcmFscyBhbmQgaHlkcm9jYXJib24gc3Vic3RhbmNlcywgaW4gYW5kIHVuZGVyIHNhaWQgbGFuZCwgYXMgZXhjZXB0ZWQgaW4gZGVlZCBkYXRlZCBBdWd1c3QgNCwgMTk1NSBmcm9tIE0gJiBSIFNoZWVwIENvLiwgdG8gQy5NLiBUdXINCmxleSwgcmVjb3JkZWQgTm92ZW1iZXIgMjIsIDE5NTUgaW4gQm9vayAyNTE5LCBQYWdlIDI4MyBvZiBPZmZpY2lhbCBSZWNvcmRzOyB3aGljaCBmdXJ0aGVyIHByb3ZpZGVzIGFzIGZvbGxvd3M6DQpccGFyIFRoZSByaWdodCB0byBjb25kdWN0IGRyaWxsaW5nIG9yIG90aGVyIG9wZXJhdGlvbnMgdXBvbiB0aGUgc3VyZmFjZSBvZiBzYWlkIGxhbmRzIGxhc3QgZGVzY3JpYmVkIG9yIGFueSBwb3J0aW9uIHRoZXJlb2YsIHdpdGhvdXQgZmlyc3QgaGF2aW5nIHNlY3UNCnJlZCB0aGUgd3JpdHRlbiBjb25zZW50IG9mIHRoZSBzZWNvbmQgcGFydGllcywgdGhlaXIgaGVpcnMgYW5kIGFzc2lnbnMsIG9yIHRoZSBvd25lciBvciBvd25lcnMgb2Ygc3VjaCBwb3J0aW9ucyBvZiB0aGUgc3VyZmFjZSBhcyBtYXkgYmUgdXNlZCBmb3IgYSBkcmlsbGluZyBzaXRlIG9yIHN1cmZhY2Ugb3BlcmF0aW9ucywgYnV0IG5vdGhpbmcgaGVyZWluIGNvbnRhaW5lZCBzaGFsbCBiZSBkZWVtZWQgdG8gcHJldmVudCB0aGUgZ3JhbnRvciwgaQ0KdA0KcyBzdWNjZXNzb3JzIGFuZCBhc3NpZ25zLCBmcm9tIGV4dHJhY3Rpbmcgb3IgY2FwdHVyaW5nIHNhaWQgb2lsLCBnYXMgb3Igb3RoZXIgaHlkcm9jYXJib24gc3Vic3RhbmNlcyBvciBtaW5lcmFscyBieSBkcmlsbGluZyBvbiBhZGphY2VudCBvciBuZWlnaGJvcmluZyBsYW5kcyBhbmQvb3IgZnJvbSBjb25kdWN0aW5nIHN1YnN1cmZhY2UgZHJpbGxpbmcgb3Igb3RoZXIgb3BlcmF0aW9ucyB1bmRlciBzYWlkIGxhbmRzIGxhc3QgYWJvdmUgZGVzY3JpDQpiZWQgYXQgc3VjaCBkZXB0aHMgYXMgbm90IHRvIGRpc3R1cmIgdGhlIHN1cmZhY2UgdGhlcmVvZiBvciBhbnkgaW1wcm92ZW1lbnRzIHRoZXJlb24sIHdhcyB3YWl2ZWQgYnkgdGhlIGdyYW50b3JzIGluIHNhaWQgZGVlZC4NClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMTQ0MFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMzE1MDVcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ1MzUyIHtcKlxia21rc3RhcnQgX0RWX003MX17XCpcYmtta2VuZCBfRFZfTTcxfVxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCANCkFQTjogIDIzNy0yODYtMDENClxwYXIgfVxwYXJkIFxsdHJwYXJccWogXGxpMTA4MFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjEwODBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxkYmNoXGFmMzE1MDVcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ1MzUyIHtcKlxia21rc3RhcnQgX0RWX003Mn17XCpcYmtta2VuZCBfRFZfTTcyfVxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCBUcmFjdCAyDQp9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYzMTUwNVxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDUzNTIgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFqIFxsaTE0NDBccmkwXHNhMjQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDk0NjYwNDcge1wqXGJrbWtzdGFydCBfRFZfTTczfXtcKlxia21rc3RhcnQgX0RWX003NH17XCpcYmtta2VuZCBfRFZfTTczfXtcKlxia21rZW5kIF9EVl9NNzR9DQpUaGUgd2VzdCBcJ2JkIG9mIHRoZSBzb3V0aHdlc3QgXCdiYyBvZiB0aGUgbm9ydGhlYXN0IFwnYmMgb2YgdGhlIHNvdXRoZWFzdCBcJ2JjIG9mIFNlY3Rpb24gMTAsIFRvd25zaGlwIDExIE5vcnRoLCANClJhbmdlIDEzIFdlc3QsIFNhbiBCZXJuYXJkaW5vIE1lcmlkaWFuLCBpbiB0aGUgdW5pbmNvcnBvcmF0ZWQgYXJlYSwgQ291bnR5IG9mIEtlcm4sIFN0YXRlIG9mIENhbGlmb3JuaWEsIGFjY29yZGluZyB0byB0aGUgT2ZmaWNpYWwgUGxhdCB0aGVyZW9mLg0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkxNDQwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTQ2NjA0NyANCkV4Y2VwdGluZyB0aGVyZWZyb20gYWxsIG9pbCwgZ2FzIGFuZCBvdGhlciBtaW5lcmFsIGRlcG9zaXRzLCBpbiBzYWlkIGxhbmQsIHRvZ2V0aGVyIHdpdGggdGhlIHJpZ2h0IHRvIHByb3NwZWN0IA0KZm9yLCBtaW5lIGFuZCByZW1vdmUgc2FtZSwgYWNjb3JkaW5nIHRvIHRoZSBwcm92aXNpb25zIG9mIHNhaWQgQWN0IG9mIEp1bmUgMSwgMTkzOCwgYXMgZXhjZXB0ZWQgYW5kIHJlc2VydmVkIGJ5IHRoZSBVbml0ZWQgU3RhdGVzIG9mIEFtZXJpY2EgaW4gdGhlIHBhdGVudCByZWNvcmRlZCBTZXB0ZW1iZXIgMTMsIDE5NjAgaW4gQm9vayAzMzAyLCBQYWdlIDQ5OSBvZiBPZmZpY2lhbCBSZWNvcmRzLn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxkYmNoXGFmMzE1MDVcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ1MzUyIA0KXHBhciB7XCpcYmtta3N0YXJ0IF9EVl9NNzV9e1wqXGJrbWtlbmQgX0RWX003NX1caGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgQVBOOiAgMjM3LTE1Mi19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYzMTUwNVxpbnNyc2lkMzQzODA3OCBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgMTINClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFsIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzggXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANClxwYXIgDQpccGFyIA0KXHBhciA0Llx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMzQzODA3OCBBbWVuZGVkIGFuZCByZXN0YXRlZCBTZWN0aW9uIEEuNC5hfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCA6DQpccGFyIH1ccGFyZCBcbHRycGFyXHMxNVxxaiBcZmktNzIwXGxpMjE2MFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4yMTYwXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggYS5cdGFiIA0KTyZNIEJ1aWxkaW5nOiAgUmlnaHRzIG9mIExvbmUgVmFsbGV5IFNvbGFyIFBhcmsgSSBMTEMgYW5kIExvbmUgVmFsbGV5IFNvbGFyIFBhcmsgSUkgTExDIChjb2xsZWN0aXZlbHksIHRoZSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDY5NTQ4ODQgU3VibGVzc2Vlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggXCc5NA0KKSB1bmRlciB0aGF0IGNlcnRhaW4gU3VibGVhc2UgQWdyZWVtZW50IGRhdGVkIEZlYnJ1YXJ5IDYsIDIwMTUgYnkgYW5kIGJldHdlZW4gdGhlIENvLU93bmVycywgYXMgc3VibGVzc29ycywgYW5kIHRoZSBTdWJsZXNzZWVzLCBhcyBzdWJsZXNzZWVzLiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQyNTYyMDgwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzMTVccWwgXGxpMTQ0MFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1MVxxaiBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggXHNlY3QgfVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDM0MzgwNzhcc2Z0bmJqIFxwYXJkXHBsYWluIFxsdHJwYXINClxzNTFccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGJcaW5zcnNpZDM0MzgwNzggRVhISUJJVCBCLTENClxwYXIgUFJPSkVDVCBTVUJTVEFUSU9OIFNIQVJFRCBGQUNJTElUSUVTDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGYzXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcbG9jaFxhZjNcZGJjaFxhZjBcaGljaFxmMyBcJ2I3XHRhYn19XHBhcmRccGxhaW4gXGx0cnBhcg0KXHM2XHFsIFxmaS0zNjBcbGk3MjBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzNFxvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMTQwNzk2NSBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIE9uZSAoMSkgMjMwa1YgRGVhZCBFbmQgU3RydWN0dXJlIGluY2x1ZGluZyB0aGUgZm9sbG93aW5nIGVxdWlwbWVudCBhbmQgbWF0ZXJpYWw6DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn19XHBhcmQgXGx0cnBhcg0KXHM2XHFsIFxmaS0zNjBcbGkxMDgwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczRcaWx2bDFcb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjEwODBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgDQpUYXBlcmVkIFR1YnVsYXIgU3RydWN0dXJhbCBTdGVlbCBhbmQgYXNzb2NpYXRlZCBoYXJkd2FyZQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9U3RydWN0dXJlIGFuZCBlcXVpcG1lbnQgZ3JvdW5kaW5nIGNvbmR1Y3RvciBhbmQgYXNzb2NpYXRlZCBoYXJkd2FyZQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9VGhyZWUgKDMpIExpZ2h0bmluZyBTdXJnZSBBcnJlc3RvcnMsIDE4MGtWLCAxNDRrViBNQ09WDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn1UaHJlZSAoMykgQ29tcHJlc3Npb24gVGVlcywgNzk1IEFDU1IgdG8gTkVNQSA0LUhvbGUgUGFkDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn1UaGlydHkgKDMwKSBGZWV0IG9mIDEyNzIga2NtaWwgQUFDIChOYXJjaXNzdXMpIGNvbmR1Y3Rvcg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9U2l4ICg2KSBXZWxkZWQgVGVybWluYWwgQWRhcHRvcnMsIDEyNzIga2NtaWwgQUFDIHRvIE5FTUEgNC1Ib2xlIFBhZA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9VGhyZWUgKDMpIFN0YXRpb24gUG9zdCBJbnN1bGF0b3JzLCAyMzBrViwgVFItMzA4DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn1UaHJlZSAoMykgQ2FibGUgU3VwcG9ydHMsIDItMTI3MiBBQUMgY29uZHVjdG9ycyB0byA1XCc5NCBCb2x0IENpcmNsZQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9Rml2ZSBIdW5kcmVkICg1MDApIEZlZXQgb2YgMTI3MiBrY21pbCBBQUMgKE5hcmNpc3N1cykgY29uZHVjdG9yDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn1BcyBOZWVkZWQgQ2FibGUgU3BhY2VycyAyLTEyNzIgQUFDIGNvbmR1Y3RvcnMsIDRcJzk0IHNlcGFyYXRpb24NClxwYXIgfVxwYXJkIFxsdHJwYXJcczZccWogXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGYzXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcbG9jaFxhZjNcZGJjaFxhZjBcaGljaFxmMyBcJ2I3XHRhYn19XHBhcmQgXGx0cnBhcg0KXHM2XHFsIFxmaS0zNjBcbGk3MjBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzNFxvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMTQwNzk2NSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIA0KVGhyZWUgKDMpIDIzMGtWIFNpbmdsZSBQaGFzZSBCdXMgU3VwcG9ydHMsIGluY2x1ZGluZyB0aGUgZm9sbG93aW5nIGVxdWlwbWVudCBhbmQgbWF0ZXJpYWw6DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn19XHBhcmQgXGx0cnBhcg0KXHM2XHFsIFxmaS0zNjBcbGkxMDgwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczRcaWx2bDFcb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjEwODBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgU3RydWN0dXJhbCBTdGVlbCBhbmQgQXNzb2NpYXRlZCBoYXJkd2FyZQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9U3RydWN0dXJlIGFuZCBlcXVpcG1lbnQgZ3JvdW5kaW5nIGNvbmR1Y3RvciBhbmQgYXNzb2NpYXRlZCBoYXJkd2FyZQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9VGhyZWUgKDMpIFN0YXRpb24gUG9zdCBJbnN1bGF0b3JzLCAyMzBrViwgVFItMzA4DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn1UaHJlZSAoMykgQ2FibGUgU3VwcG9ydHMsIDItMTI3MiBBQUMgY29uZHVjdG9ycyB0byA1XCc5NCBCb2x0IENpcmNsZQ0KXHBhciB9XHBhcmQgXGx0cnBhclxzNlxxaiBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZjNcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmM1xkYmNoXGFmMFxoaWNoXGYzIFwnYjdcdGFifX1ccGFyZCBcbHRycGFyDQpcczZccWwgXGZpLTM2MFxsaTcyMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM0XG91dGxpbmVsZXZlbDVcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgDQpPbmUgKDEpIDIzMGtWLCAxMjAwQSwgR2FuZ2VkIDMtUGhhc2UsIE1vdG9yIE9wZXJhdGVkIERpc2Nvbm5lY3QgU3dpdGNoIGluY2x1ZGluZyB0aGUgZm9sbG93aW5nIGVxdWlwbWVudCBhbmQgbWF0ZXJpYWw6DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn19XHBhcmQgXGx0cnBhcg0KXHM2XHFsIFxmaS0zNjBcbGkxMDgwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczRcaWx2bDFcb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjEwODBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgU3RydWN0dXJhbCBTdGVlbCBhbmQgQXNzb2NpYXRlZCBoYXJkd2FyZQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9U3RydWN0dXJlIGFuZCBlcXVpcG1lbnQgZ3JvdW5kaW5nIGNvbmR1Y3RvciwgYXNzb2NpYXRlZCBoYXJkd2FyZSwgYW5kIHN3aXRjaCBncm91bmRpbmcgcGxhdGZvcm0NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifVNpeCAoNikgU3RhdGlvbiBQb3N0IEluc3VsYXRvcnMsIDIzMGtWLCBUUi0zMDgNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifVNpeCAoNikgV2VsZGVkIFRlcm1pbmFsIEFkYXB0b3JzLCAyLTEyNzIga2NtaWwgQUFDIHRvIE5FTUEgNC1Ib2xlIFBhZA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9U2l4dHkgKDYwKSBGZWV0IG9mIDEyNzIga2NtaWwgQUFDIChOYXJjaXNzdXMpIGNvbmR1Y3Rvcg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9QXMgTmVlZGVkIENhYmxlIFNwYWNlcnMgMi0xMjcyIEFBQyBjb25kdWN0b3JzLCA0XCc5NCBzZXBhcmF0aW9uDQpccGFyIH1ccGFyZCBcbHRycGFyXHM2XHFqIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDVcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmM1xpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgXGxvY2hcYWYzXGRiY2hcYWYwXGhpY2hcZjMgXCdiN1x0YWJ9fVxwYXJkIFxsdHJwYXINClxzNlxxbCBcZmktMzYwXGxpNzIwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczRcb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDE0MDc5NjUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCANCk9uZSAoMSkgMjMwa1YsIE1ldGVyaW5nIFN0YXRpb24sIGluY2x1ZGluZyB0aGUgZm9sbG93aW5nIGVxdWlwbWVudCBhbmQgbWF0ZXJpYWw6DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn19XHBhcmQgXGx0cnBhcg0KXHM2XHFsIFxmaS0zNjBcbGkxMDgwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczRcaWx2bDFcb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjEwODBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgU3RydWN0dXJhbCBTdGVlbCBhbmQgQXNzb2NpYXRlZCBoYXJkd2FyZQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9U3RydWN0dXJlIGFuZCBlcXVpcG1lbnQgZ3JvdW5kaW5nIGNvbmR1Y3RvciBhbmQgYXNzb2NpYXRlZCBoYXJkd2FyZQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9RXF1aXBtZW50IGNvbnRyb2wgd2lyaW5nIGFuZCBpbnRlcmNvbm5lY3RpbmcgY29uZHVpdCBpbmNsdWRpbmcgSnVuY3Rpb24gQm94ZXMNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifVRocmVlICgzKSAyMzBrViwgNjAwOjUgU2luZ2xlIFJhdGlvIER1YWwgV2luZGluZywgSW5zdHJ1bWVudCBDdXJyZW50IFRyYW5zZm9ybWVycw0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9VGhyZWUgKDMpIDIzMGtWLCAxMjAwLzIwMDA6MToxIER1YWwgV2luZGluZywgSW5zdHJ1bWVudCBQb3RlbnRpYWwgVHJhbnNmb3JtZXJzDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn1TaXggKDYpIFdlbGRlZCBUZXJtaW5hbCBBZGFwdG9ycywgMi0xMjcyIGtjbWlsIEFBQyB0byBORU1BIDQtSG9sZSBQYWQNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifVRocmVlICgzKSBDYWJsZSBTcGFjZXIgVGVlcywgMi0xMjcyIGtjbWlsIEFBQyB0byBORU1BIDQtSG9sZSBQYWQNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifVRocmVlICgzKSBBbHVtaW51bSBDYWJsZSBTdXBwb3J0IEJyYWNrZXRzDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn1UaGlydHkgKDMwKSBGZWV0IG9mIDEyNzIga2NtaWwgQUFDIChOYXJjaXNzdXMpIGNvbmR1Y3Rvcg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNlxxaiBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZjNcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmM1xkYmNoXGFmMFxoaWNoXGYzIFwnYjdcdGFifX1ccGFyZCBcbHRycGFyDQpcczZccWwgXGZpLTM2MFxsaTcyMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM0XG91dGxpbmVsZXZlbDVcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgMjMwa1YgU3Vic3RhdGlvbiBTdW1tYXRpb24gQnUNCnMgaW5jbHVkaW5nIHRoZSBmb2xsb3dpbmcgZXF1aXBtZW50IGFuZCBtYXRlcmlhbDoNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifX1ccGFyZCBcbHRycGFyDQpcczZccWwgXGZpLTM2MFxsaTEwODBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzNFxpbHZsMVxvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDE0MDc5NjUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCANCk9uZSAoMSkgMjMwa1YsIFRocmVlIFBoYXNlIExvdyBCdXMgU3VwcG9ydCwgd2hpY2ggaW5jbHVkZXM6DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGYxMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgXGxvY2hcYWYxMFxkYmNoXGFmMFxoaWNoXGYxMCBcJ2E3XHRhYn19XHBhcmQgXGx0cnBhcg0KXHM2XHFsIFxmaS0zNjBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczRcaWx2bDJcb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgU3RydWN0dXJhbCBTdGVlbCBhbmQgQXNzb2NpYXRlZCBoYXJkd2FyZQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmMTBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmMTBcZGJjaFxhZjBcaGljaFxmMTAgXCdhN1x0YWJ9U3RydWN0dXJlIGdyb3VuZGluZyBjb25kdWN0b3IgYW5kIGFzc29jaWF0ZWQgaGFyZHdhcmUNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZjEwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcbG9jaFxhZjEwXGRiY2hcYWYwXGhpY2hcZjEwIFwnYTdcdGFifVRocmVlICgzKSBTdGF0aW9uIFBvc3QgSW5zdWxhdG9ycywgMjMwa1YsIFRSLTMwOA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmMTBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmMTBcZGJjaFxhZjBcaGljaFxmMTAgXCdhN1x0YWJ9VGhyZWUgKDMpIEJ1cyBTdXBwb3J0cywgNFwnOTQgSVBTIEFsdW1pbnVtIEJ1cyB0byA1XCc5NCBCb2x0IENpcmNsZQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmMTBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmMTBcZGJjaFxhZjBcaGljaFxmMTAgXCdhN1x0YWJ9VGhyZWUgKDMpIFdlbGRlZCBUZXJtaW5hbCBBZGFwdG9ycywgMi0xMjcyIGtjbWlsIEFBQyB0byBORU1BIDQtSG9sZSBQYWQNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZjEwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcbG9jaFxhZjEwXGRiY2hcYWYwXGhpY2hcZjEwIFwnYTdcdGFifVRoaXJ0eSAoMzApIEZlZXQgb2YgMTI3MiBrY21pbCBBQUMgKE5hcmNpc3N1cykgY29uZHVjdG9yDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn19XHBhcmQgXGx0cnBhcg0KXHM2XHFsIFxmaS0zNjBcbGkxMDgwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczRcaWx2bDFcb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjEwODBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgDQpUaGlydGVlbiAoMTMpIDIzMGtWLCBTaW5nbGUgUGhhc2UgTG93IEJ1cyBTdXBwb3J0cywgd2hpY2ggaW5jbHVkZXM6DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGYxMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgXGxvY2hcYWYxMFxkYmNoXGFmMFxoaWNoXGYxMCBcJ2E3XHRhYn19XHBhcmQgXGx0cnBhcg0KXHM2XHFsIFxmaS0zNjBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczRcaWx2bDJcb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgU3RydWN0dXJhbCBTdGVlbCBhbmQgQXNzb2NpYXRlZCBoYXJkd2FyZQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmMTBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmMTBcZGJjaFxhZjBcaGljaFxmMTAgXCdhN1x0YWJ9U3RydWN0dXJlIGdyb3VuZGluZyBjb25kdWN0b3IgYW5kIGFzc29jaWF0ZWQgaGFyZHdhcmUNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZjEwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcbG9jaFxhZjEwXGRiY2hcYWYwXGhpY2hcZjEwIFwnYTdcdGFifVRoaXJ0ZWVuICgxMykgU3RhdGlvbiBQb3N0IEluc3VsYXRvcnMsIDIzMGtWLCBUUi0zMDgNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZjEwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcbG9jaFxhZjEwXGRiY2hcYWYwXGhpY2hcZjEwIFwnYTdcdGFifVRoaXJ0ZWVuICgxMykgQnVzIFN1cHBvcnRzLCA0XCc5NCBJUFMgQWx1bWludW0gQnVzIHRvIDVcJzk0IEJvbHQgQ2lyY2xlDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn19XHBhcmQgXGx0cnBhcg0KXHM2XHFsIFxmaS0zNjBcbGkxMDgwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczRcaWx2bDFcb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjEwODBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgU2l4ICg2KSAyMzBrViwgU2luZ2xlIFBoYXNlIEhpZ2ggQnVzIA0KU3VwcG9ydHMsIHdoaWNoIGluY2x1ZGVzOg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmMTBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmMTBcZGJjaFxhZjBcaGljaFxmMTAgXCdhN1x0YWJ9fVxwYXJkIFxsdHJwYXINClxzNlxxbCBcZmktMzYwXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM0XGlsdmwyXG91dGxpbmVsZXZlbDVcYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMTQwNzk2NSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFN0cnVjdHVyYWwgU3RlZWwgYW5kIEFzc29jaWF0ZWQgaGFyZHdhcmUNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZjEwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcbG9jaFxhZjEwXGRiY2hcYWYwXGhpY2hcZjEwIFwnYTdcdGFifVN0cnVjdHVyZSBncm91bmRpbmcgY29uZHVjdG9yIGFuZCBhc3NvY2lhdGVkIGhhcmR3YXJlDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGYxMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgXGxvY2hcYWYxMFxkYmNoXGFmMFxoaWNoXGYxMCBcJ2E3XHRhYn1TaXggKDYpIFN0YXRpb24gUG9zdCBJbnN1bGF0b3JzLCAyMzBrViwgVFItMzA4DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGYxMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgXGxvY2hcYWYxMFxkYmNoXGFmMFxoaWNoXGYxMCBcJ2E3XHRhYn1TaXggKDYpIEJ1cyBTdXBwb3J0cywgNFwnOTQgSVBTIEFsdW1pbnVtIEJ1cyB0byA1XCc5NCBCb2x0IENpcmNsZQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9fVxwYXJkIFxsdHJwYXINClxzNlxxbCBcZmktMzYwXGxpMTA4MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM0XGlsdmwxXG91dGxpbmVsZXZlbDVcYWRqdXN0cmlnaHRccmluMFxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMTQwNzk2NSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIEZvdXIgKDQpIDIzMGtWLCBUaHJlZSBQaGFzZSANCkhpZ2ggQnVzIFN1cHBvcnQsIHdoaWNoIGluY2x1ZGVzOg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmMTBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmMTBcZGJjaFxhZjBcaGljaFxmMTAgXCdhN1x0YWJ9fVxwYXJkIFxsdHJwYXINClxzNlxxbCBcZmktMzYwXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM0XGlsdmwyXG91dGxpbmVsZXZlbDVcYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMTQwNzk2NSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFN0cnVjdHVyYWwgU3RlZWwgYW5kIEFzc29jaWF0ZWQgaGFyZHdhcmUNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZjEwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcbG9jaFxhZjEwXGRiY2hcYWYwXGhpY2hcZjEwIFwnYTdcdGFifVN0cnVjdHVyZSBncm91bmRpbmcgY29uZHVjdG9yIGFuZCBhc3NvY2lhdGVkIGhhcmR3YXJlDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGYxMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgXGxvY2hcYWYxMFxkYmNoXGFmMFxoaWNoXGYxMCBcJ2E3XHRhYn1Ud2VsdmUgKDEyKSBTdGF0aW9uIFBvc3QgSW5zdWxhdG9ycywgMjMwa1YsIFRSLTMwOA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmMTBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmMTBcZGJjaFxhZjBcaGljaFxmMTAgXCdhN1x0YWJ9VHdlbHZlICgxMikgQnVzIFN1cHBvcnRzLCA0XCc5NCBJUFMgQWx1bWludW0gQnVzIHRvIDVcJzk0IEJvbHQgQ2lyY2xlDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn19XHBhcmQgXGx0cnBhcg0KXHM2XHFsIFxmaS0zNjBcbGkxMDgwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczRcaWx2bDFcb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjEwODBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgVGhyZWUgKDMpIDIzDQowa1YsIFRocmVlIFBoYXNlIExvdyBCdXMgU3VwcG9ydCwgd2hpY2ggaW5jbHVkZXM6DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGYxMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgXGxvY2hcYWYxMFxkYmNoXGFmMFxoaWNoXGYxMCBcJ2E3XHRhYn19XHBhcmQgXGx0cnBhcg0KXHM2XHFsIFxmaS0zNjBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczRcaWx2bDJcb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgU3RydWN0dXJhbCBTdGVlbCBhbmQgQXNzb2NpYXRlZCBoYXJkd2FyZQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmMTBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmMTBcZGJjaFxhZjBcaGljaFxmMTAgXCdhN1x0YWJ9U3RydWN0dXJlIGdyb3VuZGluZyBjb25kdWN0b3IgYW5kIGFzc29jaWF0ZWQgaGFyZHdhcmUNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZjEwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcbG9jaFxhZjEwXGRiY2hcYWYwXGhpY2hcZjEwIFwnYTdcdGFifU5pbmUgKDkpIFN0YXRpb24gUG9zdCBJbnN1bGF0b3JzLCAyMzBrViwgVFItMzA4DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGYxMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgXGxvY2hcYWYxMFxkYmNoXGFmMFxoaWNoXGYxMCBcJ2E3XHRhYn1OaW5lICg5KSBCdXMgU3VwcG9ydHMsIDRcJzk0IElQUyBBbHVtaW51bSBCdXMgdG8gNVwnOTQgQm9sdCBDaXJjbGUNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZjEwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcbG9jaFxhZjEwXGRiY2hcYWYwXGhpY2hcZjEwIFwnYTdcdGFifU5pbmUgKDkpIFdlbGRlZCBUZXJtaW5hbCBBZGFwdG9ycywgMi0xMjcyIGtjbWlsIEFBQyB0byBORU1BIDQtSG9sZSBQYWQNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZjEwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcbG9jaFxhZjEwXGRiY2hcYWYwXGhpY2hcZjEwIFwnYTdcdGFifU5pbmV0eSAoOTApIEZlZXQgb2YgMTI3MiBrY21pbCBBQUMgKE5hcmNpc3N1cykgY29uZHVjdG9yDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn19XHBhcmQgXGx0cnBhcg0KXHM2XHFsIFxmaS0zNjBcbGkxMDgwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczRcaWx2bDFcb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjEwODBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgDQpOaW5lICg5KSAyMzBrViwgQWx1bWludW0gQS1GcmFtZXMsIHdoaWNoIGluY2x1ZGVzOg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmMTBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmMTBcZGJjaFxhZjBcaGljaFxmMTAgXCdhN1x0YWJ9fVxwYXJkIFxsdHJwYXINClxzNlxxbCBcZmktMzYwXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM0XGlsdmwyXG91dGxpbmVsZXZlbDVcYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMTQwNzk2NSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIEVpZ2h0ZWVuICgxOCkgVGVlIENvbm5lY3RvciwgNFwnOTQgSVBTIE1haW4gdG8gMw0KXCc5NCBJUFMgVGFwLCAxNVwnYjANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZjEwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcbG9jaFxhZjEwXGRiY2hcYWYwXGhpY2hcZjEwIFwnYTdcdGFifU5pbmUgKDkpIFRlZSBDb25uZWN0b3IsIDRcJzk0IElQUyBNYWluIHRvIDItM1wnOTQgSVBTIFRhcHMsIDE1XCdiMA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmMTBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxsb2NoXGFmMTBcZGJjaFxhZjBcaGljaFxmMTAgXCdhN1x0YWJ9VHdvIEh1bmRyZWQgVGVuICgyMTApIEZlZXQgb2YgM1wnOTQgSVBTIEFsdW1pbnVtIEJ1cywgNjA2My1UNg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNiBccnRsY2hcZmNzMSBcYWJcYWYyXGFmczIyIFxsdHJjaFxmY3MwIFxmMlxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgXGhpY2hcYWYyXGRiY2hcYWYwXGxvY2hcZjIgb1x0YWJ9fVxwYXJkIFxsdHJwYXINClxzNlxxbCBcZmktMzYwXGxpMTA4MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM0XGlsdmwxXG91dGxpbmVsZXZlbDVcYWRqdXN0cmlnaHRccmluMFxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMTQwNzk2NSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIEVpZ2h0IEh1bmRyZWQgRmlmdHkgKDg1MCkgRmVldCBvZiA0XCc5NA0KIElQUyBBbHVtaW51bSBCdXMsIDYwNjMtVDYNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifUVpZ2h0IEh1bmRyZWQgRmlmdHkgKDg1MCkgRmVldCBvZiA3OTUga2NtaWwgQUNTUiAoRHJha2UpIENvbmR1Y3Rvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDM0MzgwNzggDQoNClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzggXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGYzXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcbG9jaFxhZjNcZGJjaFxhZjBcaGljaFxmMyBcJ2I3XHRhYn19XHBhcmRccGxhaW4gXGx0cnBhcg0KXHM2XHFsIFxmaS0zNjBcbGk3MjBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzNFxvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMTQwNzk2NSBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIEFib3ZlIGFuZCBCZWxvdyBHcm91bmQgUmFjZXdheXMgaW5jbHVkaW5nIHRoZSBmb2xsb3dpbmcgbWF0ZXJpYWxzDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn19XHBhcmQgXGx0cnBhcg0KXHM2XHFsIFxmaS0zNjBcbGkxMDgwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczRcaWx2bDFcb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjEwODBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgDQpDb25kdWl0cywgZml0dGluZ3MsIGFuZCBjb25uZWN0b3JzIGNvbm5lY3Rpbmcgc2hhcmVkIGZhY2lsaXR5IGVxdWlwbWVudCBvciBhcHBhcmF0dXMgdG8gb3RoZXIgU3Vic3RhdGlvbiBjb21wb25lbnRzIGxvY2F0ZWQgd2l0aGluIHRoZSBTdWJzdGF0aW9uDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn1DYWJsZSBUcmVuY2gsIFRyZW5jaCBDb3ZlcnMsIFRyZW5jaCBIYW5nZXJzLCBhbmQgVHJlbmNoIEdyb3VuZGluZyBNYXRlcmlhbHMNClxwYXIgfVxwYXJkIFxsdHJwYXJcczZccWogXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDkzNzIyNDAgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGYzXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcbG9jaFxhZjNcZGJjaFxhZjBcaGljaFxmMyBcJ2I3XHRhYn19XHBhcmQgXGx0cnBhcg0KXHM2XHFsIFxmaS0zNjBcbGk3MjBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzNFxvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMTQwNzk2NSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFN1YnN0YXRpb24gR3JvdW5kIEdyaWQgaW5jbHVkaW5nIHRoZSBmb2xsb3dpbmcgbWF0ZXJpYWxzDQoNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifX1ccGFyZCBcbHRycGFyDQpcczZccWwgXGZpLTM2MFxsaTEwODBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzNFxpbHZsMVxvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDE0MDc5NjUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCANClR3ZW50eSBUaHJlZSBUaG91c2FuZCAoMjMsMDAwKSBGZWV0IG9mICM0LzAga2NtaWwgMTkgU3RyYW5kLCBCYXJlIENvcHBlciANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifUV4b3RoZXJtaWMgQ3Jvc3MgY29ubmVjdGlvbnMgfiBpbmNsdWRpbmcgbW9sZHMsIHNob3RzLCBhbmQgYWNjZXNzb3JpZXMNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczYgXHJ0bGNoXGZjczEgXGFiXGFmMlxhZnMyMiBcbHRyY2hcZmNzMCBcZjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5MzcyMjQwIFxoaWNoXGFmMlxkYmNoXGFmMFxsb2NoXGYyIG9cdGFifUV4b3RoZXJtaWMgVGVlIGNvbm5lY3Rpb25zIH4gaW5jbHVkaW5nIG1vbGRzLCBzaG90cywgYW5kIGFjY2Vzc29yaWVzDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM2IFxydGxjaFxmY3MxIFxhYlxhZjJcYWZzMjIgXGx0cmNoXGZjczAgXGYyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTM3MjI0MCBcaGljaFxhZjJcZGJjaFxhZjBcbG9jaFxmMiBvXHRhYn1FeG90aGVybWljIEx1ZyBjb25uZWN0aW9ucyB+IGluY2x1ZGluZyBtb2xkcywgc2hvdHMsIGFuZCBhY2Nlc3Nvcmllcw0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNTMgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBca2VybmluZzI0XGxvY2hcYWYzXGhpY2hcYWYzXGRiY2hcYWYzN1xpbnNyc2lkMzQzODA3OFxjaGFycnNpZDE0NTIwMTYgXGxvY2hcYWYzXGRiY2hcYWYzN1xoaWNoXGYzIFwnYjdcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczUzXHFqIFxmaS0zNjBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzNFxhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDE0MDc5NjVcY29udGV4dHVhbHNwYWNlIFxydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGtlcm5pbmcyNFxsb2NoXGFmMFxoaWNoXGFmMFxkYmNoXGFmMzdcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTQ1MjAxNiBcaGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgDQpTdWJzdGF0aW9uIExpZ2h0aW5nIGFuZCBMaWdodG5pbmcgUHJvdGVjdGlvbiBpbmNsdWRpbmcgdGhlIGZvbGxvd2luZyBtYXRlcmlhbHMNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczUzIFxydGxjaFxmY3MxIFxhZjIgXGx0cmNoXGZjczAgXGtlcm5pbmcyNFxsb2NoXGFmMlxoaWNoXGFmMlxkYmNoXGFmMzdcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxNDUyMDE2IFxoaWNoXGFmMlxkYmNoXGFmMzdcbG9jaFxmMiBvXHRhYn19XHBhcmQgXGx0cnBhcg0KXHM1M1xxaiBcZmktMzYwXGxpMTA4MFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM0XGlsdmwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDE0MDc5NjVcY29udGV4dHVhbHNwYWNlIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDE0NTIwMTYgXGhpY2hcYWYwXGRiY2hcYWYzN1xsb2NoXGYwIA0KRWlnaHQgKDgpIFN0YXRpYyBNYXN0cywgOTBcaGljaFxmMCBccnF1b3RlIFxsb2NoXGYwICBUYWxsIHdpdGggcHJvdmlzaW9uIGZvciB5YXJkIGxpZ2h0aW5nDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM1MyBccnRsY2hcZmNzMSBcYWYyIFxsdHJjaFxmY3MwIFxrZXJuaW5nMjRcbG9jaFxhZjJcaGljaFxhZjJcZGJjaFxhZjM3XGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTQ1MjAxNiBcaGljaFxhZjJcZGJjaFxhZjM3XGxvY2hcZjIgb1x0YWJ9XGhpY2hcYWYwXGRiY2hcYWYzN1xsb2NoXGYwIEZpZnRlZW4gKDE1KSBcaGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgDQo0MDBXLCBIUFMgRmxvb2QgTGlnaHRzDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1M1xxbCBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4XGNvbnRleHR1YWxzcGFjZSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxNDUyMDE2IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNTMgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBca2VybmluZzI0XGxvY2hcYWYzXGhpY2hcYWYzXGRiY2hcYWYzN1xpbnNyc2lkMzQzODA3OFxjaGFycnNpZDE0NTIwMTYgXGxvY2hcYWYzXGRiY2hcYWYzN1xoaWNoXGYzIFwnYjdcdGFifX1ccGFyZCBcbHRycGFyDQpcczUzXHFqIFxmaS0zNjBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzNFxhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDE0MDc5NjVcY29udGV4dHVhbHNwYWNlIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDE0NTIwMTYgXGhpY2hcYWYwXGRiY2hcYWYzN1xsb2NoXGYwIA0KU3Vic3RhdGlvbiBGZW5jaW5nIGluY2x1ZGluZyB0aGUgZm9sbG93aW5nIG1hdGVyaWFscw0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNTMgXHJ0bGNoXGZjczEgXGFmMiBcbHRyY2hcZmNzMCBca2VybmluZzI0XGxvY2hcYWYyXGhpY2hcYWYyXGRiY2hcYWYzN1xpbnNyc2lkMzQzODA3OFxjaGFycnNpZDE0NTIwMTYgXGhpY2hcYWYyXGRiY2hcYWYzN1xsb2NoXGYyIG9cdGFifX1ccGFyZCBcbHRycGFyDQpcczUzXHFqIFxmaS0zNjBcbGkxMDgwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczRcaWx2bDFcYWRqdXN0cmlnaHRccmluMFxsaW4xMDgwXGl0YXAwXHBhcmFyc2lkMTQwNzk2NVxjb250ZXh0dWFsc3BhY2Uge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTQ1MjAxNiBcaGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgDQpGaWZ0ZWVuIEh1bmRyZWQgKDE1MDApIEZlZXQgb2YgZmVuY2UsIDhcaGljaFxmMCBccnF1b3RlIFxsb2NoXGYwICB0YWxsLCA3XGhpY2hcZjAgXHJxdW90ZSBcbG9jaFxmMCAgbWVzaCB3aXRoIHRocmVlIHN0cmFuZHMgb2YgYmFyYmVkIHdpcmUNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczUzIFxydGxjaFxmY3MxIFxhZjIgXGx0cmNoXGZjczAgXGtlcm5pbmcyNFxsb2NoXGFmMlxoaWNoXGFmMlxkYmNoXGFmMzdcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxNDUyMDE2IFxoaWNoXGFmMlxkYmNoXGFmMzdcbG9jaFxmMiBvXHRhYn19XHBhcmQgXGx0cnBhcg0KXHM1M1xxaiBcZmktMzYwXGxpMTA4MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM0XGlsdmwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDE0MDc5NjVcY29udGV4dHVhbHNwYWNlIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDE0NTIwMTYgXGhpY2hcYWYwXGRiY2hcYWYzN1xsb2NoXGYwIA0KRmVuY2UgcG9zdHMsIGdhdGVzLCBoYW5nZXJzLCBhbmQgZ3JvdW5kaW5nIG1hdGVyaWFscw0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTFccWogXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNTEgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZjNcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ0NjA2NzMyIFxsb2NoXGFmM1xkYmNoXGFmMFxoaWNoXGYzIFwnYjdcdGFifX1ccGFyZCBcbHRycGFyDQpcczUxXHFqIFxmaS0zNjBcbGk3MjBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMTZcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDQ2MDY3MzIgQ29udHJvbCBCdWlsZGluZyBhbmQgYWxsIGVxdWlwbWVudCBhbmQgZml4dHVyZXMgbG9jYXRlZCB0aGVyZWlufXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4ICBleGNlcHQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDEwMjM5MjQzIGZlZWRlciByZWxheXMsIGJyZWFrZXJzIGFuZCBjb2xsZWN0aW9uIHN5c3RlbSBmaWJlciBvcHRpYyBjYWJsZXMgZm9yIHRoZSBpbmRpdmlkdWFsIHdpbmQgdHVyYmluZSBnZW5lcmF0b3JzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNDYwNjczMiANClxwYXIgfVxwYXJkIFxsdHJwYXJcczUxXHFqIFxsaTEwODBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTA4MFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IA0KXHBhciBcc2VjdCB9XHNlY3RkIFxsdHJzZWN0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMzQzODA3OFxzZnRuYmogXHBhcmRccGxhaW4gXGx0cnBhclxzNTFccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCBccnRsY2hcZmNzMSANClxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDM0MzgwNzggRVhISUJJVCBCLTINClxwYXIgVFJBTlNNSVNTSU9OIExJTkUgU0hBUkVEIEZBQ0lMSVRJRVMNClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGRiY2hcYWYzN1xpbnNyc2lkMzQzODA3OFxjaGFycnNpZDExNDE3MDMzIFxoaWNoXGFmMFxkYmNoXGFmMzdcbG9jaFxmMCAzLjk5LW1pbGUgMjIwa1YgZ2VuZXJhdGlvbiB0aWUtbGluZSwgb3B0aWNhbCBncm91bmQgd2lcaGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgcmUgb24gdGhlIGdlbmVyYXRpb24gdGllLWxpbmUgZm9yIHRoZSBwcmltYXJ5IHRlbGVjb21tdW5pY2F0aW9ucyBwYXRoLCB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZGJjaFxhZjM3XGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNDYwNjczMiBcaGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgaW5jbHVkaW5nIG9uZSBvciBtb3JlIHNpbmdsZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjM3XGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTE0MTcwMzMgXGhpY2hcYWYwXGRiY2hcYWYzN1xsb2NoXGYwIC1tb2RlIGZpYmVyIG9wdGljIGNhYmxlfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGRiY2hcYWYzN1xpbnNyc2lkMzQzODA3OCBcaGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjM3XGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTE0MTcwMzMgXGhpY2hcYWYwXGRiY2hcYWYzN1xsb2NoXGYwICBmb3IgdGhlIGRpdmVyc2UgdGVsZWNvbW11bmljYXRpb25zIHBhdGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZGJjaFxhZjM3XGluc3JzaWQzNDM4MDc4IFxoaWNoXGFmMFxkYmNoXGFmMzdcbG9jaFxmMCAgYW5kIFNDQURBIFN5c3RlbX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjM3XGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTE0MTcwMzMgXGhpY2hcYWYwXGRiY2hcYWYzN1xsb2NoXGYwICwgYXBwdXJ0ZW5hbnQgc3RydWN0dXJlcywgYW5kIGZhY2lsaXRpZXMsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxkYmNoXGFmMzdcaW5zcnNpZDM0MzgwNzggXGhpY2hcYWYwXGRiY2hcYWYzN1xsb2NoXGYwIGluY2x1ZGluZyB0aGUgZm9sbG93aW5nOg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNTMgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBca2VybmluZzI0XGxvY2hcYWYzXGhpY2hcYWYzXGRiY2hcYWYzN1xpbnNyc2lkMzQzODA3OCBcbG9jaFxhZjNcZGJjaFxhZjM3XGhpY2hcZjMgXCdiN1x0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzNTNccWogXGZpLTM2MFxsaTcyMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM4XGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMTQwNzk2NVxjb250ZXh0dWFsc3BhY2UgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNca2VybmluZzI0XGxvY2hcYWYwXGhpY2hcYWYwXGRiY2hcYWYzN1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggXGhpY2hcYWYwXGRiY2hcYWYzN1xsb2NoXGYwIEZvcnR5IFR3b1xoaWNoXGFmMFxkYmNoXGFmMzdcbG9jaFxmMCANCiAoNDIpIHRyYW5zbWlzc2lvbiBzdHJ1Y3R1cmVzIGluY2x1ZGluZyB0aGUgZm9sbG93aW5nIG1hdGVyaWFsczoNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczUzIFxydGxjaFxmY3MxIFxhZjIgXGx0cmNoXGZjczAgXGtlcm5pbmcyNFxsb2NoXGFmMlxoaWNoXGFmMlxkYmNoXGFmMzdcaW5zcnNpZDM0MzgwNzggXGhpY2hcYWYyXGRiY2hcYWYzN1xsb2NoXGYyIG9cdGFifX1ccGFyZCBcbHRycGFyDQpcczUzXHFqIFxmaS0zNjBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcaWx2bDFcYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMTQwNzk2NVxjb250ZXh0dWFsc3BhY2Uge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IFxoaWNoXGFmMFxkYmNoXGFmMzdcbG9jaFxmMCBGb3J0eSBUd28gKDQyKSB0dWJ1bGFyIHN0ZWVsIHBvbGVzDQoNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczUzIFxydGxjaFxmY3MxIFxhZjIgXGx0cmNoXGZjczAgXGtlcm5pbmcyNFxsb2NoXGFmMlxoaWNoXGFmMlxkYmNoXGFmMzdcaW5zcnNpZDM0MzgwNzggXGhpY2hcYWYyXGRiY2hcYWYzN1xsb2NoXGYyIG9cdGFifVxoaWNoXGFmMFxkYmNoXGFmMzdcbG9jaFxmMCBPbmUgSHVuZHJlZCBUd2VudHkgKDEyMCkgMjMwa1YgMzBLIEluc3VsYXRvcnMNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczUzIFxydGxjaFxmY3MxIFxhZjIgXGx0cmNoXGZjczAgXGtlcm5pbmcyNFxsb2NoXGFmMlxoaWNoXGFmMlxkYmNoXGFmMzdcaW5zcnNpZDM0MzgwNzggXGhpY2hcYWYyXGRiY2hcYWYzN1xsb2NoXGYyIG9cdGFifVxoaWNoXGFmMFxkYmNoXGFmMzdcbG9jaFxmMCBcaGljaFxmMCANCk9uZSBIdW5kcmVkIFR3ZW50eSAoMTIwKSBTdXNwZW5zaW9uIEhhcmR3YXJlIEFzc2VtYmxpZXMgZm9yIDc5NSBLQ01JTCBBQ1NSIFwnOTNcbG9jaFxmMCBcaGljaFxmMCBEcmFrZVwnOTQNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczUzIFxydGxjaFxmY3MxIFxhZjIgXGx0cmNoXGZjczAgXGtlcm5pbmcyNFxsb2NoXGFmMlxoaWNoXGFmMlxkYmNoXGFmMzdcaW5zcnNpZDM0MzgwNzggXGhpY2hcYWYyXGRiY2hcYWYzN1xsb2NoXGYyIG9cdGFifVxoaWNoXGFmMFxkYmNoXGFmMzdcbG9jaFxmMCBGb3J0eSAoNDApIDIzMGtWIDUwSyBJbnN1bGFcaGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgdG9ycw0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNTMgXHJ0bGNoXGZjczEgXGFmMiBcbHRyY2hcZmNzMCBca2VybmluZzI0XGxvY2hcYWYyXGhpY2hcYWYyXGRiY2hcYWYzN1xpbnNyc2lkMzQzODA3OCBcaGljaFxhZjJcZGJjaFxhZjM3XGxvY2hcZjIgb1x0YWJ9XGhpY2hcYWYwXGRiY2hcYWYzN1xsb2NoXGYwIFxoaWNoXGYwIEZvcnR5ICg0MCkgRGVhZCBFbmQgSGFyZHdhcmUgQXNzZW1ibGllcyBmb3IgNzk1IEtDTUlMIEFDU1IgXCc5Mw0KXGxvY2hcZjAgXGhpY2hcZjAgRHJha2VcJzk0DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM1MyBccnRsY2hcZmNzMSBcYWYyIFxsdHJjaFxmY3MwIFxrZXJuaW5nMjRcbG9jaFxhZjJcaGljaFxhZjJcZGJjaFxhZjM3XGluc3JzaWQzNDM4MDc4IFxoaWNoXGFmMlxkYmNoXGFmMzdcbG9jaFxmMiBvXHRhYn1caGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgRm9ydHkgRml2ZSAoNDUpIE9QR1cgSGFyZHdhcmUgQXNzZW1ibGllcw0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNTMgXHJ0bGNoXGZjczEgXGFmMiBcbHRyY2hcZmNzMCBca2VybmluZzI0XGxvY2hcYWYyXGhpY2hcYWYyXGRiY2hcYWYzN1xpbnNyc2lkMzQzODA3OCBcaGljaFxhZjJcZGJjaFxhZjM3XGxvY2hcZjIgb1x0YWJ9XGhpY2hcYWYwXGRiY2hcYWYzN1xsb2NoXGYwIFxoaWNoXGYwIEZvdXIgKDQpIERlYWQgRW5kIEhhcmR3YXJlIEFzc2VtYmxpZXMgZm9yIDMvOFwnOTRcbG9jaFxmMCANCiBTaGllbGQgV2lyZQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNTMgXHJ0bGNoXGZjczEgXGFmMiBcbHRyY2hcZmNzMCBca2VybmluZzI0XGxvY2hcYWYyXGhpY2hcYWYyXGRiY2hcYWYzN1xpbnNyc2lkMzQzODA3OFxjaGFycnNpZDExMjA3ODA1IFxoaWNoXGFmMlxkYmNoXGFmMzdcbG9jaFxmMiBvXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTEyMDc4MDUgDQpcaGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgU3RydWN0dXJlIGdyb3VuZGluZyByb2RzIGFuZCBhc3NvY2lhdGVkIGhhcmR3YXJlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczUzIFxydGxjaFxmY3MxIFxhZjIgXGx0cmNoXGZjczAgXGtlcm5pbmcyNFxsb2NoXGFmMlxoaWNoXGFmMlxkYmNoXGFmMzdcaW5zcnNpZDM0MzgwNzggXGhpY2hcYWYyXGRiY2hcYWYzN1xsb2NoXGYyIG9cdGFifVxoaWNoXGFmMFxkYmNoXGFmMzdcbG9jaFxmMCBTdHJ1Y3R1cmUgc2lnbmFnZQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNTMgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBca2VybmluZzI0XGxvY2hcYWYzXGhpY2hcYWYzXGRiY2hcYWYzN1xpbnNyc2lkMzQzODA3OCBcbG9jaFxhZjNcZGJjaFxhZjM3XGhpY2hcZjMgXCdiN1x0YWJ9fVxwYXJkIFxsdHJwYXINClxzNTNccWogXGZpLTM2MFxsaTcyMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM4XGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMTQwNzk2NVxjb250ZXh0dWFsc3BhY2Uge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IFxoaWNoXGFmMFxkYmNoXGFmMzdcbG9jaFxmMCBTZXZlbnR5IFRob3VzYW5kIA0KXGhpY2hcYWYwXGRiY2hcYWYzN1xsb2NoXGYwIFxoaWNoXGYwIFR3byBIdW5kcmVkICg3MCwyMDApIEZlZXQgb2YgNzk1IEtDTUlMIEFDU1IgXCc5M1xsb2NoXGYwIFxoaWNoXGYwIERyYWtlXCc5NFxsb2NoXGYwICBDb25kdWN0b3INClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczUzIFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGtlcm5pbmcyNFxsb2NoXGFmM1xoaWNoXGFmM1xkYmNoXGFmMzdcaW5zcnNpZDM0MzgwNzggXGxvY2hcYWYzXGRiY2hcYWYzN1xoaWNoXGYzIFwnYjdcdGFifVxoaWNoXGFmMFxkYmNoXGFmMzdcbG9jaFxmMCANClR3ZW50eSBUaHJlZSBUaG91c2FuZCAoMjMsMDAwKSBGZWV0IG9mIDQ4IEZpYmVyLCBTaW5nbGUgTW9kZSBPUEdXLCBETk8gNjIxMQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNTMgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBca2VybmluZzI0XGxvY2hcYWYzXGhpY2hcYWYzXGRiY2hcYWYzN1xpbnNyc2lkMzQzODA3OCBcbG9jaFxhZjNcZGJjaFxhZjM3XGhpY2hcZjMgXCdiN1x0YWJ9XGhpY2hcYWYwXGRiY2hcYWYzN1xsb2NoXGYwIFxoaWNoXGYwIFRocmVlICgzKSBPUEdXIFwnOTNcbG9jaFxmMCBcaGljaFxmMCBDb3lvdGVcJzk0XGxvY2hcZjAgDQogU3BsaWNlcyBpbmNsdWRpbmcgc3BsaWNlIGNhc2UsIHNwbGljZXMgYW5kIG1vdW50aW5nIGhhcmR3YXJlLiANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczUzIFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGtlcm5pbmcyNFxsb2NoXGFmM1xoaWNoXGFmM1xkYmNoXGFmMzdcaW5zcnNpZDM0MzgwNzggXGxvY2hcYWYzXGRiY2hcYWYzN1xoaWNoXGYzIFwnYjdcdGFifVxoaWNoXGFmMFxkYmNoXGFmMzdcbG9jaFxmMCBPbmUgVGhvdXNhbmQgRm91ciBIdW5kcmVkIGFuZCBcaGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgDQpGaWZ0eSAoMSw0NTApIEJpcmQgRmxpZ2h0IERpdmVydGVycw0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNTMgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBca2VybmluZzI0XGxvY2hcYWYzXGhpY2hcYWYzXGRiY2hcYWYzN1xpbnNyc2lkMzQzODA3OCBcbG9jaFxhZjNcZGJjaFxhZjM3XGhpY2hcZjMgXCdiN1x0YWJ9XGhpY2hcYWYwXGRiY2hcYWYzN1xsb2NoXGYwIFxoaWNoXGYwIFR3byBIdW5kcmVkICgyMDApIEZlZXQgb2YgMy84XCc5NFxsb2NoXGYwIA0KIEhTIDctU3RyYW5kIFNoaWVsZCBXaXJlDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM1MyBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxrZXJuaW5nMjRcbG9jaFxhZjNcaGljaFxhZjNcZGJjaFxhZjM3XGluc3JzaWQzNDM4MDc4IFxsb2NoXGFmM1xkYmNoXGFmMzdcaGljaFxmMyBcJ2I3XHRhYn1caGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgVHdlbnR5IEZpdmUgVGhvdXNhbmQgRml2ZSBIdW5kcmVkICgyNSw1MDApIEZlZXQgb2YgQURTUyBGaWJlciBPcHRpYyBDYWJsZQ0KDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM1MyBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxrZXJuaW5nMjRcbG9jaFxhZjNcaGljaFxhZjNcZGJjaFxhZjM3XGluc3JzaWQzNDM4MDc4IFxsb2NoXGFmM1xkYmNoXGFmMzdcaGljaFxmMyBcJ2I3XHRhYn1caGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgXGhpY2hcZjAgVHdlbnR5IFR3byBUaG91c2FuZCAoMjIsMDAwKSBGZWV0IG9mIDEgXCdiY1wnOTRcbG9jaFxmMCANCiBpbm5lciBkdWN0DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM1MyBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxrZXJuaW5nMjRcbG9jaFxhZjNcaGljaFxhZjNcZGJjaFxhZjM3XGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNDYwNjczMiBcbG9jaFxhZjNcZGJjaFxhZjM3XGhpY2hcZjMgXCdiN1x0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDQ2MDY3MzIgDQpcaGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgU3BsaWNlIGJveC9wdWxsIGJveCwgaW5jbHVkaW5nIHNwbGljZXNcaGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgLCBmb3IgY2FibGUgdG8gQVQmVA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzNTMgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBca2VybmluZzI0XGxvY2hcYWYzXGhpY2hcYWYzXGRiY2hcYWYzN1xpbnNyc2lkMzQzODA3OFxjaGFycnNpZDQ2MDY3MzIgXGxvY2hcYWYzXGRiY2hcYWYzN1xoaWNoXGYzIFwnYjdcdGFifVxoaWNoXGFmMFxkYmNoXGFmMzdcbG9jaFxmMCBDYXJib24gZmliZXIganVuY3Rpb24gKENGSikgcGVkZXN0YWwNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczUzIFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGtlcm5pbmcyNFxsb2NoXGFmM1xoaWNoXGFmM1xkYmNoXGFmMzdcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ0NjA2NzMyIFxsb2NoXGFmM1xkYmNoXGFmMzdcaGljaFxmMyBcJ2I3XHRhYn1caGljaFxhZjBcZGJjaFxhZjM3XGxvY2hcZjAgXGhpY2hcZjAgRmlmdHkgKDUwKSBmZWV0IG9mIDJcJzk0XGxvY2hcZjAgDQogU2NoZWR1bGUgNDAgUFZDIGNvbmR1aXQgdG8vZnJvbSBDRkogcGVkZXN0YWwgdG8gaG91c2UgYm90aCBmaWJlciBvcHRpYyBjYWJsZSBhbmQgY29wcGVyIGNvbmR1Y3RvcnMNClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczUxXHFqIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzggXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANClxwYXIgXHNlY3QgfVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDM0MzgwNzhcc2Z0bmJqIHtcZm9vdGVyZiBcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJcczIyXHFjIFxsaTBccmkwXHdpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgDQpccnRsY2hcZmNzMSBcYWYwXGFmczE2XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBDLTENClxwYXIgfVxwYXJkIFxsdHJwYXJcczIyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IA0KXHBhciB9fVxwYXJkXHBsYWluIFxsdHJwYXJcczI1XHFjIFxsaTBccmkwXHNhMzAwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCBccnRsY2hcZmNzMSBcYWJcYWYxXGFmczMyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xrZXJuaW5nMjhcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IEVYSElCSVQgQw0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNjU5OTg2IElOVEVSRVNUUyBBTkQgUFJPUE9SVElPTkFURSBTSEFSRVN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGJcaW5zcnNpZDM0MzgwNzggQS5cdGFiIFVuZGl2aWRlZCBPd25lcnNoaXAgSW50ZXJlc3RzDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxN1xxaiBcZmk3NDFcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggVGhlIE93bmVyc2hpcCBJbnRlcmVzdCBvZiBlYWNoIENvLU93bmVyIGluIGVhY2ggU2hhcmVkIEFzc2V0cyBHcm91cCBzaGFsbCBiZSBhcyBzZXQgZm9ydGggaW4gVGFibGUgQyBiZWxvdy4gIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGJcaW5zcnNpZDM0MzgwNzggQi5cdGFiIFByb3BvcnRpb25hdGUgU2hhcmVzDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxN1xxaiBcZmk3NDFcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggVGhlIFByb3BvcnRpb25hdGUgU2hhcmUgb2YgZWFjaCBDby1Pd25lciBzaGFsbCBiZSBhcyBzZXQgZm9ydGggaW4gVGFibGUgQyBiZWxvdy4gDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMzQzODA3OCBDLlx0YWIgU2hhcmVkIEFzc2V0IEdyb3Vwc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5NDQ2NzUgUlNUIFNoYXJlZCBGYWNpbGl0aWVzIEdyb3VwIChBbGwgQ28tT3duZXJzKQ0KXHBhciBcbHRycm93fVx0cm93ZCBcaXJvdzBcaXJvd2JhbmQwXGx0cnJvd1x0czExXHRyZ2FwaDEwOFx0cmxlZnQtMTA4XHRyYnJkcnRcYnJkcnNcYnJkcncxMCBcdHJicmRybFxicmRyc1xicmRydzEwIFx0cmJyZHJiXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnJcYnJkcnNcYnJkcncxMCBcdHJicmRyaFxicmRyc1xicmRydzEwIFx0cmJyZHJ2XGJyZHJzXGJyZHJ3MTAgDQpcdHJmdHNXaWR0aDNcdHJ3V2lkdGg2MTAxXHRyZnRzV2lkdGhCM1x0cmF1dG9maXQxXHRycGFkZGwxMDhcdHJwYWRkcjEwOFx0cnBhZGRmbDNcdHJwYWRkZnQzXHRycGFkZGZiM1x0cnBhZGRmcjNcdGJscnNpZDM0MzgwNzhcdGJsbGtoZHJyb3dzXHRibGxrbGFzdHJvd1x0Ymxsa2hkcmNvbHNcdGJsbGtsYXN0Y29sXHRibGluZDBcdGJsaW5kdHlwZTMgXGNsdmVydGFsYlxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiDQpcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMjQ2OVxjbHNoZHJhd25pbCBcY2VsbHgyMzYxXGNsdmVydGFsYlxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDExMzNcY2xzaGRyYXduaWwgXGNlbGx4MzQ5NFxjbHZlcnRhbGJcY2xicmRydFxicmRybm9uZSANClxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDEyNTZcY2xzaGRyYXduaWwgXGNlbGx4NDc1MFxjbHZlcnRhbGJcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxMjQzXGNsc2hkcmF3bmlsIFxjZWxseDU5OTMNClxwYXJkXHBsYWluIFxsdHJwYXJcczE3XHFjIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxwYXJhcnNpZDM0MzgwNzggXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxiXGZzMjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ1OTE4MzI5IEVxdWlwbWVudCBOYW1lXGNlbGwgfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxiXGZzMjJcaW5zcnNpZDM0MzgwNzggUlNUIEl9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGJcZnMyMlxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDU5MTgzMjkgXGNlbGwgfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIA0KXGx0cmNoXGZjczAgXGJcZnMyMlxpbnNyc2lkMzQzODA3OCBSU1QgSX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcYlxmczIyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNTkxODMyOSBJXGNlbGwgfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxiXGZzMjJcaW5zcnNpZDM0MzgwNzggUlNUIElJSX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCANClxiXGZzMjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ1OTE4MzI5IFxjZWxsIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNTkxODMyOSBcdHJvd2QgXGlyb3cwXGlyb3diYW5kMFxsdHJyb3dcdHMxMVx0cmdhcGgxMDhcdHJsZWZ0LTEwOFx0cmJyZHJ0XGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmxcYnJkcnNcYnJkcncxMCBcdHJicmRyYlxicmRyc1xicmRydzEwIFx0cmJyZHJyXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmhcYnJkcnNcYnJkcncxMCBcdHJicmRydlxicmRyc1xicmRydzEwIA0KXHRyZnRzV2lkdGgzXHRyd1dpZHRoNjEwMVx0cmZ0c1dpZHRoQjNcdHJhdXRvZml0MVx0cnBhZGRsMTA4XHRycGFkZHIxMDhcdHJwYWRkZmwzXHRycGFkZGZ0M1x0cnBhZGRmYjNcdHJwYWRkZnIzXHRibHJzaWQzNDM4MDc4XHRibGxraGRycm93c1x0Ymxsa2xhc3Ryb3dcdGJsbGtoZHJjb2xzXHRibGxrbGFzdGNvbFx0YmxpbmQwXHRibGluZHR5cGUzIFxjbHZlcnRhbGJcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYg0KXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDI0NjlcY2xzaGRyYXduaWwgXGNlbGx4MjM2MVxjbHZlcnRhbGJcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxMTMzXGNsc2hkcmF3bmlsIFxjZWxseDM0OTRcY2x2ZXJ0YWxiXGNsYnJkcnRcYnJkcm5vbmUgDQpcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxMjU2XGNsc2hkcmF3bmlsIFxjZWxseDQ3NTBcY2x2ZXJ0YWxiXGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTI0M1xjbHNoZHJhd25pbCBcY2VsbHg1OTkzXHJvdyANClxsdHJyb3d9XHRyb3dkIFxpcm93MVxpcm93YmFuZDFcbHRycm93XHRzMTFcdHJnYXBoMTA4XHRybGVmdC0xMDhcdHJicmRydFxicmRyc1xicmRydzEwIFx0cmJyZHJsXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmJcYnJkcnNcYnJkcncxMCBcdHJicmRyclxicmRyc1xicmRydzEwIFx0cmJyZHJoXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnZcYnJkcnNcYnJkcncxMCANClx0cmZ0c1dpZHRoM1x0cndXaWR0aDYxMDFcdHJmdHNXaWR0aEIzXHRyYXV0b2ZpdDFcdHJwYWRkbDEwOFx0cnBhZGRyMTA4XHRycGFkZGZsM1x0cnBhZGRmdDNcdHJwYWRkZmIzXHRycGFkZGZyM1x0Ymxyc2lkMzQzODA3OFx0Ymxsa2hkcnJvd3NcdGJsbGtsYXN0cm93XHRibGxraGRyY29sc1x0Ymxsa2xhc3Rjb2xcdGJsaW5kMFx0YmxpbmR0eXBlMyBcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmINClxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgyNDY5XGNsc2hkcmF3bmlsIFxjZWxseDIzNjFcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTEzM1xjbHNoZHJhd25pbCBcY2VsbHgzNDk0XGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIA0KXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTI1NlxjbHNoZHJhd25pbCBcY2VsbHg0NzUwXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDEyNDNcY2xzaGRyYXduaWwgXGNlbGx4NTk5Mw0KXHBhcmRccGxhaW4gXGx0cnBhclxzMTdccWwgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXHBhcmFyc2lkMzQzODA3OCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSANClxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ1OTE4MzI5IFByb2plY3QgU3Vic3RhdGlvblxjZWxsIH1ccGFyZCBcbHRycGFyXHMxN1xxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBccGFyYXJzaWQzNDM4MDc4IHtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcaW5zcnNpZDM0MzgwNzggNDAlfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNTkxODMyOSBcY2VsbCB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDM0MzgwNzggMX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDU5MTgzMjkgMCVcY2VsbCB9ew0KXHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMzQzODA3OCA1fXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNTkxODMyOSAwJVxjZWxsIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMCANClxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IFx0cm93ZCBcaXJvdzFcaXJvd2JhbmQxXGx0cnJvd1x0czExXHRyZ2FwaDEwOFx0cmxlZnQtMTA4XHRyYnJkcnRcYnJkcnNcYnJkcncxMCBcdHJicmRybFxicmRyc1xicmRydzEwIA0KXHRyYnJkcmJcYnJkcnNcYnJkcncxMCBcdHJicmRyclxicmRyc1xicmRydzEwIFx0cmJyZHJoXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnZcYnJkcnNcYnJkcncxMCANClx0cmZ0c1dpZHRoM1x0cndXaWR0aDYxMDFcdHJmdHNXaWR0aEIzXHRyYXV0b2ZpdDFcdHJwYWRkbDEwOFx0cnBhZGRyMTA4XHRycGFkZGZsM1x0cnBhZGRmdDNcdHJwYWRkZmIzXHRycGFkZGZyM1x0Ymxyc2lkMzQzODA3OFx0Ymxsa2hkcnJvd3NcdGJsbGtsYXN0cm93XHRibGxraGRyY29sc1x0Ymxsa2xhc3Rjb2xcdGJsaW5kMFx0YmxpbmR0eXBlMyBcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmINClxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgyNDY5XGNsc2hkcmF3bmlsIFxjZWxseDIzNjFcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTEzM1xjbHNoZHJhd25pbCBcY2VsbHgzNDk0XGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIA0KXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTI1NlxjbHNoZHJhd25pbCBcY2VsbHg0NzUwXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDEyNDNcY2xzaGRyYXduaWwgXGNlbGx4NTk5M1xyb3cgDQpcbHRycm93fVxwYXJkXHBsYWluIFxsdHJwYXJcczE3XHFsIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxwYXJhcnNpZDM0MzgwNzggXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNTkxODMyOSBUcmFuc21pc3Npb24gTGluZVxjZWxsIH1ccGFyZCBcbHRycGFyXHMxN1xxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBccGFyYXJzaWQzNDM4MDc4IHtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcaW5zcnNpZDM0MzgwNzggNDAlfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNTkxODMyOSBcY2VsbCB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDM0MzgwNzggMX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDU5MTgzMjkgMCVcY2VsbCB9ew0KXHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMzQzODA3OCA1fXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNTkxODMyOSAwJVxjZWxsIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMCANClxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IFx0cm93ZCBcaXJvdzJcaXJvd2JhbmQyXGx0cnJvd1x0czExXHRyZ2FwaDEwOFx0cmxlZnQtMTA4XHRyYnJkcnRcYnJkcnNcYnJkcncxMCBcdHJicmRybFxicmRyc1xicmRydzEwIA0KXHRyYnJkcmJcYnJkcnNcYnJkcncxMCBcdHJicmRyclxicmRyc1xicmRydzEwIFx0cmJyZHJoXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnZcYnJkcnNcYnJkcncxMCANClx0cmZ0c1dpZHRoM1x0cndXaWR0aDYxMDFcdHJmdHNXaWR0aEIzXHRyYXV0b2ZpdDFcdHJwYWRkbDEwOFx0cnBhZGRyMTA4XHRycGFkZGZsM1x0cnBhZGRmdDNcdHJwYWRkZmIzXHRycGFkZGZyM1x0Ymxyc2lkMzQzODA3OFx0Ymxsa2hkcnJvd3NcdGJsbGtsYXN0cm93XHRibGxraGRyY29sc1x0Ymxsa2xhc3Rjb2xcdGJsaW5kMFx0YmxpbmR0eXBlMyBcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmINClxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgyNDY5XGNsc2hkcmF3bmlsIFxjZWxseDIzNjFcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTEzM1xjbHNoZHJhd25pbCBcY2VsbHgzNDk0XGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIA0KXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTI1NlxjbHNoZHJhd25pbCBcY2VsbHg0NzUwXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDEyNDNcY2xzaGRyYXduaWwgXGNlbGx4NTk5M1xyb3cgDQpcbHRycm93fVxwYXJkXHBsYWluIFxsdHJwYXJcczE3XHFsIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxwYXJhcnNpZDM0MzgwNzggXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBSb2FkcyBpbiBTZWN0aW9ucyB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDM0MzgwNzggOSwgMTAsIDExLCAxNSBhbmQgMTZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IFxjZWxsIH1ccGFyZCBcbHRycGFyDQpcczE3XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDM0MzgwNzggNDAlXGNlbGwgMX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDU5MTgzMjkgMCUNCn17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMzQzODA3OCBcY2VsbCA1fXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNTkxODMyOSAwJX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMzQzODA3OCBcY2VsbCB9XHBhcmRccGxhaW4gXGx0cnBhcg0KXHFsIFxsaTBccmkwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANClx0cm93ZCBcaXJvdzNcaXJvd2JhbmQzXGx0cnJvd1x0czExXHRyZ2FwaDEwOFx0cmxlZnQtMTA4XHRyYnJkcnRcYnJkcnNcYnJkcncxMCBcdHJicmRybFxicmRyc1xicmRydzEwIFx0cmJyZHJiXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnJcYnJkcnNcYnJkcncxMCBcdHJicmRyaFxicmRyc1xicmRydzEwIFx0cmJyZHJ2XGJyZHJzXGJyZHJ3MTAgDQpcdHJmdHNXaWR0aDNcdHJ3V2lkdGg2MTAxXHRyZnRzV2lkdGhCM1x0cmF1dG9maXQxXHRycGFkZGwxMDhcdHJwYWRkcjEwOFx0cnBhZGRmbDNcdHJwYWRkZnQzXHRycGFkZGZiM1x0cnBhZGRmcjNcdGJscnNpZDM0MzgwNzhcdGJsbGtoZHJyb3dzXHRibGxrbGFzdHJvd1x0Ymxsa2hkcmNvbHNcdGJsbGtsYXN0Y29sXHRibGluZDBcdGJsaW5kdHlwZTMgXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiDQpcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMjQ2OVxjbHNoZHJhd25pbCBcY2VsbHgyMzYxXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDExMzNcY2xzaGRyYXduaWwgXGNlbGx4MzQ5NFxjbHZlcnRhbHRcY2xicmRydFxicmRybm9uZSANClxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDEyNTZcY2xzaGRyYXduaWwgXGNlbGx4NDc1MFxjbHZlcnRhbHRcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxMjQzXGNsc2hkcmF3bmlsIFxjZWxseDU5OTNccm93IA0KXGx0cnJvd31ccGFyZFxwbGFpbiBcbHRycGFyXHMxN1xxbCBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggTyZNIEZhY2lsaXR5XGNlbGwgfVxwYXJkIFxsdHJwYXJcczE3XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDM0MzgwNzggNDAlXGNlbGwgMX17DQpccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNTkxODMyOSAwJX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMzQzODA3OCBcY2VsbCA1fXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNTkxODMyOSAwJX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCANClxmczIyXGluc3JzaWQzNDM4MDc4IFxjZWxsIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IFx0cm93ZCBcaXJvdzRcaXJvd2JhbmQ0XGx0cnJvd1x0czExXHRyZ2FwaDEwOFx0cmxlZnQtMTA4XHRyYnJkcnRcYnJkcnNcYnJkcncxMCBcdHJicmRybFxicmRyc1xicmRydzEwIFx0cmJyZHJiXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnJcYnJkcnNcYnJkcncxMCBcdHJicmRyaFxicmRyc1xicmRydzEwIFx0cmJyZHJ2XGJyZHJzXGJyZHJ3MTAgDQpcdHJmdHNXaWR0aDNcdHJ3V2lkdGg2MTAxXHRyZnRzV2lkdGhCM1x0cmF1dG9maXQxXHRycGFkZGwxMDhcdHJwYWRkcjEwOFx0cnBhZGRmbDNcdHJwYWRkZnQzXHRycGFkZGZiM1x0cnBhZGRmcjNcdGJscnNpZDM0MzgwNzhcdGJsbGtoZHJyb3dzXHRibGxrbGFzdHJvd1x0Ymxsa2hkcmNvbHNcdGJsbGtsYXN0Y29sXHRibGluZDBcdGJsaW5kdHlwZTMgXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiDQpcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMjQ2OVxjbHNoZHJhd25pbCBcY2VsbHgyMzYxXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDExMzNcY2xzaGRyYXduaWwgXGNlbGx4MzQ5NFxjbHZlcnRhbHRcY2xicmRydFxicmRybm9uZSANClxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDEyNTZcY2xzaGRyYXduaWwgXGNlbGx4NDc1MFxjbHZlcnRhbHRcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxMjQzXGNsc2hkcmF3bmlsIFxjZWxseDU5OTNccm93IA0KXGx0cnJvd31ccGFyZFxwbGFpbiBcbHRycGFyXHMxN1xxbCBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ0NjA2NzMyIEVudmlyb25tZW50YWwgTWl0aWdhdGlvbiBQYXJjZWxzXGNlbGwgfVxwYXJkIFxsdHJwYXJcczE3XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgDQpcZnMyMlxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDQ2MDY3MzIgNzAlXGNlbGwgMTUlXGNlbGwgMTUlXGNlbGwgfVxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggXHRyb3dkIFxpcm93NVxpcm93YmFuZDVcbHRycm93XHRzMTFcdHJnYXBoMTA4XHRybGVmdC0xMDhcdHJicmRydFxicmRyc1xicmRydzEwIFx0cmJyZHJsXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmJcYnJkcnNcYnJkcncxMCBcdHJicmRyclxicmRyc1xicmRydzEwIA0KXHRyYnJkcmhcYnJkcnNcYnJkcncxMCBcdHJicmRydlxicmRyc1xicmRydzEwIFx0cmZ0c1dpZHRoM1x0cndXaWR0aDYxMDFcdHJmdHNXaWR0aEIzXHRyYXV0b2ZpdDFcdHJwYWRkbDEwOFx0cnBhZGRyMTA4XHRycGFkZGZsM1x0cnBhZGRmdDNcdHJwYWRkZmIzXHRycGFkZGZyM1x0Ymxyc2lkMzQzODA3OFx0Ymxsa2hkcnJvd3NcdGJsbGtsYXN0cm93XHRibGxraGRyY29sc1x0Ymxsa2xhc3Rjb2xcdGJsaW5kMFx0YmxpbmR0eXBlMyBcY2x2ZXJ0YWx0DQpcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgyNDY5XGNsc2hkcmF3bmlsIFxjZWxseDIzNjFcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgDQpcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxMTMzXGNsc2hkcmF3bmlsIFxjZWxseDM0OTRcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTI1NlxjbHNoZHJhd25pbCBcY2VsbHg0NzUwXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiDQpcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTI0M1xjbHNoZHJhd25pbCBcY2VsbHg1OTkzXHJvdyBcbHRycm93fVxwYXJkXHBsYWluIFxsdHJwYXJcczE3XHFsIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxwYXJhcnNpZDM0MzgwNzggXHJ0bGNoXGZjczEgDQpcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBBbGwgb3RoZXIgU2hhcmVkIEZhY2lsaXRpZXNcY2VsbCB9XHBhcmQgXGx0cnBhcg0KXHMxN1xxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBccGFyYXJzaWQzNDM4MDc4IHtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQzNDM4MDc4IDQwJVxjZWxsIDF9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ1OTE4MzI5IDAlDQp9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDM0MzgwNzggXGNlbGwgNX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDU5MTgzMjkgMCV9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDM0MzgwNzggXGNlbGwgfVxwYXJkXHBsYWluIFxsdHJwYXINClxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQpcdHJvd2QgXGlyb3c2XGlyb3diYW5kNlxsYXN0cm93IFxsdHJyb3dcdHMxMVx0cmdhcGgxMDhcdHJsZWZ0LTEwOFx0cmJyZHJ0XGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmxcYnJkcnNcYnJkcncxMCBcdHJicmRyYlxicmRyc1xicmRydzEwIFx0cmJyZHJyXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmhcYnJkcnNcYnJkcncxMCBcdHJicmRydlxicmRyc1xicmRydzEwIA0KXHRyZnRzV2lkdGgzXHRyd1dpZHRoNjEwMVx0cmZ0c1dpZHRoQjNcdHJhdXRvZml0MVx0cnBhZGRsMTA4XHRycGFkZHIxMDhcdHJwYWRkZmwzXHRycGFkZGZ0M1x0cnBhZGRmYjNcdHJwYWRkZnIzXHRibHJzaWQzNDM4MDc4XHRibGxraGRycm93c1x0Ymxsa2xhc3Ryb3dcdGJsbGtoZHJjb2xzXHRibGxrbGFzdGNvbFx0YmxpbmQwXHRibGluZHR5cGUzIFxjbHZlcnRhbHRcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYg0KXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDI0NjlcY2xzaGRyYXduaWwgXGNlbGx4MjM2MVxjbHZlcnRhbHRcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxMTMzXGNsc2hkcmF3bmlsIFxjZWxseDM0OTRcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgDQpcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxMjU2XGNsc2hkcmF3bmlsIFxjZWxseDQ3NTBcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTI0M1xjbHNoZHJhd25pbCBcY2VsbHg1OTkzXHJvdyANCn1ccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxrZWVwblx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQpccGFyIH1ccGFyZCBcbHRycGFyXHMxNVxxaiBcbGkwXHJpMFxzYTI0MFxrZWVwblx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDk0NDY3NSANClJTVCBJL0lJIFNoYXJlZCBGYWNpbGl0aWVzIEdyb3VwIChSaXNpbmcgVHJlZSBJIGFuZCBSaXNpbmcgVHJlZSBJSSBvbmx5KQ0KXHBhciBcbHRycm93fVx0cm93ZCBcaXJvdzBcaXJvd2JhbmQwXGx0cnJvd1x0czExXHRyZ2FwaDEwOFx0cmxlZnQtMTA4XHRyYnJkcnRcYnJkcnNcYnJkcncxMCBcdHJicmRybFxicmRyc1xicmRydzEwIFx0cmJyZHJiXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnJcYnJkcnNcYnJkcncxMCBcdHJicmRyaFxicmRyc1xicmRydzEwIFx0cmJyZHJ2XGJyZHJzXGJyZHJ3MTAgDQpcdHJmdHNXaWR0aDNcdHJ3V2lkdGg2MTM4XHRyZnRzV2lkdGhCM1x0cmF1dG9maXQxXHRycGFkZGwxMDhcdHJwYWRkcjEwOFx0cnBhZGRmbDNcdHJwYWRkZnQzXHRycGFkZGZiM1x0cnBhZGRmcjNcdGJscnNpZDM0MzgwNzhcdGJsbGtoZHJyb3dzXHRibGxrbGFzdHJvd1x0Ymxsa2hkcmNvbHNcdGJsbGtsYXN0Y29sXHRibGluZDBcdGJsaW5kdHlwZTMgXGNsdmVydGFsYlxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiDQpcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMzA3OFxjbHNoZHJhd25pbCBcY2VsbHgyOTcwXGNsdmVydGFsYlxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDE0NDBcY2xzaGRyYXduaWwgXGNlbGx4NDQxMFxjbHZlcnRhbGJcY2xicmRydFxicmRybm9uZSANClxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDE2MjBcY2xzaGRyYXduaWwgXGNlbGx4NjAzMFxwYXJkXHBsYWluIFxsdHJwYXJcczE3XHFjIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxwYXJhcnNpZDM0MzgwNzggXHJ0bGNoXGZjczEgDQpcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxiXGZzMjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ1OTE4MzI5IEVxdWlwbWVudCBOYW1lXGNlbGwgfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxiXGZzMjJcaW5zcnNpZDM0MzgwNzggUlNUIEl9ew0KXHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcYlxmczIyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNTkxODMyOSBcY2VsbCB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGJcZnMyMlxpbnNyc2lkMzQzODA3OCBSU1QgSX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcYlxmczIyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNTkxODMyOSBJXGNlbGwgfVxwYXJkXHBsYWluIFxsdHJwYXINClxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ1OTE4MzI5IA0KXHRyb3dkIFxpcm93MFxpcm93YmFuZDBcbHRycm93XHRzMTFcdHJnYXBoMTA4XHRybGVmdC0xMDhcdHJicmRydFxicmRyc1xicmRydzEwIFx0cmJyZHJsXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmJcYnJkcnNcYnJkcncxMCBcdHJicmRyclxicmRyc1xicmRydzEwIFx0cmJyZHJoXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnZcYnJkcnNcYnJkcncxMCANClx0cmZ0c1dpZHRoM1x0cndXaWR0aDYxMzhcdHJmdHNXaWR0aEIzXHRyYXV0b2ZpdDFcdHJwYWRkbDEwOFx0cnBhZGRyMTA4XHRycGFkZGZsM1x0cnBhZGRmdDNcdHJwYWRkZmIzXHRycGFkZGZyM1x0Ymxyc2lkMzQzODA3OFx0Ymxsa2hkcnJvd3NcdGJsbGtsYXN0cm93XHRibGxraGRyY29sc1x0Ymxsa2xhc3Rjb2xcdGJsaW5kMFx0YmxpbmR0eXBlMyBcY2x2ZXJ0YWxiXGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmINClxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgzMDc4XGNsc2hkcmF3bmlsIFxjZWxseDI5NzBcY2x2ZXJ0YWxiXGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTQ0MFxjbHNoZHJhd25pbCBcY2VsbHg0NDEwXGNsdmVydGFsYlxjbGJyZHJ0XGJyZHJub25lIA0KXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTYyMFxjbHNoZHJhd25pbCBcY2VsbHg2MDMwXHJvdyBcbHRycm93fVx0cm93ZCBcaXJvdzFcaXJvd2JhbmQxXGx0cnJvd1x0czExXHRyZ2FwaDEwOFx0cmxlZnQtMTA4XHRyYnJkcnRcYnJkcnNcYnJkcncxMCBcdHJicmRybFxicmRyc1xicmRydzEwIFx0cmJyZHJiXGJyZHJzXGJyZHJ3MTAgDQpcdHJicmRyclxicmRyc1xicmRydzEwIFx0cmJyZHJoXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnZcYnJkcnNcYnJkcncxMCANClx0cmZ0c1dpZHRoM1x0cndXaWR0aDYxMzhcdHJmdHNXaWR0aEIzXHRyYXV0b2ZpdDFcdHJwYWRkbDEwOFx0cnBhZGRyMTA4XHRycGFkZGZsM1x0cnBhZGRmdDNcdHJwYWRkZmIzXHRycGFkZGZyM1x0Ymxyc2lkMzQzODA3OFx0Ymxsa2hkcnJvd3NcdGJsbGtsYXN0cm93XHRibGxraGRyY29sc1x0Ymxsa2xhc3Rjb2xcdGJsaW5kMFx0YmxpbmR0eXBlMyBcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmINClxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgzMDc4XGNsc2hkcmF3bmlsIFxjZWxseDI5NzBcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTQ0MFxjbHNoZHJhd25pbCBcY2VsbHg0NDEwXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIA0KXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTYyMFxjbHNoZHJhd25pbCBcY2VsbHg2MDMwXHBhcmRccGxhaW4gXGx0cnBhclxzMTdccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXHBhcmFyc2lkMzQzODA3OCBccnRsY2hcZmNzMSANClxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ1OTE4MzI5IFxjZWxsIFxjZWxsIFxjZWxsIH1ccGFyZFxwbGFpbiBcbHRycGFyDQpccWwgXGxpMFxyaTBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNTkxODMyOSANClx0cm93ZCBcaXJvdzFcaXJvd2JhbmQxXGx0cnJvd1x0czExXHRyZ2FwaDEwOFx0cmxlZnQtMTA4XHRyYnJkcnRcYnJkcnNcYnJkcncxMCBcdHJicmRybFxicmRyc1xicmRydzEwIFx0cmJyZHJiXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnJcYnJkcnNcYnJkcncxMCBcdHJicmRyaFxicmRyc1xicmRydzEwIFx0cmJyZHJ2XGJyZHJzXGJyZHJ3MTAgDQpcdHJmdHNXaWR0aDNcdHJ3V2lkdGg2MTM4XHRyZnRzV2lkdGhCM1x0cmF1dG9maXQxXHRycGFkZGwxMDhcdHJwYWRkcjEwOFx0cnBhZGRmbDNcdHJwYWRkZnQzXHRycGFkZGZiM1x0cnBhZGRmcjNcdGJscnNpZDM0MzgwNzhcdGJsbGtoZHJyb3dzXHRibGxrbGFzdHJvd1x0Ymxsa2hkcmNvbHNcdGJsbGtsYXN0Y29sXHRibGluZDBcdGJsaW5kdHlwZTMgXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiDQpcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMzA3OFxjbHNoZHJhd25pbCBcY2VsbHgyOTcwXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDE0NDBcY2xzaGRyYXduaWwgXGNlbGx4NDQxMFxjbHZlcnRhbHRcY2xicmRydFxicmRybm9uZSANClxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDE2MjBcY2xzaGRyYXduaWwgXGNlbGx4NjAzMFxyb3cgXGx0cnJvd31ccGFyZFxwbGFpbiBcbHRycGFyXHMxN1xxbCBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBccGFyYXJzaWQzNDM4MDc4IA0KXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggUm9hZHMgaW4gU2VjdGlvbnMgMSwgMiwgMzUgYW5kIDM2XGNlbGwgfVxwYXJkIFxsdHJwYXINClxzMTdccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMzQzODA3OCA4MCVcY2VsbCAyfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNTkxODMyOSAwJQ0KfXtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQzNDM4MDc4IFxjZWxsIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IFx0cm93ZCBcaXJvdzJcaXJvd2JhbmQyXGx0cnJvd1x0czExXHRyZ2FwaDEwOFx0cmxlZnQtMTA4XHRyYnJkcnRcYnJkcnNcYnJkcncxMCBcdHJicmRybFxicmRyc1xicmRydzEwIFx0cmJyZHJiXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnJcYnJkcnNcYnJkcncxMCANClx0cmJyZHJoXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnZcYnJkcnNcYnJkcncxMCBcdHJmdHNXaWR0aDNcdHJ3V2lkdGg2MTM4XHRyZnRzV2lkdGhCM1x0cmF1dG9maXQxXHRycGFkZGwxMDhcdHJwYWRkcjEwOFx0cnBhZGRmbDNcdHJwYWRkZnQzXHRycGFkZGZiM1x0cnBhZGRmcjNcdGJscnNpZDM0MzgwNzhcdGJsbGtoZHJyb3dzXHRibGxrbGFzdHJvd1x0Ymxsa2hkcmNvbHNcdGJsbGtsYXN0Y29sXHRibGluZDBcdGJsaW5kdHlwZTMgXGNsdmVydGFsdA0KXGNsYnJkcnRcYnJkcm5vbmUgXGNsYnJkcmxcYnJkcm5vbmUgXGNsYnJkcmJcYnJkcm5vbmUgXGNsYnJkcnJcYnJkcm5vbmUgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMzA3OFxjbHNoZHJhd25pbCBcY2VsbHgyOTcwXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIA0KXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTQ0MFxjbHNoZHJhd25pbCBcY2VsbHg0NDEwXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJub25lIFxjbGJyZHJsXGJyZHJub25lIFxjbGJyZHJiXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDE2MjBcY2xzaGRyYXduaWwgXGNlbGx4NjAzMFxyb3cgXGx0cnJvd31ccGFyZFxwbGFpbiBcbHRycGFyDQpcczE3XHFsIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxwYXJhcnNpZDM0MzgwNzggXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMzQzODA3OCBNZXQgVG93ZXIgUlNUIDEtQi9SU1QgMlxjZWxsIH1ccGFyZCBcbHRycGFyXHMxN1xxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBccGFyYXJzaWQzNDM4MDc4IHtccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQzNDM4MDc4IDgwJVxjZWxsIDJ9e1xydGxjaFxmY3MxIA0KXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDU5MTgzMjkgMCV9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDM0MzgwNzggXGNlbGwgfVxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wIFxydGxjaFxmY3MxIA0KXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggXHRyb3dkIFxpcm93M1xpcm93YmFuZDNcbGFzdHJvdyBcbHRycm93XHRzMTFcdHJnYXBoMTA4XHRybGVmdC0xMDhcdHJicmRydFxicmRyc1xicmRydzEwIFx0cmJyZHJsXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmINClxicmRyc1xicmRydzEwIFx0cmJyZHJyXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmhcYnJkcnNcYnJkcncxMCBcdHJicmRydlxicmRyc1xicmRydzEwIA0KXHRyZnRzV2lkdGgzXHRyd1dpZHRoNjEzOFx0cmZ0c1dpZHRoQjNcdHJhdXRvZml0MVx0cnBhZGRsMTA4XHRycGFkZHIxMDhcdHJwYWRkZmwzXHRycGFkZGZ0M1x0cnBhZGRmYjNcdHJwYWRkZnIzXHRibHJzaWQzNDM4MDc4XHRibGxraGRycm93c1x0Ymxsa2xhc3Ryb3dcdGJsbGtoZHJjb2xzXHRibGxrbGFzdGNvbFx0YmxpbmQwXHRibGluZHR5cGUzIFxjbHZlcnRhbHRcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYg0KXGJyZHJub25lIFxjbGJyZHJyXGJyZHJub25lIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDMwNzhcY2xzaGRyYXduaWwgXGNlbGx4Mjk3MFxjbHZlcnRhbHRcY2xicmRydFxicmRybm9uZSBcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxNDQwXGNsc2hkcmF3bmlsIFxjZWxseDQ0MTBcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcm5vbmUgDQpcY2xicmRybFxicmRybm9uZSBcY2xicmRyYlxicmRybm9uZSBcY2xicmRyclxicmRybm9uZSBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxNjIwXGNsc2hkcmF3bmlsIFxjZWxseDYwMzBccm93IH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1MVxxYyBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIA0KXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMzQzODA3OCBcc2VjdCB9XHNlY3RkIFxsdHJzZWN0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMzQzODA3OFxzZnRuYmoge1xmb290ZXJmIFxsdHJwYXIgDQpccGFyZFxwbGFpbiBcbHRycGFyXHMyMlxxYyBcbGkwXHJpMFx3aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMTZcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczE2XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggRC0xDQpccGFyIH1ccGFyZCBcbHRycGFyXHMyMlxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANClxwYXIgfX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyNVxxYyBcbGkwXHJpMFxzYTMwMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzggXHJ0bGNoXGZjczEgXGFiXGFmMVxhZnMzMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcYlxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNca2VybmluZzI4XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBFWEhJQklUIEQNClxwYXIgTUFURVJJQUwgUFJPSkVDVCBBR1JFRU1FTlRTDQpccGFyIH1ccGFyZCBcbHRycGFyXHMyNVxxbCBcbGkwXHJpMFxzYTMwMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNTQ3MTU2NCANCkhpZ2ggVm9sdGFnZSBFbmdpbmVlcmluZywgUHJvY3VyZW1lbnQgYW5kIENvbnN0cnVjdGlvbiBDb250cmFjdCBieSBhbmQgYmV0d2VlbiBCbGF0dG5lciBFbmVyZ3kgSW5jLiwgYSBNaW5uZXNvdGEgY29ycG9yYXRpb24gYW5kIFJpc2luZyBUcmVlIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDM0MzgwNzggSSwgZGF0ZWQgYXMgb2YgRmVicnVhcnkgMywgMjAxNS4NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDEzNDQyODA5IA0KT3BlcmF0aW9ucyBhbmQgTWFpbnRlbmFuY2UgRmFjaWxpdHkgRW5naW5lZXJpbmcsIFByb2N1cmVtZW50IGFuZCBDb25zdHJ1Y3Rpb24gQ29udHJhY3QsIGRhdGVkIGFzIG9mIEphbnVhcnkgMjIsIDIwMTUsIGJldHdlZW4gUmlzaW5nIFRyZWUgSSwgYW5kIFdhdHRlbmJhcmdlciBXZWxscyBDb25zdHJ1Y3Rpb24sIEluYy4gREJBIFdXQ0ksIGEgQ2FsaWZvcm5pYSBjb3Jwb3JhdGlvbn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxiMFxpbnNyc2lkMzQzODA3OCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczUxXHFjIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzggXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxiXGluc3JzaWQzNDM4MDc4IFxzZWN0IH1cc2VjdGQgXGx0cnNlY3RccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQyMTc2NzM2XHNmdG5iaiB7XGZvb3RlcnIgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHMyMlxxbCBcbGkwXHJpMFx3aWRjdGxwYXINClx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMxNlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQpccGFyIH1ccGFyZCBcbHRycGFyXHMyMlxxYyBcbGkwXHJpMFx3aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcZnMyNFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDE1MDg4MDY3IEUtfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgDQpcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxmczI0XGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTUwODgwNjcgIFBBR0UgICBcXCogTUVSR0VGT1JNQVQgfX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ3MzU3NTAyIDV9fX1cc2VjdGQgXGx0cnNlY3RcbGluZXgwXGVuZG5oZXJlXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSANClxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQyOTEzMTQzIHtcc2hwe1wqXHNocGluc3Rcc2hwbGVmdDBcc2hwdG9wMFxzaHByaWdodDQwMzJcc2hwYm90dG9tNDAwXHNocGZoZHIxXHNocGJ4bWFyZ2luXHNocGJ4aWdub3JlXHNocGJ5cGFyYVxzaHBieWlnbm9yZVxzaHB3cjNcc2hwd3JrMFxzaHBmYmx3dHh0MFxzaHB6MTJcc2hwbGlkMjIzNw0Ke1xzcHtcc24gc2hhcGVUeXBlfXtcc3YgMjAyfX17XHNwe1xzbiBmRmxpcEh9e1xzdiAwfX17XHNwe1xzbiBmRmxpcFZ9e1xzdiAwfX17XHNwe1xzbiBsVHhpZH17XHN2IDkxNzUwNH19e1xzcHtcc24gZHhUZXh0TGVmdH17XHN2IDB9fXtcc3B7XHNuIGR5VGV4dFRvcH17XHN2IDB9fXtcc3B7XHNuIGR4VGV4dFJpZ2h0fXtcc3YgMH19e1xzcHtcc24gZHlUZXh0Qm90dG9tfXtcc3YgMH19e1xzcHtcc24gZkZpdFNoYXBlVG9UZXh0fXtcc3YgMX19DQp7XHNwe1xzbiBmRmlsbGVkfXtcc3YgMH19e1xzcHtcc24gZkxpbmV9e1xzdiAwfX17XHNwe1xzbiB3ek5hbWV9e1xzdiBUZXh0IEJveCA5fX17XHNwe1xzbiBwb3NyZWxofXtcc3YgMH19e1xzcHtcc24gbWV0cm9CbG9ifXtcc3Yge1wqXHN2YiANCjUwNGIwMzA0MTQwMDA2MDAwODAwMDAwMDIxMDBiNjgzMzg5MmZlMDAwMDAwZTEwMTAwMDAxMzAwMDAwMDViNDM2ZjZlNzQ2NTZlNzQ1ZjU0Nzk3MDY1NzM1ZDJlNzg2ZDZjOTQ5MTQxNGVjMzMwMTA0NWY3NDhkY2MxZjIxNjI1NGViYjQwMDgyNWU5ODJiNDRiNDBhODFjNjA2NDRmMTI4YjY0NmM3OTRjNjg2ZjhmOTNiNjFiNDQ5MTU4ZGEzM2ZmYmYyN2JiZGMxY2M2NDE0YzE4ZDgzYWFhZTQyYTJmYTQ0MGQyY2U1OGVhMmFmOWJlZGY2NTBmNTI3MDA0DQozMjMwMzhjMjRhMWU5MWU1YTZiZWJkMjlmNzQ3OGYyYzUyOWFiODkyN2Q4Y2ZlNTEyOWQ2M2Q4ZWMwYjlmMzQ4NjlkMmJhMzA0MjRjYzdkMDI5MGZmYTAzM2E1NGViYTJiODU3ZGE1MTQ0OGE1OTljM2I2NDVkMzZkOGMyZTcxMGM1ZjY5MGFlNGYyNjAxMDc5NmUyZTliNDM4YjMyYTA5ZGUwZjU2NDM0Y2E2NmEyMmYzODM5MjlkMDk3OTRhMmUzYmRjNWJjZjc3NDk0M2FhNWYwOWYzZTQzYWUwOWM3YjQ5NGYxM2FjNDFmMTBhMjEzZWMzOTgzNDk0MDlhYw0KNzBlZDFhYTdmM2JmM2I2NmM5OTEzM2Q3YjY1NjYzZGUwNGRlMmVhOThiZDNiNTZlZTNiZTI4ZTBmNGRmZjIyNmM1ZGU3MGJhYjRhYmU1ODNlYTZmMDAwMDAwZmZmZjAzMDA1MDRiMDMwNDE0MDAwNjAwMDgwMDAwMDAyMTAwMzhmZDIxZmZkNjAwMDAwMDk0MDEwMDAwMGIwMDAwMDA1ZjcyNjU2YzczMmYyZTcyNjU2YzczYTQ5MGMxNmFjMzMwMGM4NmVmODNiZDgzZDE3ZDcxOWFjMzE4YTM0ZTJmYTNkMDZiZTkxZWMwZDg4YTYzMWE1YjQ2MzJkOWZhZjYNCjMzODNjMTMyN2FkYjUxYmZkMGY3ODk3ZjdmZjg0YzhiNWE5MTI1NTIzNmIwZWI3YTUwOTgxZGY5OTg4MzgxZjdjYmYxZTkwNTk0NTQ5YmJkNWQyOGEzODExYjBhMWNjNmM3ODdmZDE5MTc1YmRiOTFjY2IxODg2YTk0MmMwNmU2NWFjYmFiZDZlMjY2NGM1NjNhMmE5OGRiNjYyMjRlYjZiNjkxODMyZWQ2NWQ2ZDQwM2RmNGZkYjNlNmRmMGMxODM3NGM3NWYyMDZmOGU0MDc1MDk3NWI2OWU2M2ZlYzE0MWQ5M2QwNTQzYjQ3NDlkMzM0NDU3NzhmYWEzZDdkDQplNDMzYWU4ZDYyMzk2MDM1ZTA1OWJlNDNjNmI1NmJjZjgxYmVlZmRkZmRkMzFiZDg5NjM5YmEyM2RiODQ2ZmU0YjY3ZTFjYTg2NTNmN2FiZGU5NzJmYzAyMDAwMGZmZmYwMzAwNTA0YjAzMDQxNDAwMDYwMDA4MDAwMDAwMjEwMGU3OGY3ZGJlYjIwMjAwMDBiMTA1MDAwMDBlMDAwMDAwNjQ3MjczMmY2NTMyNmY0NDZmNjMyZTc4NmQ2Y2FjNTQ1YjZmOWIzMDE0N2U5ZmI0ZmY2MGY5OWQ2MjI4NDkwMzJhYTlkYTEwYTY0OWRkNDU2YWY3MDMxYzMwYzExYQ0KZDhjYzc2MDJkZGI0ZmZiZTYzMTM3MmU5NWVhNjZkM2M1ODA3ZmJmODNiOTdlZmYzYjliZDFiZGEwNmVkOTlkMjVjOGExNDA3NTcwNDIzMjYwYTU5NzJiMTRkZjE5N2U3ZGM1YjYwYTQwZDE1MjU2ZGE0NjAyOTdlNjExYWRmMmRkZmJlYjllZGJiODQ4NWIyOTY0ZGM5MTQwMjEwYTE5M2JlNGI3MTZkNGM5N2Y4YmUyZTZhZDY1MjdkMjUzYjI2ZTBiMDkyYWFhNTA2N2VkNWQ2MmYxNWVkMDFiZDZkZmM5MDkwYjlkZjRiNTU3NjRhMTY0YzZiZDhjZGM2NDMNCmJjNzRmODU1YzUwYWYzYTlhYTM0MzNhODQ5MzFlNDY2ZGNhYWRjYmFiMWFiYmZiY2E1Yzk1NmQxYWVlNmM1MjEwZGZhMTc1OWI0OTQwYjA4N2E4NGNhYThhMTY4YTdmODZmNTAyZDJmOTRkNGIyMzI1Nzg1NmM3ZDU5NTViYzYwYWUwNmE4MjYyMGFmYWE3OWFhNjljNzVjMmRkMDFjZGQxZGRiYTRmZjFmNmNmMTcxZmY1OTIxNWVhNjM4YzY0OGQwMTYyODdhNjY4MzQxMGY3MjQwYjFlZDRlZGZlOTA0OWM5ZTNhNzAzMzAzNmMwM2NiYWU1MmRkM2RjYWUyDQphYjQ2NDJhZTZhMmFiNmVjNWUyOWQ5ZDc4Yzk2OTA1ZDYwNmZmYTY3NTc0NzFjNmQ0MTM2ZmQwNzU5NDIxOGJhMzNkMjAxMGQ5NTZhNmRlYmEwMTkwOGQwODFhNTk3MjMzMzM2OTUwMjM2YzNkOTljNWM4NzcwNTRjMDU5Mzg4YjA4NzFkNGY5MzQ5OTZlNzc0YTliNzc0Y2I2YzgxYTI5NTZjMGJjNDNhN2ZiNDc2ZDZjMzYzNDk5NWM2YzMwMjE3M2RlMzQ4ZWZkNDY1YzZjODBlM2I4MDNiMWUxYWEzZGIzNTkzODMyN2ZjNDI0NWUyZmQ2OGJjODhiYzJmOQ0KZGE4YjQ4OTY3OWY3ZjkyYWYyZTY3OTcwMzNjYmFlYjNkNTJhMGI3ZWRhYjg0MTk0ZDRiYzJjOTliMDYxMjY2MTA1ZDE5ZjExNzc5MGY4Mjg4OWEzYjRiNDZjNzg2OWUxNmM0YTVhNmQzN2FiNDZhMTNkMDU2MWU3ZWU3MzNkODc5MzkzOWI3Zjk5ODY2YjAyZDRmMmFhYTQyMDhjYzg0MzE4N2JmOTdjNzFlMzQ1NzkzNGYzZTIxYmIyZjA0ODEwM2ZjNDczMTJjNTUxOTY1Zjk2ZjRjODA1ZmJmNzkyNTAwZjlhOWI4NWIzNTE0Y2E3YTQ1ZmQ1MDY0YzlmYzgNCjNlYWI4ZDI2MmQzNzMwM2ExYWRlYTY3ODcxNzRhMjg5OTVlMDVhOTQ4ZTVhNDM3OTMzZGE2N2FkYjBlOTlmNWEwMTc0NGY0NDNiYzE1YThkOGU2YTM1YzM2NjcwMmYyMzcwNzJiNjZhZGVjOGYyMDUyNGFjMjQyODBjYzQwODczMGY4YzVhYWFlZjE4ZjUzMDQzNTJhY2JmZWRhODYyMTgzNWVmMDUzYzAzM2I3MDI2NDM0ZGM2NjYzMmE4MjhlMDZhOGEwZDQ2YTNiOTMyZTM2MGRhNzU4YTZmNmI0MDllMWVkYTNkM2M5NTljM2IxNTlmYjIzODNjMzA5ODBiDQphZTk4YzMwY2IzODNlN2ZjZGY3OTlkMjZlZGYyMTcwMDAwMDBmZmZmMDMwMDUwNGIwMzA0MTQwMDA2MDAwODAwMDAwMDIxMDA1YzQxNjZjMGQ5MDAwMDAwMDQwMTAwMDAwZjAwMDAwMDY0NzI3MzJmNjQ2Zjc3NmU3MjY1NzYyZTc4NmQ2YzRjOGYzMTRmYzMzMDEwODU3N2E0ZmUwN2ViMmFiMTIwNmEyN2EwMGE0MjljYWFhYTYwNjFhMzY1NjFiYmM2NDcxMjYxOWZhM2Q4NGQ0MjdmM2QyZTBiMmNhNzc3N2FhN2Y3YmUyYjM3YjNiMzYyYTQyMTc0OWUzNQ0KNjQyYjA1ODJiOGY2YTZlMzQ2YzNmYmUxZTVmNjAxNDQ4OGM4MDZhZDY3ZDJmMDRkMDEzNmQ1ZTJhYWM0YzJmODg5ZGY2OGRjYzc0NmE0MTAwZTA1NmE2ODYzZWMwYjI5NDNkZDkyYzNiMGYyM2Q3MWYyM2VmZGUwMzBhNjc1NjhhNDE5NzA0YWUxY2VjYTVjYTliNTc0ZDg3MTZhNjhiMWE3NWQ0YmY1ZDdmZWU0MzRhY2U3ZTdmZWU2ZjU5MWYyZTk1Y2RiOTEzZmNlNTkxNjI5ZDNmYTdhMzk2ZjlmNDA0NDlhZTNkZjMxNWNmMDEzM2E1NDg5ZTllODRmNmMNCjgyYjAxYWQyMjNmMTc3MjZlZjVlZGRlNTIwOGUxN2ExNDA1NmE1ZmMwZjVmZmQwMDAwMDBmZmZmMDMwMDUwNGIwMTAyMmQwMDE0MDAwNjAwMDgwMDAwMDAyMTAwYjY4MzM4OTJmZTAwMDAwMGUxMDEwMDAwMTMwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwNWI0MzZmNmU3NDY1NmU3NDVmNTQ3OTcwNjU3MzVkMmU3ODZkNmM1MDRiMDEwMjJkMDAxNDAwMDYwMDA4MDAwMDAwMjEwMDM4ZmQyMWZmZDYwMDAwMDA5NDAxMDAwMDBiMDAwMDAwDQowMDAwMDAwMDAwMDAwMDAwMDAwMDJmMDEwMDAwNWY3MjY1NmM3MzJmMmU3MjY1NmM3MzUwNGIwMTAyMmQwMDE0MDAwNjAwMDgwMDAwMDAyMTAwZTc4ZjdkYmViMjAyMDAwMGIxMDUwMDAwMGUwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDJlMDIwMDAwNjQ3MjczMmY2NTMyNmY0NDZmNjMyZTc4NmQ2YzUwNGIwMTAyMmQwMDE0MDAwNjAwMDgwMDAwMDAyMTAwNWM0MTY2YzBkOTAwMDAwMDA0MDEwMDAwMGYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMA0KMGMwNTAwMDA2NDcyNzMyZjY0NmY3NzZlNzI2NTc2MmU3ODZkNmM1MDRiMDUwNjAwMDAwMDAwMDQwMDA0MDBmMzAwMDAwMDEyMDYwMDAwMDAwMH19fXtcc3B7XHNuIGRoZ3R9e1xzdiAyNTE2NjMzNjB9fXtcc3B7XHNuIGZIaWRkZW59e1xzdiAwfX17XHNwe1xzbiBmUHNldWRvSW5saW5lfXtcc3YgMH19e1xzcHtcc24gZkxheW91dEluQ2VsbH17XHN2IDF9fXtcc2hwdHh0IFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhcg0KXHM0OVxxbCBcbGkwXHJpMFxzbC0yMDBcc2xtdWx0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANCk9IU1VTQTo3NjE5ODQ1NzkuMTIgDQpccGFyIA0KXHBhciB9fX17XHNocHJzbHR7XCpcZG9cZG9ieG1hcmdpblxkb2J5cGFyYVxkb2RoZ3Q4MjA0XGRwdHhieFxkcHR4bHJ0YntcZHB0eGJ4dGV4dFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxzNDlccWwgXGxpMFxyaTBcc2wtMjAwXHNsbXVsdDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMlxhbGFuZzEwMjUgDQpcbHRyY2hcZmNzMCBcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBPSFNVU0E6NzYxOTg0NTc5LjEyIA0KXHBhciANClxwYXIgfX1cZHB4MFxkcHkwXGRweHNpemU0MDMyXGRweXNpemU0MDBcZHBmaWxsZmdjcjI1NVxkcGZpbGxmZ2NnMjU1XGRwZmlsbGZnY2IyNTVcZHBmaWxsYmdjcjI1NVxkcGZpbGxiZ2NnMjU1XGRwZmlsbGJnY2IyNTVcZHBmaWxscGF0MFxkcGxpbmVob2xsb3d9fX19e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGZzMjRcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxNTA4ODA2NyANClxwYXIgfX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyNVxxYyBcbGkwXHJpMFxzYTMwMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzggXHJ0bGNoXGZjczEgXGFiXGFmMVxhZnMzMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcYlxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNca2VybmluZzI4XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDEwNDQ1OTIyIEVYSElCSVQgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBFfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDEwNDQ1OTIyIA0KDQpccGFyIEZPUk0gT0YgQU1FTkRFRCBNRU1PUkFORFVNDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzggXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMzQzODA3OCANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxNTY4NDU5NyBSRUNPUkRJTkcgUkVRVUVTVEVEIEJZfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTU2ODQ1OTcgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxNTY4NDU5NyBBTkQgV0hFTiBSRUNPUkRFRCBNQUlMIFRPOg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTU2ODQ1OTcgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxNTY4NDU5NyBSSVNJTkcgVFJFRSBXSU5EIEZBUk0gTExDDQpccGFyIDgwOCBUcmF2aXMsIFN1aXRlIDcwMA0KXHBhciBIb3VzdG9uLCBUWCA3NzAwMg0KXHBhciBBdHRuOiBHZW5lcmFsIENvdW5zZWwNClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ3NDg2NTMwIFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIFx0YWIgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMyNVxxYyBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MDc5NjUgXHJ0bGNoXGZjczEgXGFiXGFmMVxhZnMzMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcYlxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNca2VybmluZzI4XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQwNzk2NSANClxwYXIgfVxwYXJkIFxsdHJwYXJcczI1XHFjIFxsaTBccmkwXHNhMzAwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggQU1FTkRFRCBNRU1PUkFORFVNIE9GXGxpbmUgU0hBUkVEIEZBQ0lMSVRJRVMgQUdSRUVNRU5UIEFORFxsaW5lIA0KR1JBTlQgT0YgUklHSFRTDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxN1xxaiBcZmk3NDFcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggVEhJUyBBTUVOREVEIE1FTU9SQU5EVU0gT0YgU0hBUkVEIEZBQ0lMSVRJRVMgQUdSRUVNRU5UIEFORCBHUkFOVCBPRiBSSUdIVFMgKHRoaXMgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxMDM3ODQ0MSBNZW1vcmFuZHVtfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBcJzk0DQopLCBpcyBtYWRlIGFuZCBlbnRlcmVkIGludG8gYXMgb2YgSnVuZSAyOSwgMjAxNSAodGhlIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQzNDM4MDc4IEV4ZWN1dGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxMDM3ODQ0MSAgRGF0ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggXCc5NA0KKSwgYnkgYW5kIGFtb25nIFJpc2luZyBUcmVlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDE1NDA4MTI3ICBXaW5kIEZhcm0gTExDIChcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBSaXNpbmcgVHJlZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxNTQwODEyNyAgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IEl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTU0MDgxMjcgXCc5NCksIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggUmlzaW5nIFRyZWV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTU0MDgxMjcgIFdpbmQgRmFybSB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggSUl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTU0MDgxMjcgIExMQyAoXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggUmlzaW5nIFRyZWV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTU0MDgxMjcgIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBJSX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxNTQwODEyNyBcJzk0KSwgYW5kIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggUmlzaW5nIFRyZWV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTU0MDgxMjcgIFdpbmQgRmFybSB9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggSUlJfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDE1NDA4MTI3ICBMTEMgKFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IFJpc2luZyBUcmVlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDE1NDA4MTI3ICB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggSUlJfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDE1NDA4MTI3IFwnOTQpLCBlYWNoIG9mIHdoaWNoIGlzIGEgRGVsYXdhcmUgbGltaXRlZCBsaWFiaWxpdHkgY29tcGFueS4gICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IFJpc2luZyBUcmVlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTU0MDgxMjcgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggSSwgUmlzaW5nIFRyZWUgSUkgYW5kIFJpc2luZyBUcmVlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDE1NDA4MTI3ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IElJSSB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxNTQwODEyNyBhcmUgc29tZXRpbWVzIHJlZmVycmVkIHRvIGhlcmVpbiBpbmRpdmlkdWFsbHkgYXMgYSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDg4NjUwNTcgQ28tT3duZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTU0MDgxMjcgXCc5NA0KIGFuZCBjb2xsZWN0aXZlbHkgYXMgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ4ODY1MDU3IENvLU93bmVyc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxNTQwODEyNyBcJzk0LiBUaGUgQ28tT3duZXJzIGFyZSBjb2xsZWN0aXZlbHkgcmVmZXJyZWQgdG8gaGVyZWluIGFzIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ4ODY1MDU3IFBhcnRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQzNDM4MDc4IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTU0MDgxMjcgIGFuZCBpbmRpdmlkdWFsbHkgYXMgYSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkODg2NTA1NyBQYXJ0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxNTQwODEyNyBcJzk0Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggQS5cdGFiIH17XHJ0bGNoXGZjczEgXGFiMFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMzk1MTQyNSBUaGUgUGFydGllcyBoYXZlIGVudGVyZWQgaW50byB0aGF0IGNlcnRhaW4gdW5yZWNvcmRlZCB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ5NDQ2NzUgUmlzaW5nIFRyZWV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTU0MDgxMjcgIH17XHJ0bGNoXGZjczEgXGFiMFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMzk1MTQyNSBTaGFyZWQgRmFjaWxpdGllcyBBZ3JlZW1lbnQgfXtccnRsY2hcZmNzMSBcYWIwXGFmMCBcbHRyY2hcZmNzMCANClxiMFxpbnNyc2lkMzQzODA3OCBkYXRlZCBEZWNlbWJlciAzLCAyMDE0IH17XHJ0bGNoXGZjczEgXGFiMFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMzk1MTQyNSAodGhlIFwnOTN9e1xydGxjaFxmY3MxIFxhYjBcYWYwIFxsdHJjaFxmY3MwIFxiMFx1bFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDM5NTE0MjUgQWdyZWVtZW50fXtccnRsY2hcZmNzMSBcYWIwXGFmMCBcbHRyY2hcZmNzMCANClxiMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDM5NTE0MjUgXCc5NCksIHdoaWNoIGFmZmVjdHMgKGkpIGNlcnRhaW4gcmVhbCBwcm9wZXJ0eSBtb3JlIHBhcnRpY3VsYXJseSBkZXNjcmliZWQgaW4gRXhoaWJpdCBBIGF0dGFjaGVkIGhlcmV0byBhbmQgbWFkZSBhIHBhcnQgaGVyZW9mIChzdWNoIHJlYWwgcHJvcGVydHkgY29sbGVjdGl2ZWx5LCB0aGUgXCc5M317XHJ0bGNoXGZjczEgXGFiMFxhZjAgXGx0cmNoXGZjczAgDQpcYjBcdWxcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQzOTUxNDI1IFByb3BlcnR5fXtccnRsY2hcZmNzMSBcYWIwXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQzOTUxNDI1IFwnOTQpLn17XHJ0bGNoXGZjczEgXGFiMFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4ICAgQSBtZW1vcmFuZHVtIG9mIHRoZSBBZ3JlZW1lbnQgd2FzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxiMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDI1NjIwODAgcmVjb3JkZWQgaW4gdGhlIE9mZmljaWFsIFJlY29yZHMgb2YgS2VybiBDb3VudHksIENhbGlmb3JuaWEgb24gRGVjZW1iZXIgMTAsIDIwMTQsIGFzIEluc3RydW1lbnQgTm8uIDAyMTQxNTI3NTl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4IC59e1xydGxjaFxmY3MxIFxhYjBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OCANCg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IEIuXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4IFRoZSBQYXJ0aWVzIGhhdmUgZW50ZXJlZCBpbnRvIGEgRmlyc3QgQW1lbmRtZW50IHRvIFJpc2luZyBUcmVlIFNoYXJlZCBGYWNpbGl0aWVzIEFncmVlbWVudCBvZiBldmVuIGRhdGUgaGVyZXdpdGggKHRoZSBcJzkzQW1lbmRtZW50XCc5NA0KKS4gIFJlZmVyZW5jZXMgaGVyZWluIHRvIHRoZSBBZ3JlZW1lbnQgbWVhbiB0aGUgQWdyZWVtZW50IGFzIGFtZW5kZWQgYnkgdGhlIEZpcnN0IEFtZW5kbWVudCwgdW5sZXNzIHRoZSBjb250ZXh0IHJlcXVpcmVzIG90aGVyd2lzZS59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMjU2MjA4MCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBDLlx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDU5MDgzOCBUaGUgUGFydGllcyBoYXZlIGV4ZWN1dGVkIGFuZCBhY2tub3dsZWRnZWQgdGhpcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4IEFtZW5kZWQgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNTkwODM4IE1lbW9yYW5kdW0gYW5kIGFyZSByZWNvcmRpbmcgdGhlIHNhbWUgZm9yIHRoZSBwdXJwb3NlIG9mIHByb3ZpZGluZyBjb25zdHJ1Y3RpdmUgbm90aWNlIG9mIHRoZSBBZ3JlZW1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4ICwgYXMgYW1lbmRlZCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcYjBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ1OTA4MzggIGFuZCB0aGUgUGFydGllc1xycXVvdGUgIHJpZ2h0cyB0aGVyZXVuZGVyLiAgQ2FwaXRhbGl6ZWQgdGVybXMgdXNlZCBhbmQgbm90IGRlZmluZWQgaGVyZWluIGhhdmUgdGhlIG1lYW5pbmcgZ2l2ZW4gdGhlIHNhbWUgaW4gdGhlIEFncmVlbWVudC4NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczRccWogXGxpMTQ0MFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cb3V0bGluZWxldmVsM1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjhcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQp7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggTk9XLCBUSEVSRUZPUkUsIHRoZSBQYXJ0aWVzIGhlcmVieSBhZ3JlZSBhcyBmb2xsb3dzOg0KXHBhciB9XHBhcmQgXGx0cnBhclxzNFxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWwzXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IDEuXHRhYiB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgDQpcYlxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDEwNTYyMjUzIEdyYW50IG9mIFJpZ2h0c317XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxMDU2MjI1MyAuICBTdWJqZWN0IHRvIHRoZSB0ZXJtcyBhbmQgY29uZGl0aW9ucyBvZiB1c2Ugc2V0IGZvcnRoIGluIHRoZSBBZ3JlZW1lbnQgYW5kIHRoZQ0KIHRlcm1zIGFuZCBjb25kaXRpb25zIGluIGVhY2ggb2YgdGhlIFNoYXJlZCBSZWFsIFByb3BlcnR5IEFncmVlbWVudHN9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IDp9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTA1NjIyNTMgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM0IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjggXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChjKVx0YWJ9fVxwYXJkIFxsdHJwYXJcczRccWogXGZpNzIwXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgyMTYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMyXGlsdmwzXG91dGxpbmVsZXZlbDNcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQxNDA3OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANCmVhY2ggQ28tT3duZXIgb2YgU2hhcmVkIEZhY2lsaXRpZXMgYW5kL29yIFNoYXJlZCBSZWFsIFByb3BlcnR5IGluIGEgU2hhcmVkIEFzc2V0cyBHcm91cCAoYSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ1NTI0MzMxIEdyYW50aW5nIENvLU93bmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBcJzk0DQopIGhlcmVieSBzZWxscywgZ3JhbnRzLCBhc3NpZ25zLCB0cmFuc2ZlcnMgYW5kIGNvbnZleXMgdG8gdGhlIG90aGVyIENvLU93bmVyDQpzIG9mIFNoYXJlZCBGYWNpbGl0aWVzIGFuZC9vciBTaGFyZWQgUmVhbCBQcm9wZXJ0eSBpbiBzdWNoIFNoYXJlZCBBc3NldHMgR3JvdXAgYW4gdW5kaXZpZGVkIGludGVyZXN0LCBhcyB0ZW5hbnRzLWluLWNvbW1vbiwgaW4gc3VjaCBTaGFyZWQgQXNzZXRzIEdyb3VwLCBpbmNsdWRpbmcgc3VjaCByaWdodHMsIGJlbmVmaXRzIGFuZCBpbnRlcmVzdHMgYXMgdGhlIEdyYW50aW5nIENvLU93bmVyIG1heSBoYXZlIGluLCB0byBvciB1bmRlciBhbnkgZGUNCmUNCmRzLCBjb252ZXlhbmNlcywgZ3JhbnRzLCBlYXNlbWVudHMsIGFncmVlbWVudHMsIGxlYXNlcyBvciBvdGhlciBpbnN0cnVtZW50cyBvciBkb2N1bWVudHMgY3JlYXRpbmcsIGdyYW50aW5nLCBhc3NpZ25pbmcgb3IgY29udmV5aW5nIHRoZSBHcmFudGluZyBDby1Pd25lciBpdHMgcmlnaHQsIHRpdGxlIGFuZCBpbnRlcmVzdCBpbiBzdWNoIFNoYXJlZCBBc3NldCBHcm91cCwgc3VjaCB0aGF0IGVhY2ggc3VjaCBDby1Pd25lciBzaGFsbCBvd24gYW4gdQ0KbmRpdmlkZWQgaW50ZXJlc3QsIGFzIGEgdGVuYW50LWluLWNvbW1vbiwgaW4gdGhlIGFwcGxpY2FibGUgU2hhcmVkIEFzc2V0cyBHcm91cCBlcXVhbCB0byBpdHMgUHJvcG9ydGlvbmF0ZSBTaGFyZSBpbiBzdWNoIFNoYXJlZCBBc3NldHMgR3JvdXAgYXMgZGVzY3JpYmVkIGluIEV4aGliaXQgQiB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkMTM1MDczMTIgDQphdHRhY2hlZCB0byB0aGUgQWdyZWVtZW50O317XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxMzUwNzMxMiANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczQgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyOCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGQpXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IGVhY2ggQ28tT3duZXIgd2hvIGhhcyBhbiBPd25lcnNoaXAgSW50ZXJlc3QgaW4gYSBTaGFyZWQgQXNzZXRzDQogR3JvdXAgc2hhbGwgaGF2ZSBhbiB1bmRpdmlkZWQgcmlnaHQgdG8gdGhlIHVzZSBvciBjYXBhY2l0eSBvZiB0aGUgU2hhcmVkIEFzc2V0cyBpbiBzdWNoIFNoYXJlZCBBc3NldCBHcm91cCBlcXVhbCB0byBpdHMgUHJvcG9ydGlvbmF0ZSBTaGFyZSB0aGVyZWluLCB3aGljaCByaWdodCBpcyBleGVyY2lzYWJsZSB1cG9uIHRoZSBDb21taXNzaW9uaW5nIERhdGUgb2YgaXRzIEZhY2lsaXR5LCBhbGwgYXMgbW9yZSBwYXJ0aWN1bGFybHkgc2V0IGZvcnQNCmggaW4gdGhlIEFncmVlbWVudC4gIEluIGFkZGl0aW9uLCBlYWNoIENvLU93bmVyIHNoYWxsIGhhdmUgYSBub24tZXhjbHVzaXZlIHJpZ2h0IG9mIGFjY2VzcyAoYSlcfnRvIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBpbiB3aGljaCBpdCBoYXMgYW4gVW5kaXZpZGVkIFVzZSBJbnRlcmVzdCBhcyBwcm92aWRlZCBpbiB0aGUgQWdyZWVtZW50LCBhbmQgKGIpXH4NCm92ZXIgYW55IFNoYXJlZCBSZWFsIFByb3BlcnR5IHVuZGVybHlpbmcgb3IgcmVxdWlyZWQgZm9yIHRoZSB1c2Ugb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzIGluIHdoaWNoIHN1Y2ggQ28tT3duZXIgaGFzIGFuIFVuZGl2aWRlZCBVc2UgSW50ZXJlc3QsIHN1YmplY3QgdG8gdGhlIHRlcm1zIGFuZCBjb25kaXRpb25zIGNvbnRhaW5lZCBpbiB0aGUgQWdyZWVtZW50LiANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczFccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDU5MDgzOCAyLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNDQ4MTgyNSBUZXJtfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNTkwODM4IC4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDk0NDY3NSBUaGlzIEFncmVlbWVudCBpcyBlZmZlY3RpdmUgYXMgb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OCBEZWNlbWJlciAzLCAyMDE0fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTQ0Njc1ICBhbmQgc2hhbGwgcmVtYWluIGluIGZvcmNlIGFuZCBlZmZlY3QgdW50aWwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OCAoaSkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDk0NDY3NSB0aGUgZWFybGllc3QgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGIwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNzc0NjY5MiBvZiAodilcfn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDM0MzgwNzggRGVjZW1iZXIgMywgMjA0OX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ3NzQ2NjkyICwgKHcpIHRoZSBleHBpcmF0aW9uIGRhdGUgb2YgdGhlIEludGVyY29ubmVjdGlvbiBBZ3JlZW1lbnQsfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkOTQ0Njc1ICAoeCkgdGhlIGRhdGUgdGhhdCBhbGwgaW50ZXJlc3RzIGluIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBhbmQgdGhlIFNoYXJlZCBSZWFsIFByb3BlcnR5IGFyZSBvd25lZCBieSBhIHNpbmdsZSBQZXJzb24sICh5KVx+dGhlIHJldGlyZW1lbnQgYW5kIGZpbmFsIGRpc3Bvc2l0aW9uDQogb2YgYWxsIGNvbXBvbmVudHMgb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzIGFuZCBhbGwgU2hhcmVkIFJlYWwgUHJvcGVydHksIGFuZCAoeikgdGhlIGRhdGUgdGhhdCBhbGwgQ28tT3duZXJzIGFuZCB0aGVpciBMZW5kZXJzIHVuYW5pbW91c2x5IGFncmVlIHRvIHRlcm1pbmF0ZSB0aGlzIEFncmVlbWVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDM0MzgwNzggLCBvciB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ3NzQzNzMyIChpaSkgc3VjaCBvdGhlciBkYXRlIChidXQgbm8gbGF0ZXIgdGhhbiBuaW5ldHktbmluZSAoOTkpIHllYXJzIGFmdGVyIHRoZSBFZmZlY3RpdmUgRGF0ZSkgYXMgbWF5IGJlIHVuYW5pbW91c2x5IGFncmVlZCBieSBhbGwgb2YgdGhlIENvLU93bmVycyBhbmQgdGhlaXIgTGVuZGVyc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxiMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDk0NDY3NSAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OCAzLlx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDQ0ODE4MjUgT3RoZXIgUHJvdmlzaW9uc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggLiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNTkwODM4IA0KVGhlIHJpZ2h0cyBncmFudGVkIGhlcmV1bmRlciBhcmUgb2YgdGhlIG5hdHVyZSwgYW5kIGFyZSBzdWJqZWN0IHRvIHRoZSByZXF1aXJlbWVudHMgYW5kIGxpbWl0YXRpb25zLCBzZXQgZm9ydGggaW4gdGhlIEFncmVlbWVudC4gVGhlIEFncmVlbWVudCBhbHNvIGNvbnRhaW5zIHZhcmlvdXMgY292ZW5hbnRzLCBvYmxpZ2F0aW9ucyBhbmQgcmlnaHRzIG9mIHRoZSBQYXJ0aWVzLCBpbmNsdWRpbmcsIHdpdGhvdXQgbGltaXRhdGlvbiwgcHJvdmlzaW9uDQpzIHJlbGF0aW5nIHRvIHVzZSwgY29uZHVjdCBvZiBvcGVyYXRpb25zLCBhc3NpZ25tZW50LCBvd25lcnNoaXAgb2YgaW1wcm92ZW1lbnRzLCBmZWVzLCBkZWZhdWx0LCBjdXJlIHJpZ2h0cyBhbmQgbGVuZGVyIHByb3RlY3Rpb25zLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDM0MzgwNzggNC5cdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ0NDgxODI1IFB1cnBvc2Ugb2YgdGhpcyBNZW1vcmFuZHVtfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAuIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxiMFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDU5MDgzOCBUaGUgdGVybXMsIGNvbmRpdGlvbnMgYW5kIGNvdmVuYW50cyBvZiB0aGUgQWdyZWVtZW50IGFyZSBpbmNvcnBvcmF0ZWQgaGVyZWluIGJ5IHJlZmVyZW5jZSBhcyB0DQpob3VnaCBmdWxseSBzZXQgZm9ydGggaGVyZWluLiBUaGlzIE1lbW9yYW5kdW0gZG9lcyBub3Qgc3VwZXJzZWRlLCBtb2RpZnksIGFtZW5kIG9yIG90aGVyd2lzZSBjaGFuZ2UgdGhlIHRlcm1zLCBjb25kaXRpb25zIG9yIGNvdmVuYW50cyBvZiB0aGUgQWdyZWVtZW50LCBhbmQgdGhpcyBNZW1vcmFuZHVtIHNoYWxsIG5vdCBiZSB1c2VkIGluIGludGVycHJldGluZyB0aGUgdGVybXMsIGNvbmRpdGlvbnMgb3IgY292ZW5hbnRzIG9mIHRoZSBBZ3JlZW0NCmVudC4gSW4gdGhlIGV2ZW50IG9mIGFueSBjb25mbGljdCBiZXR3ZWVuIHRoaXMgTWVtb3JhbmR1bSBhbmQgdGhlIEFncmVlbWVudCwgdGhlIEFncmVlbWVudCBzaGFsbCBjb250cm9sLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDM0MzgwNzggNS5cdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ0NDgxODI1IEJpbmRpbmcgb24gU3VjY2Vzc29ycyBhbmQgQXNzaWduc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggLiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGIwXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNTkwODM4IFRoZSBQYXJ0aWVzIGhlcmVieSBhZ3JlZSB0aGF0IGFsbCBvZiB0aGUgY292ZW5hbnRzLCBjb25zZW50cyBhbmQgYWdyZWVtZW50cyBjb250YWluZWQgaW4gdGhlIEFncmVlbWVudCB0b3VjaCBhbmQNCiBjb25jZXJuIHRoZSBQcm9wZXJ0eSBhbmQgYXJlIGV4cHJlc3NseSBpbnRlbmRlZCB0bywgYW5kIHNoYWxsLCBiZSBjb3ZlbmFudHMgcnVubmluZyB3aXRoIHRoZSBsYW5kIGFuZCBzaGFsbCBiZSBiaW5kaW5nIGFuZCBhIGJ1cmRlbiB1cG9uIHNhaWQgcmVhbCBlc3RhdGUgYW5kIGVhY2ggUGFydHlccnF1b3RlIA0KcyBwcmVzZW50IG9yIGZ1dHVyZSBlc3RhdGUgb3IgaW50ZXJlc3QgdGhlcmVpbiBhbmQgdXBvbiBlYWNoIG9mIHRoZSBQYXJ0aWVzLCB0aGVpciByZXMNCnBlY3RpdmUgc3VjY2Vzc29ycyBhbmQgYXNzaWducyBhcyBob2xkZXJzIG9mIGFuIGVzdGF0ZSBvciBpbnRlcmVzdCBpbiBzYWlkIHJlYWwgZXN0YXRlIChpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uLCBhbnkgbGVuZGVyIG9yIG90aGVyIHBlcnNvbiBhY3F1aXJpbmcgdGl0bGUgZnJvbSBhbnkgc3VjaCBwZXJzb24gdXBvbiBmb3JlY2xvc3VyZSBvciBieSBkZWVkIGluIGxpZXUgb2YgZm9yZWNsb3N1cmUpLCBhbmQgc2hhbGwgYmVuZWZpdCB0aA0KZQ0KIFBhcnRpZXMgYW5kIHRoZWlyIHJlc3BlY3RpdmUgc3VjY2Vzc29ycyBhbmQgYXNzaWducyBhbmQgdGhlIHJlYWwgZXN0YXRlIGFuZCBhbnkgcHJlc2VudCBvciBmdXR1cmUgaG9sZGVyIG9mIGFuIGVzdGF0ZSBvciBpbnRlcmVzdCB0aGVyZWluLiAgVG8gdGhlIGV4dGVudCBhbnkgb2YgdGhlIHByb3Zpc2lvbnMgb2YgdGhpcyBBZ3JlZW1lbnQgYXJlIG5vdCBlbmZvcmNlYWJsZSBhcyBjb3ZlbmFudHMgcnVubmluZyB3aXRoIHRoZSBsYW5kLCB0aGV5DQogc2hhbGwgYmUgZW5mb3JjZWFibGUgYXMgZXF1aXRhYmxlIHNlcnZpdHVkZXMufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMzQzODA3OCA2Llx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDQ0ODE4MjUgQ291bnRlcnBhcnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCAuIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ1OTA4MzggDQpUaGlzIE1lbW9yYW5kdW0gbWF5IGJlIGV4ZWN1dGVkIGluIGNvdW50ZXJwYXJ0cywgZWFjaCBvZiB3aGljaCBzaGFsbCBiZSBkZWVtZWQgYW4gb3JpZ2luYWwgYW5kIGFsbCBvZiB3aGljaCB3aGVuIHRha2VuIHRvZ2V0aGVyIHNoYWxsIGNvbnN0aXR1dGUgb25lIGFuZCB0aGUgc2FtZSBkb2N1bWVudC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWJcYWYwIA0KXGx0cmNoXGZjczAgXGJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ0NDgxODI1IFtTSUdOQVRVUkVTIE9OIE5FWFQgUEFHRV19e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDM0MzgwNzggDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxN1xxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcdHg3MjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMzQzODA3OCAgXHBhZ2UgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBJTiBXSVRORVNTIFdIRVJFT0YsIHRoZSBQYXJ0aWVzIGhhdmUgY2F1c2VkIHRoaXMgTWVtb3JhbmR1bSB0byBiZSBleGVjdXRlZCBhcyBvZiB0aGUgZGF0ZSBmaXJzdCB3cml0dGVuIGFib3ZlLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMjhccWwgXGxpNDMyMFxyaTBcc2EyNDBcd2lkY3RscGFyXHRxclx0eDkyMzRcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjQzMjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMzQzODA3OCBSaXNpbmcgVHJlZSBXaW5kIEZhcm0gTExDXGxpbmUgXGxpbmUgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMzQzODA3OCBcdGFiIFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggQnk6XGxpbmUgVGl0bGU6DQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMzQzODA3OCBcbGluZSBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQzNDM4MDc4IFx0YWIgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBCeTpcbGluZSBUaXRsZToNClxwYXIgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMzQzODA3OCBSaXNpbmcgVHJlZSBXaW5kIEZhcm0gSUkgTExDXGxpbmUgXGxpbmUgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMzQzODA3OCBcdGFiIFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggQnk6XGxpbmUgVGl0bGU6DQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMzQzODA3OCBcbGluZSBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQzNDM4MDc4IFx0YWIgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBCeTpcbGluZSBUaXRsZToNClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQzNDM4MDc4IA0KXHBhciBSaXNpbmcgVHJlZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQ1MDU4NzU0IFdpbmQgRmFybSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDM0MzgwNzggSUlJfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQzNDM4MDc4XGNoYXJyc2lkNTA1ODc1NCAgTExDDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0MzgwNzggIF9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXw0KXHBhciB9XHBhcmQgXGx0cnBhclxzMjhccWwgXGxpNDMyMFxyaTBcd2lkY3RscGFyXHRxclx0eDkyMzRcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjQzMjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBCeToNClxwYXIgVGl0bGU6DQpccGFyIH1ccGFyZCBcbHRycGFyXHMyOFxxbCBcbGk0MzIwXHJpMFxzYTI0MFx3aWRjdGxwYXJcdHFyXHR4OTIzNFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNDMyMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDM0MzgwNzggXGxpbmUgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMzQzODA3OCANClx0YWIgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBCeTpcbGluZSBUaXRsZToNClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzggXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMzQzODA3OCBbQWRkIG5vdGFyaWFsIGFja25vd2xlZGdtZW50c10NClxwYXIgfVxwYXJkIFxsdHJwYXJcczE1XHFjIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDM0MzgwNzgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IFxwYWdlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDE1Njg0NTk3IEVYSElCSVQgQQ0KDQpccGFyIH1ccGFyZCBcbHRycGFyXHMxNVxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcdHgyODgwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMzQzODA3OFxjaGFycnNpZDE1Njg0NTk3IERFU0NSSVBUSU9OIE9GIFRIRSBQUk9QRVJUWQ0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMjhccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzQzODA3OCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQzNDM4MDc4IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMjVccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhYlxhZjFcYWZzMzJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGtlcm5pbmcyOFxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYjBcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQzMDQ2NzUwIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzNDM4MDc4IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDM0MzgwNzhcY2hhcnJzaWQxNDU2ODU0MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczI4XHFjIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE1Njg0NTk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDg0ODU3MzEgDQpccGFyIH17XCpcdGhlbWVkYXRhIDUwNGIwMzA0MTQwMDA2MDAwODAwMDAwMDIxMDA4MjhhYmMxM2ZhMDAwMDAwMWMwMjAwMDAxMzAwMDAwMDViNDM2ZjZlNzQ2NTZlNzQ1ZjU0Nzk3MDY1NzM1ZDJlNzg2ZDZjYWM5MWNiNmFjMzMwMTA0NWY3ODVmZTgzZDBiNmQ4DQo3MmJhMjhhNWQ4Y2VhMjQ5Nzc3ZDJjZDIwZjE4ZTRiMTJkNmE4Zjg0MzQwOWM5ZGY3N2VjYjg1MGJhMDgyZDc0MjMxMDYyY2U5OTdiNTVhZThmZTNhMDBlMTg5M2YzNTRlOTU1NWU2ODg1NjQ3ZGUzYThhYmY0ZmJlZTI5YmJkNw0KMmEzMTUwMDM4MzI3YWNmNDA5OTM1ZWQ3ZDc1N2U1ZWUxNDMwMjk5OWE2NTRlOTllMzkzYzE4OTM2YzhmMjNhNGRjMDcyNDc5Njk3ZDFjODFlNTFhM2IxM2MwN2U0MDg3ZTZiNjI4ZWU4Y2Y1YzQ0ODljZjFjNGQwNzVmOTJhMGINCjQ0ZDdhMDdhODNjODJmMzA4YWM3YjBhMGYwZmJmOTBjMjQ4MDk4MGI1OGFiYzczMzYxNWFhMmQyMTBjMmUwMmNiMDQ0MzAwNzZhN2VlODMzZGZiNmNlNjJlM2VkN2UxNDY5M2U4MzE3ZDhjZDA0MzNiZjVjNjBmNTNmZWEyZmU3DQowNjViZDgwZmFjYjY0N2U5ZTI1YzdmYzQyMWZkMmRkYjUyNmIyZTkzNzNmZWQ0YmI5MDJlMTgyZTk3YjdiNDYxZTZiZmFkM2YwMTAwMDBmZmZmMDMwMDUwNGIwMzA0MTQwMDA2MDAwODAwMDAwMDIxMDBhNWQ2YTdlN2MwMDAwMA0KMDAzNjAxMDAwMDBiMDAwMDAwNWY3MjY1NmM3MzJmMmU3MjY1NmM3Mzg0OGZjZjZhYzMzMDBjODdlZjg1YmQ4M2QxN2Q1MWQyYzMxODI1NzYyZmE1OTA0MzJmYTM3ZDAwZTEyODdmNjgyMjFiZGIxYmViZGI0ZmM3MDYwYWJiMDgNCjg0YTRlZmY3YTkzZGZlYWU4YmY5ZTE5NGU3MjAxNjlhYWEwNmMzZTI0MzNmY2I2OGUxNzYzZGJmN2Y4MmM5ODVhNGE3MjUwODViNzg3MDg2YTM3YmRiYjU1ZmJjNTBkMWEzM2NjZDMxMWJhNTQ4YjYzMDk1MTIwZjg4ZDk0ZmJjDQo1MmFlNDI2NGQxYzkxMGQyNGE0NWRiMzQ2MjI0N2ZhNzkxNzE1ZmQ3MWY5ODllMTllMDM2NGNkM2Y1MTY1MmQ3Mzc2MGFlOGZhOGM5ZmZiM2MzMzBjYzllNGZjMTdmYWYyY2U1NDUwNDZlMzc5NDRjNjllNDYyYTFhODJmZTM1Mw0KYmQ5MGE4NjVhYWQ0MWVkMGI1YjhmOWQ2ZmQwMTAwMDBmZmZmMDMwMDUwNGIwMzA0MTQwMDA2MDAwODAwMDAwMDIxMDA2Yjc5OTYxNjgzMDAwMDAwOGEwMDAwMDAxYzAwMDAwMDc0Njg2NTZkNjUyZjc0Njg2NTZkNjUyZjc0NjgNCjY1NmQ2NTRkNjE2ZTYxNjc2NTcyMmU3ODZkNmMwY2NjNGQwYWMzMjAxMDQwZTE3ZGExNzc5MGQ5Mzc2M2JiMjg0NTYyYjJjYmFlYmJmNjAwNDM5YzFhNDFjN2EwZDI5ZmRiZDdlNWUzODMzN2NlZGYxNGQ1OWI0YjBkNTkyYzljDQowNzBkOGE2NWNkMmU4OGI3ZjA3YzJjYTcxYmE4ZGE0ODFjYzUyYzZjZTFjNzE1ZTZlOTc4MThjOWI0OGQxM2RmNDljODczNTE3ZDIzZDU5MDg1YWRiNWRkMjBkNmI1MmJkNTIxZWYyY2RkNWViOTI0NmEzZDhiNDc1N2U4ZDNmNw0KMjllMjQ1ZWIyYjI2MGEwMjM4ZmQwMTAwMDBmZmZmMDMwMDUwNGIwMzA0MTQwMDA2MDAwODAwMDAwMDIxMDA5NmI1YWRlMjk2MDYwMDAwNTAxYjAwMDAxNjAwMDAwMDc0Njg2NTZkNjUyZjc0Njg2NTZkNjUyZjc0Njg2NTZkNjUNCjMxMmU3ODZkNmNlYzU5NGY2ZmRiMzYxNGJmMGZkODc3MjA3NDZmNjMyNzc2MWEwNzc1OGFkOGIxOWIyZDRkMWJjNDZlODcxZTY5ODk5NmQ4NTBhMjQwZDI0OTdkMWJkYWUzODAwMWMzYmE2MTg3MTVkODZkODc2MTViODExNmQ4DQphNWZiMzRkOTNhNmMxZGQwYWZiMDQ3NTI5MmM1NTg1ZTkyMzZkODhhYWQzZTI0MTJmOWUzZmJmZjFlMWZhOWFiZDdlZWM3MGMxZDEyMjEyOTRmZGE1ZWZkNzJjZDQzMjRmMTc5NDA5M2IwZWRkZDFlZjYyZmFkNzk0ODJhOWMwNA0KOThmMTg0YjRiZDI5OTFkZWI1OGRmN2RmYmI4YWQ3NTU0NDYyODI2MDdkMjJkNzcxZGI4Yjk0NGFkNzk3OTZhNDBmYzM1ODVlZTYyOTQ5NjA2ZWNjNDU4YzE1YmM4YTcwMjkxMGY4MDhlOGM2NmM2OWI5NTY1YjVkOGEzMTRkM2MNCjk0ZTAxOGM4ZGUxYThmYTk0ZmQwNTA5M2Y0MzY3MmUyM2QwNmFmODk5MjdhYzA2NzYyYTA0OTEzNjc4NWMxMDYwNzc1OGQ5MDUzZDk2NTAyMWQ2MmQ2ZjY4MDRmYzA4Zjg2ZTRiZWYyMTBjMzUyYzE0NGRiYWI5OTlmYjdiNDcxDQo3NTA5YWY2NzhiOTg1YWIwYjZiNGFlNmY3ZWQ5YmE2YzQxNzBiMDZjNzg4YTcwNTQzMGFkZjcxYmFkMmI1YjA1N2QwMzYwNmExZWQ3ZWJmNWJhYmQ3YTQxY2YwMGIwZWY4M2E2NTY5NjMyY2Q0NjdmYWRkZWM5Njk5NjQwZjY3MQ0KOWU3NmI3ZDZhYzM1NWM3Yzg5ZmVjYTljY2NhZDRlYTdkMzZjNjViMjU4YTIwNjY0MWYxYjczZjhiNWRhNmE2MzczZDljMTFiOTBjNTM3ZTdmMDhkY2U2NmI3YmJlYWUwMGRjOGUyNTdlN2YwZmQyYmFkZDU4NjhiMzdhMDg4ZDENCmU0NjAwZWFkMWRkYWVmNjdkNDBiYzg5OGIzZWQ0YWY4MWFjMGQ3NmExOTdjODY4MjY4MjhhMjRiYjMxOGYzNDQyZDhhYjUxOGRmZTNhMjBmMDAwZDY0NThkMTA0YTk2OTRhYzZkODg3MjhlZWUyNzgyNDI4ZDYwY2YwM2FjMWE1DQoxOTNiZTRjYmI5MjFjZDBiNDk1ZmQwNTRiNWJkMGY1MzBjMTkzMWEzZjdlYWY5ZjdhZjllM2Y0NWM3MGY5ZTFkM2ZmOGU5ZjhlMWMzZTMwNzNmNWE0MmNlYWE2ZDljODRlNTU1MmZiZmZkZWNjZmM3MWZhMzNmOWU3ZWYzZjJkMQ0KMTdkNTc4NTljNmZmZmFjMzI3YmZmY2ZjNzkzNTEwZDI2NzI2Y2U4YjJmOWZmY2Y2ZWNjOThiYWYzZWZkZmRiYjQ3MTVmMDRkODE0NzY1Zjg5MGM2NDRhMjliZTQwOGVkZjMxODE0MzM1NjcxMjUyNzIzNzFiZTE1YzMwOGQzZjINCjhhY2QyNDk0MzhjMTlhNGIwNWZkOWU4YTFjZjRjZDI5NjY5OTc3MWMzOTNhYzRiNWUwMWQwMWU1YTMwYTc4N2Q3MmNmMTE3ODEwODk4OWEyMTU5Yzc3YTJkODAxZWU3MmNlM2E1YzU0NWE2MTQ3ZjMyYTk5NzkzODQ5YzI2YWU2DQo2MjUyYzZlZDYzN2M1OGM1YmI4YjEzYzdiZmJkNDkwYTc1MzMwZjRiNDdmMTZlNDQxYzMxZjcxODRlMTQwZTQ5NDIxNGQyNzNmYzgwOTAwYWVkZWU1MmVhZDg3NTk3ZmE4MjRiM2U1NmU4MmU0NTFkNGMyYjRkMzJhNDIzMjc5YQ0KNjY4YmI2NjkwYzdlOTk1NmU5MGNmZTc2NmNiMzdiMDc3NTM4YWJkMjdhOGIxY2JhNDhjODBhY2MyYTg0MWYxMmU2OThmMTNhOWUyODFjNTc5MTFjZTI5ODk1MGQ3ZTAzYWJhODRhYzhjMTU0Zjg2NTVjNGYyYWYwNzQ0ODE4NDcNCmJkODA0ODU5YjVlNjk2MDA3ZDRiNGVkZmMxNTBiMTJhZGRiZWNiYTZiMThiMTQ4YTFlNTRkMWJjODEzOTJmMjNiN2Y4NDEzN2MyNzE1YTg1MWRkMDI0MmE2MzNmOTAwNzEwYTIxOGVkNzE1NTA1ZGZlNTZlODZlODc3ZjAwMzRlDQoxNmJhZmIwZTI1OGViYjRmYWYwNmI3NjllODg4MzQwYjEwM2QzMzExZGE5NzUwYWE5ZDBhMWNkM2U0ZWZjYTMxYTM1MDhmNmQwYzVjNWMzOTg2MDJmOGUyZWJjNzE1OTFmNWI2MTZlMjRkZDg5M2FhMzI2MWZiNDRmOTVkODQzYg0KNTk3NGJiNWMwNGY0ZWRhZmI5NWI3ODkyZWMxMTA4ZjNmOThkZTc1ZGM5N2Q1NzcyYmRmZjdjYzk1ZDk0Y2Y2NzJkYjRiM2RhMGE2NTU3ZjcwZGI2MjkzNjJkNzJiY2IwNDMxZTUzYzYwNjZhY2FjODBkNjk5YTY0MDlmYjQ0ZDANCjg3NDFiZGNlOWMwZTQ5NzE2MjRhMjM3OGNjZWFiYTgzMGIwNTM2NmI5MGUwZWEyM2FhYTI0MTg0NTM2OGIwZWI5ZTI2MTJjYThjNzQyODUxY2EyNTFjZWNjYzcwMjU2ZDhkODcyNjVkZDk2MzYxNTMxZjE4NmMzZDkwNThlZGYyDQpjMDBlYWZlOGUxZmM1YzUwOTAzMWJiNGQ2ODBlOWYzOWEzMTU0ZGUwYWNjYzU2YWU2NDQ0NDFlZGQ3NjE1NmQ3NDI5ZDk5NWJkZDg4NjY0YTlkYzNhZDUwMTk3YzM4YWYxYTBjMTZkNjg0MDYwNDQxZGIwMjU2NWU4NWYzYjk2Ng0KMGQwNzEzY2M0OGEwZWQ2ZWY3ZGVkYzJkYzYwYjE3ZTkyMjE5ZTE4MDY0M2VkMjdhY2ZmYmE4NmU5Yzk0Yzc4YWI5MDk4MGQ4YTlmMDkxM2VlNDlkNjJiNTEyYjc5NjI2ZmIwNmRjY2VlMmE0MzJiYmM2MDI3NmI5ZjdkZWM0NGINCjc5MDRjZmJjYTRmM2Y2NDQzYWIyYTQ5YzljMmM0MTQ3NmRhZmQ1NWM2ZTdhYzhjNzY5ZGIxYmMzOTkxNjFlZTMxNGJjMmU3NWNmODc1OTA4MTc0M2JlMTIzNmVjNGY0ZDY2OTNlNTMzNmZiNjcyYzVkYzI0YThjMzM1ODViNWZiDQo5Y2MyNGUxZDQ4ODU1NDViNTg0NjM2MzRjYzU0MTYwMjJjZDE5Y2FjZmNjYjRkMzBlYjQ1Mjk2MDIzZmQzNWE0NTg1OTgzNjBmOGQ3YTQwMDNiYmFhZTI1ZTMzMWYxNTVkOWQ5YTUxMTZkM2JmYjlhOTU1MjNlNTE0NDBjYTJlMA0KMDg4ZGQ4NDRlYzYzNzBiZjBlNTVkMDI3YTAxMmFlMjY0YzQ1ZDAyZjcwOGZhNmFkNmRhNmRjZTI5YzI1NWRmOWY2Y2FlMGVjMzg2NjY5ODRiMzcyYWI1MzM0Y2Y2NDBiMzc3OTVjYzg2MGRlNGFlMjgxNmU5NWIyMWJlNWNlYWYNCjhhNDlmOTBiNTJhNTFjYzZmZjMzNTVmNDdlMDIzNzA1MmI4MWY2ODAwZmQ3YjgwMjIzOWRhZjZkOGYwYjE1NzFhODQyNjk0NGZkYmU4MGM2YzFkNDBlODgxNmI4OGI4NTY5MDgyYWI4NGMzNmZmMDUzOWQ0ZmY2ZGNlNTkxYTI2DQphZGUxYzBhN2Y2Njk4ODA0ODVmZDQ4NDU4MjkwM2QyODRiMjZmYTRlMjE1NmNmZjYyZTRiOTI2NTg0NGM0NDk1YzQ5NWE5MTU3YjQ0MGUwOTFiZWExYWI4YWFmNzc2MGY0NTEwZWFhNjlhNjQ2NWMwZTA0ZWM2OWZmYjllNjVkMA0KMjhkNDRkNGUzOWRmOWMxYTUyZWNiZDM2MDdmZWU5Y2VjNzI2MzMyOGU1ZDY2MWQzZDBlNGY2MmY0NGFjZDg1NWVkN2FiMzNjZGY3YmNiOGFlODg5NTk5YmQ1YzhiMzAyOTg5NWI2ODI1Njk2ZjZhZjI5YzIzOWI3NWE1YmIxZTYNCjM0NWU2ZWU2YzI4MTE3ZTczNTg2YzFhMjIxNGFlMWJlMDdlOTNmYjBmZjUxZTEzM2ZiNjU0MjZmYTg0M2JlMGZiNTE1YzE4NzA2NGQwY2MyMDZhMmZhOTI2ZDNjOTAyZTkwNzY3MDA0OGQ5MzFkYjRjMWE0NDk1OWQzNjZhZDkzDQpiNjVhYmU1OTVmNzBhNzViZjAzZDYxNmMyZGQ5NTlmYzdkNGU2MzE3Y2Q5OWNiY2VjOWM1OGIzNDc2NjY2MWM3ZDY3NjZjYTFhOWMxYjMyNzUzMTQ4NmM2Zjk0MWM2MzhjNjdjZDIyYTdmNzVlMmEzN2JlMGU4MmRiOGRmOWYzMA0KMjU0ZDMwYzEzNzI1ODFhMWY1MWM5ODNjODBlNGI3MWNjZGQyOGRiZjAwMDAwMGZmZmYwMzAwNTA0YjAzMDQxNDAwMDYwMDA4MDAwMDAwMjEwMDBkZDE5MDlmYjYwMDAwMDAxYjAxMDAwMDI3MDAwMDAwNzQ2ODY1NmQ2NTJmNzQNCjY4NjU2ZDY1MmY1ZjcyNjU2YzczMmY3NDY4NjU2ZDY1NGQ2MTZlNjE2NzY1NzIyZTc4NmQ2YzJlNzI2NTZjNzM4NDhmNGQwYWMyMzAxNDg0Zjc4Mjc3MDg2ZjZmZDNiYTEwOTEyNmRkODhkMGFkZDQwMzg0ZTQzNTBkMzYzZjI0DQo1MWVjZWQwZGFlMmMwODJlODc2MWJlOTk2OWJiOTc5ZGM5MTM2MzMyZGUzMTY4YWExYTA4M2FlOTk1NzE5YWMxNmRiOGVjOGU0MDUyMTY0ZTg5ZDkzYjY0YjA2MDgyOGU2ZjM3ZWQxNTY3OTE0YjI4NGQyNjI0NTIyODJlMzE5OA0KNzIwZTI3NGE5MzljZDA4YTU0Zjk4MGFlMzhhMzhmNTZlNDIyYTNhNjQxYzhiYmQwNDhmNzc1N2RhMGYxOWIwMTdjYzUyNGJkNjIxMDdiZDUwMDE5OTY1MDlhZmZiM2ZkMzgxYTg5NjcyZjFmMTY1ZGZlNTE0MTczZDk4NTA1MjgNCmEyYzZjY2UwMjM5YmFhNGMwNGNhNWJiYWJhYzRkZjAwMDAwMGZmZmYwMzAwNTA0YjAxMDIyZDAwMTQwMDA2MDAwODAwMDAwMDIxMDA4MjhhYmMxM2ZhMDAwMDAwMWMwMjAwMDAxMzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwDQowMDAwMDAwMDViNDM2ZjZlNzQ2NTZlNzQ1ZjU0Nzk3MDY1NzM1ZDJlNzg2ZDZjNTA0YjAxMDIyZDAwMTQwMDA2MDAwODAwMDAwMDIxMDBhNWQ2YTdlN2MwMDAwMDAwMzYwMTAwMDAwYjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMA0KMDAyYjAxMDAwMDVmNzI2NTZjNzMyZjJlNzI2NTZjNzM1MDRiMDEwMjJkMDAxNDAwMDYwMDA4MDAwMDAwMjEwMDZiNzk5NjE2ODMwMDAwMDA4YTAwMDAwMDFjMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAxNDAyMDAwMDc0NjgNCjY1NmQ2NTJmNzQ2ODY1NmQ2NTJmNzQ2ODY1NmQ2NTRkNjE2ZTYxNjc2NTcyMmU3ODZkNmM1MDRiMDEwMjJkMDAxNDAwMDYwMDA4MDAwMDAwMjEwMDk2YjVhZGUyOTYwNjAwMDA1MDFiMDAwMDE2MDAwMDAwMDAwMDAwMDAwMDAwDQowMDAwMDAwMGQxMDIwMDAwNzQ2ODY1NmQ2NTJmNzQ2ODY1NmQ2NTJmNzQ2ODY1NmQ2NTMxMmU3ODZkNmM1MDRiMDEwMjJkMDAxNDAwMDYwMDA4MDAwMDAwMjEwMDBkZDE5MDlmYjYwMDAwMDAxYjAxMDAwMDI3MDAwMDAwMDAwMA0KMDAwMDAwMDAwMDAwMDAwMDliMDkwMDAwNzQ2ODY1NmQ2NTJmNzQ2ODY1NmQ2NTJmNWY3MjY1NmM3MzJmNzQ2ODY1NmQ2NTRkNjE2ZTYxNjc2NTcyMmU3ODZkNmMyZTcyNjU2YzczNTA0YjA1MDYwMDAwMDAwMDA1MDAwNTAwNWQwMTAwMDA5NjBhMDAwMDAwMDB9DQp7XCpcY29sb3JzY2hlbWVtYXBwaW5nIDNjM2Y3ODZkNmMyMDc2NjU3MjczNjk2ZjZlM2QyMjMxMmUzMDIyMjA2NTZlNjM2ZjY0Njk2ZTY3M2QyMjU1NTQ0NjJkMzgyMjIwNzM3NDYxNmU2NDYxNmM2ZjZlNjUzZDIyNzk2NTczMjIzZjNlMGQwYTNjNjEzYTYzNmM3MjRkDQo2MTcwMjA3ODZkNmM2ZTczM2E2MTNkMjI2ODc0NzQ3MDNhMmYyZjczNjM2ODY1NmQ2MTczMmU2ZjcwNjU2ZTc4NmQ2YzY2NmY3MjZkNjE3NDczMmU2ZjcyNjcyZjY0NzI2MTc3Njk2ZTY3NmQ2YzJmMzIzMDMwMzYyZjZkNjE2OQ0KNmUyMjIwNjI2NzMxM2QyMjZjNzQzMTIyMjA3NDc4MzEzZDIyNjQ2YjMxMjIyMDYyNjczMjNkMjI2Yzc0MzIyMjIwNzQ3ODMyM2QyMjY0NmIzMjIyMjA2MTYzNjM2NTZlNzQzMTNkMjI2MTYzNjM2NTZlNzQzMTIyMjA2MTYzNjMNCjY1NmU3NDMyM2QyMjYxNjM2MzY1NmU3NDMyMjIyMDYxNjM2MzY1NmU3NDMzM2QyMjYxNjM2MzY1NmU3NDMzMjIyMDYxNjM2MzY1NmU3NDM0M2QyMjYxNjM2MzY1NmU3NDM0MjIyMDYxNjM2MzY1NmU3NDM1M2QyMjYxNjM2MzY1NmU3NDM1MjIyMDYxNjM2MzY1NmU3NDM2M2QyMjYxNjM2MzY1NmU3NDM2MjIyMDY4NmM2OTZlNmIzZDIyNjg2YzY5NmU2YjIyMjA2NjZmNmM0ODZjNjk2ZTZiM2QyMjY2NmY2YzQ4NmM2OTZlNmIyMjJmM2V9DQp7XCpcbGF0ZW50c3R5bGVzXGxzZHN0aW1heDI2N1xsc2Rsb2NrZWRkZWYwXGxzZHNlbWloaWRkZW5kZWYwXGxzZHVuaGlkZXVzZWRkZWYwXGxzZHFmb3JtYXRkZWYwXGxzZHByaW9yaXR5ZGVmMHtcbHNkbG9ja2VkZXhjZXB0IFxsc2RxZm9ybWF0MSBcbHNkbG9ja2VkMCBOb3JtYWw7XGxzZHFmb3JtYXQxIFxsc2Rsb2NrZWQwIGhlYWRpbmcgMTtcbHNkcWZvcm1hdDEgXGxzZGxvY2tlZDAgaGVhZGluZyAyOw0KXGxzZHFmb3JtYXQxIFxsc2Rsb2NrZWQwIGhlYWRpbmcgMztcbHNkcWZvcm1hdDEgXGxzZGxvY2tlZDAgaGVhZGluZyA0O1xsc2RxZm9ybWF0MSBcbHNkbG9ja2VkMCBoZWFkaW5nIDU7XGxzZHFmb3JtYXQxIFxsc2Rsb2NrZWQwIGhlYWRpbmcgNjtcbHNkcWZvcm1hdDEgXGxzZGxvY2tlZDAgaGVhZGluZyA3O1xsc2RxZm9ybWF0MSBcbHNkbG9ja2VkMCBoZWFkaW5nIDg7XGxzZHFmb3JtYXQxIFxsc2Rsb2NrZWQwIGhlYWRpbmcgOTsNClxsc2Rwcmlvcml0eTM5IFxsc2Rsb2NrZWQwIHRvYyAxO1xsc2Rwcmlvcml0eTM5IFxsc2Rsb2NrZWQwIHRvYyAyO1xsc2Rwcmlvcml0eTk0IFxsc2Rsb2NrZWQwIGZvb3Rub3RlIHRleHQ7XGxzZHByaW9yaXR5OTkgXGxzZGxvY2tlZDAgYW5ub3RhdGlvbiB0ZXh0O1xsc2Rwcmlvcml0eTk5IFxsc2Rsb2NrZWQwIGhlYWRlcjtcbHNkcHJpb3JpdHk5OSBcbHNkbG9ja2VkMCBmb290ZXI7DQpcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2RxZm9ybWF0MSBcbHNkbG9ja2VkMCBjYXB0aW9uO1xsc2Rwcmlvcml0eTk5IFxsc2Rsb2NrZWQwIGZvb3Rub3RlIHJlZmVyZW5jZTtcbHNkcHJpb3JpdHk5OSBcbHNkbG9ja2VkMCBhbm5vdGF0aW9uIHJlZmVyZW5jZTtcbHNkcWZvcm1hdDEgXGxzZGxvY2tlZDAgVGl0bGU7XGxzZHFmb3JtYXQxIFxsc2Rsb2NrZWQwIFN1YnRpdGxlOw0KXGxzZHFmb3JtYXQxIFxsc2Rsb2NrZWQwIFN0cm9uZztcbHNkcWZvcm1hdDEgXGxzZGxvY2tlZDAgRW1waGFzaXM7XGxzZHByaW9yaXR5OTkgXGxzZGxvY2tlZDAgYW5ub3RhdGlvbiBzdWJqZWN0O1xsc2Rwcmlvcml0eTk5IFxsc2Rsb2NrZWQwIE5vIExpc3Q7XGxzZHByaW9yaXR5OTkgXGxzZGxvY2tlZDAgQmFsbG9vbiBUZXh0O1xsc2RzZW1paGlkZGVuMSBcbHNkcHJpb3JpdHk5OSBcbHNkbG9ja2VkMCBQbGFjZWhvbGRlciBUZXh0Ow0KXGxzZHFmb3JtYXQxIFxsc2Rwcmlvcml0eTggXGxzZGxvY2tlZDAgTm8gU3BhY2luZztcbHNkcHJpb3JpdHk2MCBcbHNkbG9ja2VkMCBMaWdodCBTaGFkaW5nO1xsc2Rwcmlvcml0eTYxIFxsc2Rsb2NrZWQwIExpZ2h0IExpc3Q7XGxzZHByaW9yaXR5NjIgXGxzZGxvY2tlZDAgTGlnaHQgR3JpZDtcbHNkcHJpb3JpdHk2MyBcbHNkbG9ja2VkMCBNZWRpdW0gU2hhZGluZyAxO1xsc2Rwcmlvcml0eTY0IFxsc2Rsb2NrZWQwIE1lZGl1bSBTaGFkaW5nIDI7DQpcbHNkcHJpb3JpdHk2NSBcbHNkbG9ja2VkMCBNZWRpdW0gTGlzdCAxO1xsc2Rwcmlvcml0eTY2IFxsc2Rsb2NrZWQwIE1lZGl1bSBMaXN0IDI7XGxzZHByaW9yaXR5NjcgXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMTtcbHNkcHJpb3JpdHk2OCBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAyO1xsc2Rwcmlvcml0eTY5IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDM7XGxzZHByaW9yaXR5NzAgXGxzZGxvY2tlZDAgRGFyayBMaXN0Ow0KXGxzZHByaW9yaXR5NzEgXGxzZGxvY2tlZDAgQ29sb3JmdWwgU2hhZGluZztcbHNkcHJpb3JpdHk3MiBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBMaXN0O1xsc2Rwcmlvcml0eTczIFxsc2Rsb2NrZWQwIENvbG9yZnVsIEdyaWQ7XGxzZHByaW9yaXR5NjAgXGxzZGxvY2tlZDAgTGlnaHQgU2hhZGluZyBBY2NlbnQgMTtcbHNkcHJpb3JpdHk2MSBcbHNkbG9ja2VkMCBMaWdodCBMaXN0IEFjY2VudCAxOw0KXGxzZHByaW9yaXR5NjIgXGxzZGxvY2tlZDAgTGlnaHQgR3JpZCBBY2NlbnQgMTtcbHNkcHJpb3JpdHk2MyBcbHNkbG9ja2VkMCBNZWRpdW0gU2hhZGluZyAxIEFjY2VudCAxO1xsc2Rwcmlvcml0eTY0IFxsc2Rsb2NrZWQwIE1lZGl1bSBTaGFkaW5nIDIgQWNjZW50IDE7XGxzZHByaW9yaXR5NjUgXGxzZGxvY2tlZDAgTWVkaXVtIExpc3QgMSBBY2NlbnQgMTtcbHNkc2VtaWhpZGRlbjEgXGxzZHByaW9yaXR5OTkgXGxzZGxvY2tlZDAgUmV2aXNpb247DQpcbHNkcWZvcm1hdDEgXGxzZHByaW9yaXR5MzQgXGxzZGxvY2tlZDAgTGlzdCBQYXJhZ3JhcGg7XGxzZHFmb3JtYXQxIFxsc2Rwcmlvcml0eTI5IFxsc2Rsb2NrZWQwIFF1b3RlO1xsc2RxZm9ybWF0MSBcbHNkcHJpb3JpdHkzMCBcbHNkbG9ja2VkMCBJbnRlbnNlIFF1b3RlO1xsc2Rwcmlvcml0eTY2IFxsc2Rsb2NrZWQwIE1lZGl1bSBMaXN0IDIgQWNjZW50IDE7XGxzZHByaW9yaXR5NjcgXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMSBBY2NlbnQgMTsNClxsc2Rwcmlvcml0eTY4IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDIgQWNjZW50IDE7XGxzZHByaW9yaXR5NjkgXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMyBBY2NlbnQgMTtcbHNkcHJpb3JpdHk3MCBcbHNkbG9ja2VkMCBEYXJrIExpc3QgQWNjZW50IDE7XGxzZHByaW9yaXR5NzEgXGxzZGxvY2tlZDAgQ29sb3JmdWwgU2hhZGluZyBBY2NlbnQgMTtcbHNkcHJpb3JpdHk3MiBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBMaXN0IEFjY2VudCAxOw0KXGxzZHByaW9yaXR5NzMgXGxzZGxvY2tlZDAgQ29sb3JmdWwgR3JpZCBBY2NlbnQgMTtcbHNkcHJpb3JpdHk2MCBcbHNkbG9ja2VkMCBMaWdodCBTaGFkaW5nIEFjY2VudCAyO1xsc2Rwcmlvcml0eTYxIFxsc2Rsb2NrZWQwIExpZ2h0IExpc3QgQWNjZW50IDI7XGxzZHByaW9yaXR5NjIgXGxzZGxvY2tlZDAgTGlnaHQgR3JpZCBBY2NlbnQgMjtcbHNkcHJpb3JpdHk2MyBcbHNkbG9ja2VkMCBNZWRpdW0gU2hhZGluZyAxIEFjY2VudCAyOw0KXGxzZHByaW9yaXR5NjQgXGxzZGxvY2tlZDAgTWVkaXVtIFNoYWRpbmcgMiBBY2NlbnQgMjtcbHNkcHJpb3JpdHk2NSBcbHNkbG9ja2VkMCBNZWRpdW0gTGlzdCAxIEFjY2VudCAyO1xsc2Rwcmlvcml0eTY2IFxsc2Rsb2NrZWQwIE1lZGl1bSBMaXN0IDIgQWNjZW50IDI7XGxzZHByaW9yaXR5NjcgXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMSBBY2NlbnQgMjtcbHNkcHJpb3JpdHk2OCBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAyIEFjY2VudCAyOw0KXGxzZHByaW9yaXR5NjkgXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMyBBY2NlbnQgMjtcbHNkcHJpb3JpdHk3MCBcbHNkbG9ja2VkMCBEYXJrIExpc3QgQWNjZW50IDI7XGxzZHByaW9yaXR5NzEgXGxzZGxvY2tlZDAgQ29sb3JmdWwgU2hhZGluZyBBY2NlbnQgMjtcbHNkcHJpb3JpdHk3MiBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBMaXN0IEFjY2VudCAyO1xsc2Rwcmlvcml0eTczIFxsc2Rsb2NrZWQwIENvbG9yZnVsIEdyaWQgQWNjZW50IDI7DQpcbHNkcHJpb3JpdHk2MCBcbHNkbG9ja2VkMCBMaWdodCBTaGFkaW5nIEFjY2VudCAzO1xsc2Rwcmlvcml0eTYxIFxsc2Rsb2NrZWQwIExpZ2h0IExpc3QgQWNjZW50IDM7XGxzZHByaW9yaXR5NjIgXGxzZGxvY2tlZDAgTGlnaHQgR3JpZCBBY2NlbnQgMztcbHNkcHJpb3JpdHk2MyBcbHNkbG9ja2VkMCBNZWRpdW0gU2hhZGluZyAxIEFjY2VudCAzO1xsc2Rwcmlvcml0eTY0IFxsc2Rsb2NrZWQwIE1lZGl1bSBTaGFkaW5nIDIgQWNjZW50IDM7DQpcbHNkcHJpb3JpdHk2NSBcbHNkbG9ja2VkMCBNZWRpdW0gTGlzdCAxIEFjY2VudCAzO1xsc2Rwcmlvcml0eTY2IFxsc2Rsb2NrZWQwIE1lZGl1bSBMaXN0IDIgQWNjZW50IDM7XGxzZHByaW9yaXR5NjcgXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMSBBY2NlbnQgMztcbHNkcHJpb3JpdHk2OCBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAyIEFjY2VudCAzO1xsc2Rwcmlvcml0eTY5IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDMgQWNjZW50IDM7DQpcbHNkcHJpb3JpdHk3MCBcbHNkbG9ja2VkMCBEYXJrIExpc3QgQWNjZW50IDM7XGxzZHByaW9yaXR5NzEgXGxzZGxvY2tlZDAgQ29sb3JmdWwgU2hhZGluZyBBY2NlbnQgMztcbHNkcHJpb3JpdHk3MiBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBMaXN0IEFjY2VudCAzO1xsc2Rwcmlvcml0eTczIFxsc2Rsb2NrZWQwIENvbG9yZnVsIEdyaWQgQWNjZW50IDM7XGxzZHByaW9yaXR5NjAgXGxzZGxvY2tlZDAgTGlnaHQgU2hhZGluZyBBY2NlbnQgNDsNClxsc2Rwcmlvcml0eTYxIFxsc2Rsb2NrZWQwIExpZ2h0IExpc3QgQWNjZW50IDQ7XGxzZHByaW9yaXR5NjIgXGxzZGxvY2tlZDAgTGlnaHQgR3JpZCBBY2NlbnQgNDtcbHNkcHJpb3JpdHk2MyBcbHNkbG9ja2VkMCBNZWRpdW0gU2hhZGluZyAxIEFjY2VudCA0O1xsc2Rwcmlvcml0eTY0IFxsc2Rsb2NrZWQwIE1lZGl1bSBTaGFkaW5nIDIgQWNjZW50IDQ7XGxzZHByaW9yaXR5NjUgXGxzZGxvY2tlZDAgTWVkaXVtIExpc3QgMSBBY2NlbnQgNDsNClxsc2Rwcmlvcml0eTY2IFxsc2Rsb2NrZWQwIE1lZGl1bSBMaXN0IDIgQWNjZW50IDQ7XGxzZHByaW9yaXR5NjcgXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMSBBY2NlbnQgNDtcbHNkcHJpb3JpdHk2OCBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAyIEFjY2VudCA0O1xsc2Rwcmlvcml0eTY5IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDMgQWNjZW50IDQ7XGxzZHByaW9yaXR5NzAgXGxzZGxvY2tlZDAgRGFyayBMaXN0IEFjY2VudCA0Ow0KXGxzZHByaW9yaXR5NzEgXGxzZGxvY2tlZDAgQ29sb3JmdWwgU2hhZGluZyBBY2NlbnQgNDtcbHNkcHJpb3JpdHk3MiBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBMaXN0IEFjY2VudCA0O1xsc2Rwcmlvcml0eTczIFxsc2Rsb2NrZWQwIENvbG9yZnVsIEdyaWQgQWNjZW50IDQ7XGxzZHByaW9yaXR5NjAgXGxzZGxvY2tlZDAgTGlnaHQgU2hhZGluZyBBY2NlbnQgNTtcbHNkcHJpb3JpdHk2MSBcbHNkbG9ja2VkMCBMaWdodCBMaXN0IEFjY2VudCA1Ow0KXGxzZHByaW9yaXR5NjIgXGxzZGxvY2tlZDAgTGlnaHQgR3JpZCBBY2NlbnQgNTtcbHNkcHJpb3JpdHk2MyBcbHNkbG9ja2VkMCBNZWRpdW0gU2hhZGluZyAxIEFjY2VudCA1O1xsc2Rwcmlvcml0eTY0IFxsc2Rsb2NrZWQwIE1lZGl1bSBTaGFkaW5nIDIgQWNjZW50IDU7XGxzZHByaW9yaXR5NjUgXGxzZGxvY2tlZDAgTWVkaXVtIExpc3QgMSBBY2NlbnQgNTtcbHNkcHJpb3JpdHk2NiBcbHNkbG9ja2VkMCBNZWRpdW0gTGlzdCAyIEFjY2VudCA1Ow0KXGxzZHByaW9yaXR5NjcgXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMSBBY2NlbnQgNTtcbHNkcHJpb3JpdHk2OCBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAyIEFjY2VudCA1O1xsc2Rwcmlvcml0eTY5IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDMgQWNjZW50IDU7XGxzZHByaW9yaXR5NzAgXGxzZGxvY2tlZDAgRGFyayBMaXN0IEFjY2VudCA1O1xsc2Rwcmlvcml0eTcxIFxsc2Rsb2NrZWQwIENvbG9yZnVsIFNoYWRpbmcgQWNjZW50IDU7DQpcbHNkcHJpb3JpdHk3MiBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBMaXN0IEFjY2VudCA1O1xsc2Rwcmlvcml0eTczIFxsc2Rsb2NrZWQwIENvbG9yZnVsIEdyaWQgQWNjZW50IDU7XGxzZHByaW9yaXR5NjAgXGxzZGxvY2tlZDAgTGlnaHQgU2hhZGluZyBBY2NlbnQgNjtcbHNkcHJpb3JpdHk2MSBcbHNkbG9ja2VkMCBMaWdodCBMaXN0IEFjY2VudCA2O1xsc2Rwcmlvcml0eTYyIFxsc2Rsb2NrZWQwIExpZ2h0IEdyaWQgQWNjZW50IDY7DQpcbHNkcHJpb3JpdHk2MyBcbHNkbG9ja2VkMCBNZWRpdW0gU2hhZGluZyAxIEFjY2VudCA2O1xsc2Rwcmlvcml0eTY0IFxsc2Rsb2NrZWQwIE1lZGl1bSBTaGFkaW5nIDIgQWNjZW50IDY7XGxzZHByaW9yaXR5NjUgXGxzZGxvY2tlZDAgTWVkaXVtIExpc3QgMSBBY2NlbnQgNjtcbHNkcHJpb3JpdHk2NiBcbHNkbG9ja2VkMCBNZWRpdW0gTGlzdCAyIEFjY2VudCA2Ow0KXGxzZHByaW9yaXR5NjcgXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMSBBY2NlbnQgNjtcbHNkcHJpb3JpdHk2OCBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAyIEFjY2VudCA2O1xsc2Rwcmlvcml0eTY5IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDMgQWNjZW50IDY7XGxzZHByaW9yaXR5NzAgXGxzZGxvY2tlZDAgRGFyayBMaXN0IEFjY2VudCA2O1xsc2Rwcmlvcml0eTcxIFxsc2Rsb2NrZWQwIENvbG9yZnVsIFNoYWRpbmcgQWNjZW50IDY7DQpcbHNkcHJpb3JpdHk3MiBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBMaXN0IEFjY2VudCA2O1xsc2Rwcmlvcml0eTczIFxsc2Rsb2NrZWQwIENvbG9yZnVsIEdyaWQgQWNjZW50IDY7XGxzZHFmb3JtYXQxIFxsc2Rwcmlvcml0eTE5IFxsc2Rsb2NrZWQwIFN1YnRsZSBFbXBoYXNpcztcbHNkcWZvcm1hdDEgXGxzZHByaW9yaXR5MjEgXGxzZGxvY2tlZDAgSW50ZW5zZSBFbXBoYXNpczsNClxsc2RxZm9ybWF0MSBcbHNkcHJpb3JpdHkzMSBcbHNkbG9ja2VkMCBTdWJ0bGUgUmVmZXJlbmNlO1xsc2RxZm9ybWF0MSBcbHNkcHJpb3JpdHkzMiBcbHNkbG9ja2VkMCBJbnRlbnNlIFJlZmVyZW5jZTtcbHNkcWZvcm1hdDEgXGxzZHByaW9yaXR5MzMgXGxzZGxvY2tlZDAgQm9vayBUaXRsZTtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rwcmlvcml0eTM3IFxsc2Rsb2NrZWQwIEJpYmxpb2dyYXBoeTsNClxsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZHFmb3JtYXQxIFxsc2Rwcmlvcml0eTM5IFxsc2Rsb2NrZWQwIFRPQyBIZWFkaW5nO319e1wqXGRhdGFzdG9yZSAwMTA1MDAwMDAyMDAwMDAwMTgwMDAwMDA0ZDczNzg2ZDZjMzIyZTUzNDE1ODU4NGQ0YzUyNjU2MTY0NjU3MjJlMzUyZTMwMDAwMDAwMDAwMDAwMDAwMDAwMDAwNjAwMDANCmQwY2YxMWUwYTFiMTFhZTEwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDNlMDAwMzAwZmVmZjA5MDAwNjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMTAwMDAwMDAxMDAwMDAwMDAwMDAwMDAwMDEwMDAwMGZlZmZmZmZmMDAwMDAwMDBmZWZmZmZmZjAwMDAwMDAwMDAwMDAwMDBmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZg0KZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmDQpmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYNCmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZg0KZmZmZmZmZmZmZmZmZmZmZmZkZmZmZmZmZmVmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmDQpmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYNCmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZg0KZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmDQpmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZjUyMDA2ZjAwNmYwMDc0MDAyMDAwNDUwMDZlMDA3NDAwNzIwMDc5MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMTYwMDA1MDBmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZlYzY5ZDk4ODhiOGIzZDRjODU5ZWFmNmNkMTU4YmUwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGQwN2MNCmVhY2VhYmIyZDAwMWZlZmZmZmZmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMA0KMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwDQowMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDANCjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAxMDUwMDAwMDAwMDAwMDB9fQ==</record_binary_data>
      <record_plain_text>RISING TREE
SHARED FACILITIES AGREEMENT



BY AND AMONG



RISING TREE WIND FARM LLC

RISING TREE WIND FARM II LLC

AND

RISING TREE WIND FARM III LLC


EXECUTED AS OF DECEMBER 3, 2014


Table of Contents
ARTICLE I DEFINITIONS, INTERPRETATIONS AND EXHIBITS	5
1.1	Definitions	6
1.2	Interpretation	6
1.3	Incorporation of Recitals and Exhibits	6
ARTICLE II TERM OF AGREEMENT	6
2.1	Term	6
2.2	Payments on Termination	6
2.3	Survival	7
ARTICLE III SHARED FACILITIES AND REAL PROPERTY	7
3.1	Declaration of Intention.  .	7
3.2	Shared Facilities	7
3.3	Shared Real Property	7
3.4	Shared Assets Groups	7
3.5	Access	8
3.6	Shared Permits.  .	8
ARTICLE IV CONSTRUCTION AND OWNERSHIP OF AND RIGHT TO USE SHARED ASSETS	9
4.1	Undivided Ownership Interests	9
4.2	Undivided Use Interests	9
4.3	Construction; Reimbursement of Costs	10
4.4	Additional Phases	12
4.5	Additional Shared Facilities	12
4.6	No Additional Co-Owners	13
ARTICLE V METERING, MEASUREMENT OF ENERGY DELIVERIES AND LOSSES	13
5.1	Measurement	13
5.2	Losses on Transmission Line	13
5.3	Meter Testing and Repair	14
ARTICLE VI OPERATION AND MAINTENANCE OF SHARED FACILITIES.	14
6.1	Engagement of Operator	14
6.2	Standards for Operator's Performance	14
6.3	O&amp;M Services	15
6.4	Scheduled Maintenance	16
6.5	Unplanned Outages	16
6.6	Emergency Conditions	16
6.7	O&amp;M Costs	16
6.8	Budgeting Process	16
6.9	Extraordinary Maintenance	17
6.10	Responsibility for O&amp;M Costs	17
6.11	Books and Records	18
6.12	Disputes	18
6.13	No Waiver of Right to Audit	18
6.14	Obligations	18
6.15	Risk of Loss; Indemnity	18
6.16	Limitations on Operator's Authority	19
6.17	Replacement of Operator.	19
ARTICLE VII DAMAGE TO, DESTRUCTION OR FAILURE OF SHARED FACILITIES	19
7.1	Damage or Destruction	19
ARTICLE VIII CESSATION OF OPERATIONS BY A CO-OWNER	20
8.1	Co-Owner Ceasing Operations	20
8.2	Co-Owner Last Using Shared Facilities	20
8.3	Procedure for Transfer by a Co-Owner of its Ownership Interest.  .	21
8.4	Change in Ownership Interest	21
ARTICLE IX RELATIONSHIP OF OPERATOR AND CO-OWNERS	21
9.1	Actions Taken by Operator	21
9.2	Limitations on Operator's Authority	22
9.3	Costs and Expenses	22
9.4	Obligations under Shared Real Property Agreements; Exercise of Options	22
9.5	Consent or Approval	23
9.6	Condemnation Awards	23
9.7	Transfer or Encumbrance of Interest in Shared Assets	23
9.8	Additional Co-Owner Rights	23
ARTICLE X COVENANTS	24
10.1	No Interference.	24
10.2	Interconnection Rights.  .	24
10.3	Interconnection Agreement.	24
10.4	Shared Real Property Agreements..	24
10.5	No Waste.	25
10.6	No Liens.	25
10.7	Standard of Performance.	25
ARTICLE XI INSURANCE; WAIVER	25
11.1	Insurance Responsibilities	25
11.2	Waiver	25
ARTICLE XII TAXES	25
12.1	Operator Payment of Property Taxes and Assessments	25
12.2	Reimbursement Obligations	25
12.3	Transfer Taxes, Sales and Use Taxes	25
12.4	Construction of Shared Assets.	25
ARTICLE XIII EVENTS OF DEFAULT; REMEDIES	25
13.1	Defaults	25
13.2	Remedies Upon Default	25
ARTICLE XIV LENDER PROTECTION	25
14.1	Right to Encumber and Assign	25
14.2	Co-Owners' Obligations	25
14.3	Lender Obligations	25
14.4	Lender's Right to Possession, Right to Acquire and Right to Assign	25
14.5	Opportunity to Cure	25
14.6	New Agreement	25
14.7	Lender Consent	25
14.8	Estoppel Certificates	25
ARTICLE XV INDEMNIFICATION	25
15.1	Co-Owner Indemnification	25
15.2	Cross-Indemnity	25
ARTICLE XVI WAIVER OF RIGHTS TO PARTITION	25
ARTICLE XVII MISCELLANEOUS PROVISIONS	25
17.1	Covenants Run with the Land	25
17.2	Force Majeure	25
17.3	FERC Filing and Acceptance..	25
17.4	Assignment	25
17.5	Actions By Co-Owners	25
17.6	Entire Agreement	25
17.7	Amendment	25
17.8	Further Assurances	25
17.9	Severability	25
17.10	Joint Preparation	25
17.11	No Waiver	25
17.12	Governing Law	25
17.13	Dispute Resolution Procedures	25
17.14	Relationship of the Co-Owners	25
17.15	No Third Party Rights	25
17.16	No Dedication of Facilities	25
17.17	Notices	25
17.18	Counterparts	25
17.19	Timing for Performance	25
17.20	Waiver of Consequential Damages	25
17.21	Survival	25
17.22	Memorandum	25
17.23	Other Agreements.	25

EXHIBITS
Exhibit A - Schedule of Definitions
Exhibit B - Shared Facilities, Shared Real Property and Shared Permits
Exhibit C - Interests and Proportionate Shares
Exhibit D - Material Project Agreements
Exhibit E - Dispute Resolution Provisions
Exhibit F - Form of Joinder
Exhibit G - Form of Memorandum

RISING TREE
SHARED FACILITIES AGREEMENT

      THIS RISING TREE SHARED FACILITIES AGREEMENT ("Agreement") is made and entered into this 3rd day of December, 2014 (the "Execution Date"), by and among Rising Tree Wind Farm LLC ("Rising Tree I"), Rising Tree Wind Farm II LLC ("Rising Tree II"), and Rising Tree Wind Farm III LLC ("Rising Tree III"), each of which is a Delaware limited liability company.  The foregoing are sometimes referred to herein individually as a "Co-Owner" and collectively as "Co-Owners".
RECITALS
A.	The Co-Owners are developing a multi-phase wind powered electric generating facility generally known as the Rising Tree Wind Farm located on real property in Kern County, California (the "Rising Tree Wind Farm").  The Rising Tree Wind Farm is intended to be developed in multiple phases, each of which is considered a separate project and will be owned by a separate project company.
B.	The installed nameplate generating capacity of each phase of the Rising Tree Wind Farm (each of which is referred to herein as a "Facility" and collectively as the "Facilities"), will be approximately:
RST I Facility:	79.2 MW
RST II Facility:	19.8 MW
RST III Facility:	99 MW

C.	The Co-Owners own or will own undivided interests in certain real and personal property acquired or to be acquired for their respective Facilities and wish to share the use and cost of certain electrical transmission, communications structures and other facilities and associated real property rights, and to engage Operator to operate, maintain, repair and manage the foregoing, all in accordance with and subject to the terms and conditions of this Agreement.
D.	The Co-Owners are also parties to that certain Amended and Restated Large Generator Interconnection Agreement Co-Tenancy Agreement dated October 24, 2014 (the "LGIA Co-Tenancy Agreement") with respect to the Interconnection Agreement.
      NOW THEREFORE, in consideration of the recitals, the premises, covenants and conditions contained herein, and other good and valuable consideration, the receipt and sufficiency of which the Co-Owners acknowledge, the Co-Owners agree as follows:
ARTICLE I 
DEFINITIONS, INTERPRETATIONS AND EXHIBITS
      1.1 Definitions
.  As used in this Agreement, including the Recitals, and except as required by grammatical usage and apart from proper nouns, each capitalized term has the meaning given to it in this Agreement and in the Schedule of Definitions attached as Exhibit A.
      1.2 Interpretation
.  In this Agreement, unless a clear, contrary intention appears:  (a) the singular includes the plural and vice versa; (b) reference to any Person includes such Person's successors and assigns but, in the case of a Co-Owner, only if such assigns are permitted by this Agreement, and reference to a Person in a particular capacity excludes such Person in any other capacity; (c) reference to any gender includes each other gender; (d) reference to any agreement (including this Agreement), document or instrument means such agreement, document or instrument as amended or modified and in effect from time to time in accordance with the terms thereof and, if applicable, the terms of this Agreement; (e) reference to any Law means such Law as amended, modified, codified, or reenacted, in whole or in part, and in effect from time to time, including, if applicable, rules and regulations promulgated thereunder; (f) reference to any Section means such Section of this Agreement, and references in any Section or definition to any clause means such clause of such Section or definition; (g) "hereunder," "hereof," "hereto" and words of similar import shall be deemed references to this Agreement as a whole and not to any particular Section or other provision of this Agreement; (h) "including" means including without limiting the generality of any description such term; and (i) relative to the determination of any period of time, "from" means "from and including", "to" means "to but excluding" and "through" means "through and including".
      1.3 Incorporation of Recitals and Exhibits
.  The Recitals set forth in this Agreement and the Exhibits and Attachments attached hereto are incorporated into this Agreement by reference for all purposes.
ARTICLE II 
TERM OF AGREEMENT
      2.1 Term
.  This Agreement is effective as of the earlier of the Execution Date and any later date this Agreement is accepted by FERC (the "Effective Date" and shall remain in force and effect until, subject to obtaining any necessary FERC approvals, (i) the earliest of (v) the date that is thirty-five (35) years after the Effective Date, (w) the expiration date of the Interconnection Agreement, (x) the date that all interests in the Shared Facilities and the Shared Real Property are owned by a single Person, (y) the retirement and final disposition of all components of the Shared Facilities and all Shared Real Property, and (z) the date that all Co-Owners and their Lenders unanimously agree to terminate this Agreement, or (ii) such other date (but no later than ninety-nine (99) years after the Effective Date) as may be unanimously agreed by all of the Co-Owners and their Lenders.
      2.2 Payments on Termination
.  Upon termination of this Agreement, the Co-Owners shall pay Operator any remaining balance owed for Operator's costs incurred or irrevocably committed to be incurred pursuant to this Agreement as of the date of termination, within sixty (60) days following receipt of an invoice from Operator requiring such payment; provided that Operator shall use commercially reasonable efforts to minimize such costs.
      2.3 Survival
.  Any obligations of one Co-Owner to another, including payment obligations and indemnity obligations, as a result of this Agreement which accrued prior to or as a result of termination of this Agreement shall survive termination of this Agreement.
ARTICLE III 
SHARED FACILITIES AND REAL PROPERTY
      3.1 Declaration of Intention.  The Co-Owners hereby declare that, subject to the last sentence of Section 4.1, they own and hold title to the Shared Facilities and the Shared Real Property as tenants in common and that each Co-Owner has an undivided interest in the Shared Facilities and the Shared Real Property, expressly on and subject to the terms, conditions, limitations and requirements set forth in this Agreement.  Nothing contained in this Agreement will be deemed to constitute the Co-Owners as partners or joint venturers.
      3.2 Shared Facilities
.  The Co-Owners plan to procure, install and construct, or have procured, installed and constructed, certain facilities for electrical transmission, interconnection, communications structures and other facilities, as more particularly described in Exhibit B, which may be altered or reconstructed in accordance with this Agreement, for shared use by the Co-Owners (collectively, the "Shared Facilities") for the purposes set forth in Exhibit B; provided, that certain of the Shared Facilities will used and shared by all of the Co-Owners and certain of the Shared Facilities will only be used and shared by a limited group of the Co-Owners as described in Exhibit B (each a "Shared Facilities Group").  The initial Shared Facilities Groups shall be the RST Shared Facilities Group, which will be used and shared by all Co-Owners, and the RST I/II Shared Facilities Group, which will be used and shared by Rising Tree I and Rising Tree II; provided that additional Shared Facilities Groups may be created in connection with the construction of the Additional Phase, as described in Section 4.4.
      3.3 Shared Real Property
.  The Shared Facilities in each Shared Facilities Group are or will be located on, or have or will have the benefit of, certain real property and real property rights that are described on Exhibit B (collectively, the "Shared Real Property") and that were granted pursuant to certain deeds, easements, leases, options or other instruments and agreements also described on Exhibit B (collectively, the "Shared Real Property Agreements").  The Shared Real Property shall be used for the purposes and uses described on Exhibit B.  In addition to the use of the Shared Real Property for Shared Facilities and other Shared Assets, to the extent permitted under the Shared Real property Agreements, the Shared Real Property may be occupied and used by any of the Co-Owners in the applicable Shared Assets Group for facilities other than Shared Facilities, such as collection and transmission lines separately owned by such Co-Owner, so long as such occupancy and use does not adversely affect the use of such Shared Real Property for the Shared Facilities.  
      3.4 Shared Assets Groups
.  Each Shared Facilities Group, combined with the Shared Real Property corresponding to the Shared Facilities in such Shared Facilities Group described under the same section in Exhibit B shall be referred to herein as a "Shared Assets Group".  The initial Shared Assets Groups shall be the RST Shared Assets Group, which will be used and shared by all Co-Owners, and the RST I/II Shared Assets Group, which will be used and shared by Rising Tree I and Rising Tree II; provided that additional Shared Assets Groups may be created in connection with the construction of the Additional Phase, as described in Section 4.4.
      3.5 Access
.  Each Co-Owner shall have a non-exclusive right of access (a) to the Shared Facilities in which it has an Ownership Interest as necessary (i) to inspect such Shared Facilities, (ii) to ensure that Operator is meeting its obligations with respect to operation, maintenance and repair of such Shared Facilities, (iii) to make any necessary repairs to such Shared Facilities not timely made by Operator or in the event of an Emergency Condition, in each case as necessary to ensure that Co-Owner's Facility remains operational, and (iv) to exercise any other rights of a Co-Owner under this Agreement; and (b) over any Shared Real Property in which such Co-Owner has an Ownership Interest or as necessary or appropriate to exercise any of its rights hereunder with respect to the Shared Facilities; provided that, subject to the provisions of Section 13.1.4, if such Co-Owner is not the Operator, it shall (i) provide reasonable notice to Operator, and (ii) not unreasonably interfere with Operator's operation, maintenance or repair of the Shared Facilities or of another Co-Owner's Facility.
      3.6 Shared Permits.  The construction, operation and use of certain of the Shared Facilities in each Shared Facilities Group, as well as the construction, operation and use of certain portions of each Co-Owner's Facilities, will be subject to certain shared Governmental Authorizations as set forth in parts A.3 and B.3 of Exhibit B (the "Shared Permits"), not all of which apply to the Shared Facilities.  The Shared Permits may be issued in the name of one or more of the Co-Owners, but shall, to the extent they apply to the Shared Facilities, and to the fullest extent allowed by Applicable Law, be held, used and exercised for the mutual benefit of the Co-Owners in the applicable Shared Assets Group and to facilitate the construction, use, operation, maintenance and repair of the Shared Facilities as provided herein.  The Shared Permits shall be administered in the same manner as the Shared Facilities as provided in Section 4.3.3, and, to the extent they do apply to the Shared Facilities, the Co-Owners in each Shared Asset Group shall indemnify and hold Rising Tree I and/or Operator, as applicable, from and against any claims, demands, costs, obligations and liabilities by or to Governmental Authorities or other third parties as a result of the use of the Shared Permits relating to such Shared Asset Group, except to the extent resulting from the gross negligence or willful misconduct of Rising Tree I and/or Operator, as applicable.  To the extent the Shared Permits do not apply to the Shared Facilities, but instead apply to the Facilities or other property separately owned by one or more of the Co-Owners, they shall be administered by Operator, and the Co-Owners to whose Facilities or other property such Shared Permits apply shall indemnify and hold Operator harmless from and against any claims, demands, costs, obligations and liabilities by or to Governmental Authorities or other third parties as a result of the use of the Shared Permits, except to the extent resulting from the gross negligence or willful misconduct of Operator, but the costs of such administration shall be borne by such Co-Owners and shall not be included in the O&amp;M Services provided hereunder.  Notwithstanding the foregoing, each Co-Owner in the applicable Shared Asset Group to which a Shared Permit relates shall have the right, in the case of Emergency Condition or if necessary to prevent the termination or revocation of a Shared Permit, to step in and exercise rights, perform duties and obligations and take actions under such Shared Permit as may be necessary to avoid or mitigate such Emergency Condition or termination or revocation of a Shared Permit, and shall be entitled to the same indemnification as Rising Tree I or Operator would have been under the circumstances; provided, however, that any Co-Owner exercising such step-in rights shall also indemnify and hold the other Co-Owners in the applicable Shared Assets Group from and against any claims, demands, costs, obligations and liabilities by or to Governmental Authorities or other third parties as a result of its gross negligence or willful misconduct in the exercise of such step-in rights.
      3.7	Third Party Rights.  The Co-Owners and the Operator acknowledge that, in addition to any requirements or restrictions in the Shared Real Property Agreements, their rights to construct, use and operate the Shared Facilities is subject to certain rights in favor of third parties and/or Affiliates as described on Exhibit B.  No Co-Owner or Operator will interfere with such third party rights in exercising its rights and performing its obligations hereunder.
ARTICLE IV 
CONSTRUCTION AND OWNERSHIP OF AND RIGHT TO USE SHARED ASSETS
      4.1 Undivided Ownership Interests
.  Each Co-Owner of Shared Facilities and/or Shared Real Property in each Shared Assets Group (a "Granting Co-Owner") hereby grants, assigns, transfers and conveys to itself and to each of the other Co-Owners of Shared Facilities and/or Shared Real Property in such Shared Assets Group an undivided interest, as tenants-in-common, in such rights, benefits and interests as the Granting Co-Owner may have in, to or under any deeds, conveyances, grants, easements, agreements, leases or other instruments or documents creating, granting, assigning or conveying the Granting Co-Owner its right, title and interest in such Shared Facilities and/or Shared Real Property (collectively, the "Underlying Granting Documents"), to the extent that such grant, assignment, transfer and conveyance does not violate, invalidate or require any consent which has not been obtained under any of the Underlying Granting Documents, such that each such Co-Owner in a Shared Assets Group shall own an undivided interest, as a tenant-in-common, in all of the Shared Facilities and Shared Real Property in the applicable Shared Assets Group equal to its Proportionate Share in such Shared Assets Group as described in Exhibit B and shall be entitled to the full benefits of all rights associated with such Shared Assets Group granted, created or conveyed pursuant to the Underlying Granting Documents to the fullest extent permitted thereunder and under Applicable Laws (such undivided interest of each Co-Owner in such Shared Assets Group and related rights and benefits being referred to in this Agreement as its "Ownership Interest").  Upon termination of this Agreement, all of the various rights and interests under the Underlying Granting Documents will, without the need for further action by any party, revert to the Co-Owner or Co-Owners to whom they were originally granted prior to the Effective Date.
      4.2 Undivided Use Interests
.  Each Co-Owner who has an Ownership Interest in a Shared Assets Group shall have an undivided right to the use or capacity of the Shared Assets in such Shared Asset Group (an "Undivided Use Interest"), which right shall be shared with the other Co-Owners in the Shared Assets Groups in accordance with their respective Proportionate Shares.  A Co-Owner's Undivided Use Interest is exercisable upon the Commissioning Date of its Facility by such Co-Owner by providing written notice to Operator and to the other Co-Owners in the same Shared Assets Group that the Commissioning Date has occurred, provided that such Co-Owner has made the payment or payments set forth in Section 4.3, and that no Event of Default has occurred and is continuing with respect to such Co-Owner.  For the avoidance of doubt, each Co-Owner whose Facility has not reached its Commissioning Date as of the Effective Date (and thus whose Proportionate Share in all Shared Assets Groups is 0%) shall be deemed not to have exercised its Undivided Use Interest in any Shared Assets Group (and as a result shall not be required to bear costs or expenses related to any Shared Assets Group nor have the right to vote on matters unless otherwise set forth herein), but shall have the right to exercise its Undivided Use Interest as set forth in this Agreement.
      4.2.1 Transmission Line.  Each Co-Owner of a Transmission Line shall be entitled to use its Proportionate Share of the Delivery Capability of the Transmission Line.  In the event of (i) a partial curtailment of Delivery Capability by the CAISO or the Transmission Owner, (ii) a de-rating of the Transmission Line, (iii) a curtailment as determined by the Operator to be necessary to maintain, repair, replace, remove, investigate, inspect or test the Transmission Line, any Shared Facility or any Facility, or (iv) Emergency Conditions, each Co-Owner's right to use the Delivery Capability of the Transmission Line will be reduced pro rata in accordance with its Ownership Interest for the duration of the curtailment or de-rating; provided, however, that Operator shall be authorized to curtail on a non-pro rata, but equitable and reasonable basis (a) if such non-pro rata allocation is necessary to comply with directions from the CAISO or the Transmission Owner and does not violate the terms of the Interconnection Agreement, or (b) to the extent that the need for curtailment (including Emergency Conditions) can be attributed to a particular Facility.  In the event that the Delivery Capability of the Transmission Line exceeds the capacity provided in the applicable Interconnection Agreement, with Transmission Owner's and the CAISO's written consent and approval, each Co-Owner's right to use the Delivery Capability of the Transmission Line will be increased pro rata in accordance with its Ownership Interest for so long as the Delivery Capability is in excess of the capacity provided in the Interconnection Agreement with Transmission Owner's and CAISO's written consent and approval.
      4.2.2 Excess Capability.  No Co-Owner shall have the right to use more than its Proportionate Share of the Delivery Capability of the Transmission Line.  However, during periods in which a Co-Owner is not utilizing its full Proportionate Share of the Delivery Capability of the Transmission Line, the other Co-Owners may use more than their full Undivided Use Interests therein without additional costs beyond its Proportionate Share of O&amp;M Costs, subject to the operating limits of the Shared Facilities, so long as such use does not interfere with or adversely affect any other Co-Owner's energy schedules and deliveries; provided that (i) prior to any Co-Owner using more than its Proportionate Share of the Delivery Capability of the Transmission Line, the Co-Owners shall have obtained all necessary Governmental Authorizations, including FERC acceptance for filing of an effective transmission services agreement for such usage to the extent required, and (ii) any Co-Owner using more than its Proportionate Share of the Delivery Capability of the Transmission Line shall surrender such excess Delivery Capability promptly when it is needed by the Co-Owner entitled thereto and shall indemnify and hold harmless the other Co-Owners for Losses resulting from a failure or delay in surrendering such excess Delivery Capability..
      4.3 Construction; Reimbursement of Costs
.  
      4.3.1 Subject to its right to reimbursement as set forth herein, Rising Tree I will design, permit and construct all of the Shared Facilities in accordance with Applicable Laws, Good Utility Practice and the description of the Shared Facilities on Exhibit B attached hereto.  Upon completion, testing and commissioning of each applicable group of Shared Facilities, Rising Tree I will assign, transfer and convey such Shared Facilities to the Co-Owners in the applicable Shared Asset Group in accordance with their respective Proportionate Shares, including rights under construction and supply contracts and contractor, supplier and/or manufacturer warranties related to such Shared Facilities, which warranties may be enforced as provided below.  HOWEVER, NOTWITHSTANDING ANYTHING HEREIN TO THE CONTRARY, RISING TREE I SHALL HAVE NO LIABILITY TO THE OTHER CO-OWNERS FOR ANY DEFECT IN THE DESIGN, CONSTRUCTION OR UTILITY OF ANY OF THE SHARED FACILITIES.  RISING TREE I MAKES NO REPRESENTATIONS OR WARRANTIES OF ANY KIND WITH RESPECT TO THE CONDITION, USE OR FITNESS OF ANY OF THE SHARED REAL PROPERTY OR WITH RESPECT TO THE DESIGN, CONSTRUCTION, OPERATION OR UTILITY OF ANY OF THE SHARED FACILITIES, AND HEREBY DISCLAIMS ANY WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE OR ANY OTHER WARRANTY OF ANY KIND WITH RESPECT TO THE SHARED REAL PROPERTY OR THE SHARED FACILITIES.  Each of the Co-Owners agrees that they will look solely to the designers, contractors, suppliers, manufacturers and other Persons who participated in the design and/or construction of the Shared Facilities with respect to any defects or breaches of contract or warranty.  
      4.3.2 Rising Tree II and Rising Tree III shall each reimburse Rising Tree I for all costs and expenses incurred by Rising Tree I in designing, permitting and constructing the Shared Facilities in accordance with their respective Proportionate Shares of the costs of the Shared Facilities in each Shared Facilities Group of which they are members, in accordance with their Proportionate Shares in each such Shared Assets Group; provided, however, that for purposes of this Section 4.3.2, the Co-Owners' respective Proportionate Shares shall be determined on the basis of the nameplate capacities set forth in Recital B, regardless of whether or not a Facility has achieved its Commissioning Date.  Such reimbursement shall be made within fifteen (15) days after receipt of (i) a notice from Rising Tree I that "Final Completion" or its equivalent for the Shared Facilities in such Shared Assets Group has occurred under the construction contract therefor, and (ii) a statement of the amount to be reimbursed (including appropriate supporting documentation)
      4.3.3 Each Co-Owner intends that all rights under construction and supply contracts and contractor, supplier and/or manufacturer warranties related to any Shared Facilities shall be held by the applicable Co-Owners in such Shared Assets Group, and each Co-Owner shall cooperate with each other to ensure enforceability by any of such Co-Owners or by Operator as agent for the Co-Owners; provided that enforcement of any such contract or warranty shall only be done by Rising Tree I until the completion of all of the Shared Facilities and by Operator thereafter, unless Rising Tree I or Operator, as applicable, has failed to do so within ninety (90) days after written notice from any other Co-Owner setting forth the reasons that such contract or warranty has been breached and must be enforced, unless there is a dispute regarding such enforcement, in which event the other Co-Owner's shall not exercise such rights until such dispute is resolved.
      4.3.4 To the extent that it does not otherwise have the necessary real property interests and rights, Rising Tree I shall have, and each of the other Co-Owners shall and hereby do grant to Rising Tree I, the benefit of and the right to use all of the Shared Real Property, subject to any restrictions or limitations in the Underlying Granting Documents, for the purpose of constructing, installing, testing and commissioning the Shared Facilities.
      4.3.5 Notwithstanding the fact that the design, construction, testing and commissioning of the Shared Facilities is being done by Rising Tree I, the Co-Owners agree that they will share the risks thereof among themselves in accordance with their respective Proportionate Shares.  Accordingly, each of the Co-Owners will indemnify and hold Rising Tree I harmless from and against its Proportionate Share of any claims, demands, costs, obligations and liabilities by or to third parties as a result of the design, construction, testing and commissioning of the Shared Facilities, except to the extent resulting from the gross negligence or willful misconduct of Rising Tree I; provided, however, that for purposes of this Section 4.3.5, the Co-Owners' respective Proportionate Shares shall be determined on the basis of the nameplate capacities set forth in Recital B, regardless of whether or not a Facility has achieved its Commissioning Date. 
      4.4 Additional Phases
.  Additional generating facilities, whether owned by a Co-Owner or its Affiliate or by another Person (each an "Additional Phase") may be connected to the Shared Facilities and may use the Shared Assets, to the extent compatible with the existing Shared Facilities and Transmission Owner's interconnection facilities, subject to the terms and conditions of this Agreement and any required FERC approvals, but only upon the unanimous written approval of all of the Co-Owners and their respective Lenders and subject to the receipt of all necessary consents and approvals from Governmental Authorities, owners of any Shared Real Property, the Transmission Owner, CAISO and other necessary Persons.  The owner of such Additional Phase shall execute a joinder, the form of which is attached as Exhibit F hereto, and the Co-Owners shall execute an appropriate amendment to this Agreement to reflect the Undivided Use Interest of the Additional Phase in the applicable Shared Assets Groups and such other matters as the Co-Owners and the owner of the Additional Phase may agree.  Any such amendment to this Agreement shall be filed with FERC under Section 205 of the FPA, consistent with Section 17.3 hereof, and shall not become effective until accepted by FERC.  Notwithstanding anything contained herein to the contrary, the owner of the Additional Phase shall bear any incremental costs and expenses of modifying and upgrading the applicable existing Shared Facilities or acquiring additional Shared Real Property to accommodate the connection of its generating facility.
      4.5 Additional Shared Facilities
.  Once the Shared Facilities described on Exhibit B have been constructed, no Co-Owner may modify, add to or remove any of the Shared Facilities, except (i) as may be required by Applicable Laws and after not less than thirty (30) days written notice to the other Co-Owners, or (ii) with the prior written consent of all Co-Owners, and their respective Lenders (such consent of the Co-Owners not to be unreasonably withheld). In either case, the Co-Owner proposing to modify, add to or remove any of the Shared Facilities shall obtain a report by a qualified independent engineer reasonably acceptable to all Co-Owners finding that such modifications, additions or removals will not adversely affect the operation, performance, reliability or maintenance costs of any Facility (except as may be agreed by the owner of such Project).  In connection with the approval of any such modifications, additions or removals of Shared Facilities, the Co-Owners shall negotiate in good faith and agree on (a) the design and construction of such modifications and/or additional Shared Facilities and/or the plan of removal of such Shared Facilities, as applicable, (b) the allocation of design and construction costs of the modifications and/or additional Shared Facilities and/or the costs of removal of such Shared Facilities, as applicable, among the Co-Owners, and (c) the allocation of costs associated with the operation and maintenance of the modified Shared Facilities and/or the additional Shared Facilities among the Co-Owners; provided that no Co-Owner shall be required to reimburse any other Co-Owner for any costs incurred in the construction, removal, operation or maintenance of any modified, additional and/or removed Shared Facilities unless it has expressly agreed to do so in writing.
      4.6 No Additional Co-Owners
.  Except as provided herein, no Person may become a Co-Owner under this Agreement or an additional co-owner of any of the Shared Facilities, the Shared Real Property or the Shared Real Property Agreements without the prior written consent of all of the Co-Owners.  Any Person becoming a Co-Owner under this Agreement shall execute a joinder, the form of which is attached as Exhibit F hereto and such other amendments as the Co-Owners have determined may be necessary.
ARTICLE V 
METERING, MEASUREMENT OF ENERGY DELIVERIES AND LOSSES
      5.1 Measurement
.  Energy transmitted on the Transmission Line shall be measured for each Facility in each Settlement Interval by the revenue meter for such Facility.  However, if and for the period that there is an equipment failure or other event that prevents or interferes with the operation of the separate metering, energy transmitted on the Transmission Line shall be measured and allocated between the Facilities in each Settlement Interval in proportion to their respective Metered Energy during such Settlement Interval as follows:
Facility Energy = (Facility Metered Energy/Total Metered Energy) x POI Metered Energy
where, for purposes of the above formula:
Facility Energy = the Energy allocated to the Facility in the Settlement Interval
Facility Metered Energy = Metered Energy for such Facility in the Settlement Interval
Total Metered Energy = total Metered Energy for all Facilities in the Settlement Interval
POI Metered Energy = the amount of Energy measured by the CAISO at the Point of Interconnection in the Settlement Interval
      5.2 Losses on Transmission Line
.  Line Losses will be automatically allocated among the Co-Owners through the measurement of energy deliveries as described in Section 5.1, which is net of losses or in accordance with the formula set forth in Section 5.1, which includes Line Losses in the measurement of POI Metered Energy.  
      5.3 Meter Testing and Repair
. 
      5.3.1 Inspection and Testing.  Each Co-Owner will cause its revenue meter to be inspected and tested upon its installation and at least once every twenty-four (24) months thereafter, or more frequently if required by CAISO rules or the CAISO Tariff, by the Interconnection Agreement, or by any power purchase agreement to which a Co-Owner is a party, and at any other reasonable time upon Operator's request, which may not be made more than twice each year.  Operator will pay the costs of such inspection and testing (which shall be considered an O&amp;M Cost), unless the results of the test show the Co-Owner's meter to be inaccurate by more than [two-tenths of one percent (0.2%)]1, in which case the Co-Owner who owns the meter will pay the costs of the inspection and test.  Each Co-Owner will give the other Co-Owners reasonable advance notice of tests of its meter and the other Co-Owners have the right to witness such tests.
      5.3.2 Calibration or Repair.  If a test shows a Co-Owner's meter to be inaccurate, the owner of the meter will use commercially reasonable efforts to cause its meter to be calibrated, repaired or replaced as soon as reasonably practical.  If a test shows a Co-Owner's meter to be inaccurate by more than [two-tenths of one percent (0.2%)], an adjustment will be made correcting all measurements made by the meter found to be inaccurate for the actual period during which inaccurate measurements were made, if such period can be determined, or, if not, the period immediately preceding the meter test equal to the lesser of one-half the time from the date of the last test of the inaccurate meter or one hundred eighty (180) days.  Such adjustments will be reflected as charges or credits, as applicable, on the invoices for O&amp;M Services rendered monthly by Operator to the Co-Owners.
ARTICLE VI 
OPERATION AND MAINTENANCE OF SHARED FACILITIES.
      6.1 Engagement of Operator
.  The Co-Owners hereby engage Operator to manage, operate, maintain and repair the Shared Facilities, to administer and take all necessary actions under the Shared Real Property Agreements, to administer and take all necessary actions under the Shared Permits, and to perform other duties pertaining to the Shared Assets (the "O&amp;M Services"), all as set forth in this Agreement; provided, however, that to the extent do not apply to the Shared Facilities, but instead apply to the Facilities or other property separately owned by one or more of the Co-Owners, the administration of such Shared Permits shall not be included in O&amp;M Services, but shall be paid for separately by the Co-Owners benefiting from such Shared Permits in proportion to their respective benefits.  Operator accepts such engagement and agrees to perform such duties in accordance with the terms and conditions hereof.  Operator's authority shall be limited to performing the O&amp;M Services and such other services as may be approved by all of the Co-Owners and shall be further limited as provided in Section 6.16.
      6.2 Standards for Operator's Performance
.  Operator shall perform the O&amp;M Services in accordance with Good Utility Practice, the Material Project Agreements, the Shared Real Property Agreements, this Agreement and all other agreements relating to ownership, construction, operation and maintenance of the Shared Facilities, Applicable Laws and requirements of Governmental Authorities, including without limitation all Hazardous Materials Laws and all Environmental Laws, and all safety policies and procedures (collectively, the "Performance Standard").
      6.3 O&amp;M Services
.  Operator shall provide or cause to be provided the following services (and such other services as may be agreed from time to time by the Co-Owners and Operator) on behalf of each of the Co-Owners who have an Undivided Use Interest from and after the date each such Co-Owner has notified Operator of its exercised right to an Undivided Use Interest in the Shared Assets pursuant to Section 4.2 (the "O&amp;M Services Commencement Date"):
      (a) manage, supervise, operate, inspect, repair and maintain the Shared Assets in accordance with the Performance Standard and the Approved Budget, including the day to day management of the Shared Assets;
      (b) pay and collect amounts due in connection with the Shared Assets including but not limited to taxes and assessments pursuant to Section 12.2, and maintain one or more bank accounts wherein funds received by the Operator in connection with its duties herein shall be maintained;
      (c) expend monies necessary for the management, operation, maintenance and repair of the Shared Facilities;
      (d) notify each Co-Owner of any material notice (or any other material information that would reasonably be expected to affect the Co-Owners) received by Operator, whether from any Co-Owner, another Person or a Governmental Authority;
      (e) manage compliance with the Co-Owners' rights in the Shared Real Property in accordance with the Shared Real Property Agreements, including timely exercising options under the Shared Real Property Agreements to acquire property, enter into a lease or extend a lease term [in accordance with instructions from the Co-Owners, and making payments required under the Shared Real Property Agreements; provided that the Operator shall have no right to amend the Shared Real Property Agreements; 
      (f) manage performance by the Co-Owners under  the Material Project Agreements and to coordinate with the "Manager" under the LGIA Co-Tenancy Agreement in the performance of its and the Co-Owners' obligations thereunder; 
      (g) give and receive notices and communicate with the CAISO and the Transmission Owner with respect to the Shared Facilities and the commissioning, operation, maintenance and repair of the Shared Facilities; 
      (h) manage compliance of the Shared Facilities and Shared Real Property with all applicable Environmental Laws and Permits; and
      (i) with respect to the Shared Real Property and the Shared Facilities located on the Shared Real Property, oversee all investigations, studies, clean up, corrective action or response or remedial action required by any Governmental Authority now or hereafter authorized to regulate environmental or other matters or by any consent decree or court or administrative order now or hereafter applicable to the use, operation or ownership of the Shared Real Property by a Co-Owner or the Shared Facilities located on the Shared Real Property.
      6.4 Scheduled Maintenance
.   Operator shall schedule maintenance and any planned outages of the Shared Facilities so as to minimize interference with the Co-Owners' scheduled energy deliveries.  Maintenance and any planned outages of the Shared Facilities shall be scheduled, to the maximum extent possible, during scheduled maintenance outages of the Co-Owners' Facilities.  Each Co-Owner will provide to the Operator and the other Co-Owners by [January 1] of each year a schedule of planned maintenance outages on such Co-Owner's Facility for the subsequent twelve- month period.  Scheduled outages of the Shared Facilities will be subject to the approval of all affected Co-Owners, such approval not to be unreasonably withheld.  Operator will seek to limit the duration of any outage, planned or unplanned, to the maximum extent reasonably possible consistent with Applicable Laws and Good Utility Practice.
      6.5 Unplanned Outages
.  Operator will notify the Co-Owners of all emergency or unplanned outages of any of the Shared Facilities as soon as practicable, in accordance with Good Utility Practice, and will provide an estimated time of return of the Shared Facilities to service, or if not known, will keep the Co-Owners advised regarding the status of same.
      6.6 Emergency Conditions
.  In the event of an emergency condition involving the Shared Assets that could be reasonably expected by Operator to result in possible personal injury, loss of life, damage to or destruction of property, or danger to the public (an "Emergency Condition"), the Operator shall, without the need for prior notification of the Co-Owners, take such action as may be reasonable and necessary, as determined in the sole discretion of the Operator, including curtailing energy deliveries on the Transmission Line as provided in Section 4.2.1, to prevent, avoid or mitigate such loss, and shall, as soon as reasonably practicable, report any such emergency, including the Operator's response thereto, to the Co-Owners, and  Operator shall be compensated by the Co-Owners for the costs of taking such actions in proportion to their Ownership Interest in the Shared Assets so affected. 
      6.7 O&amp;M Costs
.  Costs of performing O&amp;M Services (the "O&amp;M Costs") shall include all payments made and expenses incurred by Operator in performing O&amp;M Services (at cost and without markup), including but not limited to related overhead and applicable taxes, and costs (except insurance costs) related to ownership of the Shared Assets and shall be allocated among the Co-Owners as provided in Section 6.10.  O&amp;M Costs shall not include any costs related to use of any of the Shared Facilities by Persons other than Co-Owners, including without limitation any costs or expenses related to portions of the Shared Facilities leased or subleased to such Persons (including the sublease of a portion of the operations and maintenance building to Lone Valley Solar Park I LLC and Lone Valley Solar Park II LLC).
      6.8 Budgeting Process
.  Each year during the term of this Agreement, Operator will prepare a forecast budget of O&amp;M Costs for the following calendar year and will provide a copy to the Co-Owners by October 31.  The forecast budget shall separately allocate costs and expenses to each Shared Assets Group to the extent reasonably practical.  The forecast budget must be approved by two-thirds of the Co-Owners (based on their respective Proportionate Shares), such consent not to be unreasonably withheld.  The Co-Owners will have thirty (30) days after receipt to review and approve the forecast budget and discuss any concerns with the forecast budget with Operator.  If two-thirds or more of the Co-Owners (based on their respective Proportionate Shares) approve the forecast budget, it shall be deemed approved for all purposes hereunder and shall be binding on all Co-Owners.  In the event less than two-thirds of the Co-Owners (based on their respective Proportionate Shares) approve the forecast budget, the matter will be submitted to dispute resolution pursuant to Exhibit E; provided, however, that pending resolution of any such dispute, the forecast budget shall be the operative budget for the Shared Facilities except that the aggregate O&amp;M Costs in each category of expenses shall be limited to one hundred twenty-five percent (125%) of the amount for such category in the previous Annual O&amp;M Budget.  After approval of and, if applicable, resolution of any disputes, the forecast budget (such approved forecast budget, the "Annual O&amp;M Budget"), each Co-Owner shall pay Operator 1/12 of its Proportionate Share of the Annual O&amp;M Budget plus any applicable costs or charges payable for Extraordinary Maintenance by the fifth (5th) day of each calendar month during the ensuing calendar year.  Operator shall reconcile the actual amounts paid for O&amp;M Costs to the forecast budget after the end of the calendar year as provided in Section 6.10.  
      6.9 Extraordinary Maintenance
.  Each Co-Owner agrees to reimburse Operator for its Proportionate Share of the costs of any maintenance or other services required in the event of unusual or catastrophic circumstances, to the extent such costs were not included in the forecast budget for O&amp;M Services ("Extraordinary Maintenance").  In such event, Operator will prepare a forecast budget for such Extraordinary Maintenance for the Co-Owners' review and performance of the Extraordinary Maintenance will be subject to the Co-Owners' prior approval, not to be unreasonably withheld, unless immediate action is required due to an Emergency Condition pursuant to Section 6.6.  On or before the tenth (10th) day of the month after the month in which any Extraordinary Maintenance costs are incurred, Operator shall invoice the Co-Owners for their respective Undivided Use Interest of such costs.  Any amounts so invoiced will be at the same time as the next monthly payment on account of the Annual O&amp;M Budget as provided in Section 6.8.
      6.10 Responsibility for O&amp;M Costs
.  Each Co-Owner shall be responsible for its Proportionate Share of O&amp;M Costs, including the costs of any Extraordinary Maintenance incurred by Operator, with respect to each Shared Assets Group as to which it is a Co-Owner; provided that, except in the case of Emergency Conditions, Operator will not incur O&amp;M Costs in any major category of O&amp;M Costs or in the aggregate that exceed the budgeted amount for such category or the total amount of O&amp;M Costs, as applicable, by more than ten percent (10%) of the amounts shown on the Annual O&amp;M Budget without the written consent of at least two-thirds of the applicable Co-Owners (based on their respective Proportionate Shares).  Within sixty (60) days after the end of each calendar year, Operator shall invoice the Co-Owners for, or shall refund to the Co-Owners, as applicable, their Proportionate Shares of the difference between the Annual O&amp;M Budget and the actual amount of O&amp;M Costs paid or incurred in such calendar year.  Any invoice for such amounts shall be paid within thirty (30) days after receipt.  The invoices shall be delivered to Co-Owners as set forth in Section 17.15.  Any amounts not paid when due shall be deemed delinquent and shall accrue interest at the then-effective prime rate of interest published under "Money Rates" by The Wall Street Journal, plus two percent per annum from the due date to the date of payment (the "Late Payment Rate").  In the event that any due date falls upon a weekend day or bank holiday, such payment shall be due and payable on the first Business Day immediately thereafter.
      6.11 Books and Records
.   Operator shall maintain books and records in sufficient detail to verify amounts due and payable hereunder for a period of not less than three (3) years after the end of the calendar month to which they relate, and all such books and records shall be available for inspection and/or copying by each Co-Owner or its authorized representative at the cost and expense of such Co-Owner and at reasonable times during regular business hours, upon reasonable notice to Operator.
      6.12 Disputes
.  If a Co-Owner disputes the accuracy of all or any portion of an invoice, such Co-Owner shall, nevertheless, pay the full amount of the invoice (including the disputed portion) and submit to Operator a written statement detailing the items disputed.  If the Co-Owner and Operator are unable to resolve the disputed items, the matter will be resolved in accordance with the dispute resolution provisions in Exhibit E.  If the Co-Owner prevails with respect to the disputed amounts, Operator shall refund the Co-Owner the disputed amounts, including interest on the disputed amounts at the Late Payment Rate.
      6.13 No Waiver of Right to Audit
.  Any payment made by a Co-Owner pursuant to this Agreement shall not constitute a waiver of any right of such Co-Owner to question or contest the accuracy of any charge, or to request and receive from Operator sufficient data to audit any charge concerning which a Co-Owner has a question or which is or may be contested, provided, however, that a Co-Owner must initiate any audit or data request no later than twelve (12) months after the Due Date of any such bill or charge and bear reasonable costs associated with such audit, and provided further that if as a result of the audit a determination is made that errors were made by Operator, Operator shall, in addition to correcting the error,  reimburse the costs of the audit to the Co-Owners. 
      6.14 Obligations
.  The Operator shall have no liability for any obligations except those expressly stated in this Agreement, and nothing in this Agreement shall obligate the Operator to perform any duties or assume any liabilities under any agreement to which the Operator is not directly a party unless such duties are also expressly stated in this Agreement or otherwise expressly agreed to by Operator, and then only to such extent.  The Co-Owners acknowledge that the Operator's performance under this Agreement is dependent upon the Co-Owners having complied with their obligations under this Agreement (including with respect to payment) and the Operator having timely and appropriate access to all parts of the Shared Assets and access to all documents as reasonably required by the Operator.
      6.15 Risk of Loss; Indemnity
.  
      6.15.1 As between the Co-Owners and the Operator, the Co-Owners shall be responsible for the risk of loss to the Shared Facilities or any portion thereof during the repair, management, operation and maintenance of the Shared Facilities, regardless of cause, except to the extent such loss is caused in whole or in part by the fraud or willful misconduct of the Operator.
      6.15.2 Operator shall not be liable to any Co-Owner for any act performed in good faith by Operator in the discharge of its duties hereunder as Operator or in the exercise of its powers and authority hereunder as Operator, including damages arising out of any curtailment of use of the Shared Facilities or the disconnection of, or the election not to disconnect, a Facility from the Shared Facilities, unless Operator's acts or omissions constitute fraud or willful misconduct.
      6.15.3 Each Co-Owner shall, pro rata in accordance with its Proportionate Interest, indemnify and hold harmless Operator and its employees and agents, from any claim, loss, liability or damage incurred by reason of any act performed or omitted to be performed by it in its reasonable judgment, in good faith, or in reasonable reliance on advice of Operator's attorneys or accountants, in connection with the Shared Facilities, the Shared Real Property or this Agreement (other than as a result of the fraud or willful misconduct of Operator), including reasonable attorneys' fees incurred by Operator in connection with the defense of any action based on any such alleged act or omission.
      6.16 Limitations on Operator's Authority
.   Notwithstanding anything herein to the contrary, Operator shall have no authority to and shall not (i) amend or terminate any Material Project Agreement or enter into, amend or terminate any other contract or agreement on behalf of the Co-Owners, (ii) create any lien or security interest on or in any Shared Facilities, Shared Real Property or any other asset of any or all of the Co-Owners, except as expressly permitted under Section 10.1.6, (iii) buy, sell, convey or otherwise dispose of any Shared Facilities or Shared Real Property, (iv) incur any debt or other obligations on behalf of any or all of the Co-Owners, except in connection with the O&amp;M Services or as provided in this Agreement or another written agreement among Operator and the Co-Owners, or (v) enter into leases or subleases of or grant licenses or other rights with respect to any Shared Facilities or Shared Real Estate except with the written approval of all of the Co-Owners.
      6.17 Replacement of Operator.
.   Operator may only be removed upon the vote of two-thirds of the Co-Owners (based on their respective Proportionate Shares).  Any new Operator must be approved by the unanimous vote of the Co-Owners.
ARTICLE VII 
DAMAGE TO, DESTRUCTION OR FAILURE OF SHARED FACILITIES
      7.1 Damage or Destruction
.  In the event of any damage or destruction to, or other failure of all or any part of the Shared Facilities that affects the business operations of one or more Co-Owners in a Shared Assets Group (each an "Affected Party"), such Affected Party shall, subject to any contrary requirements in Material Project Agreements or Applicable Law, take all commercially reasonable actions as may be necessary or appropriate to repair or replace the affected Shared Facilities or other facilities in order to restore the affected Shared Facilities or other facilities to substantially the same condition (or better) as before such damage or destruction (and any costs associated with such actions, after accounting for recoveries under any applicable insurance policies, will be shared by the Co-Owners in such Shared Assets Group pro rata based on their Ownership Interests, as applicable).  Following any such damage, destruction or failure, if (i) the Affected Party fails to diligently proceed with the repair or replacement of the affected Shared Facilities or other facilities in accordance with the preceding sentence, or (ii) the Affected Party notifies the other Co-Owners that it does not intend to repair or replace the affected Shared Facilities or other facilities, then in either such case, the other Co-Owners in the relevant Shared Assets Group shall have the right to repair or replace the affected Shared Facilities or other facilities (or a portion thereof sufficient to serve such other Co-Owners' requirements) and continue the operation and maintenance thereof for the remainder of the Term; provided that, in such event the Affected Party shall be obligated to the Co-Owners funding the repair or replacement of the Shared Facilities or other facilities to the extent of its Proportionate Share of the costs of repair or replacement; and provided further, that such other Co-Owners shall not unreasonably interfere with the business operations of the Affected Party.  In all events, the Co-Owners shall cooperate with each other in good faith to minimize the cost of repair or replacement of the Shared Facilities and minimize the impact thereof on the Co-Owners and their respective business operations.
ARTICLE VIII 
CESSATION OF OPERATIONS BY A CO-OWNER
      8.1 Co-Owner Ceasing Operations
.  In the event a Co-Owner decides to shut down, decommission, abandon or cease operation of its Facility (such Co-Owner, a "Co-Owner Ceasing Business Operations"), it shall provide the other Co-Owners with at least six (6) months' prior written notice of such shut-down, abandonment, decommissioning, or cessation of operations.  The Co-Owner Ceasing Business Operations shall reasonably cooperate with the other Co-Owners in order to minimize any interference with such other Co-Owners' business operations, and the Co-Owner Ceasing Business Operations shall, at the request of the other Co-Owners, take such actions as may be necessary or appropriate, consistent with Good Utility Practice, to safely disconnect its Facility from the Shared Facilities and to cease using the Shared Facilities and the Shared Real Property, including granting such rights and executing and delivering such agreements, assignments, and instruments as may be necessary to transfer and convey its Ownership Interest in the Shared Assets in the applicable Shared Asset Group(s) to the other Co-Owners in accordance with Section 8.3, subject to obtaining any necessary FERC approvals, and compliance with requirements of any other Governmental Authority and Applicable Law.  The remaining Co-Owners in the Shared Asset Group will assume decommissioning obligations for the Shared Facilities in accordance with their Proportionate Share of the Shared Assets acquired from the Co-Owner Ceasing Business Operations.  The Co-Owner Ceasing Business Operations shall also grant to the other Co-Owners such rights and interests as may reasonably be necessary to enable to enable the remaining Co-Owners to continue using, operating, and maintaining the Shared Facilities as they have been used, including if necessary the construction of such additional facilities as may be necessary to replace Shared Facilities which are no longer usable.  After such abandonment, decommissioning, shut down or cessation of business operations by the Co-Owner Ceasing Business Operations, the other Co-Owners shall assume and be responsible for all costs, liabilities and expenses associated with the use, operation, maintenance (and ownership and decommissioning, if applicable) of the Shared Facilities (and any other facilities that may become Shared Facilities).  
      8.2 Co-Owner Last Using Shared Facilities
.  The Co-Owner(s) last using the Shared Facilities (as confirmed in writing by the Co-Owners pursuant to the last two sentences of this Section 8.2) shall have the obligation to decommission such Shared Facilities to the extent contractually required or pursuant to Applicable Law (the "Decommissioning Obligation"); provided, however, that if two or more Co-Owners discontinue using the Shared Facilities contemporaneously, such Co-Owners shall share in any Decommissioning Obligation on a basis reflecting their Ownership Interests in such Shared Facilities, where applicable.  If a Co-Owner determines that it no longer desires to utilize the Shared Facilities, it shall provide such notice to the other Co-Owners (the "Last Use Notice") at least six (6) months prior to the date on which it will cease to utilize the Shared Facilities, in which case such Co-Owner shall, as of such specified date and subject to any required FERC notifications or obtaining any necessary FERC approvals, have no further right to utilize the Shared Facilities.  The Co-Owner(s) that receive(s) such Last Use Notice shall, within forty-five (45) days of such receipt, either (i) agree that it or they also no longer desire to utilize the Shared Facilities, in which case the Co-Owners shall be deemed to have discontinued use of the Shared Facilities contemporaneously and shall share in any Decommissioning Obligation as set forth above, or (ii) state that it or they intend(s) to continue to utilize the Shared Facilities, in which case such Co-Owner(s) shall assume the Decommissioning Obligation.  
      8.3 Procedure for Transfer by a Co-Owner of its Ownership Interest.  The consideration for transfer of a Co-Owner's Ownership Interest in its Shared Assets to other Co-Owner(s) pursuant to the foregoing shall be an amount equal to the fair market value of the Shared Assets.  The fair market value of the Shared Assets shall be determined by agreement of the Co-Owners of the Shared Assets being transferred, or if they are unable to agree, by appraisal conducted by an appraisal conducted by an appraiser selected jointly by such Co-Owners.  If the Co-Owners are unable to agree on a single appraiser, then each Co-Owner shall select an appraiser, and such appraisers shall select an independent appraiser to determine fair market value of the Shared Assets.  Such determination of the fair market value shall be final and binding on the Co-Owners.    
      8.4 Change in Ownership Interest
. In the event of a change in the Ownership Interests of the Co-Owners in a Shared Asset Group, each Co-Owner's Ownership Interest and/or Undivided Use Interest, and the Co-Owners' reimbursement percentages for O&amp;M Costs (including taxes) will be adjusted, and this Agreement shall be amended to reflect such adjustment.  Any change in Ownership Interest of a Co-Owner shall be subject to required FERC approvals and any other filings with or approvals by Governmental Authorities and compliance with Applicable Laws.  
ARTICLE IX 
RELATIONSHIP OF OPERATOR AND CO-OWNERS
      9.1 Actions Taken by Operator
.  Except as provided in Section 9.8, Operator is authorized to take all actions or activities on behalf of the Co-Owners that the Co-Owners have the right or obligation to take or perform with respect to the construction, installation, operation, maintenance, repair, restoration, removal and/or replacement of the Shared Assets, and Operator shall take and perform such actions and activities in lieu of the Co-Owners.  A Co-Owner and its invitees shall have the right to inspect the Shared Facilities and the Shared Real Property to the full extent permitted by the Shared Real Property Agreements, provided however, that such inspection shall not unreasonably interfere with the construction, installation, operation, maintenance, repair, restoration, removal and/or replacement of the Shared Facilities, and any Persons inspecting the Shared Facilities shall abide by any and all safety rules and procedures established by Operator that are not inconsistent with this Agreement or otherwise applicable to the Project, as communicated by the Operator prior to their access to the Shared Facilities; and provided further Operator may require that such Co-Owner and its invitees must be accompanied by Operator.
      9.2 Limitations on Operator's Authority
.  Operator shall not, without the prior approval of all of the Co-Owners, take any of the following actions;
      9.2.1	Create or cause to be created any lien, security interest or charge on the Shared Facilities or the Shared Real Property;
      9.2.2	Amend or modify the terms of this Agreement;
      9.2.3	Sell, assign, mortgage, encumber, convey or otherwise transfer all or any portion of any estate, right, title or interest of the Co-Owners in the Shared Facilities and/or the Shared Real Property, except for disposal of used, obsolete or worn out equipment that is being replaced or in connection with the decommissioning the Shared Facilities and the winding up of this Agreement;
      9.2.4	Borrow any funds or incur any indebtedness on behalf of the Co-Owners;
      9.2.5	Incur expenses on behalf of the Co-Owners except in accordance with this Agreement;
      9.2.6	Enter into any contracts or commitments in excess of Five Hundred Thousand Dollars ($500,000) or with a duration of greater than one (1) year, except as provided in the Annual O&amp;M Budget and/or the approved budget for Extraordinary Maintenance; or
      9.2.7	Compromise any claim, demand or legal proceeding where the liability is not fully covered by insurance.
      9.3 Costs and Expenses
.  Except with respect to the design and construction of the Shared Facilities, which is covered in Section 4.3, Operator's costs and expenses incurred in the exercise of rights and performance of obligations on behalf of the Co-Owners under the Shared Real Property Agreements and this Agreement shall be considered reimbursable O&amp;M Costs for purposes of this Agreement.
      9.4 Obligations under Shared Real Property Agreements; Exercise of Options
.  
      9.4.1	Operator's obligation to perform obligations under the Shared Real Property Agreements shall include the obligation to fulfill indemnity obligations; provided that, Operator's costs in performance of such obligations shall be subject to indemnification pursuant to Section 6.15 and Article XV.  If, pursuant to Article XV, the cost of performance would ultimately be required to be paid entirely by a Co-Owner (i.e., the indemnified claims are solely due to negligence of such Co-Owner), the Co-Owner shall instead assume the direct obligation to perform such indemnity obligations and Operator shall have no obligation to do so. 
      9.4.2	Operator shall monitor the dates for the exercise of all options and other elections under the Shared Real Property Agreements, shall notify the Co-Owners of the deadlines for exercising such options or elections not less than [sixty (60)] days before such deadlines, and shall seek the decision of the Co-Owners with respect to the exercise of such options or other elections in a timely manner.  No option or other election shall be exercised except with the consent of at least two-thirds  of the Co-Owners (based on their respective Proportionate Shares).
      9.5 Consent or Approval
.  Operator shall not grant any consent or approval of the Co-Owners required under of any of the Shared Real Property Agreements or Material Project Agreements without the prior written consent of all of the affected Co-Owners, which shall not be unreasonably withheld or delayed.
      9.6 Condemnation Awards
.  Any condemnation or similar awards to which the Co-Owners shall become entitled under the Shared Real Property Agreements or with respect to the Shared Facilities shall be used to repair, restore or replace the affected Shared Real Property and/or Shared Facilities unless such repair, restoration or replacement is not feasible, the condemnation or other award is insufficient to complete such repair, restoration or replacement, or all of the Co-Owners agree otherwise in writing.  If such condemnation or other awards are not used to repair, restore or replace the affected Shared Real Property and/or Shared Facilities, they shall be divided among the Co-Owners in proportion to their respective Ownership Interests in the affected Shared Real Property and/or Shared Facilities, provided that if such sums are in reimbursement of or compensation for specific costs or damages incurred by the Co-Owners in ratios different from that of their Ownership Interests, then such different ratios shall be used in apportionment of such sums among the Co-Owners.
      9.7 Transfer or Encumbrance of Interest in Shared Assets
.  Notwithstanding anything to the contrary contained in this Agreement or the Shared Real Property Agreements, and without limiting the other requirements and limitations in this Agreement with respect thereto, including Section 10.6 and Article XIV, in no event shall a Co-Owner assign, transfer or convey, or mortgage, pledge or otherwise encumber its Ownership Interest in any Shared Asset except in connection with a simultaneous assignment, transfer or conveyance, or mortgage, pledge or other encumbrance, of the Facility owned by such Co-Owner and such Co-Owner's interests in this Agreement.  Any such assignment, transfer, conveyance, mortgage, pledge or encumbrance and the rights acquired in connection therewith shall be subject in all respects to the terms and conditions of this Agreement.
      9.8 Additional Co-Owner Rights
.  
      9.8.1 Each Co-Owner shall have the right, in the case of an Emergency Condition that affects such Co-Owner's Facility or the Shared Facilities necessary to serve such Co-Owner's Facility, to make such repairs and to take such other actions with respect to the Shared Facilities as may be reasonably necessary to avoid or mitigate loss as a result of such Emergency Condition; provided, however, that, to the extent that circumstances permit, a Co-Owner shall make reasonable efforts to contact the Operator and to have the Operator repair or otherwise take action with respect to the Shared Facilities before making such repairs or taking such other actions.
      9.8.2 Each Co-Owner shall have the right to participate with the other Co-Owners in connection with any dispute with a landowner or other Co-Owner arising under the Shared Real Property Agreements, and the Co-Owners shall fully cooperate and communicate with one another in that regard.
      9.8.3 If the Operator fails to take any action or perform any of the services it is obligated to do or perform under this Agreement after reasonable notice, and if such failure to act or perform has a material adverse effect on the use or operation of such Co-Owner's Facility or the Shared Facilities necessary to serve such Co-Owner's Facility, such Co-Owner may take such actions as may reasonably be necessary to correct the Operator's failure to act or perform and shall be entitled to recover all reasonable costs of doing so from the Operator; provided that such Co-Owner shall give the other Co-Owners and the Operator not less than ten (10) days prior written notice (in addition to any notice to the Operator seeking to have the Operator take the required action or perform the required services) before taking such actions.
ARTICLE X 
COVENANTS
Each Co-Owner hereby covenants as follows:
      10.1 No Interference.  Except as otherwise set forth in this Agreement, each Co-Owner's use of the Shared Assets shall not interfere in any material respect with the use and enjoyment by the other Co-Owners of the Shared Assets or other rights arising under this Agreement to the extent provided in this Agreement, including curtailing or diminishing another Co-Owners ability to use its Proportionate Share of the Delivery Capacity of the Transmission Line. 
      10.2  Interconnection Rights.  Each Co-Owner shall be responsible for securing and maintaining such rights as are necessary to interconnect such Co-Owner's Facility with the Transmission Owner's transmission system at the Point of Interconnection.
      10.3 Interconnection Agreement.  The rights and responsibilities of the Co-Owners with respect to the Interconnection Agreement shall be governed by the LGIA Co-Tenancy Agreement.  Nonetheless, a Co-Owner, upon receiving notice of default from the CAISO or Transmission Owner under the Interconnection Agreement, shall provide a copy of such notice of default to the other Co-Owners within 24 hours of receiving such notice.
      10.4 Shared Real Property Agreements.  Each Co-Owner shall provide all other Co-Owners and to each Lender, within 24 hours, a copy of a notice of any default by or disagreement with a landowner, or notice of default by a Co-Owner, under any Shared Real Property Agreement, as well as any communication with such landowner or any other relevant Co-Owner related to the Shared Real Property Agreement or rights or obligations thereunder.
      10.5 No Waste.  No Co-Owner shall use or permit the use of the Shared Assets in any manner that would create waste or nuisance, or that would materially increase the premium, or materially jeopardize the issuance or maintenance of any insurance policy of any Co-Owner relating to the Shared Assets.
      10.6 No Liens.  Subject to Article XIV, no Co-Owner shall create, permit or suffer to exist by, through or under such Co-Owner any liens on the Shared Assets, except for (a) liens for taxes that are not yet delinquent or are being contested in good faith by appropriate proceedings, and (b) mechanic's, materialmen's or other like liens that arise from the construction, reconstruction, ownership or operation of such Shared Assets; provided that if any mechanics' liens or similar liens attached to the Shared Assets, the Co-Owner performing or contracting or causing the engagement of the holder of such attached lien shall, within thirty (30) days after it receives notice of the filing, either bond around such lien or establish appropriate reserves therefor, or otherwise remove such lien from such Shared Assets pursuant to applicable Law (each of (a) and (b), a "Permitted Lien"). 
      10.7 Standard of Performance.  Each Co-Owner shall construct, operate and maintain its Facility and shall perform its obligations under this Agreement in accordance with (a) all Applicable Laws, including the CAISO Tariff, and Permits, (b) Good Utility Practice, (c) the terms and conditions of the Interconnection Agreement and all applicable requirements thereunder, (d) the terms and conditions of the Material Project Agreements to which it is a party, and (e) the terms and conditions of all Shared Real Property Agreements.
ARTICLE XI 
INSURANCE; WAIVER
      11.1 Insurance Responsibilities
.  Operator shall procure and maintain, on behalf of the Co-Owners, all-risk property insurance for the full replacement cost of the Shared Assets, and comprehensive general liability insurance insuring Co-Owners and Operator against claims or losses caused by or arising out of the ownership, operation and maintenance of the Shared Assets, in such amounts and with such coverages as are customary, commercially reasonable and consistent with Good Utility Practice, as well as any additional insurance as may be required under any of the Shared Real Property Agreements or Material Project Agreements.  Procurement of such insurance shall be part of the O&amp;M Services, and the cost thereof shall be O&amp;M Costs.  All Co-Owners shall be named as loss payees or named insureds, as applicable, under such policies.  Operator shall provide certificates of insurance coverage to the Co-Owners upon request. 
      11.2 Waiver
.  Notwithstanding any provision to the contrary in this Agreement, each of the Co-Owners hereby waives any and all rights of recovery, claim, action or cause of action against the other Co-Owners and their Affiliates, for any loss or damage that may occur to the Shared Facilities, or any personal property of such Co-Owner in or non the Shared Real Property, by reason of fire, the elements or any other cause which is required to be insured by property insurance policies obtained pursuant to this Agreement, regardless of cause or origin, including negligence of the other Co-Owner hereto, or its Affiliates, and each Co-Owner shall cause its insurer to waive subrogation  rights against the other Co-Owners.
ARTICLE XII 
TAXES
      12.1 Operator Payment of Property Taxes and Assessments
.  Operator will pay, when due, all real and personal property taxes and assessments, general or special, levied against the Shared Facilities or their operation, or payment obligations in lieu of such taxes, or that are payable pursuant to the Shared Real Property Agreements, subject to Operator's right to contest the validity of such taxes or assessments and a Co-Owner's right to require Operator contest the validity of such taxes or assessments at the Co-Owner's expense.  
      12.2 Reimbursement Obligations
.  Each Co-Owner shall be responsible for, and the Co-Owners will reimburse Operator for such Co-Owner's respective Proportionate Share in one or more Shared Asset Groups in which it has an Ownership Interest, of the taxes and assessments described in Section 12.1 as O&amp;M Costs as provided in Article VI.
      12.3 Transfer Taxes, Sales and Use Taxes
.  In the event of a transfer or sale of all or part of a Co-Owner's Ownership Interest in a Shared Asset, applicable transfer taxes and sales and use taxes will be borne by the purchaser(s) or transferee(s) of such Shared Asset; provided that the non-transferring Co-Owners shall have no obligation with respect to any such transfer taxes or sales and use taxes, and shall be held harmless against same by the transferring Co-Owner (unless they are the purchaser or transferee of such Shared Asset).  
      12.4 Construction of Shared Assets.  In the event of construction of an Additional Phase or other Shared Assets where construction costs are shared by Co-Owners of the Shared Assets, all applicable sales and use taxes and transfer taxes shall be borne by the Co-Owners of such Shared Assets in accordance with their respective Ownership Interests in the Shared Assets.    
ARTICLE XIII 
EVENTS OF DEFAULT; REMEDIES
      13.1 Defaults
.  The occurrence and continuation of any of the following events shall constitute an event of default by a Co-Owner or Operator, as applicable, under this Agreement (an "Event of Default"):
      13.1.1 Payment.  A Co-Owner fails to pay when due any amounts required to by paid by such Co-Owner under this Agreement, and such failure to pay is not cured within ten (10) days following written notice from any other Co-Owner or the Operator specifying the amount to be paid, provided that such period shall be extended with respect to a disputed portion of such amount for so long as the allegedly defaulting Co-Owner is disputing in good faith such amount pursuant to the procedures set forth in Section 6.12.
      13.1.2 Bankruptcy.  If a Co-Owner or the Operator files a petition or otherwise commences, or authorizes or acquiesces in the commencement of, a proceeding or cause under any bankruptcy, insolvency, receivership or similar law for the protection of creditors or suffers the filing of an involuntary bankruptcy petition or proceeding commenced against it, which in the case of an involuntary petition or proceeding remains undismissed and unstayed for sixty (60) days;
      13.1.3 Other Defaults.  A Co-Owner fails to cure any breach or default in the performance of any material covenant or obligation hereunder in any material respect, within thirty (30) days following written notice from any other Co-Owner or Operator specifying the nature of the failure to perform, provided that if the default is not reasonably capable of being cured within thirty (30) days, then the defaulting Co-Owner may be allowed such longer period as the Co-Owners mutually agree (not to exceed ninety (90) days) as may be reasonably necessary under the circumstances to cure such failure so long as the defaulting Co-Owner is pursuing a cure with reasonable diligence; provided, further, that if any covenant or obligation relates to the performance of any covenant or obligation under a Shared Real Property Agreement or Material Project Agreement, such default must be cured no later than [ten (10)] days before the expiration of any cure period in such Shared Real Property Agreement or Material Project Agreement.
      13.1.4 Default by Operator.  Operator fails to perform any of its material operation, maintenance, repair or other obligations in this Agreement, with respect to all or a portion of the Shared Assets, and such failure is not cured within ten (10) days following written notice by a Co-Owner; provided that, that if such failure by Operator creates an Emergency Condition or materially interferes with a Co-Owner's Undivided Use Interest in Shared Facilities in which it has an Ownership Interest, or operation of its Facility, only such advance written notice, if any, as may be reasonably practicable under the circumstances shall be required, but if such advance notice is not provided, written notice thereof shall be provided promptly thereafter by the Co-Owner to Operator; provided further that if the default is not reasonably capable of being cured within ten (10) days, then the defaulting Co-Owner may be allowed such longer period as the Co-Owners mutually agree (not to exceed [ninety (90)] days) as may be reasonably necessary under the circumstances to cure such failure so long as the defaulting Co-Owner is pursuing a cure with reasonable diligence; or
      13.1.5 Assignment; Merger, Consolidation without Assumption of Obligations.  A Co-Owner assigns or otherwise transfers its rights under this Agreement except as expressly permitted hereunder, or consolidates or amalgamates with, or merges with or into, or transfers all or substantially all of its assets to, another entity and, at the time of such consolidation, amalgamation, merger or transfer, the resulting, surviving or transferee entity fails to assume all the obligations of such Co-Owner under this Agreement to which it or its predecessor was a party by operation of law or pursuant to an agreement reasonably satisfactory to the other Co-Owners.
      13.2 Remedies Upon Default
.
      13.2.1 If any default is not cured within the applicable cure period (if any) provided in Section 13.1 by making or tendering the required payment or performance, each non-defaulting Co-Owner shall have the right (i) to cure the default at the expense of the defaulting Co-Owner, in which event the defaulting Co-Owner shall reimburse the curing Co-Owner all of the curing Co-Owner's costs of cure within thirty (30) days of invoice, or curing Co-Owner may offset such costs against any sums then or thereafter owed by the curing Co-Owner to the defaulting Co-Owner; (ii) to enforce specific performance; or (iii) to enforce any other remedy available to the non-defaulting Co-Owner at law or in equity, subject to Section 13.2.5 and Article XVI.
      13.2.2 If Operator defaults pursuant to Section 13.1.4, any Co-Owner may at its option access the Shared Assets and perform (or cause to be performed) operation, maintenance, repair or other duties on behalf of Operator, and Operator shall reimburse such Co-Owner's reasonable costs and expenses incurred by (or on behalf of) such Co-Owner promptly upon Operator's receipt of an invoice accompanied by documentation evidencing such costs and expenses and their reasonableness; 
      13.2.3 In addition to the remedies provided in Section 13.2.1 and 13.2.2, if the defaulting Co-Owner is the Operator, the other Co-Owners (the "Non-Defaulting Co-Owners") shall have the right, by unanimous consent of the Non-Defaulting Co-Owners, to remove the defaulting Co-Owner from its position as Operator and to appoint one of themselves as the Operator for purposes of this Agreement.  The Co-Owners shall cooperate with each other in effecting such transition and provide all notices to third parties and take all other actions deemed necessary or advisable by any of them with respect to such change in status.  Effective as of the date the non-defaulting Co-Owner becomes Operator, it shall assume responsibility for all obligations of Operator thereafter accruing under this Agreement and the defaulting Co-Owner shall have all obligations of a Co-Owner thereafter accruing under this Agreement. 
      13.2.4 Notwithstanding anything contained in this Agreement to the contrary, if a Co-Owner's default under this Agreement creates a material interference with a Non-Defaulting Co-Owner's operations or maintenance of such Non-Defaulting Co-Owner's Facilities, the Non-Defaulting Co-Owner(s) shall have the right to any expedited remedies that may be available hereunder at law or in equity, including the right to cure such default as provided in Section 13.2.1, the right to seek specific performance of this Agreement, and the right to reimbursement of all reasonable costs actually incurred by such Non-Defaulting Co-Owner in effecting such cure.
      13.2.5 In no event shall any Co-Owner be entitled to terminate this Agreement on account of default by another Co-Owner or the Operator hereunder.  None of the bankruptcy or insolvency of a Co-Owner or the Operator, or an Event of Default by a Co-Owner or the Operator under this Agreement shall be grounds for terminating this Agreement.
      13.2.6 The Co-Owners and the Operator agree that damages may be an inadequate remedy for certain Events of Default, and that each Co-Owner and the Operator shall be entitled to seek injunctive and other equitable relief, including specific performance, against any other Co-Owner or the Operator to prevent or remedy such Event of Default.
ARTICLE XIV 
LENDER PROTECTION
      14.1 Right to Encumber and Assign
.  As provided in Section 17.3, each Co-Owner may, upon notice to the other Co-Owners but without the other Co-Owners' consent or approval, mortgage, collaterally assign, or otherwise encumber and grant a security interest in its rights to any party providing debt or equity financing or refinancing (collectively, "Lenders") under this Agreement in and to the Shared Real Property, the Shared Facilities or the electrical and/or transmission capacity of the Shared Facilities in a Shared Assets Group in which it has an Ownership Interest (collectively, the "Security Assets"), which said security interests in all or a part of the Security Assets are collectively referred to herein as "Lenders's Liens".
      14.2 Co-Owners' Obligations
.  Each Co-Owner agrees to consent in writing to financing documents as may reasonably be required by Lenders.  As a precondition to exercising any remedies related to any Event of Default by a Co-Owner under this Agreement, the other Co-Owners shall give written notice of default to each Lender that has given written notice of its Lender's Lien and notice address to the Co-Owners and the Operator at the same time it delivers notice of default to the Co-Owner, specifying in detail the alleged event of default and the required cure.  Each Lender shall have the right, but not the obligation, to cure any Event of Default by the Co-Owner to which it is a Lender and shall have the same amount of time to cure the Event of Default as such Co-Owner plus thirty (30) days in the case of a monetary Event of Default and plus sixty (60) days in the case of all other Events of Default by such Co-Owner; provided that if possession of the property is necessary in order to cure an Event of Default, the cure period shall be extend by up to an additional one hundred eighty (180) days in order to enable the Lender to conduct foreclosure proceedings.  The Lender shall have the right, but not the obligation, to substitute itself for the Co-Owner to which it is the Lender and perform the duties of such Co-Owner hereunder for purposes of curing such event of default.  Each Co-Owner expressly consents to such substitution, agrees to accept such performance and authorizes the Lender (or its employees, agents, representatives or contractors) to enter upon the Shared Real Property and the Shared Facilities to complete such performance with all of the rights and privileges of such Co-Owner hereunder.
      14.3 Lender Obligations
.  Any Lender that does not directly hold an interest under this Agreement, or whose interest is held solely for security purposes, shall have no obligation or liability to any other Co-Owner for performance of a Co-Owner's obligations under this Agreement prior to the time the Lender directly holds an interest in this Agreement, or succeeds to title to a Co-Owner's interest.  A Lender shall be liable to perform obligations of a Co-Owner to another Co-Owner under this Agreement only for and during the period it directly holds such interest.  In the event that a Lender elects to (i) perform a Co-Owner's obligations under this Agreement, (ii) continue operation of the Shared Facilities, (iii) acquire any portion of a Co-Owner's right, title or interest in all or any of the Security Assets or (iv) enter into a new joint ownership agreement as provided in Section 14.6, then such Lender shall not have any personal liability to a Co-Owner in connection therewith, and the sole recourse in the event of default by such Lender shall be to execute against such Lender's interest in the Security  Assets.  Moreover, any Lender who acquires the Security Assets pursuant to foreclosure or an assignment in lieu of foreclosure shall not be liable to perform any obligations under the Agreement to the extent the same are incurred or accrue after such Lender no longer has ownership of the Security Assets.
      14.4 Lender's Right to Possession, Right to Acquire and Right to Assign
.  A Lender shall have the absolute right: (i) to assign its Lender's Lien; (ii) to enforce its Lender's Lien and acquire title to all or any portion of the Security Assets by any lawful means; (iii) to take possession of and operate all or any portion of the Security Assets and to perform all obligations to be performed by the Co-Owner to which it is the Lender, or to cause a receiver to be appointed to do so; and (iv) to acquire all or any portion of the Security Assets by foreclosure or by an assignment in lieu of foreclosure and thereafter without Co-Owners' consent to assign or transfer all or any portion of the Security Assets to a third party.  No Co-Owners' consent shall be required for any of the foregoing, and upon acquisition of the interests of all or any portion of the Security Assets by a Lender or any other third party who acquires the same from or on behalf of the Lender, the Co-Owners shall recognize the Lender or such other party (as the case may be) as the other Co-Owner's proper successor, and this Agreement shall remain in full force and effect.
      14.5 Opportunity to Cure
.  Following acquisition of all or a portion of the Security Assets by the Lender as a result of either foreclosure or acceptance of an assignment in lieu of foreclosure, or by a purchaser at a foreclosure sale, this Agreement shall continue in full force and effect and the Lender or party acquiring title to the Security Assets shall, as promptly as reasonably possible, commence the cure of all defaults under this Agreement and thereafter diligently pursue such cure to completion; provided, however, that the Lender or party acquiring title to the Security Assets shall not be required to cure those defaults which are not susceptible of being cured or performed by such Co-Owner ("Non-Curable Defaults").  Non-Curable Defaults shall be deemed waived by Co-Owners upon completion of foreclosure proceedings or acquisition of a Co-Owner's interest in the Shared Assets by such Co-Owner.  If a Lender is prohibited by any process or injunction issued by any court or by reason of any action of any court having jurisdiction over any bankruptcy or insolvency proceeding involving another Co-Owner from commencing or prosecuting the appropriate judicial or non-judicial proceedings, then any cure period for commencing such proceedings shall be extended for the period of such prohibition.
      14.6 New Agreement
.  In the event that this Agreement is rejected or disaffirmed pursuant to bankruptcy law or any other law affecting creditors' rights, then, so long as a Lender has cured any such monetary event of default and is making commercially reasonable efforts to cure any such non-monetary event of default as provided herein, the non-defaulting Co-Owners shall, immediately upon written request from such Lender received within sixty (60) days after any such event, without demanding additional consideration therefor, enter into a new shared facilities agreement with such Lender, which new shared facilities agreement shall (i) contain the same covenants, agreements, terms, provisions and limitations as this Agreement (except for any requirements that have been fulfilled by the Co-Owners prior to such termination, foreclosure, rejection or disaffirmance), and (ii) be for a term commencing on the date of such termination, foreclosure, rejection or disaffirmance and continuing for the remaining term of this Agreement before giving effect to such termination, foreclosure, rejection or disaffirmance.  At the option of the Lender, the new shared facilities agreement may be executed by a designee of such Lender, with the Lender assuming the burdens and obligations of the defaulting Co-Owner hereunder.  If more than one Lender makes a written request for a new shared facilities agreement pursuant hereto, then the same shall be delivered to the Lender whose lien is senior in priority.
      14.7 Lender Consent
.  Notwithstanding any provision of this Agreement to the contrary, the Co-Owners shall not accept a termination of this Agreement without the prior written consent of each Lender.
      14.8 Estoppel Certificates
.  Each Co-Owner shall execute estoppel certificates certifying as to truthful matters, including without limitation that no default then exists under this Agreement, if such be the case; consents to assignment; and non-disturbance agreements as another Co-Owner or any Lender may reasonably request from time to time.  The Co-Owners shall cooperate in amending this Agreement from time to time to include any provision that may be reasonably requested by a Lender to preserve a Lender's Lien.
ARTICLE XV 
INDEMNIFICATION
      15.1 Co-Owner Indemnification
.  Operator and each Co-Owner ("Indemnitor") agrees to indemnify, defend and hold harmless the other Co-Owners and such other Co-Owners' Affiliates, equity owners, Affiliates of its equity owners and each of their respective officers, directors, stockholders, employees, agents, successors and assigns (collectively, "Indemnitees") from and against any and all losses, damages, expenses, injuries, liabilities, judgments, claims, demands, taxes or penalties, including but not limited to attorneys' fees and court costs ("Losses") sustained or incurred by Indemnitees to the extent caused by the negligence or willful misconduct of Indemnitor, its agents or contractors, or caused by Indemnitor's breach of any of its obligations under this Agreement, including but not limited to Losses incurred by reason of physical damage to the property of third parties or bodily injury, including death, of third persons.  In the event a Loss is caused by the joint or concurrent negligence of one or more of the Co-Owners, the Loss shall be borne by each such Co-Owner in proportion to its degree of negligence.
      15.2 Cross-Indemnity
.  The Co-Owners intend that the obligations set forth in Section 15.1 include the duty of a Co-Owner ("Cross-Indemnitor"), in the event another Co-Owner or Co-Owners ("Cross-Indemnitee") sustains or incurs any Loss as the result of the joint and several liability of Cross-Indemnitor and Cross-Indemnitee to a third party, such that the Cross-Indemnitee shall be entitled to recover from the Cross-Indemnitor the Cross-Indemnitor's share of any and all Losses sustained or incurred by Cross-Indemnitee. 
ARTICLE XVI 
WAIVER OF RIGHTS TO PARTITION
      Each Co-Owner hereby waives any rights it may have to partition the Shared Facilities, the Shared Real Property or any component thereof or any component thereof during the term of this Agreement, whether by partition in kind or by sale and division of the proceeds, and each Co-Owner further agrees that it will not resort to any action at law or in equity to partition the Shared Facilities, the Shared Real Property or any component thereof, and it waives the benefits of laws that may now or hereafter authorize such partition for the term of this Agreement.
ARTICLE XVII 
MISCELLANEOUS PROVISIONS
      17.1 Covenants Run with the Land
.  The Co-Owners hereby agree that all of the covenants, consents and agreements contained in this Agreement touch and concern the real estate described in this Agreement and are expressly intended to, and shall, be covenants running with the land and shall be binding and a burden upon said real estate and each Co-Owner's present or future estate or interest therein and upon each of the Co-Owners, their respective successors and assigns as holders of an estate or interest in said real estate (including any lender or other person acquiring title from any such person upon foreclosure or by deed in lieu of foreclosure), and shall benefit the Co-Owners and their respective successors and assigns and the real estate and any present or future holder of an estate or interest therein and any other fee and leasehold estates acquired by any Co-Owner, its successors and assigns for its respective Facility.  To the extent any of the provisions of this Agreement are not enforceable as covenants running with the land, they shall be enforceable as equitable servitudes.
      17.2 Force Majeure
.  If a Co-Owner is delayed or rendered wholly or partially unable to perform its obligations hereunder due to an event of Force Majeure, that Co-Owner (the "Claiming Party") will be excused from whatever performance is affected by the event of Force Majeure to the extent so affected, provided, however, that: (i) the Claiming Party shall give the other Co-Owners notice describing the particulars of the occurrence promptly after the occurrence of the Force Majeure, and, in no event more than three (3) days after the Claiming Party becomes aware of such occurrence; (ii) within five (5) days after giving the notice described in clause (i) above, the Claiming Party shall give the other Co-Owners its best estimate of the expected duration of the event and probable impact on the performance of the Claiming Party's obligations hereunder, and shall continue to furnish timely regular reports with respect thereto during the continuation of the Force Majeure; (iii) the suspension of performance shall be of no greater scope and of no longer duration than is reasonably required by the Force Majeure; (iv) no default of a Co-Owner which arose before the occurrence of the Force Majeure event causing the suspension of performance shall be excused as a result of the occurrence, but so long as the Claiming Party shall have commenced and is diligently continuing to attempt to cure such default prior to the occurrence of the Force Majeure, the cure period (if any) with respect to such default shall be extended on a day-for-day basis to the extent a cure is prevented as a direct result of the Force Majeure; (v) the Claiming Party shall exercise all reasonable efforts to mitigate or limit damages to the other Co-Owners; and (vi) the Claiming Party shall use all reasonable efforts to continue to perform its obligations hereunder and to correct or cure the event or condition excusing performance.  In resolving any dispute between the Co-Owners, the burden of proof as to whether a Force Majeure has occurred and whether the Force Majeure excuses the Claiming Party from performance under this Agreement shall be upon the Claiming Party.
      17.3 FERC Filing and Acceptance.	  The Co-Owners acknowledge and agree that: (i) this Agreement will be publicly available through its filing with FERC for acceptance under Section 205 of the FPA; (ii) subsequent amendments to this Agreement that involve FERC-jurisdictional transmission facilities or service must be filed with and accepted by FERC, and the effectiveness of such amendments will be contingent on such FERC acceptance; (iii) changes in ownership contemplated by this Agreement may be subject to prior FERC approval; and (iv) disconnections or terminations contemplated by this Agreement may require prior FERC approval.  Promptly after the Execution Date or after any amendment to the Agreement, the Co-Owners will prepare a draft filing to seek acceptance by FERC of the Agreement or such amendment and the Co-Owners will cooperate to make any changes to the filing requested by the other Co-Owners and will file the Agreement or such amendment for acceptance by FERC.  Contemporaneously with the filing of this Agreement with FERC, the Co-Owners will apply to FERC for regulatory waivers exempting the Co-Owners from compliance with FERC Order Nos. 888, 889 and 890, and FERC's regulations at 18 C.F.R.  35.28, and 18 C.F.R. Parts 37 and 358.  Each Co-Owner agrees that it will not oppose acceptance of the Agreement or an amendment by FERC, or the granting by FERC of the waivers described in the preceding sentence, and that it will reasonably cooperate with the other Co-Owners to address any issues raised by FERC in connection with the filings described in this Section 17.3.  Subject to the terms and conditions set forth herein, the Co-Owners agree to execute and deliver all documents reasonably necessary for this Agreement to comply with FERC requirements.
      17.4 Assignment
.  This Agreement will be binding on and inure to the benefit of the Co-Owners and their respective successors and permitted assigns.  All transfers, conveyances, assignments of Shared Facilities or Shared Real property will be subject to the terms and conditions of this Agreement, whether or not explicitly stated.  Each Co-Owner may, at any time and from time to time, upon notice but without the other Co-Owners' consent or approval, (i) subject to compliance with Section 9.7, transfer or assign this Agreement and the rights and obligations under this Agreement to a Person that acquires all or substantially all of such Co-Owner's assets, including such Co-Owner's Shared Assets, and agrees to assume all obligations of that Co-Owner under this Agreement (a "Permitted Assignee"); and/or (ii) create Lender's Liens pursuant to Article XIV.  Otherwise, no Co-Owner shall transfer or assign all or any part of its right, title and interest in or to this Agreement or any of its rights hereunder without the prior consent of all of the other Co-Owners; provided, further, that if FERC approval is required for any such assignment or transfer, it shall not be effective unless and until FERC approval has been obtained.  For purposes of this Agreement, a Change of Control of a Co-Owner shall be considered an assignment by such Co-Owner of its rights and interests under this Agreement and shall be subject to the requirements hereunder with respect to assignments.  Any Permitted Assignee shall assume all of the obligations of the assigning Co-Owner hereunder and shall execute any documents which may reasonably be required by the other Co-Owners, or by Lenders, including but not limited to any document in connection with a governmental permit, approval, authorization, entitlement or other consent.  Under no circumstances shall any Lender or Permitted Assignee have any greater rights of ownership or use of the Shared Assets than the rights granted to the Co-Owners in this Agreement.  Any assignment permitted under this Agreement shall release the assigning Co-Owner from obligations accruing after the date that liability is assumed by a transferee, but the assigning Co-Owner shall continue to be liable to the other Co-Owners for all performance due by the assigning Co-Owner for matters that have accrued and are unsatisfied as of the date of the assignment.  Any purported assignment in contravention of this Section 17.3 will be void.
      17.5 Actions By Co-Owners.  Unless expressly provided otherwise, voting by the Co-Owners shall be in proportion to their respective Proportionate Shares, so that the weight of each Co-Owner's vote is proportional to the nameplate capacities of their respective Facilities.
      17.6 Entire Agreement
.  This Agreement is the Co-Owners' complete and final expression of agreement regarding the matters addressed in this Agreement and supersedes all prior agreements, representations, understandings, offers and communications, whether oral or written, regarding such matters.
      17.7 Amendment
.  This Agreement can be amended only by a mutually agreeable written amendment executed by an authorized representative of each Co-Owner.
      17.8 Further Assurances
.  Each Co-Owner agree to execute and deliver any additional instruments, agreements or amendments, and to take such other actions as may be necessary or reasonably requested by the other Co-Owners to effectuate or evidence this Agreement and which are not inconsistent with the provisions hereof, do not adversely affect the rights of other Co-Owners, violate the terms and spirit of this Agreement, and which do not involve assumptions of obligations or materially affect the cost of performance, other than those provided for in this Agreement, in order to give full effect to and carry out the intent of this Agreement, including cooperating in confirming the grant or assignment of property rights or the reservation or retention of property rights. 
      17.9 Severability
.  If any provision of this Agreement is held invalid or unenforceable, all other provisions will not be affected.  With respect to the provision held invalid or unenforceable, the Co-Owners agree to cooperate to amend this Agreement as necessary to effect the Co-Owners' original intent as closely as possible.
      17.10 Joint Preparation
.  This Agreement or any uncertainty or ambiguity therein shall not be construed against any one Co-Owner, but rather shall be construed as though all Co-Owners jointly prepared this Agreement.
      17.11 No Waiver
.  If on any occasion a Co-Owner does not insist upon the performance of any term, condition or provision of this Agreement, such forbearance will not operate or be construed as an acceptance of any variation in any term, condition or provision of this Agreement or relinquishment of any right under this Agreement.  No waiver by a Co-Owner of any right or of any default by the other Co-Owners under this Agreement will be effective unless it is in writing and signed by the waiving Co-Owner, and no waiver will operate or be construed as a waiver of any other or further right or as a waiver of any future default, whether of like or different character or nature.
      17.12 Governing Law
.  This Agreement shall be governed by, construed and enforced in accordance with the laws of the State of California, without regard to principles of conflict of laws.
      17.13 Dispute Resolution Procedures
.  Disputes among the Co-Owners shall be resolved in accordance with the procedures set forth in Exhibit E.
      17.14 Relationship of the Co-Owners
.  This Agreement will not be interpreted or construed to (i) create an association, joint venture or partnership among the Co-Owners or impose any partnership obligation or liability on any Co-Owner, or (ii) create any agency relationship among the Co-Owners or impose any fiduciary duty of any kind on any Co-Owner, or (iii) create a lease of any property of any kind.  Subject to Operator's provision of O&amp;M Services, no Co-Owner will have any right, power or authority to enter into any agreement or undertaking for, or act on behalf of, or to act as or be an agent or representative of, or otherwise to bind, the other Co-Owners.  Each Co-Owner waives any and all rights that it may otherwise have under Applicable Laws or legal precedents to make any claims or take any action against the other Co-Owners or any of its Affiliates in respect of this Agreement based on any theory of agency, fiduciary duty or other special standard of care.
      17.15 No Third Party Rights
.  Except with respect to the rights of Lenders as set forth in Article XIV, the covenants contained herein are made solely for the benefit of the Co-Owners and the Operator, and shall not be construed as benefiting any Person that is not a Co-Owner or the Operator.
      17.16 No Dedication of Facilities
.  Any undertaking by one Co-Owner to the other Co-Owners under this Agreement shall not constitute the dedication of the electric facilities or any portion thereof or any other property of the undertaking Co-Owner to the public or to the other Co-Owners, and it is understood and agreed that any such undertaking by a Co-Owner will cease upon the termination of its obligations hereunder.  Nothing herein shall constitute a dedication or an offer to dedicate any Shared Facilities or Shared Real Property to the public or for public service.
      17.17 Notices
.  Except as otherwise provided in this Agreement, all notices and other communications to be given or made under this Agreement will be in writing, will be addressed as specified below, and will either be personally delivered or sent by courier service, by registered or certified mail, or by facsimile.
If to Rising Tree I:
Rising Tree Wind Farm LLC
808 Travis, Suite 700
Houston, TX 77002
Attn:  General Counsel
Facsimile:  (713) 265-0365
E-mail: legal.notices@edpr.com
with a copy to:

EDP Renewables North America LLC
808 Travis, Suite 700
Houston, TX 77002
Attn: General Counsel
Facsimile:  (713) 265-0365
E-mail: leslie.freiman@edpr.com
If to Rising Tree II:
Rising Tree Wind Farm II LLC
808 Travis, Suite 700
Houston, TX 77002 
Attn:  General Counsel
Facsimile:  (713) 265-0365
E-mail: legal.notices@edpr.com
with a copy to:

EDP Renewables North America LLC
808 Travis, Suite 700
Houston, TX 77002 
Attn: General Counsel
Facsimile:  (713) 265-0365
E-mail:  leslie.freiman@edpr.com
If to Rising Tree III:
Rising Tree Wind Farm III LLC
808 Travis, Suite 700
Houston, TX 77002
Attn:  General Counsel
Facsimile:  (713) 265-0365
E-mail: legal.notices@edpr.com
with a copy to:

EDP Renewables North America LLC
808 Travis, Suite 700
Houston, TX 77002 
Attn: General Counsel
Facsimile:  (713) 265-0365
E-mail:  leslie.freiman@edpr.com

All notices will be deemed delivered (i) when presented personally, (ii) if given by facsimile or by e-mail, on dispatch to the receiving Co-Owner's facsimile number or e-mail address specified above (with confirmation) unless dispatched after the recipient's normal business hours on a Business Day or dispatched on any day other than a Business Day, in which case such notice shall be deemed to have been delivered on the next Business Day, so long as a copy of such facsimile or email is also delivered by United States mail, postage prepaid, registered or certified, return receipt requested, or by a nationally recognized overnight private courier service; (iii) upon receipt if delivered by a nationally recognized overnight private courier service to each receiving Co-Owner at the applicable address specified above (or such other address as the receiving Co-Owner may have specified by notice delivered to the delivering Co-Owner), or (iv) five (5) days after being deposited in a United States Postal Service receptacle, postage prepaid, registered or certified, return receipt requested, addressed to the receiving Co-Owner(s) at the address specified above (or such other address as such receiving Co-Owner may have specified by notice delivered to the delivering Co-Owner at its address or facsimile number specified above).  A Co-Owner may change any or all of its address, facsimile number or e-mail address, to which notices and communications are to be sent by giving notice as required by this Section 17.15.
      17.18 Counterparts
.  This Agreement may be executed in one or more counterparts, each of which will be an original but all of which, taken together, will constitute only one legal instrument.  It will not be necessary in making proof of this Agreement to produce or account for more than one counterpart.
      17.19 Timing for Performance
.  Notwithstanding anything herein to the contrary, if the time for performing an obligation under this Agreement expires on a day that is not a Business Day, the time for performing shall be extended until that time on the next Business Day.
      17.20 Waiver of Consequential Damages
.  EACH OF THE CO-OWNERS AND OPERATOR EXPRESSLY WAIVES AND IN NO EVENT SHALL ANY OF THE CO-OWNERS, OPERATOR OR ANY OF THEIR RESPECTIVE OFFICERS, DIRECTORS, MEMBERS, PARTNERS, SHAREHOLDERS, EMPLOYEES, AGENTS OR AFFILIATES BECOME LIABLE TO THE OTHER FOR SPECIAL, INDIRECT, EXEMPLARY, PUNITIVE OR CONSEQUENTIAL DAMAGES OF ANY NATURE WHATSOEVER CONNECTED WITH OR RESULTING FROM PERFORMANCE OR NON-PERFORMANCE OF THIS AGREEMENT, OR OTHERWISE.  THIS WAIVER INCLUDES, WITHOUT LIMITATION, DAMAGES OR CLAIMS IN THE NATURE OF LOST REVENUES, INCOME, [TAX PREFERENCES] [please explain] OR PROFITS, LOSS OF USE, OR COST OF CAPITAL, IRRESPECTIVE OF WHETHER SUCH DAMAGES ARE REASONABLY FORESEEABLE AND IRRESPECTIVE OF WHETHER SUCH CLAIMS ARE BASED UPON NEGLIGENCE, STRICT LIABILITY, CONTRACT, OPERATION OF LAW OR OTHERWISE.
      17.21 Survival
.  Notwithstanding any other provision of this Agreement, the provisions of Article I, Sections 2.2 and 2.3, Article XII (Taxes), Article XV (Indemnification), and Article XVII shall survive the termination of this Agreement.
      17.22 Memorandum.  Each Co-Owner agrees to sign and acknowledge the Memorandum of Rising Tree Shared Facilities Agreement ("Memorandum") in the form attached hereto as Exhibit G.  Operator shall record the Memorandum promptly in the Office of the County Recorder of Kern County, California at the expense of the Co-Owners.
      17.23 Other Agreements.  The rights and obligations of the Co-Owners and Operator hereunder are independent of and in addition to any rights and obligations of such parties under the LGIA Co-Tenancy Agreement.  
Signatures follow on next page
      
To evidence its acceptance of this Agreement, and intending to be legally bound, each Co-Owner has caused its authorized representative to sign below as of the date first written above.
Rising Tree Wind Farm LLC


	
By:
Title:


	
By:
Title:

Rising Tree Wind Farm II LLC


	
By:
Title:


	
By:
Title:

Rising Tree Wind Farm III LLC


	
By:
Title:


	
By:
Title:


EXHIBIT A
SCHEDULE OF DEFINITIONS
Additional Phase means the additional generation facilities owned by a Co-Owner, its Affiliate or another Person that have been approved by the Co-Owners to be connected to and to use the Shared Facilities.
Affected Party has the meaning given in Section 7.1.
Affiliate means, with respect to any Co-Owner, any Person directly or indirectly controlling, controlled by or under common control with such Co-Owner.  The term "control" and correlative terms includes the possession, directly or indirectly and whether acting alone or in conjunction with others, of the authority to direct or cause the direction of the management or policies of a Person. 
Agreement has the meaning set forth in the Preamble.  
Annual O&amp;M Budget has the meaning given in Section 6.8.
Applicable Laws means all applicable constitutional provisions, statutes, acts, codes, laws, rules, regulations, ordinances, orders, interpretations, permits, treaties, judgments, decrees, rulings, decisions, injunctions, writs and orders of a Governmental Authority.
Business Day means any day except a Saturday, Sunday or other days on which state or federal banks in [Los Angeles, California] are closed or authorized to be closed.  A Business Day shall begin at 8:00 a.m. and end at 5:00 p.m. PPT.
CAISO means the California Independent System Operation Corporation or its successor agency.
CAISO Tariff means the California Independent System Operator Corporation, Fifth Replacement FERC Electric Tariff (Open Access Transmission Tariff), as it may be amended, supplemented or replaced (in whole or in part) from time to time.
Capital Improvements means any additions, modifications or substitutions to the Shared Facilities or Shared Real Property which, in accordance with generally accepted accounting principles, should be capitalized.
Change of Control means, with respect to any Person, the change, in one transaction or a series of transactions, of the direct or indirect ownership of fifty percent (50%) or more of the equity ownership interests of such Person other than solely for financing purposes. 
Claiming Party has the meaning given in Section 17.2.
Commissioning Date means, as applicable, the date of commissioning of the first wind turbine of the Facility or Additional Phase in question.
Co-Owner or Co-Owners has the meaning given in the Preamble.
Co-Owner Ceasing Business Operations has the meaning given in Section 8.1.
Cross Indemnitee has the meaning given in Section 15.2.
Cross Indemnitor has the meaning given in Section 15.2.
Decommissioning Obligation has the meaning given in Section 8.1.
Delivery Capability means the amount of electrical energy that can be delivered to the Point of Interconnection at any instant of time. 
Effective Date has the meaning given in Section 3.1.
Emergency Condition has the meaning given in Section 6.6.
Environmental Laws means all Applicable Laws relating to (i) facility siting, land use and environmental matters; (ii) the control of any pollutant, or protection of the air, water, or land; (iii) solid, gaseous or liquid waste generation, handling, treatment, storage, disposal or transportation; (iv) exposure to hazardous, toxic or other harmful substances; and (v) the protection and enhancement of the environment.  Environmental Laws includes laws which relates to environmental quality, health, safety, pollution, contamination, cleanup, or the protection of human health, ambient air, waters (including ground waters) or land, and: the Clean Air Act, 42 U.S.C. 7401 et seq. (CAA), the Clean Water Act, 33 U.S.C.  1251 et seq. (CWA), the National Environmental Policy Act, 42 U.S.C.  4321 et seq., the Endangered Species Act, 16 U.S.C.  1531 et seq., the Resource Conservation Recovery Act, 42 U.S.C. 6901 et seq. (RCRA), the Safe Drinking Water Act. 42 U.S.C. 300f et seq., the Comprehensive Environmental Response, Compensation, and Liability Act as amended by the Superfund Amendments and Reauthorization Act, 32 U.S.C. 9601 et seq. (CERCLA), the Federal Insecticide, Fungicide and Rodenticide Act, 7 U.S.C.  136 et seq., the Hazardous Substances Transportation Act, 49 U.S.C. 1801 et seq., the Toxic Substances Control Act, 15 U.S.C. 2601 et seq. (TSCA), and the Emergency Planning and Community Right-to-Know Act, 42 U.S.C. 11001 et seq., any state or local laws relating to permits, local land use control ordinances or similar laws, and any state or local laws implementing or substantially equivalent to the foregoing federal requirements, and other similar laws.
Event of Default has the meaning as given in Section 13.1.
Extraordinary Maintenance has the meaning given in Section 6.9.
Facility and Facilities have the meanings given in Recital B.
FERC means the Federal Energy Regulatory Commission and any successor.  
Fiber Optic Facilities has the meaning given in Exhibit B.
Force Majeure means an event or circumstance which prevents a Co-Owner from performing its obligations under this Agreement, which event or circumstance is not within the reasonable control of, or a result of the negligence of, the Claiming Party, and which, by the exercise of commercially reasonable efforts, the Claiming Party is unable to overcome or avoid or cause to be avoided.  Force Majeure includes the following: fires; storms; earthquakes; floods; lightning; landslides; volcanic eruptions; hurricanes; tidal waves; epidemics; explosions; cyclones; tornadoes; acts of God; tempests; other natural disasters; strikes, work stoppages, walkouts, lockouts and other labor difficulties; civil disturbances; sabotage; vandalism; labor, material and equipment shortages (including spare parts shortages); equipment failure or breakdown; interruptions to transportation; acts of military authorities; court actions; war (declared or not); riot; public disorder; condemnation of property; quarantine; actions, failures to act or delays in acting by any Governmental Authority; and late delivery or non-delivery of machinery, equipment, fuel, materials, components, parts or consumables and delay in the performance or the non-performance by a Co-Owner's contractors or subcontractors, in each case as a result of an event or occurrence that is otherwise an event of Force Majeure.  A Co-Owner will not claim Force Majeure based on (i) the loss of market for a Facility's electrical output, (ii) the economic infeasibility of generating electricity from a Co-Owner's Facility, or (iii) its inability to make a payment obligation.
FPA means the Federal Power Act, as amended, and the regulations of FERC thereunder.
Good Utility Practice means any of the practices, methods and acts engaged in or approved by a significant portion of the electric utility industry during the relevant time period, or any of the practices, methods and acts which, in the exercise of reasonable judgment in light of the facts known at the time the decision was made, could have been expected to accomplish the desired result at a reasonable cost consistent with good business practices, reliability, safety and expedition.  Good Utility Practice is not intended to be limited to the optimum practice, method or act to the exclusion of all others, but rather to be acceptable practices, methods or acts generally accepted in the region in which the Facilities are located.  Good Utility Practice shall include, but not be limited to, NERC criteria, rules, guidelines and standards, criteria, rules, guidelines and standards, and the CAISO's criteria, rules, guidelines and standards, where applicable, as they may be amended from time to time, including the rules, guidelines and criteria of any successor organization to the foregoing entities.  When applied to the Co-Owners in their operation of their Facilities, the term Good Utility Practice shall also include standards applicable to an independent power producer connecting to the distribution or transmission facilities or system of a utility.
Governmental Authority means any federal, state, local, tribal or foreign governmental authority (including any regulatory authority); a state, province, commonwealth, territory or district thereof; a county or parish; a city, town, township, village or other municipality; a district, ward or other subdivision of any of the foregoing; an executive, legislative or other governing body of any of the foregoing; any agency, authority, board, department, system, service, office, commission, committee, council or other administrative body of any of the foregoing; any court or other judicial body; and any officer, official or other representative of any of the foregoing, or quasi-governmental entity acting under delegated authority, having or asserting jurisdiction over a Co-Owner, the subject matter of this Agreement, or this Agreement.
Granting Co-Owner has the meaning given in Section 4.1.
Hazardous Materials Laws means any applicable law or regulation relating to any substance, material or waste classified as hazardous or toxic, or which is regulated as waste.
Indemnitees has the meaning given in Section 15.1.
Indemnitor has the meaning given in Section 15.1. 
Interconnection Agreement means that certain Large Generator Interconnection Agreement dated as of March 27, 2013, by and among the CAISO, the Transmission Owner, the Co-Owners (in the case of Rising Tree III, as successor to Addison Wind Resources, LLC), and Rising Tree I, as manager.
Last Use Notice has the meaning given in Section 8.1.
Late Payment Rate has the meaning set forth in Section 6.10.
Lenders has the meaning given in Section 14.1.
Lender's Liens has the meaning given in Section 14.1. 
LGIA Co-Tenancy Agreement has the meaning given in Recital D.
Line Losses means loss of electric energy transmitted on Transmission Line.
Losses has the meaning given in Section 15.1.
Material Project Agreements means the Interconnection Agreement, this Agreement, the LGIA Co-Tenancy Agreement, purchase or warranty agreements relating to Shared Facilities, and certain other agreements related to the construction, operation and use of the Shared Facilities, as set forth on Exhibit D, and such other agreements to be included upon the mutual agreement of the Co-Owners.
Memorandum has the meaning given in Section 17.20.  
Metered Energy means the amount of electric energy measured at a given point, such as at the o
MW means megawatts.
NERC means the North American Electric Reliability Corporation and its successors.
Non-Curable Defaults has the meaning given in Section 14.5.
Non-Defaulting Co-Owner has the meaning given in Section 13.2.3.
O&amp;M Costs has the meaning given in Section 6.7.  
O&amp;M Facility means an operation and maintenance building and related facilities for a Facility, including equipment and systems housed therein.
O&amp;M Services has the meaning given in Section 6.1. 
O&amp;M Services Commencement Date has the meaning given in Section 6.3.
Operator means the Co-Owner or other Person engaged by the Co-Owners to manage, operate, maintain and repair the Shared Facilities and to perform other duties pertaining to the Shared Assets as set forth in the Agreement.   The Operator shall initially be Rising Tree I or an Affiliate designated by it, subject to replacement pursuant to Sections 6.17 and 13.2.2.
Ownership Interest means the undivided interest of a Co-Owner in a Shared Asset Group, as set forth in Exhibit B. 
Performance Standard has the meaning given in Section 6.2.
Permit means any permit, license, approval, consent, right to use, franchise or similar authorization from any Governmental Authority.
Permitted Assignee has the meaning given in Section 17.3.
Person means any natural person, corporation, general partnership, limited partnership, limited liability company, proprietorship, other business organization, trust, union, association or Governmental Authority.
Point of Interconnection means the point at which the Transmission Line interconnects to the Southern California Edison 220 kV Wind Hub Substation, as more particularly described in the Interconnection Agreement.
PPT or Prevailing Pacific Time means the then applicable time in the Pacific time zone.
Project Substation means the "Project Substation" as described on Exhibit B.
Proportionate Share means, as applied with respect to the sharing and allocation of costs, rights, interest, obligations and/or liabilities related to a Shared Assets Group among its Co-Owners, the proportion of a Facility's installed nameplate capacity connected to such Shared Assets Group bears to the aggregate installed nameplate capacity of all such Facilities using such Shared Assets at the time; provided that, for the purpose of such calculation, the installed nameplate capacity of:  (1) any Facility that has not yet achieved its Commissioning Date shall be deemed to be 0 MW; and (2) any Facility that has achieved its Commissioning Date shall be deemed to be the portion of the expected nameplate capacity set forth in Recital B that is expected to be connected to such Shared Assets Group.  In this Agreement, except as otherwise expressly provided, a reference to a Proportionate Share with respect to a given Co-Owner shall mean the Proportionate Share of such Co-Owner in each of the Shared Assets Groups in which such Co-Owner has an Undivided Use Interest.
RST I Facility means the portion of the Rising Tree Wind Farm owned by Rising Tree I.  
RST II Facility means the portion of the Rising Tree Wind Farm owned by Rising Tree II.  
RST III Facility means the portion of the Rising Tree Wind Farm owned by Rising Tree III.  
RST Shared Facilities has the meaning given in Exhibit B.
RST I/II Shared Facilities has the meaning given in Exhibit B.
Security Assets has the meaning given in Section 14.1.
Settlement Interval has the meaning given in the CAISO Tariff.
Shared Assets means any or all of the Shared Facilities and the Shared Real Property in a Shared Assets Group.
Shared Assets Group has the meaning given in Section 3.4.
Shared Facilities has the meaning given in Section 3.2.
Shared Facilities Group has the meaning given in Section 3.2.
Shared Permits has the meaning given in Section 3.6.
Shared Real Property has the meaning given in Section 3.3.
Shared Real Property Agreements means the easement agreements or conveyance documents described in Exhibit B.
Transmission Line has the meaning given in Exhibit B.  
Transmission Owner means Southern California Edison Company, its successors and assignees.
Underlying Granting Documents has the meaning given in Section 4.1.
Undivided Use Interest has the meaning given in Section 4.2.

EXHIBIT B

SHARED FACILITIES, SHARED REAL PROPERTY AND SHARED PERMITS

A. Assets Jointly Owned and Shared by All Co-Owners (RST Shared Facilities Group)
1. Shared Facilities
a.	Project Substation:  See Exhibit B-1 attached hereto.
b.	Transmission Line:  See Exhibit B-2 attached hereto.
c.	Roads
d.	O&amp;M Building
e.	Condor Detection Tower
2. Shared Real Property
a.	Project Substation:  
The East half of the Northwest quarter of the Southeast quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land to patented, together with the right to prospect for, mine and remove the same, according to the provisions of said Act of June 1, 1938, excepted and reserved by the United States of America in the patent recorded August 23, 1990 in Book 6422, Page 1904 of Official Records.

APN:  237-141-22
b.	Transmission Line:  
   Tract 1
The East half of the East half of Section 9, Township 11 North, Range 13 West, San Bernardino Base and Meridian in the unincorporated area of the County of Kern, State of California, as per the official plat thereof on file in the Office of the Surveyor General, approved September 19, 1856.

Excepting therefrom one half of all oil, gas and other hydrocarbon substances and minerals in and under said land, as excepted in deed dated December 1, 1955 from M&amp;R Sheep Company, recorded March 22, 1956 in Book 2581, Page 233 of Official Records.

APN:  237-022-13

	Tract 2

A strip of land one hundred seventy-five (175) feet in width, situated in the Southeast 1/4 of Section 17, Township 11 North, Range 13 West, San Bernardino Base and Meridian, Kern County, California, being a portion of that property conveyed to Residual Ranch Corporation, in Book 6070, Pages 1209-1210, recorded on November 25, 1987, Kern County Deed Records, and being more particularly described as follows:

That strip of land, within the East 1,900 feet of said property, being one hundred seventy-five (175) feet in width, the southerly line of which is coincident and parallel with the northerly right of way line of Oak Creek Road (County Road No. 648), said line being 30.00 feet northerly of the centerline of said road, when measured at right angles.  

APN:  237-031-04
	
Tract 3

The East Half of the Northeast Quarter of Section 16, Township 11 North, Range 13 West, San Bernardino Meridian in the County of Kern, State of California, according to the official plat of said land by the Surveyor General dated September 19, 1856.

Excepting therefrom said land an undivided 1/16th of all coal, oil, oil shale, gas, phosphate, sodium and other mineral deposits in said land as reserved to the State of California, by the provision of an act of the legislation, statutes of 1921 page 404 and amendments thereto.

Also excepting therefrom half of all oil, hydrocarbons and similar minerals but without the right of entry to depth of 500 feet from the surface thereon in and to the property. As granted to J. J. Kessler, a married man, in deed recorded August 23, 1956 in Book 2654, page 300 of official records.

APN:  237-031-08

Tract 4

A strip of land, one hundred seventy-five (175) feet in width, situated in the South 1/2 of Section 16, Township 11 North, Range 13 West, San Bernardino Base and Meridian, Kern County, California, being a portion of that property conveyed to The Muriel Pollia Foundation, by Document No. 0207220631, recorded on November 2, 2007, Kern County Deed Records, and being more particularly described as follows:

The East one hundred seventy-five (175) feet of said South 1/2, Section 16, together with that one hundred seventy-five (175) foot strip, the southerly line of which is coincident and parallel with the northerly right of way line of Oak Creek Road (County Road No. 648) said line being 30.00 feet northerly of the centerline of said road, when measured at right angles.

APN:  237-031-38

Tract 5

The West half of the Northwest quarter of the Northwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the Official Plat thereof.

Excepting therefrom all oil, gas and other mineral deposits in the land so patented, together with the right to prospect for, mine and remove the same according to the provisions of said Act of June 1, 1938, as reserved in Deed recorded August 14, 1963 in Book 3634, Page 835 of Official Records. 

APN:  237-141-01

Tract 6

The East half of the Northwest quarter of the Northwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the Official Plat thereof.

Excepting therefrom all oil, gas and other mineral deposits in the land so patented, together with the right to prospect for, mine and remove the same according to the provisions of said Act of June 1, 1938, as reserved in Deed recorded September 20, 1967 in Book 4090, Page 851 of Official Records. 

APN:  237-141-02

Tract 7

The West half of the Northeast quarter of the Northwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Base and Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  237-141-03

Tract 8

The East half of the Northeast quarter of the Northwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same, according to the provisions of said Act of June 1, 1938, as excepted and reserved by the United States of America recorded in Book 3259, Page 641 of Official Records.

APN:  237-141-04

Tract 9

The East half of the Southeast quarter of the Northwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove same, according to the provisions of said Act of June 1, 1938, as excepted and reserved by the United States of America in the patent recorded August 3, 1960 in Book 3290, Page 186 of Official Records.

APN:  237-141-13

Tract 10

The East half of the Northeast quarter of the Southwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same, according to the provisions of the Act of June 1, 1938, as excepted and reserved by the United States of America in the patent recorded September 28, 1960 in Book 3306, Page 864, Official Records.

APN:  237-141-20

Tract 11

The West half of the Northwest quarter of the Southeast quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat of said land filed in the District Land Office October 7, 1936.

Excepting therefrom all oil, gas and other mineral deposits, in and under said land, together with the right to prospect for, mine and remove the same, according to the provisions of the Act of June 1, 1938, as excepted and reserved by the United States of America in the patent recorded September 28, 1960 in Book 3306, Page 863, Official Records.

APN:  237-141-21

Tract 12

The East half of the Northwest quarter of the Southeast quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land to patented, together with the right to prospect for, mine and remove the same, according to the provisions of said Act of June 1, 1938, excepted and reserved by the United States of America in the patent recorded August 23, 1990 in Book 6422, Page 1904 of Official Records.

   APN:  237-141-22
   
c.	Collection and Distribution Lines:  
   Tract 1

The East half of the Northwest quarter of the Southeast quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land to patented, together with the right to prospect for, mine and remove the same, according to the provisions of said Act of June 1, 1938, excepted and reserved by the United States of America in the patent recorded August 23, 1990 in Book 6422, Page 1904 of Official Records.

APN:  237-141-22

   Tract 2

The East half of the Southeast quarter of the Southeast quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Base and Meridian, in the unincorporated area, County of Kern, State of California, according to the Official Plat thereof.

Excepting therefrom all oil, gas and other mineral deposits in the land so Patented, together with the right to prospect for, mine and remove the same according to the provisions of said Act of June 1, 1938, as reserved by the United States of America in patent recorded December 7, 1962 in Book 3552, Page(s) 966 of Official Records.

APN:  237-141-25

   Tract 3

The West half of the Southeast quarter of the Southeast quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the Official Plat thereof.

Except therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same, according to the provisions of said Act of June 1, 1938, as excepted and reserved by the United States of America in the patent recorded August 23, 1990 on Book 6422, Page 2386 of Official Records.

APN:  237-141-26

   Tract 4

The East half of the Southwest quarter of the Southeast quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the Official Plat thereof.

Except therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same, according to the provisions of said Act of June 1, 1938, as excepted and reserved by the United States of America in the patent recorded January 4, 1962 on Book 3449, Page 44 of Official Records.

APN:  237-141-27
   
   Tract 5

The East half of the Southeast quarter of the Southeast quarter of the Northeast quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Except therefrom all oil, gas and other hydrocarbon substances, as reserved in Book 3326, Page 982, of Official Records.

APN:  237-142-25

   Tract 6

The West half of the Southeast quarter of the Southeast quarter of the Northeast quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  237-142-26

   Tract 7

The West half of the Southwest quarter of the Southwest quarter of the Northeast quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Base and Meridian.

Excepting therefrom to the United States all oil, gas and other mineral deposits in the land so patented, together with the right to prospect for, mine and remove the same according to the provisions of the Act of June 1, 1938, as reserved in patent recorded June 29, 1990 in Book 6400, Page 2360 of Official Records.

APN:  237-142-32

   Tract 8

The West half of the Northwest quarter of the Northwest quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, in the unincorporated area, County of Kern, State of California, San Bernardino Base and Meridian, according to the official plat thereof.

Excepting and reserving to the United States all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same according to the provisions of said Act of June 1, 1938, in patent recorded August 29, 1961 in Book 3410, Page 214, of Official Records.

APN:  237-152-01

   Tract 9

The East half of the Northwest quarter of the Northwest quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, in the unincorporated area, County of Kern, State of California, San Bernardino Base and Meridian, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same according to the provisions of said Act of June 1, 1938, as reserved by the United States of America in the patent recorded April 21, 1960 in Book 3260, Page 842, of Official Records.

APN:  237-152-02

   Tract 10

The West half of the Northeast quarter of the Northwest quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, in the unincorporated area, County of Kern, State of California, San Bernardino Base and Meridian, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same according to the provisions of said Act of June 1, 1938, as reserved by the United States of America in the patent dated January 14, 1960 Patent No. 1203755 and recorded August 17, 1960 in Book 3293, Page 949, of Official Records.

APN:  237-152-03

   Tract 11

The East half of the Northeast quarter of the Northwest quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, in the unincorporated area, County of Kern, State of California, San Bernardino Meridian, according to the official plat thereof.

Except all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same, as reserved by the United States of America in the patent recorded October 26, 1960 in Book 3314, Page 880, of Official Records.

APN:  237-152-04

   Tract 12

The West half of the Northwest quarter of the Northeast quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, in the unincorporated area, County of Kern, State of California, San Bernardino Meridian, according to the official plat thereof.

APN:  237-152-05

   Tract 13

The East half of the Northwest quarter of the Northeast quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Base and Meridian.

Except all oil, gas and other mineral deposits, together with the right to prospect for, mine and remove the same according to the provisions of the Act of June 1, 1938, as reserved by the United States of America in patent recorded April 5, 1960 in Book 3256, Page 18 of Official Records.

APN:  237-152-06

   Tract 14

The North half of the West half of the Northeast quarter of the Northeast quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, in the unincorporated area, County of Kern, State of California, San Bernardino Meridian, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same, according to the provisions of said Act of June 1, 1938, as excepted and reserved by the United States of America in the patent recorded June 16, 1960 in Book 3276, Page 51, of Official Records.

APN:  237-152-33

   Tract 15

The West half of the Northwest quarter of Section 11, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom one-half of all oil, gas, minerals and other hydrocarbon substances and natural gas, under and in said land as reserved by M&amp;R Sheep Co., in Deed recorded November 22, 1955 in Book 2519, Page 283, of Official Records.

APN:  237-284-01

   Tract 16

The West half of the West half of the Northeast quarter of the Northwest quarter of Section 11, Township 11 North, Range 13 West, San Bernardino Base and Meridian, in the unincorporated area, County of Kern, State of California, as per Certificate of Compliance No. 446 recorded May 28, 1982 in Book 5462, Page 1483 of Official Records.

Except 50% of all oil and mineral rights as reserved in records of said County.

APN:  237-284-02
   
   Tract 17

The East half of the West half of the Northeast quarter of the Northwest quarter of Section 11, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official map of said land on file in the Bureau of Land Management and approved by the Surveyor General on September 19, 1856.

Except therefrom one-half of all oil, gas and minerals and hydrocarbon substances in and under said land, as excepted in Deed dated August 4, 1955 from M&amp;R Sheep Co., to C.M. Turley, recorded November 22, 1955 in Book 2519, Page 289, of Official Records.  Said deed provides in part:

The right to conduct drilling or other operations upon the surface of said lands last described or any portion thereof, without first having secured the written consent of the Second parties, their heirs and assigns, or the owner or owners of such portions of the surface as may be used for a drilling site or surface operations, but nothing herein contained shall be deemed to prevent the Grantor its successors and assigns from extracting or capturing said oil, gas or other hydrocarbon substances or minerals by drilling on adjacent of neighboring lands and/or from conducting sub-surface drilling or other operations under said lands last above described at such depths as not to disturb the surface thereof or any improvements thereon, was waived by the Grantors in said Deed.

Excepting therefrom the Northeast quarter of the Northwest quarter of the Northeast quarter of the Northwest quarter of said section and the Southeast quarter of the Northwest quarter of the Northeast quarter of the Northwest quarter of said section as reconveyed by Document recorded in Book 5101, Page 2245 of Official Records.

APN:  237-284-05

   Tract 18

The West half of the East half of the Northeast quarter of the Northwest quarter of Section 11, Township 11, North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom one-half of all oil, gas, minerals and hydrocarbons in and under said land, as excepted by M&amp;R Sheep Co., in deed recorded November 22, 1955 in Book 2519, Page 289 of Official Records.

APN:  237-284-06

   Tract 19

The East half of the East half of the Northeast quarter of the Northwest quarter of Section 11, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom one-half of all oil, gas, minerals and hydrocarbons in and under said land together with the rights incidental thereto, as excepted by M&amp;R Sheep Co., in deed recorded November 22, 1955 in Book 2519, Page 289, of Official Records.

APN:  237-284-07

   Tract 20

The Southwest quarter of the Northwest quarter of the Northeast quarter of Section 11, Township 11 North Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom 1/2 of all oil, gas, minerals and hydrocarbon substances in and under said land, as excepted by M &amp; R Sheep Co., in deed recorded November 22, 1955 in Book 2519, Page 283 of Official Records.

APN:  237-285-05
d.	Roads:
   Tract 1

The East half of the East half of Section 9, Township 11 North, Range 13 West, San Bernardino Base and Meridian, in the unincorporated area of the County of Kern, State of California, as per the official plat thereof on file in the Office of the Surveyor General, approved September 19, 1856.

Excepting therefrom one half of all oil, gas and other hydrocarbon substances and minerals in and under said land, as excepted in deed dated December 1, 1955 from M&amp;R Sheep Company, recorded March 22, 1956 in Book 2581, Page 233 of Official Records.

APN:  237-022-13

   Tract 2
   
The East Half of the Northeast Quarter of Section 16, Township 11 North, Range 13 West, San Bernardino Meridian, in the County of Kern, State of California, according to the official plat of said land by the Surveyor General dated September 19, 1856.

Excepting therefrom said land an undivided 1/16th of all coal, oil, oil shale, gas, phosphate, sodium and other mineral deposits in said land as reserved to the State of California, by the provision of an act of the legislation, statutes of 1921 page 404 and amendments thereto.

Also excepting therefrom half of all oil, hydrocarbons and similar minerals but without the right of entry to depth of 500 feet from the surface thereon in and to the property. As granted to J. J. Kessler, a married man, in deed recorded August 23, 1956 in Book 2654, Page 300 of Official records.

APN:  237-031-08

   Tract 3

A strip of land, one hundred seventy-five (175) feet in width, situated in the South 1/2 of Section 16, Township 11 North, Range 13 West, San Bernardino Base and Meridian, Kern County, California, being a portion of that property conveyed to The Muriel Pollia Foundation, by Document No. 0207220631, recorded on November 2, 2007, Kern County Deed Records, and being more particularly described as follows:

The East one hundred seventy-five (175) feet of said South 1/2, Section 16, together with that one hundred seventy-five (175) foot strip, the southerly line of which is coincident and parallel with the northerly right of way line of Oak Creek Road (County Road No. 648) said line being 30.00 feet northerly of the centerline of said road, when measured at right angles.

APN:  237-031-38

   Tract 4

The West half of the Northwest quarter of Section 11, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom one-half of all oil, gas, minerals and other hydrocarbon substances and natural gas, under and in said land as reserved by M&amp;R Sheep Co., in Deed recorded November 22, 1955 in Book 2519, Page 283, of Official Records.

APN:  237-284-01

Tract 5

The West half of the Northwest quarter of the Northwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the Official Plat thereof.

Excepting therefrom all oil, gas and other mineral deposits in the land so patented, together with the right to prospect for, mine and remove the same according to the provisions of said Act of June 1, 1938, as reserved in Deed recorded August 14, 1963 in Book 3634, Page 835 of Official Records. 

APN:  237-141-01

   Tract 6

The East half of the Northwest quarter of the Northwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the Official Plat thereof.

Excepting therefrom all oil, gas and other mineral deposits in the land so patented, together with the right to prospect for, mine and remove the same according to the provisions of said Act of June 1, 1938, as reserved in Deed recorded September 20, 1967 in Book 4090, Page 851 of Official Records. 

APN:  237-141-02

   Tract 7

The West half of the Northeast quarter of the Northwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Base and Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  237-141-03

   Tract 8

The East half of the Northeast quarter of the Northwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same, according to the provisions of said Act of June 1, 1938, as excepted and reserved by the United States of America recorded in Book 3259, Page 641 of Official Records.

APN:  237-141-04

   Tract 9

The East half of the Southeast quarter of the Northwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove same, according to the provisions of said Act of June 1, 1938, as excepted and reserved by the United States of America in the patent recorded August 3, 1960 in Book 3290, Page 186 of Official Records.

APN:  237-141-13

   Tract 10

The East half of the Northeast quarter of the Southwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same, according to the provisions of the Act of June 1, 1938, as excepted and reserved by the United States of America in the patent recorded September 28, 1960 in Book 3306, page 864, Official Records.

APN:  237-141-20

   Tract 11

The West half of the Northwest quarter of the Southeast quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat of said land filed in the District Land Office October 7, 1936.

Excepting therefrom all oil, gas and other mineral deposits, in and under said land, together with the right to prospect for, mine and remove the same, according to the provisions of the Act of June 1, 1938, as excepted and reserved by the United States of America in the patent recorded September 28, 1960 in Book 3306, Page 863, Official Records.

APN:  237-141-21

   Tract 12

The East half of the Northwest quarter of the Southeast quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land to patented, together with the right to prospect for, mine and remove the same, according to the provisions of said Act of June 1, 1938, excepted and reserved by the United States of America in the patent recorded August 23, 1990 in Book 6422, Page 1904 of Official Records.

APN:  237-141-22
   
   Tract 13

The East half of the Southeast quarter of the Southeast quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Base and Meridian.

Excepting therefrom all oil, gas and other mineral deposits in the land so Patented, together with the right to prospect for, mine and remove the same according to the provisions of said Act of June 1, 1938, as reserved by the United States of America in patent recorded December 7, 1962 in Book 3552, Page(s) 966 of Official Records.

APN:  237-141-25

   Tract 14

The West half of the Southeast quarter of the Southeast quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the Official Plat thereof.

Except therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same, according to the provisions of said Act of June 1, 1938, as excepted and reserved by the United States of America in the patent recorded August 23, 1990 on Book 6422, Page 2386 of Official Records.

APN:  237-141-26

   Tract 15

The East half of the Southwest quarter of the Southeast quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the Official Plat thereof.

Except therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same, according to the provisions of said Act of June 1, 1938, as excepted and reserved by the United States of America in the patent recorded January 4, 1962 on Book 3449, Page 44 of Official Records.

APN:  237-141-27

   Tract 16

The East half of the Southeast quarter of the Southeast quarter of the Northeast quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Except therefrom all oil, gas and other hydrocarbon substances, as reserved in Book 3326, Page 982, of Official Records.

APN:  237-142-25

   Tract 17

The West half of the Southeast quarter of the Southeast quarter of the Northeast quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  237-142-26

   Tract 18

The West half of the Southwest quarter of the Southwest quarter of the Northeast quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Base and Meridian.

Excepting therefrom to the United States all oil, gas and other mineral deposits in the land so patented, together with the right to prospect for, mine and remove the same according to the provisions of the Act of June 1, 1938, as reserved in patent recorded June 29, 1990 in Book 6400, Page 2360 of Official Records.

APN:  237-142-32

   Tract 19

The West half of the Northwest quarter of the Northwest quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, in the unincorporated area, County of Kern, State of California, San Bernardino Base and Meridian, according to the official plat thereof.

Excepting and reserving to the United States all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same according to the provisions of said Act of June 1, 1938, in patent recorded August 29, 1961 in Book 3410, Page 214, of Official Records.

APN:  237-152-01

   Tract 20

The East half of the Northwest quarter of the Northwest quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, in the unincorporated area, County of Kern, State of California, San Bernardino Base and Meridian, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same according to the provisions of said Act of June 1, 1938, as reserved by the United States of America in the patent recorded April 21, 1960 in Book 3260, Page 842, of Official Records.

APN:  237-152-02

   Tract 21

The West half of the Northeast quarter of the Northwest quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, in the unincorporated area, County of Kern, State of California, San Bernardino Base and Meridian, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same according to the provisions of said Act of June 1, 1938, as reserved by the United States of America in the patent dated January 14, 1960 Patent No. 1203755 and recorded August 17, 1960 in Book 3293, Page 949, of Official Records.

APN:  237-152-03

   Tract 22

The East half of the Northeast quarter of the Northwest quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, in the unincorporated area, County of Kern, State of California, San Bernardino Meridian, according to the official plat thereof.

Except all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same, as reserved by the United States of America in the patent recorded October 26, 1960 in Book 3314, Page 880, of Official Records.

APN:  237-152-04

   Tract 23

The West half of the Northwest quarter of the Northeast quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, in the unincorporated area, County of Kern, State of California, San Bernardino Meridian, according to the official plat thereof.

APN:  237-152-05

   Tract 24

The East half of the Northwest quarter of the Northeast quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Base and Meridian.

Except all oil, gas and other mineral deposits, together with the right to prospect for, mine and remove the same according to the provisions of the Act of June 1, 1938, as reserved by the United States of America in patent recorded April 5, 1960 in Book 3256, Page 18 of Official Records.

APN:  237-152-06

   Tract 25

The North half of the West half of the Northeast quarter of the Northeast quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, in the unincorporated area, County of Kern, State of California, San Bernardino Meridian, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same, according to the provisions of said Act of June 1, 1938, as excepted and reserved by the United States of America in the patent recorded June 16, 1960 in Book 3276, Page 51, of Official Records.

APN:  237-152-33

   Tract 26

The Southwest quarter of the Southwest quarter of Section 15, Township 11 North, Range 13 West, San Bernardino Meridian, in the County  of  Kern,  State  of  California,  according  to  the  official  plat of the survey of said land, approved by the Surveyor General October 7, 1936.

Except one half of all oil, gas and minerals and hydrocarbon substances in and under said land as reserved by the M &amp; R Sheep Co. in deed dated August 4, 1955, recorded in Book 2519, Page 298 of Official Records.

APN:  237-185-07

   Tract 27

The West half of the Northwest quarter of Section 11, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom one-half of all oil, gas, minerals and other hydrocarbon substances and natural gas, under and in said land as reserved by M&amp;R Sheep Co., in Deed recorded November 22, 1955 in Book 2519, Page 283, of Official Records.

APN:  237-284-01
   
   Tract 28

The West half of the West half of the Northeast quarter of the Northwest quarter of Section 11, Township 11 North, Range 13 West, San Bernardino Base and Meridian, in the unincorporated area, County of Kern, State of California, as per Certificate of Compliance No. 446 recorded May 28, 1982 in Book 5462, Page 1483 of Official Records.

Except 50% of all oil and mineral rights as reserved in records of said County.

APN:  237-284-02

   Tract 29

The East half of the West half of the Northeast quarter of the Northwest quarter of Section 11, Township 11, North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official map of said land on file in the Bureau of Land Management and approved by the Surveyor General on September 19, 1856.

Except therefrom one-half of all oil, gas and minerals and hydrocarbon substances in and under said land, as excepted in Deed dated August 4, 1955 from M&amp;R Sheep Co., to C.M. Turley, recorded November 22, 1955 in Book 2519, Page 289, of Official Records.  Said deed provides in part:

The right to conduct drilling or other operations upon the surface of said lands last described or any portion thereof, without first having secured the written consent of the Second parties, their heirs and assigns, or the owner or owners of such portions of the surface as may be used for a drilling site or surface operations, but nothing herein contained shall be deemed to prevent the Grantor its successors and assigns from extracting or capturing said oil, gas or other hydrocarbon substances or minerals by drilling on adjacent of neighboring lands and/or from conducting sub-surface drilling or other operations under said lands last above described at such depths as not to disturb the surface thereof or any improvements thereon, was waived by the Grantors in said Deed.

Excepting therefrom the Northeast quarter of the Northwest quarter of the Northeast quarter of the Northwest quarter of said section and the Southeast quarter of the Northwest quarter of the Northeast quarter of the Northwest quarter of said section as reconveyed by Document recorded in Book 5101, Page 2245 of Official Records.

APN:  237-284-05

   Tract 30

The West half of the East half of the Northeast quarter of the Northwest quarter of Section 11, Township 11, North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom one-half of all oil, gas, minerals and hydrocarbons in and under said land, as excepted by M&amp;R Sheep Co., in deed recorded November 22, 1955 in Book 2519, Page 289 of Official Records.

APN:  237-284-06

   Tract 31

The East half of the East half of the Northeast quarter of the Northwest quarter of Section 11, Township 11, North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom one-half of all oil, gas, minerals and hydrocarbons in and under said land together with the rights incidental thereto, as excepted by M&amp;R Sheep Co., in deed recorded November 22, 1955 in Book 2519, Page 289, of Official Records.

APN:  237-284-07			
Tract 32
The Southwest quarter of the Northwest quarter of the Northeast quarter of Section 11, Township 11 North Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom 1/2 of all oil, gas, minerals and hydrocarbon substances in and under said land, as excepted by M &amp; R Sheep Co., in deed recorded November 22, 1955 in Book 2519, Page 283 of Official Records.

APN:  237-285-05		
e.	Crossing Agreements:
(i) Permit to Cross Right of Way Facilities dated July 28, 2014 by and between Rising Tree Wind Farm LLC, El Paso Natural Gas Company, LLC and Mojave Pipeline Company, LLC for permanent road and fiber optic crossing of Mojave Pipeline Company, LLC and El Paso Natural Gas Company, LLC's pipelines.
(ii) Permit to Cross Right of Way Facilities dated July 28, 2014 by and between Rising Tree Wind Farm II LLC, El Paso Natural Gas Company, LLC and Mojave Pipeline Company, LLC for permanent road and fiber optic crossing of Mojave Pipeline Company, LLC and El Paso Natural Gas Company, LLC's pipelines.
(iii) Permit to Cross Right of Way Facilities dated July 28, 2014 by and between Rising Tree Wind Farm III LLC, El Paso Natural Gas Company, LLC and Mojave Pipeline Company, LLC for permanent road and fiber optic crossing of Mojave Pipeline Company, LLC and El Paso Natural Gas Company, LLC's pipelines..
(iv) Letter of Crossing Consent dated February 26, 2014 from AT&amp;T to Rising Tree Wind Farm LLC, Rising Tree Wind Farm II LLC, and Rising Tree Wind Farm III LLC for crossing of AT&amp;T's infrastructure.
(v) Letter of Crossing Consent dated May 14, 2014 from PG&amp;E to Rising Tree Wind Farm LLC, Rising Tree Wind Farm II LLC, and Rising Tree Wind Farm III LLC for road and transmission line crossing of PG&amp;E's pipelines.
(vi) Letter of Crossing Consent dated September 10, 2014 from PG&amp;E to Rising Tree Wind Farm LLC, Rising Tree Wind Farm II LLC, and Rising Tree Wind Farm III LLC for fiber optic line crossing of PG&amp;E's pipelines.
(vii) Permit to Cross Right of Way Facilities dated November 11, 2014 by and between Rising Tree Wind Farm LLC, El Paso Natural Gas Company, LLC and Mojave Pipeline Company, LLC for permanent transmission line crossing of Mojave Pipeline Company, LLC and El Paso Natural Gas Company, LLC's pipelines.
(viii) Permit to Cross Right of Way Facilities dated November 11, 2014 by and between Rising Tree Wind Farm II LLC, El Paso Natural Gas Company, LLC and Mojave Pipeline Company, LLC for permanent transmission line crossing of Mojave Pipeline Company, LLC and El Paso Natural Gas Company, LLC's pipelines.
(ix) Permit to Cross Right of Way Facilities dated November 11, 2014 by and between Rising Tree Wind Farm III LLC, El Paso Natural Gas Company, LLC and Mojave Pipeline Company, LLC for permanent transmission line crossing of Mojave Pipeline Company, LLC and El Paso Natural Gas Company, LLC's pipelines.
(x) Letter of Crossing Consent dated May 28, 2014 from SCE to Rising Tree Wind Farm LLC, Rising Tree Wind Farm II LLC, and Rising Tree Wind Farm III LLC for crossing of SCE's overhead distribution lines.
f.	Neighbor Agreements
   Tract 1

Lot 28 of Section 2, Township 11 North, Range 13 West, San Bernardino Base and Meridian in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  237-121-22

   Tract 2

Lot 49 of Section 2, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  237-122-01

   Tract 3

Lot 63 of Section 2, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  237-122-19

   Tract 4

Lot 59 of Section 2, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  237-122-23
   
   Tract 5

The east half of the northeast quarter of the southeast quarter of the southwest quarter of Section 2, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  237-131-24

   Tract 6

The West half of the Northeast quarter of the Southwest quarter of the Southeast quarter of Section 2, Township 11 North, Range 13 West, San Bernardino Base &amp; Meridian, in the unincorporated area of the County of Kern, State of California, according to the official plat thereof.

APN:  237-132-19
   
   Tract 7

The East half of the Northeast quarter of the Southwest quarter of the Southeast quarter of Section 2, Township 11 North, Range 13 West, San Bernardino Base &amp; Meridian, in the unincorporated area of the County of Kern, State of California, according to the official plat thereof.

APN:  237-142-20

   Tract 8

The East half of the Northwest quarter of the Southeast quarter of the Southeast quarter of Section 2, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  237-132-22

   Tract 9

That portion of the West half of the Southeast quarter of the Southeast quarter of the Southeast quarter of Section 2, Township 11 North, Range 13 West, San Bernardino Base and Meridian, in the un-incorporated area, County of Kern, State of California, as per the Official Plat thereof on file in the Office of the Surveyor General, described as follows:

Beginning at the Northeast corner of the West half of the Southeast quarter of the Southeast quarter of the Southeast quarter of said Section 2; Thence Southerly 132 feet; Thence Westerly 165 feet; Thence Northerly 132 feet; Thence Easterly 165 feet to the point of beginning.

Excepting therefrom all oil, gas and other mineral deposits in the land so patented, together with the right to prospect for, mine and remove the same according to the provisions of said Act of June 1, 1938, as reserved by the United States of America, in Patent recorded February 24, 1960 in Book 3242, Page 151 of Official Records.

APN:  237-132-26

   Tract 10

That portion of the west half of the southeast quarter of the southeast quarter of the southeast quarter of Section 2, Township 11 North, Range 13 West, S.B.B.M., in the unincorporated area, County of Kern, State of California, as per the Official Plat thereof on file in the Office of the Surveyor General, described as follows:

Beginning at a point 165 feet west of the northeast corner of the west half of the southeast quarter of the southeast quarter of the southeast quarter of Section 2; thence west 165 feet; thence southerly 132 feet; thence easterly 165 feet; thence northerly 132 feet, to the beginning point.

Excepting therefrom all oil, gas and other mineral deposits in the land so patented, together with the right to prospect for, mine and remove the same, according to the provisions of said Act of June 1, 1938, as reserved by the United States of America, in Patent recorded February 24, 1960 in book 3242 page 151 of Official Records.

APN:  237-132-27
   
   Tract 11

The east half of the southeast quarter of the southeast quarter of the southeast quarter of Section 2, Township 11 North, Range 13 West, San Bernardino Meridian, in the County of Kern, State of California, according to the Official Plat of said land filed in the District Land Office October 7, 1936.

Excepting therefrom that portion within the following described land:

That portion of the east half of the southeast quarter of the southeast quarter of the southeast quarter of Section 2, Township 11 North, Range 13 West, S.B.BM., in the County of Kern, State of California, according to the Official Plat thereof, lying southeasterly of a line that lies 100 feet northwesterly of, parallel with and measured at right angles from the following described line and its prolongation:

Beginning at a point in the Southerly line of said Section 2, distant thereon South 8923'25" west, 1.75 feet from the southeast corner of said section; Thence north 4747'57" east 2.40 to a point in the easterly line of said section, distant thereon north 100'54" east 1.59 feet from said southeast section corner.

Basis of bearings is Lambert Projection, North American 1927 DATUM, California Zone 5.

Together with all of the grantors right, title and interest in and to all water and water rights, whether surface or subsurface or of any other kind, including all appurtenant water rights, and all water and water rights in any wise incident to the real property herein described or used thereon or in connection therewith by deed recorded February 14, 1967 in book 4024, page 678 of Official Records.

Also except therefrom all oil, gas and other mineral deposits in and under said land together with the right to prospect for, mine and remove the same according to the provisions of said Act of June 1, 1938, as excepted and reserved by the United States of America in Patent recorded February 9, 1960, in Book 3237, Page 339 of Official Records.

APN:  237-132-41

Tract 12

The West half of the Northeast quarter of the Northwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Base and Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  237-141-03

   Tract 13

The East half of the Southeast quarter of the Northwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove same, according to the provisions of said Act of June 1, 1938, as excepted and reserved by the United States of America in the patent recorded August 3, 1960 in Book 3290, Page 186 of Official Records.

APN:  237-141-13

   Tract 14

The West half of the Southeast quarter of the Northwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the Official Plat thereof.

APN:  237-141-14

   Tract 15

The East half of the Northeast quarter of the Southwest quarter of the Northwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom all oil, gas and other mineral deposits, in the land so patented, together with the right to prospect for, mine and remove the same, according to the provisions of the Act of June 1, 1938, as excepted and reserved by the United States of America in the patent recorded September 28, 1960 in Book 3306, page 864, Official Records.

APN:  237-141-20
   
   Tract 16

The East half of the Northeast quarter of the Southwest quarter of the Northeast quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Base &amp; Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  237-142-20

   Tract 17

The West half of the Northeast quarter of the Northeast quarter of the Southwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  237-151-07

   Tract 18

The East half of the Northwest quarter of the Southeast quarter of the Southwest quarter of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  237-151-22

   Tract 19

The East half of the Southwest quarter of the Northwest quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, in the unincorporated area, County of Kern, State of California, San Bernardino Meridian, according to the official plat thereof.

APN:  237-152-15

   Tract 25

The West half of the Southwest quarter of the Northwest quarter of the Southeast quarter of Section 10, Township 11 North, Range 13 West, in the unincorporated area, County of Kern, State of California, San Bernardino Base and Meridian, according to the official plat thereof.

APN:  237-152-16
g.	O&amp;M Building
The Southwest quarter of the Southeast quarter of the Northwest quarter of Section 15, Township 11 North, Range 13 West, S.B.B.M., in the unincorporated area, County of Kern, State of California.

Except an undivided 1/2 interest in 50% of the oil, gas, minerals and other hydrocarbon substances, affecting said land as reserved by deeds of record.

By a document entitled "Order Settling First Account and Report of Executors, for Preliminary Distribution in the matter of the estate of Oscar Rudnick, deceased, filed in the Superior Court of the State of California for the County of Kern, Case No. 15776, the decedents interest in the above mineral exception was distributed to Sophie Rudnick, Marcus Rudnick and Frances A. Moore, Trustees of the Testamentary Trust created by the decedents Will by document recorded January 12, 1979 in book 5168, page 797 of Official Records.

APN:  237-185-05
h.	Laydown Area
The Northwest quarter of the Northwest quarter of Section 15, Township 11 North, Range 13 West, San Bernardino Base and Meridian.

Excepting therefrom half of all oil, gas and minerals and hydrocarbon substances under and in said land reserved by M&amp;R Sheep Co., in deed dated August 4, 1955 and recorded November 22, 1955 in Book 2519, Page 289 of Official Records.  Also excepting therefrom all oil, gas and other hydrocarbon substances and minerals in and under said land not previously excepted or reserved, as reserved by Benjamin Winter, a married man, in deed recorded on Book 5954, Page 2192 of Official Records.

AND

The Northwest quarter of the Southwest quarter of Section 15, Township 11 North, Range 13 West, San Bernardino Base and Meridian.

Excepting therefrom half of all oil, gas and minerals and hydrocarbon substances in and under said land as reserved by M&amp;R Sheep Co., in deed dated August 4, 1955 recorded November 22, 1955 in Book 2519, Page 289 of Official Records.  Also excepting therefrom all oil, gas and other hydrocarbon substances and minerals in and under said land not previously excepted or reserved, as reserved by Benjamin Winter, a married man, in deed recorded in Book 5954, Page 2192 of Official Records.

AND

The Southwest quarter of the Northwest quarter of Section 15, Township 11 North, Range 13 West, San Bernardino Base and Meridian.

Excepting therefrom half of all oil, gas and minerals and hydrocarbon substances in and under said land as reserved by M&amp;R Sheep Co., in deed dated August 4, 1955 recorded November 22, 1955 in Book 2519, Page 289 of Official Records.  Also excepting therefrom all oil, gas and other hydrocarbon substances and minerals in and under said land not previously excepted or reserved, as reserved by Benjamin Winter, a married man, in deed recorded in Book 5954, Page 2192 of Official Records.

APN 237-185-01
i.	Condor Detection Tower
The East half of the Southwest quarter of the Northeast quarter of fractional Section 18, Township 11 North, Range 14 West, S.B.M., according to the Official Plat of the survey of said land on file in the Office of the Bureau of Land Management and approved on November 21, 1894.
APN 237-083-09
3. Shared Permits
a. Kern County Substation Building permit No. K201403609 issued August 29, 2014.
b. Kern County Transmission Line Building Permit No. K201404234 issued August 14, 2014.
c. Kern County Encroachment Permit for filming of roads. Permit No. 0353-14 issued April 9, 2014.
d. Kern County Encroachment Permit for boring under Oak Creek Road. Permit No. 0626-14 issued June 12, 2014.
e. Kern County Encroachment Permit for private access. Permit No. 0363-14 issued April 9, 2014.
f. Kern County Encroachment Permit for transmission line private access. Permit No. 0809-14 issued August 6, 2014.
g. Kern County Encroachment Permit for transmission line construction. Permit No. 0477-14 issued May 8, 2014.
h. Kern County Encroachment Permit for trenching in Kern County franchise. Permit No. 1201-14 dated November 5, 2014.
i. Eagle Take Permit; yet to be issued by the US Fish and Wildlife Service.  [does not relate to Shared Facilities]
j. Authority to construct 125-kw emergence generator issued by Kern County Air Pollution Control District on October 8, 2014.
k. Kern County Ordinance No. F589 granting Rising Tree Wind Farm LLC a franchise to construct, install, maintain, operate, repair, renew and remove underground fiber optic cable dated November 4, 2014. [Partial assignment to Rising Tree II and Rising Tree III pending.]
4. Third Party Rights
a.	O&amp;M Building:  Rights of Lone Valley Solar Park I LLC and Lone Valley Solar Park II LLC (collectively, the "Sublessees") under that certain Sublease Agreement dated [_____], 2014 by and between the Co-Owners, as sublessors, and the Sublessees, as sublessees.
B. Assets Jointly Owned and Shared by Rising Tree I and Rising Tree II (RST I/II Shared Facilities Group)
1. Shared Facilities
a.	Roads
b.	Meteorological Tower
2. Shared Real Property
a.	Collection and Distribution Lines:  
   Tract 1

The South half of the South half of the West half of the Southeast quarter of fractional Section 36, Township 12 North, Range 13 West, San Bernardino Meridian,  in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  224-440-31

   Tract 2

The Southeast quarter of the Northwest quarter of that portion of the North half of the Northeast quarter of the Southwest quarter of Section 1, Township 11 North, Range 13 West, San Bernardino Meridian, in the County  of  Kern,  State  of  California,  according  to  the  official  plat  thereof,  lying  northerly  of  the northwesterly line of that certain strip of land 200 feet in width conveyed to the City of Los Angeles, a municipal corporation by deed recorded March 13, 1920 in Book 346, Page 421 of Deeds.

Except therefrom that portion of said land deeded to the City of Los Angeles, a municipal corporation by deed recorded April 18, 1968 in Book 4151, Page 400 of Official Records.

APN:  237-261-03

   Tract 3

The South half of the Northwest quarter of the Southwest quarter of Section 1, Township 11 North, Range 13 West, San Bernardino Meridian, excepting from the South half of the Northwest quarter of the Southwest quarter of said Section 1, that portion thereof within that certain strip of land 200 feet in width, conveyed to the City of Los Angeles, a municipal corporation, by Deed recorded March 13, 1920 in Book 346, Page 421 of Deeds; also excepting therefrom that portion thereof conveyed to the City of Los Angeles in deed recorded June 19, 1968 on Book 4171, Page 256 of Official Records.

APN:  237-261-06

   Tract 4

The North half of the Northwest quarter of the Northeast quarter of Section 1, Township 11 North, Range 13 West, San Bernardino Meridian.

Excepting therefrom any portion of said land as deeded to the City of Los Angeles, a municipal corporation for Los Angeles Aqueduct by deed recorded April 18, 1969 in Book 4151, Page 393, Official Records.

APN:  237-261-13

   Tract 5

Parcel 4 of Parcel Map No. 4120, in the unincorporated area, County of Kern, State of California, as per map recorded January 4, 1978 in Book 20, Page 6 of Maps of Parcel Maps, in the Office of the County Recorder of said County.

APN:  237-261-22

   Tract 6

The West half of the East half of the North half of the Northwest quarter of Section 1, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, lying northerly and westerly of the northwest line of that portion thereof within that certain strip of land 200 feet in width, conveyed to the City of Los Angeles, a municipal corporation, by deed recorded March 13, 1920 in Book 346, Page 421 of Deeds, the centerline of which is described as follows:

Beginning at a point on the east line of said Section 1, a distance of 5,153.28 feet north 0008'10" west of the southeast corner of said Section 1, and running thence South 5122'30" west 519.80 feet to a point; thence on a curve to the left having a radius of 716.23 feet, a distance of 105.21 feet; thence South 4257'30" west, 1,400.11 feet; thence on a curve to the right,  having a radius of 716.23 feet, a distance of 89.58 feet; thence South 5007'30" west, 1,059.80 feet; thence on a curve to the left, having a radius of 358.17 feet, a distance of 226.14 feet; thence South 1356'30" west, 450.12 feet; thence on a curve to the right, having a radius of 305.17 feet, a distance of 196.45 feet; thence South 4522'30" west, 1,097.88 feet; thence on a curve to the left, having a radius of 358.17 feet, a distance of 107.13 feet; thence South 2814' west 705.05 feet; thence on a curve to the right, having a radius of 358.17 feet, a distance of 149.95 feet; thence South 5213'30" west, 876.30 feet to a point on the South line of said Section, a distance of 660 feet east of the southwest corner thereof, as per Certificate of Compliance recorded November 6, 1989 in Book 6311, Page 2373, Official Records.

Also except the North half of the Northwest quarter of the Northeast quarter of Section 1, Township 11 North, Range 13 West, San Bernardino Meridian.

Also excepting that portion of said land as deeded to the City of Los Angeles, a municipal corporation, as shown in said deed recorded April 18, 1988 in Book 4151, Page 393, Official Records.

APN:  237-261-23

   Tract 7

All that portion of the Southwest quarter of Section 1, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area of the County of Kern, State of California, being more particularly described as follows:

Commencing at the Southwest corner of said Section, thence North 01 degrees 01 minutes 12 seconds East on and along the West line of said Section a distance of 138.81 feet to a point in the Northerly boundary of the Los Angeles Aqueduct, as conveyed to the City of Los Angeles in the Deed recorded May 31, 1968 in Book 4165, Page 434 of Official Records, said point also being the True Point of Beginning; thence continuing North 01 degree 01 minutes 12 seconds East on an along said West line a distance of 1203.21 feet to a point on the North line of the Southwest quarter of the Southwest quarter of said Section; thence North 89 degrees 24 minutes 52 seconds East on and along said North line a distance of 1,187.00 feet to a point on the Northerly boundary of said Los Angeles Aqueduct, said point also being the beginning on a non-tangent 3450.51 foot radius curve, from which point the radius point bears South 59 degrees 13 minutes 37 seconds East; thence Southwesterly, on and along said Northerly boundary and curve, through a central angle of 03 degrees 20 minutes 01 seconds an arc distance of 200.76 feet to the beginning of a 386.96 foot radius reverse curve; thence Southwesterly, on and along said Northerly boundary and curve, through a central angle of 20 degrees 21 minutes 40 seconds an arc distance of 137.51 feet; thence South 47 degrees 48 feet 02 seconds West on and along said Northerly boundary a distance of 1386.61 feet to the True Point of Beginning.

APN:  237-261-30 (formerly 237-261-10)

   Tract 8

A tract of land situated in the North half of the North half of the East half of the East half of Section 11, Township 11 North, Range 13 West, San Bernardino Base and Meridian, Kern County, California, being a portion of that property described in Book 4769, Page 798, recorded on February 8, 1973, Kern County Deed Records, and being more particularly described as follows:

That portion of said property lying northwest of that property described in Book 4198, Page 429, Kern County Deed Records.

APN:  237-285-03

   Tract 9

The Southeast 1/4 of the Northwest 1/4 of the Northeast 1/4 of Section 11, Township 11 North, Range 13 West, San Bernardino Base and Meridian.

EXCEPT:
Parcel No. 80 comprising of that portion of the Southeast 1/4 of the Northwest 1/4 of the Northeast 1/4 of Section 11, Township 11 North, Range 13 West, San Bernardino Meridian, in the County of Kern, State of California, according to the official plat thereof, lying southeasterly of a line that lies 100 feet northeasterly of, parallel with and measured at right angles from the following described line and its prolongation:

Beginning at a point in the Southerly line of said Section 11, distant thereon North 89 degrees 30 minutes 21 seconds East 769.74 feet from the Southwest corner of said Section; thence North 29 degrees 11 minutes 48 seconds East 1740.84 feet to the beginning of a curve concave southeasterly and having a radius of 455.19 feet; thence northeasterly along said curve through an angle of 47 degrees 47 minutes 43 seconds, an arc length of 379.71 feet to the beginning of a reverse curve concave northwesterly and having a radius of 250.04 feet; a radial line at said point of reverse curvature bears North 13 degrees 00 minutes 29 seconds West; thence northeasterly along said reverse curve, through an angle of 52 degrees 16 minutes 18 seconds, an arc length of 228.11 feet; thence North 24 degrees 43 minutes 13 seconds East 560.81 feet to the beginning of a curve concave southeasterly and having a radius of 365.06 feet; thence northeasterly along said curve, through an angle of 37 degrees 05 minutes 38 seconds, an arc length of 236.34 feet; thence North 61 degrees 48 minutes 51 seconds East 723.23 feet to the beginning of a curve concave northwesterly and having a radius of 310.16 feet; thence northeasterly along said curve through an angle of 56 degrees 26 minutes 27 seconds, an arc length of 305.54 feet to the beginning of a reverse curve, concave southeasterly and having a radius of 765.12 feet, a radial line at said point of reverse curvature bears South 84 degrees 37 minutes 36 seconds East; thence Northeasterly along said reverse curve through an angle of 34 degrees 44 minutes 57 seconds, an arc length of 464.03 feet; thence North 40 degrees 07 minutes 21 seconds East feet to the beginning of a curve concave Southeasterly and having a radius of 2000.30 feet; thence Northeasterly along said curve, through an angle of 7 degrees 40 minutes 36 seconds, an arc length of 268.01 feet; thence North 47 degrees 47 minutes 57 seconds East 1564.62 feet to a point in the Northerly line of said Section 11, distant thereon South 89 degrees 23 minutes 25 seconds West 1.75 feet from the Northeast corner of said Section.

APN:  237-285-04

   Tract 10

The Southwest quarter of the Northwest quarter of the Northeast quarter of Section 11, Township 11 North Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

Excepting therefrom 1/2 of all oil, gas, minerals and hydrocarbon substances in and under said land, as excepted by M &amp; R Sheep Co., in deed recorded November 22, 1955 in Book 2519, Page 283 of Official Records.

APN:  237-285-05

b.	Roads
   Tract 1

The South half of the South half of the West half of the Southeast quarter of fractional Section 36, Township 12 North, Range 13 West, San Bernardino Meridian,  in the unincorporated area, County of Kern, State of California, according to the official plat thereof.

APN:  224-440-31

   Tract 2

The east half of the southeast quarter of the southeast quarter of the southeast quarter of Section 2, Township 11, Range 13 West, San Bernardino Meridian, in the County of Kern, State of California, according to the Official Plat of said land filed in the District Land Office October 7, 1936.

Excepting therefrom that portion within the following described land:

That portion of the east half of the southeast quarter of the southeast quarter of the southeast quarter of Section 2, Township 11 North, Range 13 West, S.B.BM., in the County of Kern, State of California, according to the Official Plat thereof, lying southeasterly of a line that lies 100 feet northwesterly of, parallel with and measured at right angles from the following described line and its prolongation:

Beginning at a point in the Southerly line of said Section 2, distant thereon South 8923'25" west, 1.75 feet from the southeast corner of said section; Thence north 4747'57" east 2.40 to a point in the easterly line of said section, distant thereon north 100'54" east 1.59 feet from said southeast section corner.

Basis of bearings is Lambert Projection, North American 1927 DATUM, California Zone 5.

Together with all of the grantors right, title and interest in and to all water and water rights, whether surface or subsurface or of any other kind, including all appurtenant water rights, and all water and water rights in any wise incident to the real property herein described or used thereon or in connection therewith by deed recorded February 14, 1967 in book 4024, page 678 of Official Records.

Also except therefrom all oil, gas and other mineral deposits in and under said land together with the right to prospect for, mine and remove the same according to the provisions of said Act of June 1, 1938, as excepted and reserved by the United States of America in Patent recorded February 9, 1960, in Book 3237, Page 339 of Official Records.

APN:  237-132-41

   Tract 3

The Southeast quarter of the Northwest quarter of that portion of the North half of the Northeast quarter of the Southwest quarter of Section 1, Township 11 North, Range 13 West, San Bernardino Meridian, in the County  of  Kern,  State  of  California,  according  to  the  official  plat  thereof,  lying  northerly  of  the northwesterly line of that certain strip of land 200 feet in width conveyed to the City of Los Angeles, a municipal corporation by deed recorded March 13, 1920 in Book 346, Page 421 of Deeds.

Except therefrom that portion of said land deeded to the City of Los Angeles, a municipal corporation by deed recorded April 18, 1968 in Book 4151, Page 400 of Official Records.

APN:  237-261-03

   Tract 4

The South half of the Northwest quarter of the Southwest quarter of Section 1, Township 11 North, Range 13 West, San Bernardino Meridian, excepting from the South half of the Northwest quarter of the Southwest quarter of said Section 1, that portion thereof within that certain strip of land 200 feet in width, conveyed to the City of Los Angeles, a municipal corporation, by Deed recorded March 13, 1920 in Book 346, Page 421 of Deeds; also excepting therefrom that portion thereof conveyed to the City of Los Angeles in deed recorded June 19, 1968 on Book 4171, Page 256 of Official Records.

APN:  237-261-06

   Tract 5

The North half of the Northwest quarter of the Northeast quarter of Section 1, Township 11 North, Range 13 West, San Bernardino Meridian.

Excepting therefrom any portion of said land as deeded to the City of Los Angeles, a municipal corporation for Los Angeles Aqueduct by deed recorded April 18, 1969 in Book 4151, Page 393, Official Records.

APN:  237-261-13
   
   Tract 6

Parcel 4 of Parcel Map No. 4120, in the unincorporated area, County of Kern, State of California, as per map recorded January 4, 1978 in Book 20, Page 6 of Maps of Parcel Maps, in the Office of the County Recorder of said County.

APN:  237-261-22

   Tract 7

The West half of the East half of the North half of the Northwest quarter of Section 1, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, lying northerly and westerly of the northwest line of that portion thereof within that certain strip of land 200 feet in width, conveyed to the City of Los Angeles, a municipal corporation, by deed recorded March 13, 1920 in Book 346, Page 421 of Deeds, the centerline of which is described as follows:

Beginning at a point on the east line of said Section 1, a distance of 5,153.28 feet north 0008'10" west of the southeast corner of said Section 1, and running thence South 5122'30" west 519.80 feet to a point; thence on a curve to the left having a radius of 716.23 feet, a distance of 105.21 feet; thence South 4257'30" west, 1,400.11 feet; thence on a curve to the right,  having a radius of 716.23 feet, a distance of 89.58 feet; thence South 5007'30" west, 1,059.80 feet; thence on a curve to the left, having a radius of 358.17 feet, a distance of 226.14 feet; thence South 1356'30" west, 450.12 feet; thence on a curve to the right, having a radius of 305.17 feet, a distance of 196.45 feet; thence South 4522'30" west, 1,097.88 feet; thence on a curve to the left, having a radius of 358.17 feet, a distance of 107.13 feet; thence South 2814' west 705.05 feet; thence on a curve to the right, having a radius of 358.17 feet, a distance of 149.95 feet; thence South 5213'30" west, 876.30 feet to a point on the South line of said Section, a distance of 660 feet east of the southwest corner thereof, as per Certificate of Compliance recorded November 6, 1989 in Book 6311, Page 2373, Official Records.

Also except the North half of the Northwest quarter of the Northeast quarter of Section 1, Township 11 North, Range 13 West, San Bernardino Meridian.

Also excepting that portion of said land as deeded to the City of Los Angeles, a municipal corporation, as shown in said deed recorded April 18, 1988 in Book 4151, Page 393, Official Records.

APN:  237-261-23
   
   Tract 8

All that portion of the Southwest quarter of Section 1, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area of the County of Kern, State of California, being more particularly described as follows:

Commencing at the Southwest corner of said Section, thence North 01 degrees 01 minutes 12 seconds East on and along the West line of said Section a distance of 138.81 feet to a point in the Northerly boundary of the Los Angeles Aqueduct, as conveyed to the City of Los Angeles in the Deed recorded May 31, 1968 in Book 4165, Page 434 of Official Records, said point also being the True Point of Beginning; thence continuing North 01 degree 01 minutes 12 seconds East on an along said West line a distance of 1203.21 feet to a point on the North line of the Southwest quarter of the Southwest quarter of said Section; thence North 89 degrees 24 minutes 52 seconds East on and along said North line a distance of 1,187.00 feet to a point on the Northerly boundary of said Los Angeles Aqueduct, said point also being the beginning on a non-tangent 3450.51 foot radius curve, from which point the radius point bears South 59 degrees 13 minutes 37 seconds East; thence Southwesterly, on and along said Northerly boundary and curve, through a central angle of 03 degrees 20 minutes 01 seconds an arc distance of 200.76 feet to the beginning of a 386.96 foot radius reverse curve; thence Southwesterly, on and along said Northerly boundary and curve, through a central angle of 20 degrees 21 minutes 40 seconds an arc distance of 137.51 feet; thence South 47 degrees 48 feet 02 seconds West on and along said Northerly boundary a distance of 1386.61 feet to the True Point of Beginning.

APN:  237-261-30 (formerly 237-261-10)

   Tract 9

A tract of land situated in the North half of the North half of the East half of the East half of Section 11, Township 11 North, Range 13 West, San Bernardino Base and Meridian, Kern County, California, being a portion of that property described in Book 4769, Page 798, recorded on February 8, 1973, Kern County Deed Records, and being more particularly described as follows:

That portion of said property lying northwest of that property described in Book 4198, Page 429, Kern County Deed Records.

APN:  237-285-03
   
   Tract 10

The Southeast 1/4 of the Northwest 1/4 of the Northeast 1/4 of Section 11, Township 11 North, Range 13 West, San Bernardino Base and Meridian.

EXCEPT:
Parcel No. 80 comprising of that portion of the Southeast 1/4 of the Northwest 1/4 of the Northeast 1/4 of Section 11, Township 11 North, Range 13 West, San Bernardino Meridian, in the County of Kern, State of California, according to the official plat thereof, lying southeasterly of a line that lies 100 feet northeasterly of, parallel with and measured at right angles from the following described line and its prolongation:

Beginning at a point in the Southerly line of said Section 11, distant thereon North 89 degrees 30 minutes 21 seconds East 769.74 feet from the Southwest corner of said Section; thence North 29 degrees 11 minutes 48 seconds East 1740.84 feet to the beginning of a curve concave southeasterly and having a radius of 455.19 feet; thence northeasterly along said curve through an angle of 47 degrees 47 minutes 43 seconds, an arc length of 379.71 feet to the beginning of a reverse curve concave northwesterly and having a radius of 250.04 feet; a radial line at said point of reverse curvature bears North 13 degrees 00 minutes 29 seconds West; thence northeasterly along said reverse curve, through an angle of 52 degrees 16 minutes 18 seconds, an arc length of 228.11 feet; thence North 24 degrees 43 minutes 13 seconds East 560.81 feet to the beginning of a curve concave southeasterly and having a radius of 365.06 feet; thence northeasterly along said curve, through an angle of 37 degrees 05 minutes 38 seconds, an arc length of 236.34 feet; thence North 61 degrees 48 minutes 51 seconds East 723.23 feet to the beginning of a curve concave northwesterly and having a radius of 310.16 feet; thence northeasterly along said curve through an angle of 56 degrees 26 minutes 27 seconds, an arc length of 305.54 feet to the beginning of a reverse curve, concave southeasterly and having a radius of 765.12 feet, a radial line at said point of reverse curvature bears South 84 degrees 37 minutes 36 seconds East; thence Northeasterly along said reverse curve through an angle of 34 degrees 44 minutes 57 seconds, an arc length of 464.03 feet; thence North 40 degrees 07 minutes 21 seconds East feet to the beginning of a curve concave Southeasterly and having a radius of 2000.30 feet; thence Northeasterly along said curve, through an angle of 7 degrees 40 minutes 36 seconds, an arc length of 268.01 feet; thence North 47 degrees 47 minutes 57 seconds East 1564.62 feet to a point in the Northerly line of said Section 11, distant thereon South 89 degrees 23 minutes 25 seconds West 1.75 feet from the Northeast corner of said Section.

APN:  237-285-04

c.	Meteorological Tower
The West half of the East half of the North half of the Northwest quarter of Section 1, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, lying northerly and westerly of the northwest line of that portion thereof within that certain strip of land 200 feet in width, conveyed to the City of Los Angeles, a municipal corporation, by deed recorded March 13, 1920 in Book 346, Page 421 of Deeds, the centerline of which is described as follows:

Beginning at a point on the east line of said Section 1, a distance of 5,153.28 feet north 0008'10" west of the southeast corner of said Section 1, and running thence South 5122'30" west 519.80 feet to a point; thence on a curve to the left having a radius of 716.23 feet, a distance of 105.21 feet; thence South 4257'30" west, 1,400.11 feet; thence on a curve to the right,  having a radius of 716.23 feet, a distance of 89.58 feet; thence South 5007'30" west, 1,059.80 feet; thence on a curve to the left, having a radius of 358.17 feet, a distance of 226.14 feet; thence South 1356'30" west, 450.12 feet; thence on a curve to the right, having a radius of 305.17 feet, a distance of 196.45 feet; thence South 4522'30" west, 1,097.88 feet; thence on a curve to the left, having a radius of 358.17 feet, a distance of 107.13 feet; thence South 2814' west 705.05 feet; thence on a curve to the right, having a radius of 358.17 feet, a distance of 149.95 feet; thence South 5213'30" west, 876.30 feet to a point on the South line of said Section, a distance of 660 feet east of the southwest corner thereof, as per Certificate of Compliance recorded November 6, 1989 in Book 6311, Page 2373, Official Records.

Also except the North half of the Northwest quarter of the Northeast quarter of Section 1, Township 11 North, Range 13 West, San Bernardino Meridian.

Also excepting that portion of said land as deeded to the City of Los Angeles, a municipal corporation, as shown in said deed recorded April 18, 1988 in Book 4151, Page 393, Official Records.

APN:  237-261-23
3. Shared Permits
a. Kern County Grading Permit No. K201402123: Issued July 25, 2014
b. Incidental Take Permit 2081-2014-023-04: Issued to Rising Tree Wind Farm LLC and Rising Tree Wind Farm II LLC by California Department of Fish and Wildlife
c. Notice of Applicability under Waste Discharge Requirements WDID No. 6B151403004: Issued to Rising Tree Wind Farm LLC and Rising Tree Wind Farm II LLC by Lahontan Regional Water Quality Control Board

4. Third Party Rights
None



EXHIBIT B-1

PROJECT SUBSTATION SHARED FACILITIES

* One (1) 230kV Dead End Structure including the following equipment and material:
o Tapered Tubular Structural Steel and associated hardware
o Structure and equipment grounding conductor and associated hardware
o Three (3) Lightning Surge Arrestors, 180kV, 144kV MCOV
o Three (3) Compression Tees, 795 ACSR to NEMA 4-Hole Pad
o Thirty (30) Feet of 1272 kcmil AAC (Narcissus) conductor
o Six (6) Welded Terminal Adaptors, 1272 kcmil AAC to NEMA 4-Hole Pad
o Three (3) Station Post Insulators, 230kV, TR-308
o Three (3) Cable Supports, 2-1272 AAC conductors to 5" Bolt Circle
o Five Hundred (500) Feet of 1272 kcmil AAC (Narcissus) conductor
o As Needed Cable Spacers 2-1272 AAC conductors, 4" separation

* Three (3) 230kV Single Phase Bus Supports, including the following equipment and material:
o Structural Steel and Associated hardware
o Structure and equipment grounding conductor and associated hardware
o Three (3) Station Post Insulators, 230kV, TR-308
o Three (3) Cable Supports, 2-1272 AAC conductors to 5" Bolt Circle

* One (1) 230kV, 1200A, Ganged 3-Phase, Motor Operated Disconnect Switch including the following equipment and material:
o Structural Steel and Associated hardware
o Structure and equipment grounding conductor, associated hardware, and switch grounding platform
o Six (6) Station Post Insulators, 230kV, TR-308
o Six (6) Welded Terminal Adaptors, 2-1272 kcmil AAC to NEMA 4-Hole Pad
o Sixty (60) Feet of 1272 kcmil AAC (Narcissus) conductor
o As Needed Cable Spacers 2-1272 AAC conductors, 4" separation

* One (1) 230kV, Metering Station, including the following equipment and material:
o Structural Steel and Associated hardware
o Structure and equipment grounding conductor and associated hardware
o Equipment control wiring and interconnecting conduit including Junction Boxes
o Three (3) 230kV, 600:5 Single Ratio Dual Winding, Instrument Current Transformers
o Three (3) 230kV, 1200/2000:1:1 Dual Winding, Instrument Potential Transformers
o Six (6) Welded Terminal Adaptors, 2-1272 kcmil AAC to NEMA 4-Hole Pad
o Three (3) Cable Spacer Tees, 2-1272 kcmil AAC to NEMA 4-Hole Pad
o Three (3) Aluminum Cable Support Brackets
o Thirty (30) Feet of 1272 kcmil AAC (Narcissus) conductor

* 230kV Substation Summation Bus including the following equipment and material:
o One (1) 230kV, Three Phase Low Bus Support, which includes:
* Structural Steel and Associated hardware
* Structure grounding conductor and associated hardware
* Three (3) Station Post Insulators, 230kV, TR-308
* Three (3) Bus Supports, 4" IPS Aluminum Bus to 5" Bolt Circle
* Three (3) Welded Terminal Adaptors, 2-1272 kcmil AAC to NEMA 4-Hole Pad
* Thirty (30) Feet of 1272 kcmil AAC (Narcissus) conductor
o Thirteen (13) 230kV, Single Phase Low Bus Supports, which includes:
* Structural Steel and Associated hardware
* Structure grounding conductor and associated hardware
* Thirteen (13) Station Post Insulators, 230kV, TR-308
* Thirteen (13) Bus Supports, 4" IPS Aluminum Bus to 5" Bolt Circle
o Six (6) 230kV, Single Phase High Bus Supports, which includes:
* Structural Steel and Associated hardware
* Structure grounding conductor and associated hardware
* Six (6) Station Post Insulators, 230kV, TR-308
* Six (6) Bus Supports, 4" IPS Aluminum Bus to 5" Bolt Circle
o Four (4) 230kV, Three Phase High Bus Support, which includes:
* Structural Steel and Associated hardware
* Structure grounding conductor and associated hardware
* Twelve (12) Station Post Insulators, 230kV, TR-308
* Twelve (12) Bus Supports, 4" IPS Aluminum Bus to 5" Bolt Circle
o Three (3) 230kV, Three Phase Low Bus Support, which includes:
* Structural Steel and Associated hardware
* Structure grounding conductor and associated hardware
* Nine (9) Station Post Insulators, 230kV, TR-308
* Nine (9) Bus Supports, 4" IPS Aluminum Bus to 5" Bolt Circle
* Nine (9) Welded Terminal Adaptors, 2-1272 kcmil AAC to NEMA 4-Hole Pad
* Ninety (90) Feet of 1272 kcmil AAC (Narcissus) conductor
o Nine (9) 230kV, Aluminum A-Frames, which includes:
* Eighteen (18) Tee Connector, 4" IPS Main to 3" IPS Tap, 15
* Nine (9) Tee Connector, 4" IPS Main to 2-3" IPS Taps, 15
* Two Hundred Ten (210) Feet of 3" IPS Aluminum Bus, 6063-T6
o Eight Hundred Fifty (850) Feet of 4" IPS Aluminum Bus, 6063-T6
o Eight Hundred Fifty (850) Feet of 795 kcmil ACSR (Drake) Conductor

* Above and Below Ground Raceways including the following materials
o Conduits, fittings, and connectors connecting shared facility equipment or apparatus to other Substation components located within the Substation
o Cable Trench, Trench Covers, Trench Hangers, and Trench Grounding Materials

* Substation Ground Grid including the following materials
o Twenty Three Thousand (23,000) Feet of #4/0 kcmil 19 Strand, Bare Copper 
o Exothermic Cross connections ~ including molds, shots, and accessories
o Exothermic Tee connections ~ including molds, shots, and accessories
o Exothermic Lug connections ~ including molds, shots, and accessories

* Substation Lighting and Lightning Protection including the following materials
o Eight (8) Static Masts, 90' Tall with provision for yard lighting
o Fifteen (15) 400W, HPS Flood Lights

* Substation Fencing including the following materials
o Fifteen Hundred (1500) Feet of fence, 8' tall, 7' mesh with three strands of barbed wire
o Fence posts, gates, hangers, and grounding materials



EXHIBIT B-2

TRANSMISSION LINE SHARED FACILITIES

3.99-mile 220kV generation tie-line, optical ground wire on the generation tie-line for the primary telecommunications path, single-mode fiber optic cable for the diverse telecommunications path, appurtenant structures, and facilities, including the following:

* Forty Two (42) transmission structures including the following materials:
o Forty Two (42) tubular steel poles
o One Hundred Twenty (120) 230kV 30K Insulators
o One Hundred Twenty (120) Suspension Hardware Assemblies for 795 KCMIL ACSR "Drake"
o Forty (40) 230kV 50K Insulators
o Forty (40) Dead End Hardware Assemblies for 795 KCMIL ACSR "Drake"
o Forty Five (45) OPGW Hardware Assemblies
o Four (4) Dead End Hardware Assemblies for 3/8" Shield Wire
o Structure grounding rods and associated hardware
o Structure signage
* Seventy Thousand Two Hundred (70,200) Feet of 795 KCMIL ACSR "Drake" Conductor
* Twenty Three Thousand (23,000) Feet of 48 Fiber, Single Mode OPGW, DNO 6211
* Three (3) OPGW "Coyote" Splices including splice case, splices and mounting hardware. 
* One Thousand Four Hundred and Fifty (1,450) Bird Flight Diverters
* Two Hundred (200) Feet of 3/8" HS 7-Strand Shield Wire
* Twenty Five Thousand Five Hundred (25,500) Feet of ADSS Fiber Optic Cable
* Twenty Two Thousand (22,000) Feet of 1 1/4" inner duct


      
      
EXHIBIT C
INTERESTS AND PROPORTIONATE SHARES
A.	Undivided Ownership Interests
      The Ownership Interest of each Co-Owner in each Shared Assets Group shall be as set forth in Table C below.  
B.	Proportionate Shares
      The Proportionate Share of each Co-Owner shall be as set forth in Table C below. 
C.	Shared Asset Groups
RST Shared Facilities Group (All Co-Owners)
Equipment Name
RST I
RST II
RST III
Project Substation
40%
10%
50%
Transmission Line
40%
10%
50%
Fiber Optic Facilities
40%
10%
50%
Roads [in Sections 9, 10, 11, 15 and 16]
40%
10%
50%
O&amp;M Facility
40%
10%
50%
[other]
40%
10%
50%

RST I/II Shared Facilities Group (Rising Tree I and Rising Tree II only)
Equipment Name
RST I
RST II



Roads [in Sections 1, 2, 35 and 36]
80%
20%
Met Tower RST 1-B/RST 2
80%
20%


      

EXHIBIT D

MATERIAL PROJECT AGREEMENTS
(Certain Other Agreements Relating to the Construction, 
Operation and Use of the Shared Facilities)

1.  A High Voltage Operations and Maintenance Agreement to be entered into by and between the Co-Owners and EDP Renewables North America LLC (or one of its Affiliates).  [expected to be signed before December 31, 2014]

2.  A Services Agreement for a Remote Operations Control Center to be entered into by and between the Co-Owners and EDP Renewables North America LLC (or one of its Affiliates).  [expected to be signed before December 31, 2014]



EXHIBIT E

DISPUTE RESOLUTION PROCEDURES
1.	Consideration by the Authorized Representatives.
      All questions concerning interpretation of this Agreement, the acceptable fulfillment of the Co-Owners' respective obligations hereunder, as well as all other questions regarding this Agreement in each case that cannot readily be resolved by the Co-Owners shall be resolved in accordance with this Exhibit E.  In the event that the authorized representatives of the Co-Owners cannot reach agreement on any question arising under this Agreement, such dispute shall be referred to senior officers of the Co-Owners pursuant to Paragraph 2 below.
2.	Negotiations by Senior Officers.
      Any disputes arising pursuant to this Agreement that cannot be resolved by the authorized representatives of the Co-Owners within fourteen (14) days after receipt of notice of such dispute (specifically referencing this Exhibit E) shall be referred to the vice president or other senior officer of each of the Co-Owners having executive responsibility for such Co-Owner's Facility.  If such senior officers, negotiating in good faith, fail to reach an agreement within a reasonable period of time, not exceeding twenty (20) days after such referral, then any Co-Owner to such dispute may institute proceedings as set forth in Paragraph 3 below.
3.	Formal Dispute Resolution.
      (a)	If a dispute described in Paragraph 2 is not resolved by the executive management of the Co-Owners, the Co-Owners shall engage in non-binding mediation of such dispute.  Such mediation shall be conducted (i) in Houston, Texas, (ii) within thirty (30) days of a Co-Owner instituting dispute resolution under this Paragraph 3, (iii) by a single, impartial mediator who is selected by the mutual agreement of the Co-Owners, and (iv) in accordance with such procedures as may be adopted by such mediator.  Such mediation shall not, without the express agreement of the Co-Owners at the time, extend for a period of more than two (2) days.  Each Co-Owner may be represented by persons of such Co-Owner's choice during such mediation.  Nothing herein shall be deemed to grant any mediator the authority to impose a resolution of any dispute being mediated.  Any information introduced, proposals made or positions taken in the mediation shall be deemed to be confidential and for settlement purposes only and may not be introduced by the other Co-Owner in any subsequent litigation of the matters subject to mediation.  The Co-Owners shall share the costs of the mediator, including any fees and meeting room rentals.
      (b)	If a dispute described in Paragraph 2 is not resolved by the executive management of the Co-Owners and the Co-Owners have not otherwise resolved such dispute through mediation pursuant to Paragraph 3(a), a Co-Owner may submit the matter at issue for resolution in an action brought before the courts of the State of California in Kern County or in the United States District Court for the Eastern District of California, which courts shall have non-exclusive jurisdiction with respect to such matters.  FOR PURPOSES OF THE FOREGOING, BY EXECUTION OF THIS AGREEMENT, EACH CO-OWNER HEREBY IRREVOCABLY ACCEPTS FOR ITSELF AND IN RESPECT OF ITS PROPERTY, GENERALLY AND UNCONDITIONALLY, THE NON-EXCLUSIVE JURISDICTION OF SUCH COURTS AND EACH CO-OWNER HEREBY CONSENTS TO THE SERVICE OF PROCESS OUT OF ANY SUCH ACTION OR PROCEEDING BY THE MAILING OF COPIES THEREOF BY REGISTERED OR CERTIFIED MAIL, POSTAGE PREPAID, TO SUCH PERSON IN ACCORDANCE WITH THE NOTICE PROVISIONS OF THIS AGREEMENT.
      4.	Specific Performance.  Notwithstanding anything to the contrary contained in this Agreement, if, due to a material breach or threatened material breach or default or threatened default, a Co-Owner is suffering or will suffer irreparable harm for which monetary damages are inadequate, such Co-Owner may petition a court of competent jurisdiction for injunctive relief, specific performance or other equitable relief.
      5.	Continuing Obligations.  Notwithstanding the foregoing, all terms, conditions, and obligations of the Co-Owners contained in this Agreement shall continue and remain in effect during the course of any dispute resolution, or other proceeding pursuant hereto, and each of the Co-Owners shall proceed with performance of its obligations pending the resolution of the question, dispute or claim.
      6.	Matters Not Subject to Dispute Resolution.  Notwithstanding anything to the contrary in this Agreement, no dispute that concerns a matter, decision or other issue that is to be decided by a Co-Owner acting in its sole discretion shall be subject to the dispute resolution provisions of this Exhibit E.


EXHIBIT F
FORM OF JOINDER
TO
RISING TREE SHARED FACILITIES AGREEMENT
      Reference is hereby made to the Rising Tree  Shared Facilities Agreement dated June [__], 2010 by and among Rising Tree Wind Farm LLC, Rising Tree Wind Farm II LLC and Rising Tree Wind Farm III LLC ("SFA"). Unless otherwise indicated, capitalized terms used but not defined herein shall have the meaning ascribed to them in the SFA, as the context dictates.
      By its execution below, the undersigned, [insert name and form/jurisdiction of New Co-Owner] (the "New Co-Owner"), agrees to become, and does hereby become, a Co-Owner with respect to the [describe Project (or portion thereof) being added (the "New Project") under the SFA, and agrees to be bound by the SFA from and after the date hereof. Without limiting the foregoing, from and after the date hereof, all references in the SFA to the owner of the New Project shall be deemed to refer to New Co-Owner.
      By its execution below, New Co-Owner covenants, represents and warrants as follows:
      1.	New Co-Owner will expressly assume in writing all obligations as a Co-Owner under the SFA with respect to the New Project and its Ownership Interest and Undivided Use Interest (if applicable) to the extent of the New Project, in each case arising on or after the date hereof;
      2.	The aforementioned New Project is in accordance with Section 4.4 of the SFA; and
      3.	New Co-Owner will comply with all covenants and obligations contained in the SFA.
[signature page follows.]

SIGNATURE PAGE TO
JOINDER
TO
RISING TREE SHARED FACILITIES AGREEMENT

      IN WITNESS WHEREOF, the undersigned has executed and delivered this joinder to the SFA as of this _____ day of _________________, 20__.

[INSERT NAME OF NEW CO-OWNER]


	
By:
Name:
Title:

EXHIBIT G
FORM OF MEMORANDUM

RECORDING REQUESTED BY
AND WHEN RECORDED MAIL TO:

RISING TREE WIND FARM LLC
808 Travis, Suite 700
Houston, TX 77002
Attn: General Counsel
													
MEMORANDUM OF
SHARED FACILITIES AGREEMENT AND
GRANT OF RIGHTS
      THIS MEMORANDUM OF SHARED FACILITIES AGREEMENT AND GRANT OF RIGHTS (this "Memorandum"), is made and entered into as of December 3, 2014 (the "Execution Date"), by and among Rising Tree Wind Farm LLC ("Rising Tree I"), Rising Tree Wind Farm II LLC ("Rising Tree II"), and Rising Tree Wind Farm III LLC ("Rising Tree III"), each of which is a Delaware limited liability company.   Rising Tree I, Rising Tree II and Rising Tree III are sometimes referred to herein individually as a "Co-Owner" and collectively as "Co-Owners". The Co-Owners are collectively referred to herein as "Parties" and individually as a "Party".
A.	The Parties have entered into that certain unrecorded Rising Tree Shared Facilities Agreement of even date herewith (the "Agreement"), which affects (i) certain real property more particularly described in Exhibit A attached hereto and made a part hereof (such real property collectively, the "Property").
B.	The Parties have executed and acknowledged this Memorandum and are recording the same for the purpose of providing constructive notice of the Agreement and the Parties' rights thereunder.  Capitalized terms used and not defined herein have the meaning given the same in the Agreement.
NOW, THEREFORE, the Parties hereby agree as follows:
1.	Grant of Rights.  Subject to the terms and conditions of use set forth in the Agreement and the terms and conditions in each of the Shared Real Property Agreements:
      (a) each Co-Owner of Shared Facilities and/or Shared Real Property in a Shared Assets Group (a "Granting Co-Owner") hereby sells, grants, assigns, transfers and conveys to the other Co-Owners of Shared Facilities and/or Shared Real Property in such Shared Assets Group an undivided interest, as tenants-in-common, in such Shared Assets Group, including such rights, benefits and interests as the Granting Co-Owner may have in, to or under any deeds, conveyances, grants, easements, agreements, leases or other instruments or documents creating, granting, assigning or conveying the Granting Co-Owner its right, title and interest in such Shared Asset Group, such that each such Co-Owner shall own an undivided interest, as a tenant-in-common, in the applicable Shared Assets Group equal to its Proportionate Share in such Shared Assets Group as described in Exhibit B attached to the Agreement; 
      (b) each Co-Owner who has an Ownership Interest in a Shared Assets Group shall have an undivided right to the use or capacity of the Shared Assets in such Shared Asset Group equal to its Proportionate Share therein, which right is exercisable upon the Commissioning Date of its Facility, all as more particularly set forth in the Agreement.  In addition, each Co-Owner shall have a non-exclusive right of access (a) to the Shared Facilities in which it has an Undivided Use Interest as provided in the Agreement, and (b) over any Shared Real Property underlying or required for the use of the Shared Facilities in which such Co-Owner has an Undivided Use Interest, subject to the terms and conditions contained in the Agreement. 
2.	Term. This Agreement is effective as of the Effective Date and shall remain in force and effect until (i) the earliest of (v) the date that is thirty-five (35) years after the Effective Date, (w) the expiration date of the Interconnection Agreement,  (x) the date that all interests in the Shared Facilities and the Shared Real Property are owned by a single Person, (y) the retirement and final disposition of all components of the Shared Facilities and all Shared Real Property, and (z) the date that all Co-Owners and their Lenders unanimously agree to terminate this Agreement, or (ii) such other date (but no later than ninety-nine (99) years after the Effective Date) as may be unanimously agreed by all of the Co-Owners and their Lenders.
3.	Other Provisions. The rights granted hereunder are of the nature, and are subject to the requirements and limitations, set forth in the Agreement. The Agreement also contains various covenants, obligations and rights of the Parties, including, without limitation, provisions relating to use, conduct of operations, assignment, ownership of improvements, fees, default, cure rights and lender protections.
4.	Purpose of this Memorandum. The terms, conditions and covenants of the Agreement are incorporated herein by reference as though fully set forth herein. This Memorandum does not supersede, modify, amend or otherwise change the terms, conditions or covenants of the Agreement, and this Memorandum shall not be used in interpreting the terms, conditions or covenants of the Agreement. In the event of any conflict between this Memorandum and the Agreement, the Agreement shall control.
5.	Binding on Successors and Assigns.  The Parties hereby agree that all of the covenants, consents and agreements contained in the Agreement touch and concern the Property and are expressly intended to, and shall, be covenants running with the land and shall be binding and a burden upon said real estate and each Party's present or future estate or interest therein and upon each of the Parties, their respective successors and assigns as holders of an estate or interest in said real estate (including without limitation, any lender or other person acquiring title from any such person upon foreclosure or by deed in lieu of foreclosure), and shall benefit the Parties and their respective successors and assigns and the real estate and any present or future holder of an estate or interest therein.  To the extent any of the provisions of this Agreement are not enforceable as covenants running with the land, they shall be enforceable as equitable servitudes.
6.	Counterparts. This Memorandum may be executed in counterparts, each of which shall be deemed an original and all of which when taken together shall constitute one and the same document.
[SIGNATURES ON NEXT PAGE]
       
IN WITNESS WHEREOF, the Parties have caused this Memorandum to be executed as of the date first written above.
Rising Tree Wind Farm LLC


	
By:
Title:


	
By:
Title:

Rising Tree Wind Farm II LLC


	
By:
Title:


	
By:
Title:

Rising Tree Wind Farm III LLC
 __________________________________________
By:
Title:


	
By:
Title:
[Add notarial acknowledgments]

EXHIBIT A
DESCRIPTION OF THE PROPERTY


FIRST AMENDMENT TO
RISING TREE SHARED FACILITIES AGREEMENT
      THIS FIRST AMENDMENT TO RISING TREE SHARED FACILITIES AGREEMENT ("Amendment") is made and entered into this 29th day of June, 2015, by and among Rising Tree Wind Farm LLC ("Rising Tree I"), Rising Tree Wind Farm II LLC ("Rising Tree II"), and Rising Tree Wind Farm III LLC ("Rising Tree III"), each of which is a Delaware limited liability company.  The foregoing are sometimes referred to herein individually as a "Co-Owner" and collectively as "Co-Owners".
RECITALS
      A.	The Co-Owners have previously entered into that certain Rising Tree Shared Facilities Agreement dated December 3, 2014 (the "Agreement") with respect to the shared facilities and shared real property used in connection with each phase of a three phase wind powered electric generating facility generally known as the Rising Tree Wind Farm located on real property in Kern County, California (the "Rising Tree Wind Farm").  
      B.	A memorandum of the Agreement was recorded in the Official Records of Kern County, California on December 10, 2014, as Instrument No. 0214152759.
      C.	The Co-Owners now wish to amend the Agreement in certain respects to clarify the ownership and use of certain Shared Facilities and Shared Permits and to make other changes in and corrections to the Agreement.
      NOW, THEREFORE, for good and valuable consideration, the receipt of which is hereby acknowledged, the Co-Owners agree as follows:
      1.	Definitions.  Except as otherwise defined herein, capitalized terms used in this Amendment will have the meanings defined in the Agreement, and the rules of interpretation in the Agreement shall apply to this Amendment.
      2.	Shared Real Property.  Section 3.3 of the Agreement is amended by putting a comma after "collection and transmission lines" in the third to last line of that section and inserting the words "fiber optic cable and other communications facilities" immediately thereafter.
      3.	Shared Permits.  Section 3.6 of the Agreement is amended and restated in its entirety as follows:
      3.6	Shared Permits.  The construction, operation and use of certain of the Shared Facilities in each Shared Facilities Group, as well as the construction, operation and use of certain portions of each Co-Owner's Facilities, will be subject to certain shared Governmental Authorizations as set forth in parts A.3 and B.3 of Exhibit B (the "Shared Permits"), not all of which apply to the Shared Facilities.  The Shared Permits may be issued in the name of one or more of the Co-Owners, but shall, to the extent they apply to the Shared Facilities, and to the fullest extent allowed by Applicable Law, be held, used and exercised for the mutual benefit of the Co-Owners in the applicable Shared Assets Group and to facilitate the construction, use, operation, maintenance and repair of the Shared Facilities as provided herein.  The Shared Permits shall be administered in the same manner as the Shared Facilities as provided in Section 4.3.3, and, to the extent they do apply to the Shared Facilities, the Co-Owners in each Shared Asset Group shall indemnify and hold Rising Tree I and/or Operator, as applicable, harmless from and against any claims, demands, costs, obligations and liabilities by or to Governmental Authorities or other third parties as a result of the use of the Shared Permits relating to such Shared Asset Group, except to the extent resulting from the breach by Rising Tree I and/or Operator of its obligations under this Agreement, the Interconnection Agreement or the LGIA Co-Tenancy Agreement, as applicable, or gross negligence or willful misconduct of Rising Tree I and/or Operator, as applicable.  To the extent the Shared Permits do not apply to the Shared Facilities, but instead apply to the Facilities or other property separately owned by one or more of the Co-Owners, the Shared Permits shall be administered by Operator, but the Co-Owners shall take such actions as are required by the Operator or otherwise to ensure that each such Facility is operated in compliance with the requirements of such Shared Permit.  Regardless of whether or not the Shared Permits apply to Shared Facilities, Operator shall have access to all real property and real property rights, including Shared Real property and real property or real property rights owned, leased, held or otherwise controlled by any of the Co-Owners in order to administer and perform the requirements of the Shared Permits.  To the extent that events occurring at or with respect to a particular Facility constitute violations of a Shared Permit or require modifications to the Facilities owned by other Co-Owners or to the operations of such Facilities, each Co-Owner whose Facility is responsible for such violations or the requirement for such modifications shall indemnify and hold Operator and each other Co-Owner harmless from and against any claims, demands, costs, losses, obligations and liabilities, including costs imposed by or liabilities or obligations to Governmental Authorities or other third parties and lost revenues due to curtailment or other remedies ordered by a Governmental Authority, as a result of such events, including actions or omissions under, failure to comply with or violations of the Shared Permits by such Co-Owner, except to the extent resulting from the breach of obligations under this Agreement, the Interconnection Agreement or the LGIA Co-Tenancy Agreement by or gross negligence or willful misconduct of Operator or the Co-Owner seeking to be indemnified.  If the violations of the Shared Permits or the events requiring modification of Facilities are the responsibility of more than one Co-Owner, the foregoing indemnity obligations will be equitably apportioned among the responsible Co-Owners, considering all of the facts and circumstances relating to the violations or modifications in question.  The costs of administration of the Shared Permits in connection with any violations, claimed violations or required modifications shall be borne by the responsible Co-Owners and shall not be included in the O&amp;M Services provided hereunder.  For purposes of the foregoing indemnity obligation, and notwithstanding anything in Section 17.20 or elsewhere in this Agreement to the contrary, lost revenues (including lost production tax credits and other lost tax benefits and credits) shall be considered direct, not consequential, damages and shall be recoverable by the affected Co-Owner.  Notwithstanding the foregoing, each Co-Owner in the applicable Shared Asset Group to which a Shared Permit relates shall have the right, in the case of Emergency Condition or if necessary to prevent the termination or revocation of a Shared Permit, to step in and exercise rights, perform duties and obligations and take actions under such Shared Permit as may be necessary to avoid or mitigate such Emergency Condition or termination or revocation of a Shared Permit, and shall be entitled to the same indemnification as Rising Tree I or Operator would have been under the circumstances; provided, however, that any Co-Owner exercising such step-in rights shall also indemnify and hold the other Co-Owners in the applicable Shared Assets Group from and against any claims, demands, costs, obligations and liabilities by or to Governmental Authorities or other third parties as a result of its gross negligence or willful misconduct in the exercise of such step-in rights.
      4.	Undivided Use Interests.  Section 4.2 of the Agreement is amended and restated in its entirety as follows:
      4.2	Undivided Use Interests.  Each Co-Owner who has an Ownership Interest in a Shared Assets Group shall have an undivided right to the use or capacity of the Shared Assets in such Shared Asset Group (an "Undivided Use Interest"), which right shall be shared with the other Co-Owners in the Shared Assets Groups in accordance with their respective Proportionate Shares.  A Co-Owner's Undivided Use Interest is exercisable (a) with respect to Shared Assets constituting roads or, if applicable, the meteorological tower, as of the Execution Date, and (b) with respect to other Shared Assets, upon the Mechanical Completion Date of its Facility by such Co-Owner by providing written notice to Operator and to the other Co-Owners in the same Shared Assets Group that the Mechanical Completion Date has occurred, provided that such Co-Owner has made the payment or payments set forth in Section 4.3, and that no Event of Default has occurred and is continuing with respect to such Co-Owner.  For the avoidance of doubt, each Co-Owner whose Facility has not reached its Mechanical Completion Date as of the Effective Date (and thus whose Proportionate Share in all Shared Assets Groups is 0%) shall be deemed not to have exercised its Undivided Use Interest in any Shared Assets Group except with respect to roads or, if applicable, the meteorological tower (and as a result shall not be required to bear costs or expenses related to any Shared Assets Group except for road maintenance nor have the right to vote on matters unless otherwise set forth herein), but shall have the right to exercise its Undivided Use Interest as set forth in this Agreement.
      5.	Construction of Shared Facilities.  Section 4.3.1 of the Agreement is amended and restated in its entirety as follows:
      4.3.1	Subject to its right to reimbursement as set forth herein, Rising Tree I will design, permit and construct all of the Shared Facilities in accordance with Applicable Laws, Good Utility Practice and the description of the Shared Facilities on Exhibit B attached hereto.  Notwithstanding anything contained to the contrary in this Agreement, as of June 30, 2015, the date on which the initial portion of the payment by the other Co-Owners of reimbursement amounts due to Rising Tree I as provided in Section 4.3.2 shall occur, Rising Tree I will be deemed to have assigned, transferred and conveyed such Shared Facilities to the Co-Owners (including Rising Tree I) in the applicable Shared Asset Group in accordance with their respective Proportionate Shares, including rights under construction and supply contracts  (including the agreements set forth on Exhibit D) and contractor, supplier and/or manufacturer warranties related to such Shared Facilities, which warranties may be enforced as provided below.  HOWEVER, NOTWITHSTANDING ANYTHING HEREIN TO THE CONTRARY, RISING TREE I SHALL HAVE NO LIABILITY TO THE OTHER CO-OWNERS FOR ANY DEFECT IN THE DESIGN, CONSTRUCTION OR UTILITY OF ANY OF THE SHARED FACILITIES.  RISING TREE I MAKES NO REPRESENTATIONS OR WARRANTIES OF ANY KIND WITH RESPECT TO THE CONDITION, USE OR FITNESS OF ANY OF THE SHARED REAL PROPERTY OR WITH RESPECT TO THE DESIGN, CONSTRUCTION, OPERATION OR UTILITY OF ANY OF THE SHARED FACILITIES, AND HEREBY DISCLAIMS ANY WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE OR ANY OTHER WARRANTY OF ANY KIND WITH RESPECT TO THE SHARED REAL PROPERTY OR THE SHARED FACILITIES.  Each of the Co-Owners agrees that they will look solely to the designers, contractors, suppliers, manufacturers and other Persons who participated in the design and/or construction of the Shared Facilities with respect to any defects or breaches of contract or warranty.
      6.	Reimbursable Costs. Section 4.3.2 is amended and restated in its entirety as follows:
      	4.3.2  Rising Tree II and Rising Tree III shall each reimburse Rising Tree I for all costs and expenses incurred by Rising Tree I in designing, permitting and constructing the Shared Facilities in accordance with their respective Proportionate Shares of the costs of the Shared Facilities in each Shared Facilities Group of which they are members, in accordance with their Proportionate Shares in each such Shared Assets Group; provided, however, that for purposes of this Section 4.3.2, the Co-Owners' respective Proportionate Shares shall be determined on the basis of the nameplate capacities set forth in Recital B, regardless of whether or not a Facility has achieved its Commissioning Date. Such reimbursements shall be made within fifteen (15) days after receipt of one or more notices from Rising Tree I, which notices shall be accompanied by  a statement of the amount to be reimbursed (including appropriate supporting documentation). 7.	Additional Co-Owners.  Section 4.6 is amended and restated in its entirety as follows:
      4.6	No Additional Co-Owners.  Except as provided herein, including Section 17.4, no Person may become a Co-Owner under this Agreement or an additional co-owner of any of the Shared Facilities, the Shared Real Property or the Shared Real Property Agreements without the prior written consent of all of the Co-Owners.  Any Person becoming a Co-Owner under this Agreement (including an assignee under Section 17.4) shall execute a joinder, the form of which is attached as Exhibit F hereto and, except for an assignee pursuant to Section 17.4, such other amendments as the Co-Owners have determined may be necessary.
      8.	Measurement.  The first paragraph of Section 5.1 is amended and restated in its entirety as follows:
      5.1	Measurement.  Energy transmitted on the Transmission Line shall be measured for each Facility in each Settlement Interval by the revenue meter for such Facility.  However, if and for the period that there is an equipment failure or other event that prevents or interferes with the operation of the separate metering, energy transmitted on the Transmission Line shall be measured and allocated between the Facilities in each Settlement Interval in proportion to their respective Metered Energy as measured by the Facility's check meter or other available meter(s) during such Settlement Interval as set forth below.  In the event that no meter data is available, such allocation shall be made in a reasonable manner on the basis of whatever data and information is available.
      9.	Engagement of Operator.  Section 6.1 is amended and restated in its entirety as follows:
      6.1	Engagement of Operator.  The Co-Owners hereby engage Operator to manage, operate, maintain and repair the Shared Facilities, to administer and take all necessary actions under the Shared Real Property Agreements, to administer and take all necessary actions under the Shared Permits, and to perform other duties pertaining to the Shared Assets (the "O&amp;M Services"), all as set forth in this Agreement; provided, however, that to the extent one or more Permits do not apply to the Shared Facilities, but instead apply to the Facilities or other property separately owned by more than one of the Co-Owners, Operator will still administer and take all necessary actions under such separate Permits, but the administration of and actions taken under such separate Permits shall not be included in O&amp;M Services, but shall be paid for separately by the Co-Owners benefiting from such Shared Permits in proportion to their respective benefits.  Operator accepts such engagement and agrees to perform such duties in accordance with the terms and conditions hereof.  Operator's authority shall be limited to performing the O&amp;M Services and such other services as may be approved by all of the Co-Owners and shall be further limited as provided in Section 6.16.
      10.	Scheduled Maintenance.  Section 6.4 is amended and restated in its entirety as follows:
      6.4	Scheduled Maintenance.  Operator shall schedule maintenance and any planned outages of the Shared Facilities so as to minimize interference with the Co-Owners' scheduled energy deliveries.  Maintenance and any planned outages of the Shared Facilities shall be scheduled, to the maximum extent possible, during scheduled maintenance outages of the Co-Owners' Facilities.  Each Co-Owner will provide to the Operator and the other Co-Owners no later than fifteen (15) Business Days after January 1 of each year a schedule of planned maintenance outages on such Co-Owner's Facility for the subsequent twelve- month period.  Scheduled outages of the Shared Facilities will be subject to the approval of all affected Co-Owners, such approval not to be unreasonably withheld.  Operator will seek to limit the duration of any outage, planned or unplanned, to the maximum extent reasonably possible consistent with Applicable Laws and Good Utility Practice.
      11.	Disputes.  Section 6.12 is amended and restated in its entirety as follows:
      6.12	Disputes.  If a Co-Owner disputes the accuracy of all or any portion of an invoice, such Co-Owner shall, nevertheless, pay the full amount of the invoice (including the disputed portion) and submit to Operator a written statement detailing the items disputed; provided, however, that if the third party contract under which the costs and expenses invoiced were incurred permits the withholding of disputed payments, and if Operator has not already paid such third party for such costs and expenses, a Co-Owner may dispute the accuracy of all or a part of an invoice by submitting a written notice of dispute and a written statement detailing the items disputed and may withhold payment to the extent allowed under the third party contract until the earlier of the resolution of the dispute or the time when payment may no longer be withheld under the third party contract, at which point the Co-Owner disputing the accuracy of an invoice shall promptly pay the disputed amount to Operator as provided above.  If the Co-Owner and Operator are unable to resolve the disputed items, the matter will be resolved in accordance with the dispute resolution provisions in Exhibit E.  If the Co-Owner prevails with respect to the disputed amounts, Operator shall refund the Co-Owner the disputed amounts, including interest on the disputed amounts at the Late Payment Rate.
      12.	Risk of Loss; Indemnity. Section 6.15 is amended and restated in its entirety as follows:
	6.15.1  As between the Co-Owners and the Operator, the Co-Owners shall be responsible for the risk of loss to the Shared Facilities or any portion thereof during the repair, management, operation and maintenance of the Shared Facilities, regardless of cause, except to the extent such loss is caused in whole or in part by the gross negligence, fraud or willful misconduct of the Operator.
	6.15.2   Operator shall not be liable to any Co-Owner for any act performed in good faith by Operator in the discharge of its duties hereunder as Operator or in the exercise of its powers and authority hereunder as Operator, including damages arising out of any curtailment of use of the Shared Facilities or the disconnection of, or the election not to disconnect, a Facility from the Shared Facilities, unless Operator has materially breached its obligations hereunder or Operator's acts or omissions constitute, gross negligence fraud or willful misconduct.
	6.15.3  Each Co-Owner shall, pro rata in accordance with its Proportionate Interest, indemnify and hold harmless Operator and its employees and agents, from any claim, loss, liability or damage incurred by reason of any act performed or omitted to be performed by it in its reasonable judgment, in good faith, or in reasonable reliance on advice of Operator's attorneys or accountants, in connection with the Shared Facilities, the Shared Real Property or this Agreement (other than as a result of the gross negligence, fraud or willful misconduct of Operator or a breach by Operator of its obligations under this Agreement, the Interconnection Agreement or the LGIA Co-Tenancy Agreement), including reasonable attorneys' fees incurred by Operator in connection with the defense of any action based on any such alleged act or.
      13.	Limitations on Operator's Authority.  Section 6.16 is amended and restated in its entirety as follows:
      6.16	Limitations on Operator's Authority.  Notwithstanding anything herein to the contrary and in addition to the limitations set forth in Section 9.2, Operator shall have no authority to and shall not (i) amend, assign or terminate any Material Project Agreement or enter into, amend, assign or terminate any other contract or agreement on behalf of the Co-Owners, (ii) create any lien or security interest on or in any Shared Facilities, Shared Real Property or any other asset of any or all of the Co-Owners, except as expressly permitted under Section 10.6, (iii) buy, sell, convey or otherwise dispose of any Shared Facilities or Shared Real Property, (iv) incur any debt or other obligations on behalf of any or all of the Co-Owners, except short term accounts payable in connection with the O&amp;M Services or as provided in a separate written agreement among Operator and all of the Co-Owners, (v) enter into leases or subleases of or grant licenses or other rights with respect to any Shared Facilities or Shared Real Estate, or (vi) terminate or reduce any insurance coverage below that which is required under the Material Project Agreements, except in each case with the written approval of all of the Co-Owners.
      14.	Replacement of Operator.	Section 6.17 is amended and restated in its entirety as follows:
      6.17	Replacement of Operator. Operator may be removed upon the vote, without the participation of the Co-Owner that is Operator at such time, of (i) two-thirds of the Co-Owners (based on their respective Proportionate Shares) or (ii) a majority of the Co-Owners (based on their respective Proportionate Shares), upon their reasonable determination that there is Cause for removal. Notwithstanding anything contained in this Agreement to the contrary, the appointment of any new Operator under this Agreement, whether as a result of any removal of the existing Operator under this Section 6.17 or otherwise (including as a result of a transfer or assignment under Section 17.4) must be approved by a majority vote of the Co-Owners (without the participation, for the avoidance of doubt, of any Co-Owner which is being removed as the Operator under this Section 6.17).
      15.	Condemnation Awards.  Section 9.6 is amended and restated in its entirety as follows:
      9.6	Condemnation Awards.  Any condemnation or similar awards to which the Co-Owners shall become entitled under the Shared Real Property Agreements or with respect to the Shared Facilities shall be used to repair, restore or replace the affected Shared Real Property and/or Shared Facilities unless such repair, restoration or replacement is not feasible, the condemnation or other award is insufficient to complete such repair, restoration or replacement, or all of the Co-Owners agree otherwise in writing.  If such condemnation or other awards are not used to repair, restore or replace the affected Shared Real Property and/or Shared Facilities, they shall be divided among the Co-Owners in proportion to their respective Ownership Interests in the affected Shared Real Property and/or Shared Facilities, provided that if such sums are in reimbursement of or compensation for specific costs or damages incurred by the Co-Owners in ratios different from that of their Ownership Interests, then such different ratios shall be used in apportionment of such sums among the Co-Owners.  If the Co-Owners are unable to agree on whether or not a repair, restoration or replacement is feasible, the condemnation or other award shall be divided among and distributed to the Co-Owners as provided in the preceding sentence, and a Co-Owner wishing to do so may repair, restore or replace the affected Shared Real Property and/or Shared Facilities for its own account and use, but at its own expense, and no other Co-Owner shall have the right to use such repaired, restored or replaced property or facilities unless and until it has reimbursed the Co-Owner that effected the repair, restoration or replacement for the other Co-Owner's Proportionate Share of the costs of such repair, restoration or replacement.  Any property or facilities whose repair, restoration or replacement is paid for by less than all of the Co-Owners shall not become Shared Real Property and/or Shared Facilities, as applicable, under this Agreement unless and until such costs have been paid (including reimbursements) by all Co-Owners in accordance with their respective Proportionate Shares.
      16.	Default by Operator. Section 13.1.4 is amended and restated in its entirety as follows:
      13.1.4 Default by Operator. Operator fails to perform any of its material operation, maintenance, repair or other obligations in this Agreement, the Interconnection Agreement or the LGIA Co-Tenancy Agreement, and such failure is not cured within ten (10) days following written notice by a Co-Owner; provided that, that if such failure by Operator creates an Emergency Condition or materially interferes with a Co-Owner's Undivided Use Interest in Shared Facilities in which it has an Ownership Interest, or operation of its Facility, only such advance written notice, if any, as may be reasonably practicable under the circumstances shall be required, but if such advance notice is not provided, written notice thereof shall be provided promptly thereafter by the Co-Owner to Operator; provided further that if the default is not reasonably capable of being cured within ten (10) days, then the Operator may be allowed such longer period as the Co-Owners mutually agree (not to exceed sixty (60) days) as may be reasonably necessary under the circumstances to cure such failure so long as the Operator is pursuing a cure with reasonable diligence.
      17.	The first sentence of Section 13.2.3 is amended and restated in its entirety as follows:
      	In addition to the remedies provided in Section 13.2.1 and 13.2.2, if the defaulting Co-Owner is the Operator, the other Co-Owners (the "Non-Defaulting Co-Owners") shall have the right, by a majority vote of the Non-Defaulting Co-Owners (based on their respective Proportionate Shares), to remove the defaulting Co-Owner from its position as Operator and to appoint one of themselves as the Operator for purposes of this Agreement. 
      18.	Assignment. Section 17.4 is amended and restated in its entirety as follows:
      	17.4 Assignment. This Agreement will be binding on and inure to the benefit of the Co-Owners and their respective successors and permitted assigns. All transfers, conveyances, assignments of Shared Facilities or Shared Real property will be subject to the terms and conditions of this Agreement, whether or not explicitly stated. Each Co-Owner may, at any time and from time to time, upon notice but without the other Co-Owners' consent or approval, (i) subject to compliance with Section 9.7, transfer or assign this Agreement and the rights and obligations under this Agreement to a Person that acquires all or substantially all of such Co-Owner's assets, including such Co-Owner's Shared Assets, and agrees to assume all obligations of that Co-Owner under this Agreement (a "Permitted Assignee"); and/or (ii) create Lender's Liens pursuant to Article XIV, provided, that, for the avoidance of doubt, any such assignment shall in all events be subject to compliance with Section 6.17 and no assignee that assumes any Co-Owner's (including any Co-Owner that is currently Operator) interest in this Agreement shall become Operator, except in compliance with Section 6.17. Otherwise, no Co-Owner shall transfer or assign all or any part of its right, title and interest in or to this Agreement or any of its rights hereunder without the prior consent of all of the other Co-Owners; provided, further, that if FERC approval is required for any such assignment or transfer, it shall not be effective unless and until FERC approval has been obtained. For purposes of this Agreement, a Change of Control of a Co-Owner shall be considered an assignment by such Co-Owner of its rights and interests under this Agreement and shall be subject to the requirements hereunder with respect to assignments. Any Permitted Assignee shall assume all of the obligations of the assigning Co-Owner hereunder and shall execute any documents which may reasonably be required by the other Co-Owners, or by Lenders, including but not limited to any document in connection with a governmental permit, approval, authorization, entitlement or other consent. Under no circumstances shall any Lender or Permitted Assignee have any greater rights of ownership or use of the Shared Assets than the rights granted to the Co-Owners in this Agreement. Any assignment permitted under this Agreement shall release the assigning Co-Owner from obligations accruing after the date that liability is assumed by a transferee, but the assigning Co-Owner shall continue to be liable to the other Co-Owners for all performance due by the assigning Co-Owner for matters that have accrued and are unsatisfied as of the date of the assignment. Any purported assignment in contravention of this Section 17.3 will be void.
      19.	Notices. Section 17.17 is amended by adding the following notice information to the existing addresses set forth for Rising Tree III:
      	with further copies to:
      
JPM Capital Corporation
10 South Dearborn, 12th Floor
Mail Code ILI 0502
Chicago, Illinois 60603-2003
Attention:  President
Telephone:  (312) 732-3416
            Email:  jpmcc.energy@jpmorgan.com and joel.spenadel@jpmorgan.com
            
Bankers Commercial Corporation 
445 South Figueroa Street, G14-200
Los Angeles, CA 90071
Attention:  2015 Vento XIII Account Officer

      20.	Amended Memorandum.  Each Co-Owner agrees to sign and acknowledge an Amended Memorandum of Rising Tree Shared Facilities Agreement ("Amended Memorandum") in the form attached to this Amendment as Exhibit E.  After it has been sighned and acknowledged by all of the Co-owners, Operator shall record the Amended Memorandum promptly in the Office of the County Recorder of Kern County, California at the expense of the Co-Owners.
      21.	Minor Additional Amendments.  The following sections are hereby amended as follows:
      (a)	Section 5.3 is hereby amended by deleting the brackets in Sections 5.3.1 and 5.3.2 and by deleting footnote 1 in Section 5.3.1.
      (b)	Section 6.10 is amended by changing "Section 17.15" to "Section 17.17" in the thirteenth (13th) line of that section.
      (c)	Section 6.13 is amended by changing "Due Date" to "due date" in the sixth (6th) line of that section.
      (d)	Section 9.1 is amended by replacing "Section 9.8" in the first line of the section with "Sections 6.16, 9.2 and 9.8".
      (e)	Section 9.2 is amended by adding the phrase "In addition to the limitations set forth in Section 6.16," at the beginning of that section.
      (f)	Section 14.1 is amended by replacing the phrase "any party providing debt or equity financing or refinancing" in the fourth (4th) line of that section with the phrase "any party providing debt, tax equity or other equity financing or refinancing".
      (g)	Section 17.3 is amended by replacing the reference to "Section 17.3" in the first line of the section with "Section 17.4".
      22.	Amendments to Definitions.
      (a)	The following definitions in Exhibit A to the Agreement are amended and restated in their entireties as follows:
      Material Project Agreements means the Interconnection Agreement, this Agreement, the LGIA Co-Tenancy Agreement, the Shared Real Property Agreements, purchase or warranty agreements relating to Shared Facilities, and such other agreements to be included upon the mutual agreement of the Co-Owners, including those on Exhibit D.
      Metered Energy means the amount of electric energy measured at a given point.
      Operator means the Co-Owner or other Person engaged by the Co-Owners to manage, operate, maintain and repair the Shared Facilities and to perform other duties pertaining to the Shared Assets as set forth in the Agreement.  If the Operator is a Co-Owner, references to "Operator" shall mean the Co-Owner acting only in its capacity as Operator and not in any other capacity.  The Operator shall initially be Rising Tree I or an Affiliate designated by it, subject to replacement pursuant to Sections 6.17 and 13.2.2. 
      (b)	The following definitions are added to Exhibit A to the Agreement in the appropriate alphabetical order:
      Cause means with respect the Operator, acting in the capacity as such, fraud, willful misappropriation of funds, gross negligence, or willful misconduct or a willful violation of a material provision of this Agreement, the Interconnection Agreement or the LGIA Co-Tenancy Agreement applicable to the Operator, solely in that capacity.
      Mechanical Completion Date means the date that the first wind turbine of the Facility or Additional Phase in question is mechanically complete and ready to energized, commissioned and tested.
      23.	Amendments to Exhibits.
      a.	Exhibit A to the Agreement is amended by deleting the definition of "Fiber Optic Facilities".
      b.	Exhibit B to the Agreement is amended in the following respects:
      (i)	Section A.1 of Exhibit B is amended and restated in its entirety as set forth in Section 1 of Exhibit B attached hereto.
      (ii)	The heading to Section A.2.c of Exhibit B is amended and restated in its entirety to be "Collection and Distribution Lines (including fiber optic cable and other communications facilities)".
      (iii)	Tract 21 as set forth in Section 2.a of Exhibit B attached hereto shall be added to the end of Section A.2.c of Exhibit B.
      (iv) 	The legal description of Tract 7 in Section A.2.f of Exhibit B is amended and restated in its entirety as set forth in Section 3.a of Exhibit B attached hereto, and certain parcels of real property are added to Section A.2.f of Exhibit as provided in Section 3.c of Exhibit B attached hereto. The name of Tract Number 25 in Section A.2.f of Exhibit B is amended to be Tract Number 20.
      (v)	Sections A.2.j and A.2.k as set forth in Section 2 of Exhibit B attached hereto are added to Exhibit B to the Agreement after Section A.2.i and before Section A.3.
      (vi)	Section A.3.k of Exhibit B is amended and restated in its entirety as follows: "k.  Kern County Ordinance No. F589 granting Rising Tree Wind Farm LLC a franchise to construct, install, maintain, operate, repair, renew and remove underground fiber optic cable dated November 4, 2014, as partially assigned to Rising Tree Wind Farm II LLC and Rising Tree Wind Farm III LLC on March 17, 2015."
      (vii)	Section A.4.a of Exhibit B is amended and restated in its entirety as set forth in Section 4 of Exhibit B attached hereto
      (viii)	Section B.1.b of Exhibit B is amended and restated in its entirety as follows: "b.  Meteorological Tower, including instrumentation, power loop and fiber optic cable and associated splice boxes, junction boxes and terminations from the Control Building (described on Exhibit B-1) to the tower."
      (ix)	The heading to Section B.2.a of Exhibit B is amended and restated in its entirety to be "Collection and Distribution Lines (including fiber optic cable and other communications facilities)".
      c.	Exhibit B-1 to the Agreement is amended and restated in its entirety as set forth on Exhibit B-1 attached hereto.
      d.	Exhibit B-2 to the Agreement is amended and restated in its entirety as set forth on Exhibit B-2 attached hereto.
      e.	Exhibit C to the Agreement is amended and restated in its entirety as set forth on Exhibit C attached hereto.
      f.	Exhibit D to the Agreement is amended and restated in its entirety as set forth on Exhibit D attached hereto.
      24.	No Other Amendment.  Except as expressly set forth in this Amendment, the Agreement is unmodified and continues in full force and effect.  From and after the date hereof, references to the Agreement will be understood to refer to the Agreement as amended by this Amendment.
      25.	Governing Law. This Amendment shall be governed by, construed and enforced in accordance with the laws of the State of California, without regard to principles of conflict of laws.
      26.	Counterparts. This Amendment may be executed in one or more counterparts, each of which will be an original but all of which, taken together, will constitute only one legal instrument. It will not be necessary in making proof of this Amendment to produce or account for more than one counterpart.
      
[The next page is the signature page.]
      To evidence its acceptance of this Amendment, and intending to be legally bound, each Co-Owner has caused its authorized representative to sign below as of the date first written above.
Rising Tree Wind Farm LLC


	
By:
Title:


	
By:
Title:

Rising Tree Wind Farm II LLC


	
By:
Title:


	
By:
Title:

Rising Tree Wind Farm III LLC


	
By:
Title:


	
By:
Title:


EXHIBIT B
AMENDMENTS TO EXHIBIT B TO THE AGREEMENT
1.	Amended and restated Section A.1:
1.	Shared Facilities
a.	Project Substation:  See Exhibit B-1 attached hereto.
b.	Transmission Line:  See Exhibit B-2 attached hereto.
c.	Supervisory Control and Data Acquisition (SCADA) System, as further described on Exhibit B-2 attached hereto, excluding feeder relays, breakers and collection system fiber optic cables for the individual wind turbine generators
d.	Roads
e.	O&amp;M Building
f.	Condor Detection Tower
g.	Meteorological Tower, including instrumentation, power loop and fiber optic cable and associated splice boxes, junction boxes and terminations from the Control Building (described on Exhibit B-1) to the tower
h.	Environmental Mitigation Parcels
2.	Addition to Section A.2.c;
a.	The following parcels are added to Section A.2.c:
Tract 21
The Southwest quarter of the Southwest quarter of Section 15, Township 11 North, Range 13 West, San Bernardino Meridian, in the County of Kern, State of California, according to the official plat of the survey of said land, approved by the Surveyor General October 7, 1936.
Except one half of all oil, gas and minerals and hydrocarbon substances in and under said land as reserved by the M &amp; R Sheep Co. in deed dated August 4, 1955, recorded in Book 2519, Page 298 of Official Records.
APN:  237-185-07
3.	Amended and restated description in Section A.2.f;
a.	The description of Tract 7 is amended and restated in its entirety as follows:
   Tract 7
The East half of the Northeast quarter of the Southwest quarter of the Southeast quarter of Section 2, Township 11 North, Range 13 West, San Bernardino Base &amp; Meridian, in the unincorporated area of the County of Kern, State of California, according to the official plat thereof.
APN:  237-132-20
b.	The name of Tract Number 25 is amended to be Tract Number 20.
c.	The following parcels are added to Section A.2.f:
Tract 21
That portion of the west half of the southeast quarter of the southeast quarter of the southeast quarter of Section 2, Township 11 North, Range 13 West, S.B.B.M., in the unincorporated area, County of Kern, State of California, as per the Official Plat thereof on file in the Office of the Surveyor General, described as follows:
Starting at the northwest corner of the west half of the southeast quarter of the southeast quarter of the southeast quarter of said Section 2; thence in a southerly direction, 132 feet to the point of beginning; thence easterly 330 feet; thence Southerly 132 feet; thence westerly 330 feet; thence northerly 132 feet to the point of beginning.
Excepting therefrom all oil, gas and other mineral deposits in the land so patented, together with the right to prospect for, mine and remove the same, according to the provisions of said Act of June 1, 1938 as reserved by the United States of America, in Patent recorded February 24, 1960 in Book 3242, Page 151 of Official Records.
APN 237-132-28
3.	New Sections A.2.j and A.2.k:
j.	Meteorological Tower (RST-3A)
Tract 1
The West half of the Northwest quarter of Section 11, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the official plat thereof.
Excepting therefrom one-half of all oil, gas, minerals and other hydrocarbon substances and natural gas, under and in said land as reserved by M&amp;R Sheep Co., in Deed recorded November 22, 1955 in Book 2519, Page 283, of Official Records.
APN:  237-284-01
k.	Environmental Mitigation Parcels
 Tract 1
The northwest quarter of the southwest quarter of Section 11, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the Official Plat thereof.
Except therefrom 1/2 of all oil, gas and minerals and hydrocarbon substances, in and under said land, as excepted in deed dated August 4, 1955 from M &amp; R Sheep Co., to C.M. Turley, recorded November 22, 1955 in Book 2519, Page 283 of Official Records; which further provides as follows:
The right to conduct drilling or other operations upon the surface of said lands last described or any portion thereof, without first having secured the written consent of the second parties, their heirs and assigns, or the owner or owners of such portions of the surface as may be used for a drilling site or surface operations, but nothing herein contained shall be deemed to prevent the grantor, its successors and assigns, from extracting or capturing said oil, gas or other hydrocarbon substances or minerals by drilling on adjacent or neighboring lands and/or from conducting subsurface drilling or other operations under said lands last above described at such depths as not to disturb the surface thereof or any improvements thereon, was waived by the grantors in said deed.
APN:  237-286-01
Tract 2
The west 1/2 of the southwest 1/4 of the northeast 1/4 of the southeast 1/4 of Section 10, Township 11 North, Range 13 West, San Bernardino Meridian, in the unincorporated area, County of Kern, State of California, according to the Official Plat thereof.
Excepting therefrom all oil, gas and other mineral deposits, in said land, together with the right to prospect for, mine and remove same, according to the provisions of said Act of June 1, 1938, as excepted and reserved by the United States of America in the patent recorded September 13, 1960 in Book 3302, Page 499 of Official Records.
APN:  237-152-12



4.	Amended and restated Section A.4.a:
a.	O&amp;M Building:  Rights of Lone Valley Solar Park I LLC and Lone Valley Solar Park II LLC (collectively, the "Sublessees") under that certain Sublease Agreement dated February 6, 2015 by and between the Co-Owners, as sublessors, and the Sublessees, as sublessees.  


EXHIBIT B-1
PROJECT SUBSTATION SHARED FACILITIES
* One (1) 230kV Dead End Structure including the following equipment and material:
o Tapered Tubular Structural Steel and associated hardware
o Structure and equipment grounding conductor and associated hardware
o Three (3) Lightning Surge Arrestors, 180kV, 144kV MCOV
o Three (3) Compression Tees, 795 ACSR to NEMA 4-Hole Pad
o Thirty (30) Feet of 1272 kcmil AAC (Narcissus) conductor
o Six (6) Welded Terminal Adaptors, 1272 kcmil AAC to NEMA 4-Hole Pad
o Three (3) Station Post Insulators, 230kV, TR-308
o Three (3) Cable Supports, 2-1272 AAC conductors to 5" Bolt Circle
o Five Hundred (500) Feet of 1272 kcmil AAC (Narcissus) conductor
o As Needed Cable Spacers 2-1272 AAC conductors, 4" separation

* Three (3) 230kV Single Phase Bus Supports, including the following equipment and material:
o Structural Steel and Associated hardware
o Structure and equipment grounding conductor and associated hardware
o Three (3) Station Post Insulators, 230kV, TR-308
o Three (3) Cable Supports, 2-1272 AAC conductors to 5" Bolt Circle

* One (1) 230kV, 1200A, Ganged 3-Phase, Motor Operated Disconnect Switch including the following equipment and material:
o Structural Steel and Associated hardware
o Structure and equipment grounding conductor, associated hardware, and switch grounding platform
o Six (6) Station Post Insulators, 230kV, TR-308
o Six (6) Welded Terminal Adaptors, 2-1272 kcmil AAC to NEMA 4-Hole Pad
o Sixty (60) Feet of 1272 kcmil AAC (Narcissus) conductor
o As Needed Cable Spacers 2-1272 AAC conductors, 4" separation

* One (1) 230kV, Metering Station, including the following equipment and material:
o Structural Steel and Associated hardware
o Structure and equipment grounding conductor and associated hardware
o Equipment control wiring and interconnecting conduit including Junction Boxes
o Three (3) 230kV, 600:5 Single Ratio Dual Winding, Instrument Current Transformers
o Three (3) 230kV, 1200/2000:1:1 Dual Winding, Instrument Potential Transformers
o Six (6) Welded Terminal Adaptors, 2-1272 kcmil AAC to NEMA 4-Hole Pad
o Three (3) Cable Spacer Tees, 2-1272 kcmil AAC to NEMA 4-Hole Pad
o Three (3) Aluminum Cable Support Brackets
o Thirty (30) Feet of 1272 kcmil AAC (Narcissus) conductor

* 230kV Substation Summation Bus including the following equipment and material:
o One (1) 230kV, Three Phase Low Bus Support, which includes:
* Structural Steel and Associated hardware
* Structure grounding conductor and associated hardware
* Three (3) Station Post Insulators, 230kV, TR-308
* Three (3) Bus Supports, 4" IPS Aluminum Bus to 5" Bolt Circle
* Three (3) Welded Terminal Adaptors, 2-1272 kcmil AAC to NEMA 4-Hole Pad
* Thirty (30) Feet of 1272 kcmil AAC (Narcissus) conductor
o Thirteen (13) 230kV, Single Phase Low Bus Supports, which includes:
* Structural Steel and Associated hardware
* Structure grounding conductor and associated hardware
* Thirteen (13) Station Post Insulators, 230kV, TR-308
* Thirteen (13) Bus Supports, 4" IPS Aluminum Bus to 5" Bolt Circle
o Six (6) 230kV, Single Phase High Bus Supports, which includes:
* Structural Steel and Associated hardware
* Structure grounding conductor and associated hardware
* Six (6) Station Post Insulators, 230kV, TR-308
* Six (6) Bus Supports, 4" IPS Aluminum Bus to 5" Bolt Circle
o Four (4) 230kV, Three Phase High Bus Support, which includes:
* Structural Steel and Associated hardware
* Structure grounding conductor and associated hardware
* Twelve (12) Station Post Insulators, 230kV, TR-308
* Twelve (12) Bus Supports, 4" IPS Aluminum Bus to 5" Bolt Circle
o Three (3) 230kV, Three Phase Low Bus Support, which includes:
* Structural Steel and Associated hardware
* Structure grounding conductor and associated hardware
* Nine (9) Station Post Insulators, 230kV, TR-308
* Nine (9) Bus Supports, 4" IPS Aluminum Bus to 5" Bolt Circle
* Nine (9) Welded Terminal Adaptors, 2-1272 kcmil AAC to NEMA 4-Hole Pad
* Ninety (90) Feet of 1272 kcmil AAC (Narcissus) conductor
o Nine (9) 230kV, Aluminum A-Frames, which includes:
* Eighteen (18) Tee Connector, 4" IPS Main to 3" IPS Tap, 15
* Nine (9) Tee Connector, 4" IPS Main to 2-3" IPS Taps, 15
* Two Hundred Ten (210) Feet of 3" IPS Aluminum Bus, 6063-T6
o Eight Hundred Fifty (850) Feet of 4" IPS Aluminum Bus, 6063-T6
o Eight Hundred Fifty (850) Feet of 795 kcmil ACSR (Drake) Conductor

* Above and Below Ground Raceways including the following materials
o Conduits, fittings, and connectors connecting shared facility equipment or apparatus to other Substation components located within the Substation
o Cable Trench, Trench Covers, Trench Hangers, and Trench Grounding Materials

* Substation Ground Grid including the following materials
o Twenty Three Thousand (23,000) Feet of #4/0 kcmil 19 Strand, Bare Copper 
o Exothermic Cross connections ~ including molds, shots, and accessories
o Exothermic Tee connections ~ including molds, shots, and accessories
o Exothermic Lug connections ~ including molds, shots, and accessories
* Substation Lighting and Lightning Protection including the following materials
o Eight (8) Static Masts, 90' Tall with provision for yard lighting
o Fifteen (15) 400W, HPS Flood Lights

* Substation Fencing including the following materials
o Fifteen Hundred (1500) Feet of fence, 8' tall, 7' mesh with three strands of barbed wire
o Fence posts, gates, hangers, and grounding materials

* Control Building and all equipment and fixtures located therein except feeder relays, breakers and collection system fiber optic cables for the individual wind turbine generators


EXHIBIT B-2
TRANSMISSION LINE SHARED FACILITIES
3.99-mile 220kV generation tie-line, optical ground wire on the generation tie-line for the primary telecommunications path, including one or more single-mode fiber optic cables for the diverse telecommunications path and SCADA System, appurtenant structures, and facilities, including the following:
* Forty Two (42) transmission structures including the following materials:
o Forty Two (42) tubular steel poles
o One Hundred Twenty (120) 230kV 30K Insulators
o One Hundred Twenty (120) Suspension Hardware Assemblies for 795 KCMIL ACSR "Drake"
o Forty (40) 230kV 50K Insulators
o Forty (40) Dead End Hardware Assemblies for 795 KCMIL ACSR "Drake"
o Forty Five (45) OPGW Hardware Assemblies
o Four (4) Dead End Hardware Assemblies for 3/8" Shield Wire
o Structure grounding rods and associated hardware
o Structure signage
* Seventy Thousand Two Hundred (70,200) Feet of 795 KCMIL ACSR "Drake" Conductor
* Twenty Three Thousand (23,000) Feet of 48 Fiber, Single Mode OPGW, DNO 6211
* Three (3) OPGW "Coyote" Splices including splice case, splices and mounting hardware. 
* One Thousand Four Hundred and Fifty (1,450) Bird Flight Diverters
* Two Hundred (200) Feet of 3/8" HS 7-Strand Shield Wire
* Twenty Five Thousand Five Hundred (25,500) Feet of ADSS Fiber Optic Cable
* Twenty Two Thousand (22,000) Feet of 1 1/4" inner duct
* Splice box/pull box, including splices, for cable to AT&amp;T
* Carbon fiber junction (CFJ) pedestal
* Fifty (50) feet of 2" Schedule 40 PVC conduit to/from CFJ pedestal to house both fiber optic cable and copper conductors


EXHIBIT C
INTERESTS AND PROPORTIONATE SHARES
A.	Undivided Ownership Interests
      The Ownership Interest of each Co-Owner in each Shared Assets Group shall be as set forth in Table C below.  
B.	Proportionate Shares
      The Proportionate Share of each Co-Owner shall be as set forth in Table C below. 
C.	Shared Asset Groups
RST Shared Facilities Group (All Co-Owners)
Equipment Name
RST I
RST II
RST III
Project Substation
40%
10%
50%
Transmission Line
40%
10%
50%
Roads in Sections 9, 10, 11, 15 and 16
40%
10%
50%
O&amp;M Facility
40%
10%
50%
Environmental Mitigation Parcels
70%
15%
15%
All other Shared Facilities
40%
10%
50%

RST I/II Shared Facilities Group (Rising Tree I and Rising Tree II only)
Equipment Name
RST I
RST II



Roads in Sections 1, 2, 35 and 36
80%
20%
Met Tower RST 1-B/RST 2
80%
20%

EXHIBIT D
MATERIAL PROJECT AGREEMENTS
High Voltage Engineering, Procurement and Construction Contract by and between Blattner Energy Inc., a Minnesota corporation and Rising Tree I, dated as of February 3, 2015.
Operations and Maintenance Facility Engineering, Procurement and Construction Contract, dated as of January 22, 2015, between Rising Tree I, and Wattenbarger Wells Construction, Inc. DBA WWCI, a California corporation

EXHIBIT E
FORM OF AMENDED MEMORANDUM

RECORDING REQUESTED BY
AND WHEN RECORDED MAIL TO:

RISING TREE WIND FARM LLC
808 Travis, Suite 700
Houston, TX 77002
Attn: General Counsel
													

AMENDED MEMORANDUM OF
SHARED FACILITIES AGREEMENT AND
GRANT OF RIGHTS
      THIS AMENDED MEMORANDUM OF SHARED FACILITIES AGREEMENT AND GRANT OF RIGHTS (this "Memorandum"), is made and entered into as of June 29, 2015 (the "Execution Date"), by and among Rising Tree Wind Farm LLC ("Rising Tree I"), Rising Tree Wind Farm II LLC ("Rising Tree II"), and Rising Tree Wind Farm III LLC ("Rising Tree III"), each of which is a Delaware limited liability company.   Rising Tree I, Rising Tree II and Rising Tree III are sometimes referred to herein individually as a "Co-Owner" and collectively as "Co-Owners". The Co-Owners are collectively referred to herein as "Parties" and individually as a "Party".
      A.	The Parties have entered into that certain unrecorded Rising Tree Shared Facilities Agreement dated December 3, 2014 (the "Agreement"), which affects (i) certain real property more particularly described in Exhibit A attached hereto and made a part hereof (such real property collectively, the "Property").  A memorandum of the Agreement was recorded in the Official Records of Kern County, California on December 10, 2014, as Instrument No. 0214152759.
      B.	The Parties have entered into a First Amendment to Rising Tree Shared Facilities Agreement of even date herewith (the "Amendment").  References herein to the Agreement mean the Agreement as amended by the First Amendment, unless the context requires otherwise.
      C.	The Parties have executed and acknowledged this Amended Memorandum and are recording the same for the purpose of providing constructive notice of the Agreement, as amended, and the Parties' rights thereunder.  Capitalized terms used and not defined herein have the meaning given the same in the Agreement.
NOW, THEREFORE, the Parties hereby agree as follows:
      1.	Grant of Rights.  Subject to the terms and conditions of use set forth in the Agreement and the terms and conditions in each of the Shared Real Property Agreements:
      (c) each Co-Owner of Shared Facilities and/or Shared Real Property in a Shared Assets Group (a "Granting Co-Owner") hereby sells, grants, assigns, transfers and conveys to the other Co-Owners of Shared Facilities and/or Shared Real Property in such Shared Assets Group an undivided interest, as tenants-in-common, in such Shared Assets Group, including such rights, benefits and interests as the Granting Co-Owner may have in, to or under any deeds, conveyances, grants, easements, agreements, leases or other instruments or documents creating, granting, assigning or conveying the Granting Co-Owner its right, title and interest in such Shared Asset Group, such that each such Co-Owner shall own an undivided interest, as a tenant-in-common, in the applicable Shared Assets Group equal to its Proportionate Share in such Shared Assets Group as described in Exhibit B attached to the Agreement; 
      (d) each Co-Owner who has an Ownership Interest in a Shared Assets Group shall have an undivided right to the use or capacity of the Shared Assets in such Shared Asset Group equal to its Proportionate Share therein, which right is exercisable upon the Commissioning Date of its Facility, all as more particularly set forth in the Agreement.  In addition, each Co-Owner shall have a non-exclusive right of access (a) to the Shared Facilities in which it has an Undivided Use Interest as provided in the Agreement, and (b) over any Shared Real Property underlying or required for the use of the Shared Facilities in which such Co-Owner has an Undivided Use Interest, subject to the terms and conditions contained in the Agreement. 
      2.	Term. This Agreement is effective as of December 3, 2014 and shall remain in force and effect until (i) the earliest of (v) December 3, 2049, (w) the expiration date of the Interconnection Agreement,  (x) the date that all interests in the Shared Facilities and the Shared Real Property are owned by a single Person, (y) the retirement and final disposition of all components of the Shared Facilities and all Shared Real Property, and (z) the date that all Co-Owners and their Lenders unanimously agree to terminate this Agreement, or (ii) such other date (but no later than ninety-nine (99) years after the Effective Date) as may be unanimously agreed by all of the Co-Owners and their Lenders.
      3.	Other Provisions. The rights granted hereunder are of the nature, and are subject to the requirements and limitations, set forth in the Agreement. The Agreement also contains various covenants, obligations and rights of the Parties, including, without limitation, provisions relating to use, conduct of operations, assignment, ownership of improvements, fees, default, cure rights and lender protections.
      4.	Purpose of this Memorandum. The terms, conditions and covenants of the Agreement are incorporated herein by reference as though fully set forth herein. This Memorandum does not supersede, modify, amend or otherwise change the terms, conditions or covenants of the Agreement, and this Memorandum shall not be used in interpreting the terms, conditions or covenants of the Agreement. In the event of any conflict between this Memorandum and the Agreement, the Agreement shall control.
      5.	Binding on Successors and Assigns.  The Parties hereby agree that all of the covenants, consents and agreements contained in the Agreement touch and concern the Property and are expressly intended to, and shall, be covenants running with the land and shall be binding and a burden upon said real estate and each Party's present or future estate or interest therein and upon each of the Parties, their respective successors and assigns as holders of an estate or interest in said real estate (including without limitation, any lender or other person acquiring title from any such person upon foreclosure or by deed in lieu of foreclosure), and shall benefit the Parties and their respective successors and assigns and the real estate and any present or future holder of an estate or interest therein.  To the extent any of the provisions of this Agreement are not enforceable as covenants running with the land, they shall be enforceable as equitable servitudes.
      6.	Counterparts. This Memorandum may be executed in counterparts, each of which shall be deemed an original and all of which when taken together shall constitute one and the same document.
[SIGNATURES ON NEXT PAGE]
       
IN WITNESS WHEREOF, the Parties have caused this Memorandum to be executed as of the date first written above.
Rising Tree Wind Farm LLC


	
By:
Title:


	
By:
Title:

Rising Tree Wind Farm II LLC


	
By:
Title:


	
By:
Title:

Rising Tree Wind Farm III LLC
 __________________________________________
By:
Title:


	
By:
Title:
[Add notarial acknowledgments]

EXHIBIT A
DESCRIPTION OF THE PROPERTY





1 Conform to percentage in section 5.3.2.
---------------

------------------------------------------------------------

---------------

------------------------------------------------------------

Execution Copy








	-41-






	A-6



	B-43


	C-1




	D-1


	E-2


F-2


G-5

18


EXECUTION VERSION






	B-3







B-2-1


C-1


D-1



E-5</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>556</filing_id>
      <filing_title>Amended SFA</filing_title>
      <filing_type>30</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2015-08-29</current_effective_date>
      <ferc_order_date>2015-08-19</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
    <record_data>
      <record_id>1</record_id>
      <option_code>A</option_code>
      <record_title>Co-Tenancy Agreement</record_title>
      <record_content_desc>Rising Tree III</record_content_desc>
      <record_version_num>1.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>1000000</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2015-08-29</proposed_effective_date>
      <priority_order>600</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>AMENDED AND RESTATED
LARGE GENERATOR INTERCONNECTION AGREEMENT

CO-TENANCY AGREEMENT

by and among

Rising Tree Wind Farm LLC, 

Rising Tree Wind Farm II LLC,

Rising Tree Wind Farm III LLC,



and 
Rising Tree Wind Farm LLC, as the Manager

October 24, 2014 

ARTICLE I	DEFINITIONS	2
1.1	Certain Definitions	2
ARTICLE II	CO-TENANCY RIGHTS AND OBLIGATIONS	5
2.1	Assignment of Interconnection Rights	5
2.2	Use of LGIA	5
2.3	Maximum Capacity	5
2.4	Curtailment	5
2.5	LGIA Expenses	6
2.6	Liquidated Damages; Credits; Refunds	6
2.7	Joint and Several Liability	7
2.8	Projected Capacity	7
2.9	Indemnity	7
2.10	Taxes	7
2.11	Operation and Management	7
2.12	Events of Default; Default	8
2.13	Remedies	8
2.14	Disconnection	9
2.15	Equitable Relief	9
2.16	Dispute Resolution	9
2.17	Effect of Force Majeure	11
2.18	Notice of Default	11
2.19	Tax Classification; No Partnership	11
ARTICLE III	MANAGER	11
3.1	Appointment of Manager; Manager Services	11
3.2	Communications	12
3.3	Indemnification of Manager	12
3.4	Books and Records; Reporting Requirements	12
3.5	Replacement of Manager	13
3.6	Management Fee	13
3.7	Discrimination	13
3.8	Performance	13
3.9	Limitation of Liability	13
ARTICLE IV	TRANSFERABILITY	13
4.1	General Restriction	13
4.2	Co-Tenant's Right to Encumber	14
4.3	Certain Rights of Financing Party	14
4.4	FERC Approval	15
4.5	Number of Co-Tenants	15
ARTICLE V	MISCELLANEOUS PROVISIONS	15
5.1	Notices	15
5.2	Choice of Law	15
5.3	Entire Agreement	15
5.4	Interpretation	15
5.5	Waiver	16
5.6	Third Party Beneficiaries	16
5.7	Counterparts; Facsimile Signatures	16
5.8	Amendments; Term	16
5.9	Further Assurances	16
5.10	Replacement	16
5.11	WAIVER OF RIGHT TO PARTITION	16

AMENDED AND RESTATED
LARGE GENERATOR INTERCONNECTION AGREEMENT
CO-TENANCY AGREEMENT
         This AMENDED AND RESTATED LARGE GENERATOR INTERCONNECTION AGREEMENT CO-TENANCY AGREEMENT (this "Agreement") is made and entered into as of October 24, 2014, (the "Effective Date") by and among Rising Tree Wind Farm LLC, a Delaware limited liability company ("RST"), Rising Tree Wind Farm II, LLC, a Delaware limited liability company ("RST II"),  Rising Tree Wind Farm III LLC, a Delaware limited liability company, successor in interest to Addison Energy Resources LLC, a Delaware limited liability company ("RST III") (each a "Co-Tenant" and collectively the "Co-Tenants"); and Rising Tree Wind Farm, LLC (the "Manager"); each also a "Party" and collectively, the "Parties".  
RECITALS
         A.	The Parties executed that certain Large Generator Interconnection Agreement Co-Tenancy Agreement dated as of August 19, 2013 ("Original Agreement").  The Parties desire to amend and restate the Original Agreement as stated herein.
         B.  The Co-Tenants are developing and will construct, own and operate energy projects with an aggregate Nameplate Capacity  of up to 198 MW (collectively, the "Project") in the Mojave and Tehachapi areas of Kern County, California.
         C.	Each Co-Tenant will construct, own, and operate a separate phase (each, a "Phase") of the Project.  
         D.	The Phases to be constructed, owned and operated by each of RST, RST II and RST III are projected to have Nameplate Capacities of 79.2 MW, 19.8 MW and 99 MW, respectively.
         E.	The Co-Tenants, as tenant-in-common, and Manager, as agent for the Co-Tenants, have entered into that certain First Amended Large Generator Interconnection Agreement with Southern California Edison Company ("SCE") and the California Independent System Operator Corporation (the "CAISO"), dated as of September 5, 2014, together with all amendments, agreements, schedules, appendices, exhibits and other documents ancillary thereto (including the Meter Service Agreement and the Participating Generator Agreement) (all as may be amended or supplemented, the "LGIA") for the purpose of securing interconnection rights for the Project and each of the Phases.
         F.	The Parties desire to enter into this Agreement to set forth the rights and obligations of each of the Parties under the LGIA.
         NOW, THEREFORE, in consideration of the foregoing and the agreements and covenants contained herein, and other good and valuable consideration, the receipt and sufficiency of which are hereby acknowledged, the Parties hereto agree as follows:
AGREEMENT
ARTICLE I
DEFINITIONS
1.1	Certain Definitions.  Capitalized words and phrases used herein shall have the following meanings, or the meanings given in the Sections of this Agreement in which they are defined, unless the text expressly or by necessary implication requires otherwise.
      "Active Co-Tenant" means each Co-Tenant which has notified the Manager in writing that its Phase, as of any date of determination, is (or will be, at any time in the subject month) interconnected to and supplying electricity to the Windhub Substation.
      "Agreement" has the meaning given in the preamble to this Agreement.
      "CAISO" has the meaning given in the recitals to this Agreement.
      "Claims" has the meaning given in Section 2.9(a).
      "Co-Tenancy Percentage Interest" means, with respect to each Co-Tenant, the percentage of the Interconnection Capacity, as specifically set forth on Exhibit A hereto, as such exhibit may be amended from time to time.
      "Co-Tenant" has the meaning given in the preamble to this Agreement.
      "Construction Commencement Date" means, with respect to each Co-Tenant, the earlier of: (i) the date that such Co-Tenant commences construction of its Phase and (ii) the date of closing of construction financing for such Co-Tenant's Phase.
      "Distribution Upgrades" has the meaning given in the LGIA.
      "Effective Date" has the meaning given in the preamble to this Agreement.
      "Event of Default" has the meaning given in Section 2.12.
      "FERC" means the Federal Energy Regulatory Commission or any successor agency.
      "Financing Party" means (i) any and all lenders providing senior or subordinated construction, interim or long-term debt financing or refinancing (including hedging counterparties) for the development, construction, purchase or operation of a Phase, and (ii) any and all equity or tax investors providing financing or refinancing for a Phase or purchasing equity ownership interests in a company owning a Co-Tenant or a Phase, including through a lease financing structure, and any trustee or agent acting on behalf of any such lenders, equity or tax investors, or lease equity providers.
      "Force Majeure" means unforeseeable causes, such as acts of God, the enforcement or adoption of legislation or lawful rules, regulations or orders of any governmental body, acts of the public enemy, riots, strikes, or other industrial disturbances, labor or material shortages, fires, explosions or other causes of a similar nature which are beyond the reasonable control of the Parties and which wholly or partly prevents a Party from performing its obligations under this Agreement.
      "FPA" has the meaning given in Section 2.11.
      "Indemnified Co-Tenant" has the meaning given in Section 2.9(a).
      "Indemnifying Co-Tenant" has the meaning given in Section 2.9(a).
      "Interconnection Capacity" means the interconnection capacity expressed in MW provided for pursuant to the LGIA.
      "Interconnection Customer" has the meaning given in the LGIA.
      "Interconnection Customer Interconnection Facilities" has the meaning given in the LGIA.
      "Interconnection Facilities" has the meaning given in the LGIA.
      "Interconnection Rights" means the rights and interests under the LGIA.
      "Interest Rate" means the highest prime rate published in the Wall Street Journal Money Rates Table as of the date of calculation plus 200 basis points.  
      "Laws" means all applicable laws, statutes, ordinances, rules, regulations, decrees, orders, permits, requirements, judgments, decisions and injunctions issued by any governmental authority, including laws relating to health, safety and the environment.
      "LGIA" has the meaning given in the recitals to this Agreement.
      "LGIA Operating Expenses" means all expenses due and payable under the LGIA, including expenses incurred in connection with complying with the LGIA (including affirmative covenants with respect to maintenance of the Project and the Interconnection Customer Interconnection Facilities, communications with CAISO, insurance, and reporting), plus the Management Fee, but excluding the TO Construction Costs.
      "Management Fee" has the meaning given in Section 3.6.
      "Manager" has the meaning given in the preamble to this Agreement.
      "Maximum Nameplate Capacity" means, for each Phase, the corresponding nameplate capacity amount listed in Exhibit A. 
      "Mortgage" has the meaning given in Section 4.2.
      "MW" means a megawatt or megawatts, as the context may require.
      "Nameplate Capacity" means, for each Phase, as of any date of determination, the aggregate sum of the nameplate capacity ratings of each wind turbine generator included in such Phase that has been interconnected to the Windhub Substation pursuant to the LGIA.
      "NERC" means the North American Electric Reliability Council or its successor organization.
      "Network Upgrades" has the meaning given in the LGIA.
      "Participating TO Interconnection Facilities" has the meaning given in the LGIA.
      "Party" and "Parties" have the meanings given in the preamble to this Agreement.
      "Person" means any individual or entity, and the heirs, personal representatives, successors and assigns of such individual or entity where the context so permits.
      "Phase" has the meaning given in the recitals to this Agreement.
      "Phase Controlled Assets" means, for each Co-Tenant, any of the assets comprising its respective Phase or Phases, the corresponding Phase Real Property and related Phase agreements and contractual arrangements.  For the avoidance of doubt, the Phase Controlled Assets shall exclude the LGIA.
      "Phase Real Property" means, for any Phase, the real property on which such Phase is located.
      "Point of Interconnection" has the meaning given in the LGIA.
      "PPA" means a an power purchase Agreement or other form of bundled agreement for the sale of power and renewable energy credits entered into by any Co-Tenant with respect to a Phase (or any replacement thereof).
      "Project" has the meaning given in the recitals to this Agreement.
      "Requesting Co-Tenant" has the meaning given in Section 4.3(d).
      "RST" has the meaning given in the Preamble.
      "RST II" has the meaning given in the Preamble.
      "RST III" has the meaning given in the Preamble.
      "Rules" has the meaning given in Section 2.16(a).
      "SCE" has the meaning given in the recitals to this Agreement.  
      "Sharing Ratio" means, with respect to each Active Co-Tenant, as of any date of determination, the ratio equal to the  Nameplate Capacity of the Active Co-Tenant's Phase divided by the sum of the  Nameplate Capacities of all Active Co-Tenant's Phases. 
      "SFA" has the meaning given in Section 3.5.
      "Third Party Controversy" has the meaning given in Section 2.16(c).
      "TO Construction Costs" has the meaning given in Section 2.5(a).
      "Transfer" means, with respect to any asset, the sale, assignment, transfer, pledge, encumbrance, transfer, or other disposition of, either voluntarily, by operation of law or otherwise, or such asset.
      "Windhub Substation" means the substation owned by SCE (including the revenue meter), located in Mojave, Kern County, California.
ARTICLE II
CO-TENANCY RIGHTS AND OBLIGATIONS
2.1	Assignment of Interconnection Rights.  RST hereby assigns, transfers, conveys and delivers to the Co-Tenants, as tenants in common according to each Co-Tenant's Co-Tenancy Percentage Interest, and the Co-Tenants hereby accept, as tenants in common, all of its right title and interest in and to the Interconnection Rights and the LGIA.  Upon the conveyances described in this Section 2.1, the Co-Tenants shall hold title and interest in and to the Interconnection Rights and the LGIA as tenants-in-common and not as partners or joint venturers.  
2.2	Use of LGIA.  The LGIA shall be held and used solely to permit the interconnection of electricity generated by or on behalf of a Phase owned by a Co-Tenant (or by such Co-Tenant's successors, assigns or affiliates) at the Windhub Substation.  Each Co-Tenant shall have an undivided ownership interest as tenant-in-common in the Interconnection Customer and the LGIA equal to its Co-Tenancy Percentage Interest, and each Active Co-Tenant shall possess an undivided right to enjoy all of the rights of the Interconnection Customer under the LGIA, including use of the Interconnection Customer Interconnection Facilities.  Subject to Section 4.5 and to obtaining all necessary approvals, including, without limitation, from CAISO and SCE, the Parties shall amend this Agreement and the LGIA to add one (1) Co-Tenant proposed by RST III and one (1) Co-Tenant proposed by RST.
2.3	Maximum Capacity.  Only Active Co-Tenants shall have the right to interconnect their Phases at the Windhub Substation.  No Active Co-Tenant shall interconnect its respective Phase to the Windhub Substation to the extent such interconnection will result in such Active Co-Tenant having a Phase with Nameplate Capacity in excess of its Maximum Nameplate Capacity.  To the extent that conditions exist which result in an Active Co-Tenant generating energy from its respective Phase in excess of its Maximum Nameplate Capacity, then such Active Co-Tenant shall curtail the operation of its Phase so as not to exceed its Maximum Nameplate Capacity.  
2.4	Curtailment.  In the event of any curtailment of interconnection or transmission services at the direction of CAISO, such curtailment shall be allocated pro rata among the Active Co-Tenants according to each Active Co-Tenant's Sharing Ratio; provided, however, that the Manager may curtail (to the extent permitted under its operating agreement) on a non-pro rata basis if (a) it reasonably determines that a pro rata allocation among Active Co-Tenants is not practical under the circumstances with respect to the operation of the  Project or that non-pro rata allocation of such curtailment is necessary with respect to the prudent operation of the Project or (b) such allocation is necessary to comply with the LGIA or any PPA, and, in each case, that such non-pro rata allocation will not result in a default under the LGIA or any PPA to which a Co-Tenant is a party.  In the event of any curtailment of interconnection or transmission services other than at the direction of CAISO (including at the direction of SCE as the purchaser under any PPA when the basis of such curtailment is congestion arising from the ordinary course of operations of SCE's transmission system, and as a result of actions or omissions caused by any Active Co-Tenant (including any default under the LGIA or an applicable PPA)), all such curtailment shall be allocated to the applicable Active Co-Tenant and such Active Co-Tenant will be responsible for all costs, liabilities and damages relating to such curtailment.  
2.5	LGIA Expenses.  Each Co-Tenant hereby confirms its obligation to share in the periodic payment of all expenses incurred under the LGIA, and agrees to pay its respective share of such expenses as and when due and payable as follows:
(a)	TO Construction Costs. RST shall  provide initial funding for all payments (including the provision of any payment security required under the LGIA) required to design, procure, and construct the Participating TO Interconnection Facilities pursuant to the LGIA (including Appendix A thereof) ("TO Construction Costs") 
(c)	LGIA Operating Expenses.  RST shall be responsible for payment of all LGIA Operating Expenses until such time as other Co-Tenants become Active Co-Tenants.   
(d)	Payment of LGIA Operating Expenses.  The Manager shall, as authorized agent for each Co-Tenant, administer the collection and payment of the LGIA Operating Expenses.  Each Active Co-Tenant obligated to pay LGIA Operating Expenses shall pay each invoice for LGIA Operating Expenses promptly upon receipt of written notice thereof from the Manager, but in any event within thirty (30) days of such receipt or such earlier time as required by the LGIA. If any Co-Tenant fails to make payment of its required share of the LGIA Operating Expenses when due, the Manager or any other Co-Tenant may make such payments to avoid a breach or default under the LGIA and such paying party shall be entitled to reimbursement by the non-paying Co-Tenant (together with interest on such amounts accrued at the Interest Rate beginning on the date that such payment was due) following delivery of written evidence of such payment having been made.
2.6	Liquidated Damages; Credits; Refunds.  To the extent that the Manager receives any damages, credits or refunds pursuant to the LGIA, the Manager shall promptly remit such damages, credits or refunds to the Active Co-Tenants according to each Active Co-Tenant's Sharing Ratio (unless such damages, credits or refunds accrue to a specific Active Co-Tenant, in which event the Manager shall promptly remit them to such Active Co-Tenant); provided, however, that damages, credits, or refunds allocated to a Co-Tenant shall first be offset against any amounts owing to any other Co-Tenants.
2.7	Joint and Several Liability.  Each Co-Tenant shall be jointly and severally liable for (i) any payments due under the LGIA and (ii) the performance of the obligations and duties imposed on the Interconnection Customer by the LGIA.  
2.8	Projected Capacity.  Each Co-Tenant shall notify the Manager in writing, no later than thirty (30) days before such Co-Tenant's Construction Commencement Date, of the projected Maximum Nameplate Capacity of its Phase.  The Parties hereby agree to amend Exhibit A, if necessary, to reflect each Co-Tenant's projected nameplate capacity as set forth in its notice to the Manager pursuant to this Section 2.8, but subject to Section 2.3.  
2.9	Indemnity. 
(a)	Each Co-Tenant (an "Indemnifying Co-Tenant") shall indemnify, defend and hold harmless the other Co-Tenants (each, an "Indemnified Co-Tenant") from and against any and all losses (including all lost revenues under applicable PPAs and the after tax value of lost production tax credits, if applicable), damages, liabilities, claims, judgments, liens, penalties, costs and expenses, including, without limitation, reasonable attorneys' and consultants' fees (collectively, "Claims"), which may be imposed upon or incurred by such Indemnified Co-Tenant or asserted against such Indemnified Co-Tenant in connection with any breach of this Agreement or the LGIA or resulting from any other negligent action or omission by the Indemnifying Co-Tenant under or in connection with the LGIA and affecting the rights of the Indemnified Co-Tenants thereunder or the Interconnection Facilities.  In addition, each Co-Tenant and the Manager shall be entitled to contribution from any Co-Tenant for costs incurred on behalf of such Co-Tenant or such Co-Tenant's Phase.  
(b)	The Manager shall indemnify, defend, and hold harmless the Co-Tenants from any Claims which may be imposed upon or incurred by such Co-Tenants as a result of fraud, willful misconduct, or gross negligence of the Manager.
2.10	Taxes.  Each Co-Tenant shall pay all real and personal property taxes and assessments, general or special, levied against its Phase or the facilities and fixtures located thereon, except for any taxes or assessments that are LGIA Operating Expenses.  All such taxes and assessments shall be paid before delinquency and before any fine, interest or penalty shall become due or be imposed for their non-payment; provided if a Co-Tenant in good faith contests or disputes such taxes or assessments and furnishes to the other Co-Tenants a bond or other acceptable security in an amount sufficient to discharge all such contested taxes or assessments, such Co-Tenant will not be in default under this Section 2.10 for failing to timely pay such contested taxes or assessments.
2.11	Operation and Management.  
(a)	Each Co-Tenant shall operate and maintain its Phase Controlled Assets acting as a prudent operator and manager and otherwise (a) in accordance with the terms of the LGIA, (b) in accordance with good operating and utility industry practices, (c) in compliance with all applicable Laws, including but not limited to the Federal Power Act, as amended ("FPA"), and all rules, regulations, and orders issued by the FERC pursuant to the FPA, (d) in compliance with the CAISO Tariff, including the rules, protocols, procedures and standards attached thereto, as the same may be amended from time to time and approved by FERC, (e) in compliance with the rules, protocols, procedures and standards of NERC, and (f) without causing a material adverse effect on the LGIA, any Party or any of the other Co-Tenants' respective Phases. 
(b)	Each Co-Tenant shall comply with its obligations under the LGIA, including with respect to its obligations to fund LGIA Operating Expenses.  Each Co-Tenant shall obtain and maintain status as an "exempt wholesale generator" or a "qualifying facility" under applicable Law.
(c)	Each Co-Tenant shall cooperate with and timely respond to Manager as agent for the Co-Tenants under the LGIA, and shall provide Manager such information required by Manager to comply with its obligations under the LGIA.
2.12	Events of Default; Default.  The following shall constitute "Events of Default": 
(a)	a Co-Tenant, after receiving written notice pursuant to Section 2.18 of its default or potential default (including any "Default" under the LGIA), fails to commence and diligently pursue the cure of such default within ten (10) days of receiving such notice, provided if the nature of the defaulted obligation or obligations other than a payment default is such that more than thirty (30) days are required, in the exercise of commercially reasonable diligence, for cure of such default, then such Co-Tenant shall not be in default under this Section 2.12(a) if it commences to cure such default within (20) days after receiving notice of the default; and   
(b)	a Party fails to perform its obligations under this Agreement or the LGIA  in any material respect, and such Party fails to cure such default within (i) ten (10) days after receipt of written notice of a payment default, or (ii) twenty (20) days after receipt of written notice of any non-payment default, provided if the nature of the defaulted obligation or obligations other than a payment default is such that more than thirty (30) days are required, in the exercise of commercially reasonable diligence, for cure of such default, then such Co-Tenant shall not be in default under this Section 2.12(b) if it commences to cure such default within twenty (20) days after receiving notice of the default and thereafter continuously pursues the same to completion with commercially reasonable diligence, such extended period not to exceed sixty (60) days, including the initial cure period.
2.13	Remedies.  In addition to all other remedies permitted by Law or under this Agreement (all of which shall be cumulative), following an Event of Default, each non-defaulting Party and its Financing Parties or other equity interest holders shall have the right, but not the obligation, to perform the obligations of the defaulting Party, and the defaulting Party shall reimburse the performing Parties for their direct and indirect expenses which they incurred in rendering the performance, plus interest at the Interest Rate. 
2.14	Disconnection.  
(a)	If a Co-Tenant fails to cure any default under this Agreement or the LGIA within twenty five (25) days after receiving notice of such default, the Manager may disconnect the breaching Co-Tenant's Phase from the Windhub Substation (i) after obtaining written approval to do so from those Active Co-Tenants then not in default and having a combined Sharing Ratio in excess of fifty percent (50%) of the combined Sharing Ratio of all Active Co-Tenants then not in default, or (ii) without approval from Active Co-Tenants but only to the extent necessary to prevent or cure a "Default" under the LGIA; provided if the nature of the defaulted obligation or obligations is such that more than thirty (30) days are required, in the exercise of commercially reasonable diligence, for cure of such default, then the Manager may not disconnect the defaulting Co-Tenant's Phase if such Co-Tenant commences to cure such default within twenty five (25) days after receiving notice of the default and thereafter continuously pursues the same to completion with commercially reasonable diligence, such extended period not to exceed eighty five (85) days, including the initial cure period; provided further, that in no event shall any cure period hereunder extend beyond any applicable cure period under the LGIA.
(b)	The Manager may also disconnect any Phase, in its sole discretion, in order to prevent damage to the Co-Tenants' Phases, the Interconnection Facilities or the property of SCE or as otherwise needed to prevent or mitigate technical issues affecting the Phases; the Manager shall immediately notify the Co-Tenants of any such disconnection.
2.15	Equitable Relief.  The Parties agree that damages may be an inadequate remedy for a breach by the Manager or any other Party of its respective obligations under this Agreement, and that each Party shall be entitled to seek injunctive and other equitable relief, including specific performance, against any other Party or the Manager to prevent or eliminate such default.
2.16	Dispute Resolution. 
(a)	Arbitration.  If the Parties are unable to resolve a dispute, then any Party may submit such dispute to binding arbitration and the dispute shall be resolved using expedited JAMS arbitration rules (the "Rules") by an arbitrator mutually acceptable to the Parties.  The determination of the arbitrator shall be final and binding upon the Parties.  Each Party involved in the dispute shall pay its ratable share of all costs of such arbitration; provided, however, that the losing Party(ies), if the arbiter clearly designates one in connection with the obligation to pay such costs, shall pay all of the costs of the prevailing Party(ies), including reasonable attorneys' fees and costs.  Notwithstanding any provisions of the Rules, the Parties shall have the right to take depositions and obtain discovery regarding the subject matter of the arbitration, as provided in Title III of Part 4 (commencing with Section 1985) of the California Code of Civil Procedure.  The determination of the arbitrator shall be final and shall not be subject to judicial review; provided, however, that any award or determination rendered by the arbitrators may be entered and enforced in any court of competent jurisdiction.  The arbitration proceedings provided for hereunder are hereby declared to be self-executing, and it shall not be necessary to petition a court to compel arbitration.
(b)	Notice and Selection of Arbitrator.  The Party giving notice of arbitration shall include the name of its proposed arbitrator as part of the notice.  The other Party(ies) involved in the dispute shall, within fifteen (15) days after the receipt of such notice, provide notice either agreeing to such arbitrator or in the alternative, including the name of its proposed arbitrator.  If the Party(ies) upon whom notice of arbitration is served fails to select an arbitrator and advise the other Party(ies) of its selection within fifteen (15) days after receipt of such notice, the arbitrator selected by the Party delivering such initial notice shall serve as the arbitrator.  If any other Party has selected a different arbitrator and if they cannot agree on an arbitrator within fifteen (15) days thereafter, then the arbitrator shall be selected in accordance with the Rules.  Unless otherwise agreed to by the Parties, the arbitration shall not be scheduled for a date that is greater than ninety (90) days from the date the arbitration panel is selected.  
(c)	Third Parties.  If a dispute arises between the Parties hereto which is subject to the arbitration provisions hereunder and there exists or later arises a dispute between the Parties hereto and any other party arising out of or related to the same transaction or series of transactions ("Third-Party Controversy"), any Party hereto involved in the dispute shall be entitled to require that such Third-Party Controversy be consolidated with such arbitration proceedings hereunder; provided, however, that such third party must either (i) be a party to an agreement with one or more of the Parties hereto which provides for arbitration of disputes thereunder in accordance with rules and procedures substantially the same in all material respects as provided for herein; or (ii) consent to arbitration as provided for hereunder.
(d)	Limitations.  Notice of the demand for arbitration shall be filed in writing with the other Parties to this Agreement.  The demand for arbitration shall be made within a reasonable time after the claim, dispute or other matter in question has arisen, and in no event shall it be made after the date when institution of legal or equitable proceedings based on such claim, dispute or other matter in question would be barred by the applicable statutes of limitations.
(e)	Venue.  All arbitration proceedings shall be held in Los Angeles, California.
(f)	Attorneys' Fees.  In the event of any litigation or arbitration for the interpretation or enforcement of this Agreement, or for damages for a default, or that in any other manner relates to this Agreement, the prevailing Party(ies) shall be entitled to reasonable attorneys' fees, arbitration, court and other costs from the non-prevailing Party(ies), including costs and fees on appeal and in any bankruptcy or insolvency proceeding.
(g)	Equitable Relief.  Notwithstanding anything in this Agreement to the contrary, the Parties each may seek injunctive and/or other equitable relief without first resorting to any of the dispute resolution procedures set forth in this Section 2.16, and each Party acknowledges and agrees that money damages may not be entirely suitable to protect the respective interests of the Parties under this Agreement and that each Party may seek such injunctive and/or other equitable relief if the circumstances so require (in such Party's reasonable judgment).
2.17	Effect of Force Majeure.  If, because of an event of Force Majeure, any Party is unable to carry out its obligations under this Agreement, and if such Party promptly gives the other Parties written notice of such Force Majeure in detail, specifying the nature, extent and expected duration of such Force Majeure, the obligations and liabilities of the Party giving such notice and the corresponding obligations and liabilities of any other Party shall be temporarily suspended to the extent made necessary by and during the continuance of such Force Majeure; provided, that (a) a Party may not claim Force Majeure with respect to any payment obligations under this Agreement or the LGIA, and (b) in no event will the suspension of a Party's obligations and liabilities hereunder be permitted to cause a "Default" under the LGIA.  Any disabling effects of such event of Force Majeure shall be eliminated as soon as and to the extent reasonably practicable by the Party claiming Force Majeure. 
2.18	Notice of Default.  Each Co-Tenant and the Manager shall promptly provide written notice to the other Parties upon receiving notice of, or otherwise discovering, any default or potential default under this Agreement or the LGIA.  
2.19	Tax Classification; No Partnership.  The Co-Tenants hereby declare that their relationship is and will be that of tenants-in-common, and that each Co-Tenant will have an undivided interest in and to the Interconnection Rights and the LGIA.  The Co-Tenants hold the interests for investment purposes only, and not for the active conduct of a business.  It is intended and agreed by the Co-Tenants that tenancy-in-common relationship governed by this Agreement is not a partnership within the meaning of Section 761 of the Internal Revenue Code,  and the Treasury Regulations promulgated thereunder.  The Co-Tenants shall take any and all necessary actions to file their respective U.S. federal, state and local income tax returns consistent with the foregoing.  
ARTICLE III
MANAGER
3.1	Appointment of Manager; Manager Services.  Each Co-Tenant hereby appoints the Manager, who shall have no interest in the Interconnection Customer by virtue of its designation as Manager, to act as its agent and representative for all purposes under the LGIA, and the Manager shall have the power to exercise and shall exercise any and all of the rights of the Interconnection Customer under the LGIA and shall coordinate compliance with the LGIA by the Co-Tenants; provided that the Manager may not terminate, amend (except as provided in Section 5.8) or Transfer the LGIA or waive any material rights of the Co-Tenants under the LGIA, without the prior, unanimous written consent of the Co-Tenants.  In addition, each Co-Tenant specifically authorizes the Manager to negotiate and execute on its behalf and on behalf of the Interconnection Customer, and agrees to be bound by the terms of, (i) a CAISO meter service agreement, (ii) a CAISO participating generator agreement and (iii) a SCE retail electricity service agreement.  
3.2	Communications.  The Manager shall be the single point of contact between the Co-Tenants and the CAISO and SCE, and shall be responsible for all administrative obligations of the Interconnection Customer under the LGIA, including billing, issuing payments, providing notices and communicating with, and receiving instructions from, the CAISO and SCE with respect to the Phases and the LGIA.  The Manager shall, promptly upon receipt, provide to each Co-Tenant a copy of any notices or other material communications received by it related to  the LGIA or this Co-Tenancy Agreement. The Manager shall also provide to each Co-Tenant a copy of any notices or other material communications it delivers to the CAISO or SCE related to the LGIA or this Co-Tenancy Agreement.
3.3	Indemnification of Manager.  Each Co-Tenant shall, pro rata in accordance with its Sharing Ratio, defend, indemnify and hold harmless the Manager and its employees and agents, from any claim, loss, liability or damage incurred by reason of any act performed or omitted to be performed by it in good faith in connection with its management of the LGIA (other than acts or omissions constituting a material breach by the Manager of this Agreement or the fraud, willful misconduct, or gross negligence of the Manager), including reasonable attorneys' fees incurred by it in connection with the defense of any action based on any such alleged act or omission.  The Manager shall specifically be indemnified by the Co-Tenants and held harmless from any and all actions taken by the Manager in its reasonable judgment, in good faith, or in reasonable reliance on advice of the Manager's attorneys or accountants, and shall be reimbursed by the Co-Tenants for costs related to claims or litigation which arise in connection with the LGIA or this Agreement (other than claims or litigation resulting from a material breach by the Manager of this Agreement or the fraud, willful misconduct, or gross negligence of the Manager).
3.4	Books and Records; Reporting Requirements.  
(a)	Maintenance or Records.  The Manager shall maintain books and records in sufficient detail to verify amounts due and payable hereunder for a period of not less than three (3) years after the end of the calendar month to which they relate, and all such books and records shall be available for inspection and/or copying by each Co-Tenant or its authorized representative at the cost and expense of such Co-Tenant and at reasonable times during regular business hours, upon reasonable notice to the Manager.
(b)	Provision of Records.  The Manager shall, from time to time or at the reasonable request of the Co-Tenants or their Financing Parties, provide reports to the Co-Tenants and their Financing Parties sufficient to keep the Co-Tenants and their Financing Parties reasonably apprised as to significant matters concerning the LGIA and the LGIA Operating Expenses.
3.5	Replacement of Manager.  The Co-Tenants agree that the Manager shall be the same entity as the Manager under the Shared Facilities Agreement to be entered into subsequent to the Effective Date between the Co-Tenants and their permitted assigns, as may be amended from time to time (the "SFA"), and the Manager hereunder shall therefore be replaced as necessary to this end.
3.6	Management Fee.  In consideration of the services provided by Manager hereunder, the Manager shall be paid an annual fee of Five Thousand Dollars ($5000) (the "Management Fee"), payable monthly, in advance, in equal monthly installments, beginning on the date hereof and ending on the termination of this Agreement or the replacement of the Manager.  The Management Fee shall be allocated to the Co-Tenants as an LGIA Operating Expense.  
3.7	Discrimination.  Notwithstanding any other provision herein to the contrary (other than Section 2.4), the Manager shall not Discriminate in providing services or otherwise performing its obligations hereunder among the Co-Tenants.  As used herein, "Discriminate" means a failure by the Manager to provide services hereunder in a manner that treats alike each of the Co-Tenants under substantially similar conditions, and for which dissimilar treatment is not otherwise justified as necessary in accordance with prudent operating and utility industry practices.
3.8	Performance.  The Manager shall perform its obligations under this Agreement (a) in accordance with the terms of the LGIA, (b) in accordance with good operating and utility industry practices, (c) in compliance with all applicable Laws, including but not limited to the FPA, and all rules, regulations, and orders issued by the FERC pursuant to the FPA, (d) in compliance with the CAISO Tariff, including the rules, protocols, procedures and standards attached thereto, as the same may be amended from time to time and approved by FERC, (e) in compliance with the rules, protocols, procedures and standards of NERC, and (f) without causing a material adverse effect on the LGIA, any Party or any of the other Co-Tenants' respective Phases.
3.9	Limitation of Liability.  Except in the case of willful misconduct or gross negligence or indemnification obligations under Section 2.9, in no circumstances shall the aggregate liability of the Manager under this Agreement in any calendar year (whether based on negligence, breach of contract or otherwise) arising out of or in connection with the performance of the obligations of the Manager under this Agreement exceed an amount equal to the Management Fee for that calendar year.
ARTICLE IV
TRANSFERABILITY
4.1	General Restriction.  No Co-Tenant may Transfer its interest in this Agreement to any transferee, unless (i) such Transfer is made together with a Transfer of its applicable Phase Controlled Assets to such transferee, (ii) such transferee is assigned and assumes the Transferring Co-Tenant's entire interest in both this Agreement and the LGIA, subject to the terms thereof, pursuant to an agreement reasonably satisfactory to the other Co-Tenants, (iii) such Transfer is in compliance with the terms of the LGIA, and (iv) such Transfer does not have a material adverse effect on the performance of obligations under the LGIA. 
4.2	Co-Tenant's Right to Encumber.  Notwithstanding anything in Section 4.1 to the contrary, each Co-Tenant may, at any time and from time to time during the term of this Agreement, encumber, mortgage or hypothecate to any Financing Party by deed of trust or mortgage or other security instrument, (the "Mortgage") all or part of such Co-Tenant's interest under this Agreement and the other documents entered into in connection with this Agreement, including, without limitation, the LGIA, without the consent of the other Co-Tenants.  
4.3	Certain Rights of Financing Party.  Should any Co-Tenant incur any encumbrance in accordance with Section 4.2 of this Agreement, and should the Parties receive notice thereof pursuant to Section 5.1 hereof, the Parties hereby expressly stipulate and agree between themselves and on behalf of, and for the benefit of, the Financing Party as follows:
(a)	Modification of Agreement.  They will not modify this Agreement or allow this Agreement to be modified in any way nor cancel this Agreement without the written consent of the Financing Party, which consent may not be unreasonably withheld or delayed.
(b)	Performance by Financing Party.  The Financing Party shall have the right to do any act or thing required of the encumbering Co-Tenant under this Agreement, and any such act or thing performed by the Financing Party shall be as effective to prevent a default under this Agreement and/or a forfeiture of any of such Co-Tenant's rights under this Agreement as if done by the Co-Tenant itself, provided that the Financing Party shall have first given the Co-Tenant such notice and allowed the Co-Tenant to perform or attempt to perform such act or thing for such period of time as may be specified in any documents or instruments executed by the Co-Tenant for the benefit of the Financing Party.  The Financing Party shall have such foreclosure and sale rights and rights to perform or cause to be performed the covenants and agreements of the encumbering Co-Tenant under this Agreement as may be specified in any documents or instruments executed by the Co-Tenant for the benefit of the Financing Party.  Notwithstanding anything contained herein to the contrary, in no event shall a Financing Party be liable for any obligations or liabilities hereunder by virtue of any action or inaction, or otherwise except and to the extent such Financing Party expressly agrees in writing to assume such obligations and liabilities.
(c)	Notice to Financing Party.  If Manager issues or receives any notices regarding potential or actual defaults as described in Section 2.18 herein, the Manager, on behalf of the Co-Tenants, shall promptly deliver a copy of such notice to all Financing Parties of which it has received notice.
(d)	Consents to Assignment.  Each Co-Tenant and the Manager hereby agrees that it shall, no later than five (5) business days after a request by any other Co-Tenant (the "Requesting Co-Tenant") (or its Financing Party), execute such consents or estoppel certificates as are reasonably requested by the Requesting Co-Tenant or its Financing Party.
4.4	FERC Approval.  Notwithstanding anything in Section 4.1 or 4.2 to the contrary, no Transfer of any Co-Tenant's interests in this Agreement shall be effective unless and until the Co-Tenant or the Manager has obtained any necessary prior approvals from the FERC to effectuate any changes to this Agreement to reflect such Transfer and the change in the parties to this Agreement.
4.5	Number of Co-Tenants.  Except as otherwise expressly provided in the LGIA, there shall be no more than five (5) Co-Tenants comprising the Interconnection Customer and neither Interconnection Customer nor any Co-Tenant may further subdivide in any manner or form its interest in this LGIA.  The Parties acknowledge that the administrative burden to the CAISO to administer the LGIA would be excessive if the a Co-Tenant were to further subdivide its interests in the LGIA in violation of this Article and any such action would be considered a Breach and, if not cured pursuant to Article 17 of the LGIA, a Default under Article 17 of the LGIA, entitling the CAISO to terminate this LGIA in accordance with such Article 17.
ARTICLE V
MISCELLANEOUS PROVISIONS
5.1	Notices.  Any notice, demand, or communication required or permitted to be given by any provision of this Agreement shall be deemed to have been sufficiently given or served for all purposes if delivered personally or by telecopy to the Party or to an executive officer of the Party to whom the same is directed or, if sent by registered or certified mail, postage and charges prepaid, addressed to the Party's address, as appropriate, which is set forth in this Agreement or to such other address as a Party shall advise the other Parties from time to time in writing.
5.2	Choice of Law.  This Agreement shall in all respects be governed by and construed and enforced in accordance with the internal laws of the State of California, without regard to its choice of law provisions.
5.3	Entire Agreement.  This Agreement sets forth the complete understanding of the Parties hereto with respect to the subject matter hereof and supersedes all prior discussions, agreements, and undertakings relating to the subject matter hereof.
5.4	Interpretation.  All personal pronouns used in this Agreement, whether used in the masculine, feminine or neuter gender, shall include all other genders; the singular shall include the plural; and the plural shall include the singular.  Titles of articles and sections in this Agreement are for convenience only and neither limit nor amplify the provisions of this Agreement.  All references in this Agreement to articles, sections, subsections or paragraphs shall refer to articles, sections, subsections and paragraphs of this Agreement, unless specific reference is made to the articles, sections or other subdivisions of another document or instrument.  The word "including" shall mean "including without limitation".  This Agreement shall not be interpreted in favor of any Party by virtue of said Party not having prepared this Agreement.  The unenforceability, invalidity, or illegality of any provision of this Agreement shall not affect or impair the continuing enforceability or validity of any other part, all of which shall survive and be valid and enforceable.
5.5	Waiver.  No consent or waiver, express or implied by any Party hereto, to or of any breach or default by the other in the performance by the other of its obligations hereunder shall be deemed or construed to be a consent or waiver to or of any other breach or default in the performance by such other Party of the same or any other obligations of such Party hereunder.  Failure on the part of any Party hereto to complain of any act or failure to act of any other Party, or to declare such other Party in default, irrespective of how long such failure continues, shall not constitute a waiver of such Party of its rights hereunder.
5.6	Third Party Beneficiaries.  This Agreement and the terms and provisions hereof are solely and exclusively for the benefit of the Parties hereto.  No third party may rely on any of the provisions herein contained or lay claim to any of the rights of the Parties hereto (other than any Financing Party).
5.7	Counterparts; Facsimile Signatures.  This Agreement may be executed in counterparts each of which when so executed and delivered shall be deemed to be an original and all of which together shall constitute one instrument.  Signatures delivered by facsimile, email or other electronic means shall be binding upon the Parties hereto with the same force and effect as original signatures.
5.8	Amendments; Term.  Except as specifically provided in this Agreement, this Agreement shall not be amended except by the written agreement of the Manager and all the Parties.  In addition, no Party may amend the LGIA except by the written consent of all the Co-Tenants; provided that the Manager may amend the LGIA with respect to non-material, administrative matters, without the consent of the Co-Tenants but with prior written notice, together with a copy of the proposed amendment.  The Manager shall provide to each of the Co-Tenants a copy of the final amendment to the LGIA permitted pursuant to this Section 5.8.  This Agreement shall be in effect for so long as the LGIA is in effect.
5.9	Further Assurances.  Upon the reasonable request of any Party at any time after the Effective Date, the other Parties shall forthwith execute and deliver such further instruments of assignment, transfer, conveyance, endorsement, direction or authorization and other documents as the requesting Party or its or their counsel may reasonably request in order to effectuate the purposes of this Agreement.  Each Party agrees to cooperate fully with the other Parties in assisting it to comply with the terms of this Agreement, including, but not limited to, assistance in obtaining consents, waivers, authorizations, waivers, authorizations, orders and/or approvals of third parties.  
5.10	Replacement.  This Agreement replaces and supersedes the Original Agreement.
      Nothing contained in this Agreement will be deemed to constitute the Co-Tenants as partners or joint venturers.  
5.11	WAIVER OF RIGHT TO PARTITION.  THE CO-TENANTS EACH ACKNOWLEDGE AND AGREE THAT IT WOULD BE PREJUDICIAL TO THE INTERESTS OF THE CO-TENANTS UNDER THIS AGREEMENT IF ANY CO-TENANT WERE TO SEEK PARTITION OR ANY OTHER TYPE OF DIVISION OF THE LGIA, OR FILE AN ACTION FOR SUCH PARTITION OR DIVISION, EXCEPT AS OTHERWISE PROVIDED IN THIS AGREEMENT AND THE LGIA.
         THEREFORE, IN CONSIDERATION OF SUCH FACT AND FOR OTHER GOOD AND VALUABLE CONSIDERATION, EACH OF THE CO-TENANTS HEREBY WAIVES AND RELINQUISHES ANY AND ALL RIGHTS THAT IT MAY HAVE TO SEEK A PARTITION OR ANY OTHER TYPE OF DIVISION OF THE LGIA, EXCEPT AS OTHERWISE PROVIDED IN THIS AGREEMENT AND THE LGIA.
[Signature Page Follows]

         IN WITNESS WHEREOF, the Parties hereto have executed this Agreement as of the date first written above.
Rising Tree Wind Farm LLC
Rising Tree Wind Farm II LLC




___________________________________
___________________________________


By:  
By:  
Its:  
Its:  
Address: 
Address: 




___________________________________
___________________________________


By:  
By:  
Its:  
Its:  
Address: 
Address: 








Rising Tree Wind Farm III LLC
Rising Tree Wind Farm LLC, as Manager




___________________________________
___________________________________


By:  
By:  
Its:  
Its:  
Address: 
Address: 




___________________________________
___________________________________


By:  
By:  
Its:  
Its:  
Address: 
Address: 









EXHIBIT A

Maximum Nameplate Capacity and Initial Co-Tenancy Percentage Interest
Phase
Maximum Nameplate
Capacity
Initial Co-Tenancy Percentage Interest (rounded)
Rising Tree Wind Farm LLC Phase
79.2 MW
40%
Rising Tree Wind Farm II Phase
19.8 MW
10%
Rising Tree Wind Farm III LLC Phase
99 MW
50%
         
         
         
FIRST AMENDMENT TO
AMENDED AND RESTATED LARGE GENERATOR INTERCONNECTION AGREEMENT CO-TENANCY AGREEMENT
      THIS FIRST AMENDMENT TO AMENDED AND RESTATED LARGE GENERATOR INTERCONNECTION AGREEMENT CO-TENANCY AGREEMENT ("Amendment") is made and entered into this 29th day of June, 2015, by and among Rising Tree Wind Farm LLC ("RST"), Rising Tree Wind Farm II LLC ("RST II"), and Rising Tree Wind Farm III LLC ("RST III"), each of which is a Delaware limited liability company.  The foregoing are sometimes referred to herein individually as a "Co-Tenant" and collectively as "Co-Tenants"; and RST (the "Manager"); each also a "Party" and collectively, the "Parties").
RECITALS
      A.	The Co-Tenants, as tenant-in-common, and Manager, as agent for the Co-Tenants, have entered into that certain First Amended Large Generator Interconnection Agreement with Southern California Edison Company ("SCE") and the California Independent System Operator Corporation (the "CAISO"), dated as of September 5, 2014, together with all amendments, agreements, schedules, appendices, exhibits and other documents ancillary thereto (including the Meter Service Agreement and the Participating Generator Agreement) (all as may be amended or supplemented, the "LGIA").
      B.	The Co-Tenants also have previously entered into that certain Amended and Restated Large Generator Interconnection Agreement Co-Tenancy Agreement, dated October 24, 2014 (the "Agreement") in order to set forth the rights and obligations of each of the Parties under the LGIA.  
      C.	The Co-Tenants now wish to amend the Agreement in certain respects to make certain changes in and corrections to the Agreement.
      NOW, THEREFORE, for good and valuable consideration, the receipt of which is hereby acknowledged, the Co-Tenants agree as follows:
      1.	Definitions.  Except as otherwise defined herein, capitalized terms used in this Amendment will have the meanings defined in the Agreement, and the rules of interpretation in the Agreement shall apply to this Amendment.
      1.	Events of Default; Default. Section 2.12 is amend and restated in its entirety as follows:
	2.12 Events of Default; Default. 	The following shall constitute "Events of Default": a Party fails to perform its obligations under this Agreement or the LGIA in any material respect, and such Party fails to cure such default (including any "Default under the LGIA) within (i) ten (10) days after receipt of written notice pursuant to Section 2.18 of a payment default under this Agreement or the LGIA, or (ii) twenty (20) days after receipt of written notice pursuant to Section 2.18 of any non-payment default under this Agreement or the LGIA, provided if the nature of the defaulted obligation or obligations other than a payment default is such that more than thirty (30) days are required, in the exercise of commercially reasonable diligence, for cure of such default, then such Co-Tenant shall not be in default under this Section 2.12 if it commences to cure such default within twenty (20) days after receiving notice of the default and thereafter continuously pursues the same to completion with commercially reasonable diligence, such extended period not to exceed eighty-five (85) days, including the initial cure period.
      
      2.	Disconnection. Section 2.14 is amended and restated in its entirety as follows:
      2.14 Disconnection.
      (a)	Upon and during the continuation of any Co-Tenant's Event of Default, the Manager may disconnect the defaulting Co-Tenant's Phase from the Windhub Substation (i) after obtaining written approval to do so from those Active Co-Tenants then not in default and having a combined Sharing Ratio in excess of fifty percent (50%) of the combined Sharing Ratio of all Active Co-Tenants then not in default, or (ii) without approval from Active Co-Tenants but only to the extent necessary to prevent or cure a "Default" under the LGIA; provided that for the purposes of this Section 2.14, in no event shall any cure period under Section 2.12 extend beyond any applicable cure period under the LGIA.
	(b)	The Manager may also disconnect any Phase, in its reasonable discretion and in accordance with the standard of care set forth in Section 3.8, in order to prevent damage to the Co-Tenants' Phases, the Interconnection Facilities or the property of SCE or as otherwise needed to prevent or mitigate technical issues affecting the Phases; the Manager shall immediately notify the Co-Tenants of any such disconnection.
3.	Dispute Resolution. Section 2.16 is amended and restated in its entirety as follows:
      2.16 Dispute Resolution.	Disputes among the Co-Tenants shall be resolved in accordance with the procedures set forth in Exhibit B. 
4.	Replacement of Manager. Section 3.5 is amended and restated in its entirety as follows:
	3.5 Replacement of Manager. The Co-Tenants agree that the Manager shall be the same entity as the Operator (as defined under the SFA) under the Rising Tree Shared Facilities Agreement, dated as of December 3, 2014, by and among the Co-Tenants, as amended by the First Amendment to Rising Tree Shared Facilities Agreement, dated as of June 29, 2015, as may be further amended, restated or otherwise modified  from time to time (the "SFA"), and the Manager hereunder shall therefore be replaced as necessary to this end.
      
      5.	Discrimination. Section 3.7 is hereby amended and restated in its entirety as follows:
	3.7 Discrimination.  Notwithstanding any other provision herein to the contrary, but subject to the Manager's rights under Section 2.4, the Manager shall not Discriminate in providing services or otherwise performing its obligations hereunder among the Co-Tenants. As used herein, "Discriminate" means a failure by the Manager to provide services hereunder in a manner that treats alike each of the Co-Tenants under substantially similar conditions, and for which dissimilar treatment is not otherwise justified as necessary in accordance with prudent operating and utility industry practices.
      6.	General Restriction.	Section 4.1 is hereby amended by adding the following proviso to the end thereof immediately before the period:
      , provided, that, notwithstanding anything contained to the contrary in this  Section 4.1, Section 4.3 or otherwise in this Agreement, the Manager shall not be replaced except as set forth in Section 3.5.
      7.	A new Section 4.6 is hereby added as follows:
      4.6  Co-Tenancy.  The Parties agree that, for the purposes of the LGIA, (i) the entire 198 MW comprising the Project shall be considered to be a single Large Generating Facility (as defined in the LGIA), (ii) no Co-Tenant may have any expectation that the CAISO will treat any portion of the Project as a stand-alone Large Generating Facility or differently from any other portion of the Large Generating Facility, (iii) Co-Tenants shall act as a single entity in undertaking the obligations of Interconnection Customer under the LGIA, (iv) CAISO and SCE shall treat all Co-Tenants comprising the Interconnection Customer as a single entity under the LGIA and bear no obligation or responsibility to any individual Co-Tenant and (v) performance of the Interconnection Customer's obligations under the LGIA shall not be excused by reason of any other Co-Tenant's failure to agree with respect to any obligation of the Interconnection Customer hereunder or thereunder.
      8. 	Notices. Section 5.1 is amended by adding the following sentence to the end of thereof:
      	Any notice, demand or communication delivered to RST III under this Agreement shall be delivered with a copy to:
JPM Capital Corporation
10 South Dearborn, 12th Floor
Mail Code ILI 0502
Chicago, Illinois 60603-2003
Attention:  President
Telephone:  (312) 732-3416
            Email:  jpmcc.energy@jpmorgan.com 
Bankers Commercial Corporation
445 South Figueroa Street, G14-200
Los Angeles, CA 90071
Attn:  2015 Vento XIII Account Officer
      9.	Amendments to Exhibits. The Agreement is hereby amended by attaching Exhibit 1 to this Amendment as Exhibit B (Dispute Resolution provisions) to the Agreement 
      10.	No Other Amendment.  Except as expressly set forth in this Amendment, the Agreement is unmodified and continues in full force and effect.  From and after the date hereof, references to the Agreement will be understood to refer to the Agreement as amended by this Amendment.
      11.	Governing Law. This Amendment shall be governed by, construed and enforced in accordance with the laws of the State of California, without regard to principles of conflict of laws.
      12.	Counterparts. This Amendment may be executed in one or more counterparts, each of which will be an original but all of which, taken together, will constitute only one legal instrument. It will not be necessary in making proof of this Amendment to produce or account for more than one counterpart.
[The next page is the signature page.]
  To evidence its acceptance of this Amendment, and intending to be legally bound, each Co-Tenant has caused its authorized representative to sign below as of the date first written above.
Rising Tree Wind Farm LLC


	
By:
Title:


	
By:
Title:

Rising Tree Wind Farm II LLC


	
By:
Title:


	
By:
Title:

Rising Tree Wind Farm III LLC


	
By:
Title:


	
By:
Title:
         
         
EXHIBIT 1
EHIBIT B

DISPUTE RESOLUTION PROCEDURES


         1.	Consideration by the Authorized Representatives.
  All questions concerning interpretation of this Agreement, the acceptable fulfillment of the Co-Owners' respective obligations hereunder, as well as all other questions regarding this Agreement in each case that cannot readily be resolved by the Co-Owners shall be resolved in accordance with this Exhibit E.  In the event that the authorized representatives of the Co-Owners cannot reach agreement on any question arising under this Agreement, such dispute shall be referred to senior officers of the Co-Owners pursuant to Paragraph 2 below.
         2.	Negotiations by Senior Officers.
  Any disputes arising pursuant to this Agreement that cannot be resolved by the authorized representatives of the Co-Owners within fourteen (14) days after receipt of notice of such dispute (specifically referencing this Exhibit B) shall be referred to the vice president or other senior officer of each of the Co-Owners having executive responsibility for such Co-Owner's Facility.  If such senior officers, negotiating in good faith, fail to reach an agreement within a reasonable period of time, not exceeding twenty (20) days after such referral, then any Co-Owner to such dispute may institute proceedings as set forth in Paragraph 3 below.
         3.	Formal Dispute Resolution.
  (a)	If a dispute described in Paragraph 2 is not resolved by the executive management of the Co-Owners, the Co-Owners shall engage in non-binding mediation of such dispute.  Such mediation shall be conducted (i) in Houston, Texas, (ii) within thirty (30) days of a Co-Owner instituting dispute resolution under this Paragraph 3, (iii) by a single, impartial mediator who is selected by the mutual agreement of the Co-Owners, and (iv) in accordance with such procedures as may be adopted by such mediator.  Such mediation shall not, without the express agreement of the Co-Owners at the time, extend for a period of more than two (2) days.  Each Co-Owner may be represented by persons of such Co-Owner's choice during such mediation.  Nothing herein shall be deemed to grant any mediator the authority to impose a resolution of any dispute being mediated.  Any information introduced, proposals made or positions taken in the mediation shall be deemed to be confidential and for settlement purposes only and may not be introduced by the other Co-Owner in any subsequent litigation of the matters subject to mediation.  The Co-Owners shall share the costs of the mediator, including any fees and meeting room rentals.
  (b)	If a dispute described in Paragraph 2 is not resolved by the executive management of the Co-Owners and the Co-Owners have not otherwise resolved such dispute through mediation pursuant to Paragraph 3(a), a Co-Owner may submit the matter at issue for resolution in an action brought before the courts of the State of California in Kern County or in the United States District Court for the Eastern District of California, which courts shall have non-exclusive jurisdiction with respect to such matters.  FOR PURPOSES OF THE FOREGOING, BY EXECUTION OF THIS AGREEMENT, EACH CO-OWNER HEREBY IRREVOCABLY ACCEPTS FOR ITSELF AND IN RESPECT OF ITS PROPERTY, GENERALLY AND UNCONDITIONALLY, THE NON-EXCLUSIVE JURISDICTION OF SUCH COURTS AND EACH CO-OWNER HEREBY CONSENTS TO THE SERVICE OF PROCESS OUT OF ANY SUCH ACTION OR PROCEEDING BY THE MAILING OF COPIES THEREOF BY REGISTERED OR CERTIFIED MAIL, POSTAGE PREPAID, TO SUCH PERSON IN ACCORDANCE WITH THE NOTICE PROVISIONS OF THIS AGREEMENT.
  4.	Specific Performance.  Notwithstanding anything to the contrary contained in this Agreement, if, due to a material breach or threatened material breach or default or threatened default, a Co-Owner is suffering or will suffer irreparable harm for which monetary damages are inadequate, such Co-Owner may petition a court of competent jurisdiction for injunctive relief, specific performance or other equitable relief.
  5.	Continuing Obligations.  Notwithstanding the foregoing, all terms, conditions, and obligations of the Co-Owners contained in this Agreement shall continue and remain in effect during the course of any dispute resolution, or other proceeding pursuant hereto, and each of the Co-Owners shall proceed with performance of its obligations pending the resolution of the question, dispute or claim.
  6.	Matters Not Subject to Dispute Resolution.  Notwithstanding anything to the contrary in this Agreement, no dispute that concerns a matter, decision or other issue that is to be decided by a Co-Owner acting in its sole discretion shall be subject to the dispute resolution provisions of this Exhibit B.



 

1


EXECUTION VERSION 




TABLE OF CONTENTS
(continued)
Page


-ii-



TABLE OF CONTENTS

Page


-i-





	17

 




3


















EXECUTION VERSION</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>557</filing_id>
      <filing_title>Amended Co-Tenancy Agmnt</filing_title>
      <filing_type>30</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2015-08-29</current_effective_date>
      <ferc_order_date>2015-08-19</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
  </ferc_filing_data>
</Document>