<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Document xmlns="http://ferc.gov/etariffExport.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ferc_filing_data>
    <schema_version>2</schema_version>
    <company_id>C011641</company_id>
    <lead_applicant_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
    <tariff_id>41</tariff_id>
    <tariff_title>Statement of Operating Conditions</tariff_title>
    <tariff_export_date>2025-09-16T20:54Z</tariff_export_date>
    <export_schema_version>2</export_schema_version>
    <record_data>
      <record_id>1106</record_id>
      <option_code>A</option_code>
      <record_title>Statement of Operation Conditions</record_title>
      <record_content_desc xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_version_num>0.1.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>1000</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2022-09-14</proposed_effective_date>
      <priority_order>600</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>STATEMENT OF OPERATING CONDITIONS    of    Midland-Permian Pipeline LLC          For Natural Gas Transportation Services under 18 C.F.R. Part 284, Subpart C      VERSION 0.1.0    Effective September 14, 2022      eTariff Information:   Tariff Submitter: Midland-Permian Pipeline LLC  FERC Tariff Program Name: NGPA 311  Tariff Title: Statement of Operating Conditions of Midland-Permian Pipeline LLC  Tariff Record Proposed Effective Date: September 14, 2022  Tariff Record Title: NGPA Section 311, Statement of Operating Conditions   Option Code: A  For Intrastate Transportation Service and Service under 18 C.F.R. Part 284, Subpart C      TABLE OF CONTENTS  SECTION PAGE    STATEMENT OF RATES 1  1. PRELIMINARY STATEMENT 2  2. DEFINITIONS 2  3. SERVICES, RATE ELECTION, AND CHARGES 8  4. OPERATING PROVISIONS 10  5. LAWS AND REGULATIONS 11  6. REQUEST FOR A TRANSPORTATION AGREEMENT 12  7. PRIORITY OF SERVICE 13  8. CURTAILMENT 16  9. POINT(S) OF RECEIPT AND DELIVERY 16  10. PRESSURE 17  11. TITLE AND RISK OF LOSS 17  12. NOTICES 18  13. TERM 18  14. INDEMNIFICATION AND LIMITATION OF LIABILITY 18  15. QUALITY AND MEASUREMENT 19  16. BALANCING AND PENALTIES 23  17. NOMINATIONS AND SCHEDULING 23  18. FORCE MAJEURE 26  19. BILLING AND PAYMENT 27  20. ASSIGNMENT 28  21. CREDITWORTHINESS 29  22. TAXES AND GOVERNMENTAL FEES 30  23. MEDIATION 31  EXHIBIT 1 FORM OF REQUEST FOR TRANSPORTATION AGREEMENT 32  EXHIBIT 2 FORM OF LETTER OF CREDIT 36              STATEMENT OF RATES      Transporter's maximum and minimum rates for transportation service pursuant to Section 311(a)(2) of the NGPA, effective September 14, 2022:      Firm Transportation Service: Maximum (per MMBtu)      Minimum (per MMBtu)  Demand Rate (Daily):  $0.07   $0.00  Usage: $0.0025  $0.00      Interruptible Transportation Service:  Commodity Rate:  $0.0725   $0.0025          Fuel:      Shipper shall pay its pro rata share of Fuel (or "Shipper's Allocated Fuel", as defined hereinafter).        1. PRELIMINARY STATEMENT  1.1 Midland-Permian Pipeline LLC ("Transporter") owns and operates a natural gas transmission pipeline that is located wholly within the State of Texas, and is subject to the regulatory jurisdiction of the Railroad Commission of Texas ("RRC"). Transporter is also classified as an "intrastate pipeline" within the meaning of the Natural Gas Policy Act of 1978, as amended ("NGPA") and Part 284 of the regulations of the Federal Energy Regulatory Commission (such agency and any successor thereto, "FERC").  1.2 Transporter utilizes its Pipeline System to provide firm and interruptible transportation services. This Statement of Operating Conditions ("Statement" or "SOC") describes the administrative and operational policies and procedures of Transporter regarding the transportation services Transporter provides for any eligible Shipper under NGPA Section 311 and under any Transportation Agreement specifically referencing this SOC. All Transportation Agreements for such services are hereby expressly made subject to this SOC, as it may be amended from time to time.  1.3 It is the policy of Transporter to consider all service requests in light of its existing commitments, pipeline design capacity, available pipeline capacity, available capacity at the Points of Receipt and at the Points of Delivery, operating conditions, and other factors deemed material by Transporter, in its judgment. Transporter reserves the right to vary from these policies and procedures when commercial, operational, or safety conditions dictate, provided that such variations are not unduly discriminatory to any other similarly-situated Shipper.  If any conflict arises between the provisions of this SOC and a Transportation Agreement, the provisions of this SOC will control with regard to such conflict.  1.4 Transporter reserves the right, but not the obligation, to revise this SOC to adopt any or all standards heretofore or hereafter adopted by the North American Energy Standards Board, or to make any other revisions Transporter deems appropriate. Upon revision to this SOC, Transporter will make notice thereof available to each Shipper via its "NOTICES" E-mail address set forth in such Shipper's Transportation Agreement.    1.5  If Transporter's status as an intrastate pipeline that is exempt from regulations as a "natural-gas company" under the Natural Gas Act of 1938, as amended, is impacted by virtue of any change in statutes, regulations, or other applicable law of any kind, then Transporter reserves the right to terminate all transportation services under NGPA Section 311 and all Service Agreements and applicable Service Orders related thereto, and to withdraw this Statement of Operating Conditions, all effective on the Day before the effective date of any such change in statutes, regulations, or other applicable law.   2. DEFINITIONS  Except as otherwise specified, the following terms, as used herein and in the Transportation Agreement, will be construed to have the following scope and meaning:  2.1 An "Affiliate" of any person or entity is defined as any other person or entity directly or indirectly controlling, controlled by or under common control with such person or entity. The term "control" as used in this definition means the direct or indirect right to elect or cause to be elected a majority of the directors of a corporation, or corresponding managing body for other forms of business organizations, through the ownership of shares, or other equity interests which carry full voting or operational control rights, or by contract, as applicable, under all circumstances.  2.2 "British Thermal Unit" or "Btu" means the quantity of heat required to raise the temperature of one (1) pound of water ("H2O"), from fifty-eight and five-tenths degrees (58.5 ) to fifty-nine and five-tenths degrees (59.5 ) Fahrenheit. "MMBtu" means one million (1,000,000) Btus.  2.3 "Business Day" means any day, Monday through Friday, from 8:00 a.m. to 5:00 p.m. CCT, excluding United States federal banking holidays and Texas state holidays.  2.4 "Central Clock Time" or "CCT" means Central Standard Time or Central Daylight Savings Time, as applicable when adjusted for changes between Standard to Daylight Savings Time.  2.5 "Constrained Point" has the meaning ascribed to such term in Section 7.1.  2.6 "Contract Year" means the twelve (12) Month period beginning on the effective date of the Transportation Agreement and each subsequent twelve-month period thereafter during the contract term.  2.7 "Credit Rating" means, with respect to an entity on any date of determination, the rating then assigned to such entity's unsecured and senior, unsubordinated, long-term debt obligations (not supported by third-party credit enhancement) by S&amp;P, Moody's, or Fitch.  2.8 "Credit Support Provider" means an entity providing a Guaranty, whose lowest Credit Rating is at least BBB- by S&amp;P or Fitch or Baa3 by Moody's.  2.9 "Day" means a period of twenty-four (24) consecutive hours, beginning at 9:00 a.m. CCT on any day and ending at 9:00 a.m. CCT the following day; references to "daily" are understood to be based on a Day.  2.10 "Dry" means having a water vapor content of less than seven (7) pounds per Mcf.  2.11 "E-mail" means electronic mail.  2.12 "Equivalent Quantity" means quantities of Gas that are thermally-equivalent.  2.13 "FERC" means the Federal Energy Regulatory Commission and any successor agency.  2.14 "Firm, Firm Service, Firm Transportation Service, or (FT)" means transportation service that has the highest priority of transportation service offered by Transporter, is not subject to a prior claim by another customer or another class of service and receives the same priority as any other class of firm service.  2.15 "Firm Shipper" means a Shipper holding Firm transportation rights.  2.16 "First-of-Month Nomination" has the meaning ascribed to such term in Section 17.3.  2.17 "Five-Week Period" means a period beginning on the first Tuesday of the calendar Month for which the High Cashout Index or Low Cashout Index, as applicable, is established and ending on the first or second Monday of the following Month, whichever is applicable, to arrive at a five-week period.  2.18 "Force Majeure" has the meaning ascribed to such term in Section 18.  2.19 "Fuel" shall mean a) all actual fuel or fuel equivalents (including electricity or other energy sources), utilized to transport gas on Transporter's Pipeline System, and b) gas that is lost and unaccounted for in Transporter's Pipeline System.  2.20 "Gas" means any mixture of hydrocarbons or of hydrocarbons and noncombustible gases in a gaseous state consisting essentially of methane that meets the quality standards contained in Section 15.  2.21 "Governmental Fees" has the meaning ascribed to such term in Section 22.  2.22 "Gross Heating Value" means the number of Btus liberated by the complete combustion at constant pressure of one (1) cubic foot of gas, at a base temperature of sixty degrees Fahrenheit (60  F) and a reference pressure base equal to fourteen and sixty-five hundredths (14.65) Psia, with air of the temperature and pressure of the Gas, after the products of combustion are cooled to the initial temperature of the Gas, and after the H2O of the combustion is condensed to the liquid state. The Gross Heating Value of the Gas will be corrected for the H2O vapor content of the gas being delivered.  2.23 "Guaranty" means a guaranty of the obligations of Shipper, which is provided by Guarantor, in favor of Transporter, with such form of guaranty being acceptable to Transporter in its reasonable discretion.  2.24 "Guarantor" means the entity, either a Credit Support Provider or another entity acceptable to Transporter, in Transporter's reasonable discretion, providing the Guaranty to Transporter on behalf of Shipper.  2.25 "High Cashout Index" means a price equal to the highest arithmetic average of the daily "Midpoint" prices for each week of the Five-Week Period, as such "Midpoint" prices are published by S&amp;P Global Platts in Gas Daily in its Final Daily Price Survey with respect to each Day of the relevant week under the headings "Southwest," "Waha".  In the event the aforementioned index is no longer published, or for any other reason, the Parties may agree upon and set forth in the applicable Transportation Agreement a substitute publication(s) providing equivalent data or an alternate index price to be applicable for imbalance cashout. For any Day in which the index price, as set forth herein or in the applicable Transportation Agreement, is not published or available, Transporter will use its reasonable discretion to set a price consistent with the market price for that Day.    2.26 "Imbalance" has the meaning ascribed to such term in Section 16.1.  2.27 "Interruptible, Interruptible Service, Interruptible Transportation Service, (IT) or IT Service" means service that is subject to interruption by Transporter, without liability, as set forth herein, and shall have the priority as specified in Sections 7 and 8 of this Statement.  2.28 "Intraday Nomination" means a nomination submitted to and confirmed by Transporter after the nomination deadline for the Timely Nomination Cycle.  2.29 "Laws" has the meaning ascribed to such term in Section 5.2.  2.30 "Low Cashout Index" means a price equal to the lowest arithmetic average of the daily "Midpoint" prices for each week during each Five-Week Period as such "Midpoint" prices are published by S&amp;P Global in Gas Daily in its Final Daily Price Survey with respect to each Day of the relevant week under the headings "Southwest," "Waha".  In the event the aforementioned index is no longer published, or for any other reason, the Parties may agree upon and set forth in the applicable Transportation Agreement a substitute publication(s) providing equivalent data or an alternate index price to be applicable for imbalance cashout. For any Day in which the index price, as set forth herein or in the applicable Transportation Agreement, is not published or available, Transporter will use its reasonable discretion to set a price consistent with the market price for that Day.    2.31 "MAOP" means Maximum Allowable Operating Pressure.  2.32 "Maximum Daily Quantity" or "MDQ" means the maximum aggregate quantity, in MMBtus, of Gas per Day that Transporter shall have agreed to receive at the Point(s) of Receipt and transport and redeliver at all Point(s) of Delivery to or for the account of Shipper on any Day under a Transportation Agreement, less Fuel, such MDQ to be as agreed upon and set forth in Shipper's Transportation Agreement.    2.33 "Maximum Delivery Obligation" or "MDO" means the maximum quantity, in MMBtu, of Gas per Day, that Transporter shall be obligated to deliver to Shipper at each Primary Point of Delivery and Secondary Point of Delivery, with each MDO at each particular Point of Delivery to be as set forth in the Transportation Agreement; the aggregate sum of all MDO quantities for all Point(s) of Delivery designated in the Transportation Agreement shall not exceed the Maximum Daily Quantity, less Fuel.  2.34 "Maximum Receipt Obligation" or "MRO" means the maximum quantity, in MMBtus, of Gas per Day, that Transporter shall be obligated to receive from Shipper at each Primary Point of Receipt and Secondary Point of Receipt, with each MRO at each particular Point of Receipt to be as set forth in the Transportation Agreement; regardless of the aggregate sum of all MRO quantities for all Point(s) of Receipt designated in the Transportation Agreement, Transporter shall not be obligated to receive Gas in excess of the MDQ.  2.35 "Mcf" equals the volume of gas that occupies one thousand (1,000) cubic feet at a temperature of 60 degrees Fahrenheit, a pressure of 14.65 Psia, and Dry.  2.36 "MMBtu" shall mean a quantity of Gas having a Gross Heating Value of one million (1,000,000) Btu.  2.37 "MMcf" means one million (1,000,000) cubic feet.  2.38 "Month" means the period beginning at 9:00 a.m. Central Clock Time on the first Day of a calendar month and ending at 9:00 a.m. Central Clock Time on the first Day of the next succeeding calendar month; references to "Monthly" are understood to be based on a Month.  2.39 "Moody's" means Moody's Investors Service, Inc., and any successor thereto.  2.40 "NGA" means the Natural Gas Act of 1938, as amended.  2.41 "Negative Imbalance" has the meaning ascribed to such term in Section 16.2.2.   2.42 "New Taxes" has the meaning ascribed to such term in Section 22.  2.43 "NGPA" means the Natural Gas Policy Act of 1978, as amended.  2.44 "NGPA Section 311" means Section 311 of the NGPA, 15 U.S.C. 3371 (2012).     2.45 "Notice" has the meaning ascribed to such term in Section 12.  2.46 "Party" means a party to a Transportation Agreement, either Shipper or Transporter; "Parties" means both such parties collectively.  2.47 "Pipeline System" means the intrastate natural gas pipeline system described in Section 1.1 that Transporter uses to provide transportation services subject to this SOC.  2.48 "Point of Delivery" or "Point(s) of Delivery" means the outlet flange at the point or points where Gas that is delivered by Transporter to or for the account of Shipper exits the Pipeline System, or such other point or points on Transporter's system where Gas is transferred from the account of one Shipper to the account of another Shipper, such point or points to be as specifically agreed upon in the applicable Transportation Agreement, and when more than one Point of Delivery is agreed upon in the applicable Transportation Agreement, the applicable Point of Delivery shall be as nominated by Shipper and confirmed by Transporter according to the nomination procedures set forth in this SOC.  For Firm Service, Point(s) of Delivery will include a Primary Point of Delivery and may include Secondary Points of Delivery.  2.49 "Point of Receipt" or "Point(s) of Receipt" means the inlet flange at the point or points where Gas that is delivered by or for the account of Shipper enters the Pipeline System, or such other point or points on Transporter's system where Gas is transferred from the account of one Shipper to the account of another Shipper, such point or points to be as specifically agreed upon in the applicable Transportation Agreement, and if more than one Point of Receipt is agreed upon in the applicable Transportation Agreement, the applicable Point of Receipt shall be as nominated by Shipper and confirmed by Transporter according to the nomination procedures set forth in this SOC.  For Firm Service, Point(s) of Receipt will include a Primary Point of Receipt and may include Secondary Points of Receipt.  2.50 "Point Operator" means the operator of a facility that is interconnected with Transporter's Pipeline System.  2.51 "Positive Imbalance" has the meaning ascribed to such term in Section 16.2.1.     2.52 "Primary Point of Delivery" means the Point of Delivery on the Pipeline System listed as a Primary Point of Delivery under a Transportation Agreement with a specified Firm MDO, as may be amended, from time to time, upon mutual agreement between Transporter and Shipper.    2.53 "Primary Path" means the portion of the Pipeline System capacity physically located between the designated Primary Point of Delivery and Primary Point of Receipt.    2.54 "Primary Point of Receipt" means the Point of Receipt on the Pipeline System listed as a Primary Point of Receipt under a Transportation Agreement with a specified Firm MRO, as may be amended, from time to time, upon mutual agreement between Transporter and Shipper.  2.55 "Psia" means pounds per square inch absolute.  2.56 "RRC" means the Railroad Commission of Texas, and includes any successor agency.  2.57 "Secondary Point of Delivery" or "Secondary Points of Delivery" means any Points of Delivery on the Pipeline System listed as Secondary Point(s) of Delivery under a Transportation Agreement for use on an as-available basis with the priority of service listed under Section 7.  2.58 "Secondary Point of Receipt" or "Secondary Points of Receipt" means any Points of Receipt on the Pipeline System listed as Secondary Point(s) of Receipt under a Transportation Agreement for use on an as-available basis with the priority of service listed under Section 7.  2.59 "Shipper" means the party that holds lawful right or title to the Gas that is being transported, and which executes a Transportation Agreement with Transporter.  2.60 "Shipper Indemnified Parties" has the meaning ascribed to such term in Section 14.1  2.61 "Shipper's Allocated Fuel" shall mean Shipper's pro rata share of Fuel.  2.62 "S&amp;P" means Standard &amp; Poor's Corporation and any successor thereto.  2.63 "Standing Nominations" mean Shipper nominations, excluding Intraday Nominations, for one or more Days in a given Month, up to and including the last Day of the specific Month, provided the nomination begin and end dates are within the term of Shipper's contract.  2.64 "Statement" or "SOC" means this Statement of Operating Conditions describing the administrative and operational policies and procedures of Transporter regarding the transportation services Transporter provides for any eligible Shipper under Section 311 of the NGPA and FERC's implementing regulations and under any Transportation Agreement that makes specific reference to this SOC.  2.65 "Taxes" has the meaning ascribed to such term in Section 22.  2.66 "Transportation Agreement" or "TA" means the duly executed agreement entered into between Shipper and Transporter for Gas transportation service provided pursuant to the terms and conditions of this Statement.  2.67 "Transporter" means Midland-Permian Pipeline LLC.  2.68 "Transporter Indemnified Parties" has the meaning ascribed to such term in Section 14.1.  2.69 "Year" means a period of 365 days; provided, however, that any year with the date of February 29 shall have 366 days.  3. SERVICES, RATE ELECTION, AND CHARGES  3.1 Service Availability. Gas transportation service on the Pipeline System will be available pursuant to the FERC's regulations set forth in 18 C.F.R. Part 284, Subpart C, or pursuant to a Transportation Agreement that makes specific reference to this SOC to any party that requests such transportation service when:        3.1.1 Shipper has complied with all service request requirements set forth in Section 6 of this SOC;        3.1.2 the Pipeline System has sufficient capacity and is able to provide such service during the time period requested; and        3.1.3 Shipper and Transporter have executed a Transportation Agreement with regard to such transportation service.        Nothing in this SOC shall be deemed to obligate Transporter to render any service for any Shipper until a Transportation Agreement has been entered into and duly executed by both Parties. Additionally, Transporter shall not be required to provide any service if: (i) Transporter determines, based on its credit analysis, that the requesting party does not satisfy or no longer satisfies Transporter's credit requirements; (ii) the service requested would require the construction, modification, expansion, or acquisition of any facility; (iii) Transporter lacks adequate capacity or deliverability to provide the requested service; or (iv) the service requested would not comply with the SOC then in effect or the applicable Transportation Agreement. Transporter will determine whether to allow (and under what design or other conditions to allow), additional interconnections, on a non-discriminatory basis.  3.2 Rate Election. Transporter has elected to base its currently-effective rates for Gas transportation service rendered under Section 311(a)(2) of the NGPA upon the methodology provided in 18 C.F.R.   284.123(b)(1) of the FERC's regulations. The maximum rates for Firm and Interruptible NGPA Section 311 transportation service hereunder shall be the applicable maximum rates for the corresponding intrastate Gas transportation service established by the RRC, as those rates may change from time to time. Transporter reserves the right to seek regulatory approval of higher maximum rates for such NGPA Section 311 service during the term of any Transportation Agreement entered into pursuant hereto, and the rates applicable under such Transportation Agreement shall be revised to equal the maximum rates eventually approved. Notwithstanding this provision, Transporter and Shipper may mutually agree upon a discounted rate or rates that varies or vary from the maximum rate established as described in this Section 3.2.  3.3 Services.        3.3.1 Firm Transportation Service ("FT Service").  Subject to this SOC and the applicable Transportation Agreement, Shipper shall cause to be delivered, and Transporter shall receive from Shipper, on each Day quantities of Gas at the Point(s) of Receipt, and Transporter shall transport and deliver, and Shipper shall cause to be received, an Equivalent Quantity of Gas, less Fuel, at the Point(s) of Delivery, such receipts and deliveries to be as nominated by Shipper and confirmed and scheduled by Transporter pursuant to Section 17 below, and being at all times subject to Shipper's MDQ, MDO, and MRO.  Firm Service shall not be subject to curtailment and/or interruption except as provided in this SOC.        Shipper shall pay the following FT rates and charges, calculated as follows:  A. Demand Charge:  A Monthly reservation charge equal to the product of the applicable Demand Rate (stated on a per Day basis), which shall be the maximum approved rate unless otherwise agreed in writing by Shipper and Transporter, multiplied by the MDQ multiplied by the number of Days in such Month, as specified in the Transportation Agreement.  B. Commodity Charge: A Monthly volumetric charge equal to the product of the applicable Commodity Rate multiplied by each MMBtu of Gas delivered or received by Transporter for Shipper's account during each such Month.  C. Fuel Reimbursement: The amount of Gas for Fuel determined in accordance with Section 3.6 below.  The availability of FT Service will be limited by Transporter's determination as to whether it has sufficient available and uncommitted capacity to perform the service requested by Shipper. FT Service shall not be available from Transporter if capacity on pipeline segment(s), at Point(s) of Receipt, or at Point(s) of Delivery has been fully committed to other shipper(s).        3.3.2 Interruptible Transportation Service ("IT Service"). Subject to this SOC and the applicable Transportation Agreement, Shipper shall cause to be delivered, and Transporter shall receive from Shipper, on each Day quantities of Gas at the Point(s) of Receipt, and Transporter shall transport and deliver, and Shipper shall cause to be received, an Equivalent Quantity of Gas, less Fuel, at the Point(s) of Delivery, such receipts and deliveries to be as nominated by Shipper and confirmed and scheduled by Transporter pursuant to Section 17 below. IT Service shall be subject to curtailment and/or interruption as provided in Sections 7 and 8 of this SOC.        IT Service shall be subject to the following IT Service charges, calculated as follows:   A. Commodity Charge: A Monthly volumetric charge equal to the product of the applicable Commodity Rate multiplied by each MMBtu of Gas that Transporter receives at the Point(s) of Receipt for Shipper's account during such Month.  B. Fuel Reimbursement:  The amount of Gas for Fuel determined in accordance with Section 3.6 below.        3.3.3 Excess Receipt Quantities.  If Shipper has quantities of Gas available on any Day for delivery to Transporter in excess of Shipper's MDQ, Shipper may tender such excess Gas for delivery to Transporter, and Transporter may accept or refuse delivery of all or any part of such excess Gas.  Any excess Gas so accepted by Transporter: (i) will be transported on an Interruptible basis; (ii) will be subject to all of the terms and provisions of the Transportation Agreement; and (iii) will be subject to the Commodity Rate and Fuel for IT Service, unless Transporter and Shipper mutually agree upon a discounted rate.    3.4 Limitations on Availability of Services.  Transporter's obligations to receive, transport, and deliver Gas to the Point(s) of Delivery are subject to (i) availability of capacity, as determined by Transporter, in its exercise of reasonable judgment; (ii) an event of Force Majeure; (iii) Shipper's failure or refusal to deliver Gas to or receive Gas from Transporter as required under the SOC and the applicable Transportation Agreement, (iv) any Laws, rules, orders, or requirements of any governmental or regulatory authorities that limit, prevent, or interfere with Transporter's performance; and (v) as otherwise provided under any other terms and conditions in this SOC and the applicable Transportation Agreement.    3.5 Incremental Facilities. Transporter shall not be required to provide any requested transportation service which would require construction or acquisition by Transporter of any new facilities or expansion of Transporter's existing facilities. Transporter, in its reasonable discretion, may agree to construct or acquire new facilities, or expand existing facilities, to provide service requested by any Shipper(s). In such event, the requesting Shipper(s) shall reimburse Transporter for the total incremental cost of the new facilities or expansion of existing facilities, unless otherwise mutually agreed in writing. The design and installation of all facilities shall be in accordance with the specifications determined by Transporter in its discretion, exercised reasonably.  3.6 Fuel Calculation. Each Month, Transporter shall calculate Shipper's Allocated Fuel, and shall include such calculation in Shipper's Monthly statement; provided, however, that Fuel will be deducted from deliveries made to Shipper on each Day.  4. OPERATING PROVISIONS  4.1 Deliveries and Receipts of Gas; Balancing.  Shipper shall deliver or cause to be delivered to Transporter at the Point(s) of Receipt any Gas which Shipper desires to have transported and which Transporter has agreed to transport. Shipper shall also receive or cause to be received Gas delivered by Transporter at the Point(s) of Delivery.  To protect the integrity of its Pipeline System or to meet its obligations to other shippers, Transporter shall have the right to require Shipper to balance its receipts and deliveries at any time, without liability to Transporter.  4.2 Services Specific to Individual Transportation Agreements.  If Shipper has multiple Transportation Agreements with Transporter, Shipper shall not be permitted to combine services available under such Transportation Agreements. Specifically, Gas shall be received under a particular Transportation Agreement and shall be delivered under that same Transportation Agreement.  4.3 Intrastate Service. Gas transported by Transporter for Shipper under a Transportation Agreement shall either be received, transported and delivered in intrastate commerce or shall meet the requirements for NGPA Section 311 service (as provided in Section 4.4). For all Gas delivered to Transporter for redelivery to an intrastate pipeline, Shipper represents and warrants to Transporter that all such Gas will have been produced in the State of Texas and shall be Gas which has not been and shall not be transported, sold, exchanged, used or consumed in interstate commerce in any manner which will subject the Gas transported, or Transporter's Pipeline System, or any portion thereof, to the jurisdiction of the FERC or any successor authority, under the Natural Gas Act of 1938, as amended. Shipper agrees to indemnify and hold Transporter harmless from and against any and all consequences, suits, actions, damages, costs, losses, and expenses of any kind or nature (including, without limitation, attorneys' fees) sustained by Transporter relative to any breach by Shipper of the covenants expressed in this Section 4.3.  4.4 NGPA Section 311 Service. All Gas transported by Transporter for Shipper under a Transportation Agreement which is redelivered for transportation in interstate commerce is subject to the provisions of Subpart C of Part 284 of the FERC's regulations (18 C.F.R.    284.121, et seq.) implementing Section 311(a)(2) of the NGPA. Shipper represents and warrants to Transporter that all such Gas meets the "on behalf of" requirement set forth in 18 C.F.R.   284.122. Upon request, Shipper shall provide written evidence satisfactory to Transporter that: (i) the transportation service provided or to be provided under a Transportation Agreement is "on behalf of" an interstate pipeline or a local distribution company served by an interstate pipeline, and (ii) that such transportation service otherwise qualifies for transportation service pursuant to Section 311(a)(2) of the NGPA and the FERC's rules, regulations, and orders thereunder. Transporter shall have no obligation under Shipper's Transportation Agreement if Transporter, in its reasonable discretion, determines at any time that Shipper has breached the foregoing warranty(ies) or that the transportation service to be provided under a Transportation Agreement does not so qualify. Shipper agrees to indemnify and hold Transporter harmless from and against any and all consequences, claims, damages, losses, costs, and expenses of any kind or nature (including, without limitation, attorneys' fees) sustained by Transporter relative to any breach by Shipper of the representations, warranties, and/or covenants expressed in this Section 4.4.  5. LAWS AND REGULATIONS  5.1 Transporter's transportation services are subject to all present and future valid laws and lawful orders of all regulatory authorities now or hereafter having jurisdiction over the services or facilities used to provide such services.  5.2 In the event that any governmental authority or regulatory body having jurisdiction over the Transportation Agreement prohibits Transporter from collecting specific rates for the services provided under the Transportation Agreement or subjects its transportation facilities to any greater or different regulation or jurisdiction (whether by law, rule, regulation, order, or otherwise, including a different interpretation or application thereof (whether new or those in existence on the date of the Transportation Agreement), collectively, "Laws") than such Laws that existed on the date of the Transportation Agreement (or thereafter as such regulation or jurisdiction may have changed and been accepted), then Transporter shall have the right to terminate the Transportation Agreement on (or the Day prior to) the effective date of such greater or different regulation or jurisdiction, anything herein to the contrary notwithstanding, and shall have no further liability to Shipper or any other entity in connection with any such termination. Should Shipper or Transporter, by force of any Laws imposed at any time during the term of Shipper's Transportation Agreement, be rendered unable, wholly or in part, to carry out its obligations under the Transportation Agreement, other than to make payments due hereunder, either party shall have the right to terminate the Transportation Agreement.  5.3 Unless terminated under Section 5.2 as a result of a change in Laws, the Transportation Agreement shall continue and be deemed modified to the least extent necessary to conform to such requirements; the primary intent of any such modification being to retain, to the greatest extent possible, the bargain of the Transportation Agreement. The Transportation Agreement is expressly made subject to any and all tariff and other rate filings made by Transporter and approved by any federal or state regulatory body, as such may be amended from time to time. Transporter shall have the right to propose to the FERC, the RRC, or other governing regulatory body, such changes in its rates and terms of service at any time as it deems necessary. Furthermore, a Shipper's Transportation Agreement shall be deemed to include any changes which are made effective pursuant to Laws, without prejudice to Shipper's right to protest the same.  5.4 AS TO ALL MATTERS, ALL EXECUTED TRANSPORTATION AGREEMENTS SHALL BE GOVERNED BY THE LAWS OF THE STATE OF TEXAS, DISREGARDING ANY CONFLICTS OF LAWS PRINCIPLES THAT OTHERWISE WOULD REQUIRE REFERENCE TO THE LAWS OF A DIFFERENT JURISDICTION. ANY SUIT BROUGHT RELATING IN ANY WAY TO ANY EXECUTED TRANSPORTATION AGREEMENT SHALL BE BROUGHT IN EITHER THE FEDERAL OR STATE COURTS SITUATED IN HARRIS COUNTY, TEXAS. THE PARTIES HEREBY WAIVE, TO THE MAXIMUM EXTENT PERMITTED BY LAW, ANY DEFENSE OR RIGHT TO OBJECT TO VENUE IN THE COURTS LOCATED IN HARRIS COUNTY, TEXAS, WHETHER ON THE BASIS OF FORUM NON CONVENIENS OR OTHERWISE.  6. REQUEST FOR A TRANSPORTATION AGREEMENT  6.1 A Transportation Agreement is required for all services to be furnished hereunder. Any potential Shipper wishing to obtain services from Transporter shall submit in writing to Transporter a request for a Transportation Agreement. The potential Shipper shall provide information requested by Transporter necessary to examine such potential Shipper's request. If Transporter and the potential Shipper mutually agree to the rate(s) that the potential Shipper will pay for transportation service, then Transporter shall, subject to the execution of a Transportation Agreement, endeavor to provide service within the time specified in the written request. The potential Shipper's request for a Transportation Agreement shall be considered complete only if the information specified in Section 6.2 is provided in writing via U.S. first-class certified mail (return receipt requested), overnight courier, E-mail, or hand delivery by an independent third party to the address listed below.        Requests should be sent to: Midland-Permian Pipeline LLC  Attn: Contract Administration  Targa Resources  811 Louisiana, Suite 2100  Houston, Texas 77002  713-584-1000  pipelines_contractadmin@targaresources.com    6.2 Each request for service shall include the following information:        6.2.1 Potential Shipper's name, address, representative, telephone number, fax number, and E-mail address, if available;        6.2.2 Statement indicating whether potential Shipper will be taking NGPA Section 311 Gas transportation service, intrastate Gas transportation service or both;        6.2.3 For NGPA Section 311 Gas transportation service, a statement indicating the "on behalf of" entity(ies) that Shipper warrants meets the provisions of Section 284 of the FERC's regulations;        6.2.4 The type (FT or IT) and character of the service requested;         6.2.5 Points of Receipt (including the MRO for each) and Points of Delivery (including the MDO for each) for all services, specifying at least one Primary Point of Delivery and at least one Primary Point of Receipt;        6.2.6 MDQ for the requested Transportation Agreement;        6.2.7 Term of Transportation Agreement, including the date service is requested to commence and the date service is requested to terminate;        6.2.8 24-hour contact information for Shipper and Point Operator(s) at Shipper's requested Point(s) of Receipt and Point(s) of Delivery;        6.2.9 All credit information required by Transporter; and        6.2.10 Other requested provisions, such as quality specifications for Gas delivered upstream of a processing facility.  For the avoidance of doubt, to accommodate a Shipper requesting NGPA Section 311 Gas transportation service and intrastate Gas transportation service, Transporter will permit a Shipper to enter into multiple Transportation Agreements.  The MDQs set forth in the NGPA Section 311 Gas TA and the intrastate TA shall not be cumulative, but instead shall be complementary.  In this regard, to the extent a Shipper delivers Gas on a Firm basis under an NGPA Section 311 Gas TA, such deliveries shall also be deemed to satisfy the MDQ under the intrastate TA.  Likewise, to the extent a Shipper delivers Gas under an intrastate TA, such deliveries shall also be deemed to satisfy the MDQ under the NGPA Section 311 Gas TA.  6.3 Transporter shall have the right to reject any request for a Transportation Agreement that does not contain the required information set forth herein and shall have no liability to the potential Shipper or any other entity in connection with such rejection. If a Transportation Agreement is not fully executed by both Shipper and Transporter within thirty (30) Days of the date of Shipper's request for a Transportation Agreement, then the request shall automatically be deemed rejected.  6.4 Service requests by potential Shippers for Firm transportation shall be processed on a first-come, first-served basis. That is, capacity for Firm Service shall be allocated to the first Shipper with a valid request that contains in acceptable form items listed under Section 6.2, subject, however, at all times to Shipper's satisfaction of Transporter's credit appraisal requirements.  7. PRIORITY OF SERVICE  7.1 From time to time, Transporter may determine, in its reasonable discretion, that it does not have sufficient capacity to accommodate all nominations for service through a Point of Receipt, Point of Delivery, or segment of its Pipeline System ("Constrained Point"). In that event, Transporter will schedule or curtail service based on the following criteria:         7.1.1 Priority of Firm Service: Firm Service shall have the highest priority on Transporter's Pipeline System.  A. Firm Scheduling Priorities Through Points of Receipt: When the Constrained Point is a Point of Receipt, Transporter shall schedule service at such point(s) in the following order of priority:   1.  First to Firm Shippers utilizing a Primary Point of Receipt up to each Shipper's MRO at such point. If capacity at the Constrained Point is not adequate to provide full service to all such Firm Shippers, service will be scheduled pro rata based on each Shipper's MRO at that point.  2.  Followed by Firm Shippers utilizing Secondary Point(s) of Receipt within the Primary Path up to each Shipper's MRO at such point. If capacity at the Constrained Point is not adequate to provide full service to all such Firm Shippers, service will be scheduled pro rata based on each Shipper's MRO at that point.  3. Followed by Firm Shippers utilizing Secondary Point(s) of Receipt outside the Primary Path up to each Shipper's MRO at such point. If capacity at the Constrained Point is not adequate to provide full service to all such Firm Shippers, service will be scheduled pro rata based on each Shipper's MRO at that point.    B. Firm Scheduling Priorities Through Points of Delivery: When the Constrained Point is a Point of Delivery, Transporter shall schedule service at such point(s) in the following order of priority:  1. First to Firm Shippers utilizing a Primary Point of Delivery up to each Shipper's MDO at such point. If capacity at the Constrained Point is not adequate to provide full service to all such Firm Shippers, service will be scheduled pro rata based on each Shipper's MDO at that point.  2. Followed by Firm Shippers utilizing Secondary Point(s) of Delivery within the Primary Path up to each Shipper's MDO at such point. If capacity at the Constrained Point is not adequate to provide full service to all such Firm Shippers, service will be scheduled pro rata based on each Shipper's MDO at that point.  3. Followed by Firm Shippers utilizing Secondary Point(s) of Delivery outside the Primary Path up to each Shipper's MDO at such point. If capacity at the Constrained Point is not adequate to provide full service to all such Firm Shippers, service will be scheduled pro rata based on each Shipper's MDO at that point.    C. Scheduling Priorities Through Pipeline Segments: In the event Transporter has insufficient capacity on a segment of its Pipeline System to schedule all nominations for service, Transporter shall allocate the available capacity as outlined below:  1. First to Firm Shippers utilizing their Primary Path at the location of the allocation will be allocated pro-rata based on the Shippers' confirmed transportation nominations for that Day.  2. Followed by Firm Shippers not utilizing their Primary Path at the location of the allocation will be allocated pro-rata based on the Shippers' confirmed transportation nominations for that Day.             7.1.2 Priority and Scheduling of Interruptible Service. Interruptible transportation shall be scheduled when, and to the extent that, capacity is available in Transporter's Pipeline System after first scheduling all Firm Service and considering all Pipeline System operating requirements. Shippers taking Interruptible Service and paying the maximum rate shall have the highest priority among all Shippers nominating on any Day for Interruptible Service. Transporter may, but is not obligated, to schedule transportation at a discounted rate, and shall give priority from the least discount to the greatest discount. If two or more Shippers are paying the same rate for Interruptible Service and there is insufficient capacity to serve all Shippers paying such rate, Transporter shall schedule service pro rata based on the quotient of the quantity nominated by each Shipper at the Constrained Point divided by the total quantity nominated by all such Shippers sharing the priority.          7.1.3 Priority and Scheduling of Make-up Quantities. Make-up quantities to correct imbalances shall have the lowest priority of service on Transporter's Pipeline System. Priority within this class shall be determined on a first-come, first-served basis. For operational purposes, Transporter shall have the right to schedule make-up quantities at a higher priority, without liability to any Shipper or any other entity.  7.2 Transporter's application of the priorities hereunder shall be subject to the actions of other transporters delivering or receiving gas on behalf of Shippers.  7.3 Available capacity at any Point of Receipt, Point of Delivery, or any other point on or through Transporter's Pipeline System will be based on Transporter's sole evaluation of operating conditions on its Pipeline System, including, but not limited to, pipeline pressures, compression, interconnected pipeline pressures, limitations and capabilities, and other operating conditions as they exist from time to time. Available capacity may be limited at Transporter's reasonable discretion, based on operating conditions.  8. CURTAILMENT  8.1 Transporter shall have the right to curtail or interrupt transportation service on any portion of its Pipeline System at any time for reasons of Force Majeure, as defined in Section 18 or when Transporter makes modifications or repairs to, or performs maintenance or testing on, its Pipeline System. Transporter shall provide notice of such occurrences as is reasonable under the circumstances.  8.2 Any curtailment of service shall be in reverse order of priority as set forth in Section 7 of this Statement.  Further, in curtailing Interruptible Service, Transporter shall recognize all Pipeline System operating requirements and all qualities of service. For a Shipper taking Interruptible Service and paying a discounted rate may alter its priority of service by agreeing to pay the maximum rate or by accepting a lesser discount acceptable to Transporter. Such rate adjustment shall amend the Transportation Agreement and must be agreed to in writing by both parties prior to the Timely Nomination Cycle set forth in Section 17.  8.3 NOTWITHSTANDING ANYTHING TO THE CONTRARY HEREIN, TRANSPORTER SHALL NOT BE LIABLE FOR ANY LOSS OR DAMAGE TO ANY PERSON OR PROPERTY CAUSED, IN WHOLE OR IN PART, BY ANY INTERRUPTION OR CURTAILMENT OF SERVICE, EXCEPT TO THE EXTENT CAUSED BY TRANSPORTER'S GROSS NEGLIGENCE OR WILLFUL MISCONDUCT. SHIPPER AGREES TO INDEMNIFY AND HOLD HARMLESS TRANSPORTER AND ITS AFFILIATES, AND ITS AND THEIR OFFICERS, DIRECTORS, AGENTS, EMPLOYEES, AND CONTRACTORS OF ALL TIERS, FROM AND AGAINST ANY AND ALL CLAIMS, LIABILITIES, LOSSES, DAMAGES, COSTS, AND EXPENSES (INCLUDING, WITHOUT LIMITATION, ATTORNEYS' FEES) WHATSOEVER CLAIMED BY ANY PERSON OR ENTITY AS A RESULT OF OR ARISING OUT OF ANY INTERRUPTION OR CURTAILMENT OF SERVICE HEREUNDER FOR SHIPPER, WHETHER OR NOT CAUSED BY TRANSPORTER'S NEGLIGENCE, BUT NOT TO THE EXTENT CAUSED BY TRANSPORTER'S GROSS NEGLIGENCE OR WILLFUL MISCONDUCT.  9. POINT(S) OF RECEIPT AND DELIVERY  9.1 Shipper shall tender all Gas for transportation on Transporter's Pipeline System at the Point(s) of Receipt as specified in Shipper's Transportation Agreement. The quantity of Gas tendered by Shipper to Transporter at each Point of Receipt for transportation shall not exceed the Shipper's stated MRO for such Point of Receipt without the prior consent of Transporter.  9.2 Transporter shall tender all Gas to be delivered to Shipper at the Point(s) of Delivery as specified in Shipper's Transportation Agreement at such quantities as are scheduled.  Transporter shall deliver quantities of Gas to Shipper at each Point of Delivery in accordance with the applicable MDO at each such Point of Delivery, unless otherwise agreed by Transporter.  9.3 Shipper shall be responsible for transportation downstream from the Point(s) of Delivery, including the payment of all transportation charges relating thereto. Shipper shall be responsible for transportation and/or gathering services upstream of the Point(s) of Receipt, including the payment of all charges relating thereto. Transporter shall have no liability for any upstream or downstream services for the account of Shipper.  9.4 Firm Service Points of Receipt. Any Firm Shipper receiving Firm Service shall designate at least one receipt point in its Transportation Agreement as a Primary Point of Receipt. Each Point of Receipt shall have an MRO, and the sum of all MROs in the Transportation Agreement shall equal the MDQ of the Transportation Agreement.  A Firm Shipper may also, upon mutual written agreement between Transporter and Shipper, later add receipt point(s) (whether Primary or Secondary) at any time during the term of the Transportation Agreement. Further, a Firm Shipper may change its Point(s) of Receipt provided sufficient receipt point capacity is available at the newly requested Point of Receipt and subject to any operating constraints. Any addition or change to the Point(s) of Receipt as set forth herein must be mutually agreed upon in writing by Transporter and Shipper at least one (1) Business Day prior to Shipper nominating to the new Point(s) of Receipt.  9.5 Firm Service Points of Delivery. Any Firm Shipper receiving Firm Service shall designate at least one Point of Delivery in its Transportation Agreement as a Primary Point of Delivery.  Each Point of Delivery shall have a MDO, and the sum of all MDOs in the Transportation Agreement shall equal the MDQ of the Transportation Agreement. A Firm Shipper may also, upon mutual written agreement between Transporter and Shipper, later add delivery point(s) (Primary or Secondary) at any time during the term of the Transportation Agreement. Further, a Firm Shipper may change its Point(s) of Delivery provided sufficient delivery point capacity is available at the newly requested Point of Delivery and subject to any operating constraints. Any addition or change to the Point(s) of Delivery as set forth herein must be mutually agreed upon in writing by Transporter and Shipper at least one (1) Business Day prior to Shipper nominating to the new Point(s) of Delivery.  10. PRESSURE  Shipper shall deliver Gas to Transporter at the specified Point(s) of Receipt at pressures sufficient to allow the Gas to enter Transporter's Pipeline System but shall not deliver Gas at pressures that exceed the MAOP on Transporter's Pipeline System. Transporter shall not be obligated to deliver Gas to Shipper at pressures in excess of the MAOP on the Pipeline System at the Point(s) of Delivery. Except as specifically agreed in the Transportation Agreement, Transporter is under no obligation to modify its line pressures or to install additional facilities to permit the entry of Shipper's Gas into its Pipeline System. Transporter shall deliver Gas for Shipper's account at the pressures existing from time to time in Transporter's Pipeline System at the Point(s) of Delivery. Transporter shall use reasonable efforts to make adjustments to pressure to accommodate Shipper's receipt of Gas at the Point(s) of Delivery.  11. TITLE AND RISK OF LOSS  11.1 Shipper warrants for itself, its successors and assigns, that it will have good right to deliver or good title to all Gas delivered to Transporter under Shipper's Transportation Agreement and, further, to the fullest extent permitted by applicable law, Shipper shall indemnify and hold Transporter and its Affiliates, and its and their officers, directors, agents, and employees, harmless from and against any and all claims, taxes, charges, liabilities, losses, damages, liens and encumbrances, and costs and expenses (including, without limitation, reasonable attorneys' fees) arising directly or indirectly from or with respect to the title to Gas tendered by or on behalf of Shipper to Transporter under any Transportation Agreement.  11.2 Transporter shall be deemed to be in possession and control of the Gas delivered by Shipper upon and after Transporter's receipt and acceptance of such Gas after it passes the inlet flange at the Point(s) of Receipt and until the redelivered Gas passes the outlet flange at the Point(s) of Delivery to or for the account of Shipper. Shipper shall be deemed to be in possession and control of such Gas at all other times (Transporter having no responsibility with respect to the Gas before receipt at the Point(s) of Receipt or after delivery at the Point(s) of Delivery).  11.3 Title to all Gas delivered by Shipper to Transporter in accordance with Shipper's Transportation Agreement will remain with Shipper during transport by Transporter (other than Fuel, which shall pass to Transporter); provided, however, it is understood and agreed that the Gas delivered at the Point(s) of Delivery will not be the identical Gas that was delivered to Transporter for transportation hereunder, but such Gas will be a part of the commingled stream of Gas delivered by Transporter, and, for the purpose of Shipper's Transportation Agreement, the commingled Gas may be substituted for Gas received from Shipper at Point(s) of Receipt on an MMBtu-equivalent basis.  12. NOTICES  Any notice, request, demand, or statement ("Notice") regarding a Transportation Agreement, except as otherwise expressly provided herein or in the agreement, shall be given in writing by United States mail, overnight delivery service, courier service, or electronic mail ("E-mail") to the applicable Party at the address specified in the Transportation Agreement, or at such other address as a Party may furnish to the other Party in writing. Notice given by U.S. registered mail shall be deemed delivered on the date indicated by U.S. Postal Service "Signature Confirmation(tm)"; by U.S. certified mail, return receipt requested, on the date indicated on the return receipt; by U.S. first class mail, on the second Business Day after mailing; by E-mail, when delivery confirmed by "read-receipt" confirmation; or by hand delivery or courier service, on the Business Day delivered.  13. TERM  Service will be provided for an agreed-upon term, as set forth in each Transportation Agreement. Notwithstanding the foregoing or anything else herein or in any Transportation Agreement, Transporter shall have the right to terminate or suspend service immediately upon notice of such termination or suspension given to a Shipper in the event that Transporter, on a non-discriminatory basis, shall also concurrently terminate or suspend, as the case may be, all of its transportation services of the same type as that service which was terminated or suspended.  14. INDEMNIFICATION AND LIMITATION OF LIABILITY  14.1 TO THE FULLEST EXTENT PERMITTED BY APPLICABLE LAW, SHIPPER AGREES TO INDEMNIFY AND HOLD TRANSPORTER AND ITS AFFILIATES, AND ITS AND THEIR OFFICERS, DIRECTORS, AGENTS, EMPLOYEES, AND CONTRACTORS OF ALL TIERS ("TRANSPORTER INDEMNIFIED PARTIES"), HARMLESS FROM AND AGAINST ALL CLAIMS, LIABILITIES, LOSSES, DAMAGES, LIENS AND ENCUMBRANCES, AND COSTS AND EXPENSES (INCLUDING, WITHOUT LIMITATION, REASONABLE ATTORNEYS' FEES) RELATED TO, ARISING FROM OR WITH RESPECT TO THE GAS WHILE THE GAS IS IN SHIPPER'S EXCLUSIVE CONTROL AND POSSESSION, WHETHER OR NOT CAUSED BY THE NEGLIGENCE OF TRANSPORTER INDEMNIFIED PARTIES; PROVIDED, HOWEVER, SHIPPER SHALL NOT BE LIABLE FOR THE GROSS NEGLIGENCE OR WILLFUL MISCONDUCT OF TRANSPORTER INDEMNIFIED PARTIES. TO THE FULLEST EXTENT PERMITTED BY APPLICABLE LAW AND SUBJECT TO SHIPPER'S INDEMNITY CONTAINED IN SECTION 15.3, TRANSPORTER AGREES TO INDEMNIFY AND HOLD SHIPPER AND ITS AFFILIATES, AND ITS AND THEIR OFFICERS, DIRECTORS, AGENTS, EMPLOYEES, AND CONTRACTORS OF ALL TIERS ("SHIPPER INDEMNIFIED PARTIES"), HARMLESS FROM AND AGAINST ALL CLAIMS, LIABILITIES, LOSSES, DAMAGES, LIENS AND ENCUMBRANCES, AND COSTS AND EXPENSES (INCLUDING, WITHOUT LIMITATION, REASONABLE ATTORNEYS' FEES) RELATED TO, ARISING FROM OR WITH RESPECT TO THE GAS WHILE THE GAS IS IN TRANSPORTER'S EXCLUSIVE CONTROL AND POSSESSION, WHETHER OR NOT CAUSED BY THE NEGLIGENCE OF SHIPPER INDEMNIFIED PARTIES; PROVIDED, HOWEVER, TRANSPORTER SHALL NOT BE LIABLE FOR THE GROSS NEGLIGENCE OR WILLFUL MISCONDUCT OF SHIPPER INDEMNIFIED PARTIES. THIS GENERAL INDEMNITY SHALL APPLY ONLY TO THE EXTENT THE SUBJECT MATTER IS NOT OTHERWISE SUBJECT TO A SPECIFIC INDEMNITY SET OUT ELSEWHERE IN THIS SOC.    14.2 NOTWITHSTANDING ANY OTHER PROVISION HEREIN OR IN ANY TRANSPORTATION AGREEMENT, TRANSPORTER'S AND SHIPPER'S LIABILITY TO EACH OTHER SHALL, IN ADDITION TO ANY OTHER LIMITATIONS SET FORTH IN THESE TERMS AND CONDITIONS, BE LIMITED TO DIRECT ACTUAL DAMAGES ONLY. SUCH DIRECT ACTUAL DAMAGES SHALL BE THE SOLE AND EXCLUSIVE REMEDY UNDER ANY TRANSPORTATION AGREEMENT, AND ALL OTHER REMEDIES OR DAMAGES AT LAW OR IN EQUITY ARE WAIVED. IN NO EVENT SHALL TRANSPORTER OR SHIPPER BE LIABLE TO THE OTHER PARTY FOR INCIDENTAL, CONSEQUENTIAL, SPECIAL, EXEMPLARY, OR PUNITIVE DAMAGES, REGARDLESS OF THE SOLE, JOINT, CONCURRENT, ACTIVE, PASSIVE, OR GROSS NEGLIGENCE, FAULT, WILLFUL MISCONDUCT, OR STRICT LIABILITY OF THE PARTY RELIEVED OF RESPONSIBILITY FOR SUCH DAMAGES UNDER THIS PROVISION.  15. QUALITY AND MEASUREMENT  15.1 Quality. Gas tendered for delivery by Shipper to Transporter hereunder must meet Transporter's quality specifications designated in this Section. Such Gas must also meet the quality specifications of all of the interconnected pipeline facilities to which Transporter delivers Gas for Shipper, as such specifications may change from time to time.        15.1.1 Hydrogen Sulfide: Tendered gas shall not contain more than twenty-five hundredths (0.25) of one grain of hydrogen sulfide per hundred (100) standard cubic feet, as determined by a method generally acceptable for use in the gas industry.        15.1.2 Total Sulfur: Tendered gas shall not contain more than one-half (0.5) of one grain of total sulfur per hundred (100) standard cubic feet of gas, as determined by a method generally acceptable for use in the gas industry.        15.1.3 Mercaptans:  Tendered gas shall not contain more than three tenths (0.3) of one grain of mercaptans per hundred (100) standard cubic feet of gas, as determined by a method generally acceptable for use in the gas industry.        15.1.4 Temperature: Tendered gas shall not have a temperature more than one hundred twenty degrees (120 ) Fahrenheit and not less than forty degrees (40 ) Fahrenheit.        15.1.5 Carbon Dioxide: Tendered gas shall not contain in excess of two mole percent (2%) of carbon dioxide.        15.1.6 Total Inerts: Tendered gas shall not contain in excess of three mole percent (3%) of inert gasses (non-hydrocarbons).        15.1.7 Oxygen: Tendered gas shall not contain more than ten (10) parts per million by volume of oxygen.  Any gas in excess of ten parts per million (10 ppm), but not in excess of one hundred parts per million (100 ppm), by volume of oxygen (O2) will be accepted so long as blended gas of all receipt volumes received by Transporter will be accepted by downstream pipelines.        15.1.8 Isopentane and Heavier Hydrocarbons: Tendered gas shall not contain more than two-tenths (0.2) gallon per thousand (1,000) standard cubic feet of gas of isopentane (C5+) and heavier hydrocarbons.        15.1.9 Objectionable Liquids and Solids: Tendered gas shall be free of objectionable liquids and solids and other potentially harmful matter or hazardous waste and be commercially free from odors, dirt, dust, gums, gum-forming constituents, iron oxide, iron sulfide, or other liquid or solid matter which might become separated from gas in the course of transportation through pipelines and might interfere with its merchantability and/or with the proper operation of lines, regulators, meters, or other appliances through with it flows.        15.1.10 Corrosivity: Tendered gas shall be free of any and all corrosive materials that may, in Transporter's determination, be harmful to the facilities.        15.1.11 Heating Value: Tendered gas shall have a heating value of not less than nine hundred eighty (980) Btus per cubic foot and not more than eleven hundred (1,100) Btus per cubic foot.        15.1.12 Water: Tendered gas shall in no event have in excess of seven (7) pounds of water vapor per million (1,000,000) standard cubic feet of gas.        15.1.13 Substances in Violation of Applicable Law: Tendered gas must not contain any substances in any amount which violate any applicable Laws, orders, rules, and regulations, of any jurisdictional authority with jurisdiction hereof.    15.2 Failure to Meet Quality Standards.  In the event the gas tendered hereunder should fail to meet the quality specifications stated above, then Transporter will notify Shipper, who will make a diligent effort to correct the situation. Transporter will have the right to refuse to accept such gas for so long as Shipper is unable to tender Gas conforming to such specifications, or may accept delivery of such gas or any part thereof during such period, at Transporter's reasonable discretion. Transporter's acceptance of gas that does not conform to the quality specifications stated above will not constitute a waiver of such specifications with regard to gas later tendered after such acceptance.  15.3 Transporter's Right to Suspend for Failure to Meet Quality Standards.  Notwithstanding anything in this Statement to the contrary, in the event Shipper shall deliver Gas containing any substance which harms or could harm Transporter, Transporter's facilities, or the facilities of any third party, Transporter shall have the right to suspend immediately taking such Gas, and Shipper shall indemnify and hold harmless Transporter against any damages to its facilities or property, as well as claims or causes of action brought by any person or entity, whether in contract or in tort, which arise out of or are related to the transportation of such Gas, and shall reimburse Transporter, Transporter's Affiliates, or third- party interconnect pipelines for any and all damages arising therefrom.  15.4 Point-Specific Quality Standards.  Transporter shall have the right, but not the obligation, to designate quality specifications in the Transportation Agreement at a particular Point of Receipt which may vary from those stated above, provided such Gas blends with Transporter's Pipeline System Gas to meet the standard quality specifications stated in Section 15.1 above. Acceptance of such Gas by Transporter shall be at its reasonable discretion on a non-discriminatory basis. Transporter's acceptance of such Gas tendered by Shipper on a particular Day does not constitute a waiver by Transporter of its right to refuse to accept Gas not conforming to the quality specifications stated above on another Day.  15.5 Unit of Measurement.  The unit of volume for measurement of Gas received and delivered hereunder is one thousand (1,000) cubic feet of Gas at a base temperature of sixty (60) degrees Fahrenheit and at an absolute pressure of fourteen and seventy-three hundredths (14.73) Psia. The MMBtu equivalent of such unit of volume shall be determined by multiplying each such unit of volume by the total heating value per cubic foot of Gas hereunder and by dividing the result by one thousand (1,000).  15.6 Measurement Facilities.  All measurement facilities hereunder shall be installed, operated, and maintained the latest revision of American Gas Association ("AGA") Report No. 9 for each ultrasonic meter and American Petroleum Institute Manual of Petroleum Measurement Standards ("API MPMS"), Chapter 14, Section 3, Parts 1, 2, 3 &amp; 4 for each orifice meter.  Revisions to such edition shall apply to computations and operation of meter installations but shall not be construed to require modifications to, or replacement of, said equipment. The computation of all Gas volumes shall also be made in accordance with API MPMS Chapter 21.1, as amended from time to time; provided, however, that all factors involved in the computation of Gas volumes measured hereunder shall be subject to and in accordance with applicable state laws.  15.7 Responsibility for Measurement and Measurement Facilities.  Except with regard to points constructed by Transporter as part of its initial system, Transporter and Shipper shall, by written agreement, arrange for the ownership and operation of any additional measuring stations to become a Point of Receipt or Point of Delivery. For the initial Point of Receipt and Points of Delivery, the  collection of electronic measurement data and the calculation of the volume and energy value (MMBtu) thereof shall be the responsibility of Transporter. The calibrating and adjusting of meters shall be performed or arranged for by Transporter in compliance with the terms, conditions, and standards stated in this Section.  15.8 Presence for Tests; Measurement Records.  Shipper has the right to be present at the time of any installation, reading, cleaning, changing, repairing, inspection, testing, calibration, or adjustment done in connection with the equipment used in measuring Gas hereunder. The records from such measuring equipment shall remain the property of Transporter or its representative, but upon request, Transporter shall submit to Shipper copies of the records, together with calculations therefrom, subject to their return within thirty (30) Days after receipt thereof.  If Shipper fails to return the records within thirty (30) Days, Transporter shall be under no obligation to provide additional records until the non-returned records are returned to Transporter. Transporter shall retain the records for a period of two (2) Contract Years following the end of the Contract Year to which they are applicable. Transporter shall give Shipper reasonable and customary notice of all tests so that Shipper may, at its election, be present in person or by its representative to observe adjustments, if any, which are made.  15.9 Pressure Assumption.  For the purposes of measurement and meter calibration, the atmospheric (barometric) pressure shall be assumed to be constant, determined by elevation and specific site location irrespective of variations in actual atmospheric pressure from time to time.  15.10 Temperature.  The temperature of the Gas hereunder shall be determined by the continuous use of a recording thermometer. The temperature recorded each Day, during periods of flow only, shall be used in computing the Gas volume for that Day.  15.11 Heat Content Determination.  Btu and relative density of Gas may be determined, at the  option of Transporter, by means of an on-line chromatograph, a portable chromatograph, a continuous sample, or a spot sample taken at the Point(s) of Receipt and Point(s) of Delivery. Compositional analysis shall be performed in accordance with the latest revision of GPA Standard 2261.  15.12 Correction of Measurements.  If, upon any test, the metering equipment at any point is found to be inaccurate in the aggregate by an amount exceeding one percent (1%), registration thereof and any payment based upon such registrations shall be corrected at the rate of such inaccuracy for any period of inaccuracy which is definitely known or agreed upon, or if not known or agreed upon, then for a period extending back one-half (1/2) of the time elapsed since the Day last calibrated, not to exceed ninety (90) Days. Following any test, any metering equipment found to be inaccurate to any degree shall be adjusted immediately to measure accurately. If, for any reason, any meter is out of service or out of repair so that the quantity of Gas delivered or redelivered through such meter cannot be ascertained or computed from the readings thereof, the quantity of Gas so delivered during the period such meter is out of service or out of repair shall be estimated and agreed upon by the Parties hereto on the basis of the best available data, using the first of the following methods that is feasible:        15.12.1 by using the registration of any check measuring equipment of the other party, if  installed and accurately registering; or        15.12.2 by correcting the error if the percentage of error is ascertainable by calibration, test, or mathematical calculation; or        15.12.3 by estimating the quantity of receipts or deliveries from preceding periods under similar conditions when the meter was registering accurately; or        15.12.4 by other method(s) mutually acceptable to both Parties.  16. BALANCING AND PENALTIES  16.1 Imbalance Resolution. From time to time, differences may arise between the total quantity of Gas received at the Point(s) of Receipt and the Equivalent Quantity allocated to or for the account of Shipper at the Point(s) of Delivery, plus Shipper's Allocated Fuel ("Imbalance"). Shipper shall use its best efforts to keep all Imbalances to a minimum and shall not intentionally create or fail to avoid any Imbalances in order to take advantage of changes in the market price of Gas. Transporter shall be entitled, in its reasonable discretion, to manage its receipts from and redeliveries to a Shipper so as to keep any Imbalances as near to zero (0) as practicable, including the use of adjustments in nominations, or in receipts and deliveries, as may be required by operating conditions, with such notice to Shippers as is commercially feasible.   16.2 Monthly Imbalance Correction.  The Parties shall cashout any Imbalance (as existing at the end of any Month) within 30 Days following the Month in which the Imbalance occurs utilizing the method outlined below.        16.2.1 For an Imbalance wherein the quantity by which Shipper's Gas at the Point(s) of Receipt for such Month, less Shipper's Allocated Fuel, exceeds the Equivalent Quantity delivered at the Point(s) of Delivery, in the aggregate, for such Month (or the scheduled quantity at the Point(s) of Delivery for any Point of Delivery with an operational balancing agreement in place, which calls for balancing to be done based on scheduled quantities) (a "Positive Imbalance"), Transporter shall purchase from Shipper the Positive Imbalance for a price determined by multiplying the quantity of the Positive Imbalance by the Low Cashout Index.          16.2.2 For an Imbalance wherein the quantity by which Shipper's Gas at the Point(s) of Receipt for such Month, less Shipper's Allocated Fuel, is less than the Equivalent Quantity redelivered at the Point(s) of Delivery, in the aggregate, for such Month (or the scheduled volume at the Point(s) of Delivery, for any Point of Delivery with an operational balancing agreement in place, which calls for balancing to be done based on scheduled quantities) (a "Negative Imbalance"), Transporter shall sell to Shipper the Negative Imbalance for a price determined by multiplying the quantity of the Negative Imbalance by the High Cashout Index.   16.3 Any Imbalance remaining following the termination of the Transportation Agreement shall be eliminated immediately following termination, in accordance with the above cashout provisions.  16.4 A Shipper shall reimburse Transporter for any downstream fees, charges, or costs assessed to Transporter, as a result of a Shipper's actions, or a Shipper's joint activities with other Shippers (e.g., imbalances), within ten (10) Days of Transporter's invoice for such fees, charges, or costs.  17. NOMINATIONS AND SCHEDULING  17.1 Transporter's Gas Scheduling Department may be contacted by Shipper as follows:        17.1.1 Business Hours Telephone: 713-584-1614        17.1.2 After Hours Emergency Telephone: 918-574-3866 or 713-584-1614        17.1.3 Gas Scheduling Department: GasNominations@targaresources.com  17.2 For Intraday Nominations, Shipper must contact its designated scheduler or the scheduling department as noted above.  17.3 Shipper shall submit, through the electronic bulletin board/Latitude system, to Transporter a Monthly nomination ("First-of-Month Nomination") which shall include, at a minimum:        17.3.1 Shipper name and assigned Transportation Agreement number;        17.3.2 Shipper contact information (name, E-mail address, &amp; phone number(s));        17.3.3 Daily quantity of Gas to be transported, under the Transportation Agreement (expressed in MMBtus);        17.3.4 The quantities of Gas to be received by Transporter at each Point(s) of Receipt and delivered by Transporter to each Point(s) of Delivery;        17.3.5 Shipper-defined begin dates and end dates (not to extend past the last Day of the Month for which the nomination is submitted); and        17.3.6 Information (including party names, dates, and number (if any)) for contracts with upstream and downstream connected parties.  17.4 In the event Shipper has more than one Transportation Agreement, Shipper shall provide Transporter with separate nominations for each Transportation Agreement. If such nominations include the same Point(s) of Delivery and/or Point(s) of Receipt, Shipper shall specify in writing the order in which Gas received and/or delivered by Transporter shall be applied to such Transportation Agreements at the Point(s) of Delivery and/or Point(s) of Receipt.  17.5 Quantities nominated by Shipper for delivery by Transporter shall equal the quantities nominated by Shipper for receipt by Transporter, less Fuel, unless otherwise specifically authorized by Transporter.  17.6 All nominations, excluding Intraday Nominations, shall have rollover options during each Month. Specifically, Shippers shall have the ability to nominate for several Days in a given Month, up to and including the last Day of the specific Month, provided the nomination begin and end dates are within the term of Shipper's contract. Such nominations shall be deemed "Standing Nominations." Shipper shall provide as a component of its nomination such information as may be required by Transporter to enable it to identify, confirm, and schedule the nomination.  For the avoidance of doubt, a Shipper desiring to nominate for a duration longer than a Month shall affirmatively select such option in Transporter's nomination system before First-of-Month Nominations are due for each successive Month.     17.7 Transporter will utilize the following nomination cycles:        17.7.1 All First-of-Month Nominations must be received by Transporter at least two (2) Business Days prior to the first calendar Day of the Month.        17.7.2 NOMINATION CYCLES AND DEADLINES - NOMINATIONS FOR GAS FLOWING THE NEXT DAY, SAME DAY OR THEREAFTER  Cycle: Deadline:    Timely Cycle:  1:00 p.m. (CCT) for next Day    Evening Cycle:  6:00 p.m. (CCT) for the next Day   flow Intraday 1 Cycle:  10:00 a.m. (CCT) for same Day flow   Intraday 2 Cycle:  2:30 p.m. (CCT) for same Day flow   Intraday 3 Cycle:  7:00 p.m. (CCT) for same Day flow  Transporter will schedule nominations received in accordance with the timeline set forth in Section 17.7.1. Nominations submitted after the deadline in Section 17.7.1 set forth above may be processed by Transporter but are subject to Transporter's acceptance, taking into account, inter alia, the operational conditions of the Pipeline System, confirmation that corresponding arrangements to upstream and downstream transportation have been made in a manner satisfactory to Transporter, and the provisions of Section 7.  Transporter reserves the right to change the nomination cycles above in accordance with the nomination timelines set by upstream and downstream transportation providers.    17.8 All Standing Nominations shall remain in place for the duration of a Month until changed by Shipper with a new nomination. New nominations to replace Standing Nominations must be received by Transporter's Gas Scheduling Department in accordance with the scheduling timeline set out in this Section 17.  17.9 If Shipper submits to Transporter an Intraday Nomination or a new nomination replacing a Standing Nomination, and Transporter does not accept such nomination or receive confirmation of the newly-nominated quantities from the upstream and downstream connected parties, Transporter shall schedule the lesser of: (1) the newly-nominated quantity, (2) the quantity for which capacity is available, under then-current operating conditions, or (3) the quantity confirmed with upstream and downstream connected parties.  17.10 Requests to amend previously-scheduled nominations may be accepted as long as submitted in accordance with Section 17. Intraday Nominations can be used to request increases or decreases in total flow or changes to Points of Delivery or Points of Receipt.    17.11 All nominations, including Intraday Nominations, should be based on a daily quantity; thus, an Intraday Nomination need not be submitted as an hourly nomination. Intraday Nominations do not have rollover options and will replace the Standing Nomination only for the duration of the Day stated in such Intraday Nomination. Quantities for Intraday Nominations will be expressed in MMBtus, and represent the total quantities to be delivered prior to the end of the effective Day.  17.12 Transporter shall be allowed to rely conclusively on the information submitted as part of the nomination in confirming the nomination for scheduling and allocation. Shipper must provide to Transporter Shipper's current designated contact, and after-hours and emergency telephone numbers. Such information must be updated as often as changes to such information occur. Transporter may rely solely upon the information provided by Shipper and will not be liable to Shipper if Shipper's contact information is outdated and communication attempts with such Shipper are unsuccessful.  17.13 Scheduled quantities will be received and delivered at uniform hourly rates of flow of scheduled quantity divided by twenty-four (24). Transporter shall have the discretion to accept variations from such hourly rates, on a non-discriminatory basis.  17.14 Operational Flow Order.        17.14.1 In order to protect Transporter's pipeline operations, Transporter may, at any time and with written, oral, or electronic notification (including website posting), initiate an operational flow order that limits receipts and deliveries and requires hourly and Daily rates of flow to be uniform and in balance. In such event, Shipper's scheduled quantity will be adjusted to comply with the operational flow order. Shipper will be subject to the penalties set forth in Section 17.14.2 for violating an operational flow order.         17.14.2 If Transporter initiates an operational flow order, Shipper will be notified orally, in writing, or electronically, including a website posting, of any limitations on receipts and deliveries, adjustments to the scheduled quantity, and requirements to balance receipts and deliveries on an hourly and Daily basis.  In addition to and notwithstanding any requirements to cash out imbalances in Section 16 above, if Shipper violates an operational flow order, Transporter may charge, and Shipper shall pay, a penalty (in addition to any Imbalance payments) equal to (i) the quantity of Gas that is in violation of the operational flow order, in MMBtu, times (ii) the highest daily price of Gas stated in the "Absolute" column of S&amp;P Global Platts Gas Daily in its Final Daily Price Survey under the headings "Southwest," "Waha" for Gas production during the period beginning the Day before Transporter's declaration of an operational flow order and ending the Day after Transporter's termination of the applicable  operational flow order , times (iii) 200 %.    18. FORCE MAJEURE  18.1 The term "Force Majeure" as employed herein shall mean any cause or event, to the extent not reasonably within the control of the party claiming suspension, whether enumerated herein or otherwise, and which, by the exercise of reasonable diligence, such party is unable to prevent or overcome, which may include, without limitation, the following: acts of God; strikes, lockouts and industrial disputes or disturbances; inability to secure or unavoidable delays in obtaining labor, materials, equipment, supplies, permits, easements or rights-of-way, including, without limitation, inability to secure materials by reason of allocations promulgated by authorized governmental agencies; arrests and restraints of governments and people; interruptions by government or court orders; present and future valid orders, decisions or rulings of any government or regulatory entity having or alleging proper jurisdiction; acts of the public enemy; vandalism; wars; riots; civil disturbances; acts of terrorism; blockades; insurrections; epidemics; landslides; lightning; tornadoes, hurricanes, storms, floods, or threats thereof; earthquakes; fires; explosions; cyberattacks or any other cyber event that adversely impacts information systems or the information handled by such systems; breakage and/or accidents to facilities including, without limitation, machinery, lines of pipe, wells, or subsurface storage caverns or reservoirs; unplanned outages or shutdowns of power plant equipment or lines of pipe for inspection, maintenance, or repairs to machinery, equipment, lines of pipe, or other facilities; and freezing of equipment, lines of pipe, or other facilities. It is understood and agreed that the settlement of strikes or lockouts shall be entirely within the discretion of the Party having the difficulty, and that the above requirements that any Force Majeure shall be remedied with all reasonable dispatch shall not require the settlement of strikes or lockouts when such course is inadvisable in the discretion of the Party having the difficulty.  18.2 If either Party shall fail to perform any obligation imposed upon it by this Statement or by an executed Transportation Agreement, and such failure shall be caused, or contributed to, by Force Majeure as described in Section 18.1 above, such failure shall be deemed not to be a breach of the obligation of such Party, but such Party shall use due diligence to carry out its obligations; provided, however, that no such cause affecting the performance of a Party shall continue to relieve such Party from its obligation after the expiration of a reasonable period of time within which by the use of commercially-reasonable diligence such Party could have remedied the situation preventing its performance, nor shall any such cause relieve either Party from any obligation unless such Party shall give notice thereof in writing to the other Party with reasonable promptness; and like notice shall be given upon termination of such cause.  19. BILLING AND PAYMENT  19.1 Not later than the twenty-fifth (25th) calendar Day of each Month, Transporter shall provide Shipper:        19.1.1 an invoice,         19.1.2 any required backup data (which may be transmitted by fax or E-mail), setting forth: (i) the charges due for the preceding Month; (ii) the total quantity of Gas, stated in MMBtu, received from and delivered to Shipper hereunder during the preceding Month(s), with applicable Point(s) of Receipt and Point(s) of Delivery properly identified, and Shipper's Allocated Fuel; (iii) the applicable rates and charges; and if applicable, (iv) information sufficient to explain and support any adjustments made by Transporter in determining the amount billed; and        19.1.3 a statement reflecting any amounts due by either party under the balancing provisions of Section 16 or the operational flow order provisions of Section 17 hereof.   If actual quantities are not available by the twenty-fifth (25th) calendar Day of the Month, Transporter may invoice Shipper based on the best available data, subject to adjustment to actuals at a later date, or Transporter may delay the issuance of the invoice until actual quantities are available.  19.2 Shipper shall pay Transporter the full amount reflected on the invoice within ten (10) Days of its receipt of the same by the method of payment specified in the Transportation Agreement. Such payment shall be made using the payment instructions referenced on the invoice. If the tenth (10th) Day shall fall upon a Saturday, then such payment shall be made on the last regular Business Day prior to such tenth (10th) Day. If the tenth (10th) Day shall fall upon a Sunday or legal holiday, then such payment shall be made on the first regular Business Day after such tenth (10th) Day. If payment differs from invoiced amount, Shipper shall provide to Transporter supporting documentation and details in writing supporting all amounts withheld within five (5) Days of the payment due date.  19.3 If an error is discovered in any billing, such error shall be adjusted within sixty (60) Days of the determination thereof. If a dispute arises as to the amount payable in any invoice rendered hereunder, Shipper shall nevertheless pay when due the amount not in dispute under such invoice. Neither such payment nor the acceptance by Transporter of such payment shall be deemed to be a waiver of the right by Shipper to recoup any overpayment, nor shall acceptance of any payment by Transporter be deemed to be a waiver by Transporter of any underpayment. In the event Shipper fails to forward the entire undisputed amount due to Transporter when same is due, interest on the unpaid portion shall accrue at a rate equal to two percent (2%) above the prime rate published in The Wall Street Journal, from time to time, or the maximum legal rate, whichever is the lesser, compounded daily from the date such payment is due until the same is paid. If Shipper's failure to pay the undisputed portion of any invoice rendered hereunder continues beyond five (5) Days after the due date of such invoice, then Transporter, in addition to all other legal remedies available to it, shall have the right and option to suspend further deliveries of Gas until such default shall have been cured. If Shipper's failure to pay the undisputed portion of any invoice rendered hereunder continues beyond thirty (30) Days after the due date of such invoice, then Transporter, in addition to all other legal remedies available to it, shall have the right and option to terminate service hereunder and under the Transportation Agreement.  19.4 If Shipper withholds payment of any disputed amount as authorized herein, Shipper shall, within five (5) Days after the due date of the disputed invoice, submit to Transporter a written explanation of the dispute and any available supporting documentation. The parties shall then cooperate in good faith to resolve such dispute as expeditiously as possible, and the portion, if any, of such disputed amount eventually determined to be due shall bear interest at the rate stated in Section 19.3 above from the original due date until the date actually paid.  19.5 Both Transporter and Shipper shall have the right at their own expense to examine and audit at any reasonable time the books, records (including measurement, billing and payment) and charts of the other to the extent necessary to verify the accuracy of any statements or charges made under or pursuant to any of the provisions of Shipper's Transportation Agreement. Upon request, Shipper shall also make available to Transporter for audit purposes any relevant records of interconnecting pipelines to which Shipper conveniently has access. A formal audit of accounts shall not be made more often than once each Contract Year. Any inaccuracy will be promptly corrected when discovered; provided, however, that neither Transporter nor Shipper shall be required to maintain books, records or charts for a period of more than two (2) Years following the date thereof. Neither Transporter nor Shipper shall have any right to question or contest any charge or credit if the matter is not called to the attention of the other in writing within such two-year period.  20. ASSIGNMENT  The Transportation Agreement between Shipper and Transporter shall inure to and bind each respective Party's permitted successors and assigns and either Party may assign such with the prior written approval of the other Party, which consent shall not be unreasonably withheld, conditioned, or delayed; provided, however: a) Transporter, in determining whether to grant its consent may take into account, inter alia, the creditworthiness of the proposed assignee; b) notwithstanding the foregoing or anything else herein which may be construed to the contrary, any discount in rate provided for in a Transportation Agreement or in any supplemental discount rate agreement associated with a Transportation Agreement shall be deemed null and void upon Shipper's transfer or assignment of such Transportation Agreement, except when such transfer or assignment is to an Affiliate, as described below; c) notwithstanding the foregoing, either Shipper or Transporter may transfer its interest to any Affiliate by assignment, merger, or otherwise, without the prior approval of the other Party, but no such transfer shall operate to relieve the transferor of its obligations hereunder; and d) notwithstanding any of the foregoing, either Party may assign its right, title, and interest in a Transportation Agreement, including any and all extensions, renewals, amendments, and supplements thereto, to a trustee or trustees, individual or corporate, as security for bonds or other obligations or securities, without such trustee or trustees assuming or becoming in any respect obligated to perform any of the obligations of the assignor and, if any such trustee be a corporation, without its being required to qualify to do business in the state in which the performance of the subject Transportation Agreement may occur. Shipper or Transporter's transfer in violation of this Section 20 shall be void or voidable at the election of the other Party.  21. CREDITWORTHINESS  21.1 Transporter's acceptance of a request for a Transportation Agreement, and continued service under any existing Transportation Agreement, is conditioned upon a satisfactory credit appraisal of Shipper by Transporter from time to time. Transporter shall not be required to perform or to continue any service on behalf of any Shipper who is or has become insolvent; who fails to meet its payment obligations to Transporter; or who is not creditworthy, as defined herein, and does not otherwise provide reasonable security for payment, as described in Section 21.2, below. For purposes herein, a Shipper shall be deemed to be "creditworthy" when: (i) such Shipper has not failed to pay any amount when due under any Transportation Agreement; (ii) such Shipper has not defaulted in a material manner (other than payments due) under any Transportation Agreement; (iii) such Shipper maintains a Credit Rating of at least BBB- by S&amp;P or Fitch or Baa3 by Moody's, and (iv) Transporter believes, in its judgment after review of Shipper's and/or Guarantor's financial situation and/or any and all other information available, that Shipper will fully, timely, and faithfully perform all obligations under all its Transportation Agreements and/or that Shipper's Guaranty fully secures such obligations and is enforceable by Transporter against Guarantor and that such Guarantor will fully, timely, and faithfully perform under such Guaranty.  21.2 If reasonable grounds for insecurity arise as to the creditworthiness of Shipper or Guarantor at any time during the term of the Transportation Agreement, Transporter may require, as a condition to continued service under the Transportation Agreement, that Shipper provide reasonable security in the form of: (a) a cash payment (in U.S. dollars), as collateral held for security (with interest on such prepayment accruing to Shipper), (b) a Guaranty provided by a creditworthy guarantor, such creditworthiness to be determined in the reasonable discretion of Transporter, and/or (c) an irrevocable standby letter of credit issued by a bank or other financial institution acceptable to Transporter substantially in the form attached hereto as Exhibit 2, with the amount of such security to be as determined by Transporter, on a not unduly discriminatory basis, up to but not greater than the amount estimated in good faith to be payable to Transporter for the next three (3) Months performance under the Transportation Agreement, assuming the greatest allowable utilization of services under the contract, plus all applicable related charges. When required to provide such security, Shipper shall deliver such security to Transporter, within five (5) Days of Transporter's demand.  21.3 Nothing herein precludes Transporter from requiring, and enforcing for the term of the contracts, a greater amount of security than the amount specified in Section 21.2 in agreements for service on new or expanded facilities. In the event that a precedent agreement for a new or an expansion project contains credit provisions applicable to Shipper's capacity related to such a project, the credit requirements applicable to the Transportation Agreement for such service shall be the credit requirements set forth in that certain precedent agreement for the new or expansion project between Transporter and Shipper.  21.4 For purposes herein, the insolvency of a Shipper or Guarantor shall be conclusively demonstrated if such Shipper or any parent entity thereof: (i) makes an assignment or any general arrangement for the benefit of creditors; (ii) files a petition or otherwise commences, authorizes, or acquiesces in the commencement of a proceeding or cause under any bankruptcy or similar law for the petition of creditors or has such petition filed against it and such proceeding remains un-dismissed for thirty (30) Days; (iii) otherwise becomes bankrupt or insolvent (however evidenced); (iv) liquidates a substantial part of its property or affairs; or (v) is generally unable to pay its debts as they become due.  21.5 Transporter may reassess the creditworthiness of and performance by any Shipper, at any time and from time to time, and Shipper shall be required to demonstrate creditworthiness and/or provide adequate security and assurances of performance throughout the term of the executed Transportation Agreement.  21.6 If Shipper fails to pay in full any amount owed Transporter under any Transportation Agreement within five (5) Days after such amount becomes due, then in addition to all other remedies available to Transporter under the Transportation Agreement, at law or in equity, Transporter may set off the overdue amount against amounts owed to Shipper under the Transportation Agreement or any other agreement between the Parties.  22. TAXES AND GOVERNMENTAL FEES  Shipper shall be liable for and shall pay, cause to be paid, or reimburse Transporter (within 10 Days from date of Transporter's invoice) if Transporter has paid, causes to be paid, or becomes obligated to pay, any Taxes or Governmental Fees attributable to or associated with any or all of the following: (i) any service or transaction to be performed by Transporter or its designee under the Transportation Agreement; (ii) in connection with or attributable to the volumes, value, or gross receipts from the transportation of Gas or other services rendered hereunder for Shipper, or against the Gas itself, or the right to transport or to render such other services; and (iii) any payment by Transporter or its designee to Shipper or Shipper's designee under this Agreement. Shipper further agrees to pay any and all filing fees that Transporter or its designee may be required to pay to any regulatory agency or governmental body with respect to the Transportation Agreement, or the transportation service performed thereunder. The provisions of this Section shall survive termination of the Transportation Agreement. "Taxes" means any or all ad valorem, property, occupation, severance, production, extraction, first use, conservation, Btu or energy, gathering, transport, pipeline, utility, gross receipts, gas or oil revenue, gas or oil import, privilege, sales, use, consumption, excise, lease, transaction, and other Taxes or New Taxes, governmental charges or fees (including filing fees), licenses, fees, permits and assessments, or increases therein, and any interest or penalties on such Taxes, charges, licenses, fees, permits, New Taxes and assessments, other than taxes based on net income or net worth and Governmental Fees. "New Taxes" means: (i) any Taxes enacted and effective after the Effective Date, including, without limitation, that portion of any Taxes or New Taxes that constitutes an increase, or (ii) any law, order, rule or regulation, or interpretation thereof, enacted and effective after the Effective Date resulting in the application of any Taxes to a new or different class of parties. "Governmental Fees" means any and all privilege, franchise fees, charges, user fees, or rentals levied by governmental entities in exchange for the grant of privileges relating to use of land or improvements thereon.  23. MEDIATION  Prior to resorting to litigation, the Parties shall first attempt in good faith to resolve promptly any disputes arising out of or relating in any way to any executed Transportation Agreement by negotiation between officers who have authority to settle the dispute, following written notice by a Party of such a dispute. The negotiating officers shall be at a higher level of management in their respective organizations than the persons with direct responsibility for the administration of this Transportation Agreement. If such negotiations do not resolve such dispute within thirty (30) Days of a Party's notice, then the Parties shall attempt to settle such dispute in good faith through mediation administered in accordance with the CPR Rules for Non-Administered Arbitration of Business Disputes by an independent and impartial mediator, having at least ten (10) years of Gas transportation and gathering experience and being chosen jointly by the Parties, or, in the event the Parties cannot agree within 30 Days, by a Civil District Court Judge in Harris County. Any mediation shall occur in Houston, Texas unless otherwise agreed by the Parties. If the mediation is unsuccessful, the Parties may then resort to arbitration, another dispute resolution procedure, or litigation.      EXHIBIT 1  FORM OF REQUEST FOR TRANSPORTATION AGREEMENT    INFORMATION REQUIRED FOR VALID REQUEST FOR TRANSPORTATION AGREEMENT    Any change in the facts set forth below, whether before or after service begins, must be promptly communicated to Transporter in writing. The Shipper is the party that has all lawful rights and title to the Gas to be transported and that proposes to execute the Transportation Agreement with Transporter.    Shipper Information:  Shipper (legal business name): Street Address: City, State and Zip Code Attention: Telephone: Pager: Cell Phone: Fax: E-Mail:   Shipper's Address for Statements and Invoices:  Shipper (legal business name): Street Address: City, State and Zip Code Attention: Telephone: Pager: Cell Phone: Fax: E-Mail:   Shipper's Address for Notices and Correspondence:  Shipper (legal business name): Street Address: City, State and Zip Code Attention: Telephone: Pager: Cell Phone: Fax: E-Mail:   Shipper's 24-Hour Contact Information:  Shipper (legal business name): Street Address: City, State and Zip Code Attention: Telephone: Pager: Cell Phone: Fax: E-Mail:   This request is for: (check one)   Intrastate Service:  NGPA Section 311 Service:  Firm Service  Firm Service  Interruptible Service  Interruptible Service           For Firm Transportation Service, complete the following:  Agreement Commencement Date:  Agreement Effective Date:  Maximum Daily Quantity (MDQ) (MMBtu):  Commodity Charge (per MMBtu, inclusive of Fuel) $ Primary Point of Receipt: MRO  (MMBtu) Primary Point of Delivery: MDO  (MMBtu)                         Secondary Point(s) of Receipt:  Secondary Point(s) of Delivery:                    For Interruptible Transportation Service, complete the following:  Agreement Commencement Date:  Agreement Effective Date:  Maximum Daily Quantity (MMBtu):  Commodity Charge (per MMBtu of MDQ) $ Point(s) of Receipt:  Point(s) of Delivery:                  For NGPA Section 311 service, please indicate the "on behalf of" entity(ies) (interstate pipeline or LDC served by an interstate pipeline) below that Shipper warrants meets the provisions of Section 284 of the FERC's regulations:      For NGPA Section 311 service, if gas transported is for an end user located in the service area of an LDC and the requested transportation bypasses the LDC, complete the following:  Legal name and address of the end user:  End User: Street Address: City, State and Zip Code Contact Name: Telephone:   Legal name and address of the LDC:  Shipper: Street Address: City, State and Zip Code Contact Name: Telephone:   24-Hour Contact Information for Point Operators:  Point of Receipt Operator: Street Address: City, State and Zip Code Contact Name: Telephone: Pager: Cell Phone: Fax: E-Mail:     Point of Delivery Operator: Street Address: City, State and Zip Code Contact Name: Telephone: Pager: Cell Phone: Fax: E-Mail:     Attach documentation per Section 6.2.  Please attach additional sheets as necessary.    Submit signed completed form to:  Midland-Permian Pipeline LLC  Attn:  Contract Administration   Targa Resources  811 Louisiana, Suite 2100  Houston, Texas 77002  713-584-1000  pipelines_contractadmin@targaresources.com    Acceptance of a service request is contingent upon a satisfactory credit appraisal by Transporter. Shipper must provide evidence of creditworthiness as outlined in Section 23 of the Statement of Operating Conditions.  By submitting this request, Shipper certifies further that it will execute, if tendered by Transporter, a Transportation Agreement for the level of service requested herein.      THIS SERVICE REQUEST IS HEREBY SUBMITTED THIS ____ DAY OF __________,  .    By    Title      Telephone number ( )   Shipper     (Company Name)  1.   EXHIBIT 2  FORM OF LETTER OF CREDIT      STANDBY CREDIT DATE:      BENEFICIARY:  MIDLAND-PERMIAN PIPELINE LLC  110 W 7TH STREET, SUITE 2300  TULSA, OK 74119  ATTN: [To Be Inserted]   FAX: [To Be Inserted]      GENTLEMEN:    BY THE ORDER OF:    [APPLICANT NAME] [COMPLETE ADDRESS]    WE HEREBY ISSUE OUR IRREVOCABLE STANDBY LETTER OF CREDIT NUMBER IN FAVOR OF MIDLAND-PERMIAN PIPELINE LLC (THE "BENEFICIARY") FOR THE ACCOUNT OF  , (THE "APPLICANT"), FOR AN AMOUNT OF USD $  ((IN WORDS) UNITED STATES DOLLARS) AVAILABLE AT SIGHT AND PAYABLE AT SIGHT WHEN ACCOMPANIED BY THE FOLLOWING DOCUMENTS:    1. YOUR SIGNED AND DATED STATEMENT SIGNED BY AN AUTHORIZED REPRESENTATIVE OF (BENEFICIARY) (SIGNED AS SUCH) READING AS FOLLOWS: "WE HEREBY CERTIFY THE INVOICE(S) PRESENTED TO SUPPORT THIS DRAWING HAS/HAVE BEEN PRESENTED TO __________ (WITH SUPPORTING DOCUMENTS REQUIRED FOR PAYMENT, IF ANY), AND REFLECT AMOUNTS WHICH WERE PROPERLY CALCULATED IN COMPLIANCE WITH THE TERMS OF THE CONTRACT UNDER WHICH THE INVOICE(S) WAS/WERE RENDERED. SUCH INVOICE(S) WAS/WERE NOT PAID, AND REMAIN PAST DUE AND UNPAID AT THE TIME OF THIS DRAWING AND WE HEREBY DEMAND PAYMENT IN THE AMOUNT OF USD ___________ UNDER       (BANK NAME), LETTER OF CREDIT NO. _______."  2. COPY OF COMMERCIAL INVOICE(S) MARKED: "PAST DUE AND UNPAID".  EXPIRATION DATE: [TO BE INSERTED, BUT NOT LESS THAN ONE (1) YEAR FOLLOWING ISSUANCE] AT OUR OFFICES AT ______________ (BANK ADDRESS), ATTENTION: ____________________.    SPECIAL CONDITIONS:    1. WE UNDERSTAND THAT THIS LETTER OF CREDIT IS ISSUED PURSUANT TO AND IN ACCORDANCE WITH THE (INSERT CONTRACT TYPE/NAME AND EXECUTION DATE) (THE "CONTRACT").  2. PARTIAL AND MULTIPLE DRAWINGS ARE PERMITTED.  3. ALL ISSUING BANK CHARGES ARE FOR THE ACCOUNT OF THE APPLICANT.  4. THIS LETTER OF CREDIT MAY NOT BE AMENDED, CHANGED OR MODIFIED WITHOUT THE EXPRESS WRITTEN CONSENT OF THE BENEFICIARY UNLESS EXTENDED OR INCREASED; PROVIDED, HOWEVER, THE AMOUNT AVAILABLE FOR DRAWING UNDER THIS LETTER OF CREDIT MAY BE REDUCED FROM TIME TO TIME BY WRITTEN INSTRUCTIONS TO US EXECUTED BY BOTH APPLICANT AND BENEFICIARY.  5. PAYMENT TO BE AFFECTED PER YOUR INSTRUCTIONS AGAINST CONFORMING DOCUMENTS PRESENTED AT OUR COUNTERS. PRESENTATION AT OUR COUNTERS INCLUDES PRESENTATION IN PERSON, BY FIRST CLASS, CERTIFIED, REGISTERED OR OVERNIGHT MAIL OR E-MAIL DIRECTED TO: _______________ (BANK ADDRESS), ATTENTION: _______________ AND FAX #:     .  6. PRESENTATION OF INVOICES IN EXCESS OF THE AMOUNT OF THIS LETTER OF CREDIT ARE ACCEPTABLE, HOWEVER DRAWINGS ARE LIMITED TO THE AMOUNT AVAILABLE UNDER THIS CREDIT.  7. WE HEREBY ENGAGE WITH YOU THAT DOCUMENTS DRAWN UNDER AND IN COMPLIANCE WITH THE TERMS AND CONDITIONS OF THIS CREDIT WILL BE DULY HONORED UPON PRESENTATION AS SPECIFIED, IF PRESENTED AT OUR COUNTERS AS SPECIFIED ABOVE, ON OR BEFORE THE EXPIRATION DATE.  8. THIS LETTER OF CREDIT IS GOVERNED BY, AND CONSTRUED IN ACCORDANCE WITH THE LAWS OF THE STATE OF NEW YORK, AND, EXCEPT AS OTHERWISE EXPRESSLY STATED HEREIN, TO THE INTERNATIONAL STANDBY PRACTICES, ICC PUBLICATION NO. 590 (THE "ISP98"), AND IN THE EVENT OF ANY CONFLICT, THE LAWS OF THE STATE OF NEW YORK WILL CONTROL.  9. THE ELECTRONIC TRANSMISSION OF THE LETTER OF CREDIT SHALL SERVE AS THE OPERATIVE INSTRUMENT UNTIL THE ORIGINAL IS RECEIVED BY THE BENEFICIARY.  10. PLEASE ADDRESS ALL CORRESPONDENCE REGARDING THIS LETTER OF CREDIT TO ____________ (BANK ADDRESS), ATTENTION: ________________, MENTIONING OUR REFERENCE NUMBER AS IT APPEARS ABOVE.      VERY TRULY YOURS, BANK'S NAME                        AUTHORIZED SIGNER AUTHORIZED SIGNER  NAME &amp; TITLE NAME &amp; TITLE</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>165</filing_id>
      <filing_title>Midland-Permian Pipeline LLC Amended Statement of Operating Conditions</filing_title>
      <filing_type>1000</filing_type>
      <associated_filing_id>164</associated_filing_id>
      <associated_record_id>1106</associated_record_id>
      <associated_option_code>A</associated_option_code>
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2022-09-14</current_effective_date>
      <ferc_order_date>2022-11-17</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
  </ferc_filing_data>
</Document>