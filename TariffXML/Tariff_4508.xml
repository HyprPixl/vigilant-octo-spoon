<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Document xmlns="http://ferc.gov/etariffExport.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ferc_filing_data>
    <schema_version>2</schema_version>
    <company_id>C005443</company_id>
    <lead_applicant_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
    <tariff_id>32</tariff_id>
    <tariff_title>FERC Jurisdictional Documents</tariff_title>
    <tariff_export_date>2025-09-16T20:21Z</tariff_export_date>
    <export_schema_version>2</export_schema_version>
    <record_data>
      <record_id>185</record_id>
      <option_code>A</option_code>
      <record_title>UMERC - WPS WDA Rate Schedule No 2</record_title>
      <record_content_desc>Cover Sheet</record_content_desc>
      <record_version_num>1.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>2000</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2017-01-01</proposed_effective_date>
      <priority_order>500</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>AGREEMENT     FOR    WHOLESALE DISTRIBUTION SERVICE       Between      Upper Michigan Energy Resources Corporation     and    Wisconsin Public Service Corporation        FERC Rate Schedule No. 2                            AGREEMENT   FOR   WHOLESALE DISTRIBUTION SERVICE      This Agreement for Wholesale Distribution Service ( Agreement ) entered into this 13th day of October 2016 sets forth the terms and conditions of a contract for the provision of Wholesale Distribution Service between the Upper Michigan Energy Resources Corporation ( UMERC ), and Wisconsin Public Service Corporation ( WPSC ), sometimes hereinafter referred to individually as  Party  and collectively as  Parties .     WHEREAS, effective January, 1, 2017, the Michigan distribution assets of WPSC and Wisconsin Electric Power Company will be acquired by UMERC;           WHEREAS, a portion of WPSC s power supply is delivered to WPSC over distribution facilities owned by UMERC in the Upper Peninsula of Michigan;            WHEREAS, in order to effect its power supply purchases beginning January 1, 2017, WPSC will require Wholesale Distribution Service over facilities owned by UMERC; and            WHEREAS, UMERC and WPSC have mutually agreed to implement this Agreement.       NOW, THEREFORE, in consideration of the mutual agreements contained herein, WPSC and UMERC agree as follows:    1. DEFINITIONS:    The following terms, when used herein with initial capitalization, whether in the singular or the plural, shall have the meaning specified:    1.1. ATC shall mean the American Transmission Company, LLC.    1.2. Commission or FERC shall mean the Federal Energy Regulatory Commission or its regulatory successor.    1.3. Force Majeure shall mean any cause beyond the control of an affected Party that, by exercise of due diligence, such Party could not reasonably have been expected to avoid and that, by exercise of due diligence, it has been unable to overcome.  Such causes, include, but are not restricted to the following: failure of or threat of failure of facilities, flood, drought, earthquake, storm, fire, lightning, epidemic, war, riot, civil disturbance or disobedience, labor dispute, labor or material shortage, sabotage, restraint by court order or public authority, and action or non-action by or failure to obtain the necessary authorizations or approvals from any governmental agency or authority.    1.4. Good Utility Practice shall mean any of the practices, methods, and acts engaged in or approved by a significant portion of the electric utility industry located within the MISO area during the relevant time period, or any of the practices, methods, and acts that, in the exercise of reasonable judgment in light of the facts known at the time the decision was made, could have been expected to produce a safe, desirable result, achieved expeditiously and at a reasonable cost consistent with good business practices.  Good Utility Practice is not intended to be limited to the optimum practice, method, or act to the exclusion of all others, but rather to be a range of acceptable practices, methods, or acts used within MISO.    1.5. MISO shall mean the Midcontinent Independent System Operator, Inc.    1.6. NERC shall mean the North American Electric Reliability Corporation or its successor.    1.7. Term shall have the meaning set forth in Section 3 of this Agreement.    1.8. Wholesale Distribution Service shall mean the transmission of power purchased by WPSC to meet its power supply needs over facilities owned by UMERC.    2. WHOLESALE DISTRIBUTION SERVICE    2.1. Sale of Wholesale Distribution Service   For the entire Term of this Agreement, UMERC shall provide Wholesale Distribution Service to WPSC for the purpose of supplying the load and hydro generation requirements of WPSC.  The Wholesale Distribution Service shall be provided between the point of receipt and point of delivery and over the existing facilities specified in Schedule A of this Agreement and will allow energy flow either into, or out of WPSC.    2.2. Obligations of WPSC   By May 1 of each year, WPSC shall provide UMERC with a forecast of WPSC s monthly system peak and energy requirements for each of the following three years and its summer and winter peaks for each of three additional years for load to be served pursuant to this Agreement and monthly system peak requirements for each of the following three years for generation to be served pursuant to this Agreement.  Further, WPSC shall provide UMERC with timely notice of any information that might affect UMERC s ability to provide reliable Wholesale Distribution Service under this Agreement.    2.3. Obligations of UMERC   By February 1 of each year, UMERC shall provide WPSC with a forecast of planned maintenance and construction activities that may adversely affect the ability of UMERC to provide Wholesale Distribution Service to WPSC.  Further, UMERC shall provide WPSC with timely notice of any un-planned maintenance or construction activities that might adversely affect Wholesale Distribution Service to WPSC and will endeavor to carry out such activities in a manner that will minimize adverse consequences and curtailments of Wholesale Distribution Service to WPSC.    3. TERM    3.1. Term of Service Agreement   The Term of this Agreement shall begin on the later of January 1, 2017, or upon receipt of all applicable state and federal regulatory approvals, and shall continue until terminated by either Party in accordance with Section 3.2 of this Agreement.    3.2. Termination of Service Agreement   Either Party may terminate this Agreement at any time after granting the other Party one year s written notice of its intent to terminate the Agreement, subject to any regulatory approvals.     4. RATES AND CHARGES    4.1. Rate for Wholesale Distribution Service   WPSC shall pay to UMERC $1,362.46 per month for the Wholesale Distribution Service provided under this Agreement, or such other rate established pursuant to Section 4.3 of this Agreement as follows:  Distribution Component  Charge     Substations    $   199.43  Feeders     $1,163.03      4.2. Real Power Losses   WPSC shall be responsible for compensating for losses associated with the Wholesale Distribution Service under this Agreement.  The real power loss factor rates on the distribution facilities identified in Schedule A and required to provide the Wholesale Distribution Service are as indicated in Section 4.2(a) and will be calculated based on metered load at the distribution delivery point.      a. Real Power Loss Factor Rate  1.27%    b. WPSC shall ensure that the metered load at each distribution delivery point is incremented by its energy supplier, according to the Real Power Loss Factor Rates specified in 4.2(a) for load reporting and settlement purposes so that reported load includes distribution losses.    4.3. Rate Changes   Nothing in this Agreement shall be construed as affecting in any way the right of UMERC to unilaterally make application to the Commission for a change in the rate for Wholesale Distribution Service.  UMERC shall notify WPSC no later than the date of Commission filing, of its intent to file for an adjustment in rates.  UMERC s notification shall consist of the application package sent to the Commission. UMERC agrees that, in the event that UMERC makes such application to the Commission, UMERC shall not oppose WPSC s right to intervene and protest such application.    5. BILLING AND PAYMENT    5.1. Billing Date   After commencement of this Agreement, UMERC shall issue bills to WPSC on a calendar month basis, by the 10th working day following the calendar month to which they apply.  All bills shall be due and payable within 20 days of their receipt.          5.2. Payment Address    For Wire Transfers:       US Bank, N.A.  777 East Wisconsin Avenue  Milwaukee, Wisconsin 53202  ABA #075 000 022  For credit to: Upper Michigan Energy Resources Corporation  Account # 182381014857       For Other Payments:       Cashier A139      Upper Michigan Energy Resources Corporation      C/o We Energies      333 W. Everett Street      Milwaukee, WI 53203    5.3. Interest   Bills that are not paid in full by WPSC when due shall thereafter bear interest at the rate of 1   percent per month, or at the maximum rate of interest allowed by law, whichever is less.    5.4. Disputed Bills   In the event of a dispute about any invoice, WPSC shall remit the undisputed portion of such invoice, and shall have the option to pay the disputed portion of such invoice under protest or remit the disputed portion of such invoice into an escrow account pending the resolution of the dispute pursuant to Section 9 of this Agreement.    5.5. Termination for Non-Payment of Bills   In the event of non-payment of a bill by WPSC, UMERC shall have the right to terminate service sixty (60) days subsequent to the date of the bill;  provided, however, that in the event of any billing dispute, UMERC shall not have the right to terminate service if WPSC complies with Section 5.4 of this Agreement, and either pays the disputed amount under protest or places disputed amounts in an escrow account subject to disbursement based upon the resolution of the dispute.  UMERC shall be required to notify WPSC in writing of its intent to terminate service for non-payment at least thirty (30) days prior to the actual date of termination of service.  UMERC may not terminate service for reason of non-payment if WPSC makes payment prior to the date of termination.    6. ASSIGNMENT    6.1. Assignment of Rights Under the Agreement   Each Party shall have the right to assign all or any portion of its interest in the Agreement upon prior written notice to the other Party, and a Party assigning its rights and obligations under this Agreement shall provide notice to the other Party of the assignment pursuant to Section 10 of this Agreement.  If assignment of this Agreement occurs pursuant to the provisions of this section, this Agreement shall be binding upon and inure to the benefit of the respective successors and assigns of the Parties.    6.2. Obligations After Assignment   In the event of any sale, transfer, or assignment hereunder, the transferor or assignor shall, to the extent of the transferred or assigned obligations, and only to such extent, be relieved of obligations accruing from and after the effective date of such transfer or assignment;  provided, however, that under no circumstances shall any sale, transfer, or assignment relieve the transferor or assignor of any liability for any breach of this Agreement occurring before the effective date of such transfer or assignment.    7. LOAD SHEDDING AND CURTAILMENTS    7.1. Procedures   As a Wholesale Distribution Service provider UMERC is subject to load shed in accordance with NERC standards and the MISO Energy and Operating Reserves Market Tariff. In the event UMERC receives an operating instruction to shed load and implementation of load shed would impact WPSC, UMERC will contact WPSC as soon as practicable.     7.2. Distribution Constraints   During any period when UMERC, ATC, or MISO determines that a constraint exists on all or a portion of the ATC transmission facilities or UMERC s facilities used to provide Wholesale Distribution Service under this Agreement, and that such constraint may impair the reliability of those facilities or other facilities owned and/or operated by ATC, UMERC, or MISO, UMERC may take whatever actions, consistent with Good Utility Practice, that are reasonably necessary to maintain the reliability of those facilities.  Such actions will be taken in a nondiscriminatory manner.    7.3. Curtailments of Wholesale Distribution Service   If a constraint cannot be relieved through the implementation of other procedures, and if UMERC determines that it is necessary to curtail Wholesale Distribution Service that would otherwise be provided under this Agreement, such deliveries shall be curtailed in a nondiscriminatory fashion pursuant to the procedures established in Section 7.1 of this Agreement.    7.4. Curtailment of Wholesale Distribution Service For Transmission Constraints   Each Party shall, on a non-discriminatory basis, curtail its use of the system in a manner that effectively relieves the constraint.  However, to the extent practicable and consistent with Good Utility Practice, any curtailment will be proportionately shared by customers impacted by the constraint.    7.5. System Reliability   Notwithstanding any other provisions of this Agreement, UMERC, for its own purposes or in response to actions taken or requests made by ATC or MISO, reserves the right, consistent with Good Utility Practice and on a basis that is not unduly discriminatory, to curtail Wholesale Distribution Service without liability on UMERC s part.  Such curtailments may be made (a) for the purpose of making necessary adjustments to, changes in, or repairs on the lines, substations, and facilities involved in providing service under this Agreement, or (b) where the continuance of Wholesale Distribution Service would endanger persons or property.      In the event of any adverse conditions or disturbances on UMERC s facilities, or on any other systems directly or indirectly interconnected with UMERC s system, UMERC, consistent with Good Utility Practice, also may curtail Wholesale Distribution Service in order to (i) limit the extent or damage of the adverse conditions or disturbances, (ii) prevent damage to facilities, or (iii) expedite restoration of service.  UMERC will give WPSC as much advance notice as is practicable in the event of such curtailment.    7.6. Underfrequency Load Shedding  WPSC shall comply with all regulatory underfrequency load shedding requirements through participation in UMERC s underfrequency load shedding plan.  WPSC shall supply documentation in support of UMERC s and ATC s underfrequency load shedding plans, if requested.    8. ENERGY RELIABILITY ORGANIZATION OBLIGATIONS    8.1. WPSC shall comply with all applicable energy reliability organization requirements.    8.2. WPSC shall be responsible for paying all energy reliability organization costs associated with its load and the provision of service under this Agreement.    8.3. WPSC shall provide all data and information requested by UMERC in order for UMERC to comply with electric reliability organization requirements.    9. CREDIT SUPPORT    UMERC, in order to satisfy itself of the ability of WPSC to meet the obligations set forth in this Agreement, may in accordance with standard commercial practices conduct reasonable credit reviews.  UMERC will require WPSC to provide the information and meet the requirements determined by UMERC.  WPSC s failure to provide adequate credit support, if required, may be grounds for UMERC to terminate the Agreement.  UMERC may, based on UMERC s credit requirements, require WPSC to provide and maintain in effect during the term of this Agreement, an unconditional and irrevocable letter of credit, a parental guaranty, or an alternative form and type of security acceptable to UMERC and consistent with commercial practices ( Performance Assurance ).  Such credit support shall not exceed an amount equivalent to the sum of four months of the then current monthly distribution charges.  UMERC reserves the right, on a non-discriminatory basis, to require WPSC to submit to UMERC updated financial information to permit UMERC to evaluate WPSC s creditworthiness on an on-going basis, and if necessary, to require future Performance Assurance.  Upon receipt of such notice WPSC shall have three (3) business bays to remedy the situation by providing such Performance Assurance to UMERC.  In the event WPSC fails to provide such Performance Assurance acceptable to UMERC within three (3) business days of receipt of notice, then an event of default will be deemed to have occurred and UMERC shall have the right to terminate service.  UMERC shall be required to notify WPSC in writing of its intent to terminate service at least 60 days prior to the actual date of termination.    10. FORCE MAJEURE AND INDEMNIFICATION    10.1. Force Majeure   To the extent either Party is prevented by Force Majeure from carrying out, in whole or part, its obligations under this Agreement, and such Party ( the Claiming Party ) gives notice and details of the Force Majeure to the other Party as soon as practicable, then, unless this Agreement specifies otherwise, the Claiming Party shall be excused from the performance of its obligations with respect to this Agreement other than payments then due or becoming due with respect to performance prior to the Force Majeure.  The Claiming Party shall commence performance of its obligations after the occurrence of the Force Majeure with all reasonable dispatch.  The non-Claiming Party shall not be required to perform or resume performance of its obligations to the Claiming Party corresponding to the obligations of the Claiming Party excused by Force Majeure.  However, no Party shall be relieved of liability for failure of performance if such failure be due to causes arising out of its negligence or due to removable or remediable causes that it fails to remove or remedy within a reasonable time period.  Nothing contained herein shall be construed to require a Party to settle any strike or labor dispute in which it may be involved.    10.2. Indemnification   Each Party shall at all times, indemnify, defend, and hold harmless the other Party against any and all damages, losses, and claims, including claims and actions relating to injury to or death of any person or damage to property, demands, suits, recoveries, costs and expenses, court costs, attorney fees, and all other obligations by or to third parties, arising out of or resulting from the Party s required performance of its obligations under this Agreement.      10.3. Limitations on Liability   The Parties liability under this Agreement shall be limited to direct, actual damages only.  All other remedies or damages at law or in equity are waived.  Direct, actual damages shall be the sole and exclusive remedy, and in no event, whether as a result of breach of contract, tort liability (including negligence), strict liability, or otherwise, shall either Party be liable to the other Party, its agents, representatives, and/or assigns, for any special, punitive, incidental, indirect, exemplary, or consequential damages of any nature whatsoever, including, but not limited to, loss of profits.  The Parties also intend and agree that such provisions shall continue in full force and effect notwithstanding the termination, suspension, cancellation, or expiration of this Agreement.    11. DISPUTE RESOLUTION      11.1. Dispute Resolution   Any dispute between the Parties involving service under this Agreement shall be referred to a designated senior representative of each Party for resolution on an informal basis as promptly as practicable.  In the event the designated representatives are unable to resolve the dispute within thirty (30) days, or such other period as the Parties may agree upon, the Parties may pursue any remedies available.      11.2. Rights Under the Federal Power Act   Nothing in this section shall restrict the rights of either Party to file a complaint with the Commission under relevant provisions of the Federal Power Act.    12. NOTICES    12.1. Any notice provided for or concerning this Agreement, except the payment of bills as provided in Section 5.2,  shall be in writing and delivered by person or mail to the following:      If to WPSC:   Wisconsin Public Service Corporation      Vice President   Wholesale Energy and Fuels      333 W. Everett Street, A214      Milwaukee, WI 53203      If to UMERC:  Upper Michigan Energy Resources Corporation      Vice President   Wholesale Energy and Fuels      333 W. Everett Street, A214      Milwaukee, WI 53203  Such notice shall be effective when received by the Party to whom it is sent.    13. SEVERABILITY    13.1. In the event that any of the terms, covenants, or conditions of this Agreement or the application of any such term, covenant, or condition, shall be held invalid as to any person or circumstance by any court having jurisdiction, all other terms, covenants, or conditions of this Agreement and their application shall not be affected thereby, but shall remain in force and effect unless a court holds that the provisions are not separable from all other provisions of this Agreement      14. GOVERNING LAW    14.1. This Agreement shall be interpreted, construed, and enforced in accordance with the laws of the State of Michigan without regard to conflicts of law provisions thereof.    15. SIGNATURE CLAUSE    15.1. The signatories hereto represent that they have been authorized to enter into this Agreement on behalf of the Party for whom they sign.    16. COUNTERPARTS      16.1. This Agreement may be executed in one or more counterparts which taken together shall form a valid Agreement.        [SIGNATURE PAGE FOLLOWS]      IN WITNESS WHEREOF, each of the Parties has caused this Agreement to be executed by its duly authorized representative as of the date first written above.      UMERC      WPSC       By:  /s/ J. Patrick Keyes   By:  /s/ Daniel Krueger      Name: J. Patrick Keyes   Name: Daniel Krueger                  Title: President    Title: Senior Vice President   WEAF            Date: October 14, 2016   Date: October 14, 2016                              SCHEDULE A  Facilities Used for Provision of Wholesale Distribution Service  Feeders:   There are a total of two (2) feeders located in Michigan that are used to provide wholesale distribution service to WPSC s load. One (1) feeder originates in the State of Michigan, crosses the border into the State of Wisconsin, and then crosses back into the State of Michigan. One (1) feeder originates in the State of Michigan and has a single crossing into the State of Wisconsin. The single crossing  feeder also provides service to hydro generation owned by a third party.  Only the value of the portion of the feeder physically located in Michigan is used in the determination of the wholesale distribution charge. For the load-only feeder, costs are allocated on a non-coincident peak basis. For the hydro and load feeder, costs are allocated on the maximum load usage of the feeder. These feeders are as follows:    Ingalls 242 (Originates in MI, Multiple Crossing): WI Capacity Allocation of MI Segment = 32.97%    Second Street 241 (Originates in MI, Single Crossing): WI Capacity Allocation of MI Segment = 12.54%    Substations:   There is a one (1) substation located in Michigan that is used to provide wholesale distribution service to WPSC s load. This substation also provides service to hydro generation owned by a third party. Costs are allocated on the maximum load usage of the substation. This substation is as follows:    Second Street Substation (load only): WI Capacity Allocation = 12.54%    DC\81588341.1    11</record_plain_text>
      <record_change_type>NEW</record_change_type>
      <filing_id>168</filing_id>
      <filing_title>UMERC to Wisconsin Public Service Rate Schedule No. 2</filing_title>
      <filing_type>10</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2017-01-01</current_effective_date>
      <ferc_order_date>2016-12-28</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
    <record_data>
      <record_id>189</record_id>
      <option_code>A</option_code>
      <record_title>UMERC - Daggett WDA Rate Schedule No 6</record_title>
      <record_content_desc>Cover Sheet</record_content_desc>
      <record_version_num>1.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>6000</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2017-01-01</proposed_effective_date>
      <priority_order>500</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>AGREEMENT     FOR    WHOLESALE DISTRIBUTION SERVICE       Between    Village of Daggett, Michigan    and    Upper Michigan Energy Resources Corporation        FERC Rate Schedule No. 6                              AGREEMENT  FOR  WHOLESALE DISTRIBUTION SERVICE     This Agreement for Wholesale Distribution Service ( Agreement ) entered into this 20th day of October 2016 sets forth the terms and conditions of a contract for the provision of Wholesale Distribution Service between the Upper Michigan Energy Resources Corporation ( UMERC ) and the Village of Daggett, Michigan ( Daggett ), sometimes hereinafter referred to individually as  Party  and collectively as  Parties .     WHEREAS, Daggett purchases its power supply needs from Wisconsin Public Service Corporation;          WHEREAS, Daggett s power supply is delivered to Daggett over facilities owned by UMERC;           WHEREAS, in order to effect its power supply purchases, Daggett requires Wholesale Distribution Service over facilities owned by UMERC; and           WHEREAS, Daggett and UMERC have mutually agreed to implement this Agreement for Wholesale Distribution Service.       NOW, THEREFORE, in consideration of the mutual agreements contained herein, UMERC and Daggett agree as follows:    1. DEFINITIONS:    The following terms, when used herein with initial capitalization, whether in the singular or the plural, shall have the meaning specified:    1.1. ATC shall mean the American Transmission Company, LLC.    1.2. Coordinated Functional Registration (CFR) shall mean an agreement in writing between or among two or more entities (parties) upon a division of compliance responsibility among the parties for one or more Reliability Standard(s) applicable to a particular function, and/or for one or more Requirement(s)/sub-Requirement(s) within particular Reliability Standard(s).    1.3. Commission or FERC shall mean the Federal Energy Regulatory Commission or its regulatory successor.    1.4. Force Majeure shall mean any cause beyond the control of an affected Party that, by exercise of due diligence, such Party could not reasonably have been expected to avoid and that, by exercise of due diligence, it has been unable to overcome.  Such causes, include, but are not restricted to the following: failure of or threat of failure of facilities, flood, drought, earthquake, storm, fire, lightning, epidemic, war, riot, civil disturbance or disobedience, labor dispute, labor or material shortage, sabotage, restraint by court order or public authority, and action or non-action by or failure to obtain the necessary authorizations or approvals from any governmental agency or authority.    1.5. Good Utility Practice shall mean any of the practices, methods, and acts engaged in or approved by a significant portion of the electric utility industry located within the MISO area during the relevant time period, or any of the practices, methods, and acts that, in the exercise of reasonable judgment in light of the facts known at the time the decision was made, could have been expected to produce a safe, desirable result, achieved expeditiously and at a reasonable cost consistent with good business practices.  Good Utility Practice is not intended to be limited to the optimum practice, method, or act to the exclusion of all others, but rather to be a range of acceptable practices, methods, or acts used within MISO.    1.6. MISO shall mean the Midcontinent Independent System Operator, Inc.    1.7. NERC shall mean the North American Electric Reliability Corporation or its successor.    1.8. Term shall have the meaning set forth in Section 3 of this Agreement.    1.9. Underfrequency Load Shedding (UFLS) shall mean load shed implemented by installed equipment designed to automatically respond to, and arrest declining frequency. Reliability standards specify the amount of load shed and the entities responsible for ownership, maintenance, and performance of a UFLS program.    1.10. Wholesale Distribution Service shall mean the transmission of power purchased by Daggett to meet its power supply needs over facilities owned by UMERC.    1.11. WPS Balancing Authority (WPS BA) shall mean the function of Wisconsin Public Service as the Balancing Authority for the WPS Balancing Authority Area. The WPS BA responsibilities are delineated in the CFR with MISO as maintained at NERC.    2. WHOLESALE DISTRIBUTION SERVICE    2.1. Sale of Wholesale Distribution Service   For the entire Term of this Agreement, UMERC shall provide Wholesale Distribution Service to Daggett solely for the purpose of supplying the load requirements of Daggett.  The Wholesale Distribution Service shall be provided between the point of receipt and point of delivery and over the existing facilities specified in Schedule A of this Agreement and will allow energy flow either into, or out of Daggett.    2.2. Obligations of Daggett   By May 1 of each year, Daggett shall provide UMERC with a forecast of Daggett s monthly system peak and energy requirements for each of the following three years and its summer and winter peaks for each of three additional years for load to be served pursuant to this Agreement.  Further, Daggett shall provide UMERC with timely notice of any information that might affect UMERC s ability to provide reliable Wholesale Distribution Service under this Agreement.    2.3. Obligations of UMERC   By February 1 of each year, UMERC shall provide Daggett with a forecast of planned maintenance and construction activities that may adversely affect the ability of UMERC to provide Wholesale Distribution Service to Daggett.  Further, UMERC shall provide Daggett with timely notice of any un-planned maintenance or construction activities that might adversely affect Wholesale Distribution Service to Daggett and will endeavor to carry out such activities in a manner that will minimize adverse consequences and curtailments of Wholesale Distribution Service to Daggett.     3. TERM    3.1. Term of Service Agreement   The Term of this Agreement shall begin on the later of January 1, 2017 or upon the receipt of all applicable state and federal regulatory approvals of UMERC, and shall continue until terminated by either Party in accordance with Section 3.2 of this Agreement.    3.2. Termination of Service Agreement   Either Party may terminate this Agreement at any time after granting the other Party one year s written notice of its intent to terminate the Agreement, subject to any regulatory approvals.    4. RATES AND CHARGES    4.1. Rate for Wholesale Distribution Service   Daggett shall pay to UMERC $42.93 per month for the Wholesale Distribution Service provided under this Agreement, or such other rate established pursuant to Section 4.3 of this Agreement as follows:  Delivery Point   Charge   Old US-41 241 Feeder    $42.93    4.2. Real Power Losses   Daggett shall be responsible for compensating for losses associated with the Wholesale Distribution Service under this Agreement.  The real power loss factor rates on the distribution facilities identified in Schedule A and required to provide the Wholesale Distribution Service are as indicated in Section 4.2(a) and will be calculated based on metered load at the distribution delivery point.      a. Real Power Loss Factor Rates  Delivery Point   Rate  Old US-41    1.016    b. Daggett shall ensure that the metered load at each distribution delivery point is incremented by its energy supplier, according to the Real Power Loss Factor Rates specified in 4.2(a) for load reporting and settlement purposes so that reported load includes distribution losses.    4.3. Rate Changes   Nothing in this Agreement shall be construed as affecting in any way the right of UMERC to unilaterally make application to the Commission for a change in the rate for Wholesale Distribution Service.  UMERC shall notify Daggett no later than the date of Commission filing, of its intent to file for an adjustment in rates.  UMERC s notification shall consist of the application package sent to the Commission. UMERC agrees that, in the event that UMERC makes such application to the Commission, UMERC shall not oppose Daggett s right to intervene and protest such application.    5. BILLING AND PAYMENT    5.1. Billing Date   After commencement of this Agreement, UMERC shall issue bills to Daggett on a calendar month basis, by the 10th working day following the calendar month to which they apply.  All bills shall be due and payable within 20 days of their receipt.    5.2. Payment Address    For Wire Transfers:       US Bank, N.A.        777 East Wisconsin Avenue        Milwaukee, Wisconsin  53202        ABA #075 000 022  For credit to:  Upper Michigan Energy Resources Corporation       Account # 182381014857       For Other Payments:       Cashiers A139      Upper Michigan Energy Resources Corporation       C/o We Energies      333 W. Everett Street      Milwaukee, Wisconsin  53203    5.3. Interest   Bills that are not paid in full by Daggett when due shall thereafter bear interest at the rate of 1   percent per month, or at the maximum rate of interest allowed by law, whichever is less.    5.4. Disputed Bills   In the event of a dispute about any invoice, Daggett shall remit the undisputed portion of such invoice, and shall have the option to pay the disputed portion of such invoice under protest or remit the disputed portion of such invoice into an escrow account pending the resolution of the dispute pursuant to Section 11 of this Agreement.    5.5. Termination for Non-Payment of Bills   In the event of non-payment of a bill by Daggett, UMERC shall have the right to terminate service sixty (60) days subsequent to the date of the bill;  provided, however, that in the event of any billing dispute, UMERC shall not have the right to terminate service if Daggett complies with Section 5.4 of this Agreement, and either pays the disputed amount under protest or places disputed amounts in an escrow account subject to disbursement based upon the resolution of the dispute.  UMERC shall be required to notify Daggett in writing of its intent to terminate service for non-payment at least thirty (30) days prior to the actual date of termination of service.  UMERC may not terminate service for reason of non-payment if Daggett makes payment prior to the date of termination.    6. ASSIGNMENT    6.1. Assignment of Rights Under the Agreement   Each Party shall have the right to assign all or any portion of its interest in the Agreement upon prior written notice to the other Party, and a Party assigning its rights and obligations under this Agreement shall provide notice to the other Party of the assignment pursuant to Section 12 of this Agreement.  If assignment of this Agreement occurs pursuant to the provisions of this section, this Agreement shall be binding upon and inure to the benefit of the respective successors and assigns of the Parties.    6.2. Obligations After Assignment   In the event of any sale, transfer, or assignment hereunder, the transferor or assignor shall, to the extent of the transferred or assigned obligations, and only to such extent, be relieved of obligations accruing from and after the effective date of such transfer or assignment;  provided, however, that under no circumstances shall any sale, transfer, or assignment relieve the transferor or assignor of any liability for any breach of this Agreement occurring before the effective date of such transfer or assignment.    7. LOAD SHEDDING AND CURTAILMENTS    7.1. Procedures   In accordance with NERC standards and the MISO Energy Market Tariff  the WPS Balancing Authority implements load shed.  Curtailment notice will be communicated by the WPS Balancing Authority contacting Daggett as soon as practicable after a determination that curtailments are necessary.     7.2. Distribution Constraints   During any period when UMERC, ATC, or MISO determines that a constraint exists on all or a portion of the ATC transmission facilities or UMERC s facilities used to provide Wholesale Distribution Service under this Agreement, and that such constraint may impair the reliability of those facilities or other facilities owned and/or operated by ATC, UMERC, or MISO, UMERC may take whatever actions, consistent with Good Utility Practice, that are reasonably necessary to maintain the reliability of those facilities.  Such actions will be taken in a nondiscriminatory manner.    7.3. Curtailments of Wholesale Distribution Service   If a constraint cannot be relieved through the implementation of other procedures, and if UMERC determines that it is necessary to curtail Wholesale Distribution Service that would otherwise be provided under this Agreement, such deliveries shall be curtailed in a nondiscriminatory fashion.    7.4. Curtailment Allocation of Wholesale Distribution Service For Transmission Constraints   Each Party shall, on a non-discriminatory basis, curtail its use of the system in a manner that effectively relieves the constraint.  However, to the extent practicable and consistent with Good Utility Practice, any curtailment will be proportionately shared by UMERC and Daggett.    7.5. System Reliability   Notwithstanding any other provisions of this Agreement, UMERC, for its own purposes or in response to actions taken or requests made by ATC or MISO, reserves the right, consistent with Good Utility Practice and on a basis that is not unduly discriminatory, to curtail Wholesale Distribution Service without liability on UMERC s part.  Such curtailments may be made (a) for the purpose of making necessary adjustments to, changes in, or repairs on the lines, substations, and facilities involved in providing service under this Agreement, or (b) where the continuance of Wholesale Distribution Service would endanger persons or property.      In the event of any adverse conditions or disturbances on UMERC s facilities, or on any other systems directly or indirectly interconnected with UMERC s system, UMERC, consistent with Good Utility Practice, also may curtail Wholesale Distribution Service in order to (i) limit the extent or damage of the adverse conditions or disturbances, (ii) prevent damage to facilities, or (iii) expedite restoration of service.  UMERC will give Daggett as much advance notice as is practicable in the event of such curtailment.    7.6. Underfrequency Load Shedding   Daggett shall comply with all regulatory underfrequency load shedding requirements through participation in Daggett s Underfrequency Load Shedding plan.  Daggett shall supply documentation of such compliance to UMERC and ATC, if requested.    8. ENERGY RELIABILITY ORGANIZATION OBLIGATIONS    8.1. Daggett shall comply with all applicable energy reliability organization requirements.    8.2. Daggett shall be responsible for paying all energy reliability organization costs associated with its load and the provision of service under this Agreement.    8.3. Daggett shall provide all data and information requested by UMERC in order for UMERC to comply with electric reliability organization requirements.         9. CREDIT SUPPORT  UMERC, in order to satisfy itself of the ability of Daggett to meet the obligations set forth in this Agreement, may in accordance with standard commercial practices conduct reasonable credit reviews.  UMERC will require Daggett to provide the information and meet the requirements determined by UMERC.  Daggett s failure to provide adequate credit support, if required, may be grounds for UMERC to terminate the Agreement.  UMERC may, based on UMERC s credit requirements, require Daggett to provide and maintain in effect during the term of this Agreement an unconditional and irrevocable letter of credit, a parental guaranty, or an alternative form and type of security acceptable to UMERC and consistent with commercial practices ( Performance Assurance ).  Such credit support shall not exceed an amount equivalent to the sum of four months of the then current monthly distribution charges.   UMERC reserves the right, on a non-discriminatory basis, to require Daggett to submit to UMERC updated financial information to permit UMERC to evaluate Daggett s creditworthiness on an on-going basis, and if necessary, to require future Performance Assurance.  Upon receipt of such notice, Daggett shall have three (3) business days to remedy the situation by providing such Performance Assurance to UMERC.  In the event Daggett fails to provide such Performance Assurance acceptable to UMERC within three (3) business days of receipt of notice, then an event of default will be deemed to have occurred, and UMERC shall have the right to terminate service.  UMERC shall be required to notify Daggett in writing of its intent to terminate service at least 60 days prior to the actual date of termination.    10. FORCE MAJEURE AND INDEMNIFICATION    10.1. Force Majeure   To the extent either Party is prevented by Force Majeure from carrying out, in whole or part, its obligations under this Agreement, and such Party ( the Claiming Party ) gives notice and details of the Force Majeure to the other Party as soon as practicable, then, unless this Agreement specifies otherwise, the Claiming Party shall be excused from the performance of its obligations with respect to this Agreement other than payments then due or becoming due with respect to performance prior to the Force Majeure.  The Claiming Party shall commence performance of its obligations after the occurrence of the Force Majeure with all reasonable dispatch.  The non-Claiming Party shall not be required to perform or resume performance of its obligations to the Claiming Party corresponding to the obligations of the Claiming Party excused by Force Majeure.  However, no Party shall be relieved of liability for failure of performance if such failure be due to causes arising out of its negligence or due to removable or remediable causes that it fails to remove or remedy within a reasonable time period.  Nothing contained herein shall be construed to require a Party to settle any strike or labor dispute in which it may be involved.    10.2. Indemnification   Each Party shall at all times, indemnify, defend, and hold harmless the other Party against any and all damages, losses, and claims, including claims and actions relating to injury to or death of any person or damage to property, demands, suits, recoveries, costs and expenses, court costs, attorney fees, and all other obligations by or to third parties, arising out of or resulting from the Party s required performance of its obligations under this Agreement.      10.3. Limitations on Liability   The Parties liability under this Agreement shall be limited to direct, actual damages only.  All other remedies or damages at law or in equity are waived.  Direct, actual damages shall be the sole and exclusive remedy, and in no event, whether as a result of breach of contract, tort liability (including negligence), strict liability, or otherwise, shall either Party be liable to the other Party, its agents, representatives, and/or assigns, for any special, punitive, incidental, indirect, exemplary, or consequential damages of any nature whatsoever, including, but not limited to, loss of profits.  The Parties also intend and agree that such provisions shall continue in full force and effect notwithstanding the termination, suspension, cancellation, or expiration of this Agreement.    11. DISPUTE RESOLUTION      11.1. Dispute Resolution   Any dispute between the Parties involving service under this Agreement shall be referred to a designated senior representative of each Party for resolution on an informal basis as promptly as practicable.  In the event the designated representatives are unable to resolve the dispute within thirty (30) days, or such other period as the Parties may agree upon, the Parties may pursue any remedies available.      11.2. Rights Under the Federal Power Act   Nothing in this section shall restrict the rights of either Party to file a complaint with the Commission under relevant provisions of the Federal Power Act.    12. NOTICES    12.1. Any notice provided for or concerning this Agreement, except the payment of bills as provided in Section 5.2,  shall be in writing and delivered by person or mail to the following:      If to UMERC:   Upper Michigan Energy Resources Corporation      Vice President   Wholesale Energy and Fuels      333 W. Everett Street, A214         Milwaukee, Wisconsin  53203    And    WEC Business Services  Director   Federal Regulatory Affairs and Policy  231 W. Michigan Street, P321  Milwaukee, WI   53203        If to Daggett:  Village of Daggett         Electric Department   P.O. Box 14       Daggett, MI   49821    Such notice shall be effective when received by the Party to whom it is sent.    13. SEVERABILITY    13.1. In the event that any of the terms, covenants, or conditions of this Agreement or the application of any such term, covenant, or condition, shall be held invalid as to any person or circumstance by any court having jurisdiction, all other terms, covenants, or conditions of this Agreement and their application shall not be affected thereby, but shall remain in force and effect unless a court holds that the provisions are not separable from all other provisions of this Agreement    14. GOVERNING LAW    14.1. This Agreement shall be interpreted, construed, and enforced in accordance with the laws of the State of Michigan without regard to conflicts of law provisions thereof.    15. SIGNATURE CLAUSE    15.1. The signatories hereto represent that they have been authorized to enter into this Agreement on behalf of the Party for whom they sign.    16. COUNTERPARTS      16.1. This Agreement may be executed in one or more counterparts which taken together shall form a valid Agreement.    [SIGNATURE PAGE FOLLOWS]    IN WITNESS WHEREOF, each of the Parties has caused this Agreement to be executed by its duly authorized representative as of the date first written above.      Village of Daggett, Michigan Upper Michigan Energy Resources Corporation      By:  /s/ John R. Heidenreich    By:  /s/ J. Patrick Keyes      Name:  John R. Heidenreich    Name:  J. Patrick Keyes      Title:  Village Clerk     Title:  President             Date:  October 17, 2016    Date:  October 21, 2016          SCHEDULE A    Facilities Used for Provision of Wholesale Distribution Service  Old US-41: Wholesale distribution service shall be provided to the Village of Daggett s Old US-41 service location from the point of receipt at Wisconsin Public Service Corporation s Ingalls Substation (138 kV to 24.9 kV) over UMERC s 24.9 kV feeder # 241 then converted to 4.16 kV prior to the point of delivery at the Old US-41 metering structure which is located on Old US-41 south of County Road 358 in the Village of Daggett, Daggett Township, Menominee County, Michigan, or over any successor facilities should UMERC reconfigure or rebuild its distribution facilities.        Capacity Reservation = 0.3116MW (0.346MW @ 90% Capacity Factor)  DC\81591370.1    1        1</record_plain_text>
      <record_change_type>NEW</record_change_type>
      <filing_id>173</filing_id>
      <filing_title>UMERC to Daggett Rate Schedule No 6</filing_title>
      <filing_type>10</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2017-01-01</current_effective_date>
      <ferc_order_date>2016-12-29</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
    <record_data>
      <record_id>190</record_id>
      <option_code>A</option_code>
      <record_title>UMERC - Stephenson WDA RS No 7</record_title>
      <record_content_desc>Cover Sheet</record_content_desc>
      <record_version_num>1.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>7000</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2017-01-01</proposed_effective_date>
      <priority_order>500</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data>e1xydGYxXGFkZWZsYW5nMTAyNVxhbnNpXGFuc2ljcGcxMjUyXHVjMVxhZGVmZjBcZGVmZjBcc3RzaGZkYmNoMFxzdHNoZmxvY2gwXHN0c2hmaGljaDBcc3RzaGZiaTBcZGVmbGFuZzEwMzNcZGVmbGFuZ2ZlMTAzM1x0aGVtZWxhbmcxMDMzXHRoZW1lbGFuZ2ZlMFx0aGVtZWxhbmdjczB7XGZvbnR0Ymx7XGYwXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjAyMDYwMzA1MDQwNTAyMDMwNH1UaW1lcyBOZXcgUm9tYW47fXtcZjFcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNjA0MDIwMjAyMDIwMjA0fUFyaWFsO30NCntcZjJcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQwXGZwcnExe1wqXHBhbm9zZSAwMjA3MDMwOTAyMDIwNTAyMDQwNH1Db3VyaWVyIE5ldzt9e1xmM1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MlxmcHJxMntcKlxwYW5vc2UgMDUwNTAxMDIwMTA3MDYwMjA1MDd9U3ltYm9sO317XGYxMFxmYmlkaSBcZm5pbFxmY2hhcnNldDJcZnBycTJ7XCpccGFub3NlIDA1MDAwMDAwMDAwMDAwMDAwMDAwfVdpbmdkaW5nczt9DQp7XGYzNFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MVxmcHJxMntcKlxwYW5vc2UgMDIwNDA1MDMwNTA0MDYwMzAyMDR9Q2FtYnJpYSBNYXRoO317XGYzOFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwYjA2MDQwMzA1MDQwNDAyMDR9VGFob21hO317XGZsb21ham9yXGYzMTUwMFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwMjA2MDMwNTA0MDUwMjAzMDR9VGltZXMgTmV3IFJvbWFuO30NCntcZmRibWFqb3JcZjMxNTAxXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjAyMDYwMzA1MDQwNTAyMDMwNH1UaW1lcyBOZXcgUm9tYW47fXtcZmhpbWFqb3JcZjMxNTAyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjA0MDUwMzA1MDQwNjAzMDIwNH1DYW1icmlhO30NCntcZmJpbWFqb3JcZjMxNTAzXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjAyMDYwMzA1MDQwNTAyMDMwNH1UaW1lcyBOZXcgUm9tYW47fXtcZmxvbWlub3JcZjMxNTA0XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjAyMDYwMzA1MDQwNTAyMDMwNH1UaW1lcyBOZXcgUm9tYW47fQ0Ke1xmZGJtaW5vclxmMzE1MDVcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDIwNjAzMDUwNDA1MDIwMzA0fVRpbWVzIE5ldyBSb21hbjt9e1xmaGltaW5vclxmMzE1MDZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGYwNTAyMDIwMjA0MDMwMjA0fUNhbGlicmk7fQ0Ke1xmYmltaW5vclxmMzE1MDdcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDIwNjAzMDUwNDA1MDIwMzA0fVRpbWVzIE5ldyBSb21hbjt9e1xmMzlcZmJpZGkgXGZyb21hblxmY2hhcnNldDIzOFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQ0U7fXtcZjQwXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgVGltZXMgTmV3IFJvbWFuIEN5cjt9DQp7XGY0MlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYxXGZwcnEyIFRpbWVzIE5ldyBSb21hbiBHcmVlazt9e1xmNDNcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MlxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gVHVyO317XGY0NFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc3XGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoSGVicmV3KTt9e1xmNDVcZmJpZGkgXGZyb21hblxmY2hhcnNldDE3OFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKEFyYWJpYyk7fQ0Ke1xmNDZcZmJpZGkgXGZyb21hblxmY2hhcnNldDE4NlxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQmFsdGljO317XGY0N1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYzXGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoVmlldG5hbWVzZSk7fXtcZjQ5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgQXJpYWwgQ0U7fXtcZjUwXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgQXJpYWwgQ3lyO30NCntcZjUyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgQXJpYWwgR3JlZWs7fXtcZjUzXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgQXJpYWwgVHVyO317XGY1NFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTc3XGZwcnEyIEFyaWFsIChIZWJyZXcpO317XGY1NVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTc4XGZwcnEyIEFyaWFsIChBcmFiaWMpO30NCntcZjU2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgQXJpYWwgQmFsdGljO317XGY1N1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYzXGZwcnEyIEFyaWFsIChWaWV0bmFtZXNlKTt9e1xmNTlcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQyMzhcZnBycTEgQ291cmllciBOZXcgQ0U7fXtcZjYwXGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MjA0XGZwcnExIENvdXJpZXIgTmV3IEN5cjt9DQp7XGY2MlxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDE2MVxmcHJxMSBDb3VyaWVyIE5ldyBHcmVlazt9e1xmNjNcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxNjJcZnBycTEgQ291cmllciBOZXcgVHVyO317XGY2NFxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDE3N1xmcHJxMSBDb3VyaWVyIE5ldyAoSGVicmV3KTt9e1xmNjVcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxNzhcZnBycTEgQ291cmllciBOZXcgKEFyYWJpYyk7fQ0Ke1xmNjZcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxODZcZnBycTEgQ291cmllciBOZXcgQmFsdGljO317XGY2N1xmYmlkaSBcZm1vZGVyblxmY2hhcnNldDE2M1xmcHJxMSBDb3VyaWVyIE5ldyAoVmlldG5hbWVzZSk7fXtcZmxvbWFqb3JcZjMxNTA4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMzhcZnBycTIgVGltZXMgTmV3IFJvbWFuIENFO30NCntcZmxvbWFqb3JcZjMxNTA5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgVGltZXMgTmV3IFJvbWFuIEN5cjt9e1xmbG9tYWpvclxmMzE1MTFcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MVxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gR3JlZWs7fXtcZmxvbWFqb3JcZjMxNTEyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjJcZnBycTIgVGltZXMgTmV3IFJvbWFuIFR1cjt9DQp7XGZsb21ham9yXGYzMTUxM1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc3XGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoSGVicmV3KTt9e1xmbG9tYWpvclxmMzE1MTRcZmJpZGkgXGZyb21hblxmY2hhcnNldDE3OFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKEFyYWJpYyk7fXtcZmxvbWFqb3JcZjMxNTE1XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxODZcZnBycTIgVGltZXMgTmV3IFJvbWFuIEJhbHRpYzt9DQp7XGZsb21ham9yXGYzMTUxNlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYzXGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoVmlldG5hbWVzZSk7fXtcZmRibWFqb3JcZjMxNTE4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMzhcZnBycTIgVGltZXMgTmV3IFJvbWFuIENFO317XGZkYm1ham9yXGYzMTUxOVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjA0XGZwcnEyIFRpbWVzIE5ldyBSb21hbiBDeXI7fQ0Ke1xmZGJtYWpvclxmMzE1MjFcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MVxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gR3JlZWs7fXtcZmRibWFqb3JcZjMxNTIyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjJcZnBycTIgVGltZXMgTmV3IFJvbWFuIFR1cjt9e1xmZGJtYWpvclxmMzE1MjNcZmJpZGkgXGZyb21hblxmY2hhcnNldDE3N1xmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKEhlYnJldyk7fQ0Ke1xmZGJtYWpvclxmMzE1MjRcZmJpZGkgXGZyb21hblxmY2hhcnNldDE3OFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKEFyYWJpYyk7fXtcZmRibWFqb3JcZjMxNTI1XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxODZcZnBycTIgVGltZXMgTmV3IFJvbWFuIEJhbHRpYzt9e1xmZGJtYWpvclxmMzE1MjZcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2M1xmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKFZpZXRuYW1lc2UpO30NCntcZmhpbWFqb3JcZjMxNTI4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMzhcZnBycTIgQ2FtYnJpYSBDRTt9e1xmaGltYWpvclxmMzE1MjlcZmJpZGkgXGZyb21hblxmY2hhcnNldDIwNFxmcHJxMiBDYW1icmlhIEN5cjt9e1xmaGltYWpvclxmMzE1MzFcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MVxmcHJxMiBDYW1icmlhIEdyZWVrO317XGZoaW1ham9yXGYzMTUzMlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYyXGZwcnEyIENhbWJyaWEgVHVyO30NCntcZmhpbWFqb3JcZjMxNTM1XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxODZcZnBycTIgQ2FtYnJpYSBCYWx0aWM7fXtcZmhpbWFqb3JcZjMxNTM2XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjNcZnBycTIgQ2FtYnJpYSAoVmlldG5hbWVzZSk7fXtcZmJpbWFqb3JcZjMxNTM4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMzhcZnBycTIgVGltZXMgTmV3IFJvbWFuIENFO30NCntcZmJpbWFqb3JcZjMxNTM5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgVGltZXMgTmV3IFJvbWFuIEN5cjt9e1xmYmltYWpvclxmMzE1NDFcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MVxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gR3JlZWs7fXtcZmJpbWFqb3JcZjMxNTQyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjJcZnBycTIgVGltZXMgTmV3IFJvbWFuIFR1cjt9DQp7XGZiaW1ham9yXGYzMTU0M1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc3XGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoSGVicmV3KTt9e1xmYmltYWpvclxmMzE1NDRcZmJpZGkgXGZyb21hblxmY2hhcnNldDE3OFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKEFyYWJpYyk7fXtcZmJpbWFqb3JcZjMxNTQ1XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxODZcZnBycTIgVGltZXMgTmV3IFJvbWFuIEJhbHRpYzt9DQp7XGZiaW1ham9yXGYzMTU0NlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYzXGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoVmlldG5hbWVzZSk7fXtcZmxvbWlub3JcZjMxNTQ4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMzhcZnBycTIgVGltZXMgTmV3IFJvbWFuIENFO317XGZsb21pbm9yXGYzMTU0OVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjA0XGZwcnEyIFRpbWVzIE5ldyBSb21hbiBDeXI7fQ0Ke1xmbG9taW5vclxmMzE1NTFcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MVxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gR3JlZWs7fXtcZmxvbWlub3JcZjMxNTUyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjJcZnBycTIgVGltZXMgTmV3IFJvbWFuIFR1cjt9e1xmbG9taW5vclxmMzE1NTNcZmJpZGkgXGZyb21hblxmY2hhcnNldDE3N1xmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKEhlYnJldyk7fQ0Ke1xmbG9taW5vclxmMzE1NTRcZmJpZGkgXGZyb21hblxmY2hhcnNldDE3OFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKEFyYWJpYyk7fXtcZmxvbWlub3JcZjMxNTU1XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxODZcZnBycTIgVGltZXMgTmV3IFJvbWFuIEJhbHRpYzt9e1xmbG9taW5vclxmMzE1NTZcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2M1xmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKFZpZXRuYW1lc2UpO30NCntcZmRibWlub3JcZjMxNTU4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMzhcZnBycTIgVGltZXMgTmV3IFJvbWFuIENFO317XGZkYm1pbm9yXGYzMTU1OVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjA0XGZwcnEyIFRpbWVzIE5ldyBSb21hbiBDeXI7fXtcZmRibWlub3JcZjMxNTYxXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjFcZnBycTIgVGltZXMgTmV3IFJvbWFuIEdyZWVrO30NCntcZmRibWlub3JcZjMxNTYyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjJcZnBycTIgVGltZXMgTmV3IFJvbWFuIFR1cjt9e1xmZGJtaW5vclxmMzE1NjNcZmJpZGkgXGZyb21hblxmY2hhcnNldDE3N1xmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKEhlYnJldyk7fXtcZmRibWlub3JcZjMxNTY0XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNzhcZnBycTIgVGltZXMgTmV3IFJvbWFuIChBcmFiaWMpO30NCntcZmRibWlub3JcZjMxNTY1XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxODZcZnBycTIgVGltZXMgTmV3IFJvbWFuIEJhbHRpYzt9e1xmZGJtaW5vclxmMzE1NjZcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2M1xmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKFZpZXRuYW1lc2UpO317XGZoaW1pbm9yXGYzMTU2OFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjM4XGZwcnEyIENhbGlicmkgQ0U7fQ0Ke1xmaGltaW5vclxmMzE1NjlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBDYWxpYnJpIEN5cjt9e1xmaGltaW5vclxmMzE1NzFcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBDYWxpYnJpIEdyZWVrO317XGZoaW1pbm9yXGYzMTU3MlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIENhbGlicmkgVHVyO30NCntcZmhpbWlub3JcZjMxNTc1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgQ2FsaWJyaSBCYWx0aWM7fXtcZmhpbWlub3JcZjMxNTc2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjNcZnBycTIgQ2FsaWJyaSAoVmlldG5hbWVzZSk7fXtcZmJpbWlub3JcZjMxNTc4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMzhcZnBycTIgVGltZXMgTmV3IFJvbWFuIENFO30NCntcZmJpbWlub3JcZjMxNTc5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgVGltZXMgTmV3IFJvbWFuIEN5cjt9e1xmYmltaW5vclxmMzE1ODFcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MVxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gR3JlZWs7fXtcZmJpbWlub3JcZjMxNTgyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjJcZnBycTIgVGltZXMgTmV3IFJvbWFuIFR1cjt9DQp7XGZiaW1pbm9yXGYzMTU4M1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc3XGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoSGVicmV3KTt9e1xmYmltaW5vclxmMzE1ODRcZmJpZGkgXGZyb21hblxmY2hhcnNldDE3OFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKEFyYWJpYyk7fXtcZmJpbWlub3JcZjMxNTg1XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxODZcZnBycTIgVGltZXMgTmV3IFJvbWFuIEJhbHRpYzt9DQp7XGZiaW1pbm9yXGYzMTU4NlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYzXGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoVmlldG5hbWVzZSk7fX17XGNvbG9ydGJsO1xyZWQwXGdyZWVuMFxibHVlMDtccmVkMFxncmVlbjBcYmx1ZTI1NTtccmVkMFxncmVlbjI1NVxibHVlMjU1O1xyZWQwXGdyZWVuMjU1XGJsdWUwO1xyZWQyNTVcZ3JlZW4wXGJsdWUyNTU7XHJlZDI1NVxncmVlbjBcYmx1ZTA7XHJlZDI1NVxncmVlbjI1NVxibHVlMDsNClxyZWQyNTVcZ3JlZW4yNTVcYmx1ZTI1NTtccmVkMFxncmVlbjBcYmx1ZTEyODtccmVkMFxncmVlbjEyOFxibHVlMTI4O1xyZWQwXGdyZWVuMTI4XGJsdWUwO1xyZWQxMjhcZ3JlZW4wXGJsdWUxMjg7XHJlZDEyOFxncmVlbjBcYmx1ZTA7XHJlZDEyOFxncmVlbjEyOFxibHVlMDtccmVkMTI4XGdyZWVuMTI4XGJsdWUxMjg7XHJlZDE5MlxncmVlbjE5MlxibHVlMTkyO317XCpcZGVmY2hwIH17XCpcZGVmcGFwIA0KXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCB9XG5vcWZwcm9tb3RlIHtcc3R5bGVzaGVldHtccWwgXGxpMFxyaTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzbmV4dDAgXHNxZm9ybWF0IFxzcHJpb3JpdHkwIE5vcm1hbDt9e1xzMVxxbCBcbGkwXHJpMFxzYTI0MFxrZWVwblxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhZjFcYWZzMzJcYWxhbmcxMDI1IA0KXGx0cmNoXGZjczAgXGJcZnMzMlxsYW5nMTAzM1xsYW5nZmUxMDMzXGtlcm5pbmczMlxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDIwIFxzcWZvcm1hdCBcc3ByaW9yaXR5MCBoZWFkaW5nIDE7fXtcczJccWwgXGxpMFxyaTBcc2EyNDBca2VlcG5cbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCANClxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjhcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGlcZnMyOFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MjAgXHNxZm9ybWF0IFxzcHJpb3JpdHkwIGhlYWRpbmcgMjt9ew0KXHMzXHFsIFxsaTBccmkwXHNhMjQwXGtlZXBuXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cb3V0bGluZWxldmVsMlxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFmMVxhZnMyNlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMCBcc25leHQyMCBcc3Fmb3JtYXQgXHNwcmlvcml0eTAgaGVhZGluZyAzO317XHM0XHFsIFxsaTBccmkwXHNhMjQwXGtlZXBuXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cb3V0bGluZWxldmVsM1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyOFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcYlxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQyMCBcc3Fmb3JtYXQgXHNwcmlvcml0eTAgaGVhZGluZyA0O317XHM1XHFsIFxsaTBccmkwXHNhMjQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cb3V0bGluZWxldmVsNFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgDQpcYWJcYWlcYWYwXGFmczI2XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxpXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDIwIFxzcWZvcm1hdCBcc3ByaW9yaXR5MCBoZWFkaW5nIDU7fXsNClxzNlxxbCBcbGkwXHJpMFxzYTI0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDVcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MjAgXHNxZm9ybWF0IFxzcHJpb3JpdHkwIGhlYWRpbmcgNjt9e1xzN1xxbCBcbGkwXHJpMFxzYTI0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDZcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDIwIFxzcWZvcm1hdCBcc3ByaW9yaXR5MCBoZWFkaW5nIDc7fXtcczhccWwgXGxpMFxyaTBcc2EyNDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWw3XGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSANClxhaVxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxpXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDIwIFxzcWZvcm1hdCBcc3ByaW9yaXR5MCBoZWFkaW5nIDg7fXsNClxzOVxxbCBcbGkwXHJpMFxzYTI0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDhcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjFcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQyMCBcc3Fmb3JtYXQgXHNwcmlvcml0eTAgDQpoZWFkaW5nIDk7fXtcKlxjczEwIFxhZGRpdGl2ZSBcc3NlbWloaWRkZW4gXHN1bmhpZGV1c2VkIFxzcHJpb3JpdHkxIERlZmF1bHQgUGFyYWdyYXBoIEZvbnQ7fXtcKg0KXHRzMTFcdHNyb3dkXHRyZnRzV2lkdGhCM1x0cnBhZGRsMTA4XHRycGFkZHIxMDhcdHJwYWRkZmwzXHRycGFkZGZ0M1x0cnBhZGRmYjNcdHJwYWRkZnIzXHRyY2JwYXQxXHRyY2ZwYXQxXHRibGluZDBcdGJsaW5kdHlwZTNcdHN2ZXJ0YWx0XHRzYnJkcnRcdHNicmRybFx0c2JyZHJiXHRzYnJkcnJcdHNicmRyZGdsXHRzYnJkcmRnclx0c2JyZHJoXHRzYnJkcnYgDQpccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczIwXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNuZXh0MTEgXHNzZW1paGlkZGVuIFxzdW5oaWRldXNlZCBOb3JtYWwgVGFibGU7fXsNClxzMTVccWwgXGxpMFxyaTBcbm93aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQxNSBcc3ByaW9yaXR5MCBoZWFkZXI7fQ0Ke1xzMTZccWwgXGxpMFxyaTBcbm93aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQxNiBcc3ByaW9yaXR5MCANCmZvb3Rlcjt9e1xzMTdccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MTcgXHNzZW1paGlkZGVuIFxzcHJpb3JpdHkwIGZvb3Rub3RlIHRleHQ7fXtcKlxjczE4IFxhZGRpdGl2ZSBcc3VwZXIgXHNzZW1paGlkZGVuIFxzcHJpb3JpdHkwIGZvb3Rub3RlIHJlZmVyZW5jZTt9e1xzMTlccWwgXGxpMFxyaTBcc2ExMjBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgDQpcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjM0IFxzbmV4dDM0IFxzcHJpb3JpdHkwIEJvZHkgVGV4dCBDb250aW51ZWQ7fXtcczIwXHFqIFxsaTBccmkwXHNhMjQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIA0KXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDIwIFxzcHJpb3JpdHkwIH5Cb2R5IDAsQm9keSAwLGIwO317XHMyMVxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCANClxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQyMSBcc3ByaW9yaXR5MCB+Qm9keSAxLEJvZHkgMSxiMTt9ew0KXHMyMlxxaiBcZmkxNDQwXGxpMFxyaTBcc2EyNDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDIyIFxzcHJpb3JpdHkwIA0KfkJvZHkgMixCb2R5IDIsYjI7fXtcczIzXHFqIFxsaTBccmkwXHNsNDgwXHNsbXVsdDFcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MjMgXHNwcmlvcml0eTAgfkJvZHkgMyxCb2R5IDMsYjM7fXtcczI0XHFqIFxmaTcyMFxsaTBccmkwXHNsNDgwXHNsbXVsdDFcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MjQgXHNwcmlvcml0eTAgfkJvZHkgNCxCb2R5IDQsYjQ7fXtcczI1XHFqIFxmaTE0NDBcbGkwXHJpMFxzbDQ4MFxzbG11bHQxXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IA0KXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDI1IFxzcHJpb3JpdHkwIH5Cb2R5IDUsQm9keSA1LGI1O317XHMyNlxxaiBcbGk3MjBccmk3MjBcc2EyNDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW43MjBcbGluNzIwXGl0YXAwIFxydGxjaFxmY3MxIA0KXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDI2IFxzcHJpb3JpdHkwIH5RdW90ZSAxLFF1b3RlIDEscTE7fXtcczI3XHFqIFxsaTE0NDBccmkxNDQwXHNhMjQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMTQ0MFxsaW4xNDQwXGl0YXAwIA0KXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDI3IFxzcHJpb3JpdHkwIH5RdW90ZSAyLFF1b3RlIDIscTI7fXsNClxzMjhccWogXGxpMjE2MFxyaTIxNjBcc2EyNDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4yMTYwXGxpbjIxNjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDI4IFxzcHJpb3JpdHkwIA0KflF1b3RlIDMsUXVvdGUgMyxxMzt9e1xzMjlccWMgXGxpMFxyaTBcc2EyNDBca2VlcG5cbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMCBcc25leHQyMCBcc3ByaW9yaXR5MCB+VGl0bGUgMCxUaXRsZSAwLHQwO317XHMzMFxxYyBcbGkwXHJpMFxzYTI0MFxrZWVwblxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MjAgXHNwcmlvcml0eTAgflRpdGxlIDEsVGl0bGUgMSx0MTt9e1xzMzFccWMgXGxpMFxyaTBcc2EyNDBca2VlcG5cbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSANClxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDIwIFxzcHJpb3JpdHkwIH5UaXRsZSAzLFRpdGxlIDMsdDM7fXsNClxzMzJccWwgXGxpMFxyaTBcc2EyNDBca2VlcG5cbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQyMCBcc3ByaW9yaXR5MCANCn5TdWJ0aXRsZSAwLFN1YnRpdGxlIDAsczA7fXtcczMzXHFsIFxsaTBccmkwXHNhMjQwXGtlZXBuXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MjAgXHNwcmlvcml0eTAgflN1YnRpdGxlIDEsU3VidGl0bGUgMSxzMTt9e1xzMzRccWwgXGxpMFxyaTBcc2ExMjBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MzQgXHNwcmlvcml0eTAgQm9keSBUZXh0O317XHMzNVxxbCBcbGkxNDQwXHJpMTQ0MFxzYTI0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjE0NDBcbGluMTQ0MFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQxOSBcc3Fmb3JtYXQgXHNwcmlvcml0eTAgUXVvdGU7fXtcKlxjczM2IFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxzYmFzZWRvbjEwIFxzcHJpb3JpdHkwIHBhZ2UgbnVtYmVyO317DQpcczM3XHFsIFxsaTBccmkwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQzNyBcc3ByaW9yaXR5MCBUYWJsZSBIZWFkaW5nLHgxO317DQpcczM4XHFsIFxsaTBccmkwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQzOCBcc3ByaW9yaXR5MCBUYWJsZSBUZXh0LHgyO317DQpcczM5XHFsIFxsaTBccmkwXGtlZXBca2VlcG5cbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDM5IFxzcHJpb3JpdHkwIA0KUGxlYWRpbmcgU2lnbmF0dXJlO317XHM0MFxxbCBcbGkwXHJpMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMCBcc25leHQwIFxzcWZvcm1hdCBcc3ByaW9yaXR5MCBjYXB0aW9uO317XHM0MVxxYyBcbGkwXHJpMFxzYjQwXHNhNzIwXHNsLTQ4MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDQxIFxzcHJpb3JpdHkwIENvdXJ0O317XCpcY3M0MiBcYWRkaXRpdmUgXGYwXGZzMTZcdWxub25lXGV4cG5kMFxleHBuZHR3MFxjZjBcdXAwXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9zdXBlcnN1YlxhbmltdGV4dDBcc3RyaWtlZDBcbm9wcm9vZiBcc3ByaW9yaXR5MCB6em1wVHJhaWxlckl0ZW07fXtcKg0KXHRzNDNcdHNyb3dkXHRyYnJkcnRcYnJkcnNcYnJkcncxMCBcdHJicmRybFxicmRyc1xicmRydzEwIFx0cmJyZHJiXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnJcYnJkcnNcYnJkcncxMCBcdHJicmRyaFxicmRyc1xicmRydzEwIFx0cmJyZHJ2XGJyZHJzXGJyZHJ3MTAgDQpcdHJmdHNXaWR0aEIzXHRycGFkZGwxMDhcdHJwYWRkcjEwOFx0cnBhZGRmbDNcdHJwYWRkZnQzXHRycGFkZGZiM1x0cnBhZGRmcjNcdHJjYnBhdDFcdHJjZnBhdDFcdGJsaW5kMFx0YmxpbmR0eXBlM1x0c3ZlcnRhbHRcdHNicmRydFx0c2JyZHJsXHRzYnJkcmJcdHNicmRyclx0c2JyZHJkZ2xcdHNicmRyZGdyXHRzYnJkcmhcdHNicmRydiANClxxbCBcbGkwXHJpMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyMFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjExIFxzbmV4dDQzIFxzcHJpb3JpdHkwIFRhYmxlIEdyaWQ7fXsNClxzNDRccWwgXGxpMFxyaTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMzhcYWZzMTZcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmMzhcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0NDQgXHNzZW1paGlkZGVuIFxzcHJpb3JpdHkwIA0KQmFsbG9vbiBUZXh0O317XHM0NVxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZjFcZnMyOFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0NDUgXHNwcmlvcml0eTAgDQpEcmFmdCBTdGFtcDt9e1xzNDZccWwgXGxpMFxyaTBcc2IxMDBcc2ExMDBcc2JhdXRvMVxzYWF1dG8xXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMCBcc25leHQ0NiBcc3ByaW9yaXR5MCBOb3JtYWwgKFdlYik7fXtcczQ3XHFsIFxsaTBccmkwXHNhMTIwXHNsNDgwXHNsbXVsdDFcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0NDcgXHNwcmlvcml0eTAgQm9keSBUZXh0IDI7fXtcczQ4XHFjIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxiXGlcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0NDggXHNxZm9ybWF0IFxzcHJpb3JpdHkwIFRpdGxlO317XHM0OVxxbCBcbGkwXHJpMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBcY2JwYXQ5IFxydGxjaFxmY3MxIFxhZjM4XGFmczIwXGFsYW5nMTAyNSANClxsdHJjaFxmY3MwIFxmMzhcZnMyMFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0NDkgXHNzZW1paGlkZGVuIFxzcHJpb3JpdHkwIERvY3VtZW50IE1hcDt9e1wqXGNzNTAgXGFkZGl0aXZlIFxmczE2IFxzcHJpb3JpdHkwIGFubm90YXRpb24gcmVmZXJlbmNlO317DQpcczUxXHFsIFxsaTBccmkwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczIwXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQ1MSBcc2xpbms1MiBcc3ByaW9yaXR5MCBhbm5vdGF0aW9uIHRleHQ7fXtcKg0KXGNzNTIgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHNiYXNlZG9uMTAgXHNsaW5rNTEgXHNsb2NrZWQgXHNwcmlvcml0eTAgQ29tbWVudCBUZXh0IENoYXI7fXtcczUzXHFsIFxsaTBccmkwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGJcZnMyMFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjUxIFxzbmV4dDUxIFxzbGluazU0IFxzcHJpb3JpdHkwIGFubm90YXRpb24gc3ViamVjdDt9e1wqXGNzNTQgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGIgXHNiYXNlZG9uNTIgXHNsaW5rNTMgXHNsb2NrZWQgXHNwcmlvcml0eTAgQ29tbWVudCBTdWJqZWN0IENoYXI7fXsNClxzNTVccWwgXGxpNzIwXHJpMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQ1NSBcc3Fmb3JtYXQgXHNwcmlvcml0eTM0IA0KTGlzdCBQYXJhZ3JhcGg7fX17XCpcbGlzdHRhYmxle1xsaXN0XGxpc3R0ZW1wbGF0ZWlkLTE1OTY0NDk0OTBcbGlzdHNpbXBsZXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGZpLTM2MFxsaTE4MDBcamNsaXN0dGFiXHR4MTgwMFxsaW4xODAwIH17XGxpc3RuYW1lIDt9XGxpc3RpZC0xMzJ9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkNzYzMjY4MTk4XGxpc3RzaW1wbGV7XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGkxNDQwXGpjbGlzdHRhYlx0eDE0NDBcbGluMTQ0MCB9e1xsaXN0bmFtZSA7fVxsaXN0aWQtMTMxfXtcbGlzdFxsaXN0dGVtcGxhdGVpZDIwMTY4MjI5NzJcbGlzdHNpbXBsZXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXCcwMlwnMDAuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTEwODBcamNsaXN0dGFiXHR4MTA4MFxsaW4xMDgwIH17XGxpc3RuYW1lIDt9XGxpc3RpZC0xMzB9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkMjEwNzcwMjc0MFxsaXN0c2ltcGxle1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxDQpcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpNzIwXGpjbGlzdHRhYlx0eDcyMFxsaW43MjAgfXtcbGlzdG5hbWUgO31cbGlzdGlkLTEyOX17XGxpc3RcbGlzdHRlbXBsYXRlaWQxNDg4NjAxODIwXGxpc3RzaW1wbGV7XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMA0KXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fVxmM1xmYmlhczAgXGZpLTM2MFxsaTE4MDBcamNsaXN0dGFiXHR4MTgwMFxsaW4xODAwIH17XGxpc3RuYW1lIDt9XGxpc3RpZC0xMjh9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkLTQ1MzYxMDg3OFxsaXN0c2ltcGxle1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yMw0KXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDFcdS0zOTEzID87fXtcbGV2ZWxudW1iZXJzO31cZjNcZmJpYXMwIFxmaS0zNjBcbGkxNDQwXGpjbGlzdHRhYlx0eDE0NDBcbGluMTQ0MCB9e1xsaXN0bmFtZSA7fVxsaXN0aWQtMTI3fXtcbGlzdFxsaXN0dGVtcGxhdGVpZDUwNDY0MTk3MFxsaXN0c2ltcGxle1xsaXN0bGV2ZWxcbGV2ZWxuZmMyMw0KXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDFcdS0zOTEzID87fXtcbGV2ZWxudW1iZXJzO31cZjNcZmJpYXMwIFxmaS0zNjBcbGkxMDgwXGpjbGlzdHRhYlx0eDEwODBcbGluMTA4MCB9e1xsaXN0bmFtZSA7fVxsaXN0aWQtMTI2fXtcbGlzdFxsaXN0dGVtcGxhdGVpZC0yMDU0NjcxNjc0XGxpc3RzaW1wbGUNCntcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fVxmM1xmYmlhczAgXGZpLTM2MFxsaTcyMFxqY2xpc3R0YWJcdHg3MjBcbGluNzIwIH17XGxpc3RuYW1lIDt9XGxpc3RpZC0xMjV9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkMTA4MjI2OTc0Ng0KXGxpc3RzaW1wbGV7XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMzYwXGpjbGlzdHRhYlx0eDM2MFxsaW4zNjAgfXtcbGlzdG5hbWUgO31cbGlzdGlkLTEyMH0NCntcbGlzdFxsaXN0dGVtcGxhdGVpZDYwNzcwNTgzMlxsaXN0c2ltcGxle1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAxXHUtMzkxMyA/O317XGxldmVsbnVtYmVyczt9XGYzXGZiaWFzMCBcZmktMzYwXGxpMzYwXGpjbGlzdHRhYlx0eDM2MFxsaW4zNjAgfXtcbGlzdG5hbWUgDQo7fVxsaXN0aWQtMTE5fXtcbGlzdFxsaXN0dGVtcGxhdGVpZDE5NDc2MDEyMzBcbGlzdGh5YnJpZHtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDEyNTY0OTQ0MTJcJzAxXHUtMzkxMyA/O317XGxldmVsbnVtYmVyczt9XGYzXGZiaWFzMCBcZmktMzYwXGxpMjg4MA0KXGpjbGlzdHRhYlx0eDI4ODBcbGluMjg4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDcxMjAwMzI0MlwnMDFvO317XGxldmVsbnVtYmVyczt9XGYyXGZiaWFzMCBcZmktMzYwXGxpMzYwMFxqY2xpc3R0YWJcdHgzNjAwXGxpbjM2MDAgDQp9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDEwMjA2ODI1NDhcJzAxXHUtMzkyOSA/O317XGxldmVsbnVtYmVyczt9XGYxMFxmYmlhczAgXGZpLTM2MFxsaTQzMjBcamNsaXN0dGFiXHR4NDMyMFxsaW40MzIwIH17XGxpc3RsZXZlbA0KXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQxOTAwNDI0MjQ0XCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fVxmM1xmYmlhczAgXGZpLTM2MFxsaTUwNDBcamNsaXN0dGFiXHR4NTA0MFxsaW41MDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzDQpcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQxNDA3MTA4OTcyXCcwMW87fXtcbGV2ZWxudW1iZXJzO31cZjJcZmJpYXMwIFxmaS0zNjBcbGk1NzYwXGpjbGlzdHRhYlx0eDU3NjBcbGluNTc2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMA0KXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTI3ODA4NzA5MFwnMDFcdS0zOTI5ID87fXtcbGV2ZWxudW1iZXJzO31cZjEwXGZiaWFzMCBcZmktMzYwXGxpNjQ4MFxqY2xpc3R0YWJcdHg2NDgwXGxpbjY0ODAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wDQpcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC03OTE3NDQ3MzZcJzAxXHUtMzkxMyA/O317XGxldmVsbnVtYmVyczt9XGYzXGZiaWFzMCBcZmktMzYwXGxpNzIwMFxqY2xpc3R0YWJcdHg3MjAwXGxpbjcyMDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MA0KXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDE0NzYwMzQ2MTRcJzAxbzt9e1xsZXZlbG51bWJlcnM7fVxmMlxmYmlhczAgXGZpLTM2MFxsaTc5MjBcamNsaXN0dGFiXHR4NzkyMFxsaW43OTIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MQ0KXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQyODMyNjAyMDhcJzAxXHUtMzkyOSA/O317XGxldmVsbnVtYmVyczt9XGYxMFxmYmlhczAgXGZpLTM2MFxsaTg2NDBcamNsaXN0dGFiXHR4ODY0MFxsaW44NjQwIH17XGxpc3RuYW1lIDt9XGxpc3RpZDIzMTUwNTg1OX17XGxpc3RcbGlzdHRlbXBsYXRlaWQtMTkyNTU1NDIyOFxsaXN0aHlicmlke1xsaXN0bGV2ZWxcbGV2ZWxuZmMwDQpcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTE2ODUxMTcyXCcwMlwnMDApO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZiaWFzMCBcZmktOTc1XGxpOTc1XGpjbGlzdHRhYlx0eDk3NVxsaW45NzUgfXtcbGlzdGxldmVsXGxldmVsbmZjNA0KXGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtMTAxNDA1MjE2XCcwMlwnMDEuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTEwODBcamNsaXN0dGFiXHR4MTA4MFxsaW4xMDgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzINClxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTcxMDQ4NDIwNlwnMDJcJzAyLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0xODBcbGkxODAwXGpjbGlzdHRhYlx0eDE4MDBcbGluMTgwMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwDQpcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDE3OTA3MTEzMDRcJzAyXCcwMy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMjUyMFxqY2xpc3R0YWJcdHgyNTIwXGxpbjI1MjAgfXtcbGlzdGxldmVsXGxldmVsbmZjNA0KXGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQyMDU2MTI3MzUwXCcwMlwnMDQuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTMyNDBcamNsaXN0dGFiXHR4MzI0MFxsaW4zMjQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzINClxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNDI1MjM0NTkyXCcwMlwnMDUuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTE4MFxsaTM5NjBcamNsaXN0dGFiXHR4Mzk2MFxsaW4zOTYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzANClxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTE5OTYxMzEzNlwnMDJcJzA2Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGk0NjgwXGpjbGlzdHRhYlx0eDQ2ODBcbGluNDY4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0DQpcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0xMjkxNzgxMFwnMDJcJzA3Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGk1NDAwXGpjbGlzdHRhYlx0eDU0MDBcbGluNTQwMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyDQpcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0zODAwNzU2NzhcJzAyXCcwOC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpNjEyMFxqY2xpc3R0YWJcdHg2MTIwXGxpbjYxMjAgfXtcbGlzdG5hbWUgDQo7fVxsaXN0aWQ0NDI1NzQ4NjB9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkMjA4MDAxNDc4NFxsaXN0aHlicmlke1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0xMDMzODcxNzU2XCcwMlwnMDAuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZmktMzYwXGxpNzIwXGpjbGlzdHRhYlx0eDcyMFxsaW43MjAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQzNzI0MzE4NjBcJzAyXCcwMSk7fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxmaS0zNjBcbGkxNDQwXGpjbGlzdHRhYlx0eDE0NDBcbGluMTQ0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtNTQ2NTIxODM4XCcwMlwnMDIuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZmktMTgwXGxpMjE2MFxqY2xpc3R0YWJcdHgyMTYwXGxpbjIxNjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMjI4NjAxOTgwXCcwMlwnMDMuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZmktMzYwXGxpMjg4MFxqY2xpc3R0YWJcdHgyODgwXGxpbjI4ODAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTI2ODA0ODIyNlwnMDJcJzA0Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGZpLTM2MFxsaTM2MDBcamNsaXN0dGFiXHR4MzYwMFxsaW4zNjAwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0zNTc2NDI3NDJcJzAyXCcwNS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxmaS0xODBcbGk0MzIwXGpjbGlzdHRhYlx0eDQzMjBcbGluNDMyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtMjQyMDI4NDcyXCcwMlwnMDYuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZmktMzYwXGxpNTA0MFxqY2xpc3R0YWJcdHg1MDQwXGxpbjUwNDAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTExNjczMTMxNjJcJzAyXCcwNy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxmaS0zNjBcbGk1NzYwXGpjbGlzdHRhYlx0eDU3NjBcbGluNTc2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtODg5Nzg2NjJcJzAyXCcwOC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxmaS0xODBcbGk2NDgwXGpjbGlzdHRhYlx0eDY0ODBcbGluNjQ4MCB9e1xsaXN0bmFtZSA7fVxsaXN0aWQ2MjQ3NzQ3ODR9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkLTE2OTc5OTAzNzZcbGlzdGh5YnJpZHtcbGlzdGxldmVsXGxldmVsbmZjMVxsZXZlbG5mY24xXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0NFxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtMTgxNjIyOTA0Ng0KXCcwMlwnMDAuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsbm9uZVxmYmlhczAgXGZpLTcyMFxsaTEwODBcamNsaXN0dGFiXHR4MTA4MFxsaW4xMDgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkLTgwODE0NzM4XCcwMlwnMDEuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTE0NDBcamNsaXN0dGFiXHR4MTQ0MFxsaW4xNDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkLTIwNTU0NTAzMDBcJzAyXCcwMi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpMjE2MFxqY2xpc3R0YWJcdHgyMTYwXGxpbjIxNjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQ4NDU2OTI0NjRcJzAyXCcwMy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMjg4MFxqY2xpc3R0YWJcdHgyODgwXGxpbjI4ODAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQxMDIxMDY4ODI4XCcwMlwnMDQuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTM2MDBcamNsaXN0dGFiXHR4MzYwMFxsaW4zNjAwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkMjU5ODE3NDUyXCcwMlwnMDUuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTE4MFxsaTQzMjBcamNsaXN0dGFiXHR4NDMyMFxsaW40MzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkNDM4NTg5NDIwXCcwMlwnMDYuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTUwNDBcamNsaXN0dGFiXHR4NTA0MFxsaW41MDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkLTE5OTA1MzA3NDRcJzAyXCcwNy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpNTc2MFxqY2xpc3R0YWJcdHg1NzYwXGxpbjU3NjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQ3OTgzNjI2MTBcJzAyXCcwOC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpNjQ4MFxqY2xpc3R0YWJcdHg2NDgwXGxpbjY0ODAgfXtcbGlzdG5hbWUgO31cbGlzdGlkNjcxOTUwMzk1fXtcbGlzdFxsaXN0dGVtcGxhdGVpZDEyNzM1MjU4NTJcbGlzdGh5YnJpZHtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMg0KXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0yMDA0OTU2NjE2XCcwMlwnMDAuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTIxNjBcamNsaXN0dGFiXHR4MjE2MFxsaW4yMTYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwDQpcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTc0MTg0NDQyMFwnMDJcJzAxLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGkyODgwXGpjbGlzdHRhYlx0eDI4ODBcbGluMjg4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MA0KXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDUyMjg1MTA2MFwnMDJcJzAyLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0xODBcbGkzNjAwXGpjbGlzdHRhYlx0eDM2MDBcbGluMzYwMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MA0KXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0xOTM1NTAyNjcyXCcwMlwnMDMuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTQzMjBcamNsaXN0dGFiXHR4NDMyMFxsaW40MzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwDQpcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMjY3ODI5MDQ2XCcwMlwnMDQuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTUwNDBcamNsaXN0dGFiXHR4NTA0MFxsaW41MDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwDQpcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkODg5MDAxNDhcJzAyXCcwNS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpNTc2MFxqY2xpc3R0YWJcdHg1NzYwXGxpbjU3NjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzANClxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQxNzQxNDUxMTU4XCcwMlwnMDYuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTY0ODBcamNsaXN0dGFiXHR4NjQ4MFxsaW42NDgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwDQpcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkODc5MzczOTAyXCcwMlwnMDcuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTcyMDBcamNsaXN0dGFiXHR4NzIwMFxsaW43MjAwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwDQpcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTEwMjY2Mjk0MDBcJzAyXCcwOC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpNzkyMFxqY2xpc3R0YWJcdHg3OTIwXGxpbjc5MjAgfXtcbGlzdG5hbWUgO31cbGlzdGlkNzI2MzM5MjkxfXtcbGlzdFxsaXN0dGVtcGxhdGVpZC00MTM1MjUyMTYNClxsaXN0aHlicmlke1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDU0MzcyNzg4MFwnMDMoXCcwMCk7fXtcbGV2ZWxudW1iZXJzXCcwMjt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmJpYXMwIFxmaS0xMDM1XGxpMTc1NQ0KXGpjbGlzdHRhYlx0eDE3NTVcbGluMTc1NSB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ5MjEyMTk4MzZcJzAyXCcwMS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMTgwMA0KXGpjbGlzdHRhYlx0eDE4MDBcbGluMTgwMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQzMjcwMzA4ODhcJzAyXCcwMi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpMjUyMA0KXGpjbGlzdHRhYlx0eDI1MjBcbGluMjUyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtMTM1NTc4ODg0MFwnMDJcJzAzLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGkzMjQwDQpcamNsaXN0dGFiXHR4MzI0MFxsaW4zMjQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC00MTE2ODg3NzZcJzAyXCcwNC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMzk2MA0KXGpjbGlzdHRhYlx0eDM5NjBcbGluMzk2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtMTQxNTU0MzA3MFwnMDJcJzA1Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0xODBcbGk0NjgwDQpcamNsaXN0dGFiXHR4NDY4MFxsaW40NjgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDIzODQ1NjA0OFwnMDJcJzA2Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGk1NDAwDQpcamNsaXN0dGFiXHR4NTQwMFxsaW41NDAwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDE3MzUyNzk4MzZcJzAyXCcwNy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpNjEyMA0KXGpjbGlzdHRhYlx0eDYxMjBcbGluNjEyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ3NTA3MDk1ODZcJzAyXCcwOC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpNjg0MA0KXGpjbGlzdHRhYlx0eDY4NDBcbGluNjg0MCB9e1xsaXN0bmFtZSA7fVxsaXN0aWQ3OTU2Nzg4MjV9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkMjA4MDAxNDc4NHtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGZpLTM2MFxsaTcyMFxqY2xpc3R0YWJcdHg3MjBcbGluNzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAyXCcwMSk7fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMTQ0MA0KXGpjbGlzdHRhYlx0eDE0NDBcbGluMTQ0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMlwnMDIuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTE4MFxsaTIxNjBcamNsaXN0dGFiXHR4MjE2MFxsaW4yMTYwIH17XGxpc3RsZXZlbA0KXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDJcJzAzLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGkyODgwXGpjbGlzdHRhYlx0eDI4ODBcbGluMjg4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wDQpcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAyXCcwNC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMzYwMFxqY2xpc3R0YWJcdHgzNjAwXGxpbjM2MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMA0KXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMlwnMDUuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTE4MFxsaTQzMjBcamNsaXN0dGFiXHR4NDMyMFxsaW40MzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClwnMDJcJzA2Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGk1MDQwXGpjbGlzdHRhYlx0eDUwNDBcbGluNTA0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMlwnMDcuO317XGxldmVsbnVtYmVyc1wnMDE7fQ0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpNTc2MFxqY2xpc3R0YWJcdHg1NzYwXGxpbjU3NjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDJcJzA4Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGZpLTE4MFxsaTY0ODBcamNsaXN0dGFiXHR4NjQ4MFxsaW42NDgwIH17XGxpc3RuYW1lIDt9XGxpc3RpZDk1NTMzNjU5OX17XGxpc3RcbGlzdHRlbXBsYXRlaWQtMTc5MDk1ODQxMlxsaXN0aHlicmlke1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQ0XGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0xMzg0NDcwMzU2DQpcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmJpYXMwIFxmaS03MjBcbGkxNDQwXGpjbGlzdHRhYlx0eDE0NDBcbGluMTQ0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZDE5NjYzODk3MjJcJzAyXCcwMS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMTgwMFxqY2xpc3R0YWJcdHgxODAwXGxpbjE4MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQxMzUwNjE5MDQ4XCcwMlwnMDIuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTE4MFxsaTI1MjBcamNsaXN0dGFiXHR4MjUyMFxsaW4yNTIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkLTEzNjAxNzM0MFwnMDJcJzAzLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGkzMjQwXGpjbGlzdHRhYlx0eDMyNDBcbGluMzI0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZC04NzE4MzQ5MjBcJzAyXCcwNC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMzk2MFxqY2xpc3R0YWJcdHgzOTYwXGxpbjM5NjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQ2MzUzMDczNTBcJzAyXCcwNS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpNDY4MFxqY2xpc3R0YWJcdHg0NjgwXGxpbjQ2ODAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQ3MjY0MjU2OTZcJzAyXCcwNi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpNTQwMFxqY2xpc3R0YWJcdHg1NDAwXGxpbjU0MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQtMTcyNDExODUyNFwnMDJcJzA3Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGk2MTIwXGpjbGlzdHRhYlx0eDYxMjBcbGluNjEyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZC0xNzI5MjAzNDE0XCcwMlwnMDguO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTE4MFxsaTY4NDBcamNsaXN0dGFiXHR4Njg0MFxsaW42ODQwIH17XGxpc3RuYW1lIDt9XGxpc3RpZDk3MzIxNjY0N317XGxpc3RcbGlzdHRlbXBsYXRlaWQtNzk1NjcyODY2e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MA0KXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMzYwXGpjbGlzdHRhYlx0eDM2MFxsaW4zNjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDANCntcbGV2ZWx0ZXh0XCcwNFwnMDAuXCcwMS47fXtcbGV2ZWxudW1iZXJzXCcwMVwnMDM7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTQzMlxsaTc5MlxqY2xpc3R0YWJcdHg3OTJcbGluNzkyIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClwnMDJcJzAyLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS01MDRcbGkxMjI0XGpjbGlzdHRhYlx0eDEyMjRcbGluMTIyNCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMlwnMDMuO317XGxldmVsbnVtYmVyc1wnMDE7fQ0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktNjQ4XGxpMTcyOFxqY2xpc3R0YWJcdHgxNzI4XGxpbjE3MjggfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMGFcJzAwLlwnMDEuXCcwMi5cJzAzLlwnMDQuO317XGxldmVsbnVtYmVyc1wnMDFcJzAzXCcwNVwnMDdcJzA5O30NClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTc5MlxsaTIyMzJcamNsaXN0dGFiXHR4MjUyMFxsaW4yMjMyIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzBjXCcwMC5cJzAxLlwnMDIuXCcwMy5cJzA0LlwnMDUuO317XGxldmVsbnVtYmVycw0KXCcwMVwnMDNcJzA1XCcwN1wnMDlcJzBiO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS05MzZcbGkyNzM2XGpjbGlzdHRhYlx0eDI4ODBcbGluMjczNiB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcJzBlXCcwMC5cJzAxLlwnMDIuXCcwMy5cJzA0LlwnMDUuXCcwNi47fXtcbGV2ZWxudW1iZXJzXCcwMVwnMDNcJzA1XCcwN1wnMDlcJzBiXCcwZDt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTA4MFxsaTMyNDBcamNsaXN0dGFiXHR4MzYwMFxsaW4zMjQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTANClxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMTBcJzAwLlwnMDEuXCcwMi5cJzAzLlwnMDQuXCcwNS5cJzA2LlwnMDcuO317XGxldmVsbnVtYmVyc1wnMDFcJzAzXCcwNVwnMDdcJzA5XCcwYlwnMGRcJzBmO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0xMjI0XGxpMzc0NFxqY2xpc3R0YWJcdHgzOTYwXGxpbjM3NDQgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzANClxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcxMlwnMDAuXCcwMS5cJzAyLlwnMDMuXCcwNC5cJzA1LlwnMDYuXCcwNy5cJzA4Ljt9e1xsZXZlbG51bWJlcnNcJzAxXCcwM1wnMDVcJzA3XCcwOVwnMGJcJzBkXCcwZlwnMTE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTE0NDBcbGk0MzIwXGpjbGlzdHRhYlx0eDQ2ODBcbGluNDMyMCB9e1xsaXN0bmFtZSA7fVxsaXN0aWQxMTAxMDMxMjc0fQ0Ke1xsaXN0XGxpc3R0ZW1wbGF0ZWlkLTEyNjUwNTYyNzZ7XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDEwXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMlwnMDAuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZiaWFzMCBcZmktMzYwXGxpMzYwXGpjbGlzdHRhYlx0eDM2MFxsaW4zNjAgfQ0Ke1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwNFwnMDAuXCcwMS47fXtcbGV2ZWxudW1iZXJzXCcwMVwnMDM7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZiaWFzMCBcZmktNDMyXGxpNzkyXGpjbGlzdHRhYlx0eDc5MlxsaW43OTIgfXtcbGlzdGxldmVsXGxldmVsbmZjNA0KXGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMlwnMDIuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZiaWFzMCBcZmktNTA0XGxpMTIyNFxqY2xpc3R0YWJcdHgxMjI0XGxpbjEyMjQgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMA0KXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMlwnMDMuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZiaWFzMCBcZmktNjQ4XGxpMTcyOFxqY2xpc3R0YWJcdHgxNzI4XGxpbjE3MjggfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MQ0KXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwYVwnMDAuXCcwMS5cJzAyLlwnMDMuXCcwNC47fXtcbGV2ZWxudW1iZXJzXCcwMVwnMDNcJzA1XCcwN1wnMDk7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZiaWFzMCBcZmktNzkyXGxpMjIzMlxqY2xpc3R0YWJcdHgyNTIwXGxpbjIyMzIgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzANClxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwY1wnMDAuXCcwMS5cJzAyLlwnMDMuXCcwNC5cJzA1Ljt9e1xsZXZlbG51bWJlcnNcJzAxXCcwM1wnMDVcJzA3XCcwOVwnMGI7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZiaWFzMCBcZmktOTM2XGxpMjczNlxqY2xpc3R0YWJcdHgyODgwXGxpbjI3MzYgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMA0KXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwZVwnMDAuXCcwMS5cJzAyLlwnMDMuXCcwNC5cJzA1LlwnMDYuO317XGxldmVsbnVtYmVyc1wnMDFcJzAzXCcwNVwnMDdcJzA5XCcwYlwnMGQ7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZiaWFzMCBcZmktMTA4MFxsaTMyNDBcamNsaXN0dGFiXHR4MzYwMFxsaW4zMjQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzANClxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMTBcJzAwLlwnMDEuXCcwMi5cJzAzLlwnMDQuXCcwNS5cJzA2LlwnMDcuO317XGxldmVsbnVtYmVyc1wnMDFcJzAzXCcwNVwnMDdcJzA5XCcwYlwnMGRcJzBmO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmYmlhczAgXGZpLTEyMjRcbGkzNzQ0DQpcamNsaXN0dGFiXHR4Mzk2MFxsaW4zNzQ0IH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzEyXCcwMC5cJzAxLlwnMDIuXCcwMy5cJzA0LlwnMDUuXCcwNi5cJzA3LlwnMDguO317XGxldmVsbnVtYmVyc1wnMDFcJzAzXCcwNVwnMDdcJzA5XCcwYlwnMGRcJzBmXCcxMTt9DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmYmlhczAgXGZpLTE0NDBcbGk0MzIwXGpjbGlzdHRhYlx0eDQ2ODBcbGluNDMyMCB9e1xsaXN0bmFtZSA7fVxsaXN0aWQxMTUzMjU5OTMwfXtcbGlzdFxsaXN0dGVtcGxhdGVpZC0zODQwMTUzNjhcbGlzdGh5YnJpZHtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDANCntcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0xODIxNDg0NjU0XCcwMlwnMDAuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTcyMFxqY2xpc3R0YWJcdHg3MjBcbGluNzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZC04MTAwMDIzNDRcJzAxXHUtMzkxMyA/O317XGxldmVsbnVtYmVyczt9XGYzXGZiaWFzMCBcZmktMzYwXGxpMTQ0MFxqY2xpc3R0YWJcdHgxNDQwXGxpbjE0NDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtMjA3NTczMzkzMg0KXCcwMlwnMDIuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTE4MFxsaTIxNjBcamNsaXN0dGFiXHR4MjE2MFxsaW4yMTYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTE2NzU0NzY4OTYNClwnMDJcJzAzLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGkyODgwXGpjbGlzdHRhYlx0eDI4ODBcbGluMjg4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQyNDM2OTQ5OTINClwnMDJcJzA0Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGkzNjAwXGpjbGlzdHRhYlx0eDM2MDBcbGluMzYwMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQxODE5NDY3NDc0DQpcJzAyXCcwNS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpNDMyMFxqY2xpc3R0YWJcdHg0MzIwXGxpbjQzMjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTEwOTkxNTUyMDQNClwnMDJcJzA2Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGk1MDQwXGpjbGlzdHRhYlx0eDUwNDBcbGluNTA0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQyMDI3MzA3NDgwDQpcJzAyXCcwNy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpNTc2MFxqY2xpc3R0YWJcdHg1NzYwXGxpbjU3NjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTE5MzA3ODk2MTQNClwnMDJcJzA4Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0xODBcbGk2NDgwXGpjbGlzdHRhYlx0eDY0ODBcbGluNjQ4MCB9e1xsaXN0bmFtZSA7fVxsaXN0aWQxMzIwNzY4MDAzfXtcbGlzdFxsaXN0dGVtcGxhdGVpZDIwODAwMTQ3ODR7XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTANClxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGk3MjBcamNsaXN0dGFiXHR4NzIwXGxpbjcyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcJzAyXCcwMSk7fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMTQ0MFxqY2xpc3R0YWJcdHgxNDQwXGxpbjE0NDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDJcJzAyLjt9e1xsZXZlbG51bWJlcnNcJzAxO30NClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTE4MFxsaTIxNjBcamNsaXN0dGFiXHR4MjE2MFxsaW4yMTYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAyXCcwMy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxmaS0zNjBcbGkyODgwXGpjbGlzdHRhYlx0eDI4ODBcbGluMjg4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMlwnMDQuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTM2MDBcamNsaXN0dGFiXHR4MzYwMFxsaW4zNjAwIA0KfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDJcJzA1Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0xODBcbGk0MzIwXGpjbGlzdHRhYlx0eDQzMjBcbGluNDMyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjANClxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAyXCcwNi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpNTA0MFxqY2xpc3R0YWJcdHg1MDQwXGxpbjUwNDAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzANClxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMlwnMDcuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTU3NjBcamNsaXN0dGFiXHR4NTc2MFxsaW41NzYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwDQp7XGxldmVsdGV4dFwnMDJcJzA4Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0xODBcbGk2NDgwXGpjbGlzdHRhYlx0eDY0ODBcbGluNjQ4MCB9e1xsaXN0bmFtZSA7fVxsaXN0aWQxNDY3MDg5NzM4fXtcbGlzdFxsaXN0dGVtcGxhdGVpZDYzOTE2NzAyNFxsaXN0aHlicmlke1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwDQpcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQxMjQ0ODQ1ODUyXCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fVxmM1xmYmlhczAgXGZpLTM2MFxsaTIxNjBcamNsaXN0dGFiXHR4MjE2MFxsaW4yMTYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmUNClxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQyOTI0MjExMlwnMDFvO317XGxldmVsbnVtYmVyczt9XGYyXGZiaWFzMCBcZmktMzYwXGxpMjg4MFxqY2xpc3R0YWJcdHgyODgwXGxpbjI4ODAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDANCntcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC01NDE4MDg2NDJcJzAxXHUtMzkyOSA/O317XGxldmVsbnVtYmVyczt9XGYxMFxmYmlhczAgXGZpLTM2MFxsaTM2MDBcamNsaXN0dGFiXHR4MzYwMFxsaW4zNjAwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQxNjI4OTc0NTMyXCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fVxmM1xmYmlhczAgXGZpLTM2MFxsaTQzMjBcamNsaXN0dGFiXHR4NDMyMFxsaW40MzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQxNzQ0NzMyOTZcJzAxbzt9e1xsZXZlbG51bWJlcnM7fVxmMlxmYmlhczAgXGZpLTM2MFxsaTUwNDBcamNsaXN0dGFiXHR4NTA0MFxsaW41MDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTc3NjE3MTU0MA0KXCcwMVx1LTM5MjkgPzt9e1xsZXZlbG51bWJlcnM7fVxmMTBcZmJpYXMwIFxmaS0zNjBcbGk1NzYwXGpjbGlzdHRhYlx0eDU3NjBcbGluNTc2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0xMDgzMDM1MDM2DQpcJzAxXHUtMzkxMyA/O317XGxldmVsbnVtYmVyczt9XGYzXGZiaWFzMCBcZmktMzYwXGxpNjQ4MFxqY2xpc3R0YWJcdHg2NDgwXGxpbjY0ODAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtMTk5MjM4OTQwOA0KXCcwMW87fXtcbGV2ZWxudW1iZXJzO31cZjJcZmJpYXMwIFxmaS0zNjBcbGk3MjAwXGpjbGlzdHRhYlx0eDcyMDBcbGluNzIwMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0zMjg1NzM4NTYNClwnMDFcdS0zOTI5ID87fXtcbGV2ZWxudW1iZXJzO31cZjEwXGZiaWFzMCBcZmktMzYwXGxpNzkyMFxqY2xpc3R0YWJcdHg3OTIwXGxpbjc5MjAgfXtcbGlzdG5hbWUgO31cbGlzdGlkMTY1MTc5MDc2Nn17XGxpc3RcbGlzdHRlbXBsYXRlaWQxNTg3NDY0MzRcbGlzdGh5YnJpZHtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwDQpcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTQyNTMxMzczNFwnMDFcdS0zOTEzID87fXtcbGV2ZWxudW1iZXJzO31cZjNcZmJpYXMwIFxmaS0zNjBcbGkxNDQwXGpjbGlzdHRhYlx0eDE0NDBcbGluMTQ0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MA0Ke1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNTI3MzAzMTg2XCcwMW87fXtcbGV2ZWxudW1iZXJzO31cZjJcZmJpYXMwIFxmaS0zNjBcbGkyMTYwXGpjbGlzdHRhYlx0eDIxNjBcbGluMjE2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkLTM4NjMzNTEzNFwnMDFcdS0zOTI5ID87fXtcbGV2ZWxudW1iZXJzO31cZjEwXGZiaWFzMCBcZmktMzYwXGxpMjg4MFxqY2xpc3R0YWJcdHgyODgwXGxpbjI4ODAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZC0xOTM0NzI2MTUyXCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fVxmM1xmYmlhczAgXGZpLTM2MFxsaTM2MDBcamNsaXN0dGFiXHR4MzYwMFxsaW4zNjAwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQyMDE3NTE0MjA4XCcwMW87fXtcbGV2ZWxudW1iZXJzO31cZjJcZmJpYXMwIFxmaS0zNjBcbGk0MzIwXGpjbGlzdHRhYlx0eDQzMjBcbGluNDMyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkMTM2MTcyNjA5NFwnMDFcdS0zOTI5ID87fXtcbGV2ZWxudW1iZXJzO31cZjEwXGZiaWFzMCBcZmktMzYwXGxpNTA0MFxqY2xpc3R0YWJcdHg1MDQwXGxpbjUwNDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZC0xOTE3MzA4ODA2XCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fVxmM1xmYmlhczAgXGZpLTM2MFxsaTU3NjBcamNsaXN0dGFiXHR4NTc2MFxsaW41NzYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQxMTU1MTkzMjQyXCcwMW87fXtcbGV2ZWxudW1iZXJzO31cZjJcZmJpYXMwIFxmaS0zNjBcbGk2NDgwXGpjbGlzdHRhYlx0eDY0ODBcbGluNjQ4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkLTIxNDU4Njk5MzRcJzAxXHUtMzkyOSA/O317XGxldmVsbnVtYmVyczt9XGYxMFxmYmlhczAgXGZpLTM2MFxsaTcyMDBcamNsaXN0dGFiXHR4NzIwMFxsaW43MjAwIH17XGxpc3RuYW1lIDt9XGxpc3RpZDE3MDkxNDMxMTR9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkLTEyMjY4MDc0MTBcbGlzdGh5YnJpZHtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzANClxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0xODA4MTcxMTBcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpNzIwXGpjbGlzdHRhYlx0eDcyMFxsaW43MjAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MQ0KXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDEyODAzNzI1NjRcJzAyXCcwMS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMTQ0MFxqY2xpc3R0YWJcdHgxNDQwXGxpbjE0NDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmUNClxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ0MTQ4OTk3NjZcJzAyXCcwMi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpMjE2MFxqY2xpc3R0YWJcdHgyMTYwXGxpbjIxNjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmUNClxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQyMDI4NzU3MDc2XCcwMlwnMDMuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTI4ODBcamNsaXN0dGFiXHR4Mjg4MFxsaW4yODgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlDQpcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTMyMTg4NjQ2MFwnMDJcJzA0Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGkzNjAwXGpjbGlzdHRhYlx0eDM2MDBcbGluMzYwMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZQ0KXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDIwNTYwNTQ1MTZcJzAyXCcwNS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpNDMyMFxqY2xpc3R0YWJcdHg0MzIwXGxpbjQzMjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmUNClxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtNjM5MTgwNTc0XCcwMlwnMDYuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTUwNDBcamNsaXN0dGFiXHR4NTA0MFxsaW41MDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlDQpcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTU3MDI1OTIwNFwnMDJcJzA3Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGk1NzYwXGpjbGlzdHRhYlx0eDU3NjBcbGluNTc2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZQ0KXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0xMzExMjIyNDQ4XCcwMlwnMDguO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTE4MFxsaTY0ODBcamNsaXN0dGFiXHR4NjQ4MFxsaW42NDgwIH17XGxpc3RuYW1lIDt9XGxpc3RpZDE4MTY3MjU4MjN9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkLTE0NzA3MjYwMjRcbGlzdGh5YnJpZHtcbGlzdGxldmVsDQpcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDExNTc0NzE4NlwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGk3MjBcamNsaXN0dGFiXHR4NzIwXGxpbjcyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0DQpcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDE5OTM1MzA1MjhcJzAyXCcwMS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMTQ0MFxqY2xpc3R0YWJcdHgxNDQwXGxpbjE0NDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMg0KXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQxNjk3NjYwNjM4XCcwMlwnMDIuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTE4MFxsaTIxNjBcamNsaXN0dGFiXHR4MjE2MFxsaW4yMTYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzANClxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTA0OTEyMjM3NFwnMDJcJzAzLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGkyODgwXGpjbGlzdHRhYlx0eDI4ODBcbGluMjg4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0DQpcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDEwOTU2Nzg5NTZcJzAyXCcwNC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMzYwMFxqY2xpc3R0YWJcdHgzNjAwXGxpbjM2MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMg0KXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtMTAzMjk0Nzc4NlwnMDJcJzA1Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0xODBcbGk0MzIwXGpjbGlzdHRhYlx0eDQzMjBcbGluNDMyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwDQpcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0zNDA0NjY1OTRcJzAyXCcwNi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpNTA0MFxqY2xpc3R0YWJcdHg1MDQwXGxpbjUwNDAgfXtcbGlzdGxldmVsXGxldmVsbmZjNA0KXGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtMTczMzkxMTUwMFwnMDJcJzA3Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGk1NzYwXGpjbGlzdHRhYlx0eDU3NjBcbGluNTc2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyDQpcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDI3OTYxMjQzNlwnMDJcJzA4Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0xODBcbGk2NDgwXGpjbGlzdHRhYlx0eDY0ODBcbGluNjQ4MCB9e1xsaXN0bmFtZSANCjt9XGxpc3RpZDE5NjQ0NjE0MTN9fXtcKlxsaXN0b3ZlcnJpZGV0YWJsZXtcbGlzdG92ZXJyaWRlXGxpc3RpZC0xMTlcbGlzdG92ZXJyaWRlY291bnQwXGxzMX17XGxpc3RvdmVycmlkZVxsaXN0aWQtMTI1XGxpc3RvdmVycmlkZWNvdW50MFxsczJ9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkLTEyNlxsaXN0b3ZlcnJpZGVjb3VudDBcbHMzfXtcbGlzdG92ZXJyaWRlXGxpc3RpZC0xMjdcbGlzdG92ZXJyaWRlY291bnQwXGxzNH0NCntcbGlzdG92ZXJyaWRlXGxpc3RpZC0xMjhcbGlzdG92ZXJyaWRlY291bnQwXGxzNX17XGxpc3RvdmVycmlkZVxsaXN0aWQtMTIwXGxpc3RvdmVycmlkZWNvdW50MFxsczZ9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkLTEyOVxsaXN0b3ZlcnJpZGVjb3VudDBcbHM3fXtcbGlzdG92ZXJyaWRlXGxpc3RpZC0xMzBcbGlzdG92ZXJyaWRlY291bnQwXGxzOH17XGxpc3RvdmVycmlkZVxsaXN0aWQtMTMxXGxpc3RvdmVycmlkZWNvdW50MFxsczl9DQp7XGxpc3RvdmVycmlkZVxsaXN0aWQtMTMyXGxpc3RvdmVycmlkZWNvdW50MFxsczEwfXtcbGlzdG92ZXJyaWRlXGxpc3RpZDE3MDkxNDMxMTRcbGlzdG92ZXJyaWRlY291bnQwXGxzMTF9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkNzI2MzM5MjkxXGxpc3RvdmVycmlkZWNvdW50MFxsczEyfXtcbGlzdG92ZXJyaWRlXGxpc3RpZDc5NTY3ODgyNVxsaXN0b3ZlcnJpZGVjb3VudDBcbHMxM317XGxpc3RvdmVycmlkZVxsaXN0aWQ2MjQ3NzQ3ODQNClxsaXN0b3ZlcnJpZGVjb3VudDBcbHMxNH17XGxpc3RvdmVycmlkZVxsaXN0aWQxODE2NzI1ODIzXGxpc3RvdmVycmlkZWNvdW50MFxsczE1fXtcbGlzdG92ZXJyaWRlXGxpc3RpZDk1NTMzNjU5OVxsaXN0b3ZlcnJpZGVjb3VudDBcbHMxNn17XGxpc3RvdmVycmlkZVxsaXN0aWQxNDY3MDg5NzM4XGxpc3RvdmVycmlkZWNvdW50MFxsczE3fXtcbGlzdG92ZXJyaWRlXGxpc3RpZDE5NjQ0NjE0MTNcbGlzdG92ZXJyaWRlY291bnQwXGxzMTh9DQp7XGxpc3RvdmVycmlkZVxsaXN0aWQ5NzMyMTY2NDdcbGlzdG92ZXJyaWRlY291bnQwXGxzMTl9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkMTMyMDc2ODAwM1xsaXN0b3ZlcnJpZGVjb3VudDBcbHMyMH17XGxpc3RvdmVycmlkZVxsaXN0aWQ2NzE5NTAzOTVcbGlzdG92ZXJyaWRlY291bnQwXGxzMjF9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkMjMxNTA1ODU5XGxpc3RvdmVycmlkZWNvdW50MFxsczIyfXtcbGlzdG92ZXJyaWRlXGxpc3RpZDE2NTE3OTA3NjYNClxsaXN0b3ZlcnJpZGVjb3VudDBcbHMyM317XGxpc3RvdmVycmlkZVxsaXN0aWQxMTAxMDMxMjc0XGxpc3RvdmVycmlkZWNvdW50MFxsczI0fXtcbGlzdG92ZXJyaWRlXGxpc3RpZDQ0MjU3NDg2MFxsaXN0b3ZlcnJpZGVjb3VudDBcbHMyNX17XGxpc3RvdmVycmlkZVxsaXN0aWQxMTUzMjU5OTMwXGxpc3RvdmVycmlkZWNvdW50MFxsczI2fX17XCpccnNpZHRibCBccnNpZDk0NjI4NDhccnNpZDEzMjM5NzAzfXtcbW1hdGhQclxtbWF0aEZvbnQzNA0KXG1icmtCaW4wXG1icmtCaW5TdWIwXG1zbWFsbEZyYWMwXG1kaXNwRGVmMVxtbE1hcmdpbjBcbXJNYXJnaW4wXG1kZWZKYzFcbXdyYXBJbmRlbnQxNDQwXG1pbnRMaW0wXG1uYXJ5TGltMX17XGluZm97XGF1dGhvciBNYXJ0aW4uQmV0aH17XG9wZXJhdG9yIHczODgwNH17XGNyZWF0aW1ceXIyMDE2XG1vMTBcZHkyNFxocjlcbWluMTN9e1xyZXZ0aW1ceXIyMDE2XG1vMTBcZHkyNFxocjlcbWluMTN9DQp7XHByaW50aW1ceXIyMDE2XG1vMTBcZHkyNFxocjlcbWluMTJ9e1x2ZXJzaW9uMn17XGVkbWluczB9e1xub2ZwYWdlczEyfXtcbm9md29yZHMzMzg5fXtcbm9mY2hhcnMxOTMxOX17XCpcY29tcGFueSBXZSBFbmVyZ2llc317XG5vZmNoYXJzd3MyMjY2M317XHZlcm40OTE2N319e1wqXHhtbG5zdGJsIHtceG1sbnMxIGh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vb2ZmaWNlL3dvcmQvMjAwMy93b3JkbWx9fQ0KXHBhcGVydzEyMjQwXHBhcGVyaDE1ODQwXG1hcmdsMTQ0MFxtYXJncjE0NDBcbWFyZ3QxNDQwXG1hcmdiNzIwXGd1dHRlcjBcbHRyc2VjdCANClx3aWRvd2N0cmxcZnRuYmpcYWVuZGRvY1x0cmFja21vdmVzMFx0cmFja2Zvcm1hdHRpbmcxXGRvbm90ZW1iZWRzeXNmb250MVxyZWx5b252bWwwXGRvbm90ZW1iZWRsaW5nZGF0YTBcZ3JmZG9jZXZlbnRzMFx2YWxpZGF0ZXhtbDFcc2hvd3BsYWNlaG9sZHRleHQwXGlnbm9yZW1peGVkY29udGVudDBcc2F2ZWludmFsaWR4bWwwXHNob3d4bWxlcnJvcnMxXG5veGxhdHRveWVuDQpcZXhwc2hydG5cbm91bHRybHNwY1xkbnRibG5zYmRiXG5vc3BhY2Vmb3J1bFxmb3Jtc2hhZGVcaG9yemRvY1xkZ21hcmdpblxkZ2hzcGFjZTE4MFxkZ3ZzcGFjZTE4MFxkZ2hvcmlnaW4xNDQwXGRndm9yaWdpbjE0NDBcZGdoc2hvdzFcZGd2c2hvdzENClxqZXhwYW5kXHZpZXdraW5kMVx2aWV3c2NhbGUxMjBccGdicmRyaGVhZFxwZ2JyZHJmb290XHNwbHl0d25pbmVcZnRubHl0d25pbmVcaHRtYXV0c3Bcbm9sbmh0YWRqdGJsXHVzZWx0YmFsblxhbG50YmxpbmRcbHl0Y2FsY3RibHdkXGx5dHRibHJ0Z3JcbG5icmtydWxlXG5vamtlcm5wdW5jdFxyc2lkcm9vdDEzMjM5NzAzXHV0aW5sIFxub3VpY29tcGF0IFxmZXQwe1wqXHdncmZmbXRmaWx0ZXIgMDEzZn1cbm9mZWF0dXJldGhyb3R0bGUxDQpcaWxmb21hY2F0Y2xudXAwe1wqXHRlbXBsYXRlIEM6XFxkb2N1bWVudHMgYW5kIHNldHRpbmdzXFxyc3BlZWRcXG1hY3BhY1xccGVyc29uYWxcXEJsYW5rLmRvdH17XCpcZnRuc2VwIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkwXHJpMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSANClxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4IFxjaGZ0bnNlcCANClxwYXIgfX17XCpcZnRuc2VwYyBcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMFxyaTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCBcY2hmdG5zZXBjIA0KXHBhciB9fXtcKlxhZnRuc2VwIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkwXHJpMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4IFxjaGZ0bnNlcCANClxwYXIgfX17XCpcYWZ0bnNlcGMgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDggXGNoZnRuc2VwYyANClxwYXIgfX1cbHRycGFyIFxzZWN0ZCBcbHRyc2VjdFxwc3oxXHBnbnJlc3RhcnRcbGluZXgwXGhlYWRlcnk0MzJcZm9vdGVyeTM2MFxlbmRuaGVyZVxzZWN0dW5sb2NrZWQxXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkOTY1Njg2NlxzZnRuYmoge1xmb290ZXJsIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxzMTZccWwgXGxpMFxyaTBcbm93aWRjdGxwYXINClx0cWNcdHg0NjgwXHRxclx0eDkzNjBccHZwYXJhXHBobXJnXHBvc3hyXHBvc3kwXHdyYXBhcm91bmRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxMzIwNDMwNSBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtcZmllbGR7XCpcZmxkaW5zdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxjczM2XGluc3JzaWQ5NDYyODQ4IFBBR0UgIH19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxjczM2XGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkNTUzMDAzNSAxfX19XHNlY3RkIFxsdHJzZWN0XGxpbmV4MFxlbmRuaGVyZVxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcY3MzNlxpbnNyc2lkMTc4Nzc2MyANCg0KXHBhciB9XHBhcmQgXGx0cnBhclxzMTZccWwgXGxpMFxyaTM2MFxub3dpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4zNjBcbGluMFxpdGFwMFxwYXJhcnNpZDEyMDI0OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTc4Nzc2MyANClxwYXIgfX17XGZvb3RlcnIgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHMxNlxxbCBcbGkwXHJpMFxub3dpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBccHZwYXJhXHBobXJnXHBvc3hyXHBvc3kwXHdyYXBhcm91bmRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxMzIwNDMwNSBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4IFx0YWIgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxjczM2XGluc3JzaWQ5NDYyODQ4IFBBR0UgIH19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGNzMzZcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQxMzIzOTcwMyAxfX19XHNlY3RkIFxsdHJzZWN0XGxpbmV4MFxlbmRuaGVyZVxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcY3MzNlxpbnNyc2lkMTc4Nzc2MyANClxwYXIgfVxwYXJkIFxsdHJwYXJcczE2XHFsIFxsaTBccmkzNjBcbm93aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMzYwXGxpbjBcaXRhcDBccGFyYXJzaWQxMDQ5NTg0OSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE3ODc3NjMgDQpccGFyIH19e1xoZWFkZXJmIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWwgXGxpMFxyaTBcbm93aWRjdGxwYXJcdHg2NDgwXHR4NzIwMFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE3ODc3NjMgDQpccGFyIH19e1wqXHBuc2VjbHZsMVxwbnVjcm1ccG5zdGFydDFccG5pbmRlbnQ3MjBccG5oYW5nIHtccG50eHRhIC59fXtcKlxwbnNlY2x2bDJccG51Y2x0clxwbnN0YXJ0MVxwbmluZGVudDcyMFxwbmhhbmcge1xwbnR4dGEgLn19e1wqXHBuc2VjbHZsM1xwbmRlY1xwbnN0YXJ0MVxwbmluZGVudDcyMFxwbmhhbmcge1xwbnR4dGEgLn19e1wqXHBuc2VjbHZsNFxwbmxjbHRyXHBuc3RhcnQxXHBuaW5kZW50NzIwXHBuaGFuZyB7XHBudHh0YSApfX0NCntcKlxwbnNlY2x2bDVccG5kZWNccG5zdGFydDFccG5pbmRlbnQ3MjBccG5oYW5nIHtccG50eHRiICh9e1xwbnR4dGEgKX19e1wqXHBuc2VjbHZsNlxwbmxjbHRyXHBuc3RhcnQxXHBuaW5kZW50NzIwXHBuaGFuZyB7XHBudHh0YiAofXtccG50eHRhICl9fXtcKlxwbnNlY2x2bDdccG5sY3JtXHBuc3RhcnQxXHBuaW5kZW50NzIwXHBuaGFuZyB7XHBudHh0YiAofXtccG50eHRhICl9fXtcKlxwbnNlY2x2bDgNClxwbmxjbHRyXHBuc3RhcnQxXHBuaW5kZW50NzIwXHBuaGFuZyB7XHBudHh0YiAofXtccG50eHRhICl9fXtcKlxwbnNlY2x2bDlccG5sY3JtXHBuc3RhcnQxXHBuaW5kZW50NzIwXHBuaGFuZyB7XHBudHh0YiAofXtccG50eHRhICl9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzNDhccWMgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ5NjQwMjM0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGlcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGkwXGluc3JzaWQ1NTc5MDg3IA0KXHBhciANClxwYXIgDQpccGFyIA0KXHBhciANClxwYXIgDQpccGFyIA0KXHBhciANClxwYXIgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaTBcaW5zcnNpZDczNTU0NTAgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFjIFxsaTBccmkwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkNjA1NDg2IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjBcYWZzMzYgDQpcbHRyY2hcZmNzMCBcYlxmczM2XGluc3JzaWQ5NDYyODQ4IEFHUkVFTUVOVCB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMzYgXGx0cmNoXGZjczAgXGJcZnMzNlxpbnNyc2lkNjA1NDg2IA0KXHBhciANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwXGFmczM2IFxsdHJjaFxmY3MwIFxiXGZzMzZcaW5zcnNpZDk0NjI4NDggRk9SfXtccnRsY2hcZmNzMSBcYWYwXGFmczM2IFxsdHJjaFxmY3MwIFxiXGZzMzZcaW5zcnNpZDYwNTQ4NiANClxwYXIgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMzNiBcbHRyY2hcZmNzMCBcYlxmczM2XGluc3JzaWQ5NDYyODQ4XGNoYXJyc2lkMTU4NTE4MCBXSE9MRVNBTEUgRElTVFJJQlVUSU9OIFNFUlZJQ0UgfXtccnRsY2hcZmNzMSBcYWYwXGFmczM2IFxsdHJjaFxmY3MwIFxiXGZzMzZcaW5zcnNpZDYwNTQ4NiANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczQ4XHFjIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkOTY0MDIzNCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxpXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpMFxpbnNyc2lkNTU3OTA4NyANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJccWMgXGxpMFxyaTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ1NTc5MDg3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjBcYWZzMzYgDQpcbHRyY2hcZmNzMCBcYlxmczM2XGluc3JzaWQ1NTc5MDg3XGNoYXJyc2lkMTU4NTE4MCANClxwYXIgfVxwYXJkIFxsdHJwYXJccWMgXGxpMFxyaTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ4OTM0NDgxIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGZzMzJcaW5zcnNpZDk0NjI4NDggQmV0d2Vlbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxmczMyXGluc3JzaWQ1NTc5MDg3IA0KXHBhciB9XHBhcmQgXGx0cnBhclxxYyBcbGkwXHJpMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDU2MDA2MTQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcZnMzMlxpbnNyc2lkMTU4NTE4MCANClxwYXIgfVxwYXJkIFxsdHJwYXJccWMgXGxpMFxyaTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ1NTc5MDg3IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGZzMzJcaW5zcnNpZDk0NjI4NDggQ2l0eSBvZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcZnMzMlxpbnNyc2lkNTM4MDYxNSBTdGVwaGVuc29ufXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcZnMzMlxpbnNyc2lkOTQ2Mjg0OCAsIE1pY2hpZ2FufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGZzMzJcaW5zcnNpZDU1NzkwODcgDQpccGFyIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcZnMzMlxpbnNyc2lkOTQ2Mjg0OCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcZnMzMlxpbnNyc2lkNTU3OTA4NyANClxwYXIgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxmczMyXGluc3JzaWQ5NDYyODQ4IFVwcGVyIE1pY2hpZ2FuIEVuZXJneSBSZXNvdXJjZXMgQ29ycG9yYXRpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcZnMzMlxpbnNyc2lkNTU3OTA4NyANClxwYXIgDQpccGFyIA0KXHBhciANClxwYXIgfVxwYXJkIFxsdHJwYXJccWMgXGxpMFxyaTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDU1NzkwODcge1xydGxjaFxmY3MxIFxhZjBcYWZzMzIgXGx0cmNoXGZjczAgXGJcZnMzMlxpbnNyc2lkOTQ2Mjg0OCBGRVJDIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMzMiBcbHRyY2hcZmNzMCANClxiXGZzMzJcaW5zcnNpZDEyMzQ0MDAxIFJhdGUgU2NoZWR1bGUgfXtccnRsY2hcZmNzMSBcYWYwXGFmczMyIFxsdHJjaFxmY3MwIFxiXGZzMzJcaW5zcnNpZDk0NjI4NDggTm8uIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMzMiBcbHRyY2hcZmNzMCBcYlxmczMyXGluc3JzaWQ2MDU0ODYgN317XHJ0bGNoXGZjczEgXGFmMFxhZnMzMiBcbHRyY2hcZmNzMCBcYlxmczMyXGluc3JzaWQ1NTc5MDg3XGNoYXJyc2lkMTk4NTU5NSANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczQ4XHFjIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkOTY0MDIzNCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxpXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpMFxpbnNyc2lkNTU3OTA4NyANClxwYXIgDQpccGFyIA0KXHBhciANClxwYXIgDQpccGFyIA0KXHBhciANClxwYXIgDQpccGFyIA0KXHBhciANClxwYXIgDQpccGFyIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGkwXGluc3JzaWQ3NDE1MDU0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGkwXGluc3JzaWQ1NTc5MDg3IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGkwXGluc3JzaWQ5NDYyODQ4IEFHUkVFTUVOVH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaTBcaW5zcnNpZDU1NzkwODcgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaTBcaW5zcnNpZDk0NjI4NDggRk9SfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpMFxpbnNyc2lkNTU3OTA4NyANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpMFxpbnNyc2lkOTQ2Mjg0OCBXSE9MRVNBTEUgRElTVFJJQlVUSU9OIFNFUlZJQ0V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGkwXGluc3JzaWQ1NDQ0Nzc5IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkwXHJpMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTQ0NDc3OSANCg0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkwXHJpMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDEyMDI0OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCBcdGFiIFRoaXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjA0Njc1OSBBZ3JlZW1lbnQgZm9yIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCBXaG9sZXNhbGUgRGlzdHJpYnV0aW9uIFNlcnZpY2UgKFwnOTNBZ3JlZW1lbnRcJzk0KSBlbnRlcmVkIGludG8gdGhpcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MzI3NDQ0IDIwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxzdXBlclxpbnNyc2lkOTMyNzQ0NFxjaGFycnNpZDkzMjc0NDQgdGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDkzMjc0NDQgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDhcY2hhcnJzaWQxMjAyNDk2NSBkYXkgb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjA1NDg2XGNoYXJyc2lkMTIwMjQ5NjUgT2N0b2JlciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTkyNzI0XGNoYXJyc2lkMTIwMjQ5NjUgMjB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDU2NTE4NzdcY2hhcnJzaWQxMjAyNDk2NSAxfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjA1NDg2XGNoYXJyc2lkMTIwMjQ5NjUgNn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDhcY2hhcnJzaWQ2ODI5NDkwICBzZXRzIGZvcnRoIHRoZSB0ZXJtcyBhbmQgY29uZGl0aW9ucyBvZiBhIGNvbnRyYWN0IGZvciB0aGUgcHJvdmlzaW9uIG9mfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4ICBXaG9sZXNhbGUgRGlzdHJpYnV0aW9uIFNlcnZpY2UgYmV0d2VlbiB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMyNTM2MDEgVXBwZXIgTWljaGlnYW4gRW5lcmd5IFJlc291cmNlcyBDb3Jwb3JhdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDggIChcJzkzfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxMzI1MzYwMSBVTUVSQ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDggXCc5NCkgYW5kIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2NTIxMjUyIHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDQ0NDI3NSBoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzI1MzYwMSBDaXR5IG9mIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTM4MDYxNSBTdGVwaGVuc29ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMyNTM2MDEgLCBNaWNoaWdhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2NTIxMjUyICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4IChcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1MzgwNjE1IFN0ZXBoZW5zb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4IFwnOTQpLCBzb21ldGltZXMgaGVyZWluYWZ0ZXIgcmVmZXJyZWQgdG8gaW5kaXZpZHVhbGx5IGFzIFwnOTNQYXJ0eVwnOTQgYW5kIGNvbGxlY3RpdmVseSBhcyBcJzkzUGFydGllc1wnOTQufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTQ0NDc3OSANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMFxyaTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NDQ0Nzc5IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4IFx0YWIgV0hFUkVBUywgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDUzODA2MTUgU3RlcGhlbnNvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwNDQ0Mjc1ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTE0ODc0IHB1cmNoYXNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ2MDU0ODYgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxMTQ4NzQgIGl0cyBwb3dlciBzdXBwbHkgbmVlZHMgZnJvbX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDYwNTQ4NiAgV2lzY29uc2luIFB1YmxpYyBTZXJ2aWNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTUxOTQwNSAgQ29ycG9yYXRpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDk0NjI4NDggO317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NDQ3NzkgDQpccGFyIA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcZmk3MjBcbGkwXHJpMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDcwMjI0NDgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4IFdIRVJFQVMsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDUzODA2MTUgU3RlcGhlbnNvbn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTMyNTM2MDEgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MDU0ODYgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDcwMjI0NDggIHBvd2VyIHN1cHBseSBpcyBkZWxpdmVyZWQgdG8gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTM4MDYxNSBTdGVwaGVuc29ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ3MDIyNDQ4ICBvdmVyIGZhY2lsaXRpZXMgb3duZWQgYnkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMyNTM2MDEgVU1FUkN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDMxMTM5IDt9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDM3MTYwNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNzAyMjQ0OCANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMFxyaTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4IFx0YWIgV0hFUkVBUywgaW4gb3JkZXIgdG8gZWZmZWN0IGl0cyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDM3NTM5MSBwfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyMTkyNzI0IG93ZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTAzNzUzOTEgc3VwcGx5IHB1cmNoYXNlcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NDI3ODc3IFN0ZXBoZW5zb24gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCByZXF1aXJlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ2MDU0ODYgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDggIFdob2xlc2FsZSBEaXN0cmlidXRpb24gU2VydmljZSBvdmVyIGZhY2lsaXRpZXMgb3duZWQgYnkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMwNTE0MzUgVU1FUkN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MDU0ODYgOyBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU0NDQ3NzkgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMwMzM0MTYgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxmaTcyMFxsaTBccmkwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzAzMzQxNiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMwMzM0MTYgV0hFUkVBU317XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkNjA1NDg2ICx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzMDMzNDE2ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2NDI3ODc3IFN0ZXBoZW5zb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ3MzU1NDUwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzMDMzNDE2IGFuZCB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMDUxNDM1IFVNRVJDfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzAzMzQxNiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCBoYXZlIG11dHVhbGx5IGFncmVlZCB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMwMzM0MTYgIGltcGxlbWVudCB0aGlzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNjA1NDg2IEFncmVlbWVudCBmb3IgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzAzMzQxNiBXaG9sZXNhbGUgRGlzdHJpYnV0aW9uIFNlcnZpY2UufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk3ODQ4NTIgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTBccmkwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTQ0NDc3OSANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCBcdGFiIE5PVywgVEhFUkVGT1JFLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTM2NDA3NSBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDggIGNvbnNpZGVyYXRpb24gb2YgdGhlIG11dHVhbCBhZ3JlZW1lbnRzIGNvbnRhaW5lZCBoZXJlaW4sIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTMyNTM2MDEgVU1FUkN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4ICBhbmQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTM4MDYxNSBTdGVwaGVuc29ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTA0NDQyNzUgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDggYWdyZWUgYXMgZm9sbG93czp9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NDQ3NzkgDQpccGFyIA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMS5cdGFifX1ccGFyZCBcbHRycGFyXHFsIFxmaS0zNjBcbGkzNjBccmkwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHgzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczI0XGFkanVzdHJpZ2h0XHJpbjBcbGluMzYwXGl0YXAwIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5NDYyODQ4IERFRklOSVRJT05TOlxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDggXGxpbmUgVGhlIGZvbGxvd2luZyB0ZXJtcywgd2hlbiB1c2VkIGhlcmVpbiB3aXRoIGluaXRpYWwgY2FwaXRhbGl6YXRpb24sIHdoZXRoZXIgaW4gdGhlIHNpbmd1bGFyIG9yIHRoZSBwbHVyYWwsIHNoYWxsIGhhdmUgdGhlIG1lYW5pbmcgc3BlY2lmaWVkOlxsaW5lIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTQ0NDc3OSANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjaGFycnNpZDQwNzkzOTAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMS4xLlx0YWJ9fVxwYXJkIFxsdHJwYXJccWwgXGZpLTQzMlxsaTc5MlxyaTBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4ODgyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMyNFxpbHZsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjc5MlxpdGFwMFxwYXJhcnNpZDExODA2MTQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5NDYyODQ4XGNoYXJyc2lkNDA3OTM5MCBBVEN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4IA0KIHNoYWxsIG1lYW4gdGhlIEFtZXJpY2FuIFRyYW5zbWlzc2lvbiBDb21wYW55LCBMTEMufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjE2MjY0NSANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpODgyXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjg4MlxpdGFwMFxwYXJhcnNpZDYxNjI2NDUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MTYyNjQ1IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNoYXJyc2lkNTgzODk0NiBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxLjIuXHRhYn19XHBhcmQgXGx0cnBhclxxbCBcZmktNDMyXGxpNzkyXHJpMFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHg3OTJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczI0XGlsdmwxXGFkanVzdHJpZ2h0XHJpbjBcbGluNzkyXGl0YXAwIHtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTQ2Mjg0OFxjaGFycnNpZDU4Mzg5NDYgQ29vcmRpbmF0ZWQgRnVuY3Rpb25hbCBSZWdpc3RyYXRpb24gKENGUil9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4IA0KIHNoYWxsIG1lYW4gYW4gYWdyZWVtZW50IGluIHdyaXQNCmluZyBiZXR3ZWVuIG9yIGFtb25nIHR3byBvciBtb3JlIGVudGl0aWVzIChwYXJ0aWVzKSB1cG9uIGEgZGl2aXNpb24gb2YgY29tcGxpYW5jZSByZXNwb25zaWJpbGl0eSBhbW9uZyB0aGUgcGFydGllcyBmb3Igb25lIG9yIG1vcmUgUmVsaWFiaWxpdHkgU3RhbmRhcmQocykgYXBwbGljYWJsZSB0byBhIHBhcnRpY3VsYXIgZnVuY3Rpb24sIGFuZC9vciBmb3Igb25lIG9yIG1vcmUgUmVxdWlyZW1lbnQocykvc3ViLVJlcXVpcmVtZW50KHMpIHdpdGhpbg0KIHBhcnRpY3VsYXIgUmVsaWFiaWxpdHkgU3RhbmRhcmQocykuXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTQ0NDc3OVxjaGFycnNpZDM3NTQyNjIgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxLjMuXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5NDYyODQ4IENvbW1pc3Npb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4XGNoYXJyc2lkNzIyODQ1NiAgb3IgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5NDYyODQ4IEZFUkN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4ICBzaGFsbCBtZWFuIHRoZSBGZWRlcmFsIEVuZXJneSBSZWd1bGF0b3J5IENvbW1pc3Npb24gb3IgaXRzIHJlZ3VsYXRvcnkgc3VjY2Vzc29yLlxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NDQ3NzkgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxLjQuXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5NDYyODQ4IEZvcmNlIE1hamV1cmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4IA0KIHNoYWxsIG1lYW4gYW55IGNhdXNlIGJleW9uZCB0aGUgY29udHJvbCBvZiBhbiBhZmZlY3RlZCBQYXJ0eSB0aGF0LCBieSBleGVyY2lzZSBvZiBkdWUgZGlsaWdlbmNlLCBzdWNoIFBhDQpydHkgY291bGQgbm90IHJlYXNvbmFibHkgaGF2ZSBiZWVuIGV4cGVjdGVkIHRvIGF2b2lkIGFuZCB0aGF0LCBieSBleGVyY2lzZSBvZiBkdWUgZGlsaWdlbmNlLCBpdCBoYXMgYmVlbiB1bmFibGUgdG8gb3ZlcmNvbWUuICBTdWNoIGNhdXNlcywgaW5jbHVkZSwgYnV0IGFyZSBub3QgcmVzdHJpY3RlZCB0byB0aGUgZm9sbG93aW5nOiBmYWlsdXJlIG9mIG9yIHRocmVhdCBvZiBmYWlsdXJlIG9mIGZhY2lsaXRpZXMsIGZsb29kLCBkcm91Z2h0LCBlYXINCnQNCmhxdWFrZSwgc3Rvcm0sIGZpcmUsIGxpZ2h0bmluZywgZXBpZGVtaWMsIHdhciwgcmlvdCwgY2l2aWwgZGlzdHVyYmFuY2Ugb3IgZGlzb2JlZGllbmNlLCBsYWJvciBkaXNwdXRlLCBsYWJvciBvciBtYXRlcmlhbCBzaG9ydGFnZSwgc2Fib3RhZ2UsIHJlc3RyYWludCBieSBjb3VydCBvcmRlciBvciBwdWJsaWMgYXV0aG9yaXR5LCBhbmQgYWN0aW9uIG9yIG5vbi1hY3Rpb24gYnkgb3IgZmFpbHVyZSB0byBvYnRhaW4gdGhlIG5lY2Vzc2FyeSBhdXRobw0Kcml6YXRpb25zIG9yIGFwcHJvdmFscyBmcm9tIGFueSBnb3Zlcm5tZW50YWwgYWdlbmN5IG9yIGF1dGhvcml0eS5cbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NDQ0Nzc5IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMS41Llx0YWJ9fVxwYXJkIFxsdHJwYXJccWwgXGZpLTQzMlxsaTc5MlxyaTBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDc5Mlx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMjRcaWx2bDFcYWRqdXN0cmlnaHRccmluMFxsaW43OTJcaXRhcDBccGFyYXJzaWQ4NjEyNjg3IHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5NDYyODQ4IEdvb2QgVXRpbGl0eSBQcmFjdGljZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDg2MTI2ODcgDQpzaGFsbCBtZWFuIGFueSBvZiB0aGUgcHJhY3RpY2VzLCBtZXRob2RzLCBhbmQgYWN0cyBlbmdhZ2VkIGluIG9yIGFwcHJvdmVkIGJ5IGEgc2lnbmlmaWNhbnQgcG9ydGlvbiBvZiB0aGUgZWxlY3RyaWMgdXRpbGl0eSBpbmR1c3RyeSBsb2NhdGVkIHdpdGhpbiB0aGUgTUlTTyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzkxNzUwMVxjaGFycnNpZDE0MTcyNjY2IGFyZWF9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDEzOTE3NTAxICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ4NjEyNjg3IGR1cmluZyANCnRoZSByZWxldmFudCB0aW1lIHBlcmlvZCwgb3IgYW55IG9mIHRoZSBwcmFjdGljZXMsIG1ldGhvZHMsIGFuZCBhY3RzIHRoYXQsIGluIHRoZSBleGVyY2lzZSBvZiByZWFzb25hYmxlIGp1ZGdtZW50IGluIGxpZ2h0IG9mIHRoZSBmYWN0cyBrbm93biBhdCB0aGUgdGltZSB0aGUgZGVjaXNpb24gd2FzIG1hZGUsIGNvdWxkIGhhdmUgYmVlbiBleHBlY3RlZCB0byBwcm9kdWNlIGEgc2FmZSwgZGVzaXJhYmxlIHJlc3VsdCwgYWNoaWV2ZWQgZXhwZWRpdA0KaW91c2x5IGFuZCBhdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzkxNzUwMVxjaGFycnNpZDE0MTcyNjY2IGEgcmVhc29uYWJsZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDg2MTI2ODcgDQogY29zdCBjb25zaXN0ZW50IHdpdGggZ29vZCBidXNpbmVzcyBwcmFjdGljZXMuICBHb29kIFV0aWxpdHkgUHJhY3RpY2UgaXMgbm90IGludGVuZGVkIHRvIGJlIGxpbWl0ZWQgdG8gdGhlIG9wdGltdW0gcHJhY3RpY2UsIG1ldGhvZCwgb3IgYWN0IHRvIHRoZSBleGNsdXNpb24gb2YgYWxsIG90aGVycywgYnV0IHJhdGhlciB0byBiZSBhIHJhbmdlIG9mIGFjY2VwdGFibGUgcHJhY3RpY2VzLCBtZXRob2RzLCANCm9yIGFjdHMgdXNlZCB3aXRoaW4gTUlTTy59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4IFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NDQ3NzkgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxLjYuXHRhYn19XHBhcmQgXGx0cnBhclxxbCBcZmktNDMyXGxpNzkyXHJpMFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4NzkyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMyNFxpbHZsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjc5MlxpdGFwMCB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTQ2Mjg0OCBNSVNPfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCAgc2hhbGwgbWVhbiB0aGUgTWlkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTE3MzQ4NjAgY29udGluZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCAgSW5kZXBlbmRlbnQgU3lzdGVtIE9wZXJhdG9yfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDM3Nzk3NSAsIEluY317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDggLlxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NDQ3NzkgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2hhcnJzaWQ1ODM4OTQ2IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDEuNy5cdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDk0NjI4NDhcY2hhcnJzaWQ1ODM4OTQ2IE5FUkN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4IA0KIHNoYWxsIG1lYW4gdGhlIE5vcnRoIEFtZXJpY2FuIEVsZWN0cmljIFJlbGlhYmlsaXR5IENvcnBvcmF0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzE3NTQ4NyAgb3IgaXRzIHN1Y2Nlc3Nvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDggLlxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NDQ3NzkgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxLjguXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5NDYyODQ4IFRlcm19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4IA0KIHNoYWxsIGhhdmUgdGhlIG1lYW5pbmcgc2V0IGZvcnRoIGluIFNlY3Rpb24gMyBvZiB0aGlzIEFncmVlbWVudC5cbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTE5NDA1IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNoYXJyc2lkMTIwMjQ5NjUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMS45Llx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTQ2Mjg0OFxjaGFycnNpZDEyMDI0OTY1IFVuZGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDczNTU0NTBcY2hhcnJzaWQxMjAyNDk2NSByZnJlcXVlbmN5IExvYWQgU2hlZGRpbmcgKFVGTFN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5NDYyODQ4XGNoYXJyc2lkMTIwMjQ5NjUgKX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDhcY2hhcnJzaWQxNTE5NDA1ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ3MzU1NDUwIA0Kc2hhbGwgbWVhbiBsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OFxjaGFycnNpZDE1MTk0MDUgDQpvYWQgc2hlZCBpbXBsZW1lbnRlZCBieSBpbnN0YWxsZWQgZXF1aXBtZW50IGRlc2lnbmVkIHRvIGF1dG9tYXRpY2FsbHkgcmVzcG9uZCB0bywgYW5kIGFycmVzdCBkZWNsaW5pbmcgZnJlcXVlbmN5LiBSZWxpYWJpbGl0eSBzdGFuZGFyZHMgc3BlY2lmeSB0aGUgYW1vdW50IG9mIGxvYWQgc2hlZCBhbmQgdGhlIGVudGl0aWVzIHJlc3BvbnNpYmxlIGZvciBvd25lcnNoaXAsDQogbWFpbnRlbmFuY2UsIGFuZCBwZXJmb3JtYW5jZSBvZiBhIFVGTFMgcHJvZ3JhbS59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NDQ0Nzc5IA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGk3OTJccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNzkyXGl0YXAwXHBhcmFyc2lkMTIwMjQ5NjUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ3MzU1NDUwIA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMS4xMC5cdGFifX1ccGFyZCBcbHRycGFyXHFsIFxmaS00MzJcbGk3OTJccmkwXG5vd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4NzkyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMyNFxpbHZsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjc5MlxpdGFwMFxwYXJhcnNpZDE1MTk0MDUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5NDYyODQ4IFdob2xlc2FsZSBEaXN0cmlidXRpb24gU2VydmljZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDggDQogc2hhbGwgbWVhbiB0aGUgdHJhbnNtaXNzaW9uIG9mIHBvd2VyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDc0Mzc0OTAgcHVyY2hhc2VkIGJ5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDUzODA2MTUgU3RlcGhlbnNvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDc0Mzc0OTAgIHRvIG1lZXQgaXRzIHBvd2VyIHN1cHBseSBuZWVkcyBvdmVyIH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCBmYWNpbGl0aWVzIG93bmVkIGJ5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwNTc3NTQxIFVNRVJDfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCAuXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTUxOTQwNSANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjaGFycnNpZDE1MTk0MDUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMS4xMS5cdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDhcY2hhcnJzaWQxNTE5NDA1IFdQUyBCYWxhbmNpbmcgQXV0aG9yaXR5IChXUFMgQkEpIHNoYWxsIG1lYW4gdGhlIA0KZnVuY3Rpb24gb2YgV2lzY29uc2luIFB1YmxpYyBTZXJ2aWNlIGFzIHRoZSBCYWxhbmNpbmcgQXV0aG9yaXR5IGZvciB0aGUgV1BTIEJhbGFuY2luZyBBdXRob3JpdHkgQXJlYS4gVGhlIFdQUyBCQSByZXNwb25zaWJpbGl0aWVzIGFyZSBkZWxpbmVhdGVkIGluIHRoZSBDRlIgd2l0aCBNSVNPIGFzIG1haW50YWluZWQgYXQgTkVSQy59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTE5NDA1XGNoYXJyc2lkMTUxOTQwNSANCg0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGk3OTJccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNzkyXGl0YXAwXHBhcmFyc2lkMTIwMjQ5NjUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NDQ0Nzc5IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMi5cdGFifX1ccGFyZCBcbHRycGFyXHFsIFxmaS0zNjBcbGkzNjBccmkwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHgzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczI0XGFkanVzdHJpZ2h0XHJpbjBcbGluMzYwXGl0YXAwIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5NDYyODQ4IFdIT0xFU0FMRSBESVNUUklCVVRJT04gU0VSVklDRVxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NDQ3NzkgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAyLjEuXHRhYn19XHBhcmQgXGx0cnBhclxxbCBcZmktNDMyXGxpNzkyXHJpMFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4NzkyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMyNFxpbHZsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjc5MlxpdGFwMCB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTQ2Mjg0OCBTYWxlIG9mIFdob2xlc2FsZSBEaXN0cmlidXRpb24gU2VydmljZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDggIFxlbmRhc2ggIEZvciB0aGUgZW50aXJlIFRlcm0gb2YgdGhpcyBBZ3JlZW1lbnQsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ2MDE5MTQgVU1FUkN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDk0NjI4NDggIHNoYWxsIHByb3ZpZGUgV2hvbGVzYWxlIERpc3RyaWJ1dGlvbiBTZXJ2aWNlIHRvIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDUzODA2MTUgU3RlcGhlbnNvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwNDQ0Mjc1ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4IA0Kc29sZWx5IGZvciB0aGUgcHVycG9zZSBvZiBzdXBwbHlpbmcgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQyODUzMTkgbG9hZCByZXF1aXJlbWVudHMgb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTM4MDYxNSBTdGVwaGVuc29ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCANCi4gIFRoZSBXaG9sZXNhbGUgRGlzdHJpYnV0aW9uIFNlcnZpY2Ugc2hhbGwgYmUgcHJvdmlkZWQgYmV0d2VlbiB0aGUgcG9pbnQgb2YgcmVjZWlwdCBhbmQgcG9pbnQgb2YgZGVsaXZlcnkgYW5kIG92ZXIgdGhlIGV4aXN0aW5nIGZhY2lsaXRpZXMgc3BlY2lmaWVkIGluIFNjaGVkdWxlIEEgb2YgdGhpcyBBZ3JlZW1lbnQgYW5kIHdpbGwgYWxsb3cgZW5lcmd5IGZsb3cgZWl0aGVyIGl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDQyODUzMTkgbnRvLCBvciBvdXQgb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTM4MDYxNSBTdGVwaGVuc29ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTk3MTA5IC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4IFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NDQ3NzkgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAyLjIuXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5NDYyODQ4IE9ibGlnYXRpb25zIG9mIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDUzODA2MTUgU3RlcGhlbnNvbn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCAgXGVuZGFzaCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkODU4NjIzMiBCeSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNDk3NDcyIE1heX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDg1ODYyMzIgIDEgb2YgZWFjaCB5ZWFyLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1MzgwNjE1IA0KU3RlcGhlbnNvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwNDQ0Mjc1ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ4NTg2MjMyIHNoYWxsIHByb3ZpZGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDYwMTkxNCBVTUVSQ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDggIHdpdGggfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ4NTg2MjMyIGEgZm9yZWNhc3Qgb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTM4MDYxNSBTdGVwaGVuc29ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDYwMTkxNCBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY0Mjc4Nzcgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDg1ODYyMzIgDQogbW9udGhseSBzeXN0ZW0gcGVhayBhbmQgZW5lcmd5IHJlcXVpcmVtZW50cyBmb3IgZWFjaCBvZiB0aGUgZm9sbG93aW5nIHRocmVlIHllYXJzIGFuZCBpdHMgc3VtbWVyIGFuZCB3aW50ZXIgcGVha3MgZm9yIGVhY2ggb2YgdGhyZWUgYWRkaXRpb25hbCB5ZWFycyBmb3IgbG9hZCB0byBiZSBzZXJ2ZWQgcHVyc3VhbnQgdG8gdGhpcyBBZ3JlZW1lbnQuICBGdXJ0aGVyLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDUzODA2MTUgU3RlcGhlbnNvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDg1ODYyMzIgIHNoYWxsIHByb3ZpZGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDYwMTkxNCBVTUVSQ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDg1ODYyMzIgIHdpdGggdGltZWx5IG5vdGljZSBvZiBhbnkgaW5mb3JtYXRpb24gfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4IHRoYXQgbWlnaHQgYWZmZWN0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ2MDE5MTQgVU1FUkNccnF1b3RlIHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4ICBhYmlsaXR5IHRvIHByb3ZpZGUgcmVsaWFibGUgV2hvbGVzYWxlIERpc3RyaWJ1dGlvbiBTZXJ2aWNlIHVuZGVyIHRoaXMgQWdyZWVtZW50LlxsaW5lIH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTQ0NDc3OSANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDIuMy5cdGFifX1ccGFyZCBcbHRycGFyXHFsIFxmaS00MzJcbGk3OTJccmkwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHg3OTJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczI0XGlsdmwxXGFkanVzdHJpZ2h0XHJpbjBcbGluNzkyXGl0YXAwXHBhcmFyc2lkMTE0MjM3NjkgDQp7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDk0NjI4NDggT2JsaWdhdGlvbnMgb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNDYwMTkxNCBVTUVSQ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDggIFxlbmRhc2ggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwMTI0NDg0IEJ5IEZlYnJ1YXJ5IDEgb2YgZWFjaCB5ZWFyLCB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ2MDE5MTQgVU1FUkN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4ICBzaGFsbCBwcm92aWRlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDUzODA2MTUgU3RlcGhlbnNvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwMTI0NDg0ICB3aXRoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkOTQ2Mjg0OCBhIGZvcmVjYXN0IG9mIHBsYW5uZWQgbWFpbnRlbmFuY2UgYW5kIGNvbnN0cnVjdGlvbiBhY3Rpdml0aWVzIHRoYXQgbWF5IGFkdmVyc2VseSBhZmZlY3QgdGhlIGFiaWxpdHkgb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDYwMTkxNCBVTUVSQ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDggDQogdG8gcHJvdmlkZSBXaG9sZXNhbGUgRGlzdHJpYnV0aW9uIFNlcnZpY2UgdG8gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTM4MDYxNSBTdGVwaGVuc29ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCAuICBGdXJ0aGVyLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NjAxOTE0IFVNRVJDfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ5NDYyODQ4ICBzaGFsbCBwcm92aWRlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDUzODA2MTUgU3RlcGhlbnNvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDggIHdpdGggdGltZWx5IG5vdGljZSBvZiBhbnkgdW4tcGxhbm5lZCBtYWludGVuYW5jZSANCm9yIGNvbnN0cnVjdGlvbiBhY3Rpdml0aWVzIHRoYXQgbWlnaHQgYWR2ZXJzZWx5IGFmZmVjdCBXaG9sZXNhbGUgRGlzdHJpYnV0aW9uIFNlcnZpY2UgdG8gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTM4MDYxNSBTdGVwaGVuc29ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCANCiBhbmQgd2lsbCBlbmRlYXZvciB0byBjYXJyeSBvdXQgc3VjaCBhY3Rpdml0aWVzIGluIGEgbWFubmVyIHRoYXQgd2lsbCBtaW5pbWl6ZSBhZHZlcnNlIGNvbnNlcXVlbmNlcyBhbmQgY3VydGFpbG1lbnRzIG9mIFdob2xlc2FsZSBEaXN0cmlidXRpb24gU2VydmljZSB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1MzgwNjE1IFN0ZXBoZW5zb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDk0NjI4NDggLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkOTQ2Mjg0OFxjaGFycnNpZDQwNzkzOTAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDggXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTE0MjM3NjlcY2hhcnJzaWQ3Mjk4NTQ5IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy5cdGFifX1ccGFyZCBcbHRycGFyXHFsIFxmaS0zNjBcbGkzNjBccmkwXGtlZXBuXHdpZGN0bHBhclxqY2xpc3R0YWJcdHgzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczI0XGFkanVzdHJpZ2h0XHJpbjBcbGluMzYwXGl0YXAwXHBhcmFyc2lkMTY1MTMzOSB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTQ2Mjg0OCBURVJNXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTQ0NDc3OSANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuMS5cdGFifX1ccGFyZCBcbHRycGFyXHFsIFxmaS00MzJcbGk3OTJccmkwXGtlZXBuXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDc5Mlx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMjRcaWx2bDFcYWRqdXN0cmlnaHRccmluMFxsaW43OTJcaXRhcDBccGFyYXJzaWQxMjY5MDIzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTQ2Mjg0OCBUZXJtIG9mIFNlcnZpY2UgQWdyZWVtZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCAgXGVuZGFzaCAgVGhlIFRlcm0gb317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTE0MjM3NjkgZiB0aGlzIEFncmVlbWVudCBzaGFsbCBiZWdpbiBvbiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ3NTU3MDc2IHRoZSBsYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQyNjcwNDQgdGVyIG9mIEphbnVhcnkgMSwgMjAxNyBvciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDEyNjkwMjNcY2hhcnJzaWQxMjY5MDIzIHVwb24gdGhlIHJlY2VpcHQgb2YgYWxsIGFwcGxpY2FibGUgc3RhdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzE2NjIxMyBhbmQgZmVkZXJhbCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjY5MDIzXGNoYXJyc2lkMTI2OTAyMyByZWd1bGF0b3J5IGFwcHJvdmFscyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDQyNjcwNDQgb2YgVU1FUkN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NjUxODc3ICx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4ICBhbmQgc2hhbGwgY29udGludWUgdW50aWwgdGVybWluYXRlZCBieSBlaXRoZXIgUGFydHkgaW4gYWNjb3JkYW5jZSB3aXRoIFNlY3Rpb24gMy4yIG9mIHRoaXMgQWdyZWVtZW50Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTU4MDAwNjkgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTM2MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4zNjBcaXRhcDBccGFyYXJzaWQxNTgwMDA2OSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODAwMDY5IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy4yLlx0YWJ9fVxwYXJkIFxsdHJwYXJccWwgXGZpLTQzMlxsaTc5MlxyaTBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDc5Mlx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMjRcaWx2bDFcYWRqdXN0cmlnaHRccmluMFxsaW43OTJcaXRhcDAge1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDk0NjI4NDggVGVybWluYXRpb24gb2YgU2VydmljZSBBZ3JlZW1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4ICBcZW5kYXNoICBFaXRoZXIgUGFydHkgbWF5IHRlcm1pbmF0ZSB0aGlzIEFncmVlbWVudCBhdCBhbnkgdGltZSBhZnRlciBncmFudGluZyB0aGUgb3RoZXIgUGFydHkgb25lIHllYXJccnF1b3RlIHMgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQzNDQwMDQ2IHdyaXR0ZW4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCBub3RpY2Ugb2YgaXRzIGludGVudCB0byB0ZXJtaW5hdGUgdGhlIEFncmVlbWVudCwgc3ViamVjdCB0byBhbnkgcmVndWxhdG9yeSBhcHByb3ZhbHMuXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTQ0NDc3OSANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDQuXHRhYn19XHBhcmQgXGx0cnBhclxxbCBcZmktMzYwXGxpMzYwXHJpMFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMyNFxhZGp1c3RyaWdodFxyaW4wXGxpbjM2MFxpdGFwMCB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTQ2Mjg0OCBSQVRFUyBBTkQgQ0hBUkdFU1xsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NDQ3NzkgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2hhcnJzaWQ1MzgwNjE1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDQuMS5cdGFifX1ccGFyZCBcbHRycGFyXHFsIFxmaS00MzJcbGk3OTJccmkwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHg3OTJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczI0XGlsdmwxXGFkanVzdHJpZ2h0XHJpbjBcbGluNzkyXGl0YXAwIA0Ke1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5NDYyODQ4XGNoYXJyc2lkNTM4MDYxNSBSYXRlIGZvciBXaG9sZXNhbGUgRGlzdHJpYnV0aW9uIFNlcnZpY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4XGNoYXJyc2lkNTM4MDYxNSAgXGVuZGFzaCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTM4MDYxNVxjaGFycnNpZDUzODA2MTUgU3RlcGhlbnNvbn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTA0NDQyNzVcY2hhcnJzaWQ1MzgwNjE1ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4XGNoYXJyc2lkNTM4MDYxNSBzaGFsbCBwYXkgdG8gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDYwMTkxNFxjaGFycnNpZDUzODA2MTUgVU1FUkN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDk0NjI4NDhcY2hhcnJzaWQ1MzgwNjE1ICAkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzg5MzgwOSA5NjYuOTd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4XGNoYXJyc2lkNTM4MDYxNSANCiBwZXIgbW9udGggZm9yIHRoZSBXaG9sZXNhbGUgRGlzdHJpYnV0aW9uIFNlcnZpY2UgcHJvdmlkZWQgdW5kZXIgdGhpcyBBZ3JlZW1lbnQsIG9yIHN1Y2ggb3RoZXIgcmF0ZSBlc3RhYmxpc2hlZCBwdXJzdWFudCB0byBTZWN0aW9uIDQufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDY3MjA5NlxjaGFycnNpZDUzODA2MTUgM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkOTQ2Mjg0OFxjaGFycnNpZDUzODA2MTUgIG9mIHRoaXMgQWdyZWVtZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjEyNTcxMVxjaGFycnNpZDUzODA2MTUgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxMTAxMDlcY2hhcnJzaWQ1MzgwNjE1IGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MTI1NzExXGNoYXJyc2lkNTM4MDYxNSBzIGZvbGxvd3M6fXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NDQ0Nzc5XGNoYXJyc2lkNTM4MDYxNSANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMTIyNFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xMjI0XGl0YXAwXHBhcmFyc2lkMTQ3NzQ1NjAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcdWxcaW5zcnNpZDk0NjI4NDhcY2hhcnJzaWQ1MzgwNjE1IERlbGl2ZXJ5IFBvaW50XHRhYiBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxiXHVsXGluc3JzaWQ1MzgwNjE1XGNoYXJyc2lkNTM4MDYxNSBcdGFiIFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXHVsXGluc3JzaWQ5NDYyODQ4XGNoYXJyc2lkNTM4MDYxNSBDaGFyZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4XGNoYXJyc2lkNTM4MDYxNSBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NDQ3NzlcY2hhcnJzaWQ1MzgwNjE1IA0KXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTUyMzg3MFxjaGFycnNpZDU1MjM4NzAgTWVub21pbmVlIFN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTM4MDYxNVxjaGFycnNpZDUzODA2MTUgIDI0MSBGZWVkZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4XGNoYXJyc2lkNTM4MDYxNSBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTM4MDYxNSBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDhcY2hhcnJzaWQ1MzgwNjE1ICR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1MzgwNjE1ICAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM4OTM4MDkgOTY2Ljk3fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjEyNTcxMVxjaGFycnNpZDUzODA2MTUgDQoNClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMTIyNFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xMjI0XGl0YXAwXHBhcmFyc2lkOTQ1ODk3NSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDYxMjU3MTFcY2hhcnJzaWQ1MzgwNjE1IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNoYXJyc2lkNTM4MDYxNSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA0LjIuXHRhYn19XHBhcmQgXGx0cnBhclxxbCBcZmktNDMyXGxpNzkyXHJpMFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHg3OTJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczI0XGlsdmwxXGFkanVzdHJpZ2h0XHJpbjBcbGluNzkyXGl0YXAwXHBhcmFyc2lkMTMwNzQyMTkge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5NDYyODQ4XGNoYXJyc2lkNTM4MDYxNSBSZWFsIFBvd2VyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MTE4Mzk5XGNoYXJyc2lkNTM4MDYxNSANCkxvc3Nlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MTE4Mzk5XGNoYXJyc2lkNTM4MDYxNSAgXGVuZGFzaCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTM4MDYxNVxjaGFycnNpZDUzODA2MTUgU3RlcGhlbnNvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwNDQ0Mjc1XGNoYXJyc2lkNTM4MDYxNSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDExODM5OVxjaGFycnNpZDUzODA2MTUgc2hhbGwgYmUgcmVzcG9uc2libGUgZm9yIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwMTc1MDIyXGNoYXJyc2lkNTM4MDYxNSBjb21wZW5zYXRpbmcgZm9yIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MTE4Mzk5XGNoYXJyc2lkNTM4MDYxNSANCmxvc3NlcyBhc3NvY2lhdGVkIHdpdGggdGhlIFdob2xlc2FsZSBEaXN0cmlidXRpb24gU2VydmljZSB1bmRlciB0aGlzIEFncmVlbWVudC4gIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU2NTE4NzdcY2hhcnJzaWQ1MzgwNjE1IFRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4XGNoYXJyc2lkNTM4MDYxNSByZWFsIHBvd2VyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQxMTgzOTlcY2hhcnJzaWQ1MzgwNjE1IGxvc3N9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NjUxODc3XGNoYXJyc2lkNTM4MDYxNSAgZmFjdG9yIHJhdGVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQxMTgzOTlcY2hhcnJzaWQ1MzgwNjE1ICBvbiB0aGUgZGlzdHJpYnV0aW9uIGZhY2lsaXRpZXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ5NDYyODQ4XGNoYXJyc2lkNTM4MDYxNSBpZGVudGlmaWVkIGluIFNjaGVkdWxlIEEgYW5kIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MTE4Mzk5XGNoYXJyc2lkNTM4MDYxNSByZXF1aXJlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTY1MTg3N1xjaGFycnNpZDUzODA2MTUgZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQxMTgzOTlcY2hhcnJzaWQ1MzgwNjE1ICB0byBwcm92aWRlIHRoZSBXaG9sZXNhbGUgRGlzdHJpYnV0aW9uIFNlcnZpY2UgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTY1MTg3N1xjaGFycnNpZDUzODA2MTUgYXJlIGFzIGluZGljYXRlZCBpbiBTZWN0aW9uIDQuMihhKX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MTE4Mzk5XGNoYXJyc2lkNTM4MDYxNSANCiBhbmQgd2lsbCBiZSBjYWxjdWxhdGVkIGJhc2VkIG9uIG1ldGVyZWQgbG9hZCBhdCB0aGUgZGlzdHJpYnV0aW9uIGRlbGl2ZXJ5IHBvaW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTY1MTg3N1xjaGFycnNpZDUzODA2MTUgLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDhcY2hhcnJzaWQ1MzgwNjE1ICAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ2MDMyNjk5XGNoYXJyc2lkNTM4MDYxNSANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMzYwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjM2MFxpdGFwMFxwYXJhcnNpZDEwNDk1ODQ5IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQxMTgzOTlcY2hhcnJzaWQ1MzgwNjE1IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNoYXJyc2lkNTM4MDYxNSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCBhLlx0YWJ9fVxwYXJkIFxsdHJwYXJccWwgXGZpLTUwNFxsaTEyMjRccmkwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDEyMjRcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczI0XGlsdmwyXGFkanVzdHJpZ2h0XHJpbjBcbGluMTIyNFxpdGFwMFxwYXJhcnNpZDU2NTE4Nzcge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5NDYyODQ4XGNoYXJyc2lkNTM4MDYxNSBSZWFsIFBvd2VyIExvc3MgRmFjdG9yIFJhdGVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1NjUxODc3XGNoYXJyc2lkNTM4MDYxNSANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkNTY1MTg3NyB7XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlx1bFxpbnNyc2lkOTQ2Mjg0OFxjaGFycnNpZDUzODA2MTUgRGVsaXZlcnkgUG9pbnR9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgDQpcYlx1bFxpbnNyc2lkOTUxMDU0MVxjaGFycnNpZDUzODA2MTUgXHRhYiB9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcdWxcaW5zcnNpZDE1MDE2MTYwIFx0YWIgXHRhYiB9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcdWxcaW5zcnNpZDk0NjI4NDhcY2hhcnJzaWQ1MzgwNjE1IFJhdGV9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcdWxcaW5zcnNpZDU2NTE4NzdcY2hhcnJzaWQ1MzgwNjE1IA0KDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDk0NjI4NDhcY2hhcnJzaWQ1NTIzODcwIE1lbm9taW5lZSBTdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDk0NjI4NDhcY2hhcnJzaWQ1MzgwNjE1IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNTM4MDYxNSBcdGFiIFx0YWIgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDUzODA2MTVcY2hhcnJzaWQ1MzgwNjE1IDEuMDIxfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNTY1MTg3N1xjaGFycnNpZDUzODA2MTUgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTcyMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQ2MDMyNjk5IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNjAzMjY5OVxjaGFycnNpZDUzODA2MTUgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2hhcnJzaWQ1MzgwNjE1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIGIuXHRhYn19XHBhcmQgXGx0cnBhclxxbCBcZmktNTA0XGxpMTIyNFxyaTBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTIyNFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMjRcaWx2bDJcYWRqdXN0cmlnaHRccmluMFxsaW4xMjI0XGl0YXAwXHBhcmFyc2lkNjAzMjY5OSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDhcY2hhcnJzaWQ1MzgwNjE1IFN0ZXBoZW5zb24gc2hhbGwgZW5zdXJlIHRoYXQgdGhlIG1ldGVyZWQgbG9hZCBhdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDEyMDY1OTg2XGNoYXJyc2lkNTM4MDYxNSBlYWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDhcY2hhcnJzaWQ1MzgwNjE1IGRpc3RyaWJ1dGlvbiBkZWxpdmVyeSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ4NTM3ODEyXGNoYXJyc2lkNTM4MDYxNSBwb2ludH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDhcY2hhcnJzaWQ1MzgwNjE1IA0KIGlzIGluY3JlbWVudGVkIGJ5IGl0cyBlbmVyZ3kgc3VwcGxpZXIsIGFjY29yZGluZyB0byB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTE1NDUxNjBcY2hhcnJzaWQ1MzgwNjE1IFJlYWwgUG93ZXIgTG9zcyBGYWN0b3IgUmF0ZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4XGNoYXJyc2lkNTM4MDYxNSANCiBzcGVjaWZpZWQgaW4gNC4yKGEpIGZvciBsb2FkIHJlcG9ydGluZyBhbmQgc2V0dGxlbWVudCBwdXJwb3NlcyBzbyB0aGF0IHJlcG9ydGVkIGxvYWQgaW5jbHVkZXMgZGlzdHJpYnV0aW9uIGxvc3Nlcy59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MDMyNjk5XGNoYXJyc2lkNTM4MDYxNSANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMzYwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjM2MFxpdGFwMFxwYXJhcnNpZDE0MTE4Mzk5IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQxMTgzOTlcY2hhcnJzaWQxNDExODM5OSANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDQuMy5cdGFifX1ccGFyZCBcbHRycGFyXHFsIFxmaS00MzJcbGk3OTJccmkwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHg3OTJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczI0XGlsdmwxXGFkanVzdHJpZ2h0XHJpbjBcbGluNzkyXGl0YXAwXHBhcmFyc2lkMTMwNzQyMTkgDQp7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDk0NjI4NDggUmF0ZSBDaGFuZ2VzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCAgXGVuZGFzaCAgTm90aGluZyBpbiB0aGlzIEFncmVlbWVudCBzaGFsbCBiZSBjb25zdHJ1ZWQgYXMgYWZmZWN0aW5nIGluIGFueSB3YXkgdGhlIHJpZ2h0IG9mIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ2MDE5MTQgVU1FUkN9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDggIHRvIHVuaWxhdGVyYWxseSBtYWtlIGFwcGxpY2F0aW9uIHRvIHRoZSBDb21taXNzaW9uIGZvciBhIGNoYW5nZSBpbiB0aGUgcmF0ZSBmb3IgV2hvbGVzYWxlIERpc3RyaWJ1dGlvbiBTZXJ2aWNlLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1MTQ5NjMwICAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDYwMTkxNCANClVNRVJDfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQxMTgzOTkgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExNTQ1MTYwIHNoYWxsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQxMTgzOTkgIG5vdGlmeSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1MzgwNjE1IFN0ZXBoZW5zb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDEwNDQ0Mjc1ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDExODM5OSBubyBsYXRlciB0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ2MDE5MTQgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MTE4Mzk5IA0KbiB0aGUgZGF0ZSBvZiBDb21taXNzaW9uIGZpbGluZywgb2YgaXRzIGludGVudCB0byBmaWxlIGZvciBhbiBhZGp1c3RtZW50IGluIHJhdGVzLiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDYwMTkxNCBVTUVSQ1xycXVvdGUgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MTE4Mzk5ICBub3RpZmljYXRpb24gc2hhbGwgY29uc2lzdCBvZiB0aGUgYXBwbGljYXRpb24NCiBwYWNrYWdlIHNlbnQgdG8gdGhlIENvbW1pc3Npb24uIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMDUxNDM1IFVNRVJDfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTE1NDUxNjAgIGFncmVlcyB0aGF0LCBpbiB0aGUgZXZlbnQgdGhhdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzA1MTQzNSBVTUVSQ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTE1NDUxNjAgIG1ha2VzIHN1Y2ggYXBwbGljYXRpb24gdG8gdGhlIENvbW1pc3Npb24sIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMDUxNDM1IFVNRVJDfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTE1NDUxNjAgIHNoYWxsIG5vdCBvcHBvc2UgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjQyNzg3NyBTdGVwaGVuc29ufXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxMTU0NTE2MCBccnF1b3RlIHMgcmlnaHQgdG8gaW50ZXJ2ZW5lIGFuZCBwcm90ZXN0IHN1Y2ggYXBwbGljYXRpb24ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTQ0NDc3OSANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkNTQ1NzcyOCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDgyNzI3ODMgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA1Llx0YWJ9fVxwYXJkIFxsdHJwYXJccWwgXGZpLTM2MFxsaTM2MFxyaTBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMjRcYWRqdXN0cmlnaHRccmluMFxsaW4zNjBcaXRhcDAge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDk0NjI4NDggQklMTElORyBBTkQgUEFZTUVOVFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NDQ3NzkgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA1LjEuXHRhYn19XHBhcmQgXGx0cnBhclxxbCBcZmktNDMyXGxpNzkyXHJpMFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4NzkyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMyNFxpbHZsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjc5MlxpdGFwMCB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTQ2Mjg0OCBCaWxsaW5nIERhdGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4ICBcZW5kYXNoICBBZnRlciBjb21tZW5jZW1lbnQgb2YgdGhpcyBBZ3JlZW1lbnQsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ2MDE5MTQgVU1FUkMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCANCnNoYWxsIGlzc3VlIGJpbGxzIHRvIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY0Mjc4NzcgU3RlcGhlbnNvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQyMzMyNCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCBvbiBhIGNhbGVuZGFyIG1vbnRoIGJhc2lzLCBieSB0aGUgMTB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcc3VwZXJcaW5zcnNpZDk0NjI4NDggdGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4ICB3b3JraW5nIGRheSBmb2xsb3dpbmcgdGhlIGNhbGVuZGFyIG1vbnRoIHRvIHdoaWNoIHRoZXkgYXBwbHkuICBBbGwgYmlsbHMgc2hhbGwgYmUgZHVlIGFuZCBwYXlhYmxlIHdpdGhpbiAyMCBkYXlzIG9mIHRoZWlyIHJlY2VpcHQuXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTQ0NDc3OSANCg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNoYXJyc2lkMTE4NjUyNzEgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNS4yLlx0YWJ9fVxwYXJkIFxsdHJwYXJccWwgXGZpLTQzMlxsaTc5MlxyaTBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4NzkyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMyNFxpbHZsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjc5MlxpdGFwMFxwYXJhcnNpZDE1MTk0MDUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5NDYyODQ4XGNoYXJyc2lkMTE4NjUyNzEgUGF5bWVudCBBZGRyZXNzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OFxjaGFycnNpZDExODY1MjcxICANClxlbmRhc2ggIFx0YWIgRm9yIFdpcmUgVHJhbnNmZXJzOiBcbGluZSBcdGFiIFx0YWIgXHRhYiBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDhcY2hhcnJzaWQyMDM4OTUxIFVTIEJhbmssIE4uQS59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTE5NDA1XGNoYXJyc2lkMTE4NjUyNzEgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxmaTcyMFxsaTI4ODBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMjg4MFxpdGFwMFxwYXJhcnNpZDE1MTk0MDUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4IDc3NyBFYXN0IFdpc2NvbnNpbiBBdmVudWV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTE5NDA1IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4IE1pbHdhdWtlZSwgV2lzY29uc2luICA1MzIwMn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1MTk0MDUgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDggQUJBICMwNzUgMDAwIDAyMn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1MTk0MDVcY2hhcnJzaWQxMTg2NTI3MSANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMzYwMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4zNjAwXGl0YXAwXHBhcmFyc2lkMTIwMjQ5NjUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4IEZvciBjcmVkaXQgdG86ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcYlxmMVxmczIwXGluc3JzaWQ5NDYyODQ4XGNoYXJyc2lkMTIwMjQ5NjUgVXBwZXIgTWljaGlnYW4gRW5lcmd5IFJlc291cmNlcyBDb3Jwb3JhdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1MTk0MDUgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxmaTY0OFxsaTI5NTJccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMjk1MlxpdGFwMFxwYXJhcnNpZDEyMDI0OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCBBY2NvdW50ICMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTI5NzM3IDE4MjM4MTAxNDg1N317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTUyOTAyMDZcY2hhcnJzaWQxMTg2NTI3MSANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGZpNzIwXGxpMjg4MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4yODgwXGl0YXAwXHBhcmFyc2lkMTUyOTAyMDYge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTI5MDIwNlxjaGFycnNpZDExODY1MjcxIA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGk3OTJccmkwXGtlZXBca2VlcG5cbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjc5MlxpdGFwMFxwYXJhcnNpZDE2NTEzMzkge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4IFx0YWIgXHRhYiBcdGFiIEZvciBPdGhlciBQYXltZW50czp9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcYlxoaWdobGlnaHQ3XGluc3JzaWQ5NDYyODQ4XGNoYXJyc2lkNDA3OTM5MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCBcbGluZSBcdGFiIFx0YWIgXHRhYiBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDhcY2hhcnJzaWQxMTg2NTI3MSBDYXNoaWVycyBBMTM5XGxpbmUgXHRhYiBcdGFiIFx0YWIgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDk0NjI4NDhcY2hhcnJzaWQxNTE5NDA1IFVwcGVyIE1pY2hpZ2FuIEVuZXJneSBSZXNvdXJjZXMgQ29ycG9yYXRpb24gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTUxOTQwNSANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGZpNjQ4XGxpMjk1MlxyaTBca2VlcFxrZWVwblxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMjk1MlxpdGFwMFxwYXJhcnNpZDEyMDI0OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCBDL28gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1NDQ0Nzc5XGNoYXJyc2lkMTE4NjUyNzEgV2UgRW5lcmdpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ3Mjk4NTQ5XGNoYXJyc2lkMTE4NjUyNzEgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTc5MlxyaTBca2VlcFxrZWVwblxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNzkyXGl0YXAwXHBhcmFyc2lkMTY1MTMzOSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDhcY2hhcnJzaWQxMTg2NTI3MSBcdGFiIFx0YWIgXHRhYiBcdGFiIDMzMyBXLiBFdmVyZXR0IFN0cmVldFxsaW5lIFx0YWIgXHRhYiANClx0YWIgXHRhYiBNaWx3YXVrZWUsIFdpc2NvbnNpbiAgNTMyMDN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4IFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NDQ3NzkgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2hhcnJzaWQ0MjA4OTk4IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDUuMy5cdGFifX1ccGFyZCBcbHRycGFyXHFsIFxmaS00MzJcbGk4ODJccmkwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDg4MlxqY2xpc3R0YWJcdHgxMTUyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMyNFxpbHZsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjg4MlxpdGFwMFxwYXJhcnNpZDQ0ODQ0Njgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5NDYyODQ4XGNoYXJyc2lkNDIwODk5OCBJbnRlcmVzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkOTQ2Mjg0OFxjaGFycnNpZDQyMDg5OTggIFxlbmRhc2ggIEJpbGxzIHRoYXQgYXJlIG5vdCBwYWlkIGluIGZ1bGwgYnkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTM4MDYxNSBTdGVwaGVuc29ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjMwMDg5OFxjaGFycnNpZDQyMDg5OTggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkOTQ2Mjg0OFxjaGFycnNpZDQyMDg5OTggd2hlbiBkdWUgc2hhbGwgdGhlcmVhZnRlciBiZWFyIGludGVyZXN0IGF0IHRoZSByYXRlIG9mIDFcJ2JkIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIzODA5MjhcY2hhcnJzaWQ0MjA4OTk4ICBwZXJjZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OFxjaGFycnNpZDQyMDg5OTggIHBlciBtb250aCwgbw0KciBhdCB0aGUgbWF4aW11bSByYXRlIG9mIGludGVyZXN0IGFsbG93ZWQgYnkgbGF3LCB3aGljaGV2ZXIgaXMgbGVzcy5cbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NDQ0Nzc5XGNoYXJyc2lkNDIwODk5OCANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjaGFycnNpZDQyMDg5OTggXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNS40Llx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTQ2Mjg0OFxjaGFycnNpZDQyMDg5OTggRGlzcHV0ZWQgQmlsbHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDk0NjI4NDhcY2hhcnJzaWQ0MjA4OTk4ICBcZW5kYXNoICBJbiB0aGUgZXZlbnQgb2YgYSBkaXNwdXRlIGFib3V0IGFueSBpbnZvaWNlLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1MzgwNjE1IFN0ZXBoZW5zb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMzAwODk4XGNoYXJyc2lkNDIwODk5OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ5NDYyODQ4XGNoYXJyc2lkNDIwODk5OCBzaGFsbCByZW1pdCB0aGUgdW5kaXNwdXRlZCBwb3J0aW9uIG9mIHN1Y2ggaW52b2ljZSwgYW5kIHNoYWxsIGhhdmUgdGhlIG9wdGlvbiB0byBwYXkgdGhlIGRpc3B1dGVkIHBvcnRpb24gb2Ygc3VjaA0KIGludm9pY2UgdW5kZXIgcHJvdGVzdCBvciByZW1pdCB0aGUgZGlzcHV0ZWQgcG9ydGlvbiBvZiBzdWNoIGludm9pY2UgaW50byBhbiBlc2Nyb3cgYWNjb3VudCBwZW5kaW5nIHRoZSByZXNvbHV0aW9uIG9mIHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5OTg1Mzg3IGhlIGRpc3B1dGUgcHVyc3VhbnQgdG8gU2VjdGlvbiAxMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkOTQ2Mjg0OFxjaGFycnNpZDQyMDg5OTggIG9mIHRoaXMgQWdyZWVtZW50LlxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NDQ3NzlcY2hhcnJzaWQ0MjA4OTk4IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNoYXJyc2lkNDIwODk5OCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA1LjUuXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5NDYyODQ4XGNoYXJyc2lkNDIwODk5OCBUZXJtaW5hdGlvbiBmb3IgTm9uLVBheW1lbnQgb2YgQmlsbHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDk0NjI4NDhcY2hhcnJzaWQ0MjA4OTk4ICBcZW5kYXNoICBJbiB0aGUgZXZlbnQgb2Ygbm9uLXBheW1lbnQgb2YgYSBiaWxsIGJ5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDUzODA2MTUgU3RlcGhlbnNvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDhcY2hhcnJzaWQ0MjA4OTk4ICwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ4MzI2NjE4XGNoYXJyc2lkNDIwODk5OCBVTUVSQ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDhcY2hhcnJzaWQ0MjA4OTk4ICBzaGFsbCBoYXZlIHRoZSByaWdodCB0byB0ZXJtaW5hdGUgc2VydmljZSBzaXh0eSAoNjApIGRheXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMzAwODk4XGNoYXJyc2lkNDIwODk5OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ5NDYyODQ4XGNoYXJyc2lkNDIwODk5OCBzdWJzZXF1ZW50IHRvIHRoZSBkYXRlIG9mIHRoZSBiaWxsOyAgcHJvdmlkZWQsIGhvd2V2ZXIsIHRoYXQgaW4gdGhlIGV2ZW50IG9mIGFueSBiaWxsaW5nIGRpc3B1dGUsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDgzMjY2MThcY2hhcnJzaWQ0MjA4OTk4IFVNRVJDfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ5NDYyODQ4XGNoYXJyc2lkNDIwODk5OCAgc2hhbGwgbm90IGhhdmUgdGhlIHJpZ2h0IHRvIHRlcm1pbmF0ZSBzZXJ2aWNlIGlmIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDUzODA2MTUgU3RlcGhlbnNvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIzMDA4OThcY2hhcnJzaWQ0MjA4OTk4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDk0NjI4NDhcY2hhcnJzaWQ0MjA4OTk4IGNvbXBsaWVzIHdpdGggU2VjdGlvbiA1LjQgb2YgdGhpcyBBZ3JlZW1lbnQsIGFuZCBlaXRoZXIgcGF5cyB0aGUgZGlzcHV0ZWQgYW1vdW50IHVuZGVyIHByb3Rlc3Qgb3IgcGxhY2VzIGRpc3B1dGVkIGFtb3VudHMgaW4gYW4gZXNjcm93IGFjY291bnQgc3ViamVjdCB0byBkaXNidXJzZW1lbnQgYmFzZWQgdXBvbiB0aGUgcmVzb2x1dGlvbiBvZiB0aGUgZGlzcHV0ZS4gIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkODMyNjYxOFxjaGFycnNpZDQyMDg5OTggVU1FUkN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4XGNoYXJyc2lkNDIwODk5OCAgc2hhbGwgYmUgcmVxdWlyZWQgdG8gbm90aWZ5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDUzODA2MTUgU3RlcGhlbnNvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjMwMDg5OFxjaGFycnNpZDQyMDg5OTggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDhcY2hhcnJzaWQ0MjA4OTk4IGluIHdyaXRpbmcgb2YgaXRzIGludGVudCB0byB0ZXJtaW5hdGUgc2VydmljZSBmb3Igbm9uLXBheW1lbnQgYXQgbGVhc3QgdGhpcnR5ICgzMCkgZGF5cyBwcmlvciB0byB0aGUgYWN0dWFsIGRhdGUgb2YgdGVybWluYXRpb24gb2Ygc2VydmljZS4gIH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkODMyNjYxOFxjaGFycnNpZDQyMDg5OTggVU1FUkN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4XGNoYXJyc2lkNDIwODk5OCAgbWF5IG5vdCB0ZXJtaW5hdGUgc2VydmljZSBmb3IgcmVhc29uIG9mIG5vbi1wYXltZW50IGlmIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDUzODA2MTUgU3RlcGhlbnNvbn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjMwMDg5OFxjaGFycnNpZDQyMDg5OTggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDhcY2hhcnJzaWQ0MjA4OTk4IG1ha2VzIHBheW1lbnQgcHJpb3IgdG8gdGhlIGRhdGUgb2YgdGVybWluYXRpb24ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NDQ0Nzc5IA0KDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA2Llx0YWJ9fVxwYXJkIFxsdHJwYXJccWwgXGZpLTM2MFxsaTM2MFxyaTBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMjRcYWRqdXN0cmlnaHRccmluMFxsaW4zNjBcaXRhcDAge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDk0NjI4NDggQVNTSUdOTUVOVFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NDQ3NzkgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA2LjEuXHRhYn19XHBhcmQgXGx0cnBhclxxbCBcZmktNDMyXGxpNzkyXHJpMFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4NzkyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMyNFxpbHZsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjc5MlxpdGFwMCB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTQ2Mjg0OCBBc3NpZ25tZW50IG9mIFJpZ2h0cyBVbmRlciB0aGUgQWdyZWVtZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCAgXGVuZGFzaCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTE3Mzk4NjUgDQpFYWNoIFBhcnR5IHNoYWxsIGhhdmUgdGhlIHJpZ2h0IHRvIGFzc2lnbiBhbGwgb3IgYW55IHBvcnRpb24gb2YgaXRzIGludGVyZXN0IGluIHRoZSBBZ3JlZW1lbnQgdXBvbiBwcmlvciB3cml0dGVuIG5vdGljZSB0byB0aGUgb3RoZXIgUGFydHksIGFuZCBhIFBhcnR5IGFzc2lnbmluZyBpdHMgcmlnaHRzIGFuZCBvYmxpZ2F0aW9ucyB1bmRlciB0aGlzIEFncmVlbWVudCBzaA0KYWxsIHByb3ZpZGUgbm90aWNlIHRvIHRoZSBvdGhlciBQYXJ0eSBvZiB0aGUgYXNzaWdubWVudCBwdXJzdWFudCB0byBTZWN0aW9uIDF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ3NDE1MDU0IDJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTczOTg2NSANCiBvZiB0aGlzIEFncmVlbWVudC4gIElmIGFzc2lnbm1lbnQgb2YgdGhpcyBBZ3JlZW1lbnQgb2NjdXJzIHB1cnN1YW50IHRvIHRoZSBwcm92aXNpb25zIG9mIHRoaXMgc2VjdGlvbiwgdGhpcyBBZ3JlZW1lbnQgc2hhbGwgYmUgYmluZGluZyB1cG9uIGFuZCBpbnVyZSB0byB0aGUgYmVuZWZpdCBvZiB0aGUgcmVzcGVjdGl2ZSBzdWNjZXNzb3JzIGFuZCBhc3NpZ25zIG9mIHRoZSBQYXJ0aWVzLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkOTQ2Mjg0OCBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NDQ0Nzc5IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNi4yLlx0YWJ9fVxwYXJkIFxsdHJwYXJccWwgXGZpLTQzMlxsaTc5MlxyaTBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDc5Mlx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMjRcaWx2bDFcYWRqdXN0cmlnaHRccmluMFxsaW43OTJcaXRhcDBccGFyYXJzaWQ3NDE1MDU0IHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5NDYyODQ4IE9ibGlnYXRpb25zIEFmdGVyIEFzc2lnbm1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4ICBcZW5kYXNoIA0KIEluIHRoZSBldmVudCBvZiBhbnkgc2FsZSwgdHJhbnNmZXIsIG9yIGFzc2lnbm1lbnQgaGVyZXVuZGVyLCB0aGUgdHJhbnNmZXJvciBvciBhc3NpZ25vciBzaGFsbCwgdG8gdGhlIGV4dGVudCBvZiB0aGUgdHJhbnNmZXJyZWQgb3IgYXNzaWduZWQgb2JsaWdhdGlvbnMsIGFuZCBvbmx5IHRvIHN1Y2ggZXh0ZW50LCBiDQplIHJlbGlldmVkIG9mIG9ibGlnYXRpb25zIGFjY3J1aW5nIGZyb20gYW5kIGFmdGVyIHRoZSBlZmZlY3RpdmUgZGF0ZSBvZiBzdWNoIHRyYW5zZmVyIG9yIGFzc2lnbm1lbnQ7ICBwcm92aWRlZCwgaG93ZXZlciwgdGhhdCB1bmRlciBubyBjaXJjdW1zdGFuY2VzIHNoYWxsIGFueSBzYWxlLCB0cmFuc2Zlciwgb3IgYXNzaWdubWVudCByZWxpZXZlIHRoZSB0cmFuc2Zlcm9yIG9yIGFzc2lnbm9yIG9mIGFueSBsaWFiaWxpdHkgZm9yIGFueSBicmVhY2gNCiBvZiB0aGlzIEFncmVlbWVudCBvY2N1cnJpbmcgYmVmb3JlIHRoZSBlZmZlY3RpdmUgZGF0ZSBvZiBzdWNoIHRyYW5zZmVyIG9yIGFzc2lnbm1lbnQuXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNzQxNTA1NCANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDcuXHRhYn19XHBhcmQgXGx0cnBhclxxbCBcZmktMzYwXGxpMzYwXHJpMFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMyNFxhZGp1c3RyaWdodFxyaW4wXGxpbjM2MFxpdGFwMCB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTQ2Mjg0OCBMT0FEIFNIRURESU5HIEFORCBDVVJUQUlMTUVOVFNcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NDQ0Nzc5IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNy4xLlx0YWJ9fVxwYXJkIFxsdHJwYXJccWwgXGZpLTQzMlxsaTc5MlxyaTBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDc5Mlx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMjRcaWx2bDFcYWRqdXN0cmlnaHRccmluMFxsaW43OTJcaXRhcDBccGFyYXJzaWQxNTE5NDA1IHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5NDYyODQ4IFByb2NlZHVyZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ3MzU1NDUwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4IFxlbmRhc2ggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNzM1NTQ1MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTE5NDA1IElufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNzEwNDI1MCAgYWNjb3JkYW5jZSB3aXRoIE5FUkMgc3RhbmRhcmRzIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NTcyODY1ICB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ3MTA0MjUwICBNSVNPIEVuZXJneSBNYXJrZXQgVGFyaWZmIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTUxOTQwNVxjaGFycnNpZDE1MTk0MDUgIHRoZSBXUFMgQmFsYW5jaW5nIEF1dGhvcml0eSBpbXBsZW1lbnRzIGxvYWQgc2hlZC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ3MTA0MjUwICAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ1NzI4NjUgQ3VydGFpbG1lbnQgbm90aWNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxMTkzMDg0OSAgd2lsbCBiZSBjb21tdW5pY2F0ZWQgYnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTE5NDA1ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTE5NDA1XGNoYXJyc2lkMTUxOTQwNSB0aGUgV1BTIEJhbGFuY2luZyBBdXRob3JpdHkgY29udGFjdGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExOTMwODQ5ICB9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDUzODA2MTUgU3RlcGhlbnNvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjM2ODU0ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4IGFzIHNvb24gYXMgcHJhY3RpY2FibGUgYWZ0ZXIgYSBkZXRlcm1pbmF0aW9uIHRoYXQgY3VydGFpbG1lbnRzIGFyZSBuZWNlc3NhcnkufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGJcaW5zcnNpZDExOTMwODQ5XGNoYXJyc2lkMjkxMDExNCBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTkzMDg0OSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTQ0NDc3OSANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDcuMi5cdGFifX1ccGFyZCBcbHRycGFyXHFsIFxmaS00MzJcbGk3OTJccmkwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHg3OTJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczI0XGlsdmwxXGFkanVzdHJpZ2h0XHJpbjBcbGluNzkyXGl0YXAwIHtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5NDYyODQ4IERpc3RyaWJ1dGlvbiBDb25zdHJhaW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDggIFxlbmRhc2ggIER1cmluZyBhbnkgcGVyaW9kIHdoZW4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkODMyNjYxOCBVTUVSQ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDggDQosIEFUQywgb3IgTUlTTyBkZXRlcm1pbmVzIHRoYXQgYSBjb25zdHJhaW50IGV4aXN0cyBvbiBhbGwgb3IgYSBwb3J0aW9uIG9mIHRoZSBBVEMgdHJhbnNtaXNzaW9uIGZhY2lsaXRpZXMgb3IgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkODMyNjYxOCBVTUVSQ1xycXVvdGUgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDggDQogZmFjaWxpdGllcyB1c2VkIHRvIHByb3ZpZGUgV2hvbGVzYWxlIERpc3RyaWJ1dGlvbiBTZXJ2aWNlIHVuZGVyIHRoaXMgQWdyZWVtZW50LCBhbmQgdGhhdCBzdWNoIGNvbnN0cmFpbnQgbWF5IGltcGFpciB0aGUgcmVsaWFiaWxpdHkgb2YgdGhvc2UgZmFjaWxpdGllcyBvciBvdGhlciBmYWNpbGl0aWVzIG93bmVkIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIzODQ1MjEgYW5kL29yIG9wZXJhdGVkIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCBieSBBVEN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMzg0NTIxICx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ4MzI2NjE4IFVNRVJDfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCAsfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMzg0NTIxICBvciBNSVNPfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCAsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDgzMjY2MTggVU1FUkN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4IA0KIG1heSB0YWtlIHdoYXRldmVyIGFjdGlvbnMsIGNvbnNpc3RlbnQgd2l0aCBHb29kIFV0aWxpdHkgUHJhY3RpY2UsIHRoYXQgYXJlIHJlYXNvbmFibHkgbmVjZXNzYXJ5IHRvIG1haW50YWluIHRoZSByZWxpYWJpbGl0eSBvZiB0aG9zZSBmYWNpbGl0aWVzLiAgU3VjaCBhY3Rpb25zIHdpbGwgYmUgdGFrZW4gaW4gYSBub25kaXNjcmltaW5hdG9yeSBtYW5uZXIufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjMwMDg5OCANCg0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkzNjBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMzYwXGl0YXAwXHBhcmFyc2lkMjMwMDg5OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIzMDA4OTggDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA3LjMuXHRhYn19XHBhcmQgXGx0cnBhclxxbCBcZmktNDMyXGxpNzkyXHJpMFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4NzkyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMyNFxpbHZsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjc5MlxpdGFwMCB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTQ2Mjg0OCBDdXJ0YWlsbWVudHMgb2YgV2hvbGVzYWxlIERpc3RyaWJ1dGlvbiBTZXJ2aWNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCAgXGVuZGFzaCAgSWYgYSBjb25zdHJhaW50IGNhbm5vdCBiZSByZWxpZXZlZCB0aHJvdWdoIHRoZSBpbXBsZW1lbnRhdGlvbiBvZiBvdGhlciBwcm9jZWR1cmVzLCBhbmQgaWYgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ4MzI2NjE4IFVNRVJDfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCANCiBkZXRlcm1pbmVzIHRoYXQgaXQgaXMgbmVjZXNzYXJ5IHRvIGN1cnRhaWwgV2hvbGVzYWxlIERpc3RyaWJ1dGlvbiBTZXJ2aWNlIHRoYXQgd291bGQgb3RoZXJ3aXNlIGJlIHByb3ZpZGVkIHVuZGVyIHRoaXMgQWdyZWVtZW50LCBzdWNoIGRlbGl2ZXJpZXMgc2hhbGwgYmUgY3VydGFpbGVkIGluIGEgbm9uZGlzY3JpbWluYXRvcnkgZmFzaGlvbi5cbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NDQ0Nzc5IA0KDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA3LjQuXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5NDYyODQ4IEN1cnRhaWxtZW50IEFsbG9jYXRpb24gb2YgV2hvbGVzYWxlIERpc3RyaWJ1dGlvbiBTZXJ2aWNlIEZvciBUcmFuc21pc3Npb24gQ29uc3RyYWludHN9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDczNTU0NTAgXGVuZGFzaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4IA0KIEVhY2ggUGFydHkgc2hhbGwsIG9uIGEgbm9uLWRpc2NyaW1pbmF0b3J5IGJhc2lzLCBjdXJ0YWlsIGl0cyB1c2Ugb2YgdGhlIHN5c3RlbSBpbiBhIG1hbm5lciB0aGF0IGVmZmVjdGl2ZWx5IHJlbGlldmVzIHRoZSBjb25zdHJhaW50LiAgSG93ZXZlciwgdG8gdGhlIGV4dGVudCBwcmFjdGljYWJsZSBhbmQgY29uc2lzdGVudCB3aXRoIEdvb2QgVXRpbGl0eSBQcmFjdGljZSwgYW55IGN1cnRhaWxtZW4NCnQgd2lsbCBiZSBwcm9wb3J0aW9uYXRlbHkgc2hhcmVkIGJ5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ1MjQ2MTIgVU1FUkN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4ICBhbmQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTM4MDYxNSBTdGVwaGVuc29ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCAuXGxpbmUgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NDQ0Nzc5IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNy41Llx0YWJ9fVxwYXJkIFxsdHJwYXJccWwgXGZpLTQzMlxsaTc5MlxyaTBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDc5Mlx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMjRcaWx2bDFcYWRqdXN0cmlnaHRccmluMFxsaW43OTJcaXRhcDBccGFyYXJzaWQ4NDU1ODkwIHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5NDYyODQ4IFN5c3RlbSBSZWxpYWJpbGl0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDggIFxlbmRhc2ggIE5vdHdpdGhzdGFuZGluZyBhbnkgb3RoZXIgcHJvdmlzaW9ucyBvZiB0aGlzIEFncmVlbWVudCwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDUyNDYxMiBVTUVSQ317XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCAsIGZvciBpdHMgb3duIHB1cnBvc2VzIG9yIGluIHJlc3BvbnNlIHRvIGFjdGlvbnMgdGFrZW4gb3IgcmVxdWVzdHMgbWFkZSBieSBBVEMgb3IgTUlTTywgcmVzZXJ2ZXMgdGhlIHJpZ2h0LCBjb25zaXN0DQplbnQgd2l0aCBHb29kIFV0aWxpdHkgUHJhY3RpY2UgYW5kIG9uIGEgYmFzaXMgdGhhdCBpcyBub3QgdW5kdWx5IGRpc2NyaW1pbmF0b3J5LCB0byBjdXJ0YWlsIFdob2xlc2FsZSBEaXN0cmlidXRpb24gU2VydmljZSB3aXRob3V0IGxpYWJpbGl0eSBvbiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NTI0NjEyIFVNRVJDXHJxdW90ZSBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCANCiBwYXJ0LiAgU3VjaCBjdXJ0YWlsbWVudHMgbWF5IGJlIG1hZGUgKGEpIGZvciB0aGUgcHVycG9zZSBvZiBtYWtpbmcgbmVjZXNzYXJ5IGFkanVzdG1lbnRzIHRvLCBjaGFuZ2VzIGluLA0KIG9yIHJlcGFpcnMgb24gdGhlIGxpbmVzLCBzdWJzdGF0aW9ucywgYW5kIGZhY2lsaXRpZXMgaW52b2x2ZWQgaW4gcHJvdmlkaW5nIHNlcnZpY2UgdW5kZXIgdGhpcyBBZ3JlZW1lbnQsIG9yIChiKSB3aGVyZSB0aGUgY29udGludWFuY2Ugb2YgV2hvbGVzYWxlIERpc3RyaWJ1dGlvbiBTZXJ2aWNlIHdvdWxkIGVuZGFuZ2VyIHBlcnNvbnMgb3IgcHJvcGVydHkuICBcbGluZSBcbGluZSANCkluIHRoZSBldmVudCBvZiBhbnkgYWR2ZXJzZSBjb25kaXRpb25zIG9yIGRpc3R1cmJhbmNlcyBvbiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NTI0NjEyIFVNRVJDXHJxdW90ZSBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCAgZmFjaWxpdGllcywgb3Igb24gYW55IG90aGVyIHN5c3RlbXMgZGlyZWN0bHkgb3IgaW5kaXJlY3RseSBpbnRlcmNvbm5lY3RlZCB3aXRoIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDUyNDYxMiBVTUVSQ1xycXVvdGUgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDggIHN5c3RlbSwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDUyNDYxMiBVTUVSQ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDggDQosIGNvbnNpc3RlbnQgd2l0aCBHb29kIFV0aWxpdHkgUHJhY3RpY2UsIGFsc28gbWF5IGN1cnRhaWwgV2hvbGVzYWxlIERpc3RyaWJ1dGlvbiBTZXJ2aWNlIGluIG9yZGVyIHRvIChpKSBsaW1pdCB0aGUgZXh0ZW50IG9yIGRhbWFnZSBvZiB0aGUgYWR2ZXJzZSBjb25kaXRpb25zIG9yIGRpc3R1cmJhbmNlcywgKGlpKSBwcmV2ZW50IGRhbWFnZSB0byBmYWNpbGl0aWVzLCBvciAoaWlpKSBleHBlZGl0ZSByZXN0b3JhdGlvbiBvZiBzZXJ2aWNlLiAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NTI0NjEyIFVNRVJDfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCAgd2lsbCBnaXZlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDUzODA2MTUgU3RlcGhlbnNvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDgxOTgzMTYgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkOTQ2Mjg0OCBhcyBtdWNoIGFkdmFuY2Ugbm90aWNlIGFzIGlzIHByYWN0aWNhYmxlIGluIHRoZSBldmVudCBvZiBzdWNoIGN1cnRhaWxtZW50Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDg0NTU4OTAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTM2MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4zNjBcaXRhcDBccGFyYXJzaWQyMjQ2NjIwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjA1NzI2MyANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDcuNi5cdGFifX1ccGFyZCBcbHRycGFyXHFsIFxmaS00MzJcbGk3OTJccmkwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHg3OTJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczI0XGlsdmwxXGFkanVzdHJpZ2h0XHJpbjBcbGluNzkyXGl0YXAwXHBhcmFyc2lkMjI0NjYyMCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTQ2Mjg0OCBVbmRlcmZyZXF1ZW5jeSBMb2FkIFNoZWRkaW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNzM1NTQ1MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY0MDQyNTdcY2hhcnJzaWQxMjAyNDk2NSBcZW5kYXNoICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1MzgwNjE1IFN0ZXBoZW4NCnNvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2NDA0MjU3IHNoYWxsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDggY29tcGx5IHdpdGggYWxsIHJlZ3VsYXRvcnkgdW5kZXJmcmVxdWVuY3kgbG9hZCBzaGVkZGluZyByZXF1aXJlbWVudHMgdGhyb3VnaCBwYXJ0aWNpcGF0aW9uIGluIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTM4MDYxNSBTdGVwaGVuc29ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjI0NjYyMCBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNTM2MzIwIHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4ICBVbmRlcmZyZXF1ZW5jeSBMb2FkIFNoZWRkaW5nIHBsYW4uICB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDUzODA2MTUgU3RlcGhlbnNvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU3MTg2NjkgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDggc2hhbGwgc3VwcGx5IGRvY3VtZW50YXRpb24gb2Ygc3VjaCBjb21wbGlhbmNlIHRvIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyMDYyNDEzIFVNRVJDfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4ICBhbmQgQVRDLCBpZiByZXF1ZXN0ZWQufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjA1NzI2MyANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMzYwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjM2MFxpdGFwMFxwYXJhcnNpZDg0NTU4OTAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NDQ0Nzc5IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgOC5cdGFifX1ccGFyZCBcbHRycGFyXHFsIFxmaS0zNjBcbGkzNjBccmkwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHgzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczI0XGFkanVzdHJpZ2h0XHJpbjBcbGluMzYwXGl0YXAwIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5NDYyODQ4IEVORVJHWSBSRUxJQUJJTElUWSBPUkdBTklaQVRJT04gT0JMSUdBVElPTlNcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NDQ0Nzc5XGNoYXJyc2lkNTkwOTA3IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgOC4xLlx0YWJ9fVxwYXJkIFxsdHJwYXJccWwgXGZpLTQzMlxsaTc5MlxyaTBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDc5Mlx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMjRcaWx2bDFcYWRqdXN0cmlnaHRccmluMFxsaW43OTJcaXRhcDAge1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDggU3RlcGhlbnNvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDhcY2hhcnJzaWQyOTEwMTE0ICBzaGFsbCBjb21wbHkgd2l0aCBhbGwgYXBwbGljYWJsZSBlbmVyZ3kgcmVsaWFiaWxpdHkgb3JnYW5pemF0aW9uIHJlcXVpcmVtZW50cy5cbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NDQ0Nzc5XGNoYXJyc2lkMjkxMDExNCANCg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgOC4yLlx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCBTdGVwaGVuc29ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjA1NzI2MyAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1NDQ0Nzc5XGNoYXJyc2lkMjkxMDExNCBzaGFsbCBiZSByZXNwb25zaWJsZSBmb3IgcGF5aW5nIGFsbCBlbmVyZ3kgcmVsaWFiaWxpdHkgb3JnYW5pemF0aW9uIGNvc3RzIGFzc29jaWF0ZWQgd2l0aCBpdHMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjA1NzI2MyBsb2FkIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NDQ3NzlcY2hhcnJzaWQyOTEwMTE0IA0KYW5kIHRoZSBwcm92aXNpb24gb2Ygc2VydmljZSB1bmRlciB0aGlzIEFncmVlbWVudC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NDU3NzI4IA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkzNjBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMzYwXGl0YXAwXHBhcmFyc2lkNTQ1NzcyOCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NTc3MjggDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA4LjMuXHRhYn19XHBhcmQgXGx0cnBhclxxbCBcZmktNDMyXGxpNzkyXHJpMFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4NzkyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMyNFxpbHZsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjc5MlxpdGFwMCB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCBTdGVwaGVuc29ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTQ1NzcyOFxjaGFycnNpZDExMTU0ODQ4ICBzaGFsbCBwcm92aWRlIGFsbCBkYXRhIGFuZCBpbmZvcm1hdGlvbiByZXF1ZXN0ZWQgYnkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTIwNjI0MTMgVU1FUkN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU0NTc3MjhcY2hhcnJzaWQxMTE1NDg0OCAgaW4gb3JkZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY3MzcwNDYgZm9yIFVNRVJDIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NTc3MjhcY2hhcnJzaWQxMTE1NDg0OCB0byBjb21wbHkgd2l0aCBlbGVjdHJpYyByZWxpYWJpbGl0eSBvcmdhbml6YXRpb24gcmVxdWlyZW1lbnRzLn17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCANClxsdHJjaFxmY3MwIFxjZjVcaW5zcnNpZDU0NTc3MjhcY2hhcnJzaWQ1NDU3NzI4ICAgICAgfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OFxjaGFycnNpZDU0NTc3MjggXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxpbnNyc2lkNTQ0NDc3OSANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjaGFycnNpZDE2NzM3MDQ2IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDkuXHRhYn19XHBhcmQgXGx0cnBhclxxbCBcZmktMzYwXGxpMzYwXHJpMFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczI0XGFkanVzdHJpZ2h0XHJpbjBcbGluMzYwXGl0YXAwXHBhcmFyc2lkNjkxMTI2MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDk0NjI4NDhcY2hhcnJzaWQxNjczNzA0NiBDUkVESVQgU1VQUE9SVH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDY5MTEyNjBcY2hhcnJzaWQxNjczNzA0NiANCg0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGk3MjBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkOTMyNDkyNSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDggVU1FUkN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2OTExMjYwIA0KLCBpbiBvcmRlciB0byBzYXRpc2Z5IGl0c2VsZiBvZiB0aGUgYWJpbGl0eSBvZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1MzgwNjE1IFN0ZXBoZW5zb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2OTExMjYwXGNoYXJyc2lkNzQxNTA1NCAgdG8gbWVldCB0aGUgb2JsaWdhdGlvbnMgc2V0IGZvcnRoIGluIHRoaXMgQWdyZWVtZW50LCBtYXkgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDIyMzgyOVxjaGFycnNpZDE0MjIzODI5IGluIGFjY29yZGFuY2Ugd2l0aCBzdGFuZGFyZCBjb21tZXJjaWFsIHByYWN0aWNlcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2OTExMjYwXGNoYXJyc2lkNzQxNTA1NCBjb25kdWN0IHJlYXNvbmFibGUgY3JlZGl0IHJldmlld3MuICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjIzODI5XGNoYXJyc2lkMTQyMjM4MjkgVU1FUkMgd2lsbCByZXF1aXJlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjIzODI5IFN0ZXBoZW5zb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDIyMzgyOVxjaGFycnNpZDE0MjIzODI5ICB0byBwcm92aWRlIHRoZSBpbmZvcm1hdGlvbiBhbmQgbWVldCB0aGUgcmVxdWlyZW1lbnRzIGRldGVybWluZWQgYnkgVU1FUkMuICB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjIzODI5IFN0ZXBoZW5zb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDIyMzgyOVxjaGFycnNpZDE0MjIzODI5IFxycXVvdGUgcyBmYWlsdXJlIHRvIHByb3ZpZGUgYWRlcXVhdGUgY3JlZGl0IHN1cHBvcnQsIGlmIHJlcXVpcmVkLCBtYXkgYmUgZ3JvdW5kcyBmb3IgVU1FUkMgdG8gdGVybWluYXRlIHRoZSBBZ3JlZW1lbnQuIH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjkxMTI2MFxjaGFycnNpZDc0MTUwNTQgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDggVU1FUkN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2OTExMjYwXGNoYXJyc2lkNzQxNTA1NCAgbWF5LCBiYXNlZCBvbiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4IFVNRVJDXHJxdW90ZSBzfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2OTExMjYwXGNoYXJyc2lkNzQxNTA1NCAgY3JlZGl0IHJlcXVpcmVtZW50cywgcmVxdWlyZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1MzgwNjE1IFN0ZXBoZW5zb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2OTExMjYwXGNoYXJyc2lkNzQxNTA1NCANCiB0byBwcm92aWRlIGFuZCBtYWludGFpbiBpbiBlZmZlY3QgZHVyaW5nIHRoZSB0ZXJtIG9mIHRoaXMgQWdyZWVtZW50IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjIzODI5XGNoYXJyc2lkMTQyMjM4MjkgDQphbiB1bmNvbmRpdGlvbmFsIGFuZCBpcnJldm9jYWJsZSBsZXR0ZXIgb2YgY3JlZGl0LCBhIHBhcmVudGFsIGd1YXJhbnR5LCBvciBhbiBhbHRlcm5hdGl2ZSBmb3JtIGFuZCB0eXBlIG9mIHNlY3VyaXR5IGFjY2VwdGFibGUgdG8gVU1FUkMgYW5kIGNvbnNpc3RlbnQgd2l0aCBjb21tZXJjaWFsIHByYWN0aWNlcyAoXCc5M1BlcmZvcm1hbmNlIEFzc3VyYW5jZVwnOTQpLiAgU3VjaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDY5MTEyNjBcY2hhcnJzaWQ3NDE1MDU0IGNyZWRpdCBzdXBwb3J0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTAzNjI3MThcY2hhcnJzaWQ1NjAwNjE0ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDIyMzgyOSBzaGFsbCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDM2MjcxOFxjaGFycnNpZDU2MDA2MTQgbm90IGV4Y2VlZCBhbiBhbW91bnQNCiBlcXVpdmFsZW50IHRvIHRoZSBzdW0gb2YgZm91ciBtb250aHMgb2ZcfnRoZSB0aGVufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTAzNjI3MThcY2hhcnJzaWQ5MzI0OTI1ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDM2MjcxOFxjaGFycnNpZDU2MDA2MTQgY3VycmVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwMzYyNzE4XGNoYXJyc2lkOTMyNDkyNSBcfn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTAzNjI3MThcY2hhcnJzaWQ1NjAwNjE0IG1vbnRobHkgZGlzdHJpYnV0aW9uIGNoYXJnZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2OTExMjYwXGNoYXJyc2lkNzQxNTA1NCAuICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4IFVNRVJDfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ2OTExMjYwXGNoYXJyc2lkNzQxNTA1NCAgcmVzZXJ2ZXMgdGhlIHJpZ2h0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyMjM4MjlcY2hhcnJzaWQxNDIyMzgyOSAsIG9uIGEgbm9uLWRpc2NyaW1pbmF0b3J5IGJhc2lzLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY5MTEyNjBcY2hhcnJzaWQ3NDE1MDU0ICB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjIzODI5IHJlcXVpcmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2OTExMjYwXGNoYXJyc2lkNzQxNTA1NCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTM4MDYxNSBTdGVwaGVuc29ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjkxMTI2MFxjaGFycnNpZDc0MTUwNTQgIHRvIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyMjM4MjlcY2hhcnJzaWQxNDIyMzgyOSBzdWJtaXQgdG8gVU1FUkN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2OTExMjYwXGNoYXJyc2lkNzQxNTA1NCAgdXBkYXRlZCBmaW5hbmNpYWwgaW5mb3JtYXRpb24gdG8gcGVybWl0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDggVU1FUkN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDY5MTEyNjBcY2hhcnJzaWQ3NDE1MDU0ICB0byBldmFsdWF0ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1MzgwNjE1IFN0ZXBoZW5zb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI1MzYzMjAgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNjkxMTI2MFxjaGFycnNpZDc0MTUwNTQgIGNyZWRpdHdvcnRoaW5lc3Mgb24gYW4gb24tZ29pbmcgYmFzaXMsIGFuZCBpZiBuZWNlc3NhcnksIHRvIHJlcXVpcmUgZnV0dXJlIFBlcmZvcm1hbmNlIEFzc3VyYW5jZS4gIFVwb24gcmVjZWlwdCBvZiBzdWNoIG5vdGljZSwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTM4MDYxNSBTdGVwaGVuc29ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ2OTExMjYwXGNoYXJyc2lkNzQxNTA1NCAgc2hhbGwgaGF2ZSB0aHJlZSAoMykgYnVzaW5lc3MgZGF5cyB0byByZW1lZHkgdGhlIHNpdHVhdGlvbiBieSBwcm92aWRpbmcgc3VjaCBQZXJmb3JtYW5jZSBBc3N1cmFuY2UgdG8gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCBVTUVSQ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY5MTEyNjBcY2hhcnJzaWQ3NDE1MDU0IA0KLiAgSW4gdGhlIGV2ZW50IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDUzODA2MTUgU3RlcGhlbnNvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY5MTEyNjBcY2hhcnJzaWQ3NDE1MDU0ICBmYWlscyB0byBwcm92aWRlIHN1Y2ggUGVyZm9ybWFuY2UgQXNzdXJhbmNlIGFjY2VwdGFibGUgdG8gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCBVTUVSQ317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjkxMTI2MFxjaGFycnNpZDc0MTUwNTQgIHdpdGhpbiB0aHJlZSAoMykgYnVzaW5lc3MgZGF5cyBvZiByZWNlaXB0IG9mIG5vdGljZSwgdGhlbiBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyMjM4MjkgbiBldmVudCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY5MTEyNjBcY2hhcnJzaWQ3NDE1MDU0IA0KIGRlZmF1bHQgd2lsbCBiZSBkZWVtZWQgdG8gaGF2ZSBvY2N1cnJlZCwgYW5kIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDggVU1FUkN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2OTExMjYwXGNoYXJyc2lkNzQxNTA1NCAgc2hhbGwgaGF2ZSB0aGUgcmlnaHQgdG8gdGVybWluYXRlIHNlcnZpY2UuICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4IA0KVU1FUkN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2OTExMjYwXGNoYXJyc2lkNzQxNTA1NCAgc2hhbGwgYmUgcmVxdWlyZWQgdG8gbm90aWZ5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDUzODA2MTUgU3RlcGhlbnNvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDY5MTEyNjBcY2hhcnJzaWQ3NDE1MDU0ICBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNjkxMTI2MCAgd3JpdGluZyBvZiBpdHMgaW50ZW50IHRvIHRlcm1pbmF0ZSBzZXJ2aWNlIGF0IGxlYXN0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDc0MTUwNTQgNjB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2OTExMjYwICBkYXlzIHByaW9yIHRvIHRoZSBhY3R1YWwgZGF0ZSBvZiB0ZXJtaW5hdGlvbi59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDc1NTcwNzYgDQpccGFyIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4XGNoYXJyc2lkOTMyNDkyNSBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2OTExMjYwXGNoYXJyc2lkMjE2NDY3OCANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDEwLlx0YWJ9fVxwYXJkIFxsdHJwYXJccWwgXGZpLTM2MFxsaTM2MFxyaTBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMjRcYWRqdXN0cmlnaHRccmluMFxsaW4zNjBcaXRhcDBccGFyYXJzaWQyMTY0Njc4IHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5NDYyODQ4IEZPUkNFIE1BSkVVUkUgQU5EIElOREVNTklGSUNBVElPTlxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NDQ3NzkgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxMC4xLlx0YWJ9fVxwYXJkIFxsdHJwYXJccWwgXGZpLTQzMlxsaTc5MlxyaTBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDc5Mlx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMjRcaWx2bDFcYWRqdXN0cmlnaHRccmluMFxsaW43OTJcaXRhcDBccGFyYXJzaWQyMTY0Njc4IA0Ke1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5NDYyODQ4IEZvcmNlIE1hamV1cmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4ICBcZW5kYXNoIA0KIFRvIHRoZSBleHRlbnQgZWl0aGVyIFBhcnR5IGlzIHByZXZlbnRlZCBieSBGb3JjZSBNYWpldXJlIGZyb20gY2Fycnlpbmcgb3V0LCBpbiB3aG9sZSBvciBwYXJ0LCBpdHMgb2JsaWdhdGlvbnMgdW5kZXIgdGhpcyBBZ3JlZW1lbnQsIGFuZCBzdWNoIFBhcnR5IChcJzkzdGhlIENsYWltaW5nIFBhcnR5XCc5NA0KKSBnaXZlcyBub3RpY2UgYW5kIGRldGFpbHMgb2YgdGhlIEZvcmNlIE1hamV1cmUgdG8gdGhlIG90aGVyIFBhcnR5IGFzIHNvb24gYXMgcHJhY3RpYw0KYWJsZSwgdGhlbiwgdW5sZXNzIHRoaXMgQWdyZWVtZW50IHNwZWNpZmllcyBvdGhlcndpc2UsIHRoZSBDbGFpbWluZyBQYXJ0eSBzaGFsbCBiZSBleGN1c2VkIGZyb20gdGhlIHBlcmZvcm1hbmNlIG9mIGl0cyBvYmxpZ2F0aW9ucyB3aXRoIHJlc3BlY3QgdG8gdGhpcyBBZ3JlZW1lbnQgb3RoZXIgdGhhbiBwYXltZW50cyB0aGVuIGR1ZSBvciBiZWNvbWluZyBkdWUgd2l0aCByZXNwZWN0IHRvIHBlcmZvcm1hbmNlIHByaW9yIHRvIHRoZSBGb3JjZSBNDQphDQpqZXVyZS4gIFRoZSBDbGFpbWluZyBQYXJ0eSBzaGFsbCBjb21tZW5jZSBwZXJmb3JtYW5jZSBvZiBpdHMgb2JsaWdhdGlvbnMgYWZ0ZXIgdGhlIG9jY3VycmVuY2Ugb2YgdGhlIEZvcmNlIE1hamV1cmUgd2l0aCBhbGwgcmVhc29uYWJsZSBkaXNwYXRjaC4gIFRoZSBub24tQ2xhaW1pbmcgUGFydHkgc2hhbGwgbm90IGJlIHJlcXVpcmVkIHRvIHBlcmZvcm0gb3IgcmVzdW1lIHBlcmZvcm1hbmNlIG9mIGl0cyBvYmxpZ2F0aW9ucyB0byB0aGUgQ2xhaW0NCmkNCm5nIFBhcnR5IGNvcnJlc3BvbmRpbmcgdG8gdGhlIG9ibGlnYXRpb25zIG9mIHRoZSBDbGFpbWluZyBQYXJ0eSBleGN1c2VkIGJ5IEZvcmNlIE1hamV1cmUuICBIb3dldmVyLCBubyBQYXJ0eSBzaGFsbCBiZSByZWxpZXZlZCBvZiBsaWFiaWxpdHkgZm9yIGZhaWx1cmUgb2YgcGVyZm9ybWFuY2UgaWYgc3VjaCBmYWlsdXJlIGJlIGR1ZSB0byBjYXVzZXMgYXJpc2luZyBvdXQgb2YgaXRzIG5lZ2xpZ2VuY2Ugb3IgZHVlIHRvIHJlbW92YWJsZSBvciByZQ0KbWVkaWFibGUgY2F1c2VzIHRoYXQgaXQgZmFpbHMgdG8gcmVtb3ZlIG9yIHJlbWVkeSB3aXRoaW4gYSByZWFzb25hYmxlIHRpbWUgcGVyaW9kLiAgTm90aGluZyBjb250YWluZWQgaGVyZWluIHNoYWxsIGJlIGNvbnN0cnVlZCB0byByZXF1aXJlIGEgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU0MjI1NTQgUGFydHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4IA0KIHRvIHNldHRsZSBhbnkgc3RyaWtlIG9yIGxhYm9yIGRpc3B1dGUgaW4gd2hpY2ggaXQgbWF5IGJlIGludm9sdmVkLlxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NDQ3NzkgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxMC4yLlx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTQ2Mjg0OCBJbmRlbW5pZmljYXRpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4ICBcZW5kYXNoICBFYWNoIFBhcnR5IHNoYWxsIGF0IGFsbCANCnRpbWVzLCBpbmRlbW5pZnksIGRlZmVuZCwgYW5kIGhvbGQgaGFybWxlc3MgdGhlIG90aGVyIFBhcnR5IGFnYWluc3QgYW55IGFuZCBhbGwgZGFtYWdlcywgbG9zc2VzLCBhbmQgY2xhaW1zLCBpbmNsdWRpbmcgY2xhaW1zIGFuZCBhY3Rpb25zIHJlbGF0aW5nIHRvIGluanVyeSB0byBvciBkZWF0aCBvZiBhbnkgcGVyc29uIG9yIGRhbWFnZSB0byBwcm9wZXJ0eSwgZGVtYW5kcywgc3VpdHMsIHJlY292ZXJpZXMsIGNvc3RzIGFuZCBleHBlbnNlcywgYw0Kb3VydCBjb3N0cywgYXR0b3JuZXkgZmVlcywgYW5kIGFsbCBvdGhlciBvYmxpZ2F0aW9ucyBieSBvciB0byB0aGlyZCBwYXJ0aWVzLCBhcmlzaW5nIG91dCBvZiBvciByZXN1bHRpbmcgZnJvbSB0aGUgUGFydHlccnF1b3RlIHMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTAxMTEyODIgcmVxdWlyZWQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCANCnBlcmZvcm1hbmNlIG9mIGl0cyBvYmxpZ2F0aW9ucyB1bmRlciB0aGlzIEFncmVlbWVudC4gIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkOTQ2Mjg0OCBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NDQ0Nzc5XGNoYXJyc2lkMTE5OTg5MjQgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2hhcnJzaWQxMTk5ODkyNCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxMC4zLlx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTQ2Mjg0OFxjaGFycnNpZDExOTk4OTI0IExpbWl0YXRpb25zIG9uIExpYWJpbGl0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkOTQ2Mjg0OCAgXGVuZGFzaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDExMTI4MiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU0MjI1NTQgVGhlIFBhcnRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDA5MTIwNyAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OFxjaGFycnNpZDExOTk4OTI0IA0KbGlhYmlsaXR5IHVuZGVyIHRoaXMgQWdyZWVtZW50IHNoYWxsIGJlIGxpbWl0ZWQgdG8gZGlyZWN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCAsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OFxjaGFycnNpZDExOTk4OTI0ICBhY3R1YWwgZGFtYWdlcyBvbmx5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCAuICBBfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4XGNoYXJyc2lkMTE5OTg5MjQgbGwgb3RoZXIgcmVtZWRpZXMgb3IgZGFtYWdlcyBhdCBsYXcgb3IgaW4gZXF1aXR5IGFyZSB3YWl2ZWQuICBEaXJlY3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4ICx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4XGNoYXJyc2lkMTE5OTg5MjQgDQogYWN0dWFsIGRhbWFnZXMgc2hhbGwgYmUgdGhlIHNvbGUgYW5kIGV4Y2x1c2l2ZSByZW1lZHksIGFuZCBpbiBubyBldmVudCwgd2hldGhlciBhcyBhIHJlc3VsdCBvZiBicmVhY2ggb2YgY29udHJhY3QsIHRvcnQgbGlhYmlsaXR5IChpbmNsdWRpbmcgbmVnbGlnZW5jZSksIHN0cmljdCBsaWFiaWxpdHksIG9yIG90aGVyd2lzZSwgc2hhbGwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCBlaXRoZXIgUGFydHkgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4XGNoYXJyc2lkMTE5OTg5MjQgYmUgbGlhYmxlIHRvIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDggdGhlIG90aGVyIFBhcnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OFxjaGFycnNpZDExOTk4OTI0IA0KLCBpdHMgYWdlbnRzLCByZXByZXNlbnRhdGl2ZXMsIGFuZC9vciBhc3NpZ25zLCBmb3IgYW55IHNwZWNpYWwsIHB1bml0aXZlLCBpbmNpZGVudGFsLCBpbmRpcmVjdCwgZXhlbXBsYXJ5LCBvciBjb25zZXF1ZW50aWFsIGRhbWFnZXMgb2YgYW55IG5hdHVyZSB3aGF0c29ldmVyLCANCmluY2x1ZGluZywgYnV0IG5vdCBsaW1pdGVkIHRvLCBsb3NzIG9mIHByb2ZpdHMuICBUaGUgUGFydGllcyBhbHNvIGludGVuZCBhbmQgYWdyZWUgdGhhdCBzdWNoIHByb3Zpc2lvbnMgc2hhbGwgY29udGludWUgaW4gZnVsbCBmb3JjZSBhbmQgZWZmZWN0IG5vdHdpdGhzdGFuZGluZyB0aGUgdGVybWluYXRpb24sIHN1c3BlbnNpb24sIGNhbmNlbGxhdGlvbiwgb3IgZXhwaXJhdGlvbiBvZiB0aGlzIEFncmVlbWVudC59e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDggXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTQ0NDc3OSANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDExLlx0YWJ9fVxwYXJkIFxsdHJwYXJccWwgXGZpLTM2MFxsaTM2MFxyaTBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMjRcYWRqdXN0cmlnaHRccmluMFxsaW4zNjBcaXRhcDBccGFyYXJzaWQxNzI2NjkxIHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5NDYyODQ4IERJU1BVVEUgUkVTT0xVVElPTiAgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTQ0NDc3OSANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjaGFycnNpZDk0NTA4NjkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTEuMS5cdGFifX1ccGFyZCBcbHRycGFyXHFsIFxmaS00MzJcbGk3OTJccmkwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDc5Mlx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMjRcaWx2bDFcYWRqdXN0cmlnaHRccmluMFxsaW43OTJcaXRhcDBccGFyYXJzaWQxMTgwNjE0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTQ2Mjg0OFxjaGFycnNpZDk0NTA4NjkgRGlzcHV0ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDk0NjI4NDggIFJlc29sdXRpb259ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDggIFxlbmRhc2ggDQogQW55IGRpc3B1dGUgYmV0d2VlbiB0aGUgUGFydGllcyBpbnZvbHZpbmcgc2VydmljZSB1bmRlciB0aGlzIEFncmVlbWVudCBzaGFsbCBiZSByZWZlcnJlZCB0byBhIGRlc2lnbmF0ZWQgc2VuaW9yIHJlcHJlc2VudGF0aXZlIG9mIGVhY2ggUGFydHkgZm9yIHJlc29sdXRpb24gb24gYW4gaW5mb3JtYWwgYmFzaXMgYXMgcHJvbXB0bHkgYXMgcHJhY3RpY2FibGUuICBJbiB0aGUgZXZlbnQgdGhlIGRlc2lnbmF0ZWQgcmVwcmVzZW50YXRpdmVzIGFyZQ0KIHVuYWJsZSB0byByZXNvbHZlIHRoZSBkaXNwdXRlIHdpdGhpbiB0aGlydHkgKDMwKSBkYXlzLCBvciBzdWNoIG90aGVyIHBlcmlvZCBhcyB0aGUgUGFydGllcyBtYXkgYWdyZWUgdXBvbiwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTM5NDA5NSB0aGUgUGFydGllcyBtYXkgcHVyc3VlIGFueSByZW1lZGllcyBhdmFpbGFibGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4IC59ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1MDgwMTEwICAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NDQ0Nzc5IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTEuMi5cdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDk0NjI4NDggUmlnaHRzIFVuZGVyIHRoZSBGZWRlcmFsIFBvd2VyIEFjdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDggIFxlbmRhc2ggDQogTm90aGluZyBpbiB0aGlzIHNlY3Rpb24gc2hhbGwgcmVzdHJpY3QgdGhlIHJpZ2h0cyBvZiBlaXRoZXIgUGFydHkgdG8gZmlsZSBhIGNvbXBsYWludCB3aXRoIHRoZSBDb21taXNzaW9uIHVuZGVyIHJlbGV2YW50IHByb3Zpc2lvbnMgb2YgdGhlIEZlZGVyYWwgUG93ZXIgQWN0LlxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NDQ3NzkgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2hhcnJzaWQxMTgwNjE0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDEyLlx0YWJ9fVxwYXJkIFxsdHJwYXJccWwgXGZpLTM2MFxsaTM2MFxyaTBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMyNFxhZGp1c3RyaWdodFxyaW4wXGxpbjM2MFxpdGFwMFxwYXJhcnNpZDExODA2MTQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5NDYyODQ4XGNoYXJyc2lkMTE4MDYxNCBOT1RJQ0VTXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNTQ0NDc3OVxjaGFycnNpZDExODA2MTQgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxMi4xLlx0YWJ9fVxwYXJkIFxsdHJwYXJccWwgXGZpLTQzMlxsaTc5MlxyaTBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDc5Mlx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMjRcaWx2bDFcYWRqdXN0cmlnaHRccmluMFxsaW43OTJcaXRhcDBccGFyYXJzaWQxMTgwNjE0IA0Ke1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4IEFueSBub3RpY2UgcHJvdmlkZWQgZm9yIG9yIGNvbmNlcm5pbmcgdGhpcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTQyMjU1NCBBfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCANCmdyZWVtZW50LCBleGNlcHQgdGhlIHBheW1lbnQgb2YgYmlsbHMgYXMgcHJvdmlkZWQgaW4gU2VjdGlvbiA1LjIsICBzaGFsbCBiZSBpbiB3cml0aW5nIGFuZCBkZWxpdmVyZWQgYnkgcGVyc29uIG9yIG1haWwgdG8gdGhlIGZvbGxvd2luZzpcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTE1NDg0OCANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpNzIwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDExMTU0ODQ4IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCBcbGluZSBJZiB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMjcyMTkgVU1FUkN9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDggOlx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTE2OTIxNTggXHRhYiBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMDUxNDM1IFVwcGVyIE1pY2hpZ2FuIEVuZXJneSBSZXNvdXJjZXMgQ29ycG9yYXRpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaGlnaGxpZ2h0N1xpbnNyc2lkOTQ2Mjg0OFxjaGFycnNpZDEwNDk1ODQ5IFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDhcY2hhcnJzaWQ0Njg4MjggXHRhYiBcdGFiIFx0YWIgXHRhYiBWaWNlIFByZXNpZGVudCBcZW5kYXNoICBXaG9sZXNhbGUgRW5lcmd5IGFuZCBGdWVsc1xsaW5lIFx0YWIgXHRhYiBcdGFiIFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxMjUzNjMyMCAzMzN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0Njg4MjhcY2hhcnJzaWQ0Njg4MjggIFcuIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNTM2MzIwIEV2ZXJldHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0Njg4MjhcY2hhcnJzaWQ0Njg4MjggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkOTQ2Mjg0OFxjaGFycnNpZDQ2ODgyOCBTdHJlZXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NTMzNDY1XGNoYXJyc2lkNDY4ODI4ICwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI1MzYzMjAgQTIxNH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDhcY2hhcnJzaWQ0Njg4MjggXGxpbmUgXHRhYiBcdGFiIFx0YWIgXHRhYiANCk1pbHdhdWtlZSwgV2lzY29uc2luICA1MzIwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTIyNjE2MzRcY2hhcnJzaWQ0Njg4MjggM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NTc3MjggDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTQ1MDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNDUwMFxpdGFwMFxwYXJhcnNpZDUwNjk1OTEge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1MDY5NTkxIA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGk0NTAwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluNDUwMFxpdGFwMFxwYXJhcnNpZDk2NDAyMzQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4IEFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDUwNjk1OTEgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTM2MDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4zNjAwXGl0YXAwXHBhcmFyc2lkNTA2OTU5MSB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1NjkxNzI0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4XGNoYXJyc2lkODA5MTc5OSBXRUMgQnVzaW5lc3MgU2VydmljZXN9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGluc3JzaWQ1MDY5NTkxXGNoYXJyc2lkMTExNTQ4NDggDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDggRGlyZWN0b3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0Njg4MjhcY2hhcnJzaWQxMzM4MDE2NCAgXGVuZGFzaCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTA2OTU5MVxjaGFycnNpZDEzMzgwMTY0IEZlZGVyYWwgUmVndWxhdG9yeSBBZmZhaXJzIGFuZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDEzMzgwMTY0IFBvbGljeX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMxNjA5MzRcY2hhcnJzaWQxMzM4MDE2NCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OFxjaGFycnNpZDEzMzgwMTY0IDIzMSBXLiBNaWNoaWdhbiBTdHJlZXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ4MDk0MjBcY2hhcnJzaWQxMzM4MDE2NCAsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDhcY2hhcnJzaWQxMzM4MDE2NCBQMzIxfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1MDY5NTkxXGNoYXJyc2lkMTMzODAxNjQgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTM2MDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMzYwMFxpdGFwMFxwYXJhcnNpZDUwNjk1OTEge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4XGNoYXJyc2lkMTMzODAxNjQgTWlsd2F1a2VlLCBXSSAgIDUzMjAzfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1MDY5NTkxXGNoYXJyc2lkMTExNTQ4NDggDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTM2MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4zNjBcaXRhcDBccGFyYXJzaWQ1MDY5NTkxIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTA2OTU5MSANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMzYwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjM2MFxpdGFwMFxwYXJhcnNpZDEwNDk1ODQ5IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkODI2MjUzNyANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMzYwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjM2MFxpdGFwMFxwYXJhcnNpZDUwNjk1OTEge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1MDY5NTkxIA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGk5MDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW45MDBcaXRhcDBccGFyYXJzaWQ1MDY5NTkxIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCBJZiB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1MzgwNjE1IFN0ZXBoZW5zb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4IDpcdGFiIA0KXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1MzgwNjE1IENpdHkgb2YgU3RlcGhlbnNvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1NjkxNzI0XGNoYXJyc2lkMTA0OTU4NDkgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxmaTcyMFxsaTI4ODBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4yODgwXGl0YXAwXHBhcmFyc2lkMTU2OTE3MjQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4IEVsZWN0cmljIERlcGFydG1lbnRcbGluZSBcdGFiIFAuTy4gQm94IDQ2N317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NDQ3NzlcY2hhcnJzaWQxNTY5MTcyNCANCg0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkzNjBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMzYwXGl0YXAwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCBcdGFiIFx0YWIgXHRhYiBcdGFiIFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTM4MDYxNSBTdGVwaGVuc29ufXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ0MDEwNjc2ICwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjI3MjE5XGNoYXJyc2lkMTA0OTU4NDkgTUl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0MDEwNjc2XGNoYXJyc2lkMTA0OTU4NDkgICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0MDEwNjc2ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMjcyMTkgDQo0OX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NTgwODA3IDg4Ny0wNDY3fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCBcbGluZSBcbGluZSBTdWNoIG5vdGljZSBzaGFsbCBiZSBlZmZlY3RpdmUgd2hlbiByZWNlaXZlZCBieSB0aGUgUGFydHkgdG8gd2hvbSBpdCBpcyBzZW50LlxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NDQ3NzkgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxMy5cdGFifX1ccGFyZCBcbHRycGFyXHFsIFxmaS0zNjBcbGkzNjBccmkwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHgzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczI0XGFkanVzdHJpZ2h0XHJpbjBcbGluMzYwXGl0YXAwXHBhcmFyc2lkMTcyNjY5MSB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTQ2Mjg0OCBTRVZFUkFCSUxJVFlcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NDQ0Nzc5IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTMuMS5cdGFifX1ccGFyZCBcbHRycGFyXHFsIFxmaS00MzJcbGk3OTJccmkwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHg3OTJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczI0XGlsdmwxXGFkanVzdHJpZ2h0XHJpbjBcbGluNzkyXGl0YXAwXHBhcmFyc2lkMTcyNjY5MSANCntccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCANCkluIHRoZSBldmVudCB0aGF0IGFueSBvZiB0aGUgdGVybXMsIGNvdmVuYW50cywgb3IgY29uZGl0aW9ucyBvZiB0aGlzIEFncmVlbWVudCBvciB0aGUgYXBwbGljYXRpb24gb2YgYW55IHN1Y2ggdGVybSwgY292ZW5hbnQsIG9yIGNvbmRpdGlvbiwgc2hhbGwgYmUgaGVsZCBpbnZhbGlkIGFzIHRvIGFueSBwZXJzb24gb3IgY2lyY3Vtc3RhbmNlIGJ5IGFueSBjb3VydCBoYXZpbmcganVyaXNkaWN0aW9uLCBhbGwNCiBvdGhlciB0ZXJtcywgY292ZW5hbnRzLCBvciBjb25kaXRpb25zIG9mIHRoaXMgQWdyZWVtZW50IGFuZCB0aGVpciBhcHBsaWNhdGlvbiBzaGFsbCBub3QgYmUgYWZmZWN0ZWQgdGhlcmVieSwgYnV0IHNoYWxsIHJlbWFpbiBpbiBmb3JjZSBhbmQgZWZmZWN0IHVubGVzcyBhIGNvdXJ0IGhvbGRzIHRoYXQgdGhlIHByb3Zpc2lvbnMgYXJlIG5vdCBzZXBhcmFibGUgZnJvbSBhbGwgb3RoZXIgcHJvdmlzaW9ucyBvZiB0aGlzIEFncmVlbWVudFxsaW5lIA0KfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTQ0NDc3OSANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE0Llx0YWJ9fVxwYXJkIFxsdHJwYXJccWwgXGZpLTM2MFxsaTM2MFxyaTBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMjRcYWRqdXN0cmlnaHRccmluMFxsaW4zNjBcaXRhcDBccGFyYXJzaWQxNzI2NjkxIHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5NDYyODQ4IEdPVkVSTklORyBMQVdcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NDQ0Nzc5IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTQuMS5cdGFifX1ccGFyZCBcbHRycGFyXHFsIFxmaS00MzJcbGk3OTJccmkwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHg3OTJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczI0XGlsdmwxXGFkanVzdHJpZ2h0XHJpbjBcbGluNzkyXGl0YXAwXHBhcmFyc2lkMTcyNjY5MSANCntccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCBUaGlzIEFncmVlbWVudCBzaGFsbCBiZSBpbnRlcnByZXRlZCwgY29uc3RydWVkLCBhbmQgZW5mb3JjZWQgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZSBsYXdzIG9mIHRoZSBTdGF0ZSBvZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMjcyMTlcY2hhcnJzaWQyODMyMDMyIE1pY2hpZ2FufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ5NDYyODQ4ICB3aXRob3V0IHJlZ2FyZCB0byBjb25mbGljdHMgb2YgbGF3IHByb3Zpc2lvbnMgdGhlcmVvZi5cbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2Njg5NDUwIA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTUuXHRhYn19XHBhcmQgXGx0cnBhclxxbCBcZmktMzYwXGxpMzYwXHJpMFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMyNFxhZGp1c3RyaWdodFxyaW4wXGxpbjM2MFxpdGFwMFxwYXJhcnNpZDE3MjY2OTEgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDk0NjI4NDggU0lHTkFUVVJFIENMQVVTRVxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NDQ3NzkgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNS4xLlx0YWJ9fVxwYXJkIFxsdHJwYXJccWwgXGZpLTQzMlxsaTc5MlxyaTBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDc5Mlx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMjRcaWx2bDFcYWRqdXN0cmlnaHRccmluMFxsaW43OTJcaXRhcDBccGFyYXJzaWQxNzI2NjkxIA0Ke1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4IFRoZSBzaWduYXRvcmllcyBoZXJldG8gcmVwcmVzZW50IHRoYXQgdGhleSBoYXZlIGJlZW4gYXV0aG9yaXplZCB0byBlbnRlciBpbnRvIHRoaXMgQWdyZWVtZW50IG9uIGJlaGFsZiBvZiB0aGUgUGFydHkgZm9yIHdob20gdGhleSBzaWduLlxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDgyMTQwNzJcY2hhcnJzaWQxMjcyODE5OCANCg0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ3NTU3MDc2IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNzU1NzA3NlxjaGFycnNpZDc1NTcwNzYgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTM2MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4zNjBcaXRhcDBccGFyYXJzaWQ3NTU3MDc2IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTQ2Mjg0OFxjaGFycnNpZDEyMTQ2MjEyIENPVU5URVJQQVJUU317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDk0NjI4NDggXGxpbmUgfQ0Ke1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4XGNoYXJyc2lkMTIxNDYyMTIgICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NDQ0Nzc5IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNoYXJyc2lkMTIxNDYyMTIgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTUuMi5cdGFifX1ccGFyZCBcbHRycGFyXHFsIFxmaS00MzJcbGk3OTJccmkwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDc5Mlx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMjRcaWx2bDFcYWRqdXN0cmlnaHRccmluMFxsaW43OTJcaXRhcDBccGFyYXJzaWQxNzI2NjkxIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OFxjaGFycnNpZDEyMTQ2MjEyIA0KVGhpcyBBZ3JlZW1lbnQgbWF5IGJlIGV4ZWN1dGVkIGluIG9uZSBvciBtb3JlIGNvdW50ZXJwYXJ0cyB3aGljaCB0YWtlbiB0b2dldGhlciBzaGFsbCBmb3JtIGEgdmFsaWQgQWdyZWVtZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OFxjaGFycnNpZDkzMTE4ODcgLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NDQ3NzkgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE1NTQyMjgzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTAxMTk4MjUgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFjIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE1NTQyMjgzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQ5NDYyODQ4XGNoYXJyc2lkMTAxMTk4MjUgW1NJR05BVFVSRSBQQUdFIEZPTExPV1NdfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGJcaW5zcnNpZDEwMTE5ODI1XGNoYXJyc2lkMTAxMTk4MjUgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDEyMDI0OTY1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCBccGFnZSBJTiBXSVRORVNTIFdIRVJFT0YsIA0KZWFjaCBvZiB0aGUgUGFydGllcyBoYXMgY2F1c2VkIHRoaXMgQWdyZWVtZW50IHRvIGJlIGV4ZWN1dGVkIGJ5IGl0cyBkdWx5IGF1dGhvcml6ZWQgcmVwcmVzZW50YXRpdmUgYXMgb2YgdGhlIGRhdGUgZmlyc3Qgd3JpdHRlbiBhYm92ZS59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDExOTgyNSANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTAxMTk4MjUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDExOTgyNSANClxwYXIgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxmaS01MDQwXGxpNTA0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW41MDQwXGl0YXAwXHBhcmFyc2lkMTIwMjQ5NjUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDk0NjI4NDggQ2l0eSBvZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDUzODA2MTUgU3RlcGhlbnNvbn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQ5NDYyODQ4ICwgTWljaGlnYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDQwMTA2NzYgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDk0NjI4NDggVXBwZXIgTWljaGlnYW4gRW5lcmd5IFJlc291cmNlcyBDb3Jwb3JhdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxiXGluc3JzaWQxMDExOTgyNVxjaGFycnNpZDI0NDA4ODcgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDEwMTE5ODI1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTAxMTk4MjUgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM0N1xxbCBcbGkwXHJpMFxzYTEyMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkOTY0MDIzNCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDExOTgyNSANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCBCeTp9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NjYwODA4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ1NjYwODA4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGlcdWxcaW5zcnNpZDU2NjA4MDggL3MvIERhbGUgTS4gUGFycmV0dFx0YWIgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDEwMTE5ODI1IFx0YWIgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4IEJ5On17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwMTE5ODI1ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ1NjYwODA4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaVx1bFxpbnNyc2lkNTY2MDgwOFxjaGFycnNpZDU2NjA4MDggL3MvIEouIFBhdHJpY2sgS2V5ZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ1NjYwODA4IFx0YWIgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ1NDQ0Nzc5XGNoYXJyc2lkNTY2MDgwOCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczQ3XHFsIFxsaTBccmkwXHNhMTIwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTMyMjc1MSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwMTE5ODI1IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4IE5hbWU6fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTY2MDgwOCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNTY2MDgwOCAgRGFsZSBNLiBQYXJyZXR0XHRhYiBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExNTQ1NzU1IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxMDExOTgyNSBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDggTmFtZTogfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNTY2MDgwOCAgSi4gUGF0cmljayBLZXllc1x0YWIgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ1NDQ0Nzc5XGNoYXJyc2lkNTY2MDgwOCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTAxMTk4MjUgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM0N1xxbCBcbGkwXHJpMFxzYTEyMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDEwMTE5ODI1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCBUaXRsZTp9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NjYwODA4ICB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDU2NjA4MDggIFV0aWxpdHkgQ28tQ2hhaXJcdGFiIFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCBcdGFiIFx0YWIgVGl0bGU6IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDU2NjA4MDggIFByZXNpZGVudFx0YWIgXHRhYiBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkNTQ0NDc3OVxjaGFycnNpZDU2NjA4MDggDQpccGFyIH1ccGFyZCBcbHRycGFyXHM0N1xxbCBcZmk3MjBcbGkwXHJpMFxzYTEyMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDEzMjI3NTEge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzMjc5ODIzIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNDdccWwgXGxpMFxyaTBcc2ExMjBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxMzIyNzUxIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCBEYXRlOn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU2NjA4MDggIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNTY2MDgwOCAgT2N0b2JlciAxNywgMjAxNlx0YWIgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDExOTgyNSBcdGFiIFx0YWIgRGF0ZTogfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNTY2MDgwOCAgT2N0b2JlciAyMSwgMjAxNlx0YWIgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDEyNzI4MTk4XGNoYXJyc2lkNTY2MDgwOCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczQ3XHFsIFxsaTBccmkwXHNhMTIwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTU1NDIyODMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzM5MTYwNyANClxwYXIgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM0N1xxYyBcbGkwXHJpMFxzYTEyMFxzbDQ4MFxzbG11bHQxXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxMjAyNDk2NSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDggXHBhZ2UgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGJcdWxcaW5zcnNpZDk0NjI4NDggU0NIRURVTEUgQX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlx1bFxpbnNyc2lkNTQ0NDc3OVxjaGFycnNpZDEzMTg1NTkxIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNDdccWMgXGxpMFxyaTBcc2ExMjBcc2w0ODBcc2xtdWx0MVxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NDQ3NzkgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM0N1xxYyBcbGkwXHJpMFxzYTEyMFxzbDQ4MFxzbG11bHQxXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ5NjQwMjM0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQ5NDYyODQ4IA0KRmFjaWxpdGllcyBVc2VkIGZvciBQcm92aXNpb24gb2YgV2hvbGVzYWxlIERpc3RyaWJ1dGlvbiBTZXJ2aWNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQ1NDQ0Nzc5IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkwXHJpMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDEyNTM2MzIwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhYlxhZjEgDQpcbHRyY2hcZmNzMCBcYlxmMVxmczIwXHVsXGluc3JzaWQ5NDYyODQ4XGNoYXJyc2lkMTIwMjQ5NjUgTWVub21pbmVlIFN0fXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXHVsXGluc3JzaWQ5NDYyODQ4IDp9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDk0NjI4NDggIH17XHJ0bGNoXGZjczEgXGFpXGFmMCBcbHRyY2hcZmNzMCBcaVxpbnNyc2lkOTQ2Mjg0OCANCldob2xlc2FsZSBkaXN0cmlidXRpb24gc2VydmljZSBzaGFsbCBiZSBwcm92aWRlZCB0byB0aGUgQ2l0eSBvZiBTdGVwaGVuc29uXHJxdW90ZSBzIE1lbm9taW5lZSBTdCBzZXJ2aWNlIGxvY2F0aW9uIGZyb20gdGhlIHBvaW50IG9mIHJlY2VpcHQgYXQgfXtccnRsY2hcZmNzMSBcYWlcYWYwIFxsdHJjaFxmY3MwIFxpXGluc3JzaWQxMzM5NzMyMiBXaXNjb25zaW4gUHVibGljIFNlcnZpY2UgQ29ycG9yYXRpb25ccnF1b3RlIHN9e1xydGxjaFxmY3MxIA0KXGFpXGFmMCBcbHRyY2hcZmNzMCBcaVxpbnNyc2lkOTQ2Mjg0OCAgSW5nYWxscyBTdWJzdGF0aW9uICgxMzgga1YgdG8gMjQuOSBrVikgb3ZlciBVTUVSQ1xycXVvdGUgcyAyNC45IGtWIGZlZWRlciANCiMgMjQxIHRoZW4gY29udmVydGVkIHRvIDQuMTYga1YgcHJpb3IgdG8gdGhlIHBvaW50IG9mIGRlbGl2ZXJ5IGF0IHRoZSBNZW5vbWluZWUgU3QgbWV0ZXJpbmcgc3RydWN0dXJlIHdoaWNoIGlzIGxvY2F0ZWQgYXQgdGhlIGludGVyc2VjdGlvbiBvZiBNZW5vbWluZWUgU3QgYW5kIFJvYmVydCBTdCBpbiB0aGUgQ2l0eSBvZiBTdGVwaGVuc29uLCBTdGVwaGVuc29uIFRvd25zaGlwLCBNZW5vbWluZWUgQ291bnR5LCBNaWNoaWdhbiwgb3Igb3ZlciBhbg0KeSBzdWNjZXNzb3IgZmFjaWxpdGllcyBzaG91bGQgVU1FUkMgcmVjb25maWd1cmUgb3IgcmVidWlsZCBpdHMgZGlzdHJpYnV0aW9uIGZhY2lsaXRpZXMufXtccnRsY2hcZmNzMSBcYWlcYWYwIFxsdHJjaFxmY3MwIFxpXGluc3JzaWQxMjUzNjMyMCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczQ3XHFsIFxmaTcyMFxsaTBccmkwXHNhMTIwXHNsNDgwXHNsbXVsdDFcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ0MjE5NDA4IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQp7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDggQ2FwYWNpdHkgUmVzZXJ2YXRpb24gPSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjUzNjMyMCAxLjUxMU19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4IFcgKH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNTM2MzIwIDEuNjc5fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ5NDYyODQ4IE1XIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNTM2MzIwIEAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTQ2Mjg0OCA5MCUgQ2FwYWNpdHkgRmFjdG9yKX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMyMzM5MjggDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHNsLTIwMFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkNTY2MDgwOCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSANClxhZjBcYWZzMTYgXGx0cmNoXGZjczAgXGNzNDJcZnMxNFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDk0NjI4NDhcY2hhcnJzaWQ1NjYwODA4IERDXFw4MTU5MTM2Ny4xIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjI4NDhcY2hhcnJzaWQ1NjYwODA4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NjYwODA4IA0KXHBhciB9e1wqXHRoZW1lZGF0YSA1MDRiMDMwNDE0MDAwNjAwMDgwMDAwMDAyMTAwZTlkZTBmYmZmZjAwMDAwMDFjMDIwMDAwMTMwMDAwMDA1YjQzNmY2ZTc0NjU2ZTc0NWY1NDc5NzA2NTczNWQyZTc4NmQ2Y2FjOTFjYjRlYzMzMDEwNDVmNzQ4ZmM4M2U1MmQ0YQ0KOWNiMjQwMDgyNWU5ODJjNzhlYzdhMjdjYzBjODk5MjQxNmM5ZDhiMmE3NTVmYmY3NGNkMjU0NDJhODIwMTY2YzJjZDkzM2Y3OWUzYmUzNzJiZDFmMDdiNWMzOTg5Y2E3NGFhZmYyNDIyYjI0ZWIxYjQ3NWRhNWRmMzc0ZmQ5YWQNCjU2ODk4MTFhMTgzYzYxYTUwZjk4ZjRiYWJlYmMyODM3ODc4MDQ5ODk5YTUyYTU3YmU2NzA2NzRjYjIzZDhlOTA3MjFmOTBhNGQyZmEzODAyY2IzNTc2MjY4MGZkODAwZWNkNzU1MWRjMThlYjg5OTEzOGUzYzk0M2Q3ZTUwM2I2DQpiMDFkNTgzZGVlZTVmOTk4MjRlMjkwYjRiYTNmMzY0ZWFjNGE0MzA4ODNiM2MwOTJkNGVjYThmOTQ2YzkxNjQyMmVjYWI5MjdmNTJlYTQyYjg5YTFjZDU5YzI1NGY5MTliMGU4NWU2NTM1ZDEzNWE4ZGUyMGYyMGI4YzEyYzNiMA0KMGM4OTVmY2Y2NzIwMTkyZGU2YmYzYjllODllY2RiZDY1OTZjYmNkZDhlYjI4ZTdjMzY1ZWNjNGVjMWZmMTQ2MGY1M2ZlODEzZDNjYzdmNWI3ZjAyMDAwMGZmZmYwMzAwNTA0YjAzMDQxNDAwMDYwMDA4MDAwMDAwMjEwMGE1ZDYNCmE3ZTdjMDAwMDAwMDM2MDEwMDAwMGIwMDAwMDA1ZjcyNjU2YzczMmYyZTcyNjU2YzczODQ4ZmNmNmFjMzMwMGM4N2VmODViZDgzZDE3ZDUxZDJjMzE4MjU3NjJmYTU5MDQzMmZhMzdkMDBlMTI4N2Y2ODIyMWJkYjFiZWJkYjRmDQpjNzA2MGFiYjA4ODRhNGVmZjdhOTNkZmVhZThiZjllMTk0ZTcyMDE2OWFhYTA2YzNlMjQzM2ZjYjY4ZTE3NjNkYmY3ZjgyYzk4NWE0YTcyNTA4NWI3ODcwODZhMzdiZGJiNTVmYmM1MGQxYTMzY2NkMzExYmE1NDhiNjMwOTUxMg0KMGY4OGQ5NGZiYzUyYWU0MjY0ZDFjOTEwZDI0YTQ1ZGIzNDYyMjQ3ZmE3OTE3MTVmZDcxZjk4OWUxOWUwMzY0Y2QzZjUxNjUyZDczNzYwYWU4ZmE4YzlmZmIzYzMzMGNjOWU0ZmMxN2ZhZjJjZTU0NTA0NmUzNzk0NGM2OWU0NjINCmExYTgyZmUzNTNiZDkwYTg2NWFhZDQxZWQwYjViOGY5ZDZmZDAxMDAwMGZmZmYwMzAwNTA0YjAzMDQxNDAwMDYwMDA4MDAwMDAwMjEwMDZiNzk5NjE2ODMwMDAwMDA4YTAwMDAwMDFjMDAwMDAwNzQ2ODY1NmQ2NTJmNzQ2ODY1DQo2ZDY1MmY3NDY4NjU2ZDY1NGQ2MTZlNjE2NzY1NzIyZTc4NmQ2YzBjY2M0ZDBhYzMyMDEwNDBlMTdkYTE3NzkwZDkzNzYzYmIyODQ1NjJiMmNiYWViYmY2MDA0MzljMWE0MWM3YTBkMjlmZGJkN2U1ZTM4MzM3Y2VkZjE0ZDU5Yg0KNGIwZDU5MmM5YzA3MGQ4YTY1Y2QyZTg4YjdmMDdjMmNhNzFiYThkYTQ4MWNjNTJjNmNlMWM3MTVlNmU5NzgxOGM5YjQ4ZDEzZGY0OWM4NzM1MTdkMjNkNTkwODVhZGI1ZGQyMGQ2YjUyYmQ1MjFlZjJjZGQ1ZWI5MjQ2YTNkOGINCjQ3NTdlOGQzZjcyOWUyNDVlYjJiMjYwYTAyMzhmZDAxMDAwMGZmZmYwMzAwNTA0YjAzMDQxNDAwMDYwMDA4MDAwMDAwMjEwMDMwZGQ0MzI5YTgwNjAwMDBhNDFiMDAwMDE2MDAwMDAwNzQ2ODY1NmQ2NTJmNzQ2ODY1NmQ2NTJmDQo3NDY4NjU2ZDY1MzEyZTc4NmQ2Y2VjNTk0ZjZmZGIzNjE0YmYwZmQ4NzcyMDc0NmY2MzI3NzYxYTA3NzU4YWQ4YjE5YjJkNGQxYmM0NmU4NzFlNjk4OTk2ZDg1MGEyNDBkMjQ5N2QxYmRhZTM4MDAxYzNiYTYxODcxNWQ4NmQ4Nw0KNjE1YjgxMTZkOGE1ZmIzNGQ5M2E2YzFkZDBhZmIwNDc1MjkyYzU1ODVlOTIzNmQ4OGFhZDNlMjQxMmY5ZTNmYmZmMWUxZmE5YWJkN2VlYzcwYzFkMTIyMTI5NGZkYTVlZmQ3MmNkNDMyNGYxNzk0MDkzYjBlZGRkMWVmNjJmYWQNCjc5NDgyYTljMDQ5OGYxODRiNGJkMjk5MWRlYjU4ZGY3ZGZiYjhhZDc1NTQ0NjI4MjYwN2QyMmQ3NzFkYjhiOTQ0YWQ3OTc5NmE0MGZjMzU4NWVlNjI5NDk2MDZlY2M0NThjMTViYzhhNzAyOTEwZjgwOGU4YzY2YzY5Yjk1NjViDQo1ZDhhMzE0ZDNjOTRlMDE4YzhkZTFhOGZhOTRmZDA1MDkzZjQzNjcyZTIzZDA2YWY4OTkyN2FjMDY3NjJhMDQ5MTM2Nzg1YzEwNjA3NzU4ZDkwNTNkOTY1MDIxZDYyZDZmNjgwNGZjMDhmODZlNGJlZjIxMGMzNTJjMTQ0ZGJhYg0KOTk5ZmI3YjQ3MTc1MDlhZjY3OGI5ODVhYjBiNmI0YWU2ZjdlZDliYTZjNDE3MGIwNmM3ODhhNzA1NDMwYWRmNzFiYWQyYjViMDU3ZDAzNjA2YTFlZDdlYmY1YmFiZDdhNDFjZjAwYjBlZjgzYTY1Njk2MzJjZDQ2N2ZhZGRlYzkNCjY5OTY0MGY2NzE5ZTc2YjdkNmFjMzU1YzdjODlmZWNhOWNjY2FkNGVhN2QzNmM2NWIyNThhMjA2NjQxZjFiNzNmOGI1ZGE2YTYzNzNkOWMxMWI5MGM1MzdlN2YwOGRjZTY2YjdiYmVhZTAwZGM4ZTI1N2U3ZjBmZDJiYWRkNTg2DQo4YjM3YTA4OGQxZTQ2MDBlYWQxZGRhZWY2N2Q0MGJjODk4YjNlZDRhZjgxYWMwZDc2YTE5N2M4NjgyNjgyOGEyNGJiMzE4ZjM0NDJkOGFiNTE4ZGZlM2EyMGYwMDBkNjQ1OGQxMDRhOTY5NGFjNmQ4ODcyOGVlZTI3ODI0MjhkNg0KMGNmMDNhYzFhNTE5M2JlNGNiYjkyMWNkMGI0OTVmZDA1NGI1YmQwZjUzMGMxOTMxYTNmN2VhZjlmN2FmOWUzZjQ1YzcwZjllMWQzZmY4ZTlmOGUxYzNlMzA3M2Y1YTQyY2VhYTZkOWM4NGU1NTUyZmJmZmRlY2NmYzcxZmEzM2YNCjllN2VmM2YyZDExN2Q1Nzg1OWM2ZmZmYWMzMjdiZmZjZmM3OTM1MTBkMjY3MjZjZThiMmY5ZmZjZjZlY2M5OGJhZjNlZmRmZGJiNDcxNWYwNGQ4MTQ3NjVmODkwYzY0NGEyOWJlNDA4ZWRmMzE4MTQzMzU2NzEyNTI3MjM3MWJlDQoxNWMzMDhkM2YyOGFjZDI0OTQzOGMxOWE0YjA1ZmQ5ZThhMWNmNGNkMjk2Njk5NzcxYzM5M2FjNGI1ZTAxZDAxZTVhMzBhNzg3ZDcyY2YxMTc4MTA4OTg5YTIxNTljNzdhMmQ4MDFlZTcyY2UzYTVjNTQ1YTYxNDdmMzJhOTk3OQ0KMzg0OWMyNmFlNjYyNTJjNmVkNjM3YzU4YzViYjhiMTNjN2JmYmQ0OTBhNzUzMzBmNGI0N2YxNmU0NDFjMzFmNzE4NGUxNDBlNDk0MjE0ZDI3M2ZjODA5MDBhZWRlZTUyZWFkODc1OTdmYTgyNGIzZTU2ZTgyZTQ1MWQ0YzJiNGQNCjMyYTQyMzI3OWE2NjhiYjY2OTBjN2U5OTU2ZTkwY2ZlNzY2Y2IzN2IwNzc1MzhhYmQyN2E4YjFjYmE0OGM4MGFjYzJhODQxZjEyZTY5OGYxM2E5ZTI4MWM1NzkxMWNlMjk4OTUwZDdlMDNhYmE4NGFjOGMxNTRmODY1NWM0ZjJhDQpmMDc0NDgxODQ3YmQ4MDQ4NTliNWU2OTYwMDdkNGI0ZWRmYzE1MGIxMmFkZGJlY2JhNmIxOGIxNDhhMWU1NGQxYmM4MTM5MmYyM2I3Zjg0MTM3YzI3MTVhODUxZGQwMjQyYTYzM2Y5MDA3MTBhMjE4ZWQ3MTU1MDVkZmU1NmU4Ng0KZTg3N2YwMDM0ZTE2YmFmYjBlMjU4ZWJiNGZhZjA2Yjc2OWU4ODgzNDBiMTAzZDMzMTExNWJlYmM0ZWI4MTNiZjgzMjkxYjYzNjI0YTBkMTQ3NWE3NTZjNzM0ZjliYmMyY2QyODU0NmVjYmUxZTIwYTM3OTRjYTE3NWYzZmFlOTANCmZiNmQyZGQ5OWJiMDdiNTVlNWNjZjY4OTQyYmQwODc3YjIzYzc3YjkwOGU4ZGI1ZjlkYjdmMDI0ZDkyMzkwMTBmMzViZDRiYmUyZmNhZTM4N2JmZmY5ZTJiYzI4OWYyZmJlMjRjZmFhMzAxNDY4ZGQ4YmQ4NDZkYmI0ZGRmMWMyDQphZTdiNGMxOTFiYTgyOTIzMzdhNDY5YmMyNWVjM2Q0MTFmMDZmNTNhNzNlMjI0YzUyOTJjOGRlMDUxNjczMjMwNzA3MGExYzA2NjBkMTI1YzdkNDQ1NTM0ODg3MDBhNGQ3YmRkZDM0NDQyOTk5MTBlMjU0YWI5ODRjM2EyMTlhZQ0KYTRhZGYxZDBmODJiN2JkNDZjZWE0Mzg4YWQxYzEyYWI1ZDFlZDhlMTE1M2Q5YzlmMzUwYTMyNDZhYWQwMWM2ODczNDYyYjlhYzA1OTk5YWQ1Y2M5ODg4MjZlYWZjM2FjYWU4NTNhMzNiN2JhMTFjZDE0NDU4NzViYTFiMjM2YjENCjM5OTQ4M2M5MGJkNTYwYjBiMDI2MzQzNTA4NWEyMWIwZjIyYTljZjkzNTZiMzhlYzYwNDYwMjZkNzdlYmEzZGMyZGM2MGIxN2U5MjIxOWUxODA2NDNlZDI3YWNmZmJhODZlOWM5NGM3Y2E5YzIyNWEwZjFiMGNmYWUwNzg4YWQ1DQo0YWRjNWE5YWVjMWI3MDNiOGI5M2NhZWMxYTBiZDhlNWRlN2IxMzJmZTUxMTNjZjMxMjUwM2I5OThlMmMyOTI3Mjc0YmQwNTFkYjZiMzU5NzliMWVmMjcxZGFmNmM2NzA0ZTg2YzczODA1YWY0YmRkNDc2MjE2YzI2NTkzYWY4NA0KMGRmYjUzOTNkOTY0ZjljYzliYWQ1YzMxMzcwOWVhNzBmNTYxZWQzZWE3YjA1MzA3NTIyMWQ1MTY5NjkxMGQwZDMzOTU4NTAwNGIzNDI3MmJmZjcyMTNjYzdhNTEwYTU0NTRhM2IzNDliMWIyMDZjMWYwYWY0OTAxNzY3NDVkNGINCmM2NjNlMmFiYjJiMzRiMjNkYTc2ZjYzNTJiYTU3Y2EyODgxODQ0YzExMTFhYjE4OWQ4YzdlMDdlMWRhYWEwNGY0MDI1NWM3Nzk4OGFhMDVmZTA2ZTRlNWJkYjRjYjljNTM5NGJiYWYyOGQ5OGMxZDk3MWNjZDIwODY3ZTU1NmE3DQo2ODllYzkxNjZlMGE1MjIxODM3OTJiODkwN2JhNTVjYTZlOTQzYmJmMmEyNmU1MmY0ODk1NzIxOGZmY2Y1NGQxZmIwOWRjM2VhYzA0ZGEwMzNlNWMwZDBiOGM3NGE2YjQzZDJlNTRjNGExMGFhNTExZjVmYjAyMWEwNzUzM2IyMA0KNWFlMDdlMTdhNjIxYThlMDgyZGFmYzE3ZTQ1MGZmYjczOTY3Njk5OGI0ODY0M2E0ZGFhNzIxMTIxNGY2MjMxNTA5NDJmNmEwMmM5OWU4M2I4NTU4M2RkYmJiMmM0OTk2MTEzMjExNTUxMjU3YTY1NmVjMTEzOTI0NmNhODZiZTANCmFhZGVkYjNkMTQ0MWE4OWI2YTkyOTUwMTgzM2IxOTdmZWU3Yjk2NDFhMzUwMzczOWU1N2M3MzJhNTliMWY3ZGExY2Y4YTczYjFmOWJjY2EwOTQ1Yjg3NGQ0MzkzZGJiZjEwYjE2ODBmNjZiYmFhNWQ2Zjk2ZTc3YjZmNTkxMTNkDQozMTZiYjMxYTc5NTYwMGIzZDI1NmQwY2FkMmZlMzU0NTM4ZTc1NjZiMmJkNjljYzZjYmNkNWMzOGYwZTJiY2M2MzA1ODM0NDQyOWRjMjEyMWZkMDdmNjNmMmE3YzY2YmY3NmU4MGQ3NWM4ZjdhMWI2MjJmODc4YTE4OTQxZDg0MA0KNTQ1ZmIyOGQwN2QyMDVkMjBlOGVhMDcxYjI4MzM2OTgzNDI5NmJkYWFjNzVkMjU2Y2IzN2ViMGJlZTc0MGJiZTI3OGNhZDI1M2I4YmJmY2Y2OWVjYTIzOTczZDkzOWI5Nzg5MWM2Y2UyY2VjZDhkYThlMmQzNDM1NzhmNjY0OGENCmMyZDAzODNmYzgxOGM3OThjZjY0ZTUyZjU5N2M3NDBmMWNiZDA1ZGYwYzI2NGM0OTEzNGNmMDlkNGE2MGU4YTEwNzI2MGYyMGY5MmQ0N2IzNzRlMzJmMDAwMDAwZmZmZjAzMDA1MDRiMDMwNDE0MDAwNjAwMDgwMDAwMDAyMTAwDQowZGQxOTA5ZmI2MDAwMDAwMWIwMTAwMDAyNzAwMDAwMDc0Njg2NTZkNjUyZjc0Njg2NTZkNjUyZjVmNzI2NTZjNzMyZjc0Njg2NTZkNjU0ZDYxNmU2MTY3NjU3MjJlNzg2ZDZjMmU3MjY1NmM3Mzg0OGY0ZDBhYzIzMDE0ODRmNw0KODI3NzA4NmY2ZmQzYmExMDkxMjZkZDg4ZDBhZGQ0MDM4NGU0MzUwZDM2M2YyNDUxZWNlZDBkYWUyYzA4MmU4NzYxYmU5OTY5YmI5NzlkYzkxMzYzMzJkZTMxNjhhYTFhMDgzYWU5OTU3MTlhYzE2ZGI4ZWM4ZTQwNTIxNjRlODkNCmQ5M2I2NGIwNjA4MjhlNmYzN2VkMTU2NzkxNGIyODRkMjYyNDUyMjgyZTMxOTg3MjBlMjc0YTkzOWNkMDhhNTRmOTgwYWUzOGEzOGY1NmU0MjJhM2E2NDFjOGJiZDA0OGY3NzU3ZGEwZjE5YjAxN2NjNTI0YmQ2MjEwN2JkNTAwDQoxOTk2NTA5YWZmYjNmZDM4MWE4OTY3MmYxZjE2NWRmZTUxNDE3M2Q5ODUwNTI4YTJjNmNjZTAyMzliYWE0YzA0Y2E1YmJhYmFjNGRmMDAwMDAwZmZmZjAzMDA1MDRiMDEwMjJkMDAxNDAwMDYwMDA4MDAwMDAwMjEwMGU5ZGUwZg0KYmZmZjAwMDAwMDFjMDIwMDAwMTMwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwNWI0MzZmNmU3NDY1NmU3NDVmNTQ3OTcwNjU3MzVkMmU3ODZkNmM1MDRiMDEwMjJkMDAxNDAwMDYwMDA4MDAwMDAwMjEwMGE1ZDYNCmE3ZTdjMDAwMDAwMDM2MDEwMDAwMGIwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDMwMDEwMDAwNWY3MjY1NmM3MzJmMmU3MjY1NmM3MzUwNGIwMTAyMmQwMDE0MDAwNjAwMDgwMDAwMDAyMTAwNmI3OTk2MTY4MzAwMDAwMDhhDQowMDAwMDAxYzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMTkwMjAwMDA3NDY4NjU2ZDY1MmY3NDY4NjU2ZDY1MmY3NDY4NjU2ZDY1NGQ2MTZlNjE2NzY1NzIyZTc4NmQ2YzUwNGIwMTAyMmQwMDE0MDAwNjAwMDgwMDAwMDAyMQ0KMDAzMGRkNDMyOWE4MDYwMDAwYTQxYjAwMDAxNjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZDYwMjAwMDA3NDY4NjU2ZDY1MmY3NDY4NjU2ZDY1MmY3NDY4NjU2ZDY1MzEyZTc4NmQ2YzUwNGIwMTAyMmQwMDE0MDAwNjAwMDgNCjAwMDAwMDIxMDAwZGQxOTA5ZmI2MDAwMDAwMWIwMTAwMDAyNzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwYjIwOTAwMDA3NDY4NjU2ZDY1MmY3NDY4NjU2ZDY1MmY1ZjcyNjU2YzczMmY3NDY4NjU2ZDY1NGQ2MTZlNjE2NzY1NzIyZTc4NmQ2YzJlNzI2NTZjNzM1MDRiMDUwNjAwMDAwMDAwMDUwMDA1MDA1ZDAxMDAwMGFkMGEwMDAwMDAwMH0NCntcKlxjb2xvcnNjaGVtZW1hcHBpbmcgM2MzZjc4NmQ2YzIwNzY2NTcyNzM2OTZmNmUzZDIyMzEyZTMwMjIyMDY1NmU2MzZmNjQ2OTZlNjczZDIyNTU1NDQ2MmQzODIyMjA3Mzc0NjE2ZTY0NjE2YzZmNmU2NTNkMjI3OTY1NzMyMjNmM2UwZDBhM2M2MTNhNjM2YzcyNGQNCjYxNzAyMDc4NmQ2YzZlNzMzYTYxM2QyMjY4NzQ3NDcwM2EyZjJmNzM2MzY4NjU2ZDYxNzMyZTZmNzA2NTZlNzg2ZDZjNjY2ZjcyNmQ2MTc0NzMyZTZmNzI2NzJmNjQ3MjYxNzc2OTZlNjc2ZDZjMmYzMjMwMzAzNjJmNmQ2MTY5DQo2ZTIyMjA2MjY3MzEzZDIyNmM3NDMxMjIyMDc0NzgzMTNkMjI2NDZiMzEyMjIwNjI2NzMyM2QyMjZjNzQzMjIyMjA3NDc4MzIzZDIyNjQ2YjMyMjIyMDYxNjM2MzY1NmU3NDMxM2QyMjYxNjM2MzY1NmU3NDMxMjIyMDYxNjM2Mw0KNjU2ZTc0MzIzZDIyNjE2MzYzNjU2ZTc0MzIyMjIwNjE2MzYzNjU2ZTc0MzMzZDIyNjE2MzYzNjU2ZTc0MzMyMjIwNjE2MzYzNjU2ZTc0MzQzZDIyNjE2MzYzNjU2ZTc0MzQyMjIwNjE2MzYzNjU2ZTc0MzUzZDIyNjE2MzYzNjU2ZTc0MzUyMjIwNjE2MzYzNjU2ZTc0MzYzZDIyNjE2MzYzNjU2ZTc0MzYyMjIwNjg2YzY5NmU2YjNkMjI2ODZjNjk2ZTZiMjIyMDY2NmY2YzQ4NmM2OTZlNmIzZDIyNjY2ZjZjNDg2YzY5NmU2YjIyMmYzZX0NCntcKlxsYXRlbnRzdHlsZXNcbHNkc3RpbWF4MjY3XGxzZGxvY2tlZGRlZjBcbHNkc2VtaWhpZGRlbmRlZjBcbHNkdW5oaWRldXNlZGRlZjBcbHNkcWZvcm1hdGRlZjBcbHNkcHJpb3JpdHlkZWYwe1xsc2Rsb2NrZWRleGNlcHQgXGxzZHFmb3JtYXQxIFxsc2Rsb2NrZWQwIE5vcm1hbDtcbHNkcWZvcm1hdDEgXGxzZGxvY2tlZDAgaGVhZGluZyAxO1xsc2RxZm9ybWF0MSBcbHNkbG9ja2VkMCBoZWFkaW5nIDI7DQpcbHNkcWZvcm1hdDEgXGxzZGxvY2tlZDAgaGVhZGluZyAzO1xsc2RxZm9ybWF0MSBcbHNkbG9ja2VkMCBoZWFkaW5nIDQ7XGxzZHFmb3JtYXQxIFxsc2Rsb2NrZWQwIGhlYWRpbmcgNTtcbHNkcWZvcm1hdDEgXGxzZGxvY2tlZDAgaGVhZGluZyA2O1xsc2RxZm9ybWF0MSBcbHNkbG9ja2VkMCBoZWFkaW5nIDc7XGxzZHFmb3JtYXQxIFxsc2Rsb2NrZWQwIGhlYWRpbmcgODtcbHNkcWZvcm1hdDEgXGxzZGxvY2tlZDAgaGVhZGluZyA5Ow0KXGxzZHFmb3JtYXQxIFxsc2Rsb2NrZWQwIGNhcHRpb247XGxzZHFmb3JtYXQxIFxsc2Rsb2NrZWQwIFRpdGxlO1xsc2RxZm9ybWF0MSBcbHNkbG9ja2VkMCBTdWJ0aXRsZTtcbHNkcWZvcm1hdDEgXGxzZGxvY2tlZDAgU3Ryb25nO1xsc2RxZm9ybWF0MSBcbHNkbG9ja2VkMCBFbXBoYXNpcztcbHNkc2VtaWhpZGRlbjEgXGxzZHByaW9yaXR5OTkgXGxzZGxvY2tlZDAgUGxhY2Vob2xkZXIgVGV4dDsNClxsc2RxZm9ybWF0MSBcbHNkcHJpb3JpdHkxIFxsc2Rsb2NrZWQwIE5vIFNwYWNpbmc7XGxzZHByaW9yaXR5NjAgXGxzZGxvY2tlZDAgTGlnaHQgU2hhZGluZztcbHNkcHJpb3JpdHk2MSBcbHNkbG9ja2VkMCBMaWdodCBMaXN0O1xsc2Rwcmlvcml0eTYyIFxsc2Rsb2NrZWQwIExpZ2h0IEdyaWQ7XGxzZHByaW9yaXR5NjMgXGxzZGxvY2tlZDAgTWVkaXVtIFNoYWRpbmcgMTtcbHNkcHJpb3JpdHk2NCBcbHNkbG9ja2VkMCBNZWRpdW0gU2hhZGluZyAyOw0KXGxzZHByaW9yaXR5NjUgXGxzZGxvY2tlZDAgTWVkaXVtIExpc3QgMTtcbHNkcHJpb3JpdHk2NiBcbHNkbG9ja2VkMCBNZWRpdW0gTGlzdCAyO1xsc2Rwcmlvcml0eTY3IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDE7XGxzZHByaW9yaXR5NjggXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMjtcbHNkcHJpb3JpdHk2OSBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAzO1xsc2Rwcmlvcml0eTcwIFxsc2Rsb2NrZWQwIERhcmsgTGlzdDsNClxsc2Rwcmlvcml0eTcxIFxsc2Rsb2NrZWQwIENvbG9yZnVsIFNoYWRpbmc7XGxzZHByaW9yaXR5NzIgXGxzZGxvY2tlZDAgQ29sb3JmdWwgTGlzdDtcbHNkcHJpb3JpdHk3MyBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBHcmlkO1xsc2Rwcmlvcml0eTYwIFxsc2Rsb2NrZWQwIExpZ2h0IFNoYWRpbmcgQWNjZW50IDE7XGxzZHByaW9yaXR5NjEgXGxzZGxvY2tlZDAgTGlnaHQgTGlzdCBBY2NlbnQgMTsNClxsc2Rwcmlvcml0eTYyIFxsc2Rsb2NrZWQwIExpZ2h0IEdyaWQgQWNjZW50IDE7XGxzZHByaW9yaXR5NjMgXGxzZGxvY2tlZDAgTWVkaXVtIFNoYWRpbmcgMSBBY2NlbnQgMTtcbHNkcHJpb3JpdHk2NCBcbHNkbG9ja2VkMCBNZWRpdW0gU2hhZGluZyAyIEFjY2VudCAxO1xsc2Rwcmlvcml0eTY1IFxsc2Rsb2NrZWQwIE1lZGl1bSBMaXN0IDEgQWNjZW50IDE7XGxzZHNlbWloaWRkZW4xIFxsc2Rwcmlvcml0eTk5IFxsc2Rsb2NrZWQwIFJldmlzaW9uOw0KXGxzZHFmb3JtYXQxIFxsc2Rwcmlvcml0eTM0IFxsc2Rsb2NrZWQwIExpc3QgUGFyYWdyYXBoO1xsc2RxZm9ybWF0MSBcbHNkbG9ja2VkMCBRdW90ZTtcbHNkcWZvcm1hdDEgXGxzZHByaW9yaXR5MzAgXGxzZGxvY2tlZDAgSW50ZW5zZSBRdW90ZTtcbHNkcHJpb3JpdHk2NiBcbHNkbG9ja2VkMCBNZWRpdW0gTGlzdCAyIEFjY2VudCAxO1xsc2Rwcmlvcml0eTY3IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDEgQWNjZW50IDE7DQpcbHNkcHJpb3JpdHk2OCBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAyIEFjY2VudCAxO1xsc2Rwcmlvcml0eTY5IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDMgQWNjZW50IDE7XGxzZHByaW9yaXR5NzAgXGxzZGxvY2tlZDAgRGFyayBMaXN0IEFjY2VudCAxO1xsc2Rwcmlvcml0eTcxIFxsc2Rsb2NrZWQwIENvbG9yZnVsIFNoYWRpbmcgQWNjZW50IDE7XGxzZHByaW9yaXR5NzIgXGxzZGxvY2tlZDAgQ29sb3JmdWwgTGlzdCBBY2NlbnQgMTsNClxsc2Rwcmlvcml0eTczIFxsc2Rsb2NrZWQwIENvbG9yZnVsIEdyaWQgQWNjZW50IDE7XGxzZHByaW9yaXR5NjAgXGxzZGxvY2tlZDAgTGlnaHQgU2hhZGluZyBBY2NlbnQgMjtcbHNkcHJpb3JpdHk2MSBcbHNkbG9ja2VkMCBMaWdodCBMaXN0IEFjY2VudCAyO1xsc2Rwcmlvcml0eTYyIFxsc2Rsb2NrZWQwIExpZ2h0IEdyaWQgQWNjZW50IDI7XGxzZHByaW9yaXR5NjMgXGxzZGxvY2tlZDAgTWVkaXVtIFNoYWRpbmcgMSBBY2NlbnQgMjsNClxsc2Rwcmlvcml0eTY0IFxsc2Rsb2NrZWQwIE1lZGl1bSBTaGFkaW5nIDIgQWNjZW50IDI7XGxzZHByaW9yaXR5NjUgXGxzZGxvY2tlZDAgTWVkaXVtIExpc3QgMSBBY2NlbnQgMjtcbHNkcHJpb3JpdHk2NiBcbHNkbG9ja2VkMCBNZWRpdW0gTGlzdCAyIEFjY2VudCAyO1xsc2Rwcmlvcml0eTY3IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDEgQWNjZW50IDI7XGxzZHByaW9yaXR5NjggXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMiBBY2NlbnQgMjsNClxsc2Rwcmlvcml0eTY5IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDMgQWNjZW50IDI7XGxzZHByaW9yaXR5NzAgXGxzZGxvY2tlZDAgRGFyayBMaXN0IEFjY2VudCAyO1xsc2Rwcmlvcml0eTcxIFxsc2Rsb2NrZWQwIENvbG9yZnVsIFNoYWRpbmcgQWNjZW50IDI7XGxzZHByaW9yaXR5NzIgXGxzZGxvY2tlZDAgQ29sb3JmdWwgTGlzdCBBY2NlbnQgMjtcbHNkcHJpb3JpdHk3MyBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBHcmlkIEFjY2VudCAyOw0KXGxzZHByaW9yaXR5NjAgXGxzZGxvY2tlZDAgTGlnaHQgU2hhZGluZyBBY2NlbnQgMztcbHNkcHJpb3JpdHk2MSBcbHNkbG9ja2VkMCBMaWdodCBMaXN0IEFjY2VudCAzO1xsc2Rwcmlvcml0eTYyIFxsc2Rsb2NrZWQwIExpZ2h0IEdyaWQgQWNjZW50IDM7XGxzZHByaW9yaXR5NjMgXGxzZGxvY2tlZDAgTWVkaXVtIFNoYWRpbmcgMSBBY2NlbnQgMztcbHNkcHJpb3JpdHk2NCBcbHNkbG9ja2VkMCBNZWRpdW0gU2hhZGluZyAyIEFjY2VudCAzOw0KXGxzZHByaW9yaXR5NjUgXGxzZGxvY2tlZDAgTWVkaXVtIExpc3QgMSBBY2NlbnQgMztcbHNkcHJpb3JpdHk2NiBcbHNkbG9ja2VkMCBNZWRpdW0gTGlzdCAyIEFjY2VudCAzO1xsc2Rwcmlvcml0eTY3IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDEgQWNjZW50IDM7XGxzZHByaW9yaXR5NjggXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMiBBY2NlbnQgMztcbHNkcHJpb3JpdHk2OSBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAzIEFjY2VudCAzOw0KXGxzZHByaW9yaXR5NzAgXGxzZGxvY2tlZDAgRGFyayBMaXN0IEFjY2VudCAzO1xsc2Rwcmlvcml0eTcxIFxsc2Rsb2NrZWQwIENvbG9yZnVsIFNoYWRpbmcgQWNjZW50IDM7XGxzZHByaW9yaXR5NzIgXGxzZGxvY2tlZDAgQ29sb3JmdWwgTGlzdCBBY2NlbnQgMztcbHNkcHJpb3JpdHk3MyBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBHcmlkIEFjY2VudCAzO1xsc2Rwcmlvcml0eTYwIFxsc2Rsb2NrZWQwIExpZ2h0IFNoYWRpbmcgQWNjZW50IDQ7DQpcbHNkcHJpb3JpdHk2MSBcbHNkbG9ja2VkMCBMaWdodCBMaXN0IEFjY2VudCA0O1xsc2Rwcmlvcml0eTYyIFxsc2Rsb2NrZWQwIExpZ2h0IEdyaWQgQWNjZW50IDQ7XGxzZHByaW9yaXR5NjMgXGxzZGxvY2tlZDAgTWVkaXVtIFNoYWRpbmcgMSBBY2NlbnQgNDtcbHNkcHJpb3JpdHk2NCBcbHNkbG9ja2VkMCBNZWRpdW0gU2hhZGluZyAyIEFjY2VudCA0O1xsc2Rwcmlvcml0eTY1IFxsc2Rsb2NrZWQwIE1lZGl1bSBMaXN0IDEgQWNjZW50IDQ7DQpcbHNkcHJpb3JpdHk2NiBcbHNkbG9ja2VkMCBNZWRpdW0gTGlzdCAyIEFjY2VudCA0O1xsc2Rwcmlvcml0eTY3IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDEgQWNjZW50IDQ7XGxzZHByaW9yaXR5NjggXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMiBBY2NlbnQgNDtcbHNkcHJpb3JpdHk2OSBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAzIEFjY2VudCA0O1xsc2Rwcmlvcml0eTcwIFxsc2Rsb2NrZWQwIERhcmsgTGlzdCBBY2NlbnQgNDsNClxsc2Rwcmlvcml0eTcxIFxsc2Rsb2NrZWQwIENvbG9yZnVsIFNoYWRpbmcgQWNjZW50IDQ7XGxzZHByaW9yaXR5NzIgXGxzZGxvY2tlZDAgQ29sb3JmdWwgTGlzdCBBY2NlbnQgNDtcbHNkcHJpb3JpdHk3MyBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBHcmlkIEFjY2VudCA0O1xsc2Rwcmlvcml0eTYwIFxsc2Rsb2NrZWQwIExpZ2h0IFNoYWRpbmcgQWNjZW50IDU7XGxzZHByaW9yaXR5NjEgXGxzZGxvY2tlZDAgTGlnaHQgTGlzdCBBY2NlbnQgNTsNClxsc2Rwcmlvcml0eTYyIFxsc2Rsb2NrZWQwIExpZ2h0IEdyaWQgQWNjZW50IDU7XGxzZHByaW9yaXR5NjMgXGxzZGxvY2tlZDAgTWVkaXVtIFNoYWRpbmcgMSBBY2NlbnQgNTtcbHNkcHJpb3JpdHk2NCBcbHNkbG9ja2VkMCBNZWRpdW0gU2hhZGluZyAyIEFjY2VudCA1O1xsc2Rwcmlvcml0eTY1IFxsc2Rsb2NrZWQwIE1lZGl1bSBMaXN0IDEgQWNjZW50IDU7XGxzZHByaW9yaXR5NjYgXGxzZGxvY2tlZDAgTWVkaXVtIExpc3QgMiBBY2NlbnQgNTsNClxsc2Rwcmlvcml0eTY3IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDEgQWNjZW50IDU7XGxzZHByaW9yaXR5NjggXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMiBBY2NlbnQgNTtcbHNkcHJpb3JpdHk2OSBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAzIEFjY2VudCA1O1xsc2Rwcmlvcml0eTcwIFxsc2Rsb2NrZWQwIERhcmsgTGlzdCBBY2NlbnQgNTtcbHNkcHJpb3JpdHk3MSBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBTaGFkaW5nIEFjY2VudCA1Ow0KXGxzZHByaW9yaXR5NzIgXGxzZGxvY2tlZDAgQ29sb3JmdWwgTGlzdCBBY2NlbnQgNTtcbHNkcHJpb3JpdHk3MyBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBHcmlkIEFjY2VudCA1O1xsc2Rwcmlvcml0eTYwIFxsc2Rsb2NrZWQwIExpZ2h0IFNoYWRpbmcgQWNjZW50IDY7XGxzZHByaW9yaXR5NjEgXGxzZGxvY2tlZDAgTGlnaHQgTGlzdCBBY2NlbnQgNjtcbHNkcHJpb3JpdHk2MiBcbHNkbG9ja2VkMCBMaWdodCBHcmlkIEFjY2VudCA2Ow0KXGxzZHByaW9yaXR5NjMgXGxzZGxvY2tlZDAgTWVkaXVtIFNoYWRpbmcgMSBBY2NlbnQgNjtcbHNkcHJpb3JpdHk2NCBcbHNkbG9ja2VkMCBNZWRpdW0gU2hhZGluZyAyIEFjY2VudCA2O1xsc2Rwcmlvcml0eTY1IFxsc2Rsb2NrZWQwIE1lZGl1bSBMaXN0IDEgQWNjZW50IDY7XGxzZHByaW9yaXR5NjYgXGxzZGxvY2tlZDAgTWVkaXVtIExpc3QgMiBBY2NlbnQgNjsNClxsc2Rwcmlvcml0eTY3IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDEgQWNjZW50IDY7XGxzZHByaW9yaXR5NjggXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMiBBY2NlbnQgNjtcbHNkcHJpb3JpdHk2OSBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAzIEFjY2VudCA2O1xsc2Rwcmlvcml0eTcwIFxsc2Rsb2NrZWQwIERhcmsgTGlzdCBBY2NlbnQgNjtcbHNkcHJpb3JpdHk3MSBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBTaGFkaW5nIEFjY2VudCA2Ow0KXGxzZHByaW9yaXR5NzIgXGxzZGxvY2tlZDAgQ29sb3JmdWwgTGlzdCBBY2NlbnQgNjtcbHNkcHJpb3JpdHk3MyBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBHcmlkIEFjY2VudCA2O1xsc2RxZm9ybWF0MSBcbHNkcHJpb3JpdHkxOSBcbHNkbG9ja2VkMCBTdWJ0bGUgRW1waGFzaXM7XGxzZHFmb3JtYXQxIFxsc2Rwcmlvcml0eTIxIFxsc2Rsb2NrZWQwIEludGVuc2UgRW1waGFzaXM7DQpcbHNkcWZvcm1hdDEgXGxzZHByaW9yaXR5MzEgXGxzZGxvY2tlZDAgU3VidGxlIFJlZmVyZW5jZTtcbHNkcWZvcm1hdDEgXGxzZHByaW9yaXR5MzIgXGxzZGxvY2tlZDAgSW50ZW5zZSBSZWZlcmVuY2U7XGxzZHFmb3JtYXQxIFxsc2Rwcmlvcml0eTMzIFxsc2Rsb2NrZWQwIEJvb2sgVGl0bGU7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkcHJpb3JpdHkzNyBcbHNkbG9ja2VkMCBCaWJsaW9ncmFwaHk7DQpcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2RxZm9ybWF0MSBcbHNkcHJpb3JpdHkzOSBcbHNkbG9ja2VkMCBUT0MgSGVhZGluZzt9fXtcKlxkYXRhc3RvcmUgMDEwNTAwMDAwMjAwMDAwMDE4MDAwMDAwNGQ3Mzc4NmQ2YzMyMmU1MzQxNTg1ODRkNGM1MjY1NjE2NDY1NzIyZTM2MmUzMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDYwMDAwDQpkMGNmMTFlMGExYjExYWUxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAzZTAwMDMwMGZlZmYwOTAwMDYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDEwMDAwMDAwMTAwMDAwMDAwMDAwMDAwMDAxMDAwMDBmZWZmZmZmZjAwMDAwMDAwZmVmZmZmZmYwMDAwMDAwMDAwMDAwMDAwZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYNCmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZg0KZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmDQpmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYNCmZmZmZmZmZmZmZmZmZmZmZmZGZmZmZmZmZlZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZg0KZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmDQpmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYNCmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZg0KZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmY1MjAwNmYwMDZmMDA3NDAwMjAwMDQ1MDA2ZTAwNzQwMDcyMDA3OTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDE2MDAwNTAwZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmMGM2YWQ5ODg5MmYxZDQxMWE2NWYwMDQwOTYzMjUxZTUwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBhMGUwDQpjZGQ2MDAyZWQyMDFmZWZmZmZmZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDANCjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMA0KMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwDQowMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMTA1MDAwMDAwMDAwMDAwfX0=</record_binary_data>
      <record_plain_text>AGREEMENT     FOR    WHOLESALE DISTRIBUTION SERVICE       Between    City of Stephenson, Michigan    and    Upper Michigan Energy Resources Corporation        FERC Rate Schedule No. 7                              AGREEMENT  FOR  WHOLESALE DISTRIBUTION SERVICE     This Agreement for Wholesale Distribution Service ( Agreement ) entered into this 20th day of October 2016 sets forth the terms and conditions of a contract for the provision of Wholesale Distribution Service between the Upper Michigan Energy Resources Corporation ( UMERC ) and the City of Stephenson, Michigan ( Stephenson ), sometimes hereinafter referred to individually as  Party  and collectively as  Parties .     WHEREAS,  Stephenson purchases its power supply needs from Wisconsin Public Service Corporation;          WHEREAS, Stephenson s power supply is delivered to Stephenson over facilities owned by UMERC;           WHEREAS, in order to effect its power supply purchases Stephenson requires Wholesale Distribution Service over facilities owned by UMERC; and           WHEREAS, Stephenson and UMERC have mutually agreed to implement this Agreement for Wholesale Distribution Service.       NOW, THEREFORE, in consideration of the mutual agreements contained herein, UMERC and Stephenson agree as follows:    1. DEFINITIONS:    The following terms, when used herein with initial capitalization, whether in the singular or the plural, shall have the meaning specified:    1.1. ATC shall mean the American Transmission Company, LLC.    1.2. Coordinated Functional Registration (CFR) shall mean an agreement in writing between or among two or more entities (parties) upon a division of compliance responsibility among the parties for one or more Reliability Standard(s) applicable to a particular function, and/or for one or more Requirement(s)/sub-Requirement(s) within particular Reliability Standard(s).    1.3. Commission or FERC shall mean the Federal Energy Regulatory Commission or its regulatory successor.    1.4. Force Majeure shall mean any cause beyond the control of an affected Party that, by exercise of due diligence, such Party could not reasonably have been expected to avoid and that, by exercise of due diligence, it has been unable to overcome.  Such causes, include, but are not restricted to the following: failure of or threat of failure of facilities, flood, drought, earthquake, storm, fire, lightning, epidemic, war, riot, civil disturbance or disobedience, labor dispute, labor or material shortage, sabotage, restraint by court order or public authority, and action or non-action by or failure to obtain the necessary authorizations or approvals from any governmental agency or authority.    1.5. Good Utility Practice shall mean any of the practices, methods, and acts engaged in or approved by a significant portion of the electric utility industry located within the MISO area during the relevant time period, or any of the practices, methods, and acts that, in the exercise of reasonable judgment in light of the facts known at the time the decision was made, could have been expected to produce a safe, desirable result, achieved expeditiously and at a reasonable cost consistent with good business practices.  Good Utility Practice is not intended to be limited to the optimum practice, method, or act to the exclusion of all others, but rather to be a range of acceptable practices, methods, or acts used within MISO.    1.6. MISO shall mean the Midcontinent Independent System Operator, Inc.    1.7. NERC shall mean the North American Electric Reliability Corporation or its successor.    1.8. Term shall have the meaning set forth in Section 3 of this Agreement.    1.9. Underfrequency Load Shedding (UFLS) shall mean load shed implemented by installed equipment designed to automatically respond to, and arrest declining frequency. Reliability standards specify the amount of load shed and the entities responsible for ownership, maintenance, and performance of a UFLS program.    1.10. Wholesale Distribution Service shall mean the transmission of power purchased by Stephenson to meet its power supply needs over facilities owned by UMERC.    1.11. WPS Balancing Authority (WPS BA) shall mean the function of Wisconsin Public Service as the Balancing Authority for the WPS Balancing Authority Area. The WPS BA responsibilities are delineated in the CFR with MISO as maintained at NERC.    2. WHOLESALE DISTRIBUTION SERVICE    2.1. Sale of Wholesale Distribution Service   For the entire Term of this Agreement, UMERC shall provide Wholesale Distribution Service to Stephenson solely for the purpose of supplying the load requirements of Stephenson.  The Wholesale Distribution Service shall be provided between the point of receipt and point of delivery and over the existing facilities specified in Schedule A of this Agreement and will allow energy flow either into, or out of Stephenson.    2.2. Obligations of Stephenson   By May 1 of each year, Stephenson shall provide UMERC with a forecast of Stephenson s monthly system peak and energy requirements for each of the following three years and its summer and winter peaks for each of three additional years for load to be served pursuant to this Agreement.  Further, Stephenson shall provide UMERC with timely notice of any information that might affect UMERC s ability to provide reliable Wholesale Distribution Service under this Agreement.    2.3. Obligations of UMERC   By February 1 of each year, UMERC shall provide Stephenson with a forecast of planned maintenance and construction activities that may adversely affect the ability of UMERC to provide Wholesale Distribution Service to Stephenson.  Further, UMERC shall provide Stephenson with timely notice of any un-planned maintenance or construction activities that might adversely affect Wholesale Distribution Service to Stephenson and will endeavor to carry out such activities in a manner that will minimize adverse consequences and curtailments of Wholesale Distribution Service to Stephenson.     3. TERM    3.1. Term of Service Agreement   The Term of this Agreement shall begin on the later of January 1, 2017 or upon the receipt of all applicable state and federal regulatory approvals of UMERC, and shall continue until terminated by either Party in accordance with Section 3.2 of this Agreement.    3.2. Termination of Service Agreement   Either Party may terminate this Agreement at any time after granting the other Party one year s written notice of its intent to terminate the Agreement, subject to any regulatory approvals.    4. RATES AND CHARGES    4.1. Rate for Wholesale Distribution Service   Stephenson shall pay to UMERC $966.97 per month for the Wholesale Distribution Service provided under this Agreement, or such other rate established pursuant to Section 4.3 of this Agreement as follows:  Delivery Point    Charge   Menominee St 241 Feeder  $   966.97    4.2. Real Power Losses   Stephenson shall be responsible for compensating for losses associated with the Wholesale Distribution Service under this Agreement.  The real power loss factor rates on the distribution facilities identified in Schedule A and required to provide the Wholesale Distribution Service are as indicated in Section 4.2(a) and will be calculated based on metered load at the distribution delivery point.      a. Real Power Loss Factor Rates  Delivery Point   Rate  Menominee St    1.021    b. Stephenson shall ensure that the metered load at each distribution delivery point is incremented by its energy supplier, according to the Real Power Loss Factor Rates specified in 4.2(a) for load reporting and settlement purposes so that reported load includes distribution losses.    4.3. Rate Changes   Nothing in this Agreement shall be construed as affecting in any way the right of UMERC to unilaterally make application to the Commission for a change in the rate for Wholesale Distribution Service.  UMERC shall notify Stephenson no later than the date of Commission filing, of its intent to file for an adjustment in rates.  UMERC s notification shall consist of the application package sent to the Commission. UMERC agrees that, in the event that UMERC makes such application to the Commission, UMERC shall not oppose Stephenson s right to intervene and protest such application.    5. BILLING AND PAYMENT    5.1. Billing Date   After commencement of this Agreement, UMERC shall issue bills to Stephenson on a calendar month basis, by the 10th working day following the calendar month to which they apply.  All bills shall be due and payable within 20 days of their receipt.    5.2. Payment Address    For Wire Transfers:       US Bank, N.A.        777 East Wisconsin Avenue        Milwaukee, Wisconsin  53202        ABA #075 000 022  For credit to:  Upper Michigan Energy Resources Corporation       Account # 182381014857             For Other Payments:       Cashiers A139      Upper Michigan Energy Resources Corporation        C/o We Energies      333 W. Everett Street      Milwaukee, Wisconsin  53203    5.3. Interest   Bills that are not paid in full by Stephenson when due shall thereafter bear interest at the rate of 1   percent per month, or at the maximum rate of interest allowed by law, whichever is less.    5.4. Disputed Bills   In the event of a dispute about any invoice, Stephenson shall remit the undisputed portion of such invoice, and shall have the option to pay the disputed portion of such invoice under protest or remit the disputed portion of such invoice into an escrow account pending the resolution of the dispute pursuant to Section 11 of this Agreement.    5.5. Termination for Non-Payment of Bills   In the event of non-payment of a bill by Stephenson, UMERC shall have the right to terminate service sixty (60) days subsequent to the date of the bill;  provided, however, that in the event of any billing dispute, UMERC shall not have the right to terminate service if Stephenson complies with Section 5.4 of this Agreement, and either pays the disputed amount under protest or places disputed amounts in an escrow account subject to disbursement based upon the resolution of the dispute.  UMERC shall be required to notify Stephenson in writing of its intent to terminate service for non-payment at least thirty (30) days prior to the actual date of termination of service.  UMERC may not terminate service for reason of non-payment if Stephenson makes payment prior to the date of termination.    6. ASSIGNMENT    6.1. Assignment of Rights Under the Agreement   Each Party shall have the right to assign all or any portion of its interest in the Agreement upon prior written notice to the other Party, and a Party assigning its rights and obligations under this Agreement shall provide notice to the other Party of the assignment pursuant to Section 12 of this Agreement.  If assignment of this Agreement occurs pursuant to the provisions of this section, this Agreement shall be binding upon and inure to the benefit of the respective successors and assigns of the Parties.    6.2. Obligations After Assignment   In the event of any sale, transfer, or assignment hereunder, the transferor or assignor shall, to the extent of the transferred or assigned obligations, and only to such extent, be relieved of obligations accruing from and after the effective date of such transfer or assignment;  provided, however, that under no circumstances shall any sale, transfer, or assignment relieve the transferor or assignor of any liability for any breach of this Agreement occurring before the effective date of such transfer or assignment.    7. LOAD SHEDDING AND CURTAILMENTS    7.1. Procedures   In accordance with NERC standards and the MISO Energy Market Tariff  the WPS Balancing Authority implements load shed.  Curtailment notice will be communicated by the WPS Balancing Authority contacting Stephenson as soon as practicable after a determination that curtailments are necessary.     7.2. Distribution Constraints   During any period when UMERC, ATC, or MISO determines that a constraint exists on all or a portion of the ATC transmission facilities or UMERC s facilities used to provide Wholesale Distribution Service under this Agreement, and that such constraint may impair the reliability of those facilities or other facilities owned and/or operated by ATC, UMERC, or MISO, UMERC may take whatever actions, consistent with Good Utility Practice, that are reasonably necessary to maintain the reliability of those facilities.  Such actions will be taken in a nondiscriminatory manner.    7.3. Curtailments of Wholesale Distribution Service   If a constraint cannot be relieved through the implementation of other procedures, and if UMERC determines that it is necessary to curtail Wholesale Distribution Service that would otherwise be provided under this Agreement, such deliveries shall be curtailed in a nondiscriminatory fashion.    7.4. Curtailment Allocation of Wholesale Distribution Service For Transmission Constraints   Each Party shall, on a non-discriminatory basis, curtail its use of the system in a manner that effectively relieves the constraint.  However, to the extent practicable and consistent with Good Utility Practice, any curtailment will be proportionately shared by UMERC and Stephenson.    7.5. System Reliability   Notwithstanding any other provisions of this Agreement, UMERC, for its own purposes or in response to actions taken or requests made by ATC or MISO, reserves the right, consistent with Good Utility Practice and on a basis that is not unduly discriminatory, to curtail Wholesale Distribution Service without liability on UMERC s part.  Such curtailments may be made (a) for the purpose of making necessary adjustments to, changes in, or repairs on the lines, substations, and facilities involved in providing service under this Agreement, or (b) where the continuance of Wholesale Distribution Service would endanger persons or property.      In the event of any adverse conditions or disturbances on UMERC s facilities, or on any other systems directly or indirectly interconnected with UMERC s system, UMERC, consistent with Good Utility Practice, also may curtail Wholesale Distribution Service in order to (i) limit the extent or damage of the adverse conditions or disturbances, (ii) prevent damage to facilities, or (iii) expedite restoration of service.  UMERC will give Stephenson as much advance notice as is practicable in the event of such curtailment.    7.6. Underfrequency Load Shedding   Stephenson shall comply with all regulatory underfrequency load shedding requirements through participation in Stephenson s Underfrequency Load Shedding plan.  Stephenson shall supply documentation of such compliance to UMERC and ATC, if requested.    8. ENERGY RELIABILITY ORGANIZATION OBLIGATIONS    8.1. Stephenson shall comply with all applicable energy reliability organization requirements.    8.2. Stephenson shall be responsible for paying all energy reliability organization costs associated with its load and the provision of service under this Agreement.    8.3. Stephenson shall provide all data and information requested by UMERC in order for UMERC to comply with electric reliability organization requirements.         9. CREDIT SUPPORT  UMERC, in order to satisfy itself of the ability of Stephenson to meet the obligations set forth in this Agreement, may in accordance with standard commercial practices conduct reasonable credit reviews.  UMERC will require Stephenson to provide the information and meet the requirements determined by UMERC.  Stephenson s failure to provide adequate credit support, if required, may be grounds for UMERC to terminate the Agreement.  UMERC may, based on UMERC s credit requirements, require Stephenson to provide and maintain in effect during the term of this Agreement an unconditional and irrevocable letter of credit, a parental guaranty, or an alternative form and type of security acceptable to UMERC and consistent with commercial practices ( Performance Assurance ).  Such credit support shall not exceed an amount equivalent to the sum of four months of the then current monthly distribution charges.  UMERC reserves the right, on a non-discriminatory basis, to require Stephenson to submit to UMERC updated financial information to permit UMERC to evaluate Stephenson s creditworthiness on an on-going basis, and if necessary, to require future Performance Assurance.  Upon receipt of such notice, Stephenson shall have three (3) business days to remedy the situation by providing such Performance Assurance to UMERC.  In the event Stephenson fails to provide such Performance Assurance acceptable to UMERC within three (3) business days of receipt of notice, then an event of default will be deemed to have occurred, and UMERC shall have the right to terminate service.  UMERC shall be required to notify Stephenson in writing of its intent to terminate service at least 60 days prior to the actual date of termination.        10. FORCE MAJEURE AND INDEMNIFICATION    10.1. Force Majeure   To the extent either Party is prevented by Force Majeure from carrying out, in whole or part, its obligations under this Agreement, and such Party ( the Claiming Party ) gives notice and details of the Force Majeure to the other Party as soon as practicable, then, unless this Agreement specifies otherwise, the Claiming Party shall be excused from the performance of its obligations with respect to this Agreement other than payments then due or becoming due with respect to performance prior to the Force Majeure.  The Claiming Party shall commence performance of its obligations after the occurrence of the Force Majeure with all reasonable dispatch.  The non-Claiming Party shall not be required to perform or resume performance of its obligations to the Claiming Party corresponding to the obligations of the Claiming Party excused by Force Majeure.  However, no Party shall be relieved of liability for failure of performance if such failure be due to causes arising out of its negligence or due to removable or remediable causes that it fails to remove or remedy within a reasonable time period.  Nothing contained herein shall be construed to require a Party to settle any strike or labor dispute in which it may be involved.    10.2. Indemnification   Each Party shall at all times, indemnify, defend, and hold harmless the other Party against any and all damages, losses, and claims, including claims and actions relating to injury to or death of any person or damage to property, demands, suits, recoveries, costs and expenses, court costs, attorney fees, and all other obligations by or to third parties, arising out of or resulting from the Party s required performance of its obligations under this Agreement.      10.3. Limitations on Liability   The Parties liability under this Agreement shall be limited to direct, actual damages only.  All other remedies or damages at law or in equity are waived.  Direct, actual damages shall be the sole and exclusive remedy, and in no event, whether as a result of breach of contract, tort liability (including negligence), strict liability, or otherwise, shall either Party be liable to the other Party, its agents, representatives, and/or assigns, for any special, punitive, incidental, indirect, exemplary, or consequential damages of any nature whatsoever, including, but not limited to, loss of profits.  The Parties also intend and agree that such provisions shall continue in full force and effect notwithstanding the termination, suspension, cancellation, or expiration of this Agreement.    11. DISPUTE RESOLUTION      11.1. Dispute Resolution   Any dispute between the Parties involving service under this Agreement shall be referred to a designated senior representative of each Party for resolution on an informal basis as promptly as practicable.  In the event the designated representatives are unable to resolve the dispute within thirty (30) days, or such other period as the Parties may agree upon, the Parties may pursue any remedies available.      11.2. Rights Under the Federal Power Act   Nothing in this section shall restrict the rights of either Party to file a complaint with the Commission under relevant provisions of the Federal Power Act.    12. NOTICES    12.1. Any notice provided for or concerning this Agreement, except the payment of bills as provided in Section 5.2,  shall be in writing and delivered by person or mail to the following:      If to UMERC:   Upper Michigan Energy Resources Corporation      Vice President   Wholesale Energy and Fuels      333 W. Everett Street, A214      Milwaukee, Wisconsin  53203    And    WEC Business Services  Director   Federal Regulatory Affairs and Policy  231 W. Michigan Street, P321  Milwaukee, WI   53203        If to Stephenson:  City of Stephenson        Electric Department   P.O. Box 467       Stephenson, MI   49887-0467    Such notice shall be effective when received by the Party to whom it is sent.    13. SEVERABILITY    13.1. In the event that any of the terms, covenants, or conditions of this Agreement or the application of any such term, covenant, or condition, shall be held invalid as to any person or circumstance by any court having jurisdiction, all other terms, covenants, or conditions of this Agreement and their application shall not be affected thereby, but shall remain in force and effect unless a court holds that the provisions are not separable from all other provisions of this Agreement    14. GOVERNING LAW    14.1. This Agreement shall be interpreted, construed, and enforced in accordance with the laws of the State of Michigan without regard to conflicts of law provisions thereof.    15. SIGNATURE CLAUSE    15.1. The signatories hereto represent that they have been authorized to enter into this Agreement on behalf of the Party for whom they sign.      COUNTERPARTS      15.2. This Agreement may be executed in one or more counterparts which taken together shall form a valid Agreement.    [SIGNATURE PAGE FOLLOWS]    IN WITNESS WHEREOF, each of the Parties has caused this Agreement to be executed by its duly authorized representative as of the date first written above.      City of Stephenson, Michigan Upper Michigan Energy Resources Corporation      By:  /s/ Dale M. Parrett    By:  /s/ J. Patrick Keyes      Name:  Dale M. Parrett    Name:  J. Patrick Keyes      Title:  Utility Co-Chair    Title:  President             Date:  October 17, 2016    Date:  October 21, 2016          SCHEDULE A    Facilities Used for Provision of Wholesale Distribution Service  Menominee St: Wholesale distribution service shall be provided to the City of Stephenson s Menominee St service location from the point of receipt at Wisconsin Public Service Corporation s Ingalls Substation (138 kV to 24.9 kV) over UMERC s 24.9 kV feeder # 241 then converted to 4.16 kV prior to the point of delivery at the Menominee St metering structure which is located at the intersection of Menominee St and Robert St in the City of Stephenson, Stephenson Township, Menominee County, Michigan, or over any successor facilities should UMERC reconfigure or rebuild its distribution facilities.        Capacity Reservation = 1.511MW (1.679MW @ 90% Capacity Factor)  DC\81591367.1    1        1</record_plain_text>
      <record_change_type>NEW</record_change_type>
      <filing_id>172</filing_id>
      <filing_title>UMERC to Stephenson Rate Schedule No 7</filing_title>
      <filing_type>10</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2017-01-01</current_effective_date>
      <ferc_order_date>2016-12-29</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
    <record_data>
      <record_id>186</record_id>
      <option_code>A</option_code>
      <record_title>UMERC - Alger Delta WDA Rate Schedule No 3</record_title>
      <record_content_desc>Cover Sheet</record_content_desc>
      <record_version_num>1.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>3000</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2017-01-01</proposed_effective_date>
      <priority_order>500</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data>e1xydGYxXGFkZWZsYW5nMTAyNVxhbnNpXGFuc2ljcGcxMjUyXHVjMVxhZGVmZjBcZGVmZjBcc3RzaGZkYmNoMFxzdHNoZmxvY2gwXHN0c2hmaGljaDBcc3RzaGZiaTBcZGVmbGFuZzEwMzNcZGVmbGFuZ2ZlMTAzM1x0aGVtZWxhbmcxMDMzXHRoZW1lbGFuZ2ZlMFx0aGVtZWxhbmdjczB7XGZvbnR0Ymx7XGYwXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjAyMDYwMzA1MDQwNTAyMDMwNH1UaW1lcyBOZXcgUm9tYW47fXtcZjFcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNjA0MDIwMjAyMDIwMjA0fUFyaWFsO30NCntcZjJcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQwXGZwcnExe1wqXHBhbm9zZSAwMjA3MDMwOTAyMDIwNTAyMDQwNH1Db3VyaWVyIE5ldzt9e1xmM1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MlxmcHJxMntcKlxwYW5vc2UgMDUwNTAxMDIwMTA3MDYwMjA1MDd9U3ltYm9sO317XGYxMFxmYmlkaSBcZm5pbFxmY2hhcnNldDJcZnBycTJ7XCpccGFub3NlIDA1MDAwMDAwMDAwMDAwMDAwMDAwfVdpbmdkaW5nczt9DQp7XGYzNFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MVxmcHJxMntcKlxwYW5vc2UgMDIwNDA1MDMwNTA0MDYwMzAyMDR9Q2FtYnJpYSBNYXRoO317XGYzOFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwYjA2MDQwMzA1MDQwNDAyMDR9VGFob21hO317XGYzOVxmYmlkaSBcZnNjcmlwdFxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAwMDAwMDAwMDAwMDAwMDAwMDAwfUNvbWljIFNhbnMgTVM7fQ0Ke1xmbG9tYWpvclxmMzE1MDBcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDIwNjAzMDUwNDA1MDIwMzA0fVRpbWVzIE5ldyBSb21hbjt9e1xmZGJtYWpvclxmMzE1MDFcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDIwNjAzMDUwNDA1MDIwMzA0fVRpbWVzIE5ldyBSb21hbjt9DQp7XGZoaW1ham9yXGYzMTUwMlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwNDA1MDMwNTA0MDYwMzAyMDR9Q2FtYnJpYTt9e1xmYmltYWpvclxmMzE1MDNcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDIwNjAzMDUwNDA1MDIwMzA0fVRpbWVzIE5ldyBSb21hbjt9DQp7XGZsb21pbm9yXGYzMTUwNFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwMjA2MDMwNTA0MDUwMjAzMDR9VGltZXMgTmV3IFJvbWFuO317XGZkYm1pbm9yXGYzMTUwNVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwMjA2MDMwNTA0MDUwMjAzMDR9VGltZXMgTmV3IFJvbWFuO30NCntcZmhpbWlub3JcZjMxNTA2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBmMDUwMjAyMDIwNDAzMDIwNH1DYWxpYnJpO317XGZiaW1pbm9yXGYzMTUwN1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwMjA2MDMwNTA0MDUwMjAzMDR9VGltZXMgTmV3IFJvbWFuO317XGY0MFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjM4XGZwcnEyIFRpbWVzIE5ldyBSb21hbiBDRTt9DQp7XGY0MVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjA0XGZwcnEyIFRpbWVzIE5ldyBSb21hbiBDeXI7fXtcZjQzXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjFcZnBycTIgVGltZXMgTmV3IFJvbWFuIEdyZWVrO317XGY0NFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYyXGZwcnEyIFRpbWVzIE5ldyBSb21hbiBUdXI7fXtcZjQ1XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNzdcZnBycTIgVGltZXMgTmV3IFJvbWFuIChIZWJyZXcpO30NCntcZjQ2XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNzhcZnBycTIgVGltZXMgTmV3IFJvbWFuIChBcmFiaWMpO317XGY0N1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTg2XGZwcnEyIFRpbWVzIE5ldyBSb21hbiBCYWx0aWM7fXtcZjQ4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjNcZnBycTIgVGltZXMgTmV3IFJvbWFuIChWaWV0bmFtZXNlKTt9e1xmNTBcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIzOFxmcHJxMiBBcmlhbCBDRTt9DQp7XGY1MVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjA0XGZwcnEyIEFyaWFsIEN5cjt9e1xmNTNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBBcmlhbCBHcmVlazt9e1xmNTRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBBcmlhbCBUdXI7fXtcZjU1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNzdcZnBycTIgQXJpYWwgKEhlYnJldyk7fQ0Ke1xmNTZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE3OFxmcHJxMiBBcmlhbCAoQXJhYmljKTt9e1xmNTdcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE4NlxmcHJxMiBBcmlhbCBCYWx0aWM7fXtcZjU4XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjNcZnBycTIgQXJpYWwgKFZpZXRuYW1lc2UpO317XGY2MFxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDIzOFxmcHJxMSBDb3VyaWVyIE5ldyBDRTt9DQp7XGY2MVxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDIwNFxmcHJxMSBDb3VyaWVyIE5ldyBDeXI7fXtcZjYzXGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTYxXGZwcnExIENvdXJpZXIgTmV3IEdyZWVrO317XGY2NFxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDE2MlxmcHJxMSBDb3VyaWVyIE5ldyBUdXI7fXtcZjY1XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTc3XGZwcnExIENvdXJpZXIgTmV3IChIZWJyZXcpO30NCntcZjY2XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTc4XGZwcnExIENvdXJpZXIgTmV3IChBcmFiaWMpO317XGY2N1xmYmlkaSBcZm1vZGVyblxmY2hhcnNldDE4NlxmcHJxMSBDb3VyaWVyIE5ldyBCYWx0aWM7fXtcZjY4XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTYzXGZwcnExIENvdXJpZXIgTmV3IChWaWV0bmFtZXNlKTt9e1xmNDMwXGZiaWRpIFxmc2NyaXB0XGZjaGFyc2V0MjM4XGZwcnEyIENvbWljIFNhbnMgTVMgQ0U7fQ0Ke1xmNDMxXGZiaWRpIFxmc2NyaXB0XGZjaGFyc2V0MjA0XGZwcnEyIENvbWljIFNhbnMgTVMgQ3lyO317XGY0MzNcZmJpZGkgXGZzY3JpcHRcZmNoYXJzZXQxNjFcZnBycTIgQ29taWMgU2FucyBNUyBHcmVlazt9e1xmNDM0XGZiaWRpIFxmc2NyaXB0XGZjaGFyc2V0MTYyXGZwcnEyIENvbWljIFNhbnMgTVMgVHVyO317XGY0MzdcZmJpZGkgXGZzY3JpcHRcZmNoYXJzZXQxODZcZnBycTIgQ29taWMgU2FucyBNUyBCYWx0aWM7fQ0Ke1xmbG9tYWpvclxmMzE1MDhcZmJpZGkgXGZyb21hblxmY2hhcnNldDIzOFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQ0U7fXtcZmxvbWFqb3JcZjMxNTA5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgVGltZXMgTmV3IFJvbWFuIEN5cjt9e1xmbG9tYWpvclxmMzE1MTFcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MVxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gR3JlZWs7fQ0Ke1xmbG9tYWpvclxmMzE1MTJcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MlxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gVHVyO317XGZsb21ham9yXGYzMTUxM1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc3XGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoSGVicmV3KTt9e1xmbG9tYWpvclxmMzE1MTRcZmJpZGkgXGZyb21hblxmY2hhcnNldDE3OFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKEFyYWJpYyk7fQ0Ke1xmbG9tYWpvclxmMzE1MTVcZmJpZGkgXGZyb21hblxmY2hhcnNldDE4NlxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQmFsdGljO317XGZsb21ham9yXGYzMTUxNlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYzXGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoVmlldG5hbWVzZSk7fXtcZmRibWFqb3JcZjMxNTE4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMzhcZnBycTIgVGltZXMgTmV3IFJvbWFuIENFO30NCntcZmRibWFqb3JcZjMxNTE5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgVGltZXMgTmV3IFJvbWFuIEN5cjt9e1xmZGJtYWpvclxmMzE1MjFcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MVxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gR3JlZWs7fXtcZmRibWFqb3JcZjMxNTIyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjJcZnBycTIgVGltZXMgTmV3IFJvbWFuIFR1cjt9DQp7XGZkYm1ham9yXGYzMTUyM1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc3XGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoSGVicmV3KTt9e1xmZGJtYWpvclxmMzE1MjRcZmJpZGkgXGZyb21hblxmY2hhcnNldDE3OFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKEFyYWJpYyk7fXtcZmRibWFqb3JcZjMxNTI1XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxODZcZnBycTIgVGltZXMgTmV3IFJvbWFuIEJhbHRpYzt9DQp7XGZkYm1ham9yXGYzMTUyNlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYzXGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoVmlldG5hbWVzZSk7fXtcZmhpbWFqb3JcZjMxNTI4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMzhcZnBycTIgQ2FtYnJpYSBDRTt9e1xmaGltYWpvclxmMzE1MjlcZmJpZGkgXGZyb21hblxmY2hhcnNldDIwNFxmcHJxMiBDYW1icmlhIEN5cjt9DQp7XGZoaW1ham9yXGYzMTUzMVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYxXGZwcnEyIENhbWJyaWEgR3JlZWs7fXtcZmhpbWFqb3JcZjMxNTMyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjJcZnBycTIgQ2FtYnJpYSBUdXI7fXtcZmhpbWFqb3JcZjMxNTM1XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxODZcZnBycTIgQ2FtYnJpYSBCYWx0aWM7fQ0Ke1xmaGltYWpvclxmMzE1MzZcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2M1xmcHJxMiBDYW1icmlhIChWaWV0bmFtZXNlKTt9e1xmYmltYWpvclxmMzE1MzhcZmJpZGkgXGZyb21hblxmY2hhcnNldDIzOFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQ0U7fXtcZmJpbWFqb3JcZjMxNTM5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgVGltZXMgTmV3IFJvbWFuIEN5cjt9DQp7XGZiaW1ham9yXGYzMTU0MVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYxXGZwcnEyIFRpbWVzIE5ldyBSb21hbiBHcmVlazt9e1xmYmltYWpvclxmMzE1NDJcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MlxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gVHVyO317XGZiaW1ham9yXGYzMTU0M1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc3XGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoSGVicmV3KTt9DQp7XGZiaW1ham9yXGYzMTU0NFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc4XGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoQXJhYmljKTt9e1xmYmltYWpvclxmMzE1NDVcZmJpZGkgXGZyb21hblxmY2hhcnNldDE4NlxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQmFsdGljO317XGZiaW1ham9yXGYzMTU0NlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYzXGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoVmlldG5hbWVzZSk7fQ0Ke1xmbG9taW5vclxmMzE1NDhcZmJpZGkgXGZyb21hblxmY2hhcnNldDIzOFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQ0U7fXtcZmxvbWlub3JcZjMxNTQ5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgVGltZXMgTmV3IFJvbWFuIEN5cjt9e1xmbG9taW5vclxmMzE1NTFcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MVxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gR3JlZWs7fQ0Ke1xmbG9taW5vclxmMzE1NTJcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MlxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gVHVyO317XGZsb21pbm9yXGYzMTU1M1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc3XGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoSGVicmV3KTt9e1xmbG9taW5vclxmMzE1NTRcZmJpZGkgXGZyb21hblxmY2hhcnNldDE3OFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKEFyYWJpYyk7fQ0Ke1xmbG9taW5vclxmMzE1NTVcZmJpZGkgXGZyb21hblxmY2hhcnNldDE4NlxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQmFsdGljO317XGZsb21pbm9yXGYzMTU1NlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYzXGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoVmlldG5hbWVzZSk7fXtcZmRibWlub3JcZjMxNTU4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMzhcZnBycTIgVGltZXMgTmV3IFJvbWFuIENFO30NCntcZmRibWlub3JcZjMxNTU5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgVGltZXMgTmV3IFJvbWFuIEN5cjt9e1xmZGJtaW5vclxmMzE1NjFcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MVxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gR3JlZWs7fXtcZmRibWlub3JcZjMxNTYyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjJcZnBycTIgVGltZXMgTmV3IFJvbWFuIFR1cjt9DQp7XGZkYm1pbm9yXGYzMTU2M1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc3XGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoSGVicmV3KTt9e1xmZGJtaW5vclxmMzE1NjRcZmJpZGkgXGZyb21hblxmY2hhcnNldDE3OFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKEFyYWJpYyk7fXtcZmRibWlub3JcZjMxNTY1XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxODZcZnBycTIgVGltZXMgTmV3IFJvbWFuIEJhbHRpYzt9DQp7XGZkYm1pbm9yXGYzMTU2NlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYzXGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoVmlldG5hbWVzZSk7fXtcZmhpbWlub3JcZjMxNTY4XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgQ2FsaWJyaSBDRTt9e1xmaGltaW5vclxmMzE1NjlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBDYWxpYnJpIEN5cjt9DQp7XGZoaW1pbm9yXGYzMTU3MVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIENhbGlicmkgR3JlZWs7fXtcZmhpbWlub3JcZjMxNTcyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgQ2FsaWJyaSBUdXI7fXtcZmhpbWlub3JcZjMxNTc1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgQ2FsaWJyaSBCYWx0aWM7fQ0Ke1xmaGltaW5vclxmMzE1NzZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2M1xmcHJxMiBDYWxpYnJpIChWaWV0bmFtZXNlKTt9e1xmYmltaW5vclxmMzE1NzhcZmJpZGkgXGZyb21hblxmY2hhcnNldDIzOFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQ0U7fXtcZmJpbWlub3JcZjMxNTc5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgVGltZXMgTmV3IFJvbWFuIEN5cjt9DQp7XGZiaW1pbm9yXGYzMTU4MVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYxXGZwcnEyIFRpbWVzIE5ldyBSb21hbiBHcmVlazt9e1xmYmltaW5vclxmMzE1ODJcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MlxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gVHVyO317XGZiaW1pbm9yXGYzMTU4M1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc3XGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoSGVicmV3KTt9DQp7XGZiaW1pbm9yXGYzMTU4NFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc4XGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoQXJhYmljKTt9e1xmYmltaW5vclxmMzE1ODVcZmJpZGkgXGZyb21hblxmY2hhcnNldDE4NlxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQmFsdGljO317XGZiaW1pbm9yXGYzMTU4NlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYzXGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoVmlldG5hbWVzZSk7fX0NCntcY29sb3J0Ymw7XHJlZDBcZ3JlZW4wXGJsdWUwO1xyZWQwXGdyZWVuMFxibHVlMjU1O1xyZWQwXGdyZWVuMjU1XGJsdWUyNTU7XHJlZDBcZ3JlZW4yNTVcYmx1ZTA7XHJlZDI1NVxncmVlbjBcYmx1ZTI1NTtccmVkMjU1XGdyZWVuMFxibHVlMDtccmVkMjU1XGdyZWVuMjU1XGJsdWUwO1xyZWQyNTVcZ3JlZW4yNTVcYmx1ZTI1NTtccmVkMFxncmVlbjBcYmx1ZTEyODtccmVkMFxncmVlbjEyOFxibHVlMTI4O1xyZWQwXGdyZWVuMTI4XGJsdWUwOw0KXHJlZDEyOFxncmVlbjBcYmx1ZTEyODtccmVkMTI4XGdyZWVuMFxibHVlMDtccmVkMTI4XGdyZWVuMTI4XGJsdWUwO1xyZWQxMjhcZ3JlZW4xMjhcYmx1ZTEyODtccmVkMTkyXGdyZWVuMTkyXGJsdWUxOTI7fXtcKlxkZWZjaHAgfXtcKlxkZWZwYXAgXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCB9XG5vcWZwcm9tb3RlIHtcc3R5bGVzaGVldHsNClxxbCBcbGkwXHJpMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzbmV4dDAgXHNxZm9ybWF0IFxzcHJpb3JpdHkwIE5vcm1hbDt9ew0KXHMxXHFsIFxsaTBccmkwXHNhMjQwXGtlZXBuXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFmMVxhZnMzMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMzMlxsYW5nMTAzM1xsYW5nZmUxMDMzXGtlcm5pbmczMlxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MjAgXHNxZm9ybWF0IFxzcHJpb3JpdHkwIGhlYWRpbmcgMTt9e1xzMlxxbCBcbGkwXHJpMFxzYTI0MFxrZWVwblxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjhcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGJcaVxmczI4XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQyMCBcc3Fmb3JtYXQgXHNwcmlvcml0eTAgaGVhZGluZyAyO317XHMzXHFsIFxsaTBccmkwXHNhMjQwXGtlZXBuXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cb3V0bGluZWxldmVsMlxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgDQpcYWJcYWYxXGFmczI2XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQyMCBcc3Fmb3JtYXQgXHNwcmlvcml0eTAgaGVhZGluZyAzO317DQpcczRccWwgXGxpMFxyaTBcc2EyNDBca2VlcG5cbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWwzXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI4XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24wIFxzbmV4dDIwIFxzcWZvcm1hdCBcc3ByaW9yaXR5MCBoZWFkaW5nIDQ7fXtcczVccWwgXGxpMFxyaTBcc2EyNDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWw0XGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWlcYWYwXGFmczI2XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxiXGlcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MjAgXHNxZm9ybWF0IFxzcHJpb3JpdHkwIGhlYWRpbmcgNTt9e1xzNlxxbCBcbGkwXHJpMFxzYTI0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDVcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIA0KXGFiXGFmMFxhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MjAgXHNxZm9ybWF0IFxzcHJpb3JpdHkwIGhlYWRpbmcgNjt9ew0KXHM3XHFsIFxsaTBccmkwXHNhMjQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cb3V0bGluZWxldmVsNlxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDIwIFxzcWZvcm1hdCBcc3ByaW9yaXR5MCANCmhlYWRpbmcgNzt9e1xzOFxxbCBcbGkwXHJpMFxzYTI0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDdcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhaVxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxpXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MjAgXHNxZm9ybWF0IFxzcHJpb3JpdHkwIGhlYWRpbmcgODt9e1xzOVxxbCBcbGkwXHJpMFxzYTI0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDhcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjFcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDIwIFxzcWZvcm1hdCBcc3ByaW9yaXR5MCBoZWFkaW5nIDk7fXtcKlxjczEwIFxhZGRpdGl2ZSBcc3NlbWloaWRkZW4gXHN1bmhpZGV1c2VkIFxzcHJpb3JpdHkxIERlZmF1bHQgUGFyYWdyYXBoIEZvbnQ7fXtcKg0KXHRzMTFcdHNyb3dkXHRyZnRzV2lkdGhCM1x0cnBhZGRsMTA4XHRycGFkZHIxMDhcdHJwYWRkZmwzXHRycGFkZGZ0M1x0cnBhZGRmYjNcdHJwYWRkZnIzXHRyY2JwYXQxXHRyY2ZwYXQxXHRibGluZDBcdGJsaW5kdHlwZTNcdHN2ZXJ0YWx0XHRzYnJkcnRcdHNicmRybFx0c2JyZHJiXHRzYnJkcnJcdHNicmRyZGdsXHRzYnJkcmRnclx0c2JyZHJoXHRzYnJkcnYgDQpccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczIwXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNuZXh0MTEgXHNzZW1paGlkZGVuIFxzdW5oaWRldXNlZCBOb3JtYWwgVGFibGU7fXsNClxzMTVccWwgXGxpMFxyaTBcbm93aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQxNSBcc3ByaW9yaXR5MCBoZWFkZXI7fQ0Ke1xzMTZccWwgXGxpMFxyaTBcbm93aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQxNiBcc3ByaW9yaXR5MCANCmZvb3Rlcjt9e1xzMTdccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MTcgXHNzZW1paGlkZGVuIFxzcHJpb3JpdHkwIGZvb3Rub3RlIHRleHQ7fXtcKlxjczE4IFxhZGRpdGl2ZSBcc3VwZXIgXHNzZW1paGlkZGVuIFxzcHJpb3JpdHkwIGZvb3Rub3RlIHJlZmVyZW5jZTt9e1xzMTlccWwgXGxpMFxyaTBcc2ExMjBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgDQpcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjM0IFxzbmV4dDM0IFxzcHJpb3JpdHkwIEJvZHkgVGV4dCBDb250aW51ZWQ7fXtcczIwXHFqIFxsaTBccmkwXHNhMjQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIA0KXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDIwIFxzcHJpb3JpdHkwIH5Cb2R5IDAsQm9keSAwLGIwO317XHMyMVxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCANClxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQyMSBcc3ByaW9yaXR5MCB+Qm9keSAxLEJvZHkgMSxiMTt9ew0KXHMyMlxxaiBcZmkxNDQwXGxpMFxyaTBcc2EyNDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDIyIFxzcHJpb3JpdHkwIA0KfkJvZHkgMixCb2R5IDIsYjI7fXtcczIzXHFqIFxsaTBccmkwXHNsNDgwXHNsbXVsdDFcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MjMgXHNwcmlvcml0eTAgfkJvZHkgMyxCb2R5IDMsYjM7fXtcczI0XHFqIFxmaTcyMFxsaTBccmkwXHNsNDgwXHNsbXVsdDFcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MjQgXHNwcmlvcml0eTAgfkJvZHkgNCxCb2R5IDQsYjQ7fXtcczI1XHFqIFxmaTE0NDBcbGkwXHJpMFxzbDQ4MFxzbG11bHQxXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IA0KXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDI1IFxzcHJpb3JpdHkwIH5Cb2R5IDUsQm9keSA1LGI1O317XHMyNlxxaiBcbGk3MjBccmk3MjBcc2EyNDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW43MjBcbGluNzIwXGl0YXAwIFxydGxjaFxmY3MxIA0KXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDI2IFxzcHJpb3JpdHkwIH5RdW90ZSAxLFF1b3RlIDEscTE7fXtcczI3XHFqIFxsaTE0NDBccmkxNDQwXHNhMjQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMTQ0MFxsaW4xNDQwXGl0YXAwIA0KXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDI3IFxzcHJpb3JpdHkwIH5RdW90ZSAyLFF1b3RlIDIscTI7fXsNClxzMjhccWogXGxpMjE2MFxyaTIxNjBcc2EyNDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4yMTYwXGxpbjIxNjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDI4IFxzcHJpb3JpdHkwIA0KflF1b3RlIDMsUXVvdGUgMyxxMzt9e1xzMjlccWMgXGxpMFxyaTBcc2EyNDBca2VlcG5cbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMCBcc25leHQyMCBcc3ByaW9yaXR5MCB+VGl0bGUgMCxUaXRsZSAwLHQwO317XHMzMFxxYyBcbGkwXHJpMFxzYTI0MFxrZWVwblxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MjAgXHNwcmlvcml0eTAgflRpdGxlIDEsVGl0bGUgMSx0MTt9e1xzMzFccWMgXGxpMFxyaTBcc2EyNDBca2VlcG5cbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSANClxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDIwIFxzcHJpb3JpdHkwIH5UaXRsZSAzLFRpdGxlIDMsdDM7fXsNClxzMzJccWwgXGxpMFxyaTBcc2EyNDBca2VlcG5cbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQyMCBcc3ByaW9yaXR5MCANCn5TdWJ0aXRsZSAwLFN1YnRpdGxlIDAsczA7fXtcczMzXHFsIFxsaTBccmkwXHNhMjQwXGtlZXBuXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MjAgXHNwcmlvcml0eTAgflN1YnRpdGxlIDEsU3VidGl0bGUgMSxzMTt9e1xzMzRccWwgXGxpMFxyaTBcc2ExMjBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MzQgXHNwcmlvcml0eTAgQm9keSBUZXh0O317XHMzNVxxbCBcbGkxNDQwXHJpMTQ0MFxzYTI0MFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjE0NDBcbGluMTQ0MFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQxOSBcc3Fmb3JtYXQgXHNwcmlvcml0eTAgUXVvdGU7fXtcKlxjczM2IFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxzYmFzZWRvbjEwIFxzcHJpb3JpdHkwIHBhZ2UgbnVtYmVyO317DQpcczM3XHFsIFxsaTBccmkwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQzNyBcc3ByaW9yaXR5MCBUYWJsZSBIZWFkaW5nLHgxO317DQpcczM4XHFsIFxsaTBccmkwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQzOCBcc3ByaW9yaXR5MCBUYWJsZSBUZXh0LHgyO317DQpcczM5XHFsIFxsaTBccmkwXGtlZXBca2VlcG5cbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDM5IFxzcHJpb3JpdHkwIA0KUGxlYWRpbmcgU2lnbmF0dXJlO317XHM0MFxxbCBcbGkwXHJpMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMCBcc25leHQwIFxzcWZvcm1hdCBcc3ByaW9yaXR5MCBjYXB0aW9uO317XHM0MVxxYyBcbGkwXHJpMFxzYjQwXHNhNzIwXHNsLTQ4MFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDQxIFxzcHJpb3JpdHkwIENvdXJ0O317XCpcY3M0MiBcYWRkaXRpdmUgXGYwXGZzMTZcdWxub25lXGV4cG5kMFxleHBuZHR3MFxjZjBcdXAwXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9zdXBlcnN1YlxhbmltdGV4dDBcc3RyaWtlZDBcbm9wcm9vZiBcc3ByaW9yaXR5MCB6em1wVHJhaWxlckl0ZW07fXtcKg0KXHRzNDNcdHNyb3dkXHRyYnJkcnRcYnJkcnNcYnJkcncxMCBcdHJicmRybFxicmRyc1xicmRydzEwIFx0cmJyZHJiXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnJcYnJkcnNcYnJkcncxMCBcdHJicmRyaFxicmRyc1xicmRydzEwIFx0cmJyZHJ2XGJyZHJzXGJyZHJ3MTAgDQpcdHJmdHNXaWR0aEIzXHRycGFkZGwxMDhcdHJwYWRkcjEwOFx0cnBhZGRmbDNcdHJwYWRkZnQzXHRycGFkZGZiM1x0cnBhZGRmcjNcdHJjYnBhdDFcdHJjZnBhdDFcdGJsaW5kMFx0YmxpbmR0eXBlM1x0c3ZlcnRhbHRcdHNicmRydFx0c2JyZHJsXHRzYnJkcmJcdHNicmRyclx0c2JyZHJkZ2xcdHNicmRyZGdyXHRzYnJkcmhcdHNicmRydiANClxxbCBcbGkwXHJpMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyMFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjExIFxzbmV4dDQzIFxzcHJpb3JpdHkwIFRhYmxlIEdyaWQ7fXsNClxzNDRccWwgXGxpMFxyaTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMzhcYWZzMTZcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmMzhcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0NDQgXHNzZW1paGlkZGVuIFxzcHJpb3JpdHkwIA0KQmFsbG9vbiBUZXh0O317XHM0NVxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZjFcZnMyOFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0NDUgXHNwcmlvcml0eTAgDQpEcmFmdCBTdGFtcDt9e1xzNDZccWwgXGxpMFxyaTBcc2IxMDBcc2ExMDBcc2JhdXRvMVxzYWF1dG8xXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMCBcc25leHQ0NiBcc3ByaW9yaXR5MCBOb3JtYWwgKFdlYik7fXtcczQ3XHFsIFxsaTBccmkwXHNhMTIwXHNsNDgwXHNsbXVsdDFcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0NDcgXHNwcmlvcml0eTAgQm9keSBUZXh0IDI7fXtcczQ4XHFjIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxiXGlcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0NDggXHNxZm9ybWF0IFxzcHJpb3JpdHkwIFRpdGxlO317XHM0OVxxbCBcbGkwXHJpMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBcY2JwYXQ5IFxydGxjaFxmY3MxIFxhZjM4XGFmczIwXGFsYW5nMTAyNSANClxsdHJjaFxmY3MwIFxmMzhcZnMyMFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0NDkgXHNzZW1paGlkZGVuIFxzcHJpb3JpdHkwIERvY3VtZW50IE1hcDt9e1wqXGNzNTAgXGFkZGl0aXZlIFxmczE2IFxzc2VtaWhpZGRlbiBcc3ByaW9yaXR5MCBhbm5vdGF0aW9uIHJlZmVyZW5jZTt9ew0KXHM1MVxxbCBcbGkwXHJpMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyMFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0NTEgXHNzZW1paGlkZGVuIFxzcHJpb3JpdHkwIGFubm90YXRpb24gdGV4dDt9DQp7XHM1MlxxbCBcbGkwXHJpMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxmczIwXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uNTEgXHNuZXh0NTEgXHNzZW1paGlkZGVuIFxzcHJpb3JpdHkwIA0KYW5ub3RhdGlvbiBzdWJqZWN0O317XHM1M1xxbCBcbGk3MjBccmkwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0NTMgXHNxZm9ybWF0IFxzcHJpb3JpdHkzNCBMaXN0IFBhcmFncmFwaDt9fXtcKlxsaXN0dGFibGV7XGxpc3RcbGlzdHRlbXBsYXRlaWQtMTU5NjQ0OTQ5MFxsaXN0c2ltcGxle1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMlwnMDAuO317XGxldmVsbnVtYmVycw0KXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMTgwMFxqY2xpc3R0YWJcdHgxODAwXGxpbjE4MDAgfXtcbGlzdG5hbWUgO31cbGlzdGlkLTEzMn17XGxpc3RcbGlzdHRlbXBsYXRlaWQ3NjMyNjgxOThcbGlzdHNpbXBsZXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDANCntcbGV2ZWx0ZXh0XCcwMlwnMDAuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTE0NDBcamNsaXN0dGFiXHR4MTQ0MFxsaW4xNDQwIH17XGxpc3RuYW1lIDt9XGxpc3RpZC0xMzF9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkMjAxNjgyMjk3MlxsaXN0c2ltcGxle1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MA0KXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMTA4MFxqY2xpc3R0YWJcdHgxMDgwXGxpbjEwODAgfXtcbGlzdG5hbWUgO31cbGlzdGlkLTEzMH17XGxpc3RcbGlzdHRlbXBsYXRlaWQyMTA3NzAyNzQwXGxpc3RzaW1wbGV7XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMA0KXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGk3MjBcamNsaXN0dGFiXHR4NzIwXGxpbjcyMCB9e1xsaXN0bmFtZSA7fVxsaXN0aWQtMTI5fXtcbGlzdFxsaXN0dGVtcGxhdGVpZDE0ODg2MDE4MjBcbGlzdHNpbXBsZQ0Ke1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAxXHUtMzkxMyA/O317XGxldmVsbnVtYmVyczt9XGYzXGZiaWFzMCBcZmktMzYwXGxpMTgwMFxqY2xpc3R0YWJcdHgxODAwXGxpbjE4MDAgfXtcbGlzdG5hbWUgO31cbGlzdGlkLTEyOH17XGxpc3RcbGlzdHRlbXBsYXRlaWQtNDUzNjEwODc4DQpcbGlzdHNpbXBsZXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fVxmM1xmYmlhczAgXGZpLTM2MFxsaTE0NDBcamNsaXN0dGFiXHR4MTQ0MFxsaW4xNDQwIH17XGxpc3RuYW1lIDt9XGxpc3RpZC0xMjd9DQp7XGxpc3RcbGlzdHRlbXBsYXRlaWQ1MDQ2NDE5NzBcbGlzdHNpbXBsZXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fVxmM1xmYmlhczAgXGZpLTM2MFxsaTEwODBcamNsaXN0dGFiXHR4MTA4MFxsaW4xMDgwIH17XGxpc3RuYW1lIA0KO31cbGlzdGlkLTEyNn17XGxpc3RcbGlzdHRlbXBsYXRlaWQtMjA1NDY3MTY3NFxsaXN0c2ltcGxle1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAxXHUtMzkxMyA/O317XGxldmVsbnVtYmVyczt9XGYzXGZiaWFzMCBcZmktMzYwXGxpNzIwXGpjbGlzdHRhYlx0eDcyMFxsaW43MjAgfQ0Ke1xsaXN0bmFtZSA7fVxsaXN0aWQtMTI1fXtcbGlzdFxsaXN0dGVtcGxhdGVpZDEwODIyNjk3NDZcbGlzdHNpbXBsZXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGkzNjANClxqY2xpc3R0YWJcdHgzNjBcbGluMzYwIH17XGxpc3RuYW1lIDt9XGxpc3RpZC0xMjB9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkNjA3NzA1ODMyXGxpc3RzaW1wbGV7XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDFcdS0zOTEzID87fXtcbGV2ZWxudW1iZXJzO31cZjNcZmJpYXMwIA0KXGZpLTM2MFxsaTM2MFxqY2xpc3R0YWJcdHgzNjBcbGluMzYwIH17XGxpc3RuYW1lIDt9XGxpc3RpZC0xMTl9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkMTk0NzYwMTIzMFxsaXN0aHlicmlke1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTE2NTEzNDkwMzANClwnMDFcdS0zOTEzID87fXtcbGV2ZWxudW1iZXJzO31cZjNcZmJpYXMwIFxmaS0zNjBcbGkyODgwXGpjbGlzdHRhYlx0eDI4ODBcbGluMjg4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDE2MDg5NDc0MDINClwnMDFvO317XGxldmVsbnVtYmVyczt9XGYyXGZiaWFzMCBcZmktMzYwXGxpMzYwMFxqY2xpc3R0YWJcdHgzNjAwXGxpbjM2MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQxMTc3NzE0MjY2DQpcJzAxXHUtMzkyOSA/O317XGxldmVsbnVtYmVyczt9XGYxMFxmYmlhczAgXGZpLTM2MFxsaTQzMjBcamNsaXN0dGFiXHR4NDMyMFxsaW40MzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTExNTA3NDg0NTgNClwnMDFcdS0zOTEzID87fXtcbGV2ZWxudW1iZXJzO31cZjNcZmJpYXMwIFxmaS0zNjBcbGk1MDQwXGpjbGlzdHRhYlx0eDUwNDBcbGluNTA0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0xMzg5NjE5MDMyDQpcJzAxbzt9e1xsZXZlbG51bWJlcnM7fVxmMlxmYmlhczAgXGZpLTM2MFxsaTU3NjBcamNsaXN0dGFiXHR4NTc2MFxsaW41NzYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTEzOTE1NTgzNg0KXCcwMVx1LTM5MjkgPzt9e1xsZXZlbG51bWJlcnM7fVxmMTBcZmJpYXMwIFxmaS0zNjBcbGk2NDgwXGpjbGlzdHRhYlx0eDY0ODBcbGluNjQ4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0xMDgwODg2MDYyDQpcJzAxXHUtMzkxMyA/O317XGxldmVsbnVtYmVyczt9XGYzXGZiaWFzMCBcZmktMzYwXGxpNzIwMFxqY2xpc3R0YWJcdHg3MjAwXGxpbjcyMDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtMTAzMzQ4ODE4MA0KXCcwMW87fXtcbGV2ZWxudW1iZXJzO31cZjJcZmJpYXMwIFxmaS0zNjBcbGk3OTIwXGpjbGlzdHRhYlx0eDc5MjBcbGluNzkyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDE3Njc5NjI2NzYNClwnMDFcdS0zOTI5ID87fXtcbGV2ZWxudW1iZXJzO31cZjEwXGZiaWFzMCBcZmktMzYwXGxpODY0MFxqY2xpc3R0YWJcdHg4NjQwXGxpbjg2NDAgfXtcbGlzdG5hbWUgO31cbGlzdGlkMjMxNTA1ODU5fXtcbGlzdFxsaXN0dGVtcGxhdGVpZC0xOTI1NTU0MjI4XGxpc3RoeWJyaWR7XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTANClxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtODE4NDg4OTc2XCcwMlwnMDApO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZiaWFzMCBcZmktOTc1XGxpOTc1XGpjbGlzdHRhYlx0eDk3NVxsaW45NzUgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmUNClxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ0NDYyMDk3MDZcJzAyXCcwMS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMTA4MFxqY2xpc3R0YWJcdHgxMDgwXGxpbjEwODAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmUNClxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtMjAyNjk5MzYyNFwnMDJcJzAyLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0xODBcbGkxODAwXGpjbGlzdHRhYlx0eDE4MDBcbGluMTgwMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZQ0KXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0xMDUzNDI2NjZcJzAyXCcwMy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMjUyMFxqY2xpc3R0YWJcdHgyNTIwXGxpbjI1MjAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmUNClxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQxMzc1NjA2MjE0XCcwMlwnMDQuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTMyNDBcamNsaXN0dGFiXHR4MzI0MFxsaW4zMjQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlDQpcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTEwNjk2Mjg2NjZcJzAyXCcwNS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpMzk2MFxqY2xpc3R0YWJcdHgzOTYwXGxpbjM5NjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmUNClxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQxMDgxNjQzMzcyXCcwMlwnMDYuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTQ2ODBcamNsaXN0dGFiXHR4NDY4MFxsaW40NjgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlDQpcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMjAwMDU1MzEwNlwnMDJcJzA3Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGk1NDAwXGpjbGlzdHRhYlx0eDU0MDBcbGluNTQwMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZQ0KXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC02NTI0NDM3MzJcJzAyXCcwOC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpNjEyMFxqY2xpc3R0YWJcdHg2MTIwXGxpbjYxMjAgfXtcbGlzdG5hbWUgO31cbGlzdGlkNDQyNTc0ODYwfXtcbGlzdFxsaXN0dGVtcGxhdGVpZDIwODAwMTQ3ODRcbGlzdGh5YnJpZHtcbGlzdGxldmVsDQpcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDExNTM4ODIxNzBcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpNzIwXGpjbGlzdHRhYlx0eDcyMFxsaW43MjAgfXtcbGlzdGxldmVsXGxldmVsbmZjNA0KXGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0zODcwMDg1MDBcJzAyXCcwMSk7fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMTQ0MFxqY2xpc3R0YWJcdHgxNDQwXGxpbjE0NDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yDQpcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQxMDIzNjc1NjQwXCcwMlwnMDIuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTE4MFxsaTIxNjBcamNsaXN0dGFiXHR4MjE2MFxsaW4yMTYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMA0KXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTIwNzQ4MzM5OFwnMDJcJzAzLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGkyODgwXGpjbGlzdHRhYlx0eDI4ODBcbGluMjg4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjQNClxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0xMjUzMTc0NjQwXCcwMlwnMDQuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTM2MDBcamNsaXN0dGFiXHR4MzYwMFxsaW4zNjAwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMg0KXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTE3NjYwNDQ3NjBcJzAyXCcwNS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpNDMyMFxqY2xpc3R0YWJcdHg0MzIwXGxpbjQzMjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wDQpcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtOTYyNTU2MDIwXCcwMlwnMDYuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTUwNDBcamNsaXN0dGFiXHR4NTA0MFxsaW41MDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNA0KXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTgxMjUyNjU2NlwnMDJcJzA3Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGk1NzYwXGpjbGlzdHRhYlx0eDU3NjBcbGluNTc2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjINClxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDIyNjUxNzY0NFwnMDJcJzA4Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0xODBcbGk2NDgwXGpjbGlzdHRhYlx0eDY0ODBcbGluNjQ4MCB9e1xsaXN0bmFtZSA7fVxsaXN0aWQ2MjQ3NzQ3ODR9DQp7XGxpc3RcbGlzdHRlbXBsYXRlaWQtMTY5Nzk5MDM3NlxsaXN0aHlicmlke1xsaXN0bGV2ZWxcbGV2ZWxuZmMxXGxldmVsbmZjbjFcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQ0XGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDE1MDA3ODMyMThcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bG5vbmVcZmJpYXMwIFxmaS03MjBcbGkxMDgwXGpjbGlzdHRhYlx0eDEwODBcbGluMTA4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtMTMwNDc2ODkxMFwnMDJcJzAxLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTE0NDBcamNsaXN0dGFiXHR4MTQ0MFxsaW4xNDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDIwNjE4MjU0NzBcJzAyXCcwMi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxmaS0xODBcbGkyMTYwXGpjbGlzdHRhYlx0eDIxNjBcbGluMjE2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ3MTcxMTM1NDJcJzAyXCcwMy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGkyODgwXGpjbGlzdHRhYlx0eDI4ODBcbGluMjg4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQxMTU4ODI3Mzk0XCcwMlwnMDQuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMzYwMFxqY2xpc3R0YWJcdHgzNjAwXGxpbjM2MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTQ2NjE4OTkwNFwnMDJcJzA1Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGZpLTE4MFxsaTQzMjBcamNsaXN0dGFiXHR4NDMyMFxsaW40MzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0xNDkwMjI2OTMwXCcwMlwnMDYuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpNTA0MFxqY2xpc3R0YWJcdHg1MDQwXGxpbjUwNDAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkODExNTI4ODg4XCcwMlwnMDcuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpNTc2MFxqY2xpc3R0YWJcdHg1NzYwXGxpbjU3NjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMzY1MzQ1OTQyXCcwMlwnMDguO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpNjQ4MFxqY2xpc3R0YWJcdHg2NDgwXGxpbjY0ODAgfXtcbGlzdG5hbWUgO31cbGlzdGlkNjcxOTUwMzk1fXtcbGlzdFxsaXN0dGVtcGxhdGVpZDEyNzM1MjU4NTJcbGlzdGh5YnJpZHtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZDEzMjc0MDQ1NTRcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMjE2MFxqY2xpc3R0YWJcdHgyMTYwXGxpbjIxNjAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQtMjEwMTMxNjkwOFwnMDJcJzAxLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGkyODgwXGpjbGlzdHRhYlx0eDI4ODBcbGluMjg4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZC03OTc0MjI1NjJcJzAyXCcwMi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpMzYwMFxqY2xpc3R0YWJcdHgzNjAwXGxpbjM2MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQtMTM2Mjg3OTE2MlwnMDJcJzAzLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGk0MzIwXGpjbGlzdHRhYlx0eDQzMjBcbGluNDMyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZDE5Nzg0MTk0MzZcJzAyXCcwNC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpNTA0MFxqY2xpc3R0YWJcdHg1MDQwXGxpbjUwNDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQtNjIyOTIyMjU4XCcwMlwnMDUuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTE4MFxsaTU3NjBcamNsaXN0dGFiXHR4NTc2MFxsaW41NzYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkMTAxODYwMTg3MFwnMDJcJzA2Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGk2NDgwXGpjbGlzdHRhYlx0eDY0ODBcbGluNjQ4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZDEwOTAwNDExNzBcJzAyXCcwNy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpNzIwMFxqY2xpc3R0YWJcdHg3MjAwXGxpbjcyMDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQyMDAwODU2NDUwXCcwMlwnMDguO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTE4MFxsaTc5MjBcamNsaXN0dGFiXHR4NzkyMFxsaW43OTIwIH17XGxpc3RuYW1lIDt9XGxpc3RpZDcyNjMzOTI5MX17XGxpc3RcbGlzdHRlbXBsYXRlaWQtNDEzNTI1MjE2XGxpc3RoeWJyaWR7XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjANClxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtODg1MDg0MTcwXCcwMyhcJzAwKTt9e1xsZXZlbG51bWJlcnNcJzAyO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmYmlhczAgXGZpLTEwMzVcbGkxNzU1XGpjbGlzdHRhYlx0eDE3NTVcbGluMTc1NSB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wDQpcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0xMDU4Mzc4MFwnMDJcJzAxLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGkxODAwXGpjbGlzdHRhYlx0eDE4MDBcbGluMTgwMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yDQpcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDIxMDI5MjkxMDhcJzAyXCcwMi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpMjUyMFxqY2xpc3R0YWJcdHgyNTIwXGxpbjI1MjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMA0KXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtMzc5OTIyNzA2XCcwMlwnMDMuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTMyNDBcamNsaXN0dGFiXHR4MzI0MFxsaW4zMjQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjANClxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMzM1Njc2MjhcJzAyXCcwNC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMzk2MFxqY2xpc3R0YWJcdHgzOTYwXGxpbjM5NjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMg0KXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtNzIyODA5NTg2XCcwMlwnMDUuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTE4MFxsaTQ2ODBcamNsaXN0dGFiXHR4NDY4MFxsaW40NjgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjANClxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNDQxOTc2MjkyXCcwMlwnMDYuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTU0MDBcamNsaXN0dGFiXHR4NTQwMFxsaW41NDAwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjANClxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTAxODM1NjAzMlwnMDJcJzA3Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGk2MTIwXGpjbGlzdHRhYlx0eDYxMjBcbGluNjEyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yDQpcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC03NzYxNTQzNzZcJzAyXCcwOC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpNjg0MFxqY2xpc3R0YWJcdHg2ODQwXGxpbjY4NDAgfXtcbGlzdG5hbWUgO31cbGlzdGlkNzk1Njc4ODI1fQ0Ke1xsaXN0XGxpc3R0ZW1wbGF0ZWlkMjA4MDAxNDc4NHtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGk3MjBcamNsaXN0dGFiXHR4NzIwXGxpbjcyMCB9e1xsaXN0bGV2ZWwNClxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAyXCcwMSk7fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMTQ0MFxqY2xpc3R0YWJcdHgxNDQwXGxpbjE0NDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMg0KXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMlwnMDIuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTE4MFxsaTIxNjBcamNsaXN0dGFiXHR4MjE2MFxsaW4yMTYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTANClxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDJcJzAzLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGkyODgwXGpjbGlzdHRhYlx0eDI4ODBcbGluMjg4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcJzAyXCcwNC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMzYwMFxqY2xpc3R0YWJcdHgzNjAwXGxpbjM2MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDJcJzA1Ljt9e1xsZXZlbG51bWJlcnNcJzAxO30NClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTE4MFxsaTQzMjBcamNsaXN0dGFiXHR4NDMyMFxsaW40MzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAyXCcwNi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxmaS0zNjBcbGk1MDQwXGpjbGlzdHRhYlx0eDUwNDBcbGluNTA0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMlwnMDcuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTU3NjBcamNsaXN0dGFiXHR4NTc2MFxsaW41NzYwIA0KfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDJcJzA4Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0xODBcbGk2NDgwXGpjbGlzdHRhYlx0eDY0ODBcbGluNjQ4MCB9e1xsaXN0bmFtZSA7fVxsaXN0aWQ5NTUzMzY1OTl9DQp7XGxpc3RcbGlzdHRlbXBsYXRlaWQtMTc5MDk1ODQxMlxsaXN0aHlicmlke1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQ0XGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0xODEzMDg4ODcyXCcwMlwnMDAuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZiaWFzMCANClxmaS03MjBcbGkxNDQwXGpjbGlzdHRhYlx0eDE0NDBcbGluMTQ0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtMTA0MTk2MDE0OFwnMDJcJzAxLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGZpLTM2MFxsaTE4MDBcamNsaXN0dGFiXHR4MTgwMFxsaW4xODAwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0yMDUzMjEzMzQ0XCcwMlwnMDIuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZmktMTgwXGxpMjUyMFxqY2xpc3R0YWJcdHgyNTIwXGxpbjI1MjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTk2NDExMTkwNFwnMDJcJzAzLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGZpLTM2MFxsaTMyNDBcamNsaXN0dGFiXHR4MzI0MFxsaW4zMjQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0xMzUzODg4OTJcJzAyXCcwNC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxmaS0zNjBcbGkzOTYwXGpjbGlzdHRhYlx0eDM5NjBcbGluMzk2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtMTQzMzczMTgxOFwnMDJcJzA1Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGZpLTE4MFxsaTQ2ODBcamNsaXN0dGFiXHR4NDY4MFxsaW40NjgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0xMTIxMDU0NTU4XCcwMlwnMDYuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZmktMzYwXGxpNTQwMFxqY2xpc3R0YWJcdHg1NDAwXGxpbjU0MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTQyMjY4NDMxNFwnMDJcJzA3Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGZpLTM2MFxsaTYxMjBcamNsaXN0dGFiXHR4NjEyMFxsaW42MTIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDE1MzQ0ODEwODJcJzAyXCcwOC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxmaS0xODBcbGk2ODQwXGpjbGlzdHRhYlx0eDY4NDBcbGluNjg0MCB9e1xsaXN0bmFtZSA7fVxsaXN0aWQ5NzMyMTY2NDd9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkLTc5NTY3Mjg2NntcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO30NClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTM2MFxqY2xpc3R0YWJcdHgzNjBcbGluMzYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzA0XCcwMC5cJzAxLjt9e1xsZXZlbG51bWJlcnNcJzAxXCcwMzt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxmaS00MzJcbGk4ODJcamNsaXN0dGFiXHR4ODgyXGxpbjg4MiB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMlwnMDIuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTUwNFxsaTEyMjRcamNsaXN0dGFiXHR4MTIyNFxsaW4xMjI0IH0NCntcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDJcJzAzLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS02NDhcbGkxNzI4XGpjbGlzdHRhYlx0eDE3MjhcbGluMTcyOCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjANClxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzBhXCcwMC5cJzAxLlwnMDIuXCcwMy5cJzA0Ljt9e1xsZXZlbG51bWJlcnNcJzAxXCcwM1wnMDVcJzA3XCcwOTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktNzkyXGxpMjIzMlxqY2xpc3R0YWJcdHgyNTIwXGxpbjIyMzIgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wDQpcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwY1wnMDAuXCcwMS5cJzAyLlwnMDMuXCcwNC5cJzA1Ljt9e1xsZXZlbG51bWJlcnNcJzAxXCcwM1wnMDVcJzA3XCcwOVwnMGI7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTkzNlxsaTI3MzZcamNsaXN0dGFiXHR4Mjg4MFxsaW4yNzM2IH17XGxpc3RsZXZlbFxsZXZlbG5mYzANClxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMGVcJzAwLlwnMDEuXCcwMi5cJzAzLlwnMDQuXCcwNS5cJzA2Ljt9e1xsZXZlbG51bWJlcnNcJzAxXCcwM1wnMDVcJzA3XCcwOVwnMGJcJzBkO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0xMDgwXGxpMzI0MFxqY2xpc3R0YWJcdHgzNjAwXGxpbjMyNDAgfQ0Ke1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcxMFwnMDAuXCcwMS5cJzAyLlwnMDMuXCcwNC5cJzA1LlwnMDYuXCcwNy47fXtcbGV2ZWxudW1iZXJzXCcwMVwnMDNcJzA1XCcwN1wnMDlcJzBiXCcwZFwnMGY7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTEyMjRcbGkzNzQ0DQpcamNsaXN0dGFiXHR4Mzk2MFxsaW4zNzQ0IH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzEyXCcwMC5cJzAxLlwnMDIuXCcwMy5cJzA0LlwnMDUuXCcwNi5cJzA3LlwnMDguO317XGxldmVsbnVtYmVyc1wnMDFcJzAzXCcwNVwnMDdcJzA5XCcwYlwnMGRcJzBmXCcxMTt9DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0xNDQwXGxpNDMyMFxqY2xpc3R0YWJcdHg0NjgwXGxpbjQzMjAgfXtcbGlzdG5hbWUgO31cbGlzdGlkMTEwMTAzMTI3NH17XGxpc3RcbGlzdHRlbXBsYXRlaWQtMTI2NTA1NjI3NntcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MTBcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmYmlhczAgXGZpLTM2MFxsaTM2MFxqY2xpc3R0YWJcdHgzNjBcbGluMzYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzA0XCcwMC5cJzAxLjt9e1xsZXZlbG51bWJlcnMNClwnMDFcJzAzO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmYmlhczAgXGZpLTQzMlxsaTc5MlxqY2xpc3R0YWJcdHg3OTJcbGluNzkyIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAyXCcwMi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxmYmlhczAgXGZpLTUwNFxsaTEyMjRcamNsaXN0dGFiXHR4MTIyNFxsaW4xMjI0IH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAyXCcwMy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmJpYXMwIA0KXGZpLTY0OFxsaTE3MjhcamNsaXN0dGFiXHR4MTcyOFxsaW4xNzI4IH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzBhXCcwMC5cJzAxLlwnMDIuXCcwMy5cJzA0Ljt9e1xsZXZlbG51bWJlcnNcJzAxXCcwM1wnMDVcJzA3XCcwOTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxmYmlhczAgXGZpLTc5MlxsaTIyMzJcamNsaXN0dGFiXHR4MjUyMFxsaW4yMjMyIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzBjXCcwMC5cJzAxLlwnMDIuXCcwMy5cJzA0LlwnMDUuO317XGxldmVsbnVtYmVyc1wnMDFcJzAzXCcwNVwnMDdcJzA5XCcwYjt9XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxmYmlhczAgXGZpLTkzNlxsaTI3MzZcamNsaXN0dGFiXHR4Mjg4MFxsaW4yNzM2IH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzBlXCcwMC5cJzAxLlwnMDIuXCcwMy5cJzA0LlwnMDUuXCcwNi47fXtcbGV2ZWxudW1iZXJzDQpcJzAxXCcwM1wnMDVcJzA3XCcwOVwnMGJcJzBkO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmYmlhczAgXGZpLTEwODBcbGkzMjQwXGpjbGlzdHRhYlx0eDM2MDBcbGluMzI0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcJzEwXCcwMC5cJzAxLlwnMDIuXCcwMy5cJzA0LlwnMDUuXCcwNi5cJzA3Ljt9e1xsZXZlbG51bWJlcnNcJzAxXCcwM1wnMDVcJzA3XCcwOVwnMGJcJzBkXCcwZjt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmJpYXMwIFxmaS0xMjI0XGxpMzc0NFxqY2xpc3R0YWJcdHgzOTYwXGxpbjM3NDQgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MQ0KXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcxMlwnMDAuXCcwMS5cJzAyLlwnMDMuXCcwNC5cJzA1LlwnMDYuXCcwNy5cJzA4Ljt9e1xsZXZlbG51bWJlcnNcJzAxXCcwM1wnMDVcJzA3XCcwOVwnMGJcJzBkXCcwZlwnMTE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZiaWFzMCBcZmktMTQ0MFxsaTQzMjBcamNsaXN0dGFiXHR4NDY4MFxsaW40MzIwIH17XGxpc3RuYW1lIDt9XGxpc3RpZDExNTMyNTk5MzB9DQp7XGxpc3RcbGlzdHRlbXBsYXRlaWQtMzg0MDE1MzY4XGxpc3RoeWJyaWR7XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTExNTcyMDU1MTJcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxmaS0zNjBcbGk3MjBcamNsaXN0dGFiXHR4NzIwXGxpbjcyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTE0MTUwMDA4NDZcJzAxXHUtMzkxMyA/O317XGxldmVsbnVtYmVyczt9XGYzXGZiaWFzMCBcZmktMzYwXGxpMTQ0MA0KXGpjbGlzdHRhYlx0eDE0NDBcbGluMTQ0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDExNjgyMDM5MFwnMDJcJzAyLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0xODBcbGkyMTYwDQpcamNsaXN0dGFiXHR4MjE2MFxsaW4yMTYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNTQ0MjU4MjU0XCcwMlwnMDMuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTI4ODANClxqY2xpc3R0YWJcdHgyODgwXGxpbjI4ODAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTYyMDk3MDUxOFwnMDJcJzA0Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGkzNjAwDQpcamNsaXN0dGFiXHR4MzYwMFxsaW4zNjAwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0xOTI2MTIwNDhcJzAyXCcwNS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpNDMyMA0KXGpjbGlzdHRhYlx0eDQzMjBcbGluNDMyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQxODc3NjcwODMyXCcwMlwnMDYuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTUwNDANClxqY2xpc3R0YWJcdHg1MDQwXGxpbjUwNDAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTI1MzMzMzA5OFwnMDJcJzA3Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGk1NzYwDQpcamNsaXN0dGFiXHR4NTc2MFxsaW41NzYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDEwMzYxNjgxOTRcJzAyXCcwOC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpNjQ4MA0KXGpjbGlzdHRhYlx0eDY0ODBcbGluNjQ4MCB9e1xsaXN0bmFtZSA7fVxsaXN0aWQxMzIwNzY4MDAzfXtcbGlzdFxsaXN0dGVtcGxhdGVpZDIwODAwMTQ3ODR7XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxmaS0zNjBcbGk3MjBcamNsaXN0dGFiXHR4NzIwXGxpbjcyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMlwnMDEpO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTE0NDANClxqY2xpc3R0YWJcdHgxNDQwXGxpbjE0NDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDJcJzAyLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0xODBcbGkyMTYwXGpjbGlzdHRhYlx0eDIxNjBcbGluMjE2MCB9e1xsaXN0bGV2ZWwNClxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAyXCcwMy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMjg4MFxqY2xpc3R0YWJcdHgyODgwXGxpbjI4ODAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMA0KXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMlwnMDQuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTM2MDBcamNsaXN0dGFiXHR4MzYwMFxsaW4zNjAwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTANClxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDJcJzA1Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0xODBcbGk0MzIwXGpjbGlzdHRhYlx0eDQzMjBcbGluNDMyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcJzAyXCcwNi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpNTA0MFxqY2xpc3R0YWJcdHg1MDQwXGxpbjUwNDAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDJcJzA3Ljt9e1xsZXZlbG51bWJlcnNcJzAxO30NClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTU3NjBcamNsaXN0dGFiXHR4NTc2MFxsaW41NzYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAyXCcwOC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxmaS0xODBcbGk2NDgwXGpjbGlzdHRhYlx0eDY0ODBcbGluNjQ4MCB9e1xsaXN0bmFtZSA7fVxsaXN0aWQxNDY3MDg5NzM4fXtcbGlzdFxsaXN0dGVtcGxhdGVpZDYzOTE2NzAyNFxsaXN0aHlicmlke1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTk0MTIwMjI4NA0KXCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fVxmM1xmYmlhczAgXGZpLTM2MFxsaTIxNjBcamNsaXN0dGFiXHR4MjE2MFxsaW4yMTYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTMyOTQ5NDY4Mg0KXCcwMW87fXtcbGV2ZWxudW1iZXJzO31cZjJcZmJpYXMwIFxmaS0zNjBcbGkyODgwXGpjbGlzdHRhYlx0eDI4ODBcbGluMjg4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0xMDQ0NTk0NTgyDQpcJzAxXHUtMzkyOSA/O317XGxldmVsbnVtYmVyczt9XGYxMFxmYmlhczAgXGZpLTM2MFxsaTM2MDBcamNsaXN0dGFiXHR4MzYwMFxsaW4zNjAwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTA0Mjk2MzI5OA0KXCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fVxmM1xmYmlhczAgXGZpLTM2MFxsaTQzMjBcamNsaXN0dGFiXHR4NDMyMFxsaW40MzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjI3MjE1MjMwDQpcJzAxbzt9e1xsZXZlbG51bWJlcnM7fVxmMlxmYmlhczAgXGZpLTM2MFxsaTUwNDBcamNsaXN0dGFiXHR4NTA0MFxsaW41MDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTk2MTI1NTEyNA0KXCcwMVx1LTM5MjkgPzt9e1xsZXZlbG51bWJlcnM7fVxmMTBcZmJpYXMwIFxmaS0zNjBcbGk1NzYwXGpjbGlzdHRhYlx0eDU3NjBcbGluNTc2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDEwNjAxNDc3NjQNClwnMDFcdS0zOTEzID87fXtcbGV2ZWxudW1iZXJzO31cZjNcZmJpYXMwIFxmaS0zNjBcbGk2NDgwXGpjbGlzdHRhYlx0eDY0ODBcbGluNjQ4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDIwNTc0NDUxNzgNClwnMDFvO317XGxldmVsbnVtYmVyczt9XGYyXGZiaWFzMCBcZmktMzYwXGxpNzIwMFxqY2xpc3R0YWJcdHg3MjAwXGxpbjcyMDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQxMjk4MjY4ODQ0DQpcJzAxXHUtMzkyOSA/O317XGxldmVsbnVtYmVyczt9XGYxMFxmYmlhczAgXGZpLTM2MFxsaTc5MjBcamNsaXN0dGFiXHR4NzkyMFxsaW43OTIwIH17XGxpc3RuYW1lIDt9XGxpc3RpZDE2NTE3OTA3NjZ9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkMTU4NzQ2NDM0XGxpc3RoeWJyaWR7XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMA0KXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDEzNjc4OTEwMjJcJzAxXHUtMzkxMyA/O317XGxldmVsbnVtYmVyczt9XGYzXGZiaWFzMCBcZmktMzYwXGxpMTQ0MFxqY2xpc3R0YWJcdHgxNDQwXGxpbjE0NDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDANCntcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDE5MjI4NDY2NDBcJzAxbzt9e1xsZXZlbG51bWJlcnM7fVxmMlxmYmlhczAgXGZpLTM2MFxsaTIxNjBcamNsaXN0dGFiXHR4MjE2MFxsaW4yMTYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQtMTUzOTQxNzUzOFwnMDFcdS0zOTI5ID87fXtcbGV2ZWxudW1iZXJzO31cZjEwXGZiaWFzMCBcZmktMzYwXGxpMjg4MFxqY2xpc3R0YWJcdHgyODgwXGxpbjI4ODAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZDE1MjgyMTk5OTRcJzAxXHUtMzkxMyA/O317XGxldmVsbnVtYmVyczt9XGYzXGZiaWFzMCBcZmktMzYwXGxpMzYwMFxqY2xpc3R0YWJcdHgzNjAwXGxpbjM2MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZC0zMDQ5MDIwNFwnMDFvO317XGxldmVsbnVtYmVyczt9XGYyXGZiaWFzMCBcZmktMzYwXGxpNDMyMFxqY2xpc3R0YWJcdHg0MzIwXGxpbjQzMjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQxMTEwNDc1NjYwDQpcJzAxXHUtMzkyOSA/O317XGxldmVsbnVtYmVyczt9XGYxMFxmYmlhczAgXGZpLTM2MFxsaTUwNDBcamNsaXN0dGFiXHR4NTA0MFxsaW41MDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjg3NTAxODU2DQpcJzAxXHUtMzkxMyA/O317XGxldmVsbnVtYmVyczt9XGYzXGZiaWFzMCBcZmktMzYwXGxpNTc2MFxqY2xpc3R0YWJcdHg1NzYwXGxpbjU3NjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtMTc0NjA4MjQ0NA0KXCcwMW87fXtcbGV2ZWxudW1iZXJzO31cZjJcZmJpYXMwIFxmaS0zNjBcbGk2NDgwXGpjbGlzdHRhYlx0eDY0ODBcbGluNjQ4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDk5Nzc2ODY5MA0KXCcwMVx1LTM5MjkgPzt9e1xsZXZlbG51bWJlcnM7fVxmMTBcZmJpYXMwIFxmaS0zNjBcbGk3MjAwXGpjbGlzdHRhYlx0eDcyMDBcbGluNzIwMCB9e1xsaXN0bmFtZSA7fVxsaXN0aWQxNzA5MTQzMTE0fXtcbGlzdFxsaXN0dGVtcGxhdGVpZC0xMjI2ODA3NDEwXGxpc3RoeWJyaWR7XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTANClxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQxMjU4OTMxMTJcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpNzIwXGpjbGlzdHRhYlx0eDcyMFxsaW43MjAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDANCntcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDE0NDc0MzU0NTZcJzAyXCcwMS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMTQ0MFxqY2xpc3R0YWJcdHgxNDQwXGxpbjE0NDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwDQp7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQxNDY3Nzk2NjI2XCcwMlwnMDIuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTE4MFxsaTIxNjBcamNsaXN0dGFiXHR4MjE2MFxsaW4yMTYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MA0Ke1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTE0NTQ0Njg4NzhcJzAyXCcwMy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMjg4MFxqY2xpc3R0YWJcdHgyODgwXGxpbjI4ODAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwDQp7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ1MzIyMTA0NFwnMDJcJzA0Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGkzNjAwXGpjbGlzdHRhYlx0eDM2MDBcbGluMzYwMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDANCntcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDEwNzIwODc3MzRcJzAyXCcwNS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpNDMyMFxqY2xpc3R0YWJcdHg0MzIwXGxpbjQzMjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwDQp7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQxMDczNzg4MDM0XCcwMlwnMDYuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTUwNDBcamNsaXN0dGFiXHR4NTA0MFxsaW41MDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MA0Ke1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTE4ODE5MjQ0NDJcJzAyXCcwNy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpNTc2MFxqY2xpc3R0YWJcdHg1NzYwXGxpbjU3NjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwDQp7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQxODY2MzQ4ODkwXCcwMlwnMDguO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTE4MFxsaTY0ODBcamNsaXN0dGFiXHR4NjQ4MFxsaW42NDgwIH17XGxpc3RuYW1lIDt9XGxpc3RpZDE4MTY3MjU4MjN9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkLTE0NzA3MjYwMjRcbGlzdGh5YnJpZHtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwDQpcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0xNjczNzY3NDU2XCcwMlwnMDAuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTcyMFxqY2xpc3R0YWJcdHg3MjBcbGluNzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjANClxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTU3MDAyNTI4NFwnMDJcJzAxLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGkxNDQwXGpjbGlzdHRhYlx0eDE0NDBcbGluMTQ0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yDQpcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0zNzYxNTE0MzhcJzAyXCcwMi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpMjE2MFxqY2xpc3R0YWJcdHgyMTYwXGxpbjIxNjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMA0KXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ0MjM2Mzc5NjZcJzAyXCcwMy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMjg4MFxqY2xpc3R0YWJcdHgyODgwXGxpbjI4ODAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMA0KXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtMTM3MDU4MTI1MlwnMDJcJzA0Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGkzNjAwXGpjbGlzdHRhYlx0eDM2MDBcbGluMzYwMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yDQpcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0xMjY5NTE4MzQyXCcwMlwnMDUuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTE4MFxsaTQzMjBcamNsaXN0dGFiXHR4NDMyMFxsaW40MzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjANClxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTEzNjY0MjQwNTRcJzAyXCcwNi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpNTA0MFxqY2xpc3R0YWJcdHg1MDQwXGxpbjUwNDAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMA0KXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtMjI4OTc5ODU0XCcwMlwnMDcuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTU3NjBcamNsaXN0dGFiXHR4NTc2MFxsaW41NzYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjINClxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTIwMzI0ODMxMDRcJzAyXCcwOC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpNjQ4MFxqY2xpc3R0YWJcdHg2NDgwXGxpbjY0ODAgfXtcbGlzdG5hbWUgO31cbGlzdGlkMTk2NDQ2MTQxM319DQp7XCpcbGlzdG92ZXJyaWRldGFibGV7XGxpc3RvdmVycmlkZVxsaXN0aWQtMTE5XGxpc3RvdmVycmlkZWNvdW50MFxsczF9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkLTEyNVxsaXN0b3ZlcnJpZGVjb3VudDBcbHMyfXtcbGlzdG92ZXJyaWRlXGxpc3RpZC0xMjZcbGlzdG92ZXJyaWRlY291bnQwXGxzM317XGxpc3RvdmVycmlkZVxsaXN0aWQtMTI3XGxpc3RvdmVycmlkZWNvdW50MFxsczR9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkLTEyOA0KXGxpc3RvdmVycmlkZWNvdW50MFxsczV9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkLTEyMFxsaXN0b3ZlcnJpZGVjb3VudDBcbHM2fXtcbGlzdG92ZXJyaWRlXGxpc3RpZC0xMjlcbGlzdG92ZXJyaWRlY291bnQwXGxzN317XGxpc3RvdmVycmlkZVxsaXN0aWQtMTMwXGxpc3RvdmVycmlkZWNvdW50MFxsczh9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkLTEzMVxsaXN0b3ZlcnJpZGVjb3VudDBcbHM5fXtcbGlzdG92ZXJyaWRlXGxpc3RpZC0xMzINClxsaXN0b3ZlcnJpZGVjb3VudDBcbHMxMH17XGxpc3RvdmVycmlkZVxsaXN0aWQxNzA5MTQzMTE0XGxpc3RvdmVycmlkZWNvdW50MFxsczExfXtcbGlzdG92ZXJyaWRlXGxpc3RpZDcyNjMzOTI5MVxsaXN0b3ZlcnJpZGVjb3VudDBcbHMxMn17XGxpc3RvdmVycmlkZVxsaXN0aWQ3OTU2Nzg4MjVcbGlzdG92ZXJyaWRlY291bnQwXGxzMTN9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkNjI0Nzc0Nzg0XGxpc3RvdmVycmlkZWNvdW50MFxsczE0fQ0Ke1xsaXN0b3ZlcnJpZGVcbGlzdGlkMTgxNjcyNTgyM1xsaXN0b3ZlcnJpZGVjb3VudDBcbHMxNX17XGxpc3RvdmVycmlkZVxsaXN0aWQ5NTUzMzY1OTlcbGlzdG92ZXJyaWRlY291bnQwXGxzMTZ9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkMTQ2NzA4OTczOFxsaXN0b3ZlcnJpZGVjb3VudDBcbHMxN317XGxpc3RvdmVycmlkZVxsaXN0aWQxOTY0NDYxNDEzXGxpc3RvdmVycmlkZWNvdW50MFxsczE4fXtcbGlzdG92ZXJyaWRlXGxpc3RpZDk3MzIxNjY0Nw0KXGxpc3RvdmVycmlkZWNvdW50MFxsczE5fXtcbGlzdG92ZXJyaWRlXGxpc3RpZDEzMjA3NjgwMDNcbGlzdG92ZXJyaWRlY291bnQwXGxzMjB9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkNjcxOTUwMzk1XGxpc3RvdmVycmlkZWNvdW50MFxsczIxfXtcbGlzdG92ZXJyaWRlXGxpc3RpZDIzMTUwNTg1OVxsaXN0b3ZlcnJpZGVjb3VudDBcbHMyMn17XGxpc3RvdmVycmlkZVxsaXN0aWQxNjUxNzkwNzY2XGxpc3RvdmVycmlkZWNvdW50MFxsczIzfQ0Ke1xsaXN0b3ZlcnJpZGVcbGlzdGlkMTEwMTAzMTI3NFxsaXN0b3ZlcnJpZGVjb3VudDBcbHMyNH17XGxpc3RvdmVycmlkZVxsaXN0aWQ0NDI1NzQ4NjBcbGlzdG92ZXJyaWRlY291bnQwXGxzMjV9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkMTE1MzI1OTkzMFxsaXN0b3ZlcnJpZGVjb3VudDBcbHMyNn19e1wqXHJzaWR0YmwgXHJzaWQ5MDUxNlxyc2lkMTAxODA1Njd9e1xtbWF0aFByXG1tYXRoRm9udDM0XG1icmtCaW4wXG1icmtCaW5TdWIwDQpcbXNtYWxsRnJhYzBcbWRpc3BEZWYxXG1sTWFyZ2luMFxtck1hcmdpbjBcbWRlZkpjMVxtd3JhcEluZGVudDE0NDBcbWludExpbTBcbW5hcnlMaW0xfXtcaW5mb3tcY3JlYXRpbVx5cjIwMTZcbW8xMFxkeTI2XGhyOVxtaW4yMX17XHJldnRpbVx5cjIwMTZcbW8xMFxkeTI2XGhyOVxtaW4yMX17XHZlcnNpb24xfXtcZWRtaW5zMH17XG5vZnBhZ2VzMTJ9e1xub2Z3b3JkczM2Njl9e1xub2ZjaGFyczIwOTE5fXtcbm9mY2hhcnN3czI0NTM5fQ0Ke1x2ZXJuNDkxNjd9fXtcKlx4bWxuc3RibCB7XHhtbG5zMSBodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL29mZmljZS93b3JkLzIwMDMvd29yZG1sfX1ccGFwZXJ3MTIyNDBccGFwZXJoMTU4NDBcbWFyZ2wxNDQwXG1hcmdyMTQ0MFxtYXJndDE0NDBcbWFyZ2IxMDgwXGd1dHRlcjBcbHRyc2VjdCANClx3aWRvd2N0cmxcZnRuYmpcYWVuZGRvY1x0cmFja21vdmVzMFx0cmFja2Zvcm1hdHRpbmcxXGRvbm90ZW1iZWRzeXNmb250MVxyZWx5b252bWwwXGRvbm90ZW1iZWRsaW5nZGF0YTBcZ3JmZG9jZXZlbnRzMFx2YWxpZGF0ZXhtbDFcc2hvd3BsYWNlaG9sZHRleHQwXGlnbm9yZW1peGVkY29udGVudDBcc2F2ZWludmFsaWR4bWwwXHNob3d4bWxlcnJvcnMxXG5veGxhdHRveWVuDQpcZXhwc2hydG5cbm91bHRybHNwY1xkbnRibG5zYmRiXG5vc3BhY2Vmb3J1bFxmb3Jtc2hhZGVcaG9yemRvY1xkZ21hcmdpblxkZ2hzcGFjZTEyMFxkZ3ZzcGFjZTE4MFxkZ2hvcmlnaW4xNDQwXGRndm9yaWdpbjE0NDBcZGdoc2hvdzJcZGd2c2hvdzENClxqZXhwYW5kXHZpZXdraW5kMVx2aWV3c2NhbGUxMjBccGdicmRyaGVhZFxwZ2JyZHJmb290XHNwbHl0d25pbmVcZnRubHl0d25pbmVcaHRtYXV0c3Bcbm9sbmh0YWRqdGJsXHVzZWx0YmFsblxhbG50YmxpbmRcbHl0Y2FsY3RibHdkXGx5dHRibHJ0Z3JcbG5icmtydWxlXHJlbXBlcnNvbmFsaW5mb1xub2prZXJucHVuY3RccnNpZHJvb3QxMDE4MDU2N1x1dGlubCBcZmV0MHtcKlx3Z3JmZm10ZmlsdGVyIDAxM2Z9XGlsZm9tYWNhdGNsbnVwMA0Ke1wqXHRlbXBsYXRlIEM6XFxkb2N1bWVudHMgYW5kIHNldHRpbmdzXFxyc3BlZWRcXG1hY3BhY1xccGVyc29uYWxcXEJsYW5rLmRvdH17XCpcZnRuc2VwIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkwXHJpMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiBcY2hmdG5zZXAgDQpccGFyIH19e1wqXGZ0bnNlcGMgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2IFxjaGZ0bnNlcGMgDQpccGFyIH19e1wqXGFmdG5zZXAgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2IFxjaGZ0bnNlcCANClxwYXIgfX17XCpcYWZ0bnNlcGMgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2IFxjaGZ0bnNlcGMgDQpccGFyIH19XGx0cnBhciBcc2VjdGQgXGx0cnNlY3RccHN6MVxwZ25yZXN0YXJ0XGxpbmV4MFxoZWFkZXJ5NDMyXGZvb3RlcnkzNjBcZW5kbmhlcmVcc2VjdHVubG9ja2VkMVxzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDEwMTg5MzA5XHNmdG5iaiB7XGhlYWRlcmwgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHMxNVxxbCBcbGkwXHJpMFxub3dpZGN0bHBhcg0KXHRxY1x0eDQ2ODBcdHFyXHR4OTM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQxMTA1OTggDQpccGFyIH19e1xoZWFkZXJyIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWwgXGxpMFxyaTBcbm93aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MTEwNTk4IA0KXHBhciB9fXtcZm9vdGVybCBcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJcczE2XHFsIFxsaTBccmkwXG5vd2lkY3RscGFyXHRxY1x0eDQ2ODBcdHFyXHR4OTM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDExMDU5OCANClxwYXIgfX17XGZvb3RlcnIgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHMxNlxxbCBcbGkwXHJpMFxub3dpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgXHRhYiBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGNzMzZcaW5zcnNpZDkwNTE2ICBQQUdFIH19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxjczM2XGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkMTAxODA1NjcgMX19fVxzZWN0ZCBcbHRyc2VjdA0KXGxpbmV4MFxlbmRuaGVyZVxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ5MjQ0OTQgDQpccGFyIH19e1xoZWFkZXJmIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWwgXGxpMFxyaTBcbm93aWRjdGxwYXJcdHg2NDgwXHR4NzIwMFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ5MjQ0OTQgDQpccGFyIH19e1xmb290ZXJmIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxzMTZccWwgXGxpMFxyaTBcbm93aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MTEwNTk4IA0KXHBhciB9fXtcKlxwbnNlY2x2bDFccG51Y3JtXHBuc3RhcnQxXHBuaW5kZW50NzIwXHBuaGFuZyB7XHBudHh0YSAufX17XCpccG5zZWNsdmwyXHBudWNsdHJccG5zdGFydDFccG5pbmRlbnQ3MjBccG5oYW5nIHtccG50eHRhIC59fXtcKlxwbnNlY2x2bDNccG5kZWNccG5zdGFydDFccG5pbmRlbnQ3MjBccG5oYW5nIHtccG50eHRhIC59fXtcKlxwbnNlY2x2bDRccG5sY2x0clxwbnN0YXJ0MVxwbmluZGVudDcyMFxwbmhhbmcge1xwbnR4dGEgKX19DQp7XCpccG5zZWNsdmw1XHBuZGVjXHBuc3RhcnQxXHBuaW5kZW50NzIwXHBuaGFuZyB7XHBudHh0YiAofXtccG50eHRhICl9fXtcKlxwbnNlY2x2bDZccG5sY2x0clxwbnN0YXJ0MVxwbmluZGVudDcyMFxwbmhhbmcge1xwbnR4dGIgKH17XHBudHh0YSApfX17XCpccG5zZWNsdmw3XHBubGNybVxwbnN0YXJ0MVxwbmluZGVudDcyMFxwbmhhbmcge1xwbnR4dGIgKH17XHBudHh0YSApfX17XCpccG5zZWNsdmw4DQpccG5sY2x0clxwbnN0YXJ0MVxwbmluZGVudDcyMFxwbmhhbmcge1xwbnR4dGIgKH17XHBudHh0YSApfX17XCpccG5zZWNsdmw5XHBubGNybVxwbnN0YXJ0MVxwbmluZGVudDcyMFxwbmhhbmcge1xwbnR4dGIgKH17XHBudHh0YSApfX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczQ4XHFjIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkOTY0MDIzNCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxpXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpMFxpbnNyc2lkMTU4NTE4MCANClxwYXIgDQpccGFyIA0KXHBhciANClxwYXIgDQpccGFyIA0KXHBhciANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpMFxpbnNyc2lkMjQ0MTYyMiANClxwYXIgfVxwYXJkIFxsdHJwYXJcczQ4XHFjIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTM3MTg4OTYge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGkwXGluc3JzaWQxNTg1MTgwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNDhccWMgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ5NjQwMjM0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpMFxpbnNyc2lkMTU4NTE4MCANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJccWMgXGxpMFxyaTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNTg1MTgwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjBcYWZzMzYgDQpcbHRyY2hcZmNzMCBcYlxmczM2XGluc3JzaWQ5MDUxNiBBR1JFRU1FTlQgfXtccnRsY2hcZmNzMSBcYWYwXGFmczM2IFxsdHJjaFxmY3MwIFxiXGZzMzZcaW5zcnNpZDYwNDY3NTkgDQpccGFyIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMzYgXGx0cmNoXGZjczAgXGJcZnMzNlxpbnNyc2lkOTA1MTYgRk9SfXtccnRsY2hcZmNzMSBcYWYwXGFmczM2IFxsdHJjaFxmY3MwIFxiXGZzMzZcaW5zcnNpZDYwNDY3NTkgDQpccGFyIA0KXHBhciB9XHBhcmQgXGx0cnBhclxxYyBcbGkwXHJpMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDYwNDY3NTkge1xydGxjaFxmY3MxIFxhZjBcYWZzMzYgXGx0cmNoXGZjczAgXGJcZnMzNlxpbnNyc2lkOTA1MTZcY2hhcnJzaWQxNTg1MTgwIFdIT0xFU0FMRSBESVNUUklCVVRJT04gU0VSVklDRSB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMzYgDQpcbHRyY2hcZmNzMCBcYlxmczM2XGluc3JzaWQ2MDQ2NzU5IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMzYgXGx0cmNoXGZjczAgXGJcZnMzNlxpbnNyc2lkMTU4NTE4MFxjaGFycnNpZDE1ODUxODAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFjIFxsaTBccmkwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTU4NTE4MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxmczMyXGluc3JzaWQxNTg1MTgwIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcZnMzMlxpbnNyc2lkOTA1MTYgQmV0d2Vlbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxmczMyXGluc3JzaWQxNTg1MTgwIA0KXHBhciANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGZzMzJcaW5zcnNpZDkwNTE2ICBBbGdlciBEZWx0YSBDb29wZXJhdGl2ZSBFbGVjdHJpYyBBc3NvY2lhdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxmczMyXGluc3JzaWQxNTg1MTgwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxxYyBcbGkwXHJpMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDU2MDA2MTQge1xydGxjaFxmY3MxIFxhZjBcYWZzMzIgXGx0cmNoXGZjczAgXGJcZnMzMlxpbnNyc2lkOTA1MTZcY2hhcnJzaWQxMzk4ODAwNCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGZzMzJcaW5zcnNpZDE1ODUxODAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFjIFxsaTBccmkwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTU4NTE4MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxmczMyXGluc3JzaWQ5MDUxNiBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcZnMzMlxpbnNyc2lkMTU4NTE4MCANClxwYXIgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxmczMyXGluc3JzaWQ5MDUxNiBVcHBlciBNaWNoaWdhbiBFbmVyZ3kgUmVzb3VyY2VzIENvcnBvcmF0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGZzMzJcaW5zcnNpZDE1ODUxODAgDQpccGFyIA0KXHBhciANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGZzMzJcaW5zcnNpZDE5ODU1OTUgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFjIFxsaTBccmkwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxOTg1NTk1IHtccnRsY2hcZmNzMSBcYWYwXGFmczMyIFxsdHJjaFxmY3MwIFxiXGZzMzJcaW5zcnNpZDkwNTE2XGNoYXJyc2lkMTk4NTU5NSBGfXtccnRsY2hcZmNzMSBcYWYwXGFmczMyIFxsdHJjaFxmY3MwIA0KXGJcZnMzMlxpbnNyc2lkOTA1MTYgRVJDIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMzMiBcbHRyY2hcZmNzMCBcYlxmczMyXGluc3JzaWQ1MzY2ODYgUmF0ZSBTY2hlZHVsZX17XHJ0bGNoXGZjczEgXGFmMFxhZnMzMiBcbHRyY2hcZmNzMCBcYlxmczMyXGluc3JzaWQ5MDUxNiAgTm8uIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMzMiBcbHRyY2hcZmNzMCBcYlxmczMyXGluc3JzaWQxMDk3MjI1MCAzfXtccnRsY2hcZmNzMSBcYWYwXGFmczMyIA0KXGx0cmNoXGZjczAgXGJcZnMzMlxpbnNyc2lkMTk4NTU5NVxjaGFycnNpZDE5ODU1OTUgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM0OFxxYyBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDk2NDAyMzQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcaVxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaTBcaW5zcnNpZDE1ODUxODAgDQpccGFyIA0KXHBhciANClxwYXIgDQpccGFyIA0KXHBhciANClxwYXIgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaTBcaW5zcnNpZDU2MDA2MTQgDQpccGFyIA0KXHBhciANClxwYXIgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaTBcaW5zcnNpZDE1ODUxODAgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaTBcaW5zcnNpZDE1NjA3NzE1IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGkwXGluc3JzaWQ5MDUxNiBBR1JFRU1FTlQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpMFxpbnNyc2lkMTA1Nzg4NDAgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaTBcaW5zcnNpZDkwNTE2IEZPUiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGkwXGluc3JzaWQxMDU3ODg0MCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpMFxpbnNyc2lkOTA1MTYgV0hPTEVTQUxFIERJU1RSSUJVVElPTiBTRVJWSUNFIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaTBcaW5zcnNpZDU0NDQ3NzkgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NDQ0Nzc5IA0KDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDEzOTg4MDA0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgXHRhYiBUaGlzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDYwNDY3NTkgQWdyZWVtZW50IGZvciB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2IFdob2xlc2FsZSBEaXN0cmlidXRpb24gU2VydmljZSAoXCc5M0FncmVlbWVudFwnOTQpIGVudGVyZWQgaW50byB0aGlzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NTY2MzEzXGNoYXJyc2lkMTQ1NjYzMTMgMjB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHN1cGVyXGluc3JzaWQxNDU2NjMxM1xjaGFycnNpZDE0NTY2MzEzIHRofXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGhpZ2hsaWdodDdcaW5zcnNpZDE0NTY2MzEzICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNlxjaGFycnNpZDE1MzM4MTc2IGRheSBvZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMzY1MDg0XGNoYXJyc2lkMTUzMzgxNzYgT2N0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMDUxNDM1XGNoYXJyc2lkMTUzMzgxNzYgYmVyfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5Nzg0ODUyXGNoYXJyc2lkMTUzMzgxNzYgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxOTI3MjRcY2hhcnJzaWQxNTMzODE3NiAyMH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU2NTE4NzdcY2hhcnJzaWQxNTMzODE3NiAxfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ5Nzg0ODUyXGNoYXJyc2lkMTUzMzgxNzYgNn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2ICBzZXRzIGZvcnRoIHRoZSB0ZXJtcyBhbmQgY29uZGl0aW9ucyBvZiBhIGNvbnRyYWN0IGZvciB0aGUgcHJvdmlzaW9uIG9mIFdob2xlc2FsZSBEaXN0cmlidXRpb24gU2VydmljZSBiZXR3ZWVuIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzA1MTQzNSANClVwcGVyIE1pY2hpZ2FuIEVuZXJneSBSZXNvdXJjZXMgQ29ycG9yYXRpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiAgKFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzA1MTQzNSBVTUVSQ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2IFwnOTQpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM5ODgwMDQgLH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU3OTUxODMgYW5kIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwNDQ0Mjc1IEFsZ2VyIERlbHRhIENvb3BlcmF0aXZlIEVsZWN0cmljIEFzc29jaWF0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgIChcJzkzfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDQ0NDI3NSBBbGdlciBEZWx0YX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2IFwnOTQpLCBzb21ldGltZXMgaGVyZWluYWZ0ZXIgcmVmZXJyZWQgdG8gaW5kaXZpZHVhbGx5IGFzIFwnOTNQYXJ0eVwnOTQgYW5kIGNvbGxlY3RpdmVseSBhcyBcJzkzUGFydGllc1wnOTQufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTQ0NDc3OSANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMFxyaTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NDQ0Nzc5IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiBcdGFiIFdIRVJFQVMsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwNDQ0Mjc1IEFsZ2VyIERlbHRhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTc4NDg1MiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjExNDg3NCBwdXJjaGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyMzY1MDg0IGVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjExNDg3NCAgaXRzIHBvd2VyIHN1cHBseSBuZWVkcyBmcm9tIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMzY0MDc1IFdQUEkgRW5lcmd5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgO317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NDQ3NzkgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1MTU3NjMwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcZmk3MjBcbGkwXHJpMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDcwMjI0NDgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiBXSEVSRUFTLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDQ0NDI3NSBBbGdlciBEZWx0YX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkODU4NjIzMiBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwNDQ0Mjc1IHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ3MDIyNDQ4ICBwb3dlciBzdXBwbHkgaXMgZGVsaXZlcmVkIHRvIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwNDQ0Mjc1IEFsZ2VyIERlbHRhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ3MDIyNDQ4ICBvdmVyIGZhY2lsaXRpZXMgb3duZWQgYnkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMwNTE0MzUgVU1FUkN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNDMxMTM5IDt9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzg2MTcyICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDM3MTYwNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNzAyMjQ0OCANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMFxyaTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiBcdGFiIFdIRVJFQVMsIGluIG9yZGVyIHRvIGVmZmVjdCBpdHMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTAzNzUzOTEgcH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMjE5MjcyNCBvd2VyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwMzc1MzkxIHN1cHBseSBwdXJjaGFzZXMsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwNDQ0Mjc1IEFsZ2VyIERlbHRhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTAzNzUzOTEgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2IA0KcmVxdWlyZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIzNjUwODQgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2ICBXaG9sZXNhbGUgRGlzdHJpYnV0aW9uIFNlcnZpY2Ugb3ZlciBmYWNpbGl0aWVzIG93bmVkIGJ5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMDUxNDM1IFVNRVJDfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNjYyNzc1IDsgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTQ0NDc3OSANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzAzMzQxNiANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGZpNzIwXGxpMFxyaTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQzMDMzNDE2IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMwMzM0MTYgV0hFUkVBU317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTUzNDc5ODEgLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMwMzM0MTYgIEFsZ2VyIERlbHRhIGFuZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzA1MTQzNSBVTUVSQ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMwMzM0MTYgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2IGhhdmUgbXV0dWFsbHkgYWdyZWVkIHRvfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzMDMzNDE2ICBpbXBsZW1lbnQgdGhpcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDcxMzc4MyBBZ3JlZW1lbnQgZm9yIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMwMzM0MTYgV2hvbGVzYWxlIERpc3RyaWJ1dGlvbiBTZXJ2aWNlLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2ICAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5Nzg0ODUyIA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkwXHJpMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NDQ3NzkgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2IFx0YWIgTk9XLCBUSEVSRUZPUkUsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMzY0MDc1IGluIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2IGNvbnNpZGVyYXRpb24gb2YgdGhlIG11dHVhbCBhZ3JlZW1lbnRzIGNvbnRhaW5lZCBoZXJlaW4sIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTMwNTE0MzUgVU1FUkN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiAgYW5kIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwNDQ0Mjc1IEFsZ2VyIERlbHRhIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2IGFncmVlIGFzIGZvbGxvd3M6fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTQ0NDc3OSANClxwYXIgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxLlx0YWJ9fVxwYXJkIFxsdHJwYXJccWwgXGZpLTM2MFxsaTM2MFxyaTBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMjRcYWRqdXN0cmlnaHRccmluMFxsaW4zNjBcaXRhcDAge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDkwNTE2IERFRklOSVRJT05TOlxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2IFxsaW5lIFRoZSBmb2xsb3dpbmcgdGVybXMsIHdoZW4gdXNlZCBoZXJlaW4gd2l0aCBpbml0aWFsIGNhcGl0YWxpemF0aW9uLCB3aGV0aGVyIGluIHRoZSBzaW5ndWxhciBvciB0aGUgcGx1cmFsLCBzaGFsbCBoYXZlIHRoZSBtZWFuaW5nIHNwZWNpZmllZDpcbGluZSB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NDQ3NzkgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2hhcnJzaWQ0MDc5MzkwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDEuMS5cdGFifX1ccGFyZCBcbHRycGFyXHFsIFxmaS00MzJcbGk4ODJccmkwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHg4ODJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczI0XGlsdmwxXGFkanVzdHJpZ2h0XHJpbjBcbGluODgyXGl0YXAwIA0Ke1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5MDUxNlxjaGFycnNpZDQwNzkzOTAgQVRDfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgIHNoYWxsIG1lYW4gdGhlIEFtZXJpY2FuIFRyYW5zbWlzc2lvbiBDb21wYW55LCBMTEMufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjE2MjY0NSANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpODgyXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjg4MlxpdGFwMFxwYXJhcnNpZDYxNjI2NDUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MTYyNjQ1IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNoYXJyc2lkNTgzODk0NiBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxLjIuXHRhYn19XHBhcmQgXGx0cnBhclxxbCBcZmktNDMyXGxpODgyXHJpMFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHg4ODJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczI0XGlsdmwxXGFkanVzdHJpZ2h0XHJpbjBcbGluODgyXGl0YXAwIHtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTA1MTZcY2hhcnJzaWQ1ODM4OTQ2IENvb3JkaW5hdGVkIEZ1bmN0aW9uYWwgUmVnaXN0cmF0aW9uIChDRlIpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgDQogc2hhbGwgbWVhbiBhbiBhZ3JlZW1lbnQgaW4gd3JpDQp0aW5nIGJldHdlZW4gb3IgYW1vbmcgdHdvIG9yIG1vcmUgZW50aXRpZXMgKHBhcnRpZXMpIHVwb24gYSBkaXZpc2lvbiBvZiBjb21wbGlhbmNlIHJlc3BvbnNpYmlsaXR5IGFtb25nIHRoZSBwYXJ0aWVzIGZvciBvbmUgb3IgbW9yZSBSZWxpYWJpbGl0eSBTdGFuZGFyZChzKSBhcHBsaWNhYmxlIHRvIGEgcGFydGljdWxhciBmdW5jdGlvbiwgYW5kL29yIGZvciBvbmUgb3IgbW9yZSBSZXF1aXJlbWVudChzKS9zdWItUmVxdWlyZW1lbnQocykgd2l0aGkNCm4gcGFydGljdWxhciBSZWxpYWJpbGl0eSBTdGFuZGFyZChzKS5cbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NDQ0Nzc5XGNoYXJyc2lkMzc1NDI2MiANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDEuMy5cdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDkwNTE2IENvbW1pc3Npb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNlxjaGFycnNpZDcyMjg0NTYgIG9yIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkOTA1MTYgRkVSQ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2ICBzaGFsbCBtZWFuIHRoZSBGZWRlcmFsIEVuZXJneSBSZWd1bGF0b3J5IENvbW1pc3Npb24gb3IgaXRzIHJlZ3VsYXRvcnkgc3VjY2Vzc29yLlxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NDQ3NzkgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2hhcnJzaWQ1ODM4OTQ2IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDEuNC5cdGFifX1ccGFyZCBcbHRycGFyXHFsIFxmaS00MzJcbGk4ODJccmkwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDg4Mlx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMjRcaWx2bDFcYWRqdXN0cmlnaHRccmluMFxsaW44ODJcaXRhcDBccGFyYXJzaWQ1ODM4OTQ2IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTA1MTZcY2hhcnJzaWQ1ODM4OTQ2IEZvcmNlIE1hamV1cmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiANCiBzaGFsbCBtZWFuIGFueSBjYXVzZSBiZXlvbmQgdGhlIGNvbnRyb2wgb2YgYW4gYWZmZWN0ZWQgUGFydHkgdGhhdCwgYnkgZXhlcmNpc2Ugb2YgZHVlIGRpbGlnZW5jZSwgc3VjaCBQDQphcnR5IGNvdWxkIG5vdCByZWFzb25hYmx5IGhhdmUgYmVlbiBleHBlY3RlZCB0byBhdm9pZCBhbmQgdGhhdCwgYnkgZXhlcmNpc2Ugb2YgZHVlIGRpbGlnZW5jZSwgaXQgaGFzIGJlZW4gdW5hYmxlIHRvIG92ZXJjb21lLiAgU3VjaCBjYXVzZXMsIGluY2x1ZGUsIGJ1dCBhcmUgbm90IHJlc3RyaWN0ZWQgdG8gdGhlIGZvbGxvd2luZzogZmFpbHVyZSBvZiBvciB0aHJlYXQgb2YgZmFpbHVyZSBvZiBmYWNpbGl0aWVzLCBmbG9vZCwgZHJvdWdodCwgZWENCnINCnRocXVha2UsIHN0b3JtLCBmaXJlLCBsaWdodG5pbmcsIGVwaWRlbWljLCB3YXIsIHJpb3QsIGNpdmlsIGRpc3R1cmJhbmNlIG9yIGRpc29iZWRpZW5jZSwgbGFib3IgZGlzcHV0ZSwgbGFib3Igb3IgbWF0ZXJpYWwgc2hvcnRhZ2UsIHNhYm90YWdlLCByZXN0cmFpbnQgYnkgY291cnQgb3JkZXIgb3IgcHVibGljIGF1dGhvcml0eSwgYW5kIGFjdGlvbiBvciBub24tYWN0aW9uIGJ5IG9yIGZhaWx1cmUgdG8gb2J0YWluIHRoZSBuZWNlc3NhcnkgYXV0aA0Kb3JpemF0aW9ucyBvciBhcHByb3ZhbHMgZnJvbSBhbnkgZ292ZXJubWVudGFsIGFnZW5jeSBvciBhdXRob3JpdHkuXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTQ0NDc3OSANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjaGFycnNpZDQzNDYxNTkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMS41Llx0YWJ9fVxwYXJkIFxsdHJwYXJccWwgXGZpLTQzMlxsaTg4MlxyaTBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDg4Mlx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMjRcaWx2bDFcYWRqdXN0cmlnaHRccmluMFxsaW44ODJcaXRhcDAgDQp7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDkwNTE2XGNoYXJyc2lkNDM0NjE1OSBHb29kIFV0aWxpdHkgUHJhY3RpY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiANCiBzaGFsbCBtZWFuIGFueSBvZiB0aGUgcHJhY3RpY2VzLCBtZXRob2RzLCBhbmQgYWN0cyBlbmdhZ2VkIGluIG9yIGFwcHJvdmVkIGJ5IGEgc2lnbmlmaWNhbnQgcG9ydGlvbiBvZiB0aGUgZWxlY3RyaWMgdXRpbGl0eSBpbmR1c3RyeSBsb2NhdGVkIHdpdGhpbiB0aGUgTUlTTyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzkxNzUwMVxjaGFycnNpZDE0MTcyNjY2IGFyZWF9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDEzOTE3NTAxICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiBkdXJpbmcgdGhlIHJlbGV2YW50IHRpbWUgcGVyaW9kLCBvciBhbnkgb2YgdGhlIHByYWN0aWNlcywgbWV0aG9kcywgYW5kIGFjdHMgdGhhdCwgaW4gdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MTcyNjY2IGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDkwNTE2IHhlcmNpc2Ugb2YgcmVhc29uYWJsZSBqdWRnbWVudCBpbiBsaWdodCBvZiB0aGUgZmFjdHMga25vd24gYXQgdGhlIHRpbWUgdGhlIGRlY2lzaW9uIHdhcyBtYWRlLCBjb3VsZCBoYXZlIGJlZW4gZXhwZWN0ZWQgdG8gcHJvZHVjZSBhIHNhZmUsIGRlc2lyYWJsZSByZXN1bHQsIGFjaGlldmVkIGV4cGVkaXRpb3VzbHkgYW5kIGF0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTM5MTc1MDFcY2hhcnJzaWQxNDE3MjY2NiBhIHJlYXNvbmFibGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzkxNzUwMSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgDQpjb3N0IGNvbnNpc3RlbnQgd2l0aCBnb29kIGJ1c2luZXNzIHByYWN0aWNlcy4gIEdvb2QgVXRpbGl0eSBQcmFjdGljZSBpcyBub3QgaW50ZW5kZWQgdG8gYmUgbGltaXRlZCB0byB0aGUgb3B0aW11bSBwcmFjdGljZSwgbWV0aG9kLCBvciBhY3QgdG8gdGhlIGV4Y2x1c2lvbiBvZiBhbGwgb3RoZXJzLCBidXQgcmF0aGVyIHRvIGJlIGEgcmFuZ2Ugb2YgYWNjZXB0YWJsZSBwcmFjdGljZXMsIG1ldGhvZHMsIG9yIGFjdHMgdXNlZCB3aXRoaW4gTUlTTy4NCn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQzNDYxNTkgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTM2MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4zNjBcaXRhcDBccGFyYXJzaWQ0MzQ2MTU5IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDM0NjE1OVxjaGFycnNpZDQzNDYxNTkgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxLjYuXHRhYn19XHBhcmQgXGx0cnBhclxxbCBcZmktNDMyXGxpODgyXHJpMFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4ODgyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMyNFxpbHZsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjg4MlxpdGFwMCB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTA1MTYgTUlTT317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2ICBzaGFsbCBtZWFuIHRoZSBNaWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTczNDg2MCBjb250aW5lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiAgSW5kZXBlbmRlbnQgU3lzdGVtIE9wZXJhdG9yfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxMDM3Nzk3NSAsIEluY317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2IC5cbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NDQ0Nzc5IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNoYXJyc2lkMzYwNTQyOSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxLjcuXHRhYn19XHBhcmQgXGx0cnBhclxxbCBcZmktNDMyXGxpODgyXHJpMFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHg4ODJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczI0XGlsdmwxXGFkanVzdHJpZ2h0XHJpbjBcbGluODgyXGl0YXAwXHBhcmFyc2lkNjE2MjY0NSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDkwNTE2XGNoYXJyc2lkMzYwNTQyOSBNSVVQIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDU0NDQ3NzlcY2hhcnJzaWQzNjA1NDI5IA0KQmFsYW5jaW5nIEF1dGhvcml0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDkwNTE2XGNoYXJyc2lkMzYwNTQyOSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTA1MTZcY2hhcnJzaWQ3MzQ3MjYzIChNSVVQIEJBKX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NDQ3NzlcY2hhcnJzaWQ1MzE2MTg1ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDk1Mjg5MTBcY2hhcnJzaWQ1MzE2MTg1IHNoYWxsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NDQ3NzlcY2hhcnJzaWQ1MzE2MTg1IG1lYW4gdGhlIGZ1bmN0aW9uIG9mIFdpc2NvbnNpbiBFbGVjdHJpY317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NDQ3NzlcY2hhcnJzaWQzNjA1NDI5ICBhcyB0aGUgQmFsYW5jaW5nIEF1dGhvcml0eSB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2XGNoYXJyc2lkNzM0NzI2MyBmb3IgdGhlIE1JVVAgQmFsYW5jaW5nIEF1dGhvcml0eSBBcmVhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkODk4NTE4OSAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTQ0NDc3OVxjaGFycnNpZDUzMTYxODUgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2XGNoYXJyc2lkMTM0Mzc2NjQgDQpUaGUgTUlVUCBCQSByZXNwb25zaWJpbGl0aWVzIGFyZSBkZWxpbmVhdGVkIGluIHRoZSBDRlIgd2l0aCBNSVNPIGFzIG1haW50YWluZWQgYXQgTkVSQ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NDQ3NzlcY2hhcnJzaWQxNTEzMTQ0IC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MTYyNjQ1XGNoYXJyc2lkNTY0OTYzOSANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpODgyXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjg4MlxpdGFwMFxwYXJhcnNpZDYxNjI2NDUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MTYyNjQ1IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNoYXJyc2lkNTgzODk0NiBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxLjguXHRhYn19XHBhcmQgXGx0cnBhclxxbCBcZmktNDMyXGxpODgyXHJpMFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHg4ODJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczI0XGlsdmwxXGFkanVzdHJpZ2h0XHJpbjBcbGluODgyXGl0YXAwXHBhcmFyc2lkNjE2MjY0NSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDkwNTE2XGNoYXJyc2lkNTgzODk0NiBORVJDfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgDQogc2hhbGwgbWVhbiB0aGUgTm9ydGggQW1lcmljYW4gRWxlY3RyaWMgUmVsaWFiaWxpdHkgQ29ycG9yYXRpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzMTc1NDg3ICBvciBpdHMgc3VjY2Vzc29yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgLlxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NDQ3NzkgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxLjkuXHRhYn19XHBhcmQgXGx0cnBhclxxbCBcZmktNDMyXGxpODgyXHJpMFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4ODgyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMyNFxpbHZsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjg4MlxpdGFwMCB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTA1MTYgVGVybX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2ICBzaGFsbCBoYXZlIHRoZSBtZWFuaW5nIHNldCBmb3J0aCBpbiBTZWN0aW9uIDMgb2YgdGhpcyBBZ3JlZW1lbnQuXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjA1Mjk5MiANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjaGFycnNpZDQwMTA4NTAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMS4xMC5cdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDkwNTE2XGNoYXJyc2lkNDAxMDg1MCBVbmRlcmZyZXF1ZW5jeSBMb2FkIFNoZWRkaW5nIChVRkxTKX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkOTA1MTYgIHNoYWxsIG1lYW4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ2MjEyMDUgbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2IA0Kb2FkIHNoZWQgaW1wbGVtZW50ZWQgYnkgaW5zdGFsbGVkIGVxdWlwbWVudCBkZXNpZ25lZCB0byBhdXRvbWF0aWNhbGx5IHJlc3BvbmQgdG8sIGFuZCBhcnJlc3QgZGVjbGluaW5nIGZyZXF1ZW5jeS4gUmVsaWFiaWxpdHkgc3RhbmRhcmRzIHNwZWNpZnkgdGhlIGFtb3VudCBvZiBsb2FkIHNoZWQgYW5kIHRoZSBlbnRpdGllcyByZXNwb25zaWJsZSBmb3Igb3duZXJzaGlwLCBtYWludGVuYW5jZSwgYW5kIA0KcGVyZm9ybWFuY2Ugb2YgYSBVRkxTIHByb2dyYW0ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTQ0NDc3OSANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpODgyXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjg4MlxpdGFwMFxwYXJhcnNpZDQwMTA4NTAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0MDEwODUwIA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMS4xMS5cdGFifX1ccGFyZCBcbHRycGFyXHFsIFxmaS00MzJcbGk4ODJccmkwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHg4ODJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczI0XGlsdmwxXGFkanVzdHJpZ2h0XHJpbjBcbGluODgyXGl0YXAwIHtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5MDUxNiBXaG9sZXNhbGUgRGlzdHJpYnV0aW9uIFNlcnZpY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiAgc2hhbGwgbWVhbiB0aGUgdHJhbnNtaXNzaW9uIG9mIHBvd2VyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDc0Mzc0OTAgcHVyY2hhc2VkIGJ5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwNDQ0Mjc1IA0KQWxnZXIgRGVsdGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ3NDM3NDkwICB0byBtZWV0IGl0cyBwb3dlciBzdXBwbHkgbmVlZHMgb3ZlciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiBmYWNpbGl0aWVzIG93bmVkIGJ5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMDUxNDM1IFVNRVJDfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ5MDUxNiAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkODk4NTE4OSANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpODgyXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjg4MlxpdGFwMFxwYXJhcnNpZDEzNTI4MjgwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkODk4NTE4OSANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDEuMTIuXHRhYn19XHBhcmQgXGx0cnBhclxxbCBcZmktNDMyXGxpODgyXHJpMFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4ODgyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMyNFxpbHZsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjg4MlxpdGFwMFxwYXJhcnNpZDg5ODUxODkgDQp7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDkwNTE2IFdQU317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDkwNTE2XGNoYXJyc2lkMzYwNTQyOSAgQmFsYW5jaW5nIEF1dGhvcml0eSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5MDUxNlxjaGFycnNpZDczNDcyNjMgKH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDkwNTE2IFdQU317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTA1MTZcY2hhcnJzaWQ3MzQ3MjYzICBCQSl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNlxjaGFycnNpZDUzMTYxODUgIHNoYWxsIG1lYW4gdGhlIGZ1bmN0aW9uIG9mIFdpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgc2NvbnNpbiBQdWJsaWMgU2VydmljZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkOTA1MTZcY2hhcnJzaWQzNjA1NDI5ICBhcyB0aGUgQmFsYW5jaW5nIEF1dGhvcml0eSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNlxjaGFycnNpZDczNDcyNjMgZm9yIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiBXUFN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNlxjaGFycnNpZDczNDcyNjMgDQogQmFsYW5jaW5nIEF1dGhvcml0eSBBcmVhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2XGNoYXJyc2lkNTMxNjE4NSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTZcY2hhcnJzaWQxMzQzNzY2NCBUaGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgV1BTfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNlxjaGFycnNpZDEzNDM3NjY0ICBCQSByZXNwb25zaWJpbGl0aWVzIGFyZSBkZWxpbmVhdGVkIGluIHRoZSBDRlIgd2l0aCBNSVNPIGFzIG1haW50YWluZWQgYXQgTkVSQ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2XGNoYXJyc2lkMTUxMzE0NCAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkODk4NTE4OSANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpODgyXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjg4MlxpdGFwMFxwYXJhcnNpZDEzNTI4MjgwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTQ0NDc3OSANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDIuXHRhYn19XHBhcmQgXGx0cnBhclxxbCBcZmktMzYwXGxpMzYwXHJpMFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMyNFxhZGp1c3RyaWdodFxyaW4wXGxpbjM2MFxpdGFwMCB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTA1MTYgV0hPTEVTQUxFIERJU1RSSUJVVElPTiBTRVJWSUNFXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTQ0NDc3OSANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDIuMS5cdGFifX1ccGFyZCBcbHRycGFyXHFsIFxmaS00MzJcbGk4ODJccmkwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHg4ODJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczI0XGlsdmwxXGFkanVzdHJpZ2h0XHJpbjBcbGluODgyXGl0YXAwIHtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5MDUxNiBTYWxlIG9mIFdob2xlc2FsZSBEaXN0cmlidXRpb24gU2VydmljZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2ICBcZW5kYXNoICBGb3IgdGhlIGVudGlyZSBUZXJtIG9mIHRoaXMgQWdyZWVtZW50LCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzA1MTQzNSBVTUVSQ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkOTA1MTYgIHNoYWxsIHByb3ZpZGUgV2hvbGVzYWxlIERpc3RyaWJ1dGlvbiBTZXJ2aWNlIHRvIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwNDQ0Mjc1IEFsZ2VyIERlbHRhIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2IHNvbGVseSBmb3IgdGhlIHB1cnBvc2Ugb2Ygc3VwcGx5aW5nIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0Mjg1MzE5IA0KbG9hZCByZXF1aXJlbWVudHMgb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTA0NDQyNzUgQWxnZXIgRGVsdGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiAuICBUaGUgV2hvbGVzYWxlIERpc3RyaWJ1dGlvbiBTZXJ2aWNlIHNoYWxsIGJlIHByb3ZpZGVkIGJldHdlZW4gdGhlIHBvaW50IG9mDQogcmVjZWlwdCBhbmQgcG9pbnQgb2YgZGVsaXZlcnkgYW5kIG92ZXIgdGhlIGV4aXN0aW5nIGZhY2lsaXRpZXMgc3BlY2lmaWVkIGluIFNjaGVkdWxlIEEgb2YgdGhpcyBBZ3JlZW1lbnQgYW5kIHdpbGwgYWxsb3cgZW5lcmd5IGZsb3cgZWl0aGVyIGl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0Mjg1MzE5IG50bywgb3Igb3V0IG9mIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwNDQ0Mjc1IA0KQWxnZXIgRGVsdGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5OTcxMDkgLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2IFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NDQ3NzkgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAyLjIuXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5MDUxNiBPYmxpZ2F0aW9ucyBvZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxMDQ0NDI3NSBBbGdlciBEZWx0YX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgIFxlbmRhc2ggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDg1ODYyMzIgQnkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjQ5NzQ3MiBNYXl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ4NTg2MjMyICAxIG9mIGVhY2ggeWVhciwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTA0NDQyNzUgDQpBbGdlciBEZWx0YX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMzY0MDc1ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ4NTg2MjMyIHNoYWxsIHByb3ZpZGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMwNTE0MzUgVU1FUkN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiAgd2l0aCB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDg1ODYyMzIgYSBmb3JlY2FzdCBvZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDQ0NDI3NSBBbGdlciBEZWx0YX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDg1ODYyMzIgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDQ0NDI3NSBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkODU4NjIzMiANCiBtb250aGx5IHN5c3RlbSBwZWFrIGFuZCBlbmVyZ3kgcmVxdWlyZW1lbnRzIGZvciBlYWNoIG9mIHRoZSBmb2xsb3dpbmcgdGhyZWUgeWVhcnMgYW5kIGl0cyBzdW1tZXIgYW5kIHdpbnRlciBwZWFrcyBmb3IgZWFjaCBvZiB0aHJlZSBhZGRpdGlvbmFsIHllYXJzIGZvciBsb2FkIHRvIGJlIHNlcnZlZCBwdXJzdWFudCB0byB0aGlzIEFncmVlbWVudC4gIEZ1cnRoZXIsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTA0NDQyNzUgQWxnZXIgRGVsdGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTM2NDA3NSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkODU4NjIzMiBzaGFsbCBwcm92aWRlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMDUxNDM1IFVNRVJDfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkODU4NjIzMiANCiB3aXRoIHRpbWVseSBub3RpY2Ugb2YgYW55IGluZm9ybWF0aW9uIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2IHRoYXQgbWlnaHQgYWZmZWN0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMDUxNDM1IFVNRVJDfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgXHJxdW90ZSANCnMgYWJpbGl0eSB0byBwcm92aWRlIHJlbGlhYmxlIFdob2xlc2FsZSBEaXN0cmlidXRpb24gU2VydmljZSB1bmRlciB0aGlzIEFncmVlbWVudC5cbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NDQ0Nzc5IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMi4zLlx0YWJ9fVxwYXJkIFxsdHJwYXJccWwgXGZpLTQzMlxsaTg4MlxyaTBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDg4Mlx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMjRcaWx2bDFcYWRqdXN0cmlnaHRccmluMFxsaW44ODJcaXRhcDBccGFyYXJzaWQxMTQyMzc2OSANCntccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTA1MTYgT2JsaWdhdGlvbnMgb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTMwNTE0MzUgVU1FUkN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiAgXGVuZGFzaCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTAxMjQ0ODQgQnkgRmVicnVhcnkgMSBvZiBlYWNoIHllYXIsIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMwNTE0MzUgVU1FUkN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiAgc2hhbGwgcHJvdmlkZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDQ0NDI3NSBBbGdlciBEZWx0YX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwMTI0NDg0ICB3aXRoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkOTA1MTYgYSBmb3JlY2FzdCBvZiBwbGFubmVkIG1haW50ZW5hbmNlIGFuZCBjb25zdHJ1Y3Rpb24gYWN0aXZpdGllcyB0aGF0IG1heSBhZHZlcnNlbHkgYWZmZWN0IHRoZSBhYmlsaXR5IG9mIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMDUxNDM1IFVNRVJDfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgDQogdG8gcHJvdmlkZSBXaG9sZXNhbGUgRGlzdHJpYnV0aW9uIFNlcnZpY2UgdG8gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNzY4NDY1MyBBbGdlciBEZWx0YX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2IC4gIEZ1cnRoZXIsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMDUxNDM1IFVNRVJDfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ5MDUxNiAgc2hhbGwgcHJvdmlkZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDQ0NDI3NSBBbGdlciBEZWx0YX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2ICB3aXRoIHRpbWVseSBub3RpY2Ugb2YgYW55IHVuLXBsYW5uZWQgbWFpbnRlbmFuY2Ugb3IgYw0Kb25zdHJ1Y3Rpb24gYWN0aXZpdGllcyB0aGF0IG1pZ2h0IGFkdmVyc2VseSBhZmZlY3QgV2hvbGVzYWxlIERpc3RyaWJ1dGlvbiBTZXJ2aWNlIHRvIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwNDQ0Mjc1IEFsZ2VyIERlbHRhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgDQogYW5kIHdpbGwgZW5kZWF2b3IgdG8gY2Fycnkgb3V0IHN1Y2ggYWN0aXZpdGllcyBpbiBhIG1hbm5lciB0aGF0IHdpbGwgbWluaW1pemUgYWR2ZXJzZSBjb25zZXF1ZW5jZXMgYW5kIGN1cnRhaWxtZW50cyBvZiBXaG9sZXNhbGUgRGlzdHJpYnV0aW9uIFNlcnZpY2UgdG8gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTA0NDQyNzUgQWxnZXIgRGVsdGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDg2MTA5OTMgLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExNDIzNzY5IA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGk3OTJccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNzkyXGl0YXAwXHBhcmFyc2lkODYxMDk5MyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDg2MTA5OTNcY2hhcnJzaWQ3Mjk4NTQ5IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy5cdGFifX1ccGFyZCBcbHRycGFyXHFsIFxmaS0zNjBcbGkzNjBccmkwXGtlZXBuXHdpZGN0bHBhclxqY2xpc3R0YWJcdHgzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczI0XGFkanVzdHJpZ2h0XHJpbjBcbGluMzYwXGl0YXAwXHBhcmFyc2lkMTY1MTMzOSB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTA1MTYgVEVSTVxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NDQ3NzkgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAzLjEuXHRhYn19XHBhcmQgXGx0cnBhclxxbCBcZmktNDMyXGxpODgyXHJpMFxrZWVwblx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHg4ODJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczI0XGlsdmwxXGFkanVzdHJpZ2h0XHJpbjBcbGluODgyXGl0YXAwXHBhcmFyc2lkMTY1MTMzOSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDkwNTE2IFRlcm0gb2YgU2VydmljZSBBZ3JlZW1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiAgXGVuZGFzaCAgVGhlIFRlcm0gb317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTE0MjM3NjkgZiB0aGlzIEFncmVlbWVudCBzaGFsbCBiZWdpbiBvbiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDY5MzAzIHRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzYwNTQyOSBlIGxhdGVyIG9mIEphbnVhcnkgMSwgMjAxNyBvciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMjc3MjQgDQp1cG9uIHRoZSByZWNlaXB0IG9mIGFsbCBhcHBsaWNhYmxlIHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDY5MzAzIHRhdGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNjA1NDI5ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2OTQ3NzQ3IGFuZCBmZWRlcmFsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk0NjkzMDMgDQpyZWd1bGF0b3J5IGFwcHJvdmFsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjI3NzI0IHMgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NDY5MzAzICBVTUVSQ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU2NTE4NzcgLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2IA0KIGFuZCBzaGFsbCBjb250aW51ZSB1bnRpbCB0ZXJtaW5hdGVkIGJ5IGVpdGhlciBQYXJ0eSBpbiBhY2NvcmRhbmNlIHdpdGggU2VjdGlvbiAzLjIgb2YgdGhpcyBBZ3JlZW1lbnQufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4MDAwNjkgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTM2MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4zNjBcaXRhcDBccGFyYXJzaWQxNTgwMDA2OSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODAwMDY5IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy4yLlx0YWJ9fVxwYXJkIFxsdHJwYXJccWwgXGZpLTQzMlxsaTg4MlxyaTBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDg4Mlx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMjRcaWx2bDFcYWRqdXN0cmlnaHRccmluMFxsaW44ODJcaXRhcDAge1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDkwNTE2IFRlcm1pbmF0aW9uIG9mIFNlcnZpY2UgQWdyZWVtZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgIFxlbmRhc2ggIEVpdGhlciBQYXJ0eSBtYXkgdGVybWluYXRlIHRoaXMgQWdyZWVtZW50IGF0IGFueSB0aW1lIGFmdGVyIGdyYW50aW5nIHRoZSBvdGhlciBQYXJ0eSBvbmUgeWVhclxycXVvdGUgcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDM0NDAwNDYgd3JpdHRlbiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiBub3RpY2Ugb2YgaXRzIGludGVudCB0byB0ZXJtaW5hdGUgdGhlIEFncmVlbWVudCwgc3ViamVjdCB0byBhbnkgcmVndWxhdG9yeSBhcHByb3ZhbHMuXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTQ0NDc3OSANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDQuXHRhYn19XHBhcmQgXGx0cnBhclxxbCBcZmktMzYwXGxpMzYwXHJpMFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMyNFxhZGp1c3RyaWdodFxyaW4wXGxpbjM2MFxpdGFwMCB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTA1MTYgUkFURVMgQU5EIENIQVJHRVNcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NDQ0Nzc5IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNC4xLlx0YWJ9fVxwYXJkIFxsdHJwYXJccWwgXGZpLTQzMlxsaTg4MlxyaTBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDg4Mlx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMjRcaWx2bDFcYWRqdXN0cmlnaHRccmluMFxsaW44ODJcaXRhcDAge1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDkwNTE2IFJhdGUgZm9yIFdob2xlc2FsZSBEaXN0cmlidXRpb24gU2VydmljZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2ICBcZW5kYXNoICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDQ0NDI3NSBBbGdlciBEZWx0YSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiBzaGFsbCBwYXkgdG8gfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzA1MTQzNSBVTUVSQ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNlxjaGFycnNpZDI0OTc0NzIgJH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2XGNoYXJyc2lkMTM1MjgyODAgMywxfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTgxMDg1IDE3fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTZcY2hhcnJzaWQxMzUyODI4MCAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4MTA4NSA4Mn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2IA0KIHBlciBtb250aCBmb3IgdGhlIFdob2xlc2FsZSBEaXN0cmlidXRpb24gU2VydmljZSBwcm92aWRlZCB1bmRlciB0aGlzIEFncmVlbWVudCwgb3Igc3VjaCBvdGhlciByYXRlIGVzdGFibGlzaGVkIHB1cnN1YW50IHRvIFNlY3Rpb24gNC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNjM4NDc0IDN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiAgb2YgdGhpcyBBZ3JlZW1lbnQgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMTEwMTA5IGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiBzIGZvbGxvd3M6fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjEyNTcxMSANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMTIyNFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xMjI0XGl0YXAwXHBhcmFyc2lkMTQ3NzQ1NjAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcdWxcaW5zcnNpZDkwNTE2XGNoYXJyc2lkMTQ3NzQ1NjAgRGVsaXZlcnkgUG9pbnRcdGFiIFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGJcdWxcaW5zcnNpZDM0OTY4MzAgXHRhYiBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlx1bFxpbnNyc2lkOTA1MTZcY2hhcnJzaWQxNDc3NDU2MCBDaGFyZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NDQ3NzkgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgDQpHb3VybGV5XHRhYiBcdGFiIFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTZcY2hhcnJzaWQxMzUyODI4MCAkMix9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTgxMDg1IDU0Ny41OH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDYxMjU3MTEgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTEyMjRccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTIyNFxpdGFwMFxwYXJhcnNpZDYxMjU3MTEge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiBMYUJyYW5jaGVcdGFiIFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTZcY2hhcnJzaWQxMzUyODI4MCAkICAgNH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4MTA4NSA0MS40MX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDYxMjU3MTEgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2XGNoYXJyc2lkNzY3MTQ2NCBHLTEyIFJkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNzYxNDkyNCBcdGFiIFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM1MjgyODAgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTgxMDg1ICQgICAxMjguODN9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE1MTMxNDQgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTEyMjRccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTIyNFxpdGFwMFxwYXJhcnNpZDk0NTg5NzUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MTI1NzExIA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNC4yLlx0YWJ9fVxwYXJkIFxsdHJwYXJccWwgXGZpLTQzMlxsaTg4MlxyaTBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDg4Mlx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMjRcaWx2bDFcYWRqdXN0cmlnaHRccmluMFxsaW44ODJcaXRhcDBccGFyYXJzaWQxMzA3NDIxOSANCntccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTA1MTYgUmVhbCBQb3dlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDU2NTE4NzcgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDkwNTE2XGNoYXJyc2lkMTQxMTgzOTkgTG9zc2VzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgIFxlbmRhc2ggIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTA0NDQyNzUgQWxnZXIgRGVsdGEgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgc2hhbGwgYmUgcmVzcG9uc2libGUgZm9yIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzOTE3NTAxIGNvbXBlbnNhdGluZyBmb3IgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgDQpsb3NzZXMgYXNzb2NpYXRlZCB3aXRoIHRoZSBXaG9sZXNhbGUgRGlzdHJpYnV0aW9uIFNlcnZpY2UgdW5kZXIgdGhpcyBBZ3JlZW1lbnQuICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NjUxODc3IFRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiByZWFsIHBvd2VyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTY1MTg3NyAgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiBsb3NzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTY1MTg3NyAgZmFjdG9yIHJhdGVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgIG9uIHRoZSBkaXN0cmlidXRpb24gZmFjaWxpdGllcyBpZGVudGlmaWVkIGluIFNjaGVkdWxlIEEgYW5kIHJlcXVpcmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NjUxODc3IGR9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2ICB0byBwcm92aWRlIHRoZSBXaG9sZXNhbGUgRGlzdHJpYnV0aW9uIFNlcnZpY2UgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTY1MTg3NyBhcmUgYXMgaW5kaWNhdGVkIGluIFNlY3Rpb24gNC4yKGEpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgDQogYW5kIHdpbGwgYmUgY2FsY3VsYXRlZCBiYXNlZCBvbiBtZXRlcmVkIGxvYWQgYXQgdGhlIGRpc3RyaWJ1dGlvbiBkZWxpdmVyeSBwb2ludH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU2NTE4NzcgLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2ICAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQxMTgzOTkgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTcyMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQ4NTM3ODEyIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkODUzNzgxMlxjaGFycnNpZDg1Mzc4MTIgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCBhLlx0YWJ9fVxwYXJkIFxsdHJwYXJccWwgXGZpLTUwNFxsaTEyMjRccmkwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHgxMjI0XHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMyNFxpbHZsMlxhZGp1c3RyaWdodFxyaW4wXGxpbjEyMjRcaXRhcDBccGFyYXJzaWQ1NjUxODc3IA0Ke1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5MDUxNiBSZWFsIFBvd2VyIExvc3MgRmFjdG9yIFJhdGVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTY1MTg3N1xjaGFycnNpZDU2NTE4NzcgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDU2NTE4Nzcge1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcdWxcaW5zcnNpZDkwNTE2XGNoYXJyc2lkNTY1MTg3NyBEZWxpdmVyeSBQb2ludFx0YWIgXHRhYiBcdGFiIFJhdGV9e1xydGxjaFxmY3MxIFxhYlxhZjAgDQpcbHRyY2hcZmNzMCBcYlx1bFxpbnNyc2lkNTY1MTg3N1xjaGFycnNpZDU2NTE4NzcgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDkwNTE2IEdvdXJsZXlcdGFiIFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTA1MTZcY2hhcnJzaWQyMzIzNzg4IDEuMDAzMjB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ1NjUxODc3IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5MDUxNiBMYUJyYW5jaGVcdGFiIFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTA1MTZcY2hhcnJzaWQyMzIzNzg4IDEuMDA3NjB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ1NjUxODc3IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5MDUxNlxjaGFycnNpZDEwNTcyMDE2IEctMTIgUmRcdGFiIFx0YWIgXHRhYiAxLjAyMzV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ1NjQ5NjM5XGNoYXJyc2lkMTA1NzIwMTYgMH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDc2MTQ5MjRcY2hhcnJzaWQxMDU3MjAxNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkODUzNzgxMiANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIGIuXHRhYn19XHBhcmQgXGx0cnBhclxxbCBcZmktNTA0XGxpMTIyNFxyaTBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDEyMjRcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczI0XGlsdmwyXGFkanVzdHJpZ2h0XHJpbjBcbGluMTIyNFxpdGFwMFxwYXJhcnNpZDU2NTE4NzcgDQp7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2IEFsZ2VyIERlbHRhIHNoYWxsIGVuc3VyZSB0aGF0IHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDA0NTkzMiBtZXRlcmVkIGxvYWQgYXQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY0MzM5NiBlYWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2IGRpcw0KdHJpYnV0aW9uIGRlbGl2ZXJ5IHBvaW50IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwMDQ1OTMyIGlzIGluY3JlbWVudGVkIGJ5IGl0cyBlbmVyZ3kgc3VwcGxpZXIsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExNTQ1MTYwIGFjY29yZGluZyB0byB0aGUgUmVhbCBQb3dlciBMb3NzIEZhY3RvciBSYXRlcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiANCnNwZWNpZmllZCBpbiA0LjIoYSl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDA0NTkzMiAgZm9yIGxvYWQgcmVwb3J0aW5nIGFuZCBzZXR0bGVtZW50IHB1cnBvc2VzIHNvIHRoYXQgcmVwb3J0ZWQgbG9hZCBpbmNsdWRlcyBkaXN0cmlidXRpb24gbG9zc2VzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDg1Mzc4MTIgDQoNClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMzYwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjM2MFxpdGFwMFxwYXJhcnNpZDE0MTE4Mzk5IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQxMTgzOTlcY2hhcnJzaWQxNDExODM5OSANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDQuMy5cdGFifX1ccGFyZCBcbHRycGFyXHFsIFxmaS00MzJcbGk4ODJccmkwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHg4ODJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczI0XGlsdmwxXGFkanVzdHJpZ2h0XHJpbjBcbGluODgyXGl0YXAwXHBhcmFyc2lkMTMwNzQyMTkgDQp7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDkwNTE2IFJhdGUgQ2hhbmdlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2ICBcZW5kYXNoICBOb3RoaW5nIGluIHRoaXMgQWdyZWVtZW50IHNoYWxsIGJlIGNvbnN0cnVlZCBhcyBhZmZlY3RpbmcgaW4gYW55IHdheSB0aGUgcmlnaHQgb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMwNTE0MzUgVU1FUkN9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2ICB0byB1bmlsYXRlcmFsbHkgbWFrZSBhcHBsaWNhdGlvbiB0byB0aGUgQ29tbWlzc2lvbiBmb3IgYSBjaGFuZ2UgaW4gdGhlIHJhdGUgZm9yIFdob2xlc2FsZSBEaXN0cmlidXRpb24gU2VydmljZS59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTE0OTYzMCAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMDUxNDM1IA0KVU1FUkN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDExODM5OSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTE1NDUxNjAgc2hhbGx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDExODM5OSAgbm90aWZ5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwNDQ0Mjc1IEFsZ2VyIERlbHRhIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQxMTgzOTkgbm8gbGF0ZXIgdGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTU0NTE2MCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQxMTgzOTkgbiB0aGUgZGF0ZSBvZiBDb21taXNzaW9uIGZpbGluZywgb2YgaXRzIGludGVudCB0byBmaWxlIGZvciBhbiBhZGp1c3RtZW50IGluIHJhdGVzLiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxMzA1MTQzNSBVTUVSQ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MTE4Mzk5IFxycXVvdGUgcyBub3RpZmljYXRpb24gc2hhbGwgY29uc2lzdCBvZiB0aGUgYXBwbGljYXRpb24gcGFja2FnZSBzZW50IHRvIHRoZSBDb21taXNzaW9uLiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzA1MTQzNSBVTUVSQ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTE1NDUxNjAgIGFncmVlcyB0aGF0LCBpbiB0aGUgZXZlbnQgdGhhdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzA1MTQzNSBVTUVSQ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExNTQ1MTYwICBtYWtlcyBzdWNoIGFwcGxpY2F0aW9uIHRvIHRoZSBDb21taXNzaW9uLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzA1MTQzNSBVTUVSQ317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTE1NDUxNjAgIHNoYWxsIG5vdCBvcHBvc2UgQWxnZXIgRGVsdGFccnF1b3RlIHMgcmlnaHQgdG8gaW50ZXJ2ZW5lIGFuZCBwcm90ZXN0IHN1Y2ggYXBwbGljYXRpb24ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTQ0NDc3OSANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkNTQ1NzcyOCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NTc3MjggDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA1Llx0YWJ9fVxwYXJkIFxsdHJwYXJccWwgXGZpLTM2MFxsaTM2MFxyaTBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMjRcYWRqdXN0cmlnaHRccmluMFxsaW4zNjBcaXRhcDAge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDkwNTE2IEJJTExJTkcgQU5EIFBBWU1FTlRcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NDQ0Nzc5IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNS4xLlx0YWJ9fVxwYXJkIFxsdHJwYXJccWwgXGZpLTQzMlxsaTg4MlxyaTBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDg4Mlx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMjRcaWx2bDFcYWRqdXN0cmlnaHRccmluMFxsaW44ODJcaXRhcDAge1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDkwNTE2IEJpbGxpbmcgRGF0ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2ICBcZW5kYXNoICBBZnRlciBjb21tZW5jZW1lbnQgb2YgdGhpcyBBZ3JlZW1lbnQsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMDUxNDM1IFVNRVJDfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgDQogc2hhbGwgaXNzdWUgYmlsbHMgdG8gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTA0NDQyNzUgQWxnZXIgRGVsdGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0MjMzMjQgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2IG9uIGEgY2FsZW5kYXIgbW9udGggYmFzaXMsIGJ5IHRoZSAxMH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxzdXBlclxpbnNyc2lkOTA1MTYgdGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiAgd29ya2luZyBkYXkgZm9sbG93aW5nIHRoZSBjYWxlbmRhciBtb250aCB0byB3aGljaCB0aGV5IGFwcGx5LiAgQWxsIGJpbGxzIHNoYWxsIGJlIGR1ZSBhbmQgcGF5YWJsZSB3aXRoaW4gMjAgZGF5cyBvZiB0aGVpciByZWNlaXB0LlxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NDQ3NzkgDQoNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDUuMi5cdGFifX1ccGFyZCBcbHRycGFyXHFsIFxmaS00MzJcbGk4ODJccmkwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHg4ODJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczI0XGlsdmwxXGFkanVzdHJpZ2h0XHJpbjBcbGluODgyXGl0YXAwXHBhcmFyc2lkMTQzMDY5MDcgDQp7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDkwNTE2IFBheW1lbnQgQWRkcmVzc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2ICBcZW5kYXNoICBcdGFiIEZvciBXaXJlIFRyYW5zZmVyczogXGxpbmUgXHRhYiBcdGFiIFx0YWIgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ4NDU1ODkwXGNoYXJyc2lkOTU0OTcgVVMgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ2ODI2MzBcY2hhcnJzaWQ5NTQ5NyBCYW5rfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTZcY2hhcnJzaWQ5NTQ5NyAsIE4uQS59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTI5MDIwNlxjaGFycnNpZDk1NDk3IA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcZmk3MjBcbGkyODgwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjI4ODBcaXRhcDBccGFyYXJzaWQ5NTQ5NyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2XGNoYXJyc2lkOTU0OTcgNzc3IEVhc3QgV2lzY29uc2luIEF2ZW51ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTUyOTAyMDZcY2hhcnJzaWQ5NTQ5NyANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTZcY2hhcnJzaWQ5NTQ5NyBNaWx3YXVrZWUsIFdpc2NvbnNpbiAgNTMyMDJcbGluZSBcdGFiIEFCQSAjMDc1IDAwMCAwMjJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NDQ0Nzc5XGNoYXJyc2lkOTU0OTcgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTM2MDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMzYwMFxpdGFwMFxwYXJhcnNpZDE3MDM5OTYge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNlxjaGFycnNpZDk1NDk3IEZvciBjcmVkaXQgdG86fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTZcY2hhcnJzaWQxNzAzOTk2IA0KICB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcZjFcZnMyMFxpbnNyc2lkOTU0OTdcY2hhcnJzaWQxNzAzOTk2IFVwcGVyIE1pY2hpZ2FuIEVuZXJneSBSZXNvdXJjZXN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcZjFcZnMyMFxpbnNyc2lkMTY0MTI5NDNcY2hhcnJzaWQxNzAzOTk2ICB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcZjFcZnMyMFxpbnNyc2lkOTU0OTdcY2hhcnJzaWQxNzAzOTk2IA0KQ29ycG9yYXRpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcZjFcaW5zcnNpZDE1MjkwMjA2XGNoYXJyc2lkOTU0OTcgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTM2MDBccmkwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4zNjAwXGl0YXAwXHBhcmFyc2lkOTU0OTcge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNlxjaGFycnNpZDk1NDk3IEFjY291bnQgIyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5Mzk4NzYgMTgyMzgxMDE0ODU3fXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NDQ0Nzc5IA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGk3OTJccmkwXGtlZXBca2VlcG5cbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjc5MlxpdGFwMFxwYXJhcnNpZDE2NTEzMzkge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiBcbGluZSBcdGFiIFx0YWIgXHRhYiBGb3IgT3RoZXIgUGF5bWVudHM6fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGJcaGlnaGxpZ2h0N1xpbnNyc2lkOTA1MTZcY2hhcnJzaWQ0MDc5MzkwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiBcbGluZSBcdGFiIFx0YWIgXHRhYiBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2XGNoYXJyc2lkOTU0OTcgQ2FzaGllcnMgQTEzOVxsaW5lIFx0YWIgXHRhYiBcdGFiIFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ5NTQ5NyBVcHBlciBNaWNoaWdhbiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NTQ5N1xjaGFycnNpZDk1NDk3IEVuZXJneSBSZXNvdXJjZXMgQ29ycG9yYXRpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NTQ5NyAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTMxNzk1MSANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGZpNjQ4XGxpMjk1MlxyaTBca2VlcFxrZWVwblxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMjk1MlxpdGFwMFxwYXJhcnNpZDIzMjM3ODgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiBDL28gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTQ0NDc3OVxjaGFycnNpZDk1NDk3IA0KV2UgRW5lcmdpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ3Mjk4NTQ5XGNoYXJyc2lkOTU0OTcgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTc5MlxyaTBca2VlcFxrZWVwblxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNzkyXGl0YXAwXHBhcmFyc2lkMTY1MTMzOSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2XGNoYXJyc2lkOTU0OTcgXHRhYiBcdGFiIFx0YWIgXHRhYiAzMzMgVy4gRXZlcmV0dCBTdHJlZXRcbGluZSBcdGFiIFx0YWIgXHRhYiANClx0YWIgTWlsd2F1a2VlLCBXaXNjb25zaW4gIDUzMjAzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTQ0NDc3OSANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDUuMy5cdGFifX1ccGFyZCBcbHRycGFyXHFsIFxmaS00MzJcbGk4ODJccmkwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDg4MlxqY2xpc3R0YWJcdHgxMTUyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMyNFxpbHZsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjg4MlxpdGFwMFxwYXJhcnNpZDk0NTg5NzUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5MDUxNiBJbnRlcmVzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2ICBcZW5kYXNoIA0KIEJpbGxzIHRoYXQgYXJlIG5vdCBwYWlkIGluIGZ1bGwgYnkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTA0NDQyNzUgQWxnZXIgRGVsdGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMzAwODk4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiB3aGVuIGR1ZSBzaGFsbCB0aGVyZWFmdGVyIGJlYXIgaW50ZXJlc3QgYXQgdGhlIHJhdGUgb2YgMVwnYmQgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMzgwOTI4ICBwZXJjZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgIHBlciBtb250aCwgb3IgYXQgdGhlIG1heGltdW0gcmF0ZSBvZiBpbnRlcmVzdCBhbGxvd2VkIGJ5IGxhdywgd2hpY2hldmVyIGlzIGxlc3MuXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTQ0NDc3OSANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDUuNC5cdGFifX1ccGFyZCBcbHRycGFyXHFsIFxmaS00MzJcbGk4ODJccmkwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDg4MlxqY2xpc3R0YWJcdHgxMTUyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMyNFxpbHZsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjg4MlxpdGFwMFxwYXJhcnNpZDM2MjE1ODkge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5MDUxNiBEaXNwdXRlZCBCaWxsc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2ICBcZW5kYXNoIA0KIEluIHRoZSBldmVudCBvZiBhIGRpc3B1dGUgYWJvdXQgYW55IGludm9pY2UsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwNDQ0Mjc1IEFsZ2VyIERlbHRhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjMwMDg5OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgDQpzaGFsbCByZW1pdCB0aGUgdW5kaXNwdXRlZCBwb3J0aW9uIG9mIHN1Y2ggaW52b2ljZSwgYW5kIHNoYWxsIGhhdmUgdGhlIG9wdGlvbiB0byBwYXkgdGhlIGRpc3B1dGVkIHBvcnRpb24gb2Ygc3VjaCBpbnZvaWNlIHVuZGVyIHByb3Rlc3Qgb3IgcmVtaXQgdGhlIGRpc3B1dGVkIHBvcnRpb24gb2Ygc3VjaCBpbnZvaWNlIGludG8gYW4gZXNjcm93IGFjY291bnQgcGVuZGluZyB0aGUgcmVzb2x1dGlvbiBvZiB0aGUgZGlzcA0KdXRlIHB1cnN1YW50IHRvIFNlY3Rpb24gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM2Mzg1NDAgMTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiAgb2YgdGhpcyBBZ3JlZW1lbnQuXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTQ0NDc3OSANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDUuNS5cdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDkwNTE2IFRlcm1pbmF0aW9uIGZvciBOb24tUGF5bWVudCBvZiBCaWxsc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2ICBcZW5kYXNoIA0KIEluIHRoZSBldmVudCBvZiBub24tcGF5bWVudCBvZiBhIGJpbGwgYnkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTA0NDQyNzUgQWxnZXIgRGVsdGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiAsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMDUxNDM1IFVNRVJDfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgDQogc2hhbGwgaGF2ZSB0aGUgcmlnaHQgdG8gdGVybWluYXRlIHNlcnZpY2Ugc2l4dHkgKDYwKSBkYXlzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjMwMDg5OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgc3Vic2VxdWVudCB0byB0aGUgZGF0ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjA3NTg0NiBvZiB0aGUgYmlsbH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgOyAgcHJvdmlkZWQsIGhvd2V2ZXIsIHRoYXQgaW4gdGhlIGV2ZW50IG9mIGFueSBiaWxsaW5nIGRpc3B1dGUsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMDUxNDM1IFVNRVJDfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgIHNoYWxsIG5vdCBoYXZlIHRoZSByaWdodCB0byB0ZXJtaW5hdGUgc2VydmljZSBpZiB9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwNDQ0Mjc1IEFsZ2VyIERlbHRhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjMwMDg5OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgDQpjb21wbGllcyB3aXRoIFNlY3Rpb24gNS40IG9mIHRoaXMgQWdyZWVtZW50LCBhbmQgZWl0aGVyIHBheXMgdGhlIGRpc3B1dGVkIGFtb3VudCB1bmRlciBwcm90ZXN0IG9yIHBsYWNlcyBkaXNwdXRlZCBhbW91bnRzIGluIGFuIGVzY3JvdyBhY2NvdW50IHN1YmplY3QgdG8gZGlzYnVyc2VtZW50IGJhc2VkIHVwb24gdGhlIHJlc29sdXRpb24gb2YgdGhlIGRpc3B1dGUuICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDEzMDUxNDM1IFVNRVJDfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgIHNoYWxsIGJlIHJlcXVpcmVkIHRvIG5vdGlmeSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDQ0NDI3NSBBbGdlciBEZWx0YX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIzMDA4OTggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2IA0KaW4gd3JpdGluZyBvZiBpdHMgaW50ZW50IHRvIHRlcm1pbmF0ZSBzZXJ2aWNlIGZvciBub24tcGF5bWVudCBhdCBsZWFzdCB0aGlydHkgKDMwKSBkYXlzIHByaW9yIHRvIHRoZSBhY3R1YWwgZGF0ZSBvZiB0ZXJtaW5hdGlvbiBvZiBzZXJ2aWNlLiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMwNTE0MzUgVU1FUkN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiAgfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTk0MjEyMVxjaGFycnNpZDY1ODE5OTAgbWF5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjM4NDUyMSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgbm90IHRlcm1pbmF0ZSBzZXJ2aWNlIGZvciByZWFzb24gb2Ygbm9uLXBheW1lbnQgaWYgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDQ4NDY0NyBBbGdlciBEZWx0YQ0KfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjMwMDg5OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgbWFrZXMgcGF5bWVudCBwcmlvciB0byB0aGUgZGF0ZSBvZiB0ZXJtaW5hdGlvbi5cbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NDQ0Nzc5IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNi5cdGFifX1ccGFyZCBcbHRycGFyXHFsIFxmaS0zNjBcbGkzNjBccmkwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHgzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczI0XGFkanVzdHJpZ2h0XHJpbjBcbGluMzYwXGl0YXAwIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5MDUxNiBBU1NJR05NRU5UXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTQ0NDc3OSANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDYuMS5cdGFifX1ccGFyZCBcbHRycGFyXHFsIFxmaS00MzJcbGk4ODJccmkwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHg4ODJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczI0XGlsdmwxXGFkanVzdHJpZ2h0XHJpbjBcbGluODgyXGl0YXAwIHtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5MDUxNiBBc3NpZ25tZW50IG9mIFJpZ2h0cyBVbmRlciB0aGUgQWdyZWVtZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgIFxlbmRhc2ggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2NjcwOTY5IA0KRWFjaCBQYXJ0eSBzaGFsbCBoYXZlIHRoZSByaWdodCB0byBhc3NpZ24gYWxsIG9yIGFueSBwb3J0aW9uIG9mIGl0cyBpbnRlcmVzdCBpbiANCnRoZSBBZ3JlZW1lbnQgdXBvbiBwcmlvciB3cml0dGVuIG5vdGljZSB0byB0aGUgb3RoZXIgUGFydHksIGFuZCBhIFBhcnR5IGFzc2lnbmluZyBpdHMgcmlnaHRzIGFuZCBvYmxpZ2F0aW9ucyB1bmRlciB0aGlzIEFncmVlbWVudCBzaGFsbCBwcm92aWRlIG5vdGljZSB0byB0aGUgb3RoZXIgUGFydHkgb2YgdGhlIGFzc2lnbm1lbnQgcHVyc3VhbnQgdG8gU2VjdGlvbiAxfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTczOTAyNCAyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTY2NzA5NjkgIG9mIHRoaXMgQWdyZWVtZW50LiAgSWYgYXNzaWdubWVudCBvZiB0aGlzIEFncg0KZWVtZW50IG9jY3VycyBwdXJzdWFudCB0byB0aGUgcHJvdmlzaW9ucyBvZiB0aGlzIHNlY3Rpb24sIHRoaXMgQWdyZWVtZW50IHNoYWxsIGJlIGJpbmRpbmcgdXBvbiBhbmQgaW51cmUgdG8gdGhlIGJlbmVmaXQgb2YgdGhlIHJlc3BlY3RpdmUgc3VjY2Vzc29ycyBhbmQgYXNzaWducyBvZiB0aGUgUGFydGllcy59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NDQ3NzkgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA2LjIuXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5MDUxNiBPYmxpZ2F0aW9ucyBBZnRlciBBc3NpZ25tZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgIFxlbmRhc2ggDQogSW4gdGhlIGV2ZW50IG9mIGFueSBzYWxlLCB0cmFuc2Zlciwgb3IgYXNzaWdubWUNCm50IGhlcmV1bmRlciwgdGhlIHRyYW5zZmVyb3Igb3IgYXNzaWdub3Igc2hhbGwsIHRvIHRoZSBleHRlbnQgb2YgdGhlIHRyYW5zZmVycmVkIG9yIGFzc2lnbmVkIG9ibGlnYXRpb25zLCBhbmQgb25seSB0byBzdWNoIGV4dGVudCwgYmUgcmVsaWV2ZWQgb2Ygb2JsaWdhdGlvbnMgYWNjcnVpbmcgZnJvbSBhbmQgYWZ0ZXIgdGhlIGVmZmVjdGl2ZSBkYXRlIG9mIHN1Y2ggdHJhbnNmZXIgb3IgYXNzaWdubWVudDsgIHByb3ZpZGVkLCBob3dldmVyLCB0aA0KYXQgdW5kZXIgbm8gY2lyY3Vtc3RhbmNlcyBzaGFsbCBhbnkgc2FsZSwgdHJhbnNmZXIsIG9yIGFzc2lnbm1lbnQgcmVsaWV2ZSB0aGUgdHJhbnNmZXJvciBvciBhc3NpZ25vciBvZiBhbnkgbGlhYmlsaXR5IGZvciBhbnkgYnJlYWNoIG9mIHRoaXMgQWdyZWVtZW50IG9jY3VycmluZyBiZWZvcmUgdGhlIGVmZmVjdGl2ZSBkYXRlIG9mIHN1Y2ggdHJhbnNmZXIgb3IgYXNzaWdubWVudC5cbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU0NDQ3NzkgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA3Llx0YWJ9fVxwYXJkIFxsdHJwYXJccWwgXGZpLTM2MFxsaTM2MFxyaTBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMjRcYWRqdXN0cmlnaHRccmluMFxsaW4zNjBcaXRhcDAge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDkwNTE2IExPQUQgU0hFRERJTkcgQU5EIENVUlRBSUxNRU5UU1xsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NDQ3NzkgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA3LjEuXHRhYn19XHBhcmQgXGx0cnBhclxxbCBcZmktNDMyXGxpODgyXHJpMFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4ODgyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMyNFxpbHZsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjg4MlxpdGFwMCB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTA1MTYgUHJvY2VkdXJlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2IFxlbmRhc2ggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkODk4NTE4OSAgSW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ3MTA0MjUwICBhY2NvcmRhbmNlIHdpdGggTkVSQyBzdGFuZGFyZHMgYW5kfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDU3Mjg2NSAgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNzEwNDI1MCAgTUlTTyBFbmVyZ3kgTWFya2V0IFRhcmlmZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ4OTg1MTg5IHRoZSBNSVVQIG9yIFdQUyBCYWxhbmNpbmcgQXV0aG9yaXR5IGltcGxlbWVudCBsb2FkIHNoZWQufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ3MTA0MjUwICAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ1NzI4NjUgQ3VydGFpbG1lbnQgbm90aWNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTE5MzA4NDkgIHdpbGwgYmUgY29tbXVuaWNhdGVkIGJ5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDg5ODUxODkgdGhlIEJhbGFuY2luZyBBdXRob3JpdHkgY29udGFjdGluZ317XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTE5MzA4NDkgIFdQUEkgRW5lcmd5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NTcyODY1IGFuZC9vciBBbGdlciBEZWx0YSB9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTkzMDg0OSBhcyBzb29uIGFzIHByYWN0aWNhYmxlIGFmdGVyIGEgZGV0ZXJtaW5hdGlvbiB0aGF0IGN1cnRhaWxtZW50cyBhcmUgbmVjZXNzYXJ5Ln17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxMTkzMDg0OVxjaGFycnNpZDI5MTAxMTQgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTE5MzA4NDkgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NDQ3NzkgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA3LjIuXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5MDUxNiBEaXN0cmlidXRpb24gQ29uc3RyYWludHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiAgXGVuZGFzaCAgRHVyaW5nIGFueSBwZXJpb2Qgd2hlbiB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMDUxNDM1IFVNRVJDfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgLCBBVEMsIG9yIE1JU08gZGV0ZXJtaW5lcyB0aGF0IGEgY29uc3RyYWludCBleGlzdHMgb24gYWxsIG9yIGEgcG9ydGlvbiBvZiB0aGUgQVRDIHRyYW5zbWlzc2lvbiBmYWNpbGl0aWVzIG9yIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMDUxNDM1IA0KVU1FUkN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiBccnF1b3RlIHMgZmFjaWxpdGllcyB1c2VkIHRvIHByb3ZpZGUgV2hvbGVzYWxlIERpc3RyaWJ1dGlvbiBTZXJ2aWNlIHVuZGVyIHRoaXMgQWdyZWVtZW50LCBhbmQgdGhhdCBzdWNoIGNvbnN0cmFpbnQgbWF5IGltcGFpciB0aGUgcmVsaWFiaWxpdHkgb2YgdGhvc2UgZmFjaWxpdGllcyBvciBvdGhlciBmYWNpbGl0aWVzIG93bmVkIH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjM4NDUyMSBhbmQvb3Igb3BlcmF0ZWQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgYnkgQVRDfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjM4NDUyMSAsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMDUxNDM1IFVNRVJDfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiAsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjM4NDUyMSAgb3IgTUlTTyx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMwNTE0MzUgVU1FUkN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiANCiBtYXkgdGFrZSB3aGF0ZXZlciBhY3Rpb25zLCBjb25zaXN0ZW50IHdpdGggR29vZCBVdGlsaXR5IFByYWN0aWNlLCB0aGF0IGFyZSByZWFzb25hYmx5IG5lY2Vzc2FyeSB0byBtYWludGFpbiB0aGUgcmVsaWFiaWxpdHkgb2YgdGhvc2UgZmFjaWxpdGllcy4gIFN1Y2ggYWN0aW9ucyB3aWxsIGJlIHRha2VuIGluIGEgbm9uZGlzY3JpbWluYXRvcnkgbWFubmVyLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIzMDA4OTggDQoNClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMzYwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjM2MFxpdGFwMFxwYXJhcnNpZDIzMDA4OTgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMzAwODk4IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNy4zLlx0YWJ9fVxwYXJkIFxsdHJwYXJccWwgXGZpLTQzMlxsaTg4MlxyaTBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDg4Mlx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMjRcaWx2bDFcYWRqdXN0cmlnaHRccmluMFxsaW44ODJcaXRhcDBccGFyYXJzaWQxNTA4MDExMCANCntccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTA1MTYgQ3VydGFpbG1lbnRzIG9mIFdob2xlc2FsZSBEaXN0cmlidXRpb24gU2VydmljZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2ICBcZW5kYXNoICBJZiBhIGNvbnN0cmFpbnQgY2Fubm90IGJlIHJlbGlldmVkIHRocm91Z2ggdGhlIGltcGxlbWVudGF0aW9uIG9mIG90aGVyIHByb2NlZHVyZXMsIGFuZCBpZiB9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMDUxNDM1IFVNRVJDfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgIGRldGVybWluZXMgdGhhdCBpdCBpcyBuZWNlc3NhcnkgdG8gY3VydGFpbCBXaG9sZXNhbGUgRGlzdHJpYnV0aW9uIFNlcnZpY2UgdGhhdCB3b3VsZCBvdGhlcndpc2UgYmUgcHJvdmlkZWQgdW5kZXIgdGhpcyBBZ3JlZW1lbnQsIHN1Y2ggZGVsaXZlcmllcyBzaGFsbCBiZSBjdXINCnRhaWxlZCBpbiBhIG5vbmRpc2NyaW1pbmF0b3J5IGZhc2hpb24ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTUwODAxMTAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDIzMjM3ODgge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTA4MDExMCANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDcuNC5cdGFifX1ccGFyZCBcbHRycGFyXHFsIFxmaS00MzJcbGk4ODJccmkwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHg4ODJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczI0XGlsdmwxXGFkanVzdHJpZ2h0XHJpbjBcbGluODgyXGl0YXAwIHtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5MDUxNiBDdXJ0YWlsbWVudCBBbGxvY2F0aW9uIG9mIFdob2xlc2FsZSBEaXN0cmlidXRpb24gU2VydmljZSBGb3IgVHJhbnNtaXNzaW9uIENvbnN0cmFpbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NjIxMjA1IFxlbmRhc2ggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkOTA1MTYgRWFjaCBQYXJ0eSBzaGFsbCwgb24gYSBub24tZGlzY3JpbWluYXRvcnkgYmFzaXMsIGN1cnRhaWwgaXRzIHVzZSBvZiB0aGUgc3lzdGVtIGluIGEgbWFubmVyIHRoYXQgZWZmZWN0aXZlbHkgcmVsaWV2ZXMgdGhlIGNvbnN0cmENCmludC4gIEhvd2V2ZXIsIHRvIHRoZSBleHRlbnQgcHJhY3RpY2FibGUgYW5kIGNvbnNpc3RlbnQgd2l0aCBHb29kIFV0aWxpdHkgUHJhY3RpY2UsIGFueSBjdXJ0YWlsbWVudCB3aWxsIGJlIHByb3BvcnRpb25hdGVseSBzaGFyZWQgYnkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMwNTE0MzUgVU1FUkN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiAgYW5kIH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTcxODY2OSBBbGdlciBEZWx0YX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2IC5cbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NDQ0Nzc5IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNy41Llx0YWJ9fVxwYXJkIFxsdHJwYXJccWwgXGZpLTQzMlxsaTg4MlxyaTBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDg4Mlx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMjRcaWx2bDFcYWRqdXN0cmlnaHRccmluMFxsaW44ODJcaXRhcDBccGFyYXJzaWQ0MDAzNzAxIHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5MDUxNiBTeXN0ZW0gUmVsaWFiaWxpdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiAgXGVuZGFzaCAgTm90d2l0aHN0YW5kaW5nIGFueSBvdGhlciBwcm92aXNpb25zIG9mIHRoaXMgQWdyZWVtZW50LCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzA1MTQzNSBVTUVSQ317XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgLCBmb3IgaXRzIG93biBwdQ0KcnBvc2VzIG9yIGluIHJlc3BvbnNlIHRvIGFjdGlvbnMgdGFrZW4gb3IgcmVxdWVzdHMgbWFkZSBieSBBVEMgb3IgTUlTTywgcmVzZXJ2ZXMgdGhlIHJpZ2h0LCBjb25zaXN0ZW50IHdpdGggR29vZCBVdGlsaXR5IFByYWN0aWNlIGFuZCBvbiBhIGJhc2lzIHRoYXQgaXMgbm90IHVuZHVseSBkaXNjcmltaW5hdG9yeSwgdG8gY3VydGFpbCBXaG9sZXNhbGUgRGlzdHJpYnV0aW9uIFNlcnZpY2Ugd2l0aG91dCBsaWFiaWxpdHkgb24gfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzA1MTQzNSBVTUVSQ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2IFxycXVvdGUgDQpzIHBhcnQuICBTdWNoIGN1cnRhaWxtZW50cyBtYXkgYmUgbWFkZSAoYSkgZm9yIHRoZSBwdXJwb3NlIG9mIG1ha2luZyBuZWNlc3NhcnkgYWRqdXN0bWVudHMgdG8sIGNoYW5nZXMgaW4sIG9yIHJlcGFpcnMgb24gdGhlIGxpbmVzLCBzdWJzdGF0aW9ucywgYW5kIGZhY2lsaXRpZXMgaW52b2x2ZWQgaW4gcHJvdmlkaW5nIHNlcnZpY2UgdW5kZXIgdGhpcyBBZ3JlZW1lbnQsIG9yIChiKSB3aGVyZSB0aGUgY29udGludWFuY2Ugb2YgV2hvbGVzYWxlIEQNCmlzdHJpYnV0aW9uIFNlcnZpY2Ugd291bGQgZW5kYW5nZXIgcGVyc29ucyBvciBwcm9wZXJ0eS4gIFxsaW5lIFxsaW5lIEluIHRoZSBldmVudCBvZiBhbnkgYWR2ZXJzZSBjb25kaXRpb25zIG9yIGRpc3R1cmJhbmNlcyBvbiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzA1MTQzNSBVTUVSQ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2IFxycXVvdGUgDQpzIGZhY2lsaXRpZXMsIG9yIG9uIGFueSBvdGhlciBzeXN0ZW1zIGRpcmVjdGx5IG9yIGluZGlyZWN0bHkgaW50ZXJjb25uZWN0ZWQgd2l0aCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzA1MTQzNSBVTUVSQ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2IFxycXVvdGUgcyBzeXN0ZW0sIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMDUxNDM1IFVNRVJDfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiAsIGNvbnNpc3RlbnQgd2l0aCBHb29kIFV0aWxpdHkgDQpQcmFjdGljZSwgYWxzbyBtYXkgY3VydGFpbCBXaG9sZXNhbGUgRGlzdHJpYnV0aW9uIFNlcnZpY2UgaW4gb3JkZXIgdG8gKGkpIGxpbWl0IHRoZSBleHRlbnQgb3IgZGFtYWdlIG9mIHRoZSBhZHZlcnNlIGNvbmRpdGlvbnMgb3IgZGlzdHVyYmFuY2VzLCAoaWkpIHByZXZlbnQgZGFtYWdlIHRvIGZhY2lsaXRpZXMsIG9yIChpaWkpIGV4cGVkaXRlIHJlc3RvcmF0aW9uIG9mIHNlcnZpY2UuICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDEzMDUxNDM1IFVNRVJDfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgIHdpbGwgZ2l2ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NzE4NjY5IEFsZ2VyIERlbHRhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkODE5ODMxNiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgYXMgbXVjDQpoIGFkdmFuY2Ugbm90aWNlIGFzIGlzIHByYWN0aWNhYmxlIGluIHRoZSBldmVudCBvZiBzdWNoIGN1cnRhaWxtZW50Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDg0NTU4OTAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTg4MlxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW44ODJcaXRhcDBccGFyYXJzaWQ5NDU4OTc1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDAwMzcwMSANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjaGFycnNpZDQwMDM3MDEgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNy42Llx0YWJ9fVxwYXJkIFxsdHJwYXJccWwgXGZpLTQzMlxsaTg4MlxyaTBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4ODgyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMyNFxpbHZsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjg4MlxpdGFwMFxwYXJhcnNpZDQwMDM3MDEge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5MDUxNlxjaGFycnNpZDQwMDM3MDEgVW5kZXJmcmVxdWVuY3kgTG9hZCBTaGVkZGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0NjIxMjA1ICB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2IFxlbmRhc2ggIEFsZ2VyIERlbHRhIHNoYWxsIGNvbXBseSB3aXRoIGFsbCByZWd1bGF0b3J5IHVuZGVyZnJlcXVlbmN5IGxvYWQgc2hlZGRpbmcgcmVxdWlyZW1lbnRzIHRocm91Z2ggcGFydGljaXBhdGlvbiBpbiBXUFBJIEVuZXJneVxycXVvdGUgcyBVbmRlcmZyZXF1ZW5jeSBMb2FkIFNoZWRkaW5nIA0KcGxhbi4gIEFsZ2VyIERlbHRhIHNoYWxsIHN1cHBseSBkb2N1bWVudGF0aW9uIG9mIHN1Y2ggY29tcGxpYW5jZSB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzA1MTQzNSBVTUVSQ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2ICBhbmQgQVRDLCBpZiByZXF1ZXN0ZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDAzNjgzNCAufXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0MDAzNzAxIA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkzNjBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMzYwXGl0YXAwXHBhcmFyc2lkODQ1NTg5MCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQwMDM3MDEgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA4Llx0YWJ9fVxwYXJkIFxsdHJwYXJccWwgXGZpLTM2MFxsaTM2MFxyaTBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMjRcYWRqdXN0cmlnaHRccmluMFxsaW4zNjBcaXRhcDAge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDkwNTE2IEVORVJHWSBSRUxJQUJJTElUWSBPUkdBTklaQVRJT04gT0JMSUdBVElPTlNcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NDQ0Nzc5XGNoYXJyc2lkNTkwOTA3IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgOC4xLlx0YWJ9fVxwYXJkIFxsdHJwYXJccWwgXGZpLTQzMlxsaTg4MlxyaTBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDg4Mlx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMjRcaWx2bDFcYWRqdXN0cmlnaHRccmluMFxsaW44ODJcaXRhcDAge1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2IEFsZ2VyIERlbHRhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTZcY2hhcnJzaWQyOTEwMTE0ICBzaGFsbCBjb21wbHkgd2l0aCBhbGwgYXBwbGljYWJsZSBlbmVyZ3kgcmVsaWFiaWxpdHkgb3JnYW5pemF0aW9uIHJlcXVpcmVtZW50cy5cbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NDQ0Nzc5XGNoYXJyc2lkMjkxMDExNCANCg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgOC4yLlx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgQWxnZXIgRGVsdGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMDU3MjYzICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU0NDQ3NzlcY2hhcnJzaWQyOTEwMTE0IHNoYWxsIGJlIHJlc3BvbnNpYmxlIGZvciBwYXlpbmcgYWxsIGVuZXJneSByZWxpYWJpbGl0eSBvcmdhbml6YXRpb24gY29zdHMgYXNzb2NpYXRlZCB3aXRoIGl0cyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMDU3MjYzIGxvYWQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTQ0NDc3OVxjaGFycnNpZDI5MTAxMTQgDQphbmQgdGhlIHByb3Zpc2lvbiBvZiBzZXJ2aWNlIHVuZGVyIHRoaXMgQWdyZWVtZW50Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NTc3MjggDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTM2MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4zNjBcaXRhcDBccGFyYXJzaWQ1NDU3NzI4IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTQ1NzcyOCANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDguMy5cdGFifX1ccGFyZCBcbHRycGFyXHFsIFxmaS00MzJcbGk4ODJccmkwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHg4ODJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczI0XGlsdmwxXGFkanVzdHJpZ2h0XHJpbjBcbGluODgyXGl0YXAwIHtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiBBbGdlciBEZWx0YX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NTc3MjhcY2hhcnJzaWQxMTE1NDg0OCAgc2hhbGwgcHJvdmlkZSBhbGwgZGF0YSBhbmQgaW5mb3JtYXRpb24gcmVxdWVzdGVkIGJ5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMDUxNDM1IFVNRVJDfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ1NDU3NzI4XGNoYXJyc2lkMTExNTQ4NDggIGluIG9yZGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTIwMzUgIGZvciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzA1MTQzNSBVTUVSQ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NTc3MjhcY2hhcnJzaWQxMTE1NDg0OCAgdG8gY29tcGx5IHdpdGggZWxlY3RyaWMgcg0KZWxpYWJpbGl0eSBvcmdhbml6YXRpb24gcmVxdWlyZW1lbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM3ODczNzIgLn17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcaW5zcnNpZDg0NjM2ODhcY2hhcnJzaWQ4NDYzNjg4IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTNccWwgXGxpNzIwXHJpMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkODQ2MzY4OCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSANClxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGNmNVxpbnNyc2lkODQ2MzY4OCANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjaGFycnNpZDk0NTg5NzUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgOS5cdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxmaS0zNjBcbGkzNjBccmkwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMjRcYWRqdXN0cmlnaHRccmluMFxsaW4zNjBcaXRhcDBccGFyYXJzaWQxNTI5OTc0NiBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQ5MDUxNlxjaGFycnNpZDk0NTg5NzUgQ1JFRElUIFNVUFBPUlR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTI5OTc0NlxjaGFycnNpZDk0NTg5NzUgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTcyMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQxNzk0Njg2IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgVU1FUkN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTI5OTc0NiANCiwgaW4gb3JkZXIgdG8gc2F0aXNmeSBpdHNlbGYgb2YgdGhlIGFiaWxpdHkgb2YgQWxnZXIgRGVsdGEgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTUyOTk3NDZcY2hhcnJzaWQ3NDE1MDU0IHRvIG1lZXQgdGhlIG9ibGlnYXRpb25zIHNldCBmb3J0aCBpbiB0aGlzIEFncmVlbWVudCwgbWF5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMjQwNzE4XGNoYXJyc2lkMTMyNDA3MTggDQppbiBhY2NvcmRhbmNlIHdpdGggc3RhbmRhcmQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNzYwOTQ4MSBlbGVjdHJpYyB1dGlsaXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMyNDA3MThcY2hhcnJzaWQxMzI0MDcxOCAgcHJhY3RpY2VzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1Mjk5NzQ2XGNoYXJyc2lkNzQxNTA1NCANCmNvbmR1Y3QgcmVhc29uYWJsZSBjcmVkaXQgcmV2aWV3cy4gIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMjQwNzE4XGNoYXJyc2lkMTMyNDA3MTggVU1FUkMgd2lsbCByZXF1aXJlIEFsZ2VyIERlbHRhIHRvIHByb3ZpZGUgdGhlIGluZm9ybWF0aW9uIGFuZCBtZWV0IHRoZSByZXF1aXJlbWVudHMgZGV0ZXJtaW5lZCBieSBVTUVSQy4gIEFsZ2VyIERlbHRhXHJxdW90ZSANCnMgZmFpbHVyZSB0byBwcm92aWRlIGFkZXF1YXRlIGNyZWRpdCBzdXBwb3J0LCBpZiByZXF1aXJlZCwgbWF5IGJlIGdyb3VuZHMgZm9yIFVNRVJDIHRvIHRlcm1pbmF0ZSB0aGUgQWdyZWVtZW50LiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTI5OTc0NlxjaGFycnNpZDc0MTUwNTQgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2IFVNRVJDfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNTI5OTc0NlxjaGFycnNpZDc0MTUwNTQgIG1heSwgYmFzZWQgb24gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgVU1FUkN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTI5OTc0NlxjaGFycnNpZDc0MTUwNTQgXHJxdW90ZSBzIGNyZWRpdCByZXF1aXJlbWVudHMsIHJlcXVpcmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTI5OTc0NiBBbGdlciBEZWx0YSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTI5OTc0NlxjaGFycnNpZDc0MTUwNTQgdG8gcHJvdmlkZSBhbmQgbWFpbnRhaW4gaW4gZWZmZWN0IGR1cmluZyB0aGUgdGVybSBvZiB0aGlzIEFncmVlbWVudCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzI0MDcxOFxjaGFycnNpZDEzMjQwNzE4IA0KYW4gdW5jb25kaXRpb25hbCBhbmQgaXJyZXZvY2FibGUgbGV0dGVyIG9mIGNyZWRpdCwgYSBwYXJlbnRhbCBndWFyYW50eSwgb3IgYW4gYWx0ZXJuYXRpdmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ2MTU3OSBmb3JtIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMjQwNzE4XGNoYXJyc2lkNzQxNTA1NCAgdHlwZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDEzMjQwNzE4IG9mIHNlY3VyaXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMyNDA3MThcY2hhcnJzaWQ3NDE1MDU0ICBhY2NlcHRhYmxlIHRvIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMjQwNzE4IFVNRVJDIGFuZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzI0MDcxOFxjaGFycnNpZDEzMjQwNzE4IA0KY29uc2lzdGVudCB3aXRoIGNvbW1lcmNpYWwgcHJhY3RpY2VzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMyNDA3MThcY2hhcnJzaWQ3NDE1MDU0ICAoXCc5M1BlcmZvcm1hbmNlIEFzc3VyYW5jZVwnOTQpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMyNDA3MTggLiAgU3VjaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTI5OTc0NlxjaGFycnNpZDc0MTUwNTQgDQpjcmVkaXQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTUyOTk3NDZcY2hhcnJzaWQ1NjAwNjE0IHN1cHBvcnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDM2MjcxOFxjaGFycnNpZDU2MDA2MTQgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMjQwNzE4IHNoYWxsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTAzNjI3MThcY2hhcnJzaWQ1NjAwNjE0IG5vdCBleGNlZWQgYW4gYW1vdW50IGVxdWl2YWxlbnQgdG8gdGhlIHN1bSBvZiBmb3VyIG1vbnRocyBvZlx+dGhlIHRoZW59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGYxXGZzMjBcaW5zcnNpZDEwMzYyNzE4XGNoYXJyc2lkNTYwMDYxNCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTAzNjI3MThcY2hhcnJzaWQ1NjAwNjE0IGN1cnJlbnR9ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZjFcZnMyMFxpbnNyc2lkMTAzNjI3MThcY2hhcnJzaWQ1NjAwNjE0IFx+fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTAzNjI3MThcY2hhcnJzaWQ1NjAwNjE0IG1vbnRobHkgZGlzdHJpYnV0aW9uIGNoYXJnZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTI5OTc0NlxjaGFycnNpZDc0MTUwNTQgLiAgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiBVTUVSQ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1Mjk5NzQ2XGNoYXJyc2lkNzQxNTA1NCAgcmVzZXJ2ZXMgdGhlIHJpZ2h0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTMyNDA3MTggLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzI0MDcxOFxjaGFycnNpZDEzMjQwNzE4IA0Kb24gYSBub24tZGlzY3JpbWluYXRvcnkgYmFzaXMsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1Mjk5NzQ2XGNoYXJyc2lkNzQxNTA1NCB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzI0MDcxOCByZXF1aXJlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTUyOTk3NDZcY2hhcnJzaWQ3NDE1MDU0ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE1Mjk5NzQ2IEFsZ2VyIERlbHRhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTUyOTk3NDZcY2hhcnJzaWQ3NDE1MDU0ICB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzM3MTc3MFxjaGFycnNpZDEzMzcxNzcwIHN1Ym1pdCB0byBVTUVSQyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTI5OTc0NlxjaGFycnNpZDc0MTUwNTQgDQp1cGRhdGVkIGZpbmFuY2lhbCBpbmZvcm1hdGlvbiB0byBwZXJtaXQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgVU1FUkN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTI5OTc0NlxjaGFycnNpZDc0MTUwNTQgIHRvIGV2YWx1YXRlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1Mjk5NzQ2IEFsZ2VyIERlbHRhfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNTI5OTc0NlxjaGFycnNpZDc0MTUwNTQgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTI5OTc0NiBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTUyOTk3NDZcY2hhcnJzaWQ3NDE1MDU0IA0KIGNyZWRpdHdvcnRoaW5lc3Mgb24gYW4gb24tZ29pbmcgYmFzaXMsIGFuZCBpZiBuZWNlc3NhcnksIHRvIHJlcXVpcmUgZnV0dXJlIFBlcmZvcm1hbmNlIEFzc3VyYW5jZS4gIFVwb24gcmVjZWlwdCBvZiBzdWNoIG5vdGljZSwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTUyOTk3NDYgQWxnZXIgRGVsdGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTI5OTc0NlxjaGFycnNpZDc0MTUwNTQgDQogc2hhbGwgaGF2ZSB0aHJlZSAoMykgYnVzaW5lc3MgZGF5cyB0byByZW1lZHkgdGhlIHNpdHVhdGlvbiBieSBwcm92aWRpbmcgc3VjaCBQZXJmb3JtYW5jZSBBc3N1cmFuY2UgdG8gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgVU1FUkN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTI5OTc0NlxjaGFycnNpZDc0MTUwNTQgLiAgSW4gdGhlIGV2ZW50IH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTUyOTk3NDYgQWxnZXIgRGVsdGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTI5OTc0NlxjaGFycnNpZDc0MTUwNTQgIGZhaWxzIHRvIHByb3ZpZGUgc3VjaCBQZXJmb3JtYW5jZSBBc3N1cmFuY2UgYWNjZXB0YWJsZSB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiBVTUVSQ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTUyOTk3NDZcY2hhcnJzaWQ3NDE1MDU0ICB3aXRoaW4gdGhyZWUgKDMpIGJ1c2luZXNzIGRheXMgb2YgcmVjZWlwdCBvZiBub3RpY2UsIHRoZW4gYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMzcxNzcwIG4gZXZlbnQgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTI5OTc0NlxjaGFycnNpZDc0MTUwNTQgDQogZGVmYXVsdCB3aWxsIGJlIGRlZW1lZCB0byBoYXZlIG9jY3VycmVkLCBhbmQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgVU1FUkN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTI5OTc0NlxjaGFycnNpZDc0MTUwNTQgIHNoYWxsIGhhdmUgdGhlIHJpZ2h0IHRvIHRlcm1pbmF0ZSBzZXJ2aWNlLiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgVU1FUkMNCn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1Mjk5NzQ2XGNoYXJyc2lkNzQxNTA1NCAgc2hhbGwgYmUgcmVxdWlyZWQgdG8gbm90aWZ5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1Mjk5NzQ2IEFsZ2VyIERlbHRhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTUyOTk3NDZcY2hhcnJzaWQ3NDE1MDU0ICBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTUyOTk3NDYgIHdyaXRpbmcgb2YgaXRzIGludGVudCB0byB0ZXJtaW5hdGUgc2VydmljZSBhdCBsZWFzdCA2MCBkYXlzIHByaW9yIHRvIHRoZSBhY3R1YWwgZGF0ZSBvZiB0ZXJtaW5hdGlvbi59e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGluc3JzaWQ1NDQ0Nzc5XGNoYXJyc2lkNTQ1NzcyOCBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcc3RyaWtlXGluc3JzaWQyMzg4NTA0XGNoYXJyc2lkMjM4NDUyMSANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDEwLlx0YWJ9fVxwYXJkIFxsdHJwYXJccWwgXGZpLTM2MFxsaTM2MFxyaTBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMjZcYWRqdXN0cmlnaHRccmluMFxsaW4zNjBcaXRhcDBccGFyYXJzaWQxNTI5OTc0NiB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTA1MTYgRk9SQ0UgTUFKRVVSRSBBTkQgSU5ERU1OSUZJQ0FUSU9OXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTQ0NDc3OSANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDEwLjEuXHRhYn19XHBhcmQgXGx0cnBhclxxbCBcZmktNDMyXGxpNzkyXHJpMFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHg3OTJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczI2XGlsdmwxXGFkanVzdHJpZ2h0XHJpbjBcbGluNzkyXGl0YXAwXHBhcmFyc2lkMTUyOTk3NDYge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5MDUxNiBGb3JjZSBNYWpldXJlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgIFxlbmRhc2ggDQogVG8gdGhlIGV4dGVudCBlaXRoZXIgUGFydHkgaXMgcHJldmVudGVkIGJ5IEZvcmNlIE1hamV1cmUgZnJvbSBjYXJyeWluZyBvdXQsIGluIHdob2xlIG9yIHBhcnQsIGl0cyBvYmxpZ2F0aW9ucyB1bmRlciB0aGlzIEFncmVlbWVudCwgYW5kIHN1Y2ggUGFydHkgKFwnOTN0aGUgQ2xhaW1pbmcgUGFydHlcJzk0DQopIGdpdmVzIG5vdGljZSBhbmQgZGV0YWlscyBvZiB0aGUgRm9yY2UgTWFqZXVyZSB0byB0aGUgb3RoZXIgUGFydHkgYXMgc29vbiBhcyBwcmFjdGljDQphYmxlLCB0aGVuLCB1bmxlc3MgdGhpcyBBZ3JlZW1lbnQgc3BlY2lmaWVzIG90aGVyd2lzZSwgdGhlIENsYWltaW5nIFBhcnR5IHNoYWxsIGJlIGV4Y3VzZWQgZnJvbSB0aGUgcGVyZm9ybWFuY2Ugb2YgaXRzIG9ibGlnYXRpb25zIHdpdGggcmVzcGVjdCB0byB0aGlzIEFncmVlbWVudCBvdGhlciB0aGFuIHBheW1lbnRzIHRoZW4gZHVlIG9yIGJlY29taW5nIGR1ZSB3aXRoIHJlc3BlY3QgdG8gcGVyZm9ybWFuY2UgcHJpb3IgdG8gdGhlIEZvcmNlIE0NCmENCmpldXJlLiAgVGhlIENsYWltaW5nIFBhcnR5IHNoYWxsIGNvbW1lbmNlIHBlcmZvcm1hbmNlIG9mIGl0cyBvYmxpZ2F0aW9ucyBhZnRlciB0aGUgb2NjdXJyZW5jZSBvZiB0aGUgRm9yY2UgTWFqZXVyZSB3aXRoIGFsbCByZWFzb25hYmxlIGRpc3BhdGNoLiAgVGhlIG5vbi1DbGFpbWluZyBQYXJ0eSBzaGFsbCBub3QgYmUgcmVxdWlyZWQgdG8gcGVyZm9ybSBvciByZXN1bWUgcGVyZm9ybWFuY2Ugb2YgaXRzIG9ibGlnYXRpb25zIHRvIHRoZSBDbGFpbQ0KaQ0KbmcgUGFydHkgY29ycmVzcG9uZGluZyB0byB0aGUgb2JsaWdhdGlvbnMgb2YgdGhlIENsYWltaW5nIFBhcnR5IGV4Y3VzZWQgYnkgRm9yY2UgTWFqZXVyZS4gIEhvd2V2ZXIsIG5vIFBhcnR5IHNoYWxsIGJlIHJlbGlldmVkIG9mIGxpYWJpbGl0eSBmb3IgZmFpbHVyZSBvZiBwZXJmb3JtYW5jZSBpZiBzdWNoIGZhaWx1cmUgYmUgZHVlIHRvIGNhdXNlcyBhcmlzaW5nIG91dCBvZiBpdHMgbmVnbGlnZW5jZSBvciBkdWUgdG8gcmVtb3ZhYmxlIG9yIHJlDQptZWRpYWJsZSBjYXVzZXMgdGhhdCBpdCBmYWlscyB0byByZW1vdmUgb3IgcmVtZWR5IHdpdGhpbiBhIHJlYXNvbmFibGUgdGltZSBwZXJpb2QuICBOb3RoaW5nIGNvbnRhaW5lZCBoZXJlaW4gc2hhbGwgYmUgY29uc3RydWVkIHRvIHJlcXVpcmUgYSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTQyMjU1NCBQYXJ0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2IA0KIHRvIHNldHRsZSBhbnkgc3RyaWtlIG9yIGxhYm9yIGRpc3B1dGUgaW4gd2hpY2ggaXQgbWF5IGJlIGludm9sdmVkLlxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NDQ3NzkgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxMC4yLlx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTA1MTYgSW5kZW1uaWZpY2F0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgIFxlbmRhc2ggIEVhY2ggUGFydHkgc2hhbGwgYXQgYWxsIA0KdGltZXMsIGluZGVtbmlmeSwgZGVmZW5kLCBhbmQgaG9sZCBoYXJtbGVzcyB0aGUgb3RoZXIgUGFydHkgYWdhaW5zdCBhbnkgYW5kIGFsbCBkYW1hZ2VzLCBsb3NzZXMsIGFuZCBjbGFpbXMsIGluY2x1ZGluZyBjbGFpbXMgYW5kIGFjdGlvbnMgcmVsYXRpbmcgdG8gaW5qdXJ5IHRvIG9yIGRlYXRoIG9mIGFueSBwZXJzb24gb3IgZGFtYWdlIHRvIHByb3BlcnR5LCBkZW1hbmRzLCBzdWl0cywgcmVjb3ZlcmllcywgY29zdHMgYW5kIGV4cGVuc2VzLCBjDQpvdXJ0IGNvc3RzLCBhdHRvcm5leSBmZWVzLCBhbmQgYWxsIG90aGVyIG9ibGlnYXRpb25zIGJ5IG9yIHRvIHRoaXJkIHBhcnRpZXMsIGFyaXNpbmcgb3V0IG9mIG9yIHJlc3VsdGluZyBmcm9tIHRoZSBQYXJ0eVxycXVvdGUgcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDExMTI4MiByZXF1aXJlZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiANCnBlcmZvcm1hbmNlIG9mIGl0cyBvYmxpZ2F0aW9ucyB1bmRlciB0aGlzIEFncmVlbWVudC4gIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkOTA1MTYgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTQ0NDc3OVxjaGFycnNpZDExOTk4OTI0IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNoYXJyc2lkMTE5OTg5MjQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTAuMy5cdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDkwNTE2XGNoYXJyc2lkMTE5OTg5MjQgTGltaXRhdGlvbnMgb24gTGlhYmlsaXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgIA0KXGVuZGFzaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDExMTI4MiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU0MjI1NTQgVGhlIFBhcnRpZXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTZcY2hhcnJzaWQxMTk5ODkyNCBsaWFiaWxpdHkgdW5kZXIgdGhpcyBBZ3JlZW1lbnQgc2hhbGwgYmUgbGltaXRlZCB0byBkaXJlY3R9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2ICx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNlxjaGFycnNpZDExOTk4OTI0ICBhY3R1YWwgZGFtYWdlcyBvbmx5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgLiAgQX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2XGNoYXJyc2lkMTE5OTg5MjQgDQpsbCBvdGhlciByZW1lZGllcyBvciBkYW1hZ2VzIGF0IGxhdyBvciBpbiBlcXVpdHkgYXJlIHdhaXZlZC4gIERpcmVjdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2ICx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNlxjaGFycnNpZDExOTk4OTI0IA0KIGFjdHVhbCBkYW1hZ2VzIHNoYWxsIGJlIHRoZSBzb2xlIGFuZCBleGNsdXNpdmUgcmVtZWR5LCBhbmQgaW4gbm8gZXZlbnQsIHdoZXRoZXIgYXMgYSByZXN1bHQgb2YgYnJlYWNoIG9mIGNvbnRyYWN0LCB0b3J0IGxpYWJpbGl0eSAoaW5jbHVkaW5nIG5lZ2xpZ2VuY2UpLCBzdHJpY3QgbGlhYmlsaXR5LCBvciBvdGhlcndpc2UsIHNoYWxsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2IGVpdGhlciBQYXJ0eSB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2XGNoYXJyc2lkMTE5OTg5MjQgYmUgbGlhYmxlIHRvIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2IHRoZSBvdGhlciBQYXJ0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2XGNoYXJyc2lkMTE5OTg5MjQgDQosIGl0cyBhZ2VudHMsIHJlcHJlc2VudGF0aXZlcywgYW5kL29yIGFzc2lnbnMsIGZvciBhbnkgc3BlY2lhbCwgcHVuaXRpdmUsIGluY2lkZW50YWwsIGluZGlyZWN0LCBleGVtcGxhcnksIG9yIGNvbnNlcXVlbnRpYWwgZGFtYWdlcyBvZiBhbnkgbmF0dXJlIHdoYXRzb2V2ZXIsIA0KaW5jbHVkaW5nLCBidXQgbm90IGxpbWl0ZWQgdG8sIGxvc3Mgb2YgcHJvZml0cy4gIFRoZSBQYXJ0aWVzIGFsc28gaW50ZW5kIGFuZCBhZ3JlZSB0aGF0IHN1Y2ggcHJvdmlzaW9ucyBzaGFsbCBjb250aW51ZSBpbiBmdWxsIGZvcmNlIGFuZCBlZmZlY3Qgbm90d2l0aHN0YW5kaW5nIHRoZSB0ZXJtaW5hdGlvbiwgc3VzcGVuc2lvbiwgY2FuY2VsbGF0aW9uLCBvciBleHBpcmF0aW9uIG9mIHRoaXMgQWdyZWVtZW50Ln17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTQ0NDc3OSANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDExLlx0YWJ9fVxwYXJkIFxsdHJwYXJccWwgXGZpLTM2MFxsaTM2MFxyaTBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMjZcYWRqdXN0cmlnaHRccmluMFxsaW4zNjBcaXRhcDBccGFyYXJzaWQxNTI5OTc0NiB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTA1MTYgRElTUFVURSBSRVNPTFVUSU9OICBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NDQ0Nzc5IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTEuMS5cdGFifX1ccGFyZCBcbHRycGFyXHFsIFxmaS00MzJcbGk3OTJccmkwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDc5Mlx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMjZcaWx2bDFcYWRqdXN0cmlnaHRccmluMFxsaW43OTJcaXRhcDBccGFyYXJzaWQxNTA4MDExMCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDkwNTE2IERpc3B1dGUgUmVzb2x1dGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2ICBcZW5kYXNoIA0KIEFueSBkaXNwdXRlIGJldHdlZW4gdGhlIFBhcnRpZXMgaW52b2x2aW5nIHNlcnZpY2UgdW5kZXIgdGhpcyBBZ3JlZW1lbnQgc2hhbGwgYmUgcmVmZXJyZWQgdG8gYSBkZXNpZ25hdGVkIHNlbmlvciByZXByZXNlbnRhdGl2ZSBvZiBlYWNoIFBhcnR5IGZvciByZXNvbHV0aW9uIG9uIGFuIGluZm9ybWFsIGJhc2lzIGFzIHByb21wdGx5IGFzIHByYWN0aWNhYmxlLiAgSW4gdGhlIGV2ZW50IHRoZSBkZXNpZ25hdGUNCmQgcmVwcmVzZW50YXRpdmVzIGFyZSB1bmFibGUgdG8gcmVzb2x2ZSB0aGUgZGlzcHV0ZSB3aXRoaW4gdGhpcnR5ICgzMCkgZGF5cywgb3Igc3VjaCBvdGhlciBwZXJpb2QgYXMgdGhlIFBhcnRpZXMgbWF5IGFncmVlIHVwb24sIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDUzOTQwOTUgdGhlIFBhcnRpZXMgbWF5IHB1cnN1ZSBhbnkgcmVtZWRpZXMgYXZhaWxhYmxlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ5MDUxNiAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTUwODAxMTAgICBOb3R3aXRoc3RhbmRpbmcgdGhlIGZvcmVnb2luZywgbm90aGluZyBzaGFsbCBwcmV2ZW50IHRoZSBQYXJ0aWVzIGZyb20gdXRpbGl6aW5nIGFyYml0cmF0aW9uIGFzIGFuIGF2YWlsYWJsZSByZW1lZHkgZm9yIGRpc3B1dGUgcmVzb2x1dGlvbi5cfg0KIEluIHN1Y2ggY2FzZSwgdGhlIFBhcnRpZXMgbXVzdCBtdXR1YWxseSBhZ3JlZSBhbmQgZXhlY3V0ZSBhIHNlcGFyYXRlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIxMTc0MyBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTUwODAxMTAgcmJpdHJhdGlvbiBhZ3JlZW1lbnQufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgXGxpbmUgfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NDQ0Nzc5IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTEuMi5cdGFifX1ccGFyZCBcbHRycGFyXHFsIFxmaS00MzJcbGk3OTJccmkwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDc5Mlx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMjZcaWx2bDFcYWRqdXN0cmlnaHRccmluMFxsaW43OTJcaXRhcDBccGFyYXJzaWQxNTI5OTc0NiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDkwNTE2IFJpZ2h0cyBVbmRlciB0aGUgRmVkZXJhbCBQb3dlciBBY3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiAgXGVuZGFzaCANCiBOb3RoaW5nIGluIHRoaXMgc2VjdGlvbiBzaGFsbCByZXN0cmljdCB0aGUgcmlnaHRzIG9mIGVpdGhlciBQYXJ0eSB0byBmaWxlIGEgY29tcGxhaW50IHdpdGggdGhlIENvbW1pc3Npb24gdW5kZXIgcmVsZXZhbnQgcHJvdmlzaW9ucyBvZiB0aGUgRmVkZXJhbCBQb3dlciBBY3QuXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTQ0NDc3OSANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjaGFycnNpZDEwMTg5MzA5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDEyLlx0YWJ9fVxwYXJkIFxsdHJwYXJccWwgXGZpLTM2MFxsaTM2MFxyaTBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMyNlxhZGp1c3RyaWdodFxyaW4wXGxpbjM2MFxpdGFwMFxwYXJhcnNpZDE1Mjk5NzQ2IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTA1MTZcY2hhcnJzaWQxMDE4OTMwOSBOT1RJQ0VTXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNTQ0NDc3OVxjaGFycnNpZDEwMTg5MzA5IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTIuMS5cdGFifX1ccGFyZCBcbHRycGFyXHFsIFxmaS00MzJcbGk3OTJccmkwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDc5Mlx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMjZcaWx2bDFcYWRqdXN0cmlnaHRccmluMFxsaW43OTJcaXRhcDBccGFyYXJzaWQxNTI5OTc0NiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2IEFueSBub3RpY2UgcHJvdmlkZWQgZm9yIG9yIGNvbmNlcm5pbmcgdGhpcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTQyMjU1NCBBfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiBncmVlbWVudCwgZXhjZXB0IHRoZSBwYXltZW50IG9mIGJpbGxzIGFzIHByb3ZpZGVkIGluIFNlY3Rpb24gNS4yLCAgc2hhbGwgYmUgaW4gd3JpdGluZyBhbmQgZGVsaXZlcmVkIGJ5IHBlcnNvbiBvciBtYWlsIHRvIHRoZSBmb2xsb3dpbmc6XGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTExNTQ4NDggDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTcyMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQxMTE1NDg0OCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2IFxsaW5lIElmIHRvIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMDUxNDM1IFVNRVJDfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiA6XHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ3NDA5NjA0IFx0YWIgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzA1MTQzNSBVcHBlciBNaWNoaWdhbiBFbmVyZ3kgUmVzb3VyY2VzIENvcnBvcmF0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgXGxpbmUgXHRhYiBcdGFiIFx0YWIgXHRhYiANClZpY2UgUHJlc2lkZW50IFxlbmRhc2ggIFdob2xlc2FsZSBFbmVyZ3kgYW5kIEZ1ZWxzXGxpbmUgXHRhYiBcdGFiIFx0YWIgXHRhYiAzMzMgVy4gRXZlcmV0dCBTdHJlZXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NTMzNDY1ICwgQX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM4MzExNjAgMjE0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgXGxpbmUgXHRhYiANClx0YWIgXHRhYiBcdGFiIE1pbHdhdWtlZSwgV2lzY29uc2luICA1MzIwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTIyNjE2MzQgM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NTc3MjggDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTQ1MDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNDUwMFxpdGFwMFxwYXJhcnNpZDUwNjk1OTEge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1MDY5NTkxIA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGk0NTAwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluNDUwMFxpdGFwMFxwYXJhcnNpZDk2NDAyMzQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiBBbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1MDY5NTkxIA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkzNjAwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMzYwMFxpdGFwMFxwYXJhcnNpZDUwNjk1OTEge1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGluc3JzaWQxNTY5MTcyNCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgV0VDIEJ1c2luZXNzIFNlcnZpY2VzfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxpbnNyc2lkNTA2OTU5MVxjaGFycnNpZDExMTU0ODQ4IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNlxjaGFycnNpZDExMTU0ODQ4IERpcmVjdG9yIC0gRmVkZXJhbCBSZWd1bGF0b3J5IEFmZmFpcnMgYW5kIFBvbGljeX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMxNjA5MzQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2IDIzMSBXLiBNaWNoaWdhbiB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNlxjaGFycnNpZDExMTU0ODQ4IFN0cmVldH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM4MzExNjAgLCB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiBQMzIxfXsNClxydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGluc3JzaWQ1MDY5NTkxXGNoYXJyc2lkMTExNTQ4NDggDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTM2MDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMzYwMFxpdGFwMFxwYXJhcnNpZDUwNjk1OTEge1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNlxjaGFycnNpZDExMTU0ODQ4IE1pbHdhdWtlZSwgV0kgICA1MzIwM317XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTA2OTU5MVxjaGFycnNpZDExMTU0ODQ4IA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkzNjBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMzYwXGl0YXAwXHBhcmFyc2lkNTA2OTU5MSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwMTg5MzA5IA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGk5MDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW45MDBcaXRhcDBccGFyYXJzaWQ5NDU4OTc1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI1NDkwMTIgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTkwMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjkwMFxpdGFwMFxwYXJhcnNpZDUwNjk1OTEge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiBJZiB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ3Njg0NjUzIEFsZ2VyIERlbHRhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgOlx0YWIgDQpcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyMjgxMzQyXGNoYXJyc2lkMTQxNzc3MjUgR2VuZXJhbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2XGNoYXJyc2lkMTQxNzc3MjUgIE1hbmFnZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTY5MTcyNFxjaGFycnNpZDE0MTc3NzI1IA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcZmk3MjBcbGkyODgwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMjg4MFxpdGFwMFxwYXJhcnNpZDE1NjkxNzI0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTZcY2hhcnJzaWQxNDE3NzcyNSBBbGdlciBEZWx0YSBDb29wZXJhdGl2ZSBFbGVjdHJpYyBBc3NvY2lhdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDc0MDk2MDQgDQoNClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTZcY2hhcnJzaWQxNDE3NzcyNSA0MjYgTiA5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxzdXBlclxpbnNyc2lkOTA1MTZcY2hhcnJzaWQxNDE3NzcyNSB0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2XGNoYXJyc2lkMTQxNzc3MjUgIFN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTY5MTcyNFxjaGFycnNpZDE0MTc3NzI1IC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NDQ0Nzc5XGNoYXJyc2lkMTQxNzc3MjUgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTM2MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4zNjBcaXRhcDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNlxjaGFycnNpZDE0MTc3NzI1IFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjI4MTM0MlxjaGFycnNpZDE0MTc3NzI1IA0KR2xhZHN0b25lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU2OTE3MjRcY2hhcnJzaWQxNDE3NzcyNSAsIE1JICA0OX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyMjgxMzQyXGNoYXJyc2lkMTQxNzc3MjUgODM3fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgXGxpbmUgXGxpbmUgDQpTdWNoIG5vdGljZSBzaGFsbCBiZSBlZmZlY3RpdmUgd2hlbiByZWNlaXZlZCBieSB0aGUgUGFydHkgdG8gd2hvbSBpdCBpcyBzZW50LlxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NDQ3NzkgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxMy5cdGFifX1ccGFyZCBcbHRycGFyXHFsIFxmaS0zNjBcbGkzNjBccmkwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHgzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczI2XGFkanVzdHJpZ2h0XHJpbjBcbGluMzYwXGl0YXAwXHBhcmFyc2lkMTUyOTk3NDYgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDkwNTE2IFNFVkVSQUJJTElUWVxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NDQ3NzkgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxMy4xLlx0YWJ9fVxwYXJkIFxsdHJwYXJccWwgXGZpLTQzMlxsaTc5MlxyaTBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4NzkyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMyNlxpbHZsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjc5MlxpdGFwMFxwYXJhcnNpZDE1Mjk5NzQ2IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgDQpJbiB0aGUgZXZlbnQgdGhhdCBhbnkgb2YgdGhlIHRlcm1zLCBjb3ZlbmFudHMsIG9yIGNvbmRpdGlvbnMgb2YgdGhpcyBBZ3JlZW1lbnQgb3IgdGhlIGFwcGxpY2F0aW9uIG9mIGFueSBzdWNoIHRlcm0sIGNvdmVuYW50LCBvciBjb25kaXRpb24sIHNoYWxsIGJlIGhlbGQgaW52YWxpZCBhcyB0byBhbnkgcGVyc29uIG9yIGNpcmN1bXN0YW5jZSBieSBhbnkgY291cnQgaGF2aW5nDQoganVyaXNkaWN0aW9uLCBhbGwgb3RoZXIgdGVybXMsIGNvdmVuYW50cywgb3IgY29uZGl0aW9ucyBvZiB0aGlzIEFncmVlbWVudCBhbmQgdGhlaXIgYXBwbGljYXRpb24gc2hhbGwgbm90IGJlIGFmZmVjdGVkIHRoZXJlYnksIGJ1dCBzaGFsbCByZW1haW4gaW4gZm9yY2UgYW5kIGVmZmVjdCB1bmxlc3MgYSBjb3VydCBob2xkcyB0aGF0IHRoZSBwcm92aXNpb25zIGFyZSBub3Qgc2VwYXJhYmxlIGZyb20gYWxsIG90aGVyIHByb3Zpc2lvbnMgb2YgdGgNCmlzIEFncmVlbWVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NDQ3NzkgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDkxODQ0MzAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzMxNDQxIA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTQuXHRhYn19XHBhcmQgXGx0cnBhclxxbCBcZmktMzYwXGxpMzYwXHJpMFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMyNlxhZGp1c3RyaWdodFxyaW4wXGxpbjM2MFxpdGFwMFxwYXJhcnNpZDE1Mjk5NzQ2IHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ5MDUxNiBHT1ZFUk5JTkcgTEFXXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTQ0NDc3OSANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE0LjEuXHRhYn19XHBhcmQgXGx0cnBhclxxbCBcZmktNDMyXGxpNzkyXHJpMFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHg3OTJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczI2XGlsdmwxXGFkanVzdHJpZ2h0XHJpbjBcbGluNzkyXGl0YXAwXHBhcmFyc2lkMTUyOTk3NDYge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiANClRoaXMgQWdyZWVtZW50IHNoYWxsIGJlIGludGVycHJldGVkLCBjb25zdHJ1ZWQsIGFuZCBlbmZvcmNlZCBpbiBhY2NvcmRhbmNlIHdpdGggdGhlIGxhd3Mgb2YgdGhlIFN0YXRlIG9mIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MzA2OTA3IE1pY2hpZ2FufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgDQogd2l0aG91dCByZWdhcmQgdG8gY29uZmxpY3RzIG9mIGxhdyBwcm92aXNpb25zIHRoZXJlb2YuXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjY4OTQ1MCANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE1Llx0YWJ9fVxwYXJkIFxsdHJwYXJccWwgXGZpLTM2MFxsaTM2MFxyaTBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMjZcYWRqdXN0cmlnaHRccmluMFxsaW4zNjBcaXRhcDBccGFyYXJzaWQxNTI5OTc0NiB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTA1MTYgU0lHTkFUVVJFIENMQVVTRVxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU0NDQ3NzkgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNS4xLlx0YWJ9fVxwYXJkIFxsdHJwYXJccWwgXGZpLTQzMlxsaTc5MlxyaTBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4NzkyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMyNlxpbHZsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjc5MlxpdGFwMFxwYXJhcnNpZDE1Mjk5NzQ2IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgVGhlIHNpZ25hdG9yaWVzIGhlcmV0byByZXByZXNlbnQgdGhhdCB0aA0KZXkgaGF2ZSBiZWVuIGF1dGhvcml6ZWQgdG8gZW50ZXIgaW50byB0aGlzIEFncmVlbWVudCBvbiBiZWhhbGYgb2YgdGhlIFBhcnR5IGZvciB3aG9tIHRoZXkgc2lnbi5cbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ4MjE0MDcyXGNoYXJyc2lkMTI3MjgxOTggDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2hhcnJzaWQxMjE0NjIxMiBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNi5cdGFifX1ccGFyZCBcbHRycGFyXHFsIFxmaS0zNjBcbGkzNjBccmkwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMjZcYWRqdXN0cmlnaHRccmluMFxsaW4zNjBcaXRhcDBccGFyYXJzaWQxNTI5OTc0NiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDkwNTE2XGNoYXJyc2lkMTIxNDYyMTIgQ09VTlRFUlBBUlRTfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkOTA1MTYgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNlxjaGFycnNpZDEyMTQ2MjEyICAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTQ0NDc3OSANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjaGFycnNpZDEyMTQ2MjEyIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE2LjEuXHRhYn19XHBhcmQgXGx0cnBhclxxbCBcZmktNDMyXGxpNzkyXHJpMFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHg3OTJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczI2XGlsdmwxXGFkanVzdHJpZ2h0XHJpbjBcbGluNzkyXGl0YXAwXHBhcmFyc2lkMTUyOTk3NDYge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNlxjaGFycnNpZDEyMTQ2MjEyIA0KVGhpcyBBZ3JlZW1lbnQgbWF5IGJlIGV4ZWN1dGVkIGluIG9uZSBvciBtb3JlIGNvdW50ZXJwYXJ0cyB3aGljaCB0YWtlbiB0b2dldGhlciBzaGFsbCBmb3JtIGEgdmFsaWQgQWdyZWVtZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTZcY2hhcnJzaWQ5MzExODg3IC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NDQ0Nzc5IA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkzNjBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMzYwXGl0YXAwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI3MjgxOTggDQpccGFyIH1ccGFyZCBcbHRycGFyXHFjIFxsaTM2MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4zNjBcaXRhcDBccGFyYXJzaWQxMTM3MDA1MyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkOTA1MTZcY2hhcnJzaWQxMTM3MDA1MyBbU0lHTkFUVVJFIFBBR0UgRk9MTE9XU119e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcYlxpbnNyc2lkMTEzNzAwNTNcY2hhcnJzaWQxMTM3MDA1MyANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczQ3XHFsIFxsaTBccmkwXHNhMTIwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ5NjQwMjM0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMTc5MDEgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDExMDEwMjM5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDkwNTE2IFxwYWdlIElOIFdJVE5FU1MgV0hFUkVPRiwgZWFjaCBvZiB0aGUgUGFydGllcyBoYXMgY2F1c2VkIHRoaXMgQWdyZWVtZW50IHRvIGJlIGV4ZWN1dGVkIGJ5IGl0cyBkdWx5IGF1dGhvcml6ZWQgcmVwcmVzZW50YXRpdmUgYXMgb2YgdGhlIGRhdGUgZmlyc3Qgd3JpdHRlbiBhYm92ZS59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTAxMDIzOSANClxwYXIgDQpccGFyIA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ5MTg0NDMwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQ5MDUxNiBBbGdlciBEZWx0YSBDb29wZXJhdGl2ZSBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkOTA1MTZcY2hhcnJzaWQxNTY4MjYgDQpcdGFiIFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQ5MDUxNiBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTMwNTE0MzUgVXBwZXIgTWljaGlnYW4gRW5lcmd5IFJlc291cmNlcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDkwNTE2IEVsZWN0cmljfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGJcaW5zcnNpZDkwNTE2XGNoYXJyc2lkMTU2ODI2ICBBc3NvY2lhdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkOTA1MTYgXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIENvcnBvcmF0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQ5MTg0NDMwXGNoYXJyc2lkMTU2ODI2IA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxMTAxMDIzOSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMDEwMjM5IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNDdccWwgXGxpMFxyaTBcc2ExMjBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDExMDEwMjM5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMDEwMjM5IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiBCeTp9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzMDg4Nzk5ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQzMDg4Nzk5ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGlcdWxcaW5zcnNpZDMwODg3OTkgL3MvIFRob21hcyBHLiBIYXJyZWxsXHRhYiBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgXHRhYiBcdGFiIEJ5OiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQzMDg4Nzk5ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGlcdWxcaW5zcnNpZDMwODg3OTkgL3MvIEouIFBhdHJpY2sgS2V5ZXNcdGFiIFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpXHVsXGluc3JzaWQxMTAxMDIzOVxjaGFycnNpZDMwODg3OTkgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM0N1xxbCBcbGkwXHJpMFxzYTEyMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDExMDEwMjM5IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEwMTAyMzkgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkwNTE2IE5hbWU6fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzA4ODc5OSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMzA4ODc5OSAgVGhvbWFzIEcuIEhhcnJlbGxcdGFiIFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgXHRhYiBcdGFiIE5hbWU6IH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMzA4ODc5OSAgSi4gUGF0cmljayBLZXllc1x0YWIgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxMTAxMDIzOVxjaGFycnNpZDMwODg3OTkgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMDEwMjM5IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiBUaXRsZTp9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzMDg4Nzk5ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQzMDg4Nzk5ICBDaGllZiBFeGVjdXRpdmUgT2ZmaWNlclx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgXHRhYiBcdGFiIFRpdGxlOiB9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDMwODg3OTkgIFByZXNpZGVudFx0YWIgXHRhYiBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDExMDEwMjM5XGNoYXJyc2lkMzA4ODc5OSANClxwYXIgfVxwYXJkIFxsdHJwYXJcczQ3XHFsIFxmaTcyMFxsaTBccmkwXHNhMTIwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTEwMTAyMzkge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTAxMDIzOSANClxwYXIgfVxwYXJkIFxsdHJwYXJcczQ3XHFsIFxsaTBccmkwXHNhMTIwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTEwMTAyMzkge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiBEYXRlOn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMwODg3OTkgIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMzA4ODc5OSAgT2N0b2JlciAyNSwgMjAxNlx0YWIgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiBcdGFiIFx0YWIgRGF0ZTogfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMzA4ODc5OSBPY3RvYmVyIDI1LCAyMDE2XHRhYiBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTEwMTAyMzlcY2hhcnJzaWQzMDg4Nzk5IA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNDdccWwgXGZpNzIwXGxpMFxyaTBcc2ExMjBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxMzIyNzUxIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTUxMDYyMCANClxwYXIgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM0N1xxbCBcZmk3MjBcbGkwXHJpMFxzYTEyMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDU1MTA2MjAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiBccGFnZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2Njg5NDUwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNDdccWMgXGxpMFxyaTBcc2ExMjBcc2w0ODBcc2xtdWx0MVxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkOTY0MDIzNCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlx1bFxpbnNyc2lkOTA1MTYgU0NIRURVTEUgQX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNTQ0NDc3OSANClxwYXIgfVxwYXJkIFxsdHJwYXJcczQ3XHFjIFxsaTBccmkwXHNhMTIwXHNsNDgwXHNsbXVsdDFcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NDQ0Nzc5IA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNDdccWMgXGxpMFxyaTBcc2ExMjBcc2w0ODBcc2xtdWx0MVxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkOTY0MDIzNCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkOTA1MTYgRmFjaWxpdGllcyBVc2VkIGZvciBQDQpyb3Zpc2lvbiBvZiBXaG9sZXNhbGUgRGlzdHJpYnV0aW9uIFNlcnZpY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDU0NDQ3NzkgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkNzY4OTM0MCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWJcYWYxIFxsdHJjaFxmY3MwIA0KXGJcZjFcZnMyMFx1bFxpbnNyc2lkOTA1MTZcY2hhcnJzaWQxMjc3MTA2IExhfXtccnRsY2hcZmNzMSBcYWJcYWYxIFxsdHJjaFxmY3MwIFxiXGYxXGZzMjBcdWxcaW5zcnNpZDEyNzcxMDZcY2hhcnJzaWQxMjc3MTA2IEJ9e1xydGxjaFxmY3MxIFxhYlxhZjEgXGx0cmNoXGZjczAgXGJcZjFcZnMyMFx1bFxpbnNyc2lkOTA1MTZcY2hhcnJzaWQxMjc3MTA2IHJhbmNoZTp9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcZjFcZnMyMFxpbnNyc2lkOTA1MTZcY2hhcnJzaWQxMjc3MTA2ICB9e1xydGxjaFxmY3MxIFxhaVxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGlcaW5zcnNpZDkwNTE2XGNoYXJyc2lkMTI3NzEwNiBXaG9sZXNhbGUgZGlzdHJpYnV0aW9uIHNlcnZpY2Ugc2hhbGwgYmUgcHJvdmlkZWQgdG8gQWxnZXIgRGVsdGEgfXtccnRsY2hcZmNzMSBcYWlcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxpXGluc3JzaWQxNjQzMzk2IA0KQ29vcGVyYXRpdmUgRWxlY3RyaWMgQXNzb2NpYXRpb25ccnF1b3RlIHMgfXtccnRsY2hcZmNzMSBcYWlcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxpXGluc3JzaWQ5MDUxNlxjaGFycnNpZDEyNzcxMDYgTGF9e1xydGxjaFxmY3MxIFxhaVxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGlcaW5zcnNpZDUyNzE2NyBCfXtccnRsY2hcZmNzMSBcYWlcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxpXGluc3JzaWQ5MDUxNlxjaGFycnNpZDEyNzcxMDYgDQpyYW5jaGUgc2VydmljZSBsb2NhdGlvbiBmcm9tIHRoZSBwb2ludCBvZiByZWNlaXB0IGF0IH17XHJ0bGNoXGZjczEgXGFpXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcaVxpbnNyc2lkMTMwNTE0MzUgVU1FUkN9e1xydGxjaFxmY3MxIFxhaVxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGlcaW5zcnNpZDkwNTE2XGNoYXJyc2lkMTI3NzEwNiAncyBIYXJyaXMgU3Vic3RhdGlvbiAoNjkga1YgdG8gMjQuOSBrVikgb3ZlciB9e1xydGxjaFxmY3MxIA0KXGFpXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcaVxpbnNyc2lkMTMwNTE0MzUgVU1FUkN9e1xydGxjaFxmY3MxIFxhaVxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGlcaW5zcnNpZDkwNTE2XGNoYXJyc2lkMTI3NzEwNiBccnF1b3RlIA0KcyAyNC45IGtWIGZlZWRlciAjIEhBUi04MyB0aGVuIGNvbnZlcnRlZCB0byAxMy44IGtWIHByaW9yIHRvIHRoZSBwb2ludCBvZiBkZWxpdmVyeSBhdCB0aGUgTGFicmFuY2hlIG1ldGVyaW5nIHN0cnVjdHVyZSB3aGljaCBpcyBsb2NhdGVkIGF0IHRoZSBpbnRlcnNlY3Rpb24gb2YgSGlnaHdheSBNLTY5IGFuZCBaYXdhY2tpIExhbmUgRC0xIGluIEhhcnJpcyBUbw0Kd25zaGlwLCBNZW5vbWluZWUgQ291bnR5LCBNaWNoaWdhbiwgb3Igb3ZlciBhbnkgc3VjY2Vzc29yIGZhY2lsaXRpZXMgc2hvdWxkIH17XHJ0bGNoXGZjczEgXGFpXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcaVxpbnNyc2lkMTMwNTE0MzUgVU1FUkN9e1xydGxjaFxmY3MxIFxhaVxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGlcaW5zcnNpZDkwNTE2XGNoYXJyc2lkMTI3NzEwNiANCiByZWNvbmZpZ3VyZSBvciByZWJ1aWxkIGl0cyBkaXN0cmlidXRpb24gZmFjaWxpdGllcy59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGlcaW5zcnNpZDc2ODkzNDBcY2hhcnJzaWQ5NDU4OTc1IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNDdccWwgXGxpMFxyaTBcc2ExMjBcc2w0ODBcc2xtdWx0MVxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDEzOTg3MjI3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFpXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcaVxpbnNyc2lkOTA1MTYgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNlxjaGFycnNpZDEzOTg3MjI3IENhcGFjaXR5IFJlc2VydmF0aW9uID0gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM5ODcyMjdcY2hhcnJzaWQxMzk4NzIyNyAyMDBrVyAofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ5MDUxNlxjaGFycnNpZDEzOTg3MjI3IDB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzk4NzIyN1xjaGFycnNpZDEzOTg3MjI3IC4yMjJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNlxjaGFycnNpZDEzOTg3MjI3IE1XIEAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM5ODcyMjdcY2hhcnJzaWQxMzk4NzIyNyA5MCUgQ2FwYWNpdHkgRmFjdG9yKX17DQpccnRsY2hcZmNzMSBcYWYzOVxhZnMyMiBcbHRyY2hcZmNzMCBcZjM5XGZzMjJcaW5zcnNpZDExMTY2NzQ2XGNoYXJyc2lkMTI3NzEwNiANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ3Njg5MzQwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcZjFcZnMyMFxpbnNyc2lkNzY4OTM0MFxjaGFycnNpZDEyNzcxMDYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFiXGFmMSBcbHRyY2hcZmNzMCBcYlxmMVxmczIwXHVsXGluc3JzaWQ5MDUxNlxjaGFycnNpZDEyNzcxMDYgR291cmxleTp9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGYxXGZzMjBcaW5zcnNpZDkwNTE2XGNoYXJyc2lkMTI3NzEwNiAgfXtccnRsY2hcZmNzMSBcYWlcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxpXGluc3JzaWQ5MDUxNlxjaGFycnNpZDEyNzcxMDYgDQpXaG9sZXNhbGUgZGlzdHJpYnV0aW9uIHNlcnZpY2Ugc2hhbGwgYmUgcHJvdmlkZWQgdG8gQWxnZXIgRGVsdGEgfXtccnRsY2hcZmNzMSBcYWlcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxpXGluc3JzaWQxNjQzMzk2IENvb3BlcmF0aXZlIEVsZWN0cmljIEFzc29jaWF0aW9uXHJxdW90ZSBzIH17XHJ0bGNoXGZjczEgXGFpXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcaVxpbnNyc2lkOTA1MTZcY2hhcnJzaWQxMjc3MTA2IA0KR291cmxleSBzZXJ2aWNlIGxvY2F0aW9uIGZyb20gdGhlIHBvaW50IG9mIHJlY2VpcHQgYXQgfXtccnRsY2hcZmNzMSBcYWlcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxpXGluc3JzaWQxMzA1MTQzNSBVTUVSQ317XHJ0bGNoXGZjczEgXGFpXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcaVxpbnNyc2lkOTA1MTZcY2hhcnJzaWQxMjc3MTA2ICdzIEhhcnJpcyBTdWJzdGF0aW9uICg2OSBrViB0byAyNC45IGtWKSBvdmVyIH17XHJ0bGNoXGZjczEgDQpcYWlcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxpXGluc3JzaWQxMzA1MTQzNSBVTUVSQ317XHJ0bGNoXGZjczEgXGFpXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcaVxpbnNyc2lkOTA1MTZcY2hhcnJzaWQxMjc3MTA2IFxycXVvdGUgcyAyNC45IGtWIGZlZWRlciAjIEhBUi04MiB0byB0aGUgcG9pbnQgb2YgZGVsaXZlcnkgYXQgdGhlIEdvdXJsZXkgbWV0ZXJpbmcgc3RydWN0dXJlIHdoaWNoIGlzIGxvYw0KYXRlZCBvbiBDb3VudHkgUm9hZCA1NTEgYXBwcm94aW1hdGVseSA4MDAnIHNvdXRoIG9mIHRoZSBpbnRlcnNlY3Rpb24gb2YgQ291bnR5IFJvYWQgNTUxIGFuZCBMYUJlbGxlIExhbmUgTm8gMzkuNSBpbiBHb3VybGV5IFRvd25zaGlwLCBNZW5vbWluZWUgQ291bnR5LCBNaWNoaWdhbiwgb3Igb3ZlciBhbnkgc3VjY2Vzc29yIGZhY2lsaXRpZXMgc2hvdWxkIH17XHJ0bGNoXGZjczEgXGFpXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCANClxpXGluc3JzaWQxMzA1MTQzNSBVTUVSQ317XHJ0bGNoXGZjczEgXGFpXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcaVxpbnNyc2lkOTA1MTZcY2hhcnJzaWQxMjc3MTA2ICByZWNvbmZpZ3VyZSBvciByZWJ1aWxkIGl0cyBkaXN0cmlidXRpb24gZmFjaWxpdGllcy59e1xydGxjaFxmY3MxIFxhaVxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGlcaW5zcnNpZDc2ODkzNDBcY2hhcnJzaWQxMjc3MTA2IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNDdccWwgXGxpMFxyaTBcc2ExMjBcc2w0ODBcc2xtdWx0MVxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDQwMjU4MzQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgXHRhYiBDYXBhY2l0eSBSZXNlcnZhdGlvbiA9IDEuM01XICgxLjQ0NE1XIEAgOTAlIENhcGFjaXR5IEZhY3Rvcil9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1NDQ0Nzc5IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDcyMTE3OTUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxmMVxmczIwXGluc3JzaWQxNTEzMTQ0XGNoYXJyc2lkNzIxMTc5NSANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMFxyaTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNTEzMTQ0IHtccnRsY2hcZmNzMSBcYWJcYWYxIFxsdHJjaFxmY3MwIFxiXGYxXGZzMjBcdWxcaW5zcnNpZDkwNTE2XGNoYXJyc2lkOTE4NDQzMCBHLTEyIFJkfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXHVsXGluc3JzaWQ5MDUxNiA6DQp9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNiAgfXtccnRsY2hcZmNzMSBcYWlcYWYwIFxsdHJjaFxmY3MwIFxpXGluc3JzaWQ5MDUxNiBXaG9sZXNhbGUgZGlzdHJpYnV0aW9uIHNlcnZpY2Ugc2hhbGwgYmUgcHJvdmlkZWQgdG8gdGhlIEFsZ2VyLURlbHRhIENvb3BlcmF0aXZlIEVsZWN0cmljIEFzc29jaWF0aW9uXHJxdW90ZSANCnMgc2VydmljZSBsb2NhdGlvbiBmcm9tIHRoZSBwb2ludCBvZiByZWNlaXB0IGF0IFdpc2NvbnNpbiBQdWJsaWMgU2VydmljZSBDb3Jwb3JhdGlvblxycXVvdGUgcyBJbmdhbGxzIFN1YnN0YXRpb24gKDEzOCBrViB0byAyNC45IGtWKSBvdmVyIFVNRVJDXHJxdW90ZSANCnMgMjQuOSBrViBmZWVkZXIgIyAyNDEgdG8gdGhlIHBvaW50IG9mIGRlbGl2ZXJ5IGF0IHRoZSBNZW5vbWluZWUgU3QgbWV0ZXJpbmcgc3RydWN0dXJlIHdoaWNoIGlzIGxvY2F0ZWQgb24gRy0xMiBSZCBlYXN0IG9mIENvdW50eSBSb2FkIDM0OCBpbiB0aGUgVG93biBvZiBTdGVwaGVuc29uLCBTdGVwaGVuc29uIFRvd25zaGlwLCBNZW5vbQ0KaW5lZSBDb3VudHksIE1pY2hpZ2FuLCBvciBvdmVyIGFueSBzdWNjZXNzb3IgZmFjaWxpdGllcyBzaG91bGQgVU1FUkMgcmVjb25maWd1cmUgb3IgcmVidWlsZCBpdHMgZGlzdHJpYnV0aW9uIGZhY2lsaXRpZXMufXtccnRsY2hcZmNzMSBcYWlcYWYwIFxsdHJjaFxmY3MwIFxpXGluc3JzaWQxNTEzMTQ0IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNDdccWwgXGZpNzIwXGxpMFxyaTBcc2ExMjBcc2w0ODBcc2xtdWx0MVxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDkxODQ0MzAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANCntccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTA1MTYgQ2FwYWNpdHkgUmVzZXJ2YXRpb24gPSAxLjAxMjMgTVcgKDEuMTI1TVcgQCA5MCUgQ2FwYWNpdHkgRmFjdG9yKX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1MTMxNDQgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHNsLTIwMFxzbG11bHQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMzA4ODc5OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSANClxhZjBcYWZzMTYgXGx0cmNoXGZjczAgXGNzNDJcZnMxNFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDkwNTE2XGNoYXJyc2lkMzA4ODc5OSBEQ1xcODE1OTIyODcuMSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MDUxNlxjaGFycnNpZDMwODg3OTkgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMwODg3OTkgDQpccGFyIH17XCpcdGhlbWVkYXRhIDUwNGIwMzA0MTQwMDA2MDAwODAwMDAwMDIxMDBlOWRlMGZiZmZmMDAwMDAwMWMwMjAwMDAxMzAwMDAwMDViNDM2ZjZlNzQ2NTZlNzQ1ZjU0Nzk3MDY1NzM1ZDJlNzg2ZDZjYWM5MWNiNGVjMzMwMTA0NWY3NDhmYzgzZTUyZDRhDQo5Y2IyNDAwODI1ZTk4MmM3OGVjN2EyN2NjMGM4OTkyNDE2YzlkOGIyYTc1NWZiZjc0Y2QyNTQ0MmE4MjAxNjZjMmNkOTMzZjc5ZTNiZTM3MmJkMWYwN2I1YzM5ODljYTc0YWFmZjI0MjJiMjRlYjFiNDc1ZGE1ZGYzNzRmZDlhZA0KNTY4OTgxMWExODNjNjFhNTBmOThmNGJhYmViYzI4Mzc4NzgwNDk4OTlhNTJhNTdiZTY3MDY3NGNiMjNkOGU5MDcyMWY5MGE0ZDJmYTM4MDJjYjM1NzYyNjgwZmQ4MDBlY2Q3NTUxZGMxOGViODk5MTM4ZTNjOTQzZDdlNTAzYjYNCmIwMWQ1ODNkZWVlNWY5OTgyNGUyOTBiNGJhM2YzNjRlYWM0YTQzMDg4M2IzYzA5MmQ0ZWNhOGY5NDZjOTE2NDIyZWNhYjkyN2Y1MmVhNDJiODlhMWNkNTljMjU0ZjkxOWIwZTg1ZTY1MzVkMTM1YThkZTIwZjIwYjhjMTJjM2IwDQowYzg5NWZjZjY3MjAxOTJkZTZiZjNiOWU4OWVjZGJkNjU5NmNiY2RkOGViMjhlN2MzNjVlY2M0ZWMxZmYxNDYwZjUzZmU4MTNkM2NjN2Y1YjdmMDIwMDAwZmZmZjAzMDA1MDRiMDMwNDE0MDAwNjAwMDgwMDAwMDAyMTAwYTVkNg0KYTdlN2MwMDAwMDAwMzYwMTAwMDAwYjAwMDAwMDVmNzI2NTZjNzMyZjJlNzI2NTZjNzM4NDhmY2Y2YWMzMzAwYzg3ZWY4NWJkODNkMTdkNTFkMmMzMTgyNTc2MmZhNTkwNDMyZmEzN2QwMGUxMjg3ZjY4MjIxYmRiMWJlYmRiNGYNCmM3MDYwYWJiMDg4NGE0ZWZmN2E5M2RmZWFlOGJmOWUxOTRlNzIwMTY5YWFhMDZjM2UyNDMzZmNiNjhlMTc2M2RiZjdmODJjOTg1YTRhNzI1MDg1Yjc4NzA4NmEzN2JkYmI1NWZiYzUwZDFhMzNjY2QzMTFiYTU0OGI2MzA5NTEyDQowZjg4ZDk0ZmJjNTJhZTQyNjRkMWM5MTBkMjRhNDVkYjM0NjIyNDdmYTc5MTcxNWZkNzFmOTg5ZTE5ZTAzNjRjZDNmNTE2NTJkNzM3NjBhZThmYThjOWZmYjNjMzMwY2M5ZTRmYzE3ZmFmMmNlNTQ1MDQ2ZTM3OTQ0YzY5ZTQ2Mg0KYTFhODJmZTM1M2JkOTBhODY1YWFkNDFlZDBiNWI4ZjlkNmZkMDEwMDAwZmZmZjAzMDA1MDRiMDMwNDE0MDAwNjAwMDgwMDAwMDAyMTAwNmI3OTk2MTY4MzAwMDAwMDhhMDAwMDAwMWMwMDAwMDA3NDY4NjU2ZDY1MmY3NDY4NjUNCjZkNjUyZjc0Njg2NTZkNjU0ZDYxNmU2MTY3NjU3MjJlNzg2ZDZjMGNjYzRkMGFjMzIwMTA0MGUxN2RhMTc3OTBkOTM3NjNiYjI4NDU2MmIyY2JhZWJiZjYwMDQzOWMxYTQxYzdhMGQyOWZkYmQ3ZTVlMzgzMzdjZWRmMTRkNTliDQo0YjBkNTkyYzljMDcwZDhhNjVjZDJlODhiN2YwN2MyY2E3MWJhOGRhNDgxY2M1MmM2Y2UxYzcxNWU2ZTk3ODE4YzliNDhkMTNkZjQ5Yzg3MzUxN2QyM2Q1OTA4NWFkYjVkZDIwZDZiNTJiZDUyMWVmMmNkZDVlYjkyNDZhM2Q4Yg0KNDc1N2U4ZDNmNzI5ZTI0NWViMmIyNjBhMDIzOGZkMDEwMDAwZmZmZjAzMDA1MDRiMDMwNDE0MDAwNjAwMDgwMDAwMDAyMTAwMzBkZDQzMjlhODA2MDAwMGE0MWIwMDAwMTYwMDAwMDA3NDY4NjU2ZDY1MmY3NDY4NjU2ZDY1MmYNCjc0Njg2NTZkNjUzMTJlNzg2ZDZjZWM1OTRmNmZkYjM2MTRiZjBmZDg3NzIwNzQ2ZjYzMjc3NjFhMDc3NThhZDhiMTliMmQ0ZDFiYzQ2ZTg3MWU2OTg5OTZkODUwYTI0MGQyNDk3ZDFiZGFlMzgwMDFjM2JhNjE4NzE1ZDg2ZDg3DQo2MTViODExNmQ4YTVmYjM0ZDkzYTZjMWRkMGFmYjA0NzUyOTJjNTU4NWU5MjM2ZDg4YWFkM2UyNDEyZjllM2ZiZmYxZTFmYTlhYmQ3ZWVjNzBjMWQxMjIxMjk0ZmRhNWVmZDcyY2Q0MzI0ZjE3OTQwOTNiMGVkZGQxZWY2MmZhZA0KNzk0ODJhOWMwNDk4ZjE4NGI0YmQyOTkxZGViNThkZjdkZmJiOGFkNzU1NDQ2MjgyNjA3ZDIyZDc3MWRiOGI5NDRhZDc5Nzk2YTQwZmMzNTg1ZWU2Mjk0OTYwNmVjYzQ1OGMxNWJjOGE3MDI5MTBmODA4ZThjNjZjNjliOTU2NWINCjVkOGEzMTRkM2M5NGUwMThjOGRlMWE4ZmE5NGZkMDUwOTNmNDM2NzJlMjNkMDZhZjg5OTI3YWMwNjc2MmEwNDkxMzY3ODVjMTA2MDc3NThkOTA1M2Q5NjUwMjFkNjJkNmY2ODA0ZmMwOGY4NmU0YmVmMjEwYzM1MmMxNDRkYmFiDQo5OTlmYjdiNDcxNzUwOWFmNjc4Yjk4NWFiMGI2YjRhZTZmN2VkOWJhNmM0MTcwYjA2Yzc4OGE3MDU0MzBhZGY3MWJhZDJiNWIwNTdkMDM2MDZhMWVkN2ViZjViYWJkN2E0MWNmMDBiMGVmODNhNjU2OTYzMmNkNDY3ZmFkZGVjOQ0KNjk5NjQwZjY3MTllNzZiN2Q2YWMzNTVjN2M4OWZlY2E5Y2NjYWQ0ZWE3ZDM2YzY1YjI1OGEyMDY2NDFmMWI3M2Y4YjVkYTZhNjM3M2Q5YzExYjkwYzUzN2U3ZjA4ZGNlNjZiN2JiZWFlMDBkYzhlMjU3ZTdmMGZkMmJhZGQ1ODYNCjhiMzdhMDg4ZDFlNDYwMGVhZDFkZGFlZjY3ZDQwYmM4OThiM2VkNGFmODFhYzBkNzZhMTk3Yzg2ODI2ODI4YTI0YmIzMThmMzQ0MmQ4YWI1MThkZmUzYTIwZjAwMGQ2NDU4ZDEwNGE5Njk0YWM2ZDg4NzI4ZWVlMjc4MjQyOGQ2DQowY2YwM2FjMWE1MTkzYmU0Y2JiOTIxY2QwYjQ5NWZkMDU0YjViZDBmNTMwYzE5MzFhM2Y3ZWFmOWY3YWY5ZTNmNDVjNzBmOWUxZDNmZjhlOWY4ZTFjM2UzMDczZjVhNDJjZWFhNmQ5Yzg0ZTU1NTJmYmZmZGVjY2ZjNzFmYTMzZg0KOWU3ZWYzZjJkMTE3ZDU3ODU5YzZmZmZhYzMyN2JmZmNmYzc5MzUxMGQyNjcyNmNlOGIyZjlmZmNmNmVjYzk4YmFmM2VmZGZkYmI0NzE1ZjA0ZDgxNDc2NWY4OTBjNjQ0YTI5YmU0MDhlZGYzMTgxNDMzNTY3MTI1MjcyMzcxYmUNCjE1YzMwOGQzZjI4YWNkMjQ5NDM4YzE5YTRiMDVmZDllOGExY2Y0Y2QyOTY2OTk3NzFjMzkzYWM0YjVlMDFkMDFlNWEzMGE3ODdkNzJjZjExNzgxMDg5ODlhMjE1OWM3N2EyZDgwMWVlNzJjZTNhNWM1NDVhNjE0N2YzMmE5OTc5DQozODQ5YzI2YWU2NjI1MmM2ZWQ2MzdjNThjNWJiOGIxM2M3YmZiZDQ5MGE3NTMzMGY0YjQ3ZjE2ZTQ0MWMzMWY3MTg0ZTE0MGU0OTQyMTRkMjczZmM4MDkwMGFlZGVlNTJlYWQ4NzU5N2ZhODI0YjNlNTZlODJlNDUxZDRjMmI0ZA0KMzJhNDIzMjc5YTY2OGJiNjY5MGM3ZTk5NTZlOTBjZmU3NjZjYjM3YjA3NzUzOGFiZDI3YThiMWNiYTQ4YzgwYWNjMmE4NDFmMTJlNjk4ZjEzYTllMjgxYzU3OTExY2UyOTg5NTBkN2UwM2FiYTg0YWM4YzE1NGY4NjU1YzRmMmENCmYwNzQ0ODE4NDdiZDgwNDg1OWI1ZTY5NjAwN2Q0YjRlZGZjMTUwYjEyYWRkYmVjYmE2YjE4YjE0OGExZTU0ZDFiYzgxMzkyZjIzYjdmODQxMzdjMjcxNWE4NTFkZDAyNDJhNjMzZjkwMDcxMGEyMThlZDcxNTUwNWRmZTU2ZTg2DQplODc3ZjAwMzRlMTZiYWZiMGUyNThlYmI0ZmFmMDZiNzY5ZTg4ODM0MGIxMDNkMzMxMTE1YmViYzRlYjgxM2JmODMyOTFiNjM2MjRhMGQxNDc1YTc1NmM3MzRmOWJiYzJjZDI4NTQ2ZWNiZTFlMjBhMzc5NGNhMTc1ZjNmYWU5MA0KZmI2ZDJkZDk5YmIwN2I1NWU1Y2NmNjg5NDJiZDA4NzdiMjNjNzdiOTA4ZThkYjVmOWRiN2YwMjRkOTIzOTAxMGYzNWJkNGJiZTJmY2FlMzg3YmZmZjllMmJjMjg5ZjJmYmUyNGNmYWEzMDE0NjhkZDhiZDg0NmRiYjRkZGYxYzINCmFlN2I0YzE5MWJhODI5MjMzN2E0NjliYzI1ZWMzZDQxMWYwNmY1M2E3M2UyMjRjNTI5MmM4ZGUwNTE2NzMyMzA3MDcwYTFjMDY2MGQxMjVjN2Q0NDU1MzQ4ODcwMGE0ZDdiZGRkMzQ0NDI5OTkxMGUyNTRhYjk4NGMzYTIxOWFlDQphNGFkZjFkMGY4MmI3YmQ0NmNlYTQzODhhZDFjMTJhYjVkMWVkOGUxMTUzZDljOWYzNTBhMzI0NmFhZDAxYzY4NzM0NjJiOWFjMDU5OTlhZDVjYzk4ODgyNmVhZmMzYWNhZTg1M2EzM2I3YmExMWNkMTQ0NTg3NWJhMWIyMzZiMQ0KMzk5NDgzYzkwYmQ1NjBiMGIwMjYzNDM1MDg1YTIxYjBmMjJhOWNmOTM1NmIzOGVjNjA0NjAyNmQ3N2ViYTNkYzJkYzYwYjE3ZTkyMjE5ZTE4MDY0M2VkMjdhY2ZmYmE4NmU5Yzk0YzdjYTljMjI1YTBmMWIwY2ZhZTA3ODhhZDUNCjRhZGM1YTlhZWMxYjcwM2I4YjkzY2FlYzFhMGJkOGU1ZGU3YjEzMmZlNTExM2NmMzEyNTAzYjk5OGUyYzI5MjcyNzRiZDA1MWRiNmIzNTk3OWIxZWYyNzFkYWY2YzY3MDRlODZjNzM4MDVhZjRiZGQ0NzYyMTZjMjY1OTNhZjg0DQowZGZiNTM5M2Q5NjRmOWNjOWJhZDVjMzEzNzA5ZWE3MGY1NjFlZDNlYTdiMDUzMDc1MjIxZDUxNjk2OTEwZDBkMzM5NTg1MDA0YjM0MjcyYmZmNzIxM2NjN2E1MTBhNTQ1NGEzYjM0OWIxYjIwNmMxZjBhZjQ5MDE3Njc0NWQ0Yg0KYzY2M2UyYWJiMmIzNGIyM2RhNzZmNjM1MmJhNTdjYTI4ODE4NDRjMTExMWFiMTg5ZDhjN2UwN2UxZGFhYTA0ZjQwMjU1Yzc3OTg4YWEwNWZlMDZlNGU1YmRiNGNiOWM1Mzk0YmJhZjI4ZDk4YzFkOTcxY2NkMjA4NjdlNTU2YTcNCjY4OWVjOTE2NmUwYTUyMjE4Mzc5MmI4OTA3YmE1NWNhNmU5NDNiYmYyYTI2ZTUyZjQ4OTU3MjE4ZmZjZjU0ZDFmYjA5ZGMzZWFjMDRkYTAzM2U1YzBkMGI4Yzc0YTZiNDNkMmU1NGM0YTEwYWE1MTFmNWZiMDIxYTA3NTMzYjIwDQo1YWUwN2UxN2E2MjFhOGUwODJkYWZjMTdlNDUwZmZiNzM5Njc2OTk4YjQ4NjQzYTRkYWE3MjExMjE0ZjYyMzE1MDk0MmY2YTAyYzk5ZTgzYjg1NTgzZGRiYmIyYzQ5OTYxMTMyMTE1NTEyNTdhNjU2ZWMxMTM5MjQ2Y2E4NmJlMA0KYWFkZWRiM2QxNDQxYTg5YjZhOTI5NTAxODMzYjE5N2ZlZTdiOTY0MWEzNTAzNzM5ZTU3YzczMmE1OWIxZjdkYTFjZjhhNzNiMWY5YmNjYTA5NDViODc0ZDQzOTNkYmJmMTBiMTY4MGY2NmJiYWE1ZDZmOTZlNzdiNmY1OTExM2QNCjMxNmJiMzFhNzk1NjAwYjNkMjU2ZDBjYWQyZmUzNTQ1MzhlNzU2NmIyYmQ2OWNjNmNiY2Q1YzM4ZjBlMmJjYzYzMDU4MzQ0NDI5ZGMyMTIxZmQwN2Y2M2YyYTdjNjZiZjc2ZTgwZDc1YzhmN2ExYjYyMmY4NzhhMTg5NDFkODQwDQo1NDVmYjI4ZDA3ZDIwNWQyMGU4ZWEwNzFiMjgzMzY5ODM0Mjk2YmRhYWM3NWQyNTZjYjM3ZWIwYmVlNzQwYmJlMjc4Y2FkMjUzYjhiYmZjZjY5ZWNhMjM5NzNkOTM5Yjk3ODkxYzZjZTJjZWNkOGRhOGUyZDM0MzU3OGY2NjQ4YQ0KYzJkMDM4M2ZjODE4Yzc5OGNmNjRlNTJmNTk3Yzc0MGYxY2JkMDVkZjBjMjY0YzQ5MTM0Y2YwOWQ0YTYwZThhMTA3MjYwZjIwZjkyZDQ3YjM3NGUzMmYwMDAwMDBmZmZmMDMwMDUwNGIwMzA0MTQwMDA2MDAwODAwMDAwMDIxMDANCjBkZDE5MDlmYjYwMDAwMDAxYjAxMDAwMDI3MDAwMDAwNzQ2ODY1NmQ2NTJmNzQ2ODY1NmQ2NTJmNWY3MjY1NmM3MzJmNzQ2ODY1NmQ2NTRkNjE2ZTYxNjc2NTcyMmU3ODZkNmMyZTcyNjU2YzczODQ4ZjRkMGFjMjMwMTQ4NGY3DQo4Mjc3MDg2ZjZmZDNiYTEwOTEyNmRkODhkMGFkZDQwMzg0ZTQzNTBkMzYzZjI0NTFlY2VkMGRhZTJjMDgyZTg3NjFiZTk5NjliYjk3OWRjOTEzNjMzMmRlMzE2OGFhMWEwODNhZTk5NTcxOWFjMTZkYjhlYzhlNDA1MjE2NGU4OQ0KZDkzYjY0YjA2MDgyOGU2ZjM3ZWQxNTY3OTE0YjI4NGQyNjI0NTIyODJlMzE5ODcyMGUyNzRhOTM5Y2QwOGE1NGY5ODBhZTM4YTM4ZjU2ZTQyMmEzYTY0MWM4YmJkMDQ4Zjc3NTdkYTBmMTliMDE3Y2M1MjRiZDYyMTA3YmQ1MDANCjE5OTY1MDlhZmZiM2ZkMzgxYTg5NjcyZjFmMTY1ZGZlNTE0MTczZDk4NTA1MjhhMmM2Y2NlMDIzOWJhYTRjMDRjYTViYmFiYWM0ZGYwMDAwMDBmZmZmMDMwMDUwNGIwMTAyMmQwMDE0MDAwNjAwMDgwMDAwMDAyMTAwZTlkZTBmDQpiZmZmMDAwMDAwMWMwMjAwMDAxMzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA1YjQzNmY2ZTc0NjU2ZTc0NWY1NDc5NzA2NTczNWQyZTc4NmQ2YzUwNGIwMTAyMmQwMDE0MDAwNjAwMDgwMDAwMDAyMTAwYTVkNg0KYTdlN2MwMDAwMDAwMzYwMTAwMDAwYjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMzAwMTAwMDA1ZjcyNjU2YzczMmYyZTcyNjU2YzczNTA0YjAxMDIyZDAwMTQwMDA2MDAwODAwMDAwMDIxMDA2Yjc5OTYxNjgzMDAwMDAwOGENCjAwMDAwMDFjMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAxOTAyMDAwMDc0Njg2NTZkNjUyZjc0Njg2NTZkNjUyZjc0Njg2NTZkNjU0ZDYxNmU2MTY3NjU3MjJlNzg2ZDZjNTA0YjAxMDIyZDAwMTQwMDA2MDAwODAwMDAwMDIxDQowMDMwZGQ0MzI5YTgwNjAwMDBhNDFiMDAwMDE2MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBkNjAyMDAwMDc0Njg2NTZkNjUyZjc0Njg2NTZkNjUyZjc0Njg2NTZkNjUzMTJlNzg2ZDZjNTA0YjAxMDIyZDAwMTQwMDA2MDAwOA0KMDAwMDAwMjEwMDBkZDE5MDlmYjYwMDAwMDAxYjAxMDAwMDI3MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBiMjA5MDAwMDc0Njg2NTZkNjUyZjc0Njg2NTZkNjUyZjVmNzI2NTZjNzMyZjc0Njg2NTZkNjU0ZDYxNmU2MTY3NjU3MjJlNzg2ZDZjMmU3MjY1NmM3MzUwNGIwNTA2MDAwMDAwMDAwNTAwMDUwMDVkMDEwMDAwYWQwYTAwMDAwMDAwfQ0Ke1wqXGNvbG9yc2NoZW1lbWFwcGluZyAzYzNmNzg2ZDZjMjA3NjY1NzI3MzY5NmY2ZTNkMjIzMTJlMzAyMjIwNjU2ZTYzNmY2NDY5NmU2NzNkMjI1NTU0NDYyZDM4MjIyMDczNzQ2MTZlNjQ2MTZjNmY2ZTY1M2QyMjc5NjU3MzIyM2YzZTBkMGEzYzYxM2E2MzZjNzI0ZA0KNjE3MDIwNzg2ZDZjNmU3MzNhNjEzZDIyNjg3NDc0NzAzYTJmMmY3MzYzNjg2NTZkNjE3MzJlNmY3MDY1NmU3ODZkNmM2NjZmNzI2ZDYxNzQ3MzJlNmY3MjY3MmY2NDcyNjE3NzY5NmU2NzZkNmMyZjMyMzAzMDM2MmY2ZDYxNjkNCjZlMjIyMDYyNjczMTNkMjI2Yzc0MzEyMjIwNzQ3ODMxM2QyMjY0NmIzMTIyMjA2MjY3MzIzZDIyNmM3NDMyMjIyMDc0NzgzMjNkMjI2NDZiMzIyMjIwNjE2MzYzNjU2ZTc0MzEzZDIyNjE2MzYzNjU2ZTc0MzEyMjIwNjE2MzYzDQo2NTZlNzQzMjNkMjI2MTYzNjM2NTZlNzQzMjIyMjA2MTYzNjM2NTZlNzQzMzNkMjI2MTYzNjM2NTZlNzQzMzIyMjA2MTYzNjM2NTZlNzQzNDNkMjI2MTYzNjM2NTZlNzQzNDIyMjA2MTYzNjM2NTZlNzQzNTNkMjI2MTYzNjM2NTZlNzQzNTIyMjA2MTYzNjM2NTZlNzQzNjNkMjI2MTYzNjM2NTZlNzQzNjIyMjA2ODZjNjk2ZTZiM2QyMjY4NmM2OTZlNmIyMjIwNjY2ZjZjNDg2YzY5NmU2YjNkMjI2NjZmNmM0ODZjNjk2ZTZiMjIyZjNlfQ0Ke1wqXGxhdGVudHN0eWxlc1xsc2RzdGltYXgyNjdcbHNkbG9ja2VkZGVmMFxsc2RzZW1paGlkZGVuZGVmMFxsc2R1bmhpZGV1c2VkZGVmMFxsc2RxZm9ybWF0ZGVmMFxsc2Rwcmlvcml0eWRlZjB7XGxzZGxvY2tlZGV4Y2VwdCBcbHNkcWZvcm1hdDEgXGxzZGxvY2tlZDAgTm9ybWFsO1xsc2RxZm9ybWF0MSBcbHNkbG9ja2VkMCBoZWFkaW5nIDE7XGxzZHFmb3JtYXQxIFxsc2Rsb2NrZWQwIGhlYWRpbmcgMjsNClxsc2RxZm9ybWF0MSBcbHNkbG9ja2VkMCBoZWFkaW5nIDM7XGxzZHFmb3JtYXQxIFxsc2Rsb2NrZWQwIGhlYWRpbmcgNDtcbHNkcWZvcm1hdDEgXGxzZGxvY2tlZDAgaGVhZGluZyA1O1xsc2RxZm9ybWF0MSBcbHNkbG9ja2VkMCBoZWFkaW5nIDY7XGxzZHFmb3JtYXQxIFxsc2Rsb2NrZWQwIGhlYWRpbmcgNztcbHNkcWZvcm1hdDEgXGxzZGxvY2tlZDAgaGVhZGluZyA4O1xsc2RxZm9ybWF0MSBcbHNkbG9ja2VkMCBoZWFkaW5nIDk7DQpcbHNkcWZvcm1hdDEgXGxzZGxvY2tlZDAgY2FwdGlvbjtcbHNkcWZvcm1hdDEgXGxzZGxvY2tlZDAgVGl0bGU7XGxzZHFmb3JtYXQxIFxsc2Rsb2NrZWQwIFN1YnRpdGxlO1xsc2RxZm9ybWF0MSBcbHNkbG9ja2VkMCBTdHJvbmc7XGxzZHFmb3JtYXQxIFxsc2Rsb2NrZWQwIEVtcGhhc2lzO1xsc2RzZW1paGlkZGVuMSBcbHNkcHJpb3JpdHk5OSBcbHNkbG9ja2VkMCBQbGFjZWhvbGRlciBUZXh0Ow0KXGxzZHFmb3JtYXQxIFxsc2Rwcmlvcml0eTEgXGxzZGxvY2tlZDAgTm8gU3BhY2luZztcbHNkcHJpb3JpdHk2MCBcbHNkbG9ja2VkMCBMaWdodCBTaGFkaW5nO1xsc2Rwcmlvcml0eTYxIFxsc2Rsb2NrZWQwIExpZ2h0IExpc3Q7XGxzZHByaW9yaXR5NjIgXGxzZGxvY2tlZDAgTGlnaHQgR3JpZDtcbHNkcHJpb3JpdHk2MyBcbHNkbG9ja2VkMCBNZWRpdW0gU2hhZGluZyAxO1xsc2Rwcmlvcml0eTY0IFxsc2Rsb2NrZWQwIE1lZGl1bSBTaGFkaW5nIDI7DQpcbHNkcHJpb3JpdHk2NSBcbHNkbG9ja2VkMCBNZWRpdW0gTGlzdCAxO1xsc2Rwcmlvcml0eTY2IFxsc2Rsb2NrZWQwIE1lZGl1bSBMaXN0IDI7XGxzZHByaW9yaXR5NjcgXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMTtcbHNkcHJpb3JpdHk2OCBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAyO1xsc2Rwcmlvcml0eTY5IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDM7XGxzZHByaW9yaXR5NzAgXGxzZGxvY2tlZDAgRGFyayBMaXN0Ow0KXGxzZHByaW9yaXR5NzEgXGxzZGxvY2tlZDAgQ29sb3JmdWwgU2hhZGluZztcbHNkcHJpb3JpdHk3MiBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBMaXN0O1xsc2Rwcmlvcml0eTczIFxsc2Rsb2NrZWQwIENvbG9yZnVsIEdyaWQ7XGxzZHByaW9yaXR5NjAgXGxzZGxvY2tlZDAgTGlnaHQgU2hhZGluZyBBY2NlbnQgMTtcbHNkcHJpb3JpdHk2MSBcbHNkbG9ja2VkMCBMaWdodCBMaXN0IEFjY2VudCAxOw0KXGxzZHByaW9yaXR5NjIgXGxzZGxvY2tlZDAgTGlnaHQgR3JpZCBBY2NlbnQgMTtcbHNkcHJpb3JpdHk2MyBcbHNkbG9ja2VkMCBNZWRpdW0gU2hhZGluZyAxIEFjY2VudCAxO1xsc2Rwcmlvcml0eTY0IFxsc2Rsb2NrZWQwIE1lZGl1bSBTaGFkaW5nIDIgQWNjZW50IDE7XGxzZHByaW9yaXR5NjUgXGxzZGxvY2tlZDAgTWVkaXVtIExpc3QgMSBBY2NlbnQgMTtcbHNkc2VtaWhpZGRlbjEgXGxzZHByaW9yaXR5OTkgXGxzZGxvY2tlZDAgUmV2aXNpb247DQpcbHNkcWZvcm1hdDEgXGxzZHByaW9yaXR5MzQgXGxzZGxvY2tlZDAgTGlzdCBQYXJhZ3JhcGg7XGxzZHFmb3JtYXQxIFxsc2Rsb2NrZWQwIFF1b3RlO1xsc2RxZm9ybWF0MSBcbHNkcHJpb3JpdHkzMCBcbHNkbG9ja2VkMCBJbnRlbnNlIFF1b3RlO1xsc2Rwcmlvcml0eTY2IFxsc2Rsb2NrZWQwIE1lZGl1bSBMaXN0IDIgQWNjZW50IDE7XGxzZHByaW9yaXR5NjcgXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMSBBY2NlbnQgMTsNClxsc2Rwcmlvcml0eTY4IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDIgQWNjZW50IDE7XGxzZHByaW9yaXR5NjkgXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMyBBY2NlbnQgMTtcbHNkcHJpb3JpdHk3MCBcbHNkbG9ja2VkMCBEYXJrIExpc3QgQWNjZW50IDE7XGxzZHByaW9yaXR5NzEgXGxzZGxvY2tlZDAgQ29sb3JmdWwgU2hhZGluZyBBY2NlbnQgMTtcbHNkcHJpb3JpdHk3MiBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBMaXN0IEFjY2VudCAxOw0KXGxzZHByaW9yaXR5NzMgXGxzZGxvY2tlZDAgQ29sb3JmdWwgR3JpZCBBY2NlbnQgMTtcbHNkcHJpb3JpdHk2MCBcbHNkbG9ja2VkMCBMaWdodCBTaGFkaW5nIEFjY2VudCAyO1xsc2Rwcmlvcml0eTYxIFxsc2Rsb2NrZWQwIExpZ2h0IExpc3QgQWNjZW50IDI7XGxzZHByaW9yaXR5NjIgXGxzZGxvY2tlZDAgTGlnaHQgR3JpZCBBY2NlbnQgMjtcbHNkcHJpb3JpdHk2MyBcbHNkbG9ja2VkMCBNZWRpdW0gU2hhZGluZyAxIEFjY2VudCAyOw0KXGxzZHByaW9yaXR5NjQgXGxzZGxvY2tlZDAgTWVkaXVtIFNoYWRpbmcgMiBBY2NlbnQgMjtcbHNkcHJpb3JpdHk2NSBcbHNkbG9ja2VkMCBNZWRpdW0gTGlzdCAxIEFjY2VudCAyO1xsc2Rwcmlvcml0eTY2IFxsc2Rsb2NrZWQwIE1lZGl1bSBMaXN0IDIgQWNjZW50IDI7XGxzZHByaW9yaXR5NjcgXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMSBBY2NlbnQgMjtcbHNkcHJpb3JpdHk2OCBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAyIEFjY2VudCAyOw0KXGxzZHByaW9yaXR5NjkgXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMyBBY2NlbnQgMjtcbHNkcHJpb3JpdHk3MCBcbHNkbG9ja2VkMCBEYXJrIExpc3QgQWNjZW50IDI7XGxzZHByaW9yaXR5NzEgXGxzZGxvY2tlZDAgQ29sb3JmdWwgU2hhZGluZyBBY2NlbnQgMjtcbHNkcHJpb3JpdHk3MiBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBMaXN0IEFjY2VudCAyO1xsc2Rwcmlvcml0eTczIFxsc2Rsb2NrZWQwIENvbG9yZnVsIEdyaWQgQWNjZW50IDI7DQpcbHNkcHJpb3JpdHk2MCBcbHNkbG9ja2VkMCBMaWdodCBTaGFkaW5nIEFjY2VudCAzO1xsc2Rwcmlvcml0eTYxIFxsc2Rsb2NrZWQwIExpZ2h0IExpc3QgQWNjZW50IDM7XGxzZHByaW9yaXR5NjIgXGxzZGxvY2tlZDAgTGlnaHQgR3JpZCBBY2NlbnQgMztcbHNkcHJpb3JpdHk2MyBcbHNkbG9ja2VkMCBNZWRpdW0gU2hhZGluZyAxIEFjY2VudCAzO1xsc2Rwcmlvcml0eTY0IFxsc2Rsb2NrZWQwIE1lZGl1bSBTaGFkaW5nIDIgQWNjZW50IDM7DQpcbHNkcHJpb3JpdHk2NSBcbHNkbG9ja2VkMCBNZWRpdW0gTGlzdCAxIEFjY2VudCAzO1xsc2Rwcmlvcml0eTY2IFxsc2Rsb2NrZWQwIE1lZGl1bSBMaXN0IDIgQWNjZW50IDM7XGxzZHByaW9yaXR5NjcgXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMSBBY2NlbnQgMztcbHNkcHJpb3JpdHk2OCBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAyIEFjY2VudCAzO1xsc2Rwcmlvcml0eTY5IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDMgQWNjZW50IDM7DQpcbHNkcHJpb3JpdHk3MCBcbHNkbG9ja2VkMCBEYXJrIExpc3QgQWNjZW50IDM7XGxzZHByaW9yaXR5NzEgXGxzZGxvY2tlZDAgQ29sb3JmdWwgU2hhZGluZyBBY2NlbnQgMztcbHNkcHJpb3JpdHk3MiBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBMaXN0IEFjY2VudCAzO1xsc2Rwcmlvcml0eTczIFxsc2Rsb2NrZWQwIENvbG9yZnVsIEdyaWQgQWNjZW50IDM7XGxzZHByaW9yaXR5NjAgXGxzZGxvY2tlZDAgTGlnaHQgU2hhZGluZyBBY2NlbnQgNDsNClxsc2Rwcmlvcml0eTYxIFxsc2Rsb2NrZWQwIExpZ2h0IExpc3QgQWNjZW50IDQ7XGxzZHByaW9yaXR5NjIgXGxzZGxvY2tlZDAgTGlnaHQgR3JpZCBBY2NlbnQgNDtcbHNkcHJpb3JpdHk2MyBcbHNkbG9ja2VkMCBNZWRpdW0gU2hhZGluZyAxIEFjY2VudCA0O1xsc2Rwcmlvcml0eTY0IFxsc2Rsb2NrZWQwIE1lZGl1bSBTaGFkaW5nIDIgQWNjZW50IDQ7XGxzZHByaW9yaXR5NjUgXGxzZGxvY2tlZDAgTWVkaXVtIExpc3QgMSBBY2NlbnQgNDsNClxsc2Rwcmlvcml0eTY2IFxsc2Rsb2NrZWQwIE1lZGl1bSBMaXN0IDIgQWNjZW50IDQ7XGxzZHByaW9yaXR5NjcgXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMSBBY2NlbnQgNDtcbHNkcHJpb3JpdHk2OCBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAyIEFjY2VudCA0O1xsc2Rwcmlvcml0eTY5IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDMgQWNjZW50IDQ7XGxzZHByaW9yaXR5NzAgXGxzZGxvY2tlZDAgRGFyayBMaXN0IEFjY2VudCA0Ow0KXGxzZHByaW9yaXR5NzEgXGxzZGxvY2tlZDAgQ29sb3JmdWwgU2hhZGluZyBBY2NlbnQgNDtcbHNkcHJpb3JpdHk3MiBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBMaXN0IEFjY2VudCA0O1xsc2Rwcmlvcml0eTczIFxsc2Rsb2NrZWQwIENvbG9yZnVsIEdyaWQgQWNjZW50IDQ7XGxzZHByaW9yaXR5NjAgXGxzZGxvY2tlZDAgTGlnaHQgU2hhZGluZyBBY2NlbnQgNTtcbHNkcHJpb3JpdHk2MSBcbHNkbG9ja2VkMCBMaWdodCBMaXN0IEFjY2VudCA1Ow0KXGxzZHByaW9yaXR5NjIgXGxzZGxvY2tlZDAgTGlnaHQgR3JpZCBBY2NlbnQgNTtcbHNkcHJpb3JpdHk2MyBcbHNkbG9ja2VkMCBNZWRpdW0gU2hhZGluZyAxIEFjY2VudCA1O1xsc2Rwcmlvcml0eTY0IFxsc2Rsb2NrZWQwIE1lZGl1bSBTaGFkaW5nIDIgQWNjZW50IDU7XGxzZHByaW9yaXR5NjUgXGxzZGxvY2tlZDAgTWVkaXVtIExpc3QgMSBBY2NlbnQgNTtcbHNkcHJpb3JpdHk2NiBcbHNkbG9ja2VkMCBNZWRpdW0gTGlzdCAyIEFjY2VudCA1Ow0KXGxzZHByaW9yaXR5NjcgXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMSBBY2NlbnQgNTtcbHNkcHJpb3JpdHk2OCBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAyIEFjY2VudCA1O1xsc2Rwcmlvcml0eTY5IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDMgQWNjZW50IDU7XGxzZHByaW9yaXR5NzAgXGxzZGxvY2tlZDAgRGFyayBMaXN0IEFjY2VudCA1O1xsc2Rwcmlvcml0eTcxIFxsc2Rsb2NrZWQwIENvbG9yZnVsIFNoYWRpbmcgQWNjZW50IDU7DQpcbHNkcHJpb3JpdHk3MiBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBMaXN0IEFjY2VudCA1O1xsc2Rwcmlvcml0eTczIFxsc2Rsb2NrZWQwIENvbG9yZnVsIEdyaWQgQWNjZW50IDU7XGxzZHByaW9yaXR5NjAgXGxzZGxvY2tlZDAgTGlnaHQgU2hhZGluZyBBY2NlbnQgNjtcbHNkcHJpb3JpdHk2MSBcbHNkbG9ja2VkMCBMaWdodCBMaXN0IEFjY2VudCA2O1xsc2Rwcmlvcml0eTYyIFxsc2Rsb2NrZWQwIExpZ2h0IEdyaWQgQWNjZW50IDY7DQpcbHNkcHJpb3JpdHk2MyBcbHNkbG9ja2VkMCBNZWRpdW0gU2hhZGluZyAxIEFjY2VudCA2O1xsc2Rwcmlvcml0eTY0IFxsc2Rsb2NrZWQwIE1lZGl1bSBTaGFkaW5nIDIgQWNjZW50IDY7XGxzZHByaW9yaXR5NjUgXGxzZGxvY2tlZDAgTWVkaXVtIExpc3QgMSBBY2NlbnQgNjtcbHNkcHJpb3JpdHk2NiBcbHNkbG9ja2VkMCBNZWRpdW0gTGlzdCAyIEFjY2VudCA2Ow0KXGxzZHByaW9yaXR5NjcgXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMSBBY2NlbnQgNjtcbHNkcHJpb3JpdHk2OCBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAyIEFjY2VudCA2O1xsc2Rwcmlvcml0eTY5IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDMgQWNjZW50IDY7XGxzZHByaW9yaXR5NzAgXGxzZGxvY2tlZDAgRGFyayBMaXN0IEFjY2VudCA2O1xsc2Rwcmlvcml0eTcxIFxsc2Rsb2NrZWQwIENvbG9yZnVsIFNoYWRpbmcgQWNjZW50IDY7DQpcbHNkcHJpb3JpdHk3MiBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBMaXN0IEFjY2VudCA2O1xsc2Rwcmlvcml0eTczIFxsc2Rsb2NrZWQwIENvbG9yZnVsIEdyaWQgQWNjZW50IDY7XGxzZHFmb3JtYXQxIFxsc2Rwcmlvcml0eTE5IFxsc2Rsb2NrZWQwIFN1YnRsZSBFbXBoYXNpcztcbHNkcWZvcm1hdDEgXGxzZHByaW9yaXR5MjEgXGxzZGxvY2tlZDAgSW50ZW5zZSBFbXBoYXNpczsNClxsc2RxZm9ybWF0MSBcbHNkcHJpb3JpdHkzMSBcbHNkbG9ja2VkMCBTdWJ0bGUgUmVmZXJlbmNlO1xsc2RxZm9ybWF0MSBcbHNkcHJpb3JpdHkzMiBcbHNkbG9ja2VkMCBJbnRlbnNlIFJlZmVyZW5jZTtcbHNkcWZvcm1hdDEgXGxzZHByaW9yaXR5MzMgXGxzZGxvY2tlZDAgQm9vayBUaXRsZTtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rwcmlvcml0eTM3IFxsc2Rsb2NrZWQwIEJpYmxpb2dyYXBoeTsNClxsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZHFmb3JtYXQxIFxsc2Rwcmlvcml0eTM5IFxsc2Rsb2NrZWQwIFRPQyBIZWFkaW5nO319e1wqXGRhdGFzdG9yZSAwMTA1MDAwMDAyMDAwMDAwMTgwMDAwMDA0ZDczNzg2ZDZjMzIyZTUzNDE1ODU4NGQ0YzUyNjU2MTY0NjU3MjJlMzYyZTMwMDAwMDAwMDAwMDAwMDAwMDAwMDAwNjAwMDANCmQwY2YxMWUwYTFiMTFhZTEwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDNlMDAwMzAwZmVmZjA5MDAwNjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMTAwMDAwMDAxMDAwMDAwMDAwMDAwMDAwMDEwMDAwMGZlZmZmZmZmMDAwMDAwMDBmZWZmZmZmZjAwMDAwMDAwMDAwMDAwMDBmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZg0KZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmDQpmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYNCmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZg0KZmZmZmZmZmZmZmZmZmZmZmZkZmZmZmZmZmVmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmDQpmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYNCmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZg0KZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmDQpmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZjUyMDA2ZjAwNmYwMDc0MDAyMDAwNDUwMDZlMDA3NDAwNzIwMDc5MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMTYwMDA1MDBmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYwYzZhZDk4ODkyZjFkNDExYTY1ZjAwNDA5NjMyNTFlNTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDkwMWENCjBlMmQ5NDJmZDIwMWZlZmZmZmZmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMA0KMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwDQowMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDANCjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAxMDUwMDAwMDAwMDAwMDB9fQ==</record_binary_data>
      <record_plain_text>AGREEMENT     FOR    WHOLESALE DISTRIBUTION SERVICE       Between     Alger Delta Cooperative Electric Association     and    Upper Michigan Energy Resources Corporation        FERC Rate Schedule No. 3                            AGREEMENT   FOR   WHOLESALE DISTRIBUTION SERVICE      This Agreement for Wholesale Distribution Service ( Agreement ) entered into this 20th day of October 2016 sets forth the terms and conditions of a contract for the provision of Wholesale Distribution Service between the Upper Michigan Energy Resources Corporation ( UMERC ), and Alger Delta Cooperative Electric Association ( Alger Delta ), sometimes hereinafter referred to individually as  Party  and collectively as  Parties .     WHEREAS, Alger Delta purchases its power supply needs from WPPI Energy;          WHEREAS, Alger Delta s power supply is delivered to Alger Delta over facilities owned by UMERC;            WHEREAS, in order to effect its power supply purchases, Alger Delta requires Wholesale Distribution Service over facilities owned by UMERC; and           WHEREAS, Alger Delta and UMERC have mutually agreed to implement this Agreement for Wholesale Distribution Service.       NOW, THEREFORE, in consideration of the mutual agreements contained herein, UMERC and Alger Delta agree as follows:    1. DEFINITIONS:    The following terms, when used herein with initial capitalization, whether in the singular or the plural, shall have the meaning specified:    1.1. ATC shall mean the American Transmission Company, LLC.    1.2. Coordinated Functional Registration (CFR) shall mean an agreement in writing between or among two or more entities (parties) upon a division of compliance responsibility among the parties for one or more Reliability Standard(s) applicable to a particular function, and/or for one or more Requirement(s)/sub-Requirement(s) within particular Reliability Standard(s).    1.3. Commission or FERC shall mean the Federal Energy Regulatory Commission or its regulatory successor.    1.4. Force Majeure shall mean any cause beyond the control of an affected Party that, by exercise of due diligence, such Party could not reasonably have been expected to avoid and that, by exercise of due diligence, it has been unable to overcome.  Such causes, include, but are not restricted to the following: failure of or threat of failure of facilities, flood, drought, earthquake, storm, fire, lightning, epidemic, war, riot, civil disturbance or disobedience, labor dispute, labor or material shortage, sabotage, restraint by court order or public authority, and action or non-action by or failure to obtain the necessary authorizations or approvals from any governmental agency or authority.    1.5. Good Utility Practice shall mean any of the practices, methods, and acts engaged in or approved by a significant portion of the electric utility industry located within the MISO area during the relevant time period, or any of the practices, methods, and acts that, in the exercise of reasonable judgment in light of the facts known at the time the decision was made, could have been expected to produce a safe, desirable result, achieved expeditiously and at a reasonable cost consistent with good business practices.  Good Utility Practice is not intended to be limited to the optimum practice, method, or act to the exclusion of all others, but rather to be a range of acceptable practices, methods, or acts used within MISO.    1.6. MISO shall mean the Midcontinent Independent System Operator, Inc.    1.7. MIUP Balancing Authority (MIUP BA) shall mean the function of Wisconsin Electric as the Balancing Authority for the MIUP Balancing Authority Area. The MIUP BA responsibilities are delineated in the CFR with MISO as maintained at NERC.    1.8. NERC shall mean the North American Electric Reliability Corporation or its successor.    1.9. Term shall have the meaning set forth in Section 3 of this Agreement.    1.10. Underfrequency Load Shedding (UFLS) shall mean load shed implemented by installed equipment designed to automatically respond to, and arrest declining frequency. Reliability standards specify the amount of load shed and the entities responsible for ownership, maintenance, and performance of a UFLS program.    1.11. Wholesale Distribution Service shall mean the transmission of power purchased by Alger Delta to meet its power supply needs over facilities owned by UMERC.    1.12. WPS Balancing Authority (WPS BA) shall mean the function of Wisconsin Public Service as the Balancing Authority for the WPS Balancing Authority Area. The WPS BA responsibilities are delineated in the CFR with MISO as maintained at NERC.    2. WHOLESALE DISTRIBUTION SERVICE    2.1. Sale of Wholesale Distribution Service   For the entire Term of this Agreement, UMERC shall provide Wholesale Distribution Service to Alger Delta solely for the purpose of supplying the load requirements of Alger Delta.  The Wholesale Distribution Service shall be provided between the point of receipt and point of delivery and over the existing facilities specified in Schedule A of this Agreement and will allow energy flow either into, or out of Alger Delta.    2.2. Obligations of Alger Delta   By May 1 of each year, Alger Delta shall provide UMERC with a forecast of Alger Delta s monthly system peak and energy requirements for each of the following three years and its summer and winter peaks for each of three additional years for load to be served pursuant to this Agreement.  Further, Alger Delta shall provide UMERC with timely notice of any information that might affect UMERC s ability to provide reliable Wholesale Distribution Service under this Agreement.    2.3. Obligations of UMERC   By February 1 of each year, UMERC shall provide Alger Delta with a forecast of planned maintenance and construction activities that may adversely affect the ability of UMERC to provide Wholesale Distribution Service to Alger Delta.  Further, UMERC shall provide Alger Delta with timely notice of any un-planned maintenance or construction activities that might adversely affect Wholesale Distribution Service to Alger Delta and will endeavor to carry out such activities in a manner that will minimize adverse consequences and curtailments of Wholesale Distribution Service to Alger Delta.    3. TERM    3.1. Term of Service Agreement   The Term of this Agreement shall begin on the later of January 1, 2017 or upon the receipt of all applicable state and federal regulatory approvals of UMERC, and shall continue until terminated by either Party in accordance with Section 3.2 of this Agreement.    3.2. Termination of Service Agreement   Either Party may terminate this Agreement at any time after granting the other Party one year s written notice of its intent to terminate the Agreement, subject to any regulatory approvals.    4. RATES AND CHARGES    4.1. Rate for Wholesale Distribution Service   Alger Delta shall pay to UMERC $3,117.82 per month for the Wholesale Distribution Service provided under this Agreement, or such other rate established pursuant to Section 4.3 of this Agreement as follows:  Delivery Point    Charge   Gourley   $2,547.58  LaBranche  $   441.41  G-12 Rd   $   128.83    4.2. Real Power Losses   Alger Delta shall be responsible for compensating for losses associated with the Wholesale Distribution Service under this Agreement.  The real power loss factor rates on the distribution facilities identified in Schedule A and required to provide the Wholesale Distribution Service are as indicated in Section 4.2(a) and will be calculated based on metered load at the distribution delivery point.      a. Real Power Loss Factor Rates  Delivery Point   Rate  Gourley  1.00320  LaBranche  1.00760  G-12 Rd   1.02350    b. Alger Delta shall ensure that the metered load at each distribution delivery point is incremented by its energy supplier, according to the Real Power Loss Factor Rates specified in 4.2(a) for load reporting and settlement purposes so that reported load includes distribution losses.    4.3. Rate Changes   Nothing in this Agreement shall be construed as affecting in any way the right of UMERC to unilaterally make application to the Commission for a change in the rate for Wholesale Distribution Service.  UMERC shall notify Alger Delta no later than the date of Commission filing, of its intent to file for an adjustment in rates.  UMERC s notification shall consist of the application package sent to the Commission. UMERC agrees that, in the event that UMERC makes such application to the Commission, UMERC shall not oppose Alger Delta s right to intervene and protest such application.    5. BILLING AND PAYMENT    5.1. Billing Date   After commencement of this Agreement, UMERC shall issue bills to Alger Delta on a calendar month basis, by the 10th working day following the calendar month to which they apply.  All bills shall be due and payable within 20 days of their receipt.    5.2. Payment Address    For Wire Transfers:       US Bank, N.A.        777 East Wisconsin Avenue        Milwaukee, Wisconsin  53202   ABA #075 000 022  For credit to:  Upper Michigan Energy Resources Corporation  Account # 182381014857       For Other Payments:       Cashiers A139      Upper Michigan Energy Resources Corporation        C/o We Energies      333 W. Everett Street      Milwaukee, Wisconsin  53203    5.3. Interest   Bills that are not paid in full by Alger Delta when due shall thereafter bear interest at the rate of 1   percent per month, or at the maximum rate of interest allowed by law, whichever is less.    5.4. Disputed Bills   In the event of a dispute about any invoice, Alger Delta shall remit the undisputed portion of such invoice, and shall have the option to pay the disputed portion of such invoice under protest or remit the disputed portion of such invoice into an escrow account pending the resolution of the dispute pursuant to Section 11 of this Agreement.    5.5. Termination for Non-Payment of Bills   In the event of non-payment of a bill by Alger Delta, UMERC shall have the right to terminate service sixty (60) days subsequent to the date of the bill;  provided, however, that in the event of any billing dispute, UMERC shall not have the right to terminate service if Alger Delta complies with Section 5.4 of this Agreement, and either pays the disputed amount under protest or places disputed amounts in an escrow account subject to disbursement based upon the resolution of the dispute.  UMERC shall be required to notify Alger Delta in writing of its intent to terminate service for non-payment at least thirty (30) days prior to the actual date of termination of service.  UMERC may not terminate service for reason of non-payment if Alger Delta makes payment prior to the date of termination.    6. ASSIGNMENT    6.1. Assignment of Rights Under the Agreement   Each Party shall have the right to assign all or any portion of its interest in the Agreement upon prior written notice to the other Party, and a Party assigning its rights and obligations under this Agreement shall provide notice to the other Party of the assignment pursuant to Section 12 of this Agreement.  If assignment of this Agreement occurs pursuant to the provisions of this section, this Agreement shall be binding upon and inure to the benefit of the respective successors and assigns of the Parties.    6.2. Obligations After Assignment   In the event of any sale, transfer, or assignment hereunder, the transferor or assignor shall, to the extent of the transferred or assigned obligations, and only to such extent, be relieved of obligations accruing from and after the effective date of such transfer or assignment;  provided, however, that under no circumstances shall any sale, transfer, or assignment relieve the transferor or assignor of any liability for any breach of this Agreement occurring before the effective date of such transfer or assignment.    7. LOAD SHEDDING AND CURTAILMENTS    7.1. Procedures  In accordance with NERC standards and the MISO Energy Market Tariff the MIUP or WPS Balancing Authority implement load shed.  Curtailment notice will be communicated by the Balancing Authority contacting WPPI Energy and/or Alger Delta as soon as practicable after a determination that curtailments are necessary.     7.2. Distribution Constraints   During any period when UMERC, ATC, or MISO determines that a constraint exists on all or a portion of the ATC transmission facilities or UMERC s facilities used to provide Wholesale Distribution Service under this Agreement, and that such constraint may impair the reliability of those facilities or other facilities owned and/or operated by ATC, UMERC, or MISO, UMERC may take whatever actions, consistent with Good Utility Practice, that are reasonably necessary to maintain the reliability of those facilities.  Such actions will be taken in a nondiscriminatory manner.    7.3. Curtailments of Wholesale Distribution Service   If a constraint cannot be relieved through the implementation of other procedures, and if UMERC determines that it is necessary to curtail Wholesale Distribution Service that would otherwise be provided under this Agreement, such deliveries shall be curtailed in a nondiscriminatory fashion.    7.4. Curtailment Allocation of Wholesale Distribution Service For Transmission Constraints   Each Party shall, on a non-discriminatory basis, curtail its use of the system in a manner that effectively relieves the constraint.  However, to the extent practicable and consistent with Good Utility Practice, any curtailment will be proportionately shared by UMERC and Alger Delta.    7.5. System Reliability   Notwithstanding any other provisions of this Agreement, UMERC, for its own purposes or in response to actions taken or requests made by ATC or MISO, reserves the right, consistent with Good Utility Practice and on a basis that is not unduly discriminatory, to curtail Wholesale Distribution Service without liability on UMERC s part.  Such curtailments may be made (a) for the purpose of making necessary adjustments to, changes in, or repairs on the lines, substations, and facilities involved in providing service under this Agreement, or (b) where the continuance of Wholesale Distribution Service would endanger persons or property.      In the event of any adverse conditions or disturbances on UMERC s facilities, or on any other systems directly or indirectly interconnected with UMERC s system, UMERC, consistent with Good Utility Practice, also may curtail Wholesale Distribution Service in order to (i) limit the extent or damage of the adverse conditions or disturbances, (ii) prevent damage to facilities, or (iii) expedite restoration of service.  UMERC will give Alger Delta as much advance notice as is practicable in the event of such curtailment.    7.6. Underfrequency Load Shedding   Alger Delta shall comply with all regulatory underfrequency load shedding requirements through participation in WPPI Energy s Underfrequency Load Shedding plan.  Alger Delta shall supply documentation of such compliance to UMERC and ATC, if requested.    8. ENERGY RELIABILITY ORGANIZATION OBLIGATIONS    8.1. Alger Delta shall comply with all applicable energy reliability organization requirements.    8.2. Alger Delta shall be responsible for paying all energy reliability organization costs associated with its load and the provision of service under this Agreement.    8.3. Alger Delta shall provide all data and information requested by UMERC in order for UMERC to comply with electric reliability organization requirements.    9. CREDIT SUPPORT  UMERC, in order to satisfy itself of the ability of Alger Delta to meet the obligations set forth in this Agreement, may in accordance with standard electric utility practices conduct reasonable credit reviews.  UMERC will require Alger Delta to provide the information and meet the requirements determined by UMERC.  Alger Delta s failure to provide adequate credit support, if required, may be grounds for UMERC to terminate the Agreement.  UMERC may, based on UMERC s credit requirements, require Alger Delta to provide and maintain in effect during the term of this Agreement an unconditional and irrevocable letter of credit, a parental guaranty, or an alternative form and type of security acceptable to UMERC and consistent with commercial practices ( Performance Assurance ).  Such credit support shall not exceed an amount equivalent to the sum of four months of the then current monthly distribution charges.  UMERC reserves the right, on a non-discriminatory basis, to require Alger Delta to submit to UMERC updated financial information to permit UMERC to evaluate Alger Delta s creditworthiness on an on-going basis, and if necessary, to require future Performance Assurance.  Upon receipt of such notice, Alger Delta shall have three (3) business days to remedy the situation by providing such Performance Assurance to UMERC.  In the event Alger Delta fails to provide such Performance Assurance acceptable to UMERC within three (3) business days of receipt of notice, then an event of default will be deemed to have occurred, and UMERC shall have the right to terminate service.  UMERC shall be required to notify Alger Delta in writing of its intent to terminate service at least 60 days prior to the actual date of termination.    10. FORCE MAJEURE AND INDEMNIFICATION    10.1. Force Majeure   To the extent either Party is prevented by Force Majeure from carrying out, in whole or part, its obligations under this Agreement, and such Party ( the Claiming Party ) gives notice and details of the Force Majeure to the other Party as soon as practicable, then, unless this Agreement specifies otherwise, the Claiming Party shall be excused from the performance of its obligations with respect to this Agreement other than payments then due or becoming due with respect to performance prior to the Force Majeure.  The Claiming Party shall commence performance of its obligations after the occurrence of the Force Majeure with all reasonable dispatch.  The non-Claiming Party shall not be required to perform or resume performance of its obligations to the Claiming Party corresponding to the obligations of the Claiming Party excused by Force Majeure.  However, no Party shall be relieved of liability for failure of performance if such failure be due to causes arising out of its negligence or due to removable or remediable causes that it fails to remove or remedy within a reasonable time period.  Nothing contained herein shall be construed to require a Party to settle any strike or labor dispute in which it may be involved.    10.2. Indemnification   Each Party shall at all times, indemnify, defend, and hold harmless the other Party against any and all damages, losses, and claims, including claims and actions relating to injury to or death of any person or damage to property, demands, suits, recoveries, costs and expenses, court costs, attorney fees, and all other obligations by or to third parties, arising out of or resulting from the Party s required performance of its obligations under this Agreement.      10.3. Limitations on Liability   The Parties liability under this Agreement shall be limited to direct, actual damages only.  All other remedies or damages at law or in equity are waived.  Direct, actual damages shall be the sole and exclusive remedy, and in no event, whether as a result of breach of contract, tort liability (including negligence), strict liability, or otherwise, shall either Party be liable to the other Party, its agents, representatives, and/or assigns, for any special, punitive, incidental, indirect, exemplary, or consequential damages of any nature whatsoever, including, but not limited to, loss of profits.  The Parties also intend and agree that such provisions shall continue in full force and effect notwithstanding the termination, suspension, cancellation, or expiration of this Agreement.    11. DISPUTE RESOLUTION      11.1. Dispute Resolution   Any dispute between the Parties involving service under this Agreement shall be referred to a designated senior representative of each Party for resolution on an informal basis as promptly as practicable.  In the event the designated representatives are unable to resolve the dispute within thirty (30) days, or such other period as the Parties may agree upon, the Parties may pursue any remedies available.  Notwithstanding the foregoing, nothing shall prevent the Parties from utilizing arbitration as an available remedy for dispute resolution.  In such case, the Parties must mutually agree and execute a separate arbitration agreement.    11.2. Rights Under the Federal Power Act   Nothing in this section shall restrict the rights of either Party to file a complaint with the Commission under relevant provisions of the Federal Power Act.    12. NOTICES    12.1. Any notice provided for or concerning this Agreement, except the payment of bills as provided in Section 5.2,  shall be in writing and delivered by person or mail to the following:      If to UMERC:   Upper Michigan Energy Resources Corporation      Vice President   Wholesale Energy and Fuels      333 W. Everett Street, A214      Milwaukee, Wisconsin  53203    And    WEC Business Services  Director - Federal Regulatory Affairs and Policy  231 W. Michigan Street, P321  Milwaukee, WI   53203      If to Alger Delta:  General Manager        Alger Delta Cooperative Electric Association        426 N 9th St.       Gladstone, MI  49837    Such notice shall be effective when received by the Party to whom it is sent.    13. SEVERABILITY    13.1. In the event that any of the terms, covenants, or conditions of this Agreement or the application of any such term, covenant, or condition, shall be held invalid as to any person or circumstance by any court having jurisdiction, all other terms, covenants, or conditions of this Agreement and their application shall not be affected thereby, but shall remain in force and effect unless a court holds that the provisions are not separable from all other provisions of this Agreement    14. GOVERNING LAW    14.1. This Agreement shall be interpreted, construed, and enforced in accordance with the laws of the State of Michigan without regard to conflicts of law provisions thereof.    15. SIGNATURE CLAUSE    15.1. The signatories hereto represent that they have been authorized to enter into this Agreement on behalf of the Party for whom they sign.    16. COUNTERPARTS      16.1. This Agreement may be executed in one or more counterparts which taken together shall form a valid Agreement.    [SIGNATURE PAGE FOLLOWS]      IN WITNESS WHEREOF, each of the Parties has caused this Agreement to be executed by its duly authorized representative as of the date first written above.      Alger Delta Cooperative     Upper Michigan Energy Resources Electric Association     Corporation      By:  /s/ Thomas G. Harrell    By:  /s/ J. Patrick Keyes      Name:  Thomas G. Harrell    Name:  J. Patrick Keyes      Title:  Chief Executive Officer   Title:  President             Date:  October 25, 2016    Date: October 25, 2016                              SCHEDULE A    Facilities Used for Provision of Wholesale Distribution Service  LaBranche: Wholesale distribution service shall be provided to Alger Delta Cooperative Electric Association s LaBranche service location from the point of receipt at UMERC's Harris Substation (69 kV to 24.9 kV) over UMERC s 24.9 kV feeder # HAR-83 then converted to 13.8 kV prior to the point of delivery at the Labranche metering structure which is located at the intersection of Highway M-69 and Zawacki Lane D-1 in Harris Township, Menominee County, Michigan, or over any successor facilities should UMERC reconfigure or rebuild its distribution facilities.   Capacity Reservation = 200kW (0.222MW @ 90% Capacity Factor)    Gourley: Wholesale distribution service shall be provided to Alger Delta Cooperative Electric Association s Gourley service location from the point of receipt at UMERC's Harris Substation (69 kV to 24.9 kV) over UMERC s 24.9 kV feeder # HAR-82 to the point of delivery at the Gourley metering structure which is located on County Road 551 approximately 800' south of the intersection of County Road 551 and LaBelle Lane No 39.5 in Gourley Township, Menominee County, Michigan, or over any successor facilities should UMERC reconfigure or rebuild its distribution facilities.   Capacity Reservation = 1.3MW (1.444MW @ 90% Capacity Factor)    G-12 Rd: Wholesale distribution service shall be provided to the Alger-Delta Cooperative Electric Association s service location from the point of receipt at Wisconsin Public Service Corporation s Ingalls Substation (138 kV to 24.9 kV) over UMERC s 24.9 kV feeder # 241 to the point of delivery at the Menominee St metering structure which is located on G-12 Rd east of County Road 348 in the Town of Stephenson, Stephenson Township, Menominee County, Michigan, or over any successor facilities should UMERC reconfigure or rebuild its distribution facilities.        Capacity Reservation = 1.0123 MW (1.125MW @ 90% Capacity Factor)  DC\81592287.1                  1</record_plain_text>
      <record_change_type>NEW</record_change_type>
      <filing_id>174</filing_id>
      <filing_title>UMERC to Alger Delta Rate Schedule No 3</filing_title>
      <filing_type>10</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2017-01-01</current_effective_date>
      <ferc_order_date>2016-12-29</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
    <record_data>
      <record_id>196</record_id>
      <option_code>A</option_code>
      <record_title>UMERC to MSCPA WDA Rate Schedule No 8</record_title>
      <record_content_desc>Cover Sheet</record_content_desc>
      <record_version_num>1.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>11000</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2017-01-01</proposed_effective_date>
      <priority_order>500</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>AGREEMENT     FOR    WHOLESALE DISTRIBUTION SERVICE       Between    Michigan South Central Power Agency    and    Upper Michigan Energy Resources Corporation        FERC Rate Schedule No. 8                              AGREEMENT  FOR  WHOLESALE DISTRIBUTION SERVICE     This Agreement for Wholesale Distribution Service ( Agreement ) entered into this 20th day of October 2016 sets forth the terms and conditions of a contract for the provision of Wholesale Distribution Service between the Upper Michigan Energy Resources Corporation ( UMERC ) and the Michigan South Central Power Agency ( MSCPA ), sometimes hereinafter referred to individually as  Party  and collectively as  Parties .          WHEREAS, MSCPA procures the power generation output from N.E.W. Hydro, Inc. s Menominee/Park Mills Hydroelectric Plants ( Park Mills Hydro ) generation facility,  a third party power generator and wholesale supplier under the MISO Tariff;          WHEREAS, the power generation output from the Park Mills Hydro generation facility is a maximum of 6,250 kW (the  Maximum Generation Output );                 WHEREAS, the Park Mills Hydro s power generation output is delivered to the transmission system owned and operated by ATC over distribution facilities owned by UMERC; and           WHEREAS, in order to effect its procurement of power generation output from the Park Mills Hydro generation facility, MSPCA will require Wholesale Distribution Service over facilities owned by UMERC.      NOW, THEREFORE, in consideration of the mutual agreements contained herein, UMERC and MSCPA agree as follows:    1. DEFINITIONS:    The following terms, when used herein with initial capitalization, whether in the singular or the plural, shall have the meaning specified:    1.1. ATC shall mean the American Transmission Company, LLC.    1.2. Coordinated Functional Registration (CFR) shall mean an agreement in writing between or among two or more entities (parties) upon a division of compliance responsibility among the parties for one or more Reliability Standard(s) applicable to a particular function, and/or for one or more Requirement(s)/sub-Requirement(s) within particular Reliability Standard(s).    1.3. Commission or FERC shall mean the Federal Energy Regulatory Commission or its regulatory successor.    1.4. Force Majeure shall mean any cause beyond the control of an affected Party that, by exercise of due diligence, such Party could not reasonably have been expected to avoid and that, by exercise of due diligence, it has been unable to overcome.  Such causes, include, but are not restricted to the following: failure of or threat of failure of facilities, flood, drought, earthquake, storm, fire, lightning, epidemic, war, riot, civil disturbance or disobedience, labor dispute, labor or material shortage, sabotage, restraint by court order or public authority, and action or non-action by or failure to obtain the necessary authorizations or approvals from any governmental agency or authority.    1.5. Good Utility Practice shall mean any of the practices, methods, and acts engaged in or approved by a significant portion of the electric utility industry located within the MISO area during the relevant time period, or any of the practices, methods, and acts that, in the exercise of reasonable judgment in light of the facts known at the time the decision was made, could have been expected to produce a safe, desirable result, achieved expeditiously and at a reasonable cost consistent with good business practices.  Good Utility Practice is not intended to be limited to the optimum practice, method, or act to the exclusion of all others, but rather to be a range of acceptable practices, methods, or acts used within MISO.    1.6. MISO shall mean the Midcontinent Independent System Operator, Inc.    1.7. NERC shall mean the North American Electric Reliability Corporation or its successor.    1.8. Term shall have the meaning set forth in Section 3 of this Agreement.    1.9. Underfrequency Load Shedding (UFLS) shall mean load shed implemented by installed equipment designed to automatically respond to, and arrest declining frequency. Reliability standards specify the amount of load shed and the entities responsible for ownership, maintenance, and performance of a UFLS program.    1.10. Wholesale Distribution Service shall mean the transmission of power generation procured by MSCPA and delivered to the transmission facilities owned by ATC over facilities owned by UMERC.    1.11. WPS Balancing Authority (WPS BA) shall mean the function of Wisconsin Public Service as the Balancing Authority for the WPS Balancing Authority Area. The WPS BA responsibilities are delineated in the CFR with MISO as maintained at NERC.    2. WHOLESALE DISTRIBUTION SERVICE    2.1. Sale of Wholesale Distribution Service   For the entire Term of this Agreement, UMERC shall provide Wholesale Distribution Service to MSCPA solely for the purpose of supplying the transmission of power generation output from the Park Mills Hydro.  The Wholesale Distribution Service shall be provided between the point of receipt and point of delivery and over the existing facilities specified in Schedule A of this Agreement and will allow energy flow either into, or out of the Park Mills Hydro facility.    2.2. Obligations of MSCPA   MSCPA shall provide UMERC with 12 months notice of any information regarding a planned increase in Maximum Generation Output, as defined above, that might affect UMERC s ability to provide reliable Wholesale Distribution Service under this Agreement.        2.3. Obligations of UMERC   By February 1 of each year, UMERC shall provide MSCPA with a forecast of planned maintenance and construction activities that may adversely affect the ability of UMERC to provide Wholesale Distribution Service to MSCPA.  Further, UMERC shall provide MSCPA with timely notice of any un-planned maintenance or construction activities that might adversely affect Wholesale Distribution Service to MSCPA and will endeavor to carry out such activities in a manner that will minimize adverse consequences and curtailments of Wholesale Distribution Service to MSCPA.     3. TERM    3.1. Term of Service Agreement   The Term of this Agreement shall begin on the later of January 1, 2017 or upon the receipt of all applicable state and federal regulatory approvals of UMERC, and shall continue until terminated by either Party in accordance with Section 3.2 of this Agreement.    3.2. Termination of Service Agreement   Either Party may terminate this Agreement at any time after granting the other Party one year s written notice of its intent to terminate the Agreement, subject to any regulatory approvals.    4. RATES AND CHARGES    4.1. Rate for Wholesale Distribution Service   MSCPA shall pay to UMERC $3,002.89 per month for the Wholesale Distribution Service provided under this Agreement, or such other rate established pursuant to Section 4.3 of this Agreement as follows:  Receipt/Delivery Points   Charge   11th Ave to Second Street Substation  $3,002.89    4.2. Real Power Losses   MSCPA shall be responsible for compensating for losses associated with the Wholesale Distribution Service under this Agreement.  The real power loss factor rates on the distribution facilities identified in Schedule A and required to provide the Wholesale Distribution Service are as indicated in Section 4.2(a) and will be calculated based on metered load at the distribution delivery point.      a. Real Power Loss Factor Rates  Delivery Point    Rate  Not Applicable    b. MSCPA shall ensure that the metered load at each distribution delivery point is incremented by its energy supplier, according to the Real Power Loss Factor Rates specified in 4.2(a) for load reporting and settlement purposes so that reported load includes distribution losses.    4.3. Rate Changes   Nothing in this Agreement shall be construed as affecting in any way the right of UMERC to unilaterally make application to the Commission for a change in the rate for Wholesale Distribution Service.  UMERC shall notify MSCPA no later than the date of Commission filing, of its intent to file for an adjustment in rates.  UMERC s notification shall consist of the application package sent to the Commission. UMERC agrees that, in the event that UMERC makes such application to the Commission, UMERC shall not oppose MSCPA s right to intervene and protest such application.    5. BILLING AND PAYMENT    5.1. Billing Date   After commencement of this Agreement, UMERC shall issue bills to MSCPA on a calendar month basis, by the 10th working day following the calendar month to which they apply.  All bills shall be due and payable within 20 days of their receipt.    5.2. Payment Address    For Wire Transfers:       US Bank, N.A.        777 East Wisconsin Avenue        Milwaukee, Wisconsin  53202        ABA #075 000 022  For credit to:  Upper Michigan Energy Resources Corporation       Account # 182381014857             For Other Payments:       Cashiers A139      Upper Michigan Energy Resources Corporation        C/o We Energies      333 W. Everett Street      Milwaukee, Wisconsin  53203    5.3. Interest   Bills that are not paid in full by MSCPA when due shall thereafter bear interest at the rate of 1   percent per month, or at the maximum rate of interest allowed by law, whichever is less.    5.4. Disputed Bills   In the event of a dispute about any invoice, MSCPA shall remit the undisputed portion of such invoice, and shall have the option to pay the disputed portion of such invoice under protest or remit the disputed portion of such invoice into an escrow account pending the resolution of the dispute pursuant to Section 11 of this Agreement.    5.5. Termination for Non-Payment of Bills   In the event of non-payment of a bill by MSCPA, UMERC shall have the right to terminate service sixty (60) days subsequent to the date of the bill;  provided, however, that in the event of any billing dispute, UMERC shall not have the right to terminate service if MSCPA complies with Section 5.4 of this Agreement, and either pays the disputed amount under protest or places disputed amounts in an escrow account subject to disbursement based upon the resolution of the dispute.  UMERC shall be required to notify MSCPA in writing of its intent to terminate service for non-payment at least thirty (30) days prior to the actual date of termination of service.  UMERC may not terminate service for reason of non-payment if MSCPA makes payment prior to the date of termination.    6. ASSIGNMENT    6.1. Assignment of Rights Under the Agreement   Each Party shall have the right to assign all or any portion of its interest in the Agreement upon prior written notice to the other Party, and a Party assigning its rights and obligations under this Agreement shall provide notice to the other Party of the assignment pursuant to Section 12 of this Agreement.  If assignment of this Agreement occurs pursuant to the provisions of this section, this Agreement shall be binding upon and inure to the benefit of the respective successors and assigns of the Parties.    6.2. Obligations After Assignment   In the event of any sale, transfer, or assignment hereunder, the transferor or assignor shall, to the extent of the transferred or assigned obligations, and only to such extent, be relieved of obligations accruing from and after the effective date of such transfer or assignment;  provided, however, that under no circumstances shall any sale, transfer, or assignment relieve the transferor or assignor of any liability for any breach of this Agreement occurring before the effective date of such transfer or assignment.    7. LOAD SHEDDING AND CURTAILMENTS    7.1. Procedures In accordance with NERC standards and the MISO Energy Market Tariff  the WPS Balancing Authority implements load shed.  Curtailment notice will be communicated by the WPS Balancing Authority contacting MSCPA as soon as practicable after a determination that curtailments are necessary.     7.2. Distribution Constraints   During any period when UMERC, ATC, or MISO determines that a constraint exists on all or a portion of the ATC transmission facilities or UMERC s facilities used to provide Wholesale Distribution Service under this Agreement, and that such constraint may impair the reliability of those facilities or other facilities owned and/or operated by ATC, UMERC, or MISO, UMERC may take whatever actions, consistent with Good Utility Practice, that are reasonably necessary to maintain the reliability of those facilities.  Such actions will be taken in a nondiscriminatory manner.    7.3. Curtailments of Wholesale Distribution Service   If a constraint cannot be relieved through the implementation of other procedures, and if UMERC determines that it is necessary to curtail Wholesale Distribution Service that would otherwise be provided under this Agreement, such deliveries shall be curtailed in a nondiscriminatory fashion.    7.4. Curtailment Allocation of Wholesale Distribution Service For Transmission Constraints   Each Party shall, on a non-discriminatory basis, curtail its use of the system in a manner that effectively relieves the constraint.  However, to the extent practicable and consistent with Good Utility Practice, any curtailment will be proportionately shared by UMERC and MSCPA.    7.5. System Reliability   Notwithstanding any other provisions of this Agreement, UMERC, for its own purposes or in response to actions taken or requests made by ATC or MISO, reserves the right, consistent with Good Utility Practice and on a basis that is not unduly discriminatory, to curtail Wholesale Distribution Service without liability on UMERC s part.  Such curtailments may be made (a) for the purpose of making necessary adjustments to, changes in, or repairs on the lines, substations, and facilities involved in providing service under this Agreement, or (b) where the continuance of Wholesale Distribution Service would endanger persons or property.      In the event of any adverse conditions or disturbances on UMERC s facilities, or on any other systems directly or indirectly interconnected with UMERC s system, UMERC, consistent with Good Utility Practice, also may curtail Wholesale Distribution Service in order to (i) limit the extent or damage of the adverse conditions or disturbances, (ii) prevent damage to facilities, or (iii) expedite restoration of service.  UMERC will give MSCPA as much advance notice as is practicable in the event of such curtailment.    7.6. Underfrequency Load Shedding   MSCPA shall comply with all regulatory underfrequency load shedding requirements through participation in MSCPA s Underfrequency Load Shedding plan.  MSCPA shall supply documentation of such compliance to UMERC and ATC, if requested.    8. ENERGY RELIABILITY ORGANIZATION OBLIGATIONS    8.1. MSCPA shall comply with all applicable energy reliability organization requirements.    8.2. MSCPA shall be responsible for paying all energy reliability organization costs associated with its load and the provision of service under this Agreement.    8.3. MSCPA shall provide all data and information requested by UMERC in order for UMERC to comply with electric reliability organization requirements.         9. CREDIT SUPPORT  UMERC, in order to satisfy itself of the ability of MSCPA to meet the obligations set forth in this Agreement, may in accordance with standard commercial practices conduct reasonable credit reviews.  UMERC will require MSCPA to provide the information and meet the requirements determined by UMERC.  MSCPA s failure to provide adequate credit support, if required, may be grounds for UMERC to terminate the Agreement.  UMERC may, based on UMERC s credit requirements, require MSCPA to provide and maintain in effect during the term of this Agreement an unconditional and irrevocable letter of credit, a parental guaranty, or an alternative form and type of security acceptable to UMERC and consistent with commercial practices ( Performance Assurance ).  Such credit support shall not exceed an amount equivalent to the sum of four months of the then current monthly distribution charges.  UMERC reserves the right, on a non-discriminatory basis, to require MSCPA to submit to UMERC updated financial information to permit UMERC to evaluate MSCPA s creditworthiness on an on-going basis, and if necessary, to require future Performance Assurance.  Upon receipt of such notice, MSCPA shall have three (3) business days to remedy the situation by providing such Performance Assurance to UMERC.  In the event MSCPA fails to provide such Performance Assurance acceptable to UMERC within three (3) business days of receipt of notice, then an event of default will be deemed to have occurred, and UMERC shall have the right to terminate service.  UMERC shall be required to notify MSCPA in writing of its intent to terminate service at least 60 days prior to the actual date of termination.    10. FORCE MAJEURE AND INDEMNIFICATION    10.1. Force Majeure   To the extent either Party is prevented by Force Majeure from carrying out, in whole or part, its obligations under this Agreement, and such Party ( the Claiming Party ) gives notice and details of the Force Majeure to the other Party as soon as practicable, then, unless this Agreement specifies otherwise, the Claiming Party shall be excused from the performance of its obligations with respect to this Agreement other than payments then due or becoming due with respect to performance prior to the Force Majeure.  The Claiming Party shall commence performance of its obligations after the occurrence of the Force Majeure with all reasonable dispatch.  The non-Claiming Party shall not be required to perform or resume performance of its obligations to the Claiming Party corresponding to the obligations of the Claiming Party excused by Force Majeure.  However, no Party shall be relieved of liability for failure of performance if such failure be due to causes arising out of its negligence or due to removable or remediable causes that it fails to remove or remedy within a reasonable time period.  Nothing contained herein shall be construed to require a Party to settle any strike or labor dispute in which it may be involved.    10.2. Indemnification   Each Party shall at all times, indemnify, defend, and hold harmless the other Party against any and all damages, losses, and claims, including claims and actions relating to injury to or death of any person or damage to property, demands, suits, recoveries, costs and expenses, court costs, attorney fees, and all other obligations by or to third parties, arising out of or resulting from the Party s required performance of its obligations under this Agreement.      10.3. Limitations on Liability   The Parties liability under this Agreement shall be limited to direct, actual damages only.  All other remedies or damages at law or in equity are waived.  Direct, actual damages shall be the sole and exclusive remedy, and in no event, whether as a result of breach of contract, tort liability (including negligence), strict liability, or otherwise, shall either Party be liable to the other Party, its agents, representatives, and/or assigns, for any special, punitive, incidental, indirect, exemplary, or consequential damages of any nature whatsoever, including, but not limited to, loss of profits.  The Parties also intend and agree that such provisions shall continue in full force and effect notwithstanding the termination, suspension, cancellation, or expiration of this Agreement.    11. DISPUTE RESOLUTION      11.1. Dispute Resolution   Any dispute between the Parties involving service under this Agreement shall be referred to a designated senior representative of each Party for resolution on an informal basis as promptly as practicable.  In the event the designated representatives are unable to resolve the dispute within thirty (30) days, or such other period as the Parties may agree upon, the Parties may pursue any remedies available.      11.2. Rights Under the Federal Power Act   Nothing in this section shall restrict the rights of either Party to file a complaint with the Commission under relevant provisions of the Federal Power Act.    12. NOTICES    12.1. Any notice provided for or concerning this Agreement, except the payment of bills as provided in Section 5.2,  shall be in writing and delivered by person or mail to the following:      If to UMERC:   Upper Michigan Energy Resources Corporation      Vice President   Wholesale Energy and Fuels      333 W. Everett Street, A214      Milwaukee, Wisconsin  53203    And    WEC Business Services  Director   Federal Regulatory Affairs and Policy  231 W. Michigan Street, P321  Milwaukee, WI   53203         If to MSCPA:   Michigan South Central Power Agency       Attn: Glen White   General Manager       720 Herring Road       Litchfield, MI 49252      Such notice shall be effective when received by the Party to whom it is sent.    13. SEVERABILITY    13.1. In the event that any of the terms, covenants, or conditions of this Agreement or the application of any such term, covenant, or condition, shall be held invalid as to any person or circumstance by any court having jurisdiction, all other terms, covenants, or conditions of this Agreement and their application shall not be affected thereby, but shall remain in force and effect unless a court holds that the provisions are not separable from all other provisions of this Agreement    14. GOVERNING LAW    14.1. This Agreement shall be interpreted, construed, and enforced in accordance with the laws of the State of Michigan without regard to conflicts of law provisions thereof.    15. SIGNATURE CLAUSE    15.1. The signatories hereto represent that they have been authorized to enter into this Agreement on behalf of the Party for whom they sign.    16. COUNTERPARTS      16.1. This Agreement may be executed in one or more counterparts which taken together shall form a valid Agreement.    [SIGNATURE PAGE FOLLOWS]    IN WITNESS WHEREOF, each of the Parties has caused this Agreement to be executed by its duly authorized representative as of the date first written above.      Michigan South Central Power Agency Upper Michigan Energy Resources Corporation      By:  /s/ Glen White     By:  /s/ J. Patrick Keyes      Name:  Glen White     Name:  J. Patrick Keyes      Title:  General Manager    Title:  President             Date:  October 27, 2016    Date:  October 27, 2016          SCHEDULE A    Facilities Used for Provision of Wholesale Distribution Service  11th Ave: Wholesale distribution service shall be provided to the Michigan South Central Power Agency s (MSCPA) from the point of receipt at the Park Mills Hydro facility s 11th Ave metering structure which is located on 11th Ave west of 25th St in the City of Menominee, Menominee County, Michigan, over Upper Michigan Energy Resource Corporation s (UMERC) 24.9 kV feeder # 241 to the point of delivery at UMERC s Second Street Substation (24.9 kV to 69 kV), or over any successor facilities should UMERC reconfigure or rebuild its distribution facilities.        Capacity Reservation = 4.615MW (5.128MW @ 90% Capacity Factor)  DC\81593705.1            1</record_plain_text>
      <record_change_type>NEW</record_change_type>
      <filing_id>176</filing_id>
      <filing_title>UMERC to MSCPA FERC Rate Schedule No 8</filing_title>
      <filing_type>10</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2017-01-01</current_effective_date>
      <ferc_order_date>2016-12-29</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
    <record_data>
      <record_id>194</record_id>
      <option_code>A</option_code>
      <record_title>UMERC - ATC CFA Rate Schedule No 9</record_title>
      <record_content_desc>Cover Sheet</record_content_desc>
      <record_version_num>1.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>9000</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2017-01-01</proposed_effective_date>
      <priority_order>500</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>COMMON FACILITIES AGREEMENT       THIS COMMON FACILITIES AGREEMENT ( Agreement ) is entered into as of October  13, 2016 by and between Upper Michigan Energy Resources Corporation ( UMERC ), a Michigan corporation ( Distribution Utility ), and American Transmission Company LLC ( ATCLLC ), a Wisconsin limited liability company (collectively, the  Parties ).  Distribution Utility and ATCLLC are referred to individually as a  Party  and collectively as the  Parties.   RECITALS   WHEREAS, Distribution Utility and ATCLLC each own  joint use  substations which house facilities owned by both Parties, including common facilities that are used and useful to both Parties; and   WHEREAS, the Parties desire to establish in this Agreement the allocation of cost responsibility for the operation and maintenance of common facilities at joint use substations; and   WHEREAS, the Parties desire to provide in this Agreement for a method of requesting, performing and compensating for the expansion, improvement, or replacement of common facilities at joint use substations.   NOW, THEREFORE, in consideration of the promises and mutual covenants contained herein, the Parties hereby agree as follows:  ARTICLE I  DEFINITIONS AND INTERPRETATION   1.1 Definitions, Generally   Unless defined in this Agreement, the definition of each capitalized term used in this Agreement shall be the same as the definition for that term set forth in the Operating Agreement of ATCLLC, the Asset Contribution Agreements between ATCLLC and Distribution Utility, or the Project Services Agreement between ATCLLC and Distribution Utility.   1.2 Special Definitions   The following defined terms used in this Agreement shall be defined as set forth below:    1.2.1 Assignable Facilities    Assignable Facilities  are those facilities at a Joint Use Substation that belong to and serve a single owner and are not Common Facilities and are used and useful.    1.2.2 Common Facilities    Common Facilities  are those facilities at a Joint Use Substation that are used and useful to both Parties.  Common Facilities include, but are not limited to batteries, structures that house equipment, ground grids, fences, gravel areas, parking areas, landscaping, access roads, yard lighting, shielding, and screening. Common Facilities do not include land, land rights, Assignable Facilities, or those Common Facilities deemed to be of De minimis Use by the parties to this Agreement.    1.2.3 Common Facilities Owner    Common Facilities Owner  means, unless otherwise agreed to in writing by the Parties, the Party that owns the greater value (based on original installed cost) of Assignable Facilities at the Joint Use Substation as of the date the substation became a Joint Use Substation (whether by designation or completion of construction).    1.2.4 Cost(s)    Cost(s)  means all direct and indirect costs incurred by a Party.  Direct and indirect costs include but are not limited to labor costs with overheads which shall include labor costs for tasks such as recording costs and invoicing; the actual cost of materials and supplies; return of and on the cost of property employed; and payments to contractors (without additional charges or markups), plus all overheads directly associated with any and all of these costs.  Distribution Utility s Costs shall be calculated using the rates and charges set forth on Schedule 1, Section A or Section B.  The rates and charges set forth on Schedule 1, Section A shall apply to those instances when Distribution Utility is performing work on Distribution Facilities or other assets owned by Distribution Utility, such as Common Facilities, for which ATCLLC is responsible to make payment to Distribution Utility.  The rates and charges set forth on Schedule 1, Section B shall apply in those instances in which Distribution Utility is performing work on Transmission Facilities or other assets owned by ATCLLC, such as Common Facilities, for which ATCLLC is responsible to make payment to Distribution Utility.  ATCLLC s Costs shall be determined using the rates and charges set forth on Schedule 2, Section A or Section B.   The rates and charges set forth on Schedule 2, Section A shall apply to those instances when ATCLLC is performing work on Transmission Facilities or other assets owned by ATCLLC, such as Common Facilities, for which Distribution Utility is responsible to make payment to ATCLLC.  The rates and charges set forth on Schedule 2, Section B shall apply in those instances in which ATCLLC is performing work on Distribution Facilities or other assets owned by Distribution Utility, for which Distribution Utility is responsible to make payment to ATCLLC.  The rates and charges set forth on Schedule 1 may be changed from time to time by the Distribution Utility and the rates and charges set forth on Schedule 2 may be changed from time to time by ATCLLC; however, any such changes must be communicated to the other Party in writing within fourteen (14) days of such change or within the next billing cycle of such change.  If the rates and charges are changed, then the Party making such change shall provide a revised Schedule to the other Party reflecting such change, and such change shall be reflected in any Change Order provided for in Section 4.11 of the Project Services Agreement as may be required.            1.2.5 De minimis Use    De minimis Use  shall describe the situation where the used and useful benefit of a Common Facilities Owner s asset is of minimal or insignificant value or benefit to a Joint Use Substation Tenant and therefore does not warrant proportionate cost allocation by the Common Facilities Owner.  Examples may include, but are not limited to, spare fuse storage in a control house, a control wire in a trench, conduit, and/or cable tray or the presence of metering for balancing authority or revenue collection purposes.         1.2.6 Distribution Facilities    Distribution Facilities  shall mean those Assignable Facilities owned by Distribution Utility that are used for the distribution of electricity at nominal voltages that are lower than 50 kV.                1.2.7 Good Utility Practice    Good Utility Practice  shall mean any of the practices, methods and acts engaged in or approved by a significant portion of the electric utility industry during the relevant time period, or any of the practices, methods and acts which, in the exercise of reasonable judgment in light of the facts known at the time the decision was made, could have been expected to accomplish the desired result at a reasonable cost consistent with good business practices, reliability, safety and expedition.  Good Utility Practice is not intended to be limited to the optimum practice, method or act to the exclusion of all others, but rather is intended to include acceptable practices, methods, or acts generally accepted in the region.                1.2.8 Joint Use Substation    Joint Use Substation  means a substation at which Assignable Facilities are owned and operated by each Party.  The Joint Use Substations covered by this Agreement shall be reviewed annually and updated to reflect any additions to, or modifications of, any Joint Use Substations. A list of Joint Use Substations prepared and agreed to under this Section 1.2.8 shall be provided to both Parties, but shall not be considered exhibits or amendments to this Agreement and shall not be filed with regulatory agencies, specifically including but not limited to FERC, the Public Service Commission of Wisconsin or the Michigan Public Service Commission.    1.2.9 Joint Use Substation Tenant    Joint Use Substation Tenant  means an entity who is not the Common Facilities Owner.  There may be more than one Joint Use Substation Tenant associated with a Joint Use Substation.    1.2.10 Joint Use Substation Tenant s Allocable Share   The Initial  Joint Use Substation Tenant s Allocable Share  shall be the percentage derived by dividing the Joint Use Substation Tenant s total Assignable Facilities value (at original cost) by the total value (at original cost) of all Assignable Facilities at each substation determined using the original costs as of June 30, 2017.  Thereafter, any changes to the Joint Use Tenant s Allocable Share shall be determined in accordance with Article 4.                1.2.11 Net Book Investment Value    Net Book Investment Value  means original cost less accumulated book depreciation.    1.2.12 Return On and Of Billing    Return On and Of Billing  means an annual billing of a Joint Use Substation Tenant by the Common Facilities Owner pursuant to Article 4 of this Agreement of the following amounts:   (a)  Return on investment  shall be calculated as follows: by multiplying the total Net Book Investment Value of the Common Facilities times the overall pre-tax rate of return allowed the Common Facilities Owner by the governmental agency with jurisdiction over Common Facilities Owner s rates in its most recent rate order times the Joint Use Substation Tenant s Allocable Share; and   (b)  Return of investment   shall be calculated as follows:  by using the depreciation rate most recently established for the Common Facilities by the governmental agency with jurisdiction over Common Facilities Owner s rates in its most recent depreciation order, determine the annual depreciation of the Common Facilities, then multiply by the Joint Use Substation Tenant s Allocable Share.    1.2.13 Service    Service  means operation and maintenance of Common Facilities performed by the Common Facilities Owner under Article 4 of this Agreement and Common Facilities expansions, improvements, or replacements performed by the Common Facilities Owner under Article 5 of this Agreement.        1.2.14 Transmission Facilities    Transmission Facilities  shall mean those Assignable Facilities owned by ATCLLC and used by it for (i) the transmission of electric energy at voltages that are 50 kV and higher or (ii) the transmission of electricity regardless of the nominal voltage at which such facility is designed to operate or does operate, if the facilities are designated by the Public Service Commission of Wisconsin as transmission facilities.    1.2.15 Transmission System    Transmission System  shall mean the system of facilities for the transmission of electric energy that is owned by ATCLLC.  ARTICLE 2  TERM   This Agreement shall be effective from the date hereof ( Effective Date ) and shall continue in effect until terminated upon not less than one (1) year s notice by one Party to the other; provided, however, that the provisions of this Agreement shall survive termination as to any Services being performed through and including the effective date of termination, and that the respective parties shall agree to work collaboratively and cooperatively to address any forward looking operational and/or ownership issues.  ARTICLE 3  REQUIRED REGULATORY APPROVALS AND REPORTING   3.1 The effectiveness of this Agreement is expressly conditioned upon the receipt by the Parties of all permits, regulatory authorizations and regulatory approvals that are required in order for the Parties to enter into and perform their obligations under this Agreement in a form acceptable in the reasonable judgment of the Party affected thereby.   3.2 ATC shall provide such reports as the Public Service Commission of Wisconsin ( PSCW ) and/or the Michigan Public Service Commission ( MPSC ) shall require of work performed and compensation paid under this Agreement.  The Parties will cooperate in providing the PSCW with such information as it may require in its review and audit of work performed and compensation paid under this Agreement.  ARTICLE 4  OPERATION AND MAINTENANCE   4.1 Assignable Facilities   Each Party is responsible for the operation and maintenance of its Assignable Facilities at its sole cost.   4.2 Common Facilities   The Common Facilities Owner shall perform or have performed all operation and maintenance of Common Facilities as required by and in accordance with Good Utility Practice.  At the end of each month, the Common Facilities Owner shall calculate and bill each Joint Use Substation Tenant, and each Joint Use Substation Tenant shall pay the Common Facilities Owner, the Joint Use Substation Tenant s Allocable Share of the Common Facilities Owner s Costs of operating and maintaining Common Facilities.  The amount to be billed by the Common Facilities Owner shall be determined by multiplying the weighted average of the Joint Use Tenant s Allocable Share for all substations times the aggregate costs associated with operating and maintaining the Common Facilities at all Joint Use Substations.  4.3 Annual Redetermination of Joint Use Tenant s Allocable Share and Return Of and On Billing Amounts.          Beginning the year after the initial year of this Agreement, the Parties shall exchange accounting information necessary to determine the Joint Use Tenant s Allocable Share in the manner provided for in Section 1.2.10 based on the values as of June 30 of such year.  Thereafter, by August 15 the Parties shall agree upon the Joint Use Substation Tenant s Allocable Share.  The Joint Use Substation Tenant s Allocable Share shall be applicable to all billings made beginning on or after January 1 of the succeeding year.  The Return Of and Return On Billing calculations set forth in Section 1.2.12 shall be adjusted accordingly using values determined as of June 30 of each year and such adjusted Return Of and Return On Billing calculations shall be applicable to all billings made beginning on or after January 1st of the succeeding year.  ARTICLE 5  COMMON FACILITIES EXPANSIONS, IMPROVEMENTS, REPLACEMENTS AND SERVICES   5.1 Common Facilities Improvements   When existing Common Facilities must be expanded, improved, or replaced by reason of degradation or failure due to use over time, or the Parties mutually agree upon an expansion, improvement, or replacement of Common Facilities, the Parties shall cooperate in good faith on the design, engineering, scheduling and installation of the expansion, improvement, or replacement.  The functionality of the expanded, improved, or replaced Common Facilities shall be equal to or greater than their original functionality unless the Common Facilities Owner and Joint Use Substation Tenants agree otherwise.  The Common Facilities Owner shall perform or have performed the expansion, improvement, or replacement in accordance with Good Utility Practice and will own the expanded, improved, or replaced Common Facilities when they are completed.  Each Joint Use Substation Tenant shall pay its Joint Use Substation Tenant s Allocable Share of the Common Facilities Owner s Costs of the expansion, improvement, or replacement to the Common Facilities Owner through the Return On and Of Billing.   5.2 Common Facilities Expansions, Improvements, or Replacements Initiated by the Common Facilities Owner           If the Common Facilities Owner determines that a modification to its Assignable Facilities or a change in its business needs or operating requirements requires an expansion, improvement, or replacement of Common Facilities at a Joint Use Substation, it shall provide reasonable notice to the Joint Use Substation Tenants of that Joint Use Substation.  The Parties shall cooperate in good faith on the design, engineering, scheduling and installation of the expansion, improvement, or replacement.  The Common Facilities Owner shall perform or have performed the expansion, improvement, or replacement in accordance with Good Utility Practice and will own the expanded, improved, or replaced Common Facilities when they are completed.  Each Joint Use Substation Tenant shall pay its Joint Use Substation Tenant Allocable Share of the Common Facilities Owner s Costs of the expansion, improvement, or replacement to the Common Facilities Owner through Return On and Of Billing.   5.3 Common Facilities Expansions, Improvements, or Replacements Initiated by a Joint Use Substation Tenant     If a Joint Use Substation Tenant determines that a modification to its Assignable Facilities or a change in its business needs or operating requirements requires an expansion, improvement, or replacement of Common Facilities at a Joint Use Substation, the Joint Use Substation Tenant may request the Common Facilities Owner to perform the expansion, improvement, or replacement pursuant to the Project Services Agreement between the Common Facilities Owner and ATCLLC.  The Project Services Agreement shall govern the request except as follows:   5.3.1 When a Joint Use Substation Tenant reimburses the Common Facilities Owner for the expansion, improvement, or replacement of Common Facilities, the value of such Common Facility expansion, improvement, or replacement shall be entered on the books of the Common Facilities Owner at zero net book value.  The expansion, improvement, or replacement shall not be reflected in the Common Facilities Owners  Return On and Of Billings.   5.3.2 Any reimbursement shall be made at a time that is mutually agreeable to the Common Facilities Owner and the Joint Use Substation Tenant.  Upon receipt of such reimbursement, the Common Facilities Owner shall assume responsibility for any and all tax liabilities resulting from such reimbursement.  ARTICLE 6  RIGHT TO AUDIT AND DISPUTE RESOLUTION        6.1 Audits        Performing Party shall maintain and retain for such time as Requesting Party may reasonably direct, but not for longer than six (6) years, the books and other records needed to document the costs Performing Party incurs as a result of fulfilling its obligations under this Agreement.  Performing Party shall respond to any reasonable request from Requesting Party for information related to a Cost charged by Performing Party to Requesting Party by providing  Requesting Party the information reasonably needed by Requesting Party to verify the Cost in question.  From time to time, Requesting Party may conduct, and Performing Party shall permit Requesting Party to conduct or cause to be conducted by its authorized agents, at Requesting Party s expense, audits of the books and records of Performing Party that relate to the Services provided under this Agreement.  Such audits will be conducted at reasonable mutually agreed upon times, provided that Requesting Party must contest invoices within one (1) year of receipt and must complete any audit relating to a contested invoice within a reasonable period of time thereafter.  Any adjustment identified to be made as a result of an audit and that is payable under Schedule 1 or Schedule 2 shall be made to the billing statement next issued following the conclusion of the audit.        6.2  Disputes        Disputes arising out of or relating to this Agreement shall first be discussed by the respective Managers for the Common Facilities Owner and the Joint Use Substation Tenant immediately responsible for the supervision of the departments in which the dispute has arisen.  Any dispute that cannot be resolved at the Manager level shall be referred to Vice President.  If the resolution cannot be resolved at the Vice President level, the parties shall submit to non-binding mediation.  Any dispute that cannot be resolved within a reasonable period of time after the date of submission of the dispute at the Vice President level shall then be referred to the Common Facilities Owner and the Joint Use Substation Tenant.  If a satisfactory resolution is not achieved between the Vice Presidents of both Parties, the Parties shall submit to non-binding mediation, prior to resorting to other remedies available at law or equity.  ARTICLE 7  FORCE MAJEURE        To the extent performance by either Party to this Agreement is prevented or delayed due to circumstances beyond the reasonable control of the Party (such circumstances shall be hereinafter referred to as events of  Force Majeure ), such Party shall promptly give written notice to the other Party, and shall exercise all commercially reasonable efforts to overcome the effects of the event of Force Majeure.  The written notification shall include a full and complete explanation of the event of Force Majeure, and the actions such Party is taking or proposes to take to overcome the event of Force Majeure.  Either Party upon receipt of the written notice called for under this paragraph shall have the right, upon written notice to the affected Party, to obtain alternate contractors to perform any work required under this Agreement during any event of Force Majeure that prevents or delays the other Party s performance for a period of ten (10) consecutive days or more.  ARTICLE 8  LIMITATION OF LIABILITY   With respect to claims by and between the Parties under this Agreement, the measure of damages at law or in equity in any action or proceeding shall be limited to direct actual damages only.  Such direct actual damages shall be the sole and exclusive remedy and all other remedies or damages at law or in equity are waived and neither Party shall be liable in statute, contract, in tort (including negligence), strict liability, warranty or under any other legal theory or otherwise to the other Party, its agents, representatives, and/or assigns, for any special, incidental, punitive, exemplary or consequential loss or damage whatsoever, including but not limited to, loss of profits or revenue on work not performed, for loss of use of or under-utilization of the other Party s facilities, loss of use of revenues, or loss of anticipated profits, resulting from either Party s performance or non-performance of an obligation imposed on it by this Agreement, without regard to the cause or causes related thereto, including the negligence of any party.  The Parties expressly acknowledge and agree that this limitation shall apply to any claims for indemnification under Article 9 of this Agreement.  The provisions of this Article shall survive the termination or expiration of this Agreement.  ARTICLE 9  INDEMNITY   9.1 Indemnification Obligation         Subject to the provisions of Article 8, a Party ( Indemnifying Party ) shall indemnify, hold harmless and defend the other Party ( Indemnified Party ), and its officers, directors, employees, affiliates, managers, members, trustees, shareholders, agents, contractors, subcontractors, affiliates  employees, invitees and successors, from and against any and all claims, demands, suits, obligations, payments, liabilities, costs, losses, judgments, damages and expenses (including the reasonable costs and expenses of any and all actions, suits, proceedings, assessments, judgments, settlements, and compromises relating thereto, reasonable attorneys  and expert fees and reasonable disbursements in connection therewith) for damage to property, injury to any person or entity, or death of any individual, including the Indemnified Party s employees and affiliates  employees, the Indemnifying Party s employees, or any other third parties, to the extent caused wholly or in part by any act or omission, negligent or otherwise, by the Indemnifying Party or its officers, directors, employees, agents, contractors, subcontractors and invitees arising out of or connected with the Indemnifying Party s performance or breach of this Agreement, or the exercise by the Indemnifying Party of its rights hereunder; provided, however, that the provisions of this Article shall not apply if any such injury, death or damage is held to have been caused by the negligence or intentional wrongdoing of the Indemnified Party, its agents or employees.  In furtherance of the foregoing indemnification and not by way of limitation thereof, the Indemnifying Party hereby waives any defense it otherwise might have under applicable workers  compensation laws.   9.2 Indemnification Procedures         A Party seeking indemnification from the other Party under this Agreement shall give the other Party notice of such claim as soon as practicable but in any event on or before the thirtieth (30th) day after the Party s actual knowledge of such claim or action.  Such notice shall describe the claim in reasonable detail, and shall indicate the amount (estimated if necessary) of the claim that has been, or may be, sustained by said Party.  To the extent that the other Party will have been actually and materially prejudiced as a result of the failure to provide such notice, such notice will be a condition precedent to any liability of the other Party under the provisions for indemnification contained in this Agreement.  Neither Party may settle or compromise any claim for which indemnification is sought under this Agreement without the prior consent of the other Party; provided, however, said consent shall not be unreasonably withheld or delayed.  Each Party s indemnification obligation will survive expiration, cancellation or early termination of this Agreement.  ARTICLE 10  INSURANCE   10.1 Insurance Requirements   The Parties agree to maintain, at their own cost and expense, general and automobile liability, worker s compensation, and other forms of insurance relating to their operations for the life of this Agreement in the manner, and amounts, at a minimum, as set forth below:  (a) Workers  Compensation Insurance in accordance with all applicable state, federal and maritime law, including Employer s Liability Insurance in the amount of $1,000,000 per accident;  (b) Commercial General Liability Insurance, including Contractual Liability Coverage for liabilities assumed under this Agreement and Personal Injury Coverage in the amount of $25,000,000 per occurrence for bodily injury and property damage.  Each Distribution Utility s policy shall include ATCLLC and ATC Management Inc. as additional insured and ATCLLC s policy shall include each Distribution Utility as an additional insured.  (c) Automobile Liability Insurance for all owned, non-owned, and hired vehicles with bodily injury limits of no less than $5,000,000 per person, $5,000,000 per accident; and property damage limits of no less than $5,000,000 per accident.  Each Distribution Utility s policy shall include ATCLLC and ATC Management Inc. as additional insured and ATCLLC s policy shall include each Distribution Utility as an additional insured.  (d) Where a Party has more than $100 million in assets it may, at its option, self insure all or part of the insurances required in this Article 10; provided, however, the self-insuring Party agrees that all other provisions of this Article 10, including, but not limited to, waiver of subrogation, waiver of rights of recourse, and additional insured status, which provide or are intended to provide protection for the insured Party and its affiliated and associated companies under this Agreement, shall remain enforceable.  A Party s election to self-insure shall not impair, limit, or in any manner result in a reduction of rights and/or benefits otherwise available to the insured Party and its affiliated and associated companies through formal insurance policies and endorsements as specified in the above parts of this Article 10.  The self-insuring Party agrees that all amounts of self-insurance, retentions and/or deductibles are the responsibility of and shall be borne by the self-insuring Party.   10.2 Certification   Within fifteen (15) days of the Effective Date, and each anniversary of the Effective Date, during the term of this Agreement, (including any extensions), each insuring Party shall provide to the insured Party, properly executed and current certificates of insurance with respect to all insurance policies required to be maintained by such Party under this Agreement.  Certificates of insurance shall provide the following information:  (a) Name of insurance company, policy number and expiration date;  (b) The coverage required and the limits on each, including the amount of deductibles or self-insured retentions, which shall be for the account of the Party maintaining such policy;  (c) A statement indicating that the insured Party shall receive at least thirty (30) days prior written notice of cancellation or expiration of a policy, or reduction of liability limits with respect to a policy; and  (d) A statement identifying and indicating that additional insureds have been named as required by this Agreement.        10.3 Copies        At an insured Party s request, in addition to the foregoing certifications, the insuring Party shall deliver to the insured Party a copy of applicable sections of each insurance policy.        10.4 Policy Inspection        Each insured Party shall have the right to inspect the original policies of insurance applicable to this Agreement at the insuring Party s place of business during regular business hours.        10.5 Coverage Period         If any insurance is written on a  claims made  basis, the insuring Party shall maintain the coverage for a minimum of seven (7) years after the termination of this Agreement.        10.6 Waiver of Subrogation         To the extent permitted by the insurer and commercially reasonable, each insuring Party shall obtain waivers of subrogation in favor of the insured Party from any insurer providing coverage that is required to be maintained under this Article 10, except for the coverage required under Section 10.1(a).  A Party shall not be required to obtain a waiver of subrogation if the other Party is not able to obtain a waiver of subrogation from its insurance carrier.        ARTICLE 11        SUCCESSORS AND ASSIGNS        This Agreement and each and every covenant, term and condition hereof, shall be binding upon and inure to the benefit of the Parties hereto and their respective heirs, executors, administrators, successors and permitted assigns.  Distribution Utility shall not assign its rights or obligations hereunder without express written approval of ATCLLC, except it may assign its rights or obligations to a purchaser (or an affiliate) who will own all or substantially all of its Distribution Facilities or equity interests and who shall then be bound by all of the provisions of this Agreement.  ATCLLC shall not assign its rights or obligations hereunder without express written approval of Distribution Utility, except it may assign its rights and obligations to a purchaser (or an affiliate) who will own all or substantially all of its Transmission Facilities or equity interests and who shall then be bound by all of the provisions of this Agreement.         ARTICLE 12        NOTICE   12.1 Written Notice         All certificates or notices required under this Agreement shall be given in writing and addressed or delivered to the representative(s) specified in this Agreement.  Notices shall be deemed received (i) upon delivery, when personally delivered; (ii) upon receipt, when sent via registered or certified mail; (iii) the next business day, when sent via overnight courier; and (iv) when sent via facsimile upon confirmation by recipient.  Copies of all general correspondence regarding this Agreement shall also be sent to these representative(s).   12.2 Representatives to Receive Notice         Notices submitted hereunder shall be directed to the following individuals:    Notices to Distribution Utility:    J. Patrick Keyes    President    Upper Michigan Energy Resources Corporation    231 W. Michigan Street, P458    Milwaukee, WI  53203    414-221-2125                 Notices to ATCLLC:      Attn: William P. Marsan    Executive Vice President, General Counsel &amp; Secretary    American Transmission Company, LLC    W234 N2000 Ridgeview Parkway Court    P. O. Box 47    Waukesha, WI  53188-1022     12.3 Notification Changes         ATCLLC or Distribution Utility may change their respective representative(s) designated to receive notice hereunder by written notice to the other Party.  ARTICLE 13  MISCELLANEOUS   13.1 Compliance with Laws   Throughout the term of this Agreement, each Party shall perform its obligations under this Agreement in compliance with all applicable federal, state and local statutes, ordinances, rules and regulations, including, but not limited to those pertaining to human safety, protection of property, non-discrimination, and protection of the environment.   13.2 Entire Agreement   This Agreement, together with any Exhibits and Schedules attached to this Agreement is the entire understanding of the Parties regarding the subject matter hereof, and supersedes all prior oral or written discussions, negotiations and agreements the Parties may have had with respect to the subject matter hereof.   13.3 Counterparts   This Agreement may be executed in any number of counterparts, and each counterpart shall have the same force and effect as the original instrument.   13.4 Amendment   No amendment, modification or waiver of any term hereof shall be effective unless set forth in a writing signed by the Parties.   13.5 Survival   All indemnities and confidentiality rights and obligations provided for in this Agreement shall survive the cancellation, expiration or termination hereof.   13.6 Independent Contractor   Each Party at all times shall be deemed to be an independent contractor and none of its employees or the employees of its contractors shall be considered to be employees of the other Party during the term of this Agreement.  Neither Party shall have authority to act on behalf of the other Party or bind the other Party in any manner except as expressly set forth in this Agreement.  The Parties acknowledge that neither this Agreement nor any of its provisions are intended to create any partnership or joint venture between or among the Parties.   13.7 Confidentiality   (a)  Confidential Information,  as used in this Section 13.7, shall mean all information or documentation disclosed or made available by either Party to the other, including but not limited to correspondence between the Parties, business plans, financial information, policies and procedures, computer programs, reports and analyses, or other information which a Party in good faith designates as a  trade secret  as that term is defined in Wis. Stat.   134.90(1)(c) or which is designated as critical energy infrastructure information as defined in 18 C.F.R.  388.12 or which may be subject to the limitation on disclosure set forth in 18 C.F.R  358.1, et seq.   (b) In consideration of the disclosure by one Party of Confidential Information to the other Party, the Parties agree that each of them shall undertake in good faith to accomplish the following additional actions with respect thereto:        (i) to use the Confidential Information for the sole purpose of fulfilling the obligations of the Parties pursuant to this Agreement;        (ii) to safeguard and hold in strict confidence all Confidential Information, limiting disclosure of Confidential Information to employees, contractors or agents of the receiving Party who have a need to know;        (iii) to protect Confidential Information from disclosure to anyone not a party to this Agreement or to whom such disclosure is limited or prohibited without the prior approval of the disclosing Party; and        (iv) upon the request of the disclosing Party and in any event upon cancellation or expiration of this Agreement, to return all Confidential Information, or to certify that such Confidential Information has been destroyed.   (c) The restrictions of this Section do not apply to any information which is already known by the receiving Party, possessed by a third party prior to disclosure, acquired from anyone not a party to this Agreement without restriction, or which is publicly available.   (d) Each Party retains all right, title and interest in and to any Confidential Information disclosed by the Party hereunder.   (e) In the event that either Party is required by applicable law to disclose any Confidential Information of the other Party, such Party shall promptly notify the other Party of such requirement and cooperate with the other Party to protect the Confidential Information from any disclosure not required by law.    (f) The obligations of this Section shall survive for a period of three (3) years following any expiration or termination of this Agreement.   13.8 Standards of Conduct   If the performance of this Agreement requires ATCLLC to disclose information about the Transmission System to Distribution Utility, the dissemination of which is subject to FERC s Standards of Conduct requirements under 18 C.F.R. Part 358, such information shall not be disclosed by Distribution Utility or ATCLLC to any persons that have not completed ATCLLC s Standards of Conduct training agreeing to be bound by ATCLLC s Compliance Plan.  Distribution Utility employees receiving Confidential Information of ATCLLC under this Agreement understand that they are prohibited from being conduits of information to Marketers.  Further, should any FERC audit of ATCLLC s compliance with the Standards of Conduct turn up any violations of the Standards of Conduct Agreement on the part of the Distribution Utility (i.e. confidential transmission system information being passed to marketers), the Distribution Utility shall be solely liable for any and all penalties imposed by the FERC monetary and otherwise, for those violations attributed to the Distribution Utility by the FERC.        13.9 No Implied Waivers   The failure of a Party to insist upon or enforce strict performance of any of the provisions of this Agreement shall not be construed as a waiver or relinquishment to any extent of such Party s right to assist or rely upon any such provisions, rights and remedies in that or any other instance; rather, the same shall be and remain in full force and effect.   13.10 No Third-Party Beneficiaries   This Agreement is intended to be solely for the benefit of the Parties to this Agreement and their successors and permitted assigns and is not intended to and shall not confer any rights or benefits on any third party (other than successors and permitted assigns) not a signatory hereto.   13.11 Severability   In the event that any provision of this Agreement is deemed as a matter of law to be unenforceable or null and void, such unenforceable or void portion of such provision shall be deemed severable from this Agreement unless the removal of the unenforceable provision materially alters the obligations of any Party hereunder.   Even if there is a material alteration in the remainder of the Agreement, the Agreement shall continue in full force and effect as if such provision was not contained in this Agreement, but the Parties shall negotiate in good faith new provisions in relation to the deleted provision that will to the extent practicable restore the benefit of the bargain contained in such provision, and that are consistent with Good Utility Practice.   13.12 Governing Law   This Agreement shall be governed by and construed in accordance with the laws of the State of Wisconsin, with the exception of any choice of laws provisions.   13.13 Headings   The headings as set forth herein are inserted for convenience and shall have no effect on the interpretation or construction of this Agreement.   13.14 Affiliate Status of Parties   For purposes of Articles 8, 9, and 10, neither Party shall be treated as an affiliate of the other Party.   IN WITNESS WHEREOF, the Parties have caused this Agreement to be e executed by their duly authorized representatives, effective as of the date first written above.           AMERICAN TRANSMISSION COMPANY, LLC      By:  ATC MANAGEMENT INC., its Corporate Manager        By: /s/ William P. Marsan         William P. Marsan   Title: Executive Vice President, General Counsel &amp; Secretary      UPPER MICHIGAN ENERGY RESOURCES CORPORATION          By: /s/ J. Patrick Keyes         J. Patrick Keyes       President        Schedule 1    Section A    Background    Upper Michigan Energy Resources Corporation ( UMERC ) will use SAP and/or PeopleSoft General Ledger software to capture all direct and indirect costs billed to ATCLLC.  This software will collect costs that will be billed to ATCLLC in cost objects which denote the project or maintenance activity and the cost element associated with the charge.  Each month after UMERC closes its books, a bill will be prepared and presented to ATCLLC for payment.  The bill will consist of direct costs, indirect costs as well as applicable overheads and a return on and of investment of the common property. Information presented in the financial statements should faithfully represent the transaction and events that occur during a period.     Direct Costs    All applicable labor and non-labor expenses that can be identified as provided to ATCLLC will be collected in internal orders.  During each month end closing, the expenses in the accounting system will settle to an accounts receivable general ledger account and be billed in full to ATCLLC in a timely manner.    I.  Labor  Direct costs for labor are calculated by multiplying hours a person spends supporting a service order by a standard rate which includes labor loadings.  The standard rate is described in the following paragraphs.  In order to collect the hours to bill to ATCLLC the employee  records the hours worked on a project to an order in either Employee Self Serve, UMERC s time reporting system, or on their timesheet that is processed in payroll.  Their direct supervisors are responsible for making sure the correct accounting is used.    Standard Rates Including Labor Loadings  Cost Center/Activity Type Combinations  In the accounting system, there is a standard rate for each cost center and activity type combination.  All employees have a home cost center assigned to them based on their function within the company.  In addition, each individual is assigned an activity type according to their pay grades within that cost center.  There are separate activity types for management and represented personnel.     Calculating Standard Rates  During the budgeting period, standard rates for the following year are initially calculated by combining the activity type / cost center combination group s planned:        pay + bonus + OT  pay +  benefits +  payroll taxes +  pension expenses     total hours + OT hours   vacation hours   absent hours  - holiday hours    The vacation and absent time hours are based on corporate averages.  Each cost center manager has the opportunity to change these if the history of the cost center is different than the company as a whole.  The new rates are loaded into the accounting system.  The rate can be adjusted throughout the year depending on actual results.    Non-Productive Labor   Crew labor is to be increased by a factor for non-productive labor.  The following  equation is used to calculate the rate:   Non productive hours    Productive Hours    Non productive hours include but are not limited to training, safety meetings, joint governance, other meetings, diversity programs, vehicle downtime, inclement weather, and substance abuse testing.  Vacation, holiday, and sick time are all excluded from the productive and non-productive hours used in this calculation.      II. Non Labor  Non labor costs will also be billed to ATCLLC.  An example, of these costs would be an invoice from a third party supplier paid on behalf of ATCLLC for materials or services.  Any Non labor expenses will be billed in full to ATCLLC or based on an agreed upon percentage.    III. Vehicles Rates  UMERC will have vehicle classes that can be charged time for a project.  These costs are charged on a per hour rate based on the type of vehicle used.  There is also an overhead attached to each charge as described below.    Indirect Costs  A portion of the indirect costs that UMERC incurs on activities that support the entire company or specific areas will be billed to ATCLLC in the overhead rate.  There are separate overhead rates applied to crew labor, non-crew labor, vehicles, materials and printing.      -Crew labor, taking into account non-productive labor hours, receives the following overheads:  administrative and general (also including return of and return on components), electric operations and tools overhead.       -Non-crew labor receives administrative and general overhead.       -Materials receive minor items and stores handling overheads.     -Vehicles, which are charged at a standard hourly vehicle rate per type of vehicle, have an overhead load added to represent the return on investment.       Overhead Calculation   1.  Administrative and General Overhead Rate  The overhead rate for labor is added to the total costs of direct labor billed at the standard rate.    Finance personnel are responsible for calculating the overhead rate.  This rate includes three major components: a) corporate center expenses which include labor and non-labor expenses of the departments as shown below, b) return on investments and c) return of investments. The denominator used to calculate the rate is total company labor (including benefits) reduced by corporate center labor (net of corporate center labor to be billed out).  A. The Corporate Center numerator is the  Level 1  expenses and adds software amortization. This includes full labor and non-labor expenses but excludes return of and return on (as described below) and also excludes Supply Chain logistics expenses charged out to business units. The following departments are included in Corporate Center: Administrative Services, Supply Chain, Community and Corporate Relations, Corporate Affairs, Finance, Human Resources, Information Technology, Customer Relations, Legal, Environmental, Government Affairs, Regulatory, Office of Research and Innovation, Dues &amp; Membership and WEC Energy Group charges to the utility. These Level 1 expenses are then reduced by corporate donations.  B.  Return on  calculations include the net asset value of the following items multiplied by the pretax weighted cost of capital from the latest approved Michigan Public Service Commission rate order.  The items include: 303 software, 389 land and easements, 390 structure, 391 office equipment including personal computers, 393 stores, 394 tools, shop, garage, 395 lab equipment, 397 communications including SCADA system and 398 miscellaneous. The net asset value is reduced by any amounts that are specifically calculated in the control center including telecommunications and PC related equipment.  C. Return of  calculations include the depreciation and amortization on the same items included in the  return on  calculations with the following exceptions; software amortization is excluded--it is included in administrative and general overhead calculation; structure depreciation is reduced by any structure depreciation included in vehicle charges; personal computer and communications depreciation is reduced by the amounts included in telecommunications direct charges.    2. Electric Operations Overhead   Various management and support activities in Electric Operations that are not specific project expenses charged to ATCLLC are considered overhead expenses.  These were accumulated and divided by the Electric Operations labor to obtain a rate.     3. Tools   A tools overhead rate is developed by dividing tools by the sum of distribution crew labor, electrician labor and construction worker labor.    4. Minor Items  A minor item overhead rate is developed by dividing minor items expenses by stock materials and site delivered materials.  This rate is applied to materials that are billed to ATCLLC.     5. Stores Handling   A stores handling overhead rate is developed by accumulating Electric Logistics expenses of labor, vehicles, employee expenses, miscellaneous office, contractors, materials and the Stores portion of facilities less Pre-capitalized Transformers and Meters.  The store room overhead is divided by the total of DO-Electric Materials-Stock and Transmission Materials-Stock to develop the rate.    6. Return On overhead for Vehicles.    The return on investment for vehicles is determined by multiplying the net book value times the pretax weighted cost of capital from the latest approved Michigan Public Service Commission rate order.  The result is divided by the cost of the vehicles used to calculate the hourly rate.  The resulting percentage is the overhead rate applied to vehicle charges.     7. Printing Overhead  All printing jobs are assigned an overhead which is to cover the costs associated with the print shop.     Return on and of Investment of Common Facilities  All UMERC facilities that have a portion of the property on them owned by ATCLLC will incur a cost of return on and of investment on a monthly basis.      The return on investment is calculated by multiplying the total net investment of the properties times the rate of return.  The interest rate used to calculate return on investment is the pretax weighted cost of capital from the latest approved Michigan Public Service Commission rate order.    The return of investment is calculated using the certified depreciation rate to determine annual depreciation.  This is multiplied by the percent of facilities owned by ATCLLC to come up with a final amount.    The return on and of will be added together for an annual amount.  Of this, one twelfth will be billed each month.  This billing may be modified periodically to reflect changes in the value in the accounts.    Section B    Background    UMERC will use SAP and/or PeopleSoft General Ledger software to capture all direct and indirect costs billed to ATCLLC.  This software will collect costs that will be billed to ATCLLC in cost objects which denote the project or maintenance activity and the cost element associated with the charge.  Each month after UMERC closes its books, a bill will be prepared and presented to ATCLLC for payment.  The bill will consist of direct costs, indirect costs as well as applicable overheads and a return on and of investment of the common property.     Direct Costs    All applicable labor and non-labor expenses that can be identified as provided to ATCLLC will be collected in internal orders.  During each month end closing, the expenses in the accounting system will settle to an accounts receivable general ledger account and be billed in full to ATCLLC in a timely manner.    I.  Labor  Direct costs for labor are calculated by multiplying hours a person spends supporting a service order by a standard rate which includes labor loadings.  The standard rate is described in the following paragraphs.  In order to collect the hours to bill to ATCLLC the employee  records the hours worked on a project to an order in either Employee Self Serve, UMERC s time reporting system, or on their timesheet that is processed in payroll.  Their direct supervisors are responsible for making sure the correct orders are used.    Standard Rates Including Labor Loadings  Cost Center/Activity Type Combinations  In the accounting system, there is a standard rate for each cost center and activity type combination.  All employees have a home cost center assigned to them based on their function within the company.  In addition, each individual is assigned an activity type according to their pay grades within that cost center.  There are separate activity types for management and represented personnel.     Calculating Standard Rates  During the budgeting period, standard rates for the following year are initially calculated by combining the activity type / cost center combination group s planned:        pay + bonus + OT  pay +  benefits +  payroll taxes +  pension expenses     total hours + OT hours   vacation hours   absent hours  - holiday hours    The vacation and absent time hours are based on corporate averages.  Each cost center manager has the opportunity to change these if the history of the cost center is different than the company as a whole.  The new rates are loaded into the general ledger.  The rate can be adjusted throughout the year depending on actual results.    Non-Productive Labor   Crew labor is to be increased by a factor for non-productive labor.  The following  equation is used to calculate the rate:   Non productive hours    Productive Hours    Non productive hours include but are not limited to training, safety meetings, joint governance, other meetings, diversity programs, vehicle downtime, inclement weather, and substance abuse testing.  Vacation, holiday, and sick time are all excluded from the productive and non-productive hours used in this calculation.      III. Non Labor  Non labor costs will also be billed to ATCLLC.  An example, of these costs would be an invoice from a third party supplier paid on behalf of ATCLLC for materials or services.  Any Non labor expenses will be billed in full to ATCLLC or based on an agreed upon percentage.    III. Vehicles Rates  UMERC will have vehicle classes that can be charged time for a project.  These costs are charged on a per hour rate based on the type of vehicle used.  There is also an overhead attached to each charge as described below.    Indirect Costs  A portion of the indirect costs that UMERC incurs on activities that support the entire company or specific areas will be billed to ATCLLC in the overhead rate.  There are separate overhead rates applied to crew labor, non-crew labor, vehicles, materials and printing.      -Crew labor, taking into account non-productive labor hours, receives the following overheads:  administrative and general (also including return of and return on components), electric operations and tools overhead.       -Non-crew labor receives administrative and general overhead.       -Materials receive minor items and stores handling overheads.     -Vehicles, which are charged at a standard hourly vehicle rate per type of vehicle, have an overhead load added to represent the return on investment.     Overhead Calculation   8.  Administrative and General Overhead Rate  The overhead rate for labor is added to the total costs of direct labor billed at the standard rate.    Finance personnel are responsible for calculating the overhead rate.  This rate includes three major components: a) corporate center expenses which include labor and non-labor expenses of the departments as shown below, b) return on investments and c) return of investments. The denominator used to calculate the rate is total company labor (including benefits) reduced by corporate center labor (net of corporate center labor to be billed out).  D. The Corporate Center numerator is the  Level 1  expenses and adds software amortization. This includes full labor and non-labor expenses but excludes return of and return on (as described below) and also excludes Supply Chain logistics expenses charged out to business units. The following departments are included in Corporate Center: Administrative Services, Supply Chain, Community and Corporate Relations, Corporate Affairs, Finance, Human Resources, Information Technology, Customer Relations, Legal, Environmental, Government Affairs, Regulatory, Office of Research and Innovation, Dues &amp; Membership and WEC Energy Group charges to the utility. These Level 1 expenses are then reduced by corporate donations.  E.  Return on  calculations include the net asset value of the following items multiplied by the pretax weighted cost of capital from the latest approved Michigan Public Service Commission rate order.  The items include: 303 software, 389 land and easements, 390 structure, 391 office equipment including personal computers, 393 stores, 394 tools, shop, garage, 395 lab equipment, 397 communications including SCADA system and 398 miscellaneous. The net asset value is reduced by any amounts that are specifically calculated in the control center including telecommunications and PC related equipment.  F. Return of  calculations include the depreciation and amortization on the same items included in the  return on  calculations with the following exceptions; software amortization is excluded--it is included in administrative and general overhead calculation; structure depreciation is reduced by any structure depreciation included in vehicle charges; personal computer and communications depreciation is reduced by the amounts included in telecommunications direct charges.    9. Electric Operations Overhead   Various management and support activities in Electric Operations that are not specific project expenses charged to ATCLLC are considered overhead expenses.  These were accumulated and divided by the Electric Operations labor to obtain a rate.       10. Tools   A tools overhead rate is developed by dividing tools by the sum of distribution crew labor, electrician labor and construction worker labor.    11. Minor Items  A minor item overhead rate is developed by dividing minor items expenses by stock materials and site delivered materials.  This rate is applied to materials that are billed to ATCLLC.     12. Stores Handling   A stores handling overhead rate is developed by accumulating Electric Logistics expenses of labor, vehicles, employee expenses, miscellaneous office, contractors, materials and the Stores portion of facilities less Pre-capitalized Transformers and Meters.  The store room overhead is divided by the total of DO-Electric Materials-Stock and Transmission Materials-Stock to develop the rate.    13. Return On overhead for Vehicles.    The return on investment for vehicles is determined by multiplying the net book value times the pretax weighted cost of capital from the latest approved Michigan Public Service Commission rate order.  The result is divided by the cost of the vehicles used to calculate the hourly rate.  The resulting percentage is the overhead rate applied to vehicle charges.       Return on and of Investment of Common Facilities  All UMERC facilities that have a portion of the property on them owned by ATCLLC will incur a cost of return on and of investment on a monthly basis.      The return on investment is calculated by multiplying the total net investment of the properties times the rate of return.  The interest rate used to calculate return on investment is the pretax weighted cost of capital from the latest approved Michigan Public Service Commission rate order.    The return of investment is calculated using the certified depreciation rate to determine annual depreciation.  This is multiplied by the percent of facilities owned by ATCLLC to come up with a final amount.    The return on and of will be added together for an annual amount.  Of this, one twelfth will be billed each month.  This billing may be modified periodically to reflect changes in the value in the accounts.      Schedule 2                                     ATCLLC s Cost Methodology    Section A    Method of Calculating Costs Charged to Projects for Assets Owned by ATCLLC    Direct Costs:  Costs incurred by ATCLLC that are directly attributable to the project.  Such costs would include direct labor, employee expenses, material costs, outside contractors and other direct vendor billed costs including sales tax paid on vendor invoices.        Indirect Costs:     Labor Loading  This loading covers pension and other related employee benefit costs, payroll taxes and the expense of non-productive employee time (Sick, Holiday &amp; Vacation).  This loading percentage is then applied on direct labor.    Supervisory Loading  This loading covers costs incurred for management and supervision of employees directly involved in the project.  The calculation is derived by taking the average of total supervision salary divided by total salary for project related departments only.  This allocation percentage is then applied on direct labor.    Project Administration Clearing  This is direct labor or outside services associated with capital projects which is charged to a central clearing account.  Charges typically originate in administrative areas in which direct project related work is performed, in smaller increments, for numerous projects in any given week.  i.e. Plant Accounting, Project Business Administration, etc. These costs are accumulated monthly and allocated to all open capital projects having charges in the preceding month.     Administrative and General Loading  This loading covers cost incurred for administrative and general functions that support the entire company of which a portion will be allocated to the project. The calculation is derived by taking total allocable A&amp;G expenses divided by total labor costs in non-A&amp;G departments. This allocation percentage is then applied on direct labor.  Allocable A&amp;G expenses include those from the following departments:  Corporate Management, Human Resources, Finance, Accounting, Facilities &amp; Security, Information Technology and Corporate Services.    Tax Indemnification If the receipt of monies by ATC are deemed to be taxable, an  additional amount shall be charged to reimburse ATC for costs associated with timing  differences between the payment of tax on such amounts and the related future tax deductions.        Section B    Method of Calculating Costs Charged to Projects for Assets Owned by External Parties    Direct Costs   Costs incurred by ATCLLC that are directly attributable to the project.  Such costs would include direct labor, employee expenses, material costs, outside contractors and other direct vendor billed costs including sales tax paid on vendor invoices.    Indirect Costs:     Labor Loading  This loading covers pension and other related employee benefit costs, payroll taxes and the expense of non-productive employee time (Sick, Holiday &amp; Vacation).  This loading percentage is then applied on direct labor.    Supervisory Loading  This loading covers costs incurred for management and supervision of employees directly involved in the project.  The calculation is derived by taking the average of total supervision salary divided by total salary for project related departments only.  This allocation percentage is then applied on direct labor.    Project Administration Clearing  This is direct labor or outside services associated with capital projects which is charged to a central clearing account.  Charges typically originate in administrative areas in which direct project related work is performed, in smaller increments, for numerous projects in any given week.  i.e. Plant Accounting, Project Business Administration, etc. These costs are accumulated monthly and allocated to all open capital projects having charges in the preceding month.     Administrative and General Loading  This loading covers cost incurred for administrative and general functions that support the entire company of which a portion will be allocated to the project. The calculation is derived by taking total allocable A&amp;G expenses divided by total labor costs in non-A&amp;G departments. This allocation percentage is then applied on direct labor.  Allocable A&amp;G expenses include those from the following departments:  Corporate Management, Human Resources, Finance, Accounting, Facilities &amp; Security, Information Technology and Corporate Services.                   26</record_plain_text>
      <record_change_type>NEW</record_change_type>
      <filing_id>170</filing_id>
      <filing_title>UMERC to ATC Common Facilities Agreement Rate Schedule No 9</filing_title>
      <filing_type>10</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2017-01-01</current_effective_date>
      <ferc_order_date>2016-12-29</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
    <record_data>
      <record_id>195</record_id>
      <option_code>A</option_code>
      <record_title>UMERC - ATC PSA Rate Schedule No 10</record_title>
      <record_content_desc>Cover Sheet</record_content_desc>
      <record_version_num>1.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>10000</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2017-01-01</proposed_effective_date>
      <priority_order>500</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>PROJECT SERVICES AGREEMENT       THIS PROJECT SERVICES AGREEMENT ( Agreement ) is entered into as of October 13, 2016 by and between Upper Michigan Energy Resources Corporation a Michigan corporation ( Distribution Utility ), and American Transmission Company LLC ( ATCLLC ), a Wisconsin limited liability company (collectively, the  Parties ).  The Distribution Utility and ATCLLC are referred to individually as a  Party  and collectively as the  Parties.   RECITALS   WHEREAS, the business needs, operating requirements or work activities of ATCLLC related to its transmission facilities may require the relocation or replacement of distribution facilities owned by Distribution Utility or the expansion, improvement, or replacement of common facilities owned by Distribution Utility at a joint use substation or generating facility; and   WHEREAS, the business needs, operating requirements or work activities of Distribution Utility related to its distribution or generation facilities may necessitate the relocation or replacement of transmission facilities owned by ATCLLC or the expansion,  improvement, or replacement of common facilities owned by ATCLLC at a joint use substation; and   WHEREAS, ATCLLC desires to receive engineering and construction services from Distribution and Distribution Utility desires to  provide such services to ATCLLC; and         WHEREAS, Distribution Utility desires to receive engineering and construction services from ATCLLC, and ATCLLC is willing to provide such services to Distribution Utility; and   WHEREAS, the Parties desire to provide in this Agreement for a method of requesting, performing and compensating for the services appropriate to accommodate the needs of the Parties for the aforesaid work.   NOW, THEREFORE, in consideration of the promises and mutual covenants contained herein, the Parties hereby agree as follows:  ARTICLE I  DEFINITIONS AND INTERPRETATION   1.1 Definitions, Generally   Unless defined in this Agreement, the definition of each capitalized term used in this Agreement shall be the same as the definition for that term set forth in the Operating Agreement of ATCLLC.   1.2 Special Definitions   The following defined terms used in this Agreement shall be defined as set forth below:    1.2.1 Cost(s)    Cost(s)  means all direct and indirect costs incurred by a Party.  Direct and indirect costs include but are not limited to labor costs with overheads which shall include labor costs for tasks such as recording costs and invoicing; the actual cost of materials and supplies; return of and on the cost of property employed; and payments to contractors (without additional charges or markups), plus all overheads directly associated with any and all of these costs.  Distribution Utility s Costs shall be calculated using the rates and charges set forth on Schedule 1, Section A or Section B.  The rates and charges set forth on Schedule 1, Section A, shall apply to those instances when Distribution Utility is performing work on Distribution Facilities or other assets owned by Distribution Utility, such as Common Facilities for which ATCLLC is responsible to make payment to Distribution Utility.  The rates and charges set forth on Schedule 1, Section B, shall apply in those instances in which Distribution Utility is performing work on the Transmission Facilities or other assets owned by ATCLLC, such as Common Facilities, for which ATCLLC is responsible to make payment to Distribution Utility.  ATCLLC s Costs shall be determined using the rates and charges set forth on Schedule 2, Section A or Section B.   The rates and charges set forth on Schedule 2, Section A, shall apply to those instances when ATCLLC is performing work on Transmission Facilities or other assets owned by ATCLLC, such as Common Facilities for which Distribution Utility is responsible to make payment to ATCLLC.  The rates and charges set forth on Schedule 2, Section B, shall apply in those instances in which ATCLLC is performing work on Distribution Facilities or other assets owned by Distribution Utility, such as Common Facilities, for which Distribution Utility is responsible to make payment to ATCLLC.  The rates and charges set forth on Schedule 1 may be changed from time to time by Distribution Utility and the rates and charges on Schedule 2 may be changed from time to time by ATCLLC; however, any such changes must be communicated to the other Party in writing within fourteen (14) days of such change or within the next billing cycle of such change.  If the rates and charges are changed, then the Party making such change shall provide a revised Schedule to the other Party reflecting such change and such change shall be reflected in any Change Order provided for in Section 4.11 of this Agreement as may be required.                  1.2.2 Distribution Facilities    Distribution Facilities  shall mean facilities owned by Distribution Utility that are used for the distribution of electricity at nominal voltages that are lower than 50 kV.    1.2.3 Generation Facilities         Generation Facilities  shall mean facilities owned by Distribution Utility that are used for the generation of electricity.                1.2.4 Good Utility Practice    Good Utility Practice  shall mean any of the practices, methods and acts engaged in or approved by a significant portion of the electric utility industry during the relevant time period, or any of the practices, methods and acts which, in the exercise of reasonable judgment in light of the facts known at the time the decision was made, could have been expected to accomplish the desired result at a reasonable cost consistent with good business practices, reliability, safety and expedition.  Good Utility Practice is not intended to be limited to the optimum practice, method or act to the exclusion of all others, but rather is intended to include acceptable practices, methods, or acts generally accepted in the region.    1.2.5 Transmission Facilities    Transmission Facilities  shall mean facilities owned by ATCLLC and used by it for (i) the transmission of electric energy at voltages that are 50 kV and higher or (ii) the transmission of electricity regardless of the nominal voltage at which such facility is designed to operate or does operate, if the facilities are designated by the Public Service Commission of Wisconsin as transmission facilities.    1.2.6 Transmission System    Transmission System  shall mean the system of facilities for the transmission of electric energy that is owned by ATCLLC.   ARTICLE 2  TERM   This Agreement shall be effective from the date hereof ( Effective Date ) and shall continue in effect for a period of five (5) years.  Thereafter, this Agreement may be terminated by either Party on the date that is twelve (12) months following the date a Party gives notice of its intent to terminate this Agreement.  Should the Parties cease to be affiliates during the term of this Agreement, or there be a change in the statutory or regulatory framework governing public utilities which materially changes the benefit of the bargain herein, all terms of the Agreement may be reopened for renegotiation, at either Party s option upon written notice to reopen or renegotiate the terms of this Agreement.  Should the Parties be unable to agree on revised or replacement terms, either Party may terminate this Agreement on twelve (12) months written notice.  The provisions of this Agreement shall survive any termination of this Agreement as to any Services being performed as of the date of termination and any Services completed prior to such date.  ARTICLE 3  REQUIRED REGULATORY APPROVALS AND REPORTING   3.1 The effectiveness of this Agreement is expressly conditioned upon the receipt by the Parties of all permits, regulatory authorizations and regulatory approvals that are required in order for the Parties to enter into and perform their obligations under this Agreement in a form acceptable in the reasonable judgment of the Party affected thereby.   3.2 ATCLLC shall provide such reports as the Public Service Commission of Wisconsin ( PSCW ) and/or the Michigan Public Service Commission ( MPSC ) shall require of work performed and compensation paid under this Agreement.  The Parties will cooperate in providing the PSCW and the MPSC with such information as it may require in its review and audit of work performed and compensation paid under this Agreement.  ARTICLE 4  GENERAL PROVISIONS REGARDING SERVICES TO BE PROVIDED   4.1 Types of Services Covered By This Agreement   This Agreement shall apply to any of the following types of services requested by a Party after the effective date of this Agreement that are estimated to cost under the terms of any one Request for Services less than the amount determined in accordance with Wisconsin Administrative Code   PSC 112.05(3) to be the threshold for seeking authority from the PSCW for the Party requesting the services under this Agreement ( Services ):   (a) Distribution Utility s relocation or replacement of its Distribution Facilities and/or Generation Facilities that is required as a result of work on Transmission Facilities initiated by ATCLLC and is requested by ATCLLC. The Parties agree that this Agreement is not intended to modify or otherwise supersede the terms of any Pole Attachment Agreement between the Parties.   (b) ATCLLC s relocation or replacement of its Transmission Facilities that is required as a result of work on Distribution Facilities and/or Generation Facilities initiated by Distribution Utility and is requested by Distribution Utility.   (c) Requests for expansions, improvements, or replacements of common facilities at joint use substations pursuant to Article 5 of the Common Facilities Agreement between Distribution Utility and ATCLLC.   (d) Other services requested between Distribution Utility and ATCLLC.             4.2 Requests for Services   A Party ( Requesting Party ) may request that the other Party perform Services by submitting to the other Party a Request for Services substantially in the form(s) attached hereto as Exhibit A, Request for Services - Substation or Exhibit B, Request for Services - Transmission Line, describing the Services requested and proposed starting and completion dates for the Services.   4.3 Refusal of Request   If the other Party is unable or unwilling to perform the requested Services, it shall promptly notify the Requesting Party by indicating on the Request for Services form(s), as referenced in Section 4.2, that the request is declined, stating the reason(s) for its position, signing the form(s), and returning the form(s) to the Requesting Party.   The Parties shall then discuss, in good faith, reasonable alternatives for obtaining or performing such Services.   4.4 Initial Acceptance of Request   If the Party receiving the Request for Services is willing and able to perform the requested Services, such Party ( Performing Party ) shall notify the Requesting Party of its willingness to perform the Services, by indicating on the Request for Services form(s), as referenced in Section 4.2, that the request is accepted, signing the form(s), and returning the form(s) to the Requesting Party.  Final acceptance of the Request for Services is subject to the establishment of the scope and schedule of services and Estimate under this Article.        4.5 Engineering and Construction Drawings and Specifications         As set forth in the Request for Services, the assigned Party shall prepare and provide to the other Party material and design specifications for the requested Services.  The assigned Party shall then prepare, in consultation with the other Party as appropriate, and provide to the other Party (for review or construction) engineering and construction drawings and specifications for the requested Services.         4.6 Scope of Services   The Requesting Party shall prepare, in consultation with the Performing Party as appropriate, a proposed scope and schedule of services ( Scope of Services ) based upon the description of Services contained in the Request for Services.  The proposed Scope of Services shall be subject to revision by the Performing Party based upon (i) an examination of the site at which the Services are to be performed, and (ii) the engineering and construction drawings and specifications.  If the Performing Party revises the Scope of Services and the revisions are not acceptable to the Requesting Party, the Parties shall discuss changes as are necessary and appropriate to arrive at a mutually acceptable Scope of Services.  If the Parties are unable to arrive at a mutually acceptable Scope of Services, the Performing Party shall not be required to perform the Services.        4.7 Estimate   The Performing Party shall prepare an estimate of the Costs with anticipated monthly (or otherwise agreed to) cash flow schedule ( Estimate ) for it to perform the Services in accordance with the Scope of Services established pursuant to Section 4.6.  If the Estimate is not acceptable to the Requesting Party, the Parties shall discuss changes to the Estimate and/or the Scope of Services as are necessary and appropriate to arrive at a mutually acceptable Estimate.  If the Parties are unable to arrive at a mutually acceptable Estimate, the Performing Party shall not be required to perform the Services.   4.8 Final Acceptance of Request for Services        If the Scope of Services and Estimate are acceptable to both the Requesting and Performing Parties, the Parties shall provide Final Acceptance on the Request for Services form(s). Upon acceptance, the Performing Party shall commence performance of the Services in accordance with the Scope of Services and the Estimate.        4.9 Licenses and Permits   Unless otherwise set forth in the Request for Services, the Party owning the facilities that are the subject of the Services shall, with the concurrence and assistance of the other Party as may be necessary or appropriate, procure and maintain in effect all permits, certificates and licenses needed by the Performing Party for performance of the Services.   4.10 Progress Reports   During the course of the performance of the Services by the Performing Party ( Project ) the Parties shall meet at least once each month or at such other times as may be mutually agreed upon by the Parties to review the progress of the Project.  At such meetings, the Performing Party shall provide the Requesting Party a report containing information about the actual and projected labor-hours and cash flows, compared with labor-hours and costs set forth in the final Estimate.   4.11 Change Orders   (a) If the Performing Party reasonably anticipates that the final costs of the Services will exceed the Estimate by more than ten percent (10%) or Ten Thousand Dollars ($10,000) whichever is greater, or that work beyond that outlined in the Scope of Services will be needed in order to complete the Services, or that the Services will otherwise not be completed in accordance with the Scope of Services, the Performing Party shall request a change in the Final Acceptance version of the Request for Services forms(s) by submitting a proposed Project Services Agreement Change Order ( Change Order ) in substantially the form attached hereto as Exhibit C.   (b) If the Requesting Party accepts the requested changes, it shall promptly execute and return the Change Order to the Performing Party, and the Performing Party shall continue performance of the Services in accordance with the Final Acceptance of the Request for Services forms(s) and the Change Order.   (c) If the Requesting Party refuses to execute a Change Order within ten (10) business days of its submission, and the Services fall under Section 4.1(d) of this Agreement, the Performing Party may cease performance of the Services.  However the Parties shall attempt in good faith to resolve their differences so that the Services may continue.  If the Parties acting in good faith are unable to resolve their differences, the Requesting Party shall pay the Performing Party for Services performed, costs incurred and commitments made before the Performing Party ceased performance of the Services, and the Parties shall have no further obligations with respect to performance of the Services.   (d) If the Requesting Party refuses to execute a Change Order within ten (10) business days of its submission, and the Services fall under Section 4.1(a), (b) or (c) of this Agreement, the Performing Party shall continue performance of the Services in accordance with the original Request for Services or, at the discretion of the Performing Party, the proposed Change Order, subject to the resolution of the dispute pursuant to Article 8 of this Agreement.  ARTICLE 5  RESPONSIBILITIES OF PERFORMING PARTY   5.1 Performance of Services   Performing Party shall perform, or cause to be performed, the Services in accordance with the terms, conditions and procedures specified in this Agreement.             5.2 Performance Standards   (a) In performing the Services hereunder, Performing Party shall at all times follow Good Utility Practice, the requirements of this Agreement, and all commercially reasonable requests and specifications of Requesting Party.   (b) Performing Party shall be responsible for determining the manner of performance and for supervision of the Services provided by it.   (c) Performing Party shall not be deemed to have failed to adequately perform the Services under this Agreement where it has performed the Services in accordance with this Agreement and Good Utility Practice.   5.3 Performing Party Resources   (a) The Services shall be managed by such parts of Performing Party s organization as may be necessary to assure the cost-effective performance of the Services in accordance with this Agreement and in accordance with the accepted Scope of Services, Estimate and any and all applicable Change Orders.   (b) Performing Party shall maintain and manage the equipment, spare parts, materials and supplies needed to perform the requested Services in a cost-effective manner.   5.4 Non-Conforming Services   Subject to the provisions of Section 6.2, if Requesting Party discovers that any Services performed by Performing Party do not conform to this Agreement or to any applicable Scope of Services, Estimate or Change Order agreed to by the Parties, Performing Party shall, upon Requesting Party s notice, promptly correct or reperform such non-conforming Services so that they conform to this Agreement at no additional expense to the Requesting Party.  Without limiting the generality of this provision, Performing Party shall provide the labor, supervision, equipment, tools and materials necessary to initiate and reasonably pursue such remedy within thirty (30) days after receipt of such notice, except in an emergency or for such longer period as the Parties may agree is necessary under the circumstances.    Performing Party shall complete its remedial obligations in a timely manner consistent with Requesting Party s reasonable requirements.  If Performing Party repeatedly fails, or is unable, to remedy such non-conforming Services within the agreed timeframe, Requesting Party may undertake to remedy the non-conforming Services and in such case Performing Party shall reimburse Requesting Party for its actual reasonable costs incurred thereby.  This Section shall be in addition to any other remedies provided by this Agreement or available at law or equity.  ARTICLE 6  RESPONSIBILITIES OF REQUESTING PARTY   6.1 Cooperation and Assistance          During the term of this Agreement, Requesting Party shall, at its cost and expense, and in a manner consistent with Good Utility Practice, perform or provide the following at the times required to support the performance of the Services:   (a) When this Agreement requires a response or other action by Requesting Party, Requesting Party shall not unreasonably withhold or delay such action.   (b) When this Agreement requires Performing Party to perform Services on Requesting Party s facilities, Requesting Party shall provide Performing Party with all necessary access to Requesting Party s facilities and records.   (c) Requesting Party shall provide Performing Party with such other information, cooperation and assistance as is needed or requested by Performing Party to fulfill its responsibilities under this Agreement.             6.2 Inspection and Notification   During the performance of any requested Services, Requesting Party shall periodically inspect to determine if the Services being performed by the Performing Party conform to this Agreement or to any applicable Scope of Services, Estimate or Change Order agreed to by the Parties, and shall, when necessary, provide reasonable notice of any failure to conform as provided in Section 5.4.  In no event, however, shall any notice of the failure to conform to this Agreement or to any applicable Scope of Services, Estimate or Change Order agreed to by the Parties be given more than ninety (90) days following the completion of all Services associated with any Request for Services, and the Performing Party shall not be obligated to correct or re-perform nonconforming Services if a notice of failure to perform is not received by the Performing Party from the Requesting Party within ninety (90) days following the completion of all Services.   ARTICLE 7  COMPENSATION OF PERFORMING PARTY   7.1 Costs   As full and complete compensation for Performing Party s provision of the Services, and subject to Section 7.2 of this Agreement, Requesting Party shall pay Performing Party its Costs incurred in performing the Services.   7.2 Compensation Limits   (a) If the Services fall under Section 4.1(a), (b) or (c) of this Agreement, Requesting Party shall pay Performing Party all of its actual and reasonable Costs.   (b) If the Services fall under Section 4.1(d) of this Agreement, Requesting Party shall pay Performing Party its actual and reasonable Costs, up to One Hundred Ten  percent (110%) of the Estimate (as revised by any Change Order).              7.3 Methods of Calculating the Compensation Due   The methods and procedures for determining, recording, allocating, billing and auditing of Performing Party s Costs are set forth in Schedule 1 or Schedule 2 to this Agreement.           7.4 Billing and Payment   Performing Party shall provide invoices to Requesting Party each month, setting forth the Costs incurred by Performing Party during the previous month to provide the Services.  Requesting Party shall pay each invoice within fifteen (15) days of receipt from Performing Party.  Billing and payment disputes that cannot be resolved in the normal course of business shall be resolved using the dispute resolution procedures described in Article 8.   7.5 Audits and Adjustments   Performing Party shall maintain and retain for such time as Requesting Party may reasonably direct, but not for longer than six (6) years, the books and other records needed to document the costs Performing Party incurs as a result of fulfilling its obligations under this Agreement.  Performing Party shall respond to any reasonable request from Requesting Party for information related to a Cost charged by Performing Party to Requesting Party by providing Requesting Party the information reasonably needed by Requesting Party to verify the Cost in question.  From time to time, Requesting Party may conduct, and Performing Party shall permit Requesting Party to conduct or cause to be conducted by its authorized agents, at Requesting Party s expense, audits of the books and records of Performing Party that relate to the Services provided under this Agreement.  Such audits will be conducted at reasonable mutually agreed upon times, provided that Requesting Party must contest invoices within one (1) year of receipt and must complete any audit relating to a contested invoice within a reasonable period of time thereafter.  Any adjustment identified to be made as a result of an audit and that is payable under Schedule 1 or Schedule 2 shall be made to the billing statement next issued following the conclusion of the audit.  ARTICLE 8  DISPUTE RESOLUTION        Disputes arising out of or relating to this Agreement shall first be discussed by the Managers of Distribution Utility and ATCLLC immediately responsible for the supervision of the departments in which the dispute has arisen.  Any dispute that cannot be resolved at the Manager level shall be referred to Vice President level.  Any dispute that cannot be resolved within a reasonable period of time after the date of submission of the dispute at the Vice President level shall then be referred to the Senior Vice Presidents for Distribution Utility and ATCLLC.  If a satisfactory resolution is not achieved between the Senior Vice Presidents or Vice Presidents of both Parties, then the Parties shall submit to non-binding mediation, prior to resorting to other remedies available at law or equity.  ARTICLE 9  FORCE MAJEURE   To the extent performance by either Party hereto is prevented or delayed due to circumstances beyond the reasonable control of the Party (such circumstances shall be hereinafter referred to as events of  Force Majeure ), such Party shall promptly give written notice to the other Party, and shall exercise all commercially reasonable efforts to overcome the effects of the event of Force Majeure.  The written notification shall include a full and complete explanation of the event of Force Majeure, and the actions such Party is taking or proposes to take to overcome the event of Force Majeure.  The Parties shall have the right, upon written notice to the affected Party, to obtain alternate contractors to perform the Services during any event of Force Majeure that prevents or delays the affected Party s performance for a period of ten (10) consecutive days or more.  ARTICLE 10  LIMITATION OF LIABILITY   With respect to claims by and between the Parties under this Agreement the measure of damages at law or in equity in any action or proceeding shall be limited to direct actual damages only, and such direct actual damages shall be the sole and exclusive remedy and all other remedies or damages at law or in equity are waived, and neither Party shall be liable in statute, contract, in tort (including negligence), strict liability, warranty or under any other legal theory or otherwise to the other Party, its agents, representatives, and/or assigns, for any special, incidental, or consequential loss or damage whatsoever, including but not limited to, loss of profits or revenue on work not performed, for loss of use of or under-utilization of the other Party s facilities, loss of use of revenues, or loss of anticipated profits, resulting from the Party s performance or non-performance of an obligation imposed on it by this Agreement, without regard to the cause or causes related thereto, including the negligence of the Party.  The Parties expressly acknowledge and agree that this limitation shall apply to any claims for indemnification under Article 11 of this Agreement.  The provisions of this Article shall survive the termination or expiration of this Agreement.  ARTICLE 11  INDEMNITY    11.1 Indemnification Obligation          Subject to the provisions of Article 10, a Party ( Indemnifying Party ) shall indemnify, hold harmless and defend the other Party ( Indemnified Party ), and its officers, directors, employees, affiliates, managers, members, trustees, shareholders, agents, contractors, subcontractors, affiliates  employees, invitees and successors, from and against any and all claims, demands, suits, obligations, payments, liabilities, costs, losses, judgments, damages and expenses (including the reasonable costs and expenses of any and all actions, suits, proceedings, assessments, judgments, settlements, and compromises relating thereto, reasonable attorneys  and expert fees and reasonable disbursements in connection therewith) for damage to property, injury to any person or entity, or death of any individual, including the Indemnified Party s employees and affiliates  employees, the Indemnifying Party s employees, or any other third parties, to the extent caused wholly or in part by any act or omission, negligent or otherwise, by the Indemnifying Party or its officers, directors, employees, agents, contractors, subcontractors and invitees arising out of or connected with the Indemnifying Party s performance or breach of this Agreement, or the exercise by the Indemnifying Party of its rights hereunder; provided, however, that the provisions of this Article shall not apply if any such injury, death or damage is held to have been caused by the negligence or intentional wrongdoing of the Indemnified Party, its agents or employees.  In furtherance of the foregoing indemnification and not by way of limitation thereof, the Indemnifying Party hereby waives any defense it otherwise might have under applicable workers  compensation laws.   11.2  Indemnification Procedures        A Party seeking indemnification from the other Party under this Agreement shall give the other Party notice of such claim as soon as practicable but in any event on or before the thirtieth (30th) day after the Party s actual knowledge of such claim or action.  Such notice shall describe the claim in reasonable detail, and shall indicate the amount (estimated if necessary) of the claim that has been, or may be sustained by, said Party.  To the extent that the other Party will have been actually and materially prejudiced as a result of the failure to provide such notice, such notice will be a condition precedent to any liability of the other Party under the provisions for indemnification contained in this Agreement.  Neither Party may settle or compromise any claim for which indemnification is sought under this Agreement without the prior consent of the other Party; provided, however, said consent shall not be unreasonably withheld or delayed.  Each Party s indemnification obligation will survive expiration, cancellation or early termination of this Agreement.  ARTICLE 12  INSURANCE   12.1 Insurance Requirements   The Parties agree to maintain, at their own cost and expense, general and automobile liability, worker s compensation, and other forms of insurance relating to their operations for the life of this Agreement in the manner, and amounts, at a minimum, as set forth below:  (a) Workers  Compensation Insurance in accordance with all applicable state, federal and maritime law, including Employer s Liability Insurance in the amount of $1,000,000 per accident;  (b) Commercial General Liability Insurance, including Contractual Liability Coverage for liabilities assumed under this Agreement, and Personal Injury Coverage in the amount of $25,000,000 per occurrence for bodily injury and property damage.  Each Party s policy shall include the other Party as an additional insured.  (c) Automobile Liability Insurance for all owned, non-owned, and hired vehicles with bodily injury limits of no less than $5,000,000 per person, $5,000,000 per accident; and property damage limits of no less than $5,000,000 per accident.  Each Party s policy shall include the other Party as an additional insured.  (d) Where a Party has more than $100 million in assets it may, at its option, self insure all or part of the insurances required in this Article; provided, however, the self-insuring Party agrees that all other provisions of this Article, including, but not limited to, waiver of subrogation, waiver of rights of recourse, and additional insured status, which provide or are intended to provide protection for the insured Party and its affiliated and associated companies under this Agreement, shall remain enforceable.  A Party s election to self-insure shall not impair, limit, or in any manner result in a reduction of rights and/or benefits otherwise available to the insured Party and its affiliated and associated companies through formal insurance policies and endorsements as specified in the above parts of this Article.  The self-insuring Party agrees that all amounts of self-insurance, retentions and/or deductibles are the responsibility of and shall be borne by the self-insuring Party.   12.2 Certification    Within fifteen (15) days of the Effective Date, and each anniversary of the Effective Date, during the term of this Agreement, (including any extensions), each insuring Party shall provide to the insured Party, properly executed and current certificates of insurance with respect to all insurance policies required to be maintained by such Party under this Agreement.  Certificates of insurance shall provide the following information:  (a) Name of insurance company, policy number and expiration date;  (b) The coverage required and the limits on each, including the amount of deductibles or self-insured retentions, which shall be for the account of the Party maintaining such policy;  (c) A statement indicating that the insured Party shall receive at least thirty (30) days prior written notice of cancellation or expiration of a policy, or reduction of liability limits with respect to a policy; and  (d) A statement identifying and indicating that additional insureds have been named as required by this Agreement.        12.3 Copies         At an insured Party s request, in addition to the foregoing certifications, the insuring Party shall deliver to the insured Party a copy of applicable sections of each insurance policy.        12.4 Policy Inspection        Each insured Party shall have the right to inspect the original policies of insurance applicable to this Agreement at the insuring Party s place of business during regular business hours.        12.5 Coverage Period        If any insurance is written on a  claims made  basis, the insuring Party shall maintain the coverage for a minimum of seven (7) years after the termination of this Agreement.        12.6 Waiver of Subrogation        To the extent permitted by the insurer and commercially reasonable, each insuring Party shall obtain waivers of subrogation in favor of the insured Party from any insurer providing coverage that is required to be maintained under this Article 12, except for the coverage required under Section 12.1(a).  A Party shall not be required to obtain a waiver of subrogation if the other Party is not able to obtain a waiver of subrogation from its insurance carrier.        ARTICLE 13        SUCCESSORS AND ASSIGNS        This Agreement and each and every covenant, term and condition hereof, shall be binding upon and inure to the benefit of the Parties to this Agreement and their respective heirs, executors, administrators, successors and permitted assigns.  Distribution Utility shall not assign its rights or obligations under this Agreement without express written approval of ATCLLC, except it may assign its rights or obligations to a purchaser (or an affiliate) who will own all or substantially all of its Distribution Facilities or equity interests and who shall then be bound by all of the provisions of this Agreement.  ATCLLC shall not assign its rights or obligations under this Agreement without express written approval of Distribution Utility, except it may assign its rights and obligations to a purchaser (or an affiliate) who will own all or substantially all of its Transmission Facilities or equity interests and who shall then be bound by all of the provisions of this Agreement.        ARTICLE 14        NOTICE   14.1 Written Notice        All certificates or notices required under this Agreement shall be given in writing and addressed or delivered to the representative(s) specified in this Agreement.  Notices shall be deemed received (i) upon delivery, when personally delivered; (ii) upon receipt, when sent via registered or certified mail; (iii) the next business day, when sent via overnight courier; and (iv) when sent via facsimile upon confirmation by recipient.  Copies of all general correspondence regarding this Agreement shall also be sent to these representative(s).   14.2 Representatives to Receive Notice        Notices submitted hereunder shall be directed to the following individuals:    Notices to Distribution Utility:    J. Patrick Keyes    President        Upper Michigan Energy Resources Corporation    P458    Milwaukee, WI 53203    414-221-2125        Notices to ATCLLC:      Attn: William P. Marsan    Vice President, General Counsel &amp; Secretary    American Transmission Company, LLC    W234 N2000 Ridgeview Parkway Court    P.O. Box 47    Waukesha, WI  53188-1022    Fax: 262-506-6710     14.3     Notification Changes        A Party may change its representative(s) designated to receive notice under this Agreement by written notice to the other Party.    ARTICLE 15  MISCELLANEOUS   15.1 Compliance with Laws   Throughout the term of this Agreement, each Party shall perform its obligations under this Agreement and any accepted Request for Services and associated Scope of Work in compliance with all applicable federal, state and local statutes, ordinances, rules and regulations, including, but not limited to those pertaining to human safety, protection of property, non-discrimination, and protection of the environment.   15.2 Entire Agreement   This Agreement, together with any Exhibits and Schedules attached to this Agreement, is the entire understanding of the Parties regarding the subject matter of this Agreement, and supersedes all prior oral or written discussions, negotiations and agreements the Parties may have had with respect to the subject matter of this Agreement.   15.3 Counterparts   This Agreement may be executed in any number of counterparts, and each counterpart shall have the same force and effect as the original instrument.   15.4 Amendment   No amendment, modification or waiver of any term hereof shall be effective unless set forth in a writing signed by both Parties.   15.5 Survival   All remedial obligations, indemnities and confidentiality rights and obligations provided for in this Agreement shall survive the cancellation, expiration or termination of this Agreement   15.6 Independent Contractor   Each Party at all times shall be deemed to be an independent contractor and none of its employees or the employees of its contractors shall be considered to be employees of the other Party during the term of this Agreement.  Neither Party shall have authority to act on behalf of the other Party or bind the other Party in any manner except as expressly set forth in this Agreement.  The Parties acknowledge that neither this Agreement nor any of its provisions are intended to create any partnership or joint venture between or among the Parties.   15.7 Confidentiality   (a)  Confidential Information,  as used in this Section 15.7, shall mean all information or documentation disclosed or made available by either Party to the other, including but not limited to correspondence between the Parties, business plans, financial information, policies and procedures, computer programs, reports and analyses, or other information which a Party in good faith designates as a  trade secret  as that term is defined in.   134.90(1)(c) or which is designated as critical energy infrastructure information as defined in 18 C.F.R.  388.12 or which may be subject to the limitation on disclosure set forth in 18 C.F.R  358.1, et seq.   (b) In consideration of the disclosure by either Party of Confidential Information to the other Party, the Parties agree that each of them shall undertake in good faith to accomplish the following additional actions with respect thereto:        (i) to use the Confidential Information for the sole purpose of fulfilling the obligations of the Parties pursuant to this Agreement;        (ii) to safeguard and hold in strict confidence all Confidential Information, limiting disclosure of Confidential Information to employees, contractors or agents of the receiving Party who have a need to know;        (iii) to protect Confidential Information from disclosure to anyone not a party to this Agreement or to whom such disclosure is prohibited or limited without the prior approval of the disclosing Party; and        (iv) upon the request of the disclosing Party and in any event upon cancellation or expiration of this Agreement, to return all Confidential Information, or to certify that such Confidential Information has been destroyed.   (c) The restrictions of this Section do not apply to any information which is already known by the receiving Party, possessed by a third party prior to disclosure, acquired from anyone not a Party to this Agreement without restriction, or which is publicly available.   (d) Each Party retains all right, title and interest in and to any Confidential Information disclosed by the Party under this Agreement.   (e) In the event that either Party is required by applicable law to disclose any Confidential Information of the other Party, such Party shall promptly notify the other Party of such requirement and cooperate with the other Party to protect the Confidential Information from any disclosure not required by law.    (f) The obligations of this Section shall survive for a period of three (3) years following any expiration or termination of this Agreement.   15.8 Standards of Conduct   If the performance of this Agreement requires ATCLLC to disclose information about the Transmission System to the Distribution Utility, the dissemination of which is subject to FERC s Standards of Conduct requirements, under 18 C.F.R.  358.1, et seq.,  such information shall not be disclosed by the Distribution Utility or ATCLLC to any persons that have not completed ATCLLC s Standards of Conduct training agreeing to be bound by ATCLLC s Compliance Plan.  Distribution Utility employees receiving Confidential Information of ATCLLC under this Agreement understand that they are prohibited from being conduits of information to Marketers.  Further, should any FERC audit of ATCLLC s compliance with the Standards of Conduct turn up any violations of the Standards of Conduct Agreement on the part of the Distribution Utility (i.e. confidential Transmission System information being passed to Marketers), the Distribution Utility shall be solely liable for any and all penalties imposed by the FERC monetary and otherwise, for those violations attributed to the Distribution Utility by the FERC.        15.9 No Implied Waivers   The failure of a Party to insist upon or enforce strict performance of any of the provisions of this Agreement shall not be construed as a waiver or relinquishment to any extent of such Party s right to assist or rely upon any such provisions, rights and remedies in that or any other instance; rather, the same shall be and remain in full force and effect.   15.10 No Third-Party Beneficiaries   This Agreement is intended to be solely for the benefit of the Parties to this Agreement and their successors and permitted assigns and is not intended to and shall not confer any rights or benefits on any third party (other than successors and permitted assigns) not a signatory to this Agreement.   15.11 Severability   In the event that any provision of this Agreement is deemed as a matter of law to be unenforceable or null and void, such unenforceable or void portion of such provision shall be deemed severable from this Agreement unless the removal of the unenforceable provision materially alters the obligations of either Party hereunder.   Even if there is a material alteration in the remainder of the Agreement, the Agreement shall continue in full force and effect as if such provision was not contained in this Agreement, but the Parties shall negotiate in good faith new provisions in relation to the deleted provision that will to the extent practicable restore the benefit of the bargain contained in such provision, and that are consistent with Good Utility Practice.   15.12 Governing Law   This Agreement shall be governed by and construed in accordance with the laws of the State of Wisconsin, with the exception of any choice of laws provisions.     15.13 Headings   The headings as set forth in this Agreement are inserted for convenience and shall have no effect on the interpretation or construction of this Agreement.   15.14 Affiliate Status of Parties   For purposes of Articles 10, 11, and 12, neither Party shall be treated as an affiliate of the other Party.   IN WITNESS WHEREOF, the Parties have caused this Agreement to be executed by their duly authorized representatives, effective as of the date first written above.           AMERICAN TRANSMISSION COMPANY, LLC      By: ATC MANAGEMENT INC., its Corporate                 Manager                                                         By: /s/ William P. Marsan         William P. Marsan  Title: Executive Vice President, General Counsel &amp; Secretary      UPPER MICHIGAN ENERGY RESOURCES CORPORATION        By: /s/ J. Patrick Keyes         J. Patrick Keyes       President      Schedule 1    Section A    Background    Upper Michigan Energy Resources Corporation (UMERC) will use SAP IMPACT software to capture all direct and indirect costs billed to ATCLLC.  This software will collect costs that will be billed to ATCLLC in orders which denote the project or maintenance activity and the cost element associated with the charge.  Each month after UMERC closes its books, a bill will be prepared and presented to ATCLLC for payment.  The bill will consist of direct costs, indirect costs as well as applicable overheads and a return on and of investment of the common property.     Direct Costs    All applicable labor and non-labor expenses that can be identified as provided to ATCLLC will be collected in internal orders.  During each month end closing, the expenses in the orders will settle to an accounts receivable general ledger account and be billed in full to ATCLLC in a timely manner.    I.  Labor  Direct costs for labor are calculated by multiplying hours a person spends supporting a service order by a standard rate which includes labor loadings.  The standard rate is described in the following paragraphs.  In order to collect the hours to bill to ATCLLC the employee  records the hours worked on a project to an order in either Employee Self Serve, UMERC s time reporting system, or on their timesheet that is processed in payroll.  Their direct supervisors are responsible for making sure the correct orders are used.    Standard Rates Including Labor Loadings  Cost Center/Activity Type Combinations  In Impact, there is a standard rate for each cost center and activity type combination.  All employees have a home cost center assigned to them based on their function within the company.  In addition, each individual is assigned an activity type according to their pay grades within that cost center.  There are separate activity types for management and represented personnel.     Calculating Standard Rates  During the budgeting period, standard rates for the following year are initially calculated by combining the activity type / cost center combination group s planned:        pay + bonus + OT  pay +  benefits +  payroll taxes +  pension expenses     total hours + OT hours   vacation hours   absent hours  - holiday hours    The vacation and absent time hours are based on corporate averages.  Each cost center manager has the opportunity to change these if the history of the cost center is different than the company as a whole.  The new rates are loaded into Impact.  The rate can be adjusted throughout the year depending on actual results.    Non-Productive Labor   Crew labor is to be increased by a factor for non-productive labor.  The following  equation is used to calculate the rate:   Non productive hours    Productive Hours    Non productive hours include but are not limited to training, safety meetings, joint governance, other meetings, diversity programs, vehicle downtime, inclement weather, and substance abuse testing.  Vacation, holiday, and sick time are all excluded from the productive and non-productive hours used in this calculation.      II. Non Labor  Non labor costs will also be billed to ATCLLC.  An example, of these costs would be an invoice from a third party supplier paid on behalf of ATCLLC for materials or services.  Any Non labor expenses will be billed in full to ATCLLC or based on an agreed upon percentage.    III. Vehicles Rates  UMERC will have vehicle classes that can be charged time for a project.  These costs are charged on a per hour rate based on the type of vehicle used.  There is also an overhead attached to each charge as described below.    Indirect Costs  A portion of the indirect costs that UMERC incurs on activities that support the entire company or specific areas will be billed to ATCLLC in the overhead rate.  There are separate overhead rates applied to crew labor, non-crew labor, vehicles, materials and printing.      -Crew labor, taking into account non-productive labor hours, receives the following overheads:  administrative and general (also including return of and return on components), electric operations and tools overhead.       -Non-crew labor receives administrative and general overhead.       -Materials receive minor items and stores handling overheads.     -Vehicles, which are charged at a standard hourly vehicle rate per type of vehicle, have an overhead load added to represent the return on investment.      -Printing receives a printing overhead charge to reflect the total cost of the print shop.    Overhead Calculation   1.  Administrative and General Overhead Rate  The overhead rate for labor is added to the total costs of direct labor billed at the standard rate.    Finance personnel are responsible for calculating the overhead rate.  This rate includes three major components: a) corporate center expenses which include labor and non-labor expenses of the departments as shown below, b) return on investments and c) return of investments. The denominator used to calculate the rate is total company labor (including benefits) reduced by corporate center labor (net of corporate center labor to be billed out).  A. The Corporate Center numerator is the  Level 1  expenses and adds software amortization. This includes full labor and non-labor expenses but excludes return of and return on (as described below) and also excludes Supply Chain logistics expenses charged out to business units. The following departments are included in Corporate Center: Administrative Services, Supply Chain, Community and Corporate Relations, Corporate Affairs, Finance, Human Resources, Information Technology, Customer Relations, Legal, Environmental, Government Affairs, Regulatory, Office of Research and Innovation, Dues &amp; Membership and  Energy charges to the utility. These Level 1 expenses are then reduced by corporate donations.  B.  Return on  calculations include the net asset value of the following items multiplied by the pretax weighted cost of capital from the latest approved Michigan Public Service Commission rate order.  The items include: 303 software, 389 land and easements, 390 structure, 391 office equipment including personal computers, 393 stores, 394 tools, shop, garage, 395 lab equipment, 397 communications including SCADA system and 398 miscellaneous. The net asset value is reduced by any amounts that are specifically calculated in the control center including telecommunications and PC related equipment.  C. Return of  calculations include the depreciation and amortization on the same items included in the  return on  calculations with the following exceptions; software amortization is excluded--it is included in administrative and general overhead calculation; structure depreciation is reduced by any structure depreciation included in vehicle charges; personal computer and communications depreciation is reduced by the amounts included in telecommunications direct charges.    2. Electric Operations Overhead   Various management and support activities in Electric Operations that are not specific project expenses charged to ATCLLC are considered overhead expenses.  These were accumulated and divided by the Electric Operations labor to obtain a rate.     3. Tools   A tools overhead rate is developed by dividing tools by the sum of distribution crew labor, electrician labor and construction worker labor.    4. Minor Items  A minor item overhead rate is developed by dividing minor items expenses by stock materials and site delivered materials.  This rate is applied to materials that are billed to ATCLLC.     5. Stores Handling   A stores handling overhead rate is developed by accumulating Electric Logistics expenses of labor, vehicles, employee expenses, miscellaneous office, contractors, materials and the Stores portion of facilities less Pre-capitalized Transformers and Meters.  The store room overhead is divided by the total of DO-Electric Materials-Stock and Transmission Materials-Stock to develop the rate.    6. Return On overhead for Vehicles.    The return on investment for vehicles is determined by multiplying the net book value times the pretax weighted cost of capital from the latest approved Michigan Public Service Commission  rate order.  The result is divided by the cost of the vehicles used to calculate the hourly rate.  The resulting percentage is the overhead rate applied to vehicle charges.     7. Printing Overhead  All printing jobs are assigned an overhead which is to cover the costs associated with the print shop.     Return on and of Investment of Common Facilities  All UMERC facilities that have a portion of the property on them owned by ATCLLC will incur a cost of return on and of investment on a monthly basis.      The return on investment is calculated by multiplying the total net investment of the properties times the rate of return.  The interest rate used to calculate return on investment is the pretax weighted cost of capital from the latest approved Michigan Public Service Commission rate order.    The return of investment is calculated using the certified depreciation rate to determine annual depreciation.  This is multiplied by the percent of facilities owned by ATCLLC to come up with a final amount.    The return on and of will be added together for an annual amount.  Of this, one twelfth will be billed each month.  This billing may be modified periodically to reflect changes in the value in the accounts.    Section B    Background    UMERC will use SAP IMPACT software to capture all direct and indirect costs billed to ATCLLC.  This software will collect costs that will be billed to ATCLLC in orders which denote the project or maintenance activity and the cost element associated with the charge.  Each month after UMERC closes its books, a bill will be prepared and presented to ATCLLC for payment.  The bill will consist of direct costs, indirect costs as well as applicable overheads and a return on and of investment of the common property.     Direct Costs    All applicable labor and non-labor expenses that can be identified as provided to ATCLLC will be collected in internal orders.  During each month end closing, the expenses in the orders will settle to an accounts receivable general ledger account and be billed in full to ATCLLC in a timely manner.    I.  Labor  Direct costs for labor are calculated by multiplying hours a person spends supporting a service order by a standard rate which includes labor loadings.  The standard rate is described in the following paragraphs.  In order to collect the hours to bill to ATCLLC the employee  records the hours worked on a project to an order in either Employee Self Serve, UMERC s time reporting system, or on their timesheet that is processed in payroll.  Their direct supervisors are responsible for making sure the correct orders are used.    Standard Rates Including Labor Loadings  Cost Center/Activity Type Combinations  In Impact, there is a standard rate for each cost center and activity type combination.  All employees have a home cost center assigned to them based on their function within the company.  In addition, each individual is assigned an activity type according to their pay grades within that cost center.  There are separate activity types for management and represented personnel.     Calculating Standard Rates  During the budgeting period, standard rates for the following year are initially calculated by combining the activity type / cost center combination group s planned:        pay + bonus + OT  pay +  benefits +  payroll taxes +  pension expenses     total hours + OT hours   vacation hours   absent hours  - holiday hours    The vacation and absent time hours are based on corporate averages.  Each cost center manager has the opportunity to change these if the history of the cost center is different than the company as a whole.  The new rates are loaded into Impact.  The rate can be adjusted throughout the year depending on actual results.    Non-Productive Labor   Crew labor is to be increased by a factor for non-productive labor.  The following  equation is used to calculate the rate:   Non productive hours    Productive Hours    Non productive hours include but are not limited to training, safety meetings, joint governance, other meetings, diversity programs, vehicle downtime, inclement weather, and substance abuse testing.  Vacation, holiday, and sick time are all excluded from the productive and non-productive hours used in this calculation.      III. Non Labor  Non labor costs will also be billed to ATCLLC.  An example, of these costs would be an invoice from a third party supplier paid on behalf of ATCLLC for materials or services.  Any Non labor expenses will be billed in full to ATCLLC or based on an agreed upon percentage.    III. Vehicles Rates  UMERC will have vehicle classes that can be charged time for a project.  These costs are charged on a per hour rate based on the type of vehicle used.  There is also an overhead attached to each charge as described below.    Indirect Costs  A portion of the indirect costs that UMERC incurs on activities that support the entire company or specific areas will be billed to ATCLLC in the overhead rate.  There are separate overhead rates applied to crew labor, non-crew labor, vehicles, materials and printing.      -Crew labor, taking into account non-productive labor hours, receives the following overheads:  administrative and general (also including return of and return on components), electric operations and tools overhead.       -Non-crew labor receives administrative and general overhead.       -Materials receive minor items and stores handling overheads.     -Vehicles, which are charged at a standard hourly vehicle rate per type of vehicle, have an overhead load added to represent the return on investment.      -Printing receives a printing overhead charge to reflect the total cost of the print shop.    Overhead Calculation   8.  Administrative and General Overhead Rate  The overhead rate for labor is added to the total costs of direct labor billed at the standard rate.    Finance personnel are responsible for calculating the overhead rate.  This rate includes three major components: a) corporate center expenses which include labor and non-labor expenses of the departments as shown below, b) return on investments and c) return of investments. The denominator used to calculate the rate is total company labor (including benefits) reduced by corporate center labor (net of corporate center labor to be billed out).  D. The Corporate Center numerator is the  Level 1  expenses and adds software amortization. This includes full labor and non-labor expenses but excludes return of and return on (as described below) and also excludes Supply Chain logistics expenses charged out to business units. The following departments are included in Corporate Center: Administrative Services, Supply Chain, Community and Corporate Relations, Corporate Affairs, Finance, Human Resources, Information Technology, Customer Relations, Legal, Environmental, Government Affairs, Regulatory, Office of Research and Innovation, Dues &amp; Membership and  Energy charges to the utility. These Level 1 expenses are then reduced by corporate donations.  E.  Return on  calculations include the net asset value of the following items multiplied by the pretax weighted cost of capital from the latest approved Michigan Public Service Commission rate order.  The items include: 303 software, 389 land and easements, 390 structure, 391 office equipment including personal computers, 393 stores, 394 tools, shop, garage, 395 lab equipment, 397 communications including SCADA system and 398 miscellaneous. The net asset value is reduced by any amounts that are specifically calculated in the control center including telecommunications and PC related equipment.  F. Return of  calculations include the depreciation and amortization on the same items included in the  return on  calculations with the following exceptions; software amortization is excluded--it is included in administrative and general overhead calculation; structure depreciation is reduced by any structure depreciation included in vehicle charges; personal computer and communications depreciation is reduced by the amounts included in telecommunications direct charges.    9. Electric Operations Overhead   Various management and support activities in Electric Operations that are not specific project expenses charged to ATCLLC are considered overhead expenses.  These were accumulated and divided by the Electric Operations labor to obtain a rate.     10. Tools   A tools overhead rate is developed by dividing tools by the sum of distribution crew labor, electrician labor and construction worker labor.    11. Minor Items  A minor item overhead rate is developed by dividing minor items expenses by stock materials and site delivered materials.  This rate is applied to materials that are billed to ATCLLC.     12. Stores Handling   A stores handling overhead rate is developed by accumulating Electric Logistics expenses of labor, vehicles, employee expenses, miscellaneous office, contractors, materials and the Stores portion of facilities less Pre-capitalized Transformers and Meters.  The store room overhead is divided by the total of DO-Electric Materials-Stock and Transmission Materials-Stock to develop the rate.    13. Return On overhead for Vehicles.    The return on investment for vehicles is determined by multiplying the net book value times the pretax weighted cost of capital from the latest approved Michigan Public Service Commission rate order.  The result is divided by the cost of the vehicles used to calculate the hourly rate.  The resulting percentage is the overhead rate applied to vehicle charges.     14. Printing Overhead  All printing jobs are assigned an overhead which is to cover the costs associated with the print shop.     Return on and of Investment of Common Facilities  All UMERC facilities that have a portion of the property on them owned by ATCLLC will incur a cost of return on and of investment on a monthly basis.      The return on investment is calculated by multiplying the total net investment of the properties times the rate of return.  The interest rate used to calculate return on investment is the pretax weighted cost of capital from the latest approved Michigan Public Service Commission rate order.    The return of investment is calculated using the certified depreciation rate to determine annual depreciation.  This is multiplied by the percent of facilities owned by ATCLLC to come up with a final amount.    The return on and of will be added together for an annual amount.  Of this, one twelfth will be billed each month.  This billing may be modified periodically to reflect changes in the value in the accounts.      Schedule 2                                     ATCLLC s Cost Methodology    Section A    Method of Calculating Costs Charged to Projects for Assets Owned by ATCLLC    Direct Costs:  Costs incurred by ATCLLC that are directly attributable to the project.  Such costs would include direct labor, employee expenses, material costs, outside contractors and other direct vendor billed costs including sales tax paid on vendor invoices.        Indirect Costs:     Labor Loading  This loading covers pension and other related employee benefit costs, payroll taxes and the expense of non-productive employee time (Sick, Holiday &amp; Vacation).  This loading percentage is then applied on direct labor.    Supervisory Loading  This loading covers costs incurred for management and supervision of employees directly involved in the project.  The calculation is derived by taking the average of total supervision salary divided by total salary for project related departments only.  This allocation percentage is then applied on direct labor.    Project Administration Clearing  This is direct labor or outside services associated with capital projects which is charged to a central clearing account.  Charges typically originate in administrative areas in which direct project related work is performed, in smaller increments, for numerous projects in any given week.  i.e. Plant Accounting, Project Business Administration, etc. These costs are accumulated monthly and allocated to all open capital projects having charges in the preceding month.     Administrative and General Loading  This loading covers cost incurred for administrative and general functions that support the entire company of which a portion will be allocated to the project. The calculation is derived by taking total allocable A&amp;G expenses divided by total labor costs in non-A&amp;G departments. This allocation percentage is then applied on direct labor.  Allocable A&amp;G expenses include those from the following departments:  Corporate Management, Human Resources, Finance, Accounting, Facilities &amp; Security, Information Technology and Corporate Services.    Tax Indemnification If the receipt of monies by ATC are deemed to be taxable, an  additional amount shall be charged to reimburse ATC for costs associated with timing  differences between the payment of tax on such amounts and the related future tax deductions.                  Section B    Method of Calculating Costs Charged to Projects for Assets Owned by External Parties    Direct Costs   Costs incurred by ATCLLC that are directly attributable to the project.  Such costs would include direct labor, employee expenses, material costs, outside contractors and other direct vendor billed costs including sales tax paid on vendor invoices.    Indirect Costs:     Labor Loading  This loading covers pension and other related employee benefit costs, payroll taxes and the expense of non-productive employee time (Sick, Holiday &amp; Vacation).  This loading percentage is then applied on direct labor.    Supervisory Loading  This loading covers costs incurred for management and supervision of employees directly involved in the project.  The calculation is derived by taking the average of total supervision salary divided by total salary for project related departments only.  This allocation percentage is then applied on direct labor.    Project Administration Clearing  This is direct labor or outside services associated with capital projects which is charged to a central clearing account.  Charges typically originate in administrative areas in which direct project related work is performed, in smaller increments, for numerous projects in any given week.  i.e. Plant Accounting, Project Business Administration, etc. These costs are accumulated monthly and allocated to all open capital projects having charges in the preceding month.     Administrative and General Loading  This loading covers cost incurred for administrative and general functions that support the entire company of which a portion will be allocated to the project. The calculation is derived by taking total allocable A&amp;G expenses divided by total labor costs in non-A&amp;G departments. This allocation percentage is then applied on direct labor.  Allocable A&amp;G expenses include those from the following departments:  Corporate Management, Human Resources, Finance, Accounting, Facilities &amp; Security, Information Technology and Corporate Services.                                Exhibit A     REQUEST FOR SERVICES  Substation    Request for Services Number***: _______________    Revision No:    Request Version (Circle one):  Initial Acceptance   Final Acceptance   (Initial Acceptance indicates general concurrence with service scope and includes a budgetary estimate and preliminary schedule.  Final Acceptance indicates service scope is fully defined and estimate is detailed.)    Date: _____________    Project Name: _____________________________________________    Requesting Party: ______________________________    Performing Party: ______________________________    Requester Work Order Number: ___________________    Requestor Project Manager: ____________________________    E-mail address: ________________________   Phone Number: ___________    General Scope Description: (Attach Additional Details/Drawings, Scope Documents, Design Documents and Estimates as Appropriate):                   One Line Drawing:  Yes   No       Project Scope Documents:    Requested Service Start Date(s):    Requested Completion Date(s):      Planned Outage Date(s):      *** (Numbering Convention: Requesting Party/Performing Party   YY   XYZ; e.g.: WE/ATC-06-001)  (Check and complete for all Services that Apply)   Site/Facility Walkdown and Investigation   Task Responsible Party (Circle One):    Requesting Party    Performing Party Performing Party Estimated Cost Estimated Completion Date     Service Dependencies: (List required inputs or prerequisites for providing service) Specific Instructions:    Design Scope Document   Task Responsible Party (Circle One):    Requesting Party    Performing Party Performing Party Estimated Cost Estimated Completion Date     Service Dependencies: (List required inputs or prerequisites for providing service) Specific Instructions:    Project Engineering   Task Responsible Party (Circle One):    Requesting Party    Performing Party Performing Party Estimated Cost Estimated Completion Date     Service Dependencies: (List required inputs or prerequisites for providing service) Specific Instructions: (Includes design, drawings, specifications, and as-builts)    Project Material Procurement   Task Responsible Party (Circle One):    Requesting Party    Performing Party Performing Party Estimated Cost Estimated Completion Date     Service Dependencies: (List required inputs or prerequisites for providing service) Specific Instructions:    Project Building Permits   Task Responsible Party (Circle One):    Requesting Party    Performing Party Performing Party Estimated Cost Estimated Completion Date     Service Dependencies: (List required inputs or prerequisites for providing service) Specific Instructions:    Electrical Construction     Task Responsible Party (Circle One):    Requesting Party    Performing Party Performing Party Estimated Cost Estimated Completion Date     Service Dependencies: (List required inputs or prerequisites for providing service) Specific Instructions: (Includes above grade construction, such as wiring, erecting bus, setting breakers, oil processing and filling, field mark-ups, etc.)      Civil Construction     Task Responsible Party (Circle One):    Requesting Party    Performing Party Performing Party Estimated Cost Estimated Completion Date     Service Dependencies: (List required inputs or prerequisites for providing service) Specific Instructions: (Includes site clearing and excavating; drilling, forming and pouring of foundations; installing manholes or vaults; grounding; and restoration. )    Underground   Task Responsible Party (Circle One):    Requesting Party    Performing Party Performing Party Estimated Cost Estimated Completion Date     Service Dependencies: (List required inputs or prerequisites for providing service) Specific Instructions: (Includes conduit, Trenwa and cable installation; splicing; specialty work of pipe-type transmission cable; bonding; and pothead installation.)  Inspection/Oversight   Task Responsible Party (Circle One):    Requesting Party    Performing Party Performing Party Estimated Cost Estimated Completion Date     Service Dependencies: (List required inputs or prerequisites for providing service) Specific Instructions: (Includes inspector for buildings and structures; management of site contractors.)    Special Testing Task Responsible Party (Circle One):    Requesting Party    Performing Party Performing Party Estimated Cost Estimated Completion Date     Service Dependencies: (List required inputs or prerequisites for providing service) Specific Instructions: (Includes audiometric, soil resistivity, fall of potential ground test, cable hi-pot.)    Electrical Maintenance Testing   Task Responsible Party (Circle One):    Requesting Party    Performing Party Performing Party Estimated Cost Estimated Completion Date     Service Dependencies: (List required inputs or prerequisites for providing service) Specific Instructions: (Includes breaker Doble tests, power factor tests, VT ratio tests, Transformer Turns Ratio, oil sampling and testing)    Relay &amp; Protection Support   Task Responsible Party (Circle One):    Requesting Party    Performing Party Performing Party Estimated Cost Estimated Completion Date     Service Dependencies: (List required inputs or prerequisites for providing service) Specific Instructions: (Includes current transformer and voltage transformer circuits, relay settings, current and voltage injection for relay simulation.)    Communications/Control (SCADA) Support   Task Responsible Party (Circle One):    Requesting Party    Performing Party Performing Party Estimated Cost Estimated Completion Date     Service Dependencies: (List required inputs or prerequisites for providing service) Specific Instructions: (RTU wiring, point verification from RTU.)    Start-Up Engineering   Task Responsible Party (Circle One):    Requesting Party    Performing Party Performing Party Estimated Cost Estimated Completion Date     Service Dependencies: (List required inputs or prerequisites for providing service) Specific Instructions: (Includes verification of system design to standards, verify control circuits, coordinate energization procedures, and communicate changes to System Control.)    Substation Integration Support (We Energies only)   Task Responsible Party (Circle One):    Requesting Party    Performing Party Performing Party Estimated Cost Estimated Completion Date     Service Dependencies: (List required inputs or prerequisites for providing service) Specific Instructions: (Includes HMI programming, RTU programming, points verification from RTU, coordination of point operation with system control.)    Other (specify)   Task Responsible Party (Circle One):    Requesting Party    Performing Party Performing Party Estimated Cost Estimated Completion Date     Service Dependencies: (List required inputs or prerequisites for providing service) Specific Instructions:               Performing Party Organization Name Phone Project Manager    Construction Coordinator   Project Engineer    Const. Supervisor    Group Leader    Start-Up Engineer    Relay Technician    SCADA Engineer    SS Integration Engineer (We Energies)      Initial Acceptance:    Based on the initial services scope and schedule as described above, the Performing Party Accepts (Declines) this Request for Service contingent upon the noted Service dependencies.  Budgetary estimates are provided above.  ____________________________  _____________  Performing Party     Date    Comments:  __________________________________________________  _____________________________________________________________        Final Acceptance:    Performing Party accepts and agrees to proceed with the work.    In accordance with the Project Services Agreement, Performing Party should attach schedule, estimate and cash flow schedule with the signed  Final Acceptance  version of the Request for Service.    ____________________________  _____________  Performing Party     Date    Requesting Party accepts Performing Party's schedule, estimate and cash flow schedule and authorizes Performing Party to proceed with the project.      ____________________________  _____________  Requesting Party     Date      Exhibit B     REQUEST FOR SERVICES  Transmission line    Request for Services Number***: _______________    Revision No:    Request Version (Circle one):  Initial Acceptance   Final Acceptance   (Initial Acceptance indicates general concurrence with service scope and includes a budgetary estimate and preliminary schedule.  Final Acceptance indicates service scope is fully defined and estimate is detailed.)    Date: _____________    Project Name: _____________________________________________    Line Number &amp; Segment: __________________________________________    Requesting Party: ______________________________    Performing Party: ______________________________    Requester Work Order Number: ___________________    Requesting Project Manager: ____________________________    E-mail address: ________________________   Phone Number: ___________    General Scope Description: (Attach Additional Details/Drawings, Scope Documents, Design Documents and Estimates as Appropriate):               One Line Drawing:   Yes   No        Project Scope Documents:    Requested Service Start Date(s):    Requested Completion Date(s):    Planned Outage Date(s):      *** (Numbering Convention: Requesting Party/Performing Party   YY   XYZ; e.g.: WE/ATC-06-001)        (Check and complete for all Services that Apply)   Site/Facility Walkdown and Investigation   Task Responsible Party (Circle One):    Requesting Party    Performing Party Performing Party Estimated Hours Estimated Completion Date     Service Dependencies: (List required inputs or prerequisites for providing service) Specific Instructions:    Design Scope Document   Task Responsible Party (Circle One):    Requesting Party    Performing Party Performing Party Estimated Hours Estimated Completion Date     Service Dependencies: (List required inputs or prerequisites for providing service) Specific Instructions:    Project Engineering   Task Responsible Party (Circle One):    Requesting Party    Performing Party Performing Party Estimated Hours Estimated Completion Date     Service Dependencies: (List required inputs or prerequisites for providing service) Specific Instructions: (Includes design, drawings, specifications, and as-builts)    Project Material Procurement   Task Responsible Party (Circle One):    Requesting Party    Performing Party Performing Party Estimated Hours Estimated Completion Date     Service Dependencies: (List required inputs or prerequisites for providing service) Specific Instructions:    Project  Permits/ Easements   Task Responsible Party (Circle One):    Requesting Party    Performing Party Performing Party Estimated Hours Estimated Completion Date   Agreement says requesting party gets the required authorizations  Service Dependencies: (List required inputs or prerequisites for providing service) Specific Instructions:            Electrical  Construction/Overhead   Task Responsible Party (Circle One):    Requesting Party    Performing Party Performing Party Estimated Hours Estimated Completion Date     Service Dependencies: (List required inputs or prerequisites for providing service) Specific Instructions:     Electrical  Construction/ Underground   Task Responsible Party (Circle One):    Requesting Party    Performing Party Performing Party Estimated Hours Estimated Completion Date     Service Dependencies: (List required inputs or prerequisites for providing service) Specific Instructions:     Inspection/Oversight   Task Responsible Party (Circle One):    Requesting Party    Performing Party Performing Party Estimated Hours Estimated Completion Date     Service Dependencies: (List required inputs or prerequisites for providing service) Specific Instructions: (Includes inspector for construction, management of site contractors. &amp; general construction management.)   Other (specify)   Task Responsible Party (Circle One):    Requesting Party    Performing Party Performing Party Estimated Hours Estimated Completion Date     Service Dependencies: (List required inputs or prerequisites for providing service) Specific Instructions:                                                                                         Performing Party Organization Name Phone Project Manager    Construction Coordinator   Project Engineer    Const. Supervisor    Group Leader    Real Estate / Right of Way Leader    Planning Engineer     Initial Acceptance:    Based on the initial services scope and schedule as described above, the Performing Party Accepts (Declines) this Request for Service contingent upon the noted Service dependencies.  Budgetary estimates are provided above.    ____________________________  _____________  Performing Party     Date    Comments:  __________________________________________________  _____________________________________________________________        Final Acceptance:    Performing Party accepts and agrees to proceed with the work.  In accordance with the Project Services Agreement, Performing Party should attach schedule, estimate and cash flow schedule with the signed  Final Acceptance  version of the Request for Service.    _________________________   _____________  Performing Party     Date    Requesting Party accepts Performing Party's schedule, estimate and cash flow schedule and authorizes Performing Party to proceed with the project.      ____________________________  _____________  Requesting Party     Date        Exhibit C      Project Services Agreement  Change Order    Form Usage:  The use of the Project Services Agreement (PSA) Change Order is for purposes of authorizing work scope, schedule, or cost changes greater than 10% of the Estimate or $10,000, whichever is greater, specific to an active Request for Services.    Responsibilities*  The Performing Party shall complete all information fields noted below and submit the form to the Requesting Party for approval.  The Requesting Party shall verify the change amount against the project funding authorization.  The Requesting Party will authorize the PSA Change Order, as appropriate, and return a copy to the Performing Party for its record.    Pursuant to the terms and conditions of the Project Services Agreement, Requesting Party,             , hereby requests Performing Party,                                            , to supply qualified personnel, equipment, materials, and supplies as necessary to perform the following, thus amending the existing Request for Services as documented below.  All other terms and conditions in the Request for Services, as previously agreed to, remain unchanged.  Request for Services Number:                                       Change Order Number:    Project Title:                                                                                                                                                                    Change Description (Itemized):                       **Price Change (excluding taxes):  Increase    Decrease (circle one) $        Total New Price $ ____________       Effect on Schedule:        Changed Work may proceed only when the Requesting Party and the Performing Party have signed the PSA Change Order.    Performing Party Name (Printed):           Performing Party Signature:   Date:         Requesting Party Name (Printed):           Requesting Party Signature:   Date:         *   Performing Party is service provider and Requesting Party is service requester.  ** The Total Price Change is the limit for this PSA Change Order.  This Change Order shall be effective as of the date       noted by Requesting Party.                27                    58</record_plain_text>
      <record_change_type>NEW</record_change_type>
      <filing_id>171</filing_id>
      <filing_title>UMERC to ATC Project Services Agreement Rate Schedule No 10</filing_title>
      <filing_type>10</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2017-01-01</current_effective_date>
      <ferc_order_date>2016-12-29</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
    <record_data>
      <record_id>187</record_id>
      <option_code>A</option_code>
      <record_title>UMERC - Crystal Falls WDA Rate Schedule No 4</record_title>
      <record_content_desc>Cover Sheet</record_content_desc>
      <record_version_num>1.1.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>4000</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2017-01-01</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>AGREEMENT     FOR    WHOLESALE DISTRIBUTION SERVICE       Between    City of Crystal Falls, Michigan    and    Upper Michigan Energy Resources Corporation        FERC Rate Schedule No. 4                              AGREEMENT  FOR  WHOLESALE DISTRIBUTION SERVICE     This Agreement for Wholesale Distribution Service  ( Agreement ) entered into this 20th day of October 2016 sets forth the terms and conditions of a contract for the provision of Wholesale Distribution Service between the Upper Michigan Energy Resources Corporation ( UMERC ) and the City of Crystal Falls, Michigan ( Crystal Falls ), sometimes hereinafter referred to individually as  Party  and collectively as  Parties .     WHEREAS, Crystal Falls purchases its power supply needs from WPPI Energy;          WHEREAS, Crystal Falls  power supply is delivered to Crystal Falls over facilities owned by UMERC; and           WHEREAS, in order to effect its power supply purchases, Crystal Falls requires Wholesale Distribution Service over facilities owned by UMERC; and           WHEREAS, Crystal Falls and UMERC have mutually agreed to implement this Agreement for Wholesale Distribution Service.       NOW, THEREFORE, in consideration of the mutual agreements contained herein, UMERC and Crystal Falls agree as follows:    1. DEFINITIONS:    The following terms, when used herein with initial capitalization, whether in the singular or the plural, shall have the meaning specified:    1.1. ATC shall mean the American Transmission Company, LLC.    1.2. Coordinated Functional Registration (CFR) shall mean an agreement in writing between or among two or more entities (parties) upon a division of compliance responsibility among the parties for one or more Reliability Standard(s) applicable to a particular function, and/or for one or more Requirement(s)/sub-Requirement(s) within particular Reliability Standard(s).    1.3. Commission or FERC shall mean the Federal Energy Regulatory Commission or its regulatory successor.    1.4. Force Majeure shall mean any cause beyond the control of an affected Party that, by exercise of due diligence, such Party could not reasonably have been expected to avoid and that, by exercise of due diligence, it has been unable to overcome.  Such causes, include, but are not restricted to the following: failure of or threat of failure of facilities, flood, drought, earthquake, storm, fire, lightning, epidemic, war, riot, civil disturbance or disobedience, labor dispute, labor or material shortage, sabotage, restraint by court order or public authority, and action or non-action by or failure to obtain the necessary authorizations or approvals from any governmental agency or authority.    1.5. Good Utility Practice shall mean any of the practices, methods, and acts engaged in or approved by a significant portion of the electric utility industry located within the MISO area during the relevant time period, or any of the practices, methods, and acts that, in the exercise of reasonable judgment in light of the facts known at the time the decision was made, could have been expected to produce a safe, desirable result, achieved expeditiously and at a reasonable cost consistent with good business practices.  Good Utility Practice is not intended to be limited to the optimum practice, method, or act to the exclusion of all others, but rather to be a range of acceptable practices, methods, or acts used within MISO.    1.6. MISO shall mean the Midcontinent Independent System Operator, Inc.    1.7. MIUP Balancing Authority (MIUP BA) shall mean the function of Wisconsin Electric as the Balancing Authority for the MIUP Balancing Authority Area. The MIUP BA responsibilities are delineated in the CFR with MISO as maintained at NERC.    1.8. NERC shall mean the North American Electric Reliability Corporation or its successor.    1.9. Term shall have the meaning set forth in Section 3 of this Agreement.    1.10. Underfrequency Load Shedding (UFLS) shall mean load shed implemented by installed equipment designed to automatically respond to, and arrest declining frequency. Reliability standards specify the amount of load shed and the entities responsible for ownership, maintenance, and performance of a UFLS program.    1.11. Wholesale Distribution Service shall mean the transmission of power purchased by Crystal Falls to meet its power supply needs over facilities owned by UMERC.    2. WHOLESALE DISTRIBUTION SERVICE    2.1. Sale of Wholesale Distribution Service   For the entire Term of this Agreement, UMERC shall provide Wholesale Distribution Service to Crystal Falls solely for the purpose of supplying the load requirements of Crystal Falls.  The Wholesale Distribution Service shall be provided between the point of receipt and point of delivery and over the existing facilities specified in Schedule A of this Agreement and will allow energy flow either into, or out of Crystal Falls.    2.2. Obligations of Crystal Falls   By May 1 of each year, Crystal Falls shall provide UMERC with a forecast of Crystal Falls  monthly system peak and energy requirements for each of the following three years and its summer and winter peaks for each of three additional years for load to be served pursuant to this Agreement.  Further, Crystal Falls shall provide UMERC with timely notice of any information that might affect UMERC s ability to provide reliable Wholesale Distribution Service under this Agreement.    2.3. Obligations of UMERC   By February 1 of each year, UMERC shall provide Crystal Falls with a forecast of planned maintenance and construction activities that may adversely affect the ability of UMERC to provide Wholesale Distribution Service to Crystal Falls.  Further, UMERC shall provide Crystal Falls with timely notice of any un-planned maintenance or construction activities that might adversely affect Wholesale Distribution Service to Crystal Falls and will endeavor to carry out such activities in a manner that will minimize adverse consequences and curtailments of Wholesale Distribution Service to Crystal Falls.     3. TERM    3.1. Term of Service Agreement   The Term of this Agreement shall begin on the later of January 1, 2017 or upon the receipt of all applicable state and federal regulatory approvals of UMERC, and shall continue until terminated by either Party in accordance with Section 3.2 of this Agreement.    3.2. Termination of Service Agreement   Either Party may terminate this Agreement at any time after granting the other Party one year s written notice of its intent to terminate the Agreement, subject to any regulatory approvals.    4. RATES AND CHARGES    4.1. Rate for Wholesale Distribution Service   Crystal Falls shall pay to UMERC $5,088.17 per month for the Wholesale Distribution Service provided under this Agreement, or such other rate established pursuant to Section 4.3 of this Agreement as follows:  Delivery Point   Charge   Crystal Falls   $5,088.17    4.2. Real Power Losses   Crystal Falls shall be responsible for compensating for losses associated with the Wholesale Distribution Service under this Agreement.  The real power loss factor rates on the distribution facilities identified in Schedule A and required to provide the Wholesale Distribution Service are as indicated in Section 4.2(a) and will be calculated based on metered load at the distribution delivery point.      a. Real Power Loss Factor Rates  Delivery Point    Rate  City of Crystal Falls Metering Structure 1.00854    b. Crystal Falls shall ensure that the metered load at each distribution delivery point is incremented by its energy supplier, according to the Real Power Loss Factor Rates specified in 4.2(a) for load reporting and settlement purposes so that reported load includes distribution losses.    4.3. Rate Changes   Nothing in this Agreement shall be construed as affecting in any way the right of UMERC to unilaterally make application to the Commission for a change in the rate for Wholesale Distribution Service.  UMERC shall notify Crystal Falls no later than the date of Commission filing, of its intent to file for an adjustment in rates.  UMERC s notification shall consist of the application package sent to the Commission. UMERC agrees that, in the event that UMERC makes such application to the Commission, UMERC shall not oppose Crystal Fall s right to intervene and protest such application.    5. BILLING AND PAYMENT    5.1. Billing Date   After commencement of this Agreement, UMERC shall issue bills to Crystal Falls on a calendar month basis, by the 10th working day following the calendar month to which they apply.  All bills shall be due and payable within 20 days of their receipt.    5.2. Payment Address    For Wire Transfers:       US Bank, N.A.        777 East Wisconsin Avenue        Milwaukee, Wisconsin  53202        ABA #075 000 022  For credit to:  Upper Michigan Energy Resources Corporation  ABA: 075 000 022        Account # 182381014857    For Other Payments:    Cashiers A139   Upper Michigan Energy Resources Corporation       C/o We Energies      333 W. Everett Street      Milwaukee, Wisconsin  53203    5.3. Interest   Bills that are not paid in full by Crystal Falls when due shall thereafter bear interest at the rate of 1   percent per month, or at the maximum rate of interest allowed by law, whichever is less.    5.4. Disputed Bills   In the event of a dispute about any invoice, Crystal Falls shall remit the undisputed portion of such invoice, and shall have the option to pay the disputed portion of such invoice under protest or remit the disputed portion of such invoice into an escrow account pending the resolution of the dispute pursuant to Section 11 of this Agreement.    5.5. Termination for Non-Payment of Bills   In the event of non-payment of a bill by Crystal Falls, UMERC shall have the right to terminate service sixty (60) days subsequent to the date of the bill;  provided, however, that in the event of any billing dispute, UMERC shall not have the right to terminate service if Crystal Falls complies with Section 5.4 of this Agreement, and either pays the disputed amount under protest or places disputed amounts in an escrow account subject to disbursement based upon the resolution of the dispute.  UMERC shall be required to notify Crystal Falls in writing of its intent to terminate service for non-payment at least thirty (30) days prior to the actual date of termination of service.  UMERC may not terminate service for reason of non-payment if Crystal Falls makes payment prior to the date of termination.    6. ASSIGNMENT    6.1. Assignment of Rights Under the Agreement   Each Party shall have the right to assign all or any portion of its interest in the Agreement upon prior written notice to the other Party, and a Party assigning its rights and obligations under this Agreement shall provide notice to the other Party of the assignment pursuant to Section 12 of this Agreement.  If assignment of this Agreement occurs pursuant to the provisions of this section, this Agreement shall be binding upon and inure to the benefit of the respective successors and assigns of the Parties.    6.2. Obligations After Assignment   In the event of any sale, transfer, or assignment hereunder, the transferor or assignor shall, to the extent of the transferred or assigned obligations, and only to such extent, be relieved of obligations accruing from and after the effective date of such transfer or assignment;  provided, however, that under no circumstances shall any sale, transfer, or assignment relieve the transferor or assignor of any liability for any breach of this Agreement occurring before the effective date of such transfer or assignment.    7. LOAD SHEDDING AND CURTAILMENTS    7.1. Procedures   In accordance with NERC standards and the MISO Energy Market Tariff the MIUP Balancing Authority implements load shed.  Curtailment notice will be communicated by the Balancing Authority contacting WPPI Energy and Crystal Falls as soon as practicable after a determination that curtailments are necessary.     7.2. Distribution Constraints   During any period when UMERC, ATC, or MISO determines that a constraint exists on all or a portion of the ATC transmission facilities or UMERC s facilities used to provide Wholesale Distribution Service under this Agreement, and that such constraint may impair the reliability of those facilities or other facilities owned and/or operated by ATC, UMERC, or MISO, UMERC may take whatever actions, consistent with Good Utility Practice, that are reasonably necessary to maintain the reliability of those facilities.  Such actions will be taken in a nondiscriminatory manner.    7.3. Curtailments of Wholesale Distribution Service   If a constraint cannot be relieved through the implementation of other procedures, and if UMERC determines that it is necessary to curtail Wholesale Distribution Service that would otherwise be provided under this Agreement, such deliveries shall be curtailed in a nondiscriminatory fashion.    7.4. Curtailment Allocation of Wholesale Distribution Service For Transmission Constraints   Each Party shall, on a non-discriminatory basis, curtail its use of the system in a manner that effectively relieves the constraint.  However, to the extent practicable and consistent with Good Utility Practice, any curtailment will be proportionately shared by UMERC and Crystal Falls.    7.5. System Reliability   Notwithstanding any other provisions of this Agreement, UMERC, for its own purposes or in response to actions taken or requests made by ATC or MISO, reserves the right, consistent with Good Utility Practice and on a basis that is not unduly discriminatory, to curtail Wholesale Distribution Service without liability on UMERC s part.  Such curtailments may be made (a) for the purpose of making necessary adjustments to, changes in, or repairs on the lines, substations, and facilities involved in providing service under this Agreement, or (b) where the continuance of Wholesale Distribution Service would endanger persons or property.      In the event of any adverse conditions or disturbances on UMERC s facilities, or on any other systems directly or indirectly interconnected with UMERC s system, UMERC, consistent with Good Utility Practice, also may curtail Wholesale Distribution Service in order to (i) limit the extent or damage of the adverse conditions or disturbances, (ii) prevent damage to facilities, or (iii) expedite restoration of service.  UMERC will give Crystal Falls as much advance notice as is practicable in the event of such curtailment.    7.6. Underfrequency Load Shedding   Crystal Falls shall comply with all regulatory underfrequency load shedding requirements through participation in WPPI Energy s Underfrequency Load Shedding plan.  Crystal Falls shall supply documentation of such compliance to UMERC and ATC, if requested.    8. ENERGY RELIABILITY ORGANIZATION OBLIGATIONS    8.1. Crystal Falls shall comply with all applicable energy reliability organization requirements.    8.2. Crystal Falls shall be responsible for paying all energy reliability organization costs associated with its load and the provision of service under this Agreement.    8.3. Crystal Falls shall provide all data and information requested by UMERC in order for UMERC to comply with electric reliability organization requirements.         9. CREDIT SUPPORT  UMERC, in order to satisfy itself of the ability of Crystal Falls to meet the obligations set forth in this Agreement, may in accordance with standard commercial practices conduct reasonable credit reviews.  UMERC will require Crystal Falls to provide the information and meet the requirements determined by UMERC.  Crystal Falls  failure to provide adequate credit support, if required, may be grounds for UMERC to terminate the Agreement.  UMERC may, based on UMERC s credit requirements, require Crystal Falls to provide and maintain in effect during the term of this Agreement an unconditional and irrevocable letter of credit, a parental guaranty, or an alternative form and type of security acceptable to UMERC and consistent with commercial practices ( Performance Assurance ).  Such credit support shall not to exceed an amount equivalent to the sum of four months of the then current monthly distribution charges.  UMERC reserves the right,  on a non-discriminatory basis, to require Crystal Falls to submit to UMERC updated financial information to permit UMERC to evaluate Crystal Falls  creditworthiness on an on-going basis, and if necessary, to require future Performance Assurance.  Upon receipt of such notice, Crystal Falls shall have three (3) business days to remedy the situation by providing such Performance Assurance to UMERC.  In the event Crystal Falls fails to provide such Performance Assurance acceptable to UMERC within three (3) business days of receipt of notice, then an event of default will be deemed to have occurred, and UMERC shall have the right to terminate service.  UMERC shall be required to notify Crystal Falls in writing of its intent to terminate service at least 60 days prior to the actual date of termination.    10. FORCE MAJEURE AND INDEMNIFICATION    10.1. Force Majeure   To the extent either Party is prevented by Force Majeure from carrying out, in whole or part, its obligations under this Agreement, and such Party ( the Claiming Party ) gives notice and details of the Force Majeure to the other Party as soon as practicable, then, unless this Agreement specifies otherwise, the Claiming Party shall be excused from the performance of its obligations with respect to this Agreement other than payments then due or becoming due with respect to performance prior to the Force Majeure.  The Claiming Party shall commence performance of its obligations after the occurrence of the Force Majeure with all reasonable dispatch.  The non-Claiming Party shall not be required to perform or resume performance of its obligations to the Claiming Party corresponding to the obligations of the Claiming Party excused by Force Majeure.  However, no Party shall be relieved of liability for failure of performance if such failure be due to causes arising out of its negligence or due to removable or remediable causes that it fails to remove or remedy within a reasonable time period.  Nothing contained herein shall be construed to require a Party to settle any strike or labor dispute in which it may be involved.    10.2. Indemnification   Each Party shall at all times, indemnify, defend, and hold harmless the other Party against any and all damages, losses, and claims, including claims and actions relating to injury to or death of any person or damage to property, demands, suits, recoveries, costs and expenses, court costs, attorney fees, and all other obligations by or to third parties, arising out of or resulting from the Party s required performance of its obligations under this Agreement.      10.3. Limitations on Liability   The Parties liability under this Agreement shall be limited to direct, actual damages only.  All other remedies or damages at law or in equity are waived.  Direct, actual damages shall be the sole and exclusive remedy, and in no event, whether as a result of breach of contract, tort liability (including negligence), strict liability, or otherwise, shall either Party be liable to the other Party, its agents, representatives, and/or assigns, for any special, punitive, incidental, indirect, exemplary, or consequential damages of any nature whatsoever, including, but not limited to, loss of profits.  The Parties also intend and agree that such provisions shall continue in full force and effect notwithstanding the termination, suspension, cancellation, or expiration of this Agreement.    11. DISPUTE RESOLUTION      11.1. Dispute Resolution   Any dispute between the Parties involving service under this Agreement shall be referred to a designated senior representative of each Party for resolution on an informal basis as promptly as practicable.  In the event the designated representatives are unable to resolve the dispute within thirty (30) days, or such other period as the Parties may agree upon, the Parties may pursue any remedies available.      11.2. Rights Under the Federal Power Act   Nothing in this section shall restrict the rights of either Party to file a complaint with the Commission under relevant provisions of the Federal Power Act.    12. NOTICES    12.1. Any notice provided for or concerning this Agreement, except the payment of bills as provided in Section 5.2,  shall be in writing and delivered by person or mail to the following:      If to UMERC:   Upper Michigan Energy Resources Corporation      Vice President   Wholesale Energy and Fuels      333 W. Everett Street, A214      Milwaukee, Wisconsin  53203    And    WEC Business Services  Director   Federal Regulatory Affairs and Policy  231 W. Michigan Street, P321  Milwaukee, WI   53203        If to Crystal Falls:  City Manager        City of Crystal Falls     401 Superior Ave.       Crystal Falls, MI   49920    Such notice shall be effective when received by the Party to whom it is sent.    13. SEVERABILITY    13.1. In the event that any of the terms, covenants, or conditions of this Agreement or the application of any such term, covenant, or condition, shall be held invalid as to any person or circumstance by any court having jurisdiction, all other terms, covenants, or conditions of this Agreement and their application shall not be affected thereby, but shall remain in force and effect unless a court holds that the provisions are not separable from all other provisions of this Agreement    14. GOVERNING LAW    14.1. This Agreement shall be interpreted, construed, and enforced in accordance with the laws of the State of Michigan without regard to conflicts of law provisions thereof.    15. SIGNATURE CLAUSE    15.1. The signatories hereto represent that they have been authorized to enter into this Agreement on behalf of the Party for whom they sign.    16. COUNTERPARTS      16.1. This Agreement may be executed in one or more counterparts which taken together shall form a valid Agreement.    [SIGNATURE PAGE FOLLOWS]    IN WITNESS WHEREOF, each of the Parties has caused this Agreement to be executed by its duly authorized representative as of the date first written above.      City of Crystal Falls, Michigan Upper Michigan Energy Resources Corporation    By: /s/ Patrick T. Reagan    By: /s/ J. Patrick Keyes      Name: Patrick T. Reagan    Name: J. Patrick Keyes      Title: City Manager     Title: President             Date:  10/15/16     Date: 11/17/2016                 SCHEDULE A    Facilities Used for Provision of Wholesale Distribution Service  City of Crystal Falls Metering Structure:  Wholesale distribution service shall be provided to the City of Crystal Falls from the point of receipt at UMERC s Crystal Falls  Substation (69 kV to 24.9 kV to 12.47 kV) over UMERC s 24.9 kV feeder # CRF-53, then converted to 12.47 kV prior to the point of delivery at the City of Crystal Falls  metering structure which is located at UMERC s Crystal Falls Substation, or over any successor facilities should UMERC reconfigure or rebuild its distribution facilities.        Capacity Reservation = 3.3840MW (3.760MW @ 90% Capacity Factor)  DC\81593799.1    1      10</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>178</filing_id>
      <filing_title>Executed UMERC to Crystal Falls FERC Rate Schedule No 4</filing_title>
      <filing_type>130</filing_type>
      <associated_filing_id>177</associated_filing_id>
      <associated_record_id>187</associated_record_id>
      <associated_option_code>A</associated_option_code>
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2017-01-01</current_effective_date>
      <ferc_order_date>2016-12-29</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
    <record_data>
      <record_id>188</record_id>
      <option_code>A</option_code>
      <record_title>UMERC - Ontonagon WDA Rate Schedule No 5</record_title>
      <record_content_desc>Cover Sheet</record_content_desc>
      <record_version_num>2.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>5000</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2017-01-01</proposed_effective_date>
      <priority_order>1000</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>AGREEMENT     FOR    WHOLESALE DISTRIBUTION SERVICE       Between    Ontonagon County Rural Electrification Association    and    Upper Michigan Energy Resources Corporation        FERC Rate Schedule No. 5                              AGREEMENT  FOR  WHOLESALE DISTRIBUTION SERVICE     This Agreement for Wholesale Distribution Service ( Agreement ) entered into this 20th day of October 2016 sets forth the terms and conditions of a contract for the provision of Wholesale Distribution Service between the Upper Michigan Energy Resources Corporation ( UMERC ) and the Ontonagon Rural Electrification Association ( Ontonagon ), sometimes hereinafter referred to individually as  Party  and collectively as  Parties .     WHEREAS, Ontonagon purchases its power supply needs from Wisconsin Electric Power Company;          WHEREAS, Ontonagon s power supply is delivered to Ontonagon over facilities owned by UMERC;           WHEREAS, in order to effect its power supply purchases Ontonagon requires Wholesale Distribution Service over facilities owned by UMERC; and           WHEREAS, Ontonagon and UMERC have mutually agreed to implement this Agreement for Wholesale Distribution Service.       NOW, THEREFORE, in consideration of the mutual agreements contained herein, UMERC and Ontonagon agree as follows:    1. DEFINITIONS:    The following terms, when used herein with initial capitalization, whether in the singular or the plural, shall have the meaning specified:    1.1. ATC shall mean the American Transmission Company, LLC.    1.2. Coordinated Functional Registration (CFR) shall mean an agreement in writing between or among two or more entities (parties) upon a division of compliance responsibility among the parties for one or more Reliability Standard(s) applicable to a particular function, and/or for one or more Requirement(s)/sub-Requirement(s) within particular Reliability Standard(s).    1.3. Commission or FERC shall mean the Federal Energy Regulatory Commission or its regulatory successor.    1.4. Force Majeure shall mean any cause beyond the control of an affected Party that, by exercise of due diligence, such Party could not reasonably have been expected to avoid and that, by exercise of due diligence, it has been unable to overcome.  Such causes, include, but are not restricted to the following: failure of or threat of failure of facilities, flood, drought, earthquake, storm, fire, lightning, epidemic, war, riot, civil disturbance or disobedience, labor dispute, labor or material shortage, sabotage, restraint by court order or public authority, and action or non-action by or failure to obtain the necessary authorizations or approvals from any governmental agency or authority.    1.5. Good Utility Practice shall mean any of the practices, methods, and acts engaged in or approved by a significant portion of the electric utility industry located within the MISO area during the relevant time period, or any of the practices, methods, and acts that, in the exercise of reasonable judgment in light of the facts known at the time the decision was made, could have been expected to produce a safe, desirable result, achieved expeditiously and at a reasonable cost consistent with good business practices.  Good Utility Practice is not intended to be limited to the optimum practice, method, or act to the exclusion of all others, but rather to be a range of acceptable practices, methods, or acts used within MISO.    1.6. MISO shall mean the Midcontinent Independent System Operator, Inc.    1.7. MIUP Balancing Authority (MIUP BA) shall mean the function of Wisconsin Electric as the Balancing Authority for the MIUP Balancing Authority Area . The MIUP BA responsibilities are delineated in the CFR with MISO as maintained at NERC.    1.8. NERC shall mean the North American Electric Reliability Corporation or its successor.    1.9. Term shall have the meaning set forth in Section 3 of this Agreement.    1.10. Underfrequency Load Shedding (UFLS) shall mean load shed implemented by installed equipment designed to automatically respond to, and arrest declining frequency. Reliability standards specify the amount of load shed and the entities responsible for ownership, maintenance, and performance of a UFLS program.    1.11. Wholesale Distribution Service shall mean the transmission of power purchased by Ontonagon to meet its power supply needs over facilities owned by UMERC.    2. WHOLESALE DISTRIBUTION SERVICE    2.1. Sale of Wholesale Distribution Service   For the entire Term of this Agreement, UMERC shall provide Wholesale Distribution Service to Ontonagon solely for the purpose of supplying the load requirements of Ontonagon.  The Wholesale Distribution Service shall be provided between the point of receipt and point of delivery and over the existing facilities specified in Schedule A of this Agreement and will allow energy flow either into, or out of Ontonagon.    2.2. Obligations of Ontonagon   By May 1 of each year, Ontonagon shall provide UMERC with a forecast of Ontonagon  monthly system peak and energy requirements for each of the following three years and its summer and winter peaks for each of three additional years for load to be served pursuant to this Agreement.  Further, Ontonagon shall provide UMERC with timely notice of any information that might affect UMERC s ability to provide reliable Wholesale Distribution Service under this Agreement.    2.3. Obligations of UMERC   By February 1 of each year, UMERC shall provide Ontonagon with a forecast of planned maintenance and construction activities that may adversely affect the ability of UMERC to provide Wholesale Distribution Service to Ontonagon.  Further, UMERC shall provide Ontonagon with timely notice of any un-planned maintenance or construction activities that might adversely affect Wholesale Distribution Service to Ontonagon and will endeavor to carry out such activities in a manner that will minimize adverse consequences and curtailments of Wholesale Distribution Service to Ontonagon.     3. TERM    3.1. Term of Service Agreement   The Term of this Agreement shall begin on the later of January 1, 2017 or upon the receipt of all applicable state and federal regulatory approvals of UMERC, and shall continue until terminated by either Party in accordance with Section 3.2 of this Agreement.    3.2. Termination of Service Agreement   Either Party may terminate this Agreement at any time after granting the other Party one year s written notice of its intent to terminate the Agreement, subject to any regulatory approvals.    4. RATES AND CHARGES    4.1. Rate for Wholesale Distribution Service   Ontonagon shall pay to UMERC $687.77 per month for the Wholesale Distribution Service provided under this Agreement, or such other rate established pursuant to Section 4.3 of this Agreement as follows:  Delivery Point   Charge   Interior    $216.47     McMillan   $471.30    4.2. Real Power Losses   Ontonagon shall be responsible for compensating for losses associated with the Wholesale Distribution Service under this Agreement.  The real power loss factor rates on the distribution facilities identified in Schedule A and required to provide the Wholesale Distribution Service are as indicated in Section 4.2(a) and will be calculated based on metered load at the distribution delivery point.      a. Real Power Loss Factor Rates  Delivery Point   Rate   Interior    1.01407  McMillan    1.01676    b. Ontonagon shall ensure that the metered load at each distribution delivery point is incremented by its energy supplier, according to the Real Power Loss Factor Rates specified in 4.2(a) for load reporting and settlement purposes so that reported load includes distribution losses.    4.3. Rate Changes   Nothing in this Agreement shall be construed as affecting in any way the right of UMERC to unilaterally make application to the Commission for a change in the rate for Wholesale Distribution Service.  UMERC shall notify Ontonagon no later than the date of Commission filing, of its intent to file for an adjustment in rates.  UMERC s notification shall consist of the application package sent to the Commission. UMERC agrees that, in the event that UMERC makes such application to the Commission, UMERC shall not oppose Ontonagon s right to intervene and protest such application.    5. BILLING AND PAYMENT    5.1. Billing Date   After commencement of this Agreement, UMERC shall issue bills to Ontonagon on a calendar month basis, by the 10th working day following the calendar month to which they apply.  All bills shall be due and payable within 20 days of their receipt.    5.2. Payment Address    For Wire Transfers:       US Bank, N.A.        777 East Wisconsin Avenue        Milwaukee, Wisconsin  53202        ABA #075 000 022  For credit to:  Upper Michigan Energy Resources Corporation       Account # 182381014857             For Other Payments:       Cashiers A139      We Energies      333 W. Everett Street      Milwaukee, Wisconsin  53203    5.3. Interest   Bills that are not paid in full by Ontonagon when due shall thereafter bear interest at the rate of 1   percent per month, or at the maximum rate of interest allowed by law, whichever is less.    5.4. Disputed Bills   In the event of a dispute about any invoice, Ontonagon shall remit the undisputed portion of such invoice, and shall have the option to pay the disputed portion of such invoice under protest or remit the disputed portion of such invoice into an escrow account pending the resolution of the dispute pursuant to Section 11 of this Agreement.    5.5. Termination for Non-Payment of Bills   In the event of non-payment of a bill by Ontonagon, UMERC shall have the right to terminate service sixty (60) days subsequent to the date of the bill;  provided, however, that in the event of any billing dispute, UMERC shall not have the right to terminate service if Ontonagon complies with Section 5.4 of this Agreement, and either pays the disputed amount under protest or places disputed amounts in an escrow account subject to disbursement based upon the resolution of the dispute.  UMERC shall be required to notify Ontonagon in writing of its intent to terminate service for non-payment at least thirty (30) days prior to the actual date of termination of service.  UMERC may not terminate service for reason of non-payment if Ontonagon makes payment prior to the date of termination.    6. ASSIGNMENT    6.1. Assignment of Rights Under the Agreement   Each Party shall have the right to assign all or any portion of its interest in the Agreement upon prior written notice to the other Party, and a Party assigning its rights and obligations under this Agreement shall provide notice to the other Party of the assignment pursuant to Section 12 of this Agreement.  If assignment of this Agreement occurs pursuant to the provisions of this section, this Agreement shall be binding upon and inure to the benefit of the respective successors and assigns of the Parties.    6.2. Obligations After Assignment   In the event of any sale, transfer, or assignment hereunder, the transferor or assignor shall, to the extent of the transferred or assigned obligations, and only to such extent, be relieved of obligations accruing from and after the effective date of such transfer or assignment;  provided, however, that under no circumstances shall any sale, transfer, or assignment relieve the transferor or assignor of any liability for any breach of this Agreement occurring before the effective date of such transfer or assignment.    7. LOAD SHEDDING AND CURTAILMENTS    7.1. Procedures   In accordance with NERC standards and the MISO Energy Market Tariff  the MIUP Balancing Authority implements load shed.  Curtailment notice will be communicated by the Balancing Authority contacting Ontonagon as soon as practicable after a determination that curtailments are necessary.     7.2. Distribution Constraints   During any period when UMERC, ATC, or MISO determines that a constraint exists on all or a portion of the ATC transmission facilities or UMERC s facilities used to provide Wholesale Distribution Service under this Agreement, and that such constraint may impair the reliability of those facilities or other facilities owned and/or operated by ATC, UMERC, or MISO, UMERC may take whatever actions, consistent with Good Utility Practice, that are reasonably necessary to maintain the reliability of those facilities.  Such actions will be taken in a nondiscriminatory manner.    7.3. Curtailments of Wholesale Distribution Service   If a constraint cannot be relieved through the implementation of other procedures, and if UMERC determines that it is necessary to curtail Wholesale Distribution Service that would otherwise be provided under this Agreement, such deliveries shall be curtailed in a nondiscriminatory fashion.    7.4. Curtailment Allocation of Wholesale Distribution Service For Transmission Constraints   Each Party shall, on a non-discriminatory basis, curtail its use of the system in a manner that effectively relieves the constraint.  However, to the extent practicable and consistent with Good Utility Practice, any curtailment will be proportionately shared by UMERC and Ontonagon.    7.5. System Reliability   Notwithstanding any other provisions of this Agreement, UMERC, for its own purposes or in response to actions taken or requests made by ATC or MISO, reserves the right, consistent with Good Utility Practice and on a basis that is not unduly discriminatory, to curtail Wholesale Distribution Service without liability on UMERC s part.  Such curtailments may be made (a) for the purpose of making necessary adjustments to, changes in, or repairs on the lines, substations, and facilities involved in providing service under this Agreement, or (b) where the continuance of Wholesale Distribution Service would endanger persons or property.      In the event of any adverse conditions or disturbances on UMERC s facilities, or on any other systems directly or indirectly interconnected with UMERC s system, UMERC, consistent with Good Utility Practice, also may curtail Wholesale Distribution Service in order to (i) limit the extent or damage of the adverse conditions or disturbances, (ii) prevent damage to facilities, or (iii) expedite restoration of service.  UMERC will give Ontonagon as much advance notice as is practicable in the event of such curtailment.    7.6. Underfrequency Load Shedding   Ontonagon shall comply with all regulatory underfrequency load shedding requirements through participation in Ontonagon s Underfrequency Load Shedding plan.  Ontonagon shall supply documentation of such compliance to UMERC and ATC, if requested.    8. ENERGY RELIABILITY ORGANIZATION OBLIGATIONS    8.1. Ontonagon shall comply with all applicable energy reliability organization requirements.    8.2. Ontonagon shall be responsible for paying all energy reliability organization costs associated with its load and the provision of service under this Agreement.    8.3. Ontonagon shall provide all data and information requested by UMERC in order for UMERC to comply with electric reliability organization requirements.         9. CREDIT SUPPORT  UMERC, in order to satisfy itself of the ability of Ontonagon to meet the obligations set forth in this Agreement, may in accordance with standard commercial practices conduct reasonable credit reviews.  UMERC will require Ontonagon to provide the information and meet the requirements determined by UMERC.  Ontonagon s failure to provide adequate credit support, if required, may be grounds for UMERC to terminate the Agreement.  UMERC may, based on UMERC s credit requirements, require Ontonagon to provide and maintain in effect during the term of this Agreement an unconditional and irrevocable letter of credit, a parental guaranty, or an alternative form and type of security acceptable to UMERC and consistent with commercial practices ( Performance Assurance ).  Such credit support shall not exceed an amount equivalent to the sum of four months of the then current monthly distribution charges.  UMERC reserves the right, on a non-discriminatory basis, to require Ontonagon to submit to UMERC updated financial information to permit UMERC to evaluate Ontonagon s creditworthiness on an on-going basis, and if necessary, to require future Performance Assurance.  Upon receipt of such notice, Ontonagon shall have three (3) business days to remedy the situation by providing such Performance Assurance to UMERC.  In the event Ontonagon fails to provide such Performance Assurance acceptable to UMERC within three (3) business days of receipt of notice, then an event of default will be deemed to have occurred, and UMERC shall have the right to terminate service.  UMERC shall be required to notify Ontonagon in writing of its intent to terminate service at least 60 days prior to the actual date of termination.    10. FORCE MAJEURE AND INDEMNIFICATION    10.1. Force Majeure   To the extent either Party is prevented by Force Majeure from carrying out, in whole or part, its obligations under this Agreement, and such Party ( the Claiming Party ) gives notice and details of the Force Majeure to the other Party as soon as practicable, then, unless this Agreement specifies otherwise, the Claiming Party shall be excused from the performance of its obligations with respect to this Agreement other than payments then due or becoming due with respect to performance prior to the Force Majeure.  The Claiming Party shall commence performance of its obligations after the occurrence of the Force Majeure with all reasonable dispatch.  The non-Claiming Party shall not be required to perform or resume performance of its obligations to the Claiming Party corresponding to the obligations of the Claiming Party excused by Force Majeure.  However, no Party shall be relieved of liability for failure of performance if such failure be due to causes arising out of its negligence or due to removable or remediable causes that it fails to remove or remedy within a reasonable time period.  Nothing contained herein shall be construed to require a Party to settle any strike or labor dispute in which it may be involved.    10.2. Indemnification   Each Party shall at all times, indemnify, defend, and hold harmless the other Party against any and all damages, losses, and claims, including claims and actions relating to injury to or death of any person or damage to property, demands, suits, recoveries, costs and expenses, court costs, attorney fees, and all other obligations by or to third parties, arising out of or resulting from the Party s required performance of its obligations under this Agreement.      10.3. Limitations on Liability   The Parties liability under this Agreement shall be limited to direct, actual damages only.  All other remedies or damages at law or in equity are waived.  Direct, actual damages shall be the sole and exclusive remedy, and in no event, whether as a result of breach of contract, tort liability (including negligence), strict liability, or otherwise, shall either Party be liable to the other Party, its agents, representatives, and/or assigns, for any special, punitive, incidental, indirect, exemplary, or consequential damages of any nature whatsoever, including, but not limited to, loss of profits.  The Parties also intend and agree that such provisions shall continue in full force and effect notwithstanding the termination, suspension, cancellation, or expiration of this Agreement.    11. DISPUTE RESOLUTION      11.1. Dispute Resolution   Any dispute between the Parties involving service under this Agreement shall be referred to a designated senior representative of each Party for resolution on an informal basis as promptly as practicable.  In the event the designated representatives are unable to resolve the dispute within thirty (30) days, or such other period as the Parties may agree upon, the Parties may pursue any remedies available.      11.2. Rights Under the Federal Power Act   Nothing in this section shall restrict the rights of either Party to file a complaint with the Commission under relevant provisions of the Federal Power Act.    12. NOTICES    12.1. Any notice provided for or concerning this Agreement, except the payment of bills as provided in Section 5.2,  shall be in writing and delivered by person or mail to the following:      If to UMERC:   Upper Michigan Energy Resources Corporation      Vice President   Wholesale Energy and Fuels      333 W. Everett Street, A214      Milwaukee, Wisconsin  53203    And    WEC Business Services  Director   Federal Regulatory Affairs and Policy  231 W. Michigan Street, P321  Milwaukee, WI   53203        If to Ontonagon:  Manager        Ontonagon County Rural Electrification Association   500 J K Paul Street       Ontonagon, MI   49953    Such notice shall be effective when received by the Party to whom it is sent.    13. SEVERABILITY    13.1. In the event that any of the terms, covenants, or conditions of this Agreement or the application of any such term, covenant, or condition, shall be held invalid as to any person or circumstance by any court having jurisdiction, all other terms, covenants, or conditions of this Agreement and their application shall not be affected thereby, but shall remain in force and effect unless a court holds that the provisions are not separable from all other provisions of this Agreement    14. GOVERNING LAW    14.1. This Agreement shall be interpreted, construed, and enforced in accordance with the laws of the State of Michigan without regard to conflicts of law provisions thereof.    15. SIGNATURE CLAUSE    15.1. The signatories hereto represent that they have been authorized to enter into this Agreement on behalf of the Party for whom they sign.    16. COUNTERPARTS      16.1. This Agreement may be executed in one or more counterparts which taken together shall form a valid Agreement.    [SIGNATURE PAGE FOLLOWS]    IN WITNESS WHEREOF, each of the Parties has caused this Agreement to be executed by its duly authorized representative as of the date first written above.      Ontonagon County     Upper Michigan Energy Resources   Rural Electrification Association    Corporation      By:   /s/ Deborah Miles    By: /s/ James O. Sherman, Jr.      Name:  Deborah Miles    Name: James O. Sherman, Jr.      Title:   Manager     Title:  Director   Wholesale &amp; Customer          Solutions             Date:   12/8/2016     Date:   09 Dec 2016            SCHEDULE A    Facilities Used for Provision of Wholesale Distribution Service  Interior Township: Wholesale distribution service shall be provided to Ontonagon County REA's Interior Township service location from the point of receipt at Wisconsin Electric's Bruce Crossing Substation (69 kV to 13.8 kV) over Wisconsin Electric s 13.8 kV feeder # BRU-1 to the point of delivery at the Interior Township metering structure which is located at the intersection of Mile West Road and STH M-28 in Interior Township, Ontonagon County, Michigan, or over any successor facilities should Wisconsin Electric reconfigure or rebuild its distribution facilities.        Capacity Reservation = 0.2167MW (0.241MW A 90% Capacity Factor)    McMillan Township: Wholesale distribution service shall be provided to Ontonagon County REA's McMillan Township service location from the point of receipt at Wisconsin Electric's Bruce Crossing Substation (69 kV to 13.8 kV) over Wisconsin Electric s 13.8 kV feeder # BRU-2 to the point of delivery at the McMillan Township metering structure which is located on N Cemetery Road approximately one-quarter mile north of the intersection of N Cemetery Road and STH M-28 in McMillan Township, Ontonagon County, Michigan, or over any successor facilities should Wisconsin Electric reconfigure or rebuild its distribution facilities.        Capacity Reservation = 0.4938MW (0.5487MW A 90% Capacity Factor)  DC\81629515.1            11</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>179</filing_id>
      <filing_title>Revised UMERC to Ontonagon Rate Schedule No 5 12.12.16</filing_title>
      <filing_type>130</filing_type>
      <associated_filing_id>175</associated_filing_id>
      <associated_record_id>188</associated_record_id>
      <associated_option_code>A</associated_option_code>
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2017-01-01</current_effective_date>
      <ferc_order_date>2017-01-10</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
    <record_data>
      <record_id>184</record_id>
      <option_code>A</option_code>
      <record_title>UMERC - WE WDA Rate Schedule No 1</record_title>
      <record_content_desc>Cover Sheet</record_content_desc>
      <record_version_num>4.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>1000</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2019-04-01</proposed_effective_date>
      <priority_order>800</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>AGREEMENT 

FOR

WHOLESALE DISTRIBUTION SERVICE 


Between

  Upper Michigan Energy Resources Corporation
 
and

Wisconsin Electric Power Company



FERC Rate Schedule No. 1












AGREEMENT 
FOR 
WHOLESALE DISTRIBUTION SERVICE 

	This Agreement for Wholesale Distribution Service ("Agreement") entered into this 28th day of March 2019 sets forth the terms and conditions of a contract for the provision of Wholesale Distribution Service between the Upper Michigan Energy Resources Corporation ("UMERC"), and Wisconsin Electric Power Company ("Wisconsin Electric"), sometimes hereinafter referred to individually as "Party" and collectively as "Parties".

	WHEREAS, effective January 1, 2017, the Michigan distribution assets of Wisconsin Electric and Wisconsin Public Service Corporation were acquired by UMERC; 

      WHEREAS, a portion of Wisconsin Electric's power supply is delivered to Wisconsin Electric over distribution facilities owned by UMERC in the Upper Peninsula of Michigan; 
      
	WHEREAS, in order to effect its power supply purchases beginning April 1, 2019, Wisconsin Electric will require Wholesale Distribution Service over facilities owned by UMERC; and
 
       WHEREAS UMERC and Wisconsin Electric have mutually agreed to implement this Agreement.  

	NOW, THEREFORE, in consideration of the mutual agreements contained herein, Wisconsin Electric and UMERC agree as follows:

1.	DEFINITIONS:

The following terms, when used herein with initial capitalization, whether in the singular or the plural, shall have the meaning specified:

1.1.	ATC shall mean the American Transmission Company, LLC.

1.2.	Commission or FERC shall mean the Federal Energy Regulatory Commission or its regulatory successor.

1.3.	Force Majeure shall mean any cause beyond the control of an affected Party that, by exercise of due diligence, such Party could not reasonably have been expected to avoid and that, by exercise of due diligence, it has been unable to overcome.  Such causes, include, but are not restricted to the following: failure of or threat of failure of facilities, flood, drought, earthquake, storm, fire, lightning, epidemic, war, riot, civil disturbance or disobedience, labor dispute, labor or material shortage, sabotage, restraint by court order or public authority, and action or non-action by or failure to obtain the necessary authorizations or approvals from any governmental agency or authority.


1.4.	Good Utility Practice shall mean any of the practices, methods, and acts engaged in or approved by a significant portion of the electric utility industry located within the MISO area during the relevant time period, or any of the practices, methods, and acts that, in the exercise of reasonable judgment in light of the facts known at the time the decision was made, could have been expected to produce a safe, desirable result, achieved expeditiously and at a reasonable cost consistent with good business practices.  Good Utility Practice is not intended to be limited to the optimum practice, method, or act to the exclusion of all others, but rather to be a range of acceptable practices, methods, or acts used within MISO.

1.5.	MISO shall mean the Midcontinent Independent System Operator, Inc.

1.6.	NERC shall mean the North American Electric Reliability Corporation or its successor.

1.7.	Term shall have the meaning set forth in Section 3 of this Agreement.

1.8.	Wholesale Distribution Service shall mean the transmission of power purchased by Wisconsin Electric to meet its power supply needs over facilities owned by UMERC.

2.	WHOLESALE DISTRIBUTION SERVICE

2.1.	Sale of Wholesale Distribution Service - For the entire Term of this Agreement, UMERC shall provide Wholesale Distribution Service to Wisconsin Electric for the purpose of supplying the load and hydro generation requirements of Wisconsin Electric.  The Wholesale Distribution Service shall be provided between the point of receipt and point of delivery and over the existing facilities specified in Schedule A of this Agreement and will allow energy flow either into, or out of Wisconsin Electric.

2.2.	Obligations of Wisconsin Electric - By May 1 of each year, Wisconsin Electric shall provide UMERC with a forecast of Wisconsin Electric's monthly system peak and energy requirements for each of the following three years and its summer and winter peaks for each of three additional years for load to be served pursuant to this Agreement and monthly system peak requirements for each of the following three years for generation to be served pursuant to this Agreement.  Further, Wisconsin Electric shall provide UMERC with timely notice of any information that might affect UMERC's ability to provide reliable Wholesale Distribution Service under this Agreement.

2.3.	Obligations of UMERC - By February 1 of each year, UMERC shall provide Wisconsin Electric with a forecast of planned maintenance and construction activities that may adversely affect the ability of UMERC to provide Wholesale Distribution Service to Wisconsin Electric.  Further, UMERC shall provide Wisconsin Electric with timely notice of any un-planned maintenance or construction activities that might adversely affect Wholesale Distribution Service to Wisconsin Electric and will endeavor to carry out such activities in a manner that will minimize adverse consequences and curtailments of Wholesale Distribution Service to Wisconsin Electric.

3.	TERM

3.1.	Term of Service Agreement - The Term of this Agreement shall begin on April 1, 2019, and shall continue until terminated by either Party in accordance with Section 3.2 of this Agreement.

3.2.	Termination of Service Agreement - Either Party may terminate this Agreement at any time after granting the other Party one year's written notice of its intent to terminate the Agreement, subject to any regulatory approvals. 

4.	RATES AND CHARGES

4.1.	Rate for Wholesale Distribution Service - Wisconsin Electric shall pay to UMERC $38,772.43 per month for the Wholesale Distribution Service provided under this Agreement, or such other rate established pursuant to Section 4.3 of this Agreement as follows:
Distribution Component		Charge	

Substations				$19,472.57
Feeders					$19,153.85
Transformers				$   146.01


4.2.	Real Power Losses - Wisconsin Electric shall be responsible for compensating for losses associated with the Wholesale Distribution Service under this Agreement.  The real power loss factor rates on the distribution facilities identified in Schedule A and required to provide the Wholesale Distribution Service are as indicated in Section 4.2(a) and will be calculated based on metered load at the distribution delivery point.  

a.	Real Power Loss Factor Rate
1.9%

b.	Wisconsin Electric shall ensure that the metered load at each distribution delivery point is incremented by its energy supplier, according to the Real Power Loss Factor Rates specified in 4.2(a) for load reporting and settlement purposes so that reported load includes distribution losses.

4.3.	Rate Changes - Nothing in this Agreement shall be construed as affecting in any way the right of UMERC to unilaterally make application to the Commission for a change in the rate for Wholesale Distribution Service.  UMERC shall notify Wisconsin Electric no later than the date of Commission filing, of its intent to file for an adjustment in rates.  UMERC's notification shall consist of the application package sent to the Commission. UMERC agrees that, in the event that UMERC makes such application to the Commission, UMERC shall not oppose Wisconsin Electric's right to intervene and protest such application.


5.	BILLING AND PAYMENT

5.1.	Billing Date - After commencement of this Agreement, UMERC shall issue bills to Wisconsin Electric on a calendar month basis, by the 10th working day following the calendar month to which they apply.  All bills shall be due and payable within 20 days of their receipt.

5.2.	Payment Address - 	For Wire Transfers: 
				US Bank, N.A.
777 East Wisconsin Avenue
Milwaukee, Wisconsin 53202
ABA: 075 000 022
For credit to:	Upper Michigan Energy Resources Corporation
Account # 182381014857

			For Other Payments: 
				Cashiers A139
				UMERC
				333 W. Everett Street
				Milwaukee, WI 53203

5.3.	Interest - Bills that are not paid in full by Wisconsin Electric when due shall thereafter bear interest at the rate of 11/2  percent per month, or at the maximum rate of interest allowed by law, whichever is less.

5.4.	Disputed Bills - In the event of a dispute about any invoice, Wisconsin Electric shall remit the undisputed portion of such invoice, and shall have the option to pay the disputed portion of such invoice under protest or remit the disputed portion of such invoice into an escrow account pending the resolution of the dispute pursuant to Section 9 of this Agreement.

5.5.	Termination for Non-Payment of Bills - In the event of non-payment of a bill by Wisconsin Electric, UMERC shall have the right to terminate service sixty (60) days subsequent to the date of the bill;  provided, however, that in the event of any billing dispute, UMERC shall not have the right to terminate service if Wisconsin Electric complies with Section 5.4 of this Agreement, and either pays the disputed amount under protest or places disputed amounts in an escrow account subject to disbursement based upon the resolution of the dispute.  UMERC shall be required to notify Wisconsin Electric in writing of its intent to terminate service for non-payment at least thirty (30) days prior to the actual date of termination of service.  UMERC may not terminate service for reason of non-payment if Wisconsin Electric makes payment prior to the date of termination.

6.	ASSIGNMENT

6.1.	Assignment of Rights Under the Agreement - Each Party shall have the right to assign all or any portion of its interest in the Agreement upon prior written notice to the other Party, and a Party assigning its rights and obligations under this Agreement shall provide notice to the other Party of the assignment pursuant to Section 10 of this Agreement.  If assignment of this Agreement occurs pursuant to the provisions of this section, this Agreement shall be binding upon and inure to the benefit of the respective successors and assigns of the Parties.

6.2.	Obligations After Assignment - In the event of any sale, transfer, or assignment hereunder, the transferor or assignor shall, to the extent of the transferred or assigned obligations, and only to such extent, be relieved of obligations accruing from and after the effective date of such transfer or assignment;  provided, however, that under no circumstances shall any sale, transfer, or assignment relieve the transferor or assignor of any liability for any breach of this Agreement occurring before the effective date of such transfer or assignment.

7.	LOAD SHEDDING AND CURTAILMENTS

7.1.	Procedures - As a Wholesale Distribution Service provider UMERC is subject to load shed in accordance with NERC standards and the MISO Energy and Operating Reserves Market Tariff. In the event UMERC receives an operating instruction to shed load and implementation of load shed would impact Wisconsin Electric, UMERC will contact Wisconsin Electric as soon as practicable.
 
7.2.	Distribution Constraints - During any period when UMERC, ATC, or MISO determines that a constraint exists on all or a portion of the ATC transmission facilities or UMERC's facilities used to provide Wholesale Distribution Service under this Agreement, and that such constraint may impair the reliability of those facilities or other facilities owned and/or operated by ATC, UMERC, or MISO, UMERC may take whatever actions, consistent with Good Utility Practice, that are reasonably necessary to maintain the reliability of those facilities.  Such actions will be taken in a nondiscriminatory manner.

7.3.	Curtailments of Wholesale Distribution Service - If a constraint cannot be relieved through the implementation of other procedures, and if UMERC determines that it is necessary to curtail Wholesale Distribution Service that would otherwise be provided under this Agreement, such deliveries shall be curtailed in a nondiscriminatory fashion pursuant to the procedures established in Section 7.1 of this Agreement.

7.4.	Curtailment of Wholesale Distribution Service For Transmission Constraints - Each Party shall, on a non-discriminatory basis, curtail its use of the system in a manner that effectively relieves the constraint.  However, to the extent practicable and consistent with Good Utility Practice, any curtailment will be proportionately shared by customers impacted by the transmission constraint.

7.5.	System Reliability - Notwithstanding any other provisions of this Agreement, UMERC, for its own purposes or in response to actions taken or requests made by ATC or MISO, reserves the right, consistent with Good Utility Practice and on a basis that is not unduly discriminatory, to curtail Wholesale Distribution Service without liability on UMERC's part.  Such curtailments may be made (a) for the purpose of making necessary adjustments to, changes in, or repairs on the lines, substations, and facilities involved in providing service under this Agreement, or (b) where the continuance of Wholesale Distribution Service would endanger persons or property.  

In the event of any adverse conditions or disturbances on UMERC's facilities, or on any other systems directly or indirectly interconnected with UMERC's system, UMERC, consistent with Good Utility Practice, also may curtail Wholesale Distribution Service in order to (i) limit the extent or damage of the adverse conditions or disturbances, (ii) prevent damage to facilities, or (iii) expedite restoration of service.  UMERC will give Wisconsin Electric as much advance notice as is practicable in the event of such curtailment.

7.6.	Underfrequency Load Shedding- Wisconsin Electric shall comply with all regulatory underfrequency load shedding requirements through participation in UMERC's underfrequency load shedding plan.  Wisconsin Electric shall supply documentation in support of UMERC's and ATC's underfrequency load shedding plans, if requested.

8.	ENERGY RELIABILITY ORGANIZATION OBLIGATIONS

8.1.	Wisconsin Electric shall comply with all applicable energy reliability organization requirements.

8.2.	Wisconsin Electric shall be responsible for paying all energy reliability organization costs associated with its load and the provision of service under this Agreement.

8.3.	Wisconsin Electric shall provide all data and information requested by UMERC in order for UMERC to comply with electric reliability organization requirements.

9.	CREDIT SUPPORT

UMERC, in order to satisfy itself of the ability of Wisconsin Electric to meet the obligations set forth in this Agreement, may in accordance with standard commercial practices conduct reasonable credit reviews.  UMERC will require Wisconsin Electric to provide the information and meet the requirements determined by UMERC.  Wisconsin Electric's failure to provide adequate credit support, if required, may be grounds for UMERC to terminate the Agreement.  UMERC may, based on UMERC's credit requirements, require Wisconsin Electric to provide and maintain in effect during the term of this Agreement, an unconditional and irrevocable letter of credit, a parental guaranty, or an alternative form and type of security acceptable to UMERC and consistent with commercial practices ("Performance Assurance").  Such credit support shall not exceed an amount equivalent to the sum of four months of the then current monthly distribution charges.  UMERC reserves the right, on a non-discriminatory basis, to require Wisconsin Electric to submit to UMERC updated financial information to permit UMERC to evaluate Wisconsin Electric's creditworthiness on an on-going basis, and if necessary, to require future Performance Assurance.  Upon receipt of such notice Wisconsin Electric shall have three (3) business days to remedy the situation by providing such Performance Assurance to UMERC.  In the event Wisconsin Electric fails to provide such Performance Assurance acceptable to UMERC within three (3) business days of receipt of notice, then an event of default will be deemed to have occurred and UMERC shall have the right to terminate service.  UMERC shall be required to notify Wisconsin Electric in writing of its intent to terminate service at least 60 days prior to the actual date of termination.

10.	FORCE MAJEURE AND INDEMNIFICATION

10.1.	Force Majeure - To the extent either Party is prevented by Force Majeure from carrying out, in whole or part, its obligations under this Agreement, and such Party ("the Claiming Party") gives notice and details of the Force Majeure to the other Party as soon as practicable, then, unless this Agreement specifies otherwise, the Claiming Party shall be excused from the performance of its obligations with respect to this Agreement other than payments then due or becoming due with respect to performance prior to the Force Majeure.  The Claiming Party shall commence performance of its obligations after the occurrence of the Force Majeure with all reasonable dispatch.  The non-Claiming Party shall not be required to perform or resume performance of its obligations to the Claiming Party corresponding to the obligations of the Claiming Party excused by Force Majeure.  However, no Party shall be relieved of liability for failure of performance if such failure be due to causes arising out of its negligence or due to removable or remediable causes that it fails to remove or remedy within a reasonable time period.  Nothing contained herein shall be construed to require a Party to settle any strike or labor dispute in which it may be involved.

10.2.	Indemnification - Each Party shall at all times, indemnify, defend, and hold harmless the other Party against any and all damages, losses, and claims, including claims and actions relating to injury to or death of any person or damage to property, demands, suits, recoveries, costs and expenses, court costs, attorney fees, and all other obligations by or to third parties, arising out of or resulting from the Party's required performance of its obligations under this Agreement.  

10.3.	Limitations on Liability - The Parties liability under this Agreement shall be limited to direct, actual damages only.  All other remedies or damages at law or in equity are waived.  Direct, actual damages shall be the sole and exclusive remedy, and in no event, whether as a result of breach of contract, tort liability (including negligence), strict liability, or otherwise, shall either Party be liable to the other Party, its agents, representatives, and/or assigns, for any special, punitive, incidental, indirect, exemplary, or consequential damages of any nature whatsoever, including, but not limited to, loss of profits.  The Parties also intend and agree that such provisions shall continue in full force and effect notwithstanding the termination, suspension, cancellation, or expiration of this Agreement.

11.	DISPUTE RESOLUTION  

11.1.	Dispute Resolution - Any dispute between the Parties involving service under this Agreement shall be referred to a designated senior representative of each Party for resolution on an informal basis as promptly as practicable.  In the event the designated representatives are unable to resolve the dispute within thirty (30) days, or such other period as the Parties may agree upon, the Parties may pursue any remedies available.  

11.2.	Rights Under the Federal Power Act - Nothing in this section shall restrict the rights of either Party to file a complaint with the Commission under relevant provisions of the Federal Power Act.

12.	NOTICES

12.1.	Any notice provided for or concerning this Agreement, except the payment of bills as provided in Section 5.2, shall be in writing and delivered by person or mail to the following:


If to Wisconsin Electric:	Wisconsin Electric Power Company
				Vice President - Wholesale Energy and Fuels
				333 W. Everett Street, A214
				Milwaukee, WI 53203


If to UMERC:		Upper Michigan Energy Resources Corporation
					Vice President - Wholesale Energy and Fuels
					333 W. Everett Street, A214
					Milwaukee, WI 53203

Such notice shall be effective when received by the Party to whom it is sent.

13.	SEVERABILITY

13.1.	In the event that any of the terms, covenants, or conditions of this Agreement or the application of any such term, covenant, or condition, shall be held invalid as to any person or circumstance by any court having jurisdiction, all other terms, covenants, or conditions of this Agreement and their application shall not be affected thereby, but shall remain in force and effect unless a court holds that the provisions are not separable from all other provisions of this Agreement

14.	GOVERNING LAW

14.1.	This Agreement shall be interpreted, construed, and enforced in accordance with the laws of the State of Michigan without regard to conflicts of law provisions thereof.

15.	SIGNATURE CLAUSE

15.1.	The signatories hereto represent that they have been authorized to enter into this Agreement on behalf of the Party for whom they sign.

16.	COUNTERPARTS
  
16.1.	This Agreement may be executed in one or more counterparts which taken together shall form a valid Agreement.



[SIGNATURE PAGE FOLLOWS]


IN WITNESS WHEREOF, each of the Parties has caused this Agreement to be executed by its duly authorized representative as of the date first written above.


UMERC 					Wisconsin Electric 


By: _____/s/__________			By: 		/s/			

Name: Richard Rayborn			Name: Christine T. Akkala		
												
Title: Director of UMERC			Title: Vice President - Planning &amp; Mktg
      
Date: March 28, 2019				Date: March 28, 2019			
      
      
      

SCHEDULE A
Facilities Used for Provision of Wholesale Distribution Service
Feeders: 
There are a total of ten (10) feeders located in Michigan that are used to provide wholesale distribution service to Wisconsin Electric's load. Four (4) of these feeders originate in the State of Michigan, cross the border into the State of Wisconsin, and then cross back into the State of Michigan. Five (5) of the feeders originate in the State of Michigan and have a single crossing into the State of Wisconsin. One (1) of these feeders originates in the State of Wisconsin, crosses the border into the State of Michigan, and then crosses back into the State of Wisconsin. Only the value of the portion of the feeder physically located in Michigan is used in the determination of the wholesale distribution charge. Costs are allocated on a non-coincident peak basis. These feeders are as follows:

ARA52 (Originates in MI, Single Crossing): WI Capacity Allocation of MI Segment = 96.67%
ARM62 (Originates in MI, Single Crossing): WI Capacity Allocation of MI Segment = 35.28%
BAS52 (Originates in MI, Single Crossing): WI Capacity Allocation of MI Segment = 30.51%
BAS61 (Originates in MI, Single Crossing): WI Capacity Allocation of MI Segment = 50.57%
LOL1 (Originates in MI, Multiple Crossing): WI Capacity Allocation of MI Segment = 65.72%
LOL2 (Originates in MI, Multiple Crossing): WI Capacity Allocation of MI Segment = 51.94%
LOL3 (Originates in MI, Multiple Crossing): WI Capacity Allocation of MI Segment = 93.47%
SBH2 (Originates in MI, Single Crossing): WI Capacity Allocation of MI Segment = 71.72%
SBH3 (Originates in MI, Multiple Crossing): WI Capacity Allocation of MI Segment = 23.19%
TWL51 (Originates in WI, Multiple Crossing): WI Capacity Allocation of MI Segment = 86.03%

There are three (3) feeders located in Michigan that are used to provide wholesale distribution service to Wisconsin Electric's hydro generation. Costs are allocated on the hydro generation maximum usage of the line capacity. These feeders are as follows: 

SAG52 (Hemlock Hydro Plant): Capacity Allocation of MI Segment = 26.51% 
SAG52 (Way Hydro Plant): Capacity Allocation of MI Segment = 15.35%
ARM4250 (Kingsford Hydro Plant): Capacity Allocation of MI Segment = 100%
BRL2 (Lower Paint Hydro Plant): Capacity Allocation of MI Segment = 4.35%

Substations: 
There are a total of four (4) substations located in Michigan that are used to provide wholesale distribution service to Wisconsin Electric's load. Costs are allocated on a non-coincident peak basis. These substations are as follows:

Aragon Substation (load only): WI Capacity Allocation = 56.81%
Bass Lake Substation (load only): WI Capacity Allocation = 15.79%
Land O Lakes Substation (load only): WI Capacity Allocation = 68.11%
Strawberry Hill Substation (load only): WI Capacity Allocation = 52.59%
There is one (1) substation located in Michigan that is used to provide wholesale distribution service to Wisconsin Electric's hydro generation. Costs are allocated on the hydro generation maximum usage of the substation. This substation is as follows:

Sagola Substation (Hemlock Hydro Plant): Capacity Allocation = 31.10%
Sagola Substation (Way Hydro Plant): Capacity Allocation = 18.00%

There is one (1) substation located in Michigan that is used to provide wholesale distribution service to Wisconsin Electric's load and hydro generation. Costs are allocated to the hydro generation based on its usage of Transformer 5 and associated equipment within the substation. The balance of the substation plant is allocated on a load ratio share basis. This substation is as follows:

Armory Substation (Kingsford Hydro Plant): Transformer 5 Capacity Allocation =56.07%
Armory Substation (load): WI Balance of Plant Capacity Allocation = 7.93%

Transformers: 
There are 28 transformers located in Michigan that provide service to customers on both sides of the border. Costs are allocated on a non-coincident peak basis.

Transformer 620475618044: WI Capacity Allocation = 88.32%
Transformer 620537618105: WI Capacity Allocation = 64.37%
Transformer 621018617822: WI Capacity Allocation = 64.40%
Transformer 666197595075: WI Capacity Allocation = 84.22%
Transformer 666584595077: WI Capacity Allocation = 69.80%
Transformer 668038598107: WI Capacity Allocation = 62.95%
Transformer 668335597544: WI Capacity Allocation = 44.41%
Transformer 668535604622: WI Capacity Allocation = 13.78%
Transformer 669043597232: WI Capacity Allocation = 34.97%
Transformer 669049600092: WI Capacity Allocation = 37.10%
Transformer 669168604277: WI Capacity Allocation = 22.95%
Transformer 669426604462: WI Capacity Allocation = 18.80%
Transformer 669964600667: WI Capacity Allocation = 22.02%
Transformer 669992607083: WI Capacity Allocation = 68.89%
Transformer 670051607808: WI Capacity Allocation = 26.66%
Transformer 670645599364: WI Capacity Allocation = 10.59%
Transformer 670730603030: WI Capacity Allocation = 40.44%
Transformer 671092601896: WI Capacity Allocation = 27.63%
Transformer 671185602734: WI Capacity Allocation = 27.02%
Transformer 671600606724: WI Capacity Allocation = 29.91%  
Transformer 671741605431: WI Capacity Allocation = 33.97%
Transformer 671982602213: WI Capacity Allocation = 66.18%
Transformer 672359600703: WI Capacity Allocation = 25.42%
Transformer 673728606784: WI Capacity Allocation = 59.06%
Transformer 674618597696: WI Capacity Allocation = 61.85%
Transformer 675801593910: WI Capacity Allocation = 30.01%
Transformer 676190593832: WI Capacity Allocation = 8.04%
Transformer 676375594338: WI Capacity Allocation = 11.57%</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>899</filing_id>
      <filing_title>Supplement to Filing of Amendment to WDSA</filing_title>
      <filing_type>130</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2019-04-01</current_effective_date>
      <ferc_order_date>2019-07-23</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
    <record_data>
      <record_id>197</record_id>
      <option_code>A</option_code>
      <record_title>Rate Schedule FERC No. 1</record_title>
      <record_content_desc>Reactive Supply Service</record_content_desc>
      <record_version_num>1.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>111000</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2022-06-01</proposed_effective_date>
      <priority_order>500</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>UPPER MICHIGAN ENERGY RESOURCES CORPORATION
RATE SCHEDULE FERC NO. 1

Reactive Supply and Voltage Control from Generation Sources Service

	Upper Michigan Energy Resources Corporation ("UMERC") provides Reactive Supply and Voltage Control from Generation Sources Service ("Reactive Supply Service") from the AJ Mihm Generating Station ("Mihm") and the FD Kuester Generating Station ("Kuester").

	Mihm is a reciprocating internal natural gas combustion engine generation facility located in Baraga Township, Michigan.  Kuester is a reciprocating internal natural gas combustion engine generation facility located in Negaunee Township, Michigan.  Mihm and Kuester are interconnected to transmission facilities owned by American Transmission Company LLC and under the operational control of the Midcontinent Independent System Operator, Inc. ("MISO").

	This Rate Schedule FERC No. 1 sets forth UMERC's revenue requirement for Reactive Supply Service from Mihm and Kuester.  This Rate Schedule shall be effective upon the date authorized by the Federal Energy Regulatory Commission.

	UMERC's monthly fixed revenue requirement consists of the charge for the Fixed Capability Component and the Heating Loss Component.  Payment to UMERC shall be subject to Schedule 2 of MISO's Open Access Transmission, Energy and Operating Reserve Markets Tariff.

 REVENUE REQUIREMENT:

	Total Revenue Requirement:
	
	Fixed Annual Revenue Requirement is: $748,000.00
		Fixed Annual Revenue Requirement for Mihm is: $237,000.00
		Fixed Annual Revenue Requirement for Kuester is: $511,000.00

	The Monthly Revenue Requirement is: $62,333.33
		Monthly Revenue Requirement for Mihm is: $19,750.00
		Monthly Revenue Requirement for Kuester is: $42,583.33

The foregoing total revenue requirement is based on the following per-facility revenue requirements:


Annual
Monthly
Mihm
$237,000.00
$19,750.00
Kuester
$511,000.00
$42,583.33</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>2149</filing_id>
      <filing_title>Filing of Interim Rate Motion</filing_title>
      <filing_type>1380</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2022-06-01</current_effective_date>
      <ferc_order_date>2022-05-31</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
  </ferc_filing_data>
</Document>