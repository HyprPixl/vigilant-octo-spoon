<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Document xmlns="http://ferc.gov/etariffExport.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ferc_filing_data>
    <schema_version>2</schema_version>
    <company_id>C004921</company_id>
    <lead_applicant_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
    <tariff_id>199</tariff_id>
    <tariff_title>Shared Facilities Agreements</tariff_title>
    <tariff_export_date>2025-09-16T20:14Z</tariff_export_date>
    <export_schema_version>2</export_schema_version>
    <record_data>
      <record_id>2217</record_id>
      <option_code>A</option_code>
      <record_title>to SFA</record_title>
      <record_content_desc>Exhibit A</record_content_desc>
      <record_version_num>0.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>1610612736</collation_value>
      <record_parent_id>2216</record_parent_id>
      <proposed_effective_date>2015-12-10</proposed_effective_date>
      <priority_order>500</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>EXHIBIT A
TO
SHARED FACILITIES AGREEMENT

Shared Facilities

The “Shared Facilities” shall consist of: (i) that certain Large Generator Interconnection Agreement as may be amended from time to time by and among GHI, PG&amp;E, and the CAISO, dated as of August 19, 2014 and (ii) all of the “Interconnection Customer Interconnection Facilities” (as defined in the LGIA), except for the collection lines dedicated to the Golden Hills and Golden Hills North generating facilities.</record_plain_text>
      <record_change_type>NEW</record_change_type>
      <filing_id>758</filing_id>
      <filing_title>Golden Hills Interconnection SFA with Golden Hills, and Golden Hills North</filing_title>
      <filing_type>390</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2015-12-10</current_effective_date>
      <ferc_order_date>2016-02-04</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
    <record_data>
      <record_id>2216</record_id>
      <option_code>A</option_code>
      <record_title>GH Interconnection, Golden Hills, and Golden Hills North</record_title>
      <record_content_desc>SFA</record_content_desc>
      <record_version_num>0.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>1073741824</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2015-12-10</proposed_effective_date>
      <priority_order>500</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>SHARED FACILITIES AGREEMENT
THIS SHARED FACILITIES AGREEMENT (this “Agreement”), is entered into as of December 7, 2015, by and between Golden Hills Interconnection, LLC, a Delaware limited liability company (“GHI”), Golden Hills Wind, LLC, a Delaware limited liability company (“Golden Hills”), and Golden Hills North Wind, LLC, a Delaware limited liability company (“Golden Hills North”), jointly with GHI and Golden Hills, the “Parties” and each a “Party”).
RECITALS
WHEREAS, Golden Hills is developing, and constructing, owns and will operate a wind energy generation facility with a nameplate capacity of approximately 85.9 MW (the “Golden Hills Project”);
WHEREAS, Golden Hills North is developing and intends to construct, own and operate a wind energy generation facility with a projected nameplate capacity of approximately 41.2 MW (the “Golden Hills North Project”, together with the Golden Hills Project, the “Projects” and each a “Project”);
WHEREAS, GHI is a party to that certain Large Generator Interconnection Agreement (as may be amended from time to time, the “LGIA”) by and among GHI, Pacific Gas &amp; Electric Company (“PG&amp;E”), and the California Independent System Operator, Inc. (“CAISO”, jointly with PG&amp;E the “Interconnection Companies”), dated as of August 19, 2014, pursuant to which GHI has the right to receive Interconnection Service (as defined in the LGIA) to interconnect a generating facility project with PG&amp;E’s transmission system, which is part of  the CAISO Controlled Grid;
WHEREAS, Golden Hills owns a sixty seven point six percent (67.6%) membership interest in GHI, and Golden Hills North owns a thirty two point four percent (32.4%) membership interest in GHI;
WHEREAS, GHI owns or will own certain personal property, fixtures, equipment and/or facilities described in Exhibit A attached hereto (the “Shared Facilities”) that are necessary for the interconnection of each Project to the Participating TO’s Transmission System (as defined in the LGIA); 

WHEREAS, GHI desires to provide and Golden Hills and Golden Hills North each desire to receive rights to receive Interconnection Service in addition to all associated rights with respect to the electric generation facilities to be owned and operated by each of them; 

NOW THEREFORE, in consideration of the premises and of the mutual covenants and agreements contained herein, and for other good and valuable consideration, the receipt and sufficiency of which is hereby acknowledged, the Parties hereby agree as follows:
AGREEMENT
TERM; EARLY TERMINATION
Term:  The term of this Agreement shall commence on the date first written above and shall continue in effect until terminated (a) by mutual agreement of the Parties, (b) pursuant to Section 1.2 of this Agreement, or (c) pursuant to Section 7.1 of this Agreement.
Early Termination:  This Agreement shall automatically terminate, without further action by any Party and without further liability of any Party to any other Party, upon the date that all Parties, or their successors and assigns, shall have permanently ceased operation of the Projects for the production of electric energy.
GRANT OF SHARED FACILITIES RIGHTS
Grant:  GHI hereby grants to Golden Hills and Golden Hills North, respectively, during the term of this Agreement, and on the terms and subject to the conditions hereof, the non-exclusive right to access and utilize the Shared Facilities as may be reasonably necessary in connection with the ownership, operation and maintenance of the Golden Hills Project and the Golden Hills North Project, respectively.
Essential Nature:  GHI hereby acknowledges that the right of Golden Hills and Golden Hills North to access and utilize the Shared Facilities are essential to the production of electric energy by the Golden Hills Project and the Golden Hills North Project, respectively, and to the delivery of such energy to the Transmission System.
Vesting:  The right to access and utilize the Shared Facilities granted hereunder by GHI to Golden Hills and Golden Hills North, respectively, shall vest in each of Golden Hills and Golden Hills North, respectively, as a contracting party hereunder without any transfer of title, leasehold or other interest or rights in the Shared Facilities.  
NATURE OF SHARED FACILITIES RIGHTS
Limitation on Grant:  Subject to Section 3.3 hereof, the grant of rights under this Agreement by GHI to Golden Hills and Golden Hills North is made only to the extent that such rights do not limit in any material respect the ability of GHI to comply with the terms and conditions of the LGIA.  For the avoidance of doubt, the grant of rights under this Agreement by GHI to Golden Hills and Golden Hills North shall not relieve GHI of its obligations under the LGIA.
Assignment or Transfer of Rights:  Except as set forth in Section 9.7 hereof, Golden Hills and Golden Hills North, respectively, shall not assign or transfer any rights granted to such Party hereunder with regard to the Shared Facilities, or grant any permission, license, right of way or similar right with regard to the Shared Facilities, without the prior written consent of GHI and PG&amp;E, which consent shall not be unreasonably withheld, conditioned or delayed.
Interference:  Subject to the terms of this Agreement, in no event shall any Party be entitled to exercise its rights to access and utilize the Shared Facilities if the exercise of such rights would materially interfere with or limit the reasonable and necessary access and utilization of the Shared Facilities by any other Party. 
Prior Written Consent:  Except as set forth in this Agreement and the Limited Liability Company Agreement of Golden Hills Interconnection, LLC, dated October 2, 2015 and effective as of August 27, 2015, GHI shall not take any action that results in the forbearance, foreclosure, termination or alteration of the respective rights or increases the obligations or responsibilities of Golden Hills or Golden Hills North of access to, utilization of or reliance upon the Shared Facilities without the prior written consent of Golden Hills or Golden Hills North, respectively.  
MAINTENANCE OF SHARED FACILITIES
Allocation of Certain Costs and Expenses:  
GHI shall be responsible for the ownership or possession, improvement and replacement of the Shared Facilities.  Operation and maintenance of the Shared Facilities will be provided under the Operation and Maintenance Agreement dated as of September 23, 2015 between Golden Hills and NextEra Energy Operating Services, LLC; provided however, that the Parties hereby agree that the costs and expenses of the operation, inspection, maintenance, repair, alteration, relocation, improvement and replacement of the Shared Facilities and of insuring the Shared Facilities shall be allocated (a) one hundred percent (100%) to Golden Hills until such time as the Golden Hills North Project is energized and, thereafter (b) on an sixty seven point six percent (67.6%) / thirty two point four percent (32.4%) basis between Golden Hills and Golden Hills North, respectively.  Each of Golden Hills and Golden Hills North shall pay its respective allocation (specified above) of such costs and expenses to GHI within thirty (30) days of receipt from GHI of each written notice specifying such costs and expenses.
Golden Hills and Golden Hills North shall each be liable to pay for the retail station power service of its respective Project.
Successor Agreement:  In the event that the Shared Facilities are no longer operated and maintained by a single entity for any reason, the Parties agree to use good faith efforts to negotiate mutually agreeable terms and execute a mutually agreeable agreement (or amendment to this Agreement) that specifies the division of responsibilities of the entities providing operation and maintenance services associated with the Shared Facilities.
CHANGE IN LAW
Change in Law: In the event that a change in the laws or regulations applicable to the Shared Facilities, any of the Projects, or this Agreement requires the amendment, modification or replacement of this Agreement in order to satisfy any applicable federal, state or local regulatory requirements, the Parties agree to use good faith efforts to negotiate and implement mutually agreeable terms to accomplish such amendment, modification or replacement.  
CERTAIN COVENANTS
Authority and Operational Abilities.  Each of the Parties represents, as of the Effective Date, and covenants for the term of this Agreement, that such Party has the legal authority and operational abilities to fulfill its obligations under this Agreement.
Payment of Certain Studies, Upgrades and Facilities:  In the event that any Project at any time shall pay, fund or post as security pursuant to the LGIA any amounts, facilities, upgrades, or studies to the extent arising as a result of the interconnection of any other Project, the Project in connection with whose interconnection such costs arose shall promptly pay and reimburse on demand all such costs to the Project that shall have initially paid, funded or posted the same as security.
Observance of LGIA:  Each Party shall exercise its rights and perform its obligations under the LGIA which have been assigned to it in a manner that is reasonable and not discriminatory against the other Parties.  Without limiting the generality of the foregoing, during the term of this Agreement, each Party agrees to:
Operate its respective Project in accordance with Good Utility Practice, Applicable Laws and Regulations and Applicable Reliability Standards, in each case as defined in the LGIA, and in a manner consistent with the terms of the LGIA.
Observe and facilitate GHI’s compliance with all provisions of the LGIA to which GHI is subject (and all insurance requirements, operational limits, operating guides, operating procedures and reliability standards and requirements applicable by virtue thereof) as it relates to its respective Project;  
Assume and be bound by all obligations related to its respective rights to receive Interconnection Service;
Not take any action (or refrain from taking any action) which would result in a breach of the LGIA;  
Use all commercially reasonable efforts to promptly resolve any technical issues arising in connection with the operation of its respective Project that might reasonably be expected to result in a default under the LGIA, and if such default occurs, to promptly cure such default in accordance with the terms of the LGIA; 
Comply with all instructions, as may be communicated to Golden Hills and Golden Hills North by GHI, in order to ensure compliance with the provisions of the LGIA with respect to its respective Project; 
Provide each other Party with all reasonable information regarding the operation and condition of its respective Project required for each other Party to maintain compliance with the terms and conditions of the LGIA; and
Provide to each other Party copies of all notices and instructions received by any Party under the LGIA.
Adverse Events.  
If an operational issue arises at one of the Projects that is reasonably expected to result in a material breach by GHI of the LGIA or this Agreement (an “Adverse Event”), GHI shall, upon instruction by either of Golden Hills or Golden Hills North (in such capacity, each an “Instructing Party”), curtail the Project that is causing the Adverse Event.  In the event of such curtailment, the Project that has caused the Adverse Event shall not be permitted to deliver energy to the Shared Facilities until such time as the Adverse Event has been cured to the reasonable satisfaction of the Instructing Party.
If, as a direct result of an Adverse Event, GHI incurs costs, expenses, or penalties of any kind, the Project that has caused such Adverse Event shall be solely responsible for reimbursing GHI for any such costs, expenses or penalties.  In the event that both Projects are responsible for the Adverse Event, and to the extent that GHI, in its sole and absolute discretion, can accurately allocate responsibility for such Adverse Event between the Projects, each Project shall be responsible for its allocable portion of the applicable costs, expenses or penalties.  If, however, it is not reasonably possible for GHI, as determined in its sole and absolute discretion, to accurately allocate such responsibility, the Projects will be liable to an equal extent for such costs, expenses or penalties.  
Priority of Curtailment:  Notwithstanding anything to the contrary in this Agreement, in the event of curtailment pursuant to the LGIA (or pursuant to applicable operating guides or applicable reliability standards and requirements), the Parties agree that they shall cause the Projects to be curtailed as follows:
first, and if necessary in full, any Project (if any) the operation of which is contributing to an CAISO system emergency; and
thereafter, both Projects, at the same time and to an extent for each Project equal to such Project’s pro rata portion (based on such Project’s nameplate capacity) of the energy delivered to the Shared Facilities as of the time immediately prior to the event giving rise to the curtailment.
Agreement to Cooperate.  Each Party agrees to reasonably cooperate with the other Parties so that, subject to the terms of this Agreement, each Project benefits from the full utilization and enjoyment of the Shared Facilities as is necessary for the efficient operation of each such Project.
No Liens.  Each Party agrees not to grant any mortgages, liens, pledges, charges or security interests (collectively, “Liens”) on the Shared Facilities and to keep the Shared Facilities free and clear of all Liens other than:
Liens for taxes which are either not yet delinquent or are subject to a good faith contest in which adequate reserves are established in accordance with GAAP with respect to the contested item (if and to the extent GAAP requires the establishment of such reserves);
defects, restrictions, irregularities, encumbrances (other than for borrowed money) and clouds on title and statutory liens that not materially impair the value or use of the Shared Facilities for the Projects;
 pledges to secure statutory obligations relating to worker’s compensation and/or unemployment insurance or other social security legislation;
carriers’, warehousemen’s, mechanics’, workmen’s, materialmen’s, suppliers’, construction or other similar Liens arising in the ordinary course of business of the Parties or incident to the construction, operation, repair, restoration or improvement of the Shared Facilities for obligations (A) which are not yet due or (B) which are the subject of a good faith contest in which adequate reserves are established in accordance with GAAP (if and to the extent GAAP requires the establishment of such reserves); and 
Liens arising out of judgments or awards in an amount less than $1,000,000 so long as (i) enforcement of any such Lien has been stayed and an appeal or proceeding for review is being prosecuted in good faith, and (ii) adequate reserves have been established in connection therewith in accordance with GAAP (if and to the extent GAAP requires the establishment of such reserves).
MATERIAL BREACH
Material Breach by any Party.  In the event of any material breach of this Agreement by any Party and such Party’s failure to cure such breach within a reasonable time not to exceed thirty (30) days after receipt of written notice from any other Party describing such breach, such Party shall have the right, but not the obligation, in addition to all remedies available to it at law or in equity, to (i) cure the breach on behalf of the breaching Party, (ii) suspend the breaching Party’s access to all or any portion of the Shared Facilities owned by such non-breaching Party for so long as such default shall be continuing and remain uncured, or (iii) terminate this Agreement; provided, however, that in the event of any breach by a Party of this Agreement that may give rise to a breach by any other Party pursuant to the terms LGIA, such Party shall not be required to provide the breaching Party hereunder with notice and/or an opportunity to cure in order to exercise the remedy specified in clause (i) or (ii) of this sentence only; and provided, further, that the remedy specified in clause (i) may be exercised, without prejudice to any right or remedy of any Party hereunder, by any lender of such Party.  If a Party (or any lender thereof) chooses to cure a breaching Party’s default, the breaching Party shall reimburse such Party (or such Party’s lender) upon demand for all commercially reasonable costs incurred by such Party (or such Party’s lender) in curing such breach.
FORCE MAJEURE
Force Majeure.  In the event of an act of God, government order or restraint, war (declared or undeclared) or warlike conditions, act of terrorism, blockade, revolution, strike, lockout, civil commotion, fire, flood, storm, epidemic or any other occurrence beyond a Party’s reasonable control (each a “Force Majeure Event”), such Party shall promptly notify each other Party thereof and, so long as such condition shall persist, such Party shall not be liable for the delay in performance of, or the failure to perform, its obligations (other than obligations for payment of amounts due hereunder) under this Agreement caused directly or indirectly thereby.  The claiming Party shall give each other Party notice describing the particulars of the Force Majeure Event.  Within fifteen (15) days after giving notice of the Force Majeure Event, the claiming Party shall give each other Party an estimate of the Force Majeure Event’s expected duration and probable impact.  The claiming Party shall continue to furnish each other Party with timely regular reports during the continuation of the Force Majeure Event.  Each Party shall immediately exercise commercially reasonable efforts to mitigate or limit the impact to its obligations hereunder as a result of the Force Majeure Event.
MISCELLANEOUS
Relationship of Parties.  The Parties do not intend to create hereby any joint venture, partnership, association or any other entity for the conduct of any business.  Nothing herein shall be deemed to authorize any Party to act on behalf of any other Party.
Non-Interference.  Subject to Section 3.3, each Party agrees not to interfere with the reasonable and necessary utilization of the Shared Facilities by any other Party as permitted hereunder.
Modification and Amendment.  The terms of this Agreement may only be modified or amended in a writing signed by all of the Parties, which consent shall not be unreasonably withheld.
Waiver.  The failure of a Party to insist upon or enforce strict performance of any of the provisions of this Agreement or to exercise any rights or remedies under this Agreement shall not be construed as a waiver or relinquishment to any extent of such Party’s right to assert or rely upon any such provisions, rights, and remedies in that or any other instance; rather, the same shall be and remain in full force and effect.
Enforceability.  Any provision of this Agreement which is prohibited or unenforceable in any jurisdiction shall, as to such jurisdiction, be ineffective only to the extent of such prohibition, but shall be effective to the extent of such remaining provisions hereof.
Assignment.  No Party may assign any of its benefits, rights or obligations hereunder to any third party without the prior written consent of each other Party, provided, however, that any Party may collaterally assign this Agreement to any entity, or such entity’s agent, in connection with a financing or a refinancing of its respective Project.
Indemnification.  Each Party shall indemnify, defend and hold each other Party, its officers, directors, shareholders, members and affiliates, harmless from any and all damages, losses, claims, including claims and actions relating to injury to or death of any person or damage to property, demand, suits, recoveries, costs and expenses, court costs, attorney fees, and all other obligations by or to third parties, arising out of or resulting from the indemnifying Party’s acts or omissions in regards to performance or non-performance of its obligations under this Agreement and the LGIA, except in cases of gross negligence or intentional wrongdoing, by the indemnified party.  However, in no event shall any Party be liable under any provision of this Agreement for any losses, damages, costs or expenses for any special, indirect, incidental, consequential, or punitive damages, including but not limited to loss of profit or revenue, loss of the use of equipment, cost of capital, cost of temporary equipment or services, whether based in whole or in part in contract, in tort, including negligence, strict liability, or any other theory of liability; provided, however, that damages for which a Party may be liable to any other Party under another agreement will not be considered to be special, indirect, incidental, or consequential damages hereunder.
Choice of Law, Jurisdiction and Waiver of Jury Trial
(i)	This Agreement and the rights and obligations of the Parties hereunder will be governed pursuant to, and enforced, construed and interpreted in accordance with, the laws of the State of New York without regard to principles of conflicts of laws (other than Section 5-1401 of the General Obligations Law of the State of New York).  Venue for resolution of any disputes under this Agreement shall be New York County, New York.

	(ii)	Each of the Parties irrevocably and unconditionally submits to the exclusive jurisdiction of the United States District Court for the Southern District of New York for the purposes of any suit, action or other proceeding arising out of or relating to this Agreement, the transactions contemplated hereby, any provision hereof or the breach, performance, enforcement or validity or invalidity of this Agreement or any provision hereof (and agrees not to commence any suit, action or proceeding relating thereto except in such courts).  
(iii)	THE PARTIES HERETO EACH HEREBY KNOWINGLY, VOLUNTARILY AND INTENTIONALLY WAIVE THE RIGHT EACH MAY HAVE TO A TRIAL BY JURY WITH RESPECT TO ANY PROCEEDINGS BASED HEREON, OR ARISING OUT OF, UNDER OR IN CONNECTION WITH THIS AGREEMENT, OR ANY COURSE OF CONDUCT, COURSE OF DEALING, STATEMENTS (WHETHER ORAL OR WRITTEN) OR ACTIONS OF EITHER PARTY TO THIS AGREEMENT.  THIS PROVISION IS A MATERIAL INDUCEMENT FOR THE PARTIES TO ENTER INTO THIS AGREEMENT.
Inspection of Records.  Each Party shall have access to any records concerning the Shared Facilities held by any other Party upon reasonable notice and at reasonable times. 
Entire Agreement.  This Agreement constitutes the entire agreement of the Parties with respect to the subject matter hereof.
Section Headings.  The section headings in this Agreement are for convenience of reference only and shall not modify, define, expand, or limit any of the terms or provisions hereof.
Counterparts.  This Agreement may be executed in one or more counterparts, each of which when so executed shall be deemed an original, and all of which when taken together shall constitute one and the same instrument.
Specific Performance.  The Parties hereto may demand specific performance of this Agreement.  Each Party hereby irrevocably waives any defense based on the adequacy of a remedy at law and any other defense which might be asserted to bar the remedy of specific performance.
[Signature Page Follows]

	IN WITNESS WHEREOF, the Parties have caused this Shared Facilities Agreement to be executed as of the date first written above.



GOLDEN HILLS INTERCONNECTION, LLC 



By: ______________________
Name:	
Title:	



GOLDEN HILLS WIND, LLC



By: ______________________
Name:	
Title:	



GOLDEN HILLS NORTH WIND, LLC



By: ______________________
Name:	
Title:</record_plain_text>
      <record_change_type>NEW</record_change_type>
      <filing_id>758</filing_id>
      <filing_title>Golden Hills Interconnection SFA with Golden Hills, and Golden Hills North</filing_title>
      <filing_type>390</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2015-12-10</current_effective_date>
      <ferc_order_date>2016-02-04</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
  </ferc_filing_data>
</Document>