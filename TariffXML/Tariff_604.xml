<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Document xmlns="http://ferc.gov/etariffExport.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ferc_filing_data>
    <schema_version>2</schema_version>
    <company_id>C000604</company_id>
    <lead_applicant_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
    <tariff_id>1</tariff_id>
    <tariff_title>311 Statement of Operating Conditions</tariff_title>
    <tariff_export_date>2025-09-16T18:12Z</tariff_export_date>
    <export_schema_version>2</export_schema_version>
    <record_data>
      <record_id>2</record_id>
      <option_code>A</option_code>
      <record_title>Statement of Operating Conditions</record_title>
      <record_content_desc>Acacia 311</record_content_desc>
      <record_version_num>7.1.0</record_version_num>
      <record_narrative_name>Statement of Operating Conditions and General Terms and Conditions including Exhibits A through G.</record_narrative_name>
      <collation_value>500</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2022-10-01</proposed_effective_date>
      <priority_order>800</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>UNITED STATES OF AMERICA
FEDERAL ENERGY REGULATORY COMMISSION
ACACIA NATURAL GAS, L.L.C. 

STATEMENT OF
OPERATING CONDITIONS















Effective October 1, 2022



TABLE OF CONTENTS
Page
I. INTRODUCTION 	1
II. ON BEHALF OF TEST WARRANTY	2
III. OPERATING CONDITIONS	3
Section 1 -	Type of Service, Priority of Service and Conditions Precedent to
Transportation Service	3
Section 2 -	Authority for Service and Qualified Shippers	7
Section 3 -	Available Capacity, Excess Capacity and Priority of Requests	8
Section 4 -	Capacity Allocation, Prioritization and Interruption	12
Section 5 -	Delivery Obligation	13
Section 6 -	Transportation and Other Charges	14
Section 7 -	Data Required for Transportation	15
Section 8 -	Point of Receipt and Delivery	16
Section 9 -	Balancing of Deliveries	17
Section 10 -	Miscellaneous	19
IV. EFFECTIVE RATE	21

EXHIBIT A
EXHIBIT B
EXHIBIT C
EXHIBIT D
EXHIBIT E

ACACIA NATURAL GAS, L.L.C.
STATEMENT OF OPERATING CONDITIONS FOR INTERRUPTIBLE
TRANSPORTATION SERVICE PROVIDED UNDER
SECTION 311 OF THE NGPA
I.
INTRODUCTION
      Acacia Natural Gas, L.L.C. (hereinafter "Acacia" or "Transporter") owns and operates an intrastate natural gas pipeline in the State of Texas. Acacia qualifies as an "intrastate pipeline" under section 2(16) of the Natural Gas Policy Act of 1978 ("NGPA") and is subject to the regulatory jurisdiction of the Railroad Commission of Texas. Acacia is also authorized to provide interruptible transportation service on all of Transporter's System under Section 311(a)(2) of the NGPA.  Neither these services nor this Statement of Operating Conditions ("SOC") shall have an effect on Acacia's status as a non-jurisdictional intrastate pipeline company or subject Acacia to the Federal Energy Regulatory Commission's ("Commission") jurisdiction under the Natural Gas Act ("NGA").
      The Commission's regulations shall govern all of the services provided by Acacia under Section 311 of the NGPA. In the event that any term or provision of an executed Transportation Agreement is inconsistent with any of the applicable regulations or the SOC, the Transportation Agreement will be deemed modified in order to bring it into compliance therewith.
II.
ON BEHALF OF TEST WARRANTY
      In order to be eligible for service provided pursuant to the SOC, a shipper must warrant to Acacia that the requested service complies with the requirements of Section 311 of the NGPA and applicable Commission regulations, including Section 284.122 of the Commission's regulations, which specifically provide that the shipper:
(a) is an interstate pipeline; or
(b) is a local distribution company served by an interstate pipeline; or
(c) is authorized to arrange transportation service under Section 311 on behalf of such interstate pipeline or local distribution company.
Pursuant to Section 284.122(d) of the Commission's regulations, transportation is not "on behalf of" an interstate pipeline or local distribution company unless: (1) the interstate pipeline or local distribution company has physical custody of and transports the natural gas at some point; or (2) the interstate pipeline or local distribution company holds title to the natural gas at some point, which may occur prior to, during, or after the time that the gas is being transported by the intrastate pipeline, for a purpose related to its status and functions as an interstate pipeline or its status and functions as a local distribution company.
      Customers shall indemnify and hold Acacia harmless from all suits, actions, liabilities, damages, costs, losses, expenses (including attorney's fees) and regulatory proceedings arising out of or in connection with this warranty. Acacia may refuse to accept deliveries of gas for transportation in the event the indemnification has not been satisfied.
III.
OPERATING CONDITIONS 
Section 1 - Type of Service, Priority of Service and Conditions Precedent to Transportation Service
(a)	Transportation services shall be available on a fully interruptible basis only. Interruptible transportation shall be provided after performance by Transporter of the following higher priority services, including such services provided to Transporter's affiliates:
(i) transportation service for those Shippers for which Transporter has agreed to transport on a firm basis, subject to any priorities set forth in the regulations of the  Railroad Commission of Texas, including Title 16 Texas Administrative Code  7.455, as amended from time to time;
(ii) transportation service for those Shippers served by Transporter which are paying a higher rate than the transportation rate agreed to be paid by a prospective Shipper (transportation rates shall not exceed the maximum rate permitted by applicable federal or state law, rules or regulations);
(iii) transportation service for those Shippers served by Transporter which are paying a transportation rate equivalent to the rate agreed to be paid by the prospective Shipper and which have an earlier date of initial receipt under their respective gas transportation agreement with Transporter, and
(iv) service which Transporter performs or may perform in the future because of its obligations under relevant statutes, regulations, or other requirements of the Railroad Commission of Texas.
(b)	Transporter shall not be required to transport gas for a Shipper pursuant to the terms and conditions hereof, unless:
(i) Shipper has complied with the provisions of Section 7 hereof concerning data required for all valid Requests for Transportation Service (hereinafter referred to as a "Request for Service" and which is more fully described in Section 7 hereof), Transporter has notified Shipper, in writing, that Shipper's Request for Service has been accepted, and Shipper has executed a Transportation Agreement with Transporter for transportation service;
(ii) Shipper, Transporter and any third party transporters have obtained, as appropriate, or will obtain reasonably in advance of the commencement of service, unless waived by Transporter, all state and federal regulatory approvals for services to be provided by Shipper, Transporter and any third- party related to the services rendered by Transporter, including services that are necessary for said gas to be delivered to Transporter's facilities and redelivered from Transporter's facilities to Shipper;
(iii) Transporter is not obligated to construct additional pipeline, compression, metering, treating or other facilities or incur any additional expenses for the receipt, transportation, or delivery of gas;
(iv) All facilities which are required for the receipt, measurement, transportation and delivery of gas under the Transportation Agreement have been installed and are in operating condition. Further, in the event additional facilities are required for Transporter to perform transportation service and Transporter elects to install such facilities, the terms upon which Shipper will reimburse Transporter for the costs of such facilities (including any applicable federal income tax consequences) shall be set out in a separate construction agreement between Transporter and Shipper. If Transporter requires such a construction agreement, Transporter shall not be required to commence construction of additional facilities prior to Shipper's execution, delivery and performance of the terms of such construction agreement;
(v) Transporter determines, in its discretion, that the requested service qualifies under Section 311(a)(2) of the NGPA and that such service can be provided subject to the performance of services described in Section 1(a) hereof and without subjecting such operations or any services or facilities to the jurisdiction of the Commission under the NGA;
(vi) Shipper's Request for Service meets Transporter's minimum daily quantity transportation requirements of 15,000 Mcf delivered to Transporter at any requested Point of Receipt and Point of Delivery except where the existing physical metering capabilities at a given Point of Receipt or Point of Delivery require a higher minimum volume;
(vii) Transporter shall not be required to accept gas at any Point of Receipt hereunder unless such gas meets the quality specifications set forth in Exhibit "A" hereof;
(viii) Transporter's provision of services to Shipper hereunder shall be performed in accordance with all requirements of this SOC; and
(ix) Transporter determines in its discretion that it has sufficient excess capacity to provide the requested service, or Transporter determines that it will have sufficient excess and/or incremental capacity to provide the requested service upon the completion, at Transporter's election, of the construction of additional facilities in accordance with Section 1(b)(iv) hereof. "Excess Capacity" shall be that capacity available from time to time through Transporter's existing facilities in excess of the capacity used by Transporter to provide the service described in Section 1(a) hereof.  
Section 2 - Authority for Service and Qualified Shippers
(a) Transportation services provided by Transporter pursuant to this SOC shall be rendered pursuant to Subpart C of Part 284 of the Commission's regulations and within the terms and conditions of NGPA Section 311(a)(2).
(b) If, in the opinion of Transporter, the qualified status of a Shipper or its transaction are in doubt, then Shipper must apply for and receive a declaratory order from the Commission, or successor agency thereto, affirming the qualifying status of the Shipper and its transaction prior to the commencement of transportation services by Transporter. In addition, Transporter shall not be required to transport for a Shipper unless Transporter is satisfied with the Shipper's financial position, using reasonable standards of creditworthiness consistently applied, as more fully described in Section 11 of Exhibit "C" of this SOC.
(c) Shipper shall obtain advance approval from Transporter before performing any act which would change either the nature of the service provided or the conditions pursuant to which service is provided. If Shipper does perform such an act, without the advance approval of Transporter, then Transporter may, in its discretion, terminate all affected Transportation Agreements between Transporter and Shipper and such termination shall be effective immediately with, at Transporter's option, any remaining nomination for the day cancelled.  
Section 3 - Available Capacity, Excess Capacity and Priority of Requests
(a) The receipt of gas by Transporter and its delivery by Transporter to or for the account of the Shipper shall be conditioned upon the existence of adequate capacity and delivery capability on Transporter's System as it exists at the time the receipt and delivery of gas are to be made. Because service provided hereunder is on a fully interruptible basis, Transporter retains the right to immediately decrease, temporarily suspend, or upon thirty (30) days written notice permanently discontinue the receipt and/or delivery of gas by terminating any Transportation Agreement pertaining to interruptible transportation service, to the extent, in Transporter's discretion, additional capacity is needed to render the higher priority service described in Section 1(a) hereof. Except to the extent waived by Transporter in a manner which does not unduly discriminate against any party, Transporter shall have no liability to lower priority shippers during periods of service interruption caused by the additional service needs of higher priority customers identified in Section 1(a) hereof.
(b) As Excess Capacity becomes available, Transporter will provide new open access transportation services to the Shipper which has agreed to pay the highest transportation rate for the available service. However, in no event shall the priority of service be based on a rate which is in excess of the maximum transportation rate Transporter is permitted to charge by federal or state law, rules or regulations. Should two or more Shippers have agreed to pay the same rate for new transportation service, then any new transportation services shall be allocated to the Shipper with the earliest initial receipt date under its Transportation Agreement with Transporter.  Should two or more potential shippers desire to purchase transportation capacity and each have agreed to pay the same rate for comparable service and neither have an existing Transportation Agreement with Transporter, then the available transportation capacity shall be allocated to the potential shipper submitting the earliest Request for Service to Transporter. Except as specifically provided herein, if Transporter receives between 8:00 a.m. and 5:00 p.m., C.S.T. or C.D.T. (whichever is applicable) ("C. T." herein) of any normal working day a Request for Service which complies with the requirements of Section 7 herein and the Request for Service is received on a calendar day that is before the calendar day in which other requests are received, such Request for Service will be deemed prior in time. The date determined herein to be the date upon which Transporter received such Shipper's Request for Service shall be deemed to be Shipper's "Priority Date." In the event more than one Request for Service which meets the requirements of Section 7 hereof is received by Transporter on the same calendar day between 8:00 a.m. and 5:00 p.m. C.T., such Requests for Service shall receive priority in the order in which Transporter received such Requests for Service. Requests that meet the requirements of Section 7 hereof and are received after 5:00 p.m. C.T. on any day shall be deemed received on the next normal working day between 8:00 a.m. and 5:00 p.m. C.T.
(c) Transporter reserves the right, during periods of capacity constraint, to establish separate prioritization queues for the various identifiable segments of Transporter's System and incremental capacity, including various combinations of Points of Receipt and Points of Delivery requested by Shipper; provided, however, such separate prioritization queues will follow the order of priority set forth in Sections 4 and 1(a) hereof.
(d) Within thirty (30) days of Transporter's entry of Shipper's Request for Service in Transporter's transportation log, Transporter shall notify Shipper in writing of its acceptance or rejection of such Request for Service based on the terms and provisions of this SOC. If Shipper's Request for Service is rejected for any reason, Shipper must file a completely new Request for Service, as described herein, if Shipper desires Transporter to consider any other transportation services.
(e) Shipper's Request for Service will be invalid if a Transportation Agreement has not been executed by Shipper within thirty (30) days of Transporter's written notice to Shipper of its acceptance of Shipper's Request for Service.
(f) In order to retain its Priority Date, a Shipper must commence deliveries to Transporter and Transporter must accept deliveries within sixty (60) days of the date the Transportation Agreement is executed by both parties. In the event deliveries have not commenced within such sixty (60) day period, then Transporter may, at its option, and upon ten (10) days' notice to Shipper, terminate the Transportation Agreement, and Shipper's Priority Date shall be vacated.
(g) Should Shipper and Transporter extend the term of a Transportation Agreement by written amendment, then for purposes of determining priority of service, the Agreement shall be treated as having the same initial receipt date or Priority Date, as applicable, as the original Transportation Agreement. However, new Transportation Agreements shall be subject to the standard priority of service provisions of this SOC.
(h) As required by Transporter in the operation of Transporter's System, Transporter shall have the right to interrupt without being held liable to Shipper or any other person, all or part of the volumes requested to be transported by a Shipper.  
Section 4 - Capacity Allocation, Prioritization and Interruption
(a) Transporter may obligate itself to transport, on an interruptible basis, more gas than there may be at times Excess Capacity to transport and deliver in its pipeline facilities. As such "overbooking" may from time to time reduce Transporter's ability to receive and deliver gas, Transporter shall receive and deliver gas on the basis described in Subsection (b) below, with no liability to any Shipper whose gas is transported on an interruptible basis.
(b) In the event periods of time occur when sufficient Excess Capacity does not exist in Transporter's existing facilities, or any portion thereof, as determined by Transporter, to simultaneously perform any or all requested services, Transporter shall perform services under this SOC as described in the system of priorities set out in Section 1(a) and Sections 3(a)-(c) hereof. A Request for Service in compliance with Section 7 hereof, which is accepted by Transporter in the form of a Transportation Agreement shall, with respect to day-to-day allocations of capacity, for the term of service so accepted, be unaffected by and shall have priority over subsequent Requests for Service offering to pay the same rate for comparable service unless Transporter determines that because of operating or other conditions affecting Transporter's System, or any portion thereof, such priority cannot be maintained. In such cases in which limited segments of Transporter's System are affected by adverse or unfavorable operating conditions and other segments are not so affected, Transporter may provide service of a lower priority where such lower priority service does not directly interrupt higher priority service.
(c) In the event Shipper requests Transporter to transport quantities of gas in excess of those maximum quantities defined in Shipper's Transportation Agreement, and Transporter elects to transport such quantities, such transportation shall be performed on a non-prioritized, fully interruptible basis.
(d) By twelve o'clock (12:00) p.m. C.T. at least five business Days prior to the beginning of each calendar month, Shipper or its duly authorized representative shall provide Transporter with schedules of quantities requested to be delivered at each Point of Receipt and redelivered at each Point of Delivery for the ensuing month. All pipeline capacity (up to the maximum quantities set out in Shipper's Transportation Agreement) for which Shipper fails to schedule deliveries or which Shipper fails to utilize may be allocated by Transporter to other Shippers for such month.  Unless otherwise agreed by the Transporter, Shipper shall notify Transporter by ten o'clock (10 :00) a.m. C.T. on the day prior to gas flow of any deviations from the schedules provided by Shipper. The failure of Shipper to comply with such schedules shall relieve Transporter of any obligation to perform transportation services. The monthly schedules and notices of deviations notwithstanding, at any given time in which sufficient capacity is unavailable to provide all services requested, Transporter shall rely on the system of priorities set forth in Section 1(a) above in allocating such services.
Section 5 - Delivery Obligation
Transporter shall deliver to Shipper at the Point of Delivery the equivalent number of MMBtus delivered to Transporter at the Point of Receipt, less the nominated quantity of gas retained for compressor fuel. Further, all gas condensate which collects in Transporter's System after Shipper's gas is delivered to Transporter at the Point of Receipt shall belong to Transporter and no compensation for such condensate shall be due Shipper.
Section 6 - Transportation Rates and Other Charges
For transportation services rendered in accordance with this SOC, Transporter shall have the right to discount below the maximum permissible rate as determined in accordance with the Commission's regulations implementing the NGPA. To the extent that it is legally permissible, Transporter shall in addition have the right to charge Shipper for the following:
(i) the costs of any additional facilities installed by Transporter to receive or deliver gas for the account of the Shipper;
(ii) any and all fees paid by Transporter to the Commission or other governmental authority having jurisdiction in connection with this transportation service;
(iii) any taxes assessed against gas which include, but are not limited to, gathering, occupation, production, severance, sales, first use, gross receipts, Btu or any other energy tax similar in nature or equivalent in effect which are now imposed or assessed against Transporter by any lawful authority as a result of transportation services described by this SOC; and
(iv)	Shipper's actual pro rata share of compressor fuel, line loss and gas lost and unaccounted for on Transporter's System.
Section 7 - Data Required for Transportation Service
Transporter will accept as valid only those Requests for Service, substantially in the form as that shown in Exhibit "E" attached hereto, which, in Transporter's judgment, are sufficiently specific with respect to the following information, and which contain all the information set forth below:
(a) the estimated maximum and average daily quantity to be delivered to Transporter and redelivered for the account of Shipper over the term of the Transportation Agreement at each requested Point of Receipt and Point of Delivery.
(b) Point of Receipt -
(i) A detailed description of the Point of Receipt where gas volumes are delivered by Shipper into Transporter's System.
(ii) The company name together with the name, address and telephone number of the designated representative of the entity delivering gas into Transporter's System.
(c) Point of Delivery -
(i)	A detailed description of the Point of Delivery where gas volumes are redelivered to Shipper from Transporter's System.
(ii)	The company name together with the name, address and telephone number of the designated representative of the entity to whom Transporter is to deliver gas from Transporter's System for the account of Shipper.
(d) Term of Service:
(i) The date service is requested to commence.
(ii) The date service is requested to terminate.
(e) Certification that the Shipper has the current contractual right to possession of the gas to be delivered to Transporter for transportation.
(f) Certification that Shipper has entered into all upstream and downstream transportation arrangements necessary for the receipt and delivery of gas pursuant to the Transportation Agreement.
(g) A concise description of the transportation arrangements and how such arrangements qualify as a bona fide Section 311(a)(2) transportation arrangement under the NGPA.
(h) Sufficient information for Transporter to determine, in its discretion, whether the gas Shipper proposes to have transported meets Transporter's minimum quality and pressure specifications.
Section 8 - Point of Receipt and Delivery
8.1	The "Point of Receipt" as referred to herein may be either a singular point or multiple points, which in Transporter's judgment are operationally available for receipt of gas by Transporter, where gas is delivered by Shipper, or for Shipper's account, into Transporter's System for transportation by Transporter. 
8.2	The "Point of Delivery" as referred to herein may be either a singular point or multiple points, which in Transporter's judgment are operationally available for delivery of Shipper's gas based upon its Point(s) of Receipt to Transporter, where gas is redelivered to Shipper, or for Shipper's account, from Transporter's System following transportation by Transporter. 
Section 9 - Balancing of Deliveries
9.1	The receipt and delivery of gas under this SOC shall be performed on an MMBtu basis.
9.2	All gas shall be delivered to Transporter at the Point of Receipt and shall be redelivered to Shipper at the Point of Delivery as nearly as possible at uniform hourly and daily rates of flow.
9.3	The parties recognize that because of dispatching and other gas receipt and delivery variables that a day-to-day balance of gas delivered to Transporter and redelivered to Shipper may not be possible due to the inability of the parties to precisely control receipts and deliveries of gas. Shipper shall endeavor to deliver at the Point of Receipt and Transporter shall endeavor to redeliver at the Point of Delivery each day equivalent quantities of gas less such quantities of required retainage (if any). 
9.4	Transporter shall not be required to accumulate transportation gas imbalances beyond such normal day-to-day imbalances described above. Transporter has no obligation to redeliver for the account of Shipper a greater quantity of gas than Transporter has received for the account of Shipper or to accept for the account of Shipper a greater quantity of gas than is being redelivered to Shipper on any day. Transporter shall have the right to (i) refuse to accept quantities of gas which are greater than quantities of gas which it redelivers to Shipper on any day, and (ii) refuse to redeliver to Shipper greater quantities of gas on any day than is delivered to Transporter by Shipper.
9.5	Unless expressly waived by Transporter, accumulated imbalances shall be eliminated in the month immediately following the month in which they occur ("make-up month"); provided however, that Transporter may at any time restrict or discontinue the receipt or delivery of gas under the Transportation Agreement in order to correct or prevent an imbalance.
9.6	In the event that Shipper, during any billing month, delivers or causes to be delivered to Transporter a total quantity of gas at the Point of Receipt, through no fault of Transporter, which is less than the total quantity of gas which Transporter redelivers to Shipper at the Point of Delivery, then Transporter may notify Shipper by the fifteenth (15th) day of the make-up month that an imbalance deficiency exists. Transporter may require Shipper to physically correct such imbalance deficiency during the make-up month. If such imbalance deficiency is not physically made up during the imbalance make-up month when requested by Transporter, except in such instances in which Transporter is unable to accept such volumes, and except to the extent waived by Transporter in a manner which does not unduly discriminate against any party, then the imbalance deficiency shall be "cashed-out" by Shipper paying Transporter an amount per MMBtu equal to the imbalance deficiency remaining at the end of the make-up month times one hundred ten percent (110% ) of the average WAHA Index listed under the schedule entitled Daily Price Survey appearing in the Platt's Gas Daily publication (such index hereinafter referred to as the "WAHA Index") per MMBtu, calculated on a saturated basis for the month in which the imbalance occurred, plus the applicable transportation fee; provided, however, Shipper shall not be required to pay Transporter in the event the imbalance deficiency for any billing month is a result of Shipper correcting an imbalance excess from a prior month.
9.7	In the event that Shipper, during any billing month, delivers or causes to be delivered to Transporter a total quantity of gas at the Point of Receipt, through no fault of Transporter, which is in excess of the total quantity of gas which Transporter redelivers to Shipper at the Point of Delivery, then Transporter may notify Shipper by the fifteenth (15th) day of the make-up month that such imbalance excess exists. Transporter may require Shipper to physically correct such imbalance excess during the make-up month. If such imbalance excess is not physically made up during the imbalance makeup month when requested by Transporter, except in such instances in which Transporter could not deliver such volumes, and except to the extent waived by Transporter in a manner which does not unduly discriminate against any party, then the imbalance excess shall be "cashed-out" by Transporter paying Shipper an amount determined by multiplying Shipper's imbalance excess remaining at the end of the make-up month times ninety per cent (90%) of the WAHA Index for the month in which the imbalance occurred. As a result of such payment, title to such paid for gas volumes shall transfer to Transporter.
9.8	In the event a Transportation Agreement is terminated, any remaining imbalance shall be "cashed-out" by Shipper paying Transporter or Transporter paying Shipper (as established by Section 9.6 or 9.7) an amount determined by multiplying the imbalance remaining at the termination of the contract by one hundred percent (100%) of the WAHA Index for the month in which the imbalance occurred.
Section 10 - Miscellaneous
10.1	Transporter, in its discretion, reserves the right to waive any provision of this SOC in a non-discriminatory manner with the exception of the maximum rate provisions indicated in Part IV.  No waiver by Transporter of any one or more defaults by Shipper in the performance of any provisions of the Transportation Agreement shall operate or be construed as a waiver of any future default or defaults, whether of a like or different character.
10.2	Any party, which shall succeed by the purchase, merger or consolidation of Shipper shall be entitled to the rights and shall be subject to the obligations under the Transportation Agreement. Shipper may assign its rights under the Transportation Agreement to a business entity with which it is affiliated. However, no assignment of the Transportation Agreement or any of the rights or obligations thereunder to a non-affiliate shall be made by Shipper or its successor unless it first obtains the written consent of Transporter to the assignment, and such consent shall not be unreasonably withheld. Any attempted assignment in violation of this provision shall be void.
10.3	The Transportation Agreement as supplemented by this SOC shall contain the entire contract between the parties and there are no other oral promises, agreements or warranties affecting the Transportation Agreement or the SOC and their performance.
10.4	This SOC and the Transportation Agreement shall be construed in accordance with the laws of the State of Texas.
10.5	The Transportation Agreement shall remain in force and effect as herein provided and, except by the execution of written amendments, shall continue in full force and effect throughout its term.


IV.
EFFECTIVE RATE
      The maximum rate for interruptible transportation service shall be $0.035 per MMBtu.  Shipper shall also be charged its actual pro rata share of compressor fuel, line loss and gas lost and unaccounted for on Transporter's System.  
      In addition to the rate reflected above, to the extent it is legally permissible, Acacia reserves the right to charge the shipper other costs set forth in this SOC.  




EXHIBIT "A"
QUALITY OF GAS
A.	Transporter shall not be obligated to accept gas at the Point of Receipt hereunder unless such gas meets the following requirements as to quality:
(1) Water: The gas shall not have a water content in excess of seven (7) pounds of water per million (1,000,000) cubic feet of gas measured at a pressure base of fourteen and sixty-five hundredths (14.65) pounds per square inch and at a temperature of sixty (60) degrees Fahrenheit.
(2) Hydrogen Sulphide: The gas shall not contain more than 1/4 grain of hydrogen sulphide per 100 cubic feet as determined by quantitative test.
(3) Total Sulphur: The gas shall not contain more than 5 grains of total sulphur per 100 cubic feet as determined by quantitative test.
(4) Temperature: The gas shall not have a temperature of less than forty (40) degrees Fahrenheit nor more than one hundred thirty (130) degrees Fahrenheit.
(5) Carbon Dioxide: The gas shall not contain carbon dioxide in excess of two percent (2%) by volume of carbon dioxide.
(6) Oxygen: The gas shall not contain more than five one-hundredths of one percent by volume of oxygen.
(7) Nitrogen: The gas shall not contain more than two percent (2%) by volume of nitrogen.
(8) Nonhydrocarbons: The gas shall not contain more than four percent (4%) by volume of total nonhydrocarbon gases. Nonhydrocarbons shall include, but not be limited to, carbon dioxide, nitrogen, sulphur and hydrogen sulphide.
(9) Objectionable Liquids and Solids and Dilution: The gas shall (i) be free of objectionable liquids and solids, and (ii) be commercially free from dust, gums, gum- forming constituents, gasoline, water or other liquids or solid matter which might become separated from the gas in the course of transportation through pipelines.
(10) Heating Value: The gas shall not contain a gross heating value of less than 950 Btu nor more than 1050 Btu per cubic foot of gas on an as delivered basis.
(11) Hydrocarbon Dewpoint:  The hydrocarbon dewpoint of the gas shall not be greater than 40 Fahrenheit at receipt pressure.
B.	If any gas delivered by Shipper or for Shippers account hereunder shall fail to conform at any time to any of the quality specifications set forth herein, then Transporter shall inform Shipper of the deficiency and thereupon Transporter may, at its option, refuse to accept gas into its pipeline at the Point of Receipt pending correction by Shipper.

EXHIBIT "B"
DEFINITIONS
Except as otherwise specified, the following terms as used in the Statement of Operating Conditions and Transportation Agreement will be construed to have the following scope and meaning:
1.1	The term "Transporter" shall mean Acacia Natural Gas, L.L.C.
1.2	The term "Shipper" shall mean the party for whom Transporter transports gas pursuant to terms of a separate Transportation Agreement between Transporter and Shipper.
1.3	The terms "Gas" or "gas" shall mean natural gas produced from gas wells, casinghead gas produced with oil, and residue gas resulting from processing both casinghead gas and gas well gas.
1.4	The terms "Day" or "day" shall mean the period beginning at 9:00 a.m., local time, on one calendar day and ending at 9:00 a.m., local time, on the following calendar day.
1.5 	The terms "Month" or "month" shall mean the period beginning at 9:00 am., local time, on the first day of the calendar month and ending at 9:00 am., local time, on the first day on the next succeeding calendar month.
1.6	The terms "Year" or "year" shall mean a period of twelve (12) consecutive months beginning at 9:00 a.m., local time, on the first day of a calendar month and ending at 9:00 a.m., local time, on the same day of each succeeding twelve (12) month period during the term hereof.
1.7	The term "cubic foot of gas" shall mean the volume of gas contained in one (1) cubic foot of space at a standard pressure of fourteen and sixty-five hundredths (14.65) psia and standard temperature of sixty (60) degrees Fahrenheit and under standard gravitational force.
1.8	The term "Mcf" shall mean one thousand (1,000) cubic feet.
1.9	The term "British Thermal Unit", hereinafter referred to as "Btu", shall mean the amount of heat required to raise the temperature of one (1) pound of water one (1) degree Fahrenheit from fifty-eight and five-tenths (58.5) degrees Fahrenheit to fifty-nine and five-tenths (59.5) degrees Fahrenheit.
1.10	The term "MMBtu" shall mean a quantity of gas having a gross heating value of one million (1,000,000) British Thermal Units.
1.11	The term "Gross Heating Value" shall mean the number of Btus produced by the complete combustion, at constant pressure, of the amount of gas which would occupy a volume of one (1) cubic foot at a temperature of sixty (60) degrees Fahrenheit, if saturated with water vapor and under a pressure of 14.65 psia with air of the same temperature and pressure as the gas and when the products of combustion are cooled to the initial temperature of the gas and air and when the water formed by combustion is condensed to the liquid state. The gross heating value of the gas thus obtained shall be expressed on the measurement basis set forth in this SOC (which such measurement basis is 14.65 psia) and shall be adjusted from a saturated basis to the average moisture content of the gas actually delivered; provided, however, if the gas as delivered contains seven (7) pounds of water or less per one million (1,000,000) cubic feet, such gas shall be deemed to be dry.
1.12	The term "psig" shall mean pounds per square inch gauge. 
1.13	The term "psia" shall mean pounds per square inch absolute.
1.14	The terms "Point of Receipt" and "Receipt Point" shall mean collectively the point(s) of receipt of gas hereunder by or for the account of Shipper to Transporter.
1.15	The terms "Point of Delivery" and "Delivery Point" shall mean the point of delivery of gas hereunder by Transporter to Shipper or for the account of Shipper.
1.16	The term "Request for Service" shall mean that certain written request for transportation services more fully described in Section 7 of the SOC.
1.17	The term "Commission" or "FERC" shall mean the Federal Energy Regulatory Commission.
1.18	The term "SOC" shall mean Statement of Operating Conditions to which this Exhibit is attached.
1 .19	The term "Transportation Agreement" shall mean that certain written agreement or agreements which sets the terms and conditions pursuant to which Transporter agrees to provide transportation services for Shipper as set forth therein.
1.20	The term "Transporter's System" shall mean that portion of Transporter's pipeline and appurtenant facilities known as the Bridgeport Gas Header System and additional facilities as developed/designated in the future.
1.21	The term "firm" shall mean that Shipper has reserved the use or partial use of facilities or capacity, and subject to other provisions of this Statement, including all provisions related to allocations and curtailment, that capacity is not subject to claim by another Shipper.  
1.22	The term "interruptible" shall mean that transportation of Shipper's gas is provided such that Transporter, in its discretion, shall have the absolute and unfettered right to interrupt, curtail or suspend the receipt, transportation, or delivery of gas hereunder at any time and from time to time without Transporter having any liability to Shipper by reason thereof.

EXHIBIT "C"
GENERAL TERMS AND CONDITIONS
Section 1 - Operating Conditions
1.1	Shipper shall make all necessary arrangements with other parties at (or upstream of) the Point of Receipt where it tenders gas to Transporter for transportation and at (or downstream of) the Point of Delivery where it receives gas from Transporter. Transporter's Gas Control and Volume Control (scheduling) Departments shall be notified of all such arrangements at least two business Days prior to Shipper's initial gas nomination.
1.2	Transporter shall not be required to provide service by displacement if to do so would require Transporter to purchase new quantities of gas from any source or to increase or decrease purchases from existing suppliers in order to create capacity to perform such service.
1.3	Transporter shall not be required to perform service in the event any or all facilities necessary to render the requested service do not exist at the time the Request for Service is made pursuant to Section 7 of the SOC. Except as otherwise provided, Transporter will not be obligated to maintain and operate facilities used solely for the receipt, transportation, and delivery of gas as described by this SOC.
1.4	Transporter shall not be required to perform services if said performance would affect or increase operational requirements of Transporter with any suppliers or customers including, but not limited to, obligations of Transporter with regard to drainage or with regard to statutory or contractual ratable takes of gas, nor will Transporter be required to transport gas if, in Transporter's discretion, such transportation would be detrimental to its operations in any way.
1.5	Should Transporter be unable to continue transportation services for any Shipper because of operational problems in or affecting Transporter's System, Transporter may, upon ten (10) days written notice to Shipper, terminate the Transportation Agreement.
1.6	Transporter shall not be required to perform service for or on behalf of any Shipper that is in arrears with Transporter with respect to any charge, rate or fee; provided, however, if the amount in arrears pertains to a bona fide dispute, including but not limited to cessation of receipts and deliveries due to force majeure claims, Shipper shall be entitled to continue to receive service if Shipper pays all charges, rates or fees so in dispute to Transporter pending the resolution thereof.

1.7	In the event Transporter and Shipper agree to add a new Point of Receipt or Point of Delivery, any such request shall be considered a new Request for Service. Such Requests for Service to add additional Points of Receipt shall be individually subject to all the terms and conditions of this SOC.  In the event the parties agree to add a new Point of Receipt or Point of Delivery, a written agreement or amendment reflecting such addition shall be executed by Transporter and Shipper.
1.8	Transporter shall not be required to continue to perform service for any Shipper that fails to meet or comply with any and all of the terms of this SOC and with the terms of the Transportation Agreement between Transporter and Shipper.
Section 2 - Measurement and Tests
2.1	The unit of volume for measurement of Gas received and delivered hereunder is one cubic foot of gas at a base temperature of 60 degrees Fahrenheit and at a pressure of 14.65 psia, or as provided in the Natural Resources Code of the State of Texas (Sections 91.051 through 91.062 or its successor provisions).
2.2	All orifice measurement facilities hereunder will be installed, operated and volumes calculated in accordance with the standards approved by the American National Standards Institute of 1985, and prescribed in the Gas Measurement committee of the American Gas Association ("AGA") Report Number 3 (ANSI/API 2530, First Edition), and AGA Report No. 8 as it is now and from time to time may be revised, amended or supplemented. If Transporter elects to use ultrasonic measurement, such equipment shall be installed, operated and volumes calculated in accordance with the standards approved by the American National Standards Institute and/or AGA for ultrasonic measurement of natural gas.
2.3	Transporter will arrange for the ownership and operation of the measuring stations located at the Points of Receipt and the Points of Delivery. The changing of charts and the calibration thereof will be the responsibility of Transporter. The verification and adjusting of meters will be done or arranged for by Transporter at least once annually in compliance with Section 2.9 below.
2.4	Shipper has the right to be present at the time of any installing, reading, cleaning, changing, repairing, inspecting, testing, calibrating or adjusting done in connection with the equipment used in measuring gas hereunder. The records from such measuring equipment will remain the property of Transporter or its representative, but upon request, Transporter will submit to Shipper the records and charts, together with calculations therefrom, subject to their return within 15 days after receipt thereof. Transporter will retain the charts for a period of two years from the date such charts are prepared. Transporter will give Shipper sufficient notice in advance of all tests so that Shipper may, at its election, be present in person or by its representative to observe adjustments, if any, which are made.
2.5	For the purposes of measurement and meter calibration, the atmospheric (barometric) pressure will be assumed to be 14.4 psia.
2.6	The temperature of the gas received or delivered hereunder will be determined by the continuous use of a recording thermometer. The temperature recorded each Day, during periods of flow only, will be used in computing the gas volume for that Day.
2.7	The specific gravity of the gas delivered hereunder will be determined by means of a recording gravitometer. The specific gravity recorded each Day, during periods of flow only, will be used in computing the gas volume for that Day. In the event a recording gravitometer is not installed, the specific gravity of the gas hereunder will be determined at one Month intervals, by means that are approved by the AGA as set forth in its Gas Measurement Manual or by fractional analysis by the use of a spot, continuous sample or on-line chromatograph taken at the Point of Receipt and the Point of Delivery. Fractional analysis will be on a real gas basis in accordance with GPA 2 172-96, as it is now and from time to time may be revised, amended or supplemented. Specific gravities so determined will be used in calculating gas deliveries hereunder for all succeeding Months until that Month in which a new sample is taken.
2.8	The Gross Heating Value of the Gas delivered hereunder will be determined by an on line chromatograph, in which case the arithmetical average of the hourly Gross Heating Value recorded each Day will be considered as the heat content of the gas received or delivered during such Day, or if a recording on-line chromatograph is not available, at one Month intervals by the use of a spot or continuous sample taken at the Point of Receipt and the Point of Delivery, in which case the Gross Heating Value of the gas hereunder for all succeeding Months until a new sample is taken will be assumed to be the Gross Heating Value determined from the sample. In either case, the value of the physical constants for the gas compounds and the procedure for determining the Gross Heating Value of the gas will be on a real basis in accordance with GPA 2172-96, as it now and from time to time may be revised, amended or supplemented.
2.9	If, upon any test, the metering equipment (including gravitometers, chromatographs and thermometers) at any point is found to be inaccurate in the aggregate by two percent or more, registration thereof and any payment based upon such registrations will be corrected at the rate of such inaccuracy for any period of inaccuracy which is definitely known or agreed upon, or if not known or agreed upon, then for a period extending back one-half of the time elapsed since the Day last calibrated not to exceed 15 Days. Following any test, any metering equipment found to be inaccurate to any degree will be adjusted immediately to measure accurately. If, for any reason, any meter is out of service or out of repair so that the quantity of gas delivered or redelivered through such meter cannot be ascertained or computed from the readings thereof, the quantity of gas so delivered during the period such meter is out of service or out of repair will be estimated and agreed upon by the parties hereto on the basis of the best available data, using the first of the following methods that is feasible:
(a) by using the registration of any check measuring equipment of the other Party, installed and registering correctly; or

(b) by correcting the error if the percentage of error is ascertainable by calibration, test or mathematical calculation; or

(c) by estimating the quantity of receipts or deliveries from preceding periods under similar conditions when the meter was registering accurately.
Section 3 - Regulatory Authority
3.1	Shipper warrants that all gas delivered to Transporter for transportation hereunder shall be eligible for transportation in interstate commerce under applicable rules, regulations, or orders of the Commission and that the service which it requests Transporter to perform qualifies as a bona fide transportation service under Section 311(a)(2) of the NGPA and related rules and regulations and will continue to qualify under such section for the entire term of the Transportation Agreement. Shipper specifically warrants that the requested service meets the "on behalf of test" for transportation by intrastate pipeline under Section 311 (a)(2) and applicable sections of the Commission's regulations. The applicable test is set forth in Part II of the SOC.
3.2	The Transportation Agreement will be subject to all valid rules and regulations of duly constituted governmental authorities having jurisdiction or control over the parties thereto, including without limitation the provisions of Subpart C of Part 284 of the Commission's regulations and Section 311(a)(2) of the NGPA.
3.3	Transporter and Shipper shall proceed with diligence in the preparation, filing, and prosecution of such applications, filings, and notices with federal or other governmental bodies, or both, as may be required for the initiation and continuation of the transportation service which is the subject of the Transportation Agreement. Each party shall fully support and cooperate with the other when necessary with regard to any regulatory filing or application and shall promptly provide the other party with a copy of all filings, notices, approvals, and authorizations.
Section 4 - Pressure
4.1	All gas delivered under a Transportation Agreement by Shipper or Shipper's Agent shall be delivered at pressures sufficient to enter Transporter's System at the pressures maintained therein from time to time. Further, Transporter shall not be obligated to receive gas at pressures exceeding the maximum allowable operating pressure (MAOP) prescribed under any law or governmental regulation.
4.2	Transporter shall deliver gas at the Point of Delivery under the Transportation Agreement at such pressures as may exist from time to time in Transporter's System.
4.3	Transporter shall not be obligated to change its operations or provide compression beyond its then existing normal capacity to facilitate the receipt or delivery of gas under the Transportation Agreement.
Section 5 - Term
5.1	The Transportation Agreement will be effective for a negotiated term mutually agreeable to Shipper and Transporter.
5.2	If during the term of the Transportation Agreement, any governmental body shall take any action which, in Transporter's opinion, results in the imposition, upon the transportation service provided for therein, of unduly burdensome or unacceptable obligations or jurisdiction, other than as existing on the effective date of the Transportation Agreement, then Transporter shall have the right to terminate the Transportation Agreement upon giving one (1) day prior notice to Shipper. In such event, Shipper shall be obligated to pay all funds owed Transporter for gas which was actually transported.
5.3	If an imbalance exists on the date of termination, then the term of the Transportation Agreement will be extended for a reasonable period of time necessary to allow the party whose deliveries or redeliveries are in arrears to correct the imbalance.
Section 6 - Billing and Payment
6.1	On or before the last day of each month, Transporter shall render to Shipper a statement which shall indicate the volume of gas delivered and redelivered under the Transportation Agreement during the preceding month in accordance with the measurement, computations, price and reimbursement provisions provided for in the Transportation Agreement. Shipper shall pay Transporter by bank wire transfer or Automated Clearing House, as directed by Transporter, on or before ten (10) days after the receipt of Transporter's statement.
6.2	Should Shipper fail to pay all of the amount of any bill as herein provided when such amount is due, interest on the unpaid portion of the bill shall accrue and be payable at the rate of one percent (1.0%) per month from the due date until the date of payment; provided, however, such rate shall never exceed the maximum interest rate allowed by applicable law. If such failure to pay continues for thirty (30) days after payment is due, Transporter, in addition to any other remedy it may have under its Transportation Agreement with Shipper, may suspend the further receipt and delivery of gas until such amount is paid; provided, however, that if Shipper in good faith shall dispute the amount of any such bill or part thereof and shall pay to Transporter such amounts as it concedes to be correct, and, at any time thereafter within thirty (30) days of a demand made by Transporter, shall furnish good and sufficient corporate undertaking acceptable to Transporter guaranteeing payment to Transporter of the amount ultimately found to be due after a final determination, which may be reached either by agreement or judgment of court, as the case may be, then Transporter shall not be entitled to suspend further delivery of gas, unless and until default is made in the conditions of such bond.
6.3	In the event an error is discovered in the amount billed in any statement rendered by Transporter, such error shall be adjusted within thirty (30) days of the determination thereof, provided the claim therefor shall have been made within twenty-four (24) months from the date of such statement error. However, no provision hereof is intended to modify any statute of limitations provision promulgated by any applicable judicial or regulatory agency.
6.4	Transporter and Shipper shall each have the right to examine at all reasonable times the books, records, and charts of the other to the extent necessary to verify or audit the accuracy of any statement, bill, chart or computation made or pursuant to the Transportation Agreement.
6.5	Transporter and Shipper shall each preserve for a period of at least two (2) years all test data, meter records, charts and other similar records. However, no provision hereof is intended to modify any statute of limitations provision promulgated by statute or administrative regulation.
Section 7 - Possession of Gas and Warranties
7.1	Possession of Gas - As between Shipper and Transporter, Shipper shall be deemed to be in exclusive control and possession of the gas deliverable hereunder and responsible for any damage or injury caused thereby until the same shall have been delivered to Transporter at the Point of Receipt. After receipt of gas by Shipper, and until delivery by Transporter to Shipper or for Shipper's account at the Point of Delivery Transporter shall be deemed to be in exclusive control and possession thereof and responsible for any injury or damage caused thereby. With the exception of natural gas liquids as set forth in Section 5 of the SOC and the "cash-out" provisions of Section 9 of the SOC, the parties understand and acknowledge that title to all gas transported under the Transportation Agreement shall at all times remain vested in Shipper. The Point of Receipt under the Transportation Agreement shall be deemed to be located at the upstream flange of Transporter's meter station in which gas is measured. The Point of Delivery will be located at the downstream flange of Transporter's meter station in which gas is measured.
7.2	Warranty of Title - Shipper warrants that, at the time of receipt of gas hereunder, it will have good title to or the right to deliver such gas, and that such gas shall be free and clear of all liens, encumbrances and any adverse claims whatsoever; and Shipper agrees, with respect to the gas delivered by it, to indemnify Transporter and hold Transporter harmless from all suits, actions, debts, accounts, damages, costs (including attorneys' fees), losses and expenses arising from or out of adverse claims of any or all persons to or against said gas.
7.3	Shipper represents and warrants to Transporter that gas which Shipper delivers or receives under the Transportation Agreement has not been nor shall it be sold, consumed, gathered or otherwise utilized in interstate commerce at any point upstream of the Point of Receipt or downstream of the Point of Delivery, nor shall it be commingled at any point upstream of the Point of Receipt or downstream of the Point of Delivery with other gas which is or may be sold, consumed, gathered or otherwise utilized in interstate commerce in such a manner which will subject the Transportation Agreement with Transporter or Transporter's System, or any portion thereof, to the jurisdiction of the Commission or any successor governmental authority pursuant to the NGA. Shipper agrees to indemnify and hold Transporter harmless from and against any and all suits, actions, damages, costs, losses and expenses sustained by Transporter relative to any breach by Shipper of the covenants of this Section 7.3.
Section 8 - Odorization of Gas
Shipper, at its sole cost, risk and expense, shall take all precautions required by law regarding the odorization of the gas after its delivery by Transporter and prior to its use and Shipper shall provide whatever notice and warning is necessary and required by law to all employees, agents, or representatives of Shipper, as well as to all third persons who may reasonably be expected to incur harm from any accidents involving the use of the gas. Transporter expressly advises Shipper that unless otherwise required by governmental rule or regulation gas redelivered at the Point of Delivery will not be odorized by Transporter.
Section 9 - Indemnification
9.1	Transporter hereby agrees to protect, defend, indemnify, hold harmless and reimburse Shipper for any and all liability and damages assumed under the Transportation Agreement by Transporter, including claims, suits, judgments, attorneys' fees, court costs and all other expenses incurred by Transporter.
9.2	Shipper hereby agrees to protect, defend, indemnify, hold harmless and reimburse Transporter for any and all liability and damages assumed under the Transportation Agreement by Shipper, including claims, suits, judgments, attorneys' fees, court costs and all other expenses incurred by Shipper.
9.3	Notwithstanding the above, in no event shall either party be liable for the gross negligence or willful misconduct of the other party nor shall either party be responsible to the other for punitive, treble, multiple, consequential, incidental or similar damages.
Section 10 - Force Majeure
10.1	The term "force majeure" as used herein means acts and events not within the control of the party claiming suspension and shall cover acts of God, including
but not limited to epidemics, landslides, lightning, storms, floods, and washouts; labor strikes, lockouts or other industrial disturbances; delays in obtaining necessary governmental authorizations; acts of the public enemy including wars, blockades, insurrections or riots; arrests, acts, rules, regulations and restraints of a government or governmental body; civil disturbances; explosions, delays in obtaining pipeline rights-of-way, easements, permits, materials, machinery or equipment for any reason; breakage or accidents to machinery or lines of pipe; freezing of pipe or pipeline facilities or any necessary modifications to pipeline facilities associated therewith; failure of third party transporters to receive gas, and any other cause, whether of the kind herein enumerated or otherwise, not within the control of the party claiming suspension and which, by the exercise of reasonable diligence at reasonable cost, such party is unable to overcome.
10.2	It is understood and agreed that the settlement of strikes or lockouts shall be entirely within the discretion of the party having the difficulty, and the above requirements that any force majeure shall be remedied with all reasonable dispatch shall not require the settlement of strikes or lockouts by acceding to the demands of the opposing party when such course is inadvisable in the discretion of the party having the difficulty.
10.3	In the event either party is rendered unable by force majeure to itself or a necessary third party to carry out in whole or in part its obligations under the Transportation Agreement, it is agreed that on such party giving notice and reasonably full particulars of such force majeure in writing or by telegraph to the other party as soon as possible after commencement of the occurrence of the cause relied on, then the obligations of the party giving such notice, other than its obligation to make payments due hereunder, so far as they are affected by such force majeure, shall be suspended during the continuance of any inability so caused but for no longer period, and such cause shall, as far as possible, be remedied with all reasonable dispatch.
Section 11 - Financial Viability of Shipper
Transporter shall not be required to perform or continue to perform service on behalf of any Shipper that (i) has applied for bankruptcy under any chapter of the Bankruptcy Code, (ii) has failed to make prompt and full payment to Transporter when due for transportation services rendered by Transporter, or (iii) fails, in Transporter's judgment, to demonstrate creditworthiness; provided, however, such Shipper may receive service if said Shipper prepays for such service, or upon fifteen (15) days' notice from Transporter, furnishes sufficient security, as determined by Transporter in its discretion, of a continuing nature, and in an amount equal to the cost of performing the transportation service requested by or provided to Shipper for a four (4) month period.
Section 12 - Termination for Default
If either Transporter or Shipper fail to perform any of the covenants or obligations imposed upon them under the Transportation Agreement or this SOC, then in such event the party not in default ("non-defaulting party") may elect to terminate the Transportation Agreement by proceeding as follows: The non-defaulting party shall cause a written notice to be served on the party in default ("party in default") stating specifically the reason for terminating the Transportation Agreement and declaring it to be the intention of the non-defaulting party to terminate such agreement; thereupon the party in default will have thirty (30) days after receipt of such notice in which to correct and remedy the breach specified in the notice from the non-defaulting party, and if within said period of thirty (30) days the party in default does correct and remedy said breach and fully indemnify the non-defaulting party for any and all consequences of such breach, by a good and sufficient indemnity bond or otherwise, then such notice shall be withdrawn and the Transportation Agreement will continue in full force and effect. In case the party in default does not correct and remedy the cause or causes or does not indemnify the non- defaulting party from any and all consequences of such breach, within such thirty (30) day period, the Transportation Agreement shall be deemed null and void from and after the expiration of said thirty (30) day period, so long as the notice of termination has not been withdrawn prior thereto. Any termination of the Transportation Agreement shall be without prejudice to the right of Transporter to collect any amounts due for natural gas redelivered prior to the time of termination, and will be without prejudice to the right of Shipper to receive any gas that it previously delivered to Transporter but which has not been redelivered prior to termination of the Transportation Agreement; subject however, to the payment of the rates set forth in the Transportation Agreement for such transportation service, and without waiver of any remedy to which the non-defaulting party may be entitled for violations of the Transportation Agreement.
Section 13 - Dispute Resolution
Any controversy between the parties arising under this SOC or a Transportation Agreement and not resolved within a reasonable time shall be resolved pursuant to the Dispute Resolution Procedures attached hereto as Exhibit "D" and incorporated herein.
EXHIBIT "D"
DISPUTE RESOLUTION PROCEDURES
A.	Negotiation -- In the event that any dispute may arise related to the SOC or the Transportation Agreement, the parties shall first seek to resolve any disputes by negotiation between senior executives who have authority to settle the controversy.
1.	Notification. When a party believes there is a dispute relating to the SOC or the Transportation Agreement, the party will give the other party written notice of the dispute providing sufficient detail for the recipient to understand the provider's position.
2. Meeting Among Senior Executives. The senior executives shall meet at a mutually acceptable time and place within 30 days after the receipt of the notice to exchange relevant information and to attempt to resolve the dispute. The executives may involve a third-party mediator, if they so choose. If a senior executive intends to be accompanied at a meeting by legal counsel, the other party's senior executive shall be given at least three business days' notice of such intention and may also be accompanied by legal counsel.
3. Confidentiality. All negotiations are confidential and shall be treated as compromise and settlement negotiations under the United States Federal Rules of Evidence.
4. Receipt of notice of the dispute shall toll the running of all statutes of limitation relating to the matters in dispute, which statutes shall remain suspended for 45 days.
B.	Arbitration -- If a dispute has not been resolved within 45 days after receipt of the original notice of a dispute, then either party may provide the other party with notice to initiate arbitration proceedings, which proceedings shall be conducted as provided herein below.
1.	Scope/Final and Binding. Any dispute, controversy or claim, of any and every kind or type, whether based on contract, tort, statute, regulations, or otherwise, arising out of, connected with, or relating in any way to the SOC or the Transportation Agreement, the relationship of the parties, the obligations of the parties or the operations carried out under the SOC or the Transportation Agreement, including without limitations, any dispute as to the existence, validity, construction, interpretation, negotiations, performance, nonperformance, breach, termination, or enforceability of the SOC or the Transportation Agreement, shall be settled through final and binding arbitration, it being the intention of the parties that this is a broad form arbitration agreement designed to encompass all possible disputes among the parties relating to the SOC or the Transportation Agreement. Initiation of arbitration shall toll the running of all statutes of limitation relating to the matters in dispute.
2.	Institutional Arbitration. The arbitration shall be conducted in accordance with the Commercial Arbitration Rules of the American Arbitration Association ("AAA") as in effect on the date of commencement of the arbitration proceeding.
3.	Number of Arbitrators. If the amount in dispute involves less than $1 million, exclusive of interest and costs, then the arbitration shall be conducted and finally settled by a sole arbitrator. If the amount in controversy, exclusive of interest and costs, is $1 million or more, if the amount in dispute is unknown, or if relief other than damages is sought, then the arbitration shall be conducted and finally settled by three (3) arbitrators.
4.	Method of Selecting Arbitrators. If the arbitration is to be conducted by a sole arbitrator, then the arbitrator will be jointly selected by the parties. If the parties fail to agree on the arbitrator within 30 days after the initiation of the arbitration, then the AAA shall appoint the arbitrator. If the arbitration is to be conducted by three (3) arbitrators, each party shall within 15 days after initiation of the arbitration select one arbitrator, and these two arbitrators shall select a third presiding arbitrator. If the two party-appointed arbitrators fail to agree on the third arbitrator within 15 days after the appointment of the later of the two, then the third arbitrator shall be appointed by the AAA.
5.	Place of Arbitration. Unless otherwise agreed by all parties to the arbitration, the situs of the arbitration under the SOC or the Transportation Agreement shall be Dallas, Texas.
6.	Qualifications and Conduct of the Arbitrators. All arbitrators shall be and remain at all times wholly impartial and shall provide the parties with a statement that they can and shall decide the case impartially.
7.	Interim Measures. The arbitrators, or in an emergency the presiding arbitrator acting alone in the event one or more of the other arbitrators are unable to be involved in a timely fashion, may grant interim measures including injunctions, attachments and conservation orders in appropriate circumstances, which measures the parties agree may be immediately enforced by the arbitrators or by a court of competent jurisdiction. Notwithstanding the requirement for negotiation, prior to the constitution of the arbitration tribunal and thereafter as necessary to enforce the arbitrators' rulings or in the absence of the jurisdiction of the arbitrators to rule on interim measures in a given jurisdiction, any party may apply to a court of competent jurisdiction for interim measure, and the parties agree that seeking and obtaining such measures shall not waive the right to arbitration. Furthermore, notwithstanding the above provisions regarding negotiation, if either party deems that time is of the essence in resolving the dispute, it may initiate arbitration and seek interim measures, as provided herein, and then comply with the requirements for negotiations as long as they are fully completed before the commencement of the final hearing on the merits in the arbitration proceeding.
8.	Waiver of Appeals. To the extent permitted by law, any right to appeal from or to cause a review of any arbitral award by any court is hereby waived by the parties.
9.	Costs and Attorneys' Fees. The arbitral tribunal is authorized to award costs and attorneys' fees or allocate them between the parties, and the costs of the arbitration proceedings, including attorneys' fees, shall be borne in the manner determined by the arbitral tribunal.
10.	Interest. The award may include interest from the date of any breach or violation of the SOC or the Transportation Agreement, as determined by the arbitral award, and from the date of the award until paid in full. Interest shall be awarded at the London Inter-Bank Offering Rate (LIBOR) plus 2%.
11	Punitive Damages. Penal, punitive, treble, multiple, consequential, incidental or similar damages may not be recovered or awarded.

EXHIBIT "E"
ACACIA NATURAL GAS, L.L.C.
Request for Services
Page 1
Send Request to:	Acacia Natural Gas, L.L.C.

1722 Routh Street, Suite 1300
Dallas, Texas 75201
Attention:		Commercial Services
Facsimile (214) 953-9794
The following information, as applicable, should be included in Shipper's request for service.
INFORMATION REQUIRED FOR ALL SERVICES
SHIPPER
PERSON REQUESTING SERVICE
(Complete only if different from Shipper)
____________________________________________
Company Name
____________________________________________
Address (including street address for overnight deliveries)
____________________________________________
City			State		Zip
____________________________________________
Phone			 E-mail
____________________________________________
Officer and Title (Signatory to Contracts)
State of Incorporation: ____________________________________
____________________________________________
Name/Title
____________________________________________
Company Name
____________________________________________
Address
____________________________________________
City			State		Zip
____________________________________________
Phone			E-mail

PARTY AUTHORIZED TO SUBMIT NOMINATIONS AND/OR RECEIVE GENERAL NOTICES
____________________________________________
Name/Title
____________________________________________
Company Name
____________________________________________
Address
____________________________________________
City			State		Zip
____________________________________________
Phone			E-mail
INVOICES AND STATEMENTS
____________________________________________
Name/Title
____________________________________________
Company Name
____________________________________________
Address
____________________________________________
City			State		Zip
24-HOUR CONTACT

_______________________________________________________	_________________________________________________
Dispatcher Name						Address
______________________________________________________	___________________________________________________
Phone			E-Mail				City			State		Zip

ACACIA NATURAL GAS, L.L.C.
Request for Services
Page 2
INFORMATION REQURIED FOR ALL SERVICES (continued)
Shipper is:	____________End User	______________Marketer		______________Producer
	____________LDC	______________Intrastate		______________Interstate
	____________Other	Specifiy________________________________________________
Are new/modified facilities required?		Yes___________________	No_________________
If yes, please describe, and provide, if required peak day and annual volumes to be transported: ____________________________________________________________________________________________
REQUESTED FORM OF SERVICE:	Gathering ___________	Intrastate Transportation ______________
NGPA Section 311 Transportation ____________Designate "On behalf of" Entity(ies) _________________________________
*If LDC/Intrastate pipeline company will not be executing the Service Agreement, Shipper must provide an acceptable "on behalf of" letter or representation to Transporter consistent with current regulatory requirements.
Shipper must submit a complete credit application in the form provided for in Transporter's Statement of Operating Conditions.  Transporter shall have no obligation to accept Shipper's request for service or to perform service if Shipper has not qualified under Transporter's credit policies.
Shipper shall provide, in writing, such other information as is required to comply with regulatory reporting and/or filing requirments,
Shipper or Shipper's agent by its signature, certifies to Transporter (1) that it has good title to the Gas or a current contractual right to acquire good title or full right to deliver all gas delivered or caused to be delivered, and (2) that it has entered into all necessary arrangements to assure that upstream and downstream transportation will be in place prior to the commencement of the requested service.
Shipper and/or Shipper's agent by its signature, certifies that the information herein is complete and accurate to the best of its knowledge, information and belief.
SHIPPER					OR
By:_________________________________________
Title:________________________________________
Signature:____________________________________
SHIPPER'S AGENT
By:_________________________________________
Title:________________________________________
Signature:____________________________________
Indicate service being requested and complete appropriate Section.
________________ Interruptible Transporation Service (Rate Schedule IT), Section 1




ACACIA NATURAL GAS, L.L.C.
Request for Services
Page 3
SECTION 1 - RATE SCHEDULE IT [Interrruptible Transportation Service]
New Service: ______________________________	Amendment to Existing Service:____________________
Contract Date:___________________________________
Contract Number:________________________________
TERM:	Date Service to commence:_________________________________
Date Service will terminate:_________________________________
(Month to Month Evergreen provision is suggested)
QUANTITIES:	Maximum Contract Quantity ___________________________MMBtu/D
RECEIPT AND DELIVERY POINTS*:
Receipt Points:		Physical Receipt Points which in Transporter's judgment are operationally available. 
Delivery Points:	 Physical Delivery Points which in Transporter's judgment are operationally available for delivery of Shipper's gas based upon its Points of Receipt.
*Rate Schedule IT Shippers have access to physical Receipt Points and Delivery Points which are operationally available in the Transporter's judgement through the nomination process.  If Shipper wants certain points reflected on its Transportation Agreement, please specify.
Unless Shipper designates otherwise, Shipper's signature on its request shall constitute its agreement to execute a Transportation Agreement as provided in Transporter's Statement of Operating Conditions and to comply with the terms and conditions of Transporter's Statement of Operating Conditions in the event that Transporter accepts its request.





ii


21

A-1




B-3



C-5



D-2



E-5</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>2297</filing_id>
      <filing_title>Amended Statement of Operating Conditions</filing_title>
      <filing_type>1270</filing_type>
      <associated_filing_id>2245</associated_filing_id>
      <associated_record_id>2</associated_record_id>
      <associated_option_code>A</associated_option_code>
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2022-10-01</current_effective_date>
      <ferc_order_date>2022-12-06</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
  </ferc_filing_data>
</Document>