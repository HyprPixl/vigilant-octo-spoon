<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Document xmlns="http://ferc.gov/etariffExport.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ferc_filing_data>
    <schema_version>2</schema_version>
    <company_id>C002871</company_id>
    <lead_applicant_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
    <tariff_id>9</tariff_id>
    <tariff_title>Statement of Operating Conditions</tariff_title>
    <tariff_export_date>2025-09-16T19:51Z</tariff_export_date>
    <export_schema_version>2</export_schema_version>
    <record_data>
      <record_id>1</record_id>
      <option_code>A</option_code>
      <record_title>Section 1.0</record_title>
      <record_content_desc>SOC</record_content_desc>
      <record_version_num>7.1.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>8388608</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2025-01-08</proposed_effective_date>
      <priority_order>1000100000</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>?UNITED STATES OF AMERICA
BEFORE THE
FEDERAL ENERGY REGULATORY COMMISSION
Operating Statement of Liberty Utilities (Midstates Natural Gas) Corp. d/b/a Liberty Utilities
under 18 C.F.R. Section 284.224

Table of Contents (continued)

Page
Section 											      Page
Section 1	Definitions.	1
Section 2	Services.	2
Section 3	Facilities.	6
Section 4	Rates and Adjustments to Rates.	7
Section 5	Regulatory Requirements.	8
Section 6	Pressures.	9
Section 7	Measurement.	9
Section 8	Quality.	9
Section 9	Billing, Accounting, Taxes and Reports.	9
Section 10	Possession and Odorization of Gas.	10
Section 11	Warranty.	10
Section 12	Government Regulations.	11
Section 13	Force Majeure.	11
Section 14	Notices.	12
Section 15	Creditworthiness.	13
Section 16	Miscellaneous.	13

ii

UNITED STATES OF AMERICA
BEFORE THE
FEDERAL ENERGY REGULATORY COMMISSION

Operating Statement of Liberty Utilities (Midstates Natural Gas) Corp. d/b/a Liberty Utilities
under 18 C.F.R. Section 284.224
This Operating Statement describes how Liberty Utilities (Midstates Natural Gas) Corp. d/b/a Liberty Utilities (“Liberty Midstates” or “Transporter”), a natural gas local distribution company, provides interstate firm and interruptible transportation services through the Missouri natural gas transmission facilities of Liberty Midstates described herein to qualifying shippers, on a non-discriminatory basis, pursuant to 18 C.F.R. §284.224 of the Federal Energy Regulatory Commission’s (“FERC’s”) rules and regulations.
Liberty Midstates reserves the right not to offer or commence any service, or to discontinue any interruptible service, where, in Liberty Midstates’ reasonable discretion, any impairment of intrastate firm service could result.  Liberty Midstates also reserves the right to modify this Operating Statement and its rates as it may deem necessary and appropriate at any time in the future.
Section 1 Definitions.
1.1 The term “Btu” shall mean British Thermal Unit, and the term “MMBtu” shall mean one million (1,000,000) Btus.
1.2 The term “Business Day” shall mean a normal business day, and regular hours of business on such days, as normally associated with the days Monday through Friday of each week, inclusive, but excluding any federal holidays.
1.3 A “cubic foot of gas” for the purpose of measurement of the gas delivered hereunder is the amount of gas necessary to fill a cubic foot of space at an absolute pressure base of fourteen and seventy-three hundredths pounds per square inch (14.73) and at a temperature of sixty (60) degrees Fahrenheit.
1.4 The term “Ccf” shall mean one hundred (100) cubic feet of gas.
1.5 The term “day” shall mean a period of twenty-four (24) consecutive hours beginning and ending at nine o’clock a.m. (9:00 a.m.), Central Clock Time (“CCT”), or such other period consisting of twenty-four (24) consecutive hours as the parties may agree upon.
1.6 The term “Delivery Point” shall mean the point or points where Transporter shall deliver gas to a shipper.
1.7 The term “Facilities” shall mean Liberty Midstates’ designated Missouri intrastate natural gas transmission facilities, as described herein and in its related blanket certificate application filed under 18 C.F.R. § 284.224, which are capable of providing firm and interruptible natural gas transportation service between point(s) of interconnection with interstate natural gas pipelines in Missouri and the border crossing facilities of SourceGas Arkansas Inc. (“SourceGas”) at the Arkansas/Missouri border.
1.8 The term “gas” shall mean natural gas as produced in its natural state that meets the quality standards contained in these General Terms and Conditions.
1.9 The term “Gas Transportation Agreement” shall mean the written agreement between Transporter and any Shipper pursuant to which Services may be provided hereunder, the form of which is prescribed by these General Terms and Conditions.
1.10 The term “Maximum Daily Quantity” or “MDQ” shall mean the maximum volume of gas that the Transporter will accept from Shipper on any day for a Service offered hereunder.
1.11 The term “Mcf” shall mean one thousand (1,000) cubic feet of gas.
1.12 The term “month” shall mean a period beginning on the first day of a calendar month and extending to the first day of the next following calendar month.
1.13 The term “Receipt Point” shall mean the designated point or points where Transporter shall receive gas from Shipper.
1.14 The term “Services” shall mean interruptible and firm transportation service, as each may be offered to Shipper hereunder from time to time under Transporter’s blanket certificate.
1.15 The term “Shipper” shall mean an eligible party electing and subsequently having the necessary authorization of Transporter to use any of the Services offered hereunder.
1.16 The term “Taxes” shall mean any tax (other than ad valorem, income or excess profit taxes), license, fee or charge not included in the cost of service used to derive the maximum rates hereunder and which is levied, assessed or made by any governmental authority on the gas itself or on the act, right or privilege of producing, severing, gathering, storing, transporting, handling, selling or delivering gas and which is measured by the volume, value, or sales price of gas subject to a transaction
1.17 The term “thermally equivalent” shall mean an equal amount of heating value, expressed in MMBtus and measured under specifications and conditions contained hereunder.
1.18 The term “Transportation” shall mean Transporter’s receipt of gas from a Shipper at a Receipt Point and Transporter’s delivery of that gas to a Delivery Point,
1.19 The term “Transporter” shall mean Liberty Midstates, but nothing herein shall prevent Liberty Midstates from designating an agent to act on its behalf to handle the necessary service scheduling, billing, credit checks and any notices in connection with service hereunder.
Section 2 Services.
2.1 Services.
Subject to Transporter’s determination that it has available capacity, Transporter will offer, in specified volumes, firm or interruptible transportation service to Shippers.  All Transportation gas received by Liberty Midstates shall be accounted for on a daily basis and must be scheduled by a Shipper for redelivery to a designated Delivery Point.  Except for firm Service provided to Shippers hereunder, service hereunder shall be interruptible in nature and subordinate to any and all firm services supplied by Transporter’s intrastate natural gas distribution utility operations, including the management of Transporter’s system to support its intrastate firm sales and transportation services.
Shipper’s right to firm or interruptible Services shall not extend beyond the term of any Gas Transportation Agreement between Shipper and Transporter unless both Transporter and Shipper expressly extend the term of such agreement in writing.  Notwithstanding anything herein to the contrary, Transporter may negotiate extension rights, such as rollover, evergreen and right of first refusal provisions, with Shippers on a non-discriminatory basis.  Further, Shipper’s rights to Services may be limited to the use of specific Receipt and Delivery Points.
2.2 Firm Transportation Service.
Consistent with the provisions hereof and any terms of service reflected in a Gas Transportation Agreement between Shipper and Transporter, Transporter may provide firm transportation service to a Shipper, from any designated Receipt Point to any designated Delivery Point.  Such service shall only be made available by Transporter if it would not impair Transporter’s ability to provide all firm services in connection with its intrastate natural gas distribution utility operations, including the management of Transporter’s system to support its intrastate firm sales and transportation services.  Shipper shall be responsible for arranging all upstream (or downstream) interstate pipeline transportation service necessary or attendant to the provision of firm Transportation service hereunder.
Requests by an eligible Shipper to subscribe to firm transportation service hereunder, where sufficient firm capacity to provide such service exists, shall be authorized on the basis of the highest net present value per MMBtu of total non-fuel charges to be assessed for the requested service over its term.  All Shippers hereunder, prior to the receipt of any service hereunder shall execute a Gas Transportation Agreement with Transporter.  All firm service provided hereunder shall be subject to all the applicable terms and conditions hereof, as well as all the terms and conditions of the Gas Transportation Agreement between Transporter and Shipper.
Any volumes of gas received by a firm Shipper in excess of its transportation entitlements established pursuant to the Shipper’s Gas Transportation Agreement with Transporter, to the extent Shipper has been authorized by Transporter prior to the delivery of such excess volumes to receive them, shall be treated as if such volumes were delivered through interruptible transportation service hereunder.
2.2.1 Flow Through of Upstream No Notice Service.
Transporter shall also provide to its firm transportation Shippers, as a supplemental service at no additional cost, flow through of interstate pipeline no notice service delivered to Transporter at eligible receipt points directly connected to upstream interstate pipelines.  This flow through of interstate pipeline no notice service shall only be provided where the following conditions are met: (1) Shipper requests and Transporter agrees to provide such service in the written Gas Transportation Agreement between Shipper and Transporter; (2) Shipper provides Transporter with sufficient evidence of Shipper’s entitlement to receive no notice service from an upstream interstate pipeline; (3) Transporter has in place an operational balancing agreement, in form and substance satisfactory to Transporter, with the directly connecting upstream interstate pipeline covering no notice transactions; (4) Shipper complies with the no notice flow through nomination procedures established by Transporter; and (5) Shipper properly nominates the delivery of volumes from the connecting interstate pipeline at eligible receipt points on Transporter’s Facilities.  All flow through no notice service is expressly subject to Transporter’s ability to provide such service without threatening the operational integrity of its system or its ability to provide other firm interstate or intrastate services.  Nothing contained herein shall require or obligate Transporter to provide no notice service using its own Facilities which are not sufficient to provide no notice service.
2.2.2 Scheduling and Curtailment of Firm Service
During the term of any firm Gas Transportation Agreement between a Shipper and Transporter, and upon the proper scheduling of such service by a Shipper, firm Transportation Service to Shipper shall be scheduled and curtailed on an equal basis with other firm uses of transportation, based on allocating such capacity which is available on a pro rata basis among all firm interstate Shippers hereunder and all uses by Transporter of transportation for and to support firm intrastate services.  This equal treatment shall apply to both the scheduling of volumes and any curtailment of volumes once scheduled.  Subject to this pro rata treatment, Transporter may (i) refuse to schedule volumes if so prevented by scheduled maintenance, occurrences which reduce Transporter’s capacity, and (ii) curtail scheduled volumes due to any event of force majeure.  A Shipper shall nominate volumes for scheduling by executing the forms and following the procedures specified by Transporter.
2.3 Interruptible Transportation Service.
Consistent with the provisions hereof and any terms of service reflected in a Gas Transportation Agreement between Shipper and Transporter, Shipper may engage Transporter to transport gas hereunder, on an interruptible basis, from any designated Receipt Point to any designated Delivery Point.  All such transportation service shall be recorded and accounted for on a daily basis.
Shipper shall be responsible for arranging all upstream (or downstream) interstate pipeline transportation service necessary or attendant to the provision of interruptible Service hereunder.
2.3.1 Authorization and Scheduling of Interruptible Service.
All requests to schedule interruptible transportation service, subject to limits imposed by Transporter to limit such transportation and Transporter’s right to refuse to schedule any discounted interruptible volumes, shall be authorized, on a non-discriminatory basis in order of the highest rates (at or below the maximum rates established hereunder) agreed to be paid for such service.  In the event of any ties with respect to the rates agreed to be paid for such service, and in the case where Transporter is unable to provide all of the service requested at such rates, then volumes shall be scheduled on the basis of the date and time of receipt by Transporter of the Interruptible Transportation Request Form, as determined by Transporter.  All service authorizations hereunder shall be granted solely on the condition that Transporter has determined that it has adequate capacity to provide Shipper the service requested.
2.3.2 Service Subject to Interruption
Transporter will authorize service to Shipper only if within Transporter’s best operating judgment and discretion, interruptible service is not otherwise expected to prevent Transporter from meeting all of its firm service obligations to intrastate natural gas distribution customers or customers receiving firm transportation service hereunder, including Transporter’s system management needs.  In the event that interruptible service has already commenced and Transporter learns that the continued furnishing of interruptible service may prevent Transporter from meeting all of its service obligations hereunder or as an intrastate natural gas distribution utility, then Transporter may, at its reasonable discretion, exercised on a non-discriminatory basis and upon giving at least one hour prior notice to Shipper, interrupt the continuation of any or all of the interruptible Service hereunder.  For the purposes hereof, any interruption of service shall mean the cancellation or cessation of any scheduled daily gas transportation receipt or delivery until further notice.
2.4 Eligibility.
Shipper shall be eligible for Services hereunder upon satisfying all the terms and conditions specified herein as well as the terms and conditions set forth in any Gas Transportation Agreement between Shipper and Transporter for Services hereunder.
2.5 Requests for Service.
All requests to schedule Services hereunder may be made verbally on an initial basis, but must be reduced to writing (utilizing forms specified by Transporter) and delivered to Transporter prior to the scheduled flow of gas requested therein.  This requirement may be satisfied by e-mail transmission by a Shipper to Transporter of an appropriate nomination/scheduling form, signed by an authorized representative of Shipper and setting forth the details of any service request or nomination.  Transporter may require daily service nominations or changes in daily service nominations from Shipper via e-mail transmission of a form provided for that purpose.  No such daily service nominations or changes in daily service nominations may exceed the overall maximum service limits prescribed by this Operating Statement or the terms of any Gas Transportation Agreement between Shipper and Transporter related to Services hereunder.  Transporter reserves the right, upon notice to Shipper, to record any or all telephone calls relating to requests for service and to utilize such recordings to resolve any disputes arising from Shipper’s requests for service.
Requests for service shall be made directly to Transporter or to its duly authorized agent.  All requests for service must be received by Transporter or its agent in sufficient time to allow Transporter to finalize its nominations and confirmations in compliance with the advance notice requirements of any transporting interstate natural gas pipeline being relied upon to move gas to Transporter’s Facilities.
Each request for service shall provide all information required by Transporter, including (1) the rates agreed upon for the Service(s) to be provided, (2) the maximum daily quantity or quantities to be transported, (3) the day and dates when such service is expected to commence and to terminate, (4) the point(s) at which Transporter is expected to receive and/or make deliveries of such gas, and (5) any other information required by Transporter.
2.6 Processing of Service Requests.
Transporter shall verbally respond to each request to schedule service hereunder, either (1) that Shipper is authorized to commence the service(s) requested, or (2) that Transporter cannot provide such service(s).  Transporter, or its duly authorized agent, shall use reasonable best efforts to respond verbally to all such service requests as soon as possible, and shall follow such response with written confirmation either by e-mail transmission or by U.S. Mail.
Nothing contained herein shall be construed to mean that any Services other than those established pursuant to the terms of any Gas Transportation Agreement between Shipper and Transporter shall be provided to Shipper, or that Transporter has any obligation to provide Services under any conditions which, in Transporter’s sole discretion, may jeopardize Transporter’s ability to render adequate and reliable services to its firm intrastate natural gas sales and transportation customers.  Once a transaction is scheduled and confirmed hereunder, Transporter agrees to supply such service subject to the terms hereof, any operational flow orders or curtailment of any upstream pipeline serving the Facilities, or other similar event, which might reasonably prevent Transporter from furnishing such service.
Section 3 Facilities.
Transporter shall not be obligated to construct, add, alter or modify any facilities to receive and/or deliver gas, or to provide any of the Services hereunder.
Section 4 Rates and Adjustments to Rates.
4.1 Rates.
The rate for service hereunder shall be a rate not in excess of the maximum rate nor less than the minimum rate set forth in the Statement of Rates of these General Terms and Conditions, as converted to MMBtu.  If Transporter elects to discount the rate, Transporter shall adjust the rate on a non-discriminatory basis within this range, as specified within the transportation contract.  Transporter will charge the maximum rate unless otherwise agreed to in writing with Shipper.
In addition, a percentage adjustment for lost and unaccounted for gas (“L&amp;UFG”) shall be made to the volumes of gas received by Transporter from the Interconnecting Pipeline(s) for Shipper’s account.  The volumes of gas deliverable to Shipper shall be reduced by two (2) percent, as specified in the Natural Gas Transportation Service Rate Schedule of Transporter’s Missouri Tariff.
In addition, a monthly infrastructure system replacement surcharge (“ISRS”) shall be collected.  The ISRS is designed to recover the costs associated with Transporter’s Missouri eligible infrastructure replacements.  In addition to the other charges provided for in the Company’s tariff, a monthly ISRS, as set forth in the statement of rates, shall be added to Shipper’s bill for service.
4.2 Adjustments to Rates.
Transporter reserves the right to seek authorization from the Commission to increase, decrease, or restructure the maximum rates (including market-based rates) charged for Services hereunder, including any associated charge(s) for fuel, to assure Transporter’s right to charge and collect “fair and equitable” rates under the Commission’s applicable rules and regulations.  Nothing herein contained shall be construed to deny any Shipper any rights which it may have under the Commission’s rules and regulations, including the right to participate fully in rate proceedings by intervention or  otherwise, or to contest changes in rates charged and/or these General Terms and Conditions.
4.3 Imbalances -- Fees.
If Transporter delivers any gas to Shipper pursuant to a transaction scheduled in accordance with the procedures set forth herein and established by Transporter, and it is subsequently discovered that Shipper did not previously provide such gas to Transporter, or no such gas was supplied to Transporter by any other party on Shipper’s behalf, then Shipper shall reimburse Transporter for such under-delivery of gas at a price equal to the greater of the actual cost of any required replacement gas or an amount based upon the highest index price for Ozark Gas Transmission (“Ozark”) for any week beginning in the calendar month in which the under-delivery occurred as published in Natural Gas Week multiplied by the percentage set forth below, plus applicable pipeline fuel and transportation charges.
Under-Delivery	% of Index
0% up to 5%	100%
5% up to 10%	115%
10% up to 15%	130%
15% up to 20%	140%
20% and over	150%
Transporter may also assess a daily scheduling fee for any daily transportation imbalance in excess of 10% of Shipper’s daily confirmed nomination plus no-notice service if applicable.  The fee will be calculated as follows: ([annual storage demand charges/MDWQ]/365) + (annual storage capacity charges/total capacity) + average injection and withdrawal costs.  Provided, however, Transporter, at its reasonable discretion, exercised on a not-unduly discriminatory basis but on a non-discriminatory basis, may allow Shipper to resolve any imbalances by (a) making up such imbalances in kind during a period and at a rate specified by Transporter, or by (b) paying Transporter an agreed-upon rate.
If Transporter delivers any gas to Shipper pursuant to a transaction scheduled in accordance with the procedures set forth herein and established by Transporter, and it is subsequently discovered that Shipper previously provided a greater quantity of gas to Transporter, or a greater quantity of gas was supplied to Transporter by any other party on Shipper’s behalf, then Transporter shall reimburse Shipper for the cost of any such over-delivery of gas, the cost of which shall be based on a price equal to the lowest index price for Ozark for any week beginning in the calendar month in which the over-delivery occurred as published in Natural Gas Week multiplied by the percentage set forth below, plus applicable pipeline fuel and transportation charges.
Over-Delivery	% of Index
0% up to 5%	100%
5% up to 10%	85%
10% up to 15%	70%
15% up to 20%	60%
20% and over	50%
4.4 Other Services.
Transporter may at any time elect to provide services other than those prescribed herein, including firm and/or interruptible transportation services at rate(s) different from the maximum rate or rates prescribed and approved herein, and nothing herein shall obligate or require Transporter to offer such other service, or to continue to offer such other service if ever implemented.  Any such services shall be identified on the applicable rate sheet.
Section 5 Regulatory Requirements.
Any and all transactions hereunder must be interstate service eligible under, and shall be fully subject to, the applicable requirements of Section 284.224 of the Commission’s rules and regulations, and Shipper’s request for service shall constitute its warranty that Shipper satisfies such requirements, and Transporter shall have the right to request information from Shipper to verify its eligibility thereunder.
Section 6 Pressures.
Transporter shall operate its Facilities at pressures which will normally permit the receipt and delivery of volumes scheduled hereunder.  Under no circumstances shall Transporter be obligated to receive or deliver gas hereunder at pressures exceeding the maximum allowable operating pressures prescribed under any applicable governmental regulations; nor shall Transporter be required to make any physical deliveries which its existing Facilities cannot accommodate.
Section 7 Measurement.
All readings and registrations with respect to daily receipt and delivery volumes and average daily heating values shall be as for times nominated and recorded by the gas measuring equipment of the applicable interstate natural gas pipeline to determine thermally equivalent volumes relating to the services supplied hereunder.
Section 8 Quality.
All natural gas received by or delivered from Transporter shall meet the quality specifications of the interstate natural gas pipeline delivering such gas to Transporter.
Section 9 Billing, Accounting, Taxes and Reports.
9.1 Billing.
No later than the tenth (10th) day of each month, Transporter shall render an invoice to Shipper receiving service hereunder during the immediately preceding month.  Such invoice shall identify the actual daily volumes associated with each such service transaction.  In the event that actual volumes are not available to facilitate the rendering of such monthly statement by the tenth (10th) day of each month, Transporter shall use estimated volumes for that month.  Estimated volumes shall be subject to correction on the next monthly invoice.
9.2 Payment.
On or before the twentieth (20th) day of any month in which an invoice is rendered, Shipper shall pay to Transporter, at the address shown in any Gas Transportation Agreement between Shipper and Transporter related to Service hereunder, or by any other means mutually agreed to in writing by Shipper and Transporter, the amount due Transporter for services hereunder; provided, however, for any delay by Transporter in issuing a monthly billing statement beyond the tenth (10th) day of any month, then Shipper shall have a corresponding number of days beyond the twentieth (20th) day of the month to make such payment.  If Shipper fails to pay the amount of any bill, or any portion thereof, invoiced hereunder by the prescribed due date, then interest on any unpaid portion of the bill shall accrue at the lesser of the maximum lawful interest rate or the interest rate prescribed under the Commission’s regulations.
If Shipper in good faith shall dispute the amount of any bill, Shipper shall nevertheless pay to Transporter the amount of such bill, and thereafter and until final determination which may be reached either by agreement or by judgment of the courts, as may be the case, Transporter shall be obligated to refund any principal amount either agreed upon or otherwise found by the courts to be overpaid by the Shipper, and such refund shall additionally include interest from the date of such overpayment to the date of refund computed at the lesser of the maximum lawful interest rate or the interest rate prescribed under the Commission’s regulations.  However, Transporter shall have the right to terminate service to any Shipper hereunder for any continued non-payment of any invoices rendered by Transporter.
9.3 Disputes and Adjustments for Billing Errors.
All statements, billings and payments, other than those related to Taxes, shall be final unless questioned within twenty-four (24) months from the date of such billing, statement or payment.  Any error so discovered as a result of a timely claim shall be corrected within thirty (30) days of the determination thereof.
9.4 Tax Reimbursement.
Shipper agrees to reimburse Transporter for all Taxes that may be levied upon and/or be paid by Transporter, with respect to the Services performed hereunder.  Shipper shall be responsible for establishing any exemption from Taxes and shall provide satisfactory evidence of such exemption to Transporter.
9.5 Charges or Fees for Report Filings.
Shipper agrees to reimburse Transporter for any and all filing fees or related charges incurred by Transporter for the filing of any report or reports with any governmental agency or other body, with respect to Service provided to the Shipper hereunder.
Section 10 Possession and Odorization of Gas.
Shipper shall be in exclusive control and possession of all gas, and responsible for any damage, loss or injury caused thereby, until such gas is delivered to and received by Transporter.  After delivery of gas by Shipper to Transporter, and until subsequent redelivery of such gas by Transporter to Shipper or to any other designated Shipper, Transporter shall be in exclusive control and possession thereof and responsible for any injury, loss or damage caused thereby.  All gas delivered to Transporter’s facilities for service hereunder shall be odorized.
Section 11 Warranty.
Shipper warrants that it qualifies for service hereunder, that it will have and maintain good marketable title or the right to deliver for a third-party owning good and marketable title to all gas tendered for Service, and that such gas shall be free and clear of all liens and adverse claims.  Shipper further agrees, with respect to gas delivered by it for Service, to fully indemnify Transporter against any and all suits, actions, debts, accounts, damages, costs (including  attorney’s fees), losses and expenses arising from or out of any incorrect information provided by any Shipper to Transporter or any adverse claims of any and all persons to or against said gas.  Shipper shall fully indemnify Transporter against all losses, costs, demands, damages, assessments or other claims brought by any party against Transporter with respect to volumes as to which Transporter provides Service.
Section 12 Government Regulations.
All of the provisions of these General Terms and Conditions are hereby expressly made subject to all present and future applicable federal or state laws, orders, rules and regulations of governmental authorities having jurisdiction.  Except as otherwise provided herein, in the event any provision of these General Terms and Conditions is found to be inconsistent with or contrary to any law, order, rule or regulation, the latter shall be deemed to control and these General Terms and Conditions, to the extent possible, shall be regarded as modified accordingly and as so modified shall continue in full force and effect.
The parties hereto recognize that Transporter has entered into transactions hereunder based on its good faith understanding that all acts, obligations, and services performed or to be performed by Transporter hereunder, and the charges therefor, are exempt from the regulation of the Commission or any successor federal governmental authority, except as provided by Section 284.224 of the FERC’s regulations.  Transporter reserves the right to terminate immediately the offering or furnishing of any service hereunder if, in Transporter’s sole discretion, any governmental act occurs which would require Transporter to offer or furnish service hereunder or which would cause any impairment in Transporter’s ability to furnish or continue any service hereunder, or require Transporter to offer additional services.
Section 13 Force Majeure.
In the event either Shipper or Transporter is unable, wholly or in part, by reason of an event of force majeure, to carry out its obligations hereunder (other than Shipper’s obligation to make payment of any amounts due and payable to Transporter), it is agreed that such party shall give notice and reasonably full particulars of such event of force majeure, by telephone followed with written confirmation by e-mail transmission, to the other party within a reasonable time after the occurrence of such event, and that the obligations of the party giving such notice, so far as they are affected by such event of force majeure, shall be suspended and canceled upon notice of such force majeure event.  Notwithstanding the suspension of service, the party that suffers the force majeure shall make reasonable efforts to remedy the causes and mitigate the effects thereof with reasonable dispatch.
The term “force majeure,” as used herein, shall mean acts of God; strikes, lockouts, or other industrial disturbances; conditions arising from a change in governmental laws, orders, rules, or regulations; acts of public enemy; wars; blockades; insurrections; riots; epidemics; landslides; lightning; earthquakes; fires; storms; floods; washouts; arrests and restraints of governments and people; civil disturbances; explosions; unplanned breakage or accident to machinery or lines of pipe; freezing of wells or lines of pipe; partial or entire failure of wells, processing, or gasification facilities; interruption of failures of any upstream or downstream pipelines relied upon to effectuate any Service; and any other causes, whether of the kind herein enumerated or otherwise, not within the control of the party claiming suspension, and which by exercise of due diligence, such party is unable to prevent or overcome.  It is understood and agreed that the settlement of strikes or lockouts shall be entirely within the claiming party’s discretion and that the above requirement that any event of force majeure shall be remedied with all reasonable dispatch shall not require the settlement of strikes or lockouts by acceding to the demands of the opposing party when such course is inadvisable in the reasonable discretion of the claiming party.
Section 14 Notices.
Except as may be otherwise provided herein, any communications, notice, request, demand, statement, or bill which any party may desire to give to any other party shall be in writing and mailed by first class mail, or conveyed by e-mail from an authorized representative, to the address of the party intended to receive the same, as the case may be, at the address each respective party has designated.  Any such correspondence directed to Liberty Midstates shall be addressed as follows:
Joshua Tilbury
Director, Energy Procurement
Liberty Utilities
15 Buttrick Road
Londonderry, NH 03053
Telephone: 603-339-6997
Regulatory.Information@libertyutilities.com
  
With regard to any communication addressed to Transporter, and requiring any action including the authorization of service hereunder, Transporter shall have no obligation to investigate or interpret such communications any differently than as contained on the face of such communication or notice.  Any routine communications, including monthly billing statements, may be mailed first class mail or conveyed by e-mail transmission.  Either Shipper or Transporter may change the address, e-mail or contact person designated to receive notices hereunder by notice to the other party in accordance with the procedures set forth above.
Section 15 Creditworthiness.
Transporter shall not be required to commence service or, subject to the following, to continue to provide service hereunder under the following circumstances: (1) when requested by Transporter to demonstrate creditworthiness, Shipper fails to do so in Transporter’s reasonable judgment, including for the purposes of continuing service, Shipper’s previous payment practices and changes thereto; (2) Shipper is or has become insolvent; or (3) Shipper has applied for bankruptcy under Chapter 11 of the Bankruptcy Code, or is subject to substantially equivalent proceedings under State or Federal law.  In the event of the occurrence of one or more of these events, nothing herein shall prevent Transporter and Shipper from entering into any mutually agreed upon arrangement or alternative method to establish Shipper’s initial or continuing creditworthiness and/or to secure payment of any amounts due.
Section 16 Miscellaneous.
16.1 Headings and Subheadings. Any headings and subheadings contained herein are used solely for convenience and do not constitute a part of the agreement between the parties hereto, nor should they be used to aid in any manner in construing such agreement between the parties.
16.2 Entire Agreement. These General Terms and Conditions as well as the terms of any Gas Transportation Agreement between Shipper and Transporter with respect to Service hereunder shall constitute the entire agreement of the parties as to the matters contained therein, and there are no oral promises, agreement or warranties affecting same.
16.3 Non-Waiver. The waiver of any default or right to require performance hereunder or under any Gas Transportation Agreement between Shipper and Transporter with respect to Service hereunder shall not operate as a waiver of any future default or right to require performance, whether of like or different character or nature.
16.4 Jurisdiction and Venue. The parties agree that the provision of service hereunder and any Gas Transportation Agreements between Shipper and Transporter with respect to Service hereunder shall be governed by and construed in accordance with the laws of the State of New York, and that the venue for resolving any dispute with respect to such service or agreement shall be in New York County, New York.
16.5 Delegation of Administrative Activities.  Transporter reserves the right at any time to assign or otherwise delegate to any independent third party or a duly authorized agent any or all of the administrative duties associated with Transporter’s Services hereunder.  Such administrative duties may generally include, but are not necessarily be limited to, the determination of service eligibility for Shipper hereunder, including creditworthiness, the processing of any service requests or nominations of service by Shipper hereunder, the authorization of such service requests or nominations, the posting of any rate discounts within the minimum and maximum rate levels allowable hereunder including any negotiations with Shipper regarding the applicable rates to be charged within such minimum and maximum allowable limits, the periodic monthly billing associated with the services supplied hereunder, and the collection of all amounts due and payable to Transporter by Shipper.  No such delegation shall relieve Transporter of its obligations, if any, to Shipper.
16.6 Confidentiality. The terms of any Gas Transportation Agreement between Shipper and Transporter with respect to Service hereunder shall be kept confidential by the parties, including any agent to which administrative activities are delegated by Transporter, and shall not otherwise be exploited commercially, except with prior written consent or as compelled by law.  If Transporter or Shipper is legally compelled to disclose confidential information, it will notify the other party prior to making such disclosures and take all available steps to limit such disclosures.  Notwithstanding the above, the restrictions stated above shall not apply to any data and documentation: which was generally available to the public at the time of disclosure or at any time thereafter; which was already known by the receiving party at the time of disclosure; which is independently developed by a party; or which becomes known to a party from a source other than the disclosing party without breach of any contractual obligation.

14</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>42</filing_id>
      <filing_title>Supplement Filing - Revised Statement of Rates  (PR25-35-)</filing_title>
      <filing_type>1000</filing_type>
      <associated_filing_id>41</associated_filing_id>
      <associated_record_id>1</associated_record_id>
      <associated_option_code>A</associated_option_code>
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2025-01-08</current_effective_date>
      <ferc_order_date>2025-05-13</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
    <record_data>
      <record_id>2</record_id>
      <option_code>A</option_code>
      <record_title>Section 2.0</record_title>
      <record_content_desc>Currently Effective Rates</record_content_desc>
      <record_version_num>6.1.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>83886080</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2025-01-08</proposed_effective_date>
      <priority_order>1000100000</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data>e1xydGYxXGFuc2lcYW5zaWNwZzEyNTJcdWMwXHN0c2hmZGJjaDNcc3RzaGZsb2NoMFxzdHNoZmhpY2gwXHN0c2hmYmkwXGRlZmYwXGFkZWZmMHtcZm9udHRibHtcZjBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwMjA2MDMwNTA0MDUwMjAzMDR9VGltZXMgTmV3IFJvbWFuO317XGYxXGZyb21hblxmY2hhcnNldDJ7XCpccGFub3NlIDA1MDUwMTAyMDEwNzA2MDIwNTA3fVN5bWJvbDt9e1xmMlxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDYwNDAyMDIwMjAyMDIwNH1BcmlhbDt9e1xmM1xmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMDAwMDAwMDAwMDAwMDAwMDAwMH1BcHRvczsNCn17XGY0XGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGYwNTAyMDIwMjA0MDMwMjA0fUNhbGlicmk7fXtcZjVcZm1vZGVyblxmY2hhcnNldDBcZnBycTF7XCpccGFub3NlIDAyMDcwMzA5MDIwMjA1MDIwNDA0fUNvdXJpZXIgTmV3O317XGY2XGZtb2Rlcm5cZmNoYXJzZXQwXGZwcnExe1wqXHBhbm9zZSAwMjBiMDYwOTAyMDIwNDAzMDIwNH1Db25zb2xhczt9e1xmN1xmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMDAwMDAwMDAwMDAwMDAwMDAwMH1BcHRvcyBEaXNwbGF5Ow0KfXtcZjhcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwNDA1MDMwNTA0MDYwMzAyMDR9Q2FtYnJpYSBNYXRoO319e1xjb2xvcnRibDtccmVkMTI4XGdyZWVuMTI4XGJsdWUxMjg7XHJlZDBcZ3JlZW4wXGJsdWUwO1xyZWQxNVxncmVlbjcxXGJsdWU5Nzt9XG5vcWZwcm9tb3Rle1xzdHlsZXNoZWV0e1xzMFxzbmV4dDBcc3R5cnNpZDk4NTI0ODhcc3Fmb3JtYXRcc3ByaW9yaXR5MFxhc3BhbHBoYVxhc3BudW1cYWRqdXN0cmlnaHRcbHRycGFyXGxpMFxsaW4wXHJpMFxyaW4wXHFsXGZhYXV0b1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGtlcm5pbmcyIE5vcm1hbDt9e1xzMVxzYmFzZWRvbjBcc25leHQwXHNsaW5rMjlcc3R5cnNpZDc4MTUxMzkNClxzcWZvcm1hdFxzcHJpb3JpdHk5XGtlZXBca2VlcG5cc2EyNDBcYXNwYWxwaGFcYXNwbnVtXGFkanVzdHJpZ2h0XG91dGxpbmVsZXZlbDBcbHRycGFyXGxpMFxsaW4wXHJpMFxyaW4wXHFsXGZhYXV0b1xydGxjaFxhYlxhbGFuZzEwMjVcYWZzMjhcbHRyY2hcYlxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcY2Fwc1xrZXJuaW5nMiBoZWFkaW5nIDE7fXtcczJcc2Jhc2Vkb24wXHNuZXh0MFxzbGluazMwXHN0eXJzaWQ3ODE1MTM5DQpcc3Fmb3JtYXRcc3ByaW9yaXR5OVxzYTI0MFxhc3BhbHBoYVxhc3BudW1cYWRqdXN0cmlnaHRcb3V0bGluZWxldmVsMVxsdHJwYXJcbGkwXGxpbjBccmkwXHJpbjBccWxcZmFhdXRvXHJ0bGNoXGFiXGFsYW5nMTAyNVxhZnMyNlxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNca2VybmluZzIgaGVhZGluZyAyO317XHMzXHNiYXNlZG9uMFxzbmV4dDBcc2xpbmszMVxzdHlyc2lkNzgxNTEzOVxzc2VtaWhpZGRlbg0KXHNxZm9ybWF0XHNwcmlvcml0eTlcc3VuaGlkZXVzZWRcc2EyNDBcYXNwYWxwaGFcYXNwbnVtXGFkanVzdHJpZ2h0XG91dGxpbmVsZXZlbDJcbHRycGFyXGxpMFxsaW4wXHJpMFxyaW4wXHFsXGZhYXV0b1xydGxjaFxhYlxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGtlcm5pbmcyIGhlYWRpbmcgMzt9e1xzNFxzYmFzZWRvbjBcc25leHQwXHNsaW5rMzJcc3R5cnNpZDc4MTUxMzkNClxzc2VtaWhpZGRlblxzcWZvcm1hdFxzcHJpb3JpdHk5XHN1bmhpZGV1c2VkXHNhMjQwXGFzcGFscGhhXGFzcG51bVxhZGp1c3RyaWdodFxvdXRsaW5lbGV2ZWwzXGx0cnBhclxsaTBcbGluMFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWJcYWlcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xrZXJuaW5nMiBoZWFkaW5nIDQ7fXtcczVcc2Jhc2Vkb24wXHNuZXh0MFxzbGluazMzXHN0eXJzaWQ3ODE1MTM5DQpcc3NlbWloaWRkZW5cc3Fmb3JtYXRcc3ByaW9yaXR5OVxzdW5oaWRldXNlZFxzYTI0MFxhc3BhbHBoYVxhc3BudW1cYWRqdXN0cmlnaHRcb3V0bGluZWxldmVsNFxsdHJwYXJcbGkwXGxpbjBccmkwXHJpbjBccWxcZmFhdXRvXHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNca2VybmluZzIgaGVhZGluZyA1O317XHM2XHNiYXNlZG9uMFxzbmV4dDBcc2xpbmszNFxzdHlyc2lkNzgxNTEzOQ0KXHNzZW1paGlkZGVuXHNxZm9ybWF0XHNwcmlvcml0eTlcc3VuaGlkZXVzZWRcc2EyNDBcYXNwYWxwaGFcYXNwbnVtXGFkanVzdHJpZ2h0XG91dGxpbmVsZXZlbDVcbHRycGFyXGxpMFxsaW4wXHJpMFxyaW4wXHFsXGZhYXV0b1xydGxjaFxhaVxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGtlcm5pbmcyIGhlYWRpbmcgNjt9e1xzN1xzYmFzZWRvbjBcc25leHQwXHNsaW5rMzVcc3R5cnNpZDc4MTUxMzkNClxzc2VtaWhpZGRlblxzcWZvcm1hdFxzcHJpb3JpdHk5XHN1bmhpZGV1c2VkXHNhMjQwXGFzcGFscGhhXGFzcG51bVxhZGp1c3RyaWdodFxvdXRsaW5lbGV2ZWw2XGx0cnBhclxsaTBcbGluMFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWlcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xrZXJuaW5nMiBoZWFkaW5nIDc7fXtcczhcc2Jhc2Vkb24wXHNuZXh0MFxzbGluazM2XHN0eXJzaWQ3ODE1MTM5DQpcc3NlbWloaWRkZW5cc3Fmb3JtYXRcc3ByaW9yaXR5OVxzdW5oaWRldXNlZFxzYTI0MFxhc3BhbHBoYVxhc3BudW1cYWRqdXN0cmlnaHRcb3V0bGluZWxldmVsN1xsdHJwYXJcbGkwXGxpbjBccmkwXHJpbjBccWxcZmFhdXRvXHJ0bGNoXGFsYW5nMTAyNVxhZnMyMFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNca2VybmluZzIgaGVhZGluZyA4O317XHM5XHNiYXNlZG9uMFxzbmV4dDBcc2xpbmszN1xzdHlyc2lkNzgxNTEzOQ0KXHNzZW1paGlkZGVuXHNxZm9ybWF0XHNwcmlvcml0eTlcc3VuaGlkZXVzZWRcc2EyNDBcYXNwYWxwaGFcYXNwbnVtXGFkanVzdHJpZ2h0XG91dGxpbmVsZXZlbDhcbHRycGFyXGxpMFxsaW4wXHJpMFxyaW4wXHFsXGZhYXV0b1xydGxjaFxhaVxhbGFuZzEwMjVcYWZzMjBcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGtlcm5pbmcyIGhlYWRpbmcgOTt9e1wqXGNzMTBcYWRkaXRpdmVcc3NlbWloaWRkZW5cc3ByaW9yaXR5MQ0KXHN1bmhpZGV1c2VkIERlZmF1bHQgUGFyYWdyYXBoIEZvbnQ7fXtcKlx0czExXHRzcm93ZFxzbmV4dDExXHNzZW1paGlkZGVuXHN1bmhpZGV1c2VkXGFzcGFscGhhXGFzcG51bVxhZGp1c3RyaWdodFxsdHJwYXJcbGkwXGxpbjBccmkwXHJpbjBccWxcZmFhdXRvXHRzdmVydGFsdFx0c2JyZHJsXHRzYnJkcnJcdHNicmRydFx0c2JyZHJiXHRzYnJkcmRnclx0c2JyZHJkZ2xcdHNicmRyaFx0c2JyZHJ2XHRycGFkZGwxMDhcdHJwYWRkZmwzXHRycGFkZHQwXHRycGFkZGZ0M1x0cnBhZGRiMA0KXHRycGFkZGZiM1x0cnBhZGRyMTA4XHRycGFkZGZyMyBOb3JtYWwgVGFibGU7fXtcczE1XHNiYXNlZG9uMFxzbmV4dDE1XHNsaW5rMTZcc3R5cnNpZDc4MTUxMzlcc3ByaW9yaXR5M1xmaTcyMFxzYTI0MFxhc3BhbHBoYVxhc3BudW1cYWRqdXN0cmlnaHRcbHRycGFyXGxpMFxsaW4wXHJpMFxyaW4wXHFsXGZhYXV0b1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGtlcm5pbmcyIEJvZHkgVGV4dDsNCn17XCpcY3MxNlxhZGRpdGl2ZVxzbGluazE1XHN0eXJzaWQ3ODE1MTM5XHNwcmlvcml0eTNccnRsY2hcYWYwXGFmczI0XGx0cmNoXGRiY2hcZjQgQm9keSBUZXh0IENoYXI7fXtcczE3XHNiYXNlZG9uMTVcc25leHQxN1xzdHlyc2lkNzgxNTEzOVxzcWZvcm1hdFxzcHJpb3JpdHkzXGZpNzIwXHNhMFxhc3BhbHBoYVxhc3BudW1cYWRqdXN0cmlnaHRcbHRycGFyXGxpMFxsaW4wXHJpMFxyaW4wXHFsXGZhYXV0b1xzbDQ4MFxzbG11bHQxXHJ0bGNoXGFsYW5nMTAyNVxhZnMyNA0KXGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xrZXJuaW5nMiBCb2R5IFRleHQgRG91YmxlO317XHMxOFxzYmFzZWRvbjBcc25leHQwXHN0eXJzaWQ3ODE1MTM5XHNzZW1paGlkZGVuXHNxZm9ybWF0XHNwcmlvcml0eTM1XHN1bmhpZGV1c2VkXGFzcGFscGhhXGFzcG51bVxhZGp1c3RyaWdodFxsdHJwYXJcbGkwXGxpbjBccmkwXHJpbjBccWxcZmFhdXRvXHJ0bGNoXGFiXGFsYW5nMTAyNVxhZnMxOFxsdHJjaFxiXGZzMjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xrZXJuaW5nMiBjYXB0aW9uOw0KfXtcKlxjczE5XGFkZGl0aXZlXHN0eXJzaWQ3ODE1MTM5XHNzZW1paGlkZGVuXHN1bmhpZGV1c2VkXHN1cGVyIGVuZG5vdGUgcmVmZXJlbmNlO317XHMyMFxzYmFzZWRvbjBcc25leHQyMFxzbGluazIxXHN0eXJzaWQ3ODE1MTM5XHNzZW1paGlkZGVuXHN1bmhpZGV1c2VkXGFzcGFscGhhXGFzcG51bVxhZGp1c3RyaWdodFxsdHJwYXJcbGkwXGxpbjBccmkwXHJpbjBccWxcZmFhdXRvXHJ0bGNoXGFsYW5nMTAyNVxhZnMyMFxsdHJjaFxmczIwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNca2VybmluZzIgZW5kbm90ZSB0ZXh0Ow0KfXtcKlxjczIxXGFkZGl0aXZlXHNsaW5rMjBcc3R5cnNpZDc4MTUxMzlcc3NlbWloaWRkZW5ccnRsY2hcYWYwXGFmczIwXGx0cmNoXGZzMjBcZGJjaFxmNCBFbmRub3RlIFRleHQgQ2hhcjt9e1xzMjJcc2Jhc2Vkb24wXHNuZXh0MjJcc2xpbmsyM1xzdHlyc2lkNzgxNTEzOVxzdW5oaWRldXNlZFxhc3BhbHBoYVxhc3BudW1cYWRqdXN0cmlnaHRcbHRycGFyXGxpMFxsaW4wXHJpMFxyaW4wXHFsXGZhYXV0b1xydGxjaFxhbGFuZzEwMjVcYWZzMjQNClxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNca2VybmluZzIgZm9vdGVyO317XCpcY3MyM1xhZGRpdGl2ZVxzbGluazIyXHN0eXJzaWQ3ODE1MTM5XHJ0bGNoXGFmMFxhZnMyNFxsdHJjaFxkYmNoXGY0IEZvb3RlciBDaGFyO317XCpcY3MyNFxhZGRpdGl2ZVxzdHlyc2lkNzgxNTEzOVxzc2VtaWhpZGRlblxzdW5oaWRldXNlZFxzdXBlciBmb290bm90ZSByZWZlcmVuY2U7fXtcczI1XHNiYXNlZG9uMFxzbmV4dDI1XHNsaW5rMjZcc3R5cnNpZDc4MTUxMzkNClxzc2VtaWhpZGRlblxzdW5oaWRldXNlZFxmaS00MzJcc2ExMjBcYXNwYWxwaGFcYXNwbnVtXGFkanVzdHJpZ2h0XGx0cnBhclxsaTQzMlxsaW40MzJccmkwXHJpbjBccWxcZmFhdXRvXHJ0bGNoXGFsYW5nMTAyNVxhZnMyMFxsdHJjaFxmczIwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNca2VybmluZzIgZm9vdG5vdGUgdGV4dDt9e1wqXGNzMjZcYWRkaXRpdmVcc2xpbmsyNVxzdHlyc2lkNzgxNTEzOVxzc2VtaWhpZGRlblxydGxjaFxhZjBcYWZzMjANClxsdHJjaFxmczIwXGRiY2hcZjQgRm9vdG5vdGUgVGV4dCBDaGFyO317XHMyN1xzYmFzZWRvbjBcc25leHQyN1xzbGluazI4XHN0eXJzaWQ3ODE1MTM5XHN1bmhpZGV1c2VkXGFzcGFscGhhXGFzcG51bVxhZGp1c3RyaWdodFxsdHJwYXJcbGkwXGxpbjBccmkwXHJpbjBccWxcZmFhdXRvXHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNca2VybmluZzIgaGVhZGVyO317XCpcY3MyOA0KXGFkZGl0aXZlXHNsaW5rMjdcc3R5cnNpZDc4MTUxMzlccnRsY2hcYWYwXGFmczI0XGx0cmNoXGRiY2hcZjQgSGVhZGVyIENoYXI7fXtcKlxjczI5XGFkZGl0aXZlXHNsaW5rMVxzdHlyc2lkNzgxNTEzOVxzcHJpb3JpdHk5XHJ0bGNoXGFiXGFmMFxhZnMyOFxsdHJjaFxiXGNhcHMgSGVhZGluZyAxIENoYXI7fXtcKlxjczMwXGFkZGl0aXZlXHNsaW5rMlxzdHlyc2lkNzgxNTEzOVxzcHJpb3JpdHk5XHJ0bGNoXGFiXGFmMFxhZnMyNlxsdHJjaCBIZWFkaW5nIDIgQ2hhcjsNCn17XCpcY3MzMVxhZGRpdGl2ZVxzbGluazNcc3R5cnNpZDc4MTUxMzlcc3NlbWloaWRkZW5cc3ByaW9yaXR5OVxydGxjaFxhYlxhZjBcYWZzMjRcbHRyY2ggSGVhZGluZyAzIENoYXI7fXtcKlxjczMyXGFkZGl0aXZlXHNsaW5rNFxzdHlyc2lkNzgxNTEzOVxzc2VtaWhpZGRlblxzcHJpb3JpdHk5XHJ0bGNoXGFiXGFpXGFmMFxhZnMyNFxsdHJjaCBIZWFkaW5nIDQgQ2hhcjt9e1wqXGNzMzNcYWRkaXRpdmVcc2xpbms1XHN0eXJzaWQ3ODE1MTM5DQpcc3NlbWloaWRkZW5cc3ByaW9yaXR5OVxydGxjaFxhZjBcYWZzMjRcbHRyY2ggSGVhZGluZyA1IENoYXI7fXtcKlxjczM0XGFkZGl0aXZlXHNsaW5rNlxzdHlyc2lkNzgxNTEzOVxzc2VtaWhpZGRlblxzcHJpb3JpdHk5XHJ0bGNoXGFpXGFmMFxhZnMyNFxsdHJjaCBIZWFkaW5nIDYgQ2hhcjt9e1wqXGNzMzVcYWRkaXRpdmVcc2xpbms3XHN0eXJzaWQ3ODE1MTM5XHNzZW1paGlkZGVuXHNwcmlvcml0eTlccnRsY2hcYWlcYWYwXGFmczI0XGx0cmNoIEhlYWRpbmcgNyBDaGFyOw0KfXtcKlxjczM2XGFkZGl0aXZlXHNsaW5rOFxzdHlyc2lkNzgxNTEzOVxzc2VtaWhpZGRlblxzcHJpb3JpdHk5XHJ0bGNoXGFmMFxhZnMyMFxsdHJjaCBIZWFkaW5nIDggQ2hhcjt9e1wqXGNzMzdcYWRkaXRpdmVcc2xpbms5XHN0eXJzaWQ3ODE1MTM5XHNzZW1paGlkZGVuXHNwcmlvcml0eTlccnRsY2hcYWlcYWYwXGFmczIwXGx0cmNoIEhlYWRpbmcgOSBDaGFyO317XHMzOFxzYmFzZWRvbjBcc25leHQwXHNhdXRvdXBkXHN0eXJzaWQ3ODE1MTM5DQpcc3NlbWloaWRkZW5cc3VuaGlkZXVzZWRcZmktMjQwXGFzcGFscGhhXGFzcG51bVxhZGp1c3RyaWdodFxsdHJwYXJcbGkyNDBcbGluMjQwXHJpMFxyaW4wXHFsXGZhYXV0b1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGtlcm5pbmcyIGluZGV4IDE7fXtcczM5XHNiYXNlZG9uMFxzbmV4dDM4XHN0eXJzaWQ3ODE1MTM5XHNzZW1paGlkZGVuXHN1bmhpZGV1c2VkXGFzcGFscGhhDQpcYXNwbnVtXGFkanVzdHJpZ2h0XGx0cnBhclxsaTBcbGluMFxyaTBccmluMFxxY1xmYWF1dG9ccnRsY2hcYWJcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGJcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGtlcm5pbmcyIGluZGV4IGhlYWRpbmc7fXtcczQwXHNuZXh0NDBcc3R5cnNpZDc4MTUxMzlcc3Fmb3JtYXRcc3ByaW9yaXR5MVxhc3BhbHBoYVxhc3BudW1cYWRqdXN0cmlnaHRcbHRycGFyXGxpMFxsaW4wXHJpMFxyaW4wDQpccWxcZmFhdXRvXHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcZGJjaFxmNFxrZXJuaW5nMiBObyBTcGFjaW5nO317XCpcY3M0MVxhZGRpdGl2ZVxzdHlyc2lkNzgxNTEzOVxzc2VtaWhpZGRlblxjZjEgUGxhY2Vob2xkZXIgVGV4dDt9e1xzNDJcc2Jhc2Vkb24wXHNuZXh0NDJcc2xpbms0M1xzdHlyc2lkNzgxNTEzOVxzc2VtaWhpZGRlblxzdW5oaWRldXNlZA0KXGFzcGFscGhhXGFzcG51bVxhZGp1c3RyaWdodFxsdHJwYXJcbGkwXGxpbjBccmkwXHJpbjBccWxcZmFhdXRvXHJ0bGNoXGFmNlxhbGFuZzEwMjVcYWZzMjFcbHRyY2hcZnMyMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGY1XGtlcm5pbmcyIFBsYWluIFRleHQ7fXtcKlxjczQzXGFkZGl0aXZlXHNsaW5rNDJcc3R5cnNpZDc4MTUxMzlcc3NlbWloaWRkZW5ccnRsY2hcYWY2XGFmczIxXGx0cmNoXGZzMjBcbG9jaFxhZjVcZGJjaFxhZjQNClxoaWNoXGY1IFBsYWluIFRleHQgQ2hhcjt9e1xzNDRcc2Jhc2Vkb24wXHNuZXh0MFxzbGluazQ1XHN0eXJzaWQ3ODE1MTM5XHNxZm9ybWF0XHNwcmlvcml0eTRcc2EyNDBcYXNwYWxwaGFcYXNwbnVtXGFkanVzdHJpZ2h0XGx0cnBhclxsaTE0NDBcbGluMTQ0MFxyaTE0NDBccmluMTQ0MFxxbFxmYWF1dG9ccnRsY2hcYWlcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xjZjJca2VybmluZzIgUXVvdGU7DQp9e1wqXGNzNDVcYWRkaXRpdmVcc2xpbms0NFxzdHlyc2lkNzgxNTEzOVxzcHJpb3JpdHk0XHJ0bGNoXGFpXGFmMFxhZnMyNFxsdHJjaFxkYmNoXGY0XGNmMiBRdW90ZSBDaGFyO317XHM0NlxzYmFzZWRvbjBcc25leHQwXHNsaW5rNDdcc3R5cnNpZDc4MTUxMzlcc3Fmb3JtYXRcc3ByaW9yaXR5OFxrZWVwblxpbHZsMVxzYTI0MFxhc3BhbHBoYVxhc3BudW1cYWRqdXN0cmlnaHRcb3V0bGluZWxldmVsMVxsdHJwYXJcbGkwXGxpbjBccmkwXHJpbjANClxxbFxmYWF1dG9ccnRsY2hcYWlcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGlcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGtlcm5pbmcyIFN1YnRpdGxlO317XCpcY3M0N1xhZGRpdGl2ZVxzbGluazQ2XHN0eXJzaWQ3ODE1MTM5XHNwcmlvcml0eThccnRsY2hcYWlcYWYwXGFmczI0XGx0cmNoXGkgU3VidGl0bGUgQ2hhcjt9e1xzNDhcc2Jhc2Vkb24wXHNuZXh0MFxzbGluazQ5XHN0eXJzaWQ3ODE1MTM5DQpcc3Fmb3JtYXRcc3ByaW9yaXR5N1xrZWVwblxzYTI0MFxhc3BhbHBoYVxhc3BudW1cYWRqdXN0cmlnaHRcb3V0bGluZWxldmVsMFxsdHJwYXJcbGkwXGxpbjBccmkwXHJpbjBccWNcZmFhdXRvXHJ0bGNoXGFsYW5nMTAyNVxhZnM1MlxsdHJjaFxiXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xjYXBzXGtlcm5pbmcyIFRpdGxlO317XCpcY3M0OVxhZGRpdGl2ZVxzbGluazQ4XHN0eXJzaWQ3ODE1MTM5XHNwcmlvcml0eTcNClxydGxjaFxhZjBcYWZzNTJcbHRyY2hcYlxjYXBzIFRpdGxlIENoYXI7fXtcczUwXHNiYXNlZG9uMFxzbmV4dDBcc3R5cnNpZDc4MTUxMzlcc3NlbWloaWRkZW5cc3VuaGlkZXVzZWRcYXNwYWxwaGFcYXNwbnVtXGFkanVzdHJpZ2h0XGx0cnBhclxsaTBcbGluMFxyaTBccmluMFxxY1xmYWF1dG9ccnRsY2hcYWJcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGJcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGtlcm5pbmcyIHRvYSBoZWFkaW5nOw0KfXtcczUxXHNiYXNlZG9uMFxzbmV4dDBcc2F1dG91cGRcc3R5cnNpZDc4MTUxMzlcc3NlbWloaWRkZW5cc3ByaW9yaXR5Mzlcc3VuaGlkZXVzZWRcdHg3MjBcdHFyXHRsZG90XHR4OTM2MFxzYTEyMFxhc3BhbHBoYVxhc3BudW1cYWRqdXN0cmlnaHRcbHRycGFyXGxpMFxsaW4wXHJpMFxyaW4wXHFsXGZhYXV0b1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGtlcm5pbmcyIHRvYyAxOw0KfXtcczUyXHNiYXNlZG9uMFxzbmV4dDBcc2F1dG91cGRcc3R5cnNpZDc4MTUxMzlcc3NlbWloaWRkZW5cc3ByaW9yaXR5Mzlcc3VuaGlkZXVzZWRcY29udGV4dHVhbHNwYWNlXHRxclx0bGRvdFx0eDkzNjBcZmktNzIwXHNhMTIwXGFzcGFscGhhXGFzcG51bVxhZGp1c3RyaWdodFxsdHJwYXJcbGkxNDQwXGxpbjE0NDBccmkwXHJpbjBccWxcZmFhdXRvXHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNca2VybmluZzIgdG9jIDI7DQp9e1xzNTNcc2Jhc2Vkb24wXHNuZXh0MFxzYXV0b3VwZFxzdHlyc2lkNzgxNTEzOVxzc2VtaWhpZGRlblxzcHJpb3JpdHkzOVxzdW5oaWRldXNlZFxjb250ZXh0dWFsc3BhY2VcdHFyXHRsZG90XHR4OTM2MFxmaS03MjBcc2ExMjBcYXNwYWxwaGFcYXNwbnVtXGFkanVzdHJpZ2h0XGx0cnBhclxsaTIxNjBcbGluMjE2MFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xrZXJuaW5nMiB0b2MgMzsNCn17XHM1NFxzYmFzZWRvbjBcc25leHQwXHNhdXRvdXBkXHN0eXJzaWQ3ODE1MTM5XHNzZW1paGlkZGVuXHNwcmlvcml0eTM5XHN1bmhpZGV1c2VkXGNvbnRleHR1YWxzcGFjZVx0cXJcdGxkb3RcdHg5MzYwXGZpLTcyMFxzYTEyMFxhc3BhbHBoYVxhc3BudW1cYWRqdXN0cmlnaHRcbHRycGFyXGxpMjg4MFxsaW4yODgwXHJpMFxyaW4wXHFsXGZhYXV0b1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGtlcm5pbmcyIHRvYyA0Ow0KfXtcczU1XHNiYXNlZG9uMFxzbmV4dDBcc2F1dG91cGRcc3R5cnNpZDc4MTUxMzlcc3NlbWloaWRkZW5cc3ByaW9yaXR5Mzlcc3VuaGlkZXVzZWRcY29udGV4dHVhbHNwYWNlXHRxclx0bGRvdFx0eDkzNjBcZmktNzIwXHNhMTIwXGFzcGFscGhhXGFzcG51bVxhZGp1c3RyaWdodFxsdHJwYXJcbGkzNjAwXGxpbjM2MDBccmkwXHJpbjBccWxcZmFhdXRvXHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNca2VybmluZzIgdG9jIDU7DQp9e1xzNTZcc2Jhc2Vkb24wXHNuZXh0MFxzYXV0b3VwZFxzdHlyc2lkNzgxNTEzOVxzc2VtaWhpZGRlblxzcHJpb3JpdHkzOVxzdW5oaWRldXNlZFxjb250ZXh0dWFsc3BhY2VcdHFyXHRsZG90XHR4OTM2MFxmaS03MjBcc2ExMjBcYXNwYWxwaGFcYXNwbnVtXGFkanVzdHJpZ2h0XGx0cnBhclxsaTQzMjBcbGluNDMyMFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xrZXJuaW5nMiB0b2MgNjsNCn17XHM1N1xzYmFzZWRvbjBcc25leHQwXHNhdXRvdXBkXHN0eXJzaWQ3ODE1MTM5XHNzZW1paGlkZGVuXHNwcmlvcml0eTM5XHN1bmhpZGV1c2VkXGNvbnRleHR1YWxzcGFjZVx0cXJcdGxkb3RcdHg5MzYwXGZpLTcyMFxzYTEyMFxhc3BhbHBoYVxhc3BudW1cYWRqdXN0cmlnaHRcbHRycGFyXGxpNTA0MFxsaW41MDQwXHJpMFxyaW4wXHFsXGZhYXV0b1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGtlcm5pbmcyIHRvYyA3Ow0KfXtcczU4XHNiYXNlZG9uMFxzbmV4dDBcc2F1dG91cGRcc3R5cnNpZDc4MTUxMzlcc3NlbWloaWRkZW5cc3ByaW9yaXR5Mzlcc3VuaGlkZXVzZWRcY29udGV4dHVhbHNwYWNlXHRxclx0bGRvdFx0eDkzNjBcZmktNzIwXHNhMTIwXGFzcGFscGhhXGFzcG51bVxhZGp1c3RyaWdodFxsdHJwYXJcbGk1NzYwXGxpbjU3NjBccmkwXHJpbjBccWxcZmFhdXRvXHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNca2VybmluZzIgdG9jIDg7DQp9e1xzNTlcc2Jhc2Vkb24wXHNuZXh0MFxzYXV0b3VwZFxzdHlyc2lkNzgxNTEzOVxzc2VtaWhpZGRlblxzcHJpb3JpdHkzOVxzdW5oaWRldXNlZFxjb250ZXh0dWFsc3BhY2VcdHFyXHRsZG90XHR4OTM2MFxmaS03MjBcc2ExMjBcYXNwYWxwaGFcYXNwbnVtXGFkanVzdHJpZ2h0XGx0cnBhclxsaTY0ODBcbGluNjQ4MFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xrZXJuaW5nMiB0b2MgOTsNCn17XHM2MFxzYmFzZWRvbjFcc25leHQwXHN0eXJzaWQ3ODE1MTM5XHNzZW1paGlkZGVuXHNxZm9ybWF0XHNwcmlvcml0eTM5XHN1bmhpZGV1c2VkXGtlZXBca2VlcG5cc2EyNDBcYXNwYWxwaGFcYXNwbnVtXGFkanVzdHJpZ2h0XG91dGxpbmVsZXZlbDlcbHRycGFyXGxpMFxsaW4wXHJpMFxyaW4wXHFjXGZhYXV0b1xydGxjaFxhYlxhbGFuZzEwMjVcYWZzMjhcbHRyY2hcYlxmczI4XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcY2FwczBca2VybmluZzIgVE9DIEhlYWRpbmc7DQp9e1xzNjFcc2Jhc2Vkb24wXHNuZXh0NjFcc3R5cnNpZDI1NzEyNzRcc3ByaW9yaXR5MzRcY29udGV4dHVhbHNwYWNlXGFzcGFscGhhXGFzcG51bVxhZGp1c3RyaWdodFxsdHJwYXJcbGk3MjBcbGluNzIwXHJpMFxyaW4wXHFsXGZhYXV0b1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGtlcm5pbmcyIExpc3QgUGFyYWdyYXBoO317XCpcY3M2Mg0KXGFkZGl0aXZlXHN0eXJzaWQyNTcxMjc0XHNwcmlvcml0eTIxXHJ0bGNoXGFpXGx0cmNoXGlcY2YzIEludGVuc2UgRW1waGFzaXM7fXtcczYzXHNiYXNlZG9uMFxzbmV4dDBcc2xpbms2NFxzdHlyc2lkMjU3MTI3NFxzcHJpb3JpdHkzMFxzYjM2MFxzYTM2MFxhc3BhbHBoYVxhc3BudW1cYWRqdXN0cmlnaHRcYnJkcnRcYnJkcnNcYnJkcncxMFxicmRyY2YzXGJyc3AyMDBcYnJkcmJcYnJkcnNcYnJkcncxMFxicmRyY2YzXGJyc3AyMDBcbHRycGFyXGxpODY0XGxpbjg2NFxyaTg2NFxyaW44NjQNClxxY1xmYWF1dG9ccnRsY2hcYWlcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGlcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGNmM1xrZXJuaW5nMiBJbnRlbnNlIFF1b3RlO317XCpcY3M2NFxhZGRpdGl2ZVxzbGluazYzXHN0eXJzaWQyNTcxMjc0XHNwcmlvcml0eTMwXHJ0bGNoXGFpXGx0cmNoXGlcY2YzIEludGVuc2UgUXVvdGUgQ2hhcjt9e1wqXGNzNjVcYWRkaXRpdmVcc3R5cnNpZDI1NzEyNzRcc3ByaW9yaXR5MzINClxydGxjaFxhYlxsdHJjaFxiXHNjYXBzXGV4cG5kMVxleHBuZHR3NVxjZjMgSW50ZW5zZSBSZWZlcmVuY2U7fXtcKlx0czY2XHRzcm93ZFxzYmFzZWRvbjExXHNuZXh0NjZcc3R5cnNpZDI1NzEyNzRcc3ByaW9yaXR5Mzlcc2EwXGFzcGFscGhhXGFzcG51bVxhZGp1c3RyaWdodFxsdHJwYXJcbGkwXGxpbjBccmkwXHJpbjBccWxcZmFhdXRvXHNsMjQwXHNsbXVsdDFcdHN2ZXJ0YWx0XHRzYnJkcmxcdHNicmRyclx0c2JyZHJ0XHRzYnJkcmJcdHNicmRyZGdyDQpcdHNicmRyZGdsXHRzYnJkcmhcdHNicmRydlx0cnBhZGRsMTA4XHRycGFkZGZsM1x0cmJyZHJ0XGJyZHJzXGJyZHJ3MTBcYnJkcmNmMFxicnNwMFx0cmJyZHJsXGJyZHJzXGJyZHJ3MTBcYnJkcmNmMFxicnNwMFx0cmJyZHJiXGJyZHJzXGJyZHJ3MTBcYnJkcmNmMFxicnNwMFx0cmJyZHJyXGJyZHJzXGJyZHJ3MTBcYnJkcmNmMFxicnNwMFx0cmJyZHJoXGJyZHJzXGJyZHJ3MTBcYnJkcmNmMFxicnNwMFx0cmJyZHJ2XGJyZHJzXGJyZHJ3MTBcYnJkcmNmMFxicnNwMFx0cnBhZGR0MA0KXHRycGFkZGZ0M1x0cnBhZGRiMFx0cnBhZGRmYjNcdHJwYWRkcjEwOFx0cnBhZGRmcjMgVGFibGUgR3JpZDt9e1xzNjdcc25leHQ2N1xzdHlyc2lkMzYyODUyOVxzcHJpb3JpdHkwXGFzcGFscGhhXGFzcG51bVxhZGp1c3RyaWdodFxub3dpZGN0bHBhclxsdHJwYXJcbGkwXGxpbjBccmkwXHJpbjBccWxcZmFhdXRvXHNsLTE2MFxzbG11bHQwXHJ0bGNoXGFsYW5nMTAyNVxhZnMyMlxsdHJjaFxmczE0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzMgTWFjUGFjIFRyYWlsZXI7DQp9e1xzNjhcc25leHQ2OFxzaGlkZGVuXHN0eXJzaWQ2MTYyMDM4XHNzZW1paGlkZGVuXGFzcGFscGhhXGFzcG51bVxhZGp1c3RyaWdodFxsdHJwYXJcbGkwXGxpbjBccmkwXHJpbjBccWxcZmFhdXRvXHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNca2VybmluZzIgUmV2aXNpb247fX17XCpccnNpZHRibFxyc2lkNjc0MzZccnNpZDQxOTk1NFxyc2lkNDIxNDcxXHJzaWQ4ODA1OTBccnNpZDI1MDAzMzRccnNpZDI1MTg0NjNccnNpZDI1NzEyNzRccnNpZDMxNTI2MzVccnNpZDM0MTk1NzBccnNpZDM2Mjg1MjlccnNpZDQzNDMzODlccnNpZDQ0MDUxNjRccnNpZDUyNDQzMDBccnNpZDUyNjgzMjJccnNpZDUzMTYxOTJccnNpZDU3ODEyOTNccnNpZDYxNjIwMzhccnNpZDYyMzY3OTBccnNpZDc0MTUzMjRccnNpZDc4MTUxMzlccnNpZDgzMzc5ODZccnNpZDg1OTk0MTJccnNpZDg3NDY5NDRccnNpZDg3OTYzNjFccnNpZDg5OTUwNzVccnNpZDkyNjU3MDNccnNpZDk4NTI0ODhccnNpZDEwMTY4NDcwXHJzaWQxMDMwMDcwNlxyc2lkMTE1NDIxNjdccnNpZDExOTM3ODk0XHJzaWQxMjI4MzM3MVxyc2lkMTI1NDEwNjdccnNpZDEyNjExNTIzXHJzaWQxMjY2NDM0N1xyc2lkMTU4Njg4ODZccnNpZDE2MDA4MDg1XHJzaWQxNjQ3MjQxNX0NCntcKlxnZW5lcmF0b3IgQXNwb3NlLldvcmRzIGZvciAuTkVUIDIzLjEwLjA7fXtcaW5mb3tcYXV0aG9yIFN0ZXZlbiBHb2xkYmVyZ317XG9wZXJhdG9yIFN0ZXZlbiBHb2xkYmVyZ31cdmVyc2lvbjJcZWRtaW5zMVxub2ZwYWdlczJcbm9md29yZHMzMTVcbm9mY2hhcnMxODAwXG5vZmNoYXJzd3MyMTExe1xjcmVhdGltXHlyMjAyNVxtbzRcZHkyM1xocjE2XG1pbjRcc2VjMH17XHByaW50aW1ceXIyMDI1XG1vNFxkeTIzXGhyMTZcbWluNFxzZWM1OH17DQpccmV2dGltXHlyMjAyNVxtbzRcZHkyM1xocjE2XG1pbjRcc2VjMH19XHBhcGVydzEyMjQwXHBhcGVyaDE1ODQwXG1hcmdsMTQ0MFxtYXJncjE0NDBcbWFyZ3QxNDQwXG1hcmdiMTQ0MFxndXR0ZXIwe1xtbWF0aFByXG1icmtCaW4wXG1icmtCaW5TdWIwXG1kZWZKYzFcbWRpc3BEZWYxXG1pbnRlclNwMFxtaW50TGltMFxtaW50cmFTcDBcbWxNYXJnaW4wXG1tYXRoRm9udDhcbW5hcnlMaW0xXG1wb3N0U3AwXG1wcmVTcDBcbXJNYXJnaW4wXG1zbWFsbEZyYWMwXG13cmFwSW5kZW50MTQ0MFxtd3JhcFJpZ2h0MH0NClxkZWZsYW5nMTAzM1xkZWZsYW5nZmUyMDUyXGFkZWZsYW5nMTAyNVxqZXhwYW5kXHNob3d4bWxlcnJvcnMxXHZhbGlkYXRleG1sMXtcKlx3Z3JmZm10ZmlsdGVyIDI4MTB9XHZpZXdraW5kMVx2aWV3c2NhbGUxMDBcZmV0MHtcKlxmdG5zZXBccGFyZFxwbGFpblxpdGFwMFxzMFxhc3BhbHBoYVxhc3BudW1cYWRqdXN0cmlnaHRccGFyYXJzaWQxNjAwODA4NVxsdHJwYXJcbGkwXGxpbjBccmkwXHJpbjBccWxcZmFhdXRvXHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNca2VybmluZzINCntccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xpbnNyc2lkNjc0MzZca2VybmluZzIgXGNoZnRuc2VwIH17XHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcaW5zcnNpZDY3NDM2XGtlcm5pbmcyXHBhcn19e1wqXGZ0bnNlcGNccGFyZFxwbGFpblxpdGFwMFxzMA0KXGFzcGFscGhhXGFzcG51bVxhZGp1c3RyaWdodFxwYXJhcnNpZDE2MDA4MDg1XGx0cnBhclxsaTBcbGluMFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xrZXJuaW5nMntccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xpbnNyc2lkNjc0MzZca2VybmluZzIgXGNoZnRuc2VwYyB9DQp7XHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcaW5zcnNpZDY3NDM2XGtlcm5pbmcyXHBhcn19e1wqXGFmdG5zZXBccGFyZFxwbGFpblxpdGFwMFxzMFxhc3BhbHBoYVxhc3BudW1cYWRqdXN0cmlnaHRccGFyYXJzaWQxNjAwODA4NVxsdHJwYXJcbGkwXGxpbjBccmkwXHJpbjBccWxcZmFhdXRvXHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNca2VybmluZzINCntccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xpbnNyc2lkNjc0MzZca2VybmluZzIgXGNoZnRuc2VwIH17XHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcaW5zcnNpZDY3NDM2XGtlcm5pbmcyXHBhcn19e1wqXGFmdG5zZXBjXHBhcmRccGxhaW5caXRhcDBcczANClxhc3BhbHBoYVxhc3BudW1cYWRqdXN0cmlnaHRccGFyYXJzaWQxNjAwODA4NVxsdHJwYXJcbGkwXGxpbjBccmkwXHJpbjBccWxcZmFhdXRvXHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNca2VybmluZzJ7XHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcaW5zcnNpZDY3NDM2XGtlcm5pbmcyIFxjaGZ0bnNlcGMgfQ0Ke1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGluc3JzaWQ2NzQzNlxrZXJuaW5nMlxwYXJ9fVxmdG5ialxhZW5kZG9jXGZ0bnJzdGNvbnRcYWZ0bnJzdGNvbnRcZnRubmFyXGFmdG5ucmxjXHdpZG93Y3RybFxub3NwYWNlZm9ydWxcbm9sbmh0YWRqdGJsXGFsbnRibGluZFxseXR0YmxydGdyXG5vZ3Jvd2F1dG9maXRcZG50Ymxuc2JkYlxub3hsYXR0b3llbg0KXHdycHB1bmN0XG5vYnJrd3JwdGJsXGV4cHNocnRuXHNuYXB0b2dyaWRpbmNlbGxcYXNpYW5icmtydWxlXGh0bWF1dHNwXG5vdWx0cmxzcGNcdXNlbHRiYWxuXHNwbHl0d25pbmVcZnRubHl0d25pbmVcbHl0Y2FsY3RibHdkXGFsbG93ZmllbGRlbmRzZWxcbmV3dGJsc3R5cnVsc1xsbmJya3J1bGVcdXRpbmxcZm9ybXNoYWRlXGRnaHNwYWNlMTgwXGRndnNwYWNlMTgwXGRnaG9yaWdpbjE0NDBcZGd2b3JpZ2luMTQ0MFxkZ2hzaG93MVxkZ3ZzaG93MVxkZ21hcmdpbg0KXHBnYnJkcmhlYWRccGdicmRyZm9vdFxyc2lkcm9vdDI1NzEyNzR7XCpcZG9jdmFye1RhcmlmZlNoYXJrRG9jdW1lbnRTdGF0ZX17fX17XCpcZG9jdmFye1RhcmlmZlNoYXJrRG9jdW1lbnRUeXBlfXtUUlZNQVJLRUR9fXtcKlxkb2N2YXJ7VGFyaWZmU2hhcmtSZWNvcmRJZH17NTcwNn19XHNlY3RkXHNlY3RsaW5lZ3JpZDM2MFxwZ3dzeG4xMjI0MFxwZ2hzeG4xNTg0MFxtYXJnbHN4bjE0NDBcbWFyZ3JzeG4xNDQwXG1hcmd0c3huMTQ0MFxtYXJnYnN4bjE0NDBcZ3V0dGVyc3huMFxoZWFkZXJ5NzIwXGZvb3RlcnkyNzBcY29sc3g3MjBcbHRyc2VjdHtcZm9vdGVyXHBhcmRccGxhaW5caXRhcDBcczIyXGFzcGFscGhhXGFzcG51bVxhZGp1c3RyaWdodFxsdHJwYXJcbGkwXGxpbjBccmkwXHJpbjBccWxcZmFhdXRvXHJ0bGNoXGFsYW5nMTAyNVxhZnMyNA0KXGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xrZXJuaW5nMntccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMjRcbGFuZ25wMTAzM1xsYW5nZmUxMDI0XGxhbmdmZW5wMTAzM1xpbnNyc2lkNjc0MzZca2VybmluZzJcbm9wcm9vZntcc2hwe1wqXHNocGluc3Rcc2hwbGlkMjA0OVxzaHBsZWZ0MFxzaHByaWdodDQwMzJcc2hwdG9wMFxzaHBib3R0b200OTVcc2hwZmhkcjFcc2hwejBcc2hwZmJsd3R4dDENClxzaHBieG1hcmdpblxzaHBieGlnbm9yZVxzaHBieXBhcmFcc2hwYnlpZ25vcmVcc2hwd3IzXHNocHdyazB7XHNwe1xzbiBmTGF5b3V0SW5DZWxsfXtcc3YgMX19e1xzcHtcc24gbFR4aWR9e1xzdiA2NTUzNn19e1xzcHtcc24gZHhUZXh0TGVmdH17XHN2IDB9fXtcc3B7XHNuIGR5VGV4dFRvcH17XHN2IDB9fXtcc3B7XHNuIGR4VGV4dFJpZ2h0fXtcc3YgMH19e1xzcHtcc24gZHlUZXh0Qm90dG9tfXtcc3YgMH19e1xzcHtcc24gZkZpbGxlZH17XHN2IDB9fXtcc3B7XHNuIGZMaW5lfQ0Ke1xzdiAwfX17XHNwe1xzbiB3ek5hbWV9e1xzdiB6em1wVHJhaWxlcl8xMDc4XzE5fX17XHNwe1xzbiBwb3NyZWxofXtcc3YgMH19e1xzcHtcc24gZkJlaGluZERvY3VtZW50fXtcc3YgMX19e1xzcHtcc24gZkhpZGRlbn17XHN2IDB9fXtcc3B7XHNuIGZGbGlwSH17XHN2IDB9fXtcc3B7XHNuIGZGbGlwVn17XHN2IDB9fXtcc3B7XHNuIHNoYXBlVHlwZX17XHN2IDIwMn19e1xzaHB0eHRccGFyZFxwbGFpblxpdGFwMFxzNjdcYXNwYWxwaGENClxhc3BudW1cYWRqdXN0cmlnaHRcbm93aWRjdGxwYXJcbHRycGFyXGxpMFxsaW4wXHJpMFxyaW4wXHFsXGZhYXV0b1xzbC0xNjBcc2xtdWx0MFxydGxjaFxhbGFuZzEwMjVcYWZzMjJcbHRyY2hcZnMxNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMze1xydGxjaFxhZjBcYWxhbmcxMDI1XGFmczIyXGx0cmNoXGZzMTRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xmMFxpbnNyc2lkNjc0MzYgNDkyNC03ODYzLTI3MjYuMn0NCntccnRsY2hcYWxhbmcxMDI1XGFmczIyXGx0cmNoXGZzMTRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xpbnNyc2lkMzYyODUyOVxwYXJ9XHBhcmRccGxhaW5caXRhcDBcczY3XGFzcGFscGhhXGFzcG51bVxhZGp1c3RyaWdodFxub3dpZGN0bHBhclxsdHJwYXJcbGkwXGxpbjBccmkwXHJpbjBccWxcZmFhdXRvXHNsLTE2MFxzbG11bHQwXHJ0bGNoXGFsYW5nMTAyNVxhZnMyMlxsdHJjaFxmczE0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzMNCntccnRsY2hcYWxhbmcxMDI1XGFmczIyXGx0cmNoXGZzMTRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xpbnNyc2lkMzYyODUyOVxwYXJ9fX17XHNocHJzbHRccGFyXHBhcmR7XHBpY3Rcd21ldGFmaWxlOFxwaWN3Z29hbDQwMzJccGljaGdvYWw0OTUgMDEwMDA5MDAwMDAzMWEwMDAwMDAwMDAwMDUwMDAwMDAwMDAwMDQwMDAwMDAwMzAxMDgwMDA1MDAwMDAwMGIwMjAwMDAwMDAwMDUwMDAwMDAwYzAyYzEwZmYwMDEwMzAwMDAwMDAwMDB9DQpccGFyfX19e1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGluc3JzaWQzNjI4NTI5XGtlcm5pbmcyXHBhcn19e1xmb290ZXJmXHBhcmRccGxhaW5caXRhcDBcczIyXGFzcGFscGhhXGFzcG51bVxhZGp1c3RyaWdodFxsdHJwYXJcbGkwXGxpbjBccmkwXHJpbjBccWxcZmFhdXRvXHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNca2VybmluZzINCntccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMjRcbGFuZ25wMTAzM1xsYW5nZmUxMDI0XGxhbmdmZW5wMTAzM1xpbnNyc2lkNjc0MzZca2VybmluZzJcbm9wcm9vZntcc2hwe1wqXHNocGluc3Rcc2hwbGlkMjA1MFxzaHBsZWZ0MFxzaHByaWdodDQwMzJcc2hwdG9wMFxzaHBib3R0b201NjFcc2hwZmhkcjFcc2hwejFcc2hwZmJsd3R4dDFcc2hwYnhtYXJnaW5cc2hwYnhpZ25vcmVcc2hwYnlwYXJhXHNocGJ5aWdub3JlXHNocHdyM1xzaHB3cmswDQp7XHNwe1xzbiBmTGF5b3V0SW5DZWxsfXtcc3YgMX19e1xzcHtcc24gbFR4aWR9e1xzdiAxMzEwNzJ9fXtcc3B7XHNuIGR4VGV4dExlZnR9e1xzdiAwfX17XHNwe1xzbiBkeVRleHRUb3B9e1xzdiAwfX17XHNwe1xzbiBkeFRleHRSaWdodH17XHN2IDB9fXtcc3B7XHNuIGR5VGV4dEJvdHRvbX17XHN2IDB9fXtcc3B7XHNuIGZGaWxsZWR9e1xzdiAwfX17XHNwe1xzbiBmTGluZX17XHN2IDB9fXtcc3B7XHNuIHd6TmFtZX17XHN2IHp6bXBUcmFpbGVyXzEwNzhfMUJ9fQ0Ke1xzcHtcc24gcG9zcmVsaH17XHN2IDB9fXtcc3B7XHNuIGZCZWhpbmREb2N1bWVudH17XHN2IDF9fXtcc3B7XHNuIGZIaWRkZW59e1xzdiAwfX17XHNwe1xzbiBmRmxpcEh9e1xzdiAwfX17XHNwe1xzbiBmRmxpcFZ9e1xzdiAwfX17XHNwe1xzbiBzaGFwZVR5cGV9e1xzdiAyMDJ9fXtcc2hwdHh0XHBhcmRccGxhaW5caXRhcDBcczY3XGFzcGFscGhhXGFzcG51bVxhZGp1c3RyaWdodFxub3dpZGN0bHBhclxsdHJwYXJcbGkwXGxpbjBccmkwXHJpbjANClxxbFxmYWF1dG9cc2wtMTYwXHNsbXVsdDBccnRsY2hcYWxhbmcxMDI1XGFmczIyXGx0cmNoXGZzMTRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tccnRsY2hcYWYwXGFsYW5nMTAyNVxhZnMyMlxsdHJjaFxmczE0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcZjBcaW5zcnNpZDY3NDM2IDQ5MjQtNzg2My0yNzI2LjJ9e1xydGxjaFxhbGFuZzEwMjVcYWZzMjJcbHRyY2hcZnMxNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGluc3JzaWQzNjI4NTI5DQpccGFyfVxwYXJkXHBsYWluXGl0YXAwXHM2N1xhc3BhbHBoYVxhc3BudW1cYWRqdXN0cmlnaHRcbm93aWRjdGxwYXJcbHRycGFyXGxpMFxsaW4wXHJpMFxyaW4wXHFsXGZhYXV0b1xzbC0xNjBcc2xtdWx0MFxydGxjaFxhbGFuZzEwMjVcYWZzMjJcbHRyY2hcZnMxNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMze1xydGxjaFxhbGFuZzEwMjVcYWZzMjJcbHRyY2hcZnMxNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGluc3JzaWQzNjI4NTI5DQpccGFyfX19e1xzaHByc2x0XHBhclxwYXJke1xwaWN0XHdtZXRhZmlsZThccGljd2dvYWw0MDMyXHBpY2hnb2FsNTYxIDAxMDAwOTAwMDAwMzFhMDAwMDAwMDAwMDA1MDAwMDAwMDAwMDA0MDAwMDAwMDMwMTA4MDAwNTAwMDAwMDBiMDIwMDAwMDAwMDA1MDAwMDAwMGMwMmMxMGYzMjAyMDMwMDAwMDAwMDAwfVxwYXJ9fX17XHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcaW5zcnNpZDM2Mjg1Mjlca2VybmluZzINClxwYXJ9fVxwYXJkXHBsYWluXGl0YXAwXHMwXGFzcGFscGhhXGFzcG51bVxhZGp1c3RyaWdodFxwYXJhcnNpZDI1NzEyNzRcbHRycGFyXGxpMFxsaW4wXHJpMFxyaW4wXHFjXGZhYXV0b1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGtlcm5pbmcye1xydGxjaFxhZjBcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzMw0KXGxvY2hcYWYwXGRiY2hcYWYzXGhpY2hcZjBcaW5zcnNpZDY3NDM2XGtlcm5pbmcyIExpYmVydHkgVXRpbGl0aWVzIChNaWRzdGF0ZXMgTmF0dXJhbCBHYXMpIENvcnAuIGQvYi9hIExpYmVydHkgVXRpbGl0aWVzfXtccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xpbnNyc2lkMjU3MTI3NFxrZXJuaW5nMlxwYXJ9XHBhcmRccGxhaW5caXRhcDBcczBcc2E0ODANClxhc3BhbHBoYVxhc3BudW1cYWRqdXN0cmlnaHRccGFyYXJzaWQyNTcxMjc0XGx0cnBhclxsaTBcbGluMFxyaTBccmluMFxxY1xmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xrZXJuaW5nMntccnRsY2hcYWYwXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcbG9jaFxhZjBcZGJjaFxhZjMNClxoaWNoXGYwXGluc3JzaWQ2NzQzNlxrZXJuaW5nMiBHRU5FUkFMIFRFUk1TIEFORCBDT05ESVRJT05TfXtccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xpbnNyc2lkMjU3MTI3NFxrZXJuaW5nMlxwYXJ9XHBhcmRccGxhaW5caXRhcDBcczBcc2E0ODBcYXNwYWxwaGFcYXNwbnVtXGFkanVzdHJpZ2h0XHBhcmFyc2lkMjU3MTI3NFxsdHJwYXJcbGkwXGxpbjBccmkwXHJpbjANClxxY1xmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xrZXJuaW5nMntccnRsY2hcYWYwXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcbG9jaFxhZjBcZGJjaFxhZjNcaGljaFxmMFxpbnNyc2lkNjc0MzZca2VybmluZzIgU1RBVEVNRU5UIE9GIENVUlJFTlRMWSBFRkZFQ1RJVkUgUkFURVN9DQp7XHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcaW5zcnNpZDI1NzEyNzRca2VybmluZzJccGFyfVxwYXJkXHBsYWluXGl0YXAwXHMwXHNhMjQwXGFzcGFscGhhXGFzcG51bVxhZGp1c3RyaWdodFxwYXJhcnNpZDI1NzEyNzRcbHRycGFyXGxpMFxsaW4wXHJpMFxyaW4wXHFqXGZhYXV0b1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGtlcm5pbmcyDQp7XHJ0bGNoXGFmMFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGxvY2hcYWYwXGRiY2hcYWYzXGhpY2hcZjBcaW5zcnNpZDY3NDM2XGtlcm5pbmcyIFRyYW5zcG9ydGVyXHU4MjE3IHMgcmF0ZSBlbGVjdGlvbiBmb3Igc2VydmljZSBoZXJldW5kZXIgaXMgbWFkZSBwdXJzdWFudCB0byAxOCBDLkYuUi4gXCdhNzI4NC4xMjMoYikoMSkoaWkpLiAgUHVyc3VhbnQgdG8gU2VjdGlvblx+NCBvZiBUcmFuc3BvcnRlclx1ODIxNyBzIEdlbmVyYWwgVGVybXMgYW5kIENvbmRpdGlvbnMsIHRoZSBmb2xsb3dpbmcgaXMgYSBzdGF0ZW1lbnQgb2YgVHJhbnNwb3J0ZXJcdTgyMTcgcyBjdXJyZW50bHkgZWZmZWN0aXZlIG1heGltdW0gYW5kIG1pbmltdW0gY2hhcmdlcyBmb3Igc2VydmljZSBoZXJldW5kZXI6fQ0Ke1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGluc3JzaWQyNTcxMjc0XGtlcm5pbmcyXHBhcn1cdHJvd2RcaXJvdzBcaXJvd2JhbmQwXGx0cnJvd1x0czExXHRyZ2FwaDEwOFx0cnBhZGRsMTA4XHRycGFkZGZsM1x0cmZ0c1dpZHRoMVx0cmF1dG9maXQxXHRycGFkZHQwXHRycGFkZGZ0M1x0cnBhZGRiMFx0cnBhZGRmYjNcdHJwYWRkcjEwOFx0cnBhZGRmcjNcdHJyaDBcdHJsZWZ0LTEwOFxjbHdXaWR0aDU1NzVcY2xmdHNXaWR0aDNcY2xwYWRsMFxjbHBhZGZsM1xjbHBhZGIwXGNscGFkZmIzXGNscGFkdDEwOFxjbHBhZGZ0M1xjbHBhZHIxMDgNClxjbHBhZGZyM1xjbGJyZHJsXGJyZHJub25lXGNsYnJkcnJcYnJkcm5vbmVcY2xicmRydFxicmRybm9uZVxjbGJyZHJiXGJyZHJzXGJyZHJ3MTBcYnJkcmNmMFxicnNwMFxjbGRnbGxcYnJkcm5vbmVcY2xkZ2x1XGJyZHJub25lXGNlbGx4NTQ2N1xjbHdXaWR0aDE4MDBcY2xmdHNXaWR0aDNcY2xwYWRsMFxjbHBhZGZsM1xjbHBhZGIwXGNscGFkZmIzXGNscGFkdDEwOFxjbHBhZGZ0M1xjbHBhZHIxMDhcY2xwYWRmcjNcY2xicmRybFxicmRybm9uZVxjbGJyZHJyDQpcYnJkcm5vbmVcY2xicmRydFxicmRybm9uZVxjbGJyZHJiXGJyZHJzXGJyZHJ3MTBcYnJkcmNmMFxicnNwMFxjbGRnbGxcYnJkcm5vbmVcY2xkZ2x1XGJyZHJub25lXGNlbGx4NzI2N1xjbHdXaWR0aDE5NzVcY2xmdHNXaWR0aDNcY2xwYWRsMFxjbHBhZGZsM1xjbHBhZGIwXGNscGFkZmIzXGNscGFkdDEwOFxjbHBhZGZ0M1xjbHBhZHIxMDhcY2xwYWRmcjNcY2xicmRybFxicmRybm9uZVxjbGJyZHJyXGJyZHJub25lXGNsYnJkcnRcYnJkcm5vbmVcY2xicmRyYg0KXGJyZHJzXGJyZHJ3MTBcYnJkcmNmMFxicnNwMFxjbGRnbGxcYnJkcm5vbmVcY2xkZ2x1XGJyZHJub25lXGNlbGx4OTI0Mlx0Ymxsa2hkcnJvd3NcdGJsbGtoZHJjb2xzXHRibGxrbm9jb2xiYW5kXHBhcmRccGxhaW5caW50YmxcaXRhcDFcczBcYXNwYWxwaGFcYXNwbnVtXGFkanVzdHJpZ2h0XHBhcmFyc2lkMzQxOTU3MFxsdHJwYXJcbGkwXGxpbjBccmkwXHJpbjBccWxcZmFhdXRvXHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNca2VybmluZzJ7XHJ0bGNoXGFmMFxhbGFuZzEwMjVcYWZzMjQNClxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcbG9jaFxhZjBcZGJjaFxhZjNcaGljaFxmMFxjaGFycnNpZDI1NzEyNzRcaW5zcnNpZDY3NDM2XGtlcm5pbmcyIEludGVycnVwdGlibGUgVHJhbnNwb3J0YXRpb24gU2VydmljZTp9e1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGRiY2hcZjNcY2hhcnJzaWQyNTcxMjc0XGluc3JzaWQyNTcxMjc0XGtlcm5pbmcyDQpcY2VsbH1ccGFyZFxwbGFpblxpbnRibFxpdGFwMVxzMFxhc3BhbHBoYVxhc3BudW1cYWRqdXN0cmlnaHRccGFyYXJzaWQzNDE5NTcwXGx0cnBhclxsaTBcbGluMFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xrZXJuaW5nMntccnRsY2hcYWYwXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzMNClxsb2NoXGFmMFxkYmNoXGFmM1xoaWNoXGYwXGNoYXJyc2lkMjU3MTI3NFxpbnNyc2lkNjc0MzZca2VybmluZzIgTWF4aW0gUGVyIENjZn17XHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcZGJjaFxmM1xjaGFycnNpZDI1NzEyNzRcaW5zcnNpZDI1NzEyNzRca2VybmluZzJcY2VsbH1ccGFyZFxwbGFpblxpbnRibFxpdGFwMVxzMFxhc3BhbHBoYVxhc3BudW0NClxhZGp1c3RyaWdodFxwYXJhcnNpZDM0MTk1NzBcbHRycGFyXGxpMFxsaW4wXHJpMFxyaW4wXHFsXGZhYXV0b1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGtlcm5pbmcye1xydGxjaFxhZjBcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xsb2NoXGFmMFxkYmNoXGFmM1xoaWNoXGYwXGNoYXJyc2lkMjU3MTI3NFxpbnNyc2lkNjc0MzZca2VybmluZzIgTWluaW11bSBQZXIgQ2NmfQ0Ke1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGRiY2hcZjNcY2hhcnJzaWQyNTcxMjc0XGluc3JzaWQyNTcxMjc0XGtlcm5pbmcyXGNlbGx9e1x0cm93ZFxpcm93MFxpcm93YmFuZDBcbHRycm93XHRzMTFcdHJnYXBoMTA4XHRycGFkZGwxMDhcdHJwYWRkZmwzXHRyZnRzV2lkdGgxXHRyYXV0b2ZpdDFcdHJwYWRkdDBcdHJwYWRkZnQzXHRycGFkZGIwXHRycGFkZGZiM1x0cnBhZGRyMTA4XHRycGFkZGZyM1x0cnJoMFx0cmxlZnQtMTA4XGNsd1dpZHRoNTU3NVxjbGZ0c1dpZHRoM1xjbHBhZGwwXGNscGFkZmwzXGNscGFkYjBcY2xwYWRmYjNcY2xwYWR0MTA4XGNscGFkZnQzXGNscGFkcjEwOA0KXGNscGFkZnIzXGNsYnJkcmxcYnJkcm5vbmVcY2xicmRyclxicmRybm9uZVxjbGJyZHJ0XGJyZHJub25lXGNsYnJkcmJcYnJkcnNcYnJkcncxMFxicmRyY2YwXGJyc3AwXGNsZGdsbFxicmRybm9uZVxjbGRnbHVcYnJkcm5vbmVcY2VsbHg1NDY3XGNsd1dpZHRoMTgwMFxjbGZ0c1dpZHRoM1xjbHBhZGwwXGNscGFkZmwzXGNscGFkYjBcY2xwYWRmYjNcY2xwYWR0MTA4XGNscGFkZnQzXGNscGFkcjEwOFxjbHBhZGZyM1xjbGJyZHJsXGJyZHJub25lXGNsYnJkcnINClxicmRybm9uZVxjbGJyZHJ0XGJyZHJub25lXGNsYnJkcmJcYnJkcnNcYnJkcncxMFxicmRyY2YwXGJyc3AwXGNsZGdsbFxicmRybm9uZVxjbGRnbHVcYnJkcm5vbmVcY2VsbHg3MjY3XGNsd1dpZHRoMTk3NVxjbGZ0c1dpZHRoM1xjbHBhZGwwXGNscGFkZmwzXGNscGFkYjBcY2xwYWRmYjNcY2xwYWR0MTA4XGNscGFkZnQzXGNscGFkcjEwOFxjbHBhZGZyM1xjbGJyZHJsXGJyZHJub25lXGNsYnJkcnJcYnJkcm5vbmVcY2xicmRydFxicmRybm9uZVxjbGJyZHJiDQpcYnJkcnNcYnJkcncxMFxicmRyY2YwXGJyc3AwXGNsZGdsbFxicmRybm9uZVxjbGRnbHVcYnJkcm5vbmVcY2VsbHg5MjQyXHRibGxraGRycm93c1x0Ymxsa2hkcmNvbHNcdGJsbGtub2NvbGJhbmRccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzMw0KXGRiY2hcZjNcY2hhcnJzaWQyNTcxMjc0XGluc3JzaWQyNTcxMjc0XGtlcm5pbmcyXHJvd31cdHJvd2RcaXJvdzFcaXJvd2JhbmQxXGx0cnJvd1x0czExXHRyZ2FwaDEwOFx0cnBhZGRsMTA4XHRycGFkZGZsM1x0cmZ0c1dpZHRoMVx0cmF1dG9maXQxXHRycGFkZHQwXHRycGFkZGZ0M1x0cnBhZGRiMFx0cnBhZGRmYjNcdHJwYWRkcjEwOFx0cnBhZGRmcjNcdHJyaDBcdHJsZWZ0LTEwOFxjbHdXaWR0aDU1NzVcY2xmdHNXaWR0aDNcY2xwYWRsMFxjbHBhZGZsM1xjbHBhZGIwXGNscGFkZmIzXGNscGFkdDEwOFxjbHBhZGZ0M1xjbHBhZHIxMDgNClxjbHBhZGZyM1xjbGJyZHJsXGJyZHJub25lXGNsYnJkcnJcYnJkcm5vbmVcY2xicmRydFxicmRyc1xicmRydzEwXGJyZHJjZjBcYnJzcDBcY2xicmRyYlxicmRybm9uZVxjbGRnbGxcYnJkcm5vbmVcY2xkZ2x1XGJyZHJub25lXGNlbGx4NTQ2N1xjbHdXaWR0aDE4MDBcY2xmdHNXaWR0aDNcY2xwYWRsMFxjbHBhZGZsM1xjbHBhZGIwXGNscGFkZmIzXGNscGFkdDEwOFxjbHBhZGZ0M1xjbHBhZHIxMDhcY2xwYWRmcjNcY2xicmRybFxicmRybm9uZVxjbGJyZHJyDQpcYnJkcm5vbmVcY2xicmRydFxicmRyc1xicmRydzEwXGJyZHJjZjBcYnJzcDBcY2xicmRyYlxicmRybm9uZVxjbGRnbGxcYnJkcm5vbmVcY2xkZ2x1XGJyZHJub25lXGNlbGx4NzI2N1xjbHdXaWR0aDE5NzVcY2xmdHNXaWR0aDNcY2xwYWRsMFxjbHBhZGZsM1xjbHBhZGIwXGNscGFkZmIzXGNscGFkdDEwOFxjbHBhZGZ0M1xjbHBhZHIxMDhcY2xwYWRmcjNcY2xicmRybFxicmRybm9uZVxjbGJyZHJyXGJyZHJub25lXGNsYnJkcnRcYnJkcnNcYnJkcncxMFxicmRyY2YwXGJyc3AwDQpcY2xicmRyYlxicmRybm9uZVxjbGRnbGxcYnJkcm5vbmVcY2xkZ2x1XGJyZHJub25lXGNlbGx4OTI0Mlx0Ymxsa2hkcnJvd3NcdGJsbGtoZHJjb2xzXHRibGxrbm9jb2xiYW5kXHBhcmRccGxhaW5caW50YmxcaXRhcDFcczBcYXNwYWxwaGFcYXNwbnVtXGFkanVzdHJpZ2h0XHBhcmFyc2lkNDM0MzM4OVxsdHJwYXJcbGkwXGxpbjBccmkwXHJpbjBccWxcZmFhdXRvXHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNca2VybmluZzJ7XHJ0bGNoXGFsYW5nMTAyNVxhZnMyNA0KXGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xkYmNoXGYzXGluc3JzaWQyNTcxMjc0XGtlcm5pbmcyXGNlbGx9XHBhcmRccGxhaW5caW50YmxcaXRhcDFcczBcYXNwYWxwaGFcYXNwbnVtXGFkanVzdHJpZ2h0XHBhcmFyc2lkMjU3MTI3NFxsdHJwYXJcbGkwXGxpbjBccmkwXHJpbjBccWxcZmFhdXRvXHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNca2VybmluZzINCntccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xkYmNoXGYzXGluc3JzaWQyNTcxMjc0XGtlcm5pbmcyXGNlbGx9XHBhcmRccGxhaW5caW50YmxcaXRhcDFcczBcYXNwYWxwaGFcYXNwbnVtXGFkanVzdHJpZ2h0XHBhcmFyc2lkMzQxOTU3MFxsdHJwYXJcbGkwXGxpbjBccmkwXHJpbjBccWxcZmFhdXRvXHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNca2VybmluZzINCntccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xkYmNoXGYzXGluc3JzaWQyNTcxMjc0XGtlcm5pbmcyXGNlbGx9e1x0cm93ZFxpcm93MVxpcm93YmFuZDFcbHRycm93XHRzMTFcdHJnYXBoMTA4XHRycGFkZGwxMDhcdHJwYWRkZmwzXHRyZnRzV2lkdGgxXHRyYXV0b2ZpdDFcdHJwYWRkdDBcdHJwYWRkZnQzXHRycGFkZGIwXHRycGFkZGZiM1x0cnBhZGRyMTA4XHRycGFkZGZyM1x0cnJoMFx0cmxlZnQtMTA4XGNsd1dpZHRoNTU3NVxjbGZ0c1dpZHRoM1xjbHBhZGwwXGNscGFkZmwzXGNscGFkYjBcY2xwYWRmYjNcY2xwYWR0MTA4XGNscGFkZnQzXGNscGFkcjEwOA0KXGNscGFkZnIzXGNsYnJkcmxcYnJkcm5vbmVcY2xicmRyclxicmRybm9uZVxjbGJyZHJ0XGJyZHJzXGJyZHJ3MTBcYnJkcmNmMFxicnNwMFxjbGJyZHJiXGJyZHJub25lXGNsZGdsbFxicmRybm9uZVxjbGRnbHVcYnJkcm5vbmVcY2VsbHg1NDY3XGNsd1dpZHRoMTgwMFxjbGZ0c1dpZHRoM1xjbHBhZGwwXGNscGFkZmwzXGNscGFkYjBcY2xwYWRmYjNcY2xwYWR0MTA4XGNscGFkZnQzXGNscGFkcjEwOFxjbHBhZGZyM1xjbGJyZHJsXGJyZHJub25lXGNsYnJkcnINClxicmRybm9uZVxjbGJyZHJ0XGJyZHJzXGJyZHJ3MTBcYnJkcmNmMFxicnNwMFxjbGJyZHJiXGJyZHJub25lXGNsZGdsbFxicmRybm9uZVxjbGRnbHVcYnJkcm5vbmVcY2VsbHg3MjY3XGNsd1dpZHRoMTk3NVxjbGZ0c1dpZHRoM1xjbHBhZGwwXGNscGFkZmwzXGNscGFkYjBcY2xwYWRmYjNcY2xwYWR0MTA4XGNscGFkZnQzXGNscGFkcjEwOFxjbHBhZGZyM1xjbGJyZHJsXGJyZHJub25lXGNsYnJkcnJcYnJkcm5vbmVcY2xicmRydFxicmRyc1xicmRydzEwXGJyZHJjZjBcYnJzcDANClxjbGJyZHJiXGJyZHJub25lXGNsZGdsbFxicmRybm9uZVxjbGRnbHVcYnJkcm5vbmVcY2VsbHg5MjQyXHRibGxraGRycm93c1x0Ymxsa2hkcmNvbHNcdGJsbGtub2NvbGJhbmRccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xkYmNoXGYzXGluc3JzaWQyNTcxMjc0XGtlcm5pbmcyDQpccm93fVx0cm93ZFxpcm93Mlxpcm93YmFuZDJcbHRycm93XHRzMTFcdHJnYXBoMTA4XHRycGFkZGwxMDhcdHJwYWRkZmwzXHRyZnRzV2lkdGgxXHRyYXV0b2ZpdDFcdHJwYWRkdDBcdHJwYWRkZnQzXHRycGFkZGIwXHRycGFkZGZiM1x0cnBhZGRyMTA4XHRycGFkZGZyM1x0cnJoMFx0cmxlZnQtMTA4XGNsd1dpZHRoNTU3NVxjbGZ0c1dpZHRoM1xjbHBhZGwwXGNscGFkZmwzXGNscGFkYjBcY2xwYWRmYjNcY2xwYWR0MTA4XGNscGFkZnQzXGNscGFkcjEwOA0KXGNscGFkZnIzXGNsYnJkcmxcYnJkcm5vbmVcY2xicmRyclxicmRybm9uZVxjbGJyZHJ0XGJyZHJub25lXGNsYnJkcmJcYnJkcm5vbmVcY2xkZ2xsXGJyZHJub25lXGNsZGdsdVxicmRybm9uZVxjZWxseDU0NjdcY2x3V2lkdGgxODAwXGNsZnRzV2lkdGgzXGNscGFkbDBcY2xwYWRmbDNcY2xwYWRiMFxjbHBhZGZiM1xjbHBhZHQxMDhcY2xwYWRmdDNcY2xwYWRyMTA4XGNscGFkZnIzXGNsYnJkcmxcYnJkcm5vbmVcY2xicmRyclxicmRybm9uZVxjbGJyZHJ0DQpcYnJkcm5vbmVcY2xicmRyYlxicmRybm9uZVxjbGRnbGxcYnJkcm5vbmVcY2xkZ2x1XGJyZHJub25lXGNlbGx4NzI2N1xjbHdXaWR0aDE5NzVcY2xmdHNXaWR0aDNcY2xwYWRsMFxjbHBhZGZsM1xjbHBhZGIwXGNscGFkZmIzXGNscGFkdDEwOFxjbHBhZGZ0M1xjbHBhZHIxMDhcY2xwYWRmcjNcY2xicmRybFxicmRybm9uZVxjbGJyZHJyXGJyZHJub25lXGNsYnJkcnRcYnJkcm5vbmVcY2xicmRyYlxicmRybm9uZVxjbGRnbGxcYnJkcm5vbmVcY2xkZ2x1DQpcYnJkcm5vbmVcY2VsbHg5MjQyXHRibGxraGRycm93c1x0Ymxsa2hkcmNvbHNcdGJsbGtub2NvbGJhbmRccGFyZFxwbGFpblxpbnRibFxpdGFwMVxzMFx0eDcwNlxzYjI0MFxhc3BhbHBoYVxhc3BudW1cYWRqdXN0cmlnaHRccGFyYXJzaWQ2NzQzNlxsdHJwYXJcbGktMTRcbGluLTE0XHJpMFxyaW4wXHFsXGZhYXV0b1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGtlcm5pbmcye1xydGxjaFxhZjBcYWxhbmcxMDI1XGFmczI0DQpcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGxvY2hcYWYwXGRiY2hcYWYzXGhpY2hcZjBcaW5zcnNpZDY3NDM2XGtlcm5pbmcyIFx0YWIgfXtccnRsY2hcYWYwXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcbG9jaFxhZjBcZGJjaFxhZjNcaGljaFxmMFxpbnNyc2lkMjU3MTI3NFxrZXJuaW5nMiBNb250aGx5IERlbGl2ZXJ5IENoYXJnZSAocGVyIG1ldGVyKX0NCntccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xkYmNoXGYzXGNoYXJyc2lkMjU3MTI3NFxpbnNyc2lkMjU3MTI3NFxrZXJuaW5nMlxjZWxsfVxwYXJkXHBsYWluXGludGJsXGl0YXAxXHMwXHNiMjQwXGFzcGFscGhhXGFzcG51bVxhZGp1c3RyaWdodFxwYXJhcnNpZDY3NDM2XGx0cnBhclxsaTBcbGluMFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0DQpcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGtlcm5pbmcye1xydGxjaFxhZjBcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xsb2NoXGFmMFxkYmNoXGFmM1xoaWNoXGYwXGluc3JzaWQ2NzQzNlxrZXJuaW5nMiAkOTUxLjAwfXtccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzMw0KXGRiY2hcZjNcY2hhcnJzaWQyNTcxMjc0XGluc3JzaWQyNTcxMjc0XGtlcm5pbmcyXGNlbGx9XHBhcmRccGxhaW5caW50YmxcaXRhcDFcczBcc2IyNDBcYXNwYWxwaGFcYXNwbnVtXGFkanVzdHJpZ2h0XHBhcmFyc2lkNjc0MzZcbHRycGFyXGxpMFxsaW4wXHJpMFxyaW4wXHFsXGZhYXV0b1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGtlcm5pbmcye1xydGxjaFxhbGFuZzEwMjVcYWZzMjQNClxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcZGJjaFxmM1xjaGFycnNpZDI1NzEyNzRcaW5zcnNpZDI1NzEyNzRca2VybmluZzJcY2VsbH17XHRyb3dkXGlyb3cyXGlyb3diYW5kMlxsdHJyb3dcdHMxMVx0cmdhcGgxMDhcdHJwYWRkbDEwOFx0cnBhZGRmbDNcdHJmdHNXaWR0aDFcdHJhdXRvZml0MVx0cnBhZGR0MFx0cnBhZGRmdDNcdHJwYWRkYjBcdHJwYWRkZmIzXHRycGFkZHIxMDhcdHJwYWRkZnIzXHRycmgwXHRybGVmdC0xMDhcY2x3V2lkdGg1NTc1XGNsZnRzV2lkdGgzXGNscGFkbDBcY2xwYWRmbDNcY2xwYWRiMFxjbHBhZGZiM1xjbHBhZHQxMDhcY2xwYWRmdDNcY2xwYWRyMTA4DQpcY2xwYWRmcjNcY2xicmRybFxicmRybm9uZVxjbGJyZHJyXGJyZHJub25lXGNsYnJkcnRcYnJkcm5vbmVcY2xicmRyYlxicmRybm9uZVxjbGRnbGxcYnJkcm5vbmVcY2xkZ2x1XGJyZHJub25lXGNlbGx4NTQ2N1xjbHdXaWR0aDE4MDBcY2xmdHNXaWR0aDNcY2xwYWRsMFxjbHBhZGZsM1xjbHBhZGIwXGNscGFkZmIzXGNscGFkdDEwOFxjbHBhZGZ0M1xjbHBhZHIxMDhcY2xwYWRmcjNcY2xicmRybFxicmRybm9uZVxjbGJyZHJyXGJyZHJub25lXGNsYnJkcnQNClxicmRybm9uZVxjbGJyZHJiXGJyZHJub25lXGNsZGdsbFxicmRybm9uZVxjbGRnbHVcYnJkcm5vbmVcY2VsbHg3MjY3XGNsd1dpZHRoMTk3NVxjbGZ0c1dpZHRoM1xjbHBhZGwwXGNscGFkZmwzXGNscGFkYjBcY2xwYWRmYjNcY2xwYWR0MTA4XGNscGFkZnQzXGNscGFkcjEwOFxjbHBhZGZyM1xjbGJyZHJsXGJyZHJub25lXGNsYnJkcnJcYnJkcm5vbmVcY2xicmRydFxicmRybm9uZVxjbGJyZHJiXGJyZHJub25lXGNsZGdsbFxicmRybm9uZVxjbGRnbHUNClxicmRybm9uZVxjZWxseDkyNDJcdGJsbGtoZHJyb3dzXHRibGxraGRyY29sc1x0Ymxsa25vY29sYmFuZFxydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGRiY2hcZjNcY2hhcnJzaWQyNTcxMjc0XGluc3JzaWQyNTcxMjc0XGtlcm5pbmcyDQpccm93fVx0cm93ZFxpcm93M1xpcm93YmFuZDNcbHRycm93XHRzMTFcdHJnYXBoMTA4XHRycGFkZGwxMDhcdHJwYWRkZmwzXHRyZnRzV2lkdGgxXHRyYXV0b2ZpdDFcdHJwYWRkdDBcdHJwYWRkZnQzXHRycGFkZGIwXHRycGFkZGZiM1x0cnBhZGRyMTA4XHRycGFkZGZyM1x0cnJoMFx0cmxlZnQtMTA4XGNsd1dpZHRoNTU3NVxjbGZ0c1dpZHRoM1xjbHBhZGwwXGNscGFkZmwzXGNscGFkYjBcY2xwYWRmYjNcY2xwYWR0MTA4XGNscGFkZnQzXGNscGFkcjEwOA0KXGNscGFkZnIzXGNsYnJkcmxcYnJkcm5vbmVcY2xicmRyclxicmRybm9uZVxjbGJyZHJ0XGJyZHJub25lXGNsYnJkcmJcYnJkcm5vbmVcY2xkZ2xsXGJyZHJub25lXGNsZGdsdVxicmRybm9uZVxjZWxseDU0NjdcY2x3V2lkdGgxODAwXGNsZnRzV2lkdGgzXGNscGFkbDBcY2xwYWRmbDNcY2xwYWRiMFxjbHBhZGZiM1xjbHBhZHQxMDhcY2xwYWRmdDNcY2xwYWRyMTA4XGNscGFkZnIzXGNsYnJkcmxcYnJkcm5vbmVcY2xicmRyclxicmRybm9uZVxjbGJyZHJ0DQpcYnJkcm5vbmVcY2xicmRyYlxicmRybm9uZVxjbGRnbGxcYnJkcm5vbmVcY2xkZ2x1XGJyZHJub25lXGNlbGx4NzI2N1xjbHdXaWR0aDE5NzVcY2xmdHNXaWR0aDNcY2xwYWRsMFxjbHBhZGZsM1xjbHBhZGIwXGNscGFkZmIzXGNscGFkdDEwOFxjbHBhZGZ0M1xjbHBhZHIxMDhcY2xwYWRmcjNcY2xicmRybFxicmRybm9uZVxjbGJyZHJyXGJyZHJub25lXGNsYnJkcnRcYnJkcm5vbmVcY2xicmRyYlxicmRybm9uZVxjbGRnbGxcYnJkcm5vbmVcY2xkZ2x1DQpcYnJkcm5vbmVcY2VsbHg5MjQyXHRibGxraGRycm93c1x0Ymxsa2hkcmNvbHNcdGJsbGtub2NvbGJhbmRccGFyZFxwbGFpblxpbnRibFxpdGFwMVxzMFx0eDcwNlxhc3BhbHBoYVxhc3BudW1cYWRqdXN0cmlnaHRccGFyYXJzaWQ2NzQzNlxsdHJwYXJcbGktMTRcbGluLTE0XHJpMFxyaW4wXHFsXGZhYXV0b1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGtlcm5pbmcye1xydGxjaFxhZjBcYWxhbmcxMDI1XGFmczI0DQpcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGxvY2hcYWYwXGRiY2hcYWYzXGhpY2hcZjBcaW5zcnNpZDY3NDM2XGtlcm5pbmcyIFx0YWIgQ29tbW9kaXR5IENoYXJnZX17XHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcZGJjaFxmM1xpbnNyc2lkNDM0MzM4OVxrZXJuaW5nMlxjZWxsfVxwYXJkXHBsYWluXGludGJsXGl0YXAxXHMwDQpcYXNwYWxwaGFcYXNwbnVtXGFkanVzdHJpZ2h0XHBhcmFyc2lkMjU3MTI3NFxsdHJwYXJcbGkwXGxpbjBccmkwXHJpbjBccWxcZmFhdXRvXHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNca2VybmluZzJ7XHJ0bGNoXGFmMFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGxvY2hcYWYwXGRiY2hcYWYzDQpcaGljaFxmMFxpbnNyc2lkNjc0MzZca2VybmluZzIgJDAuMjU1ODN9e1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGRiY2hcZjNcaW5zcnNpZDQzNDMzODlca2VybmluZzJcY2VsbH1ccGFyZFxwbGFpblxpbnRibFxpdGFwMVxzMFxhc3BhbHBoYVxhc3BudW1cYWRqdXN0cmlnaHRccGFyYXJzaWQzNDE5NTcwXGx0cnBhclxsaTBcbGluMFxyaTBccmluMFxxbA0KXGZhYXV0b1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGtlcm5pbmcye1xydGxjaFxhZjBcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xsb2NoXGFmMFxkYmNoXGFmM1xoaWNoXGYwXGluc3JzaWQ2NzQzNlxrZXJuaW5nMiAkMC4wfXtccnRsY2hcYWYwXGFsYW5nMTAyNVxhZnMyNA0KXGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xsb2NoXGFmMFxkYmNoXGFmM1xoaWNoXGYwXGluc3JzaWQ2MTYyMDM4XGtlcm5pbmcyIDF9e1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGRiY2hcZjNcaW5zcnNpZDQzNDMzODlca2VybmluZzJcY2VsbH17XHRyb3dkXGlyb3czXGlyb3diYW5kM1xsdHJyb3dcdHMxMVx0cmdhcGgxMDhcdHJwYWRkbDEwOFx0cnBhZGRmbDNcdHJmdHNXaWR0aDFcdHJhdXRvZml0MVx0cnBhZGR0MFx0cnBhZGRmdDNcdHJwYWRkYjBcdHJwYWRkZmIzXHRycGFkZHIxMDhcdHJwYWRkZnIzXHRycmgwXHRybGVmdC0xMDhcY2x3V2lkdGg1NTc1XGNsZnRzV2lkdGgzXGNscGFkbDBcY2xwYWRmbDNcY2xwYWRiMFxjbHBhZGZiM1xjbHBhZHQxMDhcY2xwYWRmdDNcY2xwYWRyMTA4DQpcY2xwYWRmcjNcY2xicmRybFxicmRybm9uZVxjbGJyZHJyXGJyZHJub25lXGNsYnJkcnRcYnJkcm5vbmVcY2xicmRyYlxicmRybm9uZVxjbGRnbGxcYnJkcm5vbmVcY2xkZ2x1XGJyZHJub25lXGNlbGx4NTQ2N1xjbHdXaWR0aDE4MDBcY2xmdHNXaWR0aDNcY2xwYWRsMFxjbHBhZGZsM1xjbHBhZGIwXGNscGFkZmIzXGNscGFkdDEwOFxjbHBhZGZ0M1xjbHBhZHIxMDhcY2xwYWRmcjNcY2xicmRybFxicmRybm9uZVxjbGJyZHJyXGJyZHJub25lXGNsYnJkcnQNClxicmRybm9uZVxjbGJyZHJiXGJyZHJub25lXGNsZGdsbFxicmRybm9uZVxjbGRnbHVcYnJkcm5vbmVcY2VsbHg3MjY3XGNsd1dpZHRoMTk3NVxjbGZ0c1dpZHRoM1xjbHBhZGwwXGNscGFkZmwzXGNscGFkYjBcY2xwYWRmYjNcY2xwYWR0MTA4XGNscGFkZnQzXGNscGFkcjEwOFxjbHBhZGZyM1xjbGJyZHJsXGJyZHJub25lXGNsYnJkcnJcYnJkcm5vbmVcY2xicmRydFxicmRybm9uZVxjbGJyZHJiXGJyZHJub25lXGNsZGdsbFxicmRybm9uZVxjbGRnbHUNClxicmRybm9uZVxjZWxseDkyNDJcdGJsbGtoZHJyb3dzXHRibGxraGRyY29scw0KXHRibGxrbm9jb2xiYW5kXHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcZGJjaFxmM1xpbnNyc2lkNDM0MzM4OVxrZXJuaW5nMlxyb3d9XHRyb3dkXGlyb3c0XGlyb3diYW5kNFxsdHJyb3dcdHMxMVx0cmdhcGgxMDhcdHJwYWRkbDEwOFx0cnBhZGRmbDNcdHJmdHNXaWR0aDFcdHJhdXRvZml0MVx0cnBhZGR0MFx0cnBhZGRmdDNcdHJwYWRkYjBcdHJwYWRkZmIzXHRycGFkZHIxMDhcdHJwYWRkZnIzXHRycmgwXHRybGVmdC0xMDhcY2x3V2lkdGg1NTc1XGNsZnRzV2lkdGgzXGNscGFkbDBcY2xwYWRmbDNcY2xwYWRiMFxjbHBhZGZiM1xjbHBhZHQxMDhcY2xwYWRmdDNcY2xwYWRyMTA4DQpcY2xwYWRmcjNcY2xicmRybFxicmRybm9uZVxjbGJyZHJyXGJyZHJub25lXGNsYnJkcnRcYnJkcm5vbmVcY2xicmRyYlxicmRybm9uZVxjbGRnbGxcYnJkcm5vbmVcY2xkZ2x1XGJyZHJub25lXGNlbGx4NTQ2N1xjbHdXaWR0aDE4MDBcY2xmdHNXaWR0aDNcY2xwYWRsMFxjbHBhZGZsM1xjbHBhZGIwXGNscGFkZmIzXGNscGFkdDEwOFxjbHBhZGZ0M1xjbHBhZHIxMDhcY2xwYWRmcjNcY2xicmRybFxicmRybm9uZVxjbGJyZHJyXGJyZHJub25lXGNsYnJkcnQNClxicmRybm9uZVxjbGJyZHJiXGJyZHJub25lXGNsZGdsbFxicmRybm9uZVxjbGRnbHVcYnJkcm5vbmVcY2VsbHg3MjY3XGNsd1dpZHRoMTk3NVxjbGZ0c1dpZHRoM1xjbHBhZGwwXGNscGFkZmwzXGNscGFkYjBcY2xwYWRmYjNcY2xwYWR0MTA4XGNscGFkZnQzXGNscGFkcjEwOFxjbHBhZGZyM1xjbGJyZHJsXGJyZHJub25lXGNsYnJkcnJcYnJkcm5vbmVcY2xicmRydFxicmRybm9uZVxjbGJyZHJiXGJyZHJub25lXGNsZGdsbFxicmRybm9uZVxjbGRnbHUNClxicmRybm9uZVxjZWxseDkyNDJcdGJsbGtoZHJyb3dzXHRibGxraGRyY29sc1x0Ymxsa25vY29sYmFuZFxwYXJkXHBsYWluXGludGJsXGl0YXAxXHMwXHNiMjQwXGFzcGFscGhhXGFzcG51bVxhZGp1c3RyaWdodFxwYXJhcnNpZDY3NDM2XGx0cnBhclxsaTBcbGluMFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xrZXJuaW5nMntccnRsY2hcYWYwXGFsYW5nMTAyNVxhZnMyNA0KXGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xsb2NoXGFmMFxkYmNoXGFmM1xoaWNoXGYwXGluc3JzaWQ2NzQzNlxrZXJuaW5nMiBGaXJtIFRyYW5zcG9ydGF0aW9uIFNlcnZpY2U6fXtccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xkYmNoXGYzXGluc3JzaWQyNTcxMjc0XGtlcm5pbmcyXGNlbGx9XHBhcmQNClxwbGFpblxpbnRibFxpdGFwMVxzMFxhc3BhbHBoYVxhc3BudW1cYWRqdXN0cmlnaHRccGFyYXJzaWQyNTcxMjc0XGx0cnBhclxsaTBcbGluMFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xrZXJuaW5nMntccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzMw0KXGRiY2hcZjNcaW5zcnNpZDI1NzEyNzRca2VybmluZzJcY2VsbH1ccGFyZFxwbGFpblxpbnRibFxpdGFwMVxzMFxhc3BhbHBoYVxhc3BudW1cYWRqdXN0cmlnaHRccGFyYXJzaWQzNDE5NTcwXGx0cnBhclxsaTBcbGluMFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xrZXJuaW5nMntccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzMw0KXGRiY2hcZjNcaW5zcnNpZDI1NzEyNzRca2VybmluZzJcY2VsbH17XHRyb3dkXGlyb3c0XGlyb3diYW5kNFxsdHJyb3dcdHMxMVx0cmdhcGgxMDhcdHJwYWRkbDEwOFx0cnBhZGRmbDNcdHJmdHNXaWR0aDFcdHJhdXRvZml0MVx0cnBhZGR0MFx0cnBhZGRmdDNcdHJwYWRkYjBcdHJwYWRkZmIzXHRycGFkZHIxMDhcdHJwYWRkZnIzXHRycmgwXHRybGVmdC0xMDhcY2x3V2lkdGg1NTc1XGNsZnRzV2lkdGgzXGNscGFkbDBcY2xwYWRmbDNcY2xwYWRiMFxjbHBhZGZiM1xjbHBhZHQxMDhcY2xwYWRmdDNcY2xwYWRyMTA4DQpcY2xwYWRmcjNcY2xicmRybFxicmRybm9uZVxjbGJyZHJyXGJyZHJub25lXGNsYnJkcnRcYnJkcm5vbmVcY2xicmRyYlxicmRybm9uZVxjbGRnbGxcYnJkcm5vbmVcY2xkZ2x1XGJyZHJub25lXGNlbGx4NTQ2N1xjbHdXaWR0aDE4MDBcY2xmdHNXaWR0aDNcY2xwYWRsMFxjbHBhZGZsM1xjbHBhZGIwXGNscGFkZmIzXGNscGFkdDEwOFxjbHBhZGZ0M1xjbHBhZHIxMDhcY2xwYWRmcjNcY2xicmRybFxicmRybm9uZVxjbGJyZHJyXGJyZHJub25lXGNsYnJkcnQNClxicmRybm9uZVxjbGJyZHJiXGJyZHJub25lXGNsZGdsbFxicmRybm9uZVxjbGRnbHVcYnJkcm5vbmVcY2VsbHg3MjY3XGNsd1dpZHRoMTk3NVxjbGZ0c1dpZHRoM1xjbHBhZGwwXGNscGFkZmwzXGNscGFkYjBcY2xwYWRmYjNcY2xwYWR0MTA4XGNscGFkZnQzXGNscGFkcjEwOFxjbHBhZGZyM1xjbGJyZHJsXGJyZHJub25lXGNsYnJkcnJcYnJkcm5vbmVcY2xicmRydFxicmRybm9uZVxjbGJyZHJiXGJyZHJub25lXGNsZGdsbFxicmRybm9uZVxjbGRnbHUNClxicmRybm9uZVxjZWxseDkyNDJcdGJsbGtoZHJyb3dzXHRibGxraGRyY29sc1x0Ymxsa25vY29sYmFuZFxydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGRiY2hcZjNcaW5zcnNpZDI1NzEyNzRca2VybmluZzJccm93fVx0cm93ZFxpcm93NVxpcm93YmFuZDVcbHRycm93XHRzMTFcdHJnYXBoMTA4XHRycGFkZGwxMDhcdHJwYWRkZmwzXHRyZnRzV2lkdGgxXHRyYXV0b2ZpdDFcdHJwYWRkdDBcdHJwYWRkZnQzXHRycGFkZGIwXHRycGFkZGZiM1x0cnBhZGRyMTA4XHRycGFkZGZyM1x0cnJoMFx0cmxlZnQtMTA4XGNsd1dpZHRoNTU3NVxjbGZ0c1dpZHRoM1xjbHBhZGwwXGNscGFkZmwzXGNscGFkYjBcY2xwYWRmYjNcY2xwYWR0MTA4XGNscGFkZnQzXGNscGFkcjEwOA0KXGNscGFkZnIzXGNsYnJkcmxcYnJkcm5vbmVcY2xicmRyclxicmRybm9uZVxjbGJyZHJ0XGJyZHJub25lXGNsYnJkcmJcYnJkcm5vbmVcY2xkZ2xsXGJyZHJub25lXGNsZGdsdVxicmRybm9uZVxjZWxseDU0NjdcY2x3V2lkdGgxODAwXGNsZnRzV2lkdGgzXGNscGFkbDBcY2xwYWRmbDNcY2xwYWRiMFxjbHBhZGZiM1xjbHBhZHQxMDhcY2xwYWRmdDNcY2xwYWRyMTA4XGNscGFkZnIzXGNsYnJkcmxcYnJkcm5vbmVcY2xicmRyclxicmRybm9uZVxjbGJyZHJ0DQpcYnJkcm5vbmVcY2xicmRyYlxicmRybm9uZVxjbGRnbGxcYnJkcm5vbmVcY2xkZ2x1XGJyZHJub25lXGNlbGx4NzI2N1xjbHdXaWR0aDE5NzVcY2xmdHNXaWR0aDNcY2xwYWRsMFxjbHBhZGZsM1xjbHBhZGIwXGNscGFkZmIzXGNscGFkdDEwOFxjbHBhZGZ0M1xjbHBhZHIxMDhcY2xwYWRmcjNcY2xicmRybFxicmRybm9uZVxjbGJyZHJyXGJyZHJub25lXGNsYnJkcnRcYnJkcm5vbmVcY2xicmRyYlxicmRybm9uZVxjbGRnbGxcYnJkcm5vbmVcY2xkZ2x1DQpcYnJkcm5vbmVcY2VsbHg5MjQyXHRibGxraGRycm93c1x0Ymxsa2hkcmNvbHNcdGJsbGtub2NvbGJhbmRccGFyZFxwbGFpblxpbnRibFxpdGFwMVxzMFx0eDcwNlxzYjI0MFxhc3BhbHBoYVxhc3BudW1cYWRqdXN0cmlnaHRccGFyYXJzaWQ2NzQzNlxsdHJwYXJcbGkwXGxpbjBccmkwXHJpbjBccWxcZmFhdXRvXHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNca2VybmluZzJ7XHJ0bGNoXGFmMFxhbGFuZzEwMjVcYWZzMjQNClxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcbG9jaFxhZjBcZGJjaFxhZjNcaGljaFxmMFxpbnNyc2lkNjc0MzZca2VybmluZzIgXHRhYiB9e1xydGxjaFxhZjBcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xsb2NoXGFmMFxkYmNoXGFmM1xoaWNoXGYwXGluc3JzaWQxNjAwODA4NVxrZXJuaW5nMiBNb250aGx5IERlbGl2ZXJ5IENoYXJnZSAocGVyIG1ldGVyKX0NCntccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xkYmNoXGYzXGluc3JzaWQxNjAwODA4NVxrZXJuaW5nMlxjZWxsfVxwYXJkXHBsYWluXGludGJsXGl0YXAxXHMwXHNiMjQwXGFzcGFscGhhXGFzcG51bVxhZGp1c3RyaWdodFxwYXJhcnNpZDY3NDM2XGx0cnBhclxsaTBcbGluMFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0DQpcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGtlcm5pbmcye1xydGxjaFxhZjBcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xsb2NoXGFmMFxkYmNoXGFmM1xoaWNoXGYwXGluc3JzaWQ2NzQzNlxrZXJuaW5nMiAkOTQ0LjUwfXtccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzMw0KXGRiY2hcZjNcaW5zcnNpZDE2MDA4MDg1XGtlcm5pbmcyXGNlbGx9XHBhcmRccGxhaW5caW50YmxcaXRhcDFcczBcYXNwYWxwaGFcYXNwbnVtXGFkanVzdHJpZ2h0XHBhcmFyc2lkNDM0MzM4OVxsdHJwYXJcbGkwXGxpbjBccmkwXHJpbjBccWxcZmFhdXRvXHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNca2VybmluZzJ7XHJ0bGNoXGFsYW5nMTAyNVxhZnMyNA0KXGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xkYmNoXGYzXGluc3JzaWQxNjAwODA4NVxrZXJuaW5nMlxjZWxsfXtcdHJvd2RcaXJvdzVcaXJvd2JhbmQ1XGx0cnJvd1x0czExXHRyZ2FwaDEwOFx0cnBhZGRsMTA4XHRycGFkZGZsM1x0cmZ0c1dpZHRoMVx0cmF1dG9maXQxXHRycGFkZHQwXHRycGFkZGZ0M1x0cnBhZGRiMFx0cnBhZGRmYjNcdHJwYWRkcjEwOFx0cnBhZGRmcjNcdHJyaDBcdHJsZWZ0LTEwOFxjbHdXaWR0aDU1NzVcY2xmdHNXaWR0aDNcY2xwYWRsMFxjbHBhZGZsM1xjbHBhZGIwXGNscGFkZmIzXGNscGFkdDEwOFxjbHBhZGZ0M1xjbHBhZHIxMDgNClxjbHBhZGZyM1xjbGJyZHJsXGJyZHJub25lXGNsYnJkcnJcYnJkcm5vbmVcY2xicmRydFxicmRybm9uZVxjbGJyZHJiXGJyZHJub25lXGNsZGdsbFxicmRybm9uZVxjbGRnbHVcYnJkcm5vbmVcY2VsbHg1NDY3XGNsd1dpZHRoMTgwMFxjbGZ0c1dpZHRoM1xjbHBhZGwwXGNscGFkZmwzXGNscGFkYjBcY2xwYWRmYjNcY2xwYWR0MTA4XGNscGFkZnQzXGNscGFkcjEwOFxjbHBhZGZyM1xjbGJyZHJsXGJyZHJub25lXGNsYnJkcnJcYnJkcm5vbmVcY2xicmRydA0KXGJyZHJub25lXGNsYnJkcmJcYnJkcm5vbmVcY2xkZ2xsXGJyZHJub25lXGNsZGdsdVxicmRybm9uZVxjZWxseDcyNjdcY2x3V2lkdGgxOTc1XGNsZnRzV2lkdGgzXGNscGFkbDBcY2xwYWRmbDNcY2xwYWRiMFxjbHBhZGZiM1xjbHBhZHQxMDhcY2xwYWRmdDNcY2xwYWRyMTA4XGNscGFkZnIzXGNsYnJkcmxcYnJkcm5vbmVcY2xicmRyclxicmRybm9uZVxjbGJyZHJ0XGJyZHJub25lXGNsYnJkcmJcYnJkcm5vbmVcY2xkZ2xsXGJyZHJub25lXGNsZGdsdQ0KXGJyZHJub25lXGNlbGx4OTI0Mlx0Ymxsa2hkcnJvd3NcdGJsbGtoZHJjb2xzXHRibGxrbm9jb2xiYW5kXHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcZGJjaFxmM1xpbnNyc2lkMTYwMDgwODVca2VybmluZzJccm93fVx0cm93ZFxpcm93Nlxpcm93YmFuZDZcbHRycm93XHRzMTFcdHJnYXBoMTA4XHRycGFkZGwxMDhcdHJwYWRkZmwzXHRyZnRzV2lkdGgxXHRyYXV0b2ZpdDFcdHJwYWRkdDBcdHJwYWRkZnQzXHRycGFkZGIwXHRycGFkZGZiM1x0cnBhZGRyMTA4XHRycGFkZGZyM1x0cnJoMFx0cmxlZnQtMTA4XGNsd1dpZHRoNTU3NVxjbGZ0c1dpZHRoM1xjbHBhZGwwXGNscGFkZmwzXGNscGFkYjBcY2xwYWRmYjNcY2xwYWR0MTA4XGNscGFkZnQzXGNscGFkcjEwOA0KXGNscGFkZnIzXGNsYnJkcmxcYnJkcm5vbmVcY2xicmRyclxicmRybm9uZVxjbGJyZHJ0XGJyZHJub25lXGNsYnJkcmJcYnJkcm5vbmVcY2xkZ2xsXGJyZHJub25lXGNsZGdsdVxicmRybm9uZVxjZWxseDU0NjdcY2x3V2lkdGgxODAwXGNsZnRzV2lkdGgzXGNscGFkbDBcY2xwYWRmbDNcY2xwYWRiMFxjbHBhZGZiM1xjbHBhZHQxMDhcY2xwYWRmdDNcY2xwYWRyMTA4XGNscGFkZnIzXGNsYnJkcmxcYnJkcm5vbmVcY2xicmRyclxicmRybm9uZVxjbGJyZHJ0DQpcYnJkcm5vbmVcY2xicmRyYlxicmRybm9uZVxjbGRnbGxcYnJkcm5vbmVcY2xkZ2x1XGJyZHJub25lXGNlbGx4NzI2N1xjbHdXaWR0aDE5NzVcY2xmdHNXaWR0aDNcY2xwYWRsMFxjbHBhZGZsM1xjbHBhZGIwXGNscGFkZmIzXGNscGFkdDEwOFxjbHBhZGZ0M1xjbHBhZHIxMDhcY2xwYWRmcjNcY2xicmRybFxicmRybm9uZVxjbGJyZHJyXGJyZHJub25lXGNsYnJkcnRcYnJkcm5vbmVcY2xicmRyYlxicmRybm9uZVxjbGRnbGxcYnJkcm5vbmVcY2xkZ2x1DQpcYnJkcm5vbmVcY2VsbHg5MjQyXHRibGxraGRycm93c1x0Ymxsa2hkcmNvbHNcdGJsbGtub2NvbGJhbmRccGFyZFxwbGFpblxpbnRibFxpdGFwMVxzMFxhc3BhbHBoYVxhc3BudW1cYWRqdXN0cmlnaHRccGFyYXJzaWQ0MzQzMzg5XGx0cnBhclxsaTBcbGluMFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xrZXJuaW5nMntccnRsY2hcYWYwXGFsYW5nMTAyNVxhZnMyNA0KXGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xsb2NoXGFmMFxkYmNoXGFmM1xoaWNoXGYwXGluc3JzaWQ2NzQzNlxrZXJuaW5nMiBcdGFiIENvbW1vZGl0eSBDaGFyZ2V9e1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGRiY2hcZjNcaW5zcnNpZDE2MDA4MDg1XGtlcm5pbmcyXGNlbGx9XHBhcmRccGxhaW4NClxpbnRibFxpdGFwMVxzMFxhc3BhbHBoYVxhc3BudW1cYWRqdXN0cmlnaHRccGFyYXJzaWQyNTcxMjc0XGx0cnBhclxsaTBcbGluMFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xrZXJuaW5nMntccnRsY2hcYWYwXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzMNClxsb2NoXGFmMFxkYmNoXGFmM1xoaWNoXGYwXGluc3JzaWQ2NzQzNlxrZXJuaW5nMiAkMC4yNTYwNX17XHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcZGJjaFxmM1xpbnNyc2lkMTYwMDgwODVca2VybmluZzJcY2VsbH1ccGFyZFxwbGFpblxpbnRibFxpdGFwMVxzMFxhc3BhbHBoYVxhc3BudW1cYWRqdXN0cmlnaHRccGFyYXJzaWQzNDE5NTcwXGx0cnBhclxsaTBcbGluMFxyaTBccmluMA0KXHFsXGZhYXV0b1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGtlcm5pbmcye1xydGxjaFxhZjBcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xsb2NoXGFmMFxkYmNoXGFmM1xoaWNoXGYwXGluc3JzaWQ2NzQzNlxrZXJuaW5nMiAkMC4wfXtccnRsY2hcYWYwXGFsYW5nMTAyNVxhZnMyNA0KXGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xsb2NoXGFmMFxkYmNoXGFmM1xoaWNoXGYwXGluc3JzaWQ2MTYyMDM4XGtlcm5pbmcyIDF9e1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGRiY2hcZjNcaW5zcnNpZDE2MDA4MDg1XGtlcm5pbmcyXGNlbGx9e1x0cm93ZFxpcm93Nlxpcm93YmFuZDZcbHRycm93XHRzMTFcdHJnYXBoMTA4XHRycGFkZGwxMDhcdHJwYWRkZmwzXHRyZnRzV2lkdGgxXHRyYXV0b2ZpdDFcdHJwYWRkdDBcdHJwYWRkZnQzXHRycGFkZGIwXHRycGFkZGZiM1x0cnBhZGRyMTA4XHRycGFkZGZyM1x0cnJoMFx0cmxlZnQtMTA4XGNsd1dpZHRoNTU3NVxjbGZ0c1dpZHRoM1xjbHBhZGwwXGNscGFkZmwzXGNscGFkYjBcY2xwYWRmYjNcY2xwYWR0MTA4XGNscGFkZnQzXGNscGFkcjEwOA0KXGNscGFkZnIzXGNsYnJkcmxcYnJkcm5vbmVcY2xicmRyclxicmRybm9uZVxjbGJyZHJ0XGJyZHJub25lXGNsYnJkcmJcYnJkcm5vbmVcY2xkZ2xsXGJyZHJub25lXGNsZGdsdVxicmRybm9uZVxjZWxseDU0NjdcY2x3V2lkdGgxODAwXGNsZnRzV2lkdGgzXGNscGFkbDBcY2xwYWRmbDNcY2xwYWRiMFxjbHBhZGZiM1xjbHBhZHQxMDhcY2xwYWRmdDNcY2xwYWRyMTA4XGNscGFkZnIzXGNsYnJkcmxcYnJkcm5vbmVcY2xicmRyclxicmRybm9uZVxjbGJyZHJ0DQpcYnJkcm5vbmVcY2xicmRyYlxicmRybm9uZVxjbGRnbGxcYnJkcm5vbmVcY2xkZ2x1XGJyZHJub25lXGNlbGx4NzI2N1xjbHdXaWR0aDE5NzVcY2xmdHNXaWR0aDNcY2xwYWRsMFxjbHBhZGZsM1xjbHBhZGIwXGNscGFkZmIzXGNscGFkdDEwOFxjbHBhZGZ0M1xjbHBhZHIxMDhcY2xwYWRmcjNcY2xicmRybFxicmRybm9uZVxjbGJyZHJyXGJyZHJub25lXGNsYnJkcnRcYnJkcm5vbmVcY2xicmRyYlxicmRybm9uZVxjbGRnbGxcYnJkcm5vbmVcY2xkZ2x1DQpcYnJkcm5vbmVcY2VsbHg5MjQyXHRibGxraGRycm93c1x0Ymxsa2hkcmNvbHMNClx0Ymxsa25vY29sYmFuZFxydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGRiY2hcZjNcaW5zcnNpZDE2MDA4MDg1XGtlcm5pbmcyXHJvd31cdHJvd2RcaXJvdzdcaXJvd2JhbmQ3XGxhc3Ryb3dcbHRycm93XHRzMTFcdHJnYXBoMTA4XHRycGFkZGwxMDhcdHJwYWRkZmwzXHRyZnRzV2lkdGgxXHRyYXV0b2ZpdDFcdHJwYWRkdDBcdHJwYWRkZnQzXHRycGFkZGIwXHRycGFkZGZiM1x0cnBhZGRyMTA4XHRycGFkZGZyM1x0cnJoMFx0cmxlZnQtMTA4XGNsd1dpZHRoNTU3NVxjbGZ0c1dpZHRoM1xjbHBhZGwwXGNscGFkZmwzXGNscGFkYjBcY2xwYWRmYjNcY2xwYWR0MTA4XGNscGFkZnQzXGNscGFkcjEwOA0KXGNscGFkZnIzXGNsYnJkcmxcYnJkcm5vbmVcY2xicmRyclxicmRybm9uZVxjbGJyZHJ0XGJyZHJub25lXGNsYnJkcmJcYnJkcm5vbmVcY2xkZ2xsXGJyZHJub25lXGNsZGdsdVxicmRybm9uZVxjZWxseDU0NjdcY2x3V2lkdGgxODAwXGNsZnRzV2lkdGgzXGNscGFkbDBcY2xwYWRmbDNcY2xwYWRiMFxjbHBhZGZiM1xjbHBhZHQxMDhcY2xwYWRmdDNcY2xwYWRyMTA4XGNscGFkZnIzXGNsYnJkcmxcYnJkcm5vbmVcY2xicmRyclxicmRybm9uZVxjbGJyZHJ0DQpcYnJkcm5vbmVcY2xicmRyYlxicmRybm9uZVxjbGRnbGxcYnJkcm5vbmVcY2xkZ2x1XGJyZHJub25lXGNlbGx4NzI2N1xjbHdXaWR0aDE5NzVcY2xmdHNXaWR0aDNcY2xwYWRsMFxjbHBhZGZsM1xjbHBhZGIwXGNscGFkZmIzXGNscGFkdDEwOFxjbHBhZGZ0M1xjbHBhZHIxMDhcY2xwYWRmcjNcY2xicmRybFxicmRybm9uZVxjbGJyZHJyXGJyZHJub25lXGNsYnJkcnRcYnJkcm5vbmVcY2xicmRyYlxicmRybm9uZVxjbGRnbGxcYnJkcm5vbmVcY2xkZ2x1DQpcYnJkcm5vbmVcY2VsbHg5MjQyXHRibGxraGRycm93c1x0Ymxsa2hkcmNvbHNcdGJsbGtub2NvbGJhbmRccGFyZFxwbGFpblxpbnRibFxpdGFwMVxzMFxhc3BhbHBoYVxhc3BudW1cYWRqdXN0cmlnaHRccGFyYXJzaWQ0MzQzMzg5XGx0cnBhclxsaTBcbGluMFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xrZXJuaW5nMntccnRsY2hcYWxhbmcxMDI1XGFmczI0DQpcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGRiY2hcZjNcaW5zcnNpZDEyNjY0MzQ3XGtlcm5pbmcyXGNlbGx9XHBhcmRccGxhaW5caW50YmxcaXRhcDFcczBcYXNwYWxwaGFcYXNwbnVtXGFkanVzdHJpZ2h0XHBhcmFyc2lkMjU3MTI3NFxsdHJwYXJcbGkwXGxpbjBccmkwXHJpbjBccWxcZmFhdXRvXHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNca2VybmluZzINCntccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xkYmNoXGYzXGluc3JzaWQxMjY2NDM0N1xrZXJuaW5nMlxjZWxsfVxwYXJkXHBsYWluXGludGJsXGl0YXAxXHMwXGFzcGFscGhhXGFzcG51bVxhZGp1c3RyaWdodFxwYXJhcnNpZDM0MTk1NzBcbHRycGFyXGxpMFxsaW4wXHJpMFxyaW4wXHFsXGZhYXV0b1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGtlcm5pbmcyDQp7XHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcZGJjaFxmM1xpbnNyc2lkMTI2NjQzNDdca2VybmluZzJcY2VsbH17XHRyb3dkXGlyb3c3XGlyb3diYW5kN1xsYXN0cm93XGx0cnJvd1x0czExXHRyZ2FwaDEwOFx0cnBhZGRsMTA4XHRycGFkZGZsM1x0cmZ0c1dpZHRoMVx0cmF1dG9maXQxXHRycGFkZHQwXHRycGFkZGZ0M1x0cnBhZGRiMFx0cnBhZGRmYjNcdHJwYWRkcjEwOFx0cnBhZGRmcjNcdHJyaDBcdHJsZWZ0LTEwOFxjbHdXaWR0aDU1NzVcY2xmdHNXaWR0aDNcY2xwYWRsMFxjbHBhZGZsM1xjbHBhZGIwXGNscGFkZmIzXGNscGFkdDEwOFxjbHBhZGZ0M1xjbHBhZHIxMDgNClxjbHBhZGZyM1xjbGJyZHJsXGJyZHJub25lXGNsYnJkcnJcYnJkcm5vbmVcY2xicmRydFxicmRybm9uZVxjbGJyZHJiXGJyZHJub25lXGNsZGdsbFxicmRybm9uZVxjbGRnbHVcYnJkcm5vbmVcY2VsbHg1NDY3XGNsd1dpZHRoMTgwMFxjbGZ0c1dpZHRoM1xjbHBhZGwwXGNscGFkZmwzXGNscGFkYjBcY2xwYWRmYjNcY2xwYWR0MTA4XGNscGFkZnQzXGNscGFkcjEwOFxjbHBhZGZyM1xjbGJyZHJsXGJyZHJub25lXGNsYnJkcnJcYnJkcm5vbmVcY2xicmRydA0KXGJyZHJub25lXGNsYnJkcmJcYnJkcm5vbmVcY2xkZ2xsXGJyZHJub25lXGNsZGdsdVxicmRybm9uZVxjZWxseDcyNjdcY2x3V2lkdGgxOTc1XGNsZnRzV2lkdGgzXGNscGFkbDBcY2xwYWRmbDNcY2xwYWRiMFxjbHBhZGZiM1xjbHBhZHQxMDhcY2xwYWRmdDNcY2xwYWRyMTA4XGNscGFkZnIzXGNsYnJkcmxcYnJkcm5vbmVcY2xicmRyclxicmRybm9uZVxjbGJyZHJ0XGJyZHJub25lXGNsYnJkcmJcYnJkcm5vbmVcY2xkZ2xsXGJyZHJub25lXGNsZGdsdQ0KXGJyZHJub25lXGNlbGx4OTI0Mlx0Ymxsa2hkcnJvd3NcdGJsbGtoZHJjb2xzXHRibGxrbm9jb2xiYW5kXHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcZGJjaFxmM1xpbnNyc2lkMTI2NjQzNDdca2VybmluZzINClxyb3d9XHBhcmRccGxhaW5caXRhcDBcczBcdHg1NjgzXHR4NzQ4M1xzYTI0MFxhc3BhbHBoYVxhc3BudW1cYWRqdXN0cmlnaHRccGFyYXJzaWQ0MzQzMzg5XGx0cnBhclxsaTBcbGluMFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xrZXJuaW5nMntccnRsY2hcYWYwXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzMNClxsb2NoXGFmMFxkYmNoXGFmM1xoaWNoXGYwXGNoYXJyc2lkNDM0MzM4OVxpbnNyc2lkNjc0MzZcdWxca2VybmluZzIgQWRkLW9uIEZ1ZWwgQ2hhcmdlfXtccnRsY2hcYWYwXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcbG9jaFxhZjBcZGJjaFxhZjNcaGljaFxmMFxpbnNyc2lkNjc0MzZca2VybmluZzIgOn17XHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcaW5zcnNpZDQzNDMzODlca2VybmluZzINClxwYXJ9XHBhcmRccGxhaW5caXRhcDBcczBcc2EyNDBcYXNwYWxwaGFcYXNwbnVtXGFkanVzdHJpZ2h0XHBhcmFyc2lkMTI1NDEwNjdcbHRycGFyXGxpNzIwXGxpbjcyMFxyaTBccmluMFxxalxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xrZXJuaW5nMntccnRsY2hcYWYwXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzMNClxsb2NoXGFmMFxkYmNoXGFmM1xoaWNoXGYwXGluc3JzaWQ2NzQzNlxrZXJuaW5nMiBJbiBhZGRpdGlvbiwgYSBwZXJjZW50YWdlIGFkanVzdG1lbnQgZm9yIGxvc3QgYW5kIHVuYWNjb3VudGVkIGZvciBnYXMgKFx1ODIyMCBMJlVGR1x1ODIyMSApIHNoYWxsIGJlIG1hZGUgdG8gdGhlIHZvbHVtZXMgb2YgZ2FzIHJlY2VpdmVkIGJ5IFRyYW5zcG9ydGVyIGZyb20gdGhlIEludGVyY29ubmVjdGluZyBQaXBlbGluZShzKSBmb3IgU2hpcHBlclx1ODIxNyBzIGFjY291bnQgYXMgcHJvdmlkZWQgaW4gU2VjdGlvblx+NC4xIG9mIHRoaXMgU3RhdGVtZW50IG9mIE9wZXJhdGluZyBDb25kaXRpb25zLn0NCntccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xpbnNyc2lkNDM0MzM4OVxrZXJuaW5nMlxwYXJ9XHBhcmRccGxhaW5caXRhcDBcczBcdHg1NjgzXHR4NzQ4M1xzYTI0MFxhc3BhbHBoYVxhc3BudW1cYWRqdXN0cmlnaHRccGFyYXJzaWQ2MTYyMDM4XGx0cnBhclxsaTBcbGluMFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0DQpcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGtlcm5pbmcye1xydGxjaFxhZjBcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xsb2NoXGFmMFxkYmNoXGFmM1xoaWNoXGYwXGluc3JzaWQ2NzQzNlxrZXJuaW5nMiBEYWlseSBTY2hlZHVsaW5nIEZlZX17XHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcaW5zcnNpZDYxNjIwMzhca2VybmluZzINClxwYXJ9XHBhcmRccGxhaW5caXRhcDBcczBcc2EyNDBcYXNwYWxwaGFcYXNwbnVtXGFkanVzdHJpZ2h0XHBhcmFyc2lkNjIzNjc5MFxsdHJwYXJcbGk3MjBcbGluNzIwXHJpMFxyaW4wXHFqXGZhYXV0b1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGtlcm5pbmcye1xydGxjaFxhZjBcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzMw0KXGxvY2hcYWYwXGRiY2hcYWYzXGhpY2hcZjBcaW5zcnNpZDY3NDM2XGtlcm5pbmcyIEEgRGFpbHkgU2NoZWR1bGluZyBGZWUgbWF5IGJlIGFkZGVkIGFzIGRlc2NyaWJlZCBpbiBTZWN0aW9uIDQuM317XHJ0bGNoXGFmMFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGxvY2hcYWYwXGRiY2hcYWYzXGhpY2hcZjBcaW5zcnNpZDUzMTYxOTJca2VybmluZzIgIG9mIHRoZSBTdGF0ZW1lbnQgb2YgT3BlcmF0aW5nIENvbmRpdGlvbnMufQ0Ke1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGluc3JzaWQ4ODA1OTBca2VybmluZzJccGFyfVxwYXJkXHBsYWluXGl0YXAwXHMwXHR4NTY4M1x0eDc0ODNcc2EyNDBcYXNwYWxwaGFcYXNwbnVtXGFkanVzdHJpZ2h0XHBhcmFyc2lkNjE2MjAzOFxsdHJwYXJcbGkwXGxpbjBccmkwXHJpbjBccWxcZmFhdXRvXHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNca2VybmluZzINCntccnRsY2hcYWYwXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcbG9jaFxhZjBcZGJjaFxhZjNcaGljaFxmMFxpbnNyc2lkNjc0MzZcdWxca2VybmluZzIgVGF4IFJlaW1idXJzZW1lbnR9e1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGluc3JzaWQ1MzE2MTkyXGtlcm5pbmcyDQpccGFyfVxwYXJkXHBsYWluXGl0YXAwXHMwXHNhMjQwXGFzcGFscGhhXGFzcG51bVxhZGp1c3RyaWdodFxwYXJhcnNpZDYyMzY3OTBcbHRycGFyXGxpNzIwXGxpbjcyMFxyaTBccmluMFxxalxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xrZXJuaW5nMntccnRsY2hcYWYwXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzMNClxsb2NoXGFmMFxkYmNoXGFmM1xoaWNoXGYwXGluc3JzaWQ2NzQzNlxrZXJuaW5nMiBTaGlwcGVyIGFncmVlcyB0byByZWltYnVyc2UgVHJhbnNwb3J0ZXIgZm9yIGFsbCBUYXhlcyB0aGF0IG1heSBiZSBsZXZpZWQgdXBvbiB9e1xydGxjaFxhZjBcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xsb2NoXGFmMFxkYmNoXGFmM1xoaWNoXGYwXGluc3JzaWQ2NzQzNlxrZXJuaW5nMiBhbmQvb3IgYmUgcGFpZCBieSBUcmFuc3BvcnRlciBhcyBkZXNjcmliZWQgaW4gU2VjdGlvbiA5LjQgb2YgdGhlIFN0YXRlbWVudCBvZiBPcGVyYXRpbmcgQ29uZGl0aW9ucy59DQp7XHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcaW5zcnNpZDUzMTYxOTJca2VybmluZzJccGFyfVxwYXJkXHBsYWluXGl0YXAwXHMwXHR4NTY4M1x0eDc0ODNcc2EyNDBcYXNwYWxwaGFcYXNwbnVtXGFkanVzdHJpZ2h0XHBhcmFyc2lkNjE2MjAzOFxsdHJwYXJcbGkwXGxpbjBccmkwXHJpbjBccWxcZmFhdXRvXHJ0bGNoXGFsYW5nMTAyNVxhZnMyNA0KXGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xrZXJuaW5nMntccnRsY2hcYWYwXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcbG9jaFxhZjBcZGJjaFxhZjNcaGljaFxmMFxpbnNyc2lkNjc0MzZcdWxca2VybmluZzIgQ2hhcmdlcyBvciBGZWVzIGZvciBSZXBvcnQgRmlsaW5nc317XHJ0bGNoXGFsYW5nMTAyNVxhZnMyNA0KXGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xpbnNyc2lkNTMxNjE5MlxrZXJuaW5nMlxwYXJ9XHBhcmRccGxhaW5caXRhcDBcczBcc2EyNDBcYXNwYWxwaGFcYXNwbnVtXGFkanVzdHJpZ2h0XHBhcmFyc2lkNTMxNjE5MlxsdHJwYXJcbGk3MjBcbGluNzIwXHJpMFxyaW4wXHFqXGZhYXV0b1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGtlcm5pbmcyDQp7XHJ0bGNoXGFmMFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGxvY2hcYWYwXGRiY2hcYWYzXGhpY2hcZjBcaW5zcnNpZDY3NDM2XGtlcm5pbmcyIFNoaXBwZXIgYWdyZWVzIHRvIHJlaW1idXJzZSBUcmFuc3BvcnRlciBmb3IgYW55IGFuZCBhbGwgZmlsaW5nIGZlZXMgb3IgcmVsYXRlZCBjaGFyZ2VzIGluY3VycmVkIGJ5IFRyYW5zcG9ydGVyIGZvciB0aGUgZmlsaW5nIG9mIGFueSByZXBvcnQgb3IgcmVwb3J0cyB3aXRoIGFueSBnb3Zlcm5tZW50YWwgYWdlbmN5IG9yIG90aGVyIGJvZHkgYXMgZGVzY3JpYmVkIGluIFNlY3Rpb24gOS41IG9mIHRoZSBTdGF0ZW1lbnQgb2YgT3BlcmF0aW5nIENvbmRpdGlvbnMufQ0Ke1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGNoYXJyc2lkNTMxNjE5MlxpbnNyc2lkNTMxNjE5MlxrZXJuaW5nMlxwYXJ9XHBhcmRccGxhaW5caXRhcDBcczBcdHg1NjgzXHR4NzQ4M1xzYTI0MFxhc3BhbHBoYVxhc3BudW1cYWRqdXN0cmlnaHRccGFyYXJzaWQ0MzQzMzg5XGx0cnBhclxsaTBcbGluMFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0DQpcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGtlcm5pbmcye1xydGxjaFxhZjBcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xsb2NoXGFmMFxkYmNoXGFmM1xoaWNoXGYwXGluc3JzaWQ4NzQ2OTQ0XHVsXGtlcm5pbmcyIFxwYWdlIH17XHJ0bGNoXGFmMFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzDQpcbG9jaFxhZjBcZGJjaFxhZjNcaGljaFxmMFxjaGFycnNpZDQzNDMzODlcaW5zcnNpZDY3NDM2XHVsXGtlcm5pbmcyIEluZnJhc3RydWN0dXJlIFN5c3RlbSBSZXBsYWNlbWVudCBTdXJjaGFyZ2UgKFx1ODIyMCBJU1JTXHU4MjIxICl9e1xydGxjaFxhZjBcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xsb2NoXGFmMFxkYmNoXGFmM1xoaWNoXGYwXGluc3JzaWQ2NzQzNlxrZXJuaW5nMiA6fQ0Ke1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGluc3JzaWQ0MzQzMzg5XGtlcm5pbmcyXHBhcn1ccGFyZFxwbGFpblxpdGFwMFxzMFxzYTI0MFxhc3BhbHBoYVxhc3BudW1cYWRqdXN0cmlnaHRccGFyYXJzaWQxMjU0MTA2N1xsdHJwYXJcbGk3MjBcbGluNzIwXHJpMFxyaW4wXHFqXGZhYXV0b1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGtlcm5pbmcyDQp7XHJ0bGNoXGFmMFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGxvY2hcYWYwXGRiY2hcYWYzXGhpY2hcZjBcaW5zcnNpZDY3NDM2XGtlcm5pbmcyIFRoZSBJU1JTIGlzIGRlc2lnbmVkIHRvIHJlY292ZXIgdGhlIGNvc3RzIGFzc29jaWF0ZWQgd2l0aCBUcmFuc3BvcnRlclx1ODIxNyBzIE1pc3NvdXJpIGVsaWdpYmxlIGluZnJhc3RydWN0dXJlIHJlcGxhY2VtZW50cy4gIEluIGFkZGl0aW9uIHRvIHRoZSBvdGhlciBjaGFyZ2VzIHByb3ZpZGVkIGZvciBpbiB0aGUgQ29tcGFueVx1ODIxNyBzIHRhcmlmZiwgYSBtb250aGx5IElTUlMgb2YgJDAuMDAgc2hhbGwgYmUgYWRkZWQgdG8gU2hpcHBlclx1ODIxNyBzIGJpbGwgZm9yIHNlcnZpY2UufQ0Ke1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGluc3JzaWQ0MzQzMzg5XGtlcm5pbmcyXHBhcn1ccGFyZFxwbGFpblxpdGFwMFxzMFxzYTI0MFxhc3BhbHBoYVxhc3BudW1cYWRqdXN0cmlnaHRccGFyYXJzaWQ0MzQzMzg5XGx0cnBhclxsaTBcbGluMFxyaTBccmluMFxxalxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xrZXJuaW5nMg0Ke1xydGxjaFxhZjBcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xsb2NoXGFmMFxkYmNoXGFmM1xoaWNoXGYwXGNoYXJyc2lkMTYwMDgwODVcaW5zcnNpZDY3NDM2XGtlcm5pbmcyIFRyYW5zcG9ydGVyIHJlc2VydmVzIHRoZSByaWdodCB0byBkaXNjb3VudCB0byBsZXZlbHMgYmVsb3cgbWF4aW11bSBjaGFyZ2VzIG9uIGEgbm9uLWRpc2NyaW1pbmF0b3J5IGJhc2lzIGJ1dCBub3QgdG8gbGVzcyB0aGFuIHRoZSBzdW0gb2YgYW55IG1pbmltdW0gY2hhcmdlcyBwbHVzIGFueSBhZGQtb24gY2hhcmdlIGZvciBmdWVsLn0NCntccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xpbnNyc2lkODMzNzk4NlxrZXJuaW5nMlxwYXJ9e1wqXGxhdGVudHN0eWxlc1xsc2RzdGltYXgyNjdcbHNkbG9ja2VkZGVmMFxsc2RzZW1paGlkZGVuZGVmMVxsc2R1bmhpZGV1c2VkZGVmMVxsc2RxZm9ybWF0ZGVmMFxsc2Rwcmlvcml0eWRlZjk5DQp7XGxzZGxvY2tlZGV4Y2VwdFxsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2RxZm9ybWF0MVxsc2Rwcmlvcml0eTAgTm9ybWFsO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2RxZm9ybWF0MVxsc2Rwcmlvcml0eTkgaGVhZGluZyAxO1xsc2RxZm9ybWF0MVxsc2Rwcmlvcml0eTkgaGVhZGluZyAyO1xsc2RxZm9ybWF0MVxsc2Rwcmlvcml0eTkgaGVhZGluZyAzO1xsc2RxZm9ybWF0MVxsc2Rwcmlvcml0eTkgaGVhZGluZyA0Ow0KXGxzZHFmb3JtYXQxXGxzZHByaW9yaXR5OSBoZWFkaW5nIDU7XGxzZHFmb3JtYXQxXGxzZHByaW9yaXR5OSBoZWFkaW5nIDY7XGxzZHFmb3JtYXQxXGxzZHByaW9yaXR5OSBoZWFkaW5nIDc7XGxzZHFmb3JtYXQxXGxzZHByaW9yaXR5OSBoZWFkaW5nIDg7XGxzZHFmb3JtYXQxXGxzZHByaW9yaXR5OSBoZWFkaW5nIDk7XGxzZHByaW9yaXR5MzkgdG9jIDE7XGxzZHByaW9yaXR5MzkgdG9jIDI7XGxzZHByaW9yaXR5MzkgdG9jIDM7XGxzZHByaW9yaXR5MzkgdG9jIDQ7DQpcbHNkcHJpb3JpdHkzOSB0b2MgNTtcbHNkcHJpb3JpdHkzOSB0b2MgNjtcbHNkcHJpb3JpdHkzOSB0b2MgNztcbHNkcHJpb3JpdHkzOSB0b2MgODtcbHNkcHJpb3JpdHkzOSB0b2MgOTtcbHNkcWZvcm1hdDFcbHNkcHJpb3JpdHkzNSBjYXB0aW9uO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2RxZm9ybWF0MVxsc2Rwcmlvcml0eTcgVGl0bGU7XGxzZHByaW9yaXR5MSBEZWZhdWx0IFBhcmFncmFwaCBGb250O1xsc2Rwcmlvcml0eTMgQm9keSBUZXh0Ow0KXGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHFmb3JtYXQxXGxzZHByaW9yaXR5OCBTdWJ0aXRsZTtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHkyMiBTdHJvbmc7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5MjAgRW1waGFzaXM7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5MzkgVGFibGUgR3JpZDtcbHNkdW5oaWRldXNlZDAgUGxhY2Vob2xkZXIgVGV4dDsNClxsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2RxZm9ybWF0MVxsc2Rwcmlvcml0eTEgTm8gU3BhY2luZztcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk2MCBMaWdodCBTaGFkaW5nO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTYxIExpZ2h0IExpc3Q7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjIgTGlnaHQgR3JpZDtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk2MyBNZWRpdW0gU2hhZGluZyAxOw0KXGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjQgTWVkaXVtIFNoYWRpbmcgMjtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk2NSBNZWRpdW0gTGlzdCAxO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTY2IE1lZGl1bSBMaXN0IDI7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjcgTWVkaXVtIEdyaWQgMTtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk2OCBNZWRpdW0gR3JpZCAyOw0KXGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjkgTWVkaXVtIEdyaWQgMztcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk3MCBEYXJrIExpc3Q7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NzEgQ29sb3JmdWwgU2hhZGluZztcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk3MiBDb2xvcmZ1bCBMaXN0O1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTczIENvbG9yZnVsIEdyaWQ7DQpcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk2MCBMaWdodCBTaGFkaW5nIEFjY2VudCAxO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTYxIExpZ2h0IExpc3QgQWNjZW50IDE7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjIgTGlnaHQgR3JpZCBBY2NlbnQgMTtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk2MyBNZWRpdW0gU2hhZGluZyAxIEFjY2VudCAxOw0KXGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjQgTWVkaXVtIFNoYWRpbmcgMiBBY2NlbnQgMTtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk2NSBNZWRpdW0gTGlzdCAxIEFjY2VudCAxO1xsc2R1bmhpZGV1c2VkMCBSZXZpc2lvbjtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHkzNCBMaXN0IFBhcmFncmFwaDtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcWZvcm1hdDFcbHNkcHJpb3JpdHk0IFF1b3RlOw0KXGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5MzAgSW50ZW5zZSBRdW90ZTtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk2NiBNZWRpdW0gTGlzdCAyIEFjY2VudCAxO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTY3IE1lZGl1bSBHcmlkIDEgQWNjZW50IDE7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjggTWVkaXVtIEdyaWQgMiBBY2NlbnQgMTsNClxsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTY5IE1lZGl1bSBHcmlkIDMgQWNjZW50IDE7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NzAgRGFyayBMaXN0IEFjY2VudCAxO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTcxIENvbG9yZnVsIFNoYWRpbmcgQWNjZW50IDE7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NzIgQ29sb3JmdWwgTGlzdCBBY2NlbnQgMTsNClxsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTczIENvbG9yZnVsIEdyaWQgQWNjZW50IDE7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjAgTGlnaHQgU2hhZGluZyBBY2NlbnQgMjtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk2MSBMaWdodCBMaXN0IEFjY2VudCAyO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTYyIExpZ2h0IEdyaWQgQWNjZW50IDI7DQpcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk2MyBNZWRpdW0gU2hhZGluZyAxIEFjY2VudCAyO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTY0IE1lZGl1bSBTaGFkaW5nIDIgQWNjZW50IDI7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjUgTWVkaXVtIExpc3QgMSBBY2NlbnQgMjtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk2NiBNZWRpdW0gTGlzdCAyIEFjY2VudCAyOw0KXGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjcgTWVkaXVtIEdyaWQgMSBBY2NlbnQgMjtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk2OCBNZWRpdW0gR3JpZCAyIEFjY2VudCAyO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTY5IE1lZGl1bSBHcmlkIDMgQWNjZW50IDI7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NzAgRGFyayBMaXN0IEFjY2VudCAyOw0KXGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NzEgQ29sb3JmdWwgU2hhZGluZyBBY2NlbnQgMjtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk3MiBDb2xvcmZ1bCBMaXN0IEFjY2VudCAyO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTczIENvbG9yZnVsIEdyaWQgQWNjZW50IDI7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjAgTGlnaHQgU2hhZGluZyBBY2NlbnQgMzsNClxsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTYxIExpZ2h0IExpc3QgQWNjZW50IDM7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjIgTGlnaHQgR3JpZCBBY2NlbnQgMztcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk2MyBNZWRpdW0gU2hhZGluZyAxIEFjY2VudCAzO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTY0IE1lZGl1bSBTaGFkaW5nIDIgQWNjZW50IDM7DQpcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk2NSBNZWRpdW0gTGlzdCAxIEFjY2VudCAzO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTY2IE1lZGl1bSBMaXN0IDIgQWNjZW50IDM7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjcgTWVkaXVtIEdyaWQgMSBBY2NlbnQgMztcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk2OCBNZWRpdW0gR3JpZCAyIEFjY2VudCAzOw0KXGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjkgTWVkaXVtIEdyaWQgMyBBY2NlbnQgMztcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk3MCBEYXJrIExpc3QgQWNjZW50IDM7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NzEgQ29sb3JmdWwgU2hhZGluZyBBY2NlbnQgMztcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk3MiBDb2xvcmZ1bCBMaXN0IEFjY2VudCAzOw0KXGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NzMgQ29sb3JmdWwgR3JpZCBBY2NlbnQgMztcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk2MCBMaWdodCBTaGFkaW5nIEFjY2VudCA0O1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTYxIExpZ2h0IExpc3QgQWNjZW50IDQ7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjIgTGlnaHQgR3JpZCBBY2NlbnQgNDsNClxsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTYzIE1lZGl1bSBTaGFkaW5nIDEgQWNjZW50IDQ7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjQgTWVkaXVtIFNoYWRpbmcgMiBBY2NlbnQgNDtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk2NSBNZWRpdW0gTGlzdCAxIEFjY2VudCA0O1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTY2IE1lZGl1bSBMaXN0IDIgQWNjZW50IDQ7DQpcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk2NyBNZWRpdW0gR3JpZCAxIEFjY2VudCA0O1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTY4IE1lZGl1bSBHcmlkIDIgQWNjZW50IDQ7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjkgTWVkaXVtIEdyaWQgMyBBY2NlbnQgNDtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk3MCBEYXJrIExpc3QgQWNjZW50IDQ7DQpcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk3MSBDb2xvcmZ1bCBTaGFkaW5nIEFjY2VudCA0O1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTcyIENvbG9yZnVsIExpc3QgQWNjZW50IDQ7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NzMgQ29sb3JmdWwgR3JpZCBBY2NlbnQgNDtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk2MCBMaWdodCBTaGFkaW5nIEFjY2VudCA1Ow0KXGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjEgTGlnaHQgTGlzdCBBY2NlbnQgNTtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk2MiBMaWdodCBHcmlkIEFjY2VudCA1O1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTYzIE1lZGl1bSBTaGFkaW5nIDEgQWNjZW50IDU7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjQgTWVkaXVtIFNoYWRpbmcgMiBBY2NlbnQgNTsNClxsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTY1IE1lZGl1bSBMaXN0IDEgQWNjZW50IDU7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjYgTWVkaXVtIExpc3QgMiBBY2NlbnQgNTtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk2NyBNZWRpdW0gR3JpZCAxIEFjY2VudCA1O1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTY4IE1lZGl1bSBHcmlkIDIgQWNjZW50IDU7DQpcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk2OSBNZWRpdW0gR3JpZCAzIEFjY2VudCA1O1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTcwIERhcmsgTGlzdCBBY2NlbnQgNTtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk3MSBDb2xvcmZ1bCBTaGFkaW5nIEFjY2VudCA1O1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTcyIENvbG9yZnVsIExpc3QgQWNjZW50IDU7DQpcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk3MyBDb2xvcmZ1bCBHcmlkIEFjY2VudCA1O1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTYwIExpZ2h0IFNoYWRpbmcgQWNjZW50IDY7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjEgTGlnaHQgTGlzdCBBY2NlbnQgNjtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk2MiBMaWdodCBHcmlkIEFjY2VudCA2Ow0KXGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjMgTWVkaXVtIFNoYWRpbmcgMSBBY2NlbnQgNjtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk2NCBNZWRpdW0gU2hhZGluZyAyIEFjY2VudCA2O1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTY1IE1lZGl1bSBMaXN0IDEgQWNjZW50IDY7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjYgTWVkaXVtIExpc3QgMiBBY2NlbnQgNjsNClxsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTY3IE1lZGl1bSBHcmlkIDEgQWNjZW50IDY7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NjggTWVkaXVtIEdyaWQgMiBBY2NlbnQgNjtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk2OSBNZWRpdW0gR3JpZCAzIEFjY2VudCA2O1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTcwIERhcmsgTGlzdCBBY2NlbnQgNjsNClxsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTcxIENvbG9yZnVsIFNoYWRpbmcgQWNjZW50IDY7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NzIgQ29sb3JmdWwgTGlzdCBBY2NlbnQgNjtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk3MyBDb2xvcmZ1bCBHcmlkIEFjY2VudCA2O1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTE5IFN1YnRsZSBFbXBoYXNpczsNClxsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTIxIEludGVuc2UgRW1waGFzaXM7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5MzEgU3VidGxlIFJlZmVyZW5jZTtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHkzMiBJbnRlbnNlIFJlZmVyZW5jZTtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHkzMyBCb29rIFRpdGxlO1xsc2Rwcmlvcml0eTM3IEJpYmxpb2dyYXBoeTsNClxsc2RxZm9ybWF0MVxsc2Rwcmlvcml0eTM5IFRPQyBIZWFkaW5nO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTQxIFBsYWluIFRhYmxlIDE7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NDIgUGxhaW4gVGFibGUgMjtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk0MyBQbGFpbiBUYWJsZSAzO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTQ0IFBsYWluIFRhYmxlIDQ7DQpcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk0NSBQbGFpbiBUYWJsZSA1O1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTQwIEdyaWQgVGFibGUgTGlnaHQ7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NDYgR3JpZCBUYWJsZSAxIExpZ2h0O1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTQ3IEdyaWQgVGFibGUgMjtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk0OCBHcmlkIFRhYmxlIDM7DQpcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk0OSBHcmlkIFRhYmxlIDQ7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NTAgR3JpZCBUYWJsZSA1IERhcms7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NTEgR3JpZCBUYWJsZSA2IENvbG9yZnVsO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTUyIEdyaWQgVGFibGUgNyBDb2xvcmZ1bDsNClxsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTQ2IEdyaWQgVGFibGUgMSBMaWdodCBBY2NlbnQgMTtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk0NyBHcmlkIFRhYmxlIDIgQWNjZW50IDE7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NDggR3JpZCBUYWJsZSAzIEFjY2VudCAxO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTQ5IEdyaWQgVGFibGUgNCBBY2NlbnQgMTsNClxsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTUwIEdyaWQgVGFibGUgNSBEYXJrIEFjY2VudCAxO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTUxIEdyaWQgVGFibGUgNiBDb2xvcmZ1bCBBY2NlbnQgMTtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk1MiBHcmlkIFRhYmxlIDcgQ29sb3JmdWwgQWNjZW50IDE7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NDYgR3JpZCBUYWJsZSAxIExpZ2h0IEFjY2VudCAyOw0KXGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NDcgR3JpZCBUYWJsZSAyIEFjY2VudCAyO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTQ4IEdyaWQgVGFibGUgMyBBY2NlbnQgMjtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk0OSBHcmlkIFRhYmxlIDQgQWNjZW50IDI7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NTAgR3JpZCBUYWJsZSA1IERhcmsgQWNjZW50IDI7DQpcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk1MSBHcmlkIFRhYmxlIDYgQ29sb3JmdWwgQWNjZW50IDI7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NTIgR3JpZCBUYWJsZSA3IENvbG9yZnVsIEFjY2VudCAyO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTQ2IEdyaWQgVGFibGUgMSBMaWdodCBBY2NlbnQgMztcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk0NyBHcmlkIFRhYmxlIDIgQWNjZW50IDM7DQpcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk0OCBHcmlkIFRhYmxlIDMgQWNjZW50IDM7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NDkgR3JpZCBUYWJsZSA0IEFjY2VudCAzO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTUwIEdyaWQgVGFibGUgNSBEYXJrIEFjY2VudCAzO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTUxIEdyaWQgVGFibGUgNiBDb2xvcmZ1bCBBY2NlbnQgMzsNClxsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTUyIEdyaWQgVGFibGUgNyBDb2xvcmZ1bCBBY2NlbnQgMztcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk0NiBHcmlkIFRhYmxlIDEgTGlnaHQgQWNjZW50IDQ7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NDcgR3JpZCBUYWJsZSAyIEFjY2VudCA0O1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTQ4IEdyaWQgVGFibGUgMyBBY2NlbnQgNDsNClxsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTQ5IEdyaWQgVGFibGUgNCBBY2NlbnQgNDtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk1MCBHcmlkIFRhYmxlIDUgRGFyayBBY2NlbnQgNDtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk1MSBHcmlkIFRhYmxlIDYgQ29sb3JmdWwgQWNjZW50IDQ7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NTIgR3JpZCBUYWJsZSA3IENvbG9yZnVsIEFjY2VudCA0Ow0KXGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NDYgR3JpZCBUYWJsZSAxIExpZ2h0IEFjY2VudCA1O1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTQ3IEdyaWQgVGFibGUgMiBBY2NlbnQgNTtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk0OCBHcmlkIFRhYmxlIDMgQWNjZW50IDU7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NDkgR3JpZCBUYWJsZSA0IEFjY2VudCA1Ow0KXGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NTAgR3JpZCBUYWJsZSA1IERhcmsgQWNjZW50IDU7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NTEgR3JpZCBUYWJsZSA2IENvbG9yZnVsIEFjY2VudCA1O1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTUyIEdyaWQgVGFibGUgNyBDb2xvcmZ1bCBBY2NlbnQgNTtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk0NiBHcmlkIFRhYmxlIDEgTGlnaHQgQWNjZW50IDY7DQpcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk0NyBHcmlkIFRhYmxlIDIgQWNjZW50IDY7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NDggR3JpZCBUYWJsZSAzIEFjY2VudCA2O1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTQ5IEdyaWQgVGFibGUgNCBBY2NlbnQgNjtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk1MCBHcmlkIFRhYmxlIDUgRGFyayBBY2NlbnQgNjsNClxsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTUxIEdyaWQgVGFibGUgNiBDb2xvcmZ1bCBBY2NlbnQgNjtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk1MiBHcmlkIFRhYmxlIDcgQ29sb3JmdWwgQWNjZW50IDY7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NDYgTGlzdCBUYWJsZSAxIExpZ2h0O1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTQ3IExpc3QgVGFibGUgMjsNClxsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTQ4IExpc3QgVGFibGUgMztcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk0OSBMaXN0IFRhYmxlIDQ7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NTAgTGlzdCBUYWJsZSA1IERhcms7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NTEgTGlzdCBUYWJsZSA2IENvbG9yZnVsO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTUyIExpc3QgVGFibGUgNyBDb2xvcmZ1bDsNClxsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTQ2IExpc3QgVGFibGUgMSBMaWdodCBBY2NlbnQgMTtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk0NyBMaXN0IFRhYmxlIDIgQWNjZW50IDE7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NDggTGlzdCBUYWJsZSAzIEFjY2VudCAxO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTQ5IExpc3QgVGFibGUgNCBBY2NlbnQgMTsNClxsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTUwIExpc3QgVGFibGUgNSBEYXJrIEFjY2VudCAxO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTUxIExpc3QgVGFibGUgNiBDb2xvcmZ1bCBBY2NlbnQgMTtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk1MiBMaXN0IFRhYmxlIDcgQ29sb3JmdWwgQWNjZW50IDE7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NDYgTGlzdCBUYWJsZSAxIExpZ2h0IEFjY2VudCAyOw0KXGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NDcgTGlzdCBUYWJsZSAyIEFjY2VudCAyO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTQ4IExpc3QgVGFibGUgMyBBY2NlbnQgMjtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk0OSBMaXN0IFRhYmxlIDQgQWNjZW50IDI7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NTAgTGlzdCBUYWJsZSA1IERhcmsgQWNjZW50IDI7DQpcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk1MSBMaXN0IFRhYmxlIDYgQ29sb3JmdWwgQWNjZW50IDI7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NTIgTGlzdCBUYWJsZSA3IENvbG9yZnVsIEFjY2VudCAyO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTQ2IExpc3QgVGFibGUgMSBMaWdodCBBY2NlbnQgMztcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk0NyBMaXN0IFRhYmxlIDIgQWNjZW50IDM7DQpcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk0OCBMaXN0IFRhYmxlIDMgQWNjZW50IDM7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NDkgTGlzdCBUYWJsZSA0IEFjY2VudCAzO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTUwIExpc3QgVGFibGUgNSBEYXJrIEFjY2VudCAzO1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTUxIExpc3QgVGFibGUgNiBDb2xvcmZ1bCBBY2NlbnQgMzsNClxsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTUyIExpc3QgVGFibGUgNyBDb2xvcmZ1bCBBY2NlbnQgMztcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk0NiBMaXN0IFRhYmxlIDEgTGlnaHQgQWNjZW50IDQ7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NDcgTGlzdCBUYWJsZSAyIEFjY2VudCA0O1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTQ4IExpc3QgVGFibGUgMyBBY2NlbnQgNDsNClxsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTQ5IExpc3QgVGFibGUgNCBBY2NlbnQgNDtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk1MCBMaXN0IFRhYmxlIDUgRGFyayBBY2NlbnQgNDtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk1MSBMaXN0IFRhYmxlIDYgQ29sb3JmdWwgQWNjZW50IDQ7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NTIgTGlzdCBUYWJsZSA3IENvbG9yZnVsIEFjY2VudCA0Ow0KXGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NDYgTGlzdCBUYWJsZSAxIExpZ2h0IEFjY2VudCA1O1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTQ3IExpc3QgVGFibGUgMiBBY2NlbnQgNTtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk0OCBMaXN0IFRhYmxlIDMgQWNjZW50IDU7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NDkgTGlzdCBUYWJsZSA0IEFjY2VudCA1Ow0KXGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NTAgTGlzdCBUYWJsZSA1IERhcmsgQWNjZW50IDU7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NTEgTGlzdCBUYWJsZSA2IENvbG9yZnVsIEFjY2VudCA1O1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTUyIExpc3QgVGFibGUgNyBDb2xvcmZ1bCBBY2NlbnQgNTtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk0NiBMaXN0IFRhYmxlIDEgTGlnaHQgQWNjZW50IDY7DQpcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk0NyBMaXN0IFRhYmxlIDIgQWNjZW50IDY7XGxzZHNlbWloaWRkZW4wXGxzZHVuaGlkZXVzZWQwXGxzZHByaW9yaXR5NDggTGlzdCBUYWJsZSAzIEFjY2VudCA2O1xsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTQ5IExpc3QgVGFibGUgNCBBY2NlbnQgNjtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk1MCBMaXN0IFRhYmxlIDUgRGFyayBBY2NlbnQgNjsNClxsc2RzZW1paGlkZGVuMFxsc2R1bmhpZGV1c2VkMFxsc2Rwcmlvcml0eTUxIExpc3QgVGFibGUgNiBDb2xvcmZ1bCBBY2NlbnQgNjtcbHNkc2VtaWhpZGRlbjBcbHNkdW5oaWRldXNlZDBcbHNkcHJpb3JpdHk1MiBMaXN0IFRhYmxlIDcgQ29sb3JmdWwgQWNjZW50IDY7fX19</record_binary_data>
      <record_plain_text>?Liberty Utilities (Midstates Natural Gas) Corp. d/b/a Liberty Utilities
GENERAL TERMS AND CONDITIONS
STATEMENT OF CURRENTLY EFFECTIVE RATES
Transporter’s rate election for service hereunder is made pursuant to 18 C.F.R. §284.123(b)(1)(ii).  Pursuant to Section 4 of Transporter’s General Terms and Conditions, the following is a statement of Transporter’s currently effective maximum and minimum charges for service hereunder:
Interruptible Transportation Service:
Maxim Per Ccf
Minimum Per Ccf



	Monthly Delivery Charge (per meter)
$951.00

	Commodity Charge
$0.25583
$0.01
Firm Transportation Service:


	Monthly Delivery Charge (per meter)
$944.50

	Commodity Charge
$0.25605
$0.01



Add-on Fuel Charge:
In addition, a percentage adjustment for lost and unaccounted for gas (“L&amp;UFG”) shall be made to the volumes of gas received by Transporter from the Interconnecting Pipeline(s) for Shipper’s account as provided in Section 4.1 of this Statement of Operating Conditions.
Daily Scheduling Fee
A Daily Scheduling Fee may be added as described in Section 4.3 of the Statement of Operating Conditions.
Tax Reimbursement
Shipper agrees to reimburse Transporter for all Taxes that may be levied upon and/or be paid by Transporter as described in Section 9.4 of the Statement of Operating Conditions.
Charges or Fees for Report Filings
Shipper agrees to reimburse Transporter for any and all filing fees or related charges incurred by Transporter for the filing of any report or reports with any governmental agency or other body as described in Section 9.5 of the Statement of Operating Conditions.
Infrastructure System Replacement Surcharge (“ISRS”):
The ISRS is designed to recover the costs associated with Transporter’s Missouri eligible infrastructure replacements.  In addition to the other charges provided for in the Company’s tariff, a monthly ISRS of $0.00 shall be added to Shipper’s bill for service.
Transporter reserves the right to discount to levels below maximum charges on a non-discriminatory basis but not to less than the sum of any minimum charges plus any add-on charge for fuel.
4924-7863-2726.2</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>42</filing_id>
      <filing_title>Supplement Filing - Revised Statement of Rates  (PR25-35-)</filing_title>
      <filing_type>1000</filing_type>
      <associated_filing_id>41</associated_filing_id>
      <associated_record_id>2</associated_record_id>
      <associated_option_code>A</associated_option_code>
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2025-01-08</current_effective_date>
      <ferc_order_date>2025-05-13</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
  </ferc_filing_data>
</Document>