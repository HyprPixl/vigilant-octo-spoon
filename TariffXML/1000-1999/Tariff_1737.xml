<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Document xmlns="http://ferc.gov/etariffExport.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ferc_filing_data>
    <schema_version>2</schema_version>
    <company_id>C001432</company_id>
    <lead_applicant_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
    <tariff_id>5</tariff_id>
    <tariff_title>Cogen Technologies Linden Venture Market Based Rate Tariff</tariff_title>
    <tariff_export_date>2025-09-16T19:07Z</tariff_export_date>
    <export_schema_version>2</export_schema_version>
    <record_data>
      <record_id>2</record_id>
      <option_code>A</option_code>
      <record_title>Shared Facilities and Coordinated Transmission Agreement</record_title>
      <record_content_desc>Agreements</record_content_desc>
      <record_version_num>0.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>83886080</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2014-02-04</proposed_effective_date>
      <priority_order>1000000000</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>AMENDED AND RESTATED
SHARED FACILITIES
AND
COORDINATED TRANSMISSION AGREEMENT
AND INDEMNITY
BETWEEN
LINDEN VFT, LLC
AND
COGEN TECHNOLOGIES LINDEN VENTURE, L.P.
DATED AS OF [__], 2013

Table of Contents
Page
ARTICLE 1 DEFINITIONS AND INTERPRETATION	3
1.1	Definitions.	3
1.2	Interpretation.	8
ARTICLE 2 STATUS OF ORIGINAL SHARED SERVICES AGREEMENT; TERM OF THIS AGREEMENT	9
2.1	Term.	9
ARTICLE 3 REPRESENTATIONS AND WARRANTIES	9
3.1	Representations and Warranties of the Parties.	9
ARTICLE 4 OPERATION AND MAINTENANCE OF THE COMMON TRANSMISSION EQUIPMENT	10
4.1	Provision of Common Site Services.	10
ARTICLE 5 USE OF THE TRANSMISSION FACILITY AND COMMON TRANSMISSION EQUIPMENT	11
5.1	Use By Linden VFT.	11
5.2	Priority and Allocation of Use.	11
ARTICLE 6 SHARED FACILITIES; COORDINATED OPERATION AND OBLIGATIONS OF COGEN	11
6.1	Operation and Maintenance of the Common Transmission Equipment.	11
6.2	Maintenance Plan.	11
6.3	Information.	12
6.4	Casualty Events.	12
6.5	Regulatory Status.	12
6.6	Compliance with ISRA.	12
6.7	Notice of Material Contract Breach.	13
ARTICLE 7 COMPENSATION	13
7.1	Compensation.	13
ARTICLE 8 METERING	13
8.1	Measurement Location.	13
8.2	Measuring Equipment and Stations.	13
8.3	Testing.	14
8.4	Corrections.	15
8.5	Maintenance and Records.	15
8.6	Losses.	15
ARTICLE 9 INVOICES AND PAYMENT	15
9.1	Billing.	15
9.2	Payment.	16
9.3	Adjustments.	16
ARTICLE 10 TAXES	16
ARTICLE 11 REMEDIES	17
11.1	Remedies.	17
11.2	Damages.	17
ARTICLE 12 FORCE MAJEURE	17
12.1	Force Majeure.	17
12.2	Force Majeure Defined.	17
ARTICLE 13 INDEMNIFICATION	18
13.1	Survival of Indemnifications.	18
13.2	Indemnification.	18
ARTICLE 14 DISPUTE RESOLUTION	19
14.1	Dispute Resolution.	19
14.2	Burden of Proof.	19
ARTICLE 15 ASSIGNMENT	19
15.1	General.	19
15.2	Further Assurances.	20
ARTICLE 16 NOTICES	20
16.1	General.	20
16.2	Changes.	20
16.3	Holidays.	21
ARTICLE 17 CONFIDENTIALITY	21
17.1	Confidentiality.	21
17.2	Disclosure to FERC or its Staff.	21
ARTICLE 18 FURTHER ASSURANCES	21
18.1	General.	21
18.2	Permits and Governmental Approvals.	22
ARTICLE 19 MISCELLANEOUS	22
19.1	Severability.	22
19.2	Captions, Titles and Headings.	22
19.3	Governing Law; Consent to Jurisdiction.	22
19.4	Non-Waiver.	22
19.5	Relationship of the Parties.	22
19.6	Parties in Interest.	23
19.7	Non-Dedication of Facilities.	23
19.8	Modification.	23
19.9	Entire Agreement.	23
19.10	Counterparts.	23
19.11	Survival of Obligations.	23

      Exhibit A	Transmission Facility
      Exhibit B	Common Transmission Equipment
      Exhibit C	Site Map, including Point of Connection
      Exhibit D	Common Site Services

AMENDED AND RESTATED SHARED FACILITIES AND COORDINATED TRANSMISSION AGREEMENT AND INDEMNITY
      This AMENDED AND RESTATED SHARED FACILITIES AND COORDINATED TRANSMISSION AGREEMENT AND INDEMNITY dated as of [___], 2013 (this "Agreement"), amends and restates the original agreement dated as of April 25, 2007 (the "Original Shared Services Agreement") in its entirety (subject only to the provisions of Section 2.1 prior to the Effective Date), between LINDEN VFT, LLC, a Delaware limited liability company ("Linden VFT"), and COGEN TECHNOLOGIES LINDEN VENTURE, L.P., a Delaware limited partnership ("Cogen").  Capitalized terms used in this Agreement and not otherwise defined have the respective meanings set forth in Section 1.1.
W I T N E S S E T H:
      WHEREAS, Cogen owns, operates and maintains the Existing Plant which produces electricity that is currently being delivered to Consolidated Edison Company of New York, Inc. (including any of its successors or assigns, "Con Ed") pursuant to a Power Purchase Agreement, dated as of April 14, 1989, as amended (as may be further amended or replaced, the "Con Ed PPA") and that produces steam that is currently being delivered to the Bayway Refinery pursuant to an Agreement for the Sale of Steam between Cogen and Bayway Refining Company (including any of its successors or assigns, "Bayway"), dated as of April 8, 1993, as amended (as may be further amended or replaced, the "Steam Agreement");
      WHEREAS, East Coast Power, L.L.C. (including any of its successors or assigns, "ECP") and Tosco Refining, L.P. (including any of its successors or assigns, "Tosco") entered into that certain Energy Services Agreement, dated as of February 14, 2000, as amended (as may be further amended or replaced, the "ESA"), pursuant to which ECP built a cogeneration facility (the "Linden 6 Facility") adjacent to the Existing Plant to produce electricity that is currently sold to Tosco for use at the Bayway Refinery and to produce steam for delivery to Cogen for use by Cogen and sale by Cogen to Bayway pursuant to the Steam Agreement;
      WHEREAS, pursuant to that certain Assignment and Assumption Agreement dated June 1, 2000, ECP assigned its interest in the ESA to East Coast Power Linden Holding, L.L.C. (f/k/a JEDI Linden, N.B., L.L.C.), a Delaware limited liability company, and an indirect subsidiary of ECP;
      WHEREAS, Phillips 66 Company (as successor to ConocoPhillips Company ("ConocoPhillips") and including any of its successors or assigns, "Phillips 66") succeeded to all rights and obligations of Tosco under the ESA and all rights and obligations of Bayway (as successor-in-interest to Exxon Corporation) under the Ground Lease Agreement dated August 1, 1990 between Cogen and Exxon Corporation (as may be further amended or replaced, the "Existing Ground Lease");
      WHEREAS, pursuant to the ESA, ConocoPhillips granted to ECP certain rights to use portions of the land upon which the Bayway Refinery is situated to develop, construct, operate and maintain an electrical transmission facility adjacent to the Existing Plant.  Rights to develop the facility were assigned by ECP to Linden VFT, and the electrical transmission facility (as more particularly described on Exhibit A, the "Transmission Facility"), was completed in 2009 and provides that (i) 315 MW of Electricity ("Excess Transmission Capacity") can flow from the PJM System through a Linden VFT switchyard to a variable frequency transformer over power lines owned by Public Service Electric and Gas Company; (ii) the Electricity can then flow from the Linden VFT variable frequency transformer to a Cogen switchyard, itself connected to the Cogen 345kV GIS Ring Bus; and (iii) the Electricity can then flow over the 345 kV Lines to the Delivery Point in the NYISO System; or alternatively, Electricity can reverse flow, using the same transmission pathway, from the NYISO System to the PJM System;
      WHEREAS, Linden VFT now owns the Transmission Facility and uses the Common Transmission Equipment (as defined below) to make Excess Transmission Capacity available to transmission customers pursuant to the PJM Tariff and NYISO Tariff, subject to the pre-existing and priority rights of Cogen to utilize the 345kV Lines, as described herein;
      WHEREAS, because the Transmission Facility is located adjacent to the Existing Plant and shares use of certain equipment with Cogen, Linden VFT and Cogen entered into the Original Shared Services Agreement to evidence the rights and obligations of both Parties and now wish to amend and revise their agreement concerning the Common Transmission Equipment, the coordination of the operation of the electrical transmission facilities of the Existing Plant and the Transmission Facility and other matters set forth below and to provide for the ability to operate and maintain the Common Transmission Equipment to effectuate VFT Commercial Operations, upon occurrence of certain eventualities; and
      WHEREAS, pursuant to a bill of sale Cogen is simultaneous herewith selling to Linden VFT a one (1) percent undivided interest in the Common Transmission Equipment, and the Parties are executing a joint ownership agreement in the Common Transmission Equipment, which nonetheless shall remain under the sole operational control of Cogen, except as explicitly described herein or in such joint ownership agreement, or as required by Law.
      NOW, THEREFORE, in consideration of the mutual covenants contained herein and other valuable consideration, the receipt and sufficiency of which are hereby acknowledged, the Parties, intending legally to be bound, agree as follows.


ARTICLE 1 
DEFINITIONS AND INTERPRETATION
      1.1 Definitions.  As used in this Agreement, the following defined terms have the meanings indicated below.
      "345 kV GIS Ring Bus" means the 345 kV gas insulated substation Ring Bus installed and owned by Cogen on land leased to Cogen in accordance with the Existing Ground Lease as may be repaired, upgraded or replaced.
      "345 kV Lines" means the electrical transmission facilities installed and owned by Cogen which are used to deliver Electricity from the 345 kV GIS Ring Bus to the Delivery Point excluding the Dedicated Facilities.
      "Actual Costs" means all costs, including fines or penalties assessed by Governmental Authorities, incurred by Cogen in providing any of the services provided to Linden VFT pursuant to this Agreement which would not have been incurred but for the obligations of Cogen under this Agreement, to the extent those costs have been paid or are due to be paid to Third Parties or, if paid or due to an Affiliate of Cogen to the extent such costs are reasonably equivalent to what would have been charged by a non-Affiliate of Cogen.  Actual Costs may include a proportionate portion of costs (including capital expenditures required in accordance with Prudent Electric Industry Practice) incurred by Cogen under an Annual Maintenance Plan if, and to the extent, such costs would not be incurred but for the obligations of Cogen under this Agreement.  Without limiting the foregoing, Actual Costs shall include any and all costs or charges assessed under the NYISO Tariff or the PJM Tariff to merchant transmission providers for which Cogen may become obligated as a result of providing the Common Site Services hereunder.
      "Additional Taxes" has the meaning assigned to it in Section 10.1.
      "Affiliate" means, with respect to any Person, any other Person that directly or indirectly, through one or more intermediaries, controls, is controlled by or is under common control with, such Person.
      "Agreement" means Amended and Restated Shared Facilities and Coordinated Transmission Agreement and Indemnity, including all exhibits hereto, as any of the foregoing may be amended from time to time.
      "Annual Fixed Fee" has the meaning assigned to it in Section 7.1.
      "Annual Maintenance Plan" has the meaning assigned to it in Section 6.2.
      "Casualty" means any physical loss, damage or destruction, by any cause to any portion of the Common Transmission Equipment.
      "Code" has the meaning assigned to it in Section 19.5.
      "Common Site Services" means providing for (i) operation and maintenance of the Common Transmission Equipment in accordance with Prudent Electric Industry Practice necessary or desireable to facilitate the availability of Excess Transmission Capacity, an indicative list of which is attached as Exhibit D, and such other services performed to maintain the Common Transmission Equipment in good working order; (ii) any other services that  are necessary for the operation and maintenance of the Transmission Facility, so long as, if and to the extent that such services would not have been performed but for the obligations of Cogen under this Agreement; and (iii) services rendered necessary or desirable under Prudent Electric Industry Practice as a result of changes in Law, site configuration or the commercial relationship of the Parties after the Effective Date, so long as, if and to the extent that such services would not have been required but for the obligations of Cogen under this Agreement, and Cogen is able to perform such additional services without material burden for which it cannot be compensated by payment of Actual Costs.  The costs for services described in subclauses (ii) and (iii) may be directly incurred on behalf of Linden VFT or on behalf of Cogen as part of the costs of operating and maintaining the Common Transmission Equipment and charged back to Linden VFT in accordance with Section 7.1.
      "Common Transmission Equipment" means the 345 kV GIS Ring Bus, Cogen's 345 kV Lines and the Cooling System which are more fully described in Exhibit B.
      "Con Ed" has the meaning assigned to it in the Recitals to this Agreement.
      "Con Ed PPA" has the meaning assigned to it in the Recitals to this Agreement.
      "ConocoPhillips" has the meaning assigned to it in the Recitals to this Agreement.
      "Cooling System" means the dielectric fluid cooling systems, comprised of a high-speed dielectric fluid circulation unit, equipped with a fluid-air dielectric fluid pre-cooler (heat exchanger) and crossover valve assembly.
      "CPI Increase" means, with respect to any given calendar year, the percentage increase, calculated from January 1 of such Calendar Year to December 31 of such calendar year, in the index known as the United States Department of Labor Bureau of Labor Statistics, Consumer Price Index, All Urban Consumers, United States City Average, All items (1982-84=100) (the "CPI") or the successor index that most closely approximates the CPI as agreed to by Cogen and Linden VFT.
      "Dedicated Facilities" means that portion of the electrical transmission facilities between the Point of Interconnection and the Delivery Point that were installed by Cogen the ownership of which was conveyed by Cogen to Con Edison.
      "Delivery Point" means the physical point at which Cogen delivers Electricity to Con Ed's Goethals Substation from the 345 kV Lines.
      "Easements" means the easements granted to Linden VFT by ConocoPhillips as further described in Exhibit C.
      "ECP" has the meaning assigned to it in the Recitals to this Agreement.
      "Effective Date" means the date first above written provided that until such time as both (i) FERC has accepted this Agreement; and (ii) either all outstanding obligations of Cogen to its Lenders who are Lenders on the date this Agreement is executed by Cogen have been paid in full or the Lenders of Cogen who are Lenders on the date this Agreement is executed by Cogen provide their consent to the effectiveness of this Agreement, the rights and obligations of the Parties shall be those set forth in the Original Shared Services Agreement as further set forth in Section 2.1.
      "Electricity" means capacity, expressed in MW, or energy, expressed in kilowatt hours (kWh), or both, as the context requires.
      "ESA" has the meaning assigned to it in the Recitals to this Agreement.
      "EWG" means an exempt wholesale generator, as defined in the Public Utility Holding Company Act of 2005, and FERC's regulations promulgated thereunder.
      "Excess Losses" has the meaning assigned to it in Section 8.6.
      "Excess Transmission Capacity" means 315 MW, subject to the terms and conditions of this Agreement including in particular Section 5.2.
      "Existing Ground Lease" has the meaning assigned to it in the Recitals to this Agreement.
      "Existing Plant" means the cogeneration facility and all appurtenant structures and equipment owned by Cogen in Linden, New Jersey, as of the date hereof and as generally described in the filings made with the FERC in Docket No. QF90-65, used for the purpose of producing steam and generating electricity, as it may, from time to time, be upgraded, expanded or repowered subject to the priority of use set forth in Section 5.2.
      "Existing Site" has the meaning assigned to it in the Recitals to this Agreement.
      "FERC" means the Federal Energy Regulatory Commission and any successors thereof.
      "Force Majeure" has the meaning assigned to it in Section 11.2.
      "Governmental Authority" means any governmental, legislative, judicial or administrative body or court or any other Person authorized to make or enforce laws or regulations or exercising executive, legislative, judicial, regulatory or administrative functions or pertaining to government.
      "Hazardous Materials" means any substance or material defined as a hazardous waste, material or substance or defined as a toxic waste, material or substance under any federal or state statute or regulations promulgated thereunder intended to provide protection for public health and the environment, including, without limitation, the Clean Air Act, the Clean Water Act, CERCLA, the Solid Waste Disposal Act (including the Resource Conservation and Recovery Act), the Toxic Substances Control Act, and their state statutory and regulatory counterparts.  The term Hazardous Materials shall include, without limitation, petroleum and petroleum byproducts, materials containing greater than one percent (1%) asbestos and dielectric fluids containing greater than fifty parts per million (50 ppm) polychlorinated biphenyls.
      "Independent Party" has the meaning assigned thereto in Section 8.2.
      "Interest Rate" means the applicable average prime rate as defined in section 35.19a of the regulations of the FERC; provided, however, in no event shall the Interest Rate exceed the maximum rate of interest permissible under the laws of the State of New Jersey.
      "ISRA" means the New Jersey Industrial Site Recovery Act, N.J.S.A. 13:1K-6 et seq., together with related regulations, as such Act and regulations may be amended from time to time.
      "kV" means thousands of volts.
      "Law" means all laws, statutes, rules, regulations, ordinances, orders and other pronouncements having the effect of law of the United States, any foreign country or any domestic or foreign state, county, city or other political subdivision or of any Governmental Authority.
      "Lender" means any Person designated from time to time by Cogen in a notice to Linden VFT as a "Lender".
      "Linden 6 Facility" has the meaning assigned to it in the Recitals to this Agreement.
      "Linden VFT" has the meaning assigned to it in the Recitals to this Agreement.
      "Losses" means the power that is lost as dissipated heat when power flows in transmission lines and transformers.
      "MW" means millions of watts.
      "NYISO" means the New York Independent System Operator or any successor independent system operator performing substantially similar functions.
      "NYISO System" means those facilities of, or administered by, NYISO used for the transmission of Electricity.
      "NYISO Tariff" means the NYISO Open Access Transmission Tariff and the NYISO Market Administration and Control Area Services Tariff on file with FERC and in effect from time to time.
      "O&amp;M Agreement" means the Operation and Maintenance Agreement, dated on or about the Effective Date, by and between Cogen and NAES Corporation.
      "Original Shared Services Agreement" has the meaning assigned to it in the Recitals to this Agreement.
      "Party" means Linden VFT or Cogen, as the case may be, and their successors and assigns expressly permitted hereby.
      "Person" means a natural person, corporation, limited liability company, partnership, association, joint venture, real estate investment trust or business trust (including any beneficiary thereof), unincorporated association, and any other form of business, legal or governmental entity.
      "Phillips 66" has the meaning assigned to it in the Recitals to this Agreement.
      "PJM" means the PJM Interconnection, L.L.C. or any successor independent system operator performing substantially similar functions.
      "PJM Rules" means all rules, regulations, requirements, procedures or policies of PJM, as in effect from time to time.
      "PJM System" means those facilities of, or administered by, PJM used for the transmission of Electricity.
      "PJM Tariff" means the PJM Open Access Transmission Tariff and the Amended and Restated Operating Agreement of PJM Interconnection, L.L.C on file with FERC and in effect from time to time.
      "Point of Connection" means the point where the Transmission Facility is connected to the Common Transmission Equipment at the 345 kV GIS Ring Bus.
      "Point of Interconnection" means a point on the 345 kV Lines at the legal boundary between the State of New Jersey and New  York, as such boundary now exists or as it may be redetermined by competent authority, where the 345 kV Lines connect to the Dedicated Facilities.
      "Prime Rate" means the bank prime loan rate as reported in Federal Reserve Statistical Release H.15 (or a successor publication of similar authority, if Statistical Release H.15 is discontinued) for the day the payment becomes due; provided, however, in no event shall this rate of interest exceed the maximum rate of interest permissible under the laws of the State of New Jersey.
      "Prudent Electric Industry Practice" means any of the practices, methods or acts (i) required by the National Electric Safety Code, the North American Electric Reliability Corporation, any transmission provider or independent system operator with whose electrical transmission facilities the Common Transmission Equipment, the Existing Plant or the Transmission Facility is interconnected, or the successors of any such entity, whether or not a Party is a member thereof, or (ii) otherwise engaged in or approved by a significant portion of the electric generation and/or transmission industry during the relevant time period or any of the practices, methods and acts that in the exercise of reasonable judgment in light of the facts known at the time the decision was made, would have been expected to accomplish the desired result at a reasonable cost consistent with good business practices, reliability, safety and expedition.  Prudent Electric Industry Practice is not intended to be limited to the optimum practice, method or act to the exclusion of all others, but rather to be acceptable practices, methods or acts generally accepted in the region.
      "Qualifying Facility" means a "qualifying cogeneration facility" under the Public Utility Regulatory Policies Act of 1978 and FERC's regulations promulgated thereunder.
      "Release" shall mean any actual release, spill, emission, leak, injection, deposit, disposal, discharge, dispersal, leaching or migration into the atmosphere, surface water, groundwater, soil or subsurface strata.
      "Ring Bus" means a group of electrical conductors in the form of a ring or loop that serve as a common connection for two or more electrical circuits within a station.
      "Taxes" shall mean any Governmental Authority's ad valorem, property (including host community benefit fees and payments in lieu of taxes), occupation, severance, generation, first use, conservation, Btu or energy, transmission, utility, gross receipts, privilege, sales, use, consumption, excise, lease, transaction taxes and charges, and all other taxes or governmental charges, license fees, fees, permit fees and assessments, or increases therein, other than those taxes based on any Party's or its Affiliate's net income or net worth.
      "Term" means the term of this Agreement which shall commence on the Effective Date and shall terminate as provided in Section 2.1(b).
      "Third Party" means a Person other than a Party.
      "Tosco" has the meaning assigned to it in the Recitals to this Agreement.
      "Transmission Capacity" means the Electricity delivery carrying capability from time to time of the 345 kV Lines from the 345 kV GIS Ring Bus to the Delivery Point under normal operating conditions in accordance with Prudent Electric Industry Practice.
      "Transmission Facility" has the meaning assigned to it in the Recitals to this Agreement.
      "VFT Commercial Operations" means the use of Excess Transmission Capacity from or to the Point of Connection for the bi-directional scheduling of Electricity between PJM and NYISO, and between NYISO and PJM, in accordance with provisions of the PJM Tariff and applicable orders of the FERC.
      1.2 Interpretation.
      (A) Each Party acknowledges that the other Party and its counsel have reviewed and negotiated this Agreement and that any rule of construction to the effect that any ambiguities are to be resolved against the drafting Party shall not be employed in the interpretation of this Agreement.
      (B) Defined terms in this Agreement shall include in the singular number the plural, and in the plural number the singular.  Whenever the context requires, any pronoun shall include the corresponding masculine, feminine and neuter forms.  Article, section and Exhibit references are to articles and sections of and exhibits to this Agreement, except as otherwise indicated.
      (C) Unless otherwise stated, any reference in this Agreement to any Governmental Authority or to any statutes and regulations shall include reference to any successors to such Governmental Authority and to any successor provisions to such statutes and regulations, respectively.
      (D) When used in this Agreement, the words "hereof," "herein," "hereunder" and words of similar import shall, unless otherwise expressly indicated, refer to this Agreement as a whole and not to any particular provision of this Agreement; the words "not unreasonably withheld" and words of similar import shall, unless otherwise expressly indicated, mean not unreasonably withheld, delayed or conditioned; the words "include," "includes," and "including" shall be understood to mean inclusion without limitation.
ARTICLE 2 
STATUS OF ORIGINAL SHARED SERVICES AGREEMENT; TERM OF THIS AGREEMENT
      2.1 Term.
      (a) This Agreement shall become effective on the Effective Date.  Until such time, the Parties agree to continue to perform pursuant to the Original Shared Services Agreement in accordance with its terms.
      (b) This Agreement shall continue in effect until the earliest of (i) Linden VFT terminates this Agreement expressly in writing, (ii) the date on which Cogen permanently ceases operation of the Existing Plant (or any upgrades thereto) such that provision of the Common Site Services is rendered impossible, (iii) the date on which Linden VFT permanently ceases operation of the Transmission Facility and (iv) the date on which Cogen terminates this Agreement in accordance with Section 11.1; provided, however, that any termination pursuant to clause (i) shall be subject to a payment by Linden VFT to Cogen in an amount equal to the Actual Costs reasonably incurred by Cogen in anticipation of this Agreement continuing.
ARTICLE 3 
REPRESENTATIONS AND WARRANTIES
      3.1 Representations and Warranties of the Parties.  As of the date of its execution hereof, each Party represents and warrants to the other the following.
      (A) It is duly organized, validly existing and in good standing under the laws of the jurisdiction of its organization and is qualified to do business in the State of New Jersey.
      (B) It has all requisite power and authority to execute and deliver this Agreement.
      (C) Its execution and delivery of this Agreement have been duly authorized by all necessary actions in accordance with its organizational instruments; this Agreement has been duly executed and delivered for it by signatories so authorized; and this Agreement constitutes a legal, valid and binding obligation enforceable against it in accordance with its respective terms, except as the same may be limited by bankruptcy, insolvency, reorganization, arrangement, moratorium or other similar Laws relating to or affecting the rights of creditors generally, or by general equitable principles.
      (D) Subject to obtaining Lenders' consent if Lenders exist and subject to FERC acceptance of this Agreement, neither the execution, delivery nor performance by it of this Agreement conflicts with, results in a breach of or constitutes a default under (i) any of the terms, conditions or provisions of its certificate or articles of incorporation, articles of association, limited liability company or partnership agreement, by-laws or other constituent documents, (ii) any federal, state or local law, or any order, rule or regulation of any Governmental Authority having jurisdiction over it or its properties or by which it or its properties may be bound, or (iii) any agreement or instrument to which it is a Party or by which it or any of its properties may be bound, other than with respect to any agreements or instruments for which consents or approvals are required.
      (E) No suit, action or arbitration, or legal, administrative or other proceeding is pending or to its knowledge threatened at law or in equity against it that would affect the validity or enforceability of this Agreement, or the ability of it to fulfill its obligations hereunder.
      (F) Other than the acceptance by FERC and approval by Lenders, it has obtained all consents and approvals (if any) required from Third Parties necessary for the execution, delivery and performance of this Agreement.
ARTICLE 4 
OPERATION AND MAINTENANCE OF THE COMMON TRANSMISSION EQUIPMENT
      4.1 Provision of Common Site Services.  Linden VFT acknowledges and agrees that Cogen shall provide the Common Site Services through the O&amp;M Agreement.  Should Cogen cease to provide any Common Site Services (including access to and use of the Common Transmission Equipment) for any reason whatsoever other than Force Majeure or no reason, Linden VFT may, at its sole option, while such cessation continues, provide such Common Site Services as it desires, at Linden VFT's sole expense.  At any time, Cogen may commence or resume providing Common Site Services which Linden VFT is providing for itself under this Section 4.1, upon notice to Linden VFT and from and after the time on which such Common Site Services are actually performed by Cogen, Linden VFT shall refrain from providing those Common Site Services itself and Cogen shall reimburse Linden VFT for any reasonable costs or expenses it has incurred in breaking any contract or arrangement with a Third Party for providing those Common Site Services.  If Linden VFT has exercised its right to provide Common Site Services and such performance results in any default or breach under any contract in existence on the date of execution hereof to which Cogen is a party, Linden VFT shall indemnify Cogen for the consequences thereof and in no event will any performance of Common Site Services by or on behalf of VFT adversely affect Cogen's normal business operations in any material respect.  Any Common Site Services provided by or on behalf of Linden VFT pursuant to this Section 4.1 shall be provided only by qualified personnel and in accordance with Prudent Electric Industry Practice.
ARTICLE 5 
USE OF THE TRANSMISSION FACILITY AND COMMON TRANSMISSION EQUIPMENT
      5.1 Use By Linden VFT.  Cogen agrees to operate the Common Transmission Equipment consistent with Prudent Electric Industry Practice and this Agreement.  Linden VFT shall have the exclusive right to use the Excess Transmission Capacity in the Common Transmission Equipment to schedule transmission of Electricity for VFT Commercial Operations pursuant to this Agreement.  For the avoidance of doubt, nothing contained in this Agreement shall create any obligation of Cogen under any agreement to which Linden VFT is a party, to PJM or NYISO, other than pursuant to an agreement or document to which Cogen has expressly agreed.
      5.2 Priority and Allocation of Use.  If and to the extent that at any time during the Term the use of all or any portion of the Excess Transmission Capacity by or on behalf of Linden VFT is in conflict with the use of the 345 kV Lines by Cogen, then in such event Cogen shall have first priority for the delivery of all Electricity generated by the Existing Plant using the 345 kV Lines and the Common Transmission Equipment, provided Cogen shall not take any action after the Effective Date and during the Term to modify or add electrical generating equipment to the Existing Plant that will cause the Excess Transmission Capacity otherwise available to Linden VFT to fall below 315 MW.
ARTICLE 6 
SHARED FACILITIES; COORDINATED OPERATION AND OBLIGATIONS OF COGEN
      6.1 Operation and Maintenance of the Common Transmission Equipment.  Nothing in this Agreement shall be deemed or construed to create an obligation of Cogen to operate the Existing Plant or provide any services hereunder once it has permanently ceased operation of the Existing Plant.  Cogen agrees to provide Linden VFT one (1) year express prior written notice of its intent to permanently cease operation of the Existing Plant or disconnect the 345 kV Lines from the Point of Interconnection or disconnect the Existing Plant from the 345 kV GIS Ring Bus.
      6.2 Maintenance Plan.  Prior to the beginning of each year during the Term, the Cogen will deliver the plan (the "Annual Maintenance Plan") for the twelve (12) month period commencing at the start of the next year.  The Annual Maintenance Plan shall be the maintenance plan provided to the Lenders, if there are Lenders, and if there are no Lenders, shall set forth, in detail as called for by Prudent Electric Industry Practice, anticipated operations, routine maintenance, repairs and capital improvements (including scheduled and reasonably anticipated major overhaul and maintenance), procurement (including equipment acquisitions and spare parts and consumable inventories), staffing, personnel and labor activities, administrative activities, with respect to the Transmission Facility and, the Common Transmission Equipment.  Linden VFT may request modifications and additions to the Annual Maintenance Plan and Cogen will make reasonable efforts to incorporate such changes to the Annual Maintenance Plan.  Cogen shall notify Linden VFT as soon as reasonably practical of any reasons or outages that might cause material deviations or discrepancies from the projections contained in the Annual Maintenance Plan.  In determining planned outages of the Common Transmission Equipment, Cogen shall use reasonable efforts to coordinate with Linden VFT to minimize disruption to VFT Commercial Operations and maximize availability of the transmission path to the Delivery Point for the Excess Transmission Capacity.  Except as required by Prudent Electric Utility Practice, Cogen shall not schedule a planned outage during peak summer periods as specified under the PJM Tariff and the NYISO Tariff.
      6.3 Information.  Upon being notified or otherwise becoming aware of the occurrence of (i) any unplanned outage of the Common Transmission Equipment or (ii) any outage of the Dedicated Facilities, Cogen shall immediately inform Linden VFT's on-site representative and notify, by e-mail, the party indicated in Section 17.1.  Cogen shall use reasonable efforts to inform Linden VFT (by e-mail to the party indicated in Section 17.1) of conditions affecting the Common Transmission Equipment which could negatively affect VFT Commercial Operations, including Release of Hazardous Materials.
      6.4 Casualty Events.
      Upon occurrence of a Casualty affecting the Common Transmission Equipment, Cogen shall consult promptly with Linden VFT regarding a repair schedule which will result in an expeditious return to service of the Common Transmission Equipment.  Linden VFT may make a proposal to Cogen to accelerate repair at Linden VFT's sole cost and expense and Cogen shall use reasonable efforts to accommodate the proposal, but only to the extent any such repair would not be detrimental to the Existing Plant or Cogen's business.
      6.5 Regulatory Status.
      (A) (i), Cogen's performance of its obligations pursuant to this Agreement and Linden VFT's use of the Excess Transmission Capacity shall be suspended if, for any reason and at any time, Cogen's performance of its obligations pursuant to this Agreement or Linden VFT's use of the Excess Transmission Capacity would prevent (i) until December 31, 2017 the Facility from maintaining its Qualifying Facility status and (ii) from and after January 1, 2018, either (A) the Facility from maintaining its Qualifying Facility status or (B) Cogen from being an EWG.
      (B) Cogen shall have no obligation to Linden VFT to maintain the status of the Existing Plant as a Qualifying Facility whenever Cogen determines, in its sole discretion, that it is no longer necessary for Cogen to maintain Qualifying Facility status of the Existing Plant in which case the above clause (A) shall no longer apply.
      6.6 Compliance with ISRA.  In the event Linden VFT closes, ceases or transfers ownership or operations of the Transmission Facility, or causes any other event to occur triggering the requirements of ISRA, Linden VFT shall, at its sole cost and expense, comply with ISRA and Linden VFT shall make or cause to be made all submissions to, provide or cause to be provided all information to, and comply with or cause to be complied with all requirements of the New Jersey Department of Environmental Protection relative to ISRA.
      6.7 Notice of Material Contract Breach.  Cogen shall use reasonable efforts to deliver to Linden VFT, promptly after receipt by Cogen thereof or becoming aware thereof, notice of any breach or default by Cogen in respect of the ConEd PPA or the Existing Ground Lease.
ARTICLE 7 
COMPENSATION
      7.1 Compensation.  During the Term, Linden VFT shall pay Cogen:
      (1) an annual fixed fee (the "Annual Fixed Fee") of one million dollars ($1,000,000) ), escalated on January 1 of each year, commencing January 1 of the year following the year of effectiveness of this Agreement, by an amount equal to the CPI Increase for the previous calendar year while Cogen is still furnishing services hereunder; and
      (2) for Common Site Services during each calendar year at Actual Cost plus a general and administrative expense component of fifteen percent (15%); provided that such general and administrative expense component shall not apply to any capital expenditures included within Actual Costs.
For any Actual Cost incurred, Cogen shall provide evidence reasonably satisfactory to Linden VFT demonstrating (i) the need for such costs to have been incurred and (ii) all relevant invoices for amounts paid to Third Parties.
Without limiting the obligation of Linden VFT to reimburse Cogen for Actual Costs as provided in this Section 7.1, Cogen shall, to the extent practical, provide advance notice to Linden VFT of the Actual Costs to be incurred prior to incurring any Actual Costs.
ARTICLE 8 
METERING
      8.1 Measurement Location.  The metering points for Electricity shall be as set forth in Exhibit C or as may be otherwise mutually agreed by the Parties from time to time.
      8.2 Measuring Equipment and Stations.
      (A) Meters.  Linden VFT shall, at its sole expense, (i) install, own, operate and maintain measuring and metering stations and equipment for the measurement of Electricity delivered by Linden VFT to Cogen at the Point of Connection sufficient to permit an accurate determination of the quantity and quality of such deliveries; and (ii) exercise reasonable care in the maintenance and operation of such measuring equipment so as to assure an accurate determination of the quantity and quality of such deliveries.  The measuring equipment installed by Linden VFT shall be used by Cogen to determine the billing hereunder and shall be sealed.  Such seals shall be broken only by Cogen, in the presence of a representative of Linden VFT, or by an independent party unrelated, directly or indirectly, to either Party and mutually agreeable to the Parties (the "Independent Party") and only when the metering equipment is to be inspected, tested or adjusted as described in Section 8.3.  Linden VFT shall provide Cogen or the Independent Party, as the case may be, access to such metering equipment at all reasonable times for the purposes of inspecting, testing and adjusting the same, provided that such access shall not interfere with Cogen's or Linden VFT's normal business operations.  In the event that Linden VFT's measuring equipment fails to register during any period of time, and except as provided in Section 8.4, Cogen shall determine quantities from its own metering equipment as set forth in Section 8.2(b) or from production records if no such metering equipment is available.
      (B) Cogen.  Cogen may own, operate and maintain additional metering equipment at its sole expense, provided that such metering equipment shall be operated and maintained in a manner that does not interfere with Linden VFT's metering equipment.  Should Cogen so elect and should any metering equipment installed by Linden VFT fail to register during any period of time, Cogen's metering equipment shall be used to determine the quantity of Electricity delivered during such period in lieu of Cogen's estimates thereof to the extent Cogen's measuring equipment shall have been tested and maintained in accordance with Section 8.3 and 8.5.  Cogen shall provide access for Linden VFT and, if applicable, the Independent Party, to the metering equipment at all reasonable times for the purposes of witnessing, testing and adjusting the same, provided that such access shall not interfere with Cogen's and Linden VFT's normal business operations.
      8.3 Testing.
      (A) General.  The accuracy of any measuring equipment to be used for purposes of measuring electricity shall be tested and verified at the reasonable request of either Party.  If the Party not responsible for maintaining such metering equipment requests a verification test to be made, such test shall be at such Party's expense if the measuring equipment proves to be accurate within a tolerance of one percent (1%).  If errors greater than such tolerances are discovered, the test shall be at the expense of the Party responsible for maintaining such measuring equipment.
      (B) Cooperation.  If either Party notifies the other Party that it desires a test of its own or of the other Party's measuring equipment, the Parties shall cooperate to secure a prompt verification of the accuracy of such equipment.
      (C) Notice and Right to Witness.  Each Party shall be given at least five (5) days' notice prior to the test of any metering equipment.  Each Party shall have the right to have a representative present at any time that any metering equipment is to be tested; provided, however, that a Party's failure to have a representative present at the test shall not affect the validity of the test so long as the notice required under the preceding sentence shall have been given.
      8.4 Corrections.  If, upon testing, any metering equipment is found to be in error by not more than one percent (1%) tolerance when reading the average operating range over the past year, then previous recordings of such equipment shall be considered accurate, but such equipment shall be promptly adjusted by an Independent Party to record correctly.  If, upon testing, any metering equipment shall be found to be inaccurate by more than such tolerance, then such equipment shall be promptly adjusted and retroactive billing adjustments for such errors shall be made for (i) the actual period during which inaccurate measurements were made, if that period can be reasonably determined; or (ii) if the period cannot be reasonably determined, one-half (1/2) of the period from the date of the last previous test of the metering equipment, but not to exceed six (6) Months.
      8.5 Maintenance and Records.
      (A) Maintenance.  Each Party shall have the right to have a representative present whenever the other Party or the Independent Party, as applicable, cleans, changes, repairs, inspects, tests, calibrates, or adjusts any metering equipment or any equipment used in checking measurements.  Each Party shall give not less than five (5) days' notice to the other Party in advance of taking any of such actions.
      (B) Records.  The records from the test of any metering equipment shall remain the property of the Party at whose expense the testing occurred, but, upon request, each Party shall submit to the other its records and charts (or, at its option, copies thereof), together with calculations therefrom, for inspection and copying, subject, in the case of originals, to return within ten (10) days after receipt thereof.
      8.6 Losses.  If and to the extent Losses are determined to have occurred between the Point of Interconnection and the Delivery Point, such Losses shall be allocated pro rata to Cogen and Linden VFT based on the quantity of Electricity that Cogen determines has been delivered from the Existing Plant to the 345 kV GIS Ring Bus and that Linden VFT has delivered at the Point of Interconnection, provided that such Losses are not a direct or indirect result of Linden VFT's use of the Excess Transmission Capacity and such Losses (the "Excess Losses") exceed the Losses that would have occurred solely as a result of the delivery of Electricity from the Existing Plant to Con Ed at the Delivery Point, in which case such Excess Losses shall be assessed solely to the account of Linden VFT.
ARTICLE 9 
INVOICES AND PAYMENT
      9.1 Billing.
      (A) There shall be a single monthly invoice.  Cogen shall render to Linden VFT (by regular mail, facsimile or other acceptable means pursuant to Article 16 for each year during the Term, an invoice setting forth the total amount due Cogen or Linden VFT, as the case may be, for the Common Site Services, and for any other amounts due under this Agreement, including any indemnification obligations under Article 13.  If Cogen from time to time does not know the Actual Cost of providing any Common Site Services or any other charge due when Cogen prepares an invoice pursuant to this Section 9.1, Cogen may reasonably estimate such cost using all available data.
      (B) To the extent that an estimate is provided and used for purposes of determining the Actual Cost of providing any Common Site Services, Cogen shall provide Linden VFT a statement of the actual amount of such charge as soon as available to Cogen, and Cogen shall make the appropriate adjustment in the following invoice.
      9.2 Payment.
      (A) On or before twenty (20) days after receipt of Cogen's invoice, or if such day is not a Business Day, the immediately following Business Day, Linden VFT or Cogen, as the case may be, shall tender payment of the amount set forth on such invoice to the payment address provided in Section 16.1.  Overdue payments shall accrue interest from and including the due date to, but excluding, the date of payment at the Interest Rate.
      (B) If Linden VFT in good faith disputes an invoice, Linden VFT shall provide a written explanation of Linden VFT's good faith basis for the dispute not later than thirty (30) days after the due date for amounts, and Linden VFT shall (i) pay to Cogen the entire invoice no later than the due date, or (ii) continue to make all payments not in dispute and pay into an independent escrow account the portion of the invoice in dispute, pending resolution of such dispute.  Notwithstanding the foregoing, however, Linden VFT shall retain the right to dispute invoices after payment thereof for a period of three (3) years after the date on which the invoice was paid.  If any amount disputed by Linden VFT is determined to be due to Linden VFT, it shall be paid to Linden VFT by Cogen within ten (10) days of such determination, along with interest accrued at the Interest Rate from the date initial payment of such disputed amount was received by Cogen until the date such amounts are actually paid to Linden VFT.
      9.3 Adjustments.  Cogen shall promptly prepare and deliver to Linden VFT an invoice setting forth any adjustments for discrepancies in billing identified through meter verifications pursuant to Article 8 or for any other reason that would require immediate reimbursement of billed amounts to Linden VFT by Cogen or additional payments by Linden VFT to Cogen hereunder, along with interest accrued at the Interest Rate from the date such payments or reimbursements should have been paid in ordinary course to Linden VFT or Cogen, as the case may be.
ARTICLE 10 
TAXES
      Pursuant to Article 7, Linden VFT shall pay Cogen for all Taxes arising with respect to the Transmission Facility (the "Additional Taxes").  Such Additional Taxes shall include only those Taxes incurred by Cogen as described in the preceding sentence which exceed the Taxes that would have been incurred solely as a result of Cogen's operation of the Existing Plant.  Linden VFT shall indemnify, defend and hold harmless Cogen from any Claims for such Additional Taxes.  Each Party shall use reasonable efforts to administer this Agreement and implement the provisions in accordance with the intent to minimize Taxes, and shall use reasonable efforts to obtain and cooperate with the other Party in obtaining any exemption from or reduction of any Tax.
ARTICLE 11 
REMEDIES
      11.1 Remedies.  If a breach by a Party of its obligations under this Agreement has occurred and is continuing, (1) in the case of a breach by Cogen, Linden VFT may, to the extent applicable, exercise its rights set forth in Section 4.1 and (2) in the case of the failure by Linden VFT to pay all amounts due and payable to Cogen hereunder, Cogen may terminate this Agreement upon not less than sixty (60) days' notice; provided, however, that if Linden VFT has cured such breach within such sixty (60) day notice period, Cogen may not terminate this Agreement.
      11.2 Damages.  Notwithstanding the provisions of Section 11.1, if a breach has occurred and is continuing, the Party, if any, that is not in breach may take any action at law or in equity that may be available to it to enforce the payment of any damages, provided, however that the liability of Cogen for payment of damages to Linden VFT under this Agreement, except in the case of a breach which is the result of willful misconduct or gross negligence by Cogen, shall be limited to $5,000,000.
ARTICLE 12 
FORCE MAJEURE
      12.1 Force Majeure.  If a Party is rendered wholly or partly unable to perform its obligations under this Agreement because of a Force Majeure event, that Party shall be excused from whatever performance is affected by such Force Majeure event but only to the extent so affected, provided that:  (i) the Party, within five (5) Business Days after the occurrence of the Force Majeure event, gives the other Party notice describing the particulars of the occurrence and its estimated duration; (ii) the suspension of performance is of no greater scope and of no longer duration than is required by the Force Majeure event; (iii) the non-performing Party uses reasonable efforts to mitigate the effects of the Force Majeure and remedy its inability to perform; (iv) when the non-performing Party is able to resume performance of its obligations under this Agreement, that Party shall give the other Party written notice to that effect; and (v) the Force Majeure was not caused by or connected with any negligent or intentional acts, errors, or omissions, or failure by the non-performing Party to comply with any Law or any breach or default of this Agreement. Notwithstanding anything to the contrary contained in this Agreement, in no event shall any Party be excused by reason of Force Majeure from its obligation to pay any amounts due under this Agreement.
      12.2 Force Majeure Defined.  "Force Majeure" means any event beyond the reasonable control of the Party affected thereby that adversely affects the ability of such Party to perform any obligation hereunder (other than failure to pay money when due), including but not limited to the following:  acts of God, war or foreign enemy; unusually severe weather conditions; flood; earthquake; storm; hurricane; epidemics; lightning; fire; drought; explosion; riot; civil disturbance; strikes, lockouts or similar labor interruptions or labor disputes; sabotage; an event of force majeure occurring with respect to, or a suspension, curtailment or service interruption of, any Third Party supplier of electricity, gas, water or waste water, or any Third Party electricity, gas, water or waste water transmission or distribution provider (including any independent system operator or equivalent, and any interstate natural gas pipeline or any local electricity, gas or water distribution company or provider of waste water); any action of a court or a binding order of any Governmental Authority; inability after diligent application to obtain or maintain required permits, zoning or other required approvals from any Governmental Authority or other Third Party whose consent is required as a condition to a Party's performance hereunder; the surface or subsurface presence at the site of pollution, Hazardous Materials or contamination, which shall prevent the commercial operation of, the Transmission Facility; failure of Third Party facilities or Third Party major equipment breakdown; failure of any contractor, subcontractor or supplier to furnish labor, services, materials or equipment on the dates agreed to if such failure is caused by a Force Majeure; a change in applicable Law; the failure of any public agency or Governmental Authority or any utility having jurisdiction of the Existing Plant to maintain utilities, services, water and sewer lines and power transmission lines; and any circumstance that would in the reasonable opinion of such Party endanger persons or property.  A failure of equipment or machinery controlled or operated by a Party (whether leased or owned) shall not be considered Force Majeure irrespective of whether such equipment or machinery has been designed, manufactured, installed, or maintained by the Party or a Third Party unless such failure was due to a Force Majeure.
ARTICLE 13 
INDEMNIFICATION
      13.1 Survival of Indemnifications.  The provisions of this Article shall survive the expiration or earlier termination of this Agreement.
      13.2 Indemnification.
      (A) Linden VFT shall defend, indemnify and hold Cogen harmless from and against any and all claims, demands, losses (including lost revenue under any of Cogen's agreements with Third Parties), settlements, expenses, costs, damages, and liabilities (including reasonable attorneys' fees) (collectively, "Claims"), including without limitation Claims resulting from a Release of Hazardous Materials by Linden VFT on the Existing Site or the areas encumbered by the Easements, made against or incurred by Cogen in any way arising out of, or resulting from or in connection with, Linden VFT's actions or omissions to act or that of any Third Party acting on behalf of or for Linden VFT, or otherwise in connection with this Agreement or the construction, operation, maintenance and repair of the Transmission Facility, except to the extent that such Claims result solely from (i) the willful misconduct or gross negligence of Cogen or (ii) a breach by Cogen of its obligations under this Agreement that is the direct result of its willful misconduct or gross negligence and that is not the direct result of a material breach by Linden VFT under this Agreement.  EXCEPT AS PROVIDED ABOVE WITH RESPECT TO LOST REVENUES, IN NO EVENT SHALL LINDEN VFT BE LIABLE TO COGEN FOR INDIRECT, CONSEQUENTIAL, EXEMPLARY OR PUNITIVE DAMAGES OF ANY TYPE UNDER ANY CIRCUMSTANCES, WHETHER OR NOT SUCH DAMAGES MAY BE AVAILABLE UNDER STATE OR FEDERAL LAW, AND THE PARTIES HEREBY WAIVE ANY RIGHT THEY MIGHT OTHERWISE HAVE TO RECOVER ANY SUCH DAMAGES.
      (B) Cogen shall defend, indemnify and hold Linden VFT harmless from and against any and all Claims made by Third Parties (including any Governmental Authority) against or incurred by Linden VFT in any way arising out of or resulting from or in connection with a Release of Hazardous Materials by Cogen on the Existing Site or the areas encumbered by the Easements, except to the extent that such Claims result solely from (i) the willful misconduct or gross negligence of Linden VFT, (ii) a breach by Linden VFT of its obligations under this Agreement that is not the direct result of a material breach by Cogen under this Agreement or the Existing Ground Lease Agreement or (iii) Linden VFT's actions or omissions to act or that of any Third Party acting on behalf of or for Linden VFT resulting in any liability of Cogen.  IN NO EVENT SHALL COGEN BE LIABLE TO LINDEN VFT FOR INDIRECT, CONSEQUENTIAL, EXEMPLARY OR PUNITIVE DAMAGES OF ANY TYPE UNDER ANY CIRCUMSTANCES, WHETHER OR NOT SUCH DAMAGES MAY BE AVAILABLE UNDER STATE OR FEDERAL LAW, AND THE PARTIES HEREBY WAIVE ANY RIGHT THEY MIGHT OTHERWISE HAVE TO RECOVER ANY SUCH DAMAGES.
ARTICLE 14 
DISPUTE RESOLUTION
      14.1 Dispute Resolution.
      (A) The Parties agree to work in good faith to resolve any claim, demand, cause of action, dispute or controversy arising out of or relating to this Agreement.  The Parties shall refer any such dispute to representatives of each Party's senior management for resolution.
      (B) If the representatives of each Party's senior management are unable to resolve such dispute within sixty (60) days after such referral, any Party may commence legal proceedings in accordance with Section 19.3.
      14.2 Burden of Proof.  In the event that Linden VFT commences any litigation between Cogen and Linden VFT regarding the costs and expenses of operating and maintaining the Transmission Facility that have been paid or are due and payable to Third Parties by Cogen and have not been reimbursed to Cogen by Linden VFT pursuant to this Agreement, Linden VFT shall bear the burden of establishing that Cogen is not entitled to reimbursement of such costs and expenses by Linden VFT in accordance with the terms and conditions of this Agreement.
ARTICLE 15 
ASSIGNMENT
      15.1 General.  Neither Party may assign or otherwise transfer this Agreement or any of its rights hereunder to any other Person except in connection with a sale of all or substantially all of its assets so long as the same purchaser expressly assumes this Agreement or as collateral to any Person providing financing to it or any of its Affiliates whereupon the other Party agrees to (a) execute promptly any consent to assignment requested by such Person if the form thereof is customary (including for assignment or sale of rights to any Person upon the borrower's default) for a "mezzanine," "project" or "portfolio" financing (as those terms are generally understood in the financing market) and (b) request that its Lenders execute any reasonable non-disturbance agreement which is customary as adjudged by the standards contained in clause (a).  Nothing contained in this Agreement, however, shall restrict, or impose any conditions on, any sale by Cogen or Linden VFT of all or any portion of its assets.
      15.2 Further Assurances.  If reasonably requested by a Party proposing to effect an assignment pursuant to this Article 15, the other Party shall reasonably cooperate to facilitate such proposed assignment, including without limitation by agreeing to furnish an estoppel certificate if and to the extent appropriate with respect to the assigning Party's compliance under this Agreement.
ARTICLE 16 
NOTICES
      16.1 General.  All notices, notifications, invoices, payments, consents or other communications between the Parties shall be given in writing and shall either be delivered by hand or sent by certified or registered mail, return receipt requested, or by facsimile followed immediately by certified or registered mail, return receipt requested, as follows:
If to Cogen, to:
Cogen Technologies Linden Venture, L.P.
800 Long Ridge Road
Stamford, Connecticut 06297-0001
Attn:  Linden Portfolio Manager
Vimal.chauhan@ge.com 
with a copy to:
[Linden JV]
If to Linden VFT, to:
Linden VFT, L.L.C.
800 Long Ridge Road
Stamford, Connecticut 06297-0001
Attn:  Linden VFT Portfolio Manager
Amanuel.haile-mariam@ge.com
Notices shall be deemed received when delivered by hand, upon receipt (as indicated on a return certificate), or when sent by facsimile.
      16.2 Changes.  Either Party may change this address for notice hereunder, or provide for additional Persons to be noticed, by giving the other Party notice as provided above.
      16.3 Holidays.  If the date on which a notice is due, or a prescribed action is necessary falls on a day that is not a Business Day, the date on which such notice or action shall be due shall be extended until the next succeeding Business Day.
ARTICLE 17 
CONFIDENTIALITY
      17.1 Confidentiality.  The Parties agree that all information relating to this Agreement and the terms or conditions of this Agreement or disclosed pursuant to any term or provision of this Agreement shall be kept confidential and shall not be disclosed or used for any purpose other than matters related to this Agreement.  Such obligations of confidentiality shall extend to all such information, whether exchanged orally or in written or electronic forms, and whether or not designated at the time exchanged as confidential and shall survive the termination of this Agreement by three (3) years.  Each Party shall be permitted to disclose confidential information to such Party's and its Affiliates' officers, directors, employees, agents, counsel, accountants, consultants, contractors or advisors who need to know such information for the purpose of implementing this Agreement or the transactions contemplated hereby, and agrees to notify such Persons of the confidential nature of such information, and to be responsible for any unauthorized disclosure of such information by such Persons.  Each Party shall be permitted to disclose confidential information to those of its Lenders and prospective Lenders or prospective purchasers.  Information shall not be deemed to be confidential if it (i) was in the public domain prior to the date hereof, (ii) becomes publicly available after the date hereof other than as a result of the unauthorized disclosure thereof by a Party or by an officer, director, employee, agent or Affiliate of a Party, or (iii) is required to be disclosed pursuant to applicable laws or regulations or pursuant to administrative or judicial process; provided, however, that the disclosing Party provides the non-disclosing Party with written notice of the information to be disclosed as far in advance of its disclosure as is practicable and that, the disclosing Party uses its best efforts to obtain assurances that confidential treatment will be accorded to such information.  The Parties shall be entitled to all remedies available at law or in equity to enforce or seek relief in connection with this confidentiality obligation.
      17.2 Disclosure to FERC or its Staff.  Notwithstanding anything in Section 17.1 to the contrary, if FERC or its staff, during the course of an investigation or otherwise, requests information from one of the Parties that is otherwise required to be maintained in confidence pursuant to this Agreement, the Party shall provide the requested information to FERC or its staff, within the time provided for in the request for information.  In providing the information to FERC or its staff, the Party must, consistent with 18 CFR section 388.112, request that the information be treated as confidential and non-public by FERC and its staff and that the information be withheld from public disclosure.
ARTICLE 18 
FURTHER ASSURANCES
      18.1 General.  Each Party agrees to execute and deliver all further instruments and documents, and take any further action that may be reasonably necessary to effectuate the purpose and intent of this Agreement.
      18.2 Permits and Governmental Approvals.  The Parties will cooperate with each other and shall use reasonable efforts to assist the other Party in obtaining all permits and approvals from any Governmental Authority required for the maintenance and operation of the Common Transmission Equipment, the Transmission Facility, and as may be required to maintain the status of the Existing Plant as a Qualifying Facility (as provided in Section 6.5), and for favorable Tax treatments.  At Cogen's request, Linden VFT shall use commercially reasonable efforts, at Linden VFT's expense, to modify or amend any such permits or approvals, reasonably necessary to facilitate Cogen's operation of the Common Transmission Equipment pursuant to this Agreement.
ARTICLE 19 
MISCELLANEOUS
      19.1 Severability.  If any provision of this Agreement shall be held invalid or unenforceable by any court of competent jurisdiction, then such holding shall not invalidate or render unenforceable any other provision hereof and the Parties shall immediately renegotiate in good faith such provision to eliminate such invalidity or unenforceability, consistent with the intent of this Agreement.
      19.2 Captions, Titles and Headings.  The captions, titles, and headings used in this Agreement are for convenience only and shall not affect the construction of any terms of this Agreement.
      19.3 Governing Law; Consent to Jurisdiction.  This Agreement shall be governed by and construed in accordance with the laws of New Jersey.  Each of the Parties hereto submits to the non-exclusive jurisdiction and venue of the State and Federal courts located in Union County, State of New Jersey with respect to any action or proceeding relating to this Agreement and the transactions contemplated hereby.
      19.4 Non-Waiver.  Except as may be expressly provided in this Agreement or in a writing signed by the Party against whom a waiver is claimed, the failure of either Party to insist in any instance on strict performance of any provision of this Agreement shall not be construed as a waiver of any such provision or the relinquishment of any rights thereunder in the future, but the same shall continue and remain in full force and effect.
      19.5 Relationship of the Parties.  The Parties are and intend to be independent contractors with respect to each other for all purposes of this Agreement.  THIS AGREEMENT SHALL NOT BE INTERPRETED OR CONSTRUED TO CREATE AN ASSOCIATION, TRUST, PRINCIPAL AGENT RELATIONSHIP OR PARTNERSHIP BETWEEN THE PARTIES OR TO IMPOSE ANY PARTNERSHIP, AGENCY OR FIDUCIARY OBLIGATION OR LIABILITY UPON EITHER PARTY.  Neither Party shall have any right, power or authority to enter into any agreement or undertaking for, or act on behalf of, or to act as or be an agent or representative of, or to otherwise bind the other Party, except as may be expressly provided herein to perform a duty or obligation specifically set forth herein, and then only to the extent reasonably necessary to perform such duty or obligation.  Upon the request of a party, the parties will file an election under Section 761 of the Internal Revenue Code of 1986, as amended (the "Code"), to exclude the transactions contemplated by this Agreement from the application of all of the provisions of Subchapter K of Chapter 1 of the Code.
      19.6 Parties in Interest.  This Agreement shall inure only to the benefit of Cogen and Linden VFT and their successors and assigns expressly permitted hereby.  Nothing contained in this Agreement, whether express or implied, is intended to confer upon any Third Party any benefits, rights or remedies.
      19.7 Non-Dedication of Facilities.  Cogen and Linden VFT agree that, with the sole exception of Excess Transmission Capacity and then only to the extent required by law or regulation arising out of the transactions contemplated by this Agreement, no part of the Existing Plant shall be dedicated for the sale of electrical energy to the public generally and indiscriminately, for the exercise of a public franchise, or in the exercise of a public utility function.
      19.8 Modification.  The provisions of this Agreement, including any exhibits, may be modified only by written agreement duly executed by each Party.
      19.9 Entire Agreement.  This Agreement shall constitute the entire agreement between the Parties and cancels and supersedes all previous agreements and understandings between the Parties with respect to the subject matter hereof other than any protocols, dispatch arrangements and instructions previously agreed by the Parties and any other Parties.
      19.10 Counterparts.  This Agreement may be executed in one or more counterparts, each of which shall constitute an original but all of which, when taken together, shall constitute only one legal instrument.
      19.11 Survival of Obligations.  Except as may be expressly provided in this Agreement, termination of this Agreement for any reason shall not relieve either Party of any obligation accruing or arising prior to such termination.
      

      IN WITNESS WHEREOF, the Parties have executed this Agreement on the dates shown beneath their respective signatures, intending the rights and obligations of the Parties to become effective on the Effective Date.
COGEN TECHNOLOGIES LINDEN VENTURE, L.P.
By:	Cogen Technologies Linden, Ltd., its general partner
By:	East Coast Power Linden GP, L.L.C.,
its general partner
By:	
Name:  
Title:
LINDEN VFT, LLC
By:	Linden VFT Holding, LLC, its Managing Member
By:	Aircraft Services Corporation,
its Managing Member 
By:	
Name:  
Title:






iii











19</record_plain_text>
      <record_change_type>NEW</record_change_type>
      <filing_id>4</filing_id>
      <filing_title>Amended Shared Facilities Agreement</filing_title>
      <filing_type>30</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2014-02-04</current_effective_date>
      <ferc_order_date>2014-02-04</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
    <record_data>
      <record_id>1</record_id>
      <option_code>A</option_code>
      <record_title>CTLV Market Based Tariff</record_title>
      <record_content_desc>Market Based Rate</record_content_desc>
      <record_version_num>2.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>1000000</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2017-12-05</proposed_effective_date>
      <priority_order>500</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>COGEN TECHNOLOGIES LINDEN VENTURE, L.P.
FERC ELECTRIC TARIFF

1.	Availability:  Cogen Technologies Linden Venture, L.P. ("Seller") makes electric energy, capacity and ancillary services available under this Tariff for wholesale sales to any purchaser for resale, except as prohibited below.
2.	Ancillary Services:  
PJM: Seller offers regulation and frequency response service, energy imbalance service, and operating reserve service (which includes spinning, 10-minute, and 30-minute reserves) for sale into the market administered by PJM Interconnection, L.L.C. ("PJM") and, where the PJM Open Access Transmission Tariff permits, the self-supply of these services to purchasers for a bilateral sale that is used to satisfy the ancillary services requirements of the PJM Office of Interconnection.
	New York:  Seller offers regulation and frequency response service, and operating reserve service (which include 10-minute non-synchronous, 30-minute operating reserves, 10-minute spinning reserves, and 10-minute non-spinning reserves) for sale to purchasers in the market administered by the New York Independent System Operator, Inc.
New England: Seller offers regulation and frequency response service (automatic generator control), operating reserve service (which includes 10-minute spinning reserve, 10-minute non-spinning reserve, and 30-minute operating reserve service) to purchasers within the markets administered by ISO New England Inc.
California: Seller offers regulation service, spinning reserve service, and non-spinning reserve service to the California Independent System Operator Corporation ("CAISO") and to others that are self-supplying ancillary services to the CAISO. 

MISO: Seller offers regulation service and operating reserve service (which include 10-minute spinning reserve and 10-minute supplemental reserve) for sale to the Midcontinent Independent System Operator, Inc. ("MISO") and to others that are self-supplying ancillary services to MISO.
Southwest Power Pool:  Seller offers regulation service and operating reserve service (which include 10-minute spinning reserve and 10-minute supplemental reserve) for sale to the Southwest Power Pool, Inc. (SPP) and to others that are self-supplying ancillary services to SPP.
Third-Party Ancillary Services: Seller offers Regulation Service, Reactive Supply and Voltage Control Service, Energy and Generator Imbalance Service, Operating Reserve-Spinning, Operating Reserve-Supplemental, and Primary Frequency Response Service. Sales will not include the following: (1) sales to an RTO or an ISO, i.e., where that entity has no ability to self-supply ancillary services but instead depends on third parties; and (2) sales to a traditional, franchised public utility affiliated with the third-party supplier, or sales where the underlying transmission service is on the system of the public utility affiliated with the third-party supplier. Sales of Operating Reserve-Spinning and Operating Reserve-Supplemental will not include sales to a public utility that is purchasing ancillary services to satisfy its own open access transmission tariff requirements to offer ancillary services to its own customers, except where the Commission has granted authorization. Sales of Regulation Service and Reactive Supply and Voltage Control Service will not include sales to a public utility that is purchasing ancillary services to satisfy its own open access transmission tariff requirements to offer ancillary services to its own customers, except at rates not to exceed the buying public utility transmission provider's OATT rate for the same service or where the Commission has granted authorization.
3.	Applicability:  This Tariff is applicable to all wholesale sales of electric energy,  capacity and/or ancillary services by Seller that are not otherwise subject to a particular rate schedule or contract of Seller. 
4.	Rates, Terms and Conditions:  All sales shall be made at rates, terms and conditions established by agreement between the purchaser and Seller. 
6.	Compliance with Commission Regulations:  Seller shall comply with the provisions of 18 C.F.R. Part 35, Subpart H, as applicable, and with any conditions the Commission imposes in its orders concerning Seller's market-based rate authority, including orders in which the Commission authorizes Seller to engage in affiliate sales under this Tariff or otherwise restricts or limits the Seller's market-based rate authority.  Failure to comply with the applicable provisions of 18 C.F.R. Part 35, Subpart H, and with any orders of the Commission concerning Seller's market-based rate authority, will constitute a violation of this Tariff.
7.	Limitations and Exemptions Regarding Market-Based Rate Authority: Seller received (i) waiver of the accounting and reporting requirements contained in 18 C.F.R. Parts 41, 101, with the exception that waiver of the provisions of Part 101 that apply to hydropower licensees is not granted with respect to licensed hydropower projects, and 141, except sections 141.14 and 141.15; and (ii) waiver of 18 C.F.R. Part 35, Subparts B and C, except for sections 35.12(a), 35.13(b), 35.15, and 35.16; and received blanket approval under 18 C.F.R. Part 34. (Cogen Technologies Linden Venture, L.P., Docket No. ER06-739-000 (June 21, 2006) (unpublished letter order)). 
8.	Seller Category:  Seller is a Category 2 seller in the Northeast region, as defined in 18 C.F.R.  35.36(a), and a Category 1 seller, as defined in 18 C.F.R.  35.36(a), in all other regions.
9.	Effective Date:  This Tariff shall be effective upon the date specified by the Commission.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>983</filing_id>
      <filing_title>Updates to MBR Tariff</filing_title>
      <filing_type>70</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2017-12-05</current_effective_date>
      <ferc_order_date>2018-02-08</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
  </ferc_filing_data>
</Document>