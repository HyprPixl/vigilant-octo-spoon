<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Document xmlns="http://ferc.gov/etariffExport.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ferc_filing_data>
    <schema_version>2</schema_version>
    <company_id>C002466</company_id>
    <lead_applicant_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
    <tariff_id>720</tariff_id>
    <tariff_title>Post Rock Wind Power Project, LLC</tariff_title>
    <tariff_export_date>2025-09-16T19:42Z</tariff_export_date>
    <export_schema_version>2</export_schema_version>
    <record_data>
      <record_id>2</record_id>
      <option_code>B</option_code>
      <record_title>No. 1</record_title>
      <record_content_desc>FERC Electric Tariff</record_content_desc>
      <record_version_num>1.1.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>5000000</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2011-08-29</proposed_effective_date>
      <priority_order>200</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>Post Rock Wind Power Project, LLC
FERC Electric Tariff No. 1

Availability.  Post Rock Wind Power Project, LLC (“Seller”) makes electric energy and capacity available under this Tariff to any purchaser, except as prohibited below. Seller also makes available, to any purchaser, ancillary services except as prohibited below:

a.	New England.  Seller offers regulation and frequency response service (automatic generator control), operating reserve service (which includes 10-minute spinning reserve, 10-minute non-spinning reserve, and 30-minute operating reserve service) to purchasers within the markets administered by the ISO New England, Inc.
b.	PJM.  Seller offers regulation and frequency response service, energy imbalance service, and operating reserve service (which includes spinning, 10-minute, and 30-minute reserves) for sale into the market administered by PJM Interconnection, L.L.C. (“PJM”) and, where the PJM Open Access Transmission Tariff permits, the self-supply of these services to purchasers for a bilateral sale that is used to satisfy the ancillary services requirements of the PJM Office of Interconnection.  
c.	New York.  Seller offers regulation and frequency response service, and operating reserve service (which include 10-minute non-synchronous, 30-minute operating reserves, 10-minute spinning reserves, and 10-minute non-spinning reserves) for sale to purchasers in the market administered by the New York Independent System Operator, Inc.
d.	California.  Seller offers regulation service, spinning reserve service, and non-spinning reserve service to the California Independent System Operator Corporation (“CAISO”) and to others that are self-supplying ancillary services to the CAISO.
e.	Midwest ISO.  Seller offers regulation service and operating reserve service (which include 10-minute spinning reserve and 10-minute supplemental reserve) for sale to the Midwest Independent Transmission System Operator, Inc. (“Midwest ISO”) and to others that are self-supplying ancillary services to Midwest ISO.
f.	Third-Party Ancillary Services.  Seller offers Regulation Service, Energy Imbalance Service, Spinning Reserves, and Supplemental Reserves.  Sales will not include the following:  (1) sales to an RTO or an ISO, i.e., where that entity has no ability to self-supply ancillary services but instead depends on third parties; (2) sales to a traditional, franchised public utility affiliated with the third-party supplier, or sales where the underlying transmission service is on the system of a public utility affiliated with the third-party supplier; and (3) sales to a public utility that is purchasing ancillary services to satisfy its own open access transmission tariff requirements to offer ancillary services to its own customers.

Applicability.  This Tariff is applicable to all FERC-jurisdictional sales of electric energy, capacity and ancillary services by Seller at market-based rates.

Rates.  All sales shall be made at rates established by agreement between the purchaser and Seller.

Other Terms and Conditions.  All other terms and conditions shall be established by agreement between the purchaser and Seller.

Compliance with Commission Regulations.  Seller shall comply with the provisions of 18 C.F.R. Part 35, Subpart H, as applicable, and with any conditions the Commission imposes in its orders concerning Seller’s market-based rate authority, including orders in which the Commission authorizes Seller to engage in affiliate sales under this Tariff or otherwise restricts or limits the Seller’s market-based rate authority.  Failure to comply with the applicable provisions of 18 C.F.R. Part 35, Subpart H, and with any orders of the Commission concerning Seller’s market-based rate authority, will constitute a violation of this Tariff.

Limitations and Exemptions Regarding Market-Based Rate Authority.  Seller does not have limitations on its market-based rate authority, except as otherwise provided in this Tariff.  The Commission granted Seller the following waivers and exemptions in connection with Seller’s market-based rate authority:  (a) waiver of Subparts B and C of Part 35 of the Commission’s regulations requiring the filing of rate schedules, except for Sections 35.12(a), 35.13(b), 35.15 and 35.16; and (b) waiver of the accounting and related reporting requirements under Parts 41, 101, and 141 of the Commission’s regulations, except for Sections 141.14 and 141.15; and (c) blanket authorization under Section 204 of the Federal Power Act, 16 U.S.C. § 824c, and Part 34 of the Commission’s regulations to issue securities and assume obligations and liabilities.  See Post Rock Wind Power Project, LLC, Letter Order Granting Market-Based Rate Authorization, Docket No. ER11-3959-000 (2011).

Duration.  This Tariff shall continue in effect until terminated or changed, and such termination or change becomes effective in accordance with any applicable regulatory requirements.

Modifications.  Seller may unilaterally apply, under Section 205 of the Federal Power Act, to the Commission or other jurisdictional regulatory agency for a modification of this rate schedule.

Seller Category.  Seller is a Category 1 Seller, as defined in 18 C.F.R. 35.36(a), in the Southwest, Southeast, Northwest, Northeast, Central, and Southwest Power Pool regions.

Effective Date.  This Tariff is effective upon the date specified by the Commission.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>294</filing_id>
      <filing_title>Amendment to Market-Based Rate Application</filing_title>
      <filing_type>120</filing_type>
      <associated_filing_id>260</associated_filing_id>
      <associated_record_id>2</associated_record_id>
      <associated_option_code>B</associated_option_code>
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2011-08-29</current_effective_date>
      <ferc_order_date>2011-08-30</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
  </ferc_filing_data>
</Document>