<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Document xmlns="http://ferc.gov/etariffExport.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ferc_filing_data>
    <schema_version>2</schema_version>
    <company_id>C001700</company_id>
    <lead_applicant_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
    <tariff_id>302</tariff_id>
    <tariff_title>Trans-Union Interstate Pipeline, L.P. 10142010</tariff_title>
    <tariff_export_date>2025-09-16T19:26Z</tariff_export_date>
    <export_schema_version>2</export_schema_version>
    <record_data>
      <record_id>16</record_id>
      <option_code>A</option_code>
      <record_title>GTC - 8.  Allocation of Daily Quantities</record_title>
      <record_content_desc>Baseline Tariff Refile</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>283735840</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>8.	ALLOCATION OF DAILY QUANTITIES

Receipts and deliveries of Gas under more than one contract and/or Rate Schedule shall be allocated in accordance with any agreement as may exist between Transporter and upstream operator(s). Absent such agreement, Shipper(s) shall be deemed to have taken receipt or delivery of Shipper’s scheduled quantities sequentially and in the same priority order as Transportation is scheduled under Section 7 of the General Terms and Conditions. Any difference between the allocated and scheduled Gas quantities at a location will result in the allocation of an imbalance equal to that difference to the Shipper. Such imbalances will be the basis on which any imbalance charges will be calculated.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>17</record_id>
      <option_code>A</option_code>
      <record_title>GTC - 9.  Overrun Quantities and Imbalances</record_title>
      <record_content_desc>Baseline Tariff Refile</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>302584896</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>9.	OVERRUN QUANTITIES AND IMBALANCES

9.1	Imbalances

(a)	Monthly Imbalances. Where Shipper has created a monthly imbalance on Transporter’s pipeline that has not been eliminated through netting and trading, Shipper shall pay Transporter a Monthly Imbalance Charge in the following amounts:

(1)	Normal Operating Conditions. For monthly imbalances accumulated during normal operating conditions, Shipper’s Monthly Imbalance Charge shall equal zero for monthly imbalances between zero and five percent (5%), and $0.10 per MMBtu for imbalances in excess of five percent (5%). For purposes of this Section, Shipper’s monthly imbalance shall equal the difference between Shipper’s actual cumulative receipts during normal operating conditions and Shipper’s actual cumulative deliveries during normal operating conditions stated as a percent of actual cumulative deliveries during normal operating conditions during the Billing Month.

(2)	OFO Operating Conditions. For monthly imbalances accumulated during periods when an Operational Flow Order pursuant to Section 14 of the General Terms and Conditions is in effect, Shipper’s Monthly Imbalance Charge on monthly imbalances shall be as set forth in the applicable bracket:

Monthly Imbalance	Imbalance Charge per MMBtu

&gt;3%-7%	$25 plus the Daily Index Price
&gt;7%-15%	$50 plus the Daily Index Price
&gt;15%	$100 plus the Daily Index Price

For purposes of this Section, Shipper’s monthly imbalance shall equal the difference between Shipper’s actual cumulative receipts during OFO operating conditions and Shipper’s actual cumulative deliveries during OFO operating conditions stated as a percent of Shipper’s actual cumulative deliveries during OFO operating condition during the Billing Month.

For purposes of this Section, the Daily Index Price shall equal the high in the range of prices reported each day for “Texas Gas (entireZ 1)” as published by Gas Daily. If Gas Daily is no longer published, an equivalent index or indicator shall be published on Transporter’s Web Site and this definition will be revised.

1.	
(a)	
(b)	Operational Gas Purchases. If Transporter purchases gas to maintain line pack and ensure operational reliability, Transporter will assess Shipper a charge equal to (i) Shipper’s Net Imbalance (ii) divided by Total System Imbalance (iii) multiplied by the total actual cost of gas purchased by Transporter. If Transporter assesses Shipper a charge pursuant to this Section, Transporter shall reduce Shipper’s Net Imbalance by a quantity equal to (i) Shipper’s Net Imbalance (ii) divided by Total System Imbalance (iii) multiplied by the total quantity of gas purchased by Transporter. Notwithstanding the above, Transporter shall not be obligated to deliver to Shipper on any day a greater quantity of gas than Transporter has received from Shipper on any such day.


(1)	For purposes of this Section, Shipper’s Net Imbalance shall equal the net sum of Shipper’s monthly imbalances.

(2)	For purposes of this Section, Total System Imbalance shall equal the net sum of all monthly imbalances for all shippers purchasing transportation service on Transporter’s system.

(c)	Contract Termination. Shipper shall coordinate with Transporter to  reduce to zero, within sixty (60) days of contract termination, Shipper’s Net Imbalance.

(1)  For purposes of this Section, Shipper’s Net Imbalance shall equal   the net sum of Shipper’s monthly imbalances remaining at contract termination.

Imbalance Netting and Trading. Transporter will net Shipper’s imbalances on a monthly basis across all of Shipper’s Transportation Service Agreements. Shipper may trade any imbalances incurred under this Section 9 with other shippers on Transporter’s system, provided the imbalances to be traded are off-setting. Whenever requested and whenever possible, Transporter will post requests to trade imbalances on Transporter’s web site. Trades may be completed by notifying Transporter between 9:00 am and 5:00 pm Central Clock Time on any business day. Trades will be deemed completed upon notification to Transporter.9.2	Overrun Charge
		(a)	Authorized Overrun Charge
		If Shipper requests Transporter to deliver quantities of Gas in excess of
		Shipper’s applicable Contracted Capacity, and Transporter agrees, Shipper
		shall be subject to an Overrun Charge in addition to the applicable
		reservation and usage charges and any balancing charges pursuant to this
		Section, equal to the 100% load factor maximum rate applicable to the
		service	Shipper	receives as	specified in Shipper’s Transportation
		Agreement per each MMBtu of Gas taken in excess of Shipper’s
		Contracted Capacity.
		(b)	Unauthorized Overrun Charge
		If Shipper exceeds its Contracted Capacity without the approval of the
		Transporter, Shipper shall be subject to an Overrun Charge in addition to
		the applicable reservation and commodity charges and any balancing
		charges pursuant to this Section, equal to $10 per MMBtu for each
		MMBtu of Gas taken in excess of Shipper’s Contracted Capacity.


9.3	Waiver

	Transporter may waive its right to collect all or any portion of the charges
	assessed Shipper under this Section 9, provided that such waiver is granted in a
	nondiscriminatory manner.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>18</record_id>
      <option_code>A</option_code>
      <record_title>GTC - 10.  Operational Balancing Agreements</record_title>
      <record_content_desc>Baseline Tariff Refile</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>321433952</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>10.	OPERATIONAL BALANCING AGREEMENTS

For the purposes of minimizing operational conflicts between various Gas facilities with respect to the delivery of Gas to and from Transporter’s facilities, Transporter shall negotiate and execute OBAs with appropriate parties that operate Gas facilities interconnecting with Transporter’s system (any such party will be referred to herein as the “OBA Party”). Such OBAs shall specify the Gas custody transfer procedures to be followed by Transporter and the OBA Party for the confirmation of scheduled quantities to be received by Transporter at Receipt Point and delivered by Transporter at Delivery Point.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>13</record_id>
      <option_code>A</option_code>
      <record_title>GTC - 5.  Nominations</record_title>
      <record_content_desc>FERC Gas Tariff</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>227188672</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>5.	NOMINATIONS

5.1	For service required on any day under each of Shipper's Transportation Service Agreements, Shipper shall provide Transporter with a nomination(s) providing the Shipper’s Receipt Point, contract numbers, the applicable service, the quantity of Gas to be delivered, the Delivery Point, and such additional information as Transporter determines to be necessary.

5.2	General Rules and Timeline. Pursuant to NAESB Standards 1.3.2, 1.3.3, 1.3.5, 1.3.6, 1.3.20, 1.3.21: The standard nominations timeline shall be as follows:

(a)	The Timely Nomination Cycle. On the day prior to gas flow:
1:00 p.m. Nominations leave control of the Service Requester (SR);
1:15 p.m. Nominations are received by Transporter (including from Title Transfer Tracking Service Providers (TTTSPs));
1:30 p.m.	Transporter sends Quick Response to the SR;
4:30 p.m.	Transporter receives completed confirmations from confirming parties;
5:00 p.m.	SR and point operator receive scheduled quantities from Transporter
(Central Clock Time).
Scheduled quantities resulting from timely nominations should be effective at the start of the next gas Day.

(b)	The Evening Nomination Cycle. On the day prior to gas flow:
6:00 p.m.	Nominations leave control of the SR;
6:15 p.m.	Nominations are received by Transporter (including from TTTSPs);
6:30 p.m. Transportersends Quick Response to the SR;
8:30 p.m. Transporter receives completed confirmations from confirming parties;
9:00 p.m. Transporter provides scheduled quantities to affected SR and point operator, including bumped parties (notice to bumped parties),
(Central Clock Time).

Scheduled quantities resulting from an Evening Nominations should be effective at the start of the next gas Day.
1.	
(a)	
(b)	
(c)	The Intraday 1 Nomination Cycle. On the current gas Day:
10:00 a.m. Nominations leave control of the SR;
10:15 a.m. Nominations are received by Transporter (including from TTTSPs);
10:30 a.m. Transporter sends Quick Response to the SR;
12:30 p.m. Transporter receives completed confirmations from confirming parties;
1:00 p.m. Transporter provides scheduled quantities to affected SR and point operator, including bumped parties (notice to bumped parties),
(Central Clock Time).
Scheduled quantities resulting from Intraday 1 Nominations should be effective at 2:00 p.m. on the current gas Day.

(d)	The Intraday 2 Nomination Cycle. On the current gas Day:
2:30 p.m.	Nominations leave control of the SR;
2:45 p.m.	Nominations are received by Transporter (including from TTTSPs);
3:00 p.m. Transporter sends Quick Response to the SR;
5:00 p.m. Transporter receives completed confirmations from confirming parties;
5:30 p.m. Transporter provides scheduled quantities to affected SR and point operator, including bumped parties (notice to bumped parties).
(Central Clock Time).
Scheduled quantities resulting from Intraday 2 Nominations should be effective at 6:00 p.m. on the current gas Day.

(e)	The Intraday 3 Nomination Cycle. On the current gas Day:
7:00 p.m.	Nominations leave control of SR;
7:15 p.m.	Nominations	are	received	by	the	Transporter (including from TTTSPs);
7:30 p.m.	Transporter sends Quick Response to the SR;
9:30 p.m.	Transporter receives completed confirmations from confirming parties;
10:00 p.m. Transporter	provides	scheduled	quantities	to	the affected SR and point operator.
(Central Clock Time)
Scheduled quantities resulting from Intraday 3 Nominations should be effective at 10:00 p.m. on the current gas Day. Bumping is not allowed during the Intraday 3 Nomination Cycle.(f)	For purposes of Sections 5.2(b) through (e), "provides" shall mean, for transmittals pursuant to standards 1.4.x, receipt at the designated site, and for purposes of other forms of transmittal, it shall mean send or post.

In addition to making scheduled quantities information available by 4:30 pm, at the end of each day Transporter shall make available to Shippers information containing scheduled quantities, including scheduled intra-day nominations and any other scheduling changes. All nominations shall include Shipper defined begin dates and end dates. All nominations excluding Intraday Nominations shall have rollover options. Specifically, Shippers shall have the ability to nominate for several days, months, or years, provided the nomination begin and end dates are within the term of Shipper’s contract. Nominations received after the nomination deadline shall be scheduled after nominations received before the nomination deadline. Receiver of nomination  initiates  the  confirmation  process. The party that would receive a request for confirmation or an unsolicited confirmation response may waive the obligation of sender to send. The sending party shall adhere to nomination, confirmation, and scheduling deadlines. The party receiving the request has the right to waive the deadline.

2.	
3.	
4.	
5.	
5.1	
5.2	
5.3	Any change in a daily scheduled quantity implemented during the Day shall only be recognized pro rata to the fraction of the Day remaining at the time the change is implemented. Changed daily scheduled quantity shall not exceed an amount equal to Shipper’s Contracted Capacity multiplied by the fraction of the Day remaining at the time the changes are implemented, nor less than zero at any point in time. Transporter shall be under no obligation to accept such revisions for Shipper nominations made under Transporter’s Interruptible Transportation Service.

5.4	Pursuant to NAESB Standards 1.3.9, 1.3.11, 1.3.13, all nominations, including Intraday Nominations, shall be based on a daily quantity; thus, an intraday nominator need not submit an hourly nomination. Intraday Nominations shall include an effective date and time. The interconnected parties shall agree on the hourly flows of the Intraday Nomination, if not otherwise addressed in the Transportation Agreement or Tariff. Intraday Nominations can be used to request increases or decreases in total flow, changes to receipt points, or changes to delivery points of scheduled gas. Intraday Nominations do not rollover (i.e., Intraday Nominations span one gas day only). Intraday Nominations do not replace the remainder of a standing nomination. There is no need to re-nominate if an Intraday Nomination modifies an existing nomination.

Shipper Prioritization of Nominated Quantities. If Shipper elects to nominate quantities of Gas to be received by Transporter from one or more upstream parties at the Receipt Point for delivery by Transporter to one or more downstream parties at the Delivery Point for the account of Shipper, Shipper shall provide thepriority, method, and extent to which each nominated receipt quantity from a particular upstream party should be reduced in the event that any downstream Operator verifies and confirms deliveries that are less than the Shipper’s nominated deliveries, or in the event that, due to Transporter’s allocation of Available Capacity for Transportation services, all nominated receipts cannot be scheduled. Likewise, if Shipper elects to nominate quantities of Gas to be delivered by Transporter to one or more parties at the Delivery Point for the account of Shipper, Shipper shall provide the priority, method, and extent to which each nominated delivery quantity to a particular downstream party at the Delivery Point should be reduced in the event that any upstream Operator verifies and confirms receipts that are less than the Shipper’s nominated receipts, or in the event that, due to Transporter’s allocation of Available Capacity for Transportation services, all nominated deliveries cannot be scheduled.

Shipper prioritization of nominated quantities must be consistent with the terms of this FERC Gas Tariff and such prioritization will be honored to the extent that Transporter reasonably determines such prioritization is operationally feasible.

5.5	Delegation of Nomination Authority to Agent. A Shipper may delegate to any third party the responsibility for submitting nominations and receiving confirmations or performing other administrative duties under any effective agreement, subject to the following conditions:

(a)	Any designation of a third party as agent, or any change in such designation, must be provided in writing to Transporter at least two (2) Business Days prior to the requested effective date of the designation.

(b)	The written designation must specify any limits on the authority of the agent, including any time limit for the designation.  Transporter may reject any Shipper’s request to delegate responsibilities if the limitations on the designation would impose undue administrative burdens on Transporter.

(c)	Transporter will rely on communications from a Shipper’s agent for all nomination purposes, except to the extent the designation is expressly limited. Communications by Transporter to such agent will be deemed notice to Shipper.

(d)	Any third party may administer multiple Transportation Agreements as the agent for one or more Shippers, but the agent must make nominations and otherwise administer and account separately for each Transportation Agreement.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>14</record_id>
      <option_code>A</option_code>
      <record_title>GTC - 6.  Priority of Service and Curtailment</record_title>
      <record_content_desc>Baseline Tariff Refile</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>246037728</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>6.	PRIORITY OF SERVICE AND CURTAILMENT

6.1	Transporter shall have the right to curtail or discontinue services, in whole or in part, on all or a portion of its system at any time for reasons of Force Majeure or when, in Transporter’s sole discretion, capacity or operating conditions so require. Transporter shall provide Shipper such notice of such curtailment as is reasonable under the circumstances. Routine repair and maintenance is not deemed an emergency situation or an unexpected loss of capacity and will be scheduled by Transporter in a manner to avoid, wherever possible, the disruption of confirmed service.

6.2	If due to any cause whatsoever Transporter is unable on any day to deliver the quantities of Gas Shippers would have received if such disability did not exist, then Transporter shall order curtailment by all Shippers affected in the following manner to the extent necessary to remove the effect of the disability. In effecting a curtailment, Transporter may, at its discretion, allow lower priority Gas to remain flowing in any instance where that would result in a lesser impact on the curtailment of higher priority Gas than would otherwise occur. In all other instances, curtailment shall be:

(a)	first, Interruptible Service under the IT Rate Schedule, curtailed by price from lowest to highest, except curtailment will be pro rata on nominated quantities among Shippers paying the same rate, and recognizing that Shippers paying the maximum rate will be curtailed last;

(b)	second, firm service provided pursuant to the FT Rate Schedule. Transporter shall curtail on a pro rata basis on nominated quantities among all Shippers receiving this service.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>15</record_id>
      <option_code>A</option_code>
      <record_title>GTC - 7.  Scheduling</record_title>
      <record_content_desc>FERC Gas Tariff</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>264886784</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>7.	SCHEDULING

7.1	Transporter shall schedule all transportation quantities in accordance with the following priorities.

(a)	Firm Transportation quantities within Shipper’s Contracted Capacity under Rate Schedule FT, pro rata based on each Shipper’s Contracted Capacity; provided a Shipper’s scheduled quantity shall not exceed such Shipper’s nomination;

(b)	Interruptible service provided pursuant to the IT Schedule, by price from highest to lowest, except scheduling will be pro rata based on nominated quantities among Shippers paying the same rate.

7.2	Transporter shall use service requester provided rankings when making reductions during the scheduling and curtailment process when this does not conflict with tariff-based rules. Pursuant to NAESB Standard 2.3.26, the time limitation for disputes of allocations shall be six (6) months from the date of the initial month-end allocation with a three (3)-month rebuttal period. This standard shall not apply in the case of deliberate omission or misrepresentation or mutual mistake of fact. Parties’ other statutory or contractual rights shall not otherwise be diminished by this standard. Mutual agreement between the parties, legal decisions, and regulatory guidance may be necessary to determine if the event qualifies for an extension of the above time periods.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>19</record_id>
      <option_code>A</option_code>
      <record_title>GTC - 11.  Billing and Payment</record_title>
      <record_content_desc>Baseline Tariff Refile</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>340283008</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>11.	BILLING AND PAYMENT

11.1	Transporter shall render an invoice to Shipper for each Month for (i) all transportation services provided pursuant to the Tariff during the preceding Month; and (ii) any other charges for which Shipper is liable under the Tariff or Shipper’s other obligations. Invoices shall be rendered on or before the 9th Business Day of each Month following the Month of delivery. The term "rendered" shall mean postmarked, time-stamped, or delivered to the designated site or email address.

11.2	If the invoice is in dispute, Shipper shall pay the portion not in dispute and provide documentation identifying the basis for the dispute. Both Transporter and Shipper shall have the right to examine at any reasonable time the applicable books and records (or portions thereof) and charts of the other to the extent necessary to verify the accuracy of any statement made under or pursuant to the provisions of the Transportation Agreement. Upon receipt of a request, the party will either send the information relevant to the request to the other party or will provide the requestor the right to review such information in the requestor’s offices.

11.3	Shipper (or other payor) shall pay Transporter, via electronic means as designated on each monthly bill, so that payment is received and Transporter has available funds within ten (10) calendar days from the date of the invoice, for the gas service purchased by Shipper during the preceding month and invoiced by Transporter pursuant to this Tariff or the Transportation Agreement. Shipper (or other payor) shall provide Transporter with supporting documentation with any payment as well as the appropriate invoice number on the payment(s). Transporter shall apply the payment pursuant to the supporting documentation provided. When payment is made by electronic funds transfer, the remittance detail is due within two (2) Business Days of the payment due date.

Should Shipper fail to pay all of the amount of any invoice as herein provided when such amount is due, Shipper shall pay a Charge for Late Payment. Such Charge for Late Payment shall be determined by multiplying (a) the unpaid portion of the invoice, by (b) the ratio of the number of days from the due date to the date of actual payment to 365, and by (c) the interest rate determined in accordance with Section 154.501(d) of the Commission’s regulations. If such failure to pay continues for thirty (30) days after payment is due, Transporter may suspend service; and, if Transporter has provided Shipper and the FERC with at least thirty (30)-days notice that service will terminate due to the non-payment, Transporter, in addition to any other remedy it may have under the service contract, may after application to and authorization by the FERC, if thatauthorization is necessary, terminate the service contract; provided, however, that if Shipper in good faith shall dispute the amount of any such invoice or part thereof and shall pay to Transporter such amounts as it concedes to be correct in addition to providing such remittance detail and documentation identifying the basis for the dispute, and at any time within thirty (30) days after a demand is made by Transporter shall furnish good and sufficient surety bond, guaranteeing payment to Transporter of the amount ultimately found due upon such invoices after a final determination, which may be reached either by agreement or judgment of the courts, as may be the case, then Transporter shall not be entitled to terminate the Transportation Agreement until default be made in the conditions of such bond.

1.	
2.	
3.	
4.	
5.	
6.	
7.	
8.	
9.	
10.	
11.	
11.1	
11.2	
11.3	
11.4	
11.5	If it shall be found within six (6) months of the date which the invoice was rendered that a Shipper has been overcharged or undercharged in any form whatsoever under the provisions of this Tariff or the Transportation Agreement and Shipper shall have actually paid the invoices containing such overcharge or undercharge, then within thirty (30) days after the final determination thereof, which shall be no later than ninety (90) days from the date which the claim for adjustment was made, Transporter shall refund the amount of such overcharge and Shipper shall pay the amount of any such undercharge; provided, however, if the overcharge or undercharge is the result of a deliberate omission or misrepresentation by either party or a mutual mistake of fact, then the period for resolving adjustments is tolled until the claimed adjustment is settled. Interest calculated in accord with Section 11.4 above shall apply to any overcharge or undercharge not paid or refunded within thirty (30) days from the date of the determination of the amount of the undercharge or overcharge.

11.6	Prior period adjustment time limits will be six (6) Months from the date of the initial transportation invoice and seven (7) Months from the date of initial sales invoice with a three (3)-Month rebuttal period, excluding government required rate changes. This standard shall not apply in the case of a deliberate omission or misrepresentation or mutual mistake of fact. Parties’ other statutory or contractual rights shall not otherwise be diminished by this standard. Mutual agreement between the parties, legal decisions, and regulatory guidance may be necessary to determine if the event qualifies for an extension of the above time periods.

11.7	Nothing in this Section 11 or in any of Transporter’s Rate Schedules or Transportation Agreements is intended to limit the rights of Transporter or Shipper with respect to invoicing and payment in a forum outside the FERC.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>23</record_id>
      <option_code>A</option_code>
      <record_title>GTC - 15.  Warranty of Title</record_title>
      <record_content_desc>Baseline Tariff Refile</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>415679232</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>15.	WARRANTY OF TITLE

15.1	This Section shall apply to all transportation service, unless otherwise provided in the applicable Rate Schedule or Transportation Agreement.

15.2	Shipper and Transporter each warrant for itself, its successors and assigns, that it will have, at the time of delivery of Gas hereunder, good title or the right to acquire title to the Gas it delivers, that the Gas it delivers hereunder shall be free and clear of all liens, encumbrances and claims whatsoever, that each will indemnify the other and save it harmless from all suits, actions, debts, accounts, damages, costs, losses, and expenses arising from or out of any adverse claims of any and all persons to said Gas and/or to royalties, taxes, license fees, or charges thereon which are applicable for such delivery of Gas and that each will indemnify the other and save it harmless from all taxes or assessments which may be levied and assessed upon such delivery and which are by law payable by and the obligation of the party making such delivery.

15.3	If Shipper’s title or right to deliver Gas to be transported is questioned or involved in any action, Shipper shall not qualify for or shall be ineligible to continue to receive service until such time as Shipper’s title or right to deliver is free from question; provided, however, Transporter shall allow Shipper to qualify for or continue receiving service under this Tariff if Shipper furnishes a bond satisfactory to Transporter.

15.4	Title to the Gas received by Transporter at the Receipt Point shall not pass to Transporter.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>24</record_id>
      <option_code>A</option_code>
      <record_title>GTC - 16.  Force Majeure</record_title>
      <record_content_desc>Baseline Tariff Refile</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>434528288</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>16.	FORCE MAJEURE

16.1	If either Transporter or Shipper fails to perform any obligations under the Tariff due to an event of Force Majeure as defined in Section 1.14, such failure shall be deemed not to be a breach of such obligations and neither party shall be liable in damages or otherwise as a result of an event of Farce Majeure. A party that fails to perform any obligations under the Tariff where such failure is caused by an event of Force Majeure shall promptly remedy the cause of the Force Majeure insofar as it is reasonably able to do so.

16.2	Notwithstanding the above provisions, no event of Force Majeure shall:

(a)	Relieve any party from any obligation or obligations pursuant to the Tariff unless such party gives notice with reasonable promptness of such event to the other party;

(b)	Relieve any party from any obligation or obligations pursuant to the Tariff after the expiration of a reasonable period of time within which, by the use of its due diligence, such party could have remedied or overcome the consequences of such event of Force Majeure; or

(c)	Relieve either party from its obligations to make payments of amounts as provided in the applicable Rate Schedule, subject to any credit provided for in the applicable Rate Schedule.

16.3	In the event of a Force Majeure, Transporter shall curtail delivery of Gas to Shipper in accordance with Section 6 hereof.

16.4	When the failure by either party to perform any obligation under the Tariff is, by virtue of the provision of Section 16.1, deemed not to be a breach of such obligation, then the time for the performance of such obligation shall be extended by a number of days equal to the number of days during which the relevant event of Force Majeure existed.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>25</record_id>
      <option_code>A</option_code>
      <record_title>GTC - 17.  Notices</record_title>
      <record_content_desc>Baseline Tariff Refile</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>453377344</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>17.	NOTICES

Unless otherwise provided in this Tariff, all communications and notices shall be via Transporter’s Web Site and/or through internet e-mail or to Shipper’s internet address. If notice or communication is made in writing, it shall be considered as duly presented, rendered, or delivered when received.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>20</record_id>
      <option_code>A</option_code>
      <record_title>GTC - 12.  Possession of Gas</record_title>
      <record_content_desc>Baseline Tariff Refile</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>359132064</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>12.	POSSESSION OF GAS

Unless otherwise provided in the Transportation Agreement or applicable Rate Schedule, as between Transporter and Shipper, Shipper shall be deemed to be in exclusive control and possession of the Gas to be transported (i) prior to receipt by Transporter at the Receipt Point(s), and (ii) after delivery by Transporter at the Delivery Point(s); otherwise, Transporter shall be in exclusive control and possession of the Gas. The party in exclusive control and possession of the Gas shall be responsible for all injury or damage caused thereby to any third party. In the absence of gross negligence or willful misconduct on the part of Transporter, Shipper waives any and all claims and demands against Transporter, its officers, employees or agents, arising out of or in any way connected with (i) the quality, use or condition of the Gas after delivery from Transporter for the account of such Shipper, (ii) any losses or shrinkage of gas during or resulting from transportation hereunder and (iii) all other claims and demands arising out of Transporter’s performance of its duties hereunder.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>21</record_id>
      <option_code>A</option_code>
      <record_title>GTC - 13.  Delivery Pressure</record_title>
      <record_content_desc>Baseline Tariff Refile</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>377981120</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>13.	DELIVERY PRESSURE

Unless otherwise agreed between Transporter and Shipper, Shipper shall deliver Gas to Transporter at the pressure required from time to time to enable the gas to enter Transporter’s facilities at the Receipt Point(s). Unless otherwise agreed between Transporter and Shipper, Transporter shall deliver Gas to Shipper at Transporter’s line pressure existing at the Delivery Point(s), subject to Transporter’s protecting its operational integrity and to minimum pressure requirements, if any, specified in the Transportation Agreement.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>22</record_id>
      <option_code>A</option_code>
      <record_title>GTC - 14.  Operational Flow Orders</record_title>
      <record_content_desc>Baseline Tariff Refile</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>396830176</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>14)	OPERATIONAL FLOW ORDERS

14.1	Circumstances Warranting Issuance. Transporter shall have the right to issue Operational Flow Orders (OFO) as specified in this Section that require actions by Shippers in order (1) to alleviate conditions that threaten or could threaten the safe operations or system integrity of Transporter’s system, (2) to maintain pipeline operations at the pressures required to provide efficient and reliable firm transportation services, (3) to have adequate gas supplies in the system to deliver on demand, (4) to maintain service to all firm shippers and for all firm services,
(5) to maintain the system in balance for the foregoing purposes [or for the purpose of preventing undue imbalances with the Delivering Pipeline], and (6) at any time Delivering Pipeline calls an OFO on its system. An OFO identical in terms to that of the Delivering Pipeline shall be deemed to be issued automatically by Transporter whenever the Delivering Pipeline issues an OFO affecting deliveries to Transporter.

14.2	Applicability of OFO. To the extent practicable, based on Transporter’s good faith judgment concerning the situations requiring remediation, an OFO will be directed (1) first to Shippers causing the problem necessitating the OFO or transporting gas in the area of the system in which there is an operational problem, and (2) second to those Shippers transporting gas in the area of the system where action is required to correct the problem necessitating the OFO. Transporter will notify affected Shippers of termination of an OFO promptly after concluding that the OFO can safely be removed.

14.3	Notice. All OFOs will be issued via telephone to be followed by a facsimile to the affected Shipper. The OFO will set forth (1) the time and date of issuance,
(2) the actions Shipper/operator is required to take, (3) the time by which Shipper must be in compliance with the OFO, (4) the anticipated duration of the OFO, and
(5) any other terms that Transporter may reasonably require to ensure the effectiveness of the OFO. Each Shipper must designate one or more persons, but not more than three persons, for Transporter to contact on operating matters at any time, on a 24-hour a day, 365-day a year basis. Such contact persons must have adequate authority and expertise to deal with such operating matters. If Transporter cannot contact any Shipper because that Shipper has failed to designate a contact person or Shipper’s contact person is unavailable, Transporter shall not be responsible for any consequences that could have been prevented by communication.  Transporter, however, will make reasonable continuing efforts to notify the affected Shipper. Notwithstanding the foregoing, notification by the Delivering Pipeline of an OFO affecting Shippers that use Transporter’s system shall not be responsible for any consequences that could have been prevented by communication.  Transporter, however, will make reasonable continuing efforts to  notify the  affected  Shipper.   Notwithstanding the foregoing, notifications bythe Delivering Pipeline of an OFO affecting Shippers that use Transporter’s system shall automatically be deemed to be an OFO on Transporter’s system without further notice by Transporter. To the extent practicable, Transporter shall provide an advance warning of a possible OFO.

14.4	Shipper Compliance. A Shipper must comply with an OFO within the time  period set forth therein unless the shipper is able to demonstrate that such compliance is prevented due to a force majeure event as defined in Section 16 of the General Terms and Conditions, provided however, that the Shipper shall make a good faith effort to comply with any such OFO, including seeking waivers of any contractual limits with third parties or modifications of operating conditions on third party systems. Shipper shall notify Transporter immediately if  it  believes that it is excused from compliance with the OFO for any of the above stated reasons, and shall provide Transporter with documentation sufficient to support its basis for non-compliance.

14.5	Penalties. If a Shipper fails to comply with an OFO, it shall be subject to (1) a penalty of $10.00 per Dth for any volume of gas by which it deviated from the requirements of the OFO and (2) an Unauthorized Overrun Charge of $25.00 per Dth for quantities taken by Shipper in excess of its MDQ. A Shipper shall not incur any charges or penalties if such charges or penalties would not have been incurred but for Shipper’s compliance with an OFO. A Shipper shall not incur any penalties if the OFO was necessitated exclusively by Transporter’s negligence or willful misconduct.

14.6	Liability of Transporter. Transporter shall not be liable for any costs incurred by any Shipper in complying with an OFO. Transporter shall not be responsible for any damages that result from any interruption in Shipper’s service that is a result of a Shipper’s failure to comply promptly and fully with an OFO, and the non-complying shipper shall indemnify Transporter against any claims of responsibility.

14.7	Unilateral Action. In the event that (1) Shipper(s) does not respond to an OFO, or (2) the actions taken thereunder are insufficient to correct the system problem for which the OFO was issued, or (3) there is insufficient time to carry out the procedures with respect to OFOs, Transporter may periodically take unilateral action, including the curtailment of firm service, to maintain the operational integrity of Transporter’s system (or any portion thereof). For purposes of this Section, the operational integrity of Transporter’s system shall encompass the integrity of the physical system and the preservation of physical assets and their performance, the overall operating performance of the entire physical system as an entity (or any portion thereof), and the maintenance (on a reliable and operationally sound basis) of total system deliverability and the quality of gas delivered.

14.8	Reporting. Within thirty (30) days after an OFO terminates, Transporter shall prepare a report concerning the factors causing the OFO to be imposed and,subsequently, terminated. The report will be supplied to affected shippers upon request.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>4</record_id>
      <option_code>A</option_code>
      <record_title>Part II.  System Map</record_title>
      <record_content_desc>Baseline Tariff Refile</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>57547168</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>PART II.


SYSTEM MAP
&lt;http://www.hienergyebb.com/TRANSUNION/Home&gt;</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>5</record_id>
      <option_code>A</option_code>
      <record_title>Part III.  Statement of Rates and Charges</record_title>
      <record_content_desc>Baseline Tariff Refile</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>76396224</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>PART III.
STATEMENT OF RATES AND CHARGES

All rates are stated in U.S. $


Rate Schedule FT1/

Recourse Rates:   Reservation Charge ($ per	  Maximum	  Minimum	
MMBtu per month)	$1.6455	0.00	
 Usage Charge ($ per MMBtu	  0.00	  0.00	


Negotiated Rates:

The effective maximum negotiated reservation charge for any negotiated rate transportation agreement is the charge agreed to by the parties, as set forth in the attached tariff sheets.

Rate Schedule IT1/		
	Maximum	Minimum	
Usage Charge ($ per MMBtu)	 $0.0541	 0.00	


1/ An Annual Charge Adjustment Unit Charge shall be added to all quantities of Gas scheduled for Transportation under Rate Schedule FT and IT pursuant to Section 154.402 of the FERC's regulations and in accordance with Section 23 of the General Terms and Conditions. The Annual Charge Adjustment Unit Charge authorized for each fiscal year (beginning October 1) by the FERC and posted on its Web Site (&lt;&lt;http://www.ferc.gov/&gt;) is incorporated herein by reference. In addition, Trans-Union reserves the right to amend this FERC Gas Tariff and Rate Schedule at any time to make any GRI adjustment and/or to recover any fuel or lost andunaccounted-for Gas.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>1</record_id>
      <option_code>A</option_code>
      <record_title>FERC Gas Tariff, Volume No. 1</record_title>
      <record_content_desc>Baseline Tariff Refile</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name>At the informal request of Staff, Trans-Union is resubmitting its baseline tariff.</record_narrative_name>
      <collation_value>1000000</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>FERC GAS TARIFF VOLUME NO. 1
OF

BBT TRANS-UNION INTERSTATE PIPELINE, L.P. FILED WITH THE
FEDERAL ENERGY REGULATORY COMMISSION





Communication concerning this tariff 
should be addressed to:


Scott Langston Senior 
Vice President &amp; 
Chief Commercial Officer

BBT Trans-Union Interstate Pipeline, 
L.P. 1501 McKinney Street, Suite 800 
Houston, TX 77010

Telephone: (346) 241-3511
Facsimile: (346) 241-3362

E-mail: slangston@blackbearllc.com &lt;mailto:slangston@blackbearllc.com&gt;</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>2</record_id>
      <option_code>A</option_code>
      <record_title>Table of Contents</record_title>
      <record_content_desc>Baseline Tariff Refile</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>19849056</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>TABLE OF CONTENTS


Part I.	Preliminary Statement 
Part II.	System Map
Part III.	Statement of Rates and Charges 
Part IV.	Rate Schedule FT
Part V.	Rate Schedule IT

Part VI.	General Terms and Conditions

1.	Definitions
2.	Quality of Gas
3.	Measurement
4.	Measuring Equipment
5.	Nominations
6.	Priority of Service and Curtailment
7.	Scheduling
8.	Allocation of Daily Quantities
9.	Overrun Quantities and Imbalances
10.	Operational Balancing Agreements
11.	Billing and Payment
12.	Possession of Gas
13.	Delivery Pressure
14.	Operational Flow Orders
15.	Warranty of Title
16.	Force Majeure
17.	Notices
18.	Modification
19.	Non-Waiver and Future Default
20.	Schedules and Contract Subject to Regulation
21.	Operating Information and Estimates
22.	New Facilities
23.	FERC Annual Charge Adjustment
24.	Order of Discounting
25.	Information and Communication Regarding Services
Release and Assignment of Firm Transportation Services1.	Request for Service
2.	Creditworthiness
3.	Transportation Agreement Extension and Right of First Refusal
4.	Incorporation in Rate Schedules and Transportation Agreements
5.	North American Energy Standards Board (NAESB) Standards
6.	Default and Termination
7.	Compliance Plan for Transportation Services
8.	Periodic Rate Adjustments
9.	Negotiated Rates
10.	Negotiated Rate Contract Summaries
11.	Operational Communications
12.	Liability of Parties
13.	Standards of Conduct
14.	Receipt and Delivery Points

Part VII.	Shipper Inquiry Form

Part VIII. 	Firm Transportation Agreement

Part IX.	Appendix A to Firm Transportation Agreement 
Part X.	Interruptible Transportation Agreement
Part XI.	Appendix A to Interruptible Transportation Agreement 
Part XII.	Capacity Release Transportation Agreement
Part XIII. 	Form of Transportation Agreement Applicable to Capacity Release Transactions Confirmation Letter</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>10</record_id>
      <option_code>A</option_code>
      <record_title>GTC - 2.  Quality of Gas</record_title>
      <record_content_desc>Baseline Tariff Refile</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>170641504</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>2.	QUALITY OF GAS

2.1	The Gas to be received by Transporter from Shipper shall conform to the following specifications:

(a)	Shall have a minimum Gross Heating Value of 950 Btus per cubic foot and a maximum Gross Heating Value of 1100 Btus per cubic foot.

(b)	Shall be commercially free, at the prevailing pressure and temperature in Transporter’s pipeline, from objectionable odors, sand, dust, gums, oils, hydrocarbons liquefiable at temperatures in excess of 14 Fahrenheit at the prevailing operating pressure, impurities, other objectionable substances which may become separated from the Gas, and other solids or liquids which will render it unmerchantable or cause injury to or interference with proper operations of the lines, regulators, meters or other appliances through which it flows; and shall not contain any substance not contained in the Gas at the time the same was produced other than traces of those materials and chemicals necessary for the transportation and delivery of the Gas and which do not cause it to fail to meet any of the quality specifications herein set forth.

(c)	Shall contain no more than one-quarter (1/4) grain of hydrogen sulphide per 100 cubic feet of Gas nor more than four (4) grains of total sulphur per 100 cubic feet of Gas as determined by standard methods of testing.

(d)	Shall not contain more than four percent (4%) by volume of a combined total of carbon dioxide and nitrogen components; provided, however, that the total carbon dioxide content shall not exceed two percent (2%) by volume.

(e)	Shall have been dehydrated, if necessary, for removal of water present therein in a vapor state, and shall in no event contain more than seven (7) pounds of entrained water per MMcf of Gas as determined by standard methods of testing.

(f)	Shall not exceed a temperature of 120 Fahrenheit.

(g)	Shall be as free of oxygen as practicable and shall not in any event contain more than four-tenths of one percent (0.4%) by volume of oxygen.

Shall in no event contain any mix of components that will cause thepresence of any liquids in the pipeline under normal operating conditions.

2.2	The party measuring Gas quality shall use approved standard methods in general use in the Gas industry, and shall cause adequate tests to be made to determine the quality of the Gas delivered. Such tests shall be made at intervals frequent enough to determine that the Gas conforms to these specifications.

2.3	If the Gas being received by Transporter from Shipper or on behalf of Shipper fails at any time to conform to any of the specifications set forth in Section 2.1, Transporter may refuse to receive the Gas, in which case Transporter shall notify the Person delivering such Gas of such deficiency in quality to allow such Person to remedy any deficiency. Upon such Person’s failure to promptly remedy any deficiency in quality as specified in Section 2.1, Transporter may terminate all receipts under the Transportation Agreement or accept delivery of such Gas and may make changes necessary to bring such Gas into conformity with such specifications, and the Shipper shall reimburse Transporter for any reasonable expense incurred in effecting such changes or for any injury or  damages  resulting from deliveries of non-conforming Gas.

2.4	The design and construction of any facilities to be installed by Shipper in order to comply with the quality specifications in Section 2.1 shall be approved by Transporter prior to such facilities being placed in service, such approval not to be unreasonably withheld.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>11</record_id>
      <option_code>A</option_code>
      <record_title>GTC - 3.  Measurement</record_title>
      <record_content_desc>Baseline Tariff Refile</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>189490560</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>3.	MEASUREMENT

3.1	The volume and the total heating value of Gas received and delivered by Transporter shall be determined as follows:

(a)	The unit of Gas received and delivered by Transporter shall be a MMBtu.

(b)	The unit of volume, for the purpose of measurement, shall be one cubic foot of Gas. The readings and registrations of the measuring equipment provided for herein and determinations of Gross Heating Value shall be computed in terms of such volumes.

3.2	The factors required to determine the Volume of Gas received, such as pressure, temperature, specific gravity and deviations from Boyle’s Law, shall be calculated in accordance with the American Gas Association Bulletin Number 3 and any modifications and amendments thereof, and applied in a practical manner.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>12</record_id>
      <option_code>A</option_code>
      <record_title>GTC - 4.  Measuring Equipment</record_title>
      <record_content_desc>FERC Gas Tariff</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>208339616</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>4.	MEASURING EQUIPMENT

4.1	With respect to Gas received or delivered under a Transportation Agreement, unless otherwise mutually agreed upon, all measuring facilities shall be installed, if necessary, owned, maintained and operated by Transporter or Transporter's designee near the Receipt Point and Delivery Point.

4.2	All meters and measuring equipment for the determination of volume, Gross Heating Value and relative density shall be approved pursuant to, and installed and maintained in accordance with, the currently published standards of the American Gas Association, or as mutually agreed upon. Notwithstanding the foregoing, all installation of equipment applying to or affecting deliveries of Gas shall be made in such manner as to permit an accurate determination of the quantity and Gross Heating Value of Gas delivered and ready verification of the accuracy of measurement. Care shall be exercised by all parties in the installation, maintenance and operation of pressure regulating equipment so as to prevent any inaccuracy in the determination of the energy of Gas delivered under the Transportation Agreement.

4.3	The accuracy of measuring equipment shall be verified by Transporter or other party at reasonable intervals at the expense of the party performing the verification, and if requested, in the presence of representatives of the other party, but either party shall not be required to verify the accuracy of such equipment more frequently than once in any 30 day period. In the event either party shall notify the other that it desires a special test of any measuring equipment, the parties shall co-operate to secure a prompt verification of the accuracy of such equipment. The expense of any such special test shall be borne by the requesting party if the measuring equipment is found to be in error by not more than the limits set out as follows:

(a)	two percent (2%) for measuring equipment utilized to determine volume,

(b)	one percent (1%) for any measuring equipment utilized to determine relative density,

(c)	one-half of one percent (0.5%) for any measuring equipment utilized to determine Gross Heating Value.

If upon test, any measuring equipment is found to be in error by not more than the limits specified above, the previous readings of such equipment shall be considered accurate in computing deliveries or receipts of Gas, but such equipment shall be adjusted at once to register accurately.
If, for the period since the last test, it is determined for a recording corresponding to the average hourly rate of flow for such period that:

1.	
(a)	
(b)	
(c)	
(d)	Any measuring equipment shall be found to be inaccurate by an amount exceeding two percent (2%), or

(e)	Any measuring equipment utilized to determine the relative density shall be found to be inaccurate by an amount exceeding one percent (1%), or

(f)	Any measuring equipment utilized to determine the Gross Heating Value shall be found to be inaccurate by an amount exceeding one-half of one percent (0.5%),

then the previous readings of the measurement equipment shall be corrected to zero error for any period which can be agreed upon, but if the period is not agreed upon, such correction shall be for a period extending over the last half of the time elapsed since the date of the last test, not exceeding a correction period of sixteen
(16) days.

Notwithstanding the foregoing, when Transporter and Shipper mutually agree that a measurement instrument inaccuracy occurred at a definite point in time, an appropriate correction shall be made even though said inaccuracy is less than the limits specified in (d), (e) or (f) above.

2.	
3.	
4.	
4.1	
4.2	
4.3	
4.4	Either Transporter or Shipper may install, maintain and operate at its own expense, such check measuring equipment as desired, provided that such equipment shall be so installed as not to interfere with the operation of the other’s measuring equipment.  Any pressure or volume control regulators installed by one party shall be operated so as not to interfere with the other party’s measuring equipment.

4.5	The measuring equipment so installed by either party, together with any building erected by it for such equipment, shall remain the property of the party that performed the installation. However, either party shall have the right to have representatives present at the time of any installing, reading, cleaning, changing, repairing, inspecting, testing, calibrating or adjusting done in connection with the other's measuring equipment used in measuring or checking the measurement of the delivery of Gas. The records from such measuring equipment shall remain the property of their owner, but upon request each will submit to the other its records and charts, together with calculations therefrom, for inspection and verification, subject to return within thirty (30) days after receipt thereof.

Transporter and Shipper shall each preserve all test data, charts and other similar records for a period of at least three (3) years or such longer period as may be required by the Commission.   Electronic copies of the original documents shallbe considered true records.

4.6	In the event a meter is out of service or registering inaccurately, the volume of Gas delivered during the period that such meter is out of service or registering inaccurately shall be determined:

(a)	By using the registration of any check meter or meters, if installed and accurately registering; or, in the absence of (a);

(b)	By correcting the error if the percentage of error is ascertainable by calibration, tests, or mathematical calculation; or, in the absence of both
(a)	and (b);

(c)	By estimating the quantity of delivery by deliveries during periods under similar conditions when the meter was registering accurately.

4.7	Prior Period Adjustments. Pursuant to NAESB Standards 2.3.7, 2.3.11, 2.3.12, 2.3.13, 2.3.14: The cutoff for the closing of measurement is five (5) business days after the business month. For treatment of measurement prior period adjustments, treat the adjustment by taking it back to the production month. A meter adjustment becomes a prior period adjustment after the fifth business day following the business month. For reporting measurement prior period adjustments, report it with the restated line item with new total quantity for the day and the month. Estimate missing or late measurement data  and treat  actual as a prior period adjustment, with the measuring party to provide the estimate. Measurement data corrections should be processed within six (6) months of the production month with a three (3) month rebuttal period. This standard shall not apply in the case of deliberate omission or misrepresentation or mutual mistake of fact. Parties’ other statutory or contractual rights shall not otherwise be diminished by this standard. Mutual agreement between parties, legal decisions, and regulatory guidance may be necessary to determine is the event qualifies for an extension of the above time periods.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>8</record_id>
      <option_code>A</option_code>
      <record_title>Part VI.  General Terms and Conditions</record_title>
      <record_content_desc>Baseline Tariff Refile</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>132943392</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>PART VI.
GENERAL TERMS AND CONDITIONS</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>26</record_id>
      <option_code>A</option_code>
      <record_title>GTC - 18.  Modification</record_title>
      <record_content_desc>Baseline Tariff Refile</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>472226400</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>18.	MODIFICATION

No modification of the terms and provisions of a Transportation Agreement shall be made except by the execution of written contracts.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>45</record_id>
      <option_code>A</option_code>
      <record_title>GTC - 37.  Operational Communications</record_title>
      <record_content_desc>Baseline Tariff Refile</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>830358464</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>37.	OPERATIONAL COMMUNICATIONS

37.1	To the extent reasonably practicable, Transporter, Shipper, and Delivery Point Operator may notify each other of any operational variables, information, or data that may impact the operational integrity of Transporter’s system or the reliability of service provided under this FERC Gas Tariff. Such variables, information, or data include, but are not limited to, variances between actual and scheduled receipts and/or deliveries, planned or unplanned activities on Transporter’s system and/or at the Delivery Point, upstream activities that may impact flow on Transporter’s system, changes in linepack or delivery pressures, or any other operational factor that may impact the operational integrity of Transporter’s system or reliable service.

37.2	When reasonably practicable, Transporter will attempt to notify Shipper and/or Delivery Point Operator of operational factors impacting (or potentially impacting) the reliability of service and request that Shipper and/or Delivery Point Operator take voluntary action to relieve any operational stress. Nothing in this Section shall prevent Transporter from taking any other actions authorized by this FERC Gas Tariff.

37.3	Notification under this Section shall be made pursuant to Section 17 of the General Terms and Conditions, or pursuant to any other means agreed upon by Transporter and Shipper or Delivery Point Operator.

37.4	For purposes of this Section, the term “Delivery Point Operator” means the operator of the Delivery Point defined in Section 1.10 of the General Terms and Conditions.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>46</record_id>
      <option_code>A</option_code>
      <record_title>GTC - 38.  Liability of Parties</record_title>
      <record_content_desc>Baseline Tariff Refile</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>849207520</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>38.	LIABILITY OF PARTIES

In no event will either Transporter or Shipper be liable to the other for any indirect, special or consequential loss, damage, cost or expense whatsoever based on breach of contract, negligence, strict liability or otherwise including, without limitation, loss of profits or revenues, cost of capital, loss or damages for failure to deliver gas, cost of lost, purchased or replacement gas, cancellation of permits or certificates and the termination of contracts.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>47</record_id>
      <option_code>A</option_code>
      <record_title>GTC - 39.  Shared Personnel and Facilities</record_title>
      <record_content_desc>Baseline Tariff Refile</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>868056576</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>39.	STANDARDS OF CONDUCT


Transporter will conduct its business in accordance with the standards of conduct contained in Part 358 of the Commission's Regulations, subject to any waivers or exemptions that may be granted Transporter.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>44</record_id>
      <option_code>A</option_code>
      <record_title>GTC - 36.  Negotiated Rate Contract Summaries</record_title>
      <record_content_desc>Baseline Tariff Refile</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>811509408</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>36.	NEGOTIATED RATE CONTRACT SUMMARIES

Statement of Negotiated Rate Contract

Shipper Identification	Rate Schedule	Term of Contract	Contract Demand (MMBtu/d)	Receipt Point	Delivery Point	Rate	
1. Union Power Partners, L.P.	FT	2.	430,000	Sharon Measurement Station	UPP Plant	3.	
4, El Dorado Chemical Co.	FT	5	40,000	Sharon Measurement Station	UPP Plant	6	

1.	This contract does not deviate in any material aspect from the Form of Transportation Agreement.

2.	The primary term of this firm Transportation Agreement is thirty (30) years, with service continuing thereafter from year to year until terminated by written notice so stating given by either party no less than six (6) months in advance of either (i) the end of the primary term or (ii) any termination date after the primary term has ended.

3.	Shipper agrees to pay Transporter a monthly reservation fee of Four Hundred Forty-One Thousand Eight Hundred Six Dollars ($441,806.00) per month for transportation services rendered under this firm transportation contract.

4.	This contract does not deviate in any material aspect from the Form of Transportation Agreement.

5.	The term of this firm Transportation Agreement is ten (10) years.

6.	Shipper agrees to pay Transporter $60,000/month plus the maximum usage charge provided in Trans-Union’s FERC Gas Tariff, as amended from time-to-time, and any other applicable surcharges and to provide the applicable fuel retainage for lost and unaccounted gas set forth in Trans-Union’s FERC Gas Tariff, as amended from time-to-time</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>41</record_id>
      <option_code>A</option_code>
      <record_title>GTC - 33.  Compliance Plan for Transportation Services</record_title>
      <record_content_desc>Baseline Tariff Refile</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>754962240</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>33.	COMPLIANCE PLAN FOR TRANSPORTATION SERVICES

Transporter is an interstate natural gas pipeline company that transports natural gas for others pursuant to Subparts B and G of Part 284. Section 33 provides the information and procedures required by 18 C.F.R. Section 250.16(b).

33.1	Complaint Procedures. If an existing or potential Shipper has a concern relating to any request for transportation service or any ongoing transportation service, Shipper may complete the inquiry form included in this Tariff. Shipper shall complete the inquiry form and return to:

BBT Trans-Union Interstate Pipeline L.P. 
1501 McKinney Street, Suite 800 Houston, TX 77010
Attn: Counsel

Transporter shall notify Shipper within forty-eight (48) hours that the inquiry has been received. Each inquiry will be noted on the transportation request log. Each inquiry shall be investigated, and Transporter shall inform Shipper in writing within thirty (30) days of receipt of the inquiry of the action, if any, taken in response to Shipper’s inquiry. Transporter shall maintain a separate file for all shipper inquiries and Transporter responses.

33.2	Transportation Log. Transporter shall maintain a log showing the information required by Section 250.16(c)(1) of the Commission’s Regulations.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>42</record_id>
      <option_code>A</option_code>
      <record_title>GTC - 34.  Periodic Rate Adjustments</record_title>
      <record_content_desc>Baseline Tariff Refile</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>773811296</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>34.	PERIODIC RATE ADJUSTMENTS

Transporter may, from time to time propose and file with FERC, in accordance with Section 4 of the Natural Gas Act, changes, amendments, revisions, and modifications to
(i) Transporter’s rates and rate schedules, and/or (ii) the General Terms and Conditions of Transporter’s tariff, provided, however, that Shippers shall have the right to intervene in and/or protest any such changes before FERC (or any successor governmental agency) or other authorities and to exercise any other rights that Shippers may have with respect thereto.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>43</record_id>
      <option_code>A</option_code>
      <record_title>GTC - 35.  Negotiated Rates</record_title>
      <record_content_desc>Baseline Tariff Refile</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>792660352</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>35.	NEGOTIATED RATES

35.1	Availability. Notwithstanding anything to the contrary in this tariff, Transporter may charge a Negotiated Rate for service under any rate schedule contained in this tariff to any Shipper that has access to service at the rates set forth in the applicable rate schedule and agrees to pay such Negotiated Rates.

35.2	Filing Requirement. No later than the Business Day on which Transporter commences service at a Negotiated Rate (or if the day on which Transporter commences service is not a Business Day, then no later than the next Business Day thereafter), Transporter will file either the Negotiated Rate Transportation Agreement or a tariff sheet stating the exact legal name of the Shipper, the Negotiated Rate, the rate schedule, the receipt and delivery points, the contract quantity, and, where applicable, the exact formula underlying a Negotiated Rate for any Negotiated Rate Transportation Agreement. To the extent any Negotiated Rate Transportation Agreement deviates in any material respect from the Form of Agreement in the tariff for the applicable rate schedule, such Agreement will be filed with FERC.

35.3	Precondition. Transporter and Shipper have executed a valid Transportation Agreement for a Negotiated Rate. At the time of execution, service was available for Shipper under one or more of the rate schedules generally applicable to all Shippers at a recourse rate. Transporter will not negotiate terms and conditions of service.

35.4	Allocation of Capacity. For purposes of allocating capacity, whether by Transporter or pursuant to the capacity release provisions of Section 26 of the General Terms and Conditions, a Negotiated Rate Shipper paying a rate higher than the maximum applicable recourse rate will be deemed to be paying a rate equal to such maximum recourse rate. The price cap for bidding for capacity under the right of first refusal provisions in Section 29 of the General Terms and Conditions is the maximum recourse rate.

35.5	Capacity Release. The release of capacity under a Negotiated Rate Transportation Agreement is capped at the maximum recourse rate, except for releases where no such rate cap applies; provided, however, the Negotiated Rate Shipper will continue to be obligated to pay Transporter any difference by which the revenue due under the Negotiated Rate Transportation Agreement exceeds the revenue received from the Replacement Shipper. Transporter and a Negotiated Rate Shipper may agree upon payment obligations and crediting mechanisms which vary from or are different from those set forth in Transporter’s capacity release provisions in Section 26 of the General Terms and Conditions.35.6	Accounting Treatment. Transporter will establish a new sub-account to record the revenues from any Negotiated Rate transactions and shall maintain supporting information at a level of detail sufficient for National Gas Act Section 4 rate change filing purposes. Transporter will maintain records that keep separate and identifiable each volume transported, billing determinant, surcharge, and revenue associated with a Negotiated Rate to permit filings in the form of Statements G, I, and J in future rate proceedings.

35.7	Rate Treatment. Transporter shall have the right to seek in future general rate proceedings discounted-type adjustments in the design of its rates related to Negotiated Rate Transportation Agreements that were converted from pre-existing discount agreements to Negotiated Rate Transportation Agreements, provided that the type of pre-existing service is not altered as a result of the conversion to a Negotiated Rate. With respect to all Negotiated Rate Transportation Agreements resulting from conversions of preexisting discounted agreements, Transporter may seek a discount-type adjustment based upon the greater of: (a) the Negotiated Rate revenues received, or (b) the discounted tariff rate revenues which otherwise would have been received.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>51</record_id>
      <option_code>A</option_code>
      <record_title>Part X.  Interruptible Transportation Agreement</record_title>
      <record_content_desc>Baseline Tariff Refile</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>943452800</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>PART X.
FORM OF INTERRUPTIBLE TRANSPORTATION AGREEMENT AGREEMENT FOR INTERRUPTIBLE TRANSPORTATION OF NATURAL GAS BBT TRANS-UNION INTERSTATE PIPELINE, L.P.
Interruptible Transportation Agreement No.   	 THIS TRANSPORTATION AGREEMENT FOR INTERRUPTIBLE TRANSPORTATION OF
NATURAL, GAS (“Interruptible Transportation Agreement” or “Agreement”) is made and entered into this 	day of 	, 	, between:

BBT TRANS-UNION INTERSTATE PIPELINE, L.P., (“Transporter”),

and

 	, (“Shipper”)

WITNESSETH:

That in consideration of the mutual covenants contained herein the parties agree as follows:

Section 1.	Service to be Rendered

Transporter shall perform and Shipper shall receive service in accordance with the provisions of Transporter’s effective Rate Schedule IT and the applicable General Terms and Conditions of Transporter’s FERC Gas Tariff on file with the Federal Energy Regulatory Commission (“Commission”) as the same may be amended or superseded in accordance with the Rules and Regulations of the Commission.

Section 2.	Term

The term of this Agreement shall commence as of 		, and shall continue in full force and effect for 	and thereafter shall continue month-to-month, unless terminated by either Transporter or Shipper with thirty (30) days written notice. Pregranted abandonment shall apply upon termination of this Agreement.

Section 3.	Rates

Shipper shall pay the maximum rate in accordance with Transporter’s currently effective Rate Schedule IT, unless Transporter and Shipper mutually agree upon a lower rate.Section 4.	Notices

Notices to Transporter under this Agreement shall be addressed to Transporter’s Web Site, or to:

BBT Trans-Union Interstate Pipeline, L.P. Attention: Counsel
1501 McKinney Street, Suite 800 Houston, TX 77010
Facsimile: (346) 241-3362

Notices to Shipper under this Agreement shall be addressed to:






Section 5.	Superseded Agreements

This interruptible Transportation Agreement supersedes and cancels as of the effective date hereof the following agreements:

Section 6.	Miscellaneous

6.1	This Agreement shall be interpreted according to the laws of the state of Texas.

6.2	A waiver by either party of any one or more defaults by the other hereunder shall not operate as a waiver of any future default or defaults, whether of a like or of a different character.

6.3	This Agreement may only be amended by an instrument in writing executed by both parties hereto.

6.4	Nothing in this Agreement shall be deemed to create any rights or obligations between the parties hereto after the expiration of the term set forth herein, except that termination of this Agreement shall not relieve either party of the obligation to correct any quantity imbalances or Shipper of the obligation to pay any amounts due hereunder to Transporter.

6.5	Appendix A attached hereto is/are incorporated herein by reference and made a part hereof for all purposes.

IN WITNESS WHEREOF, the Parties have duly executed this Interruptible Transportation Agreement in several counterparts by their duly authorized officers with effect as of the day first above written.


[Date of Execution]	BBT TRANS-UNION INTERSTATE PIPELINE, L.P. Per:	
[Date of Execution]	SHIPPER Per:</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>53</record_id>
      <option_code>A</option_code>
      <record_title>Part XII.  Capacity Release Transportation Agreement</record_title>
      <record_content_desc>Baseline Tariff Refile</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>981150912</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>PART XII.
FORM OF TRANSPORTATION AGREEMENT FOR CAPACITY RELEASE TRANSACTIONS

				Capacity Release Transportation Agreement No. _______ 	 
THIS AGREEMENT FOR CAPACITY RELEASE TRANSACTIONS (“Transportation 
Agreement”   or   “Agreement”)   is   made   this ______ day   of ___________between 
BBT Trans-Union	Interstate	Pipeline,	L.P.,	hereinafter	
	referred	to	as	“Transporter”,	and
 ________________, hereinafter referred to as “Replacement Shipper”.


Article I. Purpose

1.1 The purpose of this Agreement is to set forth the terms and conditions for requalification as a bidder and Replacement Shipper under the provisions of Transporter’s capacity release program, as described in Section 26 of the General Terms and Conditions of Transporter’s FERC Gas Tariff, as it may be amended from time to time. Requalification will permit Replacement Shipper to become an eligible bidder for Released Capacity. Requalifications will further permit an eligible bidder awarded capacity under the capacity release program to nominate and receive Firm Transportation service as described in such award upon the execution of a Confirmation Letter.

Article II. Confirmation Letter

2.1 Upon the award of capacity to Replacement Shipper under Transporter’s capacity release program, Transporter will provide Replacement Shipper a Confirmation Letter incorporating the terms of an accepted bid for capacity. Replacement Shipper shall execute and return the Confirmation Letter to Transporter no later than one (1) Business Day after receipt. Transporter and Replacement Shipper agree that their respective signatures on such Confirmation Letter transmitted by facsimile or other similar technology will be deemed valid “signed writings.” Upon execution, Replacement Shipper will be permitted to nominate Transportation service on Transporter’s system in accordance with Transporter’s FERC Gas Tariff coextensive with the rights acquired from the Releasing Shipper.

Article III. Conditions of Service

3.1	Firm transportation service provided pursuant to an award of capacity under Transporter’s capacity release program is subject to the terms and conditions of Transporter’s FERC Gas Tariff, including the General Terms and Conditions, the
FT Rate Schedule and rates, and Firm Transportation Agreement. Transporter has the unilateral right to file revisions to these Firm Transportation documents at any time with FERC and to implement such changes pursuant to the regulations and orders of the appropriate regulatory authority, and Replacement Shipper has the right to protest such filings.

3.1	Replacement Shipper must comply with Transporter’s creditworthiness and credit appraisal provisions in Section 28 of the General Terms and Conditions prior to being placed on Transporter’s approved list of eligible bidders for Released Capacity. Failure to maintain compliance will result in the removal of Replacement Shipper from the list of eligible bidders until such time as Replacement Shipper is in compliance with the requirements of these provisions. Further, service provided pursuant to an award of Released Capacity is subject to suspension under the terms of  Section 26 of the General Terms and Conditions,  if Replacement Shipper fails to meet the requirements of Section 26.

Article IV. Term

4.1  This Transportation Agreement is effective as of the first date written above, and  will continue in effect for a period of   Year,  and month to month thereafter    until terminated. This Transportation Agreement may be terminated by Transporter or Replacement Shipper any time upon ten (10) Days prior written notice. However, termination will not relieve either party of the obligation to perform the terms of this Transportation Agreement as to any transactions that were commenced prior to termination.

Article V. Notices

5.1	Any formal notice request, or demand that either party gives to the other regarding this Transportation Agreement shall be delivered through use of the other party’s interactive Internet Web Site. To the extent Replacement Shipper does not maintain an interactive Internet Web Site, notice may be effected by E-Mail or formal written notice to the address listed in Section 17 of the General Terms and Conditions.

5.2	Nominations to schedule Transportation service hereunder shall be directed to Transporter’s Gas Control Department through Transporter’s Web Site.

5.3	Electronic transfer payments to Transporter shall be accompanied with the instructions “To Credit the Account of BBT Trans-Union Interstate Pipeline L.P.” and shall be sent to the following bank and account number:

(This Section is to be completed indicating the Bank Name, Bank Address and Account Number)

5.4	Remittance detail supporting electronic transfer payments to Transporter and any notice, request or demand regarding statements, bill or payments shall be mailed to the following address:

BBT Trans-Union Interstate Pipeline L.P. 
Attention: Counsel
1501 McKinney Street, Suite 800 
Houston, TX 77010

Article VI. Miscellaneous

6.1 This Transportation Agreement in all respects is subject to the provisions of Transporter’s FT Rate Schedule, or superseding rate schedule(s), and applicable provisions of the General Terms and Conditions included by reference in such FT Rate Schedule filed by Transporter with the Commission, all of which are by reference made a part hereof.

IN WITNESS WHEREOF, the parties hereto have executed this Transportation Agreement in duplicate originals on the Day and Year first written above.

BBT Trans-Union Interstate Pipeline L.P.

By:	 
                    (Name)

Title:	


	
  	

(Shipper)

By:	
                     (Name)

    Title:</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>55</record_id>
      <option_code>A</option_code>
      <record_title>GTC - 40. Receipt and Delivery Points</record_title>
      <record_content_desc>Baseline Tariff Refile</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>869056576</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>40.	RECEIPT AND DELIVERY POINTS

Shipper may realign Receipt or Delivery Points, subject to capacity availability.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>48</record_id>
      <option_code>A</option_code>
      <record_title>Part VII.  Shipper Inquiry Form</record_title>
      <record_content_desc>Baseline Tariff Refile</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>886905632</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>PART VII. 
SHIPPER INQUIRY FORM



Name of inquirer:

	____________________________________________________________

Identification of contract under question:

____________________________________________________________
	
Designation of time period involved:


____________________________________________________________

Nature of inquiry or complaint:

____________________________________________________________


____________________________________________________________



Signature ____________________________________________________________



Title ____________________________________________________________</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>49</record_id>
      <option_code>A</option_code>
      <record_title>Part VIII.  Firm Transportation Service</record_title>
      <record_content_desc>Baseline Tariff Refile</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>905754688</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>PART VIII.
FORM OF FIRM TRANSPORTATION AGREEMENT 
TRANSPORTATION AGREEMENT
FOR FIRM TRANSPORTATION OF NATURAL 
GAS BBT TRANS-UNION INTERSTATE PIPELINE, L.P.
Firm Transportation Agreement No.   	 THIS TRANSPORTATION AGREEMENT FOR FIRM TRANSPORTATION OF NATURAL
GAS (“Firm Transportation Agreement” or “Agreement”) is made and entered into this 	day
of 	, 	, between:

BBT TRANS-UNION INTERSTATE, L.P., (“Transporter”).

and

 	, (“Shipper”).

WITNESSETH:

That in consideration of the mutual covenants contained herein the parties agree as follows:

Section 1.	Service to be Rendered

Transporter shall perform and Shipper shall receive service in accordance with the provisions of Transporter’s effective Rate Schedule FT and the applicable General Terms and Conditions of Transporter's FERC Gas Tariff on file with the Federal Energy Regulatory Commission (“Commission”) as the same may be amended or superseded in accordance with the Rules and Regulations of the Commission.

Section 2.	Term

2.1	Service  under  this  Agreement  shall  commence  upon 	for a primary term of 	.

Section 3.	Rates

3.1	Shipper shall pay the Recourse Rates in accordance with Transporter’s currently effective Rate Schedule FT.

OR

Shipper shall pay Negotiated Rates in accordance with Transporter’s currently effective Rate Schedule FT.

Section 4.	Notices


Notices to Transporter under this Agreement shall be addressed to Transporter’s web site, or to:

BBT Trans-Union Interstate Pipeline, L.P. 
1501 McKinney Street, Suite 800 Houston, TX 77010
Attn: Counsel

Facsimile: (346) 241-3362

Notices to Shipper under this Agreement shall be addressed to:

___________________________________________

___________________________________________

___________________________________________

___________________________________________



Section 5.	Superseded Agreements

This Firm Transportation Agreement supersedes and cancels as of the effective date hereof the following agreements:

Section 6.	Miscellaneous

6.1	This Agreement shall be interpreted according to the laws of the State of Texas.

6.2	A waiver by either party of any one or more defaults by the other hereunder shall not operate as a waiver of any future default or defaults, whether of a like or of a different character.

6.3	This Agreement may only be amended by an instrument in writing executed by both parties hereto.

6.4	Nothing in this Agreement shall be deemed to create any rights or obligations between the parties hereto after the expiration of the term set forth herein, except that termination of this Agreement shall not relieve either party of the obligation to correct any quantity imbalances or Shipper of the obligation to pay any amounts due hereunder to Transporter.

6.5	Appendix A attached hereto is/are incorporated herein by reference and made a part hereof for all purposes.

IN WITNESS WHEREOF, the Parties have duly executed this Firm Transportation Agreement in several counterparts by their duly authorized officers with effect as of the day first above written.

[Date of Execution]	BBT TRANS-UNION INTERSTATE PIPELINE, L.P.  Per:   Per:  	
[Date of Execution]	SHIPPER Per: Per:</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>31</record_id>
      <option_code>A</option_code>
      <record_title>GTC - 23.  FERC Annual Charge Adjustment</record_title>
      <record_content_desc>Baseline Tariff Refile</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>566471680</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>23.	FERC ANNUAL CHARGE ADJUSTMENT

Transporter shall adjust the rates charged for services as specified below from time to time to reflect the annual charge assessed Transporter by FERC (Annual Charge) pursuant to Order No. 472 or any other superseding or related rule or order.

23.1	Funding Services shall include all Transportation services under Rate Schedules in Transporter’s FERC Gas Tariff.

23.2	The effective rates for Funding Services under Rate Schedules in Transporter’s FERC Gas Tariff shall be the rate for each applicable Rate Schedule shown on Transporter’s effective Statement of Rates and Charges.




23.3	The Annual Charge Adjustment shall be the unit amount specified by the FERC for such charge for that fiscal year (October 1 through September 30). Such unit amount, as revised annually and posted in an annual notice issued each fiscal year by FERC entitled "FY [Year] Gas Annual Charges Correction for Annual Charges Unit Charge" at &lt;http://www.ferc.gov&gt;  &lt;http://www.ferc.gov/&gt;is incorporated by reference into Transporter's FERC Gas Tariff. The Annual Charge Adjustment shall become effective on the effective date of adjustment without suspension or refund obligation.
23.4	Transporter shall retain all revenues collected under this Section 23. Except as provided by this Section 23, Transporter shall not have the right to seek to recover in any proceeding under Section 4(e) of the Natural Gas Act any annual charges recorded in its FERC Account No. 928.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>32</record_id>
      <option_code>A</option_code>
      <record_title>GTC - 24.  Order of Discounting</record_title>
      <record_content_desc>Baseline Tariff Refile</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>585320736</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>24.	ORDER OF DISCOUNTING

To the extent Transporter discounts the rates for service pursuant to this tariff, the rates for service will be deemed to have been discounted in the following order: (1) Reservation Charge; (2) Usage Charge, but no charges will be discounted below the stated Minimum Rate.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>33</record_id>
      <option_code>A</option_code>
      <record_title>GTC - 25.  Information and Communication Regarding Services</record_title>
      <record_content_desc>Baseline Tariff Refile</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>604169792</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>25.	INFORMATION AND COMMUNICATIONS REGARDING SERVICES

This Section describes the information and procedures Transporter will make available pursuant to FERC Regulations.

25.1	System and Service Information

Whenever possible, information on the availability, pricing, or other terms of the transportation services will be made available on Transporter's Internet Web Site. Any person desiring information on the availability, pricing, or other terms of the transportation services can call Scott Langston at (346) 241-3511.

25.2	Access to Internet Web Site

Information about Transporter’s system and its capacity shall be provided on Transporter’s Web Site at &lt;http://www.hienergyebb.com/TRANSUNION/Home&gt;

25.3	Service Complaints

Customers are encouraged to resolve any disputes informally with their designated customer representatives. A formal complaint concerning any transportation services offered by Transporter shall specifically state that it is a complaint and shall be addressed to Transporter’s Web Site, or directed, preferably in writing, to BBT Trans-Union Interstate Pipeline L.P., 1501 McKinney Street., Suite 800, Houston, TX 77010, Attn: Counsel. Transporter will respond initially to the complainant within forty-eight (48) hours (exclusive of weekends and holidays), and in writing within thirty (30) days.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>30</record_id>
      <option_code>A</option_code>
      <record_title>GTC - 22.  New Facilities</record_title>
      <record_content_desc>Baseline Tariff Refile</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>547622624</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>22.	NEW FACILITIES POLICY

Transporter is under no obligation to build, acquire and/or install service lateral pipelines or tap and metering facilities necessary to provide transportation service to any new or existing Shipper. Transporter may construct facilities on a non-discriminatory basis, provided:

22.1	Transporter determines in its sole discretion it has sufficient unutilized mainline transportation capacity to provide the service requested by the Shipper without impairing the operational integrity of its system, or Transporter has obtained certificate authorizations to expand its mainline capacity by an amount sufficient to allow Transporter to provide the requested service; and

22.2	Transporter has or obtains any certificate authorizations necessary to build, acquire and/or install the service lateral pipeline(s), tap(s) and/or meter facilities; and

22.3	Unless otherwise agreed to by Transporter, Shipper will reimburse or compensate Transporter, on mutually agreeable terms, for 100% of Transporter’s construction, acquisition and/or installation costs (including any associated tax effects), as defined below, for facilities required to effect the service requested by Shipper. Transporter may waive this requirement at its discretion, on a not unduly discriminatory basis.

For the purposes of this Section, Transporter’s construction, acquisition, and/or installation costs shall include, but shall not be limited to: Transporter’s design costs, equipment costs, labor costs, material costs, supervision costs, construction financing costs (including a return on equity), taxes (whether income or otherwise), filing fees, right of way costs and permitting costs. Nothing in this Section shall require Transporter to file an application for a certificate of public convenience and necessity under Section 7(c) of the Natural Gas Act. Nothing in this Section shall prevent Transporter from contesting an application for service filed pursuant to Section 7(a) of the Natural Gas Act. Finally, nothing in this Section shall require Transporter to build any facilities, the construction or operation of which would subject Transporter to the jurisdiction of any state regulatory agency. Transporter reserves the right to seek a waiver of the policy set forth herein, for good cause shown during any proceeding before the Commission instituted under Section 7 of the Natural Gas Act.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>27</record_id>
      <option_code>A</option_code>
      <record_title>GTC - 19.  Non-Waiver and Future Default</record_title>
      <record_content_desc>Baseline Tariff Refile</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>491075456</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data>e1xydGYxXGRlZmYwe1xmb250dGJse1xmMCBUaW1lcyBOZXcgUm9tYW47fXtcZjEgU2Vnb2UgVUk7fXtcZjIgTWljcm9zb2Z0IFNhbnMgU2VyaWY7fX17XGNvbG9ydGJsXHJlZDBcZ3JlZW4wXGJsdWUwIDtccmVkMFxncmVlbjBcYmx1ZTI1NSA7XHJlZDk2XGdyZWVuOTRcYmx1ZTkyIDtccmVkMjI1XGdyZWVuMjIzXGJsdWUyMjEgO317XCpcZGVmY2hwIFxmczIyfXtcKlxkZWZwYXAgXG5vd2lkY3RscGFyfXtcKlxsaXN0dGFibGUge1xsaXN0XGxpc3R0ZW1wbGF0ZWlkLTF7XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAzKFwnMDApO317XGxldmVsbnVtYmVyc1wnMDI7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcY2YwXGZpLTcyMFxsaTI0NjBcbGluMjQ2MH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAzKFwnMDEpO317XGxldmVsbnVtYmVyc1wnMDI7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcY2YwXGZpLTcyMVxsaTMxODFcbGluMzE4MX17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdTgyMjZcJzk1O317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS03MjFcbGkzOTMzXGxpbjM5MzN9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktNzIxXGxpNDY4NlxsaW40Njg2fXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTcyMVxsaTU0NDBcbGluNTQ0MH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdTgyMjZcJzk1O317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS03MjFcbGk2MTkzXGxpbjYxOTN9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktNzIxXGxpNjk0NlxsaW42OTQ2fXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTcyMVxsaTc3MDBcbGluNzcwMH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdTgyMjZcJzk1O317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS03MjFcbGk4NDUzXGxpbjg0NTN9e1xsaXN0bmFtZSA7fVxsaXN0aWQxMjcyODI1M317XGxpc3RcbGlzdHRlbXBsYXRlaWQtMXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMFxmaS03MjBcbGkxMDIwXGxpbjEwMjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktNzIwXGxpMTkxNFxsaW4xOTE0fXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTcyMFxsaTI4MDhcbGluMjgwOH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdTgyMjZcJzk1O317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS03MjBcbGkzNzAyXGxpbjM3MDJ9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktNzIwXGxpNDU5NlxsaW40NTk2fXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTcyMFxsaTU0OTBcbGluNTQ5MH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdTgyMjZcJzk1O317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS03MjBcbGk2Mzg0XGxpbjYzODR9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktNzIwXGxpNzI3OFxsaW43Mjc4fXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTcyMFxsaTgxNzJcbGluODE3Mn17XGxpc3RuYW1lIDt9XGxpc3RpZDMxNzMwMDUyfXtcbGlzdFxsaXN0dGVtcGxhdGVpZC0xe1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMyhcJzAwKTt9e1xsZXZlbG51bWJlcnNcJzAyO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMFxmaS02OTJcbGkzMTUyXGxpbjMxNTJ9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktNjkyXGxpMzg0MFxsaW4zODQwfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTY5MlxsaTQ1MjBcbGluNDUyMH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdTgyMjZcJzk1O317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS02OTJcbGk1MjAwXGxpbjUyMDB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktNjkyXGxpNTg4MFxsaW41ODgwfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTY5MlxsaTY1NjBcbGluNjU2MH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdTgyMjZcJzk1O317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS02OTJcbGk3MjQwXGxpbjcyNDB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktNjkyXGxpNzkyMFxsaW43OTIwfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTY5MlxsaTg2MDBcbGluODYwMH17XGxpc3RuYW1lIDt9XGxpc3RpZDM4ODMwMzI0NH17XGxpc3RcbGlzdHRlbXBsYXRlaWQtMXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMFxmaS03MjBcbGkyMTAwXGxpbjIxMDB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktNzIwXGxpMjg4NlxsaW4yODg2fXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTcyMFxsaTM2NzJcbGluMzY3Mn17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdTgyMjZcJzk1O317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS03MjBcbGk0NDU4XGxpbjQ0NTh9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktNzIwXGxpNTI0NFxsaW41MjQ0fXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTcyMFxsaTYwMzBcbGluNjAzMH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdTgyMjZcJzk1O317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS03MjBcbGk2ODE2XGxpbjY4MTZ9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktNzIwXGxpNzYwMlxsaW43NjAyfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTcyMFxsaTgzODhcbGluODM4OH17XGxpc3RuYW1lIDt9XGxpc3RpZDQwMDMwMDAzOX17XGxpc3RcbGlzdHRlbXBsYXRlaWQtMXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGJcZnMyMlxjZjBcZmktNzIwXGxpMTAyMFxsaW4xMDIwfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDNcJzAwLlwnMDE7fXtcbGV2ZWxudW1iZXJzXCcwMVwnMDM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcYlxmczIyXGNmMFxmaS03MjBcbGkxNzQwXGxpbjE3NDB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMyhcJzAyKTt9e1xsZXZlbG51bWJlcnNcJzAyO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMFxmaS03MjBcbGkyNDYwXGxpbjI0NjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMyhcJzAzKTt9e1xsZXZlbG51bWJlcnNcJzAyO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMFxmaS03MjBcbGkyNzg1XGxpbjI3ODV9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktNzIwXGxpMjc4MFxsaW4yNzgwfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTcyMFxsaTM5NzZcbGluMzk3Nn17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdTgyMjZcJzk1O317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS03MjBcbGk1MTczXGxpbjUxNzN9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktNzIwXGxpNjM3MFxsaW42MzcwfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTcyMFxsaTc1NjZcbGluNzU2Nn17XGxpc3RuYW1lIDt9XGxpc3RpZDQwMTIxNzA4M317XGxpc3RcbGlzdHRlbXBsYXRlaWQtMXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMS07fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMFxmaS03MjVcbGkxNzQwXGxpbjE3NDB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktNzI1XGxpMjU2MlxsaW4yNTYyfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTcyNVxsaTMzODRcbGluMzM4NH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdTgyMjZcJzk1O317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS03MjVcbGk0MjA2XGxpbjQyMDZ9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktNzI1XGxpNTAyOFxsaW41MDI4fXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTcyNVxsaTU4NTBcbGluNTg1MH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdTgyMjZcJzk1O317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS03MjVcbGk2NjcyXGxpbjY2NzJ9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktNzI1XGxpNzQ5NFxsaW43NDk0fXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTcyNVxsaTgzMTZcbGluODMxNn17XGxpc3RuYW1lIDt9XGxpc3RpZDUwMDEyMjMxOH17XGxpc3RcbGlzdHRlbXBsYXRlaWQtMXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMFxmaS03MjBcbGkxMDIwXGxpbjEwMjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwM1wnMDAuXCcwMTt9e1xsZXZlbG51bWJlcnNcJzAxXCcwMzt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjBcZmktNzIwXGxpMTc0MFxsaW4xNzQwfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTcyMFxsaTI2NTNcbGluMjY1M317XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdTgyMjZcJzk1O317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS03MjBcbGkzNTY2XGxpbjM1NjZ9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktNzIwXGxpNDQ4MFxsaW40NDgwfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTcyMFxsaTUzOTNcbGluNTM5M317XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdTgyMjZcJzk1O317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS03MjBcbGk2MzA2XGxpbjYzMDZ9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktNzIwXGxpNzIyMFxsaW43MjIwfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTcyMFxsaTgxMzNcbGluODEzM317XGxpc3RuYW1lIDt9XGxpc3RpZDUxMDQxNzU3OH17XGxpc3RcbGlzdHRlbXBsYXRlaWQtMXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0NXtcbGV2ZWx0ZXh0IFwnMDFcJzAwO317XGxldmVsbnVtYmVyc1wnMDE7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktMzYwMVxsaTUzNDFcbGluNTM0MX17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDN7XGxldmVsdGV4dCBcJzAzXCcwMC5cJzAxO317XGxldmVsbnVtYmVyc1wnMDFcJzAzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTM2MDFcbGk1MzQxXGxpbjUzNDF9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwNVwnMDAuXCcwMS5cJzAyO317XGxldmVsbnVtYmVyc1wnMDFcJzAzXCcwNTt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjBcZmktMzYwMVxsaTUzNDFcbGluNTM0MX17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdTgyMjZcJzk1O317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS0zNjAxXGxpNjcyNlxsaW42NzI2fXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTM2MDFcbGk3MTg4XGxpbjcxODh9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktMzYwMVxsaTc2NTBcbGluNzY1MH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdTgyMjZcJzk1O317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS0zNjAxXGxpODExMlxsaW44MTEyfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTM2MDFcbGk4NTc0XGxpbjg1NzR9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktMzYwMVxsaTkwMzZcbGluOTAzNn17XGxpc3RuYW1lIDt9XGxpc3RpZDUzNTU4NDY0N317XGxpc3RcbGlzdHRlbXBsYXRlaWQtMXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MntcbGV2ZWx0ZXh0IFwnMDMoXCcwMCk7fXtcbGV2ZWxudW1iZXJzXCcwMjt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjBcZmktNzIwXGxpMjQ2MFxsaW4yNDYwfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTcyMFxsaTMyMTBcbGluMzIxMH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdTgyMjZcJzk1O317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS03MjBcbGkzOTYwXGxpbjM5NjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktNzIwXGxpNDcxMFxsaW40NzEwfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTcyMFxsaTU0NjBcbGluNTQ2MH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdTgyMjZcJzk1O317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS03MjBcbGk2MjEwXGxpbjYyMTB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktNzIwXGxpNjk2MFxsaW42OTYwfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTcyMFxsaTc3MTBcbGluNzcxMH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdTgyMjZcJzk1O317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS03MjBcbGk4NDYwXGxpbjg0NjB9e1xsaXN0bmFtZSA7fVxsaXN0aWQ1NTkwOTc5MzF9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkLTF7XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDV7XGxldmVsdGV4dCBcJzAxXCcwMDt9e1xsZXZlbG51bWJlcnNcJzAxO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTcyMFxsaTE3NDBcbGluMTc0MH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAzXCcwMC5cJzAxO317XGxldmVsbnVtYmVyc1wnMDFcJzAzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGJcY2YwXGZpLTcyMFxsaTE3NDBcbGluMTc0MH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdTgyMjZcJzk1O317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS03MjBcbGkzMzg0XGxpbjMzODR9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktNzIwXGxpNDIwNlxsaW40MjA2fXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTcyMFxsaTUwMjhcbGluNTAyOH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdTgyMjZcJzk1O317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS03MjBcbGk1ODUwXGxpbjU4NTB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktNzIwXGxpNjY3MlxsaW42NjcyfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTcyMFxsaTc0OTRcbGluNzQ5NH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdTgyMjZcJzk1O317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS03MjBcbGk4MzE2XGxpbjgzMTZ9e1xsaXN0bmFtZSA7fVxsaXN0aWQ1Njk2NTUxNDF9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkLTF7XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAzKFwnMDApO317XGxldmVsbnVtYmVyc1wnMDI7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcY2YwXGZpLTY5MlxsaTMxNTJcbGluMzE1Mn17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdTgyMjZcJzk1O317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS02OTJcbGkzMTgwXGxpbjMxODB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktNjkyXGxpMzkzM1xsaW4zOTMzfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTY5MlxsaTQ2ODZcbGluNDY4Nn17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdTgyMjZcJzk1O317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS02OTJcbGk1NDQwXGxpbjU0NDB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktNjkyXGxpNjE5M1xsaW42MTkzfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTY5MlxsaTY5NDZcbGluNjk0Nn17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdTgyMjZcJzk1O317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS02OTJcbGk3NzAwXGxpbjc3MDB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktNjkyXGxpODQ1M1xsaW44NDUzfXtcbGlzdG5hbWUgO31cbGlzdGlkNjEzODI5NzM3fXtcbGlzdFxsaXN0dGVtcGxhdGVpZC0xe1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQze1xsZXZlbHRleHQgXCcwMVwnMDA7fXtcbGV2ZWxudW1iZXJzXCcwMTt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS03MjBcbGkxNzQwXGxpbjE3NDB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwM1wnMDAuXCcwMTt9e1xsZXZlbG51bWJlcnNcJzAxXCcwMzt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxiXGNmMFxmaS03MjBcbGkxNzQwXGxpbjE3NDB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktNzIwXGxpMzM4NFxsaW4zMzg0fXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTcyMFxsaTQyMDZcbGluNDIwNn17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdTgyMjZcJzk1O317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS03MjBcbGk1MDI4XGxpbjUwMjh9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktNzIwXGxpNTg1MFxsaW41ODUwfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTcyMFxsaTY2NzJcbGluNjY3Mn17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdTgyMjZcJzk1O317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS03MjBcbGk3NDk0XGxpbjc0OTR9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktNzIwXGxpODMxNlxsaW44MzE2fXtcbGlzdG5hbWUgO31cbGlzdGlkMTE0Njc4MTIyM317XGxpc3RcbGlzdHRlbXBsYXRlaWQtMXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMFxmaS03MjBcbGkxMDIwXGxpbjEwMjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwM1wnMDAuXCcwMTt9e1xsZXZlbG51bWJlcnNcJzAxXCcwMzt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjBcZmktNzIwXGxpMTc0MFxsaW4xNzQwfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDMoXCcwMik7fXtcbGV2ZWxudW1iZXJzXCcwMjt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjBcZmktMzA3XGxpMjQ2MFxsaW4yNDYwfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTMwN1xsaTMzOTdcbGluMzM5N317XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdTgyMjZcJzk1O317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS0zMDdcbGk0MzM1XGxpbjQzMzV9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktMzA3XGxpNTI3MlxsaW41MjcyfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTMwN1xsaTYyMTBcbGluNjIxMH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdTgyMjZcJzk1O317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS0zMDdcbGk3MTQ3XGxpbjcxNDd9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktMzA3XGxpODA4NVxsaW44MDg1fXtcbGlzdG5hbWUgO31cbGlzdGlkMTE4MzU5MTY4Nn17XGxpc3RcbGlzdHRlbXBsYXRlaWQtMXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MTN7XGxldmVsdGV4dCBcJzAzKFwnMDApO317XGxldmVsbnVtYmVyc1wnMDI7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcY2YwXGZpLTcyMFxsaTI0NjBcbGluMjQ2MH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdTgyMjZcJzk1O317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS03MjBcbGkzMjEwXGxpbjMyMTB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktNzIwXGxpMzk2MFxsaW4zOTYwfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTcyMFxsaTQ3MTBcbGluNDcxMH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdTgyMjZcJzk1O317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS03MjBcbGk1NDYwXGxpbjU0NjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktNzIwXGxpNjIxMFxsaW42MjEwfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTcyMFxsaTY5NjBcbGluNjk2MH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdTgyMjZcJzk1O317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS03MjBcbGk3NzEwXGxpbjc3MTB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktNzIwXGxpODQ2MFxsaW44NDYwfXtcbGlzdG5hbWUgO31cbGlzdGlkMTM0NzkwNTYwMn17XGxpc3RcbGlzdHRlbXBsYXRlaWQtMXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0Mzd7XGxldmVsdGV4dCBcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxiXGNmMFxmaS03MjBcbGkxMDIwXGxpbjEwMjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwM1wnMDAuXCcwMTt9e1xsZXZlbG51bWJlcnNcJzAxXCcwMzt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxiXGNmMFxmaS03MjBcbGkxNzQwXGxpbjE3NDB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktNzIwXGxpMjY1M1xsaW4yNjUzfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTcyMFxsaTM1NjZcbGluMzU2Nn17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdTgyMjZcJzk1O317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS03MjBcbGk0NDgwXGxpbjQ0ODB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktNzIwXGxpNTM5M1xsaW41MzkzfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTcyMFxsaTYzMDZcbGluNjMwNn17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdTgyMjZcJzk1O317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS03MjBcbGk3MjIwXGxpbjcyMjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktNzIwXGxpODEzM1xsaW44MTMzfXtcbGlzdG5hbWUgO31cbGlzdGlkMTU3Njg5MjUyM317XGxpc3RcbGlzdHRlbXBsYXRlaWQtMXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0NntcbGV2ZWx0ZXh0IFwnMDFcJzAwO317XGxldmVsbnVtYmVyc1wnMDE7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktNzIwXGxpMTc0MFxsaW4xNzQwfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDNcJzAwLlwnMDE7fXtcbGV2ZWxudW1iZXJzXCcwMVwnMDM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcYlxjZjBcZmktNzIwXGxpMTc0MFxsaW4xNzQwfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTcyMFxsaTMzODRcbGluMzM4NH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdTgyMjZcJzk1O317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS03MjBcbGk0MjA2XGxpbjQyMDZ9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktNzIwXGxpNTAyOFxsaW41MDI4fXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTcyMFxsaTU4NTBcbGluNTg1MH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdTgyMjZcJzk1O317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS03MjBcbGk2NjcyXGxpbjY2NzJ9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktNzIwXGxpNzQ5NFxsaW43NDk0fXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTcyMFxsaTgzMTZcbGluODMxNn17XGxpc3RuYW1lIDt9XGxpc3RpZDE2MDQyMTc2NDJ9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkLTF7XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDN7XGxldmVsdGV4dCBcJzAxXCcwMDt9e1xsZXZlbG51bWJlcnNcJzAxO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTM2MDFcbGk1MzQxXGxpbjUzNDF9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQze1xsZXZlbHRleHQgXCcwM1wnMDAuXCcwMTt9e1xsZXZlbG51bWJlcnNcJzAxXCcwMzt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS0zNjAxXGxpNTM0MVxsaW41MzQxfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MTd7XGxldmVsdGV4dCBcJzA1XCcwMC5cJzAxLlwnMDI7fXtcbGV2ZWxudW1iZXJzXCcwMVwnMDNcJzA1O31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMFxmaS0zNjAxXGxpNTM0MVxsaW41MzQxfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTM2MDFcbGk2NzI2XGxpbjY3MjZ9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktMzYwMVxsaTcxODhcbGluNzE4OH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdTgyMjZcJzk1O317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS0zNjAxXGxpNzY1MFxsaW43NjUwfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTM2MDFcbGk4MTEyXGxpbjgxMTJ9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktMzYwMVxsaTg1NzRcbGluODU3NH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdTgyMjZcJzk1O317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS0zNjAxXGxpOTAzNlxsaW45MDM2fXtcbGlzdG5hbWUgO31cbGlzdGlkMTY5NTQ5OTY4M317XGxpc3RcbGlzdHRlbXBsYXRlaWQtMXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDMoXCcwMCk7fXtcbGV2ZWxudW1iZXJzXCcwMjt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjBcZmktNzIxXGxpMzE4MVxsaW4zMTgxfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTcyMVxsaTM4NThcbGluMzg1OH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdTgyMjZcJzk1O317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS03MjFcbGk0NTM2XGxpbjQ1MzZ9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktNzIxXGxpNTIxNFxsaW41MjE0fXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTcyMVxsaTU4OTJcbGluNTg5Mn17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdTgyMjZcJzk1O317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS03MjFcbGk2NTcwXGxpbjY1NzB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktNzIxXGxpNzI0OFxsaW43MjQ4fXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTcyMVxsaTc5MjZcbGluNzkyNn17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdTgyMjZcJzk1O317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS03MjFcbGk4NjA0XGxpbjg2MDR9e1xsaXN0bmFtZSA7fVxsaXN0aWQxNzUyMDQ1NTIyfXtcbGlzdFxsaXN0dGVtcGxhdGVpZC0xe1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQ2e1xsZXZlbHRleHQgXCcwMVwnMDA7fXtcbGV2ZWxudW1iZXJzXCcwMTt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS03MjBcbGkxNzQwXGxpbjE3NDB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwM1wnMDAuXCcwMTt9e1xsZXZlbG51bWJlcnNcJzAxXCcwMzt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxiXGNmMFxmaS03MjBcbGkxNzQwXGxpbjE3NDB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktNzIwXGxpMzM4NFxsaW4zMzg0fXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTcyMFxsaTQyMDZcbGluNDIwNn17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdTgyMjZcJzk1O317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS03MjBcbGk1MDI4XGxpbjUwMjh9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktNzIwXGxpNTg1MFxsaW41ODUwfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTcyMFxsaTY2NzJcbGluNjY3Mn17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdTgyMjZcJzk1O317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS03MjBcbGk3NDk0XGxpbjc0OTR9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktNzIwXGxpODMxNlxsaW44MzE2fXtcbGlzdG5hbWUgO31cbGlzdGlkMjAzMTcxMjI3Mn17XGxpc3RcbGlzdHRlbXBsYXRlaWQtMXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0NXtcbGV2ZWx0ZXh0IFwnMDFcJzAwO317XGxldmVsbnVtYmVyc1wnMDE7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktMzYwMVxsaTUzNDFcbGluNTM0MX17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDN7XGxldmVsdGV4dCBcJzAzXCcwMC5cJzAxO317XGxldmVsbnVtYmVyc1wnMDFcJzAzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTM2MDFcbGk1MzQxXGxpbjUzNDF9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxM3tcbGV2ZWx0ZXh0IFwnMDVcJzAwLlwnMDEuXCcwMjt9e1xsZXZlbG51bWJlcnNcJzAxXCcwM1wnMDU7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcY2YwXGZpLTM2MDFcbGk1MzQxXGxpbjUzNDF9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktMzYwMVxsaTY3MjZcbGluNjcyNn17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdTgyMjZcJzk1O317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS0zNjAxXGxpNzE4OFxsaW43MTg4fXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTM2MDFcbGk3NjUwXGxpbjc2NTB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktMzYwMVxsaTgxMTJcbGluODExMn17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdTgyMjZcJzk1O317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS0zNjAxXGxpODU3NFxsaW44NTc0fXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTM2MDFcbGk5MDM2XGxpbjkwMzZ9e1xsaXN0bmFtZSA7fVxsaXN0aWQyMDkwNTQ0MTk1fXtcbGlzdFxsaXN0dGVtcGxhdGVpZC0xe1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxOXtcbGV2ZWx0ZXh0IFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGJcZnMyMlxjZjBcZmktNzIwXGxpMTAyMFxsaW4xMDIwfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDNcJzAwLlwnMDE7fXtcbGV2ZWxudW1iZXJzXCcwMVwnMDM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcYlxmczIyXGNmMFxmaS03MjBcbGkxNzQwXGxpbjE3NDB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMyhcJzAyKTt9e1xsZXZlbG51bWJlcnNcJzAyO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMFxmaS03MjBcbGkyNDYwXGxpbjI0NjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMyhcJzAzKTt9e1xsZXZlbG51bWJlcnNcJzAyO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMFxmaS03MjBcbGkyNzg1XGxpbjI3ODV9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktNzIwXGxpMjc4MFxsaW4yNzgwfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTcyMFxsaTM5NzZcbGluMzk3Nn17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdTgyMjZcJzk1O317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmczIyXGNmMFxmaS03MjBcbGk1MTczXGxpbjUxNzN9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHU4MjI2XCc5NTt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZnMyMlxjZjBcZmktNzIwXGxpNjM3MFxsaW42MzcwfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1ODIyNlwnOTU7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGZzMjJcY2YwXGZpLTcyMFxsaTc1NjZcbGluNzU2Nn17XGxpc3RuYW1lIDt9XGxpc3RpZDIwOTA1NDQxOTZ9fXtcKlxsaXN0b3ZlcnJpZGV0YWJsZSB7XGxpc3RvdmVycmlkZVxsaXN0aWQ1Njk2NTUxNDFcbGlzdG92ZXJyaWRlY291bnQwXGxzMX17XGxpc3RvdmVycmlkZVxsaXN0aWQxMTQ2NzgxMjIzXGxpc3RvdmVycmlkZWNvdW50MFxsczJ9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkMjAzMTcxMjI3MlxsaXN0b3ZlcnJpZGVjb3VudDBcbHMzfXtcbGlzdG92ZXJyaWRlXGxpc3RpZDE2MDQyMTc2NDJcbGlzdG92ZXJyaWRlY291bnQwXGxzNH17XGxpc3RvdmVycmlkZVxsaXN0aWQxNTc2ODkyNTIzXGxpc3RvdmVycmlkZWNvdW50MFxsczV9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkMzE3MzAwNTJcbGlzdG92ZXJyaWRlY291bnQwXGxzNn17XGxpc3RvdmVycmlkZVxsaXN0aWQyMDkwNTQ0MTk1XGxpc3RvdmVycmlkZWNvdW50MFxsczd9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkNTM1NTg0NjQ3XGxpc3RvdmVycmlkZWNvdW50MFxsczh9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkMTY5NTQ5OTY4M1xsaXN0b3ZlcnJpZGVjb3VudDBcbHM5fXtcbGlzdG92ZXJyaWRlXGxpc3RpZDEyNzI4MjUzXGxpc3RvdmVycmlkZWNvdW50MFxsczEwfXtcbGlzdG92ZXJyaWRlXGxpc3RpZDEzNDc5MDU2MDJcbGlzdG92ZXJyaWRlY291bnQwXGxzMTF9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkMTc1MjA0NTUyMlxsaXN0b3ZlcnJpZGVjb3VudDBcbHMxMn17XGxpc3RvdmVycmlkZVxsaXN0aWQ1MDAxMjIzMThcbGlzdG92ZXJyaWRlY291bnQwXGxzMTN9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkNTU5MDk3OTMxXGxpc3RvdmVycmlkZWNvdW50MFxsczE0fXtcbGlzdG92ZXJyaWRlXGxpc3RpZDM4ODMwMzI0NFxsaXN0b3ZlcnJpZGVjb3VudDBcbHMxNX17XGxpc3RvdmVycmlkZVxsaXN0aWQ2MTM4Mjk3MzdcbGlzdG92ZXJyaWRlY291bnQwXGxzMTZ9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkNDAxMjE3MDgzXGxpc3RvdmVycmlkZWNvdW50MFxsczE3fXtcbGlzdG92ZXJyaWRlXGxpc3RpZDUxMDQxNzU3OFxsaXN0b3ZlcnJpZGVjb3VudDBcbHMxOH17XGxpc3RvdmVycmlkZVxsaXN0aWQxMTgzNTkxNjg2XGxpc3RvdmVycmlkZWNvdW50MFxsczE5fXtcbGlzdG92ZXJyaWRlXGxpc3RpZDQwMDMwMDAzOVxsaXN0b3ZlcnJpZGVjb3VudDBcbHMyMH17XGxpc3RvdmVycmlkZVxsaXN0aWQyMDkwNTQ0MTk2XGxpc3RvdmVycmlkZWNvdW50MFxsczIxfX17XHN0eWxlc2hlZXQge1xxbFxmczIyXGNmMCBOb3JtYWw7fXtcczFcc2Jhc2Vkb24wXHFsXGYxXGZzMThcY2YwIEJhbGxvb24gVGV4dDt9e1xzMlxzYmFzZWRvbjBccWxcZnMyMlxjZjAgVGFibGUgUGFyYWdyYXBoO317XHMzXHNiYXNlZG9uMFxxalxmaS03MjBcbGkxNzQwXGxpbjE3NDBcZnMyMlxjZjAgTGlzdCBQYXJhZ3JhcGg7fXtcczRcc2Jhc2Vkb24wXHFsXGNmMCBCb2R5IFRleHQ7fXtcczVcc2Jhc2Vkb24wXHFsXGxpMTAyMFxsaW4xMDIwXG91dGxpbmVsZXZlbDBcYlxjZjAgaGVhZGluZyAxO317XCpcY3M2XGZzMjJcY2YwIERlZmF1bHQgUGFyYWdyYXBoIEZvbnQ7fXtcKlxjczdcc2Jhc2Vkb242XGZzMjJcY2YwIExpbmUgTnVtYmVyO317XCpcY3M4XHNiYXNlZG9uNlx1bFxmczIyXGNmMSBIeXBlcmxpbms7fXtcKlxjczlcc2Jhc2Vkb242XGZzMjJcY2YyXGNoY2JwYXQzIFVucmVzb2x2ZWQgTWVudGlvbjt9e1wqXGNzMTBcc2Jhc2Vkb242XHNsaW5rMVxmMVxmczE4XGNmMCBCYWxsb29uIFRleHQgQ2hhcjt9fVxzZWN0ZFxtYXJnbHN4bjExNDBcbWFyZ3JzeG4xMTQwXG1hcmd0c3huMTM2MFxtYXJnYnN4bjI4MFxoZWFkZXJ5NzIwXGZvb3Rlcnk3MjBccGduaG5zcFxwZ25zdGFydHM1MFxwZ25yZXN0YXJ0XGNvbHN4NzIwXHBhcmRccGxhaW5ccWxcbGkzMDBcbGluMzAwXG5vd2lkY3RscGFyXHNsLTE5MlxzbG11bHQwXHNiNzl7XGYyXGZzMTZcY2YwICB9XGYyXGZzMTZccGFyXHBhcmRccGxhaW5ccWxcbGkzMDBcbGluMzAwXG5vd2lkY3RscGFyXHNsLTE5MlxzbG11bHQwe1xmMlxmczE2XGNmMCAgfVxmMlxmczE2XHBhcntcbGlzdHRleHRccGFyZCAxOS5cdGFiIH1ccGFyZFxwbGFpblxpbHZsMFxsczIxXHM1XHFsXGZpLTcyMFxsaTEwMjBcbGluMTAyMFxub3dpZGN0bHBhclxvdXRsaW5lbGV2ZWwwXHNsLTI3NlxzbG11bHQwXHR4NzMze1wqXGJrbWtzdGFydCBfR29CYWNrfXtcKlxia21rZW5kIF9Hb0JhY2t9e1xiXGNmMCBOT04tV0FJVkVSIEFORCBGVVRVUkUgREVGQVVMVH1cYlxwYXJccGFyZFxwbGFpblxzNFxxbFxub3dpZGN0bHBhclxzYjEwXGJcZnMyMFxwYXJccGFyZFxwbGFpblxzNFxxalxsaTg0MFxsaW44NDBccmkyOTlccmluMjk5XG5vd2lkY3RscGFye1xjZjAgTm8gd2FpdmVyIGJ5IGVpdGhlciBUcmFuc3BvcnRlciBvciBTaGlwcGVyIG9mIGFueSBvbmUgb3IgbW9yZSBkZWZhdWx0cyBieSB0aGUgb3RoZXIgaW4gdGhlIHBlcmZvcm1hbmNlIG9mIGFueSBwcm92aXNpb25zIG9mIHRoZSBUcmFuc3BvcnRhdGlvbiBBZ3JlZW1lbnQgc2hhbGwgb3BlcmF0ZSBvciBiZSBjb25zdHJ1ZWQgYXMgYSB3YWl2ZXIgb2YgYW55IGZ1dHVyZSBkZWZhdWx0IG9yIGRlZmF1bHRzLCB3aGV0aGVyIG9mIGEgbGlrZSBvciBvZiBhIGRpZmZlcmVudCBjaGFyYWN0ZXIufVxwYXJccGFyZFxwbGFpblxzNFxxbFxub3dpZGN0bHBhclxmczI2XHBhclxwYXJkXHBsYWluXHFsXGxpMzAwXGxpbjMwMFxub3dpZGN0bHBhclxzYjIxOHtcZjJcZnMxNlxjZjAgIH1cZjJcZnMxNlxwYXJ9</record_binary_data>
      <record_plain_text>19.	NON-WAIVER AND FUTURE DEFAULT

No waiver by either Transporter or Shipper of any one or more defaults by the other in the performance of any provisions of the Transportation Agreement shall operate or be construed as a waiver of any future default or defaults, whether of a like or of a different character.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>28</record_id>
      <option_code>A</option_code>
      <record_title>GTC - 20.  Schedules and Contract Subject to Regulation</record_title>
      <record_content_desc>Baseline Tariff Refile</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>509924512</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>20.	SCHEDULES AND CONTRACT SUBJECT TO REGULATION

This Tariff, including these General Terms and Conditions and the respective obligations of the parties under a Transportation Agreement, are subject to valid laws, orders, rules, and regulations of duly constituted authorities having jurisdiction and are subject to change from time to time by addition, amendment, or substitution as provided by law.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>29</record_id>
      <option_code>A</option_code>
      <record_title>GTC - 21.  Operating Information and Estimates</record_title>
      <record_content_desc>Baseline Tariff Refile</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>528773568</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>21.	OPERATING INFORMATION AND ESTIMATES

At Transporter’s request, any Shipper which has executed a Transportation Agreement with Transporter shall furnish to Transporter estimates of the daily, monthly, or annual quantities of Gas that Shipper desires Transporter to transport for Shipper.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>38</record_id>
      <option_code>A</option_code>
      <record_title>GTC - 30. Incorporation in Rate Schedules and Service Agreem</record_title>
      <record_content_desc>Baseline Tariff Refile</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>698415072</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>30.	INCORPORATION IN RATE SCHEDULES AND TRANSPORTATION AGREEMENTS

These General Terms and Conditions are incorporated in and are a part of Transporter’s Rate Schedules and Transportation Agreements. To the extent there is any inconsistency between terms in these General Terms and Conditions and terms in Transporter’s Rate Schedule or Transportation Agreements, these General Terms and Conditions shall govern.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>40</record_id>
      <option_code>A</option_code>
      <record_title>GTC - 32.  Default and Termination</record_title>
      <record_content_desc>Baseline Tariff Refile</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>736113184</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>32.	DEFAULT AND TERMINATION

32.1	Except where different procedures for termination of a Transportation Agreement are expressly provided in the General Terms and Conditions, if Transporter or Shipper shall fail to perform any of the covenants or obligations imposed upon it under any Transportation Agreement into which these General Terms and Conditions are incorporated, then in such event the other party may, at its option, terminate such Transportation Agreement by proceeding as follows: The party not in default shall cause a written notice to be served on the party in default stating specifically the default under the Transportation Agreement and declaring it to be the intention of the party giving the notice to terminate such Transportation Agreement; thereupon the party in default shall have ten (10) days after the service of the aforesaid notice in which to remedy or remove the cause or causes stated in the default notice, and if within said ten (10)-day period the party in default does so remove and remedy said cause or causes and fully indemnifies the party not in default, such default notice shall be withdrawn and the Transportation Agreement shall continue in full force and effect.

32.2	In the event the party in default does not so remedy and remove the cause or causes, or does not indemnify the party giving the default notice for any and all consequences of such default within the said period of ten (10) days, then, at the option of the party giving such default notice, the Transportation Agreement shall terminate.

Any termination of the Transportation Agreement pursuant to the provisions of this Section 32 shall be without prejudice to the right of Transporter to collect any amounts then due to it for Gas delivered or service provided prior to the date of termination, and shall be without prejudice to the right of Shipper to receive any Gas which it has not received but the transportation of which has been paid prior to the date of termination, and without waiver of any other remedy to which the party not in default may be entitled for breaches of the Transportation Agreement.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>37</record_id>
      <option_code>A</option_code>
      <record_title>GTC - 29. Trans Svs Agreement Ext and Right of First Refusal</record_title>
      <record_content_desc>Baseline Tariff Refile</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>679566016</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>29.	TRANSPORTATION AGREEMENT EXTENSION AND RIGHT OF FIRST REFUSAL

29.1	If a Shipper, prior to the expiration of a Firm Transportation Agreement which is at the maximum recourse rate for a term of twelve (12) or more consecutive months of service, or for a negotiated rate contract elects to extend the Firm Transportation Agreement for less than the automatic extension period provided therein, or if the Firm Transportation Agreement which is at the maximum recourse rate for a term of twelve (12) or more consecutive months of service contains no automatic extension provision, Transporter at its option shall either accept Shipper’s requested extension period, or shall require Shipper to exercise its right of first refusal ("ROFR") by making the capacity under the Firm Transportation Agreement available in accordance with the following procedures. Transporter shall post the capacity for bidding on its Web Site no later than 280 days prior to the expiration of Shipper’s Firm Transportation Agreement. The capacity will remain posted on the Web Site for a minimum of twenty (20) days (“ROFR Bidding Period”) with such posting containing the following information with respect to the capacity:

(a)	Daily and other applicable quantity limitations of capacity available;

(b)	Receipt and Delivery Points;

(c)	Maximum reservation charge;

(d)	Any applicable restrictions; and

(e)	The last day of the ROFR Bidding Period.

Transporter may require bidders to insure that offers are bona fide by providing financial assurances satisfactory to Transporter.

A Shipper’s ROFR rights apply only when the Shipper is seeking to contract for its entire geographic historical Contracted Capacity, however a Shipper may elect to retain a portion of its Contracted Capacity subject to ROFR rights, in which case Transporter’s pregranted abandonment authority would apply to the remainder of the service.

Upon conclusion of the ROFR Bidding Period, Transporter shall evaluate the bids in accordance with the procedures set forth in Section 26.5(e) of the General Terms and Conditions, provided that the term used for purposes of the formula will be the lesser of the term proposed by the bidder or five (5) years; and provided further that any bid rate higher than the maximum applicable recourserate shall be deemed to be equal to the maximum applicable recourse rate. Transporter shall not be required to accept any bid at less than Transporter’s maximum applicable recourse rate.

29.2	If Transporter receives no bids, or if Transporter receives no bids at its maximum applicable recourse rate and Transporter determines not to accept any bids below the maximum applicable recourse rate, Transporter shall notify Shipper of the bid having the highest value to Transporter (“Highest Bid”), or that no bids were received. If Transporter receives a bid at its maximum applicable recourse rate, or if it accepts any bid below the maximum applicable recourse rate, Transporter shall, within five days of the close of the ROFR Bidding Period, inform Shipper of the offer to purchase capacity solicited pursuant to Section 29.1 herein that Transporter intends to accept. Shipper shall have twenty-five (25) days after receiving notice to notify Transporter as to whether it will match the Highest Bid in terms of price, quantity and duration. If the Shipper elects to match the Highest Bid, it must execute a new Transportation Agreement that contains the terms of the Highest Bid; provided, however, that Shipper shall not be required to pay any rate higher than the maximum applicable recourse rate. If the Shipper fails to match the offer presented by Transporter, Transporter shall enter into a Firm Transportation Agreement with the Person submitting the competing offer.

29.3	Transporter shall post any matched offer below the maximum applicable recourse rate on its Web Site for an additional twenty-five (25) days, during which time bids may be submitted at a higher price. Shipper will be given an opportunity to match any higher bid. This process will repeat until Shipper agrees to pay Transporter’s maximum applicable recourse rate, the Shipper fails to match an offer, or no higher bid is submitted. The iterative process shall not extend for greater than 120 days from the initial posting of a matched offer pursuant to this Section 29.4.  At the expiration of such 120 day period, the most recent offer shall be accepted.

29.4	If Transporter receives no bids at the maximum applicable recourse rate and Transporter refuses to accept a lower bid, Transporter may abandon service to Shipper, unless Shipper agrees to pay the maximum applicable recourse rate for a period of one (1) year, or if Transporter and Shipper negotiate the terms and conditions of a Firm Transportation Agreement extension.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>34</record_id>
      <option_code>A</option_code>
      <record_title>GTC - 26. Release and Assignment of Firm Transportation Serv</record_title>
      <record_content_desc>Section 26 Revisions</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>623018848</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>26.	RELEASE AND ASSIGNMENT OF FIRM TRANSPORTATION SERVICES

26.1	Applicability. This Section 26 is applicable to any Shipper that holds rights to firm transportation that elects to temporarily release or permanently assign all or a portion of such firm transportation rights (“Releasing Shipper”). For purposes hereof, the term “transportation,” “transportation service” or “transportation rights” shall include firm transportation service offered under Rate Schedule FT, and the term “release” or “released” shall apply to permanent assignments as well as temporary releases unless otherwise noted. A Releasing Shipper shall have the right to release any portion of its firm transportation rights and obligations, but only to the extent that the rights so released are acquired by another party pursuant to the provisions of this Section 26 and that party executes either a Released Transportation Service Agreement for a temporary release or a Firm Transmission Service Agreement for a permanent assignment. Such party shall be referred to herein as “Replacement Shipper.” A person that desires to bid on and obtain firm transportation rights released under the provisions of this Section 26 shall be known as a “Bidder.”

26.2	(a)    Prior to the commencement of service pursuant to any Release Request,    the Replacement Shipper shall submit evidence that the Replacement Shipper meets the creditworthiness requirement of Section 28 of the General Terms and Conditions, unless the Releasor requests Transporter to waive the application of such requirement for a Prearranged Bidder and for other Bidders on a non-discriminatory basis and provides Transporter with a guarantee satisfactory to Transporter of all financial obligations of the Replacement Shipper under its Released Transportation Agreement prior to commencement of service to Replacement Shipper.

(b)	Subject to any restrictions in the original release, a Replacement Shipper shall be allowed to release the capacity under its Transportation Service Agreement, provided that the original release was not volumetrically based.

(c)	The Capacity Release timeline applies to all parties involved in the Capacity Release process provided that: (1) all information provided by the parties to the transaction is valid and the acquiring shipper has been determined to be credit worthy before the capacity release bid is tendered,
(2) for index-based capacity release transactions, the Releasing Shipper has provided Transporter with sufficient instructions to evaluate the corresponding bid(s) according to the timeline, and (3) there are no special terms or conditions of the release. Further, Transporter may complete the capacity release process on a different timeline if the Offer includes
unfamiliar or unclear terms and conditions (e.g. designation of an index not supported by Transporter).

(d)	For biddable releases (one (1) year or less):

-	Offers should be tendered such that they can be posted by 9:00 A.M. on a Business Day;
-	Open season ends at 10:00 A.M. on the same or a subsequent Business Day
-	Evaluation period begins at 10:00 A.M. during which any contingencies are eliminated, determination of best Bid is made, and ties are broken);
-	If no match is required, the evaluation period ends and Award is posted by 11:00 A.M.
-	Where match is required, the match is communicated by 11:00 A.M., match response occurs by 11:30 A.M., and the Award is posted by 12:00 P.M.
-	Contract is issued within one hour of Award posting (with a new contract number, when applicable);
-	Nomination is possible beginning at the next available nomination cycle for the effective date of the contract. (Central Clock Time)
For biddable releases (more than one (1) year):
-	Offers should be tendered such that they can be posted by 9:00 A.M. on a Business Day;
-	Open season shall include no less than three 9:00 A.M. to 10:00 A.M. time periods on consecutive Business Days;
-	Evaluation period begins at 10:00 A.M. during which any contingencies are eliminated, determination of best bid is made, and ties are broken;
-	If no match is required, evaluation period ends and Award is posted by 11:00 A.M.;
-	Where match is required, the match is communicated by 11:00 A.M., match response occurs by 11:30 A.M., and the Award is posted by 12:00 P.M.
-	Contract is issued within one hour of Award posting (with a new contract number, when applicable);
-	Nomination is possible beginning at the next available nomination cycle for the effective date of the contract. (Central Clock Time)
For non-biddable releases:
-	The posting of prearranged deals that are not subject to bid are due no later than one hour prior to the nomination deadline for the applicable cycle, pursuant to NAESB Standard 1.3.2. The posting deadlines are:
Timely Cycle	12:00 noon
Evening Cycle	5:00 P.M.
Intraday 1 Cycle	9:00 P.M.
Intraday 2 Cycle	1:30 P.M.
Intraday 3 Cycle	6:00 P.M.
-	The contract is issued within one hour of Award posting (with a new contract number, when applicable);
-	Nomination is possible beginning at the next available nomination cycle for the effective date of the contract. (Central Clock Time)

26.3	Submission of Release Documents. Parties shall submit all necessary information, release requests and bids to Transporter for its information via facsimile and/or electronic means acceptable to Transporter.

(a)	In the case of prearranged releases, the Releasing Shipper shall submit a release request containing the following: (i) the Release Quantity; (ii) the bid rate; (iii) the term of the release; (iv) the commencement date; (v) the expiration date; (vi) the name, address and signature of both the Releasing Shipper and the Replacement Shipper; and (vii) any additional conditions of the release.

(b)	In the case of releases subject to bidding, the Releasing Shipper shall submit a release request containing the following: (i) the Release Quantity;
(i)	any minimum bid rate; (iii) the term of the release; (iv) the commencement date; (v) the expiration date; (vi) the name, address and signature of the Releasing Shipper; and (vii) any additional conditions of the release.

(c)	In the case of index-based capacity releases, prior to submitting a release request, the Releasing Shipper shall inform Transporter of (i) the preferred method for bidding, (ii) the rate floor, and (iii) the preferred price index references.

26.4	Marketing of Released Capacity. Transporter shall have no obligation to market any capacity available to be released by a Releasing Shipper. Transporter, however, may agree to market capacity for a Releasing Shipper and may negotiate a fee with the Releasing Shipper for such service. Any marketing services rendered by Transporter will be provided on a non-discriminatory basis.

26.5	Further Conditions on Release of Transportation.

(a)	Persons participating in this release program agree to be bound by and shall comply with the terms and conditions of this Tariff, and all applicable Commission rules, orders and regulations.

(b)	All terms and conditions in all Release Requests must be objectively
stated, applicable to all Bidders and non-discriminatory.

(c)	The minimum term for release shall be one day and the maximum term shall be the remaining term of the Releasing Shipper’s transportation service agreement.

(d)	The maximum rates for any release shall be the applicable maximum reservation charge and usage charge, as well as all other applicable rates, charges, end surcharges set forth in this Tariff, notwithstanding any discount to such rates, charges or surcharges then in effect for the Releasing Shipper, provided that, for short-term releases of one (1) year or less, a Releasing Shipper may charge more than the applicable maximum filed rate subject to conditions established by the Commission. For less than maximum rate transactions only, converting daily rate to monthly rate is accomplished by multiplying the daily rate times 365; dividing the result by twelve (12); and taking the remainder out of five (5) decimal places and rounding up or down to the transporter’s specified decimal place. Converting a monthly rate to a daily rate is accomplished by multiplying the monthly rate times twelve (12); dividing the result by 365; and taking the remainder out of five (5) decimal places and rounding up or down to the transporter’s specified decimal place.

(e)	Terms and Conditions, Posting, and Bidding.

(i)	All terms and conditions of all releases must be consistent with the terms and conditions of the Releasing Shipper’s transportation service agreement and with this Tariff, including the provisions on nominations and scheduling of transportation and curtailment of service.

(ii)	Bids are binding until notice of withdrawal is received by Transporter on its Customer Activities Web Site. Offers are binding until notice of withdrawal is received by Transporter on its Customer Activities Web Site. Bids cannot be withdrawn after the bid period ends. The releasing party has the right to withdraw its Offer during the bid period, where unanticipated circumstances justify and no minimum Bid has been made.

(iii)	Transporter will post Offers and Bids, including prearranged deals, upon receipt. A Releasing Shipper may request a later posting time for posting of such Offer, and Transporter will support such request insofar as it comports with the standard Capacity Release timeline specified in NAESB WGQ Standard No. 5.3.2.

(iv)	A Releasing Shipper may not specify an extension of the original bid period or the pre-arranged deal match period, without posting a new release.
(v)	Releasing Shipper may specify dollars and cents or percents of maximum tariff rate in the denomination of bids. Once the choice is made by the Releasing Shipper, the bids should comport with the choice.

(vi)	For the capacity release business process timing model, only the following methodologies are required to be supported by Transporter and provided to Releasing Shippers as choices from which they may select and, once chosen, should be used in determining the Awards from the bid(s) submitted. They are: (1) highest rate, (2) net revenue and (3) present value. For index-based capacity release transactions, the Releasing Shipper should provide the necessary information and instructions to support the chosen methodology. Other choices of bid evaluation methodology (including other Releasing Shipper defined evaluation methodologies) can be accorded similar timeline evaluation treatment at the discretion of Transporter. However, Transporter is not required to offer other choices or similar timeline treatment for other choices, nor, is Transporter held to the timeline should the Releasing Shipper elect another method of evaluation.

(f)	If the Releasing Shipper wishes to recall capacity to be effective for a Gas Day, the notice should be provided to Transporter and the acquiring shipper no later than 8 A.M. Central Clock Time on nomination day. The Releasing Shipper may not effect a partial day recall of capacity. Such notification will confirm that the conditions of recall have been met and will be accompanied by the scheduling information required by Sections 5 and 7. A Releasing Shipper may specify in the Release Request whether the recalled capacity is to be reput to the original Replacement Shipper and the terms of the reput. These terms may be either: (i) reput must be accepted by the original Replacement Shipper for the original terms of the release or (ii) reput may be accepted at the option of the original Replacement Shipper for the original terms of the release. The Releasing Shipper may effect a reput by notifying Transporter and Replacement Shipper by 8:00 A.M. Central Clock Time on the day of the nomination deadline on the day prior to the effective date of the reput of entitlements to Replacement Shipper.

(g)	Notwithstanding anything herein to the contrary, all Releasing Shippers that release capacity shall remain responsible for payment of all demand charges for released transportation, unless Transporter consents to a permanent release after the Replacement Shipper submits all necessary information for a new service request, satisfies all creditworthiness requirements, and the Releasing and Replacement Shippers execute all necessary service agreements or amendments with Transporter. Transporter and Shipper may, in connection with their agreement to a Negotiated Rate under a firm transportation rate schedule, agree upon
Releasing Shipper payment obligations and crediting mechanisms in the event of a capacity release that vary from or are in addition to those set forth herein and in Sub-section (i) of this Section. The Releasing Shipper shall receive a demand credit equaling the demand dollars for which Transporter bills the Replacement Shipper. A demand rate for the purposes of this Section 26 consists of (i) the base demand rate, and (ii) all applicable surcharges. Any discount from said rate comes first off the surcharges and then off the base demand rate. Therefore a Releasing Shipper paying a discounted rate is only entitled to receive any revenues from the release of its capacity that exceed the amount of the applicable surcharges.

(h)	Transporter shall bill Replacement Shipper in accordance with Section 11 of the General Terms and Conditions based upon the rates, charges, and surcharges incorporated in the Released Transportation Service Agreement. The commodity charges for the Replacement Shipper will include the maximum commodity rate under the applicable rate schedule including all adjustments. If the Replacement Shipper fails to pay all or any portion of any bill by the due date specified on the bill, Transporter shall send an invoice to the Releasing Shipper for all unpaid amounts up to the amount of the Releasing Shipper’s reservation charge, which the Releasing Shipper shall pay to Transporter with interest on the unpaid amount, which interest shall be calculated from the date that Transporter credited the Releasing Shipper for the applicable demand charges in accord with (g) above. Releasing Shipper shall submit the payment within ten days of receipt of Transporter’s invoice. Releasing Shipper shall be responsible for obtaining reimbursement for any such payment from Replacement Shipper. Failure of either the Replacement Shipper or Releasing Shipper to pay bills shall entitle Transporter to exercise the remedies available under the applicable service agreements and this Tariff, including suspension of service to the Releasing Shipper and the Replacement Shipper, as well as any other remedies available to Transporter.

(i)	Except in case of permanent assignment, any increase in Transporter’s rates, charges, and surcharges shall remain the responsibility of the Releasing Shipper; provided, however, that the Releasing Shipper may provide in its Release Request for the rates, charges or surcharges for released service rights to increase in accordance with such increase in Transporter’s rates, charges, and surcharges. Any refunds of any rates or charges ordered by the FERC shall be paid by Transporter to the Releasing Shipper and/or the Replacement Shipper in the manner specified in the release request and incorporated in the Released Transportation Service Agreement.

(j)	Except in case of permanent assignment, the Replacement Shipper’s service under a Released Transportation Service Agreement shall be
subject to and governed by the terms and conditions of the Releasing Shipper’s transportation service agreement and governing rate schedule and the Released Transportation Service Agreement.

(k)	Except in case of permanent assignment, Transporter shall accept nominations, schedule transportation, afford priority of service, and curtail service based on instructions and communications from the Releasing Shipper and the Replacement Shipper that are consistent with one another and with the terms and conditions of the Tariff and their respective service agreements. If instructions or nominations from the Releasing Shipper and Replacement Shipper, in Transporter’s sole opinion, are inconsistent or conflicting, and if Transporter is unable to resolve the conflict prior to the time that it must take the required action, Transporter shall comply with the instructions of the Releasing Shipper; provided, however, that such instructions must not be inconsistent with the Tariff, in Transporter’s sole opinion. The Releasing Shipper will indemnify Transporter against any claim or suit by the Replacement Shipper, its successors or assigns, arising from any action taken by Transporter in reliance upon the Releasing Shipper’s nominations and instructions and will hold Transporter harmless for any action taken by Transporter in reliance upon the nominations and scheduling instructions of the Replacement Shipper. The Replacement Shipper will indemnify Transporter against any claim or suit by the Releasing Shipper, its successors or assigns, arising from any action taken by Transporter in reliance upon the nominations and scheduling instructions of the Replacement Shipper and will hold Transporter harmless for any actions taken by Transporter in reliance upon the instructions of the Releasing Shipper.

(1)	Replacement Shippers may not alter the underlying service agreement.
(m)	All transportation rights released hereunder shall be scheduled and curtailed as firm transportation service under Sections 6 and 7 of the General Terms and Conditions. Interruption or curtailment of such released service shall be in accordance with interruption or curtailment of firm service under this Tariff and as prescribed by the terms of the release.

(n)	Transporter will post offers to purchase released capacity upon receipt. The offer should include (i) the requester’s name and contact information;
(ii) the quantity desired; (iii) the maximum rate the requester will pay; (iv) the term; (v) the commencement date; (vi) the expiration date; (vii) the desired receipt and delivery points; (viii) whether the requester will accept a release with recall rights, and if so, what recall rights are acceptable; (ix) whether the requester’s request is contingent, and if so, the basis for the contingency; and (x) any additional conditions. Transporter will post such offers in the “Offers to Purchase Released Capacity” subcategory of the “Capacity” category of the Informational Postings on its website for a period of one month or until the transaction is effected, whichever is shorter.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>35</record_id>
      <option_code>A</option_code>
      <record_title>GTC - 27.  Request for Service</record_title>
      <record_content_desc>Baseline Tariff Refile</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>641867904</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>27.	REQUEST FOR SERVICE

Subject to any conditions set forth in the applicable Rate Schedules, this Section shall govern qualifications for receipt of service under Rate Schedules FT and IT.

27.1	Requests for Service

All Shippers requesting service from Transporter must provide the following information in writing to Transporter’s Customer Accounts Department at the following address:

1501 McKinney Street, Suite 800
Houston, Texas 77010

(a)	Shipper information:

(i)	Shipper’s legal name in full and DUNS number.

(ii)	Shipper’s mailing address for notices and billing.

(iii)	Shipper’s street address if different from above.

(iv)	The name(s), telephone number(s) and fax number(s) of Shipper employees responsible for nominations and/or dispatching.

(v)	The name(s), telephone number(s) and fax number(s) of Shipper employees responsible for payment of invoices.

(vi)	The name(s), telephone number(s) and fax number(s) of Shipper employees responsible for other matters.

(vii)	Whether the Shipper is affiliated with Trans-Union.

(b)	Type of service requested.

(c)	Requested Contract Quantity for FT or Maximum Daily Transportation Quantity for IT, stated in MMBtu per day (if applicable).

(d)	Estimated total quantities of Gas to be received and transported over the delivery period.

(e)	Requested date of commencement of service (if applicable).

Requested term of service (if applicable).(a)	Requested Receipt Point and Delivery Point, identified by NAESB Common Code, together with the name of the entity delivering Gas to Transporter and the name of the entity to receive Gas from Transporter (if applicable).

(b)	A copy of an executed agreement between Shipper and third party authorizing Shipper to act on behalf of the third party to secure the service requested. If Shipper requests service on behalf of a third party, Shipper shall provide the name, address, telephone number and primary business of the third party.

27.2	Allocation of Capacity

To the extent requests for firm service exceed the available capacity, capacity will be allocated based on highest bid as explained in Section 26.5(e)(vi) of the General Terms and Conditions, pro rata among equal bids.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>36</record_id>
      <option_code>A</option_code>
      <record_title>GTC - 28.  Creditworthiness</record_title>
      <record_content_desc>Baseline Tariff Refile</record_content_desc>
      <record_version_num>6.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>660716960</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-03-11</proposed_effective_date>
      <priority_order>700</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>28.	CREDITWORTHINESS

28.1	Condition of Service

Transporter shall not be required to perform or to continue to provide service under this FERC Gas Tariff on behalf of any Shipper who is or has become insolvent, or fails to meet payment obligations in accordance with Section 11 of this FERC Gas Tariff, or who, at Transporter’s request, fails, within a reasonable period to demonstrate creditworthiness or fails to provide adequate assurances of performance as such are defined in the Texas version of the Uniform Commercial Code (see, Vernon’s Texas Codes Annotated, Business and Commerce Code, Acts 1967, 60th Leg., Ch. 785, H.B. No. 293, UCC effective September 1, 1967). However, such Shipper may receive service under this FERC Gas Tariff if Shipper prepays for such service or furnishes good and sufficient security, as determined by Transporter in its reasonable discretion, an amount equal to the cost of performing the service requested by Shipper for a three (3) month period to include the cost of gas for permissible imbalance quantities. For purposes of this FERC Gas Tariff, the insolvency of a Shipper shall be evidenced by the filing by such Shipper or any parent entity thereof (hereinafter collectively referred to as “the Shipper” of a voluntary petition in bankruptcy or the entry of a decree or order by a court having jurisdiction in the premises adjudging the Shipper as bankrupt or insolvent, or approving as properly filed a petition seeking reorganization, arrangement, adjustment or composition of or in respect of the Shipper under the Federal Bankruptcy Act or any other applicable federal or state law, or appointing a receiver, liquidator, assignee, trustee, sequestrator (or other similar official) of the Shipper or of any substantial part of its property, or the ordering of the winding-up or liquidation of its affairs, with said order or decree continuing unstayed and in effect for a period of sixty (60) consecutive days. Notwithstanding the above and Section 11 of this FERC Gas Tariff, Transporter shall not suspend service to any Shipper, who is or has become insolvent, in a manner that is inconsistent with the Federal Bankruptcy Code.
28.2	Financial Information

At its reasonable discretion, Transporter may require Shipper to provide financial statements (to include a balance sheet, income statement and statement of cash flow). The statements should be the most current available as of the date they are submitted. If audited financial statements are not available, then Shipper also should provide an attestation by its chief financial officer that the information shown in the unaudited statements submitted is true, correct, and a fair representation of Shipper’s financial condition.Based on its review of Shipper’s financial statements, Transporter may, at its reasonable discretion, agree to waive any further credit requirements as a condition of service. Alternatively, Transporter may, at its reasonable discretion, require Shipper to provide additional evidence of its creditworthiness, in which event Shipper may elect to provide one of the following:

(a)	an irrevocable letter of credit in form and substance satisfactory to Transporter in a face amount equal to (i) the applicable transportation rate specified in Transporter’s Tariff for the service(s) which Transporter provides Shipper, (ii) multiplied by the maximum daily quantity specified in Transporter’s Transportation Agreement with Shipper, (iii) multiplied by ninety (90); or

(b)	a guarantee, in form and substance satisfactory to Transporter, executed by a person whom Transporter deems creditworthy, of Shipper’s performance of its obligations to Transporter under the Transportation Agreement; or

(c)	such other form of security as Shipper may agree to provide and as may be acceptable to Transporter.

This FERC Gas Tariff does not require Transporter to provide transportation service on behalf of any Shipper who fails to demonstrate creditworthiness. Transporter will treat the financial statements provided by Shipper as confidential.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>716</filing_id>
      <filing_title>Company name change</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-03-11</current_effective_date>
      <ferc_order_date>2020-02-26</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>3</record_id>
      <option_code>A</option_code>
      <record_title>Preliminary Statement</record_title>
      <record_content_desc>Part I.</record_content_desc>
      <record_version_num>7.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>38698112</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2024-03-01</proposed_effective_date>
      <priority_order>705</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>PART I. 
PRELIMINARY STATEMENT


BBT Trans-Union Interstate Pipeline, L.P. formerly known as Trans-Union Interstate Pipeline, L.P. ("Trans-Union" or "Transporter") is a limited partnership formed under the laws of the State of Delaware, with its principal place of business at 1501 McKinney Street, Suite 800, Houston, Texas 77010. Transporter is a "natural gas company" as defined by the Natural Gas Act ("NGA"), 15 U.S.C. Section;Section; 717-717w, and is subject to the jurisdiction of the Federal Energy Regulatory Commission ("Commission"). Transporter owns and operates a natural gas transmission system which extends from interconnections with Texas Gas Transmission, an interstate natural gas pipeline, Regency Intrastate Gas LLC, an intrastate pipeline, and Gulf South Pipeline Company, LLC, an interstate pipeline, at or near Sharon, Louisiana, and traverses through Louisiana and Arkansas 41.7 miles to its terminus near El Dorado, Arkansas.

Transporter is engaged in the business of transporting natural gas for shippers in interstate commerce on a firm and interruptible basis. The transportation of natural gas in interstate commerce is provided pursuant to a Certificate of Public Convenience and Necessity issued to Transporter by the Commission under Section 7(c) of the NGA, 15 U.S.C. Section; 717f(c) and pursuant to a blanket certificate issued to the Transporter for the activities specified in Part 284, Subpart G, of the Commission's regulations, as amended from time to time, 18 C.F.R. Part 284(G).

Trans-Union will undertake the transportation of natural gas only under written agreement(s) acceptable to Trans-Union upon consideration of existing commitments, operating conditions, and any other factors deemed pertinent by Trans-Union.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>2012024</filing_id>
      <filing_title>BBT Trans-Union Revised Tariff filing</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2024-03-01</current_effective_date>
      <ferc_order_date>2024-02-22</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>6</record_id>
      <option_code>A</option_code>
      <record_title>Rate Schedule FT</record_title>
      <record_content_desc>Part IV.</record_content_desc>
      <record_version_num>7.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>95245280</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2024-03-01</proposed_effective_date>
      <priority_order>705</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>PART IV. 
RATE SCHEDULE FT
FIRM TRANSPORTATION SERVICE


1.	AVAILABILITY

      This FT Rate Schedule is available to any party (hereinafter called "Shipper"), for firm transportation service under the authority and provisions of Part 284 of the regulations of the Federal Energy Regulatory Commission, provided that:

1.1	Transporter determines it has sufficient system capacity to render the firm transportation service and is able to provide said transportation.

1.2	Any construction, acquisition, or expansion of facilities necessary to commence and provide the firm transportation service has been completed.

1.3	Shipper has executed the FT Firm Transportation Agreement in the form contained in this FERC Gas Tariff for service under this Rate Schedule.

1.4	Shipper has made arrangements acceptable to Transporter for service on upstream transporters.

1.5	Shipper has satisfied the creditworthiness criteria in Section 28 of the General Terms and Conditions of Transporter's FERC Gas Tariff.

2.	APPLICABILITY AND CHARACTER OF SERVICE

2.1	Transportation service hereunder, through all or any portion of Transporter's system, will be firm, subject to the availability of capacity, to the provisions of an effective FT Firm Transportation Agreement, and to the General Terms and Conditions .

On each Day during the term of a FT Firm Transportation Agreement the Shipper shall be entitled to request service hereunder subject to this Rate Schedule and the General Terms and Conditions. Nominations for service shall be made pursuant to Section 5 of the General Terms and Conditions.  Service hereunder shall not   be subject to curtailment or interruption except as provided for herein and in Section 6 of the General Terms and Conditions.2.2	Transporter may refuse to render service hereunder if and for so long as Shipper is in default under its FT Firm Transportation Agreement or the General Terms and Conditions.

2.3	Transporter will receive for Shipper's account for transportation hereunder daily quantities of Gas up to Shipper's Contracted Capacity at the Sharon Receipt Point on Transporter's system. Such Contracted Capacity shall be specified in Shipper's Firm Transportation Agreement.

Transporter will deliver for Shipper's account, at the Delivery Point, MMBtus equivalent to the amount of MMBtus received by Transporter at the Receipt Point.

2.4	Transporter shall not be obligated to add any facilities or expand the capacity of its pipeline system in any manner in order to provide transportation service to Shipper pursuant to this Rate Schedule.

3.	RATES AND CHARGES

3.1	The applicable maximum and minimum rate for services hereunder are set forth in the currently effective Statement of Rates and Charges of this Tariff and are incorporated herein.  As set forth in the currently effective Statement of Rates and Charges, Transporter reserves the right to amend this FERC Gas Tariff and Rate Schedule at any time to make any GRI adjustments, and/or to recover any fuel or lost and unaccounted for gas.

3.2	Unless Transporter and Shipper agree in writing to a Negotiated Rate for service provided hereunder, the rates applicable to Shipper for service hereunder shall be the maximum Recourse Rates as set forth on the effective Statement of Rates and Charges. In negotiating rates with a Shipper, Trans-Union will negotiate rates in a manner that is not unduly discriminatory and that treats similarly situated shippers alike.

3.3	Effective as of the date of commencement of service, as provided for in the Firm Transportation Agreement, Transporter shall charge and Shipper shall pay for Transportation under this Rate Schedule each Month, or part thereof, if applicable, the sum of the following:

the applicable Negotiated or Recourse Reservation Charge, multiplied by Shipper's Contracted Capacity;

the applicable Negotiated or Recourse Usage Charge, multiplied by either
the total quantity actually delivered to the Shipper if OBAs are not in effect for Shipper's receipt and delivery points, or (ii) the scheduled quantity for Shipper's account where OBAs are in effect for Shipper's receipt and delivery points, within Contracted Capacity during the month,pursuant to Shipper's Firm Transportation Agreement; and

the Annual Charge Adjustment (ACA) set forth in the Statement of Rates and Charges.

4.	RECEIPT AND DELIVERY POINTS

4.1	The Receipt Point at which Transporter shall receive Gas for transportation hereunder shall be at Sharon, Louisiana, where Transporter will receive Shipper's Gas from Texas Gas Transmission, Regency Intrastate Gas LLC, and/or Gulf South Pipeline Company, LLC.

4.2	The Delivery Point at which Transporter may deliver Gas for Shipper's account under this Rate Schedule shall be near El Dorado, Arkansas, as stated in the   Firm Transportation Agreement.

5.	NOMINATIONS AND SCHEDULING OF RECEIPTS AND DELIVERIES
      If Shipper desires transportation of Gas on any day under this Rate Schedule, Shipper must nominate and schedule in accordance with Sections 5 and 7 of the General Terms and Conditions.

6.	OVERRUN QUANTITIES AND IMBALANCES

      Overrun quantities and imbalances associated with transportation under this Rate Schedule and Firm Transportation Agreements under this Rate Schedule shall be governed by and resolved pursuant to Section 9 of the General Terms and Conditions.

7.	RESERVATIONS

      Transporter reserves the right to take such actions as may be required to preserve the integrity of Transporter's system, including maintenance of service to other firm customers.

8.	GOVERNMENTAL AUTHORIZATIONS

      Transportation service under this Rate Schedule and effective Firm Transportation Agreements shall be implemented pursuant to any applicable self-implementing authorizations or program of the FERC for which Transporter has filed or in which Transporter has agreed to participate.

9.	GENERAL TERMS AND CONDITIONS

All of the General Terms and Conditions of Transporter's Tariff of which this Rate Schedule is a part are applicable to this Rate Schedule and service hereunder and are made a part hereof to the extent that such terms and conditions are not contradicted by any provision herein. In the event of a conflict between the General Terms and Conditions and the provisions of this Rate Schedule, the General Terms and Conditions shall control. In the event of a conflict between the General Terms and Conditions and any Firm Transportation Agreement, the General Terms and Conditions shall control.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>2012024</filing_id>
      <filing_title>BBT Trans-Union Revised Tariff filing</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2024-03-01</current_effective_date>
      <ferc_order_date>2024-02-22</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>7</record_id>
      <option_code>A</option_code>
      <record_title>Rate Schedule IT</record_title>
      <record_content_desc>Part V.</record_content_desc>
      <record_version_num>7.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>114094336</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2024-03-01</proposed_effective_date>
      <priority_order>705</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>PART V. 
RATE SCHEDULE IT
INTERRUPTIBLE TRANSPORTATION SERVICE

1.	AVAILABILITY

This IT Rate Schedule is available to any party (hereinafter called "Shipper"), for interruptible transportation service under the authority and provisions of Part 284 of the regulations of the Federal Energy Regulatory Commission, provided that:

1.1	Transporter determines it has sufficient system capacity to render the interruptible transportation service and is able to provide said transportation.

1.2	Any construction, acquisition, or expansion of facilities necessary to commence and provide the interruptible transportation service has been completed.

1.3	Shipper has executed the IT Interruptible Transportation Agreement in the form contained in this FERC Gas Tariff for service under this Rate Schedule.

1.4	Shipper has made arrangements acceptable to Transporter for service on upstream transporters.

1.5	Shipper has satisfied the creditworthiness criteria in Section 28 of the General Terms and Conditions of Transporter's FERC Gas Tariff.

2.	APPLICABILITY AND CHARACTER OF SERVICE

2.1	Service hereunder is available on any Day during a Year, and will be interruptible, as provided herein, and pursuant to the Shipper's Interruptible Transportation Agreement and Transporter's General Terms and Conditions, subject to the availability of capacity, Transporter's operating conditions and system requirements, the provisions of an effective IT Transportation Agreement, and to the General Terms and Conditions.

2.2	Transporter may refuse to render service hereunder if and for so long as Shipper is in default under its Interruptible Transportation Agreement, or under any Transportation Agreement with Transporter, or under the General Terms and Conditions.

Transporter will receive for Shipper's account for Transportation hereunder dailyquantities of Gas up to Shipper's Maximum Daily Transportation Quantity ("MDTQ"), as set forth in its Interruptible Transportation Agreement at the Receipt Point on Transporter's system available to Shipper pursuant to Shipper's Interruptible Transportation Agreement and the General Terms and Conditions. Such MDTQ shall be specified in Shipper's Interruptible Transportation Agreement. Transporter will deliver for Shipper's account, at the Delivery Point nominated by Shipper from the Delivery Point listed at Appendix A to Shipper's Transportation Agreement, MMBtus equivalent to the amount of MMBtus received by Transporter at the Receipt Point.

2.3	Transporter shall not be obligated to add any facilities or expand the capacity of its pipeline system in any manner in order to provide transportation service to Shipper pursuant to this Rate Schedule. Transporter is free to contract at  any time with other parties for new transportation services (whether firm or interruptible) without liability to Shipper for any resulting interruption or reduction of transportation service hereunder.

3.	RATES AND CHARGES

3.1	The applicable maximum and minimum unit rates for service hereunder are set forth in the currently effective Statement of Rates and Charges of this Tariff and are incorporated herein. As set forth in the currently effective Statement of Rates and Charges, Transporter reserves the right to amend this FERC Gas Tariff and Rate Schedule at any time to make any GRI adjustments, and/or to recover any fuel or lost and unaccounted for gas.

3.2	Unless Transporter and Shipper agree in writing upon a discounted rate for service provided hereunder, the rate applicable to Shipper for service hereunder shall be the applicable maximum interruptible rate as set forth on the effective Statement of Rates and Charges.

3.3	Effective as of the date of commencement of service, as provided for in the Interruptible Transportation Agreement, Transporter shall charge and Shipper shall pay Transporter for transportation service under this Rate Schedule and Shipper's Interruptible Transportation Agreement each Month the applicable rate under the Transportation Agreement, multiplied by either (i) the total quantity actually delivered to Shipper if OBAs are not in effect for Shipper's receipt and delivery points, or (ii) the scheduled quantity for Shipper's account where OBAs are in effect for Shipper's receipt and delivery points during the Month, plus the Annual Charge Adjustment as stated on the Statement of Rates and Charges.

4.	RECEIPT AND DELIVERY POINTS

The Receipt Point at which Transporter shall receive Gas for transportation hereunder shall be at Sharon, Louisiana, where Transporter will receive Shipper's Gas from Texas Gas Transmission, Regency Intrastate Gas LLC, and/or Gulf South Pipeline Company, LLC.

4.1	The Delivery Point at which Transporter may deliver Gas for Shipper's account under this Rate Schedule shall be near El Dorado, Arkansas, as stated in the Interruptible Transportation Agreement.

5.	NOMINATION AND SCHEDULING OF RECEIPTS AND DELIVERIES

If Shipper desires transportation of Gas on any Day under this Rate Schedule, Shipper must nominate and schedule service in accordance with Sections 5 and 7 of the General Terms and Conditions. If nominations exceed the capacity available for interruptible transportation service, the available capacity shall be apportioned, by price from highest to lowest, however a pro rata apportionment (based on the ratio of the quantity nominated by each individual Shipper and the total quantity nominated by all Shippers seeking Interruptible transportation service) will be used for Shippers paying the same rate.

6.	OVERRUN QUANTITIES AND IMBALANCES

Overrun quantities and imbalances associated with transportation under this Rate Schedule are governed by and resolved pursuant to Section 9 of the General Terms and Conditions.

7.	RESERVATIONS

Transporter reserves the right to take such actions as may be required to preserve the integrity of Transporter's system, including maintenance of service to firm customers.

8.	GOVERNMENTAL AUTHORIZATION

Transportation service under this Rate Schedule and Interruptible Transportation Agreements shall be implemented pursuant to any applicable self-implementing authorizations or program of the FERC for which Transporter has filed or in which Transporter has agreed to participate.

9.	GENERAL TERMS AND CONDITIONS

All of the General Terms and Conditions of Transporter's Tariff of which this Rate Schedule is a part are applicable to this Rate Schedule and service hereunder and are made a part hereof to the extent that such terms and conditions are not contradicted by any provision herein. In the event of a conflict between the General Terms and Conditions and the provisions of this Rate Schedule, the General Terms and Conditions shall control. In the event of a conflict between the General Terms and Conditions and any Interruptible Transportation Agreement, the General Terms and Conditions shall control.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>2012024</filing_id>
      <filing_title>BBT Trans-Union Revised Tariff filing</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2024-03-01</current_effective_date>
      <ferc_order_date>2024-02-22</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>9</record_id>
      <option_code>A</option_code>
      <record_title>Definitions</record_title>
      <record_content_desc>GTC - 1</record_content_desc>
      <record_version_num>7.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>151792448</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2024-03-01</proposed_effective_date>
      <priority_order>705</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>1.	DEFINITIONS

Except where the context expressly states another meaning, the following terms when used in this Tariff and in any Transportation Agreement or Rate Schedule incorporating this Tariff, shall be construed to have the following meanings:

1.1	"Affiliate", when used to indicate a relationship with a specific Person, means another Person that directly, or indirectly through one or more intermediaries or otherwise, controls, is controlled by, or is under common control with, such specific Person. A corporation shall be deemed to be an Affiliate of another corporation if one of them is directly or indirectly controlled by the other or if each of them is directly or indirectly controlled by the same Person.

1.2	"Authorized Overrun" is defined as a nomination made by a Shipper that exceeds its applicable Contracted Quantity which is accepted by Transporter. Authorized Overrun quantities are subject to an Authorized Overrun Charge as provided for in Section 9.2 of the General Terms and Conditions.

1.3	"Available Capacity" is the capacity in Transporter's system that is not subscribed or scheduled for service under the terms of Transporter's Rate Schedules.

1.4	"Btu" shall mean one (1) British Thermal Unit. As set forth in  Section 1.17 of the General Terms and Conditions, the reporting basis for Btu shall be 14.73 dry psia and 60 degrees F (101.325 kPa and 15 degrees C).

1.5	"Business Day" is defined as Monday through Friday, excluding Federal Banking Holidays for transactions in the U.S., and similar holidays for transactions occurring in Canada and Mexico.

1.6	"Central Clock Time" or "CCT" means Central Daylight Time when Daylight Savings Time is in effect and Central Standard Time otherwise.

1.7	"Contracted Capacity" means for customers receiving service pursuant to Rate Schedule FT, the daily quantity of Gas contracted by a Shipper and for which Shipper has agreed to pay a Reservation Charge in accordance with the terms and conditions of Shipper's Transportation Agreement. For customers receiving service pursuant to Rate Schedules IT, "Contracted Capacity" shall mean the quantity of Gas Transporter schedules and confirms for service on any given Day.
1.8	"Day" means a twenty-four (24) hour period of time from 9:00 am to 9:00 amCentral Clock Time.

1.9	"Dekatherm" or "Dth" means the quantity of heat energy which is 1,000,000 British thermal units (1 MMBtu).

1.10	"Delivery Point" means the point on Transporter's system where Transporter delivers Gas to Shipper, or for Shipper's account, that has been transported by Transporter.

1.11	[Reserved]

1.12	"FERC" or "Commission" means the Federal Energy Regulatory Commission, or any successors thereto.

1.13	"Firm Transportation Agreement" means an agreement pursuant to the Tariff under which Transporter provides firm transportation to a Shipper.

1.14	"Force Majeure" means any act of God, war, civil insurrection or disobedience, acts of public enemy, strikes, lockouts or other industrial disturbances, accidents, blockades, riots, epidemics, landslides, lightning, earthquakes, explosions, fires, storms, floods, washouts, civil disturbance, arrests and restraints of governments and people, breakage or accident to machinery or lines of pipe, the necessity for making repairs to or alterations of machinery or lines of pipe, freezing of lines of pipe, inability to obtain materials, supplies, permits or labor, any laws, orders, rules, regulations, acts or restraints of any governmental body or authority, civil or military, or other cause whether of the kind enumerated or otherwise which is beyond the control of the party claiming suspension and which by the exercise of due diligence such party is unable to prevent or overcome. The settlement of strikes, lockouts or other labor disputes shall be entirely within the discretion of the party having the difficulty. Under no circumstances will the following events constitute Force Majeure: (i) Shipper's lack of finances, (ii) inadequate or uneconomic markets for Shipper's Gas, (iii) insufficiency of Shipper's Gas supplies, or (iv) curtailment or disruption of service for any reason whatsoever on facilities upstream of the Receipt Point on Transporter or downstream of the Delivery Point on Transporter.

1.15	"Gas" or "Natural Gas" means methane and such other hydrocarbon constituents, or a mixture of two or more of them which, in any case, meets the quality specifications of the Tariff.

1.16	"Gas Imbalance" has the meaning ascribed to it in Section 9 of the General Terms and Conditions.

1.17	"Gross Heating Value" means the quantity of heat expressed in Btus produced by the complete combustion at constant pressure of one (1) anhydrous (dry) cubic foot of Gas with air at a temperature of sixty degrees (60) Fahrenheit and at apressure of 14.73 psia, when the products of the combustion are cooled to the initial temperature of the Gas and air and the water formed by combustion is condensed to the liquid state.

1.18	"Interruptible Transportation Agreement" means an agreement pursuant to which Transporter is obligated to provide interruptible transportation service to a Shipper.

1.19	"Intra-day Nomination" is a nomination submitted after the nomination deadline whose effective time is no earlier than the beginning of the gas Day and runs through the end of that gas Day.

1.20	"Maximum Daily Quantity" is the maximum daily quantity of Gas Transporter will receive or deliver at each Receipt or Delivery Point in accordance with the terms of an effective service agreement.

1.21	"Maximum Daily Transportation Quantity" is the maximum quantity of Gas Transporter is obligated to receive for the account of Shipper, as stated in an effective Interruptible Transportation Agreement between Shipper and Transporter.

1.22	"Mcf" means one thousand (1,000) Cubic Feet.

1.23	"MMBtu" is the abbreviation employed to denote one million (1,000,000) Btu and shall be synonymous and interchangeable with the term "dekatherm" (Dth) and shall be the standard unit for purposes of nominations, scheduling, invoicing, and balancing. Allocated quantities and imbalances shall be expressed in the same units as nominated quantities.

1.24	"MMcf" means one million (1,000,000) Cubic Feet.

1.25	"Month" means the period from 9:00 am CCT on the first Day of the calendar month and ending at 9:00 am CCT on the first Day of the next succeeding calendar month.

1.26	"NAESB" means the North American Energy Standards Board.

1.27	"NAESB Standards" means any and all such standards issued by NAESB and adopted by the Commission.

1.28	"Negotiated Rate" means a rate or rate formula for computing a rate for service under a single rate schedule under which, for some portion of the contract term, one or more of the individual rate components may exceed the maximum charge, or be less than the minimum charge, for such component of the applicable tariff rate as set forth on Transporter's Statement of Rates and Charges. A Negotiated Rate must be mutually agreed upon by Transporter and Shipper, and may bebased on a rate design other than straight fixed variable.

1.29	"Operational Balancing Agreement" or "OBA" is a contract between parties which specifies the procedures to manage operating variances at an interconnect.

1.30	"Operational Flow Order" or "OFO" is an order issued to alleviate conditions, inter alia, which threaten or could threaten the safe operations or system integrity of Transporter's system, or to maintain operations required to provide efficient and reliable firm service. Whenever Transporter experiences such conditions, any pertinent order should be referred to as an Operational Flow Order.

1.31	"Operator" means the corporation(s) or other Person(s) retained by Transporter to operate its pipeline system, or portions thereof, in an efficient and coordinated manner, including but not restricted to, the management of facilities, receipt and disposition of nominations, scheduling of receipts and deliveries, administration of Firm Transportation Agreements and Interruptible Transportation Agreements and accounting. Where appropriate, references to Transporter herein  may  include Operator acting on behalf of Transporter.

1.32	"Payment Due Date" means the 25th day of each month. If the Payment Due Date is not a Business Day, then payment must be received by Transporter or by the financial institution so designated by Transporter for payment, on or before the first Business Day immediately prior to the Payment Due Date.

1.33	"Person" means a natural person, sole proprietorship, firm, trust, trustee, executor, administrator or other legal personal representative, partnership, limited partnership, joint venture, syndicate, company or corporation with or without share capital, unincorporated association, regulatory body or agency, government or governmental agency, authority or entity however designated or constituted.

1.34	"Prepayment," with respect to requests for capacity or service, means that amount of money that must be submitted by a Shipper along with a request for service. Such amount will be credited to Shipper's invoice for services provided by Transporter, or forfeited by Shipper if it fails to enter into a service agreement with Transporter in accordance with the terms of Transporter's FERC Gas Tariff. With respect to creditworthiness, prepayment means the advance payment for transportation services rendered by Transporter.

1.35	"Psia" means pounds per square inch absolute.

1.36	"Psig" means pounds per square inch gauge.

1.37	"Receipt Point" is the point on Transporter's system at Sharon, Louisiana, where quantities of Gas may be received by Transporter from Texas Gas Transmission, Regency Intrastate Gas LLC, and/or Gulf South Pipeline Company, LLC.
1.38	"Released Capacity" is capacity reserved under the terms of an effective Firm Transportation Agreement that a Releasing Shipper seeks to release, on either a permanent or temporary basis.

1.39	"Releasing Shipper" or "Releasor" is a Shipper who holds or acquires firm capacity rights and who elects to release all or a part of such capacity.

1.40	"Replacement Shipper" is a Shipper who acquires all or part of the rights to capacity held by a Releasing Shipper under the terms of an effective Firm Transportation Agreement, on either a permanent or temporary basis.

1.41	"Reservation Charge" means the reservation charge component of the rate applicable to firm transportation service as specified in Transporter's Tariff and the Firm Transportation Agreement between such Shipper and Transporter.

1.42	"Scheduled Daily Delivery" means the quantity of Gas which during any one day Shipper has nominated and Transporter has confirmed for delivery.

1.43	"Scheduled Quantity" is the quantity of Gas a Shipper nominates for receipt by Transporter at a Receipt Point and for redelivery by Transporter for Shipper at a Delivery Point, and that Transporter schedules for transportation.

1.44	"Shipper" means a Person who uses the services of Transporter pursuant to the Tariff.

1.45	"System Capacity" is the quantitative ability of Transporter's existing system to provide maximum Gas transportation service. The ability of Transporter's system to maintain Gas transportation service may be limited by changes in prevailing operating pressures, temperatures, Gas flow rates and Gas flow directions within any portion(s) of Transporter's system, including either Receipt Point or Delivery Point; physical capacity limitations of regulators, valves, pipelines or pipeline segments, measuring facilities or appurtenances to Transporter's system; and necessary testing, maintenance, repair, overhaul, alteration, modification, replacement, enlargement, or construction of pipelines, metering, regulating, and other transmission facilities and equipment appurtenant to Transporter's system.

1.46	"Tariff" means Transporter's FERC Gas Tariff, as amended and approved from time to time by the Commission.

1.47	"Transportation" of Gas means the receipt of Gas by Transporter for Shipper's account at the Receipt Point and the delivery, for Shipper's account, of Gas by Transporter at the Delivery Point.

1.48	"Transportation Agreement" means an agreement pursuant to the Tariff under which Transporter provides transportation or other contract services to a Shipper.
1.49	"Transporter" means BBT Trans-Union Interstate Pipeline, L.P.

1.50	"Unauthorized Overrun" means quantities of Gas transported by Transporter on behalf of a Shipper in excess of Shipper's Contracted Quantity without Transporter's advance approval.

1.51	"Web Site" means Transporter's internet web site through which Transporter will, whenever possible, post information and conduct business electronically.

1.52	"Year" means a period of 365 consecutive days, except that any year which contains the date February 29 shall consist of 366 consecutive days.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>2012024</filing_id>
      <filing_title>BBT Trans-Union Revised Tariff filing</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2024-03-01</current_effective_date>
      <ferc_order_date>2024-02-22</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>50</record_id>
      <option_code>A</option_code>
      <record_title>Appendix A to Firm Transportation Agreement</record_title>
      <record_content_desc>Part IX.</record_content_desc>
      <record_version_num>7.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>924603744</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2024-03-01</proposed_effective_date>
      <priority_order>705</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>PART IX.
Appendix A to Firm Transportation Agreement No.  	 
Under Rate Schedule FT Between
BBT Trans-Union Interstate Pipeline, L.P. and  	


Contracted Capacity in MMBtu/day  	
Receipt Point:		From Texas Gas Transmission:  	 MMBtu/day	
                                 From Regency Intrastate Gas LLC:        MMBtu/day
From Gulf South Pipeline Company, LLC: _____MMBtu/day

Receipt Point Pressure (if specified) 	psig
Delivery Point: 	MMBtu/day
Delivery Point Pressure (if specified) 	psig
Rate Election (Recourse or Negotiated)
Primary Term:</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>2012024</filing_id>
      <filing_title>BBT Trans-Union Revised Tariff filing</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2024-03-01</current_effective_date>
      <ferc_order_date>2024-02-22</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>52</record_id>
      <option_code>A</option_code>
      <record_title>Appendix A to Interruptible Transportation Agreement</record_title>
      <record_content_desc>Part XI.</record_content_desc>
      <record_version_num>7.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>962301856</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2024-03-01</proposed_effective_date>
      <priority_order>705</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>PART XI.
Appendix A to Interruptible Transportation Agreement No.
Under Rate Schedule IT Between
BBT Trans-Union Interstate Pipeline, L.P. and  	


Maximum Daily Transportation Quantity ("MDTQ") in MMBtu:  

___________________________
Receipt Point:	
From Texas Gas Transmission: ______________MMBtu/day
From Regency Intrastate Gas LLC: ___________MMBtu/day
From Gulf South Pipeline Company, LLC:_____ MMBtu/day

Delivery Point:	___________________________________________</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>2012024</filing_id>
      <filing_title>BBT Trans-Union Revised Tariff filing</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2024-03-01</current_effective_date>
      <ferc_order_date>2024-02-22</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>54</record_id>
      <option_code>A</option_code>
      <record_title>Capacity Release Transactions Confirmation Letter</record_title>
      <record_content_desc>Part XIII.</record_content_desc>
      <record_version_num>7.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>999999968</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2024-03-01</proposed_effective_date>
      <priority_order>705</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>PART XIII.
FORM OF TRANSPORTATION AGREEMENT 
APPLICABLE TO CAPACITY RELEASE TRANSACTIONS 
CONFIRMATION LETTER
 
1.	Shipper's Name:  	
2.	Releasing Shipper's Firm Transportation Agreement Number:  
3.	Commencement Date:  			Termination Date:  
4.	Reservation Quantity:  			MMBtu/d
5.	Receipt Point:					Maximum Daily
	From Texas Gas Transmission:		Reservation Quantity
							MMBtu
							Maximum Daily
	From Regency Intrastate Gas LLC:		Reservation Quantity
							MMBtu
							Maximum Daily
 	From Gulf South Pipeline Company, LLC:	Reservation Quantity
							MMBtu
							Maximum Daily
6.	Delivery Point:				Maximum Daily
							Reservation Quantity
							MMBtu
 
7.	Reservation Rate				$___________/MMBtu
	Authorized Signature of Shipper:
	Name:    ______________________	
	Title:    ______________________	
	Telephone:   (______)    _______________	
	Facsimile::   (______)    _______________</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>2012024</filing_id>
      <filing_title>BBT Trans-Union Revised Tariff filing</filing_title>
      <filing_type>570</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2024-03-01</current_effective_date>
      <ferc_order_date>2024-02-22</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
    <record_data>
      <record_id>39</record_id>
      <option_code>A</option_code>
      <record_title>NAESB Standards 4.0</record_title>
      <record_content_desc>GTC - 31</record_content_desc>
      <record_version_num>6.3.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>717264128</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2025-08-01</proposed_effective_date>
      <priority_order>105</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>GTC - 31, NAESB Standards, 6.3.0  

31. NORTH AMERICAN ENERGY STANDARDS BOARD (NAESB) STANDARDS

Compliance with 18 C.F.R. Section 284.12

Transporter has adopted the Business Practices and Electronic Communications Standards, NAESB WGQ Version 4.0, which are required by the Commission in 18 C.F.R. Section 284.12(a), as indicated below. Standards without accompanying identification or notations are incorporated by reference. Standards that are not incorporated by reference are identified along with the tariff record in which they are located. Standards for which waivers or extensions of time have been granted are also identified.

Standards not Incorporated by Reference and their Location in Tariff:

NAESB Standard	Tariff record
1.2.4	GT&amp;C Section 1.19
1.2.6	GT&amp;C Section 1.30
1.3.1	GT&amp;C Section 1.8
1.3.2(i) - (vi)	GT&amp;C Sections 5.2(a)-(f)
1.3.5	GT&amp;C Section 5.2
1.3.6	GT&amp;C Section 5.2
1.3.9	GT&amp;C Section 5.4
1.3.11	GT&amp;C Section 5.4
1.3.13	GT&amp;C Section 5.4
1.3.20	GT&amp;C Section 5.2
1.3.21	GT&amp;C Section 5.2
1.3.23	GT&amp;C Section 7.2
2.3.7	GT&amp;C Section 4.8
2.3.9	GT&amp;C Section 1.4
2.3.11	GT&amp;C Section 4.8
2.3.12	GT&amp;C Section 4.8
2.3.13	GT&amp;C Section 4.8
2.3.14	GT&amp;C Section 4.8
2.3.26	GT&amp;C Section 7.2
3.2.1	GT&amp;C Section 1.5
3.3.15	GT&amp;C Section 11.6
3.3.17	GT&amp;C Section 11.3
3.3.18	GT&amp;C Section 11.3
3.3.19	GT&amp;C Section 11.2
5.3.1	GT&amp;C Section 26.2(c)

5.3.2	GT&amp;C Section 26.2(d)
5.3.3	GT&amp;C Section 26.5(e)(vi)
5.3.13	GT&amp;C Section 26.5(e)(ii)
5.3.14	GT&amp;C Section 26.5(e)(ii)
5.3.15	GT&amp;C Section 26.5(e)(ii)
5.3.16	GT&amp;C Section 26.5(e)(ii)
5.3.24	GT&amp;C Section 26.5(e)(iii)
5.3.73	GT&amp;C Section 26.5(n)

Standards Incorporated by Reference:

Additional Standards:

General :

Definitions:
0.2.5

Standards:
0.3.1, 0.3.2, 0.3.16, 0.3.17

Creditworthiness :

Standards:
0.3.3, 0.3.4, 0.3.5, 0.3.6, 0.3.7, 0.3.8, 0.3.9, 0.3.10

Gas/Electric Operational Communications: 

Definitions:
0.2.1, 0.2.2, 0.2.3, 0.2.4

Standards:
0.3.11, 0.3.12, 0.3.13, 0.3.14, 0.3.15.

Operating Capacity and Unsubscribed: 

Standards:
0.3.18, 0.3.20, 0.3.21, 0.3.22

Data Sets:
0.4.2, 0.4.3

Location Data Download:

Standards:

0.3.23, 0.3.24, 0.3.25, 0.3.26, 0.3.27, 0.3.28, 0.3.29

Data Sets:

0.4.4

Storage Information:

Data Sets:

0.4.1

	Nominations Related Standards:

	   Definitions:
1.2.1, 1.2.2, 1.2.3, 1.2.5, 1.2.8, 1.2.9, 1.2.10, 1.2.11, 1.2.12, 1.2.13, 1.2.14, 1.2.15, 1.2.16, 1.2.17, 1.2.18, 1.2.19

Standards:
1.3.3, 1.3.4, 1.3.7, 1.3.8, 1.3.14, 1.3.15, 1.3.16, 1.3.17, 1.3.18, 1.3.19,1.3.22, 1.3.24, 1.3.25, 1.3.26, 1.3.27, 1.3.28, 1.3.29, 1.3.30, 1.3.31, 1.3.32, 1.3.33, 1.3.34, 1.3.35, 1.3.36, 1.3.37, 1.3.38, 1.3.39, 1.3.40, 1.3.41, 1.3.42, 1.3.43, 1.3.44, 1.3.45, 1.3.46, 1.3.48, 1.3.51, 1.3.53, 1.3.55, 1.3.56, 1.3.58, 1.3.62, 1.3.64, 1.3.65, 1.3.66, 1.3.67, 1.3.68, 1.3.69, 1.3.70, 1.3.71, 1.3.72, 1.3.73, 1.3.74, 1.3.74, 1.3.75, 1.3.76, 1.3.77, 1.3.79, 1.3.80, 1.3.81, 1.3.82

Data Sets:

1.4.1, 1.4.2, 1.4.3, 1.4.4, 1.4.5, 1.4.6, 1.4.7

Flowing Gas Related Standards: 

Definitions:
2.2.1, 2.2.2, 2.2.3, 2.2.4, 2.2.5

Standards:
2.3.1, 2.3.2, 2.3.3, 2.3.4, 2.3.5, 2.3.6, 2.3.8, 2.3.10, 2.3.15, 2.3.16, 2.3.17, 2.3.18, 2.3.19, 2.3.20, 2.3.21, 2.3.22, 2.3.23, 2.3.25, 2.3.27, 2.3.28, 2.3.29, 2.3.30, 2.3.31, 2.3.32, 2.3.40, 2.3.41, 2.3.42, 2.3.43, 2.3.44, 2.3.45, 2.3.46, 2.3.47, 2.3.48, 2.3.50, 2.3.51, 2.3.52, 2.3.53, 2.3.54, 2.3.55, 2.3.56, 2.3.57, 2.3.58, 2.3.59, 2.3.60, 2.3.61, 2.3.62, 2.3.63, 2.3.64,2.3.65, 2.3.66

Data Sets:
2.4.1, 2.4.2, 2.4.3, 2.4.4, 2.4.5, 2.4.6, 2.4.7, 2.4.8, 2.4.9, 2.4.10, 2.4.11, 2.4.17,
2.4.18

Invoicing Related Standards: 
Standards:
3.3.3, 3.3.4, 3.3.5, 3.3.6 3.3.7, 3.3.8, 3.3.9, 3.3.10, 3.3.11, 3.3.12, 3.3.13, 3.3.14, 3.3.16, 3.3.21, 3.3.22, 3.3.23, 3.3.24, 3.3.25, 3.3.26, 3.3.27

Data Sets:
3.4.1*, 3.4.2, 3.4.3, 3.4.4

Quadrant Electronic Delivery Mechanism Related Standards: 
Definitions:
4.2.1, 4.2.2, 4.2.3, 4.2.4, 4.2.5, 4.2.6, 4.2.7, 4.2.8, 4.2.9, 4.2.10, 4.2.11, 4.2.12,
4.2.13, 4.2.14, 4.2.15, 4.2.16, 4.2.17, 4.2.18

Standards:
4.3.1, 4.3.2, 4.3.3, 4.3.16, 4.3.17, 4.3.18, 4.3.20, 4.3.22, 4.3.23, 4.3.24, 4.3.25, 4.3.26, 4.3.27, 4.3.28, 4.3.30, 4.3.31, 4.3.32, 4.3.33, 4.3.34, 4.3.35, 4.3.36, 4.3.38, 4.3.40, 4.3.41, 4.3.42, 4.3.43, 4.3.44, 4.3.45, 4.3.46, 4.3.47, 4.3.48, 4.3.49, 4.3.50, 4.3.52, 4.3.53, 4.3.54, 4.3.55, 4.3.57, 4.3.58, 4.3.66, 4.3.67, 4.3.68, 4.3.69, 4.3.72, 4.3.75, 4.3.78, 4.3.79, 4.3.80, 4.3.81, 4.3.82, 4.3.85, 4.3.86, 4.3.87, 4.3.89, 4.3.90, 4.3.91, 4.3.92, 4.3.93, 4.3.94, 4.3.95, 4.3.96, 4.3.97, 4.3.98, 4.3.99, 4.3.100, 4.3.101, 4.3.102, 4.3.104, 4.3.105, 4.3.106, 4.3.107, 4.3.108, 4.3.110

Capacity Release Standards: 

Definitions:
5.2.1, 5.2.2, 5.2.3, 5.2.4, 5.2.5

Standards:
5.3.4,  5.3.5,  5.3.7,  5.3.8,  5.3.9,  5.3.10,  5.3.11,  5.3.12,  5.3.18,  5.3.19, 5.3.20, 5.3.21, 5.3.22, 5.3.23,5.3.25, 5.3.26, 5.3.28, 5.3.29, 5.3.31, 5.3.32, 5.3.33, 5.3.34, 5.3.35, 5.3.36, 5.3.37, 5.3.38, 5.3.39, 5.3.40, 5.3.41, 5.3.42, 5.3.44, 5.3.45, 5.3.46, 5.3.47, 5.3.48, 5.3.49, 5.3.50, 5.3.51, 5.3.52, 5.3.53, 5.3.54, 5.3.55, 5.3.56, 5.3.57, 5.3.58, 5.3.59, 5.3.60, 5.3.62, 5.3.62a, 5.3.63, 5.3.64, 5.3.65, 5.3.66, 5.3.67, 5.3.68, 5.3.69, 5.3.70, 5.3.71, 5.3.72. 

Data Sets:
5.4.14, 5.4.15, 5.4.16, 5.4.17, 5.4.20, 5.4.21, 5.4.22, 5.4.23, 5.4.24, 5.4.25, 5.4.26, 5.4.27

Cybersecurity Related Standards:

Definitions:
12.2.1, 12.2.2, 12.2.3, 12.2.4, 12.2.5, 12.2.6, 12.2.7, 12.2.8, 12.2.9, 12.2.10, 12.2.11, 12.2.12, 12.2.13, 12.2.14, 12.2.15, 12.2.16, 12.2.17, 12.2.18, 12.2.19, 12.2.20, 12.2.21, 12.2.22, 12.2.23, 12.2.24, 12.2.25, 12.2.26, 12.2.27, 12.2.28, 12.2.29, 12.2.30, 12.2.31, 12.2.32, 12.2.33, 12.2.34, 12.2.35, 12.2.36, 12.2.37, 12.2.38, 12.2.39, 12.2.40, 12.2.41

Standards: 
12.3.1, 12.3.2, 12.3.3, 12.3.4, 12.3.5, 12.3.6, 12.3.7, 12.3.8, 12.3.9, 12.3.10, 12.3.11, 12.3.12, 12.3.13, 12.3.14, 12.3.15, 12.3.16, 12.3.17, 12.3.18, 12.3.19, 12.3.20, 12.3.21, 12.3.22, 12.3.23, 12.3.24, 12.3.25, 12.3.26, 12.3.27, 12.3.28, 12.3.29, 12.3.30, 12.3.31

Standards for which Waiver or Extension of Time to Comply have been granted:
NAESB Standard	Waiver or Extension of Time</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>1312025</filing_id>
      <filing_title>BBT-Trans Union NAESB 4.0 Compliance Filing</filing_title>
      <filing_type>585</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2025-08-01</current_effective_date>
      <ferc_order_date>2025-07-28</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
  </ferc_filing_data>
</Document>