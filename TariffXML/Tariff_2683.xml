<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Document xmlns="http://ferc.gov/etariffExport.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ferc_filing_data>
    <schema_version>2</schema_version>
    <company_id>C002395</company_id>
    <lead_applicant_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
    <tariff_id>50</tariff_id>
    <tariff_title>Monterey MA, LLC FERC Electric MBR Tariff No. 1</tariff_title>
    <tariff_export_date>2025-09-16T19:40Z</tariff_export_date>
    <export_schema_version>2</export_schema_version>
    <record_data>
      <record_id>50</record_id>
      <option_code>A</option_code>
      <record_title>Monterey MA, LLC FERC Electric MBR Tariff No. 1</record_title>
      <record_content_desc>Market-based Rate Tariff</record_content_desc>
      <record_version_num>1.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>1000</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2011-03-29</proposed_effective_date>
      <priority_order>500</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>Monterey MA, LLC  FERC Electric MBR Tariff No. 1    1. Availability:  Monterey MA, LLC ("Seller") makes electric energy, capacity, and certain ancillary services available under this Rate Schedule to any purchaser for resale.    2. Applicability:  This Rate Schedule is applicable to all sales of energy, capacity, and certain ancillary services by Seller not otherwise subject to a particular rate schedule of Seller.  3. Rates:  All sales shall be made at rates established by agreement between the purchaser and Seller.  4. Other Terms and Conditions:  All other terms and conditions shall be established by agreement between the purchaser and Seller.  5. Ancillary Services:  Seller will also make available to any purchaser with whom it has contracted, the ancillary services listed in this Paragraph 5.    (a) PJM: Seller offers regulation and frequency response service, energy imbalance service, and operating reserve service (which includes spinning, 10-minute, and 30-minute reserves) for sale into the market administered by PJM Interconnection, L.L.C. ("PJM") and, where the PJM Open Access Transmission Tariff permits, the self-supply of these services to purchasers for a bilateral sale that is used to satisfy the ancillary services requirements of the PJM Office of Interconnection.    (b) New York: Seller offers regulation and frequency response service, and operating reserve service (which include 10-minute non-synchronous, 30-minute operating reserves, 10-minute spinning reserves, and 10-minute non-spinning reserves) for sale to purchasers in the market administered by the New York Independent System Operator, Inc.    (c) New England:  Seller offers regulation and frequency response service (automatic generator control), operating reserve service (which includes 10-minute spinning reserve, 10-minute non-spinning reserve, and 30-minute operating reserve service) to purchasers within the markets administered by the ISO New England, Inc.    (d) California: Seller offers regulation service, spinning reserve service, and non-spinning reserve service to the California Independent System Operator Corporation ("CAISO") and to others that are self-supplying ancillary services to the CAISO.          (e) Midwest ISO: Seller offers regulation service and operating reserve service (which include 10-minute spinning reserve and 10-minute supplemental reserve) for sale to the Midwest Independent Transmission System Operator, Inc. (Midwest ISO) and to others that are self-supplying ancillary services to Midwest ISO.    (f) Ancillary Services - Third Party Provider:  Third-party ancillary services:  Seller offers Regulation Service, Energy Imbalance Service, Spinning Reserves, and Supplemental Reserves.  Sales will not include the following: (1) sales to an RTO or an ISO, i.e., where that entity has no ability to self-supply ancillary services but instead depends on third parties; (2) sales to a traditional, franchised public utility affiliated with the third-party supplier, or sales where the underlying transmission service is on the system of the public utility affiliated with the third-party supplier; and (3) sales to a public utility that is purchasing ancillary services to satisfy its own open access transmission tariff requirements to offer ancillary services to its own customers.  6. Effective Date:  This tariff is effective on and after April 17, 2011 (or the date set by the Federal Energy Regulatory Commission).  7. Compliance with Commission Regulations:  Seller shall comply with the provisions of 18 C.F.R. Part 35, Subpart H, as applicable, and with any conditions the Commission imposes in its orders concerning Seller's market-based rate authority, including orders in which the Commission authorizes Seller to engage in affiliate sales under this Tariff or otherwise restricts or limits the Seller's market-based rate authority.  Failure to comply with the applicable provisions of 18 C.F.R. Part 35, Subpart H, and with any orders of the Commission concerning Seller's market-based rate authority, will constitute a violation of this Tariff.     8. Limitations and Exemptions Regarding Market-Based Rate Authority:  The Commission granted Seller in Monterey MA, LLC, Docket No. ER11-______-000 (__________, 2011) (unpublished letter order), the following waivers and blanket authorization:  (i) waiver of Part 41, 101 and 141 of the Commission's regulations, except for Sections 141.14 and 141.15; (ii) waiver of Subparts B and C of Part 35 of the Commission's regulations, except for Sections 35.12(a), 35.13(b), 35.15 and 35.16; and (iii) blanket approval as to Section 204 of the FPA and Part 34 of the Commission's regulations for all future issuances of securities and debt and assumptions of liabilities.    9. Seller Category:  Seller is a Category 1 Seller in all regions, as defined in 18 C.F.R.    35.36(a).</record_plain_text>
      <record_change_type>NEW</record_change_type>
      <filing_id>59</filing_id>
      <filing_title>Monterey MA, LLC Application for Market-based Rates</filing_title>
      <filing_type>400</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2011-04-17</current_effective_date>
      <ferc_order_date>2011-04-27</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
  </ferc_filing_data>
</Document>