<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Document xmlns="http://ferc.gov/etariffExport.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ferc_filing_data>
    <schema_version>2</schema_version>
    <company_id>C010424</company_id>
    <lead_applicant_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
    <tariff_id>108</tariff_id>
    <tariff_title>Crude Petroleum Tariffs</tariff_title>
    <tariff_export_date>2025-09-16T20:37Z</tariff_export_date>
    <export_schema_version>2</export_schema_version>
    <record_data>
      <record_id>1724</record_id>
      <option_code>A</option_code>
      <record_title>FERC No. 1.0.0</record_title>
      <record_content_desc xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_version_num>1.1.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>1000</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2021-04-01</proposed_effective_date>
      <priority_order>2000</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>[N] CANCELLATION NOTICE  Washington Crossing Field Services, LLC     [C] Rules and Regulations   Governing the Interstate Transportation by Trophy Pipeline of    CRUDE PETROLEUM         Rules and Regulations published herein apply only under tariffs which make specific reference by number to this tariff; such reference will include successive issues hereof. Specific rules and regulations published in individual tariffs will take precedence over rules and regulations published herein.      The matter published herein will have no adverse effect on the quality of the human environment.      [N] Filed in accordance with 18 C.F.R.   341.5 (Cancellation of Tariffs).  Effective April 1, 2021, the assets of Washington Crossing Field Services, LLC became the assets of Trophy Pipeline, LLC. Refer to Trophy Pipeline, LLC's F.E.R.C. No. 1.0.0 for further rules and regulations.      [N] Special Permission Requested.  Issued on 13 days' notice under authority of 18 C.F.R   341.14 (Special Permission).  This tariff publication is conditionally accepted subject to refund pending a 30-day review period.      ISSUED: March 18, 2021                                                         EFFECTIVE: April 1, 2021      Issued and Compiled by:    Floyd Hammond  Washington Crossing Field Services, LLC  [W] 2901 Via Fortuna5707 Southwest Parkway  [W] Building 1, Suite 600275  Austin, TX [W] 7874678735   Telephone: (737) 300-4700    [C] TABLE OF CONTENTS  Rule Subject Page No. 1 Definitions 3 2 Acceptance of Product 6 3 Additives 8 4 Storage 8 5 Receipt Facilities Required 8 6 Destination Facilities Required 8 7 Rejection of Product Subject to Dispute, Liens, or Charges; Warranty of Title 8 8 Measurement 8 9 Evidence of Receipts and Deliveries 9 10 Notice of Arrival, Delivery at Destination, Demurrage 9 11 Duty of Carrier 10 12 Application of Rates from and to Intermediate Points 10 13 Line Fill Inventory Requirements; Third Party Access Agreements 10 14 Nominations Required 11 15 Prorationing Policy 12 16 Application of Rates 14 17 Legality of Shipments 14 18 Payment of Carrier Charges; Adequate Assurance 14 19 Limitation of Liability/Damages; Indemnity by Parties; Taxes 16 20 Scheduling of Delivery 18 21 Pipeage or Other Contracts 18 22 TSA Program 18 23 Gravity Bank 18 24 Connection Policy 18 25 Truck Unloading 19               Rules and Regulations  Rule 1:  Definitions  "Affiliate" means any Person that directly or indirectly, through one or more intermediaries, controls or is controlled by or is under common control with another Person.  The term "control" (including its derivatives and similar terms) means possessing the power to direct or cause the direction of the management and policies of a Person, whether through ownership, by contract, or otherwise.  Without limiting the foregoing, any Person shall be deemed to be an Affiliate of any specified Person if such Person owns more than fifty percent (50%) of the voting securities of the specified Person, or if the specified Person owns more than fifty percent (50%) of the voting securities of such Person, or if more than fifty percent (50%) of the voting securities of the specified Person and such Person are under common control.  "API" means American Petroleum Institute.    "API Gravity" means gravity determined in accordance with ASTM designation and expressed in degrees.  "Applicable Law" means any applicable federal, state, tribal or local law, statute, regulation, code, ordinance, license, permit, compliance requirement, order, writ, injunction, decision, directive, judgment, policy or decree of any Governmental Authority, and any judicial or administrative interpretations thereof, or any agreement, concession or arrangement with any Governmental Authority applicable to either Party or either Party's performance under this Tariff, and any amendments or modifications to the foregoing.  "ASTM" means American Society for Testing Materials.  "Barrel" means forty-two (42) gallons of two hundred thirty-one (231) cubic inches per gallon at sixty degrees Fahrenheit (60 F).    "Barrels Per Day" or "BPD" means a quantity of Barrels in the period of a Day.    "Business Day" means any Day other than a Saturday or Sunday that commercial banks in Houston, Texas are open or permitted to be open for business with the public.  "Capacity" means the quantity of Product the Pipeline Segment at issue is capable of transporting under the current operating conditions.  "Carrier" means Washington Crossing Field Services, LLC.    "Carrier Parties" has the meaning set forth in Rule 18(B).     "Committed Shipper" means a Shipper who has executed a Transportation Service Agreement pursuant to an open season held by Carrier.     "Committed Shipper Rate" means the rate paid by a Committed Shipper.     "Common Stream" means Product that is moved through the Pipeline and Pipeline facilities and which is or may be commingled or intermixed with Product of like quality and characteristics.    "Completion" or "Complete" means when the Pipeline, the origin facilities, the delivery facilities, and associated systems and facilities are substantially complete and all permits and approvals from Governmental Authorities have been obtained, such that the Pipeline is ready to commence commercial service with respect to the receipt, transportation, handling, and delivery of Shipper's Product.      "Consignee" means the Party to whom a Shipper has ordered the delivery of Product.  "Crude Petroleum" or "Product" means the direct liquid product of oil wells or a mixture of the direct product of oil or Product wells and the indirect petroleum products resulting either from refining of crude oil or the operation of gasoline recovery plants, gas recycling plants, or distillate recovery equipment in gas and distillate fields, or products broken out during the normal production or processing of natural gas and meeting the Specifications referenced in Rule 2, all as further defined in Exhibit B.    "Day" means a period of twenty-four (24) consecutive hours, commencing at 7:00 A.M., Central Time, on a calendar day and ending at 7:00 A.M., Central Time, on the next succeeding calendar day.    "Delivery Point(s)" means a point named in the Tariff where the Carrier will deliver Product accepted for transportation on the Pipeline as designated by Shipper to Carrier from time to time.  "FERC" means the Federal Energy Regulatory Commission, or any successor agency.  "Firm Service" means the service under which Committed Shippers pay premium rates relative to Uncommitted Shippers during times of proration in exchange for not being subject to proration on the lesser of their Monthly Nominated volumes or MDQ.    "Force Majeure" means any cause, whether or not of the type listed herein, not reasonably within the control of the Party claiming suspension and which prevents or materially impedes a Party's performance of its obligations.  Force Majeure shall include, but not be limited to, the following: (i) physical events such as acts of God, including but not limited to lightning, earthquakes, fires, explosions, tornadoes, hurricanes, floods, storm warnings, landslides, or other weather events that cause disruption, breakage or damage to, or necessitate the precautionary shut-down or operating reduction of, wells, plants, pipelines, gathering systems, loading facilities, refineries, terminals, ports or any portion thereof, or other related facilities; (ii) weather related events affecting an entire geographic region or causing the evacuation thereof, such as low temperatures that cause freezing or failure of wells, lines of pipe, or processing facilities; (iii) acts of others such as strikes, lockouts or other industrial disturbances, riots, sabotage, insurrections or wars, or acts of terror; or (iv) action or inaction of a Governmental Authority, but Force Majeure shall not include: (A) economic hardship, (B) the non-availability of financing or (C) fluctuations in or low market prices for, or adverse or unfavorable market conditions for, oil, natural gas or other hydrocarbons.  "Force Majeure Event" means an event caused by Force Majeure.    "Governmental Authority" means any federal, state or local government, municipality, city, town or  township, commonwealth or any other political subdivision thereof, or any entity exercising any executive, legislative, judicial, regulatory or administrative functions of or pertaining to government, such as FERC, or any other authority, agency, department, board, commission or instrumentality of the United States, any state of the United States, or any political subdivision thereof, or any court, tribunal or arbitrator(s) of competent jurisdiction, or any governmental, non-governmental self-regulatory, or quasi-governmental regulatory organization, body, agency or authority.         "Line Fill" means a pro rata share (determined by MDQ) of the physical volumes of Crude Petroleum necessary for pipeline fill on the Pipeline.    "Losses" means any actual loss, cost, expense, liability, sanction, fine, penalty, assessment, damage (including personal injury or property damage claims) or demand, including those that arise from suits, claims, cause of actions, court or arbitration judgments, orders or awards, audits, settlements or liens, and all court costs and litigation expenses related thereto, including reasonable attorneys' fees, as may be awarded by a court.  "Maximum Daily Quantity" or "MDQ" means the maximum volume that a Committed Shipper can tender for Firm Service shipment on the Pipeline per Day, as specified in its TSA.    "Month" means a calendar month beginning at 7:00 A.M., Central Time, on the first Day of the calendar month and ending at 7:00 A.M., Central Time, on the first Day of the next succeeding calendar month.    "Nomination" or "Nominate" means a written communication (in form and context specified by the Carrier) made by a Shipper to Carrier requesting that Carrier transport for Shipper in a given Month a stated volume of Shipper's Crude Petroleum from an Origin Point to a Delivery Point.  "Origin Point(s)" means a point named in the Tariff where the Carrier will accept Product for Transportation, as designated by Shipper to Carrier from time to time.    "Party" means Carrier or Shipper individually as referred to herein, or collectively as Parties.     "Person" means any individual, firm, corporation, trust, partnership, limited partnership, master limited partnership, limited liability company, association, joint venture, other business enterprise, Governmental Authority, unincorporated organization or any other legal entity.    "Pipeline" or "Trophy Pipeline" means Carrier's pipeline extending from the Origin Points to the Delivery Points.    "Pipeline Loss Allowance" or "PLA" means the actual volume of Product lost on the Pipeline among all Shippers due to evaporation, measurement, or other losses in transit.        "Pipeline Segment" means the Section of Carrier's Pipeline, the limits of which are defined by two geographically identifiable points, that, because of the way that section of Carrier's Pipeline is designed and operated, must be treated as a unit for purposes of determining Capacity.  "Rates Tariff" means Carrier's F.E.R.C. 2.0.0 rates tariff, or any applicable reissue thereof.    "Reid Vapor Pressure" means the absolute vapor pressure exerted by a liquid at 100  F (37.8 C), as determined by the test method ASTM D6377.    "Shipper" means a party who contracts with Carrier for transportation of Product, as defined herein and under the terms of this Tariff, including a Third-Party Shipper.  "Shipper Parties" has the meaning set forth in Rule 19(B).    "Specifications" means the Product characteristics as described in Rule 2.    "Tariff" means these Rules and Regulations and any applicable Rates Tariff, as may be superseded from time to time.    "Taxes" means any or all taxes, fees, levies, charges, assessments or other impositions levied, charged, imposed, assessed or collected by any Governmental Authority having jurisdiction.    "Tender" means a delivery by a Shipper to Carrier of a stated quantity and grade of Product, under a Nomination accepted by Carrier, for transportation in accordance with these Rules and Regulations.  "Third-Party Shipper" means a Person, other than Shipper, designated by Shipper to transport Product under this Tariff and a TSA.    "Transportation Services Agreement" or "TSA" means a transportation services agreement entered into between a Committed Shipper and the Carrier for transportation on the Pipeline pursuant to an open season.    "Uncommitted Shipper" means any Shipper that is not a Committed Shipper.           "Uncommitted Shipper Rate" means the rate paid by an Uncommitted Shipper.    "Volume(s)" means the amount of Product shipped in Barrels.  Rule 2:  Acceptance of Product  (A)  The quality specifications for Crude Petroleum set forth below ("Specifications") shall apply to Shipper's Tender. Shipper shall not deliver to Carrier and Carrier shall not be obligated to accept Product that, as determined by Carrier, has on receipt qualities which are outside of the minimum and maximum ranges specified in the following table:   Quality Units Min Max Reference Test Method A.P.I. Gravity (60F) deg. API 36 55 ASTM D287 AND   API MPMS CHAPTER 9 Sulfur Content Weight %   0.4 ASTM D4294 Reid Vapor Pressure PSIA  9.5 ASTM D6377 True Vapor Pressure PSIA  11.0 ASTM D6377 Basic Sediment   and Water % of Volume  1.0% API MPMS  CHAPTER 10.4 Temperature deg.  120  F See Operations Manual   (B) Carrier may at its discretion accept Crude Petroleum from Shipper that does not meet the Specifications provided in Rule 2(A) due to unusual circumstances, emergencies, or events of force majeure.  In such case, however, Shipper must notify Carrier fully in writing of the characteristics of such Crude Petroleum and Shipper shall then secure from the producer or shall provide itself, in writing, to Carrier an assumption of all liability and agree to hold Carrier harmless from and against any loss, cost or disadvantage to other Shippers, and other pipelines, or to Carrier arising from such transportation.   (C) Carrier may, from time to time, undertake to transport other or additional grades of Crude Petroleum and if, in the opinion of Carrier, sufficient quantities are not nominated or facilities are not available to justify continued transportation of other or additional grades, Carrier may, after giving reasonable notice to Shippers who may be affected, cease transporting particular grades of Crude Petroleum.  (D) Carrier shall have the right to change or modify the Specifications provided in Rule 2(A) in order to conform Carrier's Specifications to those of downstream connecting facilities.  (E) If, upon investigation, Carrier determines that a Shipper has delivered to Carrier's facilities Product that has been contaminated by the existence of and/or excess amounts of impure substances, including but not limited to, chlorinated and/or oxygenated hydrocarbons, arsenic, lead and/or other metals, such Shipper will be excluded from further entry into applicable segments of the Pipeline until such time as the Specifications are met to the reasonable satisfaction of Carrier.  Further, Carrier reserves the right at its sole discretion to dispose of any contaminated Product in its Pipeline.  Disposal thereof, if necessary, may be made in any reasonable commercial manner.  Any and all loss, liability and costs associated with the contamination or disposal of any Product, including but not limited to damage to Carrier's Pipeline or third-party facilities downstream from Carrier's Pipeline, and any resulting losses, liabilities and costs, shall be borne by the Shipper or Shippers introducing the contaminated Product into Carrier's Pipeline.  (F) Unless stated otherwise in written notice provided by Carrier to all subscribers to tariffs for the Pipeline affected, Carrier will not segregate Product of a kind and/or quality through Carrier's facilities.  Rule 3:  Additives       Product shall be free of additives and inhibitors, including drag reducing agents, unless expressly approved by Carrier on a non-discriminatory basis.  Rule 4:  Storage       Carrier owns no facilities for storage and will provide only minimal working tankage for storage that is incidental and necessary to the transportation of Product.  Non-incidental storage is a separate service which Shipper must obtain from another Person.   Rule 5:  Receipt Facilities Required       Carrier will accept Product for transportation only when the Shipper or Consignee has provided the necessary facilities for delivering Crude Petroleum into the Pipeline at full line flow rates at the Origin Point.  Rule 6:  Destination Facilities Required       Carrier may refuse to accept Product for transportation unless documentary evidence is furnished that the Shipper or Consignee has provided the necessary facilities downstream for the prompt receiving of Product.  If the Shipper or Consignee is unable or refuses to receive said Product as it arrives at a Delivery Point due to Shipper's failure to so secure necessary facilities downstream, Carrier reserves the right to make arrangements for disposition of the Product as it deems appropriate (including sale of same), in order to clear the Carrier's Pipeline.  Any additional expenses incurred by Carrier in making such arrangements shall be borne by the Shipper or Consignee.  Rule 7:  Rejection of Product Subject to Dispute, Liens, or Charges; Warranty of Title       Carrier may reject any Product which, when Nominated for transportation, may be involved in litigation, or the title of which may be in dispute, or which may be encumbered by lien or charge of any kind unless the Shipper provides documentary evidence of the Shipper's unencumbered title or satisfactory indemnity bond to protect Carrier.  By Nominating Product, the Shipper warrants and guarantees that it owns or controls, has the right to deliver or have delivered for its account, such Product, and agrees to defend, indemnify, and hold Carrier harmless for any and all loss, cost, liability, damage, and/or expense resulting from failure of ownership or control thereto, provided that acceptance for transportation by Carrier shall not be deemed: (a) a representation by Carrier as to ownership or control or (b) a waiver of Carrier's rights hereunder.  Rule 8:  Measurement  (A) Crude Petroleum shipped hereunder shall be measured and tested by representatives of the Carrier or by automatic equipment approved by the Carrier. Quantities shall be determined by dynamic or static measurement methods in accordance with appropriate American Petroleum Institute (API) standards, latest revision, and adjusted to base (reference or standard) conditions.  (B) When, in Carrier's opinion, a lease operator or connecting carrier's tanks are unsafe or unsuitable for use in custody transfer because of improper connections, high bottom accumulations of any extraneous matter, incrustations on the inside of the tank walls, or any other conditions unacceptable to Carrier, Carrier may reject the use of such tank until the unacceptable conditions have been corrected. Alternatively, in the case of incrustation inside any tank, Carrier may determine and apply a correction factor to ascertain the correct tank capacity.  (C) Corrections will be made for temperature from observed degrees Fahrenheit to 60 degrees Fahrenheit and for pressure to 14.696 psia. Carrier will deduct the full amount of sediment, water and other impurities as the centrifugal or other test may show.  (D) The Pipeline Loss Allowance set forth in Carrier's Rates Tariff will be made to cover evaporation, interface losses, and other normal losses during transportation.  (E) All receipts of Crude Petroleum having an API gravity of 45 degrees or above shall also be subject to an incremental deduction to cover shrinkage and evaporation. Such deduction shall be determined in accordance with the following table:  API Gravity, Degrees Incremental Deduction Evaporation &amp; Shrinkage 45.0 through 54.9 0.5% 55.0 through 64.9 1.0% 65.0 through 74.9 1.5% 75.0 and above 2.0%   (F) After consideration of all of the factors set forth in this Rule 8, a net balance will be determined as the quantity deliverable by Carrier, and transportation charges will be assessed on this net balance.  Rule 9:  Evidence of Receipts and Deliveries   Product received from Shipper and Product delivered to Consignee shall, in each instance, be evidenced by custody transfer meter containing data essential to the determination of quantity.   Rule 10: Notice of Arrival, Delivery at Destination, Demurrage  (A) The obligation of the Carrier is to deliver the quantity of Crude Petroleum to be transported, less deductions, at the specified destination. Such delivery may be made upon twenty-four (24) hours notice to the Shipper or Consignee who shall accept and receive said Crude Petroleum from the Carrier with all possible dispatch into tanks or receptacles arranged for or provided by the Shipper or Consignee.  (B) If Shipper or Consignee does not timely receive said Crude Petroleum, then commencing twenty-four hours after the first 7:00 AM central standard time, after expiration of the delivery notice described above, Carrier may assess a demurrage charge on any part of said Crude Petroleum shipment offered for delivery and not taken by Shipper or Consignee; the demurrage charge will be 1.14 cents per Barrel per day for each day of twenty-four (24) hours or fractional part thereof.  After expiration of said twenty-four (24) hour notice, Carrier's liability for loss, damage or delay with respect to Crude Petroleum offered for delivery but not taken by Shipper or Consignee shall be that of a warehouseman only.  (C) If the Shipper, or Consignee, is unable or refuses to receive said Crude Petroleum as it arrives at the specified destination, the Carrier reserves the right to make whatever arrangements for disposition of the Crude Petroleum it deems appropriate in order to clear its pipeline. Any additional expenses incurred by the Carrier in making such arrangements shall be borne by the Shipper or Consignee.  Rule 11:  Duty of Carrier  (A) Carrier shall not be required to transport Product except with reasonable diligence, considering the quality of the Product, the distance of transportation, and other material elements, and will not accept Product to be transported in time for any particular market.  Unless otherwise specified, Carrier will not be required to deliver the identical Product received, but shall deliver Product of materially the same quality and specifications as the Product received.  (B) Carrier may suspend transportation services on the Pipeline in order to comply with Applicable Laws of any Governmental Authority, to perform maintenance, expand the Capacity of the Pipeline, testing, inspections, or repairs, or to prevent injuries to Persons, damage to property, or harm to the environment, without incurring any obligation for any liabilities (except as otherwise provided in a TSA).  Carrier will provide Shipper with at least forty-five (45) Days' advance notice of any routine or scheduled maintenance on the Pipeline or Pipeline Segment.  Rule 12:  Application of Rates from and to Intermediate Points       For Product accepted for transportation from any point on Carrier's lines not named in this Tariff, which is intermediate to a point for which rates are published in Carrier's Rates Tariff, Carrier will apply the rates published in such tariff for the next more distant point specified in the tariff.  For Product accepted for transportation to any point not named in the tariff which is intermediate to a point for which rates are published in Carrier's Rates Tariff, the rate published therein for the next more distant point specified in the tariff will apply, and Carrier shall make a filing to add any such point to the tariff, if and as required by Section 341.10(a)(2) of the FERC's regulations.  Rule 13:  Line Fill Inventory Requirements; Third-Party Access Agreements  (A)  Line Fill:  Prior to delivering Barrels out of Carrier's system, Shipper shall supply a pro rata share of Product necessary for pipeline fill to ensure efficient operation of the Pipeline system prior to delivery.  Except as set forth in Rule 13(C) below, Product provided by a Shipper for this purpose may be withdrawn only after: (1) shipments have ceased and the Shipper has notified Carrier in writing to discontinue shipments in Carrier's system; and (2) the Shipper's balances have been reconciled between all Shippers and Carrier.    (B)  Carrier, at its reasonable discretion, may require advance payment of transportation charges on the volumes to be cleared from Carrier's system, and any unpaid accounts receivable, before final delivery will be made.  In the event a Shipper is more than ninety (90) Days deficient on making any payment owed hereunder, Carrier may sell any Line Fill belonging to such Shipper and apply the proceeds of such sale towards such owed amounts and remit the excess of any proceeds (if any) to Shipper.  Unless Shipper has not made any required payment, or unless otherwise prevented by Force Majeure or actions of the Shipper, Carrier shall have a reasonable period of time, not to exceed sixty (60) Days, from the receipt of the Shipper' written notice to Carrier, to complete administrative and operational requirements incidental to Shipper's withdrawal.  (C)  As between Carrier and Shipper, Shipper will at all times retain title to its Product in transit and Line Fill and Carrier will provide a Monthly statement to Shipper of Shipper's Product held as Line Fill.  If Shipper's inventory balance drops below its pro rata portion of the volume of Product necessary for the efficient operation of Carrier's Pipeline system, Carrier will require Shipper to provide the necessary volume to meet its pro rata portion of such volume of Product.  If Shipper's inventory balance for Line Fill exceeds its pro rata portion of the volume of Product necessary for the efficient operation of Carrier's Pipeline system, Carrier will return the excess volume of Product to Shipper within sixty (60) Days.  Delivery of Line Fill volumes will not be subject to a transport fee, but Carrier reserves the right to charge a transport fee for Line Fill volumes returned at the Delivery Point, which transport fee for Committed Shippers shall not exceed the Committed Shipper Rates and for Uncommitted Shippers shall not exceed the Uncommitted Shipper Rates.  (D)  Carrier will have the contractual right to require (or, in its reasonable judgment, waive the requirement for) Shipper or its representative to execute an interconnect agreement or access agreement to any of Carrier's facilities of and from any person, including Shipper's contractors, or designated Third-Party Shippers.  Rule 14:  Nominations Required   Product will be transported by Carrier only under a Nomination accepted by Carrier.  Any Shipper desiring to tender Product for transportation shall make or cause to make such Nomination to Carrier in writing on or before 12:00 PM central standard time on the twenty-fourth (24th)  Day of the Month preceding the Month during which the transportation under the Nomination is to begin; provided, however, that if operating conditions permit, Carrier, in its sole discretion, may consider and accept Nominations submitted after the date and/or time specified above.   Nominations for the transportation of Product for which Carrier has facilities will be accepted under the Tariff in quantities of not less than the following:    Type of Nomination: Minimum Aggregate Nomination: Common Stream 2,000 Barrels per Day   from one Shipper to one Consignee, and Delivery Point as operations permit, and provided such Product is of similar quality and characteristics as is being transported from Origin Point to Delivery Point.         Before Carrier will accept a Nomination from an Uncommitted Shipper, such Shipper must: (i) comply with Rule 17(A); (ii) demonstrate to Carrier the adequacy of such Shipper's arrangements and facilities as referenced in Rule 5 and Rule 6; and (iii) provide any other information reasonably requested by Carrier.  Rule 15:  Prorationing Policy   Where Nominations in a given Month exceed the Pipeline's total Capacity, all Nominations shall be subject to the following Prorationing Policy:  (A) The following definitions apply to this Prorationing Policy        "Base Period" means the twelve (12) Month period beginning thirteen (13) Months prior to the Proration Month (and excluding the Month preceding the Proration Month).                "Committed Shipper Allocation" has the meaning set forth in Rule 15(B)(1).                 "New Shipper" means a Shipper that does not qualify as a Regular Shipper.              "New Shipper Proration Factor" has the meaning set forth in Rule 15(B)(3).              "Proration Month" means the Month for which Capacity on the Pipeline is subject to prorationing pursuant to this Rule 15.              "Regular Shipper" means a Shipper that has shipped Product during every Month of the Base Period.               "Shipper History" means the total volume (in Barrels) of a Shipper's Crude Petroleum actually shipped on the Pipeline during the Base Period.  If Carrier has been in operation less than twelve (12) Months, then Shipper History shall be the total volume (in Barrels) of  Shipper's Crude Petroleum actually shipped on the Pipeline to date, excluding volumes shipped in the Month preceding the Proration Month.              "Total Shipments" means the Shipper History of the applicable Committed Shipper, Regular Shipper or New Shipper.              "Total Throughput" means a volume equal to the sum of the Total Shipments of all Committed Shippers, Regular Shippers and New Shippers during the Base Period.    (B) Where Carrier receives more Nominations in a Month for transportation of Crude Petroleum than Carrier is able to transport on the Pipeline, Carrier shall apportion the Capacity in the following manner:    (1) Committed Shippers: Each Committed Shipper shall be allocated one hundred percent (100%) of the lesser of its MDQ or Monthly Nominated quantity (defined as the "Committed Shipper Allocation").  Where a Committed Shipper Nominates more than its MDQ, the additional volumes shall be treated as Uncommitted Volumes and subject to the Regular Shipper prorationing terms in Rule 15(B)(2) of this Prorationing Policy.  At no time shall the Committed Shipper Allocation be greater than ninety percent (90%) of the Pipeline's (1) designed capacity, or (2) the Capacity that is available on the Pipeline (or any Pipeline Segment) at any given time.  Individual Committed Shipper Allocations during Prorationing Months are subject to Curtailment under Rule 15(C) of this Prorationing Policy.      (2) Regular Shippers:     (i) The percentage of Capacity to be allocated to each Regular Shipper will be calculated by dividing the sum of the Total Shipments of each Regular Shipper by the Total Throughput.  The resulting percentages will then be applied to the Capacity available after allocations to Committed Shippers and subject to a holdback of up to ten percent (10%) to New Shippers, to determine the capacity allocation for each Regular Shipper. Each Regular Shipper will be allocated the lesser of its Nomination or its volume determined pursuant to the above calculation.     (ii)  In the event that the above calculation results in any Shipper being allocated more capacity than its Nomination, the excess of the calculated allocation over the Shipper's Nomination will be reallocated per capita among all other New Shippers and Regular Shippers whose Nominations would not be fulfilled through the allocations calculated in Rules 15(B)(2) and 15(B)(3) of this Prorationing Policy.     (iii) Carrier will repeat this reallocation process until all of the Capacity has been allocated.  Allocations for Regular Shippers will be subject to pro rata reduction on the basis of the percentages calculated in this Rule 15(B)(2), if required, to accommodate New Shippers.    (3) New Shippers: Up to ten percent (10%) of the available Capacity will be allocated among New Shippers.  If the nominations made by New Shippers exceed ten percent (10%) of the available Capacity, each New Shipper will receive a nomination-based pro rata portion of the ten percent (10%) allocated to New Shippers.     (C) Curtailments Where Pipeline Capacity is Diminished:           In case of operational necessity, or any other extraordinary circumstance beyond the control of Carrier, including a Force Majeure Event, that substantially affects the ability of Carrier to deliver the volumes that have been tendered by all Shippers for a given Day, Carrier, at its sole discretion, may curtail deliveries to Shippers to the extent that is operationally required ("Curtailment").                During an event as described in the preceding paragraph in this Prorationing Policy, Carrier will curtail Shippers in reverse order vis-a-vis its Prorationing Policy, that is: subject to reserving up to 10% of the reduced Capacity for New Shippers, Carrier will curtail scheduled deliveries for Committed Shippers last, if necessary, on a pro rata basis as among scheduled quantities.  All other scheduled service will be reduced pro rata as among scheduled quantities.  Rule 16:  Application of Rates   Other than with respect to Line Fill delivered pursuant to Rule 12, Product accepted for transportation shall be subject to the rates in effect on the date of the Tender.  Payment of either the Uncommitted Shipper Rate by an Uncommitted Shipper or payment of the Committed Shipper Rate by a Committed Shipper will include service on the Pipeline in accordance with the terms of this Tariff and contract provisions where applicable.    Rule 17:  Legality of Shipments     Carrier will reject Product where the Shipper or Consignee has failed to comply with any Applicable Laws, rules, and regulations made by any Governmental Authority regulating shipments of Product, unless this Rule is waived by Carrier on a non-discriminatory basis.  Rule 18:  Payment of Carrier Charges; Adequate Assurance   (A) If Carrier has reasonable grounds for insecurity regarding the ability of Shipper to provide payment, or Shipper's creditworthiness is or becomes unsatisfactory to Carrier, or if Shipper's title to any Shipper's Product is disputed, Carrier may require Shipper to provide adequate assurance of performance.  As adequate assurance, Shipper, at its option, may  provide either: (i) an irrevocable stand-by letter of credit from a bank (choice of applicable bank subject to approval by Carrier in its sole discretion) with terms reasonably acceptable to Carrier, and in an amount reasonably acceptable to Carrier within ten (10) Business Days of receiving Carrier's written demand; (ii) a parent guaranty with terms reasonably acceptable to Carrier within ten (10) Business Days of receiving Carrier's written demand; or (iii) prepayment at least five (5) Days prior to the first (1st) Day of each Month of an amount of money reasonably calculated by Carrier to cover all charges or liabilities under the applicable TSA likely to be incurred by Shipper during such Month.  If Carrier requires Shipper to provide adequate assurance, Carrier will provide Shipper with written notice.  If Shipper fails to provide the required adequate assurance within the applicable timeframe set forth above, then, until Shipper has satisfied its adequate assurance obligations under this Rule 18(A), Carrier may suspend service under the applicable TSA, without liability to Shipper, upon notice to Shipper.   (B) Shipper shall pay all transportation and other fees and lawful charges accruing on Product delivered to and accepted by Carrier for shipment as measured at the Origin Points by the due date stated in Carrier's invoice.      (C) No later than the fifteenth (15th) Day of each Month, Carrier shall deliver to Shipper a statement for transportation services in the preceding Month setting forth (i) the volumes of Shipper's Product (in Barrels) received at the Origin Point, (ii) the Committed Rate or Uncommitted Shipper Rate, as applicable, for that Month, (iii) any adjustments for prior periods, and (iv) all other amounts due by Shipper hereunder.  Carrier's invoices shall include information reasonably sufficient to explain and support any estimates and charges reflected therein, the reconciliation of any estimates made in a prior Month to any actual measurements, and any adjustments to prior period volumes and quantities.  Shipper shall remit to Carrier amounts due by wire transfer by the later of (i) ten (10) Days after Shipper's receipt of the statement referenced above and (ii) the twentieth (20th) Day of each Month, to the bank account specified by Carrier.  If such due date is not a Business Day, payment is due on the next Business Day following such date.  (D) All undisputed amounts owed to Carrier, which are not timely paid to Carrier, shall bear interest from the date due until paid.  Such interest will be assessed at a rate equal to: (a) one and one-half percent (1.5%) per Month, or (b) the highest rate permitted by Applicable Law, whichever is less, for any invoice or portion of an invoice not paid pursuant to the terms of this Tariff.  If any amount is disputed, interest will accrue from the date due until the date paid but will only be due after the dispute is resolved and based on the amount found or agreed to be due.  If Shipper disputes any portion of an invoice, Shipper shall promptly notify Carrier in writing (no later than the payment due date) and give reasons, with reasonable detail, for the disputed matters.  Carrier and Shipper shall then endeavor to resolve the disputed amount in accordance with the provisions of the TSA, if applicable.  Any payment due resulting from such dispute resolution shall be due within five (5) Business Days following the receipt by Shipper of an amended invoice relating to such resolution.  If the Shipper has not entered into a TSA, Carrier and Shipper shall each have the right to pursue claims against the other in a court of competent jurisdiction.    (E) Carrier shall have the right to withhold an amount of Product belonging to Shipper from delivery that would be sufficient to cover all unpaid charges due to Carrier from Shipper until all such unpaid charges have been paid.  Furthermore, Carrier shall retain a perfected possessory lien, as applicable, on an amount of a Shipper's Product in Carrier's possession sufficient to secure payment of any and all amounts owed by such Shipper to Carrier.  Carrier reserves the right to set off any such charges against any monies owed to Shipper by Carrier on any Product of Shipper in Carrier's custody.  If said charges remain unpaid five (5) Days after the due date therefor, Carrier shall have the right, through an agent, to sell such Product at public auction, on any day not a legal holiday, in not less than forty-eight (48) hours after publication of notice of such sale in a daily newspaper of general circulation published in the town or city where the sale is to be held, stating the time, place of sale, and the quantity and location of Product to be sold.  At said sale, Carrier shall have the right to bid, and if the highest bidder, to become the purchaser. From the proceeds of said sale, Carrier will pay itself the transportation and all other lawful charges, including expenses incident to said sale, and the balance remaining, if any, shall be paid to Shipper.  (F) In addition to the rates and fees payable under this Rule 18, Shipper shall convey to Carrier each Month, free of charge, Shipper's allocated share of PLA, as determined by Carrier.   Rule 19:  Limitation of Liability/Damages; Indemnity by Parties; Taxes  (A) Limitation of Damages:  Any other provision of this Tariff notwithstanding, neither Party shall be liable to the other Party for special, indirect, consequential, incidental, punitive or exemplary damages, including lost profit and loss of business opportunity (except where  such damages are determined to be direct damages), in contract or tort (including negligence, joint or several, or strict liability), arising out of this Tariff or applicable shipper agreement, provided that nothing in this Rule 19(A) shall be construed as limiting any obligation of either Party to indemnify the other Party against claims asserted by third parties, including claims of such third parties for special, indirect, consequential, incidental, punitive or exemplary damages.  Except as otherwise expressly provided for elsewhere in the Tariff or applicable shipper agreement, a Party's sole remedy against the other Party for non-performance or breach of any provision in this Tariff or applicable shipper agreement, or any other claim whatsoever nature arising out of or in relation to this Tariff or applicable shipper agreement shall be in contract and each Party expressly waives any other right it may have in law or equity.  In the event of a loss of Product while in the Carrier's custody (other than due to a Force Majeure Event) Shipper's sole and exclusive remedy shall be: (i) replacement of such Product at Carrier's expense, or (ii) payment to Shipper of the market value of such Product, if Carrier deems, within a reasonable period of time, that replacing the lost Product is not feasible.  (B) Indemnification for Quality:  Shipper shall be responsible for and shall defend, indemnify, release and hold harmless Carrier, its Affiliates, and their respective directors, officers, managers, employees and contractors (except for Shipper) and other representatives (collectively, the "Carrier Parties") from and against all losses arising out of or pertaining to Shipper's delivery to Carrier of Crude Petroleum not meeting the then-applicable Specifications, except that Shipper shall not be responsible for and shall bear no duty to defend, indemnify, release or hold harmless Carrier with respect to Crude Petroleum not meeting the then-applicable Specifications that Carrier agreed to accept in accordance with these Rules and Regulations.  Carrier shall be responsible for and shall defend, indemnify, release and hold harmless Shipper, its Affiliates, and their respective directors, officers, managers, employees and contractors (except for Carrier) and other representatives (collectively, the "Shipper Parties") from and against all losses arising out of or pertaining to Carrier's acceptance of Crude Petroleum from other Shippers not meeting the then-applicable Specifications as set forth in these Rules and Regulations.  (C) Indemnification by Shipper:  Subject to Rule 19(A), Shipper shall be responsible for and shall defend, indemnify, release and hold harmless the Carrier Parties from and against all losses incurred by Carrier resulting from Shipper's negligence, willful misconduct or gross negligence in connection with the Tariff.  (D) Indemnification by Carrier:  Subject to Rule 19(A), Carrier shall be responsible for and shall defend, indemnify, release and hold harmless the Shipper Parties from and against all losses incurred by Shipper resulting from Carrier's negligence, willful misconduct or gross negligence in connection with the Tariff.  (E) Joint Liability:  Under the foregoing indemnities, where the personal injury to or death of any Person or Loss of damage to property is the result of the joint or concurrent negligence, gross negligence, or willful acts or omissions of Shipper and Carrier, each Party's duty of indemnification will be in proportion to its share of such joint or concurrent negligence, gross negligence, or willful misconduct.  (F) Taxes:  Shipper shall pay any and all Taxes levied on Shipper's Product including property Taxes on Shipper's Product in the Pipeline.  Carrier shall pay any and all Taxes levied on the Pipeline.  Shipper shall not be liable for any Taxes assessed against Carrier based on Carrier's income, revenues, gross receipts, or ownership of the Pipeline, and all state franchise, license, and similar Taxes required for the maintenance of Carrier's corporate existence.  If Carrier is required to pay any Tax(es) for Shipper, Shipper shall reimburse Carrier for such Tax(es) within thirty (30) Days after receipt of an invoice and supporting documentation from Carrier.    (G) Removal:  If Shipper fails to make arrangements for the removal of its Product from Carrier's facilities upon delivery and a disruption of Carrier's operations or the operation of downstream facilities results, Shipper shall be liable for any actual damages incurred by Carrier as a result of such disruption.    (H) Shipper's Product Loss or Damage from Force Majeure:  Carrier shall not bear any risk for, or be liable for any damage, contamination, degradation, or loss of Shipper's Product resulting from an event of Force Majeure.  If contamination, damage, degradation, or loss of Product from such causes occurs after Shipper's Product has been received by Carrier for transportation and before it has been delivered to Shipper, Shipper shall bear a loss in such proportion as the amount of Shipper's shipment is to all of the Product held in transportation by the Carrier at the time of such loss, damage, contamination, or degradation, and the Shipper shall be entitled to have delivered only such portion of Shipper's shipment as may remain after a deduction of Shipper's proportion of such loss, damage, contamination, or degradation.  (I)  Procedures Relating to Indemnification:  To receive the foregoing indemnities, the Party seeking indemnification must notify the other in writing of a claim or suit promptly (provided that any failure to provide such notice shall not limit a Party's right to indemnification except to the extent that the indemnifying Party shall have been materially prejudiced thereby) and provide reasonable cooperation (at the indemnifying Party's expense) and full authority to the indemnifying Party to defend the claim or suit.  Notwithstanding the foregoing, no indemnifying Party shall be entitled to settle any claim or suit without the consent of the indemnified Party unless such settlement contains a full release of the indemnified Party without any liability for any monetary damages or any type of equitable relief.  Neither Party shall have any obligation to indemnify the other under any settlement made without its written consent.  Rule 20:  Scheduling of Delivery       When Shippers request delivery from the Pipeline at a Delivery Point of a volume of Product greater than can be immediately delivered, Carrier shall use commercially reasonable efforts to schedule delivery of such volumes.  Carrier shall not be liable for any delay in delivery of any such volumes resulting from such scheduling of delivery.  Rule 21:  Pipeage or Other Contracts       Separate pipeage and other contracts, in accordance with this Tariff and these regulations covering further details, may be required by Carrier before any duty for transportation shall arise.         Rule 22:  TSA Program    The Committed Rates applicable to this Rule 22 are listed in Carrier's Rates Tariff, and are subject to the following conditions:  (A) Term and Rates:  All Committed Shippers who execute a TSA with Carrier for an initial TSA term of ten (10) years and who agree to a specified acreage dedication per a validly executed TSA, shall be entitled to the rights and benefits outlined in this Rule 22 and the Committed Rates set forth in the Carrier's Rates Tariff.  The initial TSA term may be extended under the terms of the TSA.      (B) Dedication Required:  For the duration specified in the TSA, Committed Shipper shall dedicate 100% of Product that may be produced from the mineral interests in its acreage dedication, at least up to a quantity equal to its MDQ, for the purpose of transporting such Product.  For such volumes, Committed Shipper shall pay the Committed Rates specified in Carrier's Rates Tariff.     Rule 23: Gravity Bank        As of the Completion date, there will not be a gravity bank on the Pipeline.  After the Completion date, the Carrier, on its own initiative or at the request of at least one of the Committed Shippers, can bring forth a request for the establishment of a gravity bank.    Rule 24:  Connection Policy       Carrier offers limited interconnection service to facilitate the necessary connections associated with the construction of the original pipeline system and related facilities ("Connections Policy"). These connections to Carrier's System will be subject to generally-accepted industry standards and all regulatory standards for design and construction, will meet the hydraulic requirements necessary to protect the safety, security, integrity and efficient operation of Carrier's pipeline at the point of connection, and will not degrade the available service or quality of service that exists for Shippers absent any such connection.  Presently, Carrier does not offer interconnection service with other Crude Petroleum transportation pipelines.  Carrier will consider requests for new connections to lease automated custody transfer ("LACT") equipment on a not unduly discriminatory basis.    Rule 25: Truck Unloading       Shipments unloaded from tank trucks into Carrier's facilities will be subject to a per- Barrel charge, under separate contract.    EXPLANATION OF REFERENCE MARKS:    [N] New  [W] Change in Wording Only  [C]  Cancel                            Washington Crossing Field Services, LLC  [W] F.E.R.C. No. 1.1.01.0.0  Page 4 of 4        FERC ICA OIL TARIFF F.E.R.C. No. 1.1.0  (Cancels F.E.R.C. No. 1.0.0)</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>727</filing_id>
      <filing_title>WCFS Cancellation Notice Filing</filing_title>
      <filing_type>880</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2021-04-01</current_effective_date>
      <ferc_order_date>2021-04-23</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
    <record_data>
      <record_id>1725</record_id>
      <option_code>A</option_code>
      <record_title>FERC No. 2.0.0</record_title>
      <record_content_desc xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_version_num>2.1.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>2000</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2021-04-01</proposed_effective_date>
      <priority_order>2000</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data>e1xydGYxXGFkZWZsYW5nMTAyNVxhbnNpXGFuc2ljcGcxMjUyXHVjMVxhZGVmZjM3XGRlZmYwXHN0c2hmZGJjaDMxNTA1XHN0c2hmbG9jaDMxNTA2XHN0c2hmaGljaDMxNTA2XHN0c2hmYmkzMTUwN1xkZWZsYW5nMTAzM1xkZWZsYW5nZmUxMDMzXHRoZW1lbGFuZzEwMzNcdGhlbWVsYW5nZmUwXHRoZW1lbGFuZ2NzMHtcZm9udHRibHtcZjBcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDIwNjAzMDUwNDA1MDIwMzA0fVRpbWVzIE5ldyBSb21hbjt9e1xmMVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwYjA2MDQwMjAyMDIwMjAyMDR9QXJpYWw7fQ0Ke1xmM1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MlxmcHJxMntcKlxwYW5vc2UgMDUwNTAxMDIwMTA3MDYwMjA1MDd9U3ltYm9sO317XGYzNFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwNDA1MDMwNTA0MDYwMzAyMDR9Q2FtYnJpYSBNYXRoO317XGYzN1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwZjA1MDIwMjAyMDQwMzAyMDR9Q2FsaWJyaTt9DQp7XGY0M1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwNDA1MDMwNTA0MDYwMzAyMDR9Q2FtYnJpYTt9e1xmNDRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTIgVW5pdmVyc3tcKlxmYWx0IEFyaWFsfTt9e1xmNDVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNjA0MDMwNTA0MDQwMjA0fVRhaG9tYTt9DQp7XGY0NlxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDBcZnBycTF7XCpccGFub3NlIDAyMGIwNjA5MDIwMjA0MDMwMjA0fUNvbnNvbGFzO317XGZsb21ham9yXGYzMTUwMFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwMjA2MDMwNTA0MDUwMjAzMDR9VGltZXMgTmV3IFJvbWFuO30NCntcZmRibWFqb3JcZjMxNTAxXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjAyMDYwMzA1MDQwNTAyMDMwNH1UaW1lcyBOZXcgUm9tYW47fXtcZmhpbWFqb3JcZjMxNTAyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBmMDMwMjAyMDIwNDAzMDIwNH1DYWxpYnJpIExpZ2h0O30NCntcZmJpbWFqb3JcZjMxNTAzXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjAyMDYwMzA1MDQwNTAyMDMwNH1UaW1lcyBOZXcgUm9tYW47fXtcZmxvbWlub3JcZjMxNTA0XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjAyMDYwMzA1MDQwNTAyMDMwNH1UaW1lcyBOZXcgUm9tYW47fQ0Ke1xmZGJtaW5vclxmMzE1MDVcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDIwNjAzMDUwNDA1MDIwMzA0fVRpbWVzIE5ldyBSb21hbjt9e1xmaGltaW5vclxmMzE1MDZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGYwNTAyMDIwMjA0MDMwMjA0fUNhbGlicmk7fQ0Ke1xmYmltaW5vclxmMzE1MDdcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDIwNjAzMDUwNDA1MDIwMzA0fVRpbWVzIE5ldyBSb21hbjt9e1xmNDdcZmJpZGkgXGZyb21hblxmY2hhcnNldDIzOFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQ0U7fXtcZjQ4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgVGltZXMgTmV3IFJvbWFuIEN5cjt9DQp7XGY1MFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYxXGZwcnEyIFRpbWVzIE5ldyBSb21hbiBHcmVlazt9e1xmNTFcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MlxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gVHVyO317XGY1MlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc3XGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoSGVicmV3KTt9e1xmNTNcZmJpZGkgXGZyb21hblxmY2hhcnNldDE3OFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKEFyYWJpYyk7fQ0Ke1xmNTRcZmJpZGkgXGZyb21hblxmY2hhcnNldDE4NlxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQmFsdGljO317XGY1NVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYzXGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoVmlldG5hbWVzZSk7fXtcZjU3XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgQXJpYWwgQ0U7fXtcZjU4XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgQXJpYWwgQ3lyO30NCntcZjYwXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgQXJpYWwgR3JlZWs7fXtcZjYxXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgQXJpYWwgVHVyO317XGY2MlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTc3XGZwcnEyIEFyaWFsIChIZWJyZXcpO317XGY2M1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTc4XGZwcnEyIEFyaWFsIChBcmFiaWMpO30NCntcZjY0XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgQXJpYWwgQmFsdGljO317XGY2NVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYzXGZwcnEyIEFyaWFsIChWaWV0bmFtZXNlKTt9e1xmNDE3XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgQ2FsaWJyaSBDRTt9e1xmNDE4XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgQ2FsaWJyaSBDeXI7fQ0Ke1xmNDIwXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgQ2FsaWJyaSBHcmVlazt9e1xmNDIxXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgQ2FsaWJyaSBUdXI7fXtcZjQyNFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTg2XGZwcnEyIENhbGlicmkgQmFsdGljO317XGY0MjVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2M1xmcHJxMiBDYWxpYnJpIChWaWV0bmFtZXNlKTt9DQp7XGY0NzdcZmJpZGkgXGZyb21hblxmY2hhcnNldDIzOFxmcHJxMiBDYW1icmlhIENFO317XGY0NzhcZmJpZGkgXGZyb21hblxmY2hhcnNldDIwNFxmcHJxMiBDYW1icmlhIEN5cjt9e1xmNDgwXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjFcZnBycTIgQ2FtYnJpYSBHcmVlazt9e1xmNDgxXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjJcZnBycTIgQ2FtYnJpYSBUdXI7fQ0Ke1xmNDg0XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxODZcZnBycTIgQ2FtYnJpYSBCYWx0aWM7fXtcZjQ4NVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYzXGZwcnEyIENhbWJyaWEgKFZpZXRuYW1lc2UpO317XGY0ODdcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIzOFxmcHJxMiBVbml2ZXJzIENFe1wqXGZhbHQgQXJpYWx9O317XGY0ODhcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBVbml2ZXJzIEN5cntcKlxmYWx0IEFyaWFsfTt9DQp7XGY0OTBcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBVbml2ZXJzIEdyZWVre1wqXGZhbHQgQXJpYWx9O317XGY0OTdcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIzOFxmcHJxMiBUYWhvbWEgQ0U7fXtcZjQ5OFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjA0XGZwcnEyIFRhaG9tYSBDeXI7fXtcZjUwMFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIFRhaG9tYSBHcmVlazt9DQp7XGY1MDFcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBUYWhvbWEgVHVyO317XGY1MDJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE3N1xmcHJxMiBUYWhvbWEgKEhlYnJldyk7fXtcZjUwM1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTc4XGZwcnEyIFRhaG9tYSAoQXJhYmljKTt9e1xmNTA0XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgVGFob21hIEJhbHRpYzt9DQp7XGY1MDVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2M1xmcHJxMiBUYWhvbWEgKFZpZXRuYW1lc2UpO317XGY1MDZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIyMlxmcHJxMiBUYWhvbWEgKFRoYWkpO317XGY1MDdcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQyMzhcZnBycTEgQ29uc29sYXMgQ0U7fXtcZjUwOFxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDIwNFxmcHJxMSBDb25zb2xhcyBDeXI7fQ0Ke1xmNTEwXGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTYxXGZwcnExIENvbnNvbGFzIEdyZWVrO317XGY1MTFcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxNjJcZnBycTEgQ29uc29sYXMgVHVyO317XGY1MTRcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxODZcZnBycTEgQ29uc29sYXMgQmFsdGljO317XGY1MTVcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxNjNcZnBycTEgQ29uc29sYXMgKFZpZXRuYW1lc2UpO30NCntcZmxvbWFqb3JcZjMxNTA4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMzhcZnBycTIgVGltZXMgTmV3IFJvbWFuIENFO317XGZsb21ham9yXGYzMTUwOVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjA0XGZwcnEyIFRpbWVzIE5ldyBSb21hbiBDeXI7fXtcZmxvbWFqb3JcZjMxNTExXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjFcZnBycTIgVGltZXMgTmV3IFJvbWFuIEdyZWVrO30NCntcZmxvbWFqb3JcZjMxNTEyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjJcZnBycTIgVGltZXMgTmV3IFJvbWFuIFR1cjt9e1xmbG9tYWpvclxmMzE1MTNcZmJpZGkgXGZyb21hblxmY2hhcnNldDE3N1xmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKEhlYnJldyk7fXtcZmxvbWFqb3JcZjMxNTE0XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNzhcZnBycTIgVGltZXMgTmV3IFJvbWFuIChBcmFiaWMpO30NCntcZmxvbWFqb3JcZjMxNTE1XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxODZcZnBycTIgVGltZXMgTmV3IFJvbWFuIEJhbHRpYzt9e1xmbG9tYWpvclxmMzE1MTZcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2M1xmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKFZpZXRuYW1lc2UpO317XGZkYm1ham9yXGYzMTUxOFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjM4XGZwcnEyIFRpbWVzIE5ldyBSb21hbiBDRTt9DQp7XGZkYm1ham9yXGYzMTUxOVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjA0XGZwcnEyIFRpbWVzIE5ldyBSb21hbiBDeXI7fXtcZmRibWFqb3JcZjMxNTIxXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjFcZnBycTIgVGltZXMgTmV3IFJvbWFuIEdyZWVrO317XGZkYm1ham9yXGYzMTUyMlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYyXGZwcnEyIFRpbWVzIE5ldyBSb21hbiBUdXI7fQ0Ke1xmZGJtYWpvclxmMzE1MjNcZmJpZGkgXGZyb21hblxmY2hhcnNldDE3N1xmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKEhlYnJldyk7fXtcZmRibWFqb3JcZjMxNTI0XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNzhcZnBycTIgVGltZXMgTmV3IFJvbWFuIChBcmFiaWMpO317XGZkYm1ham9yXGYzMTUyNVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTg2XGZwcnEyIFRpbWVzIE5ldyBSb21hbiBCYWx0aWM7fQ0Ke1xmZGJtYWpvclxmMzE1MjZcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2M1xmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKFZpZXRuYW1lc2UpO317XGZoaW1ham9yXGYzMTUyOFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjM4XGZwcnEyIENhbGlicmkgTGlnaHQgQ0U7fXtcZmhpbWFqb3JcZjMxNTI5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgQ2FsaWJyaSBMaWdodCBDeXI7fQ0Ke1xmaGltYWpvclxmMzE1MzFcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBDYWxpYnJpIExpZ2h0IEdyZWVrO317XGZoaW1ham9yXGYzMTUzMlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIENhbGlicmkgTGlnaHQgVHVyO317XGZoaW1ham9yXGYzMTUzNVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTg2XGZwcnEyIENhbGlicmkgTGlnaHQgQmFsdGljO30NCntcZmhpbWFqb3JcZjMxNTM2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjNcZnBycTIgQ2FsaWJyaSBMaWdodCAoVmlldG5hbWVzZSk7fXtcZmJpbWFqb3JcZjMxNTM4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMzhcZnBycTIgVGltZXMgTmV3IFJvbWFuIENFO317XGZiaW1ham9yXGYzMTUzOVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjA0XGZwcnEyIFRpbWVzIE5ldyBSb21hbiBDeXI7fQ0Ke1xmYmltYWpvclxmMzE1NDFcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MVxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gR3JlZWs7fXtcZmJpbWFqb3JcZjMxNTQyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjJcZnBycTIgVGltZXMgTmV3IFJvbWFuIFR1cjt9e1xmYmltYWpvclxmMzE1NDNcZmJpZGkgXGZyb21hblxmY2hhcnNldDE3N1xmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKEhlYnJldyk7fQ0Ke1xmYmltYWpvclxmMzE1NDRcZmJpZGkgXGZyb21hblxmY2hhcnNldDE3OFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKEFyYWJpYyk7fXtcZmJpbWFqb3JcZjMxNTQ1XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxODZcZnBycTIgVGltZXMgTmV3IFJvbWFuIEJhbHRpYzt9e1xmYmltYWpvclxmMzE1NDZcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2M1xmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKFZpZXRuYW1lc2UpO30NCntcZmxvbWlub3JcZjMxNTQ4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMzhcZnBycTIgVGltZXMgTmV3IFJvbWFuIENFO317XGZsb21pbm9yXGYzMTU0OVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjA0XGZwcnEyIFRpbWVzIE5ldyBSb21hbiBDeXI7fXtcZmxvbWlub3JcZjMxNTUxXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjFcZnBycTIgVGltZXMgTmV3IFJvbWFuIEdyZWVrO30NCntcZmxvbWlub3JcZjMxNTUyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjJcZnBycTIgVGltZXMgTmV3IFJvbWFuIFR1cjt9e1xmbG9taW5vclxmMzE1NTNcZmJpZGkgXGZyb21hblxmY2hhcnNldDE3N1xmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKEhlYnJldyk7fXtcZmxvbWlub3JcZjMxNTU0XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNzhcZnBycTIgVGltZXMgTmV3IFJvbWFuIChBcmFiaWMpO30NCntcZmxvbWlub3JcZjMxNTU1XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxODZcZnBycTIgVGltZXMgTmV3IFJvbWFuIEJhbHRpYzt9e1xmbG9taW5vclxmMzE1NTZcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2M1xmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKFZpZXRuYW1lc2UpO317XGZkYm1pbm9yXGYzMTU1OFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjM4XGZwcnEyIFRpbWVzIE5ldyBSb21hbiBDRTt9DQp7XGZkYm1pbm9yXGYzMTU1OVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjA0XGZwcnEyIFRpbWVzIE5ldyBSb21hbiBDeXI7fXtcZmRibWlub3JcZjMxNTYxXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjFcZnBycTIgVGltZXMgTmV3IFJvbWFuIEdyZWVrO317XGZkYm1pbm9yXGYzMTU2MlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYyXGZwcnEyIFRpbWVzIE5ldyBSb21hbiBUdXI7fQ0Ke1xmZGJtaW5vclxmMzE1NjNcZmJpZGkgXGZyb21hblxmY2hhcnNldDE3N1xmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKEhlYnJldyk7fXtcZmRibWlub3JcZjMxNTY0XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNzhcZnBycTIgVGltZXMgTmV3IFJvbWFuIChBcmFiaWMpO317XGZkYm1pbm9yXGYzMTU2NVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTg2XGZwcnEyIFRpbWVzIE5ldyBSb21hbiBCYWx0aWM7fQ0Ke1xmZGJtaW5vclxmMzE1NjZcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2M1xmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKFZpZXRuYW1lc2UpO317XGZoaW1pbm9yXGYzMTU2OFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjM4XGZwcnEyIENhbGlicmkgQ0U7fXtcZmhpbWlub3JcZjMxNTY5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgQ2FsaWJyaSBDeXI7fQ0Ke1xmaGltaW5vclxmMzE1NzFcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBDYWxpYnJpIEdyZWVrO317XGZoaW1pbm9yXGYzMTU3MlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIENhbGlicmkgVHVyO317XGZoaW1pbm9yXGYzMTU3NVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTg2XGZwcnEyIENhbGlicmkgQmFsdGljO30NCntcZmhpbWlub3JcZjMxNTc2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjNcZnBycTIgQ2FsaWJyaSAoVmlldG5hbWVzZSk7fXtcZmJpbWlub3JcZjMxNTc4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMzhcZnBycTIgVGltZXMgTmV3IFJvbWFuIENFO317XGZiaW1pbm9yXGYzMTU3OVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjA0XGZwcnEyIFRpbWVzIE5ldyBSb21hbiBDeXI7fQ0Ke1xmYmltaW5vclxmMzE1ODFcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MVxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gR3JlZWs7fXtcZmJpbWlub3JcZjMxNTgyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjJcZnBycTIgVGltZXMgTmV3IFJvbWFuIFR1cjt9e1xmYmltaW5vclxmMzE1ODNcZmJpZGkgXGZyb21hblxmY2hhcnNldDE3N1xmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKEhlYnJldyk7fQ0Ke1xmYmltaW5vclxmMzE1ODRcZmJpZGkgXGZyb21hblxmY2hhcnNldDE3OFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKEFyYWJpYyk7fXtcZmJpbWlub3JcZjMxNTg1XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxODZcZnBycTIgVGltZXMgTmV3IFJvbWFuIEJhbHRpYzt9e1xmYmltaW5vclxmMzE1ODZcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2M1xmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKFZpZXRuYW1lc2UpO319DQp7XGNvbG9ydGJsO1xyZWQwXGdyZWVuMFxibHVlMDtccmVkMFxncmVlbjBcYmx1ZTI1NTtccmVkMFxncmVlbjI1NVxibHVlMjU1O1xyZWQwXGdyZWVuMjU1XGJsdWUwO1xyZWQyNTVcZ3JlZW4wXGJsdWUyNTU7XHJlZDI1NVxncmVlbjBcYmx1ZTA7XHJlZDI1NVxncmVlbjI1NVxibHVlMDtccmVkMjU1XGdyZWVuMjU1XGJsdWUyNTU7XHJlZDBcZ3JlZW4wXGJsdWUxMjg7XHJlZDBcZ3JlZW4xMjhcYmx1ZTEyODtccmVkMFxncmVlbjEyOFxibHVlMDsNClxyZWQxMjhcZ3JlZW4wXGJsdWUxMjg7XHJlZDEyOFxncmVlbjBcYmx1ZTA7XHJlZDEyOFxncmVlbjEyOFxibHVlMDtccmVkMTI4XGdyZWVuMTI4XGJsdWUxMjg7XHJlZDE5MlxncmVlbjE5MlxibHVlMTkyO1xyZWQwXGdyZWVuMFxibHVlMDtccmVkMFxncmVlbjBcYmx1ZTA7XHJlZDU0XGdyZWVuOTVcYmx1ZTE0NTtccmVkNzlcZ3JlZW4xMjlcYmx1ZTE4OTtccmVkMzZcZ3JlZW42M1xibHVlOTY7XHJlZDY0XGdyZWVuNjRcYmx1ZTY0Ow0KXHJlZDIzXGdyZWVuNTRcYmx1ZTkzO1xyZWQxOTJcZ3JlZW44MFxibHVlNzc7XHJlZDI1NVxncmVlbjI1NVxibHVlMTUzO1xyZWQyNTVcZ3JlZW4xNTNcYmx1ZTA7XHJlZDE1M1xncmVlbjIwNFxibHVlMjU1O1xyZWQwXGdyZWVuMTkyXGJsdWUwO1xyZWQxOTJcZ3JlZW4xMjhcYmx1ZTEyODtcY3RleHRvbmVcY3RpbnQyNTVcY3NoYWRlMjU1XHJlZDBcZ3JlZW4wXGJsdWUwO317XCpcZGVmY2hwIA0KXGZzMjJcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDUgfXtcKlxkZWZwYXAgXHFsIFxsaTBccmkwXHNhMTYwXHNsMjU5XHNsbXVsdDFcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIH1cbm9xZnByb21vdGUge1xzdHlsZXNoZWV0e1xxbCBcbGkwXHJpMFxzYTIwMFxzbDI3NlxzbG11bHQxDQpcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYzN1xhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYzN1xoaWNoXGFmMzdcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzbmV4dDAgXHNxZm9ybWF0IFxzcHJpb3JpdHkwIFxzdHlyc2lkMTU4MjIzODUgTm9ybWFsO317DQpcczFccWwgXGxpMFxyaTBcc2I0ODBcc2wyNzZcc2xtdWx0MVxrZWVwXGtlZXBuXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xvdXRsaW5lbGV2ZWwwXHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYzN1xhZnMyOFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMyOFxjZjE5XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmNDNcaGljaFxhZjQzXGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MCBcc2xpbmsxNSBcc3Fmb3JtYXQgXHNwcmlvcml0eTkgXHN0eXJzaWQxMjcyMzQxNCBoZWFkaW5nIDE7fXtcczJccWwgXGxpMFxyaTBcc2IyMDBcc2wyNzZcc2xtdWx0MVxrZWVwXGtlZXBuXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xvdXRsaW5lbGV2ZWwxXHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYzN1xhZnMyNlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcYlxmczI2XGNmMjBcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGY0M1xoaWNoXGFmNDNcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MCBcc2xpbmsxNiBcc3Fmb3JtYXQgXHNwcmlvcml0eTkgXHN0eXJzaWQxMjcyMzQxNCBoZWFkaW5nIDI7fXtcczNccWwgXGxpMFxyaTBcc2IyMDBcc2wyNzZcc2xtdWx0MQ0KXGtlZXBca2VlcG5cbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXG91dGxpbmVsZXZlbDJccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjM3XGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxmczIwXGNmMjBcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGY0M1xoaWNoXGFmNDNcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMCBcc25leHQwIFxzbGluazE3IFxzcWZvcm1hdCBcc3ByaW9yaXR5OSBcc3R5cnNpZDEyNzIzNDE0IGhlYWRpbmcgMzt9e1xzNFxxbCBcbGkwXHJpMFxzYjIwMFxzbDI3NlxzbG11bHQxXGtlZXBca2VlcG5cbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXG91dGxpbmVsZXZlbDNccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjM3XGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxiXGlcZnMyMFxjZjIwXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmNDNcaGljaFxhZjQzXGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDAgXHNsaW5rMTggXHNxZm9ybWF0IFxzcHJpb3JpdHk5IFxzdHlyc2lkMTI3MjM0MTQgaGVhZGluZyA0O317XHM1XHFsIFxsaTBccmkwXHNiMjAwXHNsMjc2XHNsbXVsdDENClxrZWVwXGtlZXBuXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xvdXRsaW5lbGV2ZWw0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYzN1xhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjBcY2YyMVxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjQzXGhpY2hcYWY0M1xkYmNoXGFmMzE1MDVcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24wIFxzbmV4dDAgXHNsaW5rMTkgXHNxZm9ybWF0IFxzcHJpb3JpdHk5IFxzdHlyc2lkMTI3MjM0MTQgaGVhZGluZyA1O317XHM2XHFsIFxsaTBccmkwXHNiMjAwXHNsMjc2XHNsbXVsdDFca2VlcFxrZWVwblxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9cb3V0bGluZWxldmVsNVxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMzdcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGlcZnMyMFxjZjIxXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmNDNcaGljaFxhZjQzXGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDAgXHNsaW5rMjAgXHNxZm9ybWF0IFxzcHJpb3JpdHk5IFxzdHlyc2lkMTI3MjM0MTQgaGVhZGluZyA2O317XHM3XHFsIFxsaTBccmkwXHNiMjAwXHNsMjc2XHNsbXVsdDENClxrZWVwXGtlZXBuXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xvdXRsaW5lbGV2ZWw2XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYzN1xhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGlcZnMyMFxjZjIyXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmNDNcaGljaFxhZjQzXGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MCBcc2xpbmsyMSBcc3Fmb3JtYXQgXHNwcmlvcml0eTkgXHN0eXJzaWQxMjcyMzQxNCBoZWFkaW5nIDc7fXtcczhccWwgXGxpMFxyaTBcc2IyMDBcc2wyNzZcc2xtdWx0MVxrZWVwXGtlZXBuXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xvdXRsaW5lbGV2ZWw3XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYzN1xhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyMFxjZjIwXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmNDNcaGljaFxhZjQzXGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDAgXHNsaW5rMjIgXHNxZm9ybWF0IFxzcHJpb3JpdHk5IFxzdHlyc2lkMTI3MjM0MTQgaGVhZGluZyA4O317XHM5XHFsIFxsaTBccmkwXHNiMjAwXHNsMjc2XHNsbXVsdDENClxrZWVwXGtlZXBuXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xvdXRsaW5lbGV2ZWw4XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYzN1xhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGlcZnMyMFxjZjIyXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmNDNcaGljaFxhZjQzXGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MCBcc2xpbmsyMyBcc3Fmb3JtYXQgXHNwcmlvcml0eTkgXHN0eXJzaWQxMjcyMzQxNCBoZWFkaW5nIDk7fXtcKlxjczEwIFxhZGRpdGl2ZSBcc3NlbWloaWRkZW4gXHN1bmhpZGV1c2VkIFxzcHJpb3JpdHkxIERlZmF1bHQgUGFyYWdyYXBoIEZvbnQ7fXtcKg0KXHRzMTFcdHNyb3dkXHRyZnRzV2lkdGhCM1x0cnBhZGRsMTA4XHRycGFkZHIxMDhcdHJwYWRkZmwzXHRycGFkZGZ0M1x0cnBhZGRmYjNcdHJwYWRkZnIzXHRibGluZDBcdGJsaW5kdHlwZTNcdHN2ZXJ0YWx0XHRzYnJkcnRcdHNicmRybFx0c2JyZHJiXHRzYnJkcnJcdHNicmRyZGdsXHRzYnJkcmRnclx0c2JyZHJoXHRzYnJkcnYgXHFsIFxsaTBccmkwXHNhMTYwXHNsMjU5XHNsbXVsdDENClx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc25leHQxMSBcc3NlbWloaWRkZW4gXHN1bmhpZGV1c2VkIA0KTm9ybWFsIFRhYmxlO317XCpcY3MxNSBcYWRkaXRpdmUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyOCBcbHRyY2hcZmNzMCBcYlxmNDNcZnMyOFxjZjE5IFxzYmFzZWRvbjEwIFxzbGluazEgXHNsb2NrZWQgXHNwcmlvcml0eTkgXHN0eXJzaWQxMjcyMzQxNCBIZWFkaW5nIDEgQ2hhcjt9e1wqXGNzMTYgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhZjBcYWZzMjYgXGx0cmNoXGZjczAgXGJcZjQzXGZzMjZcY2YyMCANClxzYmFzZWRvbjEwIFxzbGluazIgXHNsb2NrZWQgXHNwcmlvcml0eTkgXHN0eXJzaWQxMjcyMzQxNCBIZWFkaW5nIDIgQ2hhcjt9e1wqXGNzMTcgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGJcZjQzXGZzMjBcY2YyMCBcc2Jhc2Vkb24xMCBcc2xpbmszIFxzbG9ja2VkIFxzcHJpb3JpdHk5IFxzdHlyc2lkMTI3MjM0MTQgSGVhZGluZyAzIENoYXI7fXtcKlxjczE4IFxhZGRpdGl2ZSBccnRsY2hcZmNzMSANClxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGJcaVxmNDNcZnMyMFxjZjIwIFxzYmFzZWRvbjEwIFxzbGluazQgXHNsb2NrZWQgXHNwcmlvcml0eTkgXHN0eXJzaWQxMjcyMzQxNCBIZWFkaW5nIDQgQ2hhcjt9e1wqXGNzMTkgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGY0M1xmczIwXGNmMjEgXHNiYXNlZG9uMTAgXHNsaW5rNSBcc2xvY2tlZCBcc3ByaW9yaXR5OSBcc3R5cnNpZDEyNzIzNDE0IA0KSGVhZGluZyA1IENoYXI7fXtcKlxjczIwIFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxpXGY0M1xmczIwXGNmMjEgXHNiYXNlZG9uMTAgXHNsaW5rNiBcc2xvY2tlZCBcc3ByaW9yaXR5OSBcc3R5cnNpZDEyNzIzNDE0IEhlYWRpbmcgNiBDaGFyO317XCpcY3MyMSBcYWRkaXRpdmUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcaVxmNDNcZnMyMFxjZjIyIA0KXHNiYXNlZG9uMTAgXHNsaW5rNyBcc2xvY2tlZCBcc3ByaW9yaXR5OSBcc3R5cnNpZDEyNzIzNDE0IEhlYWRpbmcgNyBDaGFyO317XCpcY3MyMiBcYWRkaXRpdmUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZjQzXGZzMjBcY2YyMCBcc2Jhc2Vkb24xMCBcc2xpbms4IFxzbG9ja2VkIFxzcHJpb3JpdHk5IFxzdHlyc2lkMTI3MjM0MTQgSGVhZGluZyA4IENoYXI7fXtcKlxjczIzIFxhZGRpdGl2ZSBccnRsY2hcZmNzMSANClxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGlcZjQzXGZzMjBcY2YyMiBcc2Jhc2Vkb24xMCBcc2xpbms5IFxzbG9ja2VkIFxzcHJpb3JpdHk5IFxzdHlyc2lkMTI3MjM0MTQgSGVhZGluZyA5IENoYXI7fXtcczI0XHFsIFxsaTBccmkwXHNhMjAwXHNsMjc2XHNsbXVsdDFcbm93aWRjdGxwYXJcdHFjXHR4NDMyMFx0eDg2MzBcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYzN1xhZnMyMFxhbGFuZzEwMjUgDQpcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjQ0XGhpY2hcYWY0NFxkYmNoXGFmMzE1MDVcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQyNCBcc2xpbmsyNSBcc3R5cnNpZDEyNzIzNDE0IGhlYWRlcjt9e1wqXGNzMjUgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGY0NFxmczIwIA0KXHNiYXNlZG9uMTAgXHNsaW5rMjQgXHNsb2NrZWQgXHN0eXJzaWQxMjcyMzQxNCBIZWFkZXIgQ2hhcjt9e1wqXGNzMjYgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGY0NFxmczI0IFxzYmFzZWRvbjEwIFxzdHlyc2lkMTI3MjM0MTQgcGFnZSBudW1iZXI7fXtcczI3XHFsIFxsaTBccmkwXHNhMjAwXHNsMjc2XHNsbXVsdDFcbm93aWRjdGxwYXINClx0cWNcdHg0MzIwXHR4ODYzMFx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjM3XGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjQ0XGhpY2hcYWY0NFxkYmNoXGFmMzE1MDVcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQyNyBcc2xpbmsyOCBcc3R5cnNpZDEyNzIzNDE0IGZvb3Rlcjt9e1wqXGNzMjggDQpcYWRkaXRpdmUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZjQ0XGZzMjAgXHNiYXNlZG9uMTAgXHNsaW5rMjcgXHNsb2NrZWQgXHN0eXJzaWQxMjcyMzQxNCBGb290ZXIgQ2hhcjt9e1xzMjlccWwgXGZpLTUwNDBcbGk1MDQwXHJpMFxzYTIwMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW41MDQwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjM3XGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQyOSBcc2xpbmszMCBcc3R5cnNpZDEyNzIzNDE0IEJvZHkgVGV4dCAyO317XCpcY3MzMCBcYWRkaXRpdmUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZjBcZnMyMCBcc2Jhc2Vkb24xMCBcc2xpbmsyOSBcc2xvY2tlZCBcc3R5cnNpZDEyNzIzNDE0IA0KQm9keSBUZXh0IDIgQ2hhcjt9e1xzMzFccWwgXGxpNzIwXHJpMFxzYTIwMFxrZWVwblxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW43MjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMzdcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczIwXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMzdcaGljaFxhZjM3XGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MzEgXHNsaW5rMzIgXHN0eXJzaWQxMjcyMzQxNCBCb2R5IFRleHQgSW5kZW50IDM7fXtcKlxjczMyIFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxmMzdcZnMyMCBcc2Jhc2Vkb24xMCBcc2xpbmszMSBcc2xvY2tlZCBcc3R5cnNpZDEyNzIzNDE0IEJvZHkgVGV4dCBJbmRlbnQgMyBDaGFyO317XHMzM1xxbCBcbGkwXHJpMFxzYTMwMFxub3dpZGN0bHBhclxicmRyYg0KXGJyZHJzXGJyZHJ3MjBcYnJzcDgwXGJyZHJjZjIwIFx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4wXGl0YXAwXGNvbnRleHR1YWxzcGFjZSBccnRsY2hcZmNzMSBcYWYzN1xhZnM1MlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzNTJcZXhwbmQxXGV4cG5kdHc1XGNmMjNcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xrZXJuaW5nMjhcbG9jaFxmNDNcaGljaFxhZjQzXGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MCBcc2xpbmszNCBcc3Fmb3JtYXQgXHNwcmlvcml0eTEwIFxzdHlyc2lkMTI3MjM0MTQgVGl0bGU7fXtcKlxjczM0IFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwXGFmczUyIFxsdHJjaFxmY3MwIFxmNDNcZnM1MlxleHBuZDFcZXhwbmR0dzVcY2YyM1xrZXJuaW5nMjggXHNiYXNlZG9uMTAgXHNsaW5rMzMgXHNsb2NrZWQgXHNwcmlvcml0eTEwIFxzdHlyc2lkMTI3MjM0MTQgVGl0bGUgQ2hhcjt9ew0KXHMzNVxxbCBcbGkwXHJpMFxzYTIwMFxzbDI3NlxzbG11bHQxXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMzdcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxpXGZzMjRcZXhwbmQzXGV4cG5kdHcxNVxjZjIwXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmNDNcaGljaFxhZjQzXGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MCBcc2xpbmszNiBcc3Fmb3JtYXQgXHNwcmlvcml0eTExIFxzdHlyc2lkMTI3MjM0MTQgU3VidGl0bGU7fXtcKlxjczM2IFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxpXGY0M1xmczI0XGV4cG5kM1xleHBuZHR3MTVcY2YyMCBcc2Jhc2Vkb24xMCBcc2xpbmszNSBcc2xvY2tlZCBcc3ByaW9yaXR5MTEgXHN0eXJzaWQxMjcyMzQxNCBTdWJ0aXRsZSBDaGFyO317XCpcY3MzNyANClxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiIFxzYmFzZWRvbjEwIFxzcWZvcm1hdCBcc3ByaW9yaXR5MjIgXHN0eXJzaWQxMjcyMzQxNCBTdHJvbmc7fXtcKlxjczM4IFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpIFxzYmFzZWRvbjEwIFxzcWZvcm1hdCBcc3ByaW9yaXR5MjAgXHN0eXJzaWQxMjcyMzQxNCBFbXBoYXNpczt9ew0KXHMzOVxxbCBcbGkwXHJpMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjM3XGFmczIyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjM3XGhpY2hcYWYzN1xkYmNoXGFmMzE1MDVcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNuZXh0MzkgXHNxZm9ybWF0IFxzcHJpb3JpdHkxIFxzdHlyc2lkMTI3MjM0MTQgDQpObyBTcGFjaW5nO317XHM0MFxxbCBcbGk3MjBccmkwXHNhMjAwXHNsMjc2XHNsbXVsdDFcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluNzIwXGl0YXAwXGNvbnRleHR1YWxzcGFjZSBccnRsY2hcZmNzMSBcYWYzN1xhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYzN1xoaWNoXGFmMzdcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMCBcc25leHQ0MCBcc3Fmb3JtYXQgXHN0eXJzaWQxMjcyMzQxNCBMaXN0IFBhcmFncmFwaDt9e1xzNDFccWwgXGxpMFxyaTBcc2EyMDBcc2wyNzZcc2xtdWx0MVxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjM3XGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxpXGZzMjBcY2YxXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMzdcaGljaFxhZjM3XGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDAgXHNsaW5rNDIgXHNxZm9ybWF0IFxzcHJpb3JpdHkyOSBcc3R5cnNpZDEyNzIzNDE0IFF1b3RlO317XCpcY3M0MiBcYWRkaXRpdmUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcaVxmMzdcZnMyMFxjZjEgDQpcc2Jhc2Vkb24xMCBcc2xpbms0MSBcc2xvY2tlZCBcc3ByaW9yaXR5MjkgXHN0eXJzaWQxMjcyMzQxNCBRdW90ZSBDaGFyO317XHM0M1xxbCBcbGk5MzZccmk5MzZcc2IyMDBcc2EyODBcc2wyNzZcc2xtdWx0MVxub3dpZGN0bHBhclxicmRyYlxicmRyc1xicmRydzEwXGJyc3A4MFxicmRyY2YyMCBcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjkzNlxsaW45MzZcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMzdcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGJcaVxmczIwXGNmMjBcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYzN1xoaWNoXGFmMzdcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MCBcc2xpbms0NCBcc3Fmb3JtYXQgXHNwcmlvcml0eTMwIFxzdHlyc2lkMTI3MjM0MTQgSW50ZW5zZSBRdW90ZTt9e1wqXGNzNDQgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGJcaVxmMzdcZnMyMFxjZjIwIA0KXHNiYXNlZG9uMTAgXHNsaW5rNDMgXHNsb2NrZWQgXHNwcmlvcml0eTMwIFxzdHlyc2lkMTI3MjM0MTQgSW50ZW5zZSBRdW90ZSBDaGFyO317XCpcY3M0NSBcYWRkaXRpdmUgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaVxjZjE1IFxzYmFzZWRvbjEwIFxzcWZvcm1hdCBcc3ByaW9yaXR5MTkgXHN0eXJzaWQxMjcyMzQxNCBTdWJ0bGUgRW1waGFzaXM7fXtcKlxjczQ2IFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGJcaVxjZjIwIFxzYmFzZWRvbjEwIFxzcWZvcm1hdCBcc3ByaW9yaXR5MjEgXHN0eXJzaWQxMjcyMzQxNCBJbnRlbnNlIEVtcGhhc2lzO317XCpcY3M0NyBcYWRkaXRpdmUgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcc2NhcHNcdWxcY2YyNCBcc2Jhc2Vkb24xMCBcc3Fmb3JtYXQgXHNwcmlvcml0eTMxIFxzdHlyc2lkMTI3MjM0MTQgU3VidGxlIFJlZmVyZW5jZTt9e1wqXGNzNDggXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcYlxzY2Fwc1x1bFxleHBuZDFcZXhwbmR0dzVcY2YyNCBcc2Jhc2Vkb24xMCBcc3Fmb3JtYXQgXHNwcmlvcml0eTMyIFxzdHlyc2lkMTI3MjM0MTQgSW50ZW5zZSBSZWZlcmVuY2U7fXtcKlxjczQ5IFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXHNjYXBzXGV4cG5kMVxleHBuZHR3NSBcc2Jhc2Vkb24xMCBcc3Fmb3JtYXQgXHNwcmlvcml0eTMzIFxzdHlyc2lkMTI3MjM0MTQgQm9vayBUaXRsZTt9ew0KXHM1MFxxbCBcbGkwXHJpMFxzYjQ4MFxzbDI3NlxzbG11bHQxXGtlZXBca2VlcG5cbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYzN1xhZnMyOFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMyOFxjZjE5XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmNDNcaGljaFxhZjQzXGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjEgXHNuZXh0MCBcc3Fmb3JtYXQgXHNwcmlvcml0eTM5IFxzdHlyc2lkMTI3MjM0MTQgVE9DIEhlYWRpbmc7fXtcczUxXHFsIFxsaTBccmkwXHNhMjAwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMzdcYWZzMThcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGJcZnMxOFxjZjIwXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMzdcaGljaFxhZjM3XGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDAgXHNxZm9ybWF0IFxzcHJpb3JpdHkzNSBcc3R5cnNpZDEyNzIzNDE0IGNhcHRpb247fXtcczUyXHFsIFxsaTBccmkwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgDQpcYWYzN1xhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcY2YxXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNuZXh0NTIgXHNwcmlvcml0eTAgXHN0eXJzaWQxMjcyMzQxNCBEZWZhdWx0O317XCpcdHM1M1x0c3Jvd2RcdHJicmRydFxicmRyc1xicmRydzEwIFx0cmJyZHJsXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmJcYnJkcnNcYnJkcncxMCANClx0cmJyZHJyXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmhcYnJkcnNcYnJkcncxMCBcdHJicmRydlxicmRyc1xicmRydzEwIFx0cmZ0c1dpZHRoQjNcdHJwYWRkbDEwOFx0cnBhZGRyMTA4XHRycGFkZGZsM1x0cnBhZGRmdDNcdHJwYWRkZmIzXHRycGFkZGZyM1x0YmxpbmQwXHRibGluZHR5cGUzXHRzdmVydGFsdFx0c2JyZHJ0XHRzYnJkcmxcdHNicmRyYlx0c2JyZHJyXHRzYnJkcmRnbFx0c2JyZHJkZ3JcdHNicmRyaFx0c2JyZHJ2IA0KXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMTEgXHNuZXh0NTMgXHNwcmlvcml0eTU5IFxzdHlyc2lkMTI3MjM0MTQgVGFibGUgR3JpZDt9e1xzNTRccWwgXGxpMFxyaTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYzN1xhZnMxNlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjQ1XGhpY2hcYWY0NVxkYmNoXGFmMzE1MDVcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQ1NCBcc2xpbms1NSBcc3R5cnNpZDEyNzIzNDE0IEJhbGxvb24gVGV4dDt9e1wqXGNzNTUgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhZjBcYWZzMTYgXGx0cmNoXGZjczAgXGY0NVxmczE2IA0KXHNiYXNlZG9uMTAgXHNsaW5rNTQgXHNsb2NrZWQgXHN0eXJzaWQxMjcyMzQxNCBCYWxsb29uIFRleHQgQ2hhcjt9e1wqXGNzNTYgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGNmMiBcc2Jhc2Vkb24xMCBcc3R5cnNpZDEyNzIzNDE0IEh5cGVybGluazt9e1xzNTdccWogXGxpNzIwXHJpMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW43MjBcaXRhcDBcY29udGV4dHVhbHNwYWNlIA0KXHJ0bGNoXGZjczEgXGFmMzdcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQ1NyBcc3Fmb3JtYXQgXHNwcmlvcml0eTM0IFxzdHlyc2lkMTI3MjM0MTQgQ29sb3JmdWwgTGlzdCAtIEFjY2VudCAxMTt9e1xzNThccWogXGxpMFxyaTBcbm93aWRjdGxwYXINClx0cWNcdHg0NjgwXHR4ODYzMFx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMVxoaWNoXGFmMVxkYmNoXGFmMzE1MDVcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQ1OCBcc3ByaW9yaXR5MCBcc3R5cnNpZDEyNzIzNDE0IFZFIEFsaWduZWQgVGV4dCxBVDt9ew0KXHM1OVxxaiBcbGkwXHJpMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMVxoaWNoXGFmMVxkYmNoXGFmMzE1MDVcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQ1OSBcc3ByaW9yaXR5MCBcc3R5cnNpZDEyNzIzNDE0IA0KVkUgQm9keSBUZXh0IE5vIFNwYWNlLEJUTlM7fXtcczYwXHFqIFxsaTBccmkwXHNhMjQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0NjAgXHNwcmlvcml0eTAgXHN0eXJzaWQxMjcyMzQxNCBWRSBCb2R5IFRleHQsQlQ7fXtcczYxXHFsIFxsaTBccmkwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMzdcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24yNyBcc25leHQyNyBcc3ByaW9yaXR5MCBcc3R5cnNpZDEyNzIzNDE0IERvY0lEO317XCpcY3M2MiBcYWRkaXRpdmUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMzNcbGFuZ2ZlMFxsYW5nbnAxMDMzIA0KXHNiYXNlZG9uMTAgXHNwcmlvcml0eTEgXHN0eXJzaWQxMjcyMzQxNCBObyBTcGFjaW5nIENoYXI7fXtcKlxjczYzIFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwXGFmczIyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZjBcZnMyMlxsYW5nMTAzM1xsYW5nZmUwXGxhbmducDEwMzMgXHNiYXNlZG9uNjIgXHNwcmlvcml0eTAgXHN0eXJzaWQxMjcyMzQxNCBEb2NJRCBDaGFyO317XHM2NFxxaiBcZmktNzIwXGxpNzIwXHJpMFxub3dpZGN0bHBhcg0KXHR4NzIwXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjcyMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYzN1xhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc25leHQ2NCBcc3R5cnNpZDEyNzIzNDE0IDFBdXRvTGlzdDE7fXsNClxzNjVccWwgXGxpMFxyaTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWY0NVxhZnMxNlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGY0NVxoaWNoXGFmNDVcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0NjUgXHNsaW5rNjYgXHN0eXJzaWQxMjcyMzQxNCANCkRvY3VtZW50IE1hcDt9e1wqXGNzNjYgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhZjQ1XGFmczE2IFxsdHJjaFxmY3MwIFxmNDVcZnMxNiBcc2Jhc2Vkb24xMCBcc2xpbms2NSBcc2xvY2tlZCBcc3R5cnNpZDEyNzIzNDE0IERvY3VtZW50IE1hcCBDaGFyO317XCpcY3M2NyBcYWRkaXRpdmUgXHJ0bGNoXGZjczEgXGFmMFxhZnMxNiBcbHRyY2hcZmNzMCBcZnMxNiBcc2Jhc2Vkb24xMCBcc3R5cnNpZDEyNzIzNDE0IA0KYW5ub3RhdGlvbiByZWZlcmVuY2U7fXtcczY4XHFsIFxsaTBccmkwXHNhMjAwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMzdcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczIwXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMzdcaGljaFxhZjM3XGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0NjggXHNsaW5rNjkgXHN0eXJzaWQxMjcyMzQxNCBhbm5vdGF0aW9uIHRleHQ7fXtcKlxjczY5IFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxzYmFzZWRvbjEwIFxzbGluazY4IFxzbG9ja2VkIFxzdHlyc2lkMTI3MjM0MTQgQ29tbWVudCBUZXh0IENoYXI7fXtcczcwXHFsIFxsaTBccmkwXHNhMjAwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjBcaXRhcDAgDQpccnRsY2hcZmNzMSBcYWYzN1xhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMyMFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjM3XGhpY2hcYWYzN1xkYmNoXGFmMzE1MDVcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uNjggXHNuZXh0NjggXHNsaW5rNzEgXHN0eXJzaWQxMjcyMzQxNCBhbm5vdGF0aW9uIHN1YmplY3Q7fXtcKlxjczcxIFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiIA0KXHNiYXNlZG9uNjkgXHNsaW5rNzAgXHNsb2NrZWQgXHN0eXJzaWQxMjcyMzQxNCBDb21tZW50IFN1YmplY3QgQ2hhcjt9e1xzNzJccWwgXGxpMFxyaTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYzN1xhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjM3XGhpY2hcYWYzN1xkYmNoXGFmMzE1MDVcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNuZXh0NzIgXHNoaWRkZW4gXHN0eXJzaWQxMjcyMzQxNCBSZXZpc2lvbjt9e1wqXGNzNzMgXGFkZGl0aXZlIFxzdHJpa2VcY2Y2IFxzcHJpb3JpdHkxIFxzdHlyc2lkMTI3MjM0MTQgRGVsZXRlZCBUZXh0O317XCpcY3M3NCBcYWRkaXRpdmUgXHVsZGJcY2YyIA0KXHNwcmlvcml0eTEgXHN0eXJzaWQxMjcyMzQxNCBJbnNlcnRlZCBUZXh0O317XCpcY3M3NSBcYWRkaXRpdmUgXHVsZGJcY2YxMSBcc3ByaW9yaXR5MSBcc3R5cnNpZDEyNzIzNDE0IE1vdmVkIFRvO317XCpcY3M3NiBcYWRkaXRpdmUgXGNmMTFcc3RyaWtlZDEgXHNwcmlvcml0eTEgXHN0eXJzaWQxMjcyMzQxNCBNb3ZlZCBGcm9tO317XCpcY3M3NyBcYWRkaXRpdmUgXHVsbm9uZVxjZjEgXHNwcmlvcml0eTAgXHN0eXJzaWQxMjcyMzQxNCANCkZvcm1hdHRlZCBUZXh0O317XCpcY3M3OCBcYWRkaXRpdmUgXHVsbm9uZVxjZjBcY2hzaGRuZzBcY2hjZnBhdDBcY2hjYnBhdDI1IFxzcHJpb3JpdHkxIFxzdHlyc2lkMTI3MjM0MTQgTWVyZ2VkIENlbGw7fXtcKlxjczc5IFxhZGRpdGl2ZSBcdWxub25lXGNmMFxjaHNoZG5nMFxjaGNmcGF0MFxjaGNicGF0MjYgXHNwcmlvcml0eTEgXHN0eXJzaWQxMjcyMzQxNCBTcGxpdCBDZWxsO317XCpcY3M4MCBcYWRkaXRpdmUgDQpcdWxub25lXGNmMFxjaHNoZG5nMFxjaGNmcGF0MFxjaGNicGF0MjcgXHNwcmlvcml0eTEgXHN0eXJzaWQxMjcyMzQxNCBJbnNlcnRlZCBDZWxsO317XCpcY3M4MSBcYWRkaXRpdmUgXHVsbm9uZVxjZjBcY2hzaGRuZzBcY2hjZnBhdDBcY2hjYnBhdDUgXHNwcmlvcml0eTEgXHN0eXJzaWQxMjcyMzQxNCBEZWxldGVkIENlbGw7fXsNClxzODJccWogXGxpMFxyaTBcc2EyNDBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYzN1xhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjgzIFxzbmV4dDgyIFxzcHJpb3JpdHkwIFxzdHlyc2lkMTI3MjM0MTQgDQpCb2R5IFRleHQgQm9sZCxidGI7fXtcczgzXHFsIFxsaTBccmkwXHNhMTIwXHNsMjc2XHNsbXVsdDFcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYzN1xhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYzN1xoaWNoXGFmMzdcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMCBcc25leHQ4MyBcc2xpbms4NCBcc3R5cnNpZDEyNzIzNDE0IEJvZHkgVGV4dDt9e1wqXGNzODQgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjIgXHNiYXNlZG9uMTAgXHNsaW5rODMgXHNsb2NrZWQgXHN0eXJzaWQxMjcyMzQxNCBCb2R5IFRleHQgQ2hhcjt9e1xzODVccWwgXGZpMzYwXGxpMFxyaTBcc2EyMDBcc2wyNzZcc2xtdWx0MQ0KXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMzdcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMzdcaGljaFxhZjM3XGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb244MyBcc25leHQ4NSBcc2xpbms4NiBcc3R5cnNpZDEyNzIzNDE0IEJvZHkgVGV4dCBGaXJzdCBJbmRlbnQ7fQ0Ke1wqXGNzODYgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjIgXHNiYXNlZG9uODQgXHNsaW5rODUgXHNsb2NrZWQgXHN0eXJzaWQxMjcyMzQxNCBCb2R5IFRleHQgRmlyc3QgSW5kZW50IENoYXI7fXtcczg3XHFsIFxsaTBccmkwXHNhMjAwXHNsMjc2XHNsbXVsdDFcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYzN1xhZnMyMlxhbGFuZzEwMjUgDQpcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjM3XGhpY2hcYWYzN1xkYmNoXGFmMzE1MDVcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQwIFxzcHJpb3JpdHkzNyBcc3R5cnNpZDEyNzIzNDE0IEJpYmxpb2dyYXBoeTt9e1xzODhccWwgXGxpMTE1MlxyaTExNTJcc2EyMDBcc2wyNzZcc2xtdWx0MVxub3dpZGN0bHBhclxicmRydA0KXGJyZHJzaFxicmRyc1xicmRydzVcYnJzcDIwMFxicmRyY2YyMCBcYnJkcmxcYnJkcnNoXGJyZHJzXGJyZHJ3NVxicnNwMjAwXGJyZHJjZjIwIFxicmRyYlxicmRyc2hcYnJkcnNcYnJkcnc1XGJyc3AyMDBcYnJkcmNmMjAgXGJyZHJyXGJyZHJzaFxicmRyc1xicmRydzVcYnJzcDIwMFxicmRyY2YyMCBcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjExNTJcbGluMTE1MlxydGxndXR0ZXJcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMlxhbGFuZzEwMjUgDQpcbHRyY2hcZmNzMCBcaVxmczIyXGNmMjBcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYzN1xoaWNoXGFmMzdcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0ODggXHN0eXJzaWQxMjcyMzQxNCBCbG9jayBUZXh0O317XHM4OVxxbCBcbGkwXHJpMFxzYTEyMFxzbDI3NlxzbG11bHQxXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgDQpcYWYzN1xhZnMxNlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYzN1xoaWNoXGFmMzdcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0ODkgXHNsaW5rOTAgXHN0eXJzaWQxMjcyMzQxNCBCb2R5IFRleHQgMzt9e1wqXGNzOTAgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhZjBcYWZzMTYgXGx0cmNoXGZjczAgXGZzMTYgDQpcc2Jhc2Vkb24xMCBcc2xpbms4OSBcc2xvY2tlZCBcc3R5cnNpZDEyNzIzNDE0IEJvZHkgVGV4dCAzIENoYXI7fXtcczkxXHFsIFxsaTM2MFxyaTBcc2ExMjBcc2wyNzZcc2xtdWx0MVxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4zNjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMzdcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYzN1xoaWNoXGFmMzdcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0OTEgXHNsaW5rOTIgXHN0eXJzaWQxMjcyMzQxNCBCb2R5IFRleHQgSW5kZW50O317XCpcY3M5MiBcYWRkaXRpdmUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMiANClxzYmFzZWRvbjEwIFxzbGluazkxIFxzbG9ja2VkIFxzdHlyc2lkMTI3MjM0MTQgQm9keSBUZXh0IEluZGVudCBDaGFyO317XHM5M1xxbCBcZmkzNjBcbGkzNjBccmkwXHNhMjAwXHNsMjc2XHNsbXVsdDFcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMzYwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjM3XGFmczIyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMzdcaGljaFxhZjM3XGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb245MSBcc25leHQ5MyBcc2xpbms5NCBcc3R5cnNpZDEyNzIzNDE0IEJvZHkgVGV4dCBGaXJzdCBJbmRlbnQgMjt9e1wqXGNzOTQgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjIgDQpcc2Jhc2Vkb245MiBcc2xpbms5MyBcc2xvY2tlZCBcc3R5cnNpZDEyNzIzNDE0IEJvZHkgVGV4dCBGaXJzdCBJbmRlbnQgMiBDaGFyO317XHM5NVxxbCBcbGkzNjBccmkwXHNhMTIwXHNsNDgwXHNsbXVsdDFcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMzYwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjM3XGFmczIyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMzdcaGljaFxhZjM3XGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDk1IFxzbGluazk2IFxzdHlyc2lkMTI3MjM0MTQgQm9keSBUZXh0IEluZGVudCAyO317XCpcY3M5NiBcYWRkaXRpdmUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMiANClxzYmFzZWRvbjEwIFxzbGluazk1IFxzbG9ja2VkIFxzdHlyc2lkMTI3MjM0MTQgQm9keSBUZXh0IEluZGVudCAyIENoYXI7fXtcczk3XHFsIFxsaTQzMjBccmkwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjQzMjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMzdcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYzN1xoaWNoXGFmMzdcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0OTcgXHNsaW5rOTggXHN0eXJzaWQxMjcyMzQxNCBDbG9zaW5nO317XCpcY3M5OCBcYWRkaXRpdmUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMiBcc2Jhc2Vkb24xMCBcc2xpbms5NyBcc2xvY2tlZCBcc3R5cnNpZDEyNzIzNDE0IA0KQ2xvc2luZyBDaGFyO317XHM5OVxxbCBcbGkwXHJpMFxzYTIwMFxzbDI3NlxzbG11bHQxXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMzdcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMzdcaGljaFxhZjM3XGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MCBcc2xpbmsxMDAgXHN0eXJzaWQxMjcyMzQxNCBEYXRlO317XCpcY3MxMDAgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjIgXHNiYXNlZG9uMTAgXHNsaW5rOTkgXHNsb2NrZWQgXHN0eXJzaWQxMjcyMzQxNCBEYXRlIENoYXI7fXtcczEwMVxxbCBcbGkwXHJpMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIA0KXGFmMzdcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMzdcaGljaFxhZjM3XGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDEwMSBcc2xpbmsxMDIgXHN0eXJzaWQxMjcyMzQxNCBFLW1haWwgU2lnbmF0dXJlO317XCpcY3MxMDIgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjIgDQpcc2Jhc2Vkb24xMCBcc2xpbmsxMDEgXHNsb2NrZWQgXHN0eXJzaWQxMjcyMzQxNCBFLW1haWwgU2lnbmF0dXJlIENoYXI7fXtcczEwM1xxbCBcbGkwXHJpMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjM3XGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczIwXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMzdcaGljaFxhZjM3XGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDEwMyBcc2xpbmsxMDQgXHN0eXJzaWQxMjcyMzQxNCBlbmRub3RlIHRleHQ7fXtcKlxjczEwNCBcYWRkaXRpdmUgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcc2Jhc2Vkb24xMCBcc2xpbmsxMDMgXHNsb2NrZWQgXHN0eXJzaWQxMjcyMzQxNCANCkVuZG5vdGUgVGV4dCBDaGFyO317XHMxMDVccWwgXGxpMjg4MFxyaTBcbm93aWRjdGxwYXJccGhwZ1xwb3N4Y1xwb3N5YlxhYnNoLTE5ODBcYWJzdzc5MjBcZHhmcnRleHQxODBcZGZybXR4dHgxODBcZGZybXR4dHkwXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjI4ODBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjQzXGhpY2hcYWY0M1xkYmNoXGFmMzE1MDVcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQxMDUgXHN0eXJzaWQxMjcyMzQxNCBlbnZlbG9wZSBhZGRyZXNzO317XHMxMDZccWwgXGxpMFxyaTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczIwXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmNDNcaGljaFxhZjQzXGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDEwNiBcc3R5cnNpZDEyNzIzNDE0IGVudmVsb3BlIHJldHVybjt9e1xzMTA3XHFsIFxsaTBccmkwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMzdcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjBcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYzN1xoaWNoXGFmMzdcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MTA3IFxzbGluazEwOCBcc3R5cnNpZDEyNzIzNDE0IGZvb3Rub3RlIHRleHQ7fXtcKlxjczEwOCBcYWRkaXRpdmUgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcc2Jhc2Vkb24xMCBcc2xpbmsxMDcgXHNsb2NrZWQgXHN0eXJzaWQxMjcyMzQxNCANCkZvb3Rub3RlIFRleHQgQ2hhcjt9e1xzMTA5XHFsIFxsaTBccmkwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMzdcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxpXGZzMjJcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYzN1xoaWNoXGFmMzdcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMCBcc25leHQxMDkgXHNsaW5rMTEwIFxzdHlyc2lkMTI3MjM0MTQgSFRNTCBBZGRyZXNzO317XCpcY3MxMTAgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGlcZnMyMiBcc2Jhc2Vkb24xMCBcc2xpbmsxMDkgXHNsb2NrZWQgXHN0eXJzaWQxMjcyMzQxNCBIVE1MIEFkZHJlc3MgQ2hhcjt9ew0KXHMxMTFccWwgXGxpMFxyaTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYzN1xhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjBcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGY0NlxoaWNoXGFmNDZcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MTExIFxzbGluazExMiBcc3R5cnNpZDEyNzIzNDE0IA0KSFRNTCBQcmVmb3JtYXR0ZWQ7fXtcKlxjczExMiBcYWRkaXRpdmUgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZjQ2IFxzYmFzZWRvbjEwIFxzbGluazExMSBcc2xvY2tlZCBcc3R5cnNpZDEyNzIzNDE0IEhUTUwgUHJlZm9ybWF0dGVkIENoYXI7fXtcczExM1xxbCBcZmktMjIwXGxpMjIwXHJpMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4yMjBcaXRhcDAgXHJ0bGNoXGZjczEgDQpcYWYzN1xhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYzN1xoaWNoXGFmMzdcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MCBcc2F1dG91cGQgXHN0eXJzaWQxMjcyMzQxNCBpbmRleCAxO317XHMxMTRccWwgXGZpLTIyMFxsaTQ0MFxyaTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluNDQwXGl0YXAwIA0KXHJ0bGNoXGZjczEgXGFmMzdcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMzdcaGljaFxhZjM3XGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDAgXHNhdXRvdXBkIFxzdHlyc2lkMTI3MjM0MTQgaW5kZXggMjt9ew0KXHMxMTVccWwgXGZpLTIyMFxsaTY2MFxyaTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluNjYwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjM3XGFmczIyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjM3XGhpY2hcYWYzN1xkYmNoXGFmMzE1MDVcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24wIFxzbmV4dDAgXHNhdXRvdXBkIFxzdHlyc2lkMTI3MjM0MTQgaW5kZXggMzt9e1xzMTE2XHFsIFxmaS0yMjBcbGk4ODBccmkwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjg4MFxpdGFwMCBccnRsY2hcZmNzMSBcYWYzN1xhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjM3XGhpY2hcYWYzN1xkYmNoXGFmMzE1MDVcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQwIFxzYXV0b3VwZCBcc3R5cnNpZDEyNzIzNDE0IGluZGV4IDQ7fXtcczExN1xxbCBcZmktMjIwXGxpMTEwMFxyaTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMTEwMFxpdGFwMCBccnRsY2hcZmNzMSANClxhZjM3XGFmczIyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjM3XGhpY2hcYWYzN1xkYmNoXGFmMzE1MDVcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQwIFxzYXV0b3VwZCBcc3R5cnNpZDEyNzIzNDE0IGluZGV4IDU7fXsNClxzMTE4XHFsIFxmaS0yMjBcbGkxMzIwXHJpMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4xMzIwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjM3XGFmczIyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjM3XGhpY2hcYWYzN1xkYmNoXGFmMzE1MDVcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24wIFxzbmV4dDAgXHNhdXRvdXBkIFxzdHlyc2lkMTI3MjM0MTQgaW5kZXggNjt9e1xzMTE5XHFsIFxmaS0yMjBcbGkxNTQwXHJpMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4xNTQwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjM3XGFmczIyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMzdcaGljaFxhZjM3XGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDAgXHNhdXRvdXBkIFxzdHlyc2lkMTI3MjM0MTQgaW5kZXggNzt9e1xzMTIwXHFsIFxmaS0yMjBcbGkxNzYwXHJpMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4xNzYwXGl0YXAwIFxydGxjaFxmY3MxIA0KXGFmMzdcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMzdcaGljaFxhZjM3XGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDAgXHNhdXRvdXBkIFxzdHlyc2lkMTI3MjM0MTQgaW5kZXggODt9ew0KXHMxMjFccWwgXGZpLTIyMFxsaTE5ODBccmkwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjE5ODBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMzdcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMzdcaGljaFxhZjM3XGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MCBcc2F1dG91cGQgXHN0eXJzaWQxMjcyMzQxNCBpbmRleCA5O317XHMxMjJccWwgXGxpMFxyaTBcc2EyMDBcc2wyNzZcc2xtdWx0MVxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGJcZnMyMlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjQzXGhpY2hcYWY0M1xkYmNoXGFmMzE1MDVcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQxMTMgXHN0eXJzaWQxMjcyMzQxNCBpbmRleCBoZWFkaW5nO317XHMxMjNccWwgXGZpLTM2MFxsaTM2MFxyaTBcc2EyMDBcc2wyNzZcc2xtdWx0MQ0KXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjM2MFxpdGFwMFxjb250ZXh0dWFsc3BhY2UgXHJ0bGNoXGZjczEgXGFmMzdcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMzdcaGljaFxhZjM3XGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDEyMyBcc3R5cnNpZDEyNzIzNDE0IExpc3Q7fXsNClxzMTI0XHFsIFxmaS0zNjBcbGk3MjBccmkwXHNhMjAwXHNsMjc2XHNsbXVsdDFcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluNzIwXGl0YXAwXGNvbnRleHR1YWxzcGFjZSBccnRsY2hcZmNzMSBcYWYzN1xhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYzN1xoaWNoXGFmMzdcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMCBcc25leHQxMjQgXHN0eXJzaWQxMjcyMzQxNCBMaXN0IDI7fXtcczEyNVxxbCBcZmktMzYwXGxpMTA4MFxyaTBcc2EyMDBcc2wyNzZcc2xtdWx0MVxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4xMDgwXGl0YXAwXGNvbnRleHR1YWxzcGFjZSBccnRsY2hcZmNzMSBcYWYzN1xhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjM3XGhpY2hcYWYzN1xkYmNoXGFmMzE1MDVcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQxMjUgXHN0eXJzaWQxMjcyMzQxNCBMaXN0IDM7fXtcczEyNlxxbCBcZmktMzYwXGxpMTQ0MFxyaTBcc2EyMDBcc2wyNzZcc2xtdWx0MVxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4xNDQwXGl0YXAwXGNvbnRleHR1YWxzcGFjZSANClxydGxjaFxmY3MxIFxhZjM3XGFmczIyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjM3XGhpY2hcYWYzN1xkYmNoXGFmMzE1MDVcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQxMjYgXHN0eXJzaWQxMjcyMzQxNCBMaXN0IDQ7fXtcczEyN1xxbCBcZmktMzYwXGxpMTgwMFxyaTBcc2EyMDBcc2wyNzZcc2xtdWx0MQ0KXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjE4MDBcaXRhcDBcY29udGV4dHVhbHNwYWNlIFxydGxjaFxmY3MxIFxhZjM3XGFmczIyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjM3XGhpY2hcYWYzN1xkYmNoXGFmMzE1MDVcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQxMjcgXHN0eXJzaWQxMjcyMzQxNCBMaXN0IDU7fXsNClxzMTI4XHFsIFxsaTM2MFxyaTBcc2ExMjBcc2wyNzZcc2xtdWx0MVxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4zNjBcaXRhcDBcY29udGV4dHVhbHNwYWNlIFxydGxjaFxmY3MxIFxhZjM3XGFmczIyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjM3XGhpY2hcYWYzN1xkYmNoXGFmMzE1MDVcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24wIFxzbmV4dDEyOCBcc3R5cnNpZDEyNzIzNDE0IExpc3QgQ29udGludWU7fXtcczEyOVxxbCBcbGk3MjBccmkwXHNhMTIwXHNsMjc2XHNsbXVsdDFcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluNzIwXGl0YXAwXGNvbnRleHR1YWxzcGFjZSBccnRsY2hcZmNzMSBcYWYzN1xhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjM3XGhpY2hcYWYzN1xkYmNoXGFmMzE1MDVcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQxMjkgXHN0eXJzaWQxMjcyMzQxNCBMaXN0IENvbnRpbnVlIDI7fXtcczEzMFxxbCBcbGkxMDgwXHJpMFxzYTEyMFxzbDI3NlxzbG11bHQxXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjEwODBcaXRhcDBcY29udGV4dHVhbHNwYWNlIA0KXHJ0bGNoXGZjczEgXGFmMzdcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMzdcaGljaFxhZjM3XGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDEzMCBcc3R5cnNpZDEyNzIzNDE0IExpc3QgQ29udGludWUgMzt9e1xzMTMxXHFsIFxsaTE0NDBccmkwXHNhMTIwXHNsMjc2XHNsbXVsdDENClxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4xNDQwXGl0YXAwXGNvbnRleHR1YWxzcGFjZSBccnRsY2hcZmNzMSBcYWYzN1xhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYzN1xoaWNoXGFmMzdcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MTMxIFxzdHlyc2lkMTI3MjM0MTQgDQpMaXN0IENvbnRpbnVlIDQ7fXtcczEzMlxxbCBcbGkxODAwXHJpMFxzYTEyMFxzbDI3NlxzbG11bHQxXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjE4MDBcaXRhcDBcY29udGV4dHVhbHNwYWNlIFxydGxjaFxmY3MxIFxhZjM3XGFmczIyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMzdcaGljaFxhZjM3XGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDEzMiBcc3R5cnNpZDEyNzIzNDE0IExpc3QgQ29udGludWUgNTt9e1xzMTMzXHFsIFxsaTBccmkwXHNsMjc2XHNsbXVsdDFcbm93aWRjdGxwYXINClx0eDQ4MFx0eDk2MFx0eDE0NDBcdHgxOTIwXHR4MjQwMFx0eDI4ODBcdHgzMzYwXHR4Mzg0MFx0eDQzMjBcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYzN1xhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjBcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGY0NlxoaWNoXGFmNDZcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNuZXh0MTMzIFxzbGluazEzNCBcc3R5cnNpZDEyNzIzNDE0IG1hY3JvO317XCpcY3MxMzQgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGY0NiBcc2Jhc2Vkb24xMCBcc2xpbmsxMzMgXHNsb2NrZWQgXHN0eXJzaWQxMjcyMzQxNCBNYWNybyBUZXh0IENoYXI7fXtcczEzNVxxbCBcZmktMTA4MFxsaTEwODBccmkwXG5vd2lkY3RscGFyXGJyZHJ0XGJyZHJzXGJyZHJ3MTVcYnJzcDIwIFxicmRybA0KXGJyZHJzXGJyZHJ3MTVcYnJzcDIwIFxicmRyYlxicmRyc1xicmRydzE1XGJyc3AyMCBcYnJkcnJcYnJkcnNcYnJkcncxNVxicnNwMjAgXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjEwODBcaXRhcDAgXHNoYWRpbmcyMDAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGY0M1xoaWNoXGFmNDNcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MTM1IFxzbGluazEzNiBcc3R5cnNpZDEyNzIzNDE0IE1lc3NhZ2UgSGVhZGVyO317XCpcY3MxMzYgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGY0M1xmczI0XGNoc2hkbmcyMDAwXGNoY2ZwYXQwXGNoY2JwYXQwIA0KXHNiYXNlZG9uMTAgXHNsaW5rMTM1IFxzbG9ja2VkIFxzdHlyc2lkMTI3MjM0MTQgTWVzc2FnZSBIZWFkZXIgQ2hhcjt9e1xzMTM3XHFsIFxsaTBccmkwXHNhMjAwXHNsMjc2XHNsbXVsdDFcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYzN1xhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MTM3IFxzdHlyc2lkMTI3MjM0MTQgTm9ybWFsIChXZWIpO317XHMxMzhccWwgXGxpNzIwXHJpMFxzYTIwMFxzbDI3NlxzbG11bHQxXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjcyMFxpdGFwMCBccnRsY2hcZmNzMSANClxhZjM3XGFmczIyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjM3XGhpY2hcYWYzN1xkYmNoXGFmMzE1MDVcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQxMzggXHN0eXJzaWQxMjcyMzQxNCBOb3JtYWwgSW5kZW50O317XHMxMzlccWwgXGxpMFxyaTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSANClxhZjM3XGFmczIyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjM3XGhpY2hcYWYzN1xkYmNoXGFmMzE1MDVcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQwIFxzbGluazE0MCBcc3R5cnNpZDEyNzIzNDE0IE5vdGUgSGVhZGluZzt9e1wqXGNzMTQwIFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyIA0KXHNiYXNlZG9uMTAgXHNsaW5rMTM5IFxzbG9ja2VkIFxzdHlyc2lkMTI3MjM0MTQgTm90ZSBIZWFkaW5nIENoYXI7fXtcczE0MVxxbCBcbGkwXHJpMFxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjM3XGFmczIxXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczIxXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmNDZcaGljaFxhZjQ2XGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDE0MSBcc2xpbmsxNDIgXHN0eXJzaWQxMjcyMzQxNCBQbGFpbiBUZXh0O317XCpcY3MxNDIgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhZjBcYWZzMjEgXGx0cmNoXGZjczAgXGY0NlxmczIxIA0KXHNiYXNlZG9uMTAgXHNsaW5rMTQxIFxzbG9ja2VkIFxzdHlyc2lkMTI3MjM0MTQgUGxhaW4gVGV4dCBDaGFyO317XHMxNDNccWwgXGxpMFxyaTBcc2EyMDBcc2wyNzZcc2xtdWx0MVxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjM3XGFmczIyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMzdcaGljaFxhZjM3XGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDAgXHNsaW5rMTQ0IFxzdHlyc2lkMTI3MjM0MTQgU2FsdXRhdGlvbjt9e1wqXGNzMTQ0IFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwXGFmczIyIFxsdHJjaFxmY3MwIFxmczIyIFxzYmFzZWRvbjEwIFxzbGluazE0MyBcc2xvY2tlZCBcc3R5cnNpZDEyNzIzNDE0IA0KU2FsdXRhdGlvbiBDaGFyO317XHMxNDVccWwgXGxpNDMyMFxyaTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluNDMyMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYzN1xhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYzN1xoaWNoXGFmMzdcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMCBcc25leHQxNDUgXHNsaW5rMTQ2IFxzdHlyc2lkMTI3MjM0MTQgU2lnbmF0dXJlO317XCpcY3MxNDYgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhZjBcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjIgXHNiYXNlZG9uMTAgXHNsaW5rMTQ1IFxzbG9ja2VkIFxzdHlyc2lkMTI3MjM0MTQgU2lnbmF0dXJlIENoYXI7fXtcczE0N1xxbCBcZmktMjIwXGxpMjIwXHJpMFxzbDI3NlxzbG11bHQxDQpcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMjIwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjM3XGFmczIyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjM3XGhpY2hcYWYzN1xkYmNoXGFmMzE1MDVcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQwIFxzdHlyc2lkMTI3MjM0MTQgdGFibGUgb2YgYXV0aG9yaXRpZXM7fXsNClxzMTQ4XHFsIFxsaTBccmkwXHNsMjc2XHNsbXVsdDFcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYzN1xhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYzN1xoaWNoXGFmMzdcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MCBcc3R5cnNpZDEyNzIzNDE0IA0KdGFibGUgb2YgZmlndXJlczt9e1xzMTQ5XHFsIFxsaTBccmkwXHNiMTIwXHNhMjAwXHNsMjc2XHNsbXVsdDFcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmNDNcaGljaFxhZjQzXGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MCBcc3R5cnNpZDEyNzIzNDE0IHRvYSBoZWFkaW5nO317XHMxNTBccWwgXGxpMFxyaTBcc2ExMDBcc2wyNzZcc2xtdWx0MVxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjM3XGFmczIyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMzdcaGljaFxhZjM3XGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDAgXHNhdXRvdXBkIFxzcHJpb3JpdHkzOSBcc3R5cnNpZDEyNzIzNDE0IHRvYyAxO317XHMxNTFccWwgXGxpMjIwXHJpMFxzYTEwMFxzbDI3NlxzbG11bHQxXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjIyMFxpdGFwMCANClxydGxjaFxmY3MxIFxhZjM3XGFmczIyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjM3XGhpY2hcYWYzN1xkYmNoXGFmMzE1MDVcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQwIFxzYXV0b3VwZCBcc3ByaW9yaXR5MzkgXHN0eXJzaWQxMjcyMzQxNCB0b2MgMjt9e1xzMTUyXHFsIFxsaTQ0MFxyaTBcc2ExMDBcc2wyNzZcc2xtdWx0MQ0KXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjQ0MFxpdGFwMCBccnRsY2hcZmNzMSBcYWYzN1xhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYzN1xoaWNoXGFmMzdcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MCBcc2F1dG91cGQgXHNwcmlvcml0eTM5IFxzdHlyc2lkMTI3MjM0MTQgdG9jIDM7fXsNClxzMTUzXHFsIFxsaTY2MFxyaTBcc2ExMDBcc2wyNzZcc2xtdWx0MVxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW42NjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMzdcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMzdcaGljaFxhZjM3XGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MCBcc2F1dG91cGQgXHNwcmlvcml0eTM5IFxzdHlyc2lkMTI3MjM0MTQgdG9jIDQ7fXtcczE1NFxxbCBcbGk4ODBccmkwXHNhMTAwXHNsMjc2XHNsbXVsdDFcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluODgwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjM3XGFmczIyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMzdcaGljaFxhZjM3XGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDAgXHNhdXRvdXBkIFxzcHJpb3JpdHkzOSBcc3R5cnNpZDEyNzIzNDE0IHRvYyA1O317XHMxNTVccWwgXGxpMTEwMFxyaTBcc2ExMDBcc2wyNzZcc2xtdWx0MVxub3dpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4xMTAwXGl0YXAwIA0KXHJ0bGNoXGZjczEgXGFmMzdcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMzdcaGljaFxhZjM3XGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDAgXHNhdXRvdXBkIFxzcHJpb3JpdHkzOSBcc3R5cnNpZDEyNzIzNDE0IHRvYyA2O317XHMxNTZccWwgXGxpMTMyMFxyaTBcc2ExMDBcc2wyNzZcc2xtdWx0MQ0KXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjEzMjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMzdcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMzdcaGljaFxhZjM3XGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDAgXHNhdXRvdXBkIFxzcHJpb3JpdHkzOSBcc3R5cnNpZDEyNzIzNDE0IHRvYyA3O317DQpcczE1N1xxbCBcbGkxNTQwXHJpMFxzYTEwMFxzbDI3NlxzbG11bHQxXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjE1NDBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMzdcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMzdcaGljaFxhZjM3XGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MCBcc2F1dG91cGQgXHNwcmlvcml0eTM5IFxzdHlyc2lkMTI3MjM0MTQgdG9jIDg7fXtcczE1OFxxbCBcbGkxNzYwXHJpMFxzYTEwMFxzbDI3NlxzbG11bHQxXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjE3NjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMzdcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYzN1xoaWNoXGFmMzdcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MCBcc2F1dG91cGQgXHNwcmlvcml0eTM5IFxzdHlyc2lkMTI3MjM0MTQgdG9jIDk7fXtcczE1OVxxbCBcbGkwXHJpMFxzYTEyMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSANClxhZjM3XGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMVxoaWNoXGFmMVxkYmNoXGFmMzE1MDVcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQxNTkgXHN0eXJzaWQxMjcyMzQxNCBEZWx0YVZpZXcgVGFibGUgSGVhZGluZzt9e1xzMTYwXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4wXGl0YXAwIA0KXHJ0bGNoXGZjczEgXGFmMzdcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMVxoaWNoXGFmMVxkYmNoXGFmMzE1MDVcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQxNjAgXHN0eXJzaWQxMjcyMzQxNCBEZWx0YVZpZXcgVGFibGUgQm9keTt9ew0KXHMxNjFccWwgXGxpMFxyaTBcc2IxMDBcc2ExMDBcc2JhdXRvMVxzYWF1dG8xXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjM3XGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMjA1N1xsYW5nZmUxMDMzXGxvY2hcZjFcaGljaFxhZjFcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDIwNTdcbGFuZ2ZlbnAxMDMzIFxzbmV4dDE2MSBcc3R5cnNpZDEyNzIzNDE0IA0KRGVsdGFWaWV3IEFubm91bmNlO317XCpcY3MxNjIgXGFkZGl0aXZlIFx1bGRiXGNmMiBcc3R5cnNpZDEyNzIzNDE0IERlbHRhVmlldyBJbnNlcnRpb247fXtcKlxjczE2MyBcYWRkaXRpdmUgXHN0cmlrZVxjZjYgXHN0eXJzaWQxMjcyMzQxNCBEZWx0YVZpZXcgRGVsZXRpb247fXtcKlxjczE2NCBcYWRkaXRpdmUgXHN0cmlrZVxjZjI4IFxzdHlyc2lkMTI3MjM0MTQgRGVsdGFWaWV3IE1vdmUgU291cmNlO317XCpcY3MxNjUgXGFkZGl0aXZlIA0KXHVsZGJcY2YyOCBcc3R5cnNpZDEyNzIzNDE0IERlbHRhVmlldyBNb3ZlIERlc3RpbmF0aW9uO317XCpcY3MxNjYgXGFkZGl0aXZlIFxjZjFcc3VwZXIgXHN0eXJzaWQxMjcyMzQxNCBEZWx0YVZpZXcgQ2hhbmdlIE51bWJlcjt9e1wqXGNzMTY3IFxhZGRpdGl2ZSBcc3R5cnNpZDEyNzIzNDE0IERlbHRhVmlldyBEZWxpbWl0ZXI7fXtcKlxjczE2OCBcYWRkaXRpdmUgXGNmMSBcc3R5cnNpZDEyNzIzNDE0IERlbHRhVmlldyBGb3JtYXQgQ2hhbmdlO30NCntcKlxjczE2OSBcYWRkaXRpdmUgXHN0cmlrZVxjZjI5IFxzdHlyc2lkMTI3MjM0MTQgRGVsdGFWaWV3IE1vdmVkIERlbGV0aW9uO317XCpcY3MxNzAgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGNmMSBcc2Jhc2Vkb24xMCBcc3R5cnNpZDEyNzIzNDE0IERlbHRhVmlldyBDb21tZW50O317XCpcY3MxNzEgXGFkZGl0aXZlIFx1bGRiXGNmMSBcc3R5cnNpZDEyNzIzNDE0IERlbHRhVmlldyBTdHlsZSBDaGFuZ2UgVGV4dDt9DQp7XCpcY3MxNzIgXGFkZGl0aXZlIFxjZjEgXHN0eXJzaWQxMjcyMzQxNCBEZWx0YVZpZXcgU3R5bGUgQ2hhbmdlIExhYmVsO317XCpcY3MxNzMgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsZGJcY2YyIFxzYmFzZWRvbjE3MCBcc3R5cnNpZDEyNzIzNDE0IERlbHRhVmlldyBJbnNlcnRlZCBDb21tZW50O317XCpcY3MxNzQgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHN0cmlrZVxjZjYgDQpcc2Jhc2Vkb24xNzAgXHN0eXJzaWQxMjcyMzQxNCBEZWx0YVZpZXcgRGVsZXRlZCBDb21tZW50O317XHMxNzVccWwgXGZpLTM2MFxsaTM2MFxyaTBcc2EyMDBcc2wyNzZcc2xtdWx0MVxub3dpZGN0bHBhclxqY2xpc3R0YWJcdHgzNjBcd3JhcGRlZmF1bHR7XCpccG4gXHBubHZsYm9keVxpbHZsMFxsczFccG5ybm90MFxwbmRlYyB9XGZhYXV0b1xsczFccmluMFxsaW4zNjBcaXRhcDBcY29udGV4dHVhbHNwYWNlIFxydGxjaFxmY3MxIA0KXGFmMzdcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMzdcaGljaFxhZjM3XGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDE3NSBcc3NlbWloaWRkZW4gXHN1bmhpZGV1c2VkIFxzdHlyc2lkMTI3MjM0MTQgTGlzdCBCdWxsZXQ7fXtcczE3NlxxbCBcZmktMzYwXGxpNzIwXHJpMFxzYTIwMFxzbDI3NlxzbG11bHQxDQpcbm93aWRjdGxwYXJcamNsaXN0dGFiXHR4NzIwXHdyYXBkZWZhdWx0e1wqXHBuIFxwbmx2bGJvZHlcaWx2bDBcbHMyXHBucm5vdDBccG5kZWMgfVxmYWF1dG9cbHMyXHJpbjBcbGluNzIwXGl0YXAwXGNvbnRleHR1YWxzcGFjZSBccnRsY2hcZmNzMSBcYWYzN1xhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjM3XGhpY2hcYWYzN1xkYmNoXGFmMzE1MDVcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQxNzYgXHNzZW1paGlkZGVuIFxzdW5oaWRldXNlZCBcc3R5cnNpZDEyNzIzNDE0IExpc3QgQnVsbGV0IDI7fXtcczE3N1xxbCBcZmktMzYwXGxpMTA4MFxyaTBcc2EyMDBcc2wyNzZcc2xtdWx0MVxub3dpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDEwODBcd3JhcGRlZmF1bHR7XCpccG4gXHBubHZsYm9keVxpbHZsMFxsczNccG5ybm90MFxwbmRlYyB9XGZhYXV0b1xsczNccmluMFxsaW4xMDgwXGl0YXAwXGNvbnRleHR1YWxzcGFjZSBccnRsY2hcZmNzMSBcYWYzN1xhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYzN1xoaWNoXGFmMzdcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMCBcc25leHQxNzcgXHNzZW1paGlkZGVuIFxzdW5oaWRldXNlZCBcc3R5cnNpZDEyNzIzNDE0IExpc3QgQnVsbGV0IDM7fXtcczE3OFxxbCBcZmktMzYwXGxpMTQ0MFxyaTBcc2EyMDBcc2wyNzZcc2xtdWx0MVxub3dpZGN0bHBhclxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0e1wqXHBuIFxwbmx2bGJvZHlcaWx2bDBcbHM0XHBucm5vdDBccG5kZWMgfQ0KXGZhYXV0b1xsczRccmluMFxsaW4xNDQwXGl0YXAwXGNvbnRleHR1YWxzcGFjZSBccnRsY2hcZmNzMSBcYWYzN1xhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYzN1xoaWNoXGFmMzdcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MTc4IFxzc2VtaWhpZGRlbiBcc3VuaGlkZXVzZWQgXHN0eXJzaWQxMjcyMzQxNCANCkxpc3QgQnVsbGV0IDQ7fXtcczE3OVxxbCBcZmktMzYwXGxpMTgwMFxyaTBcc2EyMDBcc2wyNzZcc2xtdWx0MVxub3dpZGN0bHBhclxqY2xpc3R0YWJcdHgxODAwXHdyYXBkZWZhdWx0e1wqXHBuIFxwbmx2bGJvZHlcaWx2bDBcbHM1XHBucm5vdDBccG5kZWMgfVxmYWF1dG9cbHM1XHJpbjBcbGluMTgwMFxpdGFwMFxjb250ZXh0dWFsc3BhY2UgXHJ0bGNoXGZjczEgXGFmMzdcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYzN1xoaWNoXGFmMzdcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MTc5IFxzc2VtaWhpZGRlbiBcc3VuaGlkZXVzZWQgXHN0eXJzaWQxMjcyMzQxNCBMaXN0IEJ1bGxldCA1O317XHMxODBccWwgXGZpLTM2MFxsaTM2MFxyaTBcc2EyMDBcc2wyNzZcc2xtdWx0MVxub3dpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDM2MFx3cmFwZGVmYXVsdHtcKlxwbiBccG5sdmxib2R5XGlsdmwwXGxzNlxwbnJub3QwXHBuZGVjIH1cZmFhdXRvXGxzNlxyaW4wXGxpbjM2MFxpdGFwMFxjb250ZXh0dWFsc3BhY2UgXHJ0bGNoXGZjczEgXGFmMzdcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMzdcaGljaFxhZjM3XGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MTgwIFxzc2VtaWhpZGRlbiBcc3VuaGlkZXVzZWQgXHN0eXJzaWQxMjcyMzQxNCBMaXN0IE51bWJlcjt9e1xzMTgxXHFsIFxmaS0zNjBcbGk3MjBccmkwXHNhMjAwXHNsMjc2XHNsbXVsdDFcbm93aWRjdGxwYXJcamNsaXN0dGFiXHR4NzIwXHdyYXBkZWZhdWx0e1wqXHBuIFxwbmx2bGJvZHlcaWx2bDBcbHM3XHBucm5vdDBccG5kZWMgfVxmYWF1dG9cbHM3XHJpbjBcbGluNzIwXGl0YXAwXGNvbnRleHR1YWxzcGFjZSANClxydGxjaFxmY3MxIFxhZjM3XGFmczIyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjM3XGhpY2hcYWYzN1xkYmNoXGFmMzE1MDVcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQxODEgXHNzZW1paGlkZGVuIFxzdW5oaWRldXNlZCBcc3R5cnNpZDEyNzIzNDE0IExpc3QgTnVtYmVyIDI7fXsNClxzMTgyXHFsIFxmaS0zNjBcbGkxMDgwXHJpMFxzYTIwMFxzbDI3NlxzbG11bHQxXG5vd2lkY3RscGFyXGpjbGlzdHRhYlx0eDEwODBcd3JhcGRlZmF1bHR7XCpccG4gXHBubHZsYm9keVxpbHZsMFxsczhccG5ybm90MFxwbmRlYyB9XGZhYXV0b1xsczhccmluMFxsaW4xMDgwXGl0YXAwXGNvbnRleHR1YWxzcGFjZSBccnRsY2hcZmNzMSBcYWYzN1xhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjM3XGhpY2hcYWYzN1xkYmNoXGFmMzE1MDVcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQxODIgXHNzZW1paGlkZGVuIFxzdW5oaWRldXNlZCBcc3R5cnNpZDEyNzIzNDE0IExpc3QgTnVtYmVyIDM7fXtcczE4M1xxbCBcZmktMzYwXGxpMTQ0MFxyaTBcc2EyMDBcc2wyNzZcc2xtdWx0MVxub3dpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHR7XCpccG4gXHBubHZsYm9keVxpbHZsMFxsczlccG5ybm90MFxwbmRlYyB9XGZhYXV0b1xsczlccmluMFxsaW4xNDQwXGl0YXAwXGNvbnRleHR1YWxzcGFjZSBccnRsY2hcZmNzMSBcYWYzN1xhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYzN1xoaWNoXGFmMzdcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMCBcc25leHQxODMgXHNzZW1paGlkZGVuIFxzdW5oaWRldXNlZCBcc3R5cnNpZDEyNzIzNDE0IExpc3QgTnVtYmVyIDQ7fXtcczE4NFxxbCBcZmktMzYwXGxpMTgwMFxyaTBcc2EyMDBcc2wyNzZcc2xtdWx0MVxub3dpZGN0bHBhclxqY2xpc3R0YWJcdHgxODAwXHdyYXBkZWZhdWx0e1wqXHBuIFxwbmx2bGJvZHlcaWx2bDBcbHMxMFxwbnJub3QwXHBuZGVjIH0NClxmYWF1dG9cbHMxMFxyaW4wXGxpbjE4MDBcaXRhcDBcY29udGV4dHVhbHNwYWNlIFxydGxjaFxmY3MxIFxhZjM3XGFmczIyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjM3XGhpY2hcYWYzN1xkYmNoXGFmMzE1MDVcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQxODQgXHNzZW1paGlkZGVuIFxzdW5oaWRldXNlZCBcc3R5cnNpZDEyNzIzNDE0IA0KTGlzdCBOdW1iZXIgNTt9fXtcKlxsaXN0dGFibGV7XGxpc3RcbGlzdHRlbXBsYXRlaWQ1OTc2MTgwNjJcbGlzdHNpbXBsZXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxzMTg0DQpcZmktMzYwXGxpMTgwMFxqY2xpc3R0YWJcdHgxODAwXGxpbjE4MDAgfXtcbGlzdG5hbWUgO31cbGlzdGlkLTEzMn17XGxpc3RcbGlzdHRlbXBsYXRlaWQyMDM3MTU2NzU2XGxpc3RzaW1wbGV7XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxzMTgzXGZpLTM2MFxsaTE0NDBcamNsaXN0dGFiXHR4MTQ0MFxsaW4xNDQwIH17XGxpc3RuYW1lIDt9XGxpc3RpZC0xMzF9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkLTU1MjA2NDQxNFxsaXN0c2ltcGxle1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MA0Ke1xsZXZlbHRleHRcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcczE4MlxmaS0zNjBcbGkxMDgwXGpjbGlzdHRhYlx0eDEwODBcbGluMTA4MCB9e1xsaXN0bmFtZSA7fVxsaXN0aWQtMTMwfXtcbGlzdFxsaXN0dGVtcGxhdGVpZDk0MTgwNjE3NFxsaXN0c2ltcGxle1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MA0KXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcczE4MVxmaS0zNjBcbGk3MjBcamNsaXN0dGFiXHR4NzIwXGxpbjcyMCB9e1xsaXN0bmFtZSA7fVxsaXN0aWQtMTI5fXtcbGlzdFxsaXN0dGVtcGxhdGVpZC04MTc0ODA4MzRcbGlzdHNpbXBsZXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjMNClxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAxXHUtMzkxMyA/O317XGxldmVsbnVtYmVyczt9XGYzIFxzMTc5XGZpLTM2MFxsaTE4MDBcamNsaXN0dGFiXHR4MTgwMFxsaW4xODAwIH17XGxpc3RuYW1lIDt9XGxpc3RpZC0xMjh9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkLTE2NDgxODc1NThcbGlzdHNpbXBsZXtcbGlzdGxldmVsXGxldmVsbmZjMjMNClxsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAxXHUtMzkxMyA/O317XGxldmVsbnVtYmVyczt9XGYzIFxzMTc4XGZpLTM2MFxsaTE0NDBcamNsaXN0dGFiXHR4MTQ0MFxsaW4xNDQwIH17XGxpc3RuYW1lIDt9XGxpc3RpZC0xMjd9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkODUxNDc2MTI0XGxpc3RzaW1wbGV7XGxpc3RsZXZlbA0KXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fVxmMyBcczE3N1xmaS0zNjBcbGkxMDgwXGpjbGlzdHRhYlx0eDEwODBcbGluMTA4MCB9e1xsaXN0bmFtZSA7fVxsaXN0aWQtMTI2fXtcbGlzdFxsaXN0dGVtcGxhdGVpZDIxMzA5ODQzMzZcbGlzdHNpbXBsZQ0Ke1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAxXHUtMzkxMyA/O317XGxldmVsbnVtYmVyczt9XGYzIFxzMTc2XGZpLTM2MFxsaTcyMFxqY2xpc3R0YWJcdHg3MjBcbGluNzIwIH17XGxpc3RuYW1lIDt9XGxpc3RpZC0xMjV9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkLTc1MjAzNzY0OA0KXGxpc3RzaW1wbGV7XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcczE4MFxmaS0zNjBcbGkzNjBcamNsaXN0dGFiXHR4MzYwXGxpbjM2MCB9e1xsaXN0bmFtZSA7fVxsaXN0aWQtMTIwfQ0Ke1xsaXN0XGxpc3R0ZW1wbGF0ZWlkMTUzMjc3NDU4NlxsaXN0c2ltcGxle1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAxXHUtMzkxMyA/O317XGxldmVsbnVtYmVyczt9XGYzIFxzMTc1XGZpLTM2MFxsaTM2MFxqY2xpc3R0YWJcdHgzNjBcbGluMzYwIH17XGxpc3RuYW1lIA0KO31cbGlzdGlkLTExOX17XGxpc3RcbGlzdHRlbXBsYXRlaWQtMTUxMjY2NTM4NlxsaXN0aHlicmlke1xsaXN0bGV2ZWxcbGV2ZWxuZmMzXGxldmVsbmZjbjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDMyMTE3OTUzMFwnMDMoXCcwMCk7fXtcbGV2ZWxudW1iZXJzXCcwMjt9XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxmaS0zNjBcbGk3MjBcbGluNzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMVwnMDJcJzAxLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGkxNDQwXGxpbjE0NDAgfQ0Ke1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDJcJzAyXCcwMi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpMjE2MFxsaW4yMTYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMA0KXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQzXCcwMlwnMDMuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTI4ODBcbGluMjg4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MA0KXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNFwnMDJcJzA0Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGkzNjAwXGxpbjM2MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDANCntcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDVcJzAyXCcwNS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpNDMyMFxsaW40MzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNg0KXCcwMlwnMDYuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTUwNDBcbGluNTA0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDdcJzAyXCcwNy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGk1NzYwXGxpbjU3NjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ4XCcwMlwnMDguO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZmktMTgwXGxpNjQ4MFxsaW42NDgwIH17XGxpc3RuYW1lIDt9XGxpc3RpZDJ9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkODgzNzAyODE4XGxpc3RoeWJyaWR7XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTM2NTY0MTUyMlwnMDMoXCcwMCk7fXtcbGV2ZWxudW1iZXJzDQpcJzAyO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxmMFx1bG5vbmUgXGZpLTcyMFxsaTEwODBcbGluMTA4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDFcJzAyXCcwMS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxmaS0zNjBcbGkxNDQwXGxpbjE0NDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQyXCcwMlwnMDIuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTE4MFxsaTIxNjBcbGluMjE2MCB9DQp7XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkM1wnMDJcJzAzLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGkyODgwXGxpbjI4ODAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240DQpcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDRcJzAyXCcwNC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMzYwMFxsaW4zNjAwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwDQpcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ1XCcwMlwnMDUuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTE4MFxsaTQzMjBcbGluNDMyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MA0Ke1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNlwnMDJcJzA2Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGk1MDQwXGxpbjUwNDAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ3DQpcJzAyXCcwNy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpNTc2MFxsaW41NzYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkOFwnMDJcJzA4Ljt9e1xsZXZlbG51bWJlcnNcJzAxO30NClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTE4MFxsaTY0ODBcbGluNjQ4MCB9e1xsaXN0bmFtZSA7fVxsaXN0aWQxMX17XGxpc3RcbGlzdHRlbXBsYXRlaWQtNzcwODI4OTI2XGxpc3RoeWJyaWR7XGxpc3RsZXZlbFxsZXZlbG5mYzNcbGV2ZWxuZmNuM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQ2MDk0OTEzOTZcJzAzKFwnMDApO317XGxldmVsbnVtYmVyc1wnMDI7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTEwODBcbGluMTA4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDEyMDM1OTUyOA0KXCcwMlwnMDEuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTE4MDBcbGluMTgwMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0xMjQ2NDY5NTc2XCcwMlwnMDIuO317XGxldmVsbnVtYmVycw0KXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpMjUyMFxsaW4yNTIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkOTk0NjE5NjAwXCcwMlwnMDMuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZmktMzYwXGxpMzI0MFxsaW4zMjQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTE5NzI4ODg4MzhcJzAyXCcwNC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxmaS0zNjBcbGkzOTYwXGxpbjM5NjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ1XCcwMlwnMDUuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTE4MFxsaTQ2ODBcbGluNDY4MCB9e1xsaXN0bGV2ZWwNClxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNlwnMDJcJzA2Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGk1NDAwXGxpbjU0MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMA0KXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDdcJzAyXCcwNy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpNjEyMFxsaW42MTIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTANClxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ4XCcwMlwnMDguO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTE4MFxsaTY4NDBcbGluNjg0MCB9e1xsaXN0bmFtZSA7fVxsaXN0aWQxOH17XGxpc3RcbGlzdHRlbXBsYXRlaWQyODAxNjMwOTZcbGlzdGh5YnJpZHtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzANClxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0xODUxMzg1Nzc2XCcwMyhcJzAwKTt9e1xsZXZlbG51bWJlcnNcJzAyO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGk3MjBcbGluNzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTANClxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQxXCcwMlwnMDEuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTE0NDBcbGluMTQ0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkMlwnMDJcJzAyLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0xODBcbGkyMTYwXGxpbjIxNjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQzDQpcJzAyXCcwMy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMjg4MFxsaW4yODgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNFwnMDJcJzA0Ljt9e1xsZXZlbG51bWJlcnNcJzAxO30NClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTM2MDBcbGluMzYwMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDVcJzAyXCcwNS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxmaS0xODBcbGk0MzIwXGxpbjQzMjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2XCcwMlwnMDYuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTUwNDBcbGluNTA0MCB9e1xsaXN0bGV2ZWwNClxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkN1wnMDJcJzA3Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGk1NzYwXGxpbjU3NjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMg0KXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDhcJzAyXCcwOC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpNjQ4MFxsaW42NDgwIH17XGxpc3RuYW1lIDt9XGxpc3RpZDIwfXtcbGlzdFxsaXN0dGVtcGxhdGVpZC0xMjU5OTczODcyXGxpc3RoeWJyaWR7XGxpc3RsZXZlbFxsZXZlbG5mYzMNClxsZXZlbG5mY24zXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2MTY1NzYxMzJcJzAzKFwnMDApO317XGxldmVsbnVtYmVyc1wnMDI7fVxydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGYwXGZzMjRcdWxub25lXGNmMzBcZmJpYXMwIFxmaS0zNjBcbGkxMDczXGxpbjEwNzMgfXtcbGlzdGxldmVsDQpcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcxM1wnMDJcJzAxLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGkxNDQwXGxpbjE0NDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMg0KXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcxNVwnMDJcJzAyLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0xODBcbGkyMTYwXGxpbjIxNjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwDQpcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcwM1wnMDJcJzAzLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGkyODgwXGxpbjI4ODAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMA0KXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcxM1wnMDJcJzA0Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGkzNjAwXGxpbjM2MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzANClxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcxNVwnMDJcJzA1Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0xODBcbGk0MzIwXGxpbjQzMjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MQ0KXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcwM1wnMDJcJzA2Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGk1MDQwXGxpbjUwNDAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmUNClxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcxM1wnMDJcJzA3Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGk1NzYwXGxpbjU3NjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTANClxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcxNVwnMDJcJzA4Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0xODBcbGk2NDgwXGxpbjY0ODAgfXtcbGlzdG5hbWUgO31cbGlzdGlkMzQ5MzkxNDB9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkLTE1MDU0ODExMTBcbGlzdGh5YnJpZHtcbGlzdGxldmVsXGxldmVsbmZjM1xsZXZlbG5mY24zXGxldmVsamMwXGxldmVsamNuMA0KXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQ1XGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0xMTk1ODQ1MjkyXCcwMyhcJzAwKTt9e1xsZXZlbG51bWJlcnNcJzAyO31ccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxmMFxmczI0XHVsbm9uZVxjZjMwXGZiaWFzMCBcZmktMzYwXGxpMTA3M1xsaW4xMDczIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMA0KXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTNcJzAyXCcwMS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMTc5M1xsaW4xNzkzIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjINClxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTVcJzAyXCcwMi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpMjUxM1xsaW4yNTEzIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwDQpcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MDNcJzAyXCcwMy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMzIzM1xsaW4zMjMzIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDENClxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTNcJzAyXCcwNC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMzk1M1xsaW4zOTUzIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlDQpcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTVcJzAyXCcwNS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpNDY3M1xsaW40NjczIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwDQpcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MDNcJzAyXCcwNi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpNTM5M1xsaW41MzkzIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MA0Ke1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTNcJzAyXCcwNy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpNjExM1xsaW42MTEzIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTVcJzAyXCcwOC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpNjgzM1xsaW42ODMzIH17XGxpc3RuYW1lIDt9XGxpc3RpZDM3NzAzNzUwfXtcbGlzdFxsaXN0dGVtcGxhdGVpZC0xNzM3MDY3NjQ0XGxpc3RoeWJyaWR7XGxpc3RsZXZlbFxsZXZlbG5mYzNcbGV2ZWxuZmNuM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwDQpcbGV2ZWxzdGFydGF0NVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtMTE5NTg0NTI5MlwnMDMoXCcwMCk7fXtcbGV2ZWxudW1iZXJzXCcwMjt9XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcZjBcZnMyNFx1bG5vbmVcY2YzMFxmYmlhczAgXGZpLTM2MFxsaTcyMFxsaW43MjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMA0KXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NzAzXCcwMlwnMDEuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTE0NDBcbGluMTQ0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxDQpcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTVcJzAyXCcwMi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpMjE2MFxsaW4yMTYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwDQp7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcxM1wnMDJcJzAzLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGkyODgwXGxpbjI4ODAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcxM1wnMDJcJzA0Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGkzNjAwXGxpbjM2MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcxNVwnMDJcJzA1Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0xODBcbGk0MzIwXGxpbjQzMjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcwM1wnMDJcJzA2Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGk1MDQwXGxpbjUwNDAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcxM1wnMDJcJzA3Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGk1NzYwXGxpbjU3NjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcxNVwnMDJcJzA4Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0xODBcbGk2NDgwXGxpbjY0ODAgfXtcbGlzdG5hbWUgO31cbGlzdGlkMjIwMDIyNjM0fXtcbGlzdFxsaXN0dGVtcGxhdGVpZC05MDgyODU3NThcbGlzdGh5YnJpZHtcbGlzdGxldmVsXGxldmVsbmZjMVxsZXZlbG5mY24xXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzANClxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC04MTkxNzg2OThcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmJpYXMwIFxmaS03MjBcbGk5MDBcbGluOTAwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDENClxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTNcJzAyXCcwMS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMTI2MFxsaW4xMjYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlDQpcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTVcJzAyXCcwMi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpMTk4MFxsaW4xOTgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwDQpcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MDNcJzAyXCcwMy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMjcwMFxsaW4yNzAwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MA0Ke1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTNcJzAyXCcwNC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMzQyMFxsaW4zNDIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTVcJzAyXCcwNS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpNDE0MFxsaW40MTQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MDNcJzAyXCcwNi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpNDg2MFxsaW40ODYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTNcJzAyXCcwNy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpNTU4MFxsaW41NTgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTVcJzAyXCcwOC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpNjMwMFxsaW42MzAwIH17XGxpc3RuYW1lIDt9XGxpc3RpZDIzNDEyMjQ3Mn17XGxpc3RcbGlzdHRlbXBsYXRlaWQtMTE1MjE5OTEzMlxsaXN0aHlicmlke1xsaXN0bGV2ZWxcbGV2ZWxuZmMzXGxldmVsbmZjbjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MA0KXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTY4NDQ2ODczMlwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmYmlhczAgXGZpLTM2MFxsaTE4MDBcbGluMTgwMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxDQpcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NzEzXCcwMlwnMDEuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTI1MjBcbGluMjUyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZQ0KXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NzE1XCcwMlwnMDIuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTE4MFxsaTMyNDBcbGluMzI0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMA0KXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NzAzXCcwMlwnMDMuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTM5NjBcbGluMzk2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDANCntcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NzEzXCcwMlwnMDQuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTQ2ODBcbGluNDY4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZDY3Njk4NzE1XCcwMlwnMDUuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTE4MFxsaTU0MDBcbGluNTQwMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZDY3Njk4NzAzXCcwMlwnMDYuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTYxMjBcbGluNjEyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZDY3Njk4NzEzXCcwMlwnMDcuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTY4NDBcbGluNjg0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZDY3Njk4NzE1XCcwMlwnMDguO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTE4MFxsaTc1NjBcbGluNzU2MCB9e1xsaXN0bmFtZSA7fVxsaXN0aWQyMzk2ODAzNDR9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkMjUxODA2NDE0XGxpc3RoeWJyaWR7XGxpc3RsZXZlbFxsZXZlbG5mYzNcbGV2ZWxuZmNuM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwDQpcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtNzg4NjQ1NDcyXCcwMyhcJzAwKTt9e1xsZXZlbG51bWJlcnNcJzAyO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmYmlhczAgXGZpLTM2MFxsaTEwODBcbGluMTA4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxDQpcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NzEzXCcwMlwnMDEuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTE4MDBcbGluMTgwMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZQ0KXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NzE1XCcwMlwnMDIuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTE4MFxsaTI1MjBcbGluMjUyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMA0KXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NzAzXCcwMlwnMDMuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTMyNDBcbGluMzI0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDANCntcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NzEzXCcwMlwnMDQuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTM5NjBcbGluMzk2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZDY3Njk4NzE1XCcwMlwnMDUuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTE4MFxsaTQ2ODBcbGluNDY4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZDY3Njk4NzAzXCcwMlwnMDYuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTU0MDBcbGluNTQwMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZDY3Njk4NzEzXCcwMlwnMDcuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTYxMjBcbGluNjEyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZDY3Njk4NzE1XCcwMlwnMDguO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTE4MFxsaTY4NDBcbGluNjg0MCB9e1xsaXN0bmFtZSA7fVxsaXN0aWQzMzcxOTYwODZ9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkMTY1OTY2NTMwNHtcbGlzdGxldmVsXGxldmVsbmZjM1xsZXZlbG5mY24zXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MQ0KXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMyhcJzAwKTt9e1xsZXZlbG51bWJlcnNcJzAyO31ccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxmMFxmczI0XHVsbm9uZVxjZjMwXGZiaWFzMCBcZmktMzYwXGxpMTA3M1xsaW4xMDczIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTANClxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDJcJzAxLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGkxNzkzXGxpbjE3OTMgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDJcJzAyLjt9e1xsZXZlbG51bWJlcnNcJzAxO30NClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTE4MFxsaTI1MTNcbGluMjUxMyB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMlwnMDMuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTMyMzNcbGluMzIzMyB9DQp7XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAyXCcwNC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMzk1M1xsaW4zOTUzIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjINClxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDJcJzA1Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0xODBcbGk0NjczXGxpbjQ2NzMgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDANCntcbGV2ZWx0ZXh0XCcwMlwnMDYuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTUzOTNcbGluNTM5MyB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMlwnMDcuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpNjExM1xsaW42MTEzIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAyXCcwOC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpNjgzM1xsaW42ODMzIH17XGxpc3RuYW1lIA0KO31cbGlzdGlkMzQwODYzNjkxfXtcbGlzdFxsaXN0dGVtcGxhdGVpZC0xMzQ4MzEwMTI4XGxpc3RoeWJyaWR7XGxpc3RsZXZlbFxsZXZlbG5mYzNcbGV2ZWxuZmNuM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNzkxODY2NDg0XCcwMyhcJzAwKTt9e1xsZXZlbG51bWJlcnNcJzAyO31ccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGZiaWFzMCBcZmktMzYwXGxpNzIwXGxpbjcyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcxM1wnMDJcJzAxLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGZpLTM2MFxsaTE0NDBcbGluMTQ0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcxNVwnMDJcJzAyLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGZpLTE4MFxsaTIxNjBcbGluMjE2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcwM1wnMDJcJzAzLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGZpLTM2MFxsaTI4ODBcbGluMjg4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcxM1wnMDJcJzA0Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGZpLTM2MFxsaTM2MDBcbGluMzYwMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcxNVwnMDJcJzA1Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGZpLTE4MFxsaTQzMjBcbGluNDMyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcwM1wnMDJcJzA2Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGZpLTM2MFxsaTUwNDBcbGluNTA0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcxM1wnMDJcJzA3Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGZpLTM2MFxsaTU3NjBcbGluNTc2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcxNVwnMDJcJzA4Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGZpLTE4MFxsaTY0ODBcbGluNjQ4MCB9e1xsaXN0bmFtZSA7fVxsaXN0aWQ5MjE1NzExNTR9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkLTkwODI4NTc1OFxsaXN0aHlicmlke1xsaXN0bGV2ZWxcbGV2ZWxuZmMxXGxldmVsbmZjbjFcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC04MTkxNzg2OTgNClwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmYmlhczAgXGZpLTcyMFxsaTkwMFxsaW45MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTMNClwnMDJcJzAxLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGkxMjYwXGxpbjEyNjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTUNClwnMDJcJzAyLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0xODBcbGkxOTgwXGxpbjE5ODAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MDMNClwnMDJcJzAzLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGkyNzAwXGxpbjI3MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTMNClwnMDJcJzA0Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGkzNDIwXGxpbjM0MjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTUNClwnMDJcJzA1Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0xODBcbGk0MTQwXGxpbjQxNDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MDMNClwnMDJcJzA2Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGk0ODYwXGxpbjQ4NjAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTMNClwnMDJcJzA3Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGk1NTgwXGxpbjU1ODAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTUNClwnMDJcJzA4Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0xODBcbGk2MzAwXGxpbjYzMDAgfXtcbGlzdG5hbWUgO31cbGlzdGlkOTU1NzE0MTY3fXtcbGlzdFxsaXN0dGVtcGxhdGVpZDE2NTk2NjUzMDRcbGlzdGh5YnJpZHtcbGlzdGxldmVsXGxldmVsbmZjM1xsZXZlbG5mY24zXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMA0KXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDIyMjcyNTk5NFwnMDMoXCcwMCk7fXtcbGV2ZWxudW1iZXJzXCcwMjt9XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcZjBcZnMyNFx1bG5vbmVcY2YzMFxmYmlhczAgXGZpLTM2MFxsaTEwNzNcbGluMTA3MyB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxDQpcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MDNcJzAyXCcwMS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMTc5M1xsaW4xNzkzIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwDQp7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcxNVwnMDJcJzAyLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0xODBcbGkyNTEzXGxpbjI1MTMgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZDY3Njk4NzAzXCcwMlwnMDMuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTMyMzNcbGluMzIzMyB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NzEzDQpcJzAyXCcwNC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMzk1M1xsaW4zOTUzIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTVcJzAyXCcwNS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0xODBcbGk0NjczXGxpbjQ2NzMgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MDNcJzAyXCcwNi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxmaS0zNjBcbGk1MzkzXGxpbjUzOTMgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTNcJzAyXCcwNy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxmaS0zNjBcbGk2MTEzXGxpbjYxMTMgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTVcJzAyXCcwOC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxmaS0xODBcbGk2ODMzXGxpbjY4MzMgfXtcbGlzdG5hbWUgO31cbGlzdGlkMTEyMTE0MzAxN317XGxpc3RcbGlzdHRlbXBsYXRlaWQtMTE1MjE5OTEzMlxsaXN0aHlicmlke1xsaXN0bGV2ZWxcbGV2ZWxuZmMzXGxldmVsbmZjbjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDE2ODQ0Njg3MzINClwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmYmlhczAgXGZpLTM2MFxsaTE4MDBcbGluMTgwMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcxMw0KXCcwMlwnMDEuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTI1MjBcbGluMjUyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcxNQ0KXCcwMlwnMDIuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTE4MFxsaTMyNDBcbGluMzI0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcwMw0KXCcwMlwnMDMuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTM5NjBcbGluMzk2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcxMw0KXCcwMlwnMDQuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTQ2ODBcbGluNDY4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcxNQ0KXCcwMlwnMDUuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTE4MFxsaTU0MDBcbGluNTQwMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcwMw0KXCcwMlwnMDYuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTYxMjBcbGluNjEyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcxMw0KXCcwMlwnMDcuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTY4NDBcbGluNjg0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcxNQ0KXCcwMlwnMDguO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTE4MFxsaTc1NjBcbGluNzU2MCB9e1xsaXN0bmFtZSA7fVxsaXN0aWQxMjU4OTQ3NjM0fXtcbGlzdFxsaXN0dGVtcGxhdGVpZC05MDgyODU3NThcbGlzdGh5YnJpZHtcbGlzdGxldmVsXGxldmVsbmZjMVxsZXZlbG5mY24xXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMA0KXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC04MTkxNzg2OThcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmJpYXMwIFxmaS03MjBcbGk5MDBcbGluOTAwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwDQpcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTNcJzAyXCcwMS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMTI2MFxsaW4xMjYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MA0Ke1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTVcJzAyXCcwMi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpMTk4MFxsaW4xOTgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MDNcJzAyXCcwMy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMjcwMFxsaW4yNzAwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTNcJzAyXCcwNC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMzQyMFxsaW4zNDIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTVcJzAyXCcwNS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpNDE0MFxsaW40MTQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MDNcJzAyXCcwNi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpNDg2MFxsaW40ODYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTNcJzAyXCcwNy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpNTU4MFxsaW41NTgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTVcJzAyXCcwOC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpNjMwMFxsaW42MzAwIH17XGxpc3RuYW1lIDt9XGxpc3RpZDEyOTk5OTM4NTh9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkLTExNTIxOTkxMzJcbGlzdGh5YnJpZHtcbGlzdGxldmVsXGxldmVsbmZjM1xsZXZlbG5mY24zXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzANClxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDE2ODQ0Njg3MzJcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmJpYXMwIFxmaS0zNjBcbGkxODAwXGxpbjE4MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MQ0KXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcxM1wnMDJcJzAxLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGkyNTIwXGxpbjI1MjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmUNClxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcxNVwnMDJcJzAyLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0xODBcbGkzMjQwXGxpbjMyNDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTANClxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcwM1wnMDJcJzAzLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGkzOTYwXGxpbjM5NjAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwDQp7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcxM1wnMDJcJzA0Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGk0NjgwXGxpbjQ2ODAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcxNVwnMDJcJzA1Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0xODBcbGk1NDAwXGxpbjU0MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcwM1wnMDJcJzA2Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGk2MTIwXGxpbjYxMjAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcxM1wnMDJcJzA3Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGk2ODQwXGxpbjY4NDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcxNVwnMDJcJzA4Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0xODBcbGk3NTYwXGxpbjc1NjAgfXtcbGlzdG5hbWUgO31cbGlzdGlkMTQzMTUwODY4NX17XGxpc3RcbGlzdHRlbXBsYXRlaWQ3MzgwNzYxOTZcbGlzdGh5YnJpZHtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzANClxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NzAzXCcwMlwnMDAuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTE0NDBcbGluMTQ0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZQ0KXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NzEzXCcwMlwnMDEuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTE0NDBcbGluMTQ0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMA0KXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NzE1XCcwMlwnMDIuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTE4MFxsaTIxNjBcbGluMjE2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDANCntcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NzAzXCcwMlwnMDMuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTI4ODBcbGluMjg4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZDY3Njk4NzEzXCcwMlwnMDQuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTM2MDBcbGluMzYwMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZDY3Njk4NzE1XCcwMlwnMDUuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTE4MFxsaTQzMjBcbGluNDMyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZDY3Njk4NzAzXCcwMlwnMDYuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTUwNDBcbGluNTA0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZDY3Njk4NzEzXCcwMlwnMDcuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTU3NjBcbGluNTc2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZDY3Njk4NzE1XCcwMlwnMDguO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTE4MFxsaTY0ODBcbGluNjQ4MCB9e1xsaXN0bmFtZSA7fVxsaXN0aWQxNTY2MTc5Nzc0fXtcbGlzdFxsaXN0dGVtcGxhdGVpZC05MDgyODU3NThcbGlzdGh5YnJpZHtcbGlzdGxldmVsXGxldmVsbmZjMVxsZXZlbG5mY24xXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzANClxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC04MTkxNzg2OThcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmJpYXMwIFxmaS03MjBcbGk5MDBcbGluOTAwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDENClxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTNcJzAyXCcwMS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMTI2MFxsaW4xMjYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlDQpcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTVcJzAyXCcwMi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpMTk4MFxsaW4xOTgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwDQpcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MDNcJzAyXCcwMy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMjcwMFxsaW4yNzAwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MA0Ke1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTNcJzAyXCcwNC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMzQyMFxsaW4zNDIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTVcJzAyXCcwNS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpNDE0MFxsaW40MTQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MDNcJzAyXCcwNi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpNDg2MFxsaW40ODYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTNcJzAyXCcwNy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpNTU4MFxsaW41NTgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTVcJzAyXCcwOC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpNjMwMFxsaW42MzAwIH17XGxpc3RuYW1lIDt9XGxpc3RpZDE3MzQ2MTg3NTB9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkLTE5NDIwNDE4MDBcbGlzdGh5YnJpZHtcbGlzdGxldmVsXGxldmVsbmZjM1xsZXZlbG5mY24zXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzANClxsZXZlbHN0YXJ0YXQyXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0xODcxMjk1NDhcJzAzKFwnMDApO317XGxldmVsbnVtYmVyc1wnMDI7fVxydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGYwXGZzMjRcdWxub25lXGNmMzBcZmJpYXMwIFxmaS0zNjBcbGkxMDczXGxpbjEwNzMgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMA0KXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcxM1wnMDJcJzAxLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGkxNDQwXGxpbjE0NDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzANClxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcxNVwnMDJcJzAyLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0xODBcbGkyMTYwXGxpbjIxNjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MQ0KXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcwM1wnMDJcJzAzLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGkyODgwXGxpbjI4ODAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmUNClxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcxM1wnMDJcJzA0Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGkzNjAwXGxpbjM2MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTANClxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcxNVwnMDJcJzA1Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0xODBcbGk0MzIwXGxpbjQzMjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwDQp7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcwM1wnMDJcJzA2Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGk1MDQwXGxpbjUwNDAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcxM1wnMDJcJzA3Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGk1NzYwXGxpbjU3NjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcxNVwnMDJcJzA4Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0xODBcbGk2NDgwXGxpbjY0ODAgfXtcbGlzdG5hbWUgO31cbGlzdGlkMjAyMzA1MTE5N317XGxpc3RcbGlzdHRlbXBsYXRlaWQtMTE1MjE5OTEzMlxsaXN0aHlicmlke1xsaXN0bGV2ZWxcbGV2ZWxuZmMzXGxldmVsbmZjbjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MA0KXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTY4NDQ2ODczMlwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmYmlhczAgXGZpLTM2MFxsaTE4MDBcbGluMTgwMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxDQpcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NzEzXCcwMlwnMDEuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTI1MjBcbGluMjUyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZQ0KXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NzE1XCcwMlwnMDIuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTE4MFxsaTMyNDBcbGluMzI0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMA0KXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NzAzXCcwMlwnMDMuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTM5NjBcbGluMzk2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDANCntcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NzEzXCcwMlwnMDQuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTQ2ODBcbGluNDY4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZDY3Njk4NzE1XCcwMlwnMDUuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTE4MFxsaTU0MDBcbGluNTQwMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZDY3Njk4NzAzXCcwMlwnMDYuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTYxMjBcbGluNjEyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZDY3Njk4NzEzXCcwMlwnMDcuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTY4NDBcbGluNjg0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZDY3Njk4NzE1XCcwMlwnMDguO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTE4MFxsaTc1NjBcbGluNzU2MCB9e1xsaXN0bmFtZSA7fVxsaXN0aWQyMDg1NjQwNDY4fXtcbGlzdFxsaXN0dGVtcGxhdGVpZC0xNDkxOTkxOTI0XGxpc3RoeWJyaWR7XGxpc3RsZXZlbFxsZXZlbG5mYzNcbGV2ZWxuZmNuM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwDQpcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQxODIyNDc1NDQ0XCcwMyhcJzAwKTt9e1xsZXZlbG51bWJlcnNcJzAyO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmYmlhczAgXGZpLTM2MFxsaTcyMFxsaW43MjAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MQ0KXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcxM1wnMDJcJzAxLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGkxNDQwXGxpbjE0NDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmUNClxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcxNVwnMDJcJzAyLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0xODBcbGkyMTYwXGxpbjIxNjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTANClxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcwM1wnMDJcJzAzLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGkyODgwXGxpbjI4ODAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwDQp7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcxM1wnMDJcJzA0Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGkzNjAwXGxpbjM2MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcxNVwnMDJcJzA1Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0xODBcbGk0MzIwXGxpbjQzMjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcwM1wnMDJcJzA2Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGk1MDQwXGxpbjUwNDAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcxM1wnMDJcJzA3Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGk1NzYwXGxpbjU3NjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQ2NzY5ODcxNVwnMDJcJzA4Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0xODBcbGk2NDgwXGxpbjY0ODAgfXtcbGlzdG5hbWUgO31cbGlzdGlkMjA5MzU3NzE4Mn17XGxpc3RcbGlzdHRlbXBsYXRlaWQ0MTM2ODU1MTZcbGlzdGh5YnJpZHtcbGlzdGxldmVsXGxldmVsbmZjM1xsZXZlbG5mY24zXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzANClxsZXZlbHN0YXJ0YXQ0XGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0xMTk1ODQ1MjkyXCcwMyhcJzAwKTt9e1xsZXZlbG51bWJlcnNcJzAyO31ccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxmMFxmczI0XHVsbm9uZVxjZjMwXGZiaWFzMCBcZmktMzYwXGxpMTA3M1xsaW4xMDczIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjANClxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTNcJzAyXCcwMS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMTQ0MFxsaW4xNDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwDQpcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTVcJzAyXCcwMi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpMjE2MFxsaW4yMTYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDENClxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MDNcJzAyXCcwMy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMjg4MFxsaW4yODgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlDQpcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTNcJzAyXCcwNC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMzYwMFxsaW4zNjAwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwDQpcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTVcJzAyXCcwNS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpNDMyMFxsaW40MzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MA0Ke1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MDNcJzAyXCcwNi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpNTA0MFxsaW41MDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTNcJzAyXCcwNy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpNTc2MFxsaW41NzYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg3MTVcJzAyXCcwOC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpNjQ4MFxsaW42NDgwIH17XGxpc3RuYW1lIDt9XGxpc3RpZDIxMTgyMTQ2Nzh9fXtcKlxsaXN0b3ZlcnJpZGV0YWJsZXtcbGlzdG92ZXJyaWRlXGxpc3RpZC0xMTlcbGlzdG92ZXJyaWRlY291bnQwXGxzMX17XGxpc3RvdmVycmlkZVxsaXN0aWQtMTI1DQpcbGlzdG92ZXJyaWRlY291bnQwXGxzMn17XGxpc3RvdmVycmlkZVxsaXN0aWQtMTI2XGxpc3RvdmVycmlkZWNvdW50MFxsczN9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkLTEyN1xsaXN0b3ZlcnJpZGVjb3VudDBcbHM0fXtcbGlzdG92ZXJyaWRlXGxpc3RpZC0xMjhcbGlzdG92ZXJyaWRlY291bnQwXGxzNX17XGxpc3RvdmVycmlkZVxsaXN0aWQtMTIwXGxpc3RvdmVycmlkZWNvdW50MFxsczZ9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkLTEyOQ0KXGxpc3RvdmVycmlkZWNvdW50MFxsczd9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkLTEzMFxsaXN0b3ZlcnJpZGVjb3VudDBcbHM4fXtcbGlzdG92ZXJyaWRlXGxpc3RpZC0xMzFcbGlzdG92ZXJyaWRlY291bnQwXGxzOX17XGxpc3RvdmVycmlkZVxsaXN0aWQtMTMyXGxpc3RvdmVycmlkZWNvdW50MFxsczEwfXtcbGlzdG92ZXJyaWRlXGxpc3RpZDJcbGlzdG92ZXJyaWRlY291bnQ5e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVmb3JtYXR7XGxpc3RsZXZlbA0KXGxldmVsbmZjM1xsZXZlbG5mY24zXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDMoXCcwMCk7fXtcbGV2ZWxudW1iZXJzXCcwMjt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxub25lXGNmMCBcZmktMzYwXGxpNzIwXGxpbjcyMCB9fXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlZm9ybWF0e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0DQpcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAyXCcwMS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxkYlxjZjIgXGZpLTM2MFxsaTE0NDBcbGluMTQ0MCB9fXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlZm9ybWF0e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjINClxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAyXCcwMi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxkYlxjZjIgXGZpLTE4MFxsaTIxNjBcbGluMjE2MCB9fXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlZm9ybWF0e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzANClxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAyXCcwMy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxkYlxjZjIgXGZpLTM2MFxsaTI4ODBcbGluMjg4MCB9fXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlZm9ybWF0e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wDQpcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAyXCcwNC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxkYlxjZjIgXGZpLTM2MFxsaTM2MDBcbGluMzYwMCB9fXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlZm9ybWF0e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MA0KXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAyXCcwNS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxkYlxjZjIgXGZpLTE4MFxsaTQzMjBcbGluNDMyMCB9fXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlZm9ybWF0e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxDQpcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAyXCcwNi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxkYlxjZjIgXGZpLTM2MFxsaTUwNDBcbGluNTA0MCB9fXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlZm9ybWF0e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwDQpcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAyXCcwNy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxkYlxjZjIgXGZpLTM2MFxsaTU3NjBcbGluNTc2MCB9fXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlZm9ybWF0e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MA0Ke1xsZXZlbHRleHRcJzAyXCcwOC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxkYlxjZjIgXGZpLTE4MFxsaTY0ODBcbGluNjQ4MCB9fVxsczExfXtcbGlzdG92ZXJyaWRlXGxpc3RpZDExXGxpc3RvdmVycmlkZWNvdW50OXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlZm9ybWF0e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MA0KXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAzKFwnMDApO317XGxldmVsbnVtYmVyc1wnMDI7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGYwXHVsbm9uZVxjZjAgXGZpLTcyMFxsaTEwODBcbGluMTA4MCB9fXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlZm9ybWF0e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MA0KXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAyXCcwMS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxkYlxjZjIgXGZpLTM2MFxsaTE0NDBcbGluMTQ0MCB9fXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlZm9ybWF0e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxDQpcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAyXCcwMi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxkYlxjZjIgXGZpLTE4MFxsaTIxNjBcbGluMjE2MCB9fXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlZm9ybWF0e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwDQpcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAyXCcwMy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxkYlxjZjIgXGZpLTM2MFxsaTI4ODBcbGluMjg4MCB9fXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlZm9ybWF0e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MA0Ke1xsZXZlbHRleHRcJzAyXCcwNC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxkYlxjZjIgXGZpLTM2MFxsaTM2MDBcbGluMzYwMCB9fXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlZm9ybWF0e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcJzAyXCcwNS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxkYlxjZjIgXGZpLTE4MFxsaTQzMjBcbGluNDMyMCB9fXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlZm9ybWF0e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcJzAyXCcwNi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxkYlxjZjIgXGZpLTM2MFxsaTUwNDBcbGluNTA0MCB9fXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlZm9ybWF0e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcJzAyXCcwNy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxkYlxjZjIgXGZpLTM2MFxsaTU3NjBcbGluNTc2MCB9fXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlZm9ybWF0e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcJzAyXCcwOC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxkYlxjZjIgXGZpLTE4MFxsaTY0ODBcbGluNjQ4MCB9fVxsczEyfXtcbGlzdG92ZXJyaWRlXGxpc3RpZDE4XGxpc3RvdmVycmlkZWNvdW50OXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlZm9ybWF0e1xsaXN0bGV2ZWxcbGV2ZWxuZmMzXGxldmVsbmZjbjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxDQpcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAzKFwnMDApO317XGxldmVsbnVtYmVyc1wnMDI7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsbm9uZVxjZjAgXGZpLTM2MFxsaTEwODBcbGluMTA4MCB9fXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlZm9ybWF0e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwDQpcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAyXCcwMS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxub25lXGNmMCBcZmktMzYwXGxpMTgwMFxsaW4xODAwIH19e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVmb3JtYXR7XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwDQp7XGxldmVsdGV4dFwnMDJcJzAyLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bG5vbmVcY2YwIFxmaS0xODBcbGkyNTIwXGxpbjI1MjAgfX17XGxmb2xldmVsXGxpc3RvdmVycmlkZWZvcm1hdHtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXCcwMlwnMDMuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsbm9uZVxjZjAgXGZpLTM2MFxsaTMyNDBcbGluMzI0MCB9fXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlZm9ybWF0e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcJzAyXCcwNC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxub25lXGNmMCBcZmktMzYwXGxpMzk2MFxsaW4zOTYwIH19e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVmb3JtYXR7XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClwnMDJcJzA1Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bGRiXGNmMiBcZmktMTgwXGxpNDY4MFxsaW40NjgwIH19e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVmb3JtYXR7XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClwnMDJcJzA2Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bGRiXGNmMiBcZmktMzYwXGxpNTQwMFxsaW41NDAwIH19e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVmb3JtYXR7XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClwnMDJcJzA3Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bGRiXGNmMiBcZmktMzYwXGxpNjEyMFxsaW42MTIwIH19e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVmb3JtYXR7XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClwnMDJcJzA4Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bGRiXGNmMiBcZmktMTgwXGxpNjg0MFxsaW42ODQwIH19XGxzMTN9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkMjBcbGlzdG92ZXJyaWRlY291bnQ5e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVmb3JtYXR7XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDENClxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDMoXCcwMCk7fXtcbGV2ZWxudW1iZXJzXCcwMjt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmJpYXMwIFxmaS0zNjBcbGk3MjBcbGluNzIwIH19e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVmb3JtYXR7XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlDQpcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAyXCcwMS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMTQ0MFxsaW4xNDQwIH19e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVmb3JtYXR7XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwDQpcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAyXCcwMi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpMjE2MFxsaW4yMTYwIH19e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVmb3JtYXR7XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MA0Ke1xsZXZlbHRleHRcJzAyXCcwMy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMjg4MFxsaW4yODgwIH19e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVmb3JtYXR7XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcJzAyXCcwNC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMzYwMFxsaW4zNjAwIH19e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVmb3JtYXR7XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcJzAyXCcwNS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpNDMyMFxsaW40MzIwIH19e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVmb3JtYXR7XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcJzAyXCcwNi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpNTA0MFxsaW41MDQwIH19e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVmb3JtYXR7XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcJzAyXCcwNy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpNTc2MFxsaW41NzYwIH19e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVmb3JtYXR7XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcJzAyXCcwOC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMTgwXGxpNjQ4MFxsaW42NDgwIH19XGxzMTR9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkOTU1NzE0MTY3XGxpc3RvdmVycmlkZWNvdW50MFxsczE1fXtcbGlzdG92ZXJyaWRlXGxpc3RpZDIzOTY4MDM0NFxsaXN0b3ZlcnJpZGVjb3VudDBcbHMxNn17XGxpc3RvdmVycmlkZVxsaXN0aWQxMjk5OTkzODU4DQpcbGlzdG92ZXJyaWRlY291bnQwXGxzMTd9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkMjA4NTY0MDQ2OFxsaXN0b3ZlcnJpZGVjb3VudDBcbHMxOH17XGxpc3RvdmVycmlkZVxsaXN0aWQyMzQxMjI0NzJcbGlzdG92ZXJyaWRlY291bnQwXGxzMTl9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkMTQzMTUwODY4NVxsaXN0b3ZlcnJpZGVjb3VudDBcbHMyMH17XGxpc3RvdmVycmlkZVxsaXN0aWQxNzM0NjE4NzUwXGxpc3RvdmVycmlkZWNvdW50MFxsczIxfQ0Ke1xsaXN0b3ZlcnJpZGVcbGlzdGlkMTI1ODk0NzYzNFxsaXN0b3ZlcnJpZGVjb3VudDBcbHMyMn17XGxpc3RvdmVycmlkZVxsaXN0aWQxMTIxMTQzMDE3XGxpc3RvdmVycmlkZWNvdW50MFxsczIzfXtcbGlzdG92ZXJyaWRlXGxpc3RpZDIyMDAyMjYzNFxsaXN0b3ZlcnJpZGVjb3VudDBcbHMyNH17XGxpc3RvdmVycmlkZVxsaXN0aWQzMzcxOTYwODZcbGlzdG92ZXJyaWRlY291bnQwXGxzMjV9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkMzQwODYzNjkxDQpcbGlzdG92ZXJyaWRlY291bnQwXGxzMjZ9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkMjExODIxNDY3OFxsaXN0b3ZlcnJpZGVjb3VudDBcbHMyN317XGxpc3RvdmVycmlkZVxsaXN0aWQxOFxsaXN0b3ZlcnJpZGVjb3VudDBcbHMyOH17XGxpc3RvdmVycmlkZVxsaXN0aWQyMFxsaXN0b3ZlcnJpZGVjb3VudDBcbHMyOX17XGxpc3RvdmVycmlkZVxsaXN0aWQzNzcwMzc1MFxsaXN0b3ZlcnJpZGVjb3VudDBcbHMzMH0NCntcbGlzdG92ZXJyaWRlXGxpc3RpZDM0OTM5MTQwXGxpc3RvdmVycmlkZWNvdW50MFxsczMxfXtcbGlzdG92ZXJyaWRlXGxpc3RpZDIwMjMwNTExOTdcbGlzdG92ZXJyaWRlY291bnQwXGxzMzJ9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkMTU2NjE3OTc3NFxsaXN0b3ZlcnJpZGVjb3VudDBcbHMzM317XGxpc3RvdmVycmlkZVxsaXN0aWQyMDkzNTc3MTgyXGxpc3RvdmVycmlkZWNvdW50MFxsczM0fXtcbGlzdG92ZXJyaWRlXGxpc3RpZDkyMTU3MTE1NA0KXGxpc3RvdmVycmlkZWNvdW50MFxsczM1fX17XCpccGdwdGJsIHtccGdwXGlwZ3AwXGl0YXAwXGxpMFxyaTBcc2IwXHNhMH17XHBncFxpcGdwMFxpdGFwMFxsaTBccmkwXHNiMFxzYTB9e1xwZ3BcaXBncDBcaXRhcDBcbGkwXHJpMFxzYjBcc2EwfXtccGdwXGlwZ3AwXGl0YXAwXGxpMFxyaTBcc2IwXHNhMH17XHBncFxpcGdwMFxpdGFwMFxsaTBccmkwXHNiMFxzYTB9e1xwZ3BcaXBncDBcaXRhcDBcbGkwXHJpMFxzYjBcc2EwfXtccGdwXGlwZ3AwDQpcaXRhcDBcbGkwXHJpMFxzYjBcc2EwfX17XCpccnNpZHRibCBccnNpZDYzNTdccnNpZDY4NzUzXHJzaWQxMzM1MjRccnNpZDE0ODQ1OFxyc2lkMjAwMjg5XHJzaWQyMDM0MjVccnNpZDIwNDQ5NVxyc2lkMjYzOTA1XHJzaWQzMzM1NzlccnNpZDM0NzczMFxyc2lkMzk5MTE5XHJzaWQ2MDM4NzJccnNpZDY4MTg2NVxyc2lkNzkyNjE4XHJzaWQ4NzEyMDRccnNpZDg4MDc4NVxyc2lkOTM4NTc0XHJzaWQ5NDk1OTFccnNpZDEyMDk0NTlccnNpZDEyNjU2NDQNClxyc2lkMTI3Nzg1MFxyc2lkMTMyNTU2MVxyc2lkMTMyODE1N1xyc2lkMTYwMDA2Mlxyc2lkMTY0NzY4N1xyc2lkMTY3MDU1NFxyc2lkMTkwNDIzMFxyc2lkMTk3NTIyMFxyc2lkMjE2NDI3Mlxyc2lkMjMyNjMyOVxyc2lkMjM2MTM3OFxyc2lkMjQ5MDUyOFxyc2lkMjU2Mzc3NFxyc2lkMjYzNDI1OFxyc2lkMjY4OTgwNlxyc2lkMjg0NjU2OFxyc2lkMzAxNTI0OVxyc2lkMzA4NzMyMFxyc2lkMzE1NjExMlxyc2lkMzE1NjE3Mlxyc2lkMzIyMDcwOQ0KXHJzaWQzMjkzNzY0XHJzaWQzNDI5OTA0XHJzaWQzNTU4NzU2XHJzaWQzNTY3MzYwXHJzaWQzNjg1MDM3XHJzaWQzODE4OTk2XHJzaWQzOTMzMzI4XHJzaWQ0MjEwMTU1XHJzaWQ0NDA2NjU3XHJzaWQ0NDc0MjU0XHJzaWQ0NTk1MTQ0XHJzaWQ0NTk1MzY0XHJzaWQ0NzM1NDk5XHJzaWQ0Nzk3NTM0XHJzaWQ0OTI2MDkxXHJzaWQ0OTM2NTE1XHJzaWQ0OTkyNDc1XHJzaWQ1MTI5MTA4XHJzaWQ1MTk4NTkxXHJzaWQ1MjA4ODYyXHJzaWQ1NDQ5Mzg0DQpccnNpZDU0NjM0NThccnNpZDU2NDQyNDhccnNpZDU5MDg3MTlccnNpZDU5MTI3NTZccnNpZDU5Nzc4ODdccnNpZDYxNzE5NTBccnNpZDYzNjEzOTVccnNpZDYzNjE4MzNccnNpZDY2MzEyNThccnNpZDY2MzQzNDdccnNpZDY3MTcxNjRccnNpZDY4ODcxNzlccnNpZDY4OTE5NTBccnNpZDcyNzUxOTVccnNpZDc1MDAxNjNccnNpZDc1NjMxNThccnNpZDc2NzQ0OTVccnNpZDc3NDE5ODFccnNpZDc3OTkyOTVccnNpZDgwODcxNzdccnNpZDgyMTY2MzgNClxyc2lkODI3NjYyNlxyc2lkODM0NDMxN1xyc2lkODg2ODA4Nlxyc2lkODkxNTAyOVxyc2lkODk5NDMwOFxyc2lkOTAwMTQyNlxyc2lkOTAxMDk4N1xyc2lkOTExODE1MVxyc2lkOTE3NzA0M1xyc2lkOTE4MTYyNlxyc2lkOTE5MDExMlxyc2lkOTI2MDU3OVxyc2lkOTMxNTY3OFxyc2lkOTM4NzU3MVxyc2lkOTUyOTQ2MFxyc2lkOTU4MDE1MVxyc2lkOTU5MzEzMFxyc2lkOTcwMDIwOFxyc2lkOTcxMDg0NVxyc2lkOTcyMDI4OFxyc2lkOTcyNDIzMw0KXHJzaWQ5NzMwNzEyXHJzaWQ5NzcwMDIwXHJzaWQ5NzcyOTA2XHJzaWQ5ODQ1MjU3XHJzaWQ5ODU1NTgwXHJzaWQ5ODU5ODg1XHJzaWQxMDAzNzc2Mlxyc2lkMTAxMDU1MzBccnNpZDEwMzEyNTY5XHJzaWQxMDM2OTE1MVxyc2lkMTAzNzc0NTRccnNpZDEwNDM0MDIwXHJzaWQxMDQzNjk5MVxyc2lkMTA1Njk4NDNccnNpZDEwNjgzNTgzXHJzaWQxMDY4Mzg0Mlxyc2lkMTA3NDg1MTRccnNpZDEwNzUyODA2XHJzaWQxMDgyMTg3MFxyc2lkMTA4MjE5NDQNClxyc2lkMTA4NzkyNjFccnNpZDEwOTU5MTI1XHJzaWQxMTA4MzQxM1xyc2lkMTExNTgzNTNccnNpZDExMzAwOTI3XHJzaWQxMTU1OTczNVxyc2lkMTE2NjgxOTlccnNpZDExNzMzMjU3XHJzaWQxMTc0MDMyNVxyc2lkMTE3NDc5ODBccnNpZDExNzUzMjI2XHJzaWQxMTgyMDA1MVxyc2lkMTE4NzMxMDZccnNpZDExOTU3NzM0XHJzaWQxMjA1OTE1Nlxyc2lkMTIyNzE5NTBccnNpZDEyNDE3NDI1XHJzaWQxMjU0MTk0M1xyc2lkMTI2MDEwODMNClxyc2lkMTI2MDE5MjNccnNpZDEyNzIzNDE0XHJzaWQxMjg2NTAyOFxyc2lkMTI5MTg5MjRccnNpZDEzMTc3OTM5XHJzaWQxMzE5NzQ4MFxyc2lkMTMyNDkwNzNccnNpZDEzMjY1OTM3XHJzaWQxMzMwOTg3NFxyc2lkMTM1Njk2ODFccnNpZDEzNjYzMzI0XHJzaWQxNDI0MjE5M1xyc2lkMTQ0MTgzNTlccnNpZDE0NjgyMDQwXHJzaWQxNDY5ODI4OVxyc2lkMTQ3Njg3OTFccnNpZDE0ODEyODczXHJzaWQxNDgzODYyM1xyc2lkMTQ4ODYyMjUNClxyc2lkMTUwNzM4MjZccnNpZDE1MjE5MTE5XHJzaWQxNTM1MTA3N1xyc2lkMTU1NDA1NTJccnNpZDE1NTU4NzQwXHJzaWQxNTYxOTM3MFxyc2lkMTU4MTkwMzBccnNpZDE1ODIyMzg1XHJzaWQxNTk0ODkwOVxyc2lkMTYyNjgxNzhccnNpZDE2MzM1MTYwXHJzaWQxNjM5NDQ0Nlxyc2lkMTY0Njc4MTBccnNpZDE2NjU4Mzc5XHJzaWQxNjY3MzU3Mlxyc2lkMTY3MjA2MDFccnNpZDE2NzM3OTI1fXtcbW1hdGhQclxtbWF0aEZvbnQzNFxtYnJrQmluMA0KXG1icmtCaW5TdWIwXG1zbWFsbEZyYWMwXG1kaXNwRGVmMVxtbE1hcmdpbjBcbXJNYXJnaW4wXG1kZWZKYzFcbXdyYXBJbmRlbnQxNDQwXG1pbnRMaW0wXG1uYXJ5TGltMX17XGluZm97XGF1dGhvciBFbGl6YWJldGh9e1xvcGVyYXRvciBXRUIyMDMkQEVTR0xhdGl0dWRlLm5ldH17XGNyZWF0aW1ceXIyMDIxXG1vM1xkeTE4XGhyMTBcbWluNTV9e1xyZXZ0aW1ceXIyMDIxXG1vM1xkeTE4XGhyMTBcbWluNTV9DQp7XHByaW50aW1ceXIyMDIxXG1vM1xkeTE4XGhyMTBcbWluNDd9e1x2ZXJzaW9uMn17XGVkbWluczB9e1xub2ZwYWdlczJ9e1xub2Z3b3JkczUzOH17XG5vZmNoYXJzMzA3M317XG5vZmNoYXJzd3MzNjA0fXtcdmVybjIxfX17XCpceG1sbnN0Ymwge1x4bWxuczEgaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9vZmZpY2Uvd29yZC8yMDAzL3dvcmRtbH19DQpccGFwZXJ3MTIyNDBccGFwZXJoMTU4NDBcbWFyZ2wxNDQwXG1hcmdyMTQ0MFxtYXJndDE0NDBcbWFyZ2IxNDQwXGd1dHRlcjBcbHRyc2VjdCANClxkZWZ0YWIxOTg3XHdpZG93Y3RybFxmdG5ialxhZW5kZG9jXHRyYWNrbW92ZXMwXHRyYWNrZm9ybWF0dGluZzFcZG9ub3RlbWJlZHN5c2ZvbnQwXHJlbHlvbnZtbDBcZG9ub3RlbWJlZGxpbmdkYXRhMFxncmZkb2NldmVudHMwXHZhbGlkYXRleG1sMFxzaG93cGxhY2Vob2xkdGV4dDBcaWdub3JlbWl4ZWRjb250ZW50MFxzYXZlaW52YWxpZHhtbDBcc2hvd3htbGVycm9yczANClxub3hsYXR0b3llblxleHBzaHJ0blxub3VsdHJsc3BjXGRudGJsbnNiZGJcbm9zcGFjZWZvcnVsXGZvcm1zaGFkZVxob3J6ZG9jXGRnaHNwYWNlMTIwXGRndnNwYWNlMTIwXGRnaG9yaWdpbjE3MDFcZGd2b3JpZ2luMTk4NFxkZ2hzaG93MFxkZ3ZzaG93Mw0KXGpjb21wcmVzc1x2aWV3a2luZDFcdmlld3NjYWxlMTAwXHNwbHl0d25pbmVcZnRubHl0d25pbmVcaHRtYXV0c3BcdXNlbHRiYWxuXGFsbnRibGluZFxseXRjYWxjdGJsd2RcbHl0dGJscnRnclxsbmJya3J1bGVcbm9icmt3cnB0Ymxcc25hcHRvZ3JpZGluY2VsbFxhbGxvd2ZpZWxkZW5kc2VsXHdycHB1bmN0XGFzaWFuYnJrcnVsZVxyc2lkcm9vdDc1NjMxNTgNClxuZXd0YmxzdHlydWxzXG5vZ3Jvd2F1dG9maXRccmVtZHR0bVx1c2Vub3Jtc3R5Zm9ybGlzdFxub2luZG5tYnJ0c1xmZWxuYnJlbGV2XG5vY3hzcHRhYmxlXGluZHJsc3dlbGV2ZW5cbm9hZmNuc3R0YmxcYWZlbGV2XHV0aW5sXGh3ZWxldlxzcGx0cGdwYXJcbm90Y3Zhc3Bcbm90YnJrY25zdGZyY3RibFxub3R2YXR4Ynhca3JucHJzbmV0XGNhY2hlZGNvbGJhbCBcbm91aWNvbXBhdCBcZmV0MHtcKlx3Z3JmZm10ZmlsdGVyIDI0NTB9DQpcbm9mZWF0dXJldGhyb3R0bGUxXGlsZm9tYWNhdGNsbnVwMjR7XCpcZnRuc2VwIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYzN1xhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYzN1xoaWNoXGFmMzdcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYzNyBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5Nzc4ODcgXGNoZnRuc2VwIA0KXHBhciB9fXtcKlxmdG5zZXBjIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYzN1xhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGFmMzdcaGljaFxhZjM3XGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMzcgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDU5Nzc4ODcgXGNoZnRuc2VwYyANClxwYXIgfX17XCpcZnRuY24gXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjM3XGFmczIyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYzN1xoaWNoXGFmMzdcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYzNyANClxsdHJjaFxmY3MwIFxpbnNyc2lkNTk3Nzg4NyANClxwYXIgfX17XCpcYWZ0bnNlcCBcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMzdcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxhZjM3XGhpY2hcYWYzN1xkYmNoXGFmMzE1MDVcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjM3IA0KXGx0cmNoXGZjczAgXGluc3JzaWQ1OTc3ODg3IFxjaGZ0bnNlcCANClxwYXIgfX17XCpcYWZ0bnNlcGMgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjM3XGFmczIyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYzN1xoaWNoXGFmMzdcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYzNyANClxsdHJjaFxmY3MwIFxpbnNyc2lkNTk3Nzg4NyBcY2hmdG5zZXBjIA0KXHBhciB9fXtcKlxhZnRuY24gXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjM3XGFmczIyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYzN1xoaWNoXGFmMzdcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYzNyANClxsdHJjaFxmY3MwIFxpbnNyc2lkNTk3Nzg4NyANClxwYXIgfX1cbHRycGFyIFxzZWN0ZCBcbHRyc2VjdFxwc3oxXGxpbmV4MFxoZWFkZXJ5NDMyXGZvb3Rlcnk0MzJcdGl0bGVwZ1xwZ2JyZHJvcHQzMlxwZ2JyZHJ0XGJyZHJzXGJyZHJ3MTBcYnJzcDQ4MCBccGdicmRybFxicmRyc1xicmRydzEwXGJyc3A0ODAgXHBnYnJkcmJcYnJkcnNcYnJkcncxMFxicnNwNDgwIFxwZ2JyZHJyXGJyZHJzXGJyZHJ3MTBcYnJzcDQ4MCANClxzZWN0bGluZWdyaWQyOTlcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDEyNzIzNDE0XHNmdG5iaiB7XGZvb3RlcnIgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHMyN1xxYyBcbGkwXHJpMjg4XHdpZGN0bHBhclx0cWNcdHg0MzIwXHRxclx0eDg2NDBcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjI4OFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjM3XGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxhZjQ0XGhpY2hcYWY0NFxkYmNoXGFmMzE1MDVcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjFcYWZzMTggXGx0cmNoXGZjczAgXGYxXGZzMThcaW5zcnNpZDM0Mjk5MDQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZjBcZnMyMFxpbnNyc2lkOTU5MzEzMCBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgV2FzaGluZ3RvbiBDcm9zc2luZyBGaWVsZCBTZXJ2aWNlcywgTExDfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmMFxmczIwXGluc3JzaWQzNDI5OTA0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGYwXGZzMjBcaW5zcnNpZDE1MzUxMDc3IFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCBGLkUuUi5DLiBOby4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGYwXGZzMjBcaW5zcnNpZDc2NzQ0OTUgXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIFtXXSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGYwXGZzMjBcdWxcaW5zcnNpZDc2NzQ0OTUgDQpcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgMi4xLjB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHN0cmlrZVxmMFxmczIwXGluc3JzaWQxNTM1MTA3N1xjaGFycnNpZDc2NzQ0OTUgXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIDIuMC4xfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmMFxmczIwXGluc3JzaWQzNDI5OTA0IA0KXHBhciBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgUGFnZSB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmMFxmczIwXGluc3JzaWQzNDI5OTA0IFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCAgUEFHRSB9fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZjBcZnMyMFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDEzMzUyNCANClxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCAyfX19XHNlY3RkIFxsdHJzZWN0XGxpbmV4MFxlbmRuaGVyZVxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZjBcZnMyMFxpbnNyc2lkMzQyOTkwNCBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgIG9mIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGYwXGZzMjBcaW5zcnNpZDM0Mjk5MDQgDQpcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgIE5VTVBBR0VTICB9fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZjBcZnMyMFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDEzMzUyNCBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgM319fVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZjBcZnMyMFxpbnNyc2lkMzQyOTkwNCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczI3XHFsIFxsaTBccmkwXHNhMjAwXHNsMjc2XHNsbXVsdDFcd2lkY3RscGFyXHRxY1x0eDQzMjBcdHFyXHR4ODY0MFx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4wXGl0YXAwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQyOTkwNCANClxwYXIgfX17XGhlYWRlcmYgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ0NDc0MjU0IFxydGxjaFxmY3MxIFxhZjM3XGFmczIyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYzN1xoaWNoXGFmMzdcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjM3IFxsdHJjaFxmY3MwIFxpbnNyc2lkMzQyOTkwNCANClxwYXIgXGx0cnJvd31cdHJvd2QgXGlyb3cwXGlyb3diYW5kMFxsYXN0cm93IFxsdHJyb3dcdHM1M1x0c3Jvd2RcdHJnYXBoMTA4XHRyZnRzV2lkdGgxXHRyZnRzV2lkdGhCM1x0cmF1dG9maXQxXHRycGFkZGwxMDhcdHJwYWRkcjEwOFx0cnBhZGRmbDNcdHJwYWRkZnQzXHRycGFkZGZiM1x0cnBhZGRmcjNcdGJscnNpZDQ0NzQyNTRcdGJsbGtoZHJyb3dzXHRibGxraGRyY29sc1x0Ymxsa25vY29sYmFuZFx0YmxpbmQxOFx0YmxpbmR0eXBlMyBcY2x2ZXJ0YWx0DQpcY2xicmRydFxicmRydGJsIFxjbGJyZHJsXGJyZHJ0YmwgXGNsYnJkcmJcYnJkcnRibCBcY2xicmRyclxicmRydGJsIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDQ3NzBcY2xzaGRyYXduaWwgXGNlbGx4NDY4MFxjbHZlcnRhbHRcY2xicmRydFxicmRydGJsIFxjbGJyZHJsXGJyZHJ0YmwgXGNsYnJkcmJcYnJkcnRibCBcY2xicmRyclxicmRydGJsIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDQ3ODhcY2xzaGRyYXduaWwgDQpcY2VsbHg5NDY4XHBhcmRccGxhaW4gXGx0cnBhclxzMjRccWwgXGxpMFxyaTBcd2lkY3RscGFyXGludGJsXHRxY1x0eDQzMjBcdHFyXHR4ODY0MFx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4wXHBhcmFyc2lkNDQ3NDI1NFx5dHM1MyBccnRsY2hcZmNzMSBcYWYzN1xhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWY0NFxoaWNoXGFmNDRcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwXGFmczI2IFxsdHJjaFxmY3MwIFxmMFxmczI2XGluc3JzaWQzNDI5OTA0XGNoYXJyc2lkOTcyNDIzMyBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgRkVSQyBJQ0EgT0lMIFRBUklGRlxjZWxsIH1ccGFyZCBcbHRycGFyDQpcczI0XHFyIFxsaTBccmkwXHdpZGN0bHBhclxpbnRibFx0cWNcdHg0MzIwXHRxclx0eDg2NDBcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMFxwYXJhcnNpZDEzMjU1NjFceXRzNTMge1xydGxjaFxmY3MxIFxhZjBcYWZzMjYgXGx0cmNoXGZjczAgXGYwXGZzMjZcaW5zcnNpZDYxNzE5NTAgXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIEYuRS5SLkMuIE5vLiAyLjEuMA0KXHBhciBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgKENhbmNlbHMgfXtccnRsY2hcZmNzMSBcYWYwXGFmczI2IFxsdHJjaFxmY3MwIFxmMFxmczI2XGluc3JzaWQzNDI5OTA0XGNoYXJyc2lkOTcyNDIzMyBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgRi5FLlIuQy4gTm8uIDIuMH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNiBcbHRyY2hcZmNzMCBcZjBcZnMyNlxpbnNyc2lkMTMyNTU2MSANClxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCAuMX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNiBcbHRyY2hcZmNzMCBcZjBcZnMyNlxpbnNyc2lkNjE3MTk1MCBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgKX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNiBcbHRyY2hcZmNzMCBcZjBcZnMyNlxpbnNyc2lkMzQyOTkwNFxjaGFycnNpZDk3MjQyMzMgXGNlbGwgfVxwYXJkXHBsYWluIFxsdHJwYXINClxxbCBcbGkwXHJpMFxzYTE2MFxzbDI1OVxzbG11bHQxXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMCBccnRsY2hcZmNzMSBcYWYzN1xhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGFmMzdcaGljaFxhZjM3XGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYzNyBcbHRyY2hcZmNzMCBcaW5zcnNpZDM0Mjk5MDQgXHRyb3dkIFxpcm93MFxpcm93YmFuZDBcbGFzdHJvdyBcbHRycm93DQpcdHM1M1x0c3Jvd2RcdHJnYXBoMTA4XHRyZnRzV2lkdGgxXHRyZnRzV2lkdGhCM1x0cmF1dG9maXQxXHRycGFkZGwxMDhcdHJwYWRkcjEwOFx0cnBhZGRmbDNcdHJwYWRkZnQzXHRycGFkZGZiM1x0cnBhZGRmcjNcdGJscnNpZDQ0NzQyNTRcdGJsbGtoZHJyb3dzXHRibGxraGRyY29sc1x0Ymxsa25vY29sYmFuZFx0YmxpbmQxOFx0YmxpbmR0eXBlMyBcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcnRibCBcY2xicmRybFxicmRydGJsIFxjbGJyZHJiDQpcYnJkcnRibCBcY2xicmRyclxicmRydGJsIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDQ3NzBcY2xzaGRyYXduaWwgXGNlbGx4NDY4MFxjbHZlcnRhbHRcY2xicmRydFxicmRydGJsIFxjbGJyZHJsXGJyZHJ0YmwgXGNsYnJkcmJcYnJkcnRibCBcY2xicmRyclxicmRydGJsIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDQ3ODhcY2xzaGRyYXduaWwgXGNlbGx4OTQ2OFxyb3cgfVxwYXJkXHBsYWluIFxsdHJwYXINClxzMjRccWwgXGxpMFxyaTBcd2lkY3RscGFyXHRxY1x0eDQzMjBcdHFyXHR4ODY0MFx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkNDQ3NDI1NCBccnRsY2hcZmNzMSBcYWYzN1xhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGFmNDRcaGljaFxhZjQ0XGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwXGFmczI2IFxsdHJjaFxmY3MwIFxiXGlcZjBcZnMyNlxpbnNyc2lkMzQyOTkwNCANClxwYXIgfX17XCpccG5zZWNsdmwxXHBudWNybVxwbnN0YXJ0MVxwbmluZGVudDcyMFxwbmhhbmcge1xwbnR4dGEgLn19e1wqXHBuc2VjbHZsMlxwbnVjbHRyXHBuc3RhcnQxXHBuaW5kZW50NzIwXHBuaGFuZyB7XHBudHh0YSAufX17XCpccG5zZWNsdmwzXHBuZGVjXHBuc3RhcnQxXHBuaW5kZW50NzIwXHBuaGFuZyB7XHBudHh0YSAufX17XCpccG5zZWNsdmw0XHBubGNsdHJccG5zdGFydDFccG5pbmRlbnQ3MjBccG5oYW5nIHtccG50eHRhICl9fQ0Ke1wqXHBuc2VjbHZsNVxwbmRlY1xwbnN0YXJ0MVxwbmluZGVudDcyMFxwbmhhbmcge1xwbnR4dGIgKH17XHBudHh0YSApfX17XCpccG5zZWNsdmw2XHBubGNsdHJccG5zdGFydDFccG5pbmRlbnQ3MjBccG5oYW5nIHtccG50eHRiICh9e1xwbnR4dGEgKX19e1wqXHBuc2VjbHZsN1xwbmxjcm1ccG5zdGFydDFccG5pbmRlbnQ3MjBccG5oYW5nIHtccG50eHRiICh9e1xwbnR4dGEgKX19e1wqXHBuc2VjbHZsOA0KXHBubGNsdHJccG5zdGFydDFccG5pbmRlbnQ3MjBccG5oYW5nIHtccG50eHRiICh9e1xwbnR4dGEgKX19e1wqXHBuc2VjbHZsOVxwbmxjcm1ccG5zdGFydDFccG5pbmRlbnQ3MjBccG5oYW5nIHtccG50eHRiICh9e1xwbnR4dGEgKX19XHBhcmRccGxhaW4gXGx0cnBhclxzMVxxciBcbGkwXHJpMFxrZWVwXGtlZXBuXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9cb3V0bGluZWxldmVsMFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgDQpcYWYzN1xhZnMyOFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMyOFxjZjE5XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxhZjQzXGhpY2hcYWY0M1xkYmNoXGFmMzE1MDVcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGYwXGZzMjRcY2YwXGluc3JzaWQxNDY4MjA0MCB7XCpcYmtta3N0YXJ0IF9EVl9NMH1caGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgICB9ew0KXHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcZjBcZnMyNFxjZjBcaW5zcnNpZDc1NjMxNTggDQpccGFyIH1ccGFyZCBcbHRycGFyXHMxXHFjIFxsaTBccmkwXGtlZXBca2VlcG5cd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xvdXRsaW5lbGV2ZWwwXHJpbjBcbGluMFxpdGFwMCB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcYjBcZjBcZnMyNFxjZjBcaW5zcnNpZDc1NjMxNTgge1wqXGJrbWtzdGFydCBfRFZfTTF9e1wqXGJrbWtlbmQgX0RWX00xfQ0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxxYyBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYzN1xhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGFmMzdcaGljaFxhZjM3XGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMFxhZnM0MCBcbHRyY2hcZmNzMCANClxiXGYwXGZzNDBcaW5zcnNpZDE0ODEyODczXGNoYXJyc2lkMTAzNzc0NTQge1wqXGJrbWtzdGFydCBfRFZfTTJ9e1wqXGJrbWtlbmQgX0RWX00yfVxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCBbTl0gfXtccnRsY2hcZmNzMSBcYWYwXGFmczQwIFxsdHJjaFxmY3MwIFxiXGYwXGZzNDBcdWxcaW5zcnNpZDE0ODEyODczXGNoYXJyc2lkMTAzNzc0NTQgXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIENBTkNFTExBVElPTiBOT1RJQ0UNCg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjBcYWZzNTIgXGx0cmNoXGZjczAgXGYwXGZzNTJcaW5zcnNpZDk1OTMxMzBcY2hhcnJzaWQ5NTkzMTMwIFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCBXYXNoaW5ndG9uIENyb3NzaW5nIEZpZWxkIFNlcnZpY2VzLCBMTEMgfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxmMFxmczI0XGluc3JzaWQ3NTYzMTU4IA0KXHBhciANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczI0XHFjIFxsaTBccmkwXG5vd2lkY3RscGFyXHRxY1x0eDQzMjBcdHg4NjMwXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxMDY4Mzg0MiBccnRsY2hcZmNzMSBcYWYzN1xhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGFmNDRcaGljaFxhZjQ0XGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYzN1xhZnMzNiBcbHRyY2hcZmNzMCBcYlxmMFxmczM2XGluc3JzaWQxNTA3MzgyNiB7XCpcYmtta3N0YXJ0IF9EVl9NM317XCpcYmtta2VuZCBfRFZfTTN9XGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIFtDXSB9e1xydGxjaFxmY3MxIFxhZjM3XGFmczM2IFxsdHJjaFxmY3MwIFxzdHJpa2VcZjBcZnMzNlxpbnNyc2lkMTA2ODM4NDJcY2hhcnJzaWQxNTA3MzgyNiANClxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCBDb250YWluaW5nIHRoZSBMb2NhbCBSYXRlcyBBcHBsaWNhYmxlIHRvIHRoZQ0KXHBhciB9XHBhcmQgXGx0cnBhclxzMjRccWMgXGxpMFxyaTBcbm93aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDEwNjgzODQyIHtccnRsY2hcZmNzMSBcYWYzN1xhZnMzNiBcbHRyY2hcZmNzMCBcc3RyaWtlXGYwXGZzMzZcaW5zcnNpZDEwNjgzODQyXGNoYXJyc2lkMTUwNzM4MjYgXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIEludGVyc3RhdGUgVHJhbnNwb3J0YXRpb24gYnkgfXtccnRsY2hcZmNzMSANClxhZjM3XGFmczM2IFxsdHJjaFxmY3MwIFxzdHJpa2VcZjBcZnMzNlxpbnNyc2lkOTU5MzEzMFxjaGFycnNpZDE1MDczODI2IFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCBUcm9waHkgfXtccnRsY2hcZmNzMSBcYWYzN1xhZnMzNiBcbHRyY2hcZmNzMCBcc3RyaWtlXGYwXGZzMzZcaW5zcnNpZDEwNjgzODQyXGNoYXJyc2lkMTUwNzM4MjYgXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIFBpcGVsaW5lIG9mDQpccGFyIH1ccGFyZCBcbHRycGFyXHMyNFxxYyBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMFxpdGFwMCB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcc3RyaWtlXGYwXGluc3JzaWQ3NTYzMTU4XGNoYXJyc2lkMTUwNzM4MjYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMzNiBcbHRyY2hcZmNzMCBcc3RyaWtlXGYwXGZzMzZcaW5zcnNpZDE0NjgyMDQwXGNoYXJyc2lkMTUwNzM4MjYge1wqXGJrbWtzdGFydCBfRFZfTTV9e1wqXGJrbWtlbmQgX0RWX001fVxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCBDUlVERSBQRVRST0xFVU0gfXtccnRsY2hcZmNzMSBcYWYwXGFmczM2IFxsdHJjaFxmY3MwIA0KXHN0cmlrZVxmMFxmczM2XGluc3JzaWQ3NTYzMTU4XGNoYXJyc2lkMTUwNzM4MjYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcZjBcaW5zcnNpZDc1NjMxNTggDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM2MFxxaiBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYwXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNzU2MzE1OCANClxwYXIgfVxwYXJkIFxsdHJwYXJcczYwXHFqIFxsaTBccmkwXHdpZGN0bHBhclxicmRydFxicmRyc1xicmRydzEwXGJyc3AyMCBcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMFxpdGFwMCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxleHBuZDBcZXhwbmR0dy0yXGluc3JzaWQ3NTYzMTU4IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTlccWogXGxpMFxyaTBcbm93aWRjdGxwYXJcYnJkcmJcYnJkcnNcYnJkcncxMFxicnNwMjAgXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxMDY4Mzg0MiBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxhZjFcaGljaFxhZjFcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxzdHJpa2VcZjBcZXhwbmQwXGV4cG5kdHctMlxpbnNyc2lkMTA2ODM4NDJcY2hhcnJzaWQxNTA3MzgyNiB7XCpcYmtta3N0YXJ0IF9EVl9NNn17XCpcYmtta2VuZCBfRFZfTTZ9XGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIA0KUmF0ZXMgaGVyZWluIGFyZSBnb3Zlcm5lZCBieSBSdWxlcyBhbmQgUmVndWxhdGlvbnMgcHJvdmlkZWQgaW4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxzdHJpa2VcZjBcZXhwbmQwXGV4cG5kdHctMlxpbnNyc2lkOTU5MzEzMFxjaGFycnNpZDE1MDczODI2IFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCBXYXNoaW5ndG9uIENyb3NzaW5nIEZpZWxkIFNlcnZpY2VzLCBMTENcaGljaFxmMCBccnF1b3RlIFxsb2NoXGYwIHMgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHN0cmlrZVxmMFxleHBuZDBcZXhwbmR0dy0yXGluc3JzaWQxMDY4Mzg0MlxjaGFycnNpZDE1MDczODI2IFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCBGLkUuUi5DLiBOby4gMS4wLjAgYW5kIHJlaXNzdWVzIHRoZXJlb2YuDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1OVxxaiBcbGkwXHJpMFx3aWRjdGxwYXJcYnJkcmJcYnJkcnNcYnJkcncxMFxicnNwMjAgXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjBcaXRhcDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGYwXGluc3JzaWQ3NTYzMTU4IA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTlccWogXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjBcaXRhcDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGYwXGluc3JzaWQ3NTYzMTU4IA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTlccWogXGxpMFxyaTBcd2lkY3RscGFyXGJyZHJiXGJyZHJzXGJyZHJ3MTBcYnJzcDIwIFx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4wXGl0YXAwIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmMFxpbnNyc2lkMTQ2ODIwNDBcY2hhcnJzaWQxMTU1OTczNSB7XCpcYmtta3N0YXJ0IF9EVl9NN317XCpcYmtta2VuZCBfRFZfTTd9XGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIA0KVGhlIG1hdHRlciBwdWJsaXNoZWQgaGVyZWluIHdpbGwgaGF2ZSBubyBhZHZlcnNlIGVmZmVjdCBvbiB0aGUgcXVhbGl0eSBvZiB0aGUgaHVtYW4gZW52aXJvbm1lbnQufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmMFxpbnNyc2lkNzU2MzE1OFxjaGFycnNpZDExNTU5NzM1IA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTlccWogXGxpMFxyaTBcd2lkY3RscGFyXGJyZHJiXGJyZHJzXGJyZHJ3MTBcYnJzcDIwIFx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTA2ODM4NDIge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGYwXGluc3JzaWQxMDY4Mzg0MiANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU5XHFqIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTA2ODM4NDIge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGYwXGluc3JzaWQxMDY4Mzg0MiANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczYwXHFqIFxsaTBccmkwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxMzE5NzQ4MCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYwXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTA2ODM4NDIgXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIEZpbGVkIGluIFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCBhY2NvcmRhbmNlIHdpdGggMTggQy5GLlIuIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTMxOTc0ODAgXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIFtXXSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDEzMTk3NDgwXGNoYXJyc2lkMTMxOTc0ODAgXGxvY2hcYWYwXGRiY2hcYWYzMTUwNVxoaWNoXGYwIFwnYTdcbG9jaFxmMCAgMzQxLjUgKENhbmNlbGxhdGlvbiBvZiBUYXJpZmZzKS59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ3Njc0NDk1IFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkNzY3NDQ5NVxjaGFycnNpZDc2NzQ0OTUgXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIEVmZmVjdGl2ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxMzI0OTA3MyBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgQXByaWwgMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDc2NzQ0OTVcY2hhcnJzaWQ3Njc0NDk1IA0KXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwICwgMjAyMSwgdGhlIGFzc2V0cyBvZiBXYXNoaW5ndG9uIENyb3NzaW5nIEZpZWxkIFNlcnZpY2VzLCBMTEMgYmVjYW1lIHRoZSBhc3NldHMgb2YgVHJvcGh5IFBpcGVsaW5lLCBMTEMuIFJlZmVyIHRvIFRyb3BoeSBQaXBlbGluZSwgTExDXGhpY2hcZjAgXHJxdW90ZSBcbG9jaFxmMCBzIEYuRS5SLkMuIE5vLiAyLjAuMCBmb3IgXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIA0KZnVydGhlciByYXRlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDc2NzQ0OTUgXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwICBhbmQgcm91dGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDc2NzQ0OTVcY2hhcnJzaWQ3Njc0NDk1IC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDEzMTk3NDgwIFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCAgDQp9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHN0cmlrZVxpbnNyc2lkMTMxOTc0ODBcY2hhcnJzaWQxMzE5NzQ4MCBcbG9jaFxhZjBcZGJjaFxhZjMxNTA1XGhpY2hcZjAgXCdhN317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcc3RyaWtlXGluc3JzaWQxMDY4Mzg0MlxjaGFycnNpZDEzMTk3NDgwIFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCAzNDIuMih9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcc3RyaWtlXGluc3JzaWQ5NzI0MjMzXGNoYXJyc2lkMTMxOTc0ODAgXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHN0cmlrZVxpbnNyc2lkMTA2ODM4NDJcY2hhcnJzaWQxMzE5NzQ4MCBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgKSBcaGljaFxmMCBcZW5kYXNoIFxsb2NoXGYwICBFc3RhYmxpc2hpbmcgaW5pdGlhbCByYXRlcy59e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDEwNjgzODQyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxxaiBcbGkwXHJpMFx3aWRjdGxwYXJcYnJkcmJcYnJkcnNcYnJkcncxMFxicnNwMjAgXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxMzI1NTYxIFxydGxjaFxmY3MxIFxhZjM3XGFmczIyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxhZjM3XGhpY2hcYWYzN1xkYmNoXGFmMzE1MDVcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGYwXGZzMjRcZXhwbmQwXGV4cG5kdHctMlxsYW5nMTI3XGxhbmdmZTEwMzNcbGFuZ25wMTI3XGluc3JzaWQxMzI1NTYxXGNoYXJyc2lkMTMyNTU2MSANClxwYXIgfVxwYXJkIFxsdHJwYXJccWogXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxMzI1NTYxIHtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxmMFxmczI0XGxhbmcxMjdcbGFuZ2ZlMTAzM1xsYW5nbnAxMjdcaW5zcnNpZDEzMjU1NjFcY2hhcnJzaWQxMzI1NTYxIA0KXHBhciB9XHBhcmQgXGx0cnBhclxxaiBcbGkwXHJpMFx3aWRjdGxwYXJcdHFjXHR4NDY4MFx0eDgxMDBcdHg4NjQwXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxMzI1NTYxIHtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxmMFxmczI0XGluc3JzaWQxMzI1NTYxXGNoYXJyc2lkMTQ4Mzg2MjMgXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIFNwZWNpYWwgUGVybWlzc2lvbn17XHJ0bGNoXGZjczEgDQpcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxmMFxmczI0XGluc3JzaWQxMjYwMTkyMyBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcYlxmMFxmczI0XGluc3JzaWQxMjYwMTkyMyBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgW05dfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxmMFxmczI0XGluc3JzaWQxMjYwMTkyMyANClxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxmMFxmczI0XHVsXGluc3JzaWQxMjYwMTkyMyBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgUmVxdWVzdGVkfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxmMFxmczI0XGluc3JzaWQxMzI1NTYxXGNoYXJyc2lkMTQ4Mzg2MjMgXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIA0KLiAgSXNzdWVkIG9ufXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxmMFxmczI0XGluc3JzaWQxMjYwMTkyMyBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcYlxmMFxmczI0XGluc3JzaWQxMjYwMTkyMyBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgW1ddfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIA0KXGYwXGZzMjRcaW5zcnNpZDEzMjU1NjFcY2hhcnJzaWQxNDgzODYyMyBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcZjBcZnMyNFx1bFxpbnNyc2lkMzk5MTE5IFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCAxfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxmMFxmczI0XHVsXGluc3JzaWQxMDQzNjk5MSANClxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCAzfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxmMFxmczI0XHVsXGluc3JzaWQxMjYwMTkyMyBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcc3RyaWtlXGYwXGZzMjRcaW5zcnNpZDEzMjU1NjFcY2hhcnJzaWQxMjYwMTkyMyBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgDQpsZXNzIHRoYW4gdGhpcnR5fXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxmMFxmczI0XGluc3JzaWQxMzI1NTYxXGNoYXJyc2lkMTQ4Mzg2MjMgXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwICBkYXlzXGhpY2hcZjAgXHJxdW90ZSBcbG9jaFxmMCBcaGljaFxmMCAgbm90aWNlIHVuZGVyIGF1dGhvcml0eSBvZiAxOCBDLkYuUiBcJ2E3XGxvY2hcZjAgDQogMzQxLjE0IChTcGVjaWFsIFBlcm1pc3Npb24pLiAgVGhpcyB0YXJpZmYgcHVibGljYXRpb24gaXMgY29uZGl0aW9uYWxseSBhY2NlcHRlZCBzdWJqZWN0IHRvIHJlZnVuZCBwZW5kaW5nIGEgMzAtZGF5IHJldmlldyBwZXJpb2QufXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxmMFxmczI0XGxhbmcxMjdcbGFuZ2ZlMTAzM1xsYW5nbnAxMjdcaW5zcnNpZDEzMjU1NjFcY2hhcnJzaWQxNDgzODYyMyANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU5XHFqIFxsaTBccmkwXHdpZGN0bHBhclxicmRyYlxicmRyc1xicmRydzEwXGJyc3AyMCBcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDEzMjU1NjEgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYxXGhpY2hcYWYxXGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZjBcZXhwbmQwXGV4cG5kdHctMlxpbnNyc2lkMTMyNTU2MSANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU5XHFqIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTMyNTU2MSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZjBcaW5zcnNpZDEzMjU1NjEgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1OFxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcdHFjXHR4NDY4MFx0eDgxMDBcdHg4NjQwXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGFmMVxoaWNoXGFmMVxkYmNoXGFmMzE1MDVcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcZjBcaW5zcnNpZDk3MjQyMzMge1wqXGJrbWtzdGFydCBfRFZfTTh9e1wqXGJrbWtlbmQgX0RWX004fVxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCBJU1NVRUQ6IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZjBcaW5zcnNpZDE1MDczODI2IFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCBNYXJjaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGYwXGluc3JzaWQzOTkxMTkgDQpcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZjBcaW5zcnNpZDEwNDM2OTkxIFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCA4fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmMFxpbnNyc2lkOTcyNDIzMyBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgLCAyMH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZjBcaW5zcnNpZDE1MDczODI2IA0KXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIDJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGYwXGluc3JzaWQ5NzI0MjMzIFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCAxfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmMFxpbnNyc2lkMTQ2ODIwNDAgXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGYwXGluc3JzaWQ5NzI0MjMzIFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZjBcaW5zcnNpZDE1MDczODI2IFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCAgICAgICBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgICAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmMFxpbnNyc2lkOTcyNDIzMyANClxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCAgICAgRUZGRUNUSVZFOiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGYwXGluc3JzaWQxMzI0OTA3MyBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgQXByaWwgMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZjBcaW5zcnNpZDk3MjQyMzMgXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwICwgMjB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZjBcaW5zcnNpZDE1MDczODI2IFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCAyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmMFxpbnNyc2lkOTcyNDIzMyBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZjBcaW5zcnNpZDc1NjMxNTggDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1OFxxaiBcbGkwXHJpMFxzYTEyMFx3aWRjdGxwYXJcYnJkcmJcYnJkcnNcYnJkcncxMFxicnNwMjAgXHRxY1x0eDQ2ODBcdHg5MzUwXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjBcaXRhcDAge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGYwXGluc3JzaWQ3NTYzMTU4IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMjRccWMgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMzdcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxhZjQ0XGhpY2hcYWY0NFxkYmNoXGFmMzE1MDVcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgDQpcZjBcaW5zcnNpZDc1NjMxNTggDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFjIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjM3XGFmczIyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYzN1xoaWNoXGFmMzdcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIA0KXGJcZjBcZnMyNFxjaGFyc2NhbGV4MTA5XGluc3JzaWQxNDY4MjA0MCB7XCpcYmtta3N0YXJ0IF9EVl9NOX17XCpcYmtta2VuZCBfRFZfTTl9XGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIElzc3VlZCBhbmQgQ29tcGlsZWQgYnk6fXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxiXGYwXGZzMjRcY2hhcnNjYWxleDEwOVxpbnNyc2lkNzU2MzE1OCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxiXGYwXGZzMjRcY2hhcnNjYWxleDEwOVxpbnNyc2lkOTcyNDIzMyANClxwYXIgfVxwYXJkIFxsdHJwYXJccWMgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ4Mjc2NjI2IHtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxmMFxmczI0XGluc3JzaWQ4Mjc2NjI2XGNoYXJyc2lkMTUzMDIxNTAgXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIEZsb3lkIEhhbW1vbmQNClxwYXIgXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIFdhc2hpbmd0b24gQ3Jvc3NpbmcgRmllbGQgU2VydmljZXMsIExMQw0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGJcZjBcZnMyNFxpbnNyc2lkODI3NjYyNiBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgW1ddIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcZjBcZnMyNFx1bFxpbnNyc2lkODI3NjYyNlxjaGFycnNpZDc2ODYyOTEgXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIDI5MDEgVmlhIEZvcnR1bmF9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgDQpcbHRyY2hcZmNzMCBcc3RyaWtlXGYwXGZzMjRcaW5zcnNpZDgyNzY2MjZcY2hhcnJzaWQ3Njg2MjkxIFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCA1NzA3IFNvdXRod2VzdCBQYXJrd2F5fXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxmMFxmczI0XGluc3JzaWQ4Mjc2NjI2XGNoYXJyc2lkMTUzMDIxNTAgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcYlxmMFxmczI0XGluc3JzaWQ4Mjc2NjI2IFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCBbV119e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGYwXGZzMjRcaW5zcnNpZDgyNzY2MjYgXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgDQpcc3RyaWtlXGYwXGZzMjRcaW5zcnNpZDgyNzY2MjZcY2hhcnJzaWQ3Njg2MjkxIFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCBCdWlsZGluZyAxLH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcZjBcZnMyNFxpbnNyc2lkODI3NjYyNlxjaGFycnNpZDE1MzAyMTUwIFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCAgU3VpdGUgfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIA0KXGYwXGZzMjRcdWxcaW5zcnNpZDgyNzY2MjZcY2hhcnJzaWQ3Njg2MjkxIFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCA2MDB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXHN0cmlrZVxmMFxmczI0XGluc3JzaWQ4Mjc2NjI2XGNoYXJyc2lkNzY4NjI5MSBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgMjc1fXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIA0KXGYwXGZzMjRcaW5zcnNpZDgyNzY2MjZcY2hhcnJzaWQxNTMwMjE1MCANClxwYXIgXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIEF1c3RpbiwgVFggfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxiXGYwXGZzMjRcaW5zcnNpZDgyNzY2MjYgXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIFtXXX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcZjBcZnMyNFxpbnNyc2lkODI3NjYyNiBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgDQpcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxmMFxmczI0XHVsXGluc3JzaWQ4Mjc2NjI2XGNoYXJyc2lkNzY4NjI5MSBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgNzg3NDZ9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXHN0cmlrZVxmMFxmczI0XGluc3JzaWQ4Mjc2NjI2XGNoYXJyc2lkNzY4NjI5MSBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgNzg3MzV9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgDQpcbHRyY2hcZmNzMCBcZjBcZnMyNFxpbnNyc2lkODI3NjYyNlxjaGFycnNpZDE1MzAyMTUwIFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCAgDQpccGFyIFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCBUZWxlcGhvbmU6ICg3MzcpIDMwMC00NzAwfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxmMFxmczI0XGNoYXJzY2FsZXgwXGluc3JzaWQ3OTI2MTggDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkNzkyNjE4IHtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxiXGYwXGZzMjRcY2hhcnNjYWxleDBcaW5zcnNpZDc5MjYxOCBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgW0NdfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIA0KXGJcZjBcZnMyNFxjaGFyc2NhbGV4MFxpbnNyc2lkMTA2ODM4NDIgDQpccGFyIFxsdHJyb3d9XHRyb3dkIFxpcm93MFxpcm93YmFuZDBcbHRycm93XHRzNTNcdHJnYXBoMTA4XHRybGVmdC0xMDhcdHJicmRydFxicmRyc1xicmRydzEwIFx0cmJyZHJsXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmJcYnJkcnNcYnJkcncxMCBcdHJicmRyclxicmRyc1xicmRydzEwIFx0cmJyZHJoXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnZcYnJkcnNcYnJkcncxMCANClx0cmZ0c1dpZHRoMVx0cmZ0c1dpZHRoQjNcdHJhdXRvZml0MVx0cnBhZGRsMTA4XHRycGFkZHIxMDhcdHJwYWRkZmwzXHRycGFkZGZ0M1x0cnBhZGRmYjNcdHJwYWRkZnIzXHRibHJzaWQzNDI5OTA0XHRibGxraGRycm93c1x0Ymxsa2hkcmNvbHNcdGJsbGtub2NvbGJhbmRcdGJsaW5kMFx0YmxpbmR0eXBlMyBcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcnNcYnJkcncxMCBcY2xicmRybFxicmRyc1xicmRydzEwIFxjbGJyZHJiXGJyZHJzXGJyZHJ3MTAgDQpcY2xicmRyclxicmRyc1xicmRydzEwIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDk1NzZcY2xzaGRyYXduaWwgXGNlbGx4OTQ2OFxwYXJkXHBsYWluIFxsdHJwYXJccWMgXGxpMFxyaTBcbm93aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMFxwYXJhcnNpZDIwNDQ5NVx5dHM1MyBccnRsY2hcZmNzMSBcYWYzN1xhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYzN1xoaWNoXGFmMzdcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxiXHN0cmlrZVxmMFxmczI0XGluc3JzaWQyMDQ0OTVcY2hhcnJzaWQ3OTI2MTggXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIENPTU1JVFRFRCBTSElQUEVSIFJBVEVTIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCANClxsdHJjaFxmY3MwIFxzdHJpa2VcZjBcZnMyNFxpbnNyc2lkMjA0NDk1XGNoYXJyc2lkNzkyNjE4IFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCAoMSkgKDIpfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxzdHJpa2VcZjBcZnMyNFxpbnNyc2lkMTI2MDEwODNcY2hhcnJzaWQ3OTI2MTggXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwICAoNSl9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgDQpcc3RyaWtlXGYwXGZzMjRcaW5zcnNpZDIwNDQ5NVxjaGFycnNpZDc5MjYxOCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxiXHN0cmlrZVxmMFxmczI0XGluc3JzaWQyMDQ0OTVcY2hhcnJzaWQ3OTI2MTggXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIFJhdGVzIGluIENlbnRzIFBlciBCYXJyZWwgb2YgNDIgVS5TLiBHYWxsb25zXGNlbGwgfVxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMFxyaTBcc2ExNjBcc2wyNTlcc2xtdWx0MQ0KXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMCBccnRsY2hcZmNzMSBcYWYzN1xhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGFmMzdcaGljaFxhZjM3XGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMzcgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDIwNDQ5NVxjaGFycnNpZDc5MjYxOCBcdHJvd2QgXGlyb3cwXGlyb3diYW5kMFxsdHJyb3dcdHM1M1x0cmdhcGgxMDhcdHJsZWZ0LTEwOFx0cmJyZHJ0XGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmxcYnJkcnNcYnJkcncxMCBcdHJicmRyYlxicmRyc1xicmRydzEwIFx0cmJyZHJyXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmhcYnJkcnNcYnJkcncxMCBcdHJicmRydlxicmRyc1xicmRydzEwIA0KXHRyZnRzV2lkdGgxXHRyZnRzV2lkdGhCM1x0cmF1dG9maXQxXHRycGFkZGwxMDhcdHJwYWRkcjEwOFx0cnBhZGRmbDNcdHJwYWRkZnQzXHRycGFkZGZiM1x0cnBhZGRmcjNcdGJscnNpZDM0Mjk5MDRcdGJsbGtoZHJyb3dzXHRibGxraGRyY29sc1x0Ymxsa25vY29sYmFuZFx0YmxpbmQwXHRibGluZHR5cGUzIFxjbHZlcnRhbHRcY2xicmRydFxicmRyc1xicmRydzEwIFxjbGJyZHJsXGJyZHJzXGJyZHJ3MTAgXGNsYnJkcmJcYnJkcnNcYnJkcncxMCANClxjbGJyZHJyXGJyZHJzXGJyZHJ3MTAgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoOTU3NlxjbHNoZHJhd25pbCBcY2VsbHg5NDY4XHJvdyBcbHRycm93fVx0cm93ZCBcaXJvdzFcaXJvd2JhbmQxXGx0cnJvd1x0czUzXHRyZ2FwaDEwOFx0cmxlZnQtMTA4XHRyYnJkcnRcYnJkcnNcYnJkcncxMCBcdHJicmRybFxicmRyc1xicmRydzEwIFx0cmJyZHJiXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnJcYnJkcnNcYnJkcncxMCBcdHJicmRyaA0KXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnZcYnJkcnNcYnJkcncxMCBcdHJmdHNXaWR0aDFcdHJmdHNXaWR0aEIzXHRyYXV0b2ZpdDFcdHJwYWRkbDEwOFx0cnBhZGRyMTA4XHRycGFkZGZsM1x0cnBhZGRmdDNcdHJwYWRkZmIzXHRycGFkZGZyM1x0Ymxyc2lkMzQyOTkwNFx0Ymxsa2hkcnJvd3NcdGJsbGtoZHJjb2xzXHRibGxrbm9jb2xiYW5kXHRibGluZDBcdGJsaW5kdHlwZTMgXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJzXGJyZHJ3MTAgXGNsYnJkcmwNClxicmRyc1xicmRydzEwIFxjbGJyZHJiXGJyZHJzXGJyZHJ3MTAgXGNsYnJkcnJcYnJkcnNcYnJkcncxMCBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgyMzk0XGNsc2hkcmF3bmlsIFxjZWxseDIyODZcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcnNcYnJkcncxMCBcY2xicmRybFxicmRyc1xicmRydzEwIFxjbGJyZHJiXGJyZHJzXGJyZHJ3MTAgXGNsYnJkcnJcYnJkcnNcYnJkcncxMCANClxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDIzOTRcY2xzaGRyYXduaWwgXGNlbGx4NDY4MFxjbHZlcnRhbHRcY2xicmRydFxicmRyc1xicmRydzEwIFxjbGJyZHJsXGJyZHJzXGJyZHJ3MTAgXGNsYnJkcmJcYnJkcnNcYnJkcncxMCBcY2xicmRyclxicmRyc1xicmRydzEwIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDI3MDBcY2xzaGRyYXduaWwgXGNlbGx4NzM4MFxjbHZlcnRhbHRcY2xicmRydFxicmRyc1xicmRydzEwIA0KXGNsYnJkcmxcYnJkcnNcYnJkcncxMCBcY2xicmRyYlxicmRyc1xicmRydzEwIFxjbGJyZHJyXGJyZHJzXGJyZHJ3MTAgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMjA4OFxjbHNoZHJhd25pbCBcY2VsbHg5NDY4XHBhcmRccGxhaW4gXGx0cnBhclxxYyBcbGkwXHJpMFxzYTIwMFxzbDI3NlxzbG11bHQxXG5vd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjBccGFyYXJzaWQzNDI5OTA0XHl0czUzIA0KXHJ0bGNoXGZjczEgXGFmMzdcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxhZjM3XGhpY2hcYWYzN1xkYmNoXGFmMzE1MDVcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGJcc3RyaWtlXGYwXGZzMjRcaW5zcnNpZDIwNDQ5NVxjaGFycnNpZDc5MjYxOCBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgRnJvbQ0KXGNlbGwgXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIFRvXGNlbGwgXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIEFjcmVhZ2UgRGVkaWNhdGlvblxjZWxsIFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCBSYXRlXGNlbGwgfVxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMFxyaTBcc2ExNjBcc2wyNTlcc2xtdWx0MQ0KXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMCBccnRsY2hcZmNzMSBcYWYzN1xhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGFmMzdcaGljaFxhZjM3XGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMzcgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDIwNDQ5NVxjaGFycnNpZDc5MjYxOCBcdHJvd2QgXGlyb3cxXGlyb3diYW5kMVxsdHJyb3dcdHM1M1x0cmdhcGgxMDhcdHJsZWZ0LTEwOFx0cmJyZHJ0XGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmxcYnJkcnNcYnJkcncxMCBcdHJicmRyYlxicmRyc1xicmRydzEwIFx0cmJyZHJyXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmhcYnJkcnNcYnJkcncxMCBcdHJicmRydlxicmRyc1xicmRydzEwIA0KXHRyZnRzV2lkdGgxXHRyZnRzV2lkdGhCM1x0cmF1dG9maXQxXHRycGFkZGwxMDhcdHJwYWRkcjEwOFx0cnBhZGRmbDNcdHJwYWRkZnQzXHRycGFkZGZiM1x0cnBhZGRmcjNcdGJscnNpZDM0Mjk5MDRcdGJsbGtoZHJyb3dzXHRibGxraGRyY29sc1x0Ymxsa25vY29sYmFuZFx0YmxpbmQwXHRibGluZHR5cGUzIFxjbHZlcnRhbHRcY2xicmRydFxicmRyc1xicmRydzEwIFxjbGJyZHJsXGJyZHJzXGJyZHJ3MTAgXGNsYnJkcmJcYnJkcnNcYnJkcncxMCANClxjbGJyZHJyXGJyZHJzXGJyZHJ3MTAgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMjM5NFxjbHNoZHJhd25pbCBcY2VsbHgyMjg2XGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJzXGJyZHJ3MTAgXGNsYnJkcmxcYnJkcnNcYnJkcncxMCBcY2xicmRyYlxicmRyc1xicmRydzEwIFxjbGJyZHJyXGJyZHJzXGJyZHJ3MTAgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMjM5NFxjbHNoZHJhd25pbCBcY2VsbHg0NjgwXGNsdmVydGFsdA0KXGNsYnJkcnRcYnJkcnNcYnJkcncxMCBcY2xicmRybFxicmRyc1xicmRydzEwIFxjbGJyZHJiXGJyZHJzXGJyZHJ3MTAgXGNsYnJkcnJcYnJkcnNcYnJkcncxMCBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgyNzAwXGNsc2hkcmF3bmlsIFxjZWxseDczODBcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcnNcYnJkcncxMCBcY2xicmRybFxicmRyc1xicmRydzEwIFxjbGJyZHJiXGJyZHJzXGJyZHJ3MTAgXGNsYnJkcnJcYnJkcnNcYnJkcncxMCANClxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDIwODhcY2xzaGRyYXduaWwgXGNlbGx4OTQ2OFxyb3cgXGx0cnJvd31cdHJvd2QgXGlyb3cyXGlyb3diYW5kMlxsdHJyb3dcdHM1M1x0cmdhcGgxMDhcdHJsZWZ0LTEwOFx0cmJyZHJ0XGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmxcYnJkcnNcYnJkcncxMCBcdHJicmRyYlxicmRyc1xicmRydzEwIFx0cmJyZHJyXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmhcYnJkcnNcYnJkcncxMCBcdHJicmRydg0KXGJyZHJzXGJyZHJ3MTAgXHRyZnRzV2lkdGgxXHRyZnRzV2lkdGhCM1x0cmF1dG9maXQxXHRycGFkZGwxMDhcdHJwYWRkcjEwOFx0cnBhZGRmbDNcdHJwYWRkZnQzXHRycGFkZGZiM1x0cnBhZGRmcjNcdGJscnNpZDM0Mjk5MDRcdGJsbGtoZHJyb3dzXHRibGxraGRyY29sc1x0Ymxsa25vY29sYmFuZFx0YmxpbmQwXHRibGluZHR5cGUzIFxjbHZtZ2ZcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcnNcYnJkcncxMCBcY2xicmRybFxicmRyc1xicmRydzEwIA0KXGNsYnJkcmJcYnJkcnNcYnJkcncxMCBcY2xicmRyclxicmRyc1xicmRydzEwIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDIzOTRcY2xzaGRyYXduaWwgXGNlbGx4MjI4NlxjbHZlcnRhbHRcY2xicmRydFxicmRyc1xicmRydzEwIFxjbGJyZHJsXGJyZHJzXGJyZHJ3MTAgXGNsYnJkcmJcYnJkcnNcYnJkcncxMCBcY2xicmRyclxicmRyc1xicmRydzEwIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDIzOTRcY2xzaGRyYXduaWwgDQpcY2VsbHg0NjgwXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJzXGJyZHJ3MTAgXGNsYnJkcmxcYnJkcnNcYnJkcncxMCBcY2xicmRyYlxicmRyc1xicmRydzEwIFxjbGJyZHJyXGJyZHJzXGJyZHJ3MTAgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMjcwMFxjbHNoZHJhd25pbCBcY2VsbHg3MzgwXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJzXGJyZHJ3MTAgXGNsYnJkcmxcYnJkcnNcYnJkcncxMCBcY2xicmRyYlxicmRyc1xicmRydzEwIA0KXGNsYnJkcnJcYnJkcnNcYnJkcncxMCBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgyMDg4XGNsc2hkcmF3bmlsIFxjZWxseDk0NjhccGFyZFxwbGFpbiBcbHRycGFyXHFjIFxsaTBccmkwXG5vd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjBccGFyYXJzaWQ2ODE4NjVceXRzNTMgXHJ0bGNoXGZjczEgXGFmMzdcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGFmMzdcaGljaFxhZjM3XGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcc3RyaWtlXGYwXGZzMjRcaW5zcnNpZDk3MjQyMzNcY2hhcnJzaWQ3OTI2MTggDQpccGFyIA0KXHBhciANClxwYXIgfVxwYXJkIFxsdHJwYXJccWMgXGxpMFxyaTBcbm93aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMFxwYXJhcnNpZDI4NDY1NjhceXRzNTMge1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXHN0cmlrZVxmMFxmczI0XGluc3JzaWQ5NzI0MjMzXGNoYXJyc2lkNzkyNjE4IA0KXHBhciBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgT3JpZ2lucyBpbiBMZWEgDQpccGFyIFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCBDb3VudHksIE5NICg2KSAoNylcY2VsbCB9XHBhcmQgXGx0cnBhclxxYyBcbGkwXHJpMFxub3dpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4wXHBhcmFyc2lkNjgxODY1XHl0czUzIHtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxzdHJpa2VcZjBcZnMyNFxpbnNyc2lkOTcyNDIzM1xjaGFycnNpZDc5MjYxOCANClxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCBPcnl4IERlbGF3YXJlIE9pbCBUcmFuc3BvcnQgTExDLCANClxwYXIgfVxwYXJkIFxsdHJwYXJccWMgXGxpMFxyaTBcbm93aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMFxwYXJhcnNpZDc1MDAxNjNceXRzNTMge1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXHN0cmlrZVxmMFxmczI0XGluc3JzaWQ5NzI0MjMzXGNoYXJyc2lkNzkyNjE4IFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCBMZWEgQ291bnR5LCBOTVxjZWxsIH1ccGFyZCBcbHRycGFyDQpccWMgXGxpMFxyaTBcbm93aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMFxwYXJhcnNpZDY4MTg2NVx5dHM1MyB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcc3RyaWtlXGYwXGZzMjRcaW5zcnNpZDk3MjQyMzNcY2hhcnJzaWQ3OTI2MTggXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIDI1LDAwMCBvciBHcmVhdGVyDQpccGFyIFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCAyNCw5OTkgdG8gMTAsMDAwDQpccGFyIFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCAwLTksOTk5XGNlbGwgfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxiXHN0cmlrZVxmMFxmczI0XGluc3JzaWQxNTgyMjM4NVxjaGFycnNpZDc5MjYxOCBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgW1VdIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcc3RyaWtlXGYwXGZzMjRcaW5zcnNpZDk3MjQyMzNcY2hhcnJzaWQ3OTI2MTggDQpcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgJDAuNTUNClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxiXHN0cmlrZVxmMFxmczI0XGluc3JzaWQxNTgyMjM4NVxjaGFycnNpZDc5MjYxOCBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgW1VdIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcc3RyaWtlXGYwXGZzMjRcaW5zcnNpZDk3MjQyMzNcY2hhcnJzaWQ3OTI2MTggXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwICQwLjYwDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcYlxzdHJpa2VcZjBcZnMyNFxpbnNyc2lkMTU4MjIzODVcY2hhcnJzaWQ3OTI2MTggXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIFtVXSB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXHN0cmlrZVxmMFxmczI0XGluc3JzaWQ5NzI0MjMzXGNoYXJyc2lkNzkyNjE4IFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCAkMC42NVxjZWxsIA0KfVxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMFxyaTBcc2ExNjBcc2wyNTlcc2xtdWx0MVx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjAgXHJ0bGNoXGZjczEgXGFmMzdcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGFmMzdcaGljaFxhZjM3XGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMzcgXGx0cmNoXGZjczAgXGluc3JzaWQ5NzI0MjMzXGNoYXJyc2lkNzkyNjE4IFx0cm93ZCBcaXJvdzJcaXJvd2JhbmQyXGx0cnJvd1x0czUzXHRyZ2FwaDEwOFx0cmxlZnQtMTA4XHRyYnJkcnRcYnJkcnNcYnJkcncxMCBcdHJicmRybFxicmRyc1xicmRydzEwIA0KXHRyYnJkcmJcYnJkcnNcYnJkcncxMCBcdHJicmRyclxicmRyc1xicmRydzEwIFx0cmJyZHJoXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnZcYnJkcnNcYnJkcncxMCANClx0cmZ0c1dpZHRoMVx0cmZ0c1dpZHRoQjNcdHJhdXRvZml0MVx0cnBhZGRsMTA4XHRycGFkZHIxMDhcdHJwYWRkZmwzXHRycGFkZGZ0M1x0cnBhZGRmYjNcdHJwYWRkZnIzXHRibHJzaWQzNDI5OTA0XHRibGxraGRycm93c1x0Ymxsa2hkcmNvbHNcdGJsbGtub2NvbGJhbmRcdGJsaW5kMFx0YmxpbmR0eXBlMyBcY2x2bWdmXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJzXGJyZHJ3MTAgXGNsYnJkcmxcYnJkcnNcYnJkcncxMCBcY2xicmRyYg0KXGJyZHJzXGJyZHJ3MTAgXGNsYnJkcnJcYnJkcnNcYnJkcncxMCBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgyMzk0XGNsc2hkcmF3bmlsIFxjZWxseDIyODZcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcnNcYnJkcncxMCBcY2xicmRybFxicmRyc1xicmRydzEwIFxjbGJyZHJiXGJyZHJzXGJyZHJ3MTAgXGNsYnJkcnJcYnJkcnNcYnJkcncxMCBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgyMzk0XGNsc2hkcmF3bmlsIFxjZWxseDQ2ODANClxjbHZlcnRhbHRcY2xicmRydFxicmRyc1xicmRydzEwIFxjbGJyZHJsXGJyZHJzXGJyZHJ3MTAgXGNsYnJkcmJcYnJkcnNcYnJkcncxMCBcY2xicmRyclxicmRyc1xicmRydzEwIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDI3MDBcY2xzaGRyYXduaWwgXGNlbGx4NzM4MFxjbHZlcnRhbHRcY2xicmRydFxicmRyc1xicmRydzEwIFxjbGJyZHJsXGJyZHJzXGJyZHJ3MTAgXGNsYnJkcmJcYnJkcnNcYnJkcncxMCBcY2xicmRycg0KXGJyZHJzXGJyZHJ3MTAgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMjA4OFxjbHNoZHJhd25pbCBcY2VsbHg5NDY4XHJvdyBcbHRycm93fVx0cm93ZCBcaXJvdzNcaXJvd2JhbmQzXGx0cnJvd1x0czUzXHRyZ2FwaDEwOFx0cmxlZnQtMTA4XHRyYnJkcnRcYnJkcnNcYnJkcncxMCBcdHJicmRybFxicmRyc1xicmRydzEwIFx0cmJyZHJiXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnJcYnJkcnNcYnJkcncxMCBcdHJicmRyaA0KXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnZcYnJkcnNcYnJkcncxMCBcdHJmdHNXaWR0aDFcdHJmdHNXaWR0aEIzXHRyYXV0b2ZpdDFcdHJwYWRkbDEwOFx0cnBhZGRyMTA4XHRycGFkZGZsM1x0cnBhZGRmdDNcdHJwYWRkZmIzXHRycGFkZGZyM1x0Ymxyc2lkMzQyOTkwNFx0Ymxsa2hkcnJvd3NcdGJsbGtoZHJjb2xzXHRibGxrbm9jb2xiYW5kXHRibGluZDBcdGJsaW5kdHlwZTMgXGNsdm1yZ1xjbHZlcnRhbHRcY2xicmRydFxicmRyc1xicmRydzEwIA0KXGNsYnJkcmxcYnJkcnNcYnJkcncxMCBcY2xicmRyYlxicmRyc1xicmRydzEwIFxjbGJyZHJyXGJyZHJzXGJyZHJ3MTAgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMjM5NFxjbHNoZHJhd25pbCBcY2VsbHgyMjg2XGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJzXGJyZHJ3MTAgXGNsYnJkcmxcYnJkcnNcYnJkcncxMCBcY2xicmRyYlxicmRyc1xicmRydzEwIFxjbGJyZHJyXGJyZHJzXGJyZHJ3MTAgDQpcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgyMzk0XGNsc2hkcmF3bmlsIFxjZWxseDQ2ODBcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcnNcYnJkcncxMCBcY2xicmRybFxicmRyc1xicmRydzEwIFxjbGJyZHJiXGJyZHJzXGJyZHJ3MTAgXGNsYnJkcnJcYnJkcnNcYnJkcncxMCBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgyNzAwXGNsc2hkcmF3bmlsIFxjZWxseDczODBcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcnNcYnJkcncxMCANClxjbGJyZHJsXGJyZHJzXGJyZHJ3MTAgXGNsYnJkcmJcYnJkcnNcYnJkcncxMCBcY2xicmRyclxicmRyc1xicmRydzEwIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDIwODhcY2xzaGRyYXduaWwgXGNlbGx4OTQ2OFxwYXJkXHBsYWluIFxsdHJwYXJccWMgXGxpMFxyaTBcbm93aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMFxwYXJhcnNpZDI4NDY1NjhceXRzNTMgXHJ0bGNoXGZjczEgDQpcYWYzN1xhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGFmMzdcaGljaFxhZjM3XGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcc3RyaWtlXGYwXGZzMjRcaW5zcnNpZDk3MjQyMzNcY2hhcnJzaWQ3OTI2MTggXGNlbGwgXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIA0KUGxhaW5zIFBpcGVsaW5lIEwuUC4sIExlYSBDb3VudHksIE5NXGNlbGwgXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIDI1LDAwMCBvciBHcmVhdGVyDQpccGFyIFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCAyNCw5OTkgdG8gMTAsMDAwDQpccGFyIFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCAwLTksOTk5XGNlbGwgfVxwYXJkIFxsdHJwYXJccWMgXGxpMFxyaTBcbm93aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMFxwYXJhcnNpZDE1ODIyMzg1XHl0czUzIHtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxiXHN0cmlrZVxmMFxmczI0XGluc3JzaWQxNTgyMjM4NVxjaGFycnNpZDc5MjYxOCANClxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCBbVV0gfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxzdHJpa2VcZjBcZnMyNFxpbnNyc2lkMTU4MjIzODVcY2hhcnJzaWQ3OTI2MTggXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwICQwLjU1DQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcYlxzdHJpa2VcZjBcZnMyNFxpbnNyc2lkMTU4MjIzODVcY2hhcnJzaWQ3OTI2MTggXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIFtVXSB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXHN0cmlrZVxmMFxmczI0XGluc3JzaWQxNTgyMjM4NVxjaGFycnNpZDc5MjYxOCBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgJDAuNjANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxiXHN0cmlrZVxmMFxmczI0XGluc3JzaWQxNTgyMjM4NVxjaGFycnNpZDc5MjYxOCBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgW1VdIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcc3RyaWtlXGYwXGZzMjRcaW5zcnNpZDE1ODIyMzg1XGNoYXJyc2lkNzkyNjE4IFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCAkMC42NX17XHJ0bGNoXGZjczEgDQpcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxzdHJpa2VcZjBcZnMyNFxpbnNyc2lkOTcyNDIzM1xjaGFycnNpZDc5MjYxOCBcY2VsbCB9XHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkwXHJpMFxzYTE2MFxzbDI1OVxzbG11bHQxXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMCBccnRsY2hcZmNzMSBcYWYzN1xhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYzN1xoaWNoXGFmMzdcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYzNyBcbHRyY2hcZmNzMCBcaW5zcnNpZDk3MjQyMzNcY2hhcnJzaWQ3OTI2MTggXHRyb3dkIFxpcm93M1xpcm93YmFuZDNcbHRycm93XHRzNTNcdHJnYXBoMTA4XHRybGVmdC0xMDhcdHJicmRydFxicmRyc1xicmRydzEwIFx0cmJyZHJsXGJyZHJzXGJyZHJ3MTAgDQpcdHJicmRyYlxicmRyc1xicmRydzEwIFx0cmJyZHJyXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmhcYnJkcnNcYnJkcncxMCBcdHJicmRydlxicmRyc1xicmRydzEwIA0KXHRyZnRzV2lkdGgxXHRyZnRzV2lkdGhCM1x0cmF1dG9maXQxXHRycGFkZGwxMDhcdHJwYWRkcjEwOFx0cnBhZGRmbDNcdHJwYWRkZnQzXHRycGFkZGZiM1x0cnBhZGRmcjNcdGJscnNpZDM0Mjk5MDRcdGJsbGtoZHJyb3dzXHRibGxraGRyY29sc1x0Ymxsa25vY29sYmFuZFx0YmxpbmQwXHRibGluZHR5cGUzIFxjbHZtcmdcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcnNcYnJkcncxMCBcY2xicmRybFxicmRyc1xicmRydzEwIFxjbGJyZHJiDQpcYnJkcnNcYnJkcncxMCBcY2xicmRyclxicmRyc1xicmRydzEwIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDIzOTRcY2xzaGRyYXduaWwgXGNlbGx4MjI4NlxjbHZlcnRhbHRcY2xicmRydFxicmRyc1xicmRydzEwIFxjbGJyZHJsXGJyZHJzXGJyZHJ3MTAgXGNsYnJkcmJcYnJkcnNcYnJkcncxMCBcY2xicmRyclxicmRyc1xicmRydzEwIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDIzOTRcY2xzaGRyYXduaWwgXGNlbGx4NDY4MA0KXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJzXGJyZHJ3MTAgXGNsYnJkcmxcYnJkcnNcYnJkcncxMCBcY2xicmRyYlxicmRyc1xicmRydzEwIFxjbGJyZHJyXGJyZHJzXGJyZHJ3MTAgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMjcwMFxjbHNoZHJhd25pbCBcY2VsbHg3MzgwXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJzXGJyZHJ3MTAgXGNsYnJkcmxcYnJkcnNcYnJkcncxMCBcY2xicmRyYlxicmRyc1xicmRydzEwIFxjbGJyZHJyDQpcYnJkcnNcYnJkcncxMCBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgyMDg4XGNsc2hkcmF3bmlsIFxjZWxseDk0Njhccm93IFxsdHJyb3d9XHBhcmRccGxhaW4gXGx0cnBhclxxYyBcbGkwXHJpMFxub3dpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4wXHBhcmFyc2lkMjg0NjU2OFx5dHM1MyBccnRsY2hcZmNzMSBcYWYzN1xhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYzN1xoaWNoXGFmMzdcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxzdHJpa2VcZjBcZnMyNFxpbnNyc2lkOTcyNDIzM1xjaGFycnNpZDc5MjYxOCBcY2VsbCBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgU3Vub2NvIFBpcGVsaW5lIEwuUC4sDQpccGFyIFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCBMZWEgQ291bnR5LCBOTVxjZWxsIFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCAyNSwwMDAgb3IgR3JlYXRlcg0KXHBhciBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgMjQsOTk5IHRvIDEwLDAwMA0KXHBhciBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgMC05LDk5OVxjZWxsIH1ccGFyZCBcbHRycGFyXHFjIFxsaTBccmkwXG5vd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjBccGFyYXJzaWQxNTgyMjM4NVx5dHM1MyB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcYlxzdHJpa2VcZjBcZnMyNFxpbnNyc2lkMTU4MjIzODVcY2hhcnJzaWQ3OTI2MTggDQpcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgW1VdIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcc3RyaWtlXGYwXGZzMjRcaW5zcnNpZDE1ODIyMzg1XGNoYXJyc2lkNzkyNjE4IFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCAkMC41NQ0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGJcc3RyaWtlXGYwXGZzMjRcaW5zcnNpZDE1ODIyMzg1XGNoYXJyc2lkNzkyNjE4IFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCBbVV0gfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxzdHJpa2VcZjBcZnMyNFxpbnNyc2lkMTU4MjIzODVcY2hhcnJzaWQ3OTI2MTggXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwICQwLjYwDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcYlxzdHJpa2VcZjBcZnMyNFxpbnNyc2lkMTU4MjIzODVcY2hhcnJzaWQ3OTI2MTggXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIFtVXSB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXHN0cmlrZVxmMFxmczI0XGluc3JzaWQxNTgyMjM4NVxjaGFycnNpZDc5MjYxOCBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgJDAuNjV9e1xydGxjaFxmY3MxIA0KXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcc3RyaWtlXGYwXGZzMjRcaW5zcnNpZDk3MjQyMzNcY2hhcnJzaWQ3OTI2MTggXGNlbGwgfVxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMFxyaTBcc2ExNjBcc2wyNTlcc2xtdWx0MVx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjAgXHJ0bGNoXGZjczEgXGFmMzdcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGFmMzdcaGljaFxhZjM3XGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMzcgXGx0cmNoXGZjczAgXGluc3JzaWQ5NzI0MjMzXGNoYXJyc2lkNzkyNjE4IFx0cm93ZCBcaXJvdzRcaXJvd2JhbmQ0XGx0cnJvd1x0czUzXHRyZ2FwaDEwOFx0cmxlZnQtMTA4XHRyYnJkcnRcYnJkcnNcYnJkcncxMCBcdHJicmRybFxicmRyc1xicmRydzEwIA0KXHRyYnJkcmJcYnJkcnNcYnJkcncxMCBcdHJicmRyclxicmRyc1xicmRydzEwIFx0cmJyZHJoXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnZcYnJkcnNcYnJkcncxMCANClx0cmZ0c1dpZHRoMVx0cmZ0c1dpZHRoQjNcdHJhdXRvZml0MVx0cnBhZGRsMTA4XHRycGFkZHIxMDhcdHJwYWRkZmwzXHRycGFkZGZ0M1x0cnBhZGRmYjNcdHJwYWRkZnIzXHRibHJzaWQzNDI5OTA0XHRibGxraGRycm93c1x0Ymxsa2hkcmNvbHNcdGJsbGtub2NvbGJhbmRcdGJsaW5kMFx0YmxpbmR0eXBlMyBcY2x2bXJnXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJzXGJyZHJ3MTAgXGNsYnJkcmxcYnJkcnNcYnJkcncxMCBcY2xicmRyYg0KXGJyZHJzXGJyZHJ3MTAgXGNsYnJkcnJcYnJkcnNcYnJkcncxMCBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgyMzk0XGNsc2hkcmF3bmlsIFxjZWxseDIyODZcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcnNcYnJkcncxMCBcY2xicmRybFxicmRyc1xicmRydzEwIFxjbGJyZHJiXGJyZHJzXGJyZHJ3MTAgXGNsYnJkcnJcYnJkcnNcYnJkcncxMCBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgyMzk0XGNsc2hkcmF3bmlsIFxjZWxseDQ2ODANClxjbHZlcnRhbHRcY2xicmRydFxicmRyc1xicmRydzEwIFxjbGJyZHJsXGJyZHJzXGJyZHJ3MTAgXGNsYnJkcmJcYnJkcnNcYnJkcncxMCBcY2xicmRyclxicmRyc1xicmRydzEwIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDI3MDBcY2xzaGRyYXduaWwgXGNlbGx4NzM4MFxjbHZlcnRhbHRcY2xicmRydFxicmRyc1xicmRydzEwIFxjbGJyZHJsXGJyZHJzXGJyZHJ3MTAgXGNsYnJkcmJcYnJkcnNcYnJkcncxMCBcY2xicmRycg0KXGJyZHJzXGJyZHJ3MTAgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMjA4OFxjbHNoZHJhd25pbCBcY2VsbHg5NDY4XHJvdyBcbHRycm93fVxwYXJkXHBsYWluIFxsdHJwYXJccWMgXGxpMFxyaTBcbm93aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMFxwYXJhcnNpZDk3MjQyMzNceXRzNTMgXHJ0bGNoXGZjczEgXGFmMzdcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGFmMzdcaGljaFxhZjM3XGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcc3RyaWtlXGYwXGZzMjRcaW5zcnNpZDk3MjQyMzNcY2hhcnJzaWQ3OTI2MTggXGNlbGwgXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIFNDTSBDcnVkZSBMTEMsDQpccGFyIFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCBMZWEgQ291bnR5LCBOTVxjZWxsIFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCAyNSwwMDAgb3IgR3JlYXRlcg0KXHBhciBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgMjQsOTk5IHRvIDEwLDAwMA0KXHBhciBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgMC05LDk5OVxjZWxsIH1ccGFyZCBcbHRycGFyXHFjIFxsaTBccmkwXG5vd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjBccGFyYXJzaWQxNTgyMjM4NVx5dHM1MyB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcYlxzdHJpa2VcZjBcZnMyNFxpbnNyc2lkMTU4MjIzODVcY2hhcnJzaWQ3OTI2MTggDQpcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgW1VdIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcc3RyaWtlXGYwXGZzMjRcaW5zcnNpZDE1ODIyMzg1XGNoYXJyc2lkNzkyNjE4IFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCAkMC41NQ0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGJcc3RyaWtlXGYwXGZzMjRcaW5zcnNpZDE1ODIyMzg1XGNoYXJyc2lkNzkyNjE4IFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCBbVV0gfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxzdHJpa2VcZjBcZnMyNFxpbnNyc2lkMTU4MjIzODVcY2hhcnJzaWQ3OTI2MTggXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwICQwLjYwDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcYlxzdHJpa2VcZjBcZnMyNFxpbnNyc2lkMTU4MjIzODVcY2hhcnJzaWQ3OTI2MTggXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIFtVXSB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXHN0cmlrZVxmMFxmczI0XGluc3JzaWQxNTgyMjM4NVxjaGFycnNpZDc5MjYxOCBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgJDAuNjV9e1xydGxjaFxmY3MxIA0KXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcc3RyaWtlXGYwXGZzMjRcaW5zcnNpZDk3MjQyMzNcY2hhcnJzaWQ3OTI2MTggXGNlbGwgfVxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMFxyaTBcc2ExNjBcc2wyNTlcc2xtdWx0MVx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjAgXHJ0bGNoXGZjczEgXGFmMzdcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGFmMzdcaGljaFxhZjM3XGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMzcgXGx0cmNoXGZjczAgXGluc3JzaWQ5NzI0MjMzXGNoYXJyc2lkNzkyNjE4IFx0cm93ZCBcaXJvdzVcaXJvd2JhbmQ1XGxhc3Ryb3cgXGx0cnJvd1x0czUzXHRyZ2FwaDEwOFx0cmxlZnQtMTA4XHRyYnJkcnRcYnJkcnNcYnJkcncxMCBcdHJicmRybA0KXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmJcYnJkcnNcYnJkcncxMCBcdHJicmRyclxicmRyc1xicmRydzEwIFx0cmJyZHJoXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnZcYnJkcnNcYnJkcncxMCANClx0cmZ0c1dpZHRoMVx0cmZ0c1dpZHRoQjNcdHJhdXRvZml0MVx0cnBhZGRsMTA4XHRycGFkZHIxMDhcdHJwYWRkZmwzXHRycGFkZGZ0M1x0cnBhZGRmYjNcdHJwYWRkZnIzXHRibHJzaWQzNDI5OTA0XHRibGxraGRycm93c1x0Ymxsa2hkcmNvbHNcdGJsbGtub2NvbGJhbmRcdGJsaW5kMFx0YmxpbmR0eXBlMyBcY2x2bXJnXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJzXGJyZHJ3MTAgXGNsYnJkcmxcYnJkcnNcYnJkcncxMCBcY2xicmRyYg0KXGJyZHJzXGJyZHJ3MTAgXGNsYnJkcnJcYnJkcnNcYnJkcncxMCBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgyMzk0XGNsc2hkcmF3bmlsIFxjZWxseDIyODZcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcnNcYnJkcncxMCBcY2xicmRybFxicmRyc1xicmRydzEwIFxjbGJyZHJiXGJyZHJzXGJyZHJ3MTAgXGNsYnJkcnJcYnJkcnNcYnJkcncxMCBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgyMzk0XGNsc2hkcmF3bmlsIFxjZWxseDQ2ODANClxjbHZlcnRhbHRcY2xicmRydFxicmRyc1xicmRydzEwIFxjbGJyZHJsXGJyZHJzXGJyZHJ3MTAgXGNsYnJkcmJcYnJkcnNcYnJkcncxMCBcY2xicmRyclxicmRyc1xicmRydzEwIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDI3MDBcY2xzaGRyYXduaWwgXGNlbGx4NzM4MFxjbHZlcnRhbHRcY2xicmRydFxicmRyc1xicmRydzEwIFxjbGJyZHJsXGJyZHJzXGJyZHJ3MTAgXGNsYnJkcmJcYnJkcnNcYnJkcncxMCBcY2xicmRycg0KXGJyZHJzXGJyZHJ3MTAgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMjA4OFxjbHNoZHJhd25pbCBcY2VsbHg5NDY4XHJvdyB9XHBhcmQgXGx0cnBhclxxbCBcbGkwXHJpMFxzYTIwMFxzbDI3NlxzbG11bHQxXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTA2ODM4NDIge1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgDQpcYlxzdHJpa2VcZjBcZnMyNFxjaGFyc2NhbGV4MFxpbnNyc2lkMTA2ODM4NDJcY2hhcnJzaWQ3OTI2MTggXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGJcc3RyaWtlXGYwXGZzMjRcY2hhcnNjYWxleDBcaW5zcnNpZDk3NzI5MDZcY2hhcnJzaWQ3OTI2MTggDQpccGFyIFxsdHJyb3d9XHRyb3dkIFxsdHJyb3dcdHM1M1x0cmdhcGgxMDhcdHJsZWZ0LTEwOFx0cmJyZHJ0XGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmxcYnJkcnNcYnJkcncxMCBcdHJicmRyYlxicmRyc1xicmRydzEwIFx0cmJyZHJyXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmhcYnJkcnNcYnJkcncxMCBcdHJicmRydlxicmRyc1xicmRydzEwIA0KXHRyZnRzV2lkdGgxXHRyZnRzV2lkdGhCM1x0cmF1dG9maXQxXHRycGFkZGwxMDhcdHJwYWRkcjEwOFx0cnBhZGRmbDNcdHJwYWRkZnQzXHRycGFkZGZiM1x0cnBhZGRmcjNcdGJscnNpZDM0Mjk5MDRcdGJsbGtoZHJyb3dzXHRibGxraGRyY29sc1x0Ymxsa25vY29sYmFuZFx0YmxpbmQwXHRibGluZHR5cGUzIFxjbHZlcnRhbHRcY2xicmRydFxicmRyc1xicmRydzEwIFxjbGJyZHJsXGJyZHJzXGJyZHJ3MTAgXGNsYnJkcmJcYnJkcnNcYnJkcncxMCANClxjbGJyZHJyXGJyZHJzXGJyZHJ3MTAgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoOTU3NlxjbHNoZHJhd25pbCBcY2VsbHg5NDY4XHBhcmRccGxhaW4gXGx0cnBhclxxYyBcbGkwXHJpMFx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMFxwYXJhcnNpZDIwNDQ5NVx5dHM1MyBccnRsY2hcZmNzMSBcYWYzN1xhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYzN1xoaWNoXGFmMzdcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxiXHN0cmlrZVxmMFxmczI0XGluc3JzaWQyMDQ0OTVcY2hhcnJzaWQ3OTI2MTggXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIFVOfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIA0KXGJcc3RyaWtlXGYwXGZzMjRcaW5zcnNpZDEwNjgzODQyXGNoYXJyc2lkNzkyNjE4IFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCBDT01NSVRURUQgU0hJUFBFUiBSQVRFU317XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcYlxzdHJpa2VcZjBcZnMyNFxpbnNyc2lkMTkwNDIzMFxjaGFycnNpZDc5MjYxOCBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCANClxsdHJjaFxmY3MwIFxzdHJpa2VcZjBcZnMyNFxpbnNyc2lkMTkwNDIzMFxjaGFycnNpZDc5MjYxOCBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgKDMpIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcc3RyaWtlXGYwXGZzMjRcY2hhcnNjYWxleDBcaW5zcnNpZDE5MDQyMzBcY2hhcnJzaWQ3OTI2MTggXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwICg0KX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCANClxsdHJjaFxmY3MwIFxzdHJpa2VcZjBcZnMyNFxjaGFyc2NhbGV4MFxpbnNyc2lkMTI2MDEwODNcY2hhcnJzaWQ3OTI2MTggXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwICAoNSl9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXHN0cmlrZVxmMFxmczI0XGNoYXJzY2FsZXgwXGluc3JzaWQxMDY4Mzg0MlxjaGFycnNpZDc5MjYxOCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxiXHN0cmlrZVxmMFxmczI0XGluc3JzaWQyMDQ0OTVcY2hhcnJzaWQ3OTI2MTggXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIFJhdGVzIGluIENlbnRzIFBlciBCYXJyZWwgb2YgNDIgVS5TLiBHYWxsb25zfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxzdHJpa2VcZjBcZnMyNFxjaGFyc2NhbGV4MFxpbnNyc2lkMjA0NDk1XGNoYXJyc2lkNzkyNjE4IA0KXGNlbGwgfVxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMFxyaTBcc2ExNjBcc2wyNTlcc2xtdWx0MVx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjAgXHJ0bGNoXGZjczEgXGFmMzdcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGFmMzdcaGljaFxhZjM3XGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMzcgXGx0cmNoXGZjczAgXGluc3JzaWQxMDY4Mzg0MlxjaGFycnNpZDc5MjYxOCBcdHJvd2QgXGx0cnJvd1x0czUzXHRyZ2FwaDEwOFx0cmxlZnQtMTA4XHRyYnJkcnRcYnJkcnNcYnJkcncxMCBcdHJicmRybFxicmRyc1xicmRydzEwIFx0cmJyZHJiDQpcYnJkcnNcYnJkcncxMCBcdHJicmRyclxicmRyc1xicmRydzEwIFx0cmJyZHJoXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnZcYnJkcnNcYnJkcncxMCANClx0cmZ0c1dpZHRoMVx0cmZ0c1dpZHRoQjNcdHJhdXRvZml0MVx0cnBhZGRsMTA4XHRycGFkZHIxMDhcdHJwYWRkZmwzXHRycGFkZGZ0M1x0cnBhZGRmYjNcdHJwYWRkZnIzXHRibHJzaWQzNDI5OTA0XHRibGxraGRycm93c1x0Ymxsa2hkcmNvbHNcdGJsbGtub2NvbGJhbmRcdGJsaW5kMFx0YmxpbmR0eXBlMyBcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcnNcYnJkcncxMCBcY2xicmRybFxicmRyc1xicmRydzEwIFxjbGJyZHJiXGJyZHJzXGJyZHJ3MTAgDQpcY2xicmRyclxicmRyc1xicmRydzEwIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDk1NzZcY2xzaGRyYXduaWwgXGNlbGx4OTQ2OFxyb3cgXGx0cnJvd31cdHJvd2QgXGx0cnJvd1x0czUzXHRyZ2FwaDEwOFx0cmxlZnQtMTA4XHRyYnJkcnRcYnJkcnNcYnJkcncxMCBcdHJicmRybFxicmRyc1xicmRydzEwIFx0cmJyZHJiXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnJcYnJkcnNcYnJkcncxMCBcdHJicmRyaFxicmRyc1xicmRydzEwIA0KXHRyYnJkcnZcYnJkcnNcYnJkcncxMCBcdHJmdHNXaWR0aDFcdHJmdHNXaWR0aEIzXHRyYXV0b2ZpdDFcdHJwYWRkbDEwOFx0cnBhZGRyMTA4XHRycGFkZGZsM1x0cnBhZGRmdDNcdHJwYWRkZmIzXHRycGFkZGZyM1x0Ymxyc2lkMTA2ODM4NDJcdGJsbGtoZHJyb3dzXHRibGxraGRyY29sc1x0Ymxsa25vY29sYmFuZFx0YmxpbmQwXHRibGluZHR5cGUzIFxjbHZlcnRhbHRcY2xicmRydFxicmRyc1xicmRydzEwIFxjbGJyZHJsXGJyZHJzXGJyZHJ3MTAgDQpcY2xicmRyYlxicmRyc1xicmRydzEwIFxjbGJyZHJyXGJyZHJzXGJyZHJ3MTAgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMzE5MlxjbHNoZHJhd25pbCBcY2VsbHgzMDg0XGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJzXGJyZHJ3MTAgXGNsYnJkcmxcYnJkcnNcYnJkcncxMCBcY2xicmRyYlxicmRyc1xicmRydzEwIFxjbGJyZHJyXGJyZHJzXGJyZHJ3MTAgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMzE5MlxjbHNoZHJhd25pbCANClxjZWxseDYyNzZcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcnNcYnJkcncxMCBcY2xicmRybFxicmRyc1xicmRydzEwIFxjbGJyZHJiXGJyZHJzXGJyZHJ3MTAgXGNsYnJkcnJcYnJkcnNcYnJkcncxMCBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgzMTkyXGNsc2hkcmF3bmlsIFxjZWxseDk0NjhccGFyZFxwbGFpbiBcbHRycGFyXHFjIFxsaTBccmkwXHNhMjAwXHNsMjc2XHNsbXVsdDENClx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMFxwYXJhcnNpZDEwNjgzODQyXHl0czUzIFxydGxjaFxmY3MxIFxhZjM3XGFmczIyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYzN1xoaWNoXGFmMzdcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIA0KXGJcc3RyaWtlXGYwXGZzMjRcY2hhcnNjYWxleDBcaW5zcnNpZDEwNjgzODQyXGNoYXJyc2lkNzkyNjE4IFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCBGcm9tXGNlbGwgXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIFRvXGNlbGwgfVxwYXJkIFxsdHJwYXJccWMgXGxpMFxyaTBcc2EyMDBcc2wyNzZcc2xtdWx0MVx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMFxwYXJhcnNpZDMxNTYxMTJceXRzNTMgDQp7XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcYlxzdHJpa2VcZjBcZnMyNFxjaGFyc2NhbGV4MFxpbnNyc2lkMTA2ODM4NDJcY2hhcnJzaWQ3OTI2MTggXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIFJhdGV9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXHN0cmlrZVxmMFxmczI0XGNoYXJzY2FsZXgwXGluc3JzaWQxMDY4Mzg0MlxjaGFycnNpZDc5MjYxOCBcY2VsbCB9XHBhcmRccGxhaW4gXGx0cnBhcg0KXHFsIFxsaTBccmkwXHNhMTYwXHNsMjU5XHNsbXVsdDFcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wIFxydGxjaFxmY3MxIFxhZjM3XGFmczIyXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYzN1xoaWNoXGFmMzdcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSANClxhZjM3IFxsdHJjaFxmY3MwIFxpbnNyc2lkMTA2ODM4NDJcY2hhcnJzaWQ3OTI2MTggXHRyb3dkIFxsdHJyb3dcdHM1M1x0cmdhcGgxMDhcdHJsZWZ0LTEwOFx0cmJyZHJ0XGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmxcYnJkcnNcYnJkcncxMCBcdHJicmRyYlxicmRyc1xicmRydzEwIFx0cmJyZHJyXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmhcYnJkcnNcYnJkcncxMCBcdHJicmRydlxicmRyc1xicmRydzEwIA0KXHRyZnRzV2lkdGgxXHRyZnRzV2lkdGhCM1x0cmF1dG9maXQxXHRycGFkZGwxMDhcdHJwYWRkcjEwOFx0cnBhZGRmbDNcdHJwYWRkZnQzXHRycGFkZGZiM1x0cnBhZGRmcjNcdGJscnNpZDEwNjgzODQyXHRibGxraGRycm93c1x0Ymxsa2hkcmNvbHNcdGJsbGtub2NvbGJhbmRcdGJsaW5kMFx0YmxpbmR0eXBlMyBcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcnNcYnJkcncxMCBcY2xicmRybFxicmRyc1xicmRydzEwIFxjbGJyZHJiXGJyZHJzXGJyZHJ3MTAgDQpcY2xicmRyclxicmRyc1xicmRydzEwIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDMxOTJcY2xzaGRyYXduaWwgXGNlbGx4MzA4NFxjbHZlcnRhbHRcY2xicmRydFxicmRyc1xicmRydzEwIFxjbGJyZHJsXGJyZHJzXGJyZHJ3MTAgXGNsYnJkcmJcYnJkcnNcYnJkcncxMCBcY2xicmRyclxicmRyc1xicmRydzEwIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDMxOTJcY2xzaGRyYXduaWwgXGNlbGx4NjI3NlxjbHZlcnRhbHQNClxjbGJyZHJ0XGJyZHJzXGJyZHJ3MTAgXGNsYnJkcmxcYnJkcnNcYnJkcncxMCBcY2xicmRyYlxicmRyc1xicmRydzEwIFxjbGJyZHJyXGJyZHJzXGJyZHJ3MTAgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMzE5MlxjbHNoZHJhd25pbCBcY2VsbHg5NDY4XHJvdyBcbHRycm93fVx0cm93ZCBcbHRycm93XHRzNTNcdHJnYXBoMTA4XHRybGVmdC0xMDhcdHJicmRydFxicmRyc1xicmRydzEwIFx0cmJyZHJsXGJyZHJzXGJyZHJ3MTAgDQpcdHJicmRyYlxicmRyc1xicmRydzEwIFx0cmJyZHJyXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmhcYnJkcnNcYnJkcncxMCBcdHJicmRydlxicmRyc1xicmRydzEwIA0KXHRyZnRzV2lkdGgxXHRyZnRzV2lkdGhCM1x0cmF1dG9maXQxXHRycGFkZGwxMDhcdHJwYWRkcjEwOFx0cnBhZGRmbDNcdHJwYWRkZnQzXHRycGFkZGZiM1x0cnBhZGRmcjNcdGJscnNpZDEwNjgzODQyXHRibGxraGRycm93c1x0Ymxsa2hkcmNvbHNcdGJsbGtub2NvbGJhbmRcdGJsaW5kMFx0YmxpbmR0eXBlMyBcY2x2bWdmXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJzXGJyZHJ3MTAgXGNsYnJkcmxcYnJkcnNcYnJkcncxMCBcY2xicmRyYg0KXGJyZHJzXGJyZHJ3MTAgXGNsYnJkcnJcYnJkcnNcYnJkcncxMCBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgzMTkyXGNsc2hkcmF3bmlsIFxjZWxseDMwODRcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcnNcYnJkcncxMCBcY2xicmRybFxicmRyc1xicmRydzEwIFxjbGJyZHJiXGJyZHJzXGJyZHJ3MTAgXGNsYnJkcnJcYnJkcnNcYnJkcncxMCBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgzMTkyXGNsc2hkcmF3bmlsIFxjZWxseDYyNzYNClxjbHZtZ2ZcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcnNcYnJkcncxMCBcY2xicmRybFxicmRyc1xicmRydzEwIFxjbGJyZHJiXGJyZHJzXGJyZHJ3MTAgXGNsYnJkcnJcYnJkcnNcYnJkcncxMCBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgzMTkyXGNsc2hkcmF3bmlsIFxjZWxseDk0NjhccGFyZFxwbGFpbiBcbHRycGFyDQpccWMgXGxpMFxyaTBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjBccGFyYXJzaWQxNjM5NDQ0Nlx5dHM1MyBccnRsY2hcZmNzMSBcYWYzN1xhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGFmMzdcaGljaFxhZjM3XGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCANClxzdHJpa2VcZjBcZnMyNFxjaGFyc2NhbGV4MFxpbnNyc2lkOTcyNDIzM1xjaGFycnNpZDc5MjYxOCANClxwYXIgDQpccGFyIA0KXHBhciBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgT3JpZ2lucyBpbiBMZWEgDQpccGFyIFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCBDb3VudHksIE5NICg2KSAoNylcY2VsbCBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgT3J5eCBEZWxhd2FyZSBPaWwgDQpccGFyIFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCBUcmFuc3BvcnQgTExDLCANClxwYXIgXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIExlYSBDb3VudHksIE5NXGNlbGwgDQpccGFyIA0KXHBhciANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxiXHN0cmlrZVxmMFxmczI0XGNoYXJzY2FsZXgwXGluc3JzaWQxNTgyMjM4NVxjaGFycnNpZDc5MjYxOCBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgW1VdIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcc3RyaWtlXGYwXGZzMjRcY2hhcnNjYWxleDBcaW5zcnNpZDk3MjQyMzNcY2hhcnJzaWQ3OTI2MTggDQpcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgJDAuNzBcY2VsbCB9XHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkwXHJpMFxzYTE2MFxzbDI1OVxzbG11bHQxXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMCBccnRsY2hcZmNzMSBcYWYzN1xhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYzN1xoaWNoXGFmMzdcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYzNyBcbHRyY2hcZmNzMCBcaW5zcnNpZDk3MjQyMzNcY2hhcnJzaWQ3OTI2MTggXHRyb3dkIFxsdHJyb3dcdHM1M1x0cmdhcGgxMDhcdHJsZWZ0LTEwOFx0cmJyZHJ0XGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmxcYnJkcnNcYnJkcncxMCBcdHJicmRyYg0KXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnJcYnJkcnNcYnJkcncxMCBcdHJicmRyaFxicmRyc1xicmRydzEwIFx0cmJyZHJ2XGJyZHJzXGJyZHJ3MTAgDQpcdHJmdHNXaWR0aDFcdHJmdHNXaWR0aEIzXHRyYXV0b2ZpdDFcdHJwYWRkbDEwOFx0cnBhZGRyMTA4XHRycGFkZGZsM1x0cnBhZGRmdDNcdHJwYWRkZmIzXHRycGFkZGZyM1x0Ymxyc2lkMTA2ODM4NDJcdGJsbGtoZHJyb3dzXHRibGxraGRyY29sc1x0Ymxsa25vY29sYmFuZFx0YmxpbmQwXHRibGluZHR5cGUzIFxjbHZtZ2ZcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcnNcYnJkcncxMCBcY2xicmRybFxicmRyc1xicmRydzEwIFxjbGJyZHJiDQpcYnJkcnNcYnJkcncxMCBcY2xicmRyclxicmRyc1xicmRydzEwIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDMxOTJcY2xzaGRyYXduaWwgXGNlbGx4MzA4NFxjbHZlcnRhbHRcY2xicmRydFxicmRyc1xicmRydzEwIFxjbGJyZHJsXGJyZHJzXGJyZHJ3MTAgXGNsYnJkcmJcYnJkcnNcYnJkcncxMCBcY2xicmRyclxicmRyc1xicmRydzEwIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDMxOTJcY2xzaGRyYXduaWwgXGNlbGx4NjI3Ng0KXGNsdm1nZlxjbHZlcnRhbHRcY2xicmRydFxicmRyc1xicmRydzEwIFxjbGJyZHJsXGJyZHJzXGJyZHJ3MTAgXGNsYnJkcmJcYnJkcnNcYnJkcncxMCBcY2xicmRyclxicmRyc1xicmRydzEwIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDMxOTJcY2xzaGRyYXduaWwgXGNlbGx4OTQ2OFxyb3cgXGx0cnJvd31cdHJvd2QgXGx0cnJvd1x0czUzXHRyZ2FwaDEwOFx0cmxlZnQtMTA4XHRyYnJkcnRcYnJkcnNcYnJkcncxMCBcdHJicmRybA0KXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmJcYnJkcnNcYnJkcncxMCBcdHJicmRyclxicmRyc1xicmRydzEwIFx0cmJyZHJoXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnZcYnJkcnNcYnJkcncxMCANClx0cmZ0c1dpZHRoMVx0cmZ0c1dpZHRoQjNcdHJhdXRvZml0MVx0cnBhZGRsMTA4XHRycGFkZHIxMDhcdHJwYWRkZmwzXHRycGFkZGZ0M1x0cnBhZGRmYjNcdHJwYWRkZnIzXHRibHJzaWQxMDY4Mzg0Mlx0Ymxsa2hkcnJvd3NcdGJsbGtoZHJjb2xzXHRibGxrbm9jb2xiYW5kXHRibGluZDBcdGJsaW5kdHlwZTMgXGNsdm1yZ1xjbHZlcnRhbHRcY2xicmRydFxicmRyc1xicmRydzEwIFxjbGJyZHJsXGJyZHJzXGJyZHJ3MTAgXGNsYnJkcmINClxicmRyc1xicmRydzEwIFxjbGJyZHJyXGJyZHJzXGJyZHJ3MTAgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMzE5MlxjbHNoZHJhd25pbCBcY2VsbHgzMDg0XGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJzXGJyZHJ3MTAgXGNsYnJkcmxcYnJkcnNcYnJkcncxMCBcY2xicmRyYlxicmRyc1xicmRydzEwIFxjbGJyZHJyXGJyZHJzXGJyZHJ3MTAgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMzE5MlxjbHNoZHJhd25pbCBcY2VsbHg2Mjc2DQpcY2x2bXJnXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJzXGJyZHJ3MTAgXGNsYnJkcmxcYnJkcnNcYnJkcncxMCBcY2xicmRyYlxicmRyc1xicmRydzEwIFxjbGJyZHJyXGJyZHJzXGJyZHJ3MTAgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMzE5MlxjbHNoZHJhd25pbCBcY2VsbHg5NDY4XHBhcmRccGxhaW4gXGx0cnBhcg0KXHFjIFxsaTBccmkwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4wXHBhcmFyc2lkMTYzOTQ0NDZceXRzNTMgXHJ0bGNoXGZjczEgXGFmMzdcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxhZjM3XGhpY2hcYWYzN1xkYmNoXGFmMzE1MDVcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgDQpcc3RyaWtlXGYwXGZzMjRcY2hhcnNjYWxleDBcaW5zcnNpZDk3MjQyMzNcY2hhcnJzaWQ3OTI2MTggXGNlbGwgXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIFBsYWlucyBQaXBlbGluZSBMLlAuLCANClxwYXIgXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIExlYSBDb3VudHksIE5NXGNlbGwgXGNlbGwgfVxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMFxyaTBcc2ExNjBcc2wyNTlcc2xtdWx0MVx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjAgXHJ0bGNoXGZjczEgXGFmMzdcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGFmMzdcaGljaFxhZjM3XGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMzcgXGx0cmNoXGZjczAgXGluc3JzaWQ5NzI0MjMzXGNoYXJyc2lkNzkyNjE4IFx0cm93ZCBcbHRycm93XHRzNTNcdHJnYXBoMTA4XHRybGVmdC0xMDhcdHJicmRydFxicmRyc1xicmRydzEwIFx0cmJyZHJsXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmINClxicmRyc1xicmRydzEwIFx0cmJyZHJyXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmhcYnJkcnNcYnJkcncxMCBcdHJicmRydlxicmRyc1xicmRydzEwIA0KXHRyZnRzV2lkdGgxXHRyZnRzV2lkdGhCM1x0cmF1dG9maXQxXHRycGFkZGwxMDhcdHJwYWRkcjEwOFx0cnBhZGRmbDNcdHJwYWRkZnQzXHRycGFkZGZiM1x0cnBhZGRmcjNcdGJscnNpZDEwNjgzODQyXHRibGxraGRycm93c1x0Ymxsa2hkcmNvbHNcdGJsbGtub2NvbGJhbmRcdGJsaW5kMFx0YmxpbmR0eXBlMyBcY2x2bXJnXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJzXGJyZHJ3MTAgXGNsYnJkcmxcYnJkcnNcYnJkcncxMCBcY2xicmRyYg0KXGJyZHJzXGJyZHJ3MTAgXGNsYnJkcnJcYnJkcnNcYnJkcncxMCBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgzMTkyXGNsc2hkcmF3bmlsIFxjZWxseDMwODRcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcnNcYnJkcncxMCBcY2xicmRybFxicmRyc1xicmRydzEwIFxjbGJyZHJiXGJyZHJzXGJyZHJ3MTAgXGNsYnJkcnJcYnJkcnNcYnJkcncxMCBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgzMTkyXGNsc2hkcmF3bmlsIFxjZWxseDYyNzYNClxjbHZtcmdcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcnNcYnJkcncxMCBcY2xicmRybFxicmRyc1xicmRydzEwIFxjbGJyZHJiXGJyZHJzXGJyZHJ3MTAgXGNsYnJkcnJcYnJkcnNcYnJkcncxMCBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgzMTkyXGNsc2hkcmF3bmlsIFxjZWxseDk0Njhccm93IFxsdHJyb3d9XHBhcmRccGxhaW4gXGx0cnBhcg0KXHFjIFxsaTBccmkwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4wXHBhcmFyc2lkMTYzOTQ0NDZceXRzNTMgXHJ0bGNoXGZjczEgXGFmMzdcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxhZjM3XGhpY2hcYWYzN1xkYmNoXGFmMzE1MDVcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgDQpcc3RyaWtlXGYwXGZzMjRcY2hhcnNjYWxleDBcaW5zcnNpZDk3MjQyMzNcY2hhcnJzaWQ3OTI2MTggXGNlbGwgXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIFN1bm9jbyBQaXBlbGluZSBMLlAuLA0KXHBhciBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgTGVhIENvdW50eSwgTk1cY2VsbCBcY2VsbCB9XHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkwXHJpMFxzYTE2MFxzbDI1OVxzbG11bHQxXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMCBccnRsY2hcZmNzMSBcYWYzN1xhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYzN1xoaWNoXGFmMzdcZGJjaFxhZjMxNTA1XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYzNyBcbHRyY2hcZmNzMCBcaW5zcnNpZDk3MjQyMzNcY2hhcnJzaWQ3OTI2MTggXHRyb3dkIFxsdHJyb3dcdHM1M1x0cmdhcGgxMDhcdHJsZWZ0LTEwOFx0cmJyZHJ0XGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmxcYnJkcnNcYnJkcncxMCBcdHJicmRyYg0KXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcnJcYnJkcnNcYnJkcncxMCBcdHJicmRyaFxicmRyc1xicmRydzEwIFx0cmJyZHJ2XGJyZHJzXGJyZHJ3MTAgDQpcdHJmdHNXaWR0aDFcdHJmdHNXaWR0aEIzXHRyYXV0b2ZpdDFcdHJwYWRkbDEwOFx0cnBhZGRyMTA4XHRycGFkZGZsM1x0cnBhZGRmdDNcdHJwYWRkZmIzXHRycGFkZGZyM1x0Ymxyc2lkMTA2ODM4NDJcdGJsbGtoZHJyb3dzXHRibGxraGRyY29sc1x0Ymxsa25vY29sYmFuZFx0YmxpbmQwXHRibGluZHR5cGUzIFxjbHZtcmdcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcnNcYnJkcncxMCBcY2xicmRybFxicmRyc1xicmRydzEwIFxjbGJyZHJiDQpcYnJkcnNcYnJkcncxMCBcY2xicmRyclxicmRyc1xicmRydzEwIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDMxOTJcY2xzaGRyYXduaWwgXGNlbGx4MzA4NFxjbHZlcnRhbHRcY2xicmRydFxicmRyc1xicmRydzEwIFxjbGJyZHJsXGJyZHJzXGJyZHJ3MTAgXGNsYnJkcmJcYnJkcnNcYnJkcncxMCBcY2xicmRyclxicmRyc1xicmRydzEwIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDMxOTJcY2xzaGRyYXduaWwgXGNlbGx4NjI3Ng0KXGNsdm1yZ1xjbHZlcnRhbHRcY2xicmRydFxicmRyc1xicmRydzEwIFxjbGJyZHJsXGJyZHJzXGJyZHJ3MTAgXGNsYnJkcmJcYnJkcnNcYnJkcncxMCBcY2xicmRyclxicmRyc1xicmRydzEwIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDMxOTJcY2xzaGRyYXduaWwgXGNlbGx4OTQ2OFxyb3cgXGx0cnJvd31ccGFyZFxwbGFpbiBcbHRycGFyDQpccWMgXGxpMFxyaTBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjBccGFyYXJzaWQxNjM5NDQ0Nlx5dHM1MyBccnRsY2hcZmNzMSBcYWYzN1xhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGFmMzdcaGljaFxhZjM3XGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCANClxzdHJpa2VcZjBcZnMyNFxjaGFyc2NhbGV4MFxpbnNyc2lkOTcyNDIzM1xjaGFycnNpZDc5MjYxOCBcY2VsbCB9XHBhcmQgXGx0cnBhclxxYyBcbGkwXHJpMFx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMFxwYXJhcnNpZDk3MjQyMzNceXRzNTMge1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXHN0cmlrZVxmMFxmczI0XGNoYXJzY2FsZXgwXGluc3JzaWQ5NzI0MjMzXGNoYXJyc2lkNzkyNjE4IA0KXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIFNDTSBDcnVkZSBMTEMsDQpccGFyIFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCBMZWEgQ291bnR5LCBOTVxjZWxsIH1ccGFyZCBcbHRycGFyXHFjIFxsaTBccmkwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4wXHBhcmFyc2lkMTYzOTQ0NDZceXRzNTMge1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXHN0cmlrZVxmMFxmczI0XGNoYXJzY2FsZXgwXGluc3JzaWQ5NzI0MjMzXGNoYXJyc2lkNzkyNjE4IFxjZWxsIA0KfVxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMFxyaTBcc2ExNjBcc2wyNTlcc2xtdWx0MVx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjAgXHJ0bGNoXGZjczEgXGFmMzdcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGFmMzdcaGljaFxhZjM3XGRiY2hcYWYzMTUwNVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMzcgXGx0cmNoXGZjczAgXGluc3JzaWQ5NzI0MjMzXGNoYXJyc2lkNzkyNjE4IFx0cm93ZCBcbGFzdHJvdyBcbHRycm93XHRzNTNcdHJnYXBoMTA4XHRybGVmdC0xMDhcdHJicmRydFxicmRyc1xicmRydzEwIFx0cmJyZHJsXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmINClxicmRyc1xicmRydzEwIFx0cmJyZHJyXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmhcYnJkcnNcYnJkcncxMCBcdHJicmRydlxicmRyc1xicmRydzEwIA0KXHRyZnRzV2lkdGgxXHRyZnRzV2lkdGhCM1x0cmF1dG9maXQxXHRycGFkZGwxMDhcdHJwYWRkcjEwOFx0cnBhZGRmbDNcdHJwYWRkZnQzXHRycGFkZGZiM1x0cnBhZGRmcjNcdGJscnNpZDEwNjgzODQyXHRibGxraGRycm93c1x0Ymxsa2hkcmNvbHNcdGJsbGtub2NvbGJhbmRcdGJsaW5kMFx0YmxpbmR0eXBlMyBcY2x2bXJnXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJzXGJyZHJ3MTAgXGNsYnJkcmxcYnJkcnNcYnJkcncxMCBcY2xicmRyYg0KXGJyZHJzXGJyZHJ3MTAgXGNsYnJkcnJcYnJkcnNcYnJkcncxMCBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgzMTkyXGNsc2hkcmF3bmlsIFxjZWxseDMwODRcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcnNcYnJkcncxMCBcY2xicmRybFxicmRyc1xicmRydzEwIFxjbGJyZHJiXGJyZHJzXGJyZHJ3MTAgXGNsYnJkcnJcYnJkcnNcYnJkcncxMCBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgzMTkyXGNsc2hkcmF3bmlsIFxjZWxseDYyNzYNClxjbHZtcmdcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcnNcYnJkcncxMCBcY2xicmRybFxicmRyc1xicmRydzEwIFxjbGJyZHJiXGJyZHJzXGJyZHJ3MTAgXGNsYnJkcnJcYnJkcnNcYnJkcncxMCBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgzMTkyXGNsc2hkcmF3bmlsIFxjZWxseDk0Njhccm93IH1ccGFyZCBcbHRycGFyXHFsIFxsaTBccmkwXHNhMjAwXHNsMjc2XHNsbXVsdDENClx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDEwNjgzODQyIHtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxzdHJpa2VcZjBcZnMyNFxjaGFyc2NhbGV4MFxpbnNyc2lkMTA2ODM4NDJcY2hhcnJzaWQ3OTI2MTggDQpccGFyIH1ccGFyZCBcbHRycGFyXHFqIFxsaTBccmkwXHdpZGN0bHBhclx0eDcyMFx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4wXGl0YXAwIHtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxiXHN0cmlrZVxmMFxmczI0XGNoYXJzY2FsZXgwXGluc3JzaWQxMDY4Mzg0MlxjaGFycnNpZDc5MjYxOCBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgTk9URVN9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgDQpcYlxzdHJpa2VcZjBcZnMyNFxjaGFyc2NhbGV4MFxpbnNyc2lkOTc3MjkwNlxjaGFycnNpZDc5MjYxOCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxiXHN0cmlrZVxmMFxmczI0XGNoYXJzY2FsZXgwXGluc3JzaWQxMDY4Mzg0MlxjaGFycnNpZDc5MjYxOCANClxwYXIgfVxwYXJkIFxsdHJwYXJccWogXGZpLTcyMFxsaTcyMFxyaTBcd2lkY3RscGFyXHR4NzIwXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDEwNjgzODQyIHtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxzdHJpa2VcZjBcZnMyNFxjaGFyc2NhbGV4MFxpbnNyc2lkMTA2ODM4NDJcY2hhcnJzaWQ3OTI2MTggXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwICgxKVx0YWIgDQpcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgQ29tbWl0dGVkIFNoaXBwZXIgUmF0ZXMgYXJlIGF2YWlsYWJsZSB0byB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXHN0cmlrZVxmMFxmczI0XGNoYXJzY2FsZXgwXGluc3JzaWQxNjczNzkyNVxjaGFycnNpZDc5MjYxOCBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgQ29tbWl0dGVkIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCANClxzdHJpa2VcZjBcZnMyNFxjaGFyc2NhbGV4MFxpbnNyc2lkMTA2ODM4NDJcY2hhcnJzaWQ3OTI2MTggXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIFNoaXBwZXJzIHdobyBleGVjdXRlZCBhIFR9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXHN0cmlrZVxmMFxmczI0XGNoYXJzY2FsZXgwXGluc3JzaWQxNjczNzkyNVxjaGFycnNpZDc5MjYxOCBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgDQpyYW5zcG9ydGF0aW9uIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcc3RyaWtlXGYwXGZzMjRcY2hhcnNjYWxleDBcaW5zcnNpZDEwNjgzODQyXGNoYXJyc2lkNzkyNjE4IFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCBTfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxzdHJpa2VcZjBcZnMyNFxjaGFyc2NhbGV4MFxpbnNyc2lkMTY3Mzc5MjVcY2hhcnJzaWQ3OTI2MTggDQpcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgZXJ2aWNlIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcc3RyaWtlXGYwXGZzMjRcY2hhcnNjYWxleDBcaW5zcnNpZDEwNjgzODQyXGNoYXJyc2lkNzkyNjE4IFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCBBfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIA0KXHN0cmlrZVxmMFxmczI0XGNoYXJzY2FsZXgwXGluc3JzaWQxNjczNzkyNVxjaGFycnNpZDc5MjYxOCBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgZ3JlZW1lbnR9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXHN0cmlrZVxmMFxmczI0XGNoYXJzY2FsZXgwXGluc3JzaWQxMDY4Mzg0MlxjaGFycnNpZDc5MjYxOCBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgIHdpdGggQ2FycmllciB9e1xydGxjaFxmY3MxIA0KXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcc3RyaWtlXGYwXGZzMjRcY2hhcnNjYWxleDBcaW5zcnNpZDk4NTU1ODBcY2hhcnJzaWQ3OTI2MTggXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIHRvIG1ha2UgYW4gYWNyZWFnZSBkZWRpY2F0aW9uIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcc3RyaWtlXGYwXGZzMjRcY2hhcnNjYWxleDBcaW5zcnNpZDEwNjgzODQyXGNoYXJyc2lkNzkyNjE4IA0KXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIGFzIHBhcnQgb2YgYW4gb3BlbiBzZWFzb24uICANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxzdHJpa2VcZjBcZnMyNFxjaGFyc2NhbGV4MFxpbnNyc2lkMjYzNDI1OFxjaGFycnNpZDc5MjYxOCANClxwYXIgfVxwYXJkIFxsdHJwYXJccWogXGZpLTcyMFxsaTcyMFxyaTBcd2lkY3RscGFyXHR4NzIwXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDE2NzM3OTI1IHtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxzdHJpa2VcZjBcZnMyNFxjaGFyc2NhbGV4MFxpbnNyc2lkMjYzNDI1OFxjaGFycnNpZDc5MjYxOCBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgKDIpXHRhYiANCkEgUGlwZWxpbmUgTG9zcyBBbGxvd2FuY2Ugb2YgfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxiXHN0cmlrZVxmMFxmczI0XGNoYXJzY2FsZXgwXGluc3JzaWQxNTgyMjM4NVxjaGFycnNpZDc5MjYxOCBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgW1VdIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCANClxzdHJpa2VcZjBcZnMyNFxjaGFyc2NhbGV4MFxpbnNyc2lkMjYzNDI1OFxjaGFycnNpZDc5MjYxOCBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgb25lLXRlbnRoIG9mIG9uZSBwZXJjZW50ICgwLn17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcc3RyaWtlXGYwXGZzMjRcY2hhcnNjYWxleDBcaW5zcnNpZDMwMTUyNDlcY2hhcnJzaWQ3OTI2MTggMH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCANClxzdHJpa2VcZjBcZnMyNFxjaGFyc2NhbGV4MFxpbnNyc2lkMjYzNDI1OFxjaGFycnNpZDc5MjYxOCBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgMSUpIFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCBzaGFsbCBhcHBseSB0byBxdWFudGl0aWVzIHRlbmRlcmVkIGJ5IGEgQ29tbWl0dGVkIFNoaXBwZXIgYXQgYW4gT3JpZ2luIFBvaW50KHMpIGZvciBkZWxpdmVyeSB0byBhIERlbGl2ZXJ5IFBvaW50KHMpfXtccnRsY2hcZmNzMSANClxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXHN0cmlrZVxmMFxmczI0XGNoYXJzY2FsZXgwXGluc3JzaWQxNjczNzkyNVxjaGFycnNpZDc5MjYxOCBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgIHBlciB0aGUgdGVybXMgb2YgdGhlIGFwcGxpY2FibGUgVHJhbnNwb3J0YXRpb24gU2VydmljZSBBZ3JlZW1lbnQuDQpccGFyIH1ccGFyZCBcbHRycGFyXHFqIFxsaTBccmkwXHdpZGN0bHBhclx0eDcyMFx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4wXGl0YXAwIHtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxzdHJpa2VcZjBcZnMyNFxjaGFyc2NhbGV4MFxpbnNyc2lkMTA2ODM4NDJcY2hhcnJzaWQ3OTI2MTggDQpccGFyIH1ccGFyZCBcbHRycGFyXHFqIFxmaS03MjBcbGk3MjBccmkwXHdpZGN0bHBhclx0eDcyMFx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQxMDY4Mzg0MiB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcc3RyaWtlXGYwXGZzMjRcY2hhcnNjYWxleDBcaW5zcnNpZDI2MzQyNThcY2hhcnJzaWQ3OTI2MTggXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwICh9e1xydGxjaFxmY3MxIA0KXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcc3RyaWtlXGYwXGZzMjRcY2hhcnNjYWxleDBcaW5zcnNpZDE5MDQyMzBcY2hhcnJzaWQ3OTI2MTggXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIDN9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXHN0cmlrZVxmMFxmczI0XGNoYXJzY2FsZXgwXGluc3JzaWQyNjM0MjU4XGNoYXJyc2lkNzkyNjE4IFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCApXHRhYiANCkEgUGlwZWxpbmUgTG9zcyBBbGxvd2FuY2Ugb2YgfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxiXHN0cmlrZVxmMFxmczI0XGNoYXJzY2FsZXgwXGluc3JzaWQxNTgyMjM4NVxjaGFycnNpZDc5MjYxOCBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgW1VdIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCANClxzdHJpa2VcZjBcZnMyNFxjaGFyc2NhbGV4MFxpbnNyc2lkMjYzNDI1OFxjaGFycnNpZDc5MjYxOCBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgdHdvLXRlbnRocyBvZiBvbmUgcGVyY2VudCAoMC59e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXHN0cmlrZVxmMFxmczI0XGNoYXJzY2FsZXgwXGluc3JzaWQzMDE1MjQ5XGNoYXJyc2lkNzkyNjE4IDB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgDQpcc3RyaWtlXGYwXGZzMjRcY2hhcnNjYWxleDBcaW5zcnNpZDI2MzQyNThcY2hhcnJzaWQ3OTI2MTggXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIDIlKSBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgc2hhbGwgYXBwbHkgdG8gcXVhbnRpdGllcyB0ZW5kZXJlZCBieSBhbiBVbmNvbW1pdHRlZCBTaGlwcGVyIGF0IGFuIE9yaWdpbiBQb2ludChzKSBmb3IgZGVsaXZlcnkgdG8gYSBEZWxpdmVyeSBQb2ludChzKS4NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxzdHJpa2VcZjBcZnMyNFxjaGFyc2NhbGV4MFxpbnNyc2lkMTkwNDIzMFxjaGFycnNpZDc5MjYxOCANClxwYXIgfVxwYXJkIFxsdHJwYXJccWogXGZpLTcyMFxsaTcyMFxyaTBcd2lkY3RscGFyXHR4NzIwXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDE5MDQyMzAge1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXHN0cmlrZVxmMFxmczI0XGNoYXJzY2FsZXgwXGluc3JzaWQxOTA0MjMwXGNoYXJyc2lkNzkyNjE4IFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCAoNClcdGFiIA0KRHVyaW5nIHBlcmlvZHMgb2YgUHJvcmF0aW9uaW5nLCBlYWNoIFVuY29tbWl0dGVkIFNoaXBwZXIgUmF0ZSB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXHN0cmlrZVxmMFxmczI0XGNoYXJzY2FsZXgwXGluc3JzaWQzMDg3MzIwXGNoYXJyc2lkNzkyNjE4IFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCBwZXIgYmFycmVsIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCANClxzdHJpa2VcZjBcZnMyNFxjaGFyc2NhbGV4MFxpbnNyc2lkMTkwNDIzMFxjaGFycnNpZDc5MjYxOCBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgc2hhbGx9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXHN0cmlrZVxmMFxmczI0XGNoYXJzY2FsZXgwXGluc3JzaWQxMzI1NTYxXGNoYXJyc2lkNzkyNjE4IFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IA0KXGx0cmNoXGZjczAgXHN0cmlrZVxmMFxmczI0XGNoYXJzY2FsZXgwXGluc3JzaWQxOTA0MjMwXGNoYXJyc2lkNzkyNjE4IFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCBhdCBhbGwgdGltZXMgYmUgfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxiXHN0cmlrZVxmMFxmczI0XGNoYXJzY2FsZXgwXGluc3JzaWQxMzI1NTYxXGNoYXJyc2lkNzkyNjE4IFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCBbV10gfXsNClxydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXHN0cmlrZVxmMFxmczI0XGNoYXJzY2FsZXgwXGluc3JzaWQxNTM1MTA3N1xjaGFycnNpZDc5MjYxOCBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgJDAuNTQsIHdoaWNoIGlzIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcc3RyaWtlXGYwXGZzMjRcY2hhcnNjYWxleDBcaW5zcnNpZDE5MDQyMzBcY2hhcnJzaWQ3OTI2MTggDQpcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgb25lIGNlbnQgKCQwLjAxKVxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCAgYmVsb3cgdGhlIGxvd2VzdCB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXHN0cmlrZVxmMFxmczI0XGNoYXJzY2FsZXgwXGluc3JzaWQxMzI1NTYxXGNoYXJyc2lkNzkyNjE4IFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCBwcmV2YWlsaW5nfXtccnRsY2hcZmNzMSANClxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXHN0cmlrZVxmMFxmczI0XGNoYXJzY2FsZXgwXGluc3JzaWQxOTA0MjMwXGNoYXJyc2lkNzkyNjE4IFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCAgQ29tbWl0dGVkIFNoaXBwZXIgUmF0ZSBmb3IgZWFjaCByZXNwZWN0aXZlfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxzdHJpa2VcZjBcZnMyNFxjaGFyc2NhbGV4MFxpbnNyc2lkMTY3Mzc5MjVcY2hhcnJzaWQ3OTI2MTggDQpcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcc3RyaWtlXGYwXGZzMjRcY2hhcnNjYWxleDBcaW5zcnNpZDE5MDQyMzBcY2hhcnJzaWQ3OTI2MTggXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIHNlcnZpY2Ugcm91dGUuDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcc3RyaWtlXGYwXGZzMjRcY2hhcnNjYWxleDBcaW5zcnNpZDEyNjAxMDgzXGNoYXJyc2lkNzkyNjE4IA0KXHBhciB9XHBhcmQgXGx0cnBhclxxaiBcZmktNzIwXGxpNzIwXHJpMFx3aWRjdGxwYXJcdHg3MjBcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkOTMxNTY3OCB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcc3RyaWtlXGYwXGZzMjRcY2hhcnNjYWxleDBcaW5zcnNpZDEyNjAxMDgzXGNoYXJyc2lkNzkyNjE4IFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCAoNSlcdGFiIH17XHJ0bGNoXGZjczEgDQpcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxzdHJpa2VcZjBcZnMyNFxjaGFyc2NhbGV4MFxpbnNyc2lkOTMxNTY3OFxjaGFycnNpZDc5MjYxOCBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgQWxsIHJhdGVzIGFyZSBzdWJqZWN0IHRvIGFkanVzdG1lbnQgZWFjaCBKdWx5IDEgaW4gYWNjb3JkYW5jZSB3aXRoIDE4IEMuRi5SLiB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgDQpcc3RyaWtlXGYwXGZzMjRcY2hhcnNjYWxleDBcaW5zcnNpZDk0OTU5MVxjaGFycnNpZDc5MjYxOCBcbG9jaFxhZjBcZGJjaFxhZjMxNTA1XGhpY2hcZjAgXCdhN317XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcc3RyaWtlXGYwXGZzMjRcY2hhcnNjYWxleDBcaW5zcnNpZDkzMTU2NzhcY2hhcnJzaWQ3OTI2MTggXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIA0KIDM0Mi4zIG9yIGFueSBzdWNjZXNzb3IgbWV0aG9kb2xvZ3kgYWRvcHRlZCBieSB0aGUgRmVkZXJhbH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcc3RyaWtlXGYwXGZzMjRcY2hhcnNjYWxleDBcaW5zcnNpZDk0OTU5MVxjaGFycnNpZDc5MjYxOCBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCANClxzdHJpa2VcZjBcZnMyNFxjaGFyc2NhbGV4MFxpbnNyc2lkOTMxNTY3OFxjaGFycnNpZDc5MjYxOCBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgRW5lcmd5IFJlZ3VsYXRvcnkgQ29tbWlzc2lvbi59e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXHN0cmlrZVxmMFxmczI0XGNoYXJzY2FsZXgwXGluc3JzaWQxMjYwMTA4M1xjaGFycnNpZDc5MjYxOCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxzdHJpa2VcZjBcZnMyNFxjaGFyc2NhbGV4MFxpbnNyc2lkMjg0NjU2OFxjaGFycnNpZDc5MjYxOCANClxwYXIgXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwICg2KVx0YWIgTEFDVHMgbG9jYXRlZCBpbiBTZWN0aW9ucyA1LCA4LCA5LH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcc3RyaWtlXGYwXGZzMjRcY2hhcnNjYWxleDBcaW5zcnNpZDk3MjQyMzNcY2hhcnJzaWQ3OTI2MTggXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgDQpcc3RyaWtlXGYwXGZzMjRcY2hhcnNjYWxleDBcaW5zcnNpZDI4NDY1NjhcY2hhcnJzaWQ3OTI2MTggXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIDEwLH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcc3RyaWtlXGYwXGZzMjRcY2hhcnNjYWxleDBcaW5zcnNpZDk3MjQyMzNcY2hhcnJzaWQ3OTI2MTggXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgDQpcbHRyY2hcZmNzMCBcc3RyaWtlXGYwXGZzMjRcY2hhcnNjYWxleDBcaW5zcnNpZDI4NDY1NjhcY2hhcnJzaWQ3OTI2MTggXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIDE3LCAyMCwgfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxzdHJpa2VcZjBcZnMyNFxjaGFyc2NhbGV4MFxpbnNyc2lkOTcyNDIzM1xjaGFycnNpZDc5MjYxOCBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgMjEsIH17XHJ0bGNoXGZjczEgDQpcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxzdHJpa2VcZjBcZnMyNFxjaGFyc2NhbGV4MFxpbnNyc2lkMjg0NjU2OFxjaGFycnNpZDc5MjYxOCBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgMjksIDMxLCAzMiwgMzMgYW5kIDM0LCBUb3duc2hpcCAyNVMsIFJhbmdlIDM2RSwgTGVhIENvdW50eX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCANClxzdHJpa2VcZjBcZnMyNFxjaGFyc2NhbGV4MFxpbnNyc2lkNzI3NTE5NVxjaGFycnNpZDc5MjYxOCAsfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxzdHJpa2VcZjBcZnMyNFxjaGFyc2NhbGV4MFxpbnNyc2lkMjg0NjU2OFxjaGFycnNpZDc5MjYxOCBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgIE5ldyBNZXhpY28uDQpccGFyIA0KXHBhciBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgKDcpfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxzdHJpa2VcZjBcZnMyNFxjaGFyc2NhbGV4MFxpbnNyc2lkMTYzOTQ0NDZcY2hhcnJzaWQ3OTI2MTggXHRhYiBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgTEFDVHMgbG9jYXRlZCBpbiBTZWN0aW9ucyAyLX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCANClxzdHJpa2VcZjBcZnMyNFxjaGFyc2NhbGV4MFxpbnNyc2lkOTcyNDIzM1xjaGFycnNpZDc5MjYxOCBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgMTEsIDE0XGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwICwgMTUsIDE2IGFuZCAyMS19e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXHN0cmlrZVxmMFxmczI0XGNoYXJzY2FsZXgwXGluc3JzaWQxNjM5NDQ0NlxjaGFycnNpZDc5MjYxOCANClxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCAzNSwgVG93bnNoaXAgMjZTLCBSYW5nZSAzNkUsIExlYSBDb3VudHl9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXHN0cmlrZVxmMFxmczI0XGNoYXJzY2FsZXgwXGluc3JzaWQ3Mjc1MTk1XGNoYXJyc2lkNzkyNjE4ICx9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgDQpcc3RyaWtlXGYwXGZzMjRcY2hhcnNjYWxleDBcaW5zcnNpZDE2Mzk0NDQ2XGNoYXJyc2lkNzkyNjE4IFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCAgTmV3IE1leGljby59e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXHN0cmlrZVxmMFxmczI0XGNoYXJzY2FsZXgwXGluc3JzaWQyODQ2NTY4XGNoYXJyc2lkNzkyNjE4IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGYwXGZzMjRcY2hhcnNjYWxleDBcaW5zcnNpZDE1ODIyMzg1IA0KXHBhciANClxwYXIgDQpccGFyIA0KXHBhciANClxwYXIgDQpccGFyIA0KXHBhciANClxwYXIgDQpccGFyIA0KXHBhciANClxwYXIgDQpccGFyIA0KXHBhciANClxwYXIgDQpccGFyIA0KXHBhciANClxwYXIgfVxwYXJkIFxsdHJwYXJccWogXGZpLTcyMFxsaTcyMFxyaTBcd2lkY3RscGFyXHR4NzIwXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDE1ODIyMzg1IHtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxiXGYwXGZzMjRcY2hhcnNjYWxleDBcaW5zcnNpZDE1ODIyMzg1XGNoYXJyc2lkMTU4MjIzODUgXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIA0KRVhQTEFOQVRJT04gT0YgUkVGRVJFTkNFIE1BUktTOg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGYwXGZzMjRcY2hhcnNjYWxleDBcaW5zcnNpZDE1ODIyMzg1XGNoYXJyc2lkMTU4MjIzODUgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcYlxmMFxmczI0XGNoYXJzY2FsZXgwXGluc3JzaWQ3OTI2MTggXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIFtOXVx0YWIgfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxmMFxmczI0XGNoYXJzY2FsZXgwXGluc3JzaWQ3OTI2MTggXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIE5ld317XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCANClxsdHJjaFxmY3MwIFxmMFxmczI0XGNoYXJzY2FsZXgwXGluc3JzaWQ3OTI2MThcY2hhcnJzaWQ3OTI2MTggDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcYlxmMFxmczI0XGNoYXJzY2FsZXgwXGluc3JzaWQxNTgyMjM4NVxjaGFycnNpZDk1ODAxNTEgXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIFtXXX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcYlxmMFxmczI0XGNoYXJzY2FsZXgwXGluc3JzaWQ5NTgwMTUxIFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIA0KXGYwXGZzMjRcY2hhcnNjYWxleDBcaW5zcnNpZDE1ODIyMzg1XGNoYXJyc2lkMTU4MjIzODUgXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIENoYW5nZSBpbiBXb3JkaW5nIE9ubHl9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGYwXGZzMjRcY2hhcnNjYWxleDBcaW5zcnNpZDE1ODIyMzg1IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGJcZjBcZnMyNFxjaGFyc2NhbGV4MFxpbnNyc2lkNzkyNjE4IFxoaWNoXGFmMFxkYmNoXGFmMzE1MDVcbG9jaFxmMCBbQ317XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcYlxmMFxmczI0XGNoYXJzY2FsZXgwXGluc3JzaWQ5NTgwMTUxXGNoYXJyc2lkOTU4MDE1MSBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgXX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCANClxsdHJjaFxmY3MwIFxmMFxmczI0XGNoYXJzY2FsZXgwXGluc3JzaWQ5NTgwMTUxXGNoYXJyc2lkOTU4MDE1MSBcaGljaFxhZjBcZGJjaFxhZjMxNTA1XGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcZjBcZnMyNFxjaGFyc2NhbGV4MFxpbnNyc2lkOTU4MDE1MSBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcZjBcZnMyNFxjaGFyc2NhbGV4MFxpbnNyc2lkNzkyNjE4IA0KXGhpY2hcYWYwXGRiY2hcYWYzMTUwNVxsb2NoXGYwIENhbmNlbH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcZjBcZnMyNFxjaGFyc2NhbGV4MFxpbnNyc2lkOTU4MDE1MSANClxwYXIgfVxwYXJkIFxsdHJwYXJccWogXGZpLTcyMFxsaTcyMFxyaTBcd2lkY3RscGFyXHR4NzIwXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDEwNjgzODQyIHtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxmMFxmczI0XGNoYXJzY2FsZXgwXGluc3JzaWQxOTA0MjMwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxxaiBcbGkwXHJpMFx3aWRjdGxwYXJcdHg3MjBcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMFxpdGFwMCB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcZjBcZnMyNFxjaGFyc2NhbGV4MFxpbnNyc2lkMTA2ODM4NDIgDQpccGFyIH17XCpcdGhlbWVkYXRhIDUwNGIwMzA0MTQwMDA2MDAwODAwMDAwMDIxMDBlOWRlMGZiZmZmMDAwMDAwMWMwMjAwMDAxMzAwMDAwMDViNDM2ZjZlNzQ2NTZlNzQ1ZjU0Nzk3MDY1NzM1ZDJlNzg2ZDZjYWM5MWNiNGVjMzMwMTA0NWY3NDhmYzgzZTUyZDRhDQo5Y2IyNDAwODI1ZTk4MmM3OGVjN2EyN2NjMGM4OTkyNDE2YzlkOGIyYTc1NWZiZjc0Y2QyNTQ0MmE4MjAxNjZjMmNkOTMzZjc5ZTNiZTM3MmJkMWYwN2I1YzM5ODljYTc0YWFmZjI0MjJiMjRlYjFiNDc1ZGE1ZGYzNzRmZDlhZA0KNTY4OTgxMWExODNjNjFhNTBmOThmNGJhYmViYzI4Mzc4NzgwNDk4OTlhNTJhNTdiZTY3MDY3NGNiMjNkOGU5MDcyMWY5MGE0ZDJmYTM4MDJjYjM1NzYyNjgwZmQ4MDBlY2Q3NTUxZGMxOGViODk5MTM4ZTNjOTQzZDdlNTAzYjYNCmIwMWQ1ODNkZWVlNWY5OTgyNGUyOTBiNGJhM2YzNjRlYWM0YTQzMDg4M2IzYzA5MmQ0ZWNhOGY5NDZjOTE2NDIyZWNhYjkyN2Y1MmVhNDJiODlhMWNkNTljMjU0ZjkxOWIwZTg1ZTY1MzVkMTM1YThkZTIwZjIwYjhjMTJjM2IwDQowYzg5NWZjZjY3MjAxOTJkZTZiZjNiOWU4OWVjZGJkNjU5NmNiY2RkOGViMjhlN2MzNjVlY2M0ZWMxZmYxNDYwZjUzZmU4MTNkM2NjN2Y1YjdmMDIwMDAwZmZmZjAzMDA1MDRiMDMwNDE0MDAwNjAwMDgwMDAwMDAyMTAwYTVkNg0KYTdlN2MwMDAwMDAwMzYwMTAwMDAwYjAwMDAwMDVmNzI2NTZjNzMyZjJlNzI2NTZjNzM4NDhmY2Y2YWMzMzAwYzg3ZWY4NWJkODNkMTdkNTFkMmMzMTgyNTc2MmZhNTkwNDMyZmEzN2QwMGUxMjg3ZjY4MjIxYmRiMWJlYmRiNGYNCmM3MDYwYWJiMDg4NGE0ZWZmN2E5M2RmZWFlOGJmOWUxOTRlNzIwMTY5YWFhMDZjM2UyNDMzZmNiNjhlMTc2M2RiZjdmODJjOTg1YTRhNzI1MDg1Yjc4NzA4NmEzN2JkYmI1NWZiYzUwZDFhMzNjY2QzMTFiYTU0OGI2MzA5NTEyDQowZjg4ZDk0ZmJjNTJhZTQyNjRkMWM5MTBkMjRhNDVkYjM0NjIyNDdmYTc5MTcxNWZkNzFmOTg5ZTE5ZTAzNjRjZDNmNTE2NTJkNzM3NjBhZThmYThjOWZmYjNjMzMwY2M5ZTRmYzE3ZmFmMmNlNTQ1MDQ2ZTM3OTQ0YzY5ZTQ2Mg0KYTFhODJmZTM1M2JkOTBhODY1YWFkNDFlZDBiNWI4ZjlkNmZkMDEwMDAwZmZmZjAzMDA1MDRiMDMwNDE0MDAwNjAwMDgwMDAwMDAyMTAwNmI3OTk2MTY4MzAwMDAwMDhhMDAwMDAwMWMwMDAwMDA3NDY4NjU2ZDY1MmY3NDY4NjUNCjZkNjUyZjc0Njg2NTZkNjU0ZDYxNmU2MTY3NjU3MjJlNzg2ZDZjMGNjYzRkMGFjMzIwMTA0MGUxN2RhMTc3OTBkOTM3NjNiYjI4NDU2MmIyY2JhZWJiZjYwMDQzOWMxYTQxYzdhMGQyOWZkYmQ3ZTVlMzgzMzdjZWRmMTRkNTliDQo0YjBkNTkyYzljMDcwZDhhNjVjZDJlODhiN2YwN2MyY2E3MWJhOGRhNDgxY2M1MmM2Y2UxYzcxNWU2ZTk3ODE4YzliNDhkMTNkZjQ5Yzg3MzUxN2QyM2Q1OTA4NWFkYjVkZDIwZDZiNTJiZDUyMWVmMmNkZDVlYjkyNDZhM2Q4Yg0KNDc1N2U4ZDNmNzI5ZTI0NWViMmIyNjBhMDIzOGZkMDEwMDAwZmZmZjAzMDA1MDRiMDMwNDE0MDAwNjAwMDgwMDAwMDAyMTAwNWE4M2YyMDJiMzA2MDAwMDRmMWEwMDAwMTYwMDAwMDA3NDY4NjU2ZDY1MmY3NDY4NjU2ZDY1MmYNCjc0Njg2NTZkNjUzMTJlNzg2ZDZjZWM1OWNmNmZkYjM2MTRiZTBmZDhmZjIwZThlZWZhOTcyNGRiNDE5ZGMyOTZlZDY2NmJkMjE2YjVkYmExNDdkYWE2MmQzNjk0NjQ4ODc0NTJhMzI4MzBiNGM3MDEwMzg2NzVjMzBlMmJiMGRiDQowZWMzYjYwMjJkYjA0YmY3ZDc2NGViYjA3NWMwZmU4NTNkNTJiMjRjZGFmNDkyMDYzOTA0NDM5MzhiNDU3ZGVmZjFlMzdiZTRmNzQ4ZjFlYWI1ODcyMWI1OGU3MGMyNDgxYzM1ZWRmMjk1OTI2ZGUxNjgxNDhmNDkzNDZkZGE3Nw0KMDdiZDQyZGRiNjE4NDdkMTE4ZDEzOGMyNGQ3YjgxOTk3ZDZkZjdjMzBmYWVhMjFkMWVlMDEwNWI2MDFmYjExZGQ0YjQwM2NlNjczYmM1MjIxYjQxMzM2MjU3ZTIxOThlZTBkZDI0NGU0MmM0ZTEzMTk5MTZjNzA5M2EwNmJmMjENCjJkNTY0YTI1YWYxODIyMTJkOTU2ODQ0MjcwN2I2YjMyMjEyMzZjMGQ4NDRiN2I3N2U5YmM0YmUxMzFlMjRjMzQ4YzY4ZDIxN2FlYjE2NjIxYjFlM2MzYjI0MGIwMDVmMzY5NjIxZDIxZGFiNGExOWY3MTdjM2NjMDBmYjk2ZDUxDQpjNDM4YmM2OGRhMjVmOTY3MTc3N2FmMTZkMTRlNjY0NGY5MTY1YmM1YWUyN2ZmMzJiYmNjNjA3YzU4OTE3ZDI2ZDM2MWRlYTllM2I4OGVkN2NhZmQ0YjAwZTU5YmI4NmVhZGViNzViZGRjOWYwNGEwZDEwODQ2OWE3MjUxN2RiYQ0KZWQ0NmJiZTM2NjU4MDU5NGZlMzRmOGVlZDQzYWQ1YjI4NjU3ZmM1NzM3MzhiNzVjZjFhZmUxMjUyOGY1ZWY2Y2UwN2IzZDFmYTJhOGUxMjUyOGM1YmIxYjc4YzdhOTU1N2M0N2MzNGI1MDhhZjczNmYwYjU1MmFiZTNkNDM0YmMNCjA0MDU5NDQ0ODcxYmU4OTJlYjU1ZmRlNTY4NzNjODI0YTY3YjQ2NzhjMzc1N2FiNTRhZTY3Yzg1ODJkOTkwY2YyZWQxYzUyNDhlZjhiNmI5MTZhMjA3NzFkMjAzODAwMDUyYzQ0OTY0ZjFjNTBjNGZkMDA4NjZiMThmMjgxOTI2DQpjNGRhMjdkMzgwOGI2ZWQwMGU0NmNhZmJiNDY5YzQzNjlhNDQ4ZjE2MWIyNTY0YzY5YmY2YzczMzA0ZWI2MmU1ZjU5ZmQ3M2ZmZWYzZmFhNTc1ZjJlNGQ1Yzk5MzVmNGU5ZTNlM2Q3OWYyNzNlYTQ4YjNkYTQzZDE1NGI1N2FmYg0KZmQxNzdmM2ZmZmQ0ZmFlYmU1Nzc2ZjlmN2Q2NWM2MzMxNWZmZmI0ZjlmZmRmNmViOTc2NjIwMmNhMjE1OWQzNzVmYmZmOGUzZDU4YjM3ZGY3Y2ZlZTcwZmNmMGNmMDU2ODI4NjJhN2M0MDQyY2NhYzliZjhkOGJhMTM4NzMwMzANCjE5MTU5ZDM5MWUyNmVmNjYzMTA4MTA1MTJkNWFkMTk0YTEwODg5NWUwY2ZlYmIzY2QwZDAzNzE3ODgyMjAzYWU4ZGY1MDhkZTRiNDA0NDRjYzBlYmYzMDcxYWUxN2U5MGNjMzkzMTc4YmMxMTg0MWFmMDIwOGU2OTNiNGU4YzUxDQpiODIxZmE1MmMyM2M5ODQ3NTM3M2U3Yzk1Y2M1ZGQ0MWU4YzhkNGI3OGYyMjJkYmZkZGY5MGNkNDkzOTg1Y2ZhMDFkNjY4ZGVhNjI4ZTI2ODhhMjNjYzJkZjEyZTNlYzRkODMwYmFmYjg0Njg3MTNkMjBhMzI0NjZmMTg0NWJmNw0KODlkNTQ2YzQxODkyMDExOTZhYjM2OTY1YjQ0NzQyYzhjYmMyNDQxMGYyYWRjNWU2ZTA5ZWQ1OGVhOTY5ZDQxZDdjYTQyMzYxNTUyMDZhMjAzZmMwNTQwYmUzNzUzNGU3MjgzNGI5MWNhMDkwYWEwMWRmNDczYzMwOTFlYzJmOTINCjkxOGFlYjMyMGU5OTllNjIxYTViZGQzMTY2Y2M2NDczMmI4MWYxMmE0OWJmMDEwMjYyNGVmYjAxNWQ4NDNhMzJlMWU0ZDBlNDczMWZjNWIxOGFlY2M0ODc3ZTgwYzI5OTA5ZGIyNzUxYTA2MjNmNjI4NzMwNDU5MTc1M2JlNjI2DQpmODQxYWNhZjEwZjEwYzc5NDBkMWQ2NzRkZjIzNTg0YmY3ZTk2YTcwMTdiNDUzYTViNDlhMjBlMmNkM2MzMWU0ZjIzYThlYjVmOWRiNWZkMDA5YzI1MjZhNDBkYTM1YzUwZTQ5NzRhYTdjYTczZDVjOWM3MDgzNTRiZWY5ZjZiOQ0KODFmNzY1OTVlYzU2NDI4YzZiNjY2ZjRkYThiN2UxZDZlNWQ5OGY5MzMxYjlmY2VhZGM0MWYzZTgzNjg2MDViMTU5YTJkZThiZjM3YjcxYjZmZmY3ZTJiYzZkM2Q1ZmJjMjRhZjU0MTgwNDVhNmMwNmQzZWRiNmRjN2M4NzViZjcNCmRlMTM0MjY5OWYyZjI4ZGU2NzcyZmJjZGEwZjY4YzdiZDAyOGVjZTRiOTEzZTc2N2IxNTkwMDNmYzU0YTg2MGUzNGRjMzQ0MWQyYzY0YTYyZmUwOWUxNDEzZjQwMzNkOGJhOTc2ZGUxNjRjYTMyZDc1MzY2Y2Q2MjA2NDc0NmQ5DQo2Y2Y0MmRmMDc0MWUxZWM0ZTNmNGM4NTkyZThiZTM2NTJhMWUwY2YxNTU3YmM5Y2RkYmUxYjhjMDUzYjQ1NzViMWRhMzcyZjc5MmVkNTQxZTc3OTcwNDg0ZWRiYjkwNTAzYWQzNDk1NDBkMjQ2YWNiNDYxMTI0NzliODg2YTAxOQ0KNDhjODkxNWQwODhiODY4MTQ1NWRiODVmYTY2YTgzMDU1MGNiYjMwMjliMjMwYmI2NTQ0ZGRiNzVjMDA0OGNlMGNjODQyODFlOGIzY2E1YTk1ZTY2NTcyNmYzMjIzM2JkMmQ5OGRhMGMyOGMxNzc4ZDZjMDZhYzMyZGQxMDVjYjcNCjBlNGY4YzJlOWQ2YTY3YzhiNDQ2NDI5OTZlM2EwOTE5MTk1OWMzNTg4MGM2Mzg5YjlkYTJmNTJjMzRkZTM1ZDc4ZDU1NGEzNTdhMjIxNDU5MmMxNDFhYjVmYTdmYjEzODZmYWVjMTZlNWQxYjY4YTQyYTA1OGRhY2UzYTZlZDU1DQo1ZDk4MzIyMzM0NmJkYTEzMzhiYWMzY2Y3MDA2NzM4Nzg5NGQyZGEyNTNmOGZlMzVlMjQ5YmFlMGNmYTMyY2IzODRmMTBlNjI0MTFhNzAyOTNhYTkxYTg0ODRlM2M0YTIyNDZjZGE2MmY4NzkxYTY4MjQzNTQ0NzIyYjU3NDAxMA0KMmUyZGI5MDZjOGNhNjUyMzA3NDlkNzkzOGMyNzEzM2NlMjZhZGE5NTE2MTFlOWY0MTExNDNlZDUwYWUzNWI2OTdlN2ViMGIwOGNlNzkwZWU3ZTMwM2ViNjg2NzQ5ZWRjNDEzMGM1ZGM1YTU5MDQ3MDRjMTg3Y2RmMjlhN2QxMWMNCjEzZjgyNDk5MGJkOTZhZmVhZDE1YTY0Yzc2ZDU2ZjgyNzIwZWE1ZWQ4OGNlMDI5NDU1MTQ1NWNjNTNiODk0ZjI5YzhlN2NjYTYzYTAzYzY1NjM4NjgwMmEyMWM5MGFlMTcwMmEwYWFjMWE1NGFkOWFlNjU1MjNlNWIwYjVlYTllDQo2ZTI0MjJhNzg4ZTZhYTY2NmFhYTIyYWFhNjU5YzViNDFlOTY2NTYwMmQ5NmU3MmJmMjBhYWI2NTg4YTE1Y2FhMTUzZTk1ZWU3NWM5NmQyY2I1NmU2ZDlmOTA1NzA5MDg3ODFlM2Y0M2Q1M2Q0MzQxNTBhOGFkM2FkM2E4MDljNg0KOWIzMjJjMzQzYjZiZDU2YmM3NzI4MGE3NTAzYjRiOTE1MDU0ZGY1YmJhNWQ4YjViNWUyMzhjZGQ0MWUzYjkyYTNmZDhhZGNmNWE2ODlhMmNmNzk1MzJkMmYyZWU0MmJkNWU4ODg3MGY0MDNjM2FmMDIxNzc0ZTM5OTNhOTg0Y2INCjgzMDRjMTg2YTgyZmY3MjRhOTZjYzAxMjc5YzhiM2E1MDFiZmFjNzk0MjlhZjZhMzkyZGI3MmZjOGFlYjE3NGE3NWI3NWI3MGFhNGVhOTUwNzc1YmQ1NDJjYjc1YWJlNWFlNWIyZTc1ZGE5NWM3NTA1ODc4MTA5NmRkZjRkZWE0DQowNzFmOWJlODIyYmIzZDkxZWQxYjM3MjhlMWYyN2JkYTk1NTExYzE2NjM3OTQzNTI5NGM0ZTUwZDRhYjliMmZkMDZjNTIyMjAzYThmYmM0YWFmNTE2ZGI0YmQ0MmEzZGFlYTE1OWM0ZWJiNWU2OGY4NWViYmQwZjFmYzVhYTdkNw0KZjFkZDdhYTNmN2Q4YjY4ZTI0ZDg2OTU1N2RjN2ViZDYwYjVlZDlmNzBiOGU1NzEyZjRlYjhkNDJjZGE5NTQ1YTRlYWQ1NWVmM2FhZGM3ZDkzNjA2NDY5ZWNhNDcxNjBiMDhhZmU0YjVmYjJmMDAwMDAwZmZmZjAzMDA1MDRiMDMNCjA0MTQwMDA2MDAwODAwMDAwMDIxMDAwZGQxOTA5ZmI2MDAwMDAwMWIwMTAwMDAyNzAwMDAwMDc0Njg2NTZkNjUyZjc0Njg2NTZkNjUyZjVmNzI2NTZjNzMyZjc0Njg2NTZkNjU0ZDYxNmU2MTY3NjU3MjJlNzg2ZDZjMmU3MjY1DQo2YzczODQ4ZjRkMGFjMjMwMTQ4NGY3ODI3NzA4NmY2ZmQzYmExMDkxMjZkZDg4ZDBhZGQ0MDM4NGU0MzUwZDM2M2YyNDUxZWNlZDBkYWUyYzA4MmU4NzYxYmU5OTY5YmI5NzlkYzkxMzYzMzJkZTMxNjhhYTFhMDgzYWU5OTU3MQ0KOWFjMTZkYjhlYzhlNDA1MjE2NGU4OWQ5M2I2NGIwNjA4MjhlNmYzN2VkMTU2NzkxNGIyODRkMjYyNDUyMjgyZTMxOTg3MjBlMjc0YTkzOWNkMDhhNTRmOTgwYWUzOGEzOGY1NmU0MjJhM2E2NDFjOGJiZDA0OGY3NzU3ZGEwZjENCjliMDE3Y2M1MjRiZDYyMTA3YmQ1MDAxOTk2NTA5YWZmYjNmZDM4MWE4OTY3MmYxZjE2NWRmZTUxNDE3M2Q5ODUwNTI4YTJjNmNjZTAyMzliYWE0YzA0Y2E1YmJhYmFjNGRmMDAwMDAwZmZmZjAzMDA1MDRiMDEwMjJkMDAxNDAwDQowNjAwMDgwMDAwMDAyMTAwZTlkZTBmYmZmZjAwMDAwMDFjMDIwMDAwMTMwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwNWI0MzZmNmU3NDY1NmU3NDVmNTQ3OTcwNjU3MzVkMmU3ODZkNmM1MDRiMDEwMjJkMDAxNA0KMDAwNjAwMDgwMDAwMDAyMTAwYTVkNmE3ZTdjMDAwMDAwMDM2MDEwMDAwMGIwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDMwMDEwMDAwNWY3MjY1NmM3MzJmMmU3MjY1NmM3MzUwNGIwMTAyMmQwMDE0MDAwNjAwMDgwMDAwMDANCjIxMDA2Yjc5OTYxNjgzMDAwMDAwOGEwMDAwMDAxYzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMTkwMjAwMDA3NDY4NjU2ZDY1MmY3NDY4NjU2ZDY1MmY3NDY4NjU2ZDY1NGQ2MTZlNjE2NzY1NzIyZTc4NmQ2YzUwNGIwMTAyDQoyZDAwMTQwMDA2MDAwODAwMDAwMDIxMDA1YTgzZjIwMmIzMDYwMDAwNGYxYTAwMDAxNjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZDYwMjAwMDA3NDY4NjU2ZDY1MmY3NDY4NjU2ZDY1MmY3NDY4NjU2ZDY1MzEyZTc4NmQ2Yw0KNTA0YjAxMDIyZDAwMTQwMDA2MDAwODAwMDAwMDIxMDAwZGQxOTA5ZmI2MDAwMDAwMWIwMTAwMDAyNzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwYmQwOTAwMDA3NDY4NjU2ZDY1MmY3NDY4NjU2ZDY1MmY1ZjcyNjU2YzczMmY3NDY4NjU2ZDY1NGQ2MTZlNjE2NzY1NzIyZTc4NmQ2YzJlNzI2NTZjNzM1MDRiMDUwNjAwMDAwMDAwMDUwMDA1MDA1ZDAxMDAwMGI4MGEwMDAwMDAwMH0NCntcKlxjb2xvcnNjaGVtZW1hcHBpbmcgM2MzZjc4NmQ2YzIwNzY2NTcyNzM2OTZmNmUzZDIyMzEyZTMwMjIyMDY1NmU2MzZmNjQ2OTZlNjczZDIyNTU1NDQ2MmQzODIyMjA3Mzc0NjE2ZTY0NjE2YzZmNmU2NTNkMjI3OTY1NzMyMjNmM2UwZDBhM2M2MTNhNjM2YzcyNGQNCjYxNzAyMDc4NmQ2YzZlNzMzYTYxM2QyMjY4NzQ3NDcwM2EyZjJmNzM2MzY4NjU2ZDYxNzMyZTZmNzA2NTZlNzg2ZDZjNjY2ZjcyNmQ2MTc0NzMyZTZmNzI2NzJmNjQ3MjYxNzc2OTZlNjc2ZDZjMmYzMjMwMzAzNjJmNmQ2MTY5DQo2ZTIyMjA2MjY3MzEzZDIyNmM3NDMxMjIyMDc0NzgzMTNkMjI2NDZiMzEyMjIwNjI2NzMyM2QyMjZjNzQzMjIyMjA3NDc4MzIzZDIyNjQ2YjMyMjIyMDYxNjM2MzY1NmU3NDMxM2QyMjYxNjM2MzY1NmU3NDMxMjIyMDYxNjM2Mw0KNjU2ZTc0MzIzZDIyNjE2MzYzNjU2ZTc0MzIyMjIwNjE2MzYzNjU2ZTc0MzMzZDIyNjE2MzYzNjU2ZTc0MzMyMjIwNjE2MzYzNjU2ZTc0MzQzZDIyNjE2MzYzNjU2ZTc0MzQyMjIwNjE2MzYzNjU2ZTc0MzUzZDIyNjE2MzYzNjU2ZTc0MzUyMjIwNjE2MzYzNjU2ZTc0MzYzZDIyNjE2MzYzNjU2ZTc0MzYyMjIwNjg2YzY5NmU2YjNkMjI2ODZjNjk2ZTZiMjIyMDY2NmY2YzQ4NmM2OTZlNmIzZDIyNjY2ZjZjNDg2YzY5NmU2YjIyMmYzZX0NCntcKlxsYXRlbnRzdHlsZXNcbHNkc3RpbWF4Mzc2XGxzZGxvY2tlZGRlZjBcbHNkc2VtaWhpZGRlbmRlZjBcbHNkdW5oaWRldXNlZGRlZjBcbHNkcWZvcm1hdGRlZjBcbHNkcHJpb3JpdHlkZWY5OXtcbHNkbG9ja2VkZXhjZXB0IFxsc2RxZm9ybWF0MSBcbHNkcHJpb3JpdHkwIFxsc2Rsb2NrZWQwIE5vcm1hbDtcbHNkcWZvcm1hdDEgXGxzZHByaW9yaXR5OSBcbHNkbG9ja2VkMCBoZWFkaW5nIDE7DQpcbHNkcWZvcm1hdDEgXGxzZHByaW9yaXR5OSBcbHNkbG9ja2VkMCBoZWFkaW5nIDI7XGxzZHFmb3JtYXQxIFxsc2Rwcmlvcml0eTkgXGxzZGxvY2tlZDAgaGVhZGluZyAzO1xsc2RxZm9ybWF0MSBcbHNkcHJpb3JpdHk5IFxsc2Rsb2NrZWQwIGhlYWRpbmcgNDtcbHNkcWZvcm1hdDEgXGxzZHByaW9yaXR5OSBcbHNkbG9ja2VkMCBoZWFkaW5nIDU7XGxzZHFmb3JtYXQxIFxsc2Rwcmlvcml0eTkgXGxzZGxvY2tlZDAgaGVhZGluZyA2Ow0KXGxzZHVuaGlkZXVzZWQxIFxsc2RxZm9ybWF0MSBcbHNkcHJpb3JpdHk5IFxsc2Rsb2NrZWQwIGhlYWRpbmcgNztcbHNkdW5oaWRldXNlZDEgXGxzZHFmb3JtYXQxIFxsc2Rwcmlvcml0eTkgXGxzZGxvY2tlZDAgaGVhZGluZyA4O1xsc2R1bmhpZGV1c2VkMSBcbHNkcWZvcm1hdDEgXGxzZHByaW9yaXR5OSBcbHNkbG9ja2VkMCBoZWFkaW5nIDk7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBpbmRleCAxOw0KXGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBpbmRleCAyO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgaW5kZXggMztcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIGluZGV4IDQ7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBpbmRleCA1Ow0KXGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBpbmRleCA2O1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgaW5kZXggNztcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIGluZGV4IDg7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBpbmRleCA5Ow0KXGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkcHJpb3JpdHkzOSBcbHNkbG9ja2VkMCB0b2MgMTtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rwcmlvcml0eTM5IFxsc2Rsb2NrZWQwIHRvYyAyO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZHByaW9yaXR5MzkgXGxzZGxvY2tlZDAgdG9jIDM7DQpcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rwcmlvcml0eTM5IFxsc2Rsb2NrZWQwIHRvYyA0O1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZHByaW9yaXR5MzkgXGxzZGxvY2tlZDAgdG9jIDU7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkcHJpb3JpdHkzOSBcbHNkbG9ja2VkMCB0b2MgNjsNClxsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZHByaW9yaXR5MzkgXGxzZGxvY2tlZDAgdG9jIDc7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkcHJpb3JpdHkzOSBcbHNkbG9ja2VkMCB0b2MgODtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rwcmlvcml0eTM5IFxsc2Rsb2NrZWQwIHRvYyA5O1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgTm9ybWFsIEluZGVudDsNClxsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgZm9vdG5vdGUgdGV4dDtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIGFubm90YXRpb24gdGV4dDtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIGhlYWRlcjtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIGZvb3RlcjsNClxsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgaW5kZXggaGVhZGluZztcbHNkdW5oaWRldXNlZDEgXGxzZHFmb3JtYXQxIFxsc2Rwcmlvcml0eTM1IFxsc2Rsb2NrZWQwIGNhcHRpb247XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCB0YWJsZSBvZiBmaWd1cmVzO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgZW52ZWxvcGUgYWRkcmVzczsNClxsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgZW52ZWxvcGUgcmV0dXJuO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgZm9vdG5vdGUgcmVmZXJlbmNlO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgYW5ub3RhdGlvbiByZWZlcmVuY2U7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBsaW5lIG51bWJlcjsNClxsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgcGFnZSBudW1iZXI7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBlbmRub3RlIHJlZmVyZW5jZTtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIGVuZG5vdGUgdGV4dDtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIHRhYmxlIG9mIGF1dGhvcml0aWVzOw0KXGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBtYWNybztcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIHRvYSBoZWFkaW5nO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgTGlzdDtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIExpc3QgQnVsbGV0Ow0KXGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBMaXN0IE51bWJlcjtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIExpc3QgMjtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIExpc3QgMztcbHNkc2VtaWhpZGRlbjEgXGxzZGxvY2tlZDAgTGlzdCA0O1xsc2RzZW1paGlkZGVuMSBcbHNkbG9ja2VkMCBMaXN0IDU7DQpcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIExpc3QgQnVsbGV0IDI7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBMaXN0IEJ1bGxldCAzO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgTGlzdCBCdWxsZXQgNDtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIExpc3QgQnVsbGV0IDU7DQpcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIExpc3QgTnVtYmVyIDI7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBMaXN0IE51bWJlciAzO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgTGlzdCBOdW1iZXIgNDtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIExpc3QgTnVtYmVyIDU7DQpcbHNkcWZvcm1hdDEgXGxzZHByaW9yaXR5MTAgXGxzZGxvY2tlZDAgVGl0bGU7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBDbG9zaW5nO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgU2lnbmF0dXJlO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZHByaW9yaXR5MSBcbHNkbG9ja2VkMCBEZWZhdWx0IFBhcmFncmFwaCBGb250Ow0KXGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBCb2R5IFRleHQ7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBCb2R5IFRleHQgSW5kZW50O1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgTGlzdCBDb250aW51ZTtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIExpc3QgQ29udGludWUgMjsNClxsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgTGlzdCBDb250aW51ZSAzO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgTGlzdCBDb250aW51ZSA0O1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgTGlzdCBDb250aW51ZSA1O1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgTWVzc2FnZSBIZWFkZXI7DQpcbHNkcWZvcm1hdDEgXGxzZHByaW9yaXR5MTEgXGxzZGxvY2tlZDAgU3VidGl0bGU7XGxzZHNlbWloaWRkZW4xIFxsc2Rsb2NrZWQwIFNhbHV0YXRpb247XGxzZHNlbWloaWRkZW4xIFxsc2Rsb2NrZWQwIERhdGU7XGxzZHNlbWloaWRkZW4xIFxsc2Rsb2NrZWQwIEJvZHkgVGV4dCBGaXJzdCBJbmRlbnQ7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBCb2R5IFRleHQgRmlyc3QgSW5kZW50IDI7DQpcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIE5vdGUgSGVhZGluZztcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIEJvZHkgVGV4dCAyO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgQm9keSBUZXh0IDM7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBCb2R5IFRleHQgSW5kZW50IDI7DQpcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIEJvZHkgVGV4dCBJbmRlbnQgMztcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIEJsb2NrIFRleHQ7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBIeXBlcmxpbms7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBGb2xsb3dlZEh5cGVybGluazsNClxsc2RxZm9ybWF0MSBcbHNkcHJpb3JpdHkyMiBcbHNkbG9ja2VkMCBTdHJvbmc7XGxzZHFmb3JtYXQxIFxsc2Rwcmlvcml0eTIwIFxsc2Rsb2NrZWQwIEVtcGhhc2lzO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgRG9jdW1lbnQgTWFwO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgUGxhaW4gVGV4dDsNClxsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgRS1tYWlsIFNpZ25hdHVyZTtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIEhUTUwgVG9wIG9mIEZvcm07XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBIVE1MIEJvdHRvbSBvZiBGb3JtO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgTm9ybWFsIChXZWIpOw0KXGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBIVE1MIEFjcm9ueW07XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBIVE1MIEFkZHJlc3M7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBIVE1MIENpdGU7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBIVE1MIENvZGU7DQpcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIEhUTUwgRGVmaW5pdGlvbjtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIEhUTUwgS2V5Ym9hcmQ7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBIVE1MIFByZWZvcm1hdHRlZDtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIEhUTUwgU2FtcGxlOw0KXGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBIVE1MIFR5cGV3cml0ZXI7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBIVE1MIFZhcmlhYmxlO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgYW5ub3RhdGlvbiBzdWJqZWN0O1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgTm8gTGlzdDsNClxsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgT3V0bGluZSBMaXN0IDE7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBPdXRsaW5lIExpc3QgMjtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIE91dGxpbmUgTGlzdCAzO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgVGFibGUgU2ltcGxlIDE7DQpcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIFRhYmxlIFNpbXBsZSAyO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgVGFibGUgU2ltcGxlIDM7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBUYWJsZSBDbGFzc2ljIDE7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBUYWJsZSBDbGFzc2ljIDI7DQpcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIFRhYmxlIENsYXNzaWMgMztcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIFRhYmxlIENsYXNzaWMgNDtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIFRhYmxlIENvbG9yZnVsIDE7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBUYWJsZSBDb2xvcmZ1bCAyOw0KXGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBUYWJsZSBDb2xvcmZ1bCAzO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgVGFibGUgQ29sdW1ucyAxO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgVGFibGUgQ29sdW1ucyAyO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgVGFibGUgQ29sdW1ucyAzOw0KXGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBUYWJsZSBDb2x1bW5zIDQ7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBUYWJsZSBDb2x1bW5zIDU7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBUYWJsZSBHcmlkIDE7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBUYWJsZSBHcmlkIDI7DQpcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIFRhYmxlIEdyaWQgMztcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIFRhYmxlIEdyaWQgNDtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIFRhYmxlIEdyaWQgNTtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIFRhYmxlIEdyaWQgNjsNClxsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgVGFibGUgR3JpZCA3O1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgVGFibGUgR3JpZCA4O1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgVGFibGUgTGlzdCAxO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgVGFibGUgTGlzdCAyOw0KXGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBUYWJsZSBMaXN0IDM7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBUYWJsZSBMaXN0IDQ7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBUYWJsZSBMaXN0IDU7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBUYWJsZSBMaXN0IDY7DQpcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIFRhYmxlIExpc3QgNztcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIFRhYmxlIExpc3QgODtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIFRhYmxlIDNEIGVmZmVjdHMgMTtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIFRhYmxlIDNEIGVmZmVjdHMgMjsNClxsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgVGFibGUgM0QgZWZmZWN0cyAzO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgVGFibGUgQ29udGVtcG9yYXJ5O1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgVGFibGUgRWxlZ2FudDtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIFRhYmxlIFByb2Zlc3Npb25hbDsNClxsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgVGFibGUgU3VidGxlIDI7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBUYWJsZSBXZWIgMTtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIEJhbGxvb24gVGV4dDtcbHNkcHJpb3JpdHk1OSBcbHNkbG9ja2VkMCBUYWJsZSBHcmlkOw0KXGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBUYWJsZSBUaGVtZTtcbHNkc2VtaWhpZGRlbjEgXGxzZGxvY2tlZDAgUGxhY2Vob2xkZXIgVGV4dDtcbHNkcWZvcm1hdDEgXGxzZHByaW9yaXR5MSBcbHNkbG9ja2VkMCBObyBTcGFjaW5nO1xsc2Rwcmlvcml0eTYwIFxsc2Rsb2NrZWQwIExpZ2h0IFNoYWRpbmc7XGxzZHByaW9yaXR5NjEgXGxzZGxvY2tlZDAgTGlnaHQgTGlzdDsNClxsc2Rwcmlvcml0eTYyIFxsc2Rsb2NrZWQwIExpZ2h0IEdyaWQ7XGxzZHByaW9yaXR5NjMgXGxzZGxvY2tlZDAgTWVkaXVtIFNoYWRpbmcgMTtcbHNkcHJpb3JpdHk2NCBcbHNkbG9ja2VkMCBNZWRpdW0gU2hhZGluZyAyO1xsc2Rwcmlvcml0eTY1IFxsc2Rsb2NrZWQwIE1lZGl1bSBMaXN0IDE7XGxzZHByaW9yaXR5NjYgXGxzZGxvY2tlZDAgTWVkaXVtIExpc3QgMjtcbHNkcHJpb3JpdHk2NyBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAxOw0KXGxzZHByaW9yaXR5NjggXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMjtcbHNkcHJpb3JpdHk2OSBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAzO1xsc2Rwcmlvcml0eTcwIFxsc2Rsb2NrZWQwIERhcmsgTGlzdDtcbHNkcHJpb3JpdHk3MSBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBTaGFkaW5nO1xsc2Rwcmlvcml0eTcyIFxsc2Rsb2NrZWQwIENvbG9yZnVsIExpc3Q7XGxzZHByaW9yaXR5NzMgXGxzZGxvY2tlZDAgQ29sb3JmdWwgR3JpZDsNClxsc2Rwcmlvcml0eTYwIFxsc2Rsb2NrZWQwIExpZ2h0IFNoYWRpbmcgQWNjZW50IDE7XGxzZHByaW9yaXR5NjEgXGxzZGxvY2tlZDAgTGlnaHQgTGlzdCBBY2NlbnQgMTtcbHNkcHJpb3JpdHk2MiBcbHNkbG9ja2VkMCBMaWdodCBHcmlkIEFjY2VudCAxO1xsc2Rwcmlvcml0eTYzIFxsc2Rsb2NrZWQwIE1lZGl1bSBTaGFkaW5nIDEgQWNjZW50IDE7XGxzZHByaW9yaXR5NjQgXGxzZGxvY2tlZDAgTWVkaXVtIFNoYWRpbmcgMiBBY2NlbnQgMTsNClxsc2Rwcmlvcml0eTY1IFxsc2Rsb2NrZWQwIE1lZGl1bSBMaXN0IDEgQWNjZW50IDE7XGxzZHNlbWloaWRkZW4xIFxsc2Rsb2NrZWQwIFJldmlzaW9uO1xsc2RxZm9ybWF0MSBcbHNkbG9ja2VkMCBMaXN0IFBhcmFncmFwaDtcbHNkcWZvcm1hdDEgXGxzZHByaW9yaXR5MjkgXGxzZGxvY2tlZDAgUXVvdGU7XGxzZHFmb3JtYXQxIFxsc2Rwcmlvcml0eTMwIFxsc2Rsb2NrZWQwIEludGVuc2UgUXVvdGU7DQpcbHNkcHJpb3JpdHk2NiBcbHNkbG9ja2VkMCBNZWRpdW0gTGlzdCAyIEFjY2VudCAxO1xsc2Rwcmlvcml0eTY3IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDEgQWNjZW50IDE7XGxzZHByaW9yaXR5NjggXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMiBBY2NlbnQgMTtcbHNkcHJpb3JpdHk2OSBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAzIEFjY2VudCAxO1xsc2Rwcmlvcml0eTcwIFxsc2Rsb2NrZWQwIERhcmsgTGlzdCBBY2NlbnQgMTsNClxsc2Rwcmlvcml0eTcxIFxsc2Rsb2NrZWQwIENvbG9yZnVsIFNoYWRpbmcgQWNjZW50IDE7XGxzZHByaW9yaXR5NzIgXGxzZGxvY2tlZDAgQ29sb3JmdWwgTGlzdCBBY2NlbnQgMTtcbHNkcHJpb3JpdHk3MyBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBHcmlkIEFjY2VudCAxO1xsc2Rwcmlvcml0eTYwIFxsc2Rsb2NrZWQwIExpZ2h0IFNoYWRpbmcgQWNjZW50IDI7XGxzZHByaW9yaXR5NjEgXGxzZGxvY2tlZDAgTGlnaHQgTGlzdCBBY2NlbnQgMjsNClxsc2Rwcmlvcml0eTYyIFxsc2Rsb2NrZWQwIExpZ2h0IEdyaWQgQWNjZW50IDI7XGxzZHByaW9yaXR5NjMgXGxzZGxvY2tlZDAgTWVkaXVtIFNoYWRpbmcgMSBBY2NlbnQgMjtcbHNkcHJpb3JpdHk2NCBcbHNkbG9ja2VkMCBNZWRpdW0gU2hhZGluZyAyIEFjY2VudCAyO1xsc2Rwcmlvcml0eTY1IFxsc2Rsb2NrZWQwIE1lZGl1bSBMaXN0IDEgQWNjZW50IDI7XGxzZHByaW9yaXR5NjYgXGxzZGxvY2tlZDAgTWVkaXVtIExpc3QgMiBBY2NlbnQgMjsNClxsc2Rwcmlvcml0eTY3IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDEgQWNjZW50IDI7XGxzZHByaW9yaXR5NjggXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMiBBY2NlbnQgMjtcbHNkcHJpb3JpdHk2OSBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAzIEFjY2VudCAyO1xsc2Rwcmlvcml0eTcwIFxsc2Rsb2NrZWQwIERhcmsgTGlzdCBBY2NlbnQgMjtcbHNkcHJpb3JpdHk3MSBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBTaGFkaW5nIEFjY2VudCAyOw0KXGxzZHByaW9yaXR5NzIgXGxzZGxvY2tlZDAgQ29sb3JmdWwgTGlzdCBBY2NlbnQgMjtcbHNkcHJpb3JpdHk3MyBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBHcmlkIEFjY2VudCAyO1xsc2Rwcmlvcml0eTYwIFxsc2Rsb2NrZWQwIExpZ2h0IFNoYWRpbmcgQWNjZW50IDM7XGxzZHByaW9yaXR5NjEgXGxzZGxvY2tlZDAgTGlnaHQgTGlzdCBBY2NlbnQgMztcbHNkcHJpb3JpdHk2MiBcbHNkbG9ja2VkMCBMaWdodCBHcmlkIEFjY2VudCAzOw0KXGxzZHByaW9yaXR5NjMgXGxzZGxvY2tlZDAgTWVkaXVtIFNoYWRpbmcgMSBBY2NlbnQgMztcbHNkcHJpb3JpdHk2NCBcbHNkbG9ja2VkMCBNZWRpdW0gU2hhZGluZyAyIEFjY2VudCAzO1xsc2Rwcmlvcml0eTY1IFxsc2Rsb2NrZWQwIE1lZGl1bSBMaXN0IDEgQWNjZW50IDM7XGxzZHByaW9yaXR5NjYgXGxzZGxvY2tlZDAgTWVkaXVtIExpc3QgMiBBY2NlbnQgMzsNClxsc2Rwcmlvcml0eTY3IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDEgQWNjZW50IDM7XGxzZHByaW9yaXR5NjggXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMiBBY2NlbnQgMztcbHNkcHJpb3JpdHk2OSBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAzIEFjY2VudCAzO1xsc2Rwcmlvcml0eTcwIFxsc2Rsb2NrZWQwIERhcmsgTGlzdCBBY2NlbnQgMztcbHNkcHJpb3JpdHk3MSBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBTaGFkaW5nIEFjY2VudCAzOw0KXGxzZHByaW9yaXR5NzIgXGxzZGxvY2tlZDAgQ29sb3JmdWwgTGlzdCBBY2NlbnQgMztcbHNkcHJpb3JpdHk3MyBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBHcmlkIEFjY2VudCAzO1xsc2Rwcmlvcml0eTYwIFxsc2Rsb2NrZWQwIExpZ2h0IFNoYWRpbmcgQWNjZW50IDQ7XGxzZHByaW9yaXR5NjEgXGxzZGxvY2tlZDAgTGlnaHQgTGlzdCBBY2NlbnQgNDtcbHNkcHJpb3JpdHk2MiBcbHNkbG9ja2VkMCBMaWdodCBHcmlkIEFjY2VudCA0Ow0KXGxzZHByaW9yaXR5NjMgXGxzZGxvY2tlZDAgTWVkaXVtIFNoYWRpbmcgMSBBY2NlbnQgNDtcbHNkcHJpb3JpdHk2NCBcbHNkbG9ja2VkMCBNZWRpdW0gU2hhZGluZyAyIEFjY2VudCA0O1xsc2Rwcmlvcml0eTY1IFxsc2Rsb2NrZWQwIE1lZGl1bSBMaXN0IDEgQWNjZW50IDQ7XGxzZHByaW9yaXR5NjYgXGxzZGxvY2tlZDAgTWVkaXVtIExpc3QgMiBBY2NlbnQgNDsNClxsc2Rwcmlvcml0eTY3IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDEgQWNjZW50IDQ7XGxzZHByaW9yaXR5NjggXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMiBBY2NlbnQgNDtcbHNkcHJpb3JpdHk2OSBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAzIEFjY2VudCA0O1xsc2Rwcmlvcml0eTcwIFxsc2Rsb2NrZWQwIERhcmsgTGlzdCBBY2NlbnQgNDtcbHNkcHJpb3JpdHk3MSBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBTaGFkaW5nIEFjY2VudCA0Ow0KXGxzZHByaW9yaXR5NzIgXGxzZGxvY2tlZDAgQ29sb3JmdWwgTGlzdCBBY2NlbnQgNDtcbHNkcHJpb3JpdHk3MyBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBHcmlkIEFjY2VudCA0O1xsc2Rwcmlvcml0eTYwIFxsc2Rsb2NrZWQwIExpZ2h0IFNoYWRpbmcgQWNjZW50IDU7XGxzZHByaW9yaXR5NjEgXGxzZGxvY2tlZDAgTGlnaHQgTGlzdCBBY2NlbnQgNTtcbHNkcHJpb3JpdHk2MiBcbHNkbG9ja2VkMCBMaWdodCBHcmlkIEFjY2VudCA1Ow0KXGxzZHByaW9yaXR5NjMgXGxzZGxvY2tlZDAgTWVkaXVtIFNoYWRpbmcgMSBBY2NlbnQgNTtcbHNkcHJpb3JpdHk2NCBcbHNkbG9ja2VkMCBNZWRpdW0gU2hhZGluZyAyIEFjY2VudCA1O1xsc2Rwcmlvcml0eTY1IFxsc2Rsb2NrZWQwIE1lZGl1bSBMaXN0IDEgQWNjZW50IDU7XGxzZHByaW9yaXR5NjYgXGxzZGxvY2tlZDAgTWVkaXVtIExpc3QgMiBBY2NlbnQgNTsNClxsc2Rwcmlvcml0eTY3IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDEgQWNjZW50IDU7XGxzZHByaW9yaXR5NjggXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMiBBY2NlbnQgNTtcbHNkcHJpb3JpdHk2OSBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAzIEFjY2VudCA1O1xsc2Rwcmlvcml0eTcwIFxsc2Rsb2NrZWQwIERhcmsgTGlzdCBBY2NlbnQgNTtcbHNkcHJpb3JpdHk3MSBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBTaGFkaW5nIEFjY2VudCA1Ow0KXGxzZHByaW9yaXR5NzIgXGxzZGxvY2tlZDAgQ29sb3JmdWwgTGlzdCBBY2NlbnQgNTtcbHNkcHJpb3JpdHk3MyBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBHcmlkIEFjY2VudCA1O1xsc2Rwcmlvcml0eTYwIFxsc2Rsb2NrZWQwIExpZ2h0IFNoYWRpbmcgQWNjZW50IDY7XGxzZHByaW9yaXR5NjEgXGxzZGxvY2tlZDAgTGlnaHQgTGlzdCBBY2NlbnQgNjtcbHNkcHJpb3JpdHk2MiBcbHNkbG9ja2VkMCBMaWdodCBHcmlkIEFjY2VudCA2Ow0KXGxzZHByaW9yaXR5NjMgXGxzZGxvY2tlZDAgTWVkaXVtIFNoYWRpbmcgMSBBY2NlbnQgNjtcbHNkcHJpb3JpdHk2NCBcbHNkbG9ja2VkMCBNZWRpdW0gU2hhZGluZyAyIEFjY2VudCA2O1xsc2Rwcmlvcml0eTY1IFxsc2Rsb2NrZWQwIE1lZGl1bSBMaXN0IDEgQWNjZW50IDY7XGxzZHByaW9yaXR5NjYgXGxzZGxvY2tlZDAgTWVkaXVtIExpc3QgMiBBY2NlbnQgNjsNClxsc2Rwcmlvcml0eTY3IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDEgQWNjZW50IDY7XGxzZHByaW9yaXR5NjggXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMiBBY2NlbnQgNjtcbHNkcHJpb3JpdHk2OSBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAzIEFjY2VudCA2O1xsc2Rwcmlvcml0eTcwIFxsc2Rsb2NrZWQwIERhcmsgTGlzdCBBY2NlbnQgNjtcbHNkcHJpb3JpdHk3MSBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBTaGFkaW5nIEFjY2VudCA2Ow0KXGxzZHByaW9yaXR5NzIgXGxzZGxvY2tlZDAgQ29sb3JmdWwgTGlzdCBBY2NlbnQgNjtcbHNkcHJpb3JpdHk3MyBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBHcmlkIEFjY2VudCA2O1xsc2RxZm9ybWF0MSBcbHNkcHJpb3JpdHkxOSBcbHNkbG9ja2VkMCBTdWJ0bGUgRW1waGFzaXM7XGxzZHFmb3JtYXQxIFxsc2Rwcmlvcml0eTIxIFxsc2Rsb2NrZWQwIEludGVuc2UgRW1waGFzaXM7DQpcbHNkcWZvcm1hdDEgXGxzZHByaW9yaXR5MzEgXGxzZGxvY2tlZDAgU3VidGxlIFJlZmVyZW5jZTtcbHNkcWZvcm1hdDEgXGxzZHByaW9yaXR5MzIgXGxzZGxvY2tlZDAgSW50ZW5zZSBSZWZlcmVuY2U7XGxzZHFmb3JtYXQxIFxsc2Rwcmlvcml0eTMzIFxsc2Rsb2NrZWQwIEJvb2sgVGl0bGU7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkcHJpb3JpdHkzNyBcbHNkbG9ja2VkMCBCaWJsaW9ncmFwaHk7DQpcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2RxZm9ybWF0MSBcbHNkcHJpb3JpdHkzOSBcbHNkbG9ja2VkMCBUT0MgSGVhZGluZztcbHNkcHJpb3JpdHk0MSBcbHNkbG9ja2VkMCBQbGFpbiBUYWJsZSAxO1xsc2Rwcmlvcml0eTQyIFxsc2Rsb2NrZWQwIFBsYWluIFRhYmxlIDI7XGxzZHByaW9yaXR5NDMgXGxzZGxvY2tlZDAgUGxhaW4gVGFibGUgMztcbHNkcHJpb3JpdHk0NCBcbHNkbG9ja2VkMCBQbGFpbiBUYWJsZSA0Ow0KXGxzZHByaW9yaXR5NDUgXGxzZGxvY2tlZDAgUGxhaW4gVGFibGUgNTtcbHNkcHJpb3JpdHk0MCBcbHNkbG9ja2VkMCBHcmlkIFRhYmxlIExpZ2h0O1xsc2Rwcmlvcml0eTQ2IFxsc2Rsb2NrZWQwIEdyaWQgVGFibGUgMSBMaWdodDtcbHNkcHJpb3JpdHk0NyBcbHNkbG9ja2VkMCBHcmlkIFRhYmxlIDI7XGxzZHByaW9yaXR5NDggXGxzZGxvY2tlZDAgR3JpZCBUYWJsZSAzO1xsc2Rwcmlvcml0eTQ5IFxsc2Rsb2NrZWQwIEdyaWQgVGFibGUgNDsNClxsc2Rwcmlvcml0eTUwIFxsc2Rsb2NrZWQwIEdyaWQgVGFibGUgNSBEYXJrO1xsc2Rwcmlvcml0eTUxIFxsc2Rsb2NrZWQwIEdyaWQgVGFibGUgNiBDb2xvcmZ1bDtcbHNkcHJpb3JpdHk1MiBcbHNkbG9ja2VkMCBHcmlkIFRhYmxlIDcgQ29sb3JmdWw7XGxzZHByaW9yaXR5NDYgXGxzZGxvY2tlZDAgR3JpZCBUYWJsZSAxIExpZ2h0IEFjY2VudCAxO1xsc2Rwcmlvcml0eTQ3IFxsc2Rsb2NrZWQwIEdyaWQgVGFibGUgMiBBY2NlbnQgMTsNClxsc2Rwcmlvcml0eTQ4IFxsc2Rsb2NrZWQwIEdyaWQgVGFibGUgMyBBY2NlbnQgMTtcbHNkcHJpb3JpdHk0OSBcbHNkbG9ja2VkMCBHcmlkIFRhYmxlIDQgQWNjZW50IDE7XGxzZHByaW9yaXR5NTAgXGxzZGxvY2tlZDAgR3JpZCBUYWJsZSA1IERhcmsgQWNjZW50IDE7XGxzZHByaW9yaXR5NTEgXGxzZGxvY2tlZDAgR3JpZCBUYWJsZSA2IENvbG9yZnVsIEFjY2VudCAxOw0KXGxzZHByaW9yaXR5NTIgXGxzZGxvY2tlZDAgR3JpZCBUYWJsZSA3IENvbG9yZnVsIEFjY2VudCAxO1xsc2Rwcmlvcml0eTQ2IFxsc2Rsb2NrZWQwIEdyaWQgVGFibGUgMSBMaWdodCBBY2NlbnQgMjtcbHNkcHJpb3JpdHk0NyBcbHNkbG9ja2VkMCBHcmlkIFRhYmxlIDIgQWNjZW50IDI7XGxzZHByaW9yaXR5NDggXGxzZGxvY2tlZDAgR3JpZCBUYWJsZSAzIEFjY2VudCAyOw0KXGxzZHByaW9yaXR5NDkgXGxzZGxvY2tlZDAgR3JpZCBUYWJsZSA0IEFjY2VudCAyO1xsc2Rwcmlvcml0eTUwIFxsc2Rsb2NrZWQwIEdyaWQgVGFibGUgNSBEYXJrIEFjY2VudCAyO1xsc2Rwcmlvcml0eTUxIFxsc2Rsb2NrZWQwIEdyaWQgVGFibGUgNiBDb2xvcmZ1bCBBY2NlbnQgMjtcbHNkcHJpb3JpdHk1MiBcbHNkbG9ja2VkMCBHcmlkIFRhYmxlIDcgQ29sb3JmdWwgQWNjZW50IDI7DQpcbHNkcHJpb3JpdHk0NiBcbHNkbG9ja2VkMCBHcmlkIFRhYmxlIDEgTGlnaHQgQWNjZW50IDM7XGxzZHByaW9yaXR5NDcgXGxzZGxvY2tlZDAgR3JpZCBUYWJsZSAyIEFjY2VudCAzO1xsc2Rwcmlvcml0eTQ4IFxsc2Rsb2NrZWQwIEdyaWQgVGFibGUgMyBBY2NlbnQgMztcbHNkcHJpb3JpdHk0OSBcbHNkbG9ja2VkMCBHcmlkIFRhYmxlIDQgQWNjZW50IDM7DQpcbHNkcHJpb3JpdHk1MCBcbHNkbG9ja2VkMCBHcmlkIFRhYmxlIDUgRGFyayBBY2NlbnQgMztcbHNkcHJpb3JpdHk1MSBcbHNkbG9ja2VkMCBHcmlkIFRhYmxlIDYgQ29sb3JmdWwgQWNjZW50IDM7XGxzZHByaW9yaXR5NTIgXGxzZGxvY2tlZDAgR3JpZCBUYWJsZSA3IENvbG9yZnVsIEFjY2VudCAzO1xsc2Rwcmlvcml0eTQ2IFxsc2Rsb2NrZWQwIEdyaWQgVGFibGUgMSBMaWdodCBBY2NlbnQgNDsNClxsc2Rwcmlvcml0eTQ3IFxsc2Rsb2NrZWQwIEdyaWQgVGFibGUgMiBBY2NlbnQgNDtcbHNkcHJpb3JpdHk0OCBcbHNkbG9ja2VkMCBHcmlkIFRhYmxlIDMgQWNjZW50IDQ7XGxzZHByaW9yaXR5NDkgXGxzZGxvY2tlZDAgR3JpZCBUYWJsZSA0IEFjY2VudCA0O1xsc2Rwcmlvcml0eTUwIFxsc2Rsb2NrZWQwIEdyaWQgVGFibGUgNSBEYXJrIEFjY2VudCA0Ow0KXGxzZHByaW9yaXR5NTEgXGxzZGxvY2tlZDAgR3JpZCBUYWJsZSA2IENvbG9yZnVsIEFjY2VudCA0O1xsc2Rwcmlvcml0eTUyIFxsc2Rsb2NrZWQwIEdyaWQgVGFibGUgNyBDb2xvcmZ1bCBBY2NlbnQgNDtcbHNkcHJpb3JpdHk0NiBcbHNkbG9ja2VkMCBHcmlkIFRhYmxlIDEgTGlnaHQgQWNjZW50IDU7XGxzZHByaW9yaXR5NDcgXGxzZGxvY2tlZDAgR3JpZCBUYWJsZSAyIEFjY2VudCA1Ow0KXGxzZHByaW9yaXR5NDggXGxzZGxvY2tlZDAgR3JpZCBUYWJsZSAzIEFjY2VudCA1O1xsc2Rwcmlvcml0eTQ5IFxsc2Rsb2NrZWQwIEdyaWQgVGFibGUgNCBBY2NlbnQgNTtcbHNkcHJpb3JpdHk1MCBcbHNkbG9ja2VkMCBHcmlkIFRhYmxlIDUgRGFyayBBY2NlbnQgNTtcbHNkcHJpb3JpdHk1MSBcbHNkbG9ja2VkMCBHcmlkIFRhYmxlIDYgQ29sb3JmdWwgQWNjZW50IDU7DQpcbHNkcHJpb3JpdHk1MiBcbHNkbG9ja2VkMCBHcmlkIFRhYmxlIDcgQ29sb3JmdWwgQWNjZW50IDU7XGxzZHByaW9yaXR5NDYgXGxzZGxvY2tlZDAgR3JpZCBUYWJsZSAxIExpZ2h0IEFjY2VudCA2O1xsc2Rwcmlvcml0eTQ3IFxsc2Rsb2NrZWQwIEdyaWQgVGFibGUgMiBBY2NlbnQgNjtcbHNkcHJpb3JpdHk0OCBcbHNkbG9ja2VkMCBHcmlkIFRhYmxlIDMgQWNjZW50IDY7DQpcbHNkcHJpb3JpdHk0OSBcbHNkbG9ja2VkMCBHcmlkIFRhYmxlIDQgQWNjZW50IDY7XGxzZHByaW9yaXR5NTAgXGxzZGxvY2tlZDAgR3JpZCBUYWJsZSA1IERhcmsgQWNjZW50IDY7XGxzZHByaW9yaXR5NTEgXGxzZGxvY2tlZDAgR3JpZCBUYWJsZSA2IENvbG9yZnVsIEFjY2VudCA2O1xsc2Rwcmlvcml0eTUyIFxsc2Rsb2NrZWQwIEdyaWQgVGFibGUgNyBDb2xvcmZ1bCBBY2NlbnQgNjsNClxsc2Rwcmlvcml0eTQ2IFxsc2Rsb2NrZWQwIExpc3QgVGFibGUgMSBMaWdodDtcbHNkcHJpb3JpdHk0NyBcbHNkbG9ja2VkMCBMaXN0IFRhYmxlIDI7XGxzZHByaW9yaXR5NDggXGxzZGxvY2tlZDAgTGlzdCBUYWJsZSAzO1xsc2Rwcmlvcml0eTQ5IFxsc2Rsb2NrZWQwIExpc3QgVGFibGUgNDtcbHNkcHJpb3JpdHk1MCBcbHNkbG9ja2VkMCBMaXN0IFRhYmxlIDUgRGFyazsNClxsc2Rwcmlvcml0eTUxIFxsc2Rsb2NrZWQwIExpc3QgVGFibGUgNiBDb2xvcmZ1bDtcbHNkcHJpb3JpdHk1MiBcbHNkbG9ja2VkMCBMaXN0IFRhYmxlIDcgQ29sb3JmdWw7XGxzZHByaW9yaXR5NDYgXGxzZGxvY2tlZDAgTGlzdCBUYWJsZSAxIExpZ2h0IEFjY2VudCAxO1xsc2Rwcmlvcml0eTQ3IFxsc2Rsb2NrZWQwIExpc3QgVGFibGUgMiBBY2NlbnQgMTtcbHNkcHJpb3JpdHk0OCBcbHNkbG9ja2VkMCBMaXN0IFRhYmxlIDMgQWNjZW50IDE7DQpcbHNkcHJpb3JpdHk0OSBcbHNkbG9ja2VkMCBMaXN0IFRhYmxlIDQgQWNjZW50IDE7XGxzZHByaW9yaXR5NTAgXGxzZGxvY2tlZDAgTGlzdCBUYWJsZSA1IERhcmsgQWNjZW50IDE7XGxzZHByaW9yaXR5NTEgXGxzZGxvY2tlZDAgTGlzdCBUYWJsZSA2IENvbG9yZnVsIEFjY2VudCAxO1xsc2Rwcmlvcml0eTUyIFxsc2Rsb2NrZWQwIExpc3QgVGFibGUgNyBDb2xvcmZ1bCBBY2NlbnQgMTsNClxsc2Rwcmlvcml0eTQ2IFxsc2Rsb2NrZWQwIExpc3QgVGFibGUgMSBMaWdodCBBY2NlbnQgMjtcbHNkcHJpb3JpdHk0NyBcbHNkbG9ja2VkMCBMaXN0IFRhYmxlIDIgQWNjZW50IDI7XGxzZHByaW9yaXR5NDggXGxzZGxvY2tlZDAgTGlzdCBUYWJsZSAzIEFjY2VudCAyO1xsc2Rwcmlvcml0eTQ5IFxsc2Rsb2NrZWQwIExpc3QgVGFibGUgNCBBY2NlbnQgMjsNClxsc2Rwcmlvcml0eTUwIFxsc2Rsb2NrZWQwIExpc3QgVGFibGUgNSBEYXJrIEFjY2VudCAyO1xsc2Rwcmlvcml0eTUxIFxsc2Rsb2NrZWQwIExpc3QgVGFibGUgNiBDb2xvcmZ1bCBBY2NlbnQgMjtcbHNkcHJpb3JpdHk1MiBcbHNkbG9ja2VkMCBMaXN0IFRhYmxlIDcgQ29sb3JmdWwgQWNjZW50IDI7XGxzZHByaW9yaXR5NDYgXGxzZGxvY2tlZDAgTGlzdCBUYWJsZSAxIExpZ2h0IEFjY2VudCAzOw0KXGxzZHByaW9yaXR5NDcgXGxzZGxvY2tlZDAgTGlzdCBUYWJsZSAyIEFjY2VudCAzO1xsc2Rwcmlvcml0eTQ4IFxsc2Rsb2NrZWQwIExpc3QgVGFibGUgMyBBY2NlbnQgMztcbHNkcHJpb3JpdHk0OSBcbHNkbG9ja2VkMCBMaXN0IFRhYmxlIDQgQWNjZW50IDM7XGxzZHByaW9yaXR5NTAgXGxzZGxvY2tlZDAgTGlzdCBUYWJsZSA1IERhcmsgQWNjZW50IDM7DQpcbHNkcHJpb3JpdHk1MSBcbHNkbG9ja2VkMCBMaXN0IFRhYmxlIDYgQ29sb3JmdWwgQWNjZW50IDM7XGxzZHByaW9yaXR5NTIgXGxzZGxvY2tlZDAgTGlzdCBUYWJsZSA3IENvbG9yZnVsIEFjY2VudCAzO1xsc2Rwcmlvcml0eTQ2IFxsc2Rsb2NrZWQwIExpc3QgVGFibGUgMSBMaWdodCBBY2NlbnQgNDtcbHNkcHJpb3JpdHk0NyBcbHNkbG9ja2VkMCBMaXN0IFRhYmxlIDIgQWNjZW50IDQ7DQpcbHNkcHJpb3JpdHk0OCBcbHNkbG9ja2VkMCBMaXN0IFRhYmxlIDMgQWNjZW50IDQ7XGxzZHByaW9yaXR5NDkgXGxzZGxvY2tlZDAgTGlzdCBUYWJsZSA0IEFjY2VudCA0O1xsc2Rwcmlvcml0eTUwIFxsc2Rsb2NrZWQwIExpc3QgVGFibGUgNSBEYXJrIEFjY2VudCA0O1xsc2Rwcmlvcml0eTUxIFxsc2Rsb2NrZWQwIExpc3QgVGFibGUgNiBDb2xvcmZ1bCBBY2NlbnQgNDsNClxsc2Rwcmlvcml0eTUyIFxsc2Rsb2NrZWQwIExpc3QgVGFibGUgNyBDb2xvcmZ1bCBBY2NlbnQgNDtcbHNkcHJpb3JpdHk0NiBcbHNkbG9ja2VkMCBMaXN0IFRhYmxlIDEgTGlnaHQgQWNjZW50IDU7XGxzZHByaW9yaXR5NDcgXGxzZGxvY2tlZDAgTGlzdCBUYWJsZSAyIEFjY2VudCA1O1xsc2Rwcmlvcml0eTQ4IFxsc2Rsb2NrZWQwIExpc3QgVGFibGUgMyBBY2NlbnQgNTsNClxsc2Rwcmlvcml0eTQ5IFxsc2Rsb2NrZWQwIExpc3QgVGFibGUgNCBBY2NlbnQgNTtcbHNkcHJpb3JpdHk1MCBcbHNkbG9ja2VkMCBMaXN0IFRhYmxlIDUgRGFyayBBY2NlbnQgNTtcbHNkcHJpb3JpdHk1MSBcbHNkbG9ja2VkMCBMaXN0IFRhYmxlIDYgQ29sb3JmdWwgQWNjZW50IDU7XGxzZHByaW9yaXR5NTIgXGxzZGxvY2tlZDAgTGlzdCBUYWJsZSA3IENvbG9yZnVsIEFjY2VudCA1Ow0KXGxzZHByaW9yaXR5NDYgXGxzZGxvY2tlZDAgTGlzdCBUYWJsZSAxIExpZ2h0IEFjY2VudCA2O1xsc2Rwcmlvcml0eTQ3IFxsc2Rsb2NrZWQwIExpc3QgVGFibGUgMiBBY2NlbnQgNjtcbHNkcHJpb3JpdHk0OCBcbHNkbG9ja2VkMCBMaXN0IFRhYmxlIDMgQWNjZW50IDY7XGxzZHByaW9yaXR5NDkgXGxzZGxvY2tlZDAgTGlzdCBUYWJsZSA0IEFjY2VudCA2Ow0KXGxzZHByaW9yaXR5NTAgXGxzZGxvY2tlZDAgTGlzdCBUYWJsZSA1IERhcmsgQWNjZW50IDY7XGxzZHByaW9yaXR5NTEgXGxzZGxvY2tlZDAgTGlzdCBUYWJsZSA2IENvbG9yZnVsIEFjY2VudCA2O1xsc2Rwcmlvcml0eTUyIFxsc2Rsb2NrZWQwIExpc3QgVGFibGUgNyBDb2xvcmZ1bCBBY2NlbnQgNjtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIE1lbnRpb247DQpcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIFNtYXJ0IEh5cGVybGluaztcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIEhhc2h0YWc7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBVbnJlc29sdmVkIE1lbnRpb247XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBTbWFydCBMaW5rO319e1wqXGRhdGFzdG9yZSAwMTA1MDAwMA0KMDIwMDAwMDAxODAwMDAwMDRkNzM3ODZkNmMzMjJlNTM0MTU4NTg0ZDRjNTI2NTYxNjQ2NTcyMmUzNjJlMzAwMDAwMDAwMDAwMDAwMDAwMDAwMDBlMDAwMA0KZDBjZjExZTBhMWIxMWFlMTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM2UwMDAzMDBmZWZmMDkwMDA2MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAxMDAwMDAwMDEwMDAwMDAwMDAwMDAwMDAwMTAwMDAwMDIwMDAwMDAwMTAwMDAwMGZlZmZmZmZmMDAwMDAwMDAwMDAwMDAwMGZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmDQpmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYNCmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZg0KZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmDQpmZmZmZmZmZmZmZmZmZmZmZmRmZmZmZmYwNDAwMDAwMGZlZmZmZmZmMDUwMDAwMDBmZWZmZmZmZmZlZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYNCmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZg0KZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmDQpmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYNCmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmNTIwMDZmMDA2ZjAwNzQwMDIwMDA0NTAwNmUwMDc0MDA3MjAwNzkwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAxNjAwMDUwMGZmZmZmZmZmZmZmZmZmZmYwMTAwMDAwMDBjNmFkOTg4OTJmMWQ0MTFhNjVmMDA0MDk2MzI1MWU1MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwNTAyOA0KNTgzMDBmMWNkNzAxMDMwMDAwMDBjMDAyMDAwMDAwMDAwMDAwNGQwMDczMDA2ZjAwNDQwMDYxMDA3NDAwNjEwMDUzMDA3NDAwNmYwMDcyMDA2NTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAxYTAwMDEwMWZmZmZmZmZmZmZmZmZmZmYwMjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA1MDI4NTgzMDBmMWNkNzAxDQo1MDI4NTgzMDBmMWNkNzAxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwNDcwMDVhMDAzMjAwYzIwMDRlMDBkNTAwNTYwMDQ5MDAzMDAwZDQwMGQ2MDBjZjAwZDIwMDU3MDBkMjAwNTcwMGQ5MDBjYzAwNGMwMGQ4MDA0NjAwYzAwMDNkMDAzZDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAzMjAwMDEwMWZmZmZmZmZmZmZmZmZmZmYwMzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA1MDI4NTgzMDBmMWMNCmQ3MDE1MDI4NTgzMDBmMWNkNzAxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwNDkwMDc0MDA2NTAwNmQwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwYTAwMDIwMWZmZmZmZmZmMDQwMDAwMDBmZmZmZmZmZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMA0KMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZTAxMDAwMDAwMDAwMDAwMDEwMDAwMDAwMjAwMDAwMDAzMDAwMDAwMDQwMDAwMDBmZWZmZmZmZjA2MDAwMDAwMDcwMDAwMDAwODAwMDAwMDA5MDAwMDAwMGEwMDAwMDBmZWZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmDQpmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYNCmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZg0KZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmDQpmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmM2MzZjc4NmQ2YzIwNzY2NTcyNzM2OTZmNmUzZDIyMzEyZTMwMjIyMDY1NmU2MzZmNjQ2OTZlNjczZDIyNTU1NDQ2MmQzODIyMjA3Mzc0NjE2ZTY0NjE2YzZmNmU2NTNkMjI2ZTZmMjIzZjNlM2M2MjNhNTM2Zjc1NzI2MzY1NzMyMDUzNjU2YzY1NjM3NDY1NjQ1Mzc0Nzk2YzY1M2QyMjVjNDE1MDQxMmU1ODUzNGMyMjIwNTM3NDc5NmMNCjY1NGU2MTZkNjUzZDIyNDE1MDQxMjIyMDc4NmQ2YzZlNzMzYTYyM2QyMjY4NzQ3NDcwM2EyZjJmNzM2MzY4NjU2ZDYxNzMyZTZmNzA2NTZlNzg2ZDZjNjY2ZjcyNmQ2MTc0NzMyZTZmNzI2NzJmNmY2NjY2Njk2MzY1NDQ2ZjYzNzU2ZDY1NmU3NDJmMzIzMDMwMzYyZjYyNjk2MjZjNjk2ZjY3NzI2MTcwNjg3OTIyMjA3ODZkNmM2ZTczM2QyMjY4NzQ3NDcwM2EyZjJmNzM2MzY4NjU2ZDYxNzMyZTZmNzA2NTZlNzg2ZDZjNjY2ZjcyNmQ2MTc0NzMyZQ0KNmY3MjY3MmY2ZjY2NjY2OTYzNjU0NDZmNjM3NTZkNjU2ZTc0MmYzMjMwMzAzNjJmNjI2OTYyNmM2OTZmNjc3MjYxNzA2ODc5MjIzZTNjMmY2MjNhNTM2Zjc1NzI2MzY1NzMzZTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAzYzNmNzg2ZDZjMjA3NjY1NzI3MzY5NmY2ZTNkMjIzMTJlMzAyMjIwNjU2ZTYzNmY2NDY5DQo2ZTY3M2QyMjU1NTQ0NjJkMzgyMjIwNzM3NDYxNmU2NDYxNmM2ZjZlNjUzZDIyNmU2ZjIyM2YzZTBkMGEzYzY0NzMzYTY0NjE3NDYxNzM3NDZmNzI2NTQ5NzQ2NTZkMjA2NDczM2E2OTc0NjU2ZDQ5NDQzZDIyN2IzMzM3MzIzMjM5MzczMTM5MmQzNDM4MzUzNTJkMzQ0NDM2NDIyZDQxNDY0MzM5MmQzNjQzMzkzNjQ1MzY0MzMyNDYzODMxMzY3ZDIyMjA3ODZkNmM2ZTczM2E2NDczM2QyMjY4NzQ3NDcwM2EyZjJmNzM2MzY4NjU2ZDYxNzMyZTZmNzANCjY1NmU3ODZkNmM2NjZmNzI2ZDYxNzQ3MzJlNmY3MjY3MmY2ZjY2NjY2OTYzNjU0NDZmNjM3NTZkNjU2ZTc0MmYzMjMwMzAzNjJmNjM3NTczNTAwMDcyMDA2ZjAwNzAwMDY1MDA3MjAwNzQwMDY5MDA2NTAwNzMwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAxNjAwMDIwMGZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZjAwMDAwMDAwMDAwMA0KMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDUwMDAwMDA1NTAxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZjAwMDAwMDAwDQowMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZjAwMDANCjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZg0KMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwNzQ2ZjZkNTg2ZDZjMjIzZTNjNjQ3MzNhNzM2MzY4NjU2ZDYxNTI2NTY2NzMzZTNjNjQ3MzNhNzM2MzY4NjU2ZDYxNTI2NTY2MjA2NDczM2E3NTcyNjkzZDIyNjg3NDc0NzAzYTJmMmY3MzYzNjg2NTZkNjE3MzJlNmY3MDY1NmU3ODZkNmM2NjZmNzI2ZDYxNzQ3MzJlNmY3MjY3DQoyZjZmNjY2NjY5NjM2NTQ0NmY2Mzc1NmQ2NTZlNzQyZjMyMzAzMDM2MmY2MjY5NjI2YzY5NmY2NzcyNjE3MDY4NzkyMjJmM2UzYzJmNjQ3MzNhNzM2MzY4NjU2ZDYxNTI2NTY2NzMzZTNjMmY2NDczM2E2NDYxNzQ2MTczNzQ2ZjcyNjU0OTc0NjU2ZDNlMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDANCjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMA0KMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwDQowMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDEwNTAwMDAwMDAwMDAwMH19</record_binary_data>
      <record_plain_text>[N] CANCELLATION NOTICE  Washington Crossing Field Services, LLC     [C] Containing the Local Rates Applicable to the  Interstate Transportation by Trophy Pipeline of    CRUDE PETROLEUM         Rates herein are governed by Rules and Regulations provided in Washington Crossing Field Services, LLC's F.E.R.C. No. 1.0.0 and reissues thereof.      The matter published herein will have no adverse effect on the quality of the human environment.      Filed in accordance with 18 C.F.R. [W]   341.5 (Cancellation of Tariffs).  Effective April 1, 2021, the assets of Washington Crossing Field Services, LLC became the assets of Trophy Pipeline, LLC. Refer to Trophy Pipeline, LLC's F.E.R.C. No. 2.0.0 for further rates and routing.  342.2(a) - Establishing initial rates.      Special Permission [N] Requested.  Issued on [W] 13 less than thirty days' notice under authority of 18 C.F.R   341.14 (Special Permission).  This tariff publication is conditionally accepted subject to refund pending a 30-day review period.      ISSUED: March 18, 2021                                                                 EFFECTIVE: April 1, 2021      Issued and Compiled by:    Floyd Hammond  Washington Crossing Field Services, LLC  [W] 2901 Via Fortuna5707 Southwest Parkway  [W] Building 1, Suite 600275  Austin, TX [W] 7874678735   Telephone: (737) 300-4700  [C]  COMMITTED SHIPPER RATES (1) (2) (5)  Rates in Cents Per Barrel of 42 U.S. Gallons From To Acreage Dedication Rate         Origins in Lea   County, NM (6) (7) Oryx Delaware Oil Transport LLC,   Lea County, NM 25,000 or Greater  24,999 to 10,000  0-9,999 [U] $0.55  [U] $0.60  [U] $0.65  Plains Pipeline L.P., Lea County, NM 25,000 or Greater  24,999 to 10,000  0-9,999 [U] $0.55  [U] $0.60  [U] $0.65  Sunoco Pipeline L.P.,  Lea County, NM 25,000 or Greater  24,999 to 10,000  0-9,999 [U] $0.55  [U] $0.60  [U] $0.65  SCM Crude LLC,  Lea County, NM 25,000 or Greater  24,999 to 10,000  0-9,999 [U] $0.55  [U] $0.60  [U] $0.65    UNCOMMITTED SHIPPER RATES (3) (4) (5)  Rates in Cents Per Barrel of 42 U.S. Gallons From To Rate       Origins in Lea   County, NM (6) (7) Oryx Delaware Oil   Transport LLC,   Lea County, NM       [U] $0.70  Plains Pipeline L.P.,   Lea County, NM   Sunoco Pipeline L.P.,  Lea County, NM   SCM Crude LLC,  Lea County, NM    NOTES    (1) Committed Shipper Rates are available to Committed Shippers who executed a Transportation Service Agreement with Carrier to make an acreage dedication as part of an open season.      (2) A Pipeline Loss Allowance of [U] one-tenth of one percent (0.01%) shall apply to quantities tendered by a Committed Shipper at an Origin Point(s) for delivery to a Delivery Point(s) per the terms of the applicable Transportation Service Agreement.    (3) A Pipeline Loss Allowance of [U] two-tenths of one percent (0.02%) shall apply to quantities tendered by an Uncommitted Shipper at an Origin Point(s) for delivery to a Delivery Point(s).    (4) During periods of Prorationing, each Uncommitted Shipper Rate per barrel shall at all times be [W] $0.54, which is one cent ($0.01) below the lowest prevailing Committed Shipper Rate for each respective service route.    (5) All rates are subject to adjustment each July 1 in accordance with 18 C.F.R.   342.3 or any successor methodology adopted by the Federal Energy Regulatory Commission.    (6) LACTs located in Sections 5, 8, 9, 10, 17, 20, 21, 29, 31, 32, 33 and 34, Township 25S, Range 36E, Lea County, New Mexico.    (7) LACTs located in Sections 2-11, 14, 15, 16 and 21-35, Township 26S, Range 36E, Lea County, New Mexico.                                    EXPLANATION OF REFERENCE MARKS:    [N] New  [W] Change in Wording Only  [C]  Cancel        Washington Crossing Field Services, LLC  F.E.R.C. No. [W] 2.1.02.0.1  Page 2 of 3        FERC ICA OIL TARIFF F.E.R.C. No. 2.1.0  (Cancels F.E.R.C. No. 2.0.1)</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>727</filing_id>
      <filing_title>WCFS Cancellation Notice Filing</filing_title>
      <filing_type>880</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2021-04-01</current_effective_date>
      <ferc_order_date>2021-04-23</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
  </ferc_filing_data>
</Document>