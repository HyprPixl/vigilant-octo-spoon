<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Document xmlns="http://ferc.gov/etariffExport.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ferc_filing_data>
    <schema_version>2</schema_version>
    <company_id>C010673</company_id>
    <lead_applicant_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
    <tariff_id>2</tariff_id>
    <tariff_title>Rate Schedules and Agreements</tariff_title>
    <tariff_export_date>2025-09-16T20:45Z</tariff_export_date>
    <export_schema_version>2</export_schema_version>
    <record_data>
      <record_id>2</record_id>
      <option_code>A</option_code>
      <record_title>Shared Facilities Agreement</record_title>
      <record_content_desc>Shared Facilities Agmt</record_content_desc>
      <record_version_num>1.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>8388608</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2021-01-26</proposed_effective_date>
      <priority_order>1000000000</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data>e1xydGYxXGFkZWZsYW5nMTAyNVxhbnNpXGFuc2ljcGcxMjUyXHVjMVxhZGVmZjFcZGVmZjBcc3RzaGZkYmNoMVxzdHNoZmxvY2g0M1xzdHNoZmhpY2g0M1xzdHNoZmJpMVxkZWZsYW5nMTAzM1xkZWZsYW5nZmUxMDMzXHRoZW1lbGFuZzEwMzNcdGhlbWVsYW5nZmUwXHRoZW1lbGFuZ2NzMHtcZm9udHRibHtcZjBcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDIwNjAzMDUwNDA1MDIwMzA0fVRpbWVzIE5ldyBSb21hbjt9e1xmMVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwYjA2MDQwMjAyMDIwMjAyMDR9QXJpYWw7fQ0Ke1xmMlxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDBcZnBycTF7XCpccGFub3NlIDAyMDcwMzA5MDIwMjA1MDIwNDA0fUNvdXJpZXIgTmV3O317XGYzXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyXGZwcnEye1wqXHBhbm9zZSAwNTA1MDEwMjAxMDcwNjAyMDUwN31TeW1ib2w7fXtcZjRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNjA0MDIwMjAyMDIwMjA0fUhlbHZldGljYTt9DQp7XGY1XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MFxmcHJxMXtcKlxwYW5vc2UgMDIwNzA0MDkwMjAyMDUwMjA0MDR9Q291cmllcjt9e1xmNlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwMjA2MDMwNDA1MDUwMjAzMDR9VG1zIFJtbjt9e1xmN1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwYjA2MDQwMjAyMDIwMzAyMDR9SGVsdjt9DQp7XGY4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjA0MDUwMzA2MDUwNjAyMDMwNH1OZXcgWW9yazt9e1xmOVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDAwMDAwMDAwMDAwMDAwMDAwMDB9U3lzdGVtO317XGYxMFxmYmlkaSBcZm5pbFxmY2hhcnNldDJcZnBycTJ7XCpccGFub3NlIDA1MDAwMDAwMDAwMDAwMDAwMDAwfVdpbmdkaW5nczt9DQp7XGYxMVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTI4XGZwcnExe1wqXHBhbm9zZSAwMjAyMDYwOTA0MDIwNTA4MDMwNH1NUyBNaW5jaG97XCpcZmFsdCBZdSBHb3RoaWMgVUl9O317XGYxMlxmYmlkaSBcZm5pbFxmY2hhcnNldDEyOVxmcHJxMXtcKlxwYW5vc2UgMDIwMzA2MDAwMDAxMDEwMTAxMDF9QmF0YW5ne1wqXGZhbHQgXCdiOVwnZDlcJ2M1XCdjMX07fQ0Ke1xmMTNcZmJpZGkgXGZuaWxcZmNoYXJzZXQxMzRcZnBycTJ7XCpccGFub3NlIDAyMDEwNjAwMDMwMTAxMDEwMTAxfVNpbVN1bntcKlxmYWx0IFwnY2JcJ2NlXCdjY1wnZTV9O317XGYxNFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTM2XGZwcnEye1wqXHBhbm9zZSAwMjAyMDUwMDAwMDAwMDAwMDAwMH1QTWluZ0xpVXtcKlxmYWx0IFwnYjdcJzczXCdiMlwnZDNcJ2E5XCdmYVwnYzVcJ2U5fTt9DQp7XGYxNVxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDEyOFxmcHJxMXtcKlxwYW5vc2UgMDIwYjA2MDkwNzAyMDUwODAyMDR9TVMgR290aGlje1wqXGZhbHQgXCc4MlwnNmNcJzgyXCc3MiBcJzgzXCc1M1wnODNcJzU2XCc4M1wnNjJcJzgzXCc0ZX07fXtcZjE2XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTI5XGZwcnExe1wqXHBhbm9zZSAwMjBiMDYwMDAwMDEwMTAxMDEwMX1Eb3R1bXtcKlxmYWx0IFwnYjVcJ2I4XCdiZlwnZjJ9O30NCntcZjE3XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTM0XGZwcnExe1wqXHBhbm9zZSAwMjAxMDYwOTA2MDEwMTAxMDEwMX1TaW1IZWl7XCpcZmFsdCBcJ2JhXCdkYVwnY2NcJ2U1fTt9e1xmMThcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxMzZcZnBycTF7XCpccGFub3NlIDAyMDIwNTA5MDAwMDAwMDAwMDAwfU1pbmdMaVV7XCpcZmFsdCBcJ2IyXCdkM1wnYTlcJ2ZhXCdjNVwnZTl9O30NCntcZjE5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxMjhcZnBycTF7XCpccGFub3NlIDAyMDIwNjA5MDQwMzA1MDgwMzA1fU1pbmNob3tcKlxmYWx0IFwnOTZcJ2JlXCc5MlwnYTl9O317XGYyMFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTI5XGZwcnExe1wqXHBhbm9zZSAwMjBiMDYwMDAwMDEwMTAxMDEwMX1HdWxpbXtcKlxmYWx0IFwnYjFcJ2JjXCdiOFwnYjJ9O30NCntcZjIxXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjA0MDYwNDA1MDUwNTAyMDMwNH1DZW50dXJ5O317XGYyMlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjIyXGZwcnEye1wqXHBhbm9zZSAwMjAyMDYwMzA1MDQwNTAyMDMwNH1BbmdzYW5hIE5ldzt9e1xmMjNcZmJpZGkgXGZyb21hblxmY2hhcnNldDIyMlxmcHJxMntcKlxwYW5vc2UgMDIwYjAzMDQwMjAyMDIwMjAyMDR9Q29yZGlhIE5ldzt9DQp7XGYyNFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MVxmcHJxMntcKlxwYW5vc2UgMDIwNDA1MDMwNTAyMDMwMzAyMDJ9TWFuZ2FsO317XGYyNVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MVxmcHJxMntcKlxwYW5vc2UgMDIwYjA2MDQwMjAyMDIwMjAyMDR9TGF0aGE7fXtcZjI2XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMTBhMDUwMjA1MDMwNjAzMDMwM31TeWxmYWVuO30NCntcZjI3XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxXGZwcnEye1wqXHBhbm9zZSAwMjBiMDUwMjA0MDIwNDAyMDIwM31WcmluZGE7fXtcZjI4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxXGZwcnEye1wqXHBhbm9zZSAwMjBiMDUwMjA0MDIwNDAyMDIwM31SYWF2aTt9e1xmMjlcZmJpZGkgXGZyb21hblxmY2hhcnNldDFcZnBycTJ7XCpccGFub3NlIDAyMGIwNTAyMDQwMjA0MDIwMjAzfVNocnV0aTt9DQp7XGYzMFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MVxmcHJxMntcKlxwYW5vc2UgMDAwMDA0MDAwMDAwMDAwMDAwMDB9U2VuZG55YTt9e1xmMzFcZmJpZGkgXGZyb21hblxmY2hhcnNldDFcZnBycTJ7XCpccGFub3NlIDAyMGIwNTAyMDQwMjA0MDIwMjAzfUdhdXRhbWk7fXtcZjMyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxXGZwcnEye1wqXHBhbm9zZSAwMjBiMDUwMjA0MDIwNDAyMDIwM31UdW5nYTt9DQp7XGYzM1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MVxmcHJxMntcKlxwYW5vc2UgMDMwODA2MDAwMDAwMDAwMDAwMDB9RXN0cmFuZ2VsbyBFZGVzc2E7fXtcZjM0XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjA0MDUwMzA1MDQwNjAzMDIwNH1DYW1icmlhIE1hdGg7fQ0Ke1xmMzVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDEyOFxmcHJxMntcKlxwYW5vc2UgMDIwYjA0MDAwMDAwMDAwMDAwMDB9WXUgR290aGlje1wqXGZhbHQgXCc5ZlwnZTBcJzgzXCc1M1wnODNcJzU2XCc4M1wnNjJcJzgzXCc0ZX07fXtcZjM2XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTM0XGZwcnExe1wqXHBhbm9zZSAwMjAxMDYwMDAzMDEwMTAxMDEwMX1EZW5nWGlhbntcKlxmYWx0IFwnYjVcJ2M4XCdjZlwnZGZ9O30NCntcZjM3XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxMjhcZnBycTJ7XCpccGFub3NlIDAyMGIwNjA0MDIwMjAyMDIwMjA0fUFyaWFsIFVuaWNvZGUgTVM7fXtcZjM4XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBmMDMwMjAyMDIwNDAzMDIwNH1DYWxpYnJpIExpZ2h0O317XGYzOVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwZjA1MDIwMjAyMDQwMzAyMDR9Q2FsaWJyaTt9DQp7XGY0MFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDAwMDAwMDAwMDAwMDAwMDAwMDB9VGFob21hO317XGY0MVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDAwMDAwMDAwMDAwMDAwMDAwMDB9UGFsYXRpbm8gTGlub3R5cGU7fXtcZjQyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMDAwMDAwMDAwMDAwMDAwMDAwMH1DYW1icmlhO30NCntcZjQzXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjAyMDQwNDAzMDMwMTAxMDgwM31HYXJhbW9uZDt9e1xmNDRcZmJpZGkgXGZzY3JpcHRcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMzBmMDcwMjAzMDMwMjAyMDIwNH1Db21pYyBTYW5zIE1TO317XGY0NVxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDBcZnBycTF7XCpccGFub3NlIDAyMGIwNjA5MDIwMjA0MDMwMjA0fUNvbnNvbGFzO30NCntcZjQ2XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEwe1wqXHBhbm9zZSAwMjAyMDgwMzA3MDUwNTAyMDMwNH1UaW1lcyBOZXcgUm9tYW4gQm9sZDt9e1xmNDdcZmJpZGkgXGZyb21hblxmY2hhcnNldDEzNlxmcHJxMntcKlxwYW5vc2UgMDIwMjA1MDAwMDAwMDAwMDAwMDB9TWluZ0xpVS1FeHRCO30NCntcZjQ4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjA0MDUwMzA1MDIwMTAyMDIwM31BZG9iZSBEZXZhbmFnYXJpO317XGY0OVxmYmlkaSBcZm5pbFxmY2hhcnNldDJcZnBycTJ7XCpccGFub3NlIDAwMDAwMDAwMDAwMDAwMDAwMDAwfU1hcmxldHQ7fXtcZjUwXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMGEwNDAyMDEwMjAyMDIwNH1BcmlhbCBCbGFjazt9DQp7XGY1MVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwYjA1MDIwNDAyMDQwMjAyMDN9QmFobnNjaHJpZnQgTGlnaHQ7fXtcZjUyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDUwMjA0MDIwNDAyMDIwM31CYWhuc2NocmlmdCBTZW1pTGlnaHQ7fQ0Ke1xmNTNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNTAyMDQwMjA0MDIwMjAzfUJhaG5zY2hyaWZ0O317XGY1NFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwYjA1MDIwNDAyMDQwMjAyMDN9QmFobnNjaHJpZnQgU2VtaUJvbGQ7fQ0Ke1xmNTVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNTAyMDQwMjA0MDIwMjAzfUJhaG5zY2hyaWZ0IExpZ2h0IFNlbWlDb25kZW5zZWQ7fXtcZjU2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDUwMjA0MDIwNDAyMDIwM31CYWhuc2NocmlmdCBTZW1pTGlnaHQgU2VtaUNvbmRlO30NCntcZjU3XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDUwMjA0MDIwNDAyMDIwM31CYWhuc2NocmlmdCBTZW1pQ29uZGVuc2VkO317XGY1OFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwYjA1MDIwNDAyMDQwMjAyMDN9QmFobnNjaHJpZnQgU2VtaUJvbGQgU2VtaUNvbmRlbjt9DQp7XGY1OVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwYjA1MDIwNDAyMDQwMjAyMDN9QmFobnNjaHJpZnQgTGlnaHQgQ29uZGVuc2VkO317XGY2MFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwYjA1MDIwNDAyMDQwMjAyMDN9QmFobnNjaHJpZnQgU2VtaUxpZ2h0IENvbmRlbnNlZDt9DQp7XGY2MVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwYjA1MDIwNDAyMDQwMjAyMDN9QmFobnNjaHJpZnQgQ29uZGVuc2VkO317XGY2MlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwYjA1MDIwNDAyMDQwMjAyMDN9QmFobnNjaHJpZnQgU2VtaUJvbGQgQ29uZGVuc2VkO30NCntcZjYzXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBlMDUwMjAzMDMwMzAyMDIwNH1DYW5kYXJhO317XGY2NFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwZTA1MDIwMzAzMDMwMjAyMDR9Q2FuZGFyYSBMaWdodDt9e1xmNjVcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDMwNjAyMDUwMzA2MDMwMzAzfUNvbnN0YW50aWE7fQ0Ke1xmNjZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNTAzMDIwMjA0MDIwMjA0fUNvcmJlbDt9e1xmNjdcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwMzAzMDIwMjA0MDIwMjA0fUNvcmJlbCBMaWdodDt9e1xmNjhcZmJpZGkgXGZuaWxcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjAwMDAwMDAwMDAwMDAwMDAwMH1FYnJpbWE7fQ0Ke1xmNjlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNjAzMDIwMTAyMDIwMjA0fUZyYW5rbGluIEdvdGhpYyBNZWRpdW07fXtcZjcwXGZiaWRpIFxmZGVjb3JcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwNDA0MDYwNTA1MTAwMjAyMGQwMn1HYWJyaW9sYTt9e1xmNzFcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNTAyMDQwMjA0MDIwMjAzfUdhZHVnaTt9DQp7XGY3MlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwNDA1MDIwNTA0MDUwMjAzMDN9R2VvcmdpYTt9e1xmNzNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwODA2MDMwOTAyMDUwMjA0fUltcGFjdDt9e1xmNzRcZmJpZGkgXGZzY3JpcHRcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMzA4MDQwMjAwMDUwMDAwMDAwMH1JbmsgRnJlZTt9DQp7XGY3NVxmYmlkaSBcZm5pbFxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDAwMDAwMDAwMDAwMDAwMDAwfUphdmFuZXNlIFRleHQ7fXtcZjc2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDUwMjA0MDIwNDAyMDIwM31MZWVsYXdhZGVlIFVJO317XGY3N1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwYjA0MDIwNDAyMDQwMjAyMDN9TGVlbGF3YWRlZSBVSSBTZW1pbGlnaHQ7fQ0Ke1xmNzhcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQwXGZwcnExe1wqXHBhbm9zZSAwMjBiMDYwOTA0MDUwNDAyMDIwNH1MdWNpZGEgQ29uc29sZTt9e1xmNzlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNjAyMDMwNTA0MDIwMjA0fUx1Y2lkYSBTYW5zIFVuaWNvZGU7fQ0Ke1xmODBcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDEyOVxmcHJxMntcKlxwYW5vc2UgMDIwYjA1MDMwMjAwMDAwMjAwMDR9TWFsZ3VuIEdvdGhpYzt9e1xmODFcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDEyOVxmcHJxMntcKlxwYW5vc2UgMDIwYjA1MDMwMjAwMDAwMjAwMDR9QE1hbGd1biBHb3RoaWM7fQ0Ke1xmODJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDEyOVxmcHJxMntcKlxwYW5vc2UgMDIwYjA1MDIwNDAyMDQwMjAyMDN9TWFsZ3VuIEdvdGhpYyBTZW1pbGlnaHQ7fXtcZjgzXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxMjhcZnBycTJ7XCpccGFub3NlIDAyMGIwNTAyMDQwMjA0MDIwMjAzfUBNYWxndW4gR290aGljIFNlbWlsaWdodDt9DQp7XGY4NFxmYmlkaSBcZm5pbFxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAxMDEwMTAwMDEwMTAxMDEwMTAxfU1pY3Jvc29mdCBIaW1hbGF5YTt9e1xmODVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDEzNlxmcHJxMntcKlxwYW5vc2UgMDIwYjA2MDQwMzA1MDQwNDAyMDR9TWljcm9zb2Z0IEpoZW5nSGVpO30NCntcZjg2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxMzZcZnBycTJ7XCpccGFub3NlIDAyMGIwNjA0MDMwNTA0MDQwMjA0fUBNaWNyb3NvZnQgSmhlbmdIZWk7fXtcZjg3XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxMzZcZnBycTJ7XCpccGFub3NlIDAyMGIwNjA0MDMwNTA0MDQwMjA0fU1pY3Jvc29mdCBKaGVuZ0hlaSBVSTt9DQp7XGY4OFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTM2XGZwcnEye1wqXHBhbm9zZSAwMjBiMDYwNDAzMDUwNDA0MDIwNH1ATWljcm9zb2Z0IEpoZW5nSGVpIFVJO317XGY4OVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTM2XGZwcnEye1wqXHBhbm9zZSAwMjBiMDMwNDAzMDUwNDA0MDIwNH1NaWNyb3NvZnQgSmhlbmdIZWkgTGlnaHQ7fQ0Ke1xmOTBcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDEzNlxmcHJxMntcKlxwYW5vc2UgMDIwYjAzMDQwMzA1MDQwNDAyMDR9QE1pY3Jvc29mdCBKaGVuZ0hlaSBMaWdodDt9e1xmOTFcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDEzNlxmcHJxMntcKlxwYW5vc2UgMDIwYjAzMDQwMzA1MDQwNDAyMDR9TWljcm9zb2Z0IEpoZW5nSGVpIFVJIExpZ2h0O30NCntcZjkyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxMzZcZnBycTJ7XCpccGFub3NlIDAyMGIwMzA0MDMwNTA0MDQwMjA0fUBNaWNyb3NvZnQgSmhlbmdIZWkgVUkgTGlnaHQ7fXtcZjkzXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDUwMjA0MDIwNDAyMDIwM31NaWNyb3NvZnQgTmV3IFRhaSBMdWU7fQ0Ke1xmOTRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNTAyMDQwMjA0MDIwMjAzfU1pY3Jvc29mdCBQaGFnc1BhO317XGY5NVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwYjA2MDQwMjAyMDIwMjAyMDR9TWljcm9zb2Z0IFNhbnMgU2VyaWY7fQ0Ke1xmOTZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNTAyMDQwMjA0MDIwMjAzfU1pY3Jvc29mdCBUYWkgTGU7fXtcZjk3XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxMzRcZnBycTJ7XCpccGFub3NlIDAyMGIwNTAzMDIwMjA0MDIwMjA0fU1pY3Jvc29mdCBZYUhlaTt9DQp7XGY5OFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTM0XGZwcnEye1wqXHBhbm9zZSAwMjBiMDUwMzAyMDIwNDAyMDIwNH1ATWljcm9zb2Z0IFlhSGVpO317XGY5OVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTM0XGZwcnEye1wqXHBhbm9zZSAwMjBiMDUwMzAyMDIwNDAyMDIwNH1NaWNyb3NvZnQgWWFIZWkgVUk7fQ0Ke1xmMTAwXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxMzRcZnBycTJ7XCpccGFub3NlIDAyMGIwNTAzMDIwMjA0MDIwMjA0fUBNaWNyb3NvZnQgWWFIZWkgVUk7fXtcZjEwMVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTM0XGZwcnEye1wqXHBhbm9zZSAwMjBiMDUwMjA0MDIwNDAyMDIwM31NaWNyb3NvZnQgWWFIZWkgTGlnaHQ7fQ0Ke1xmMTAyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxMzRcZnBycTJ7XCpccGFub3NlIDAyMGIwNTAyMDQwMjA0MDIwMjAzfUBNaWNyb3NvZnQgWWFIZWkgTGlnaHQ7fXtcZjEwM1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTM0XGZwcnEye1wqXHBhbm9zZSAwMjBiMDUwMjA0MDIwNDAyMDIwM31NaWNyb3NvZnQgWWFIZWkgVUkgTGlnaHQ7fQ0Ke1xmMTA0XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxMzRcZnBycTJ7XCpccGFub3NlIDAyMGIwNTAyMDQwMjA0MDIwMjAzfUBNaWNyb3NvZnQgWWFIZWkgVUkgTGlnaHQ7fXtcZjEwNVxmYmlkaSBcZnNjcmlwdFxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAzMDAwNTAwMDAwMDAwMDAwMDAwfU1pY3Jvc29mdCBZaSBCYWl0aTt9DQp7XGYxMDZcZmJpZGkgXGZyb21hblxmY2hhcnNldDEzNlxmcHJxMntcKlxwYW5vc2UgMDIwMjA1MDAwMDAwMDAwMDAwMDB9QE1pbmdMaVUtRXh0Qjt9e1xmMTA3XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxMzZcZnBycTJ7XCpccGFub3NlIDAyMDIwNTAwMDAwMDAwMDAwMDAwfVBNaW5nTGlVLUV4dEI7fQ0Ke1xmMTA4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxMzZcZnBycTJ7XCpccGFub3NlIDAyMDIwNTAwMDAwMDAwMDAwMDAwfUBQTWluZ0xpVS1FeHRCO317XGYxMDlcZmJpZGkgXGZyb21hblxmY2hhcnNldDEzNlxmcHJxMntcKlxwYW5vc2UgMDIwMjA1MDAwMDAwMDAwMDAwMDB9TWluZ0xpVV9IS1NDUy1FeHRCO30NCntcZjExMFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTM2XGZwcnEye1wqXHBhbm9zZSAwMjAyMDUwMDAwMDAwMDAwMDAwMH1ATWluZ0xpVV9IS1NDUy1FeHRCO317XGYxMTFcZmJpZGkgXGZzY3JpcHRcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMzAwMDUwMDAwMDAwMDAwMDAwMH1Nb25nb2xpYW4gQmFpdGk7fQ0Ke1xmMTEyXGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTI4XGZwcnExe1wqXHBhbm9zZSAwMjBiMDYwOTA3MDIwNTA4MDIwNH1ATVMgR290aGljO317XGYxMTNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDEyOFxmcHJxMntcKlxwYW5vc2UgMDIwYjA2MDAwNzAyMDUwODAyMDR9TVMgVUkgR290aGljO317XGYxMTRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDEyOFxmcHJxMntcKlxwYW5vc2UgMDIwYjA2MDAwNzAyMDUwODAyMDR9QE1TIFVJIEdvdGhpYzt9DQp7XGYxMTVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDEyOFxmcHJxMntcKlxwYW5vc2UgMDIwYjA2MDAwNzAyMDUwODAyMDR9TVMgUEdvdGhpYzt9e1xmMTE2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxMjhcZnBycTJ7XCpccGFub3NlIDAyMGIwNjAwMDcwMjA1MDgwMjA0fUBNUyBQR290aGljO317XGYxMTdcZmJpZGkgXGZuaWxcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjAwMDUwMDAzMDIwMDA5MDAwMH1NViBCb2xpO30NCntcZjExOFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwYjA1MDIwNDAyMDQwMjAyMDN9TXlhbm1hciBUZXh0O317XGYxMTlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNTAyMDQwMjA0MDIwMjAzfU5pcm1hbGEgVUk7fXtcZjEyMFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwYjA0MDIwNDAyMDQwMjAyMDN9TmlybWFsYSBVSSBTZW1pbGlnaHQ7fQ0Ke1xmMTIxXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwNTBhMDEwMjAxMDEwMTAxMDEwMX1TZWdvZSBNREwyIEFzc2V0czt9e1xmMTIyXGZiaWRpIFxmbmlsXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwMDA2MDAwMDAwMDAwMDAwMDB9U2Vnb2UgUHJpbnQ7fXtcZjEyM1xmYmlkaSBcZnNjcmlwdFxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNTA0MDIwMDAwMDAwMDAzfVNlZ29lIFNjcmlwdDt9DQp7XGYxMjRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNTAyMDQwMjA0MDIwMjAzfVNlZ29lIFVJO317XGYxMjVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwYTAyMDQwMjA0MDIwMjAzfVNlZ29lIFVJIEJsYWNrO317XGYxMjZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNTAyMDQwMjA0MDIwMjAzfVNlZ29lIFVJIEVtb2ppO30NCntcZjEyN1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwYjA1MDIwNDAyMDQwMjAyMDN9U2Vnb2UgVUkgSGlzdG9yaWM7fXtcZjEyOFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwYjA1MDIwNDAyMDQwMjAyMDN9U2Vnb2UgVUkgTGlnaHQ7fQ0Ke1xmMTI5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDcwMjA0MDIwNDAyMDIwM31TZWdvZSBVSSBTZW1pYm9sZDt9e1xmMTMwXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDQwMjA0MDIwNDAyMDIwM31TZWdvZSBVSSBTZW1pbGlnaHQ7fQ0Ke1xmMTMxXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDUwMjA0MDIwNDAyMDIwM31TZWdvZSBVSSBTeW1ib2w7fXtcZjEzMlxmYmlkaSBcZm5pbFxmY2hhcnNldDEzNFxmcHJxMntcKlxwYW5vc2UgMDIwMTA2MDAwMzAxMDEwMTAxMDF9QFNpbVN1bjt9e1xmMTMzXGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTM0XGZwcnExe1wqXHBhbm9zZSAwMjAxMDYwOTAzMDEwMTAxMDEwMX1OU2ltU3VuO30NCntcZjEzNFxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDEzNFxmcHJxMXtcKlxwYW5vc2UgMDIwMTA2MDkwMzAxMDEwMTAxMDF9QE5TaW1TdW47fXtcZjEzNVxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDEzNFxmcHJxMXtcKlxwYW5vc2UgMDIwMTA2MDkwNjAxMDEwMTAxMDF9U2ltU3VuLUV4dEI7fXtcZjEzNlxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDEzNFxmcHJxMXtcKlxwYW5vc2UgMDIwMTA2MDkwNjAxMDEwMTAxMDF9QFNpbVN1bi1FeHRCO30NCntcZjEzN1xmYmlkaSBcZm5pbFxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDAwNTA1MDAwMDAwMDIwMDA0fVNpdGthIFNtYWxsO317XGYxMzhcZmJpZGkgXGZuaWxcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjAwMDUwNTAwMDAwMDAyMDAwNH1TaXRrYSBUZXh0O317XGYxMzlcZmJpZGkgXGZuaWxcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjAwMDUwNTAwMDAwMDAyMDAwNH1TaXRrYSBTdWJoZWFkaW5nO30NCntcZjE0MFxmYmlkaSBcZm5pbFxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDAwNTA1MDAwMDAwMDIwMDA0fVNpdGthIEhlYWRpbmc7fXtcZjE0MVxmYmlkaSBcZm5pbFxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDAwNTA1MDAwMDAwMDIwMDA0fVNpdGthIERpc3BsYXk7fXtcZjE0MlxmYmlkaSBcZm5pbFxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDAwNTA1MDAwMDAwMDIwMDA0fVNpdGthIEJhbm5lcjt9DQp7XGYxNDNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNjAzMDIwMjAyMDIwMjA0fVRyZWJ1Y2hldCBNUzt9e1xmMTQ0XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDYwNDAzMDUwNDA0MDIwNH1WZXJkYW5hO317XGYxNDVcZmJpZGkgXGZyb21hblxmY2hhcnNldDJcZnBycTJ7XCpccGFub3NlIDA1MDMwMTAyMDEwNTA5MDYwNzAzfVdlYmRpbmdzO30NCntcZjE0NlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTI4XGZwcnEye1wqXHBhbm9zZSAwMjBiMDQwMDAwMDAwMDAwMDAwMH1AWXUgR290aGljO317XGYxNDdcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDEyOFxmcHJxMntcKlxwYW5vc2UgMDIwYjA1MDAwMDAwMDAwMDAwMDB9WXUgR290aGljIFVJO317XGYxNDhcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDEyOFxmcHJxMntcKlxwYW5vc2UgMDIwYjA1MDAwMDAwMDAwMDAwMDB9QFl1IEdvdGhpYyBVSTt9DQp7XGYxNDlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDEyOFxmcHJxMntcKlxwYW5vc2UgMDIwYjA3MDAwMDAwMDAwMDAwMDB9WXUgR290aGljIFVJIFNlbWlib2xkO317XGYxNTBcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDEyOFxmcHJxMntcKlxwYW5vc2UgMDIwYjA3MDAwMDAwMDAwMDAwMDB9QFl1IEdvdGhpYyBVSSBTZW1pYm9sZDt9DQp7XGYxNTFcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDEyOFxmcHJxMntcKlxwYW5vc2UgMDIwYjAzMDAwMDAwMDAwMDAwMDB9WXUgR290aGljIExpZ2h0O317XGYxNTJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDEyOFxmcHJxMntcKlxwYW5vc2UgMDIwYjAzMDAwMDAwMDAwMDAwMDB9QFl1IEdvdGhpYyBMaWdodDt9DQp7XGYxNTNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDEyOFxmcHJxMntcKlxwYW5vc2UgMDIwYjAzMDAwMDAwMDAwMDAwMDB9WXUgR290aGljIFVJIExpZ2h0O317XGYxNTRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDEyOFxmcHJxMntcKlxwYW5vc2UgMDIwYjAzMDAwMDAwMDAwMDAwMDB9QFl1IEdvdGhpYyBVSSBMaWdodDt9DQp7XGYxNTVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDEyOFxmcHJxMntcKlxwYW5vc2UgMDIwYjA1MDAwMDAwMDAwMDAwMDB9WXUgR290aGljIE1lZGl1bTt9e1xmMTU2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxMjhcZnBycTJ7XCpccGFub3NlIDAyMGIwNTAwMDAwMDAwMDAwMDAwfUBZdSBHb3RoaWMgTWVkaXVtO30NCntcZjE1N1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTI4XGZwcnEye1wqXHBhbm9zZSAwMjBiMDQwMDAwMDAwMDAwMDAwMH1ZdSBHb3RoaWMgVUkgU2VtaWxpZ2h0O317XGYxNThcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDEyOFxmcHJxMntcKlxwYW5vc2UgMDIwYjA0MDAwMDAwMDAwMDAwMDB9QFl1IEdvdGhpYyBVSSBTZW1pbGlnaHQ7fQ0Ke1xmMTU5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwNTBhMDEwMjAxMDEwMTAxMDEwMX1Ib2xvTGVucyBNREwyIEFzc2V0czt9e1xmMTYwXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxMjhcZnBycTJ7XCpccGFub3NlIDAyMGIwNjA0MDIwMjAyMDIwMjA0fUBBcmlhbCBVbmljb2RlIE1TO30NCntcZjE2MVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MlxmcHJxMntcKlxwYW5vc2UgMDUwMjAxMDIwMTA1MDcwNzA3MDd9V2luZ2RpbmdzIDI7fXtcZjE2MlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MlxmcHJxMntcKlxwYW5vc2UgMDUwNDAxMDIwMTA4MDcwNzA3MDd9V2luZ2RpbmdzIDM7fXtcZjE2M1xmYmlkaSBcZmRlY29yXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDQwMjA0MDQwMzBkMDcwMjAyMDJ9VGVtcHVzIFNhbnMgSVRDO30NCntcZjE2NFxmYmlkaSBcZnNjcmlwdFxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAzMDkwNzAyMDMwNDA3MDIwNDAzfU1pc3RyYWw7fXtcZjE2NVxmYmlkaSBcZnNjcmlwdFxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAzMDEwMTAxMDEwMTAxMDEwMTAxfUx1Y2lkYSBIYW5kd3JpdGluZzt9e1xmMTY2XGZiaWRpIFxmc2NyaXB0XGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDMwNTA1MDIwNDAyMDIwMzAyMDJ9S3Jpc3RlbiBJVEM7fQ0Ke1xmMTY3XGZiaWRpIFxmZGVjb3JcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwNDA0MDQwMzA0MGEwMjAyMDIwMn1KdWljZSBJVEM7fXtcZjE2OFxmYmlkaSBcZnNjcmlwdFxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAzMDgwNDAyMDMwMjA1MGIwNDA0fUZyZWVzdHlsZSBTY3JpcHQ7fXtcZjE2OVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwNDA2MDIwNTAzMDUwMzAzMDR9Qm9vayBBbnRpcXVhO30NCntcZjE3MFxmYmlkaSBcZnNjcmlwdFxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAzMDEwMTAxMDEwMjAxMDEwMTAxfU1vbm90eXBlIENvcnNpdmE7fXtcZjE3MVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwYjA1MDIwMjAyMDIwMjAyMDR9Q2VudHVyeSBHb3RoaWM7fXtcZjE3MlxmYmlkaSBcZmRlY29yXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDQwMjA3MDUwNDBhMDIwNjA3MDJ9QWxnZXJpYW47fQ0Ke1xmMTczXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjAyMDYwMjA4MDUwNTAyMDMwM31CYXNrZXJ2aWxsZSBPbGQgRmFjZTt9e1xmMTc0XGZiaWRpIFxmZGVjb3JcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwNDAzMDkwNTAyMGIwMjAyMGMwMn1CYXVoYXVzIDkzO317XGYxNzVcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDIwNTAzMDYwMzA1MDIwMzAzfUJlbGwgTVQ7fQ0Ke1xmMTc2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBlMDYwMjAyMDUwMjAyMDMwNn1CZXJsaW4gU2FucyBGQjt9e1xmMTc3XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjA1MDgwNjA2MDkwNTAyMDQwNH1CZXJuYXJkIE1UIENvbmRlbnNlZDt9DQp7XGYxNzhcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDcwNzA2MDgwNjAxMDUwMjA0fUJvZG9uaSBNVCBQb3N0ZXIgQ29tcHJlc3NlZDt9e1xmMTc5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDkwMzA2MDcwMzAyMDIwNH1Ccml0YW5uaWMgQm9sZDt9DQp7XGYxODBcZmJpZGkgXGZkZWNvclxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDA0MDQwOTA1MDgwYjAyMDIwNTAyfUJyb2Fkd2F5O317XGYxODFcZmJpZGkgXGZzY3JpcHRcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMzA2MDgwMjA0MDQwNjA3MDMwNH1CcnVzaCBTY3JpcHQgTVQ7fXtcZjE4MlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwNzA0MDMwNjA4MGIwMzAyMDR9Q2FsaWZvcm5pYW4gRkI7fQ0Ke1xmMTgzXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjAzMDUwNDA1MDIwNTAyMDMwNH1DZW50YXVyO317XGYxODRcZmJpZGkgXGZkZWNvclxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDA0MDIwNDA0MDMxMDA3MDIwNjAyfUNoaWxsZXI7fXtcZjE4NVxmYmlkaSBcZmRlY29yXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDQwMjA4MDUwNjAyMDIwMzAyMDN9Q29sb25uYSBNVDt9DQp7XGYxODZcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDgwOTA0MDQwMzBiMDIwNDA0fUNvb3BlciBCbGFjazt9e1xmMTg3XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjA0MDYwMjA2MDMwYTAyMDMwNH1Gb290bGlnaHQgTVQgTGlnaHQ7fQ0Ke1xmMTg4XGZiaWRpIFxmZGVjb3JcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwNDAzMDYwNDAyMGYwMjAyMGQwMn1IYXJsb3cgU29saWQgSXRhbGljO317XGYxODlcZmJpZGkgXGZkZWNvclxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDA0MDQwNTA1MDUwYTAyMDIwNzAyfUhhcnJpbmd0b247fXtcZjE5MFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwNDA1MDIwNTA1MDYwMzAzMDN9SGlnaCBUb3dlciBUZXh0O30NCntcZjE5MVxmYmlkaSBcZmRlY29yXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDQwOTA2MDUwNjBkMDYwMjA3MDJ9Sm9rZXJtYW47fXtcZjE5MlxmYmlkaSBcZnNjcmlwdFxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAzMDMwNDAyMDIwNjA3MGQwZDA2fUt1bnN0bGVyIFNjcmlwdDt9e1xmMTkzXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjA0MDYwMjA1MDUwNTAyMDMwNH1MdWNpZGEgQnJpZ2h0O30NCntcZjE5NFxmYmlkaSBcZnNjcmlwdFxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAzMDEwMTAxMDEwMTAxMDEwMTAxfUx1Y2lkYSBDYWxsaWdyYXBoeTt9e1xmMTk1XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjA2MDYwMjA1MDUwNTAyMDIwNH1MdWNpZGEgRmF4O317XGYxOTZcZmJpZGkgXGZkZWNvclxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDA0MDMwODA1MDUwODAyMDIwZDAyfU1hZ25ldG87fQ0Ke1xmMTk3XGZiaWRpIFxmc2NyaXB0XGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDMwMjA4MDIwNjA2MDIwNzAyMDJ9TWF0dXJhIE1UIFNjcmlwdCBDYXBpdGFsczt9e1xmMTk4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjA3MDcwNDA3MDUwNTAyMDMwM31Nb2Rlcm4gTm8uIDIwO30NCntcZjE5OVxmYmlkaSBcZmRlY29yXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDQwMjA1MDIwNzA3MDMwMzAyMDJ9TmlhZ2FyYSBFbmdyYXZlZDt9e1xmMjAwXGZiaWRpIFxmZGVjb3JcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwNDAyMDUwMjA3MDcwMjAyMDIwMn1OaWFnYXJhIFNvbGlkO30NCntcZjIwMVxmYmlkaSBcZnNjcmlwdFxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAzMDQwOTAyMDQwNTA4MDMwODA2fU9sZCBFbmdsaXNoIFRleHQgTVQ7fXtcZjIwMlxmYmlkaSBcZmRlY29yXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDQwNTA2MDIwODA3MDIwMjAyMDN9T255eDt9e1xmMjAzXGZiaWRpIFxmc2NyaXB0XGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDMwNDA2MDIwNDA3MDgwNDA4MDR9UGFyY2htZW50O30NCntcZjIwNFxmYmlkaSBcZmRlY29yXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDQwNTA2MDMwYTA2MDIwMjAyMDJ9UGxheWJpbGw7fXtcZjIwNVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwODA1MDIwNTA1MDUwMjA3MDJ9UG9vciBSaWNoYXJkO317XGYyMDZcZmJpZGkgXGZkZWNvclxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDA0MDQwODA1MDUwODA5MDIwNjAyfVJhdmllO30NCntcZjIwN1xmYmlkaSBcZnNjcmlwdFxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAzMDYwNDAyMDMwNDA2MGIwMjA0fUluZm9ybWFsIFJvbWFuO317XGYyMDhcZmJpZGkgXGZkZWNvclxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDA0MDIwOTA0MDIwMTAyMDIwNjA0fVNob3djYXJkIEdvdGhpYzt9e1xmMjA5XGZiaWRpIFxmZGVjb3JcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwNDA0MGEwNzA2MGEwMjAyMDIwMn1TbmFwIElUQzt9DQp7XGYyMTBcZmJpZGkgXGZkZWNvclxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDA0MDQwOTA1MGQwODAyMDIwNDA0fVN0ZW5jaWw7fXtcZjIxMVxmYmlkaSBcZnNjcmlwdFxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAzMDcwNTAyMDMwNTAyMDIwMjAzfVZpbmVyIEhhbmQgSVRDO317XGYyMTJcZmJpZGkgXGZzY3JpcHRcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMzAyMDYwMjA1MDUwNjA5MDgwNH1WaXZhbGRpO30NCntcZjIxM1xmYmlkaSBcZnNjcmlwdFxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAzMDUwNDAyMDQwNDA3MDcwMzA1fVZsYWRpbWlyIFNjcmlwdDt9e1xmMjE0XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBhMGEwNzA1MDUwNTAyMDQwNH1XaWRlIExhdGluO317XGYyMTVcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDUwNjA0MDUwNTA1MDIwMjA0fUJvb2ttYW4gT2xkIFN0eWxlO30NCntcZjIxNlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwZTA4MDIwMjA1MDIwMjAzMDZ9QmVybGluIFNhbnMgRkIgRGVtaTt9e1xmMjE3XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDYwNjAyMDIwMjAzMDIwNH1BcmlhbCBOYXJyb3c7fQ0Ke1xmMjE4XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDYwNjA0MDIwMDAyMDIwM31TZWdvZSBDb25kZW5zZWQ7fXtcZjIxOVxmYmlkaSBcZm5pbFxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAwMDAwNDAwMDAwMDAwMDAwMDAwfU9wdGltYTt9e1xmMjIwXGZiaWRpIFxmbmlsXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDAwMDAwMDAwMDAwMDAwMDAwMDB9WldBZG9iZUY7fQ0Ke1xmMjIxXGZiaWRpIFxmbmlsXGZjaGFyc2V0MlxmcHJxMntcKlxwYW5vc2UgMDUwMTAxMDAwMTAwMDAwMDAwMDB9TVMgT3V0bG9vazt9e1xmMjIyXGZiaWRpIFxmbmlsXGZjaGFyc2V0MlxmcHJxMntcKlxwYW5vc2UgMDUwMTAxMDEwMTAxMDEwMTAxMDF9Qm9va3NoZWxmIFN5bWJvbCA3O30NCntcZjIyM1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwYjA2MDQwMzA1MDQwNDAyMDR9TVMgUmVmZXJlbmNlIFNhbnMgU2VyaWY7fXtcZjIyNFxmYmlkaSBcZm5pbFxmY2hhcnNldDJcZnBycTJ7XCpccGFub3NlIDA1MDAwNTAwMDAwMDAwMDAwMDAwfU1TIFJlZmVyZW5jZSBTcGVjaWFsdHk7fQ0Ke1xmMjI1XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyXGZwcnEye1wqXHBhbm9zZSAwNTA1MDEwMjAxMDIwNTAyMDIwMn1NVCBFeHRyYTt9e1xmMjI2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDYwNjAzMDUwNDAyMDIwNH1PcGVuIFNhbnM7fXtcZjIyN1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwYjA5MDYwMzA4MDQwMjAyMDR9T3BlbiBTYW5zIEV4dHJhYm9sZDt9DQp7XGYyMjhcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwMzA2MDMwNTA0MDIwMjA0fU9wZW4gU2FucyBMaWdodDt9e1xmMjI5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDcwNjAzMDgwNDAyMDIwNH1PcGVuIFNhbnMgU2VtaWJvbGQ7fQ0Ke1xmMjMwXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjA0MDYwNDA1MDUwNTAyMDMwNH1DZW50dXJ5IFNjaG9vbGJvb2s7fXtcZjIzMVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTI4XGZwcnExe1wqXHBhbm9zZSAwMjAyMDYwOTA0MDIwNTA4MDMwNH1ATVMgTWluY2hvO30NCntcZmxvbWFqb3JcZjMxNTAwXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjAyMDYwMzA1MDQwNTAyMDMwNH1UaW1lcyBOZXcgUm9tYW47fXtcZmRibWFqb3JcZjMxNTAxXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjAyMDYwMzA1MDQwNTAyMDMwNH1UaW1lcyBOZXcgUm9tYW47fQ0Ke1xmaGltYWpvclxmMzE1MDJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGYwMzAyMDIwMjA0MDMwMjA0fUNhbGlicmkgTGlnaHQ7fXtcZmJpbWFqb3JcZjMxNTAzXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjAyMDYwMzA1MDQwNTAyMDMwNH1UaW1lcyBOZXcgUm9tYW47fQ0Ke1xmbG9taW5vclxmMzE1MDRcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDIwNjAzMDUwNDA1MDIwMzA0fVRpbWVzIE5ldyBSb21hbjt9e1xmZGJtaW5vclxmMzE1MDVcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDIwNjAzMDUwNDA1MDIwMzA0fVRpbWVzIE5ldyBSb21hbjt9DQp7XGZoaW1pbm9yXGYzMTUwNlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwZjA1MDIwMjAyMDQwMzAyMDR9Q2FsaWJyaTt9e1xmYmltaW5vclxmMzE1MDdcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDIwNjAzMDUwNDA1MDIwMzA0fVRpbWVzIE5ldyBSb21hbjt9e1xmMjMyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMzhcZnBycTIgVGltZXMgTmV3IFJvbWFuIENFO30NCntcZjIzM1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjA0XGZwcnEyIFRpbWVzIE5ldyBSb21hbiBDeXI7fXtcZjIzNVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYxXGZwcnEyIFRpbWVzIE5ldyBSb21hbiBHcmVlazt9e1xmMjM2XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjJcZnBycTIgVGltZXMgTmV3IFJvbWFuIFR1cjt9e1xmMjM3XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNzdcZnBycTIgVGltZXMgTmV3IFJvbWFuIChIZWJyZXcpO30NCntcZjIzOFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc4XGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoQXJhYmljKTt9e1xmMjM5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxODZcZnBycTIgVGltZXMgTmV3IFJvbWFuIEJhbHRpYzt9e1xmMjQwXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjNcZnBycTIgVGltZXMgTmV3IFJvbWFuIChWaWV0bmFtZXNlKTt9e1xmMjQyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgQXJpYWwgQ0U7fQ0Ke1xmMjQzXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgQXJpYWwgQ3lyO317XGYyNDVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBBcmlhbCBHcmVlazt9e1xmMjQ2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgQXJpYWwgVHVyO317XGYyNDdcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE3N1xmcHJxMiBBcmlhbCAoSGVicmV3KTt9DQp7XGYyNDhcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE3OFxmcHJxMiBBcmlhbCAoQXJhYmljKTt9e1xmMjQ5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgQXJpYWwgQmFsdGljO317XGYyNTBcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2M1xmcHJxMiBBcmlhbCAoVmlldG5hbWVzZSk7fXtcZjI1MlxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDIzOFxmcHJxMSBDb3VyaWVyIE5ldyBDRTt9DQp7XGYyNTNcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQyMDRcZnBycTEgQ291cmllciBOZXcgQ3lyO317XGYyNTVcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxNjFcZnBycTEgQ291cmllciBOZXcgR3JlZWs7fXtcZjI1NlxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDE2MlxmcHJxMSBDb3VyaWVyIE5ldyBUdXI7fXtcZjI1N1xmYmlkaSBcZm1vZGVyblxmY2hhcnNldDE3N1xmcHJxMSBDb3VyaWVyIE5ldyAoSGVicmV3KTt9DQp7XGYyNThcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxNzhcZnBycTEgQ291cmllciBOZXcgKEFyYWJpYyk7fXtcZjI1OVxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDE4NlxmcHJxMSBDb3VyaWVyIE5ldyBCYWx0aWM7fXtcZjI2MFxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDE2M1xmcHJxMSBDb3VyaWVyIE5ldyAoVmlldG5hbWVzZSk7fQ0Ke1xmMzY0XGZiaWRpIFxmbmlsXGZjaGFyc2V0MFxmcHJxMiBTaW1TdW4gV2VzdGVybntcKlxmYWx0IFwnY2JcJ2NlXCdjY1wnZTV9O317XGYzNzRcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTIgUE1pbmdMaVUgV2VzdGVybntcKlxmYWx0IFwnYjdcJzczXCdiMlwnZDNcJ2E5XCdmYVwnYzVcJ2U5fTt9DQp7XGYzODRcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQwXGZwcnExIE1TIEdvdGhpYyBXZXN0ZXJue1wqXGZhbHQgXCc4MlwnNmNcJzgyXCc3MiBcJzgzXCc1M1wnODNcJzU2XCc4M1wnNjJcJzgzXCc0ZX07fXtcZjM4MlxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDIzOFxmcHJxMSBNUyBHb3RoaWMgQ0V7XCpcZmFsdCBcJzgyXCc2Y1wnODJcJzcyIFwnODNcJzUzXCc4M1wnNTZcJzgzXCc2MlwnODNcJzRlfTt9DQp7XGYzODNcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQyMDRcZnBycTEgTVMgR290aGljIEN5cntcKlxmYWx0IFwnODJcJzZjXCc4MlwnNzIgXCc4M1wnNTNcJzgzXCc1NlwnODNcJzYyXCc4M1wnNGV9O317XGYzODVcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxNjFcZnBycTEgTVMgR290aGljIEdyZWVre1wqXGZhbHQgXCc4MlwnNmNcJzgyXCc3MiBcJzgzXCc1M1wnODNcJzU2XCc4M1wnNjJcJzgzXCc0ZX07fQ0Ke1xmMzg2XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTYyXGZwcnExIE1TIEdvdGhpYyBUdXJ7XCpcZmFsdCBcJzgyXCc2Y1wnODJcJzcyIFwnODNcJzUzXCc4M1wnNTZcJzgzXCc2MlwnODNcJzRlfTt9e1xmMzg5XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTg2XGZwcnExIE1TIEdvdGhpYyBCYWx0aWN7XCpcZmFsdCBcJzgyXCc2Y1wnODJcJzcyIFwnODNcJzUzXCc4M1wnNTZcJzgzXCc2MlwnODNcJzRlfTt9DQp7XGY0NDJcZmJpZGkgXGZyb21hblxmY2hhcnNldDIzOFxmcHJxMiBDZW50dXJ5IENFO317XGY0NDNcZmJpZGkgXGZyb21hblxmY2hhcnNldDIwNFxmcHJxMiBDZW50dXJ5IEN5cjt9e1xmNDQ1XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjFcZnBycTIgQ2VudHVyeSBHcmVlazt9e1xmNDQ2XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjJcZnBycTIgQ2VudHVyeSBUdXI7fQ0Ke1xmNDQ5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxODZcZnBycTIgQ2VudHVyeSBCYWx0aWM7fXtcZjQ5MlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjM4XGZwcnEyIFN5bGZhZW4gQ0U7fXtcZjQ5M1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjA0XGZwcnEyIFN5bGZhZW4gQ3lyO317XGY0OTVcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MVxmcHJxMiBTeWxmYWVuIEdyZWVrO30NCntcZjQ5NlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYyXGZwcnEyIFN5bGZhZW4gVHVyO317XGY0OTlcZmJpZGkgXGZyb21hblxmY2hhcnNldDE4NlxmcHJxMiBTeWxmYWVuIEJhbHRpYzt9e1xmNTcyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMzhcZnBycTIgQ2FtYnJpYSBNYXRoIENFO317XGY1NzNcZmJpZGkgXGZyb21hblxmY2hhcnNldDIwNFxmcHJxMiBDYW1icmlhIE1hdGggQ3lyO30NCntcZjU3NVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYxXGZwcnEyIENhbWJyaWEgTWF0aCBHcmVlazt9e1xmNTc2XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjJcZnBycTIgQ2FtYnJpYSBNYXRoIFR1cjt9e1xmNTc5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxODZcZnBycTIgQ2FtYnJpYSBNYXRoIEJhbHRpYzt9e1xmNTgwXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjNcZnBycTIgQ2FtYnJpYSBNYXRoIChWaWV0bmFtZXNlKTt9DQp7XGY1ODRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTIgWXUgR290aGljIFdlc3Rlcm57XCpcZmFsdCBcJzlmXCdlMFwnODNcJzUzXCc4M1wnNTZcJzgzXCc2MlwnODNcJzRlfTt9e1xmNTgyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgWXUgR290aGljIENFe1wqXGZhbHQgXCc5ZlwnZTBcJzgzXCc1M1wnODNcJzU2XCc4M1wnNjJcJzgzXCc0ZX07fQ0Ke1xmNTgzXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgWXUgR290aGljIEN5cntcKlxmYWx0IFwnOWZcJ2UwXCc4M1wnNTNcJzgzXCc1NlwnODNcJzYyXCc4M1wnNGV9O317XGY1ODVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBZdSBHb3RoaWMgR3JlZWt7XCpcZmFsdCBcJzlmXCdlMFwnODNcJzUzXCc4M1wnNTZcJzgzXCc2MlwnODNcJzRlfTt9DQp7XGY1ODZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBZdSBHb3RoaWMgVHVye1wqXGZhbHQgXCc5ZlwnZTBcJzgzXCc1M1wnODNcJzU2XCc4M1wnNjJcJzgzXCc0ZX07fXtcZjU4OVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTg2XGZwcnEyIFl1IEdvdGhpYyBCYWx0aWN7XCpcZmFsdCBcJzlmXCdlMFwnODNcJzUzXCc4M1wnNTZcJzgzXCc2MlwnODNcJzRlfTt9DQp7XGY2MDRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTIgQXJpYWwgVW5pY29kZSBNUyBXZXN0ZXJuO317XGY2MDJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIzOFxmcHJxMiBBcmlhbCBVbmljb2RlIE1TIENFO317XGY2MDNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBBcmlhbCBVbmljb2RlIE1TIEN5cjt9e1xmNjA1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgQXJpYWwgVW5pY29kZSBNUyBHcmVlazt9DQp7XGY2MDZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBBcmlhbCBVbmljb2RlIE1TIFR1cjt9e1xmNjA3XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNzdcZnBycTIgQXJpYWwgVW5pY29kZSBNUyAoSGVicmV3KTt9e1xmNjA4XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNzhcZnBycTIgQXJpYWwgVW5pY29kZSBNUyAoQXJhYmljKTt9DQp7XGY2MDlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE4NlxmcHJxMiBBcmlhbCBVbmljb2RlIE1TIEJhbHRpYzt9e1xmNjEwXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjNcZnBycTIgQXJpYWwgVW5pY29kZSBNUyAoVmlldG5hbWVzZSk7fXtcZjYxMVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjIyXGZwcnEyIEFyaWFsIFVuaWNvZGUgTVMgKFRoYWkpO317XGY2MTJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIzOFxmcHJxMiBDYWxpYnJpIExpZ2h0IENFO30NCntcZjYxM1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjA0XGZwcnEyIENhbGlicmkgTGlnaHQgQ3lyO317XGY2MTVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBDYWxpYnJpIExpZ2h0IEdyZWVrO317XGY2MTZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBDYWxpYnJpIExpZ2h0IFR1cjt9e1xmNjE3XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNzdcZnBycTIgQ2FsaWJyaSBMaWdodCAoSGVicmV3KTt9DQp7XGY2MThcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE3OFxmcHJxMiBDYWxpYnJpIExpZ2h0IChBcmFiaWMpO317XGY2MTlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE4NlxmcHJxMiBDYWxpYnJpIExpZ2h0IEJhbHRpYzt9e1xmNjIwXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjNcZnBycTIgQ2FsaWJyaSBMaWdodCAoVmlldG5hbWVzZSk7fXtcZjYyMlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjM4XGZwcnEyIENhbGlicmkgQ0U7fQ0Ke1xmNjIzXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgQ2FsaWJyaSBDeXI7fXtcZjYyNVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIENhbGlicmkgR3JlZWs7fXtcZjYyNlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIENhbGlicmkgVHVyO317XGY2MjdcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE3N1xmcHJxMiBDYWxpYnJpIChIZWJyZXcpO30NCntcZjYyOFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTc4XGZwcnEyIENhbGlicmkgKEFyYWJpYyk7fXtcZjYyOVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTg2XGZwcnEyIENhbGlicmkgQmFsdGljO317XGY2MzBcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2M1xmcHJxMiBDYWxpYnJpIChWaWV0bmFtZXNlKTt9e1xmNjMyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgVGFob21hIENFO30NCntcZjYzM1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjA0XGZwcnEyIFRhaG9tYSBDeXI7fXtcZjYzNVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIFRhaG9tYSBHcmVlazt9e1xmNjM2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgVGFob21hIFR1cjt9e1xmNjM3XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNzdcZnBycTIgVGFob21hIChIZWJyZXcpO30NCntcZjYzOFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTc4XGZwcnEyIFRhaG9tYSAoQXJhYmljKTt9e1xmNjM5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgVGFob21hIEJhbHRpYzt9e1xmNjQwXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjNcZnBycTIgVGFob21hIChWaWV0bmFtZXNlKTt9e1xmNjQxXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMjJcZnBycTIgVGFob21hIChUaGFpKTt9DQp7XGY2NDJcZmJpZGkgXGZyb21hblxmY2hhcnNldDIzOFxmcHJxMiBQYWxhdGlubyBMaW5vdHlwZSBDRTt9e1xmNjQzXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgUGFsYXRpbm8gTGlub3R5cGUgQ3lyO317XGY2NDVcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MVxmcHJxMiBQYWxhdGlubyBMaW5vdHlwZSBHcmVlazt9e1xmNjQ2XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjJcZnBycTIgUGFsYXRpbm8gTGlub3R5cGUgVHVyO30NCntcZjY0OVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTg2XGZwcnEyIFBhbGF0aW5vIExpbm90eXBlIEJhbHRpYzt9e1xmNjUwXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjNcZnBycTIgUGFsYXRpbm8gTGlub3R5cGUgKFZpZXRuYW1lc2UpO317XGY2NTJcZmJpZGkgXGZyb21hblxmY2hhcnNldDIzOFxmcHJxMiBDYW1icmlhIENFO317XGY2NTNcZmJpZGkgXGZyb21hblxmY2hhcnNldDIwNFxmcHJxMiBDYW1icmlhIEN5cjt9DQp7XGY2NTVcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MVxmcHJxMiBDYW1icmlhIEdyZWVrO317XGY2NTZcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MlxmcHJxMiBDYW1icmlhIFR1cjt9e1xmNjU5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxODZcZnBycTIgQ2FtYnJpYSBCYWx0aWM7fXtcZjY2MFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYzXGZwcnEyIENhbWJyaWEgKFZpZXRuYW1lc2UpO30NCntcZjY2MlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjM4XGZwcnEyIEdhcmFtb25kIENFO317XGY2NjNcZmJpZGkgXGZyb21hblxmY2hhcnNldDIwNFxmcHJxMiBHYXJhbW9uZCBDeXI7fXtcZjY2NVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYxXGZwcnEyIEdhcmFtb25kIEdyZWVrO317XGY2NjZcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MlxmcHJxMiBHYXJhbW9uZCBUdXI7fQ0Ke1xmNjY5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxODZcZnBycTIgR2FyYW1vbmQgQmFsdGljO317XGY2NzJcZmJpZGkgXGZzY3JpcHRcZmNoYXJzZXQyMzhcZnBycTIgQ29taWMgU2FucyBNUyBDRTt9e1xmNjczXGZiaWRpIFxmc2NyaXB0XGZjaGFyc2V0MjA0XGZwcnEyIENvbWljIFNhbnMgTVMgQ3lyO317XGY2NzVcZmJpZGkgXGZzY3JpcHRcZmNoYXJzZXQxNjFcZnBycTIgQ29taWMgU2FucyBNUyBHcmVlazt9DQp7XGY2NzZcZmJpZGkgXGZzY3JpcHRcZmNoYXJzZXQxNjJcZnBycTIgQ29taWMgU2FucyBNUyBUdXI7fXtcZjY3OVxmYmlkaSBcZnNjcmlwdFxmY2hhcnNldDE4NlxmcHJxMiBDb21pYyBTYW5zIE1TIEJhbHRpYzt9e1xmNjgyXGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MjM4XGZwcnExIENvbnNvbGFzIENFO317XGY2ODNcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQyMDRcZnBycTEgQ29uc29sYXMgQ3lyO30NCntcZjY4NVxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDE2MVxmcHJxMSBDb25zb2xhcyBHcmVlazt9e1xmNjg2XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTYyXGZwcnExIENvbnNvbGFzIFR1cjt9e1xmNjg5XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTg2XGZwcnExIENvbnNvbGFzIEJhbHRpYzt9e1xmNjkwXGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTYzXGZwcnExIENvbnNvbGFzIChWaWV0bmFtZXNlKTt9DQp7XGY3MDRcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTIgTWluZ0xpVS1FeHRCIFdlc3Rlcm47fXtcZjczMlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjM4XGZwcnEyIEFyaWFsIEJsYWNrIENFO317XGY3MzNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBBcmlhbCBCbGFjayBDeXI7fXtcZjczNVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIEFyaWFsIEJsYWNrIEdyZWVrO30NCntcZjczNlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIEFyaWFsIEJsYWNrIFR1cjt9e1xmNzM5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgQXJpYWwgQmxhY2sgQmFsdGljO317XGY3NDJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIzOFxmcHJxMiBCYWhuc2NocmlmdCBMaWdodCBDRTt9e1xmNzQzXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgQmFobnNjaHJpZnQgTGlnaHQgQ3lyO30NCntcZjc0NVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIEJhaG5zY2hyaWZ0IExpZ2h0IEdyZWVrO317XGY3NDZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBCYWhuc2NocmlmdCBMaWdodCBUdXI7fXtcZjc0OVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTg2XGZwcnEyIEJhaG5zY2hyaWZ0IExpZ2h0IEJhbHRpYzt9DQp7XGY3NTBcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2M1xmcHJxMiBCYWhuc2NocmlmdCBMaWdodCAoVmlldG5hbWVzZSk7fXtcZjc1MlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjM4XGZwcnEyIEJhaG5zY2hyaWZ0IFNlbWlMaWdodCBDRTt9e1xmNzUzXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgQmFobnNjaHJpZnQgU2VtaUxpZ2h0IEN5cjt9DQp7XGY3NTVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBCYWhuc2NocmlmdCBTZW1pTGlnaHQgR3JlZWs7fXtcZjc1NlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIEJhaG5zY2hyaWZ0IFNlbWlMaWdodCBUdXI7fXtcZjc1OVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTg2XGZwcnEyIEJhaG5zY2hyaWZ0IFNlbWlMaWdodCBCYWx0aWM7fQ0Ke1xmNzYwXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjNcZnBycTIgQmFobnNjaHJpZnQgU2VtaUxpZ2h0IChWaWV0bmFtZXNlKTt9e1xmNzYyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgQmFobnNjaHJpZnQgQ0U7fXtcZjc2M1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjA0XGZwcnEyIEJhaG5zY2hyaWZ0IEN5cjt9e1xmNzY1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgQmFobnNjaHJpZnQgR3JlZWs7fQ0Ke1xmNzY2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgQmFobnNjaHJpZnQgVHVyO317XGY3NjlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE4NlxmcHJxMiBCYWhuc2NocmlmdCBCYWx0aWM7fXtcZjc3MFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYzXGZwcnEyIEJhaG5zY2hyaWZ0IChWaWV0bmFtZXNlKTt9e1xmNzcyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgQmFobnNjaHJpZnQgU2VtaUJvbGQgQ0U7fQ0Ke1xmNzczXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgQmFobnNjaHJpZnQgU2VtaUJvbGQgQ3lyO317XGY3NzVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBCYWhuc2NocmlmdCBTZW1pQm9sZCBHcmVlazt9e1xmNzc2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgQmFobnNjaHJpZnQgU2VtaUJvbGQgVHVyO30NCntcZjc3OVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTg2XGZwcnEyIEJhaG5zY2hyaWZ0IFNlbWlCb2xkIEJhbHRpYzt9e1xmNzgwXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjNcZnBycTIgQmFobnNjaHJpZnQgU2VtaUJvbGQgKFZpZXRuYW1lc2UpO317XGY3ODJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIzOFxmcHJxMiBCYWhuc2NocmlmdCBMaWdodCBTZW1pQ29uZGVuc2VkIENFO30NCntcZjc4M1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjA0XGZwcnEyIEJhaG5zY2hyaWZ0IExpZ2h0IFNlbWlDb25kZW5zZWQgQ3lyO317XGY3ODVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBCYWhuc2NocmlmdCBMaWdodCBTZW1pQ29uZGVuc2VkIEdyZWVrO317XGY3ODZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBCYWhuc2NocmlmdCBMaWdodCBTZW1pQ29uZGVuc2VkIFR1cjt9DQp7XGY3ODlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE4NlxmcHJxMiBCYWhuc2NocmlmdCBMaWdodCBTZW1pQ29uZGVuc2VkIEJhbHRpYzt9e1xmNzkwXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjNcZnBycTIgQmFobnNjaHJpZnQgTGlnaHQgU2VtaUNvbmRlbnNlZCAoVmlldG5hbWVzZSk7fXtcZjc5MlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjM4XGZwcnEyIEJhaG5zY2hyaWZ0IFNlbWlMaWdodCBTZW1pQ29uZGUgQ0U7fQ0Ke1xmNzkzXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgQmFobnNjaHJpZnQgU2VtaUxpZ2h0IFNlbWlDb25kZSBDeXI7fXtcZjc5NVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIEJhaG5zY2hyaWZ0IFNlbWlMaWdodCBTZW1pQ29uZGUgR3JlZWs7fXtcZjc5NlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIEJhaG5zY2hyaWZ0IFNlbWlMaWdodCBTZW1pQ29uZGUgVHVyO30NCntcZjc5OVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTg2XGZwcnEyIEJhaG5zY2hyaWZ0IFNlbWlMaWdodCBTZW1pQ29uZGUgQmFsdGljO317XGY4MDBcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2M1xmcHJxMiBCYWhuc2NocmlmdCBTZW1pTGlnaHQgU2VtaUNvbmRlIChWaWV0bmFtZXNlKTt9e1xmODAyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgQmFobnNjaHJpZnQgU2VtaUNvbmRlbnNlZCBDRTt9DQp7XGY4MDNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBCYWhuc2NocmlmdCBTZW1pQ29uZGVuc2VkIEN5cjt9e1xmODA1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgQmFobnNjaHJpZnQgU2VtaUNvbmRlbnNlZCBHcmVlazt9e1xmODA2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgQmFobnNjaHJpZnQgU2VtaUNvbmRlbnNlZCBUdXI7fQ0Ke1xmODA5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgQmFobnNjaHJpZnQgU2VtaUNvbmRlbnNlZCBCYWx0aWM7fXtcZjgxMFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYzXGZwcnEyIEJhaG5zY2hyaWZ0IFNlbWlDb25kZW5zZWQgKFZpZXRuYW1lc2UpO317XGY4MTJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIzOFxmcHJxMiBCYWhuc2NocmlmdCBTZW1pQm9sZCBTZW1pQ29uZGVuIENFO30NCntcZjgxM1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjA0XGZwcnEyIEJhaG5zY2hyaWZ0IFNlbWlCb2xkIFNlbWlDb25kZW4gQ3lyO317XGY4MTVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBCYWhuc2NocmlmdCBTZW1pQm9sZCBTZW1pQ29uZGVuIEdyZWVrO317XGY4MTZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBCYWhuc2NocmlmdCBTZW1pQm9sZCBTZW1pQ29uZGVuIFR1cjt9DQp7XGY4MTlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE4NlxmcHJxMiBCYWhuc2NocmlmdCBTZW1pQm9sZCBTZW1pQ29uZGVuIEJhbHRpYzt9e1xmODIwXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjNcZnBycTIgQmFobnNjaHJpZnQgU2VtaUJvbGQgU2VtaUNvbmRlbiAoVmlldG5hbWVzZSk7fXtcZjgyMlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjM4XGZwcnEyIEJhaG5zY2hyaWZ0IExpZ2h0IENvbmRlbnNlZCBDRTt9DQp7XGY4MjNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBCYWhuc2NocmlmdCBMaWdodCBDb25kZW5zZWQgQ3lyO317XGY4MjVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBCYWhuc2NocmlmdCBMaWdodCBDb25kZW5zZWQgR3JlZWs7fXtcZjgyNlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIEJhaG5zY2hyaWZ0IExpZ2h0IENvbmRlbnNlZCBUdXI7fQ0Ke1xmODI5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgQmFobnNjaHJpZnQgTGlnaHQgQ29uZGVuc2VkIEJhbHRpYzt9e1xmODMwXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjNcZnBycTIgQmFobnNjaHJpZnQgTGlnaHQgQ29uZGVuc2VkIChWaWV0bmFtZXNlKTt9e1xmODMyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgQmFobnNjaHJpZnQgU2VtaUxpZ2h0IENvbmRlbnNlZCBDRTt9DQp7XGY4MzNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBCYWhuc2NocmlmdCBTZW1pTGlnaHQgQ29uZGVuc2VkIEN5cjt9e1xmODM1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgQmFobnNjaHJpZnQgU2VtaUxpZ2h0IENvbmRlbnNlZCBHcmVlazt9e1xmODM2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgQmFobnNjaHJpZnQgU2VtaUxpZ2h0IENvbmRlbnNlZCBUdXI7fQ0Ke1xmODM5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgQmFobnNjaHJpZnQgU2VtaUxpZ2h0IENvbmRlbnNlZCBCYWx0aWM7fXtcZjg0MFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYzXGZwcnEyIEJhaG5zY2hyaWZ0IFNlbWlMaWdodCBDb25kZW5zZWQgKFZpZXRuYW1lc2UpO317XGY4NDJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIzOFxmcHJxMiBCYWhuc2NocmlmdCBDb25kZW5zZWQgQ0U7fQ0Ke1xmODQzXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgQmFobnNjaHJpZnQgQ29uZGVuc2VkIEN5cjt9e1xmODQ1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgQmFobnNjaHJpZnQgQ29uZGVuc2VkIEdyZWVrO317XGY4NDZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBCYWhuc2NocmlmdCBDb25kZW5zZWQgVHVyO30NCntcZjg0OVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTg2XGZwcnEyIEJhaG5zY2hyaWZ0IENvbmRlbnNlZCBCYWx0aWM7fXtcZjg1MFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYzXGZwcnEyIEJhaG5zY2hyaWZ0IENvbmRlbnNlZCAoVmlldG5hbWVzZSk7fXtcZjg1MlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjM4XGZwcnEyIEJhaG5zY2hyaWZ0IFNlbWlCb2xkIENvbmRlbnNlZCBDRTt9DQp7XGY4NTNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBCYWhuc2NocmlmdCBTZW1pQm9sZCBDb25kZW5zZWQgQ3lyO317XGY4NTVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBCYWhuc2NocmlmdCBTZW1pQm9sZCBDb25kZW5zZWQgR3JlZWs7fXtcZjg1NlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIEJhaG5zY2hyaWZ0IFNlbWlCb2xkIENvbmRlbnNlZCBUdXI7fQ0Ke1xmODU5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgQmFobnNjaHJpZnQgU2VtaUJvbGQgQ29uZGVuc2VkIEJhbHRpYzt9e1xmODYwXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjNcZnBycTIgQmFobnNjaHJpZnQgU2VtaUJvbGQgQ29uZGVuc2VkIChWaWV0bmFtZXNlKTt9e1xmODYyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgQ2FuZGFyYSBDRTt9DQp7XGY4NjNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBDYW5kYXJhIEN5cjt9e1xmODY1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgQ2FuZGFyYSBHcmVlazt9e1xmODY2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgQ2FuZGFyYSBUdXI7fXtcZjg2OVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTg2XGZwcnEyIENhbmRhcmEgQmFsdGljO30NCntcZjg3MFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYzXGZwcnEyIENhbmRhcmEgKFZpZXRuYW1lc2UpO317XGY4NzJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIzOFxmcHJxMiBDYW5kYXJhIExpZ2h0IENFO317XGY4NzNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBDYW5kYXJhIExpZ2h0IEN5cjt9e1xmODc1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgQ2FuZGFyYSBMaWdodCBHcmVlazt9DQp7XGY4NzZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBDYW5kYXJhIExpZ2h0IFR1cjt9e1xmODc5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgQ2FuZGFyYSBMaWdodCBCYWx0aWM7fXtcZjg4MFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYzXGZwcnEyIENhbmRhcmEgTGlnaHQgKFZpZXRuYW1lc2UpO317XGY4ODJcZmJpZGkgXGZyb21hblxmY2hhcnNldDIzOFxmcHJxMiBDb25zdGFudGlhIENFO30NCntcZjg4M1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjA0XGZwcnEyIENvbnN0YW50aWEgQ3lyO317XGY4ODVcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MVxmcHJxMiBDb25zdGFudGlhIEdyZWVrO317XGY4ODZcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MlxmcHJxMiBDb25zdGFudGlhIFR1cjt9e1xmODg5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxODZcZnBycTIgQ29uc3RhbnRpYSBCYWx0aWM7fQ0Ke1xmODkwXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjNcZnBycTIgQ29uc3RhbnRpYSAoVmlldG5hbWVzZSk7fXtcZjg5MlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjM4XGZwcnEyIENvcmJlbCBDRTt9e1xmODkzXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgQ29yYmVsIEN5cjt9e1xmODk1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgQ29yYmVsIEdyZWVrO30NCntcZjg5NlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIENvcmJlbCBUdXI7fXtcZjg5OVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTg2XGZwcnEyIENvcmJlbCBCYWx0aWM7fXtcZjkwMFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYzXGZwcnEyIENvcmJlbCAoVmlldG5hbWVzZSk7fXtcZjkwMlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjM4XGZwcnEyIENvcmJlbCBMaWdodCBDRTt9DQp7XGY5MDNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBDb3JiZWwgTGlnaHQgQ3lyO317XGY5MDVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBDb3JiZWwgTGlnaHQgR3JlZWs7fXtcZjkwNlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIENvcmJlbCBMaWdodCBUdXI7fXtcZjkwOVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTg2XGZwcnEyIENvcmJlbCBMaWdodCBCYWx0aWM7fQ0Ke1xmOTEwXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjNcZnBycTIgQ29yYmVsIExpZ2h0IChWaWV0bmFtZXNlKTt9e1xmOTEyXGZiaWRpIFxmbmlsXGZjaGFyc2V0MjM4XGZwcnEyIEVicmltYSBDRTt9e1xmOTE2XGZiaWRpIFxmbmlsXGZjaGFyc2V0MTYyXGZwcnEyIEVicmltYSBUdXI7fXtcZjkxOVxmYmlkaSBcZm5pbFxmY2hhcnNldDE4NlxmcHJxMiBFYnJpbWEgQmFsdGljO30NCntcZjkyMlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjM4XGZwcnEyIEZyYW5rbGluIEdvdGhpYyBNZWRpdW0gQ0U7fXtcZjkyM1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjA0XGZwcnEyIEZyYW5rbGluIEdvdGhpYyBNZWRpdW0gQ3lyO317XGY5MjVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBGcmFua2xpbiBHb3RoaWMgTWVkaXVtIEdyZWVrO30NCntcZjkyNlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIEZyYW5rbGluIEdvdGhpYyBNZWRpdW0gVHVyO317XGY5MjlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE4NlxmcHJxMiBGcmFua2xpbiBHb3RoaWMgTWVkaXVtIEJhbHRpYzt9e1xmOTMyXGZiaWRpIFxmZGVjb3JcZmNoYXJzZXQyMzhcZnBycTIgR2FicmlvbGEgQ0U7fXtcZjkzM1xmYmlkaSBcZmRlY29yXGZjaGFyc2V0MjA0XGZwcnEyIEdhYnJpb2xhIEN5cjt9DQp7XGY5MzVcZmJpZGkgXGZkZWNvclxmY2hhcnNldDE2MVxmcHJxMiBHYWJyaW9sYSBHcmVlazt9e1xmOTM2XGZiaWRpIFxmZGVjb3JcZmNoYXJzZXQxNjJcZnBycTIgR2FicmlvbGEgVHVyO317XGY5MzlcZmJpZGkgXGZkZWNvclxmY2hhcnNldDE4NlxmcHJxMiBHYWJyaW9sYSBCYWx0aWM7fXtcZjk1MlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjM4XGZwcnEyIEdlb3JnaWEgQ0U7fQ0Ke1xmOTUzXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgR2VvcmdpYSBDeXI7fXtcZjk1NVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYxXGZwcnEyIEdlb3JnaWEgR3JlZWs7fXtcZjk1NlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYyXGZwcnEyIEdlb3JnaWEgVHVyO317XGY5NTlcZmJpZGkgXGZyb21hblxmY2hhcnNldDE4NlxmcHJxMiBHZW9yZ2lhIEJhbHRpYzt9DQp7XGY5NjJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIzOFxmcHJxMiBJbXBhY3QgQ0U7fXtcZjk2M1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjA0XGZwcnEyIEltcGFjdCBDeXI7fXtcZjk2NVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIEltcGFjdCBHcmVlazt9e1xmOTY2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgSW1wYWN0IFR1cjt9DQp7XGY5NjlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE4NlxmcHJxMiBJbXBhY3QgQmFsdGljO317XGYxMDAwXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjNcZnBycTIgTGVlbGF3YWRlZSBVSSAoVmlldG5hbWVzZSk7fXtcZjEwMDFcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIyMlxmcHJxMiBMZWVsYXdhZGVlIFVJIChUaGFpKTt9DQp7XGYxMDEwXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjNcZnBycTIgTGVlbGF3YWRlZSBVSSBTZW1pbGlnaHQgKFZpZXRuYW1lc2UpO317XGYxMDExXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMjJcZnBycTIgTGVlbGF3YWRlZSBVSSBTZW1pbGlnaHQgKFRoYWkpO317XGYxMDEyXGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MjM4XGZwcnExIEx1Y2lkYSBDb25zb2xlIENFO30NCntcZjEwMTNcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQyMDRcZnBycTEgTHVjaWRhIENvbnNvbGUgQ3lyO317XGYxMDE1XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTYxXGZwcnExIEx1Y2lkYSBDb25zb2xlIEdyZWVrO317XGYxMDE2XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MTYyXGZwcnExIEx1Y2lkYSBDb25zb2xlIFR1cjt9e1xmMTAyMlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjM4XGZwcnEyIEx1Y2lkYSBTYW5zIFVuaWNvZGUgQ0U7fQ0Ke1xmMTAyM1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjA0XGZwcnEyIEx1Y2lkYSBTYW5zIFVuaWNvZGUgQ3lyO317XGYxMDI1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgTHVjaWRhIFNhbnMgVW5pY29kZSBHcmVlazt9e1xmMTAyNlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIEx1Y2lkYSBTYW5zIFVuaWNvZGUgVHVyO30NCntcZjEwMjdcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE3N1xmcHJxMiBMdWNpZGEgU2FucyBVbmljb2RlIChIZWJyZXcpO317XGYxMDI5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgTHVjaWRhIFNhbnMgVW5pY29kZSBCYWx0aWM7fXtcZjEwMzRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTIgTWFsZ3VuIEdvdGhpYyBXZXN0ZXJuO30NCntcZjEwNDRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTIgQE1hbGd1biBHb3RoaWMgV2VzdGVybjt9e1xmMTA1NFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMiBNYWxndW4gR290aGljIFNlbWlsaWdodCBXZXN0ZXJuO317XGYxMDUzXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgTWFsZ3VuIEdvdGhpYyBTZW1pbGlnaHQgQ3lyO30NCntcZjEwNTVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBNYWxndW4gR290aGljIFNlbWlsaWdodCBHcmVlazt9e1xmMTA1NlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIE1hbGd1biBHb3RoaWMgU2VtaWxpZ2h0IFR1cjt9e1xmMTA1N1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTc3XGZwcnEyIE1hbGd1biBHb3RoaWMgU2VtaWxpZ2h0IChIZWJyZXcpO30NCntcZjEwNTlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE4NlxmcHJxMiBNYWxndW4gR290aGljIFNlbWlsaWdodCBCYWx0aWM7fXtcZjEwNjBcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2M1xmcHJxMiBNYWxndW4gR290aGljIFNlbWlsaWdodCAoVmlldG5hbWVzZSk7fXtcZjEwNjRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTIgQE1hbGd1biBHb3RoaWMgU2VtaWxpZ2h0IFdlc3Rlcm47fQ0Ke1xmMTA2M1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjA0XGZwcnEyIEBNYWxndW4gR290aGljIFNlbWlsaWdodCBDeXI7fXtcZjEwNjVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBATWFsZ3VuIEdvdGhpYyBTZW1pbGlnaHQgR3JlZWs7fXtcZjEwNjZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBATWFsZ3VuIEdvdGhpYyBTZW1pbGlnaHQgVHVyO30NCntcZjEwNjdcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE3N1xmcHJxMiBATWFsZ3VuIEdvdGhpYyBTZW1pbGlnaHQgKEhlYnJldyk7fXtcZjEwNjlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE4NlxmcHJxMiBATWFsZ3VuIEdvdGhpYyBTZW1pbGlnaHQgQmFsdGljO317XGYxMDcwXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjNcZnBycTIgQE1hbGd1biBHb3RoaWMgU2VtaWxpZ2h0IChWaWV0bmFtZXNlKTt9DQp7XGYxMDg0XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEyIE1pY3Jvc29mdCBKaGVuZ0hlaSBXZXN0ZXJuO317XGYxMDg1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgTWljcm9zb2Z0IEpoZW5nSGVpIEdyZWVrO317XGYxMDk0XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEyIEBNaWNyb3NvZnQgSmhlbmdIZWkgV2VzdGVybjt9DQp7XGYxMDk1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgQE1pY3Jvc29mdCBKaGVuZ0hlaSBHcmVlazt9e1xmMTEwNFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMiBNaWNyb3NvZnQgSmhlbmdIZWkgVUkgV2VzdGVybjt9e1xmMTEwNVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIE1pY3Jvc29mdCBKaGVuZ0hlaSBVSSBHcmVlazt9DQp7XGYxMTE0XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEyIEBNaWNyb3NvZnQgSmhlbmdIZWkgVUkgV2VzdGVybjt9e1xmMTExNVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIEBNaWNyb3NvZnQgSmhlbmdIZWkgVUkgR3JlZWs7fXtcZjExMjRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTIgTWljcm9zb2Z0IEpoZW5nSGVpIExpZ2h0IFdlc3Rlcm47fQ0Ke1xmMTEyNVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIE1pY3Jvc29mdCBKaGVuZ0hlaSBMaWdodCBHcmVlazt9e1xmMTEzNFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMiBATWljcm9zb2Z0IEpoZW5nSGVpIExpZ2h0IFdlc3Rlcm47fXtcZjExMzVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBATWljcm9zb2Z0IEpoZW5nSGVpIExpZ2h0IEdyZWVrO30NCntcZjExNDRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTIgTWljcm9zb2Z0IEpoZW5nSGVpIFVJIExpZ2h0IFdlc3Rlcm47fXtcZjExNDVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBNaWNyb3NvZnQgSmhlbmdIZWkgVUkgTGlnaHQgR3JlZWs7fXtcZjExNTRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTIgQE1pY3Jvc29mdCBKaGVuZ0hlaSBVSSBMaWdodCBXZXN0ZXJuO30NCntcZjExNTVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBATWljcm9zb2Z0IEpoZW5nSGVpIFVJIExpZ2h0IEdyZWVrO317XGYxMTgyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgTWljcm9zb2Z0IFNhbnMgU2VyaWYgQ0U7fXtcZjExODNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBNaWNyb3NvZnQgU2FucyBTZXJpZiBDeXI7fQ0Ke1xmMTE4NVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIE1pY3Jvc29mdCBTYW5zIFNlcmlmIEdyZWVrO317XGYxMTg2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgTWljcm9zb2Z0IFNhbnMgU2VyaWYgVHVyO317XGYxMTg3XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNzdcZnBycTIgTWljcm9zb2Z0IFNhbnMgU2VyaWYgKEhlYnJldyk7fQ0Ke1xmMTE4OFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTc4XGZwcnEyIE1pY3Jvc29mdCBTYW5zIFNlcmlmIChBcmFiaWMpO317XGYxMTg5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgTWljcm9zb2Z0IFNhbnMgU2VyaWYgQmFsdGljO317XGYxMTkwXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjNcZnBycTIgTWljcm9zb2Z0IFNhbnMgU2VyaWYgKFZpZXRuYW1lc2UpO30NCntcZjExOTFcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIyMlxmcHJxMiBNaWNyb3NvZnQgU2FucyBTZXJpZiAoVGhhaSk7fXtcZjEyMDRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTIgTWljcm9zb2Z0IFlhSGVpIFdlc3Rlcm47fXtcZjEyMDJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIzOFxmcHJxMiBNaWNyb3NvZnQgWWFIZWkgQ0U7fXtcZjEyMDNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBNaWNyb3NvZnQgWWFIZWkgQ3lyO30NCntcZjEyMDVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBNaWNyb3NvZnQgWWFIZWkgR3JlZWs7fXtcZjEyMDZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBNaWNyb3NvZnQgWWFIZWkgVHVyO317XGYxMjE0XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEyIEBNaWNyb3NvZnQgWWFIZWkgV2VzdGVybjt9e1xmMTIxMlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjM4XGZwcnEyIEBNaWNyb3NvZnQgWWFIZWkgQ0U7fQ0Ke1xmMTIxM1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjA0XGZwcnEyIEBNaWNyb3NvZnQgWWFIZWkgQ3lyO317XGYxMjE1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgQE1pY3Jvc29mdCBZYUhlaSBHcmVlazt9e1xmMTIxNlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIEBNaWNyb3NvZnQgWWFIZWkgVHVyO317XGYxMjI0XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEyIE1pY3Jvc29mdCBZYUhlaSBVSSBXZXN0ZXJuO30NCntcZjEyMjJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIzOFxmcHJxMiBNaWNyb3NvZnQgWWFIZWkgVUkgQ0U7fXtcZjEyMjNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBNaWNyb3NvZnQgWWFIZWkgVUkgQ3lyO317XGYxMjI1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgTWljcm9zb2Z0IFlhSGVpIFVJIEdyZWVrO30NCntcZjEyMjZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBNaWNyb3NvZnQgWWFIZWkgVUkgVHVyO317XGYxMjM0XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEyIEBNaWNyb3NvZnQgWWFIZWkgVUkgV2VzdGVybjt9e1xmMTIzMlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjM4XGZwcnEyIEBNaWNyb3NvZnQgWWFIZWkgVUkgQ0U7fQ0Ke1xmMTIzM1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjA0XGZwcnEyIEBNaWNyb3NvZnQgWWFIZWkgVUkgQ3lyO317XGYxMjM1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgQE1pY3Jvc29mdCBZYUhlaSBVSSBHcmVlazt9e1xmMTIzNlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIEBNaWNyb3NvZnQgWWFIZWkgVUkgVHVyO30NCntcZjEyNDRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTIgTWljcm9zb2Z0IFlhSGVpIExpZ2h0IFdlc3Rlcm47fXtcZjEyNDJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIzOFxmcHJxMiBNaWNyb3NvZnQgWWFIZWkgTGlnaHQgQ0U7fXtcZjEyNDNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBNaWNyb3NvZnQgWWFIZWkgTGlnaHQgQ3lyO30NCntcZjEyNDVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBNaWNyb3NvZnQgWWFIZWkgTGlnaHQgR3JlZWs7fXtcZjEyNDZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBNaWNyb3NvZnQgWWFIZWkgTGlnaHQgVHVyO317XGYxMjU0XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEyIEBNaWNyb3NvZnQgWWFIZWkgTGlnaHQgV2VzdGVybjt9DQp7XGYxMjUyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgQE1pY3Jvc29mdCBZYUhlaSBMaWdodCBDRTt9e1xmMTI1M1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjA0XGZwcnEyIEBNaWNyb3NvZnQgWWFIZWkgTGlnaHQgQ3lyO317XGYxMjU1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgQE1pY3Jvc29mdCBZYUhlaSBMaWdodCBHcmVlazt9DQp7XGYxMjU2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgQE1pY3Jvc29mdCBZYUhlaSBMaWdodCBUdXI7fXtcZjEyNjRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTIgTWljcm9zb2Z0IFlhSGVpIFVJIExpZ2h0IFdlc3Rlcm47fXtcZjEyNjJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIzOFxmcHJxMiBNaWNyb3NvZnQgWWFIZWkgVUkgTGlnaHQgQ0U7fQ0Ke1xmMTI2M1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjA0XGZwcnEyIE1pY3Jvc29mdCBZYUhlaSBVSSBMaWdodCBDeXI7fXtcZjEyNjVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBNaWNyb3NvZnQgWWFIZWkgVUkgTGlnaHQgR3JlZWs7fXtcZjEyNjZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBNaWNyb3NvZnQgWWFIZWkgVUkgTGlnaHQgVHVyO30NCntcZjEyNzRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTIgQE1pY3Jvc29mdCBZYUhlaSBVSSBMaWdodCBXZXN0ZXJuO317XGYxMjcyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgQE1pY3Jvc29mdCBZYUhlaSBVSSBMaWdodCBDRTt9e1xmMTI3M1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjA0XGZwcnEyIEBNaWNyb3NvZnQgWWFIZWkgVUkgTGlnaHQgQ3lyO30NCntcZjEyNzVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBATWljcm9zb2Z0IFlhSGVpIFVJIExpZ2h0IEdyZWVrO317XGYxMjc2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgQE1pY3Jvc29mdCBZYUhlaSBVSSBMaWdodCBUdXI7fXtcZjEyOTRcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTIgQE1pbmdMaVUtRXh0QiBXZXN0ZXJuO30NCntcZjEzMDRcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTIgUE1pbmdMaVUtRXh0QiBXZXN0ZXJuO317XGYxMzE0XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEyIEBQTWluZ0xpVS1FeHRCIFdlc3Rlcm47fXtcZjEzMjRcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTIgTWluZ0xpVV9IS1NDUy1FeHRCIFdlc3Rlcm47fQ0Ke1xmMTMzNFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMiBATWluZ0xpVV9IS1NDUy1FeHRCIFdlc3Rlcm47fXtcZjEzNTRcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQwXGZwcnExIEBNUyBHb3RoaWMgV2VzdGVybjt9e1xmMTM1MlxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDIzOFxmcHJxMSBATVMgR290aGljIENFO317XGYxMzUzXGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MjA0XGZwcnExIEBNUyBHb3RoaWMgQ3lyO30NCntcZjEzNTVcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxNjFcZnBycTEgQE1TIEdvdGhpYyBHcmVlazt9e1xmMTM1NlxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDE2MlxmcHJxMSBATVMgR290aGljIFR1cjt9e1xmMTM1OVxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDE4NlxmcHJxMSBATVMgR290aGljIEJhbHRpYzt9e1xmMTM2NFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMiBNUyBVSSBHb3RoaWMgV2VzdGVybjt9DQp7XGYxMzYyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgTVMgVUkgR290aGljIENFO317XGYxMzYzXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgTVMgVUkgR290aGljIEN5cjt9e1xmMTM2NVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIE1TIFVJIEdvdGhpYyBHcmVlazt9e1xmMTM2NlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIE1TIFVJIEdvdGhpYyBUdXI7fQ0Ke1xmMTM2OVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTg2XGZwcnEyIE1TIFVJIEdvdGhpYyBCYWx0aWM7fXtcZjEzNzRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTIgQE1TIFVJIEdvdGhpYyBXZXN0ZXJuO317XGYxMzcyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgQE1TIFVJIEdvdGhpYyBDRTt9e1xmMTM3M1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjA0XGZwcnEyIEBNUyBVSSBHb3RoaWMgQ3lyO30NCntcZjEzNzVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBATVMgVUkgR290aGljIEdyZWVrO317XGYxMzc2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgQE1TIFVJIEdvdGhpYyBUdXI7fXtcZjEzNzlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE4NlxmcHJxMiBATVMgVUkgR290aGljIEJhbHRpYzt9e1xmMTM4NFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMiBNUyBQR290aGljIFdlc3Rlcm47fQ0Ke1xmMTM4MlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjM4XGZwcnEyIE1TIFBHb3RoaWMgQ0U7fXtcZjEzODNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBNUyBQR290aGljIEN5cjt9e1xmMTM4NVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIE1TIFBHb3RoaWMgR3JlZWs7fXtcZjEzODZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBNUyBQR290aGljIFR1cjt9DQp7XGYxMzg5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgTVMgUEdvdGhpYyBCYWx0aWM7fXtcZjEzOTRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTIgQE1TIFBHb3RoaWMgV2VzdGVybjt9e1xmMTM5MlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjM4XGZwcnEyIEBNUyBQR290aGljIENFO317XGYxMzkzXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgQE1TIFBHb3RoaWMgQ3lyO30NCntcZjEzOTVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBATVMgUEdvdGhpYyBHcmVlazt9e1xmMTM5NlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIEBNUyBQR290aGljIFR1cjt9e1xmMTM5OVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTg2XGZwcnEyIEBNUyBQR290aGljIEJhbHRpYzt9e1xmMTQ1MlxmYmlkaSBcZm5pbFxmY2hhcnNldDIzOFxmcHJxMiBTZWdvZSBQcmludCBDRTt9DQp7XGYxNDUzXGZiaWRpIFxmbmlsXGZjaGFyc2V0MjA0XGZwcnEyIFNlZ29lIFByaW50IEN5cjt9e1xmMTQ1NVxmYmlkaSBcZm5pbFxmY2hhcnNldDE2MVxmcHJxMiBTZWdvZSBQcmludCBHcmVlazt9e1xmMTQ1NlxmYmlkaSBcZm5pbFxmY2hhcnNldDE2MlxmcHJxMiBTZWdvZSBQcmludCBUdXI7fXtcZjE0NTlcZmJpZGkgXGZuaWxcZmNoYXJzZXQxODZcZnBycTIgU2Vnb2UgUHJpbnQgQmFsdGljO30NCntcZjE0NjJcZmJpZGkgXGZzY3JpcHRcZmNoYXJzZXQyMzhcZnBycTIgU2Vnb2UgU2NyaXB0IENFO317XGYxNDYzXGZiaWRpIFxmc2NyaXB0XGZjaGFyc2V0MjA0XGZwcnEyIFNlZ29lIFNjcmlwdCBDeXI7fXtcZjE0NjVcZmJpZGkgXGZzY3JpcHRcZmNoYXJzZXQxNjFcZnBycTIgU2Vnb2UgU2NyaXB0IEdyZWVrO317XGYxNDY2XGZiaWRpIFxmc2NyaXB0XGZjaGFyc2V0MTYyXGZwcnEyIFNlZ29lIFNjcmlwdCBUdXI7fQ0Ke1xmMTQ2OVxmYmlkaSBcZnNjcmlwdFxmY2hhcnNldDE4NlxmcHJxMiBTZWdvZSBTY3JpcHQgQmFsdGljO317XGYxNDcyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgU2Vnb2UgVUkgQ0U7fXtcZjE0NzNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBTZWdvZSBVSSBDeXI7fXtcZjE0NzVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBTZWdvZSBVSSBHcmVlazt9DQp7XGYxNDc2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgU2Vnb2UgVUkgVHVyO317XGYxNDc3XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNzdcZnBycTIgU2Vnb2UgVUkgKEhlYnJldyk7fXtcZjE0NzhcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE3OFxmcHJxMiBTZWdvZSBVSSAoQXJhYmljKTt9e1xmMTQ3OVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTg2XGZwcnEyIFNlZ29lIFVJIEJhbHRpYzt9DQp7XGYxNDgwXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjNcZnBycTIgU2Vnb2UgVUkgKFZpZXRuYW1lc2UpO317XGYxNDgyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgU2Vnb2UgVUkgQmxhY2sgQ0U7fXtcZjE0ODNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBTZWdvZSBVSSBCbGFjayBDeXI7fXtcZjE0ODVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBTZWdvZSBVSSBCbGFjayBHcmVlazt9DQp7XGYxNDg2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgU2Vnb2UgVUkgQmxhY2sgVHVyO317XGYxNDg5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgU2Vnb2UgVUkgQmxhY2sgQmFsdGljO317XGYxNDkwXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjNcZnBycTIgU2Vnb2UgVUkgQmxhY2sgKFZpZXRuYW1lc2UpO317XGYxNTEyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgU2Vnb2UgVUkgTGlnaHQgQ0U7fQ0Ke1xmMTUxM1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjA0XGZwcnEyIFNlZ29lIFVJIExpZ2h0IEN5cjt9e1xmMTUxNVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIFNlZ29lIFVJIExpZ2h0IEdyZWVrO317XGYxNTE2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgU2Vnb2UgVUkgTGlnaHQgVHVyO317XGYxNTE3XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNzdcZnBycTIgU2Vnb2UgVUkgTGlnaHQgKEhlYnJldyk7fQ0Ke1xmMTUxOFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTc4XGZwcnEyIFNlZ29lIFVJIExpZ2h0IChBcmFiaWMpO317XGYxNTE5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgU2Vnb2UgVUkgTGlnaHQgQmFsdGljO317XGYxNTIwXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjNcZnBycTIgU2Vnb2UgVUkgTGlnaHQgKFZpZXRuYW1lc2UpO30NCntcZjE1MjJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIzOFxmcHJxMiBTZWdvZSBVSSBTZW1pYm9sZCBDRTt9e1xmMTUyM1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjA0XGZwcnEyIFNlZ29lIFVJIFNlbWlib2xkIEN5cjt9e1xmMTUyNVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIFNlZ29lIFVJIFNlbWlib2xkIEdyZWVrO317XGYxNTI2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgU2Vnb2UgVUkgU2VtaWJvbGQgVHVyO30NCntcZjE1MjdcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE3N1xmcHJxMiBTZWdvZSBVSSBTZW1pYm9sZCAoSGVicmV3KTt9e1xmMTUyOFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTc4XGZwcnEyIFNlZ29lIFVJIFNlbWlib2xkIChBcmFiaWMpO317XGYxNTI5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgU2Vnb2UgVUkgU2VtaWJvbGQgQmFsdGljO30NCntcZjE1MzBcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2M1xmcHJxMiBTZWdvZSBVSSBTZW1pYm9sZCAoVmlldG5hbWVzZSk7fXtcZjE1MzJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIzOFxmcHJxMiBTZWdvZSBVSSBTZW1pbGlnaHQgQ0U7fXtcZjE1MzNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBTZWdvZSBVSSBTZW1pbGlnaHQgQ3lyO30NCntcZjE1MzVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBTZWdvZSBVSSBTZW1pbGlnaHQgR3JlZWs7fXtcZjE1MzZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBTZWdvZSBVSSBTZW1pbGlnaHQgVHVyO317XGYxNTM3XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNzdcZnBycTIgU2Vnb2UgVUkgU2VtaWxpZ2h0IChIZWJyZXcpO30NCntcZjE1MzhcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE3OFxmcHJxMiBTZWdvZSBVSSBTZW1pbGlnaHQgKEFyYWJpYyk7fXtcZjE1MzlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE4NlxmcHJxMiBTZWdvZSBVSSBTZW1pbGlnaHQgQmFsdGljO317XGYxNTQwXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjNcZnBycTIgU2Vnb2UgVUkgU2VtaWxpZ2h0IChWaWV0bmFtZXNlKTt9DQp7XGYxNTU0XGZiaWRpIFxmbmlsXGZjaGFyc2V0MFxmcHJxMiBAU2ltU3VuIFdlc3Rlcm47fXtcZjE1NjRcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQwXGZwcnExIE5TaW1TdW4gV2VzdGVybjt9e1xmMTU3NFxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDBcZnBycTEgQE5TaW1TdW4gV2VzdGVybjt9e1xmMTU4NFxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDBcZnBycTEgU2ltU3VuLUV4dEIgV2VzdGVybjt9DQp7XGYxNTk0XGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MFxmcHJxMSBAU2ltU3VuLUV4dEIgV2VzdGVybjt9e1xmMTYwMlxmYmlkaSBcZm5pbFxmY2hhcnNldDIzOFxmcHJxMiBTaXRrYSBTbWFsbCBDRTt9e1xmMTYwM1xmYmlkaSBcZm5pbFxmY2hhcnNldDIwNFxmcHJxMiBTaXRrYSBTbWFsbCBDeXI7fXtcZjE2MDVcZmJpZGkgXGZuaWxcZmNoYXJzZXQxNjFcZnBycTIgU2l0a2EgU21hbGwgR3JlZWs7fQ0Ke1xmMTYwNlxmYmlkaSBcZm5pbFxmY2hhcnNldDE2MlxmcHJxMiBTaXRrYSBTbWFsbCBUdXI7fXtcZjE2MDlcZmJpZGkgXGZuaWxcZmNoYXJzZXQxODZcZnBycTIgU2l0a2EgU21hbGwgQmFsdGljO317XGYxNjEwXGZiaWRpIFxmbmlsXGZjaGFyc2V0MTYzXGZwcnEyIFNpdGthIFNtYWxsIChWaWV0bmFtZXNlKTt9e1xmMTYxMlxmYmlkaSBcZm5pbFxmY2hhcnNldDIzOFxmcHJxMiBTaXRrYSBUZXh0IENFO30NCntcZjE2MTNcZmJpZGkgXGZuaWxcZmNoYXJzZXQyMDRcZnBycTIgU2l0a2EgVGV4dCBDeXI7fXtcZjE2MTVcZmJpZGkgXGZuaWxcZmNoYXJzZXQxNjFcZnBycTIgU2l0a2EgVGV4dCBHcmVlazt9e1xmMTYxNlxmYmlkaSBcZm5pbFxmY2hhcnNldDE2MlxmcHJxMiBTaXRrYSBUZXh0IFR1cjt9e1xmMTYxOVxmYmlkaSBcZm5pbFxmY2hhcnNldDE4NlxmcHJxMiBTaXRrYSBUZXh0IEJhbHRpYzt9DQp7XGYxNjIwXGZiaWRpIFxmbmlsXGZjaGFyc2V0MTYzXGZwcnEyIFNpdGthIFRleHQgKFZpZXRuYW1lc2UpO317XGYxNjIyXGZiaWRpIFxmbmlsXGZjaGFyc2V0MjM4XGZwcnEyIFNpdGthIFN1YmhlYWRpbmcgQ0U7fXtcZjE2MjNcZmJpZGkgXGZuaWxcZmNoYXJzZXQyMDRcZnBycTIgU2l0a2EgU3ViaGVhZGluZyBDeXI7fXtcZjE2MjVcZmJpZGkgXGZuaWxcZmNoYXJzZXQxNjFcZnBycTIgU2l0a2EgU3ViaGVhZGluZyBHcmVlazt9DQp7XGYxNjI2XGZiaWRpIFxmbmlsXGZjaGFyc2V0MTYyXGZwcnEyIFNpdGthIFN1YmhlYWRpbmcgVHVyO317XGYxNjI5XGZiaWRpIFxmbmlsXGZjaGFyc2V0MTg2XGZwcnEyIFNpdGthIFN1YmhlYWRpbmcgQmFsdGljO317XGYxNjMwXGZiaWRpIFxmbmlsXGZjaGFyc2V0MTYzXGZwcnEyIFNpdGthIFN1YmhlYWRpbmcgKFZpZXRuYW1lc2UpO317XGYxNjMyXGZiaWRpIFxmbmlsXGZjaGFyc2V0MjM4XGZwcnEyIFNpdGthIEhlYWRpbmcgQ0U7fQ0Ke1xmMTYzM1xmYmlkaSBcZm5pbFxmY2hhcnNldDIwNFxmcHJxMiBTaXRrYSBIZWFkaW5nIEN5cjt9e1xmMTYzNVxmYmlkaSBcZm5pbFxmY2hhcnNldDE2MVxmcHJxMiBTaXRrYSBIZWFkaW5nIEdyZWVrO317XGYxNjM2XGZiaWRpIFxmbmlsXGZjaGFyc2V0MTYyXGZwcnEyIFNpdGthIEhlYWRpbmcgVHVyO317XGYxNjM5XGZiaWRpIFxmbmlsXGZjaGFyc2V0MTg2XGZwcnEyIFNpdGthIEhlYWRpbmcgQmFsdGljO30NCntcZjE2NDBcZmJpZGkgXGZuaWxcZmNoYXJzZXQxNjNcZnBycTIgU2l0a2EgSGVhZGluZyAoVmlldG5hbWVzZSk7fXtcZjE2NDJcZmJpZGkgXGZuaWxcZmNoYXJzZXQyMzhcZnBycTIgU2l0a2EgRGlzcGxheSBDRTt9e1xmMTY0M1xmYmlkaSBcZm5pbFxmY2hhcnNldDIwNFxmcHJxMiBTaXRrYSBEaXNwbGF5IEN5cjt9e1xmMTY0NVxmYmlkaSBcZm5pbFxmY2hhcnNldDE2MVxmcHJxMiBTaXRrYSBEaXNwbGF5IEdyZWVrO30NCntcZjE2NDZcZmJpZGkgXGZuaWxcZmNoYXJzZXQxNjJcZnBycTIgU2l0a2EgRGlzcGxheSBUdXI7fXtcZjE2NDlcZmJpZGkgXGZuaWxcZmNoYXJzZXQxODZcZnBycTIgU2l0a2EgRGlzcGxheSBCYWx0aWM7fXtcZjE2NTBcZmJpZGkgXGZuaWxcZmNoYXJzZXQxNjNcZnBycTIgU2l0a2EgRGlzcGxheSAoVmlldG5hbWVzZSk7fXtcZjE2NTJcZmJpZGkgXGZuaWxcZmNoYXJzZXQyMzhcZnBycTIgU2l0a2EgQmFubmVyIENFO30NCntcZjE2NTNcZmJpZGkgXGZuaWxcZmNoYXJzZXQyMDRcZnBycTIgU2l0a2EgQmFubmVyIEN5cjt9e1xmMTY1NVxmYmlkaSBcZm5pbFxmY2hhcnNldDE2MVxmcHJxMiBTaXRrYSBCYW5uZXIgR3JlZWs7fXtcZjE2NTZcZmJpZGkgXGZuaWxcZmNoYXJzZXQxNjJcZnBycTIgU2l0a2EgQmFubmVyIFR1cjt9e1xmMTY1OVxmYmlkaSBcZm5pbFxmY2hhcnNldDE4NlxmcHJxMiBTaXRrYSBCYW5uZXIgQmFsdGljO30NCntcZjE2NjBcZmJpZGkgXGZuaWxcZmNoYXJzZXQxNjNcZnBycTIgU2l0a2EgQmFubmVyIChWaWV0bmFtZXNlKTt9e1xmMTY2MlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjM4XGZwcnEyIFRyZWJ1Y2hldCBNUyBDRTt9e1xmMTY2M1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjA0XGZwcnEyIFRyZWJ1Y2hldCBNUyBDeXI7fXtcZjE2NjVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBUcmVidWNoZXQgTVMgR3JlZWs7fQ0Ke1xmMTY2NlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIFRyZWJ1Y2hldCBNUyBUdXI7fXtcZjE2NjlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE4NlxmcHJxMiBUcmVidWNoZXQgTVMgQmFsdGljO317XGYxNjcyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgVmVyZGFuYSBDRTt9e1xmMTY3M1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjA0XGZwcnEyIFZlcmRhbmEgQ3lyO30NCntcZjE2NzVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBWZXJkYW5hIEdyZWVrO317XGYxNjc2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgVmVyZGFuYSBUdXI7fXtcZjE2NzlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE4NlxmcHJxMiBWZXJkYW5hIEJhbHRpYzt9e1xmMTY4MFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYzXGZwcnEyIFZlcmRhbmEgKFZpZXRuYW1lc2UpO30NCntcZjE2OTRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTIgQFl1IEdvdGhpYyBXZXN0ZXJuO317XGYxNjkyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgQFl1IEdvdGhpYyBDRTt9e1xmMTY5M1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjA0XGZwcnEyIEBZdSBHb3RoaWMgQ3lyO317XGYxNjk1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgQFl1IEdvdGhpYyBHcmVlazt9DQp7XGYxNjk2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgQFl1IEdvdGhpYyBUdXI7fXtcZjE2OTlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE4NlxmcHJxMiBAWXUgR290aGljIEJhbHRpYzt9e1xmMTcwNFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMiBZdSBHb3RoaWMgVUkgV2VzdGVybjt9e1xmMTcwMlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjM4XGZwcnEyIFl1IEdvdGhpYyBVSSBDRTt9DQp7XGYxNzAzXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgWXUgR290aGljIFVJIEN5cjt9e1xmMTcwNVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIFl1IEdvdGhpYyBVSSBHcmVlazt9e1xmMTcwNlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIFl1IEdvdGhpYyBVSSBUdXI7fXtcZjE3MDlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE4NlxmcHJxMiBZdSBHb3RoaWMgVUkgQmFsdGljO30NCntcZjE3MTRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTIgQFl1IEdvdGhpYyBVSSBXZXN0ZXJuO317XGYxNzEyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgQFl1IEdvdGhpYyBVSSBDRTt9e1xmMTcxM1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjA0XGZwcnEyIEBZdSBHb3RoaWMgVUkgQ3lyO317XGYxNzE1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgQFl1IEdvdGhpYyBVSSBHcmVlazt9DQp7XGYxNzE2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgQFl1IEdvdGhpYyBVSSBUdXI7fXtcZjE3MTlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE4NlxmcHJxMiBAWXUgR290aGljIFVJIEJhbHRpYzt9e1xmMTcyNFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMiBZdSBHb3RoaWMgVUkgU2VtaWJvbGQgV2VzdGVybjt9DQp7XGYxNzIyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgWXUgR290aGljIFVJIFNlbWlib2xkIENFO317XGYxNzIzXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgWXUgR290aGljIFVJIFNlbWlib2xkIEN5cjt9e1xmMTcyNVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIFl1IEdvdGhpYyBVSSBTZW1pYm9sZCBHcmVlazt9DQp7XGYxNzI2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgWXUgR290aGljIFVJIFNlbWlib2xkIFR1cjt9e1xmMTcyOVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTg2XGZwcnEyIFl1IEdvdGhpYyBVSSBTZW1pYm9sZCBCYWx0aWM7fXtcZjE3MzRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTIgQFl1IEdvdGhpYyBVSSBTZW1pYm9sZCBXZXN0ZXJuO30NCntcZjE3MzJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIzOFxmcHJxMiBAWXUgR290aGljIFVJIFNlbWlib2xkIENFO317XGYxNzMzXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgQFl1IEdvdGhpYyBVSSBTZW1pYm9sZCBDeXI7fXtcZjE3MzVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBAWXUgR290aGljIFVJIFNlbWlib2xkIEdyZWVrO30NCntcZjE3MzZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBAWXUgR290aGljIFVJIFNlbWlib2xkIFR1cjt9e1xmMTczOVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTg2XGZwcnEyIEBZdSBHb3RoaWMgVUkgU2VtaWJvbGQgQmFsdGljO317XGYxNzQ0XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEyIFl1IEdvdGhpYyBMaWdodCBXZXN0ZXJuO30NCntcZjE3NDJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIzOFxmcHJxMiBZdSBHb3RoaWMgTGlnaHQgQ0U7fXtcZjE3NDNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBZdSBHb3RoaWMgTGlnaHQgQ3lyO317XGYxNzQ1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgWXUgR290aGljIExpZ2h0IEdyZWVrO317XGYxNzQ2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgWXUgR290aGljIExpZ2h0IFR1cjt9DQp7XGYxNzQ5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgWXUgR290aGljIExpZ2h0IEJhbHRpYzt9e1xmMTc1NFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMiBAWXUgR290aGljIExpZ2h0IFdlc3Rlcm47fXtcZjE3NTJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIzOFxmcHJxMiBAWXUgR290aGljIExpZ2h0IENFO317XGYxNzUzXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgQFl1IEdvdGhpYyBMaWdodCBDeXI7fQ0Ke1xmMTc1NVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIEBZdSBHb3RoaWMgTGlnaHQgR3JlZWs7fXtcZjE3NTZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBAWXUgR290aGljIExpZ2h0IFR1cjt9e1xmMTc1OVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTg2XGZwcnEyIEBZdSBHb3RoaWMgTGlnaHQgQmFsdGljO30NCntcZjE3NjRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTIgWXUgR290aGljIFVJIExpZ2h0IFdlc3Rlcm47fXtcZjE3NjJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIzOFxmcHJxMiBZdSBHb3RoaWMgVUkgTGlnaHQgQ0U7fXtcZjE3NjNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBZdSBHb3RoaWMgVUkgTGlnaHQgQ3lyO30NCntcZjE3NjVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBZdSBHb3RoaWMgVUkgTGlnaHQgR3JlZWs7fXtcZjE3NjZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBZdSBHb3RoaWMgVUkgTGlnaHQgVHVyO317XGYxNzY5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgWXUgR290aGljIFVJIExpZ2h0IEJhbHRpYzt9DQp7XGYxNzc0XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEyIEBZdSBHb3RoaWMgVUkgTGlnaHQgV2VzdGVybjt9e1xmMTc3MlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjM4XGZwcnEyIEBZdSBHb3RoaWMgVUkgTGlnaHQgQ0U7fXtcZjE3NzNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBAWXUgR290aGljIFVJIExpZ2h0IEN5cjt9DQp7XGYxNzc1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgQFl1IEdvdGhpYyBVSSBMaWdodCBHcmVlazt9e1xmMTc3NlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIEBZdSBHb3RoaWMgVUkgTGlnaHQgVHVyO317XGYxNzc5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgQFl1IEdvdGhpYyBVSSBMaWdodCBCYWx0aWM7fQ0Ke1xmMTc4NFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMiBZdSBHb3RoaWMgTWVkaXVtIFdlc3Rlcm47fXtcZjE3ODJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIzOFxmcHJxMiBZdSBHb3RoaWMgTWVkaXVtIENFO317XGYxNzgzXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgWXUgR290aGljIE1lZGl1bSBDeXI7fXtcZjE3ODVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBZdSBHb3RoaWMgTWVkaXVtIEdyZWVrO30NCntcZjE3ODZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBZdSBHb3RoaWMgTWVkaXVtIFR1cjt9e1xmMTc4OVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTg2XGZwcnEyIFl1IEdvdGhpYyBNZWRpdW0gQmFsdGljO317XGYxNzk0XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEyIEBZdSBHb3RoaWMgTWVkaXVtIFdlc3Rlcm47fXtcZjE3OTJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIzOFxmcHJxMiBAWXUgR290aGljIE1lZGl1bSBDRTt9DQp7XGYxNzkzXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgQFl1IEdvdGhpYyBNZWRpdW0gQ3lyO317XGYxNzk1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgQFl1IEdvdGhpYyBNZWRpdW0gR3JlZWs7fXtcZjE3OTZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBAWXUgR290aGljIE1lZGl1bSBUdXI7fQ0Ke1xmMTc5OVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTg2XGZwcnEyIEBZdSBHb3RoaWMgTWVkaXVtIEJhbHRpYzt9e1xmMTgwNFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMiBZdSBHb3RoaWMgVUkgU2VtaWxpZ2h0IFdlc3Rlcm47fXtcZjE4MDJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIzOFxmcHJxMiBZdSBHb3RoaWMgVUkgU2VtaWxpZ2h0IENFO30NCntcZjE4MDNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBZdSBHb3RoaWMgVUkgU2VtaWxpZ2h0IEN5cjt9e1xmMTgwNVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIFl1IEdvdGhpYyBVSSBTZW1pbGlnaHQgR3JlZWs7fXtcZjE4MDZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBZdSBHb3RoaWMgVUkgU2VtaWxpZ2h0IFR1cjt9DQp7XGYxODA5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgWXUgR290aGljIFVJIFNlbWlsaWdodCBCYWx0aWM7fXtcZjE4MTRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTIgQFl1IEdvdGhpYyBVSSBTZW1pbGlnaHQgV2VzdGVybjt9e1xmMTgxMlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjM4XGZwcnEyIEBZdSBHb3RoaWMgVUkgU2VtaWxpZ2h0IENFO30NCntcZjE4MTNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBAWXUgR290aGljIFVJIFNlbWlsaWdodCBDeXI7fXtcZjE4MTVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBAWXUgR290aGljIFVJIFNlbWlsaWdodCBHcmVlazt9e1xmMTgxNlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIEBZdSBHb3RoaWMgVUkgU2VtaWxpZ2h0IFR1cjt9DQp7XGYxODE5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgQFl1IEdvdGhpYyBVSSBTZW1pbGlnaHQgQmFsdGljO317XGYxODM0XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEyIEBBcmlhbCBVbmljb2RlIE1TIFdlc3Rlcm47fXtcZjE4MzJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIzOFxmcHJxMiBAQXJpYWwgVW5pY29kZSBNUyBDRTt9DQp7XGYxODMzXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgQEFyaWFsIFVuaWNvZGUgTVMgQ3lyO317XGYxODM1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgQEFyaWFsIFVuaWNvZGUgTVMgR3JlZWs7fXtcZjE4MzZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBAQXJpYWwgVW5pY29kZSBNUyBUdXI7fQ0Ke1xmMTgzN1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTc3XGZwcnEyIEBBcmlhbCBVbmljb2RlIE1TIChIZWJyZXcpO317XGYxODM4XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNzhcZnBycTIgQEFyaWFsIFVuaWNvZGUgTVMgKEFyYWJpYyk7fXtcZjE4MzlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE4NlxmcHJxMiBAQXJpYWwgVW5pY29kZSBNUyBCYWx0aWM7fQ0Ke1xmMTg0MFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYzXGZwcnEyIEBBcmlhbCBVbmljb2RlIE1TIChWaWV0bmFtZXNlKTt9e1xmMTg0MVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjIyXGZwcnEyIEBBcmlhbCBVbmljb2RlIE1TIChUaGFpKTt9e1xmMTg3MlxmYmlkaSBcZnNjcmlwdFxmY2hhcnNldDIzOFxmcHJxMiBNaXN0cmFsIENFO317XGYxODczXGZiaWRpIFxmc2NyaXB0XGZjaGFyc2V0MjA0XGZwcnEyIE1pc3RyYWwgQ3lyO30NCntcZjE4NzVcZmJpZGkgXGZzY3JpcHRcZmNoYXJzZXQxNjFcZnBycTIgTWlzdHJhbCBHcmVlazt9e1xmMTg3NlxmYmlkaSBcZnNjcmlwdFxmY2hhcnNldDE2MlxmcHJxMiBNaXN0cmFsIFR1cjt9e1xmMTg3OVxmYmlkaSBcZnNjcmlwdFxmY2hhcnNldDE4NlxmcHJxMiBNaXN0cmFsIEJhbHRpYzt9e1xmMTkyMlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjM4XGZwcnEyIEJvb2sgQW50aXF1YSBDRTt9DQp7XGYxOTIzXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgQm9vayBBbnRpcXVhIEN5cjt9e1xmMTkyNVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYxXGZwcnEyIEJvb2sgQW50aXF1YSBHcmVlazt9e1xmMTkyNlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYyXGZwcnEyIEJvb2sgQW50aXF1YSBUdXI7fXtcZjE5MjlcZmJpZGkgXGZyb21hblxmY2hhcnNldDE4NlxmcHJxMiBCb29rIEFudGlxdWEgQmFsdGljO30NCntcZjE5MzJcZmJpZGkgXGZzY3JpcHRcZmNoYXJzZXQyMzhcZnBycTIgTW9ub3R5cGUgQ29yc2l2YSBDRTt9e1xmMTkzM1xmYmlkaSBcZnNjcmlwdFxmY2hhcnNldDIwNFxmcHJxMiBNb25vdHlwZSBDb3JzaXZhIEN5cjt9e1xmMTkzNVxmYmlkaSBcZnNjcmlwdFxmY2hhcnNldDE2MVxmcHJxMiBNb25vdHlwZSBDb3JzaXZhIEdyZWVrO317XGYxOTM2XGZiaWRpIFxmc2NyaXB0XGZjaGFyc2V0MTYyXGZwcnEyIE1vbm90eXBlIENvcnNpdmEgVHVyO30NCntcZjE5MzlcZmJpZGkgXGZzY3JpcHRcZmNoYXJzZXQxODZcZnBycTIgTW9ub3R5cGUgQ29yc2l2YSBCYWx0aWM7fXtcZjE5NDJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIzOFxmcHJxMiBDZW50dXJ5IEdvdGhpYyBDRTt9e1xmMTk0M1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjA0XGZwcnEyIENlbnR1cnkgR290aGljIEN5cjt9e1xmMTk0NVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIENlbnR1cnkgR290aGljIEdyZWVrO30NCntcZjE5NDZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBDZW50dXJ5IEdvdGhpYyBUdXI7fXtcZjE5NDlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE4NlxmcHJxMiBDZW50dXJ5IEdvdGhpYyBCYWx0aWM7fXtcZjIwMTZcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MlxmcHJxMiBCb2RvbmkgTVQgUG9zdGVyIENvbXByZXNzZWQgVHVyO30NCntcZjIzODJcZmJpZGkgXGZyb21hblxmY2hhcnNldDIzOFxmcHJxMiBCb29rbWFuIE9sZCBTdHlsZSBDRTt9e1xmMjM4M1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjA0XGZwcnEyIEJvb2ttYW4gT2xkIFN0eWxlIEN5cjt9e1xmMjM4NVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYxXGZwcnEyIEJvb2ttYW4gT2xkIFN0eWxlIEdyZWVrO317XGYyMzg2XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjJcZnBycTIgQm9va21hbiBPbGQgU3R5bGUgVHVyO30NCntcZjIzODlcZmJpZGkgXGZyb21hblxmY2hhcnNldDE4NlxmcHJxMiBCb29rbWFuIE9sZCBTdHlsZSBCYWx0aWM7fXtcZjI0MDJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIzOFxmcHJxMiBBcmlhbCBOYXJyb3cgQ0U7fXtcZjI0MDNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBBcmlhbCBOYXJyb3cgQ3lyO317XGYyNDA1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgQXJpYWwgTmFycm93IEdyZWVrO30NCntcZjI0MDZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBBcmlhbCBOYXJyb3cgVHVyO317XGYyNDA5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgQXJpYWwgTmFycm93IEJhbHRpYzt9e1xmMjQxMlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjM4XGZwcnEyIFNlZ29lIENvbmRlbnNlZCBDRTt9e1xmMjQxM1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjA0XGZwcnEyIFNlZ29lIENvbmRlbnNlZCBDeXI7fQ0Ke1xmMjQxNVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIFNlZ29lIENvbmRlbnNlZCBHcmVlazt9e1xmMjQxNlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIFNlZ29lIENvbmRlbnNlZCBUdXI7fXtcZjI0MTlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE4NlxmcHJxMiBTZWdvZSBDb25kZW5zZWQgQmFsdGljO317XGYyNDMyXGZiaWRpIFxmbmlsXGZjaGFyc2V0MjM4XGZwcnEyIFpXQWRvYmVGIENFO30NCntcZjI0MzNcZmJpZGkgXGZuaWxcZmNoYXJzZXQyMDRcZnBycTIgWldBZG9iZUYgQ3lyO317XGYyNDM1XGZiaWRpIFxmbmlsXGZjaGFyc2V0MTYxXGZwcnEyIFpXQWRvYmVGIEdyZWVrO317XGYyNDM2XGZiaWRpIFxmbmlsXGZjaGFyc2V0MTYyXGZwcnEyIFpXQWRvYmVGIFR1cjt9e1xmMjQzN1xmYmlkaSBcZm5pbFxmY2hhcnNldDE3N1xmcHJxMiBaV0Fkb2JlRiAoSGVicmV3KTt9DQp7XGYyNDM4XGZiaWRpIFxmbmlsXGZjaGFyc2V0MTc4XGZwcnEyIFpXQWRvYmVGIChBcmFiaWMpO317XGYyNDM5XGZiaWRpIFxmbmlsXGZjaGFyc2V0MTg2XGZwcnEyIFpXQWRvYmVGIEJhbHRpYzt9e1xmMjQ0MFxmYmlkaSBcZm5pbFxmY2hhcnNldDE2M1xmcHJxMiBaV0Fkb2JlRiAoVmlldG5hbWVzZSk7fXtcZjI0NjJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIzOFxmcHJxMiBNUyBSZWZlcmVuY2UgU2FucyBTZXJpZiBDRTt9DQp7XGYyNDYzXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgTVMgUmVmZXJlbmNlIFNhbnMgU2VyaWYgQ3lyO317XGYyNDY1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgTVMgUmVmZXJlbmNlIFNhbnMgU2VyaWYgR3JlZWs7fXtcZjI0NjZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBNUyBSZWZlcmVuY2UgU2FucyBTZXJpZiBUdXI7fQ0Ke1xmMjQ2OVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTg2XGZwcnEyIE1TIFJlZmVyZW5jZSBTYW5zIFNlcmlmIEJhbHRpYzt9e1xmMjQ3MFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYzXGZwcnEyIE1TIFJlZmVyZW5jZSBTYW5zIFNlcmlmIChWaWV0bmFtZXNlKTt9e1xmMjQ5MlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjM4XGZwcnEyIE9wZW4gU2FucyBDRTt9DQp7XGYyNDkzXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMDRcZnBycTIgT3BlbiBTYW5zIEN5cjt9e1xmMjQ5NVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIE9wZW4gU2FucyBHcmVlazt9e1xmMjQ5NlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIE9wZW4gU2FucyBUdXI7fXtcZjI0OTlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE4NlxmcHJxMiBPcGVuIFNhbnMgQmFsdGljO30NCntcZjI1MDBcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2M1xmcHJxMiBPcGVuIFNhbnMgKFZpZXRuYW1lc2UpO317XGYyNTAyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgT3BlbiBTYW5zIEV4dHJhYm9sZCBDRTt9e1xmMjUwM1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjA0XGZwcnEyIE9wZW4gU2FucyBFeHRyYWJvbGQgQ3lyO30NCntcZjI1MDVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBPcGVuIFNhbnMgRXh0cmFib2xkIEdyZWVrO317XGYyNTA2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgT3BlbiBTYW5zIEV4dHJhYm9sZCBUdXI7fXtcZjI1MDlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE4NlxmcHJxMiBPcGVuIFNhbnMgRXh0cmFib2xkIEJhbHRpYzt9DQp7XGYyNTEwXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjNcZnBycTIgT3BlbiBTYW5zIEV4dHJhYm9sZCAoVmlldG5hbWVzZSk7fXtcZjI1MTJcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIzOFxmcHJxMiBPcGVuIFNhbnMgTGlnaHQgQ0U7fXtcZjI1MTNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBPcGVuIFNhbnMgTGlnaHQgQ3lyO30NCntcZjI1MTVcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBPcGVuIFNhbnMgTGlnaHQgR3JlZWs7fXtcZjI1MTZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MlxmcHJxMiBPcGVuIFNhbnMgTGlnaHQgVHVyO317XGYyNTE5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgT3BlbiBTYW5zIExpZ2h0IEJhbHRpYzt9DQp7XGYyNTIwXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjNcZnBycTIgT3BlbiBTYW5zIExpZ2h0IChWaWV0bmFtZXNlKTt9e1xmMjUyMlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjM4XGZwcnEyIE9wZW4gU2FucyBTZW1pYm9sZCBDRTt9e1xmMjUyM1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjA0XGZwcnEyIE9wZW4gU2FucyBTZW1pYm9sZCBDeXI7fQ0Ke1xmMjUyNVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIE9wZW4gU2FucyBTZW1pYm9sZCBHcmVlazt9e1xmMjUyNlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIE9wZW4gU2FucyBTZW1pYm9sZCBUdXI7fXtcZjI1MjlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE4NlxmcHJxMiBPcGVuIFNhbnMgU2VtaWJvbGQgQmFsdGljO30NCntcZjI1MzBcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2M1xmcHJxMiBPcGVuIFNhbnMgU2VtaWJvbGQgKFZpZXRuYW1lc2UpO317XGYyNTMyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMzhcZnBycTIgQ2VudHVyeSBTY2hvb2xib29rIENFO317XGYyNTMzXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgQ2VudHVyeSBTY2hvb2xib29rIEN5cjt9DQp7XGYyNTM1XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjFcZnBycTIgQ2VudHVyeSBTY2hvb2xib29rIEdyZWVrO317XGYyNTM2XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjJcZnBycTIgQ2VudHVyeSBTY2hvb2xib29rIFR1cjt9e1xmMjUzOVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTg2XGZwcnEyIENlbnR1cnkgU2Nob29sYm9vayBCYWx0aWM7fQ0Ke1xmbG9tYWpvclxmMzE1MDhcZmJpZGkgXGZyb21hblxmY2hhcnNldDIzOFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQ0U7fXtcZmxvbWFqb3JcZjMxNTA5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgVGltZXMgTmV3IFJvbWFuIEN5cjt9e1xmbG9tYWpvclxmMzE1MTFcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MVxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gR3JlZWs7fQ0Ke1xmbG9tYWpvclxmMzE1MTJcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MlxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gVHVyO317XGZsb21ham9yXGYzMTUxM1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc3XGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoSGVicmV3KTt9e1xmbG9tYWpvclxmMzE1MTRcZmJpZGkgXGZyb21hblxmY2hhcnNldDE3OFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKEFyYWJpYyk7fQ0Ke1xmbG9tYWpvclxmMzE1MTVcZmJpZGkgXGZyb21hblxmY2hhcnNldDE4NlxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQmFsdGljO317XGZsb21ham9yXGYzMTUxNlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYzXGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoVmlldG5hbWVzZSk7fXtcZmRibWFqb3JcZjMxNTE4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMzhcZnBycTIgVGltZXMgTmV3IFJvbWFuIENFO30NCntcZmRibWFqb3JcZjMxNTE5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgVGltZXMgTmV3IFJvbWFuIEN5cjt9e1xmZGJtYWpvclxmMzE1MjFcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MVxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gR3JlZWs7fXtcZmRibWFqb3JcZjMxNTIyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjJcZnBycTIgVGltZXMgTmV3IFJvbWFuIFR1cjt9DQp7XGZkYm1ham9yXGYzMTUyM1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc3XGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoSGVicmV3KTt9e1xmZGJtYWpvclxmMzE1MjRcZmJpZGkgXGZyb21hblxmY2hhcnNldDE3OFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKEFyYWJpYyk7fXtcZmRibWFqb3JcZjMxNTI1XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxODZcZnBycTIgVGltZXMgTmV3IFJvbWFuIEJhbHRpYzt9DQp7XGZkYm1ham9yXGYzMTUyNlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYzXGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoVmlldG5hbWVzZSk7fXtcZmhpbWFqb3JcZjMxNTI4XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgQ2FsaWJyaSBMaWdodCBDRTt9e1xmaGltYWpvclxmMzE1MjlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBDYWxpYnJpIExpZ2h0IEN5cjt9DQp7XGZoaW1ham9yXGYzMTUzMVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYxXGZwcnEyIENhbGlicmkgTGlnaHQgR3JlZWs7fXtcZmhpbWFqb3JcZjMxNTMyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgQ2FsaWJyaSBMaWdodCBUdXI7fXtcZmhpbWFqb3JcZjMxNTMzXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNzdcZnBycTIgQ2FsaWJyaSBMaWdodCAoSGVicmV3KTt9DQp7XGZoaW1ham9yXGYzMTUzNFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTc4XGZwcnEyIENhbGlicmkgTGlnaHQgKEFyYWJpYyk7fXtcZmhpbWFqb3JcZjMxNTM1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgQ2FsaWJyaSBMaWdodCBCYWx0aWM7fXtcZmhpbWFqb3JcZjMxNTM2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjNcZnBycTIgQ2FsaWJyaSBMaWdodCAoVmlldG5hbWVzZSk7fQ0Ke1xmYmltYWpvclxmMzE1MzhcZmJpZGkgXGZyb21hblxmY2hhcnNldDIzOFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQ0U7fXtcZmJpbWFqb3JcZjMxNTM5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgVGltZXMgTmV3IFJvbWFuIEN5cjt9e1xmYmltYWpvclxmMzE1NDFcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MVxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gR3JlZWs7fQ0Ke1xmYmltYWpvclxmMzE1NDJcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MlxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gVHVyO317XGZiaW1ham9yXGYzMTU0M1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc3XGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoSGVicmV3KTt9e1xmYmltYWpvclxmMzE1NDRcZmJpZGkgXGZyb21hblxmY2hhcnNldDE3OFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKEFyYWJpYyk7fQ0Ke1xmYmltYWpvclxmMzE1NDVcZmJpZGkgXGZyb21hblxmY2hhcnNldDE4NlxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQmFsdGljO317XGZiaW1ham9yXGYzMTU0NlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYzXGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoVmlldG5hbWVzZSk7fXtcZmxvbWlub3JcZjMxNTQ4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMzhcZnBycTIgVGltZXMgTmV3IFJvbWFuIENFO30NCntcZmxvbWlub3JcZjMxNTQ5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgVGltZXMgTmV3IFJvbWFuIEN5cjt9e1xmbG9taW5vclxmMzE1NTFcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MVxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gR3JlZWs7fXtcZmxvbWlub3JcZjMxNTUyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjJcZnBycTIgVGltZXMgTmV3IFJvbWFuIFR1cjt9DQp7XGZsb21pbm9yXGYzMTU1M1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc3XGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoSGVicmV3KTt9e1xmbG9taW5vclxmMzE1NTRcZmJpZGkgXGZyb21hblxmY2hhcnNldDE3OFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKEFyYWJpYyk7fXtcZmxvbWlub3JcZjMxNTU1XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxODZcZnBycTIgVGltZXMgTmV3IFJvbWFuIEJhbHRpYzt9DQp7XGZsb21pbm9yXGYzMTU1NlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYzXGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoVmlldG5hbWVzZSk7fXtcZmRibWlub3JcZjMxNTU4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMzhcZnBycTIgVGltZXMgTmV3IFJvbWFuIENFO317XGZkYm1pbm9yXGYzMTU1OVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjA0XGZwcnEyIFRpbWVzIE5ldyBSb21hbiBDeXI7fQ0Ke1xmZGJtaW5vclxmMzE1NjFcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MVxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gR3JlZWs7fXtcZmRibWlub3JcZjMxNTYyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjJcZnBycTIgVGltZXMgTmV3IFJvbWFuIFR1cjt9e1xmZGJtaW5vclxmMzE1NjNcZmJpZGkgXGZyb21hblxmY2hhcnNldDE3N1xmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKEhlYnJldyk7fQ0Ke1xmZGJtaW5vclxmMzE1NjRcZmJpZGkgXGZyb21hblxmY2hhcnNldDE3OFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKEFyYWJpYyk7fXtcZmRibWlub3JcZjMxNTY1XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxODZcZnBycTIgVGltZXMgTmV3IFJvbWFuIEJhbHRpYzt9e1xmZGJtaW5vclxmMzE1NjZcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2M1xmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKFZpZXRuYW1lc2UpO30NCntcZmhpbWlub3JcZjMxNTY4XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgQ2FsaWJyaSBDRTt9e1xmaGltaW5vclxmMzE1NjlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBDYWxpYnJpIEN5cjt9e1xmaGltaW5vclxmMzE1NzFcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBDYWxpYnJpIEdyZWVrO317XGZoaW1pbm9yXGYzMTU3MlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIENhbGlicmkgVHVyO30NCntcZmhpbWlub3JcZjMxNTczXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNzdcZnBycTIgQ2FsaWJyaSAoSGVicmV3KTt9e1xmaGltaW5vclxmMzE1NzRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE3OFxmcHJxMiBDYWxpYnJpIChBcmFiaWMpO317XGZoaW1pbm9yXGYzMTU3NVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTg2XGZwcnEyIENhbGlicmkgQmFsdGljO30NCntcZmhpbWlub3JcZjMxNTc2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjNcZnBycTIgQ2FsaWJyaSAoVmlldG5hbWVzZSk7fXtcZmJpbWlub3JcZjMxNTc4XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMzhcZnBycTIgVGltZXMgTmV3IFJvbWFuIENFO317XGZiaW1pbm9yXGYzMTU3OVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjA0XGZwcnEyIFRpbWVzIE5ldyBSb21hbiBDeXI7fQ0Ke1xmYmltaW5vclxmMzE1ODFcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MVxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gR3JlZWs7fXtcZmJpbWlub3JcZjMxNTgyXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjJcZnBycTIgVGltZXMgTmV3IFJvbWFuIFR1cjt9e1xmYmltaW5vclxmMzE1ODNcZmJpZGkgXGZyb21hblxmY2hhcnNldDE3N1xmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKEhlYnJldyk7fQ0Ke1xmYmltaW5vclxmMzE1ODRcZmJpZGkgXGZyb21hblxmY2hhcnNldDE3OFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKEFyYWJpYyk7fXtcZmJpbWlub3JcZjMxNTg1XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxODZcZnBycTIgVGltZXMgTmV3IFJvbWFuIEJhbHRpYzt9e1xmYmltaW5vclxmMzE1ODZcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2M1xmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKFZpZXRuYW1lc2UpO319DQp7XGNvbG9ydGJsO1xyZWQwXGdyZWVuMFxibHVlMDtccmVkMFxncmVlbjBcYmx1ZTI1NTtccmVkMFxncmVlbjI1NVxibHVlMjU1O1xyZWQwXGdyZWVuMjU1XGJsdWUwO1xyZWQyNTVcZ3JlZW4wXGJsdWUyNTU7XHJlZDI1NVxncmVlbjBcYmx1ZTA7XHJlZDI1NVxncmVlbjI1NVxibHVlMDtccmVkMjU1XGdyZWVuMjU1XGJsdWUyNTU7XHJlZDBcZ3JlZW4wXGJsdWUxMjg7XHJlZDBcZ3JlZW4xMjhcYmx1ZTEyODtccmVkMFxncmVlbjEyOFxibHVlMDsNClxyZWQxMjhcZ3JlZW4wXGJsdWUxMjg7XHJlZDEyOFxncmVlbjBcYmx1ZTA7XHJlZDEyOFxncmVlbjEyOFxibHVlMDtccmVkMTI4XGdyZWVuMTI4XGJsdWUxMjg7XHJlZDE5MlxncmVlbjE5MlxibHVlMTkyO1xyZWQxNzZcZ3JlZW4xMTFcYmx1ZTA7XHJlZDQwXGdyZWVuMTkwXGJsdWUyMTQ7XHJlZDI0XGdyZWVuMTM3XGJsdWUyNTU7XHJlZDI0MFxncmVlbjE3MVxibHVlMDtccmVkOTZcZ3JlZW45NFxibHVlOTI7DQpccmVkMjI1XGdyZWVuMjIzXGJsdWUyMjE7XHJlZDFcZ3JlZW4wXGJsdWUwO317XCpcZGVmY2hwIFxsb2NoXGFmNDNcaGljaFxhZjQzXGRiY2hcYWYxIH17XCpcZGVmcGFwIFxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgfVxub3FmcHJvbW90ZSB7XHN0eWxlc2hlZXR7DQpccWwgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc25leHQwIFxzcWZvcm1hdCBcc3ByaW9yaXR5OTggDQpOb3JtYWw7fXtcczFccWwgXGxpMFxyaTBcc2EyNDBca2VlcFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI4XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGNmMVxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjBcaGljaFxhZjBcZGJjaFxhZjEzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MTUgXHNsaW5rMTcgXHNxZm9ybWF0IFxzcHJpb3JpdHkwIGhlYWRpbmcgMTt9e1xzMlxxbCBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI2XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxjZjFcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYxM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MTUgXHNsaW5rMTggXHNxZm9ybWF0IFxzcHJpb3JpdHkwIGhlYWRpbmcgMjt9e1xzM1xxbCBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcdHgyMTYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cb3V0bGluZWxldmVsMlxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxjZjFcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYxM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDE1IFxzbGluazE5IFxzcWZvcm1hdCBcc3ByaW9yaXR5MCBoZWFkaW5nIDM7fXtcczRccWwgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcdHgyODgwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cb3V0bGluZWxldmVsM1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcY2YxXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMFxoaWNoXGFmMFxkYmNoXGFmMTNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24wIFxzbmV4dDE1IFxzbGluazIwIFxzcWZvcm1hdCBcc3ByaW9yaXR5MCBoZWFkaW5nIDQ7fXtcczVccWwgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHR4MzYwMFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDRcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcY2YxXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMFxoaWNoXGFmMFxkYmNoXGFmMTNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQxNSBcc2xpbmsyMSBcc3Fmb3JtYXQgXHNwcmlvcml0eTAgaGVhZGluZyA1O317XHM2XHFsIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXHR4NDMyMFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDVcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhaVxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGNmMVxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjBcaGljaFxhZjBcZGJjaFxhZjEzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMCBcc25leHQxNSBcc2xpbmsyMiBcc3Fmb3JtYXQgXHNwcmlvcml0eTAgaGVhZGluZyA2O317XHM3XHFsIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx0eDUwNDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWw2XGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWlcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGNmMVxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjBcaGljaFxhZjBcZGJjaFxhZjEzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MTUgXHNsaW5rMjMgXHNxZm9ybWF0IFxzcHJpb3JpdHkwIGhlYWRpbmcgNzt9e1xzOFxxbCBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClx0eDU3NjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWw3XGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxjZjFcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYxM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MTUgXHNsaW5rMjQgXHNxZm9ybWF0IFxzcHJpb3JpdHkwIGhlYWRpbmcgODt9e1xzOVxxbCBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcdHg2NDgwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cb3V0bGluZWxldmVsOFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFpXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxjZjFcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYxM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDE1IFxzbGluazI1IFxzcWZvcm1hdCBcc3ByaW9yaXR5MCBoZWFkaW5nIDk7fXtcKlxjczEwIFxhZGRpdGl2ZSBcc3NlbWloaWRkZW4gXHN1bmhpZGV1c2VkIFxzcHJpb3JpdHkxIERlZmF1bHQgUGFyYWdyYXBoIEZvbnQ7fXtcKg0KXHRzMTFcdHNyb3dkXHRyZnRzV2lkdGhCM1x0cnBhZGRsMTA4XHRycGFkZHIxMDhcdHJwYWRkZmwzXHRycGFkZGZ0M1x0cnBhZGRmYjNcdHJwYWRkZnIzXHRibGluZDBcdGJsaW5kdHlwZTNcdHN2ZXJ0YWx0XHRzYnJkcnRcdHNicmRybFx0c2JyZHJiXHRzYnJkcnJcdHNicmRyZGdsXHRzYnJkcmRnclx0c2JyZHJoXHRzYnJkcnYgDQpccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjFcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczIwXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmNDNcaGljaFxhZjQzXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzbmV4dDExIFxzc2VtaWhpZGRlbiBcc3VuaGlkZXVzZWQgDQpOb3JtYWwgVGFibGU7fXtcczE1XHFsIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24wIFxzbmV4dDE1IFxzbGluazE2IFxzcWZvcm1hdCBcc3ByaW9yaXR5MSBCb2R5IFRleHQ7fXtcKlxjczE2IFxhZGRpdGl2ZSBcZjAgXHNsaW5rMTUgXHNsb2NrZWQgXHNwcmlvcml0eTEgQm9keSBUZXh0IENoYXI7fXtcKlxjczE3IFxhZGRpdGl2ZSBcZnMyOFxjZjFcbG9jaFxmMFxoaWNoXGFmMFxkYmNoXGFmMTMgXHNsaW5rMSBcc2xvY2tlZCBcc3ByaW9yaXR5MCBIZWFkaW5nIDEgQ2hhcjt9e1wqXGNzMTggXGFkZGl0aXZlIA0KXGZzMjZcY2YxXGxvY2hcZjBcaGljaFxhZjBcZGJjaFxhZjEzIFxzbGluazIgXHNsb2NrZWQgXHNwcmlvcml0eTAgSGVhZGluZyAyIENoYXI7fXtcKlxjczE5IFxhZGRpdGl2ZSBcY2YxXGxvY2hcZjBcaGljaFxhZjBcZGJjaFxhZjEzIFxzbGluazMgXHNsb2NrZWQgXHNwcmlvcml0eTAgSGVhZGluZyAzIENoYXI7fXtcKlxjczIwIFxhZGRpdGl2ZSBcY2YxXGxvY2hcZjBcaGljaFxhZjBcZGJjaFxhZjEzIA0KXHNsaW5rNCBcc2xvY2tlZCBcc3ByaW9yaXR5MCBIZWFkaW5nIDQgQ2hhcjt9e1wqXGNzMjEgXGFkZGl0aXZlIFxjZjFcbG9jaFxmMFxoaWNoXGFmMFxkYmNoXGFmMTMgXHNsaW5rNSBcc2xvY2tlZCBcc3ByaW9yaXR5MCBIZWFkaW5nIDUgQ2hhcjt9e1wqXGNzMjIgXGFkZGl0aXZlIFxjZjFcbG9jaFxmMFxoaWNoXGFmMFxkYmNoXGFmMTMgXHNsaW5rNiBcc2xvY2tlZCBcc3ByaW9yaXR5MCBIZWFkaW5nIDYgQ2hhcjt9e1wqXGNzMjMgDQpcYWRkaXRpdmUgXGNmMVxsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYxMyBcc2xpbms3IFxzbG9ja2VkIFxzcHJpb3JpdHkwIEhlYWRpbmcgNyBDaGFyO317XCpcY3MyNCBcYWRkaXRpdmUgXGZzMjBcY2YxXGxvY2hcZjBcaGljaFxhZjBcZGJjaFxhZjEzIFxzbGluazggXHNsb2NrZWQgXHNwcmlvcml0eTAgSGVhZGluZyA4IENoYXI7fXtcKlxjczI1IFxhZGRpdGl2ZSBcZnMyMFxjZjFcbG9jaFxmMFxoaWNoXGFmMFxkYmNoXGFmMTMgDQpcc2xpbms5IFxzbG9ja2VkIFxzcHJpb3JpdHkwIEhlYWRpbmcgOSBDaGFyO317XHMyNlxxbCBcZmktNzIwXGxpMTA4MFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDEwODBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcYWRqdXN0cmlnaHRccmluMFxsaW4xMDgwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MjYgXHNxZm9ybWF0IFxzcHJpb3JpdHkzNCBCdWxsZXQ7fXtcczI3XHFsIFxsaTBccmkwXHNsNDgwXHNsbXVsdDFcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIA0KXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MjcgXHNsaW5rMjggXHNwcmlvcml0eTQgQm9keSBUZXh0IDI7fXtcKlxjczI4IFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHNiYXNlZG9uMTAgXHNsaW5rMjcgXHNsb2NrZWQgXHNwcmlvcml0eTQgQm9keSBUZXh0IDIgQ2hhcjt9e1xzMjlccWwgXGxpMTQ0MFxyaTE0NDBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMTQ0MFxsaW4xNDQwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MjkgXHNxZm9ybWF0IFxzcHJpb3JpdHkxIFF1b3RlIERvdWJsZTt9e1xzMzBccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIA0KXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjE1IFxzbmV4dDMwIFxzYXV0b3VwZCBcc2xpbmszMSBcc3Fmb3JtYXQgXHNwcmlvcml0eTEgQm9keSBUZXh0IEZpcnN0IEluZGVudDt9e1wqXGNzMzEgXGFkZGl0aXZlIFxmMCBcc2xpbmszMCBcc2xvY2tlZCBcc3ByaW9yaXR5MSANCkJvZHkgVGV4dCBGaXJzdCBJbmRlbnQgQ2hhcjt9e1xzMzJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjFcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczIwXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MzIgXHNsaW5rMzMgXHNzZW1paGlkZGVuIFxzdW5oaWRldXNlZCBlbmRub3RlIHRleHQ7fXtcKlxjczMzIFxhZGRpdGl2ZSBcZnMyMCBcc2xpbmszMiBcc2xvY2tlZCBcc3NlbWloaWRkZW4gRW5kbm90ZSBUZXh0IENoYXI7fXtcczM0XHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSANClxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczE2XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDM1IFxzbGluazM3IFxzcHJpb3JpdHkwIERvY0lEO317XHMzNVxxbCBcbGkwXHJpMFx3aWRjdGxwYXINClx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MzUgXHNsaW5rMzYgXHN1bmhpZGV1c2VkIA0KZm9vdGVyO317XCpcY3MzNiBcYWRkaXRpdmUgXGZzMTYgXHNsaW5rMzUgXHNsb2NrZWQgRm9vdGVyIENoYXI7fXtcKlxjczM3IFxhZGRpdGl2ZSBcZjBcZnMxNiBcc2xpbmszNCBcc2xvY2tlZCBcc3ByaW9yaXR5MCBEb2NJRCBDaGFyO317XHMzOFxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgDQpcYWYxXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyMFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQzOCBcc2xpbmszOSBcc3VuaGlkZXVzZWQgZm9vdG5vdGUgdGV4dDt9e1wqXGNzMzkgXGFkZGl0aXZlIFxmMFxmczIwIFxzbGluazM4IFxzbG9ja2VkIEZvb3Rub3RlIFRleHQgQ2hhcjt9ew0KXHM0MFxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWlcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjBcaGljaFxhZjBcZGJjaFxhZjEzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMCBcc25leHQ0MCBcc2xpbms0MSBcc3Fmb3JtYXQgXHNwcmlvcml0eTEwIFN1YnRpdGxlO317XCpcY3M0MSBcYWRkaXRpdmUgXGRiY2hcYWYxMyBcc2xpbms0MCBcc2xvY2tlZCBcc3ByaW9yaXR5MTAgU3VidGl0bGUgQ2hhcjt9e1xzNDJccWwgXGZpLTIxNlxsaTIxNlxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4yMTZcaXRhcDAgDQpccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQwIFxzc2VtaWhpZGRlbiBcc3VuaGlkZXVzZWQgdGFibGUgb2YgYXV0aG9yaXRpZXM7fXsNClxzNDNccWwgXGZpLTQ0NlxsaTQ0NlxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW40NDZcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMCBcc25leHQwIFxzc2VtaWhpZGRlbiBcc3VuaGlkZXVzZWQgdGFibGUgb2YgZmlndXJlczt9e1xzNDRccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBcY29udGV4dHVhbHNwYWNlIFxydGxjaFxmY3MxIFxhZjBcYWZzNTJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGJcZnMzMlxleHBuZDFcZXhwbmR0dzVcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xrZXJuaW5nMjhcbG9jaFxmMFxoaWNoXGFmMFxkYmNoXGFmMTNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQ0NCBcc2xpbms0NSBcc3Fmb3JtYXQgXHNwcmlvcml0eTAgVGl0bGUsdDt9e1wqXGNzNDUgXGFkZGl0aXZlIFxiXGZzNTJcZXhwbmQxXGV4cG5kdHc1XGtlcm5pbmcyOFxkYmNoXGFmMTMgDQpcc2xpbms0NCBcc2xvY2tlZCBcc3ByaW9yaXR5MCBUaXRsZSBDaGFyLHQgQ2hhcjt9e1xzNDZccWwgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjBcaGljaFxhZjBcZGJjaFxhZjEzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MCBcc3NlbWloaWRkZW4gXHN1bmhpZGV1c2VkIHRvYSBoZWFkaW5nO317XHM0N1xxYyBcbGkwXHJpMFxzYTI0MFxrZWVwblx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgDQpccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDAgXHNwcmlvcml0eTM5IFRPQyBIZWFkaW5nO317XHM0OFxxbCBcZmktNzIwXGxpNjQ4MFxyaTcyMFxzYTEyMFxrZWVwXHdpZGN0bHBhcg0KXHRxclx0bGRvdFx0eDkyODhcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW43MjBcbGluNjQ4MFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MCBcc2F1dG91cGQgXHNwcmlvcml0eTM5IHRvYyA5O317DQpcczQ5XHFsIFxmaS03MjBcbGk1NzYwXHJpNzIwXHNhMTIwXGtlZXBcd2lkY3RscGFyXHRxclx0bGRvdFx0eDkyODhcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW43MjBcbGluNTc2MFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMCBcc25leHQwIFxzYXV0b3VwZCBcc3ByaW9yaXR5MzkgdG9jIDg7fXtcczUwXHFsIFxmaS03MjBcbGk1MDQwXHJpNzIwXHNhMTIwXGtlZXBcd2lkY3RscGFyXHRxclx0bGRvdFx0eDkyODhcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW43MjBcbGluNTA0MFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQwIFxzYXV0b3VwZCBcc3ByaW9yaXR5MzkgdG9jIDc7fXtcczUxXHFsIFxmaS03MjBcbGk0MzIwXHJpNzIwXHNhMTIwXGtlZXBcd2lkY3RscGFyXHRxclx0bGRvdFx0eDkyODhcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW43MjBcbGluNDMyMFxpdGFwMCBccnRsY2hcZmNzMSANClxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQwIFxzYXV0b3VwZCBcc3ByaW9yaXR5MzkgdG9jIDY7fXtcczUyXHFsIFxmaS03MjBcbGkzNjAwXHJpNzIwXHNhMTIwXGtlZXBcd2lkY3RscGFyDQpcdHFyXHRsZG90XHR4OTI4OFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjcyMFxsaW4zNjAwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQwIFxzYXV0b3VwZCBcc3ByaW9yaXR5MzkgdG9jIDU7fXsNClxzNTNccWwgXGZpLTcyMFxsaTI4ODBccmk3MjBcc2ExMjBca2VlcFx3aWRjdGxwYXJcdHFyXHRsZG90XHR4OTI4OFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjcyMFxsaW4yODgwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24wIFxzbmV4dDAgXHNhdXRvdXBkIFxzcHJpb3JpdHkzOSB0b2MgNDt9e1xzNTRccWwgXGZpLTcyMFxsaTIxNjBccmk3MjBcc2ExMjBca2VlcFx3aWRjdGxwYXJcdHFyXHRsZG90XHR4OTI4OFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjcyMFxsaW4yMTYwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDAgXHNhdXRvdXBkIFxzcHJpb3JpdHkzOSB0b2MgMzt9e1xzNTVccWwgXGZpLTcyMFxsaTE0NDBccmk3MjBcc2ExMjBca2VlcFx3aWRjdGxwYXJcdHFyXHRsZG90XHR4OTI4OFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjcyMFxsaW4xNDQwXGl0YXAwIFxydGxjaFxmY3MxIA0KXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDAgXHNhdXRvdXBkIFxzcHJpb3JpdHkzOSB0b2MgMjt9e1xzNTZccWwgXGZpLTE0NDBcbGkxNDQwXHJpNzIwXHNhMTIwXGtlZXBcd2lkY3RscGFyDQpcdHFyXHRsZG90XHR4OTI4OFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjcyMFxsaW4xNDQwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQwIFxzYXV0b3VwZCBcc3ByaW9yaXR5MzkgdG9jIDE7fXsNClxzNTdccWwgXGxpMjg4MFxyaTBcd2lkY3RscGFyXHBocGdccG9zeGNccG9zeWJcYWJzaC0xOTgwXGFic3c3OTIwXGR4ZnJ0ZXh0MTgwXGRmcm10eHR4MTgwXGRmcm10eHR5MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMjg4MFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMFxoaWNoXGFmMFxkYmNoXGFmMTNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQ1NyBcc3NlbWloaWRkZW4gXHN1bmhpZGV1c2VkIGVudmVsb3BlIGFkZHJlc3M7fXtcczU4XHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSANClxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczIwXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMFxoaWNoXGFmMFxkYmNoXGFmMTNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQ1OCBcc3NlbWloaWRkZW4gXHN1bmhpZGV1c2VkIGVudmVsb3BlIHJldHVybjt9ew0KXHM1OVxxbCBcbGkxNDQwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDAgXHJ0bGNoXGZjczEgXGFpXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMCBcc25leHQwIFxzbGluazYwIFxzcWZvcm1hdCBcc3ByaW9yaXR5MSBRdW90ZTt9e1wqXGNzNjAgXGFkZGl0aXZlIFxzbGluazU5IFxzbG9ja2VkIFxzcHJpb3JpdHkxIFF1b3RlIENoYXI7fXtcczYxXHFsIFxsaTE0NDBccmkxNDQwXHNsNDgwXHNsbXVsdDFcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMTQ0MFxsaW4xNDQwXGl0YXAwIFxydGxjaFxmY3MxIA0KXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0NjEgXHNxZm9ybWF0IFxzcHJpb3JpdHk0IFF1b3RlIERvdWJsZSAyO317DQpcczYyXHFsIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24wIFxzbmV4dDAgXHNsaW5rNjMgXHNwcmlvcml0eTIwIFNhbHV0YXRpb247fXtcKlxjczYzIFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxzYmFzZWRvbjEwIFxzbGluazYyIFxzbG9ja2VkIFxzcHJpb3JpdHkyMCBTYWx1dGF0aW9uIENoYXI7fXsNClxzNjRccWwgXGxpMzYwXHJpMFxzYTEyMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjM2MFxpdGFwMCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24wIFxzbmV4dDY0IFxzbGluazY1IFxzc2VtaWhpZGRlbiBcc3VuaGlkZXVzZWQgQm9keSBUZXh0IEluZGVudDt9e1wqXGNzNjUgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHNiYXNlZG9uMTAgXHNsaW5rNjQgXHNsb2NrZWQgXHNzZW1paGlkZGVuIEJvZHkgVGV4dCBJbmRlbnQgQ2hhcjt9e1xzNjZccWwgXGZpNzIwXGxpMzYwXHJpMFxzbDQ4MFxzbG11bHQxDQpcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4zNjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjY0IFxzbmV4dDY2IFxzbGluazY3IFxzcHJpb3JpdHk0IA0KQm9keSBUZXh0IEZpcnN0IEluZGVudCAyO317XCpcY3M2NyBcYWRkaXRpdmUgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcc2Jhc2Vkb242NSBcc2xpbms2NiBcc2xvY2tlZCBcc3ByaW9yaXR5NCBCb2R5IFRleHQgRmlyc3QgSW5kZW50IDIgQ2hhcjt9e1xzNjhccWwgXGxpNDMyMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW40MzIwXGl0YXAwIA0KXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0NjggXHNsaW5rNjkgXHNwcmlvcml0eTIwIFNpZ25hdHVyZSxzaWc7fXtcKlxjczY5IFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHNiYXNlZG9uMTAgXHNsaW5rNjggXHNsb2NrZWQgXHNwcmlvcml0eTIwIFNpZ25hdHVyZSBDaGFyLHNpZyBDaGFyO317XHM3MFxxbCBcZmktNzIwXGxpMTQ0MFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczFcaWx2bDFcYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0NzAgXHNwcmlvcml0eTM0IEJ1bGxldCAyO317XHM3MVxxbCBcZmktNzIwXGxpMjE2MFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDIxNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjIxNjBcaXRhcDAgDQpccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQ3MSBcc3ByaW9yaXR5MzQgQnVsbGV0IDM7fXtcczcyXHFsIFxmaS03MjBcbGkxMDgwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxMDgwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMyXGFkanVzdHJpZ2h0XHJpbjBcbGluMTA4MFxpdGFwMCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24wIFxzbmV4dDcyIFxzcWZvcm1hdCBcc3ByaW9yaXR5MzQgTnVtYmVyO317XHM3M1xxbCBcZmktNzIwXGxpMTQ0MFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQ3MyBcc3Fmb3JtYXQgXHNwcmlvcml0eTM0IE51bWJlciAyO317XHM3NFxxbCBcZmktNzIwXGxpMjE2MFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MjE2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMjE2MFxpdGFwMCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQ3NCBcc3Fmb3JtYXQgXHNwcmlvcml0eTM0IA0KTnVtYmVyIDM7fXtcczc1XHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWY0MFxhZnMxNlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGY0MFxoaWNoXGFmNDBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24wIFxzbmV4dDc1IFxzbGluazc2IFxzc2VtaWhpZGRlbiBcc3VuaGlkZXVzZWQgQmFsbG9vbiBUZXh0O317XCpcY3M3NiBcYWRkaXRpdmUgXGY0MFxmczE2IFxzbGluazc1IFxzbG9ja2VkIFxzc2VtaWhpZGRlbiBCYWxsb29uIFRleHQgQ2hhcjt9e1xzNzdccWwgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIA0KXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MCBcc3NlbWloaWRkZW4gXHN1bmhpZGV1c2VkIFxzcHJpb3JpdHkzNyBCaWJsaW9ncmFwaHk7fXtcczc4XHFsIFxsaTExNTJccmkxMTUyXHNhMjQwXHdpZGN0bHBhclxicmRydA0KXGJyZHJzXGJyZHJ3NVxicnNwMjAwXGJyZHJjZjE3IFxicmRybFxicmRyc1xicmRydzVcYnJzcDIwMFxicmRyY2YxNyBcYnJkcmJcYnJkcnNcYnJkcnc1XGJyc3AyMDBcYnJkcmNmMTcgXGJyZHJyXGJyZHJzXGJyZHJ3NVxicnNwMjAwXGJyZHJjZjE3IFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjExNTJcbGluMTE1MlxpdGFwMCBccnRsY2hcZmNzMSBcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSANClxsdHJjaFxmY3MwIFxpXGZzMjRcY2YxN1xsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjFcaGljaFxhZjFcZGJjaFxhZjEzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0NzggXHNzZW1paGlkZGVuIFxzdW5oaWRldXNlZCBcc3Fmb3JtYXQgQmxvY2sgVGV4dDt9ew0KXHM3OVxxbCBcbGkwXHJpMFxzYTEyMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMVxhZnMxNlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMCBcc25leHQ3OSBcc2xpbms4MCBcc3NlbWloaWRkZW4gXHN1bmhpZGV1c2VkIFxzcWZvcm1hdCBCb2R5IFRleHQgMzt9e1wqXGNzODAgXGFkZGl0aXZlIFxmczE2IFxzbGluazc5IFxzbG9ja2VkIFxzc2VtaWhpZGRlbiBCb2R5IFRleHQgMyBDaGFyO317XHM4MVxxbCBcbGkzNjBccmkwXHNhMTIwXHNsNDgwXHNsbXVsdDENClx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjM2MFxpdGFwMCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24wIFxzbmV4dDgxIFxzbGluazgyIFxzc2VtaWhpZGRlbiBcc3VuaGlkZXVzZWQgQm9keSBUZXh0IEluZGVudCAyO317XCpcY3M4MiBcYWRkaXRpdmUgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcc2Jhc2Vkb24xMCBcc2xpbms4MSBcc2xvY2tlZCBcc3NlbWloaWRkZW4gQm9keSBUZXh0IEluZGVudCAyIENoYXI7fXsNClxzODNccWwgXGxpMzYwXHJpMFxzYTEyMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjM2MFxpdGFwMCBccnRsY2hcZmNzMSBcYWYxXGFmczE2XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24wIFxzbmV4dDgzIFxzbGluazg0IFxzc2VtaWhpZGRlbiBcc3VuaGlkZXVzZWQgQm9keSBUZXh0IEluZGVudCAzO317XCpcY3M4NCBcYWRkaXRpdmUgXGZzMTYgXHNsaW5rODMgXHNsb2NrZWQgXHNzZW1paGlkZGVuIEJvZHkgVGV4dCBJbmRlbnQgMyBDaGFyO317XCpcY3M4NSBcYWRkaXRpdmUgXGJcc2NhcHNcZXhwbmQxXGV4cG5kdHc1IFxzcHJpb3JpdHk5OCBCb29rIFRpdGxlO317DQpcczg2XHFsIFxsaTBccmkwXHNhMjAwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWYxXGFmczE4XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxmczE4XGNmMTdcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMCBcc25leHQwIFxzc2VtaWhpZGRlbiBcc3VuaGlkZXVzZWQgXHNxZm9ybWF0IFxzcHJpb3JpdHkzNSBjYXB0aW9uO317XHM4N1xxbCBcbGk0MzIwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjQzMjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQ4NyBcc2xpbms4OCBcc3NlbWloaWRkZW4gXHN1bmhpZGV1c2VkIENsb3Npbmc7fXtcKlxjczg4IFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxzYmFzZWRvbjEwIFxzbGluazg3IFxzbG9ja2VkIFxzc2VtaWhpZGRlbiBDbG9zaW5nIENoYXI7fXtcKg0KXGNzODkgXGFkZGl0aXZlIFxmczE2IFxzc2VtaWhpZGRlbiBcc3VuaGlkZXVzZWQgYW5ub3RhdGlvbiByZWZlcmVuY2U7fXtcczkwXHFsIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYxXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczIwXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDkwIFxzbGluazkxIFxzc2VtaWhpZGRlbiBcc3VuaGlkZXVzZWQgYW5ub3RhdGlvbiB0ZXh0O317XCpcY3M5MSBcYWRkaXRpdmUgXGZzMjAgXHNsaW5rOTAgXHNsb2NrZWQgXHNzZW1paGlkZGVuIENvbW1lbnQgVGV4dCBDaGFyO317DQpcczkyXHFsIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWYxXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxmczIwXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjkwIFxzbmV4dDkwIFxzbGluazkzIFxzc2VtaWhpZGRlbiBcc3VuaGlkZXVzZWQgYW5ub3RhdGlvbiBzdWJqZWN0O317XCpcY3M5MyBcYWRkaXRpdmUgXGJcZnMyMCBcc2xpbms5MiBcc2xvY2tlZCBcc3NlbWloaWRkZW4gQ29tbWVudCBTdWJqZWN0IENoYXI7fXtcczk0XHFsIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCANClxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDAgXHNsaW5rOTUgXHNzZW1paGlkZGVuIFxzdW5oaWRldXNlZCBEYXRlO317XCpcY3M5NSBcYWRkaXRpdmUgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxzYmFzZWRvbjEwIFxzbGluazk0IFxzbG9ja2VkIFxzc2VtaWhpZGRlbiBEYXRlIENoYXI7fXtcczk2XHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWY0MFxhZnMxNlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjQwXGhpY2hcYWY0MFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDk2IFxzbGluazk3IFxzc2VtaWhpZGRlbiBcc3VuaGlkZXVzZWQgRG9jdW1lbnQgTWFwO317XCpcY3M5NyBcYWRkaXRpdmUgXGY0MFxmczE2IFxzbGluazk2IFxzbG9ja2VkIFxzc2VtaWhpZGRlbiBEb2N1bWVudCBNYXAgQ2hhcjt9ew0KXHM5OFxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMCBcc25leHQ5OCBcc2xpbms5OSBcc3NlbWloaWRkZW4gXHN1bmhpZGV1c2VkIEUtbWFpbCBTaWduYXR1cmU7fXtcKlxjczk5IFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxzYmFzZWRvbjEwIFxzbGluazk4IFxzbG9ja2VkIFxzc2VtaWhpZGRlbiBFLW1haWwgU2lnbmF0dXJlIENoYXI7fXtcKlxjczEwMCBcYWRkaXRpdmUgXGkgRW1waGFzaXM7fXtcKlxjczEwMSBcYWRkaXRpdmUgXHN1cGVyIA0KXHNzZW1paGlkZGVuIFxzdW5oaWRldXNlZCBlbmRub3RlIHJlZmVyZW5jZTt9e1wqXGNzMTAyIFxhZGRpdGl2ZSBcdWxcY2YxOCBcc3NlbWloaWRkZW4gXHN1bmhpZGV1c2VkIEZvbGxvd2VkSHlwZXJsaW5rO317XCpcY3MxMDMgXGFkZGl0aXZlIFxzdXBlciBcc3VuaGlkZXVzZWQgXHNwcmlvcml0eTAgZm9vdG5vdGUgcmVmZXJlbmNlO317XHMxMDRccWwgXGxpMFxyaTBcd2lkY3RscGFyDQpcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MTA0IFxzbGluazEwNSBcc3VuaGlkZXVzZWQgXHNwcmlvcml0eTAgaGVhZGVyO317XCpcY3MxMDUgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHNiYXNlZG9uMTAgXHNsaW5rMTA0IFxzbG9ja2VkIFxzcHJpb3JpdHkwIEhlYWRlciBDaGFyO317XCpcY3MxMDYgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcc2Jhc2Vkb24xMCBcc3NlbWloaWRkZW4gXHN1bmhpZGV1c2VkIEhUTUwgQWNyb255bTt9e1xzMTA3XHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWlcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxpXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MTA3IFxzbGluazEwOCBcc3NlbWloaWRkZW4gXHN1bmhpZGV1c2VkIEhUTUwgQWRkcmVzczt9e1wqXGNzMTA4IFxhZGRpdGl2ZSBcaSBcc2xpbmsxMDcgXHNsb2NrZWQgXHNzZW1paGlkZGVuIEhUTUwgQWRkcmVzcyBDaGFyO317XCpcY3MxMDkgXGFkZGl0aXZlIFxpIA0KXHNzZW1paGlkZGVuIFxzdW5oaWRldXNlZCBIVE1MIENpdGU7fXtcKlxjczExMCBcYWRkaXRpdmUgXGY0NVxmczIwIFxzc2VtaWhpZGRlbiBcc3VuaGlkZXVzZWQgSFRNTCBDb2RlO317XCpcY3MxMTEgXGFkZGl0aXZlIFxpIFxzc2VtaWhpZGRlbiBcc3VuaGlkZXVzZWQgSFRNTCBEZWZpbml0aW9uO317XCpcY3MxMTIgXGFkZGl0aXZlIFxmNDVcZnMyMCBcc3NlbWloaWRkZW4gXHN1bmhpZGV1c2VkIEhUTUwgS2V5Ym9hcmQ7fXsNClxzMTEzXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWY0NVxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjBcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGY0NVxoaWNoXGFmNDVcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24wIFxzbmV4dDExMyBcc2xpbmsxMTQgXHNzZW1paGlkZGVuIFxzdW5oaWRldXNlZCBIVE1MIFByZWZvcm1hdHRlZDt9e1wqXGNzMTE0IFxhZGRpdGl2ZSBcZjQ1XGZzMjAgXHNsaW5rMTEzIFxzbG9ja2VkIFxzc2VtaWhpZGRlbiBIVE1MIFByZWZvcm1hdHRlZCBDaGFyO317XCpcY3MxMTUgXGFkZGl0aXZlIFxmNDVcZnMyNCBcc3NlbWloaWRkZW4gXHN1bmhpZGV1c2VkIEhUTUwgU2FtcGxlO317XCpcY3MxMTYgXGFkZGl0aXZlIA0KXGY0NVxmczIwIFxzc2VtaWhpZGRlbiBcc3VuaGlkZXVzZWQgSFRNTCBUeXBld3JpdGVyO317XCpcY3MxMTcgXGFkZGl0aXZlIFxpIFxzc2VtaWhpZGRlbiBcc3VuaGlkZXVzZWQgSFRNTCBWYXJpYWJsZTt9e1wqXGNzMTE4IFxhZGRpdGl2ZSBcdWxcY2YxOSBcc3VuaGlkZXVzZWQgSHlwZXJsaW5rO317DQpcczExOVxxbCBcZmktMjQwXGxpMjQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjI0MFxpdGFwMCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24wIFxzbmV4dDAgXHNhdXRvdXBkIFxzc2VtaWhpZGRlbiBcc3VuaGlkZXVzZWQgaW5kZXggMTt9e1xzMTIwXHFsIFxmaS0yNDBcbGk0ODBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNDgwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MCBcc2F1dG91cGQgXHNzZW1paGlkZGVuIFxzdW5oaWRldXNlZCBpbmRleCAyO317XHMxMjFccWwgXGZpLTI0MFxsaTcyMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDAgDQpccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQwIFxzYXV0b3VwZCBcc3NlbWloaWRkZW4gXHN1bmhpZGV1c2VkIGluZGV4IDM7fXsNClxzMTIyXHFsIFxmaS0yNDBcbGk5NjBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluOTYwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MCBcc2F1dG91cGQgXHNzZW1paGlkZGVuIFxzdW5oaWRldXNlZCBpbmRleCA0O317XHMxMjNccWwgXGZpLTI0MFxsaTEyMDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTIwMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDAgXHNhdXRvdXBkIFxzc2VtaWhpZGRlbiBcc3VuaGlkZXVzZWQgaW5kZXggNTt9e1xzMTI0XHFsIFxmaS0yNDBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDAgDQpccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQwIFxzYXV0b3VwZCBcc3NlbWloaWRkZW4gXHN1bmhpZGV1c2VkIGluZGV4IDY7fXsNClxzMTI1XHFsIFxmaS0yNDBcbGkxNjgwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE2ODBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMCBcc25leHQwIFxzYXV0b3VwZCBcc3NlbWloaWRkZW4gXHN1bmhpZGV1c2VkIGluZGV4IDc7fXtcczEyNlxxbCBcZmktMjQwXGxpMTkyMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xOTIwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MCBcc2F1dG91cGQgXHNzZW1paGlkZGVuIFxzdW5oaWRldXNlZCBpbmRleCA4O317XHMxMjdccWwgXGZpLTI0MFxsaTIxNjBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMjE2MFxpdGFwMCANClxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDAgXHNhdXRvdXBkIFxzc2VtaWhpZGRlbiBcc3VuaGlkZXVzZWQgaW5kZXggOTt9ew0KXHMxMjhccWwgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYxXGhpY2hcYWYxXGRiY2hcYWYxM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MTE5IFxzc2VtaWhpZGRlbiBcc3VuaGlkZXVzZWQgaW5kZXggaGVhZGluZzt9e1wqXGNzMTI5IFxhZGRpdGl2ZSBcYlxpXGNmMTcgSW50ZW5zZSBFbXBoYXNpczt9e1xzMTMwXHFsIFxsaTkzNlxyaTkzNlxzYjIwMFxzYTI4MFx3aWRjdGxwYXJcYnJkcmJcYnJkcnNcYnJkcncxMFxicnNwODBcYnJkcmNmMTcgDQpcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW45MzZcbGluOTM2XGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGlcZnMyNFxjZjE3XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDAgXHNsaW5rMTMxIEludGVuc2UgUXVvdGU7fQ0Ke1wqXGNzMTMxIFxhZGRpdGl2ZSBcYlxpXGYwXGNmMTcgXHNsaW5rMTMwIFxzbG9ja2VkIEludGVuc2UgUXVvdGUgQ2hhcjt9e1wqXGNzMTMyIFxhZGRpdGl2ZSBcYlxzY2Fwc1x1bFxleHBuZDFcZXhwbmR0dzVcY2YyMCBJbnRlbnNlIFJlZmVyZW5jZTt9e1wqXGNzMTMzIFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxzYmFzZWRvbjEwIFxzc2VtaWhpZGRlbiBcc3VuaGlkZXVzZWQgbGluZSBudW1iZXI7fXsNClxzMTM0XHFsIFxsaTBccmkwXHdpZGN0bHBhclx0eDQ4MFx0eDk2MFx0eDE0NDBcdHgxOTIwXHR4MjQwMFx0eDI4ODBcdHgzMzYwXHR4Mzg0MFx0eDQzMjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmNDVcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjBcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGY0NVxoaWNoXGFmNDVcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNuZXh0MTM0IFxzbGluazEzNSBcc3NlbWloaWRkZW4gXHN1bmhpZGV1c2VkIG1hY3JvO317XCpcY3MxMzUgXGFkZGl0aXZlIFxmNDVcZnMyMCBcc2xpbmsxMzQgXHNsb2NrZWQgXHNzZW1paGlkZGVuIE1hY3JvIFRleHQgQ2hhcjt9e1xzMTM2XHFsIFxmaS0xMDgwXGxpMTA4MFxyaTBcd2lkY3RscGFyDQpcYnJkcnRcYnJkcnNcYnJkcncxNVxicnNwMjAgXGJyZHJsXGJyZHJzXGJyZHJ3MTVcYnJzcDIwIFxicmRyYlxicmRyc1xicmRydzE1XGJyc3AyMCBcYnJkcnJcYnJkcnNcYnJkcncxNVxicnNwMjAgXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xMDgwXGl0YXAwIFxzaGFkaW5nMjAwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMVxoaWNoXGFmMVxkYmNoXGFmMTNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQxMzYgXHNsaW5rMTM3IFxzc2VtaWhpZGRlbiBcc3VuaGlkZXVzZWQgTWVzc2FnZSBIZWFkZXI7fXtcKlxjczEzNyBcYWRkaXRpdmUgXGxvY2hcZjFcaGljaFxhZjFcZGJjaFxhZjEzXGNoc2hkbmcyMDAwXGNoY2ZwYXQwXGNoY2JwYXQwIA0KXHNsaW5rMTM2IFxzbG9ja2VkIFxzc2VtaWhpZGRlbiBNZXNzYWdlIEhlYWRlciBDaGFyO317XHMxMzhccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGY0M1xoaWNoXGFmNDNcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNuZXh0MTM4IFxzcWZvcm1hdCBcc3ByaW9yaXR5MSBObyBTcGFjaW5nO317XHMxMzlccWwgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIA0KXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MTM5IFxzc2VtaWhpZGRlbiBcc3VuaGlkZXVzZWQgTm9ybWFsIChXZWIpO317DQpcczE0MFxxbCBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MTQwIFxzc2VtaWhpZGRlbiBcc3VuaGlkZXVzZWQgTm9ybWFsIEluZGVudDt9e1xzMTQxXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDAgXHNsaW5rMTQyIFxzc2VtaWhpZGRlbiBcc3VuaGlkZXVzZWQgTm90ZSBIZWFkaW5nMTt9e1wqXGNzMTQyIFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxzYmFzZWRvbjEwIFxzbGluazE0MSBcc2xvY2tlZCBcc3NlbWloaWRkZW4gDQpOb3RlIEhlYWRpbmcgQ2hhcjt9e1wqXGNzMTQzIFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxzYmFzZWRvbjEwIFxzdW5oaWRldXNlZCBwYWdlIG51bWJlcjt9e1wqXGNzMTQ0IFxhZGRpdGl2ZSBcY2YxNSBcc3NlbWloaWRkZW4gUGxhY2Vob2xkZXIgVGV4dDt9e1xzMTQ1XHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCANClxydGxjaFxmY3MxIFxhZjQ1XGFmczIxXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyMVxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjQ1XGhpY2hcYWY0NVxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDE0NSBcc2xpbmsxNDYgXHN1bmhpZGV1c2VkIFBsYWluIFRleHQ7fXtcKlxjczE0NiBcYWRkaXRpdmUgXGY0NVxmczIxIFxzbGluazE0NSBcc2xvY2tlZCBQbGFpbiBUZXh0IENoYXI7fXtcKg0KXGNzMTQ3IFxhZGRpdGl2ZSBcYiBcc3Fmb3JtYXQgU3Ryb25nO317XCpcY3MxNDggXGFkZGl0aXZlIFxpXGNmMTUgU3VidGxlIEVtcGhhc2lzO317XCpcY3MxNDkgXGFkZGl0aXZlIFxzY2Fwc1x1bFxjZjIwIFN1YnRsZSBSZWZlcmVuY2U7fXtcczE1MFxxYyBcbGkwXHJpMFxzYTI0MFxrZWVwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczNcb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMyNFxjZjFcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMCBcc25leHQxNSBcc2xpbmsxNTEgXHNwcmlvcml0eTAgUzIuSGVhZGluZyAxO317XCpcY3MxNTEgXGFkZGl0aXZlIFxiXGYwXGNmMSBcc2xpbmsxNTAgXHNsb2NrZWQgXHNwcmlvcml0eTAgUzIuSGVhZGluZyAxIENoYXI7fXtcczE1MlxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzXGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGNmMVxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24wIFxzbmV4dDE1IFxzbGluazE1MyBcc3ByaW9yaXR5MCBTMi5IZWFkaW5nIDI7fXtcKlxjczE1MyBcYWRkaXRpdmUgXGYwXGNmMSBcc2xpbmsxNTIgXHNsb2NrZWQgXHNwcmlvcml0eTAgUzIuSGVhZGluZyAyIENoYXI7fXtcczE1NFxxaiBcZmkxNDQwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MjE2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzM1xpbHZsMlxvdXRsaW5lbGV2ZWwyXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxjZjFcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMCBcc25leHQxNSBcc2xpbmsxNTUgXHNwcmlvcml0eTAgUzIuSGVhZGluZyAzO317XCpcY3MxNTUgXGFkZGl0aXZlIFxmMFxjZjEgXHNsaW5rMTU0IFxzbG9ja2VkIFxzcHJpb3JpdHkwIFMyLkhlYWRpbmcgMyBDaGFyO317XHMxNTZccWogXGZpNzIwXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgyMTYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzXGlsdmwzXG91dGxpbmVsZXZlbDNcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcY2YxXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MTUgXHNsaW5rMTU3IFxzcHJpb3JpdHkwIFMyLkhlYWRpbmcgNDt9e1wqXGNzMTU3IFxhZGRpdGl2ZSBcZjBcY2YxIFxzbGluazE1NiBcc2xvY2tlZCBcc3ByaW9yaXR5MCBTMi5IZWFkaW5nIDQgQ2hhcjt9e1xzMTU4XHFqIFxmaTcyMFxsaTE0NDBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDI4ODBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczNcaWx2bDRcb3V0bGluZWxldmVsNFxhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcY2YxXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MTUgXHNsaW5rMTU5IFxzcHJpb3JpdHkwIFMyLkhlYWRpbmcgNTt9e1wqXGNzMTU5IFxhZGRpdGl2ZSBcZjBcY2YxIFxzbGluazE1OCBcc2xvY2tlZCBcc3ByaW9yaXR5MCBTMi5IZWFkaW5nIDUgQ2hhcjt9e1xzMTYwXHFqIFxmaTcyMFxsaTE0NDBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDI4ODBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczNcaWx2bDVcb3V0bGluZWxldmVsNVxhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcY2YxXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MTUgXHNsaW5rMTYxIFxzcHJpb3JpdHkwIFMyLkhlYWRpbmcgNjt9e1wqXGNzMTYxIFxhZGRpdGl2ZSBcZjBcY2YxIFxzbGluazE2MCBcc2xvY2tlZCBcc3ByaW9yaXR5MCBTMi5IZWFkaW5nIDYgQ2hhcjt9e1xzMTYyXHFqIFxmaTcyMFxsaTIxNjBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDM2MDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczNcaWx2bDZcb3V0bGluZWxldmVsNlxhZGp1c3RyaWdodFxyaW4wXGxpbjIxNjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcY2YxXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MTUgXHNsaW5rMTYzIFxzcHJpb3JpdHkwIFMyLkhlYWRpbmcgNzt9e1wqXGNzMTYzIFxhZGRpdGl2ZSBcZjBcY2YxIFxzbGluazE2MiBcc2xvY2tlZCBcc3ByaW9yaXR5MCBTMi5IZWFkaW5nIDcgQ2hhcjt9e1xzMTY0XHFqIFxmaTcyMFxsaTI4ODBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDQzMjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczNcaWx2bDdcb3V0bGluZWxldmVsN1xhZGp1c3RyaWdodFxyaW4wXGxpbjI4ODBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcY2YxXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MTUgXHNsaW5rMTY1IFxzcHJpb3JpdHkwIFMyLkhlYWRpbmcgODt9e1wqXGNzMTY1IFxhZGRpdGl2ZSBcZjBcY2YxIFxzbGluazE2NCBcc2xvY2tlZCBcc3ByaW9yaXR5MCBTMi5IZWFkaW5nIDggQ2hhcjt9e1xzMTY2XHFqIFxmaTcyMFxsaTM2MDBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDUwNDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczNcaWx2bDhcb3V0bGluZWxldmVsOFxhZGp1c3RyaWdodFxyaW4wXGxpbjM2MDBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcY2YxXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MTUgXHNsaW5rMTY3IFxzcHJpb3JpdHkwIFMyLkhlYWRpbmcgOTt9e1wqXGNzMTY3IFxhZGRpdGl2ZSBcZjBcY2YxIFxzbGluazE2NiBcc2xvY2tlZCBcc3ByaW9yaXR5MCBTMi5IZWFkaW5nIDkgQ2hhcjt9e1xzMTY4XHFjIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSANClxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDE1IFxzbGluazE2OSBcc3NlbWloaWRkZW4gXHNwcmlvcml0eTAgUzIuSGVhZGluZ0JvZHkgMTt9e1wqXGNzMTY5IFxhZGRpdGl2ZSBcZjBcY2YxIA0KXHNsaW5rMTY4IFxzbG9ja2VkIFxzc2VtaWhpZGRlbiBcc3ByaW9yaXR5MCBTMi5IZWFkaW5nQm9keSAxIENoYXI7fXtcczE3MFxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQxNSBcc2xpbmsxNzEgXHNzZW1paGlkZGVuIFxzcHJpb3JpdHkwIFMyLkhlYWRpbmdCb2R5IDI7fXtcKlxjczE3MSBcYWRkaXRpdmUgXGYwXGNmMSBcc2xpbmsxNzAgXHNsb2NrZWQgXHNzZW1paGlkZGVuIFxzcHJpb3JpdHkwIFMyLkhlYWRpbmdCb2R5IDIgQ2hhcjt9ew0KXHMxNzJccWogXGZpMTQ0MFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24wIFxzbmV4dDE1IFxzbGluazE3MyBcc3NlbWloaWRkZW4gXHNwcmlvcml0eTAgUzIuSGVhZGluZ0JvZHkgMzt9e1wqXGNzMTczIFxhZGRpdGl2ZSBcZjBcY2YxIFxzbGluazE3MiBcc2xvY2tlZCBcc3NlbWloaWRkZW4gXHNwcmlvcml0eTAgUzIuSGVhZGluZ0JvZHkgMyBDaGFyO317DQpcczE3NFxxaiBcZmk3MjBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MTUgXHNsaW5rMTc1IFxzc2VtaWhpZGRlbiBcc3ByaW9yaXR5MCBTMi5IZWFkaW5nQm9keSA0O317XCpcY3MxNzUgXGFkZGl0aXZlIFxmMFxjZjEgXHNsaW5rMTc0IFxzbG9ja2VkIFxzc2VtaWhpZGRlbiBcc3ByaW9yaXR5MCBTMi5IZWFkaW5nQm9keSA0IENoYXI7fXsNClxzMTc2XHFqIFxmaTcyMFxsaTE0NDBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24wIFxzbmV4dDE1IFxzbGluazE3NyBcc3NlbWloaWRkZW4gXHNwcmlvcml0eTAgUzIuSGVhZGluZ0JvZHkgNTt9e1wqXGNzMTc3IFxhZGRpdGl2ZSBcZjBcY2YxIFxzbGluazE3NiBcc2xvY2tlZCBcc3NlbWloaWRkZW4gXHNwcmlvcml0eTAgUzIuSGVhZGluZ0JvZHkgNSBDaGFyO317DQpcczE3OFxxaiBcZmk3MjBcbGkxNDQwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMCBcc25leHQxNSBcc2xpbmsxNzkgXHNzZW1paGlkZGVuIFxzcHJpb3JpdHkwIFMyLkhlYWRpbmdCb2R5IDY7fXtcKlxjczE3OSBcYWRkaXRpdmUgXGYwXGNmMSBcc2xpbmsxNzggXHNsb2NrZWQgXHNzZW1paGlkZGVuIFxzcHJpb3JpdHkwIFMyLkhlYWRpbmdCb2R5IDYgQ2hhcjt9ew0KXHMxODBccWogXGZpNzIwXGxpMjE2MFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4yMTYwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MTUgXHNsaW5rMTgxIFxzc2VtaWhpZGRlbiBcc3ByaW9yaXR5MCBTMi5IZWFkaW5nQm9keSA3O317XCpcY3MxODEgXGFkZGl0aXZlIFxmMFxjZjEgXHNsaW5rMTgwIFxzbG9ja2VkIFxzc2VtaWhpZGRlbiBcc3ByaW9yaXR5MCBTMi5IZWFkaW5nQm9keSA3IENoYXI7fXsNClxzMTgyXHFqIFxmaTcyMFxsaTI4ODBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMjg4MFxpdGFwMCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24wIFxzbmV4dDE1IFxzbGluazE4MyBcc3NlbWloaWRkZW4gXHNwcmlvcml0eTAgUzIuSGVhZGluZ0JvZHkgODt9e1wqXGNzMTgzIFxhZGRpdGl2ZSBcZjBcY2YxIFxzbGluazE4MiBcc2xvY2tlZCBcc3NlbWloaWRkZW4gXHNwcmlvcml0eTAgUzIuSGVhZGluZ0JvZHkgOCBDaGFyO317DQpcczE4NFxxaiBcZmk3MjBcbGkzNjAwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjM2MDBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMCBcc25leHQxNSBcc2xpbmsxODUgXHNzZW1paGlkZGVuIFxzcHJpb3JpdHkwIFMyLkhlYWRpbmdCb2R5IDk7fXtcKlxjczE4NSBcYWRkaXRpdmUgXGYwXGNmMSBcc2xpbmsxODQgXHNsb2NrZWQgXHNzZW1paGlkZGVuIFxzcHJpb3JpdHkwIFMyLkhlYWRpbmdCb2R5IDkgQ2hhcjt9e1wqXGNzMTg2IFxhZGRpdGl2ZSBcdWxkYlxleHBuZDBcZXhwbmR0dzBcY2YyIFxzcHJpb3JpdHkwIFN0eWxlMjt9ew0KXHMxODdccWwgXGZpLTcyMFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMCBcc25leHQxNSBcc2xpbmsxODggXHNzZW1paGlkZGVuIFxzcHJpb3JpdHkwIEhlYWRpbmdCb2R5IDE7fXtcKlxjczE4OCBcYWRkaXRpdmUgXGYwXGNmMSBcc2xpbmsxODcgXHNsb2NrZWQgXHNzZW1paGlkZGVuIFxzcHJpb3JpdHkwIEhlYWRpbmdCb2R5IDEgQ2hhcjt9ew0KXHMxODlccWwgXGZpLTcyMFxsaTE0NDBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24wIFxzbmV4dDE1IFxzbGluazE5MCBcc3NlbWloaWRkZW4gXHNwcmlvcml0eTAgSGVhZGluZ0JvZHkgMjt9e1wqXGNzMTkwIFxhZGRpdGl2ZSBcZjBcY2YxIFxzbGluazE4OSBcc2xvY2tlZCBcc3NlbWloaWRkZW4gXHNwcmlvcml0eTAgSGVhZGluZ0JvZHkgMiBDaGFyO317DQpcczE5MVxxbCBcZmktNzIwXGxpMjE2MFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4yMTYwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MTUgXHNsaW5rMTkyIFxzc2VtaWhpZGRlbiBcc3ByaW9yaXR5MCBIZWFkaW5nQm9keSAzO317XCpcY3MxOTIgXGFkZGl0aXZlIFxmMFxjZjEgXHNsaW5rMTkxIFxzbG9ja2VkIFxzc2VtaWhpZGRlbiBcc3ByaW9yaXR5MCBIZWFkaW5nQm9keSAzIENoYXI7fXsNClxzMTkzXHFsIFxmaS03MjBcbGkyODgwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjI4ODBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMCBcc25leHQxNSBcc2xpbmsxOTQgXHNzZW1paGlkZGVuIFxzcHJpb3JpdHkwIEhlYWRpbmdCb2R5IDQ7fXtcKlxjczE5NCBcYWRkaXRpdmUgXGYwXGNmMSBcc2xpbmsxOTMgXHNsb2NrZWQgXHNzZW1paGlkZGVuIFxzcHJpb3JpdHkwIEhlYWRpbmdCb2R5IDQgQ2hhcjt9ew0KXHMxOTVccWwgXGZpLTcyMFxsaTM2MDBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMzYwMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24wIFxzbmV4dDE1IFxzbGluazE5NiBcc3NlbWloaWRkZW4gXHNwcmlvcml0eTAgSGVhZGluZ0JvZHkgNTt9e1wqXGNzMTk2IFxhZGRpdGl2ZSBcZjBcY2YxIFxzbGluazE5NSBcc2xvY2tlZCBcc3NlbWloaWRkZW4gXHNwcmlvcml0eTAgSGVhZGluZ0JvZHkgNSBDaGFyO317DQpcczE5N1xxbCBcZmktNzIwXGxpNDMyMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW40MzIwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MTUgXHNsaW5rMTk4IFxzc2VtaWhpZGRlbiBcc3ByaW9yaXR5MCBIZWFkaW5nQm9keSA2O317XCpcY3MxOTggXGFkZGl0aXZlIFxmMFxjZjEgXHNsaW5rMTk3IFxzbG9ja2VkIFxzc2VtaWhpZGRlbiBcc3ByaW9yaXR5MCBIZWFkaW5nQm9keSA2IENoYXI7fXsNClxzMTk5XHFsIFxmaS03MjBcbGk1MDQwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjUwNDBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMCBcc25leHQxNSBcc2xpbmsyMDAgXHNzZW1paGlkZGVuIFxzcHJpb3JpdHkwIEhlYWRpbmdCb2R5IDc7fXtcKlxjczIwMCBcYWRkaXRpdmUgXGYwXGNmMSBcc2xpbmsxOTkgXHNsb2NrZWQgXHNzZW1paGlkZGVuIFxzcHJpb3JpdHkwIEhlYWRpbmdCb2R5IDcgQ2hhcjt9ew0KXHMyMDFccWwgXGZpLTcyMFxsaTU3NjBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNTc2MFxpdGFwMCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24wIFxzbmV4dDE1IFxzbGluazIwMiBcc3NlbWloaWRkZW4gXHNwcmlvcml0eTAgSGVhZGluZ0JvZHkgODt9e1wqXGNzMjAyIFxhZGRpdGl2ZSBcZjBcY2YxIFxzbGluazIwMSBcc2xvY2tlZCBcc3NlbWloaWRkZW4gXHNwcmlvcml0eTAgSGVhZGluZ0JvZHkgOCBDaGFyO317DQpcczIwM1xxbCBcZmktNzIwXGxpNjQ4MFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW42NDgwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MTUgXHNsaW5rMjA0IFxzc2VtaWhpZGRlbiBcc3ByaW9yaXR5MCBIZWFkaW5nQm9keSA5O317XCpcY3MyMDQgXGFkZGl0aXZlIFxmMFxjZjEgXHNsaW5rMjAzIFxzbG9ja2VkIFxzc2VtaWhpZGRlbiBcc3ByaW9yaXR5MCBIZWFkaW5nQm9keSA5IENoYXI7fXtcczIwNVxxbCBcZmktNzIwXGxpNzIwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHR7XCpccG4gXHBubHZsYm9keVxpbHZsMFxsczRccG5ybm90MFxwbmRlYyB9DQpcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczRcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYxM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDIwNSBcc3ByaW9yaXR5MCBMaXN0IEJ1bGxldDt9ew0KXHMyMDZccWMgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFmMVxhZnMyOFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDQxXGxvY2hcZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwNDEgDQpcc2Jhc2Vkb24wIFxzbmV4dDIwNiBcc3ByaW9yaXR5MCBDb3Zlcjt9e1xzMjA3XHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYxXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwNDFcbG9jaFxmNDNcaGljaFxhZjQzXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDQxIFxzbmV4dDIwNyBcc3ByaW9yaXR5MCBXQ1BhZ2VOdW1iZXI7fXtcczIwOFxxaiBcZmktNzIwXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczVcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDAgXHJ0bGNoXGZjczEgDQpcYWYxXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDQxXGxvY2hcZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwNDEgXHNiYXNlZG9uMCBcc25leHQyMDggXHNwcmlvcml0eTAgUGFyYSBOdW1iZXI7fXsNClxzMjA5XHFqIFxmaTE0NDBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGYxXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDIwOSBcc3ByaW9yaXR5MCANCkRXMSJJbmRTaW5nbGU7fXtcczIxMFxxaiBcZmkxNDQwXGxpMFxyaTBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDE0NDBcamNsaXN0dGFiXHR4MjE2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGlsdmwzXG91dGxpbmVsZXZlbDNcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjFcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGJcY2Fwc1xmczI0XGxhbmcxMDMzXGxhbmdmZTEwNDFcbG9jaFxmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTA0MSBcc2Jhc2Vkb24wIFxzbmV4dDE1IFxzbGluazIxMSBcc3ByaW9yaXR5MCBEQ0FSVElDTEVfTDQ7fXtcKlxjczIxMSBcYWRkaXRpdmUgXGJcY2Fwc1xmczIwXGxhbmcwXGxhbmdmZTEwNDFcbGFuZ2ZlbnAxMDQxIFxzbGluazIxMCBcc2xvY2tlZCBcc3ByaW9yaXR5MCANCkRDQVJUSUNMRV9MNCBDaGFyO317XHMyMTJccWogXGZpNzIwXGxpMFxyaTBcc2w0ODBcc2xtdWx0MVx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGYxXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MjEyIFxzcHJpb3JpdHkwIERXQlRJbmREb3VibGU7fXtcKlxjczIxMyBcYWRkaXRpdmUgXGZzMjMgXHNwcmlvcml0eTAgQ2hhcmFjdGVyIFN0eWxlIDQ7fXtcczIxNFxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMVxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxjZjFcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDQxIFxzYmFzZWRvbjAgXHNuZXh0MjE0IFxzcHJpb3JpdHkwIFRleHQ7fXtcczIxNVxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgDQpcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxjYXBzXGZzMjRcY2YxXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmMFxoaWNoXGFmMFxkYmNoXGFmMzlcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQwIFxzbGluazIxNiBcc3ByaW9yaXR5MCBUaXRsZSAyLEMxLFN0eWxlNDYsV1MgQ2FwdC1DdHItQ2Fwcy1Cb2xkO317XCpcY3MyMTYgXGFkZGl0aXZlIA0KXGJcY2Fwc1xjZjFcbG9jaFxmMFxoaWNoXGFmMFxkYmNoXGFmMzkgXHNsaW5rMjE1IFxzbG9ja2VkIFxzcHJpb3JpdHkwIFRpdGxlIDIgQ2hhcixDMSBDaGFyLFN0eWxlNDc7fXtcczIxN1xxYyBcbGkwXHJpMFxzYTI0MFxrZWVwblx3aWRjdGxwYXJcamNsaXN0dGFiXHR4NzIwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgDQpcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MTUgXHNwcmlvcml0eTAgQXJ0aWNsZV9MMjt9e1xzMjE4XHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSANClxhZjVcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmNVxoaWNoXGFmNVxkYmNoXGFmMzlcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQyMTggXHNwcmlvcml0eTAgU3R5bGUzLEI0O317XHMyMTlccXIgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIA0KXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYzOVxoaWNoXGFmMzlcZGJjaFxhZjM5XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjM1IFxzbmV4dDM1IFxzbGluazIyMCBcc3ByaW9yaXR5MCBTdHlsZTY7fXtcKlxjczIyMCBcYWRkaXRpdmUgXGZzMTZcbG9jaFxmMzlcaGljaFxhZjM5XGRiY2hcYWYzOSANClxzbGluazIxOSBcc2xvY2tlZCBcc3ByaW9yaXR5MCBTdHlsZTc7fXtcczIyMVxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcYlxmczI0XGNmMVxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjBcaGljaFxhZjBcZGJjaFxhZjM5XGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MjIxIFxzcWZvcm1hdCBcc3ByaW9yaXR5MCBBcHBlbmRpeDt9e1xzMjIyXHFqIFxsaTE0NDBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDIxNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWwyXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MTUgXHNwcmlvcml0eTAgU3R5bGUxMDt9ew0KXHMyMjNccXIgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhaVxhZjBcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmMzlcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjM1IFxzbmV4dDM1IFxzbGluazIyNCBcc3ByaW9yaXR5MCBTdHlsZTIxO30NCntcKlxjczIyNCBcYWRkaXRpdmUgXGYzOVxmczIyIFxzbGluazIyMyBcc2xvY2tlZCBcc3ByaW9yaXR5MCBTdHlsZTU0O317XHMyMjVccXIgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjFcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDQxIFxzYmFzZWRvbjM1IFxzbmV4dDM1IFxzbGluazIyNiBcc3ByaW9yaXR5MCBTdHlsZTI0O317XCpcY3MyMjYgXGFkZGl0aXZlIFxmczIwXGxhbmcwXGxhbmdmZTEwNDFcbGFuZ2ZlbnAxMDQxIFxzbGluazIyNSBcc2xvY2tlZCBcc3ByaW9yaXR5MCBTdHlsZTI1O317DQpcczIyN1xxaiBcZmktNzIwXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGNmMVxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MjI3IFxzcHJpb3JpdHkwIFN0eWxlMjM7fXsNClxzMjI4XHFsIFxsaTBccmkwXHNhMTIwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGYxXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDIyOCBcc3ByaW9yaXR5MCBTdHlsZTE4O317DQpcczIyOVxxciBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMVxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDQxIFxzYmFzZWRvbjM1IFxzbmV4dDM1IFxzcHJpb3JpdHkwIA0KU3R5bGUyMDt9e1xzMjMwXHFqIFxmaS03MjBcbGk3MjBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzNlxhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxjZjFcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYzOVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MjMwIFxzcWZvcm1hdCBcc3ByaW9yaXR5MCBCdWxsZXQgVGV4dDt9e1xzMjMxXHFqIFxmaS03MjBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxjZjFcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYzOVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDIzMSBcc3Fmb3JtYXQgXHNwcmlvcml0eTAgY29sbGVjdGlvbjI7fXtcKlxjczIzMiBcYWRkaXRpdmUgXGYwXGZzMTZcdWxub25lXGV4cG5kMFxleHBuZHR3MFxjZjBcdXAwXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9zdXBlcnN1YlxhbmltdGV4dDBcbm9wcm9vZiANClxzcHJpb3JpdHkwIFN0eWxlNDk7fXtcczIzM1xxbCBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMVxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxsb2NoXGY0M1xoaWNoXGFmNDNcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwNDEgDQpcc25leHQyMzMgXHNwcmlvcml0eTAgU3R5bGU1Mzt9e1xzMjM0XHFsIFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBcY29udGV4dHVhbHNwYWNlIFxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MjM0IFxzcWZvcm1hdCBcc3ByaW9yaXR5MzQgTGlzdCBQYXJhZ3JhcGg7fXtcczIzNVxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgDQpcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjQzXGhpY2hcYWY0M1xkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc25leHQyMzUgXHNoaWRkZW4gXHNzZW1paGlkZGVuIFJldmlzaW9uO317XCpcY3MyMzYgXGFkZGl0aXZlIFxmMFxmczI0XGV4cG5kMFxleHBuZHR3MFxjZjAgXHNwcmlvcml0eTAgSW5pdGlhbFN0eWxlO317DQpcczIzN1xxbCBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZjFcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MjM3IFxzcHJpb3JpdHkwIERlbHRhVmlldyBUYWJsZSBCb2R5O317XCpcY3MyMzggXGFkZGl0aXZlIA0KXGNmMjFcY2hzaGRuZzBcY2hjZnBhdDBcY2hjYnBhdDIyIFxzc2VtaWhpZGRlbiBcc3VuaGlkZXVzZWQgVW5yZXNvbHZlZCBNZW50aW9uMTt9e1xzMjM5XHFsIFxmaS03MjBcbGkxNDQwXHJpMFxzYTI0MFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4NzIwXHdyYXBkZWZhdWx0e1wqXHBuIFxwbmx2bGJvZHlcaWx2bDBcbHM3XHBucm5vdDBccG5kZWMgfQ0KXGh5cGhwYXIwXGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM3XGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUyMDUyXGxvY2hcZjBcaGljaFxhZjBcZGJjaFxhZjEzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAyMDUyIFxzYmFzZWRvbjAgXHNuZXh0MjM5IFxzcHJpb3JpdHkwIExpc3QgQnVsbGV0IDI7fXtcKlxjczI0MCANClxhZGRpdGl2ZSBcZjBcZnMxNlx1bG5vbmVcZXhwbmQwXGV4cG5kdHcwXGNmMFx1cDBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3N1cGVyc3ViXGFuaW10ZXh0MFxzdHJpa2VkMFxub3Byb29mIFxzcHJpb3JpdHkwIFxzdHlyc2lkNTg1NjcyNCB6em1wVHJhaWxlckl0ZW07fXsNClxzMjQxXHFsIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MjQxIFxzbGluazI0MiBcc3ByaW9yaXR5MCANCkxlZ2FsMiBDb250IDE7fXtcKlxjczI0MiBcYWRkaXRpdmUgXGYwXGZzMjAgXHNsaW5rMjQxIFxzbG9ja2VkIFxzcHJpb3JpdHkwIExlZ2FsMiBDb250IDEgQ2hhcjt9e1xzMjQzXHFsIFxmaTE0NDBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjI0MSBcc25leHQyNDMgXHNsaW5rMjQ0IFxzcHJpb3JpdHkwIExlZ2FsMiBDb250IDI7fXtcKlxjczI0NCBcYWRkaXRpdmUgXGYwXGZzMjAgXHNsaW5rMjQzIFxzbG9ja2VkIFxzcHJpb3JpdHkwIExlZ2FsMiBDb250IDIgQ2hhcjt9ew0KXHMyNDVccWwgXGZpMjE2MFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjI0MyBcc25leHQyNDUgXHNsaW5rMjQ2IFxzcHJpb3JpdHkwIA0KTGVnYWwyIENvbnQgMzt9e1wqXGNzMjQ2IFxhZGRpdGl2ZSBcZjBcZnMyMCBcc2xpbmsyNDUgXHNsb2NrZWQgXHNwcmlvcml0eTAgTGVnYWwyIENvbnQgMyBDaGFyO317XHMyNDdccWwgXGZpMjg4MFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMjQ1IFxzbmV4dDI0NyBcc2xpbmsyNDggXHNwcmlvcml0eTAgTGVnYWwyIENvbnQgNDt9e1wqXGNzMjQ4IFxhZGRpdGl2ZSBcZjBcZnMyMCBcc2xpbmsyNDcgXHNsb2NrZWQgXHNwcmlvcml0eTAgTGVnYWwyIENvbnQgNCBDaGFyO317DQpcczI0OVxxbCBcZmkzNjAwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMjQ3IFxzbmV4dDI0OSBcc2xpbmsyNTAgXHNwcmlvcml0eTAgDQpMZWdhbDIgQ29udCA1O317XCpcY3MyNTAgXGFkZGl0aXZlIFxmMFxmczIwIFxzbGluazI0OSBcc2xvY2tlZCBcc3ByaW9yaXR5MCBMZWdhbDIgQ29udCA1IENoYXI7fXtcczI1MVxxbCBcZmk0MzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24yNDkgXHNuZXh0MjUxIFxzbGluazI1MiBcc3ByaW9yaXR5MCBMZWdhbDIgQ29udCA2O317XCpcY3MyNTIgXGFkZGl0aXZlIFxmMFxmczIwIFxzbGluazI1MSBcc2xvY2tlZCBcc3ByaW9yaXR5MCBMZWdhbDIgQ29udCA2IENoYXI7fXsNClxzMjUzXHFsIFxmaTUwNDBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24yNTEgXHNuZXh0MjUzIFxzbGluazI1NCBcc3ByaW9yaXR5MCANCkxlZ2FsMiBDb250IDc7fXtcKlxjczI1NCBcYWRkaXRpdmUgXGYwXGZzMjAgXHNsaW5rMjUzIFxzbG9ja2VkIFxzcHJpb3JpdHkwIExlZ2FsMiBDb250IDcgQ2hhcjt9e1xzMjU1XHFsIFxmaTU3NjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjI1MyBcc25leHQyNTUgXHNsaW5rMjU2IFxzcHJpb3JpdHkwIExlZ2FsMiBDb250IDg7fXtcKlxjczI1NiBcYWRkaXRpdmUgXGYwXGZzMjAgXHNsaW5rMjU1IFxzbG9ja2VkIFxzcHJpb3JpdHkwIExlZ2FsMiBDb250IDggQ2hhcjt9ew0KXHMyNTdccWwgXGZpNjQ4MFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjI1NSBcc25leHQyNTcgXHNsaW5rMjU4IFxzcHJpb3JpdHkwIA0KTGVnYWwyIENvbnQgOTt9e1wqXGNzMjU4IFxhZGRpdGl2ZSBcZjBcZnMyMCBcc2xpbmsyNTcgXHNsb2NrZWQgXHNwcmlvcml0eTAgTGVnYWwyIENvbnQgOSBDaGFyO317XHMyNTlccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDcyMFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSANClxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGNhcHNcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MTUgXHNsaW5rMjYwIFxzcHJpb3JpdHkwIExlZ2FsMl9MMTt9e1wqXGNzMjYwIFxhZGRpdGl2ZSBcYlxjYXBzXGYwXGZzMjBcdWwgXHNsaW5rMjU5IFxzbG9ja2VkIFxzcHJpb3JpdHkwIExlZ2FsMl9MMSBDaGFyO317DQpcczI2MVxxbCBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMjU5IFxzbmV4dDI2MSBcc2xpbmsyNjIgXHNwcmlvcml0eTAgTGVnYWwyX0wyO317XCpcY3MyNjIgXGFkZGl0aXZlIFxmMFxmczIwIFxzbGluazI2MSBcc2xvY2tlZCBcc3ByaW9yaXR5MCBMZWdhbDJfTDIgQ2hhcjt9e1xzMjYzXHFsIFxmaTE0NDBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgyMTYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM4XGlsdmwyXG91dGxpbmVsZXZlbDJcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMjYxIFxzbmV4dDI2MyBcc2xpbmsyNjQgXHNwcmlvcml0eTAgDQpMZWdhbDJfTDM7fXtcKlxjczI2NCBcYWRkaXRpdmUgXGYwXGZzMjAgXHNsaW5rMjYzIFxzbG9ja2VkIFxzcHJpb3JpdHkwIExlZ2FsMl9MMyBDaGFyO317XHMyNjVccWwgXGZpMjE2MFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHgyODgwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM4XGlsdmwzXG91dGxpbmVsZXZlbDNcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIA0KXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24yNjMgXHNuZXh0MjY1IFxzbGluazI2NiBcc3ByaW9yaXR5MCBMZWdhbDJfTDQ7fXtcKlxjczI2NiBcYWRkaXRpdmUgXGYwXGZzMjAgXHNsaW5rMjY1IFxzbG9ja2VkIFxzcHJpb3JpdHkwIExlZ2FsMl9MNCBDaGFyO317DQpcczI2N1xxbCBcZmkyODgwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDM2MDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcaWx2bDRcb3V0bGluZWxldmVsNFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjI2NSBcc25leHQyNjcgXHNsaW5rMjY4IFxzcHJpb3JpdHkwIExlZ2FsMl9MNTt9e1wqXGNzMjY4IFxhZGRpdGl2ZSBcZjBcZnMyMCBcc2xpbmsyNjcgXHNsb2NrZWQgXHNwcmlvcml0eTAgTGVnYWwyX0w1IENoYXI7fXtcczI2OVxxbCBcZmkzNjAwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4NDMyMFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxpbHZsNVxvdXRsaW5lbGV2ZWw1XGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjI2NyBcc25leHQxNSBcc2xpbmsyNzAgXHNwcmlvcml0eTAgDQpMZWdhbDJfTDY7fXtcKlxjczI3MCBcYWRkaXRpdmUgXGYwXGZzMjAgXHNsaW5rMjY5IFxzbG9ja2VkIFxzcHJpb3JpdHkwIExlZ2FsMl9MNiBDaGFyO317XHMyNzFccWwgXGZpNDMyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHg1MDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM4XGlsdmw2XG91dGxpbmVsZXZlbDZcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIA0KXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24yNjkgXHNuZXh0MTUgXHNsaW5rMjcyIFxzcHJpb3JpdHkwIExlZ2FsMl9MNzt9e1wqXGNzMjcyIFxhZGRpdGl2ZSBcZjBcZnMyMCBcc2xpbmsyNzEgXHNsb2NrZWQgXHNwcmlvcml0eTAgTGVnYWwyX0w3IENoYXI7fXsNClxzMjczXHFsIFxmaTUwNDBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4NTc2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxpbHZsN1xvdXRsaW5lbGV2ZWw3XGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMjcxIFxzbmV4dDE1IFxzbGluazI3NCBcc3ByaW9yaXR5MCBMZWdhbDJfTDg7fXtcKlxjczI3NCBcYWRkaXRpdmUgXGYwXGZzMjAgXHNsaW5rMjczIFxzbG9ja2VkIFxzcHJpb3JpdHkwIExlZ2FsMl9MOCBDaGFyO317XHMyNzVccWwgXGZpNTc2MFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDY0ODBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcaWx2bDhcb3V0bGluZWxldmVsOFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24yNzMgXHNuZXh0MTUgXHNsaW5rMjc2IFxzcHJpb3JpdHkwIA0KTGVnYWwyX0w5O317XCpcY3MyNzYgXGFkZGl0aXZlIFxmMFxmczIwIFxzbGluazI3NSBcc2xvY2tlZCBcc3ByaW9yaXR5MCBMZWdhbDJfTDkgQ2hhcjt9e1xzMjc3XHFsIFxsaTBccmkwXHNhMjQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjFcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjE1IFxzbmV4dDE1IFxzcHJpb3JpdHkwIEJvZHkgVGV4dCBDb250aW51ZWQ7fXtcczI3OFxxYyBcbGkxMTVccmkxMTVcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMTE1XGxpbjExNVxpdGFwMCBccnRsY2hcZmNzMSANClxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQyNzggXHNwcmlvcml0eTAgVE9DIEhlYWRlcjt9e1wqXHRzMjc5XHRzcm93ZFx0cmJyZHJ0XGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmxcYnJkcnNcYnJkcncxMCBcdHJicmRyYlxicmRyc1xicmRydzEwIFx0cmJyZHJyXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmgNClxicmRyc1xicmRydzEwIFx0cmJyZHJ2XGJyZHJzXGJyZHJ3MTAgXHRyZnRzV2lkdGhCM1x0cnBhZGRsMTA4XHRycGFkZHIxMDhcdHJwYWRkZmwzXHRycGFkZGZ0M1x0cnBhZGRmYjNcdHJwYWRkZnIzXHRibGluZDBcdGJsaW5kdHlwZTNcdHN2ZXJ0YWx0XHRzYnJkcnRcdHNicmRybFx0c2JyZHJiXHRzYnJkcnJcdHNicmRyZGdsXHRzYnJkcmRnclx0c2JyZHJoXHRzYnJkcnYgDQpccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjFcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczIwXGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmNDNcaGljaFxhZjQzXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjExIFxzbmV4dDI3OSBcc3ByaW9yaXR5NTkgDQpUYWJsZSBHcmlkO317XHMyODBccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmNDNcaGljaFxhZjQzXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMCBcc25leHQwIFxzdW5oaWRldXNlZCBOb3RlIEhlYWRpbmcyO317XCpcY3MyODEgXGFkZGl0aXZlIFxmMCBOb3RlIEhlYWRpbmcgQ2hhcjE7fXtcKlxjczI4MiBcYWRkaXRpdmUgXGNmMjFcY2hzaGRuZzBcY2hjZnBhdDBcY2hjYnBhdDIyIFxzdW5oaWRldXNlZCBVbnJlc29sdmVkIE1lbnRpb24yO317XCpcY3MyODMgXGFkZGl0aXZlIFxjZjIxXGNoc2hkbmcwXGNoY2ZwYXQwXGNoY2JwYXQyMiBcc3VuaGlkZXVzZWQgDQpVbnJlc29sdmVkIE1lbnRpb24zO317XHMyODRccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxmNDNcaGljaFxhZjQzXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMCBcc25leHQwIFxzbGluazI4NSBcc3VuaGlkZXVzZWQgTm90ZSBIZWFkaW5nMzt9e1wqXGNzMjg1IFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxzYmFzZWRvbjEwIFxzbGluazI4NCBcc2xvY2tlZCBOb3RlIEhlYWRpbmcgQ2hhcjI7fXtcczI4NlxxbCBcbGkwXHJpMFxzbC0yMDBcc2xtdWx0MA0KXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjJcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczE2XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNuZXh0Mjg2IFxzcHJpb3JpdHkwIE1hY1BhYyBUcmFpbGVyO317DQpcczI4N1xxbCBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGY0M1xoaWNoXGFmNDNcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQwIFxzdW5oaWRldXNlZCANCk5vdGUgSGVhZGluZzQ7fXtcKlxjczI4OCBcYWRkaXRpdmUgXGYwIE5vdGUgSGVhZGluZyBDaGFyMzt9fXtcKlxsaXN0dGFibGV7XGxpc3RcbGlzdHRlbXBsYXRlaWQxNTI1MjEyMzY4XGxpc3RzaW1wbGV7XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzDQpcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk3MjBcamNsaXN0dGFiXHR4NzIwXGxpbjcyMCB9e1xsaXN0bmFtZSA7fVxsaXN0aWQtMTI5fXtcbGlzdFxsaXN0dGVtcGxhdGVpZDE0MzA1NTQ1MThcbGlzdHNpbXBsZXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwDQpcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAxXHUtMzkxMyA/O317XGxldmVsbnVtYmVyczt9XGYzXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxzMjM5XGZpLTcyMFxsaTE0NDBcamNsaXN0dGFiXHR4NzIwXGxpbjE0NDAgfXtcbGlzdG5hbWUgO31cbGlzdGlkLTEyNX17XGxpc3RcbGlzdHRlbXBsYXRlaWQtMjEwMTU0Njc5NFxsaXN0c2ltcGxle1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjANClxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDFcdS0zOTEzID87fXtcbGV2ZWxudW1iZXJzO31cZjNcZmJpYXMwXGhyZXMwXGNoaHJlczAgXHMyMDVcZmktMzYwXGxpMzYwXGpjbGlzdHRhYlx0eDM2MFxsaW4zNjAgfXtcbGlzdG5hbWUgTGlzdCBCdWxsZXQ7fVxsaXN0aWQtMTE5fXtcbGlzdFxsaXN0dGVtcGxhdGVpZC0xMTY0NTMyMjk0XGxpc3RzaW1wbGV7XGxpc3RsZXZlbA0KXGxldmVsbmZjMVxsZXZlbG5mY24xXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbG9sZFxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDM2MHtcbGV2ZWx0ZXh0XCcwMlwnMDAuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTcyMFxsaW43MjAgfXtcbGlzdG5hbWUgO31cbGlzdGlkLTV9DQp7XGxpc3RcbGlzdHRlbXBsYXRlaWQ1MTc3NTA5MThcbGlzdGh5YnJpZHtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0xNzM5NTQxOTc4XCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fQ0KXGYzXGV4cG5kMFxleHBuZHR3MFxmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNzIwXGxpbjcyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTE3MTAxNjg5MFwnMDFvO317XGxldmVsbnVtYmVyczt9DQpcZjJcZXhwbmQwXGV4cG5kdHcwXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGkxNDQwXGxpbjE0NDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0xOTAzNjQ5OTIwXCcwMVx1LTM5MjkgPzt9e1xsZXZlbG51bWJlcnM7fQ0KXGYxMFxleHBuZDBcZXhwbmR0dzBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTIxNjBcbGluMjE2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNTM5MjU1MzM2XCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fQ0KXGYzXGV4cG5kMFxleHBuZHR3MFxmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMjg4MFxsaW4yODgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ3NTg4MDkzMDZcJzAxbzt9e1xsZXZlbG51bWJlcnM7fQ0KXGYyXGV4cG5kMFxleHBuZHR3MFxmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMzYwMFxsaW4zNjAwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQyMDgxNTc0OTEwXCcwMVx1LTM5MjkgPzt9e1xsZXZlbG51bWJlcnM7fQ0KXGYxMFxleHBuZDBcZXhwbmR0dzBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTQzMjBcbGluNDMyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTA1MjEzMjQ5NlwnMDFcdS0zOTEzID87fXtcbGV2ZWxudW1iZXJzO30NClxmM1xleHBuZDBcZXhwbmR0dzBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTUwNDBcbGluNTA0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTEwMDA0MTAwNTJcJzAxbzt9e1xsZXZlbG51bWJlcnM7fQ0KXGYyXGV4cG5kMFxleHBuZHR3MFxmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNTc2MFxsaW41NzYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ4NjA5NDQzNjBcJzAxXHUtMzkyOSA/O317XGxldmVsbnVtYmVyczt9DQpcZjEwXGV4cG5kMFxleHBuZHR3MFxmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNjQ4MFxsaW42NDgwIH17XGxpc3RuYW1lIDt9XGxpc3RpZDF9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkMTUzMTA3MjI0NntcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcJzAxXCdiNzt9e1xsZXZlbG51bWJlcnM7fVxmM1xmYmlhczBcaHJlczBcY2hocmVzMCBcczI2XGZpLTcyMFxsaTEwODBcamNsaXN0dGFiXHR4MTA4MFxsaW4xMDgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDFcJ2I3O317XGxldmVsbnVtYmVyczt9DQpcZjNcZmJpYXMwXGhyZXMwXGNoaHJlczAgXHM3MFxmaS03MjBcbGkxNDQwXGpjbGlzdHRhYlx0eDE0NDBcbGluMTQ0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAxXCdiNzt9e1xsZXZlbG51bWJlcnM7fVxmM1xmYmlhczBcaHJlczBcY2hocmVzMCBcczcwXGZpLTcyMFxsaTIxNjANClxqY2xpc3R0YWJcdHgyMTYwXGxpbjIxNjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjU1XGxldmVsbmZjbjI1NVxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cyXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAwO317XGxldmVsbnVtYmVyczt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpMFxsaTBcbGluMCB9e1xsaXN0bGV2ZWwNClxsZXZlbG5mYzI1NVxsZXZlbG5mY24yNTVcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MlxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMDt9e1xsZXZlbG51bWJlcnM7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaTBcbGkwXGxpbjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjU1XGxldmVsbmZjbjI1NVxsZXZlbGpjMFxsZXZlbGpjbjANClxsZXZlbGZvbGxvdzJcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDA7fXtcbGV2ZWxudW1iZXJzO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmYmlhczBcaHJlczBcY2hocmVzMCBcZmkwXGxpMFxsaW4wIH17XGxpc3RsZXZlbFxsZXZlbG5mYzI1NVxsZXZlbG5mY24yNTVcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MlxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwDQpcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAwO317XGxldmVsbnVtYmVyczt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpMFxsaTBcbGluMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyNTVcbGV2ZWxuZmNuMjU1XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzJcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDA7fXtcbGV2ZWxudW1iZXJzO30NClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaTBcbGkwXGxpbjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjU1XGxldmVsbmZjbjI1NVxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cyXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAwO317XGxldmVsbnVtYmVyczt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxmYmlhczBcaHJlczBcY2hocmVzMCBcZmkwXGxpMFxsaW4wIH17XGxpc3RuYW1lIDt9XGxpc3RpZDYxMDU2OTN9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkMjEzNTg0NzYwMlxsaXN0aHlicmlke1xsaXN0bGV2ZWxcbGV2ZWxuZmMzXGxldmVsbmZjbjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDI3MzA0NTkwDQpcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcczIwOFxmaS0zNjBcbGk3MjBcbGluNzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkLTE2NDgxODExNTJcJzAyXCcwMS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMTQ0MFxsaW4xNDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkLTEyNDA4NDE0MDZcJzAyXCcwMi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMTgwXGxpMjE2MFxsaW4yMTYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkLTE1MzE5MjY5ODZcJzAyXCcwMy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMjg4MFxsaW4yODgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkLTQ4NzM4OTEyXCcwMlwnMDQuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTM2MDBcbGluMzYwMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZDE0MTUzNjc0NDBcJzAyXCcwNS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMTgwXGxpNDMyMFxsaW40MzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkLTc5NjIwNTA5OFwnMDJcJzA2Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk1MDQwXGxpbjUwNDAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQtMTYxNDc0NDU0OFwnMDJcJzA3Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk1NzYwXGxpbjU3NjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQtMjA5NjcwMTQ3MlwnMDJcJzA4Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxocmVzMFxjaGhyZXMwIFxmaS0xODBcbGk2NDgwXGxpbjY0ODAgfXtcbGlzdG5hbWUgO31cbGlzdGlkMjQ1MjcxMDh9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkLTQ4MDc0NjY0OFxsaXN0aHlicmlke1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjANClxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MFxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQxMjc0NDcyMjZcJzAxXHUtMzkxMyA/O317XGxldmVsbnVtYmVyczt9XGxvY2hcYWYzXGhpY2hcYWYzXGRiY2hcYWYxXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk3MjBcbGluNzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMA0KXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQxODY1NzIyNzU4XCcwMW87fXtcbGV2ZWxudW1iZXJzO31cZjJcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTE0NDBcbGluMTQ0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDENClxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTg4MDQ3NjM1NlwnMDFcdS0zOTI5ID87fXtcbGV2ZWxudW1iZXJzO31cZjEwXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGkyMTYwXGxpbjIxNjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZQ0KXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY1ODgyNzc1NFwnMDFcdS0zOTEzID87fXtcbGV2ZWxudW1iZXJzO31cZjNcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTI4ODBcbGluMjg4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwDQpcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTIwMDM3MTY3NFwnMDFvO317XGxldmVsbnVtYmVyczt9XGYyXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGkzNjAwXGxpbjM2MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZDQ4NDc0Mzg2MlwnMDFcdS0zOTI5ID87fXtcbGV2ZWxudW1iZXJzO31cZjEwXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk0MzIwXGxpbjQzMjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZC0xMjg5NDc3ODIwXCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fVxmM1xmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNTA0MFxsaW41MDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQtMTQ2NDQwODE0MFwnMDFvO317XGxldmVsbnVtYmVyczt9XGYyXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk1NzYwXGxpbjU3NjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtMTYzNTM3NDgyNA0KXCcwMVx1LTM5MjkgPzt9e1xsZXZlbG51bWJlcnM7fVxmMTBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTY0ODBcbGluNjQ4MCB9e1xsaXN0bmFtZSA7fVxsaXN0aWQxNjgxMDY5ODJ9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkMjUyMTcxNzhcbGlzdGh5YnJpZHtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwDQpcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTE0Mzk2NjkyMjBcJzAxXHUtMzkxMyA/O317XGxldmVsbnVtYmVyczt9XGYzXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk3MjBcbGluNzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwDQp7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQyNTEzMjE2MTBcJzAxbzt9e1xsZXZlbG51bWJlcnM7fVxmMlxmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMTQ0MFxsaW4xNDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQxNDQ0NTgyNTYwXCcwMVx1LTM5MjkgPzt9e1xsZXZlbG51bWJlcnM7fVxmMTBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTIxNjBcbGluMjE2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkNzQwMDgwMzU2XCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fVxmM1xmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMjg4MFxsaW4yODgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQxMDYxMjA5NjcyXCcwMW87fXtcbGV2ZWxudW1iZXJzO31cZjJcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTM2MDBcbGluMzYwMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDk4NDY2MTI3NA0KXCcwMVx1LTM5MjkgPzt9e1xsZXZlbG51bWJlcnM7fVxmMTBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTQzMjBcbGluNDMyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDEwNjQyMjI4MjYNClwnMDFcdS0zOTEzID87fXtcbGV2ZWxudW1iZXJzO31cZjNcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTUwNDBcbGluNTA0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDczMjA2Mjg3NlwnMDFvO317XGxldmVsbnVtYmVycw0KO31cZjJcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTU3NjBcbGluNTc2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDExODk4Nzc2NTRcJzAxXHUtMzkyOSA/O317XGxldmVsbnVtYmVyczt9DQpcZjEwXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk2NDgwXGxpbjY0ODAgfXtcbGlzdG5hbWUgO31cbGlzdGlkMTkwNjA4NTI4fXtcbGlzdFxsaXN0dGVtcGxhdGVpZDUxNzc1MDkxOFxsaXN0aHlicmlke1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQxMzUxNTg5OTBcJzAxXHUtMzkxMyA/O317XGxldmVsbnVtYmVyczt9XGYzXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxzMjMwXGZpLTM2MFxsaTcyMFxsaW43MjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZC0xMTE3NTkzMDk0XCcwMW87fXtcbGV2ZWxudW1iZXJzO31cZjJcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTE0NDBcbGluMTQ0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0xNTEzNTk3MjQNClwnMDFcdS0zOTI5ID87fXtcbGV2ZWxudW1iZXJzO31cZjEwXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGkyMTYwXGxpbjIxNjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtMjE4OTc2OTQyDQpcJzAxXHUtMzkxMyA/O317XGxldmVsbnVtYmVyczt9XGYzXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGkyODgwXGxpbjI4ODAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtOTU1ODU3MTcwDQpcJzAxbzt9e1xsZXZlbG51bWJlcnM7fVxmMlxmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMzYwMFxsaW4zNjAwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNTkyOTk2MjE4XCcwMVx1LTM5MjkgPzt9e1xsZXZlbG51bWJlcnMNCjt9XGYxMFxmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNDMyMFxsaW40MzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTE1MDAyOTc3NlwnMDFcdS0zOTEzID87fXtcbGV2ZWxudW1iZXJzO30NClxmM1xmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNTA0MFxsaW41MDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTU0NzU5MDQyMlwnMDFvO317XGxldmVsbnVtYmVyczt9XGYyXGZiaWFzMFxocmVzMFxjaGhyZXMwIA0KXGZpLTM2MFxsaTU3NjBcbGluNTc2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDE3MTYzMjEzNDhcJzAxXHUtMzkyOSA/O317XGxldmVsbnVtYmVyczt9XGYxMFxmYmlhczBcaHJlczBcY2hocmVzMCANClxmaS0zNjBcbGk2NDgwXGxpbjY0ODAgfXtcbGlzdG5hbWUgO31cbGlzdGlkMjQ4OTcyNTM3fXtcbGlzdFxsaXN0dGVtcGxhdGVpZC0xNDMwNzIwMjY2XGxpc3RoeWJyaWR7XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTY1MjU3OTE4Ng0KXCcwMlwnMDAuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTcyMFxsaW43MjAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtNTI0NzcwNzQwDQpcJzAyXCcwMS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMTQ0MFxsaW4xNDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTU2MTc2OTY0NA0KXCcwMlwnMDIuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGhyZXMwXGNoaHJlczAgXGZpLTE4MFxsaTIxNjBcbGluMjE2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDQxMzMwNjA0DQpcJzAyXCcwMy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMjg4MFxsaW4yODgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMjU0NzAwNTINClwnMDJcJzA0Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGkzNjAwXGxpbjM2MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ3NDA0Njc1MDgNClwnMDJcJzA1Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxocmVzMFxjaGhyZXMwIFxmaS0xODBcbGk0MzIwXGxpbjQzMjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtMjAzMTA4MzMzNA0KXCcwMlwnMDYuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTUwNDBcbGluNTA0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC03NzMzMDI1MDINClwnMDJcJzA3Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk1NzYwXGxpbjU3NjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtNDU2ODU2MzU0DQpcJzAyXCcwOC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMTgwXGxpNjQ4MFxsaW42NDgwIH17XGxpc3RuYW1lIDt9XGxpc3RpZDI2ODEyNzE0NX17XGxpc3RcbGlzdHRlbXBsYXRlaWQtMjEzMjUyMDMyMntcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzJcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMA0KXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwOUFSVElDTEUgXCcwMDt9e1xsZXZlbG51bWJlcnNcJzA5O31ccnRsY2hcZmNzMSBcYWkwXGFmMCBcbHRyY2hcZmNzMCBcYlxpMFxzdHJpa2UwXHNjYXBzMFxjYXBzXHYwXGY0NlxmczI0XHVsbm9uZVxleHBuZDBcZXhwbmR0dzBcY2YwXHVwMFxub3N1cGVyc3ViXGtlcm5pbmcwXGFuaW10ZXh0MFxzdHJpa2VkMFxub3Byb29mMFxzcHYwXGhyZXMwXGNoaHJlczAgXGZpMFxsaTQ1MA0KXGpjbGlzdHRhYlx0eDQ1MFxsaW40NTAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbGxlZ2FsXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwM1wnMDAuXCcwMTt9e1xsZXZlbG51bWJlcnNcJzAxXCcwMzt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxiMFxpMFxzdHJpa2UwXGNhcHMwXHYwXGY0M1xmczI0XHVsbm9uZVxjZjFcbm9zdXBlcnN1YlxhbmltdGV4dDBcc3RyaWtlZDBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpNzIwXGxpLTM2MFxqY2xpc3R0YWJcdHgwXGxpbi0zNjAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXCcwMyhcJzAyKTt9e1xsZXZlbG51bWJlcnNcJzAyO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpMFxzdHJpa2UwXGNhcHMwXHYwXGZzMjRcdWxub25lXGNmMVxub3N1cGVyc3ViXGFuaW10ZXh0MFxzdHJpa2VkMFxocmVzMFxjaGhyZXMwIFxmaTE0NDBcbGkwXGpjbGlzdHRhYlx0eDBcbGluMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxDQpcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAzKFwnMDMpO317XGxldmVsbnVtYmVyc1wnMDI7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGkwXHN0cmlrZTBcY2FwczBcdjBcZnMyNFx1bG5vbmVcY2YxXG5vc3VwZXJzdWJcYW5pbXRleHQwXHN0cmlrZWQwXGhyZXMwXGNoaHJlczAgXGZpMTQ0MFxsaTcyMFxqY2xpc3R0YWJcdHgwXGxpbjcyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMzXGxldmVsbmZjbjMNClxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAzKFwnMDQpO317XGxldmVsbnVtYmVyc1wnMDI7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGkwXHN0cmlrZTBcY2FwczBcdjBcZnMyNFx1bG5vbmVcY2YxXG5vc3VwZXJzdWJcYW5pbXRleHQwXHN0cmlrZWQwXGhyZXMwXGNoaHJlczAgXGZpMTQ0MFxsaTE0NDANClxqY2xpc3R0YWJcdHgwXGxpbjE0NDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjU1XGxldmVsbmZjbjI1NVxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cyXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAwO317XGxldmVsbnVtYmVyczt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxiMFxpMFxzdHJpa2UwXGNhcHMwXHYwXGZzMjRcdWxub25lXGNmMVxub3N1cGVyc3ViXGFuaW10ZXh0MFxzdHJpa2VkMFxocmVzMFxjaGhyZXMwIFxmaS0xNDQwXGxpNTc2MFxqY2xpc3R0YWJcdHgwXGxpbjU3NjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjU1XGxldmVsbmZjbjI1NVxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cyXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClwnMDA7fXtcbGV2ZWxudW1iZXJzO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpMFxzdHJpa2UwXGNhcHMwXHYwXGZzMjRcdWxub25lXGNmMVxub3N1cGVyc3ViXGFuaW10ZXh0MFxzdHJpa2VkMFxocmVzMFxjaGhyZXMwIFxmaS03MjBcbGk1NzYwXGpjbGlzdHRhYlx0eDBcbGluNTc2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyNTVcbGV2ZWxuZmNuMjU1XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzJcbGV2ZWxzdGFydGF0MQ0KXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMDt9e1xsZXZlbG51bWJlcnM7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGkwXHN0cmlrZTBcY2FwczBcdjBcZnMyNFx1bG5vbmVcY2YxXG5vc3VwZXJzdWJcYW5pbXRleHQwXHN0cmlrZWQwXGhyZXMwXGNoaHJlczAgXGZpLTcyMFxsaTY0ODBcamNsaXN0dGFiXHR4MFxsaW42NDgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzI1NVxsZXZlbG5mY24yNTVcbGV2ZWxqYzANClxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cyXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAwO317XGxldmVsbnVtYmVyczt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaTBcc3RyaWtlMFxjYXBzMFx2MFxmczI0XHVsbm9uZVxjZjFcbm9zdXBlcnN1YlxhbmltdGV4dDBcc3RyaWtlZDBcaHJlczBcY2hocmVzMCBcZmktNzIwXGxpNzIwMFxqY2xpc3R0YWJcdHgwXGxpbjcyMDAgfQ0Ke1xsaXN0bmFtZSA7fVxsaXN0aWQzMDIxMjQzNjV9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkMTY3NzQ3MzgwNntcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzJcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDlBcnRpY2xlIFwnMDA7fXtcbGV2ZWxudW1iZXJzXCcwOTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxzY2FwczBcY2Fwc1x1bG5vbmVcY2YyM1xocmVzMFxjaGhyZXMwIFxzMTUwXGZpMFxsaTBcamNsaXN0dGFiXHR4MFxsaW4wIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxsZWdhbFxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDNcJzAwLlwnMDE7fXtcbGV2ZWxudW1iZXJzXCcwMVwnMDM7fVxydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZjBcdWxub25lXGNmMjNcZmJpYXMwXGhyZXMwXGNoaHJlczAgXHMxNTJcZmk3MjBcbGkwXGpjbGlzdHRhYlx0eDE0NDBcbGluMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMyhcJzAyKTt9e1xsZXZlbG51bWJlcnNcJzAyO31ccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsbm9uZVxjZjIzXGhyZXMwXGNoaHJlczAgXHMxNTRcZmkxNDQwXGxpMFxqY2xpc3R0YWJcdHgyMTYwXGxpbjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDMoXCcwMyk7fXtcbGV2ZWxudW1iZXJzXCcwMjt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxmMFx1bG5vbmVcY2YyM1xmYmlhczBcaHJlczBcY2hocmVzMCBcczE1NlxmaTcyMFxsaTcyMFxqY2xpc3R0YWJcdHgyMTYwXGxpbjcyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMzXGxldmVsbmZjbjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMyhcJzA0KTt9e1xsZXZlbG51bWJlcnNcJzAyO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsbm9uZVxjZjIzXGhyZXMwXGNoaHJlczAgXHMxNThcZmk3MjBcbGkxNDQwXGpjbGlzdHRhYlx0eDI4ODBcbGluMTQ0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMyhcJzA1KTt9e1xsZXZlbG51bWJlcnNcJzAyO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsbm9uZVxjZjIzXGhyZXMwXGNoaHJlczAgXHMxNjBcZmk3MjBcbGkxNDQwXGpjbGlzdHRhYlx0eDI4ODBcbGluMTQ0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMlwnMDYuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxub25lXGNmMjNcaHJlczBcY2hocmVzMCBcczE2MlxmaTcyMFxsaTIxNjBcamNsaXN0dGFiXHR4MzYwMFxsaW4yMTYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAyXCcwNy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bG5vbmVcY2YyM1xocmVzMFxjaGhyZXMwIFxzMTY0XGZpNzIwXGxpMjg4MFxqY2xpc3R0YWJcdHg0MzIwXGxpbjI4ODAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDMoXCcwOCk7fXtcbGV2ZWxudW1iZXJzXCcwMjt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bG5vbmVcY2YyM1xocmVzMFxjaGhyZXMwIFxzMTY2XGZpNzIwXGxpMzYwMFxqY2xpc3R0YWJcdHg1MDQwXGxpbjM2MDAgfXtcbGlzdG5hbWUgQ29ycG9yYXRlICgyKTt9XGxpc3RpZDMyMzMxNTg1NX17XGxpc3RcbGlzdHRlbXBsYXRlaWQtMjEzMjUyMDMyMntcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzJcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDANCntcbGV2ZWx0ZXh0XCcwOUFSVElDTEUgXCcwMDt9e1xsZXZlbG51bWJlcnNcJzA5O31ccnRsY2hcZmNzMSBcYWkwXGFmMCBcbHRyY2hcZmNzMCBcYlxpMFxzdHJpa2UwXHNjYXBzMFxjYXBzXHYwXGY0NlxmczI0XHVsbm9uZVxleHBuZDBcZXhwbmR0dzBcY2YwXHVwMFxub3N1cGVyc3ViXGtlcm5pbmcwXGFuaW10ZXh0MFxzdHJpa2VkMFxub3Byb29mMFxzcHYwXGhyZXMwXGNoaHJlczAgXGZpMFxsaTQ1MFxqY2xpc3R0YWJcdHg0NTBcbGluNDUwIH0NCntcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbGxlZ2FsXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwM1wnMDAuXCcwMTt9e1xsZXZlbG51bWJlcnNcJzAxXCcwMzt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxiMFxpMFxzdHJpa2UwXGNhcHMwXHYwXGY0M1xmczI0XHVsbm9uZVxjZjFcbm9zdXBlcnN1YlxhbmltdGV4dDBcc3RyaWtlZDBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpNzIwXGxpLTM2MFxqY2xpc3R0YWJcdHgwXGxpbi0zNjAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXCcwMyhcJzAyKTt9e1xsZXZlbG51bWJlcnNcJzAyO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpMFxzdHJpa2UwXGNhcHMwXHYwXGZzMjRcdWxub25lXGNmMVxub3N1cGVyc3ViXGFuaW10ZXh0MFxzdHJpa2VkMFxocmVzMFxjaGhyZXMwIFxmaTE0NDBcbGkwXGpjbGlzdHRhYlx0eDBcbGluMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxDQpcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAzKFwnMDMpO317XGxldmVsbnVtYmVyc1wnMDI7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGkwXHN0cmlrZTBcY2FwczBcdjBcZnMyNFx1bG5vbmVcY2YxXG5vc3VwZXJzdWJcYW5pbXRleHQwXHN0cmlrZWQwXGhyZXMwXGNoaHJlczAgXGZpMTQ0MFxsaTcyMFxqY2xpc3R0YWJcdHgwXGxpbjcyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMzXGxldmVsbmZjbjMNClxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAzKFwnMDQpO317XGxldmVsbnVtYmVyc1wnMDI7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGkwXHN0cmlrZTBcY2FwczBcdjBcZnMyNFx1bG5vbmVcY2YxXG5vc3VwZXJzdWJcYW5pbXRleHQwXHN0cmlrZWQwXGhyZXMwXGNoaHJlczAgXGZpMTQ0MFxsaTE0NDANClxqY2xpc3R0YWJcdHgwXGxpbjE0NDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjU1XGxldmVsbmZjbjI1NVxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cyXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAwO317XGxldmVsbnVtYmVyczt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxiMFxpMFxzdHJpa2UwXGNhcHMwXHYwXGZzMjRcdWxub25lXGNmMVxub3N1cGVyc3ViXGFuaW10ZXh0MFxzdHJpa2VkMFxocmVzMFxjaGhyZXMwIFxmaS0xNDQwXGxpNTc2MFxqY2xpc3R0YWJcdHgwXGxpbjU3NjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjU1XGxldmVsbmZjbjI1NVxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cyXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClwnMDA7fXtcbGV2ZWxudW1iZXJzO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpMFxzdHJpa2UwXGNhcHMwXHYwXGZzMjRcdWxub25lXGNmMVxub3N1cGVyc3ViXGFuaW10ZXh0MFxzdHJpa2VkMFxocmVzMFxjaGhyZXMwIFxmaS03MjBcbGk1NzYwXGpjbGlzdHRhYlx0eDBcbGluNTc2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyNTVcbGV2ZWxuZmNuMjU1XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzJcbGV2ZWxzdGFydGF0MQ0KXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMDt9e1xsZXZlbG51bWJlcnM7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGkwXHN0cmlrZTBcY2FwczBcdjBcZnMyNFx1bG5vbmVcY2YxXG5vc3VwZXJzdWJcYW5pbXRleHQwXHN0cmlrZWQwXGhyZXMwXGNoaHJlczAgXGZpLTcyMFxsaTY0ODBcamNsaXN0dGFiXHR4MFxsaW42NDgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzI1NVxsZXZlbG5mY24yNTVcbGV2ZWxqYzANClxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cyXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAwO317XGxldmVsbnVtYmVyczt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaTBcc3RyaWtlMFxjYXBzMFx2MFxmczI0XHVsbm9uZVxjZjFcbm9zdXBlcnN1YlxhbmltdGV4dDBcc3RyaWtlZDBcaHJlczBcY2hocmVzMCBcZmktNzIwXGxpNzIwMFxqY2xpc3R0YWJcdHgwXGxpbjcyMDAgfQ0Ke1xsaXN0bmFtZSA7fVxsaXN0aWQ0MTk2NDUzNzF9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkMTYxOTE4Nzg1MFxsaXN0aHlicmlke1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTc5OTUxMjY2MlwnMDFcdS0zOTEzID87fXtcbGV2ZWxudW1iZXJzO30NClxmM1xmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNzIwXGxpbjcyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTY1NTcyMTY2MFwnMDFvO317XGxldmVsbnVtYmVyczt9XGYyXGZiaWFzMFxocmVzMFxjaGhyZXMwIA0KXGZpLTM2MFxsaTE0NDBcbGluMTQ0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTQwMTU4NzY0MlwnMDFcdS0zOTI5ID87fXtcbGV2ZWxudW1iZXJzO31cZjEwXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGkyMTYwXGxpbjIxNjAgfQ0Ke1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC04MTM3ODQyNDhcJzAxXHUtMzkxMyA/O317XGxldmVsbnVtYmVyczt9XGYzXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGkyODgwXGxpbjI4ODAgfXtcbGlzdGxldmVsDQpcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDE4NTY5MjU1NjZcJzAxbzt9e1xsZXZlbG51bWJlcnM7fVxmMlxmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMzYwMFxsaW4zNjAwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzDQpcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtMTEyNzA3MTI3NFwnMDFcdS0zOTI5ID87fXtcbGV2ZWxudW1iZXJzO31cZjEwXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk0MzIwXGxpbjQzMjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzANClxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDI0MDM4OTg2NlwnMDFcdS0zOTEzID87fXtcbGV2ZWxudW1iZXJzO31cZjNcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTUwNDBcbGluNTA0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjANClxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTE2NjI5OTkwMTRcJzAxbzt9e1xsZXZlbG51bWJlcnM7fVxmMlxmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNTc2MFxsaW41NzYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MQ0KXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtMTM2NTU4MjE0MFwnMDFcdS0zOTI5ID87fXtcbGV2ZWxudW1iZXJzO31cZjEwXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk2NDgwXGxpbjY0ODAgfXtcbGlzdG5hbWUgO31cbGlzdGlkNDIwODA3NDMwfXtcbGlzdFxsaXN0dGVtcGxhdGVpZC02MDU0OTk3NTZcbGlzdGh5YnJpZHtcbGlzdGxldmVsXGxldmVsbmZjMjMNClxsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTE0MTUwMDY3NThcJzAxXHUtMzkxMyA/O317XGxldmVsbnVtYmVyczt9XGYzXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk3MjBcbGluNzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMA0KXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDU5ODA5MDQ2MlwnMDFvO317XGxldmVsbnVtYmVyczt9XGYyXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGkxNDQwXGxpbjE0NDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwDQpcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTY4MTA3OTIyXCcwMVx1LTM5MjkgPzt9e1xsZXZlbG51bWJlcnM7fVxmMTBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTIxNjBcbGluMjE2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQxMjY0MTIxODc0XCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fVxmM1xmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMjg4MFxsaW4yODgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQxNDQyMTk4ODQ0DQpcJzAxbzt9e1xsZXZlbG51bWJlcnM7fVxmMlxmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMzYwMFxsaW4zNjAwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtMTI4OTU2NjgyOFwnMDFcdS0zOTI5ID87fXtcbGV2ZWxudW1iZXJzO30NClxmMTBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTQzMjBcbGluNDMyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTM0MDc0NTM2OFwnMDFcdS0zOTEzID87fXtcbGV2ZWxudW1iZXJzO31cZjNcZmJpYXMwXGhyZXMwXGNoaHJlczAgDQpcZmktMzYwXGxpNTA0MFxsaW41MDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQzODc0NjYyMzRcJzAxbzt9e1xsZXZlbG51bWJlcnM7fVxmMlxmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNTc2MFxsaW41NzYwIH17XGxpc3RsZXZlbA0KXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3MTkxMzgxNFwnMDFcdS0zOTI5ID87fXtcbGV2ZWxudW1iZXJzO31cZjEwXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk2NDgwXGxpbjY0ODAgfXtcbGlzdG5hbWUgO31cbGlzdGlkNTA3MDE1MTQ0fQ0Ke1xsaXN0XGxpc3R0ZW1wbGF0ZWlkOTE2Mzc5OTc4XGxpc3RoeWJyaWR7XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2MDk5MzQwNjJcJzAxXHUtMzkxMyA/O317XGxldmVsbnVtYmVyczt9XGYzXGZiaWFzMFxocmVzMFxjaGhyZXMwIA0KXGZpLTM2MFxsaTcyMFxsaW43MjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0xNjIwODA4NTIyXCcwMW87fXtcbGV2ZWxudW1iZXJzO31cZjJcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTE0NDBcbGluMTQ0MCB9e1xsaXN0bGV2ZWwNClxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtMjIxNTkxMjY4XCcwMVx1LTM5MjkgPzt9e1xsZXZlbG51bWJlcnM7fVxmMTBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTIxNjBcbGluMjE2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMA0KXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtMjYxMDYzNDEwXCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fVxmM1xmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMjg4MFxsaW4yODgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzANClxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC04OTIyNDE1MlwnMDFvO317XGxldmVsbnVtYmVyczt9XGYyXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGkzNjAwXGxpbjM2MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MA0Ke1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTA4NzY1ODAxMFwnMDFcdS0zOTI5ID87fXtcbGV2ZWxudW1iZXJzO31cZjEwXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk0MzIwXGxpbjQzMjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkMTk5NTYwNDcxNFwnMDFcdS0zOTEzID87fXtcbGV2ZWxudW1iZXJzO31cZjNcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTUwNDBcbGluNTA0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTE0MDg5NzM1ODQNClwnMDFvO317XGxldmVsbnVtYmVyczt9XGYyXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk1NzYwXGxpbjU3NjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0xMDk3NzAzODQ0XCcwMVx1LTM5MjkgPzt9e1xsZXZlbG51bWJlcnM7fQ0KXGYxMFxmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNjQ4MFxsaW42NDgwIH17XGxpc3RuYW1lIDt9XGxpc3RpZDUxNjU3NjQyNX17XGxpc3RcbGlzdHRlbXBsYXRlaWQ3NzU0NjE5MThcbGlzdGh5YnJpZHtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkMjI0NDMxMjgyXCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fVxmM1xmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNzIwXGxpbjcyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkMjEwMzk5OTE2XCcwMW87fXtcbGV2ZWxudW1iZXJzO31cZjJcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTE0NDBcbGluMTQ0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0xNjc5NjMyNTcwDQpcJzAxXHUtMzkyOSA/O317XGxldmVsbnVtYmVyczt9XGYxMFxmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMjE2MFxsaW4yMTYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTExNTcyNDEzOA0KXCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fVxmM1xmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMjg4MFxsaW4yODgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTU5MDA1Nzk5Mg0KXCcwMW87fXtcbGV2ZWxudW1iZXJzO31cZjJcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTM2MDBcbGluMzYwMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDkwMDczNzg0NFwnMDFcdS0zOTI5ID87fXtcbGV2ZWxudW1iZXJzDQo7fVxmMTBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTQzMjBcbGluNDMyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0yMTA3MjY5OTZcJzAxXHUtMzkxMyA/O317XGxldmVsbnVtYmVyczt9DQpcZjNcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTUwNDBcbGluNTA0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDExMzM2OTE3NTBcJzAxbzt9e1xsZXZlbG51bWJlcnM7fVxmMlxmYmlhczBcaHJlczBcY2hocmVzMCANClxmaS0zNjBcbGk1NzYwXGxpbjU3NjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtMTI0Njg1OTcyNlwnMDFcdS0zOTI5ID87fXtcbGV2ZWxudW1iZXJzO31cZjEwXGZiaWFzMFxocmVzMFxjaGhyZXMwIA0KXGZpLTM2MFxsaTY0ODBcbGluNjQ4MCB9e1xsaXN0bmFtZSA7fVxsaXN0aWQ1NDg1NDA0NDd9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkLTIxMzI1MjAzMjJ7XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cyXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzA5QVJUSUNMRSBcJzAwO317XGxldmVsbnVtYmVyc1wnMDk7fVxydGxjaFxmY3MxIA0KXGFpMFxhZjAgXGx0cmNoXGZjczAgXGJcaTBcc3RyaWtlMFxzY2FwczBcY2Fwc1x2MFxmNDZcZnMyNFx1bG5vbmVcZXhwbmQwXGV4cG5kdHcwXGNmMFx1cDBcbm9zdXBlcnN1YlxrZXJuaW5nMFxhbmltdGV4dDBcc3RyaWtlZDBcbm9wcm9vZjBcc3B2MFxocmVzMFxjaGhyZXMwIFxmaTBcbGk0NTBcamNsaXN0dGFiXHR4NDUwXGxpbjQ1MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wDQpcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxsZWdhbFxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDNcJzAwLlwnMDE7fXtcbGV2ZWxudW1iZXJzXCcwMVwnMDM7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGkwXHN0cmlrZTBcY2FwczBcdjBcZjQzXGZzMjRcdWxub25lXGNmMVxub3N1cGVyc3ViXGFuaW10ZXh0MFxzdHJpa2VkMFxmYmlhczBcaHJlczBcY2hocmVzMCBcZmk3MjBcbGktMzYwDQpcamNsaXN0dGFiXHR4MFxsaW4tMzYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAzKFwnMDIpO317XGxldmVsbnVtYmVyc1wnMDI7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcYjBcaTBcc3RyaWtlMFxjYXBzMFx2MFxmczI0XHVsbm9uZVxjZjFcbm9zdXBlcnN1YlxhbmltdGV4dDBcc3RyaWtlZDBcaHJlczBcY2hocmVzMCBcZmkxNDQwXGxpMFxqY2xpc3R0YWJcdHgwXGxpbjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXCcwMyhcJzAzKTt9e1xsZXZlbG51bWJlcnNcJzAyO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpMFxzdHJpa2UwXGNhcHMwXHYwXGZzMjRcdWxub25lXGNmMVxub3N1cGVyc3ViXGFuaW10ZXh0MFxzdHJpa2VkMFxocmVzMFxjaGhyZXMwIFxmaTE0NDBcbGk3MjBcamNsaXN0dGFiXHR4MFxsaW43MjAgfXtcbGlzdGxldmVsXGxldmVsbmZjM1xsZXZlbG5mY24zXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzANClxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMyhcJzA0KTt9e1xsZXZlbG51bWJlcnNcJzAyO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpMFxzdHJpa2UwXGNhcHMwXHYwXGZzMjRcdWxub25lXGNmMVxub3N1cGVyc3ViXGFuaW10ZXh0MFxzdHJpa2VkMFxocmVzMFxjaGhyZXMwIFxmaTE0NDBcbGkxNDQwXGpjbGlzdHRhYlx0eDBcbGluMTQ0MCB9e1xsaXN0bGV2ZWwNClxsZXZlbG5mYzI1NVxsZXZlbG5mY24yNTVcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MlxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMDt9e1xsZXZlbG51bWJlcnM7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGkwXHN0cmlrZTBcY2FwczBcdjBcZnMyNFx1bG5vbmVcY2YxXG5vc3VwZXJzdWJcYW5pbXRleHQwXHN0cmlrZWQwXGhyZXMwXGNoaHJlczAgDQpcZmktMTQ0MFxsaTU3NjBcamNsaXN0dGFiXHR4MFxsaW41NzYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzI1NVxsZXZlbG5mY24yNTVcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MlxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMDt9e1xsZXZlbG51bWJlcnM7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcYjBcaTBcc3RyaWtlMFxjYXBzMFx2MFxmczI0XHVsbm9uZVxjZjFcbm9zdXBlcnN1YlxhbmltdGV4dDBcc3RyaWtlZDBcaHJlczBcY2hocmVzMCBcZmktNzIwXGxpNTc2MFxqY2xpc3R0YWJcdHgwXGxpbjU3NjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjU1XGxldmVsbmZjbjI1NVxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cyXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClwnMDA7fXtcbGV2ZWxudW1iZXJzO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpMFxzdHJpa2UwXGNhcHMwXHYwXGZzMjRcdWxub25lXGNmMVxub3N1cGVyc3ViXGFuaW10ZXh0MFxzdHJpa2VkMFxocmVzMFxjaGhyZXMwIFxmaS03MjBcbGk2NDgwXGpjbGlzdHRhYlx0eDBcbGluNjQ4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyNTVcbGV2ZWxuZmNuMjU1XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzJcbGV2ZWxzdGFydGF0MQ0KXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMDt9e1xsZXZlbG51bWJlcnM7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGkwXHN0cmlrZTBcY2FwczBcdjBcZnMyNFx1bG5vbmVcY2YxXG5vc3VwZXJzdWJcYW5pbXRleHQwXHN0cmlrZWQwXGhyZXMwXGNoaHJlczAgXGZpLTcyMFxsaTcyMDBcamNsaXN0dGFiXHR4MFxsaW43MjAwIH17XGxpc3RuYW1lIDt9XGxpc3RpZDU2NjE4NjI4NX0NCntcbGlzdFxsaXN0dGVtcGxhdGVpZC0xNzU2MDM4ODQyXGxpc3RoeWJyaWR7XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtMTQxMzI5OTA4OFwnMDFcdS0zOTEzID87fXtcbGV2ZWxudW1iZXJzO31cZjNcZmJpYXMwXGhyZXMwXGNoaHJlczAgDQpcZmktMzYwXGxpNzIwXGxpbjcyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTk2Mzc4MjY3NlwnMDFvO317XGxldmVsbnVtYmVyczt9XGYyXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGkxNDQwXGxpbjE0NDAgfXtcbGlzdGxldmVsDQpcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDE5MjAzNjgzODBcJzAxXHUtMzkyOSA/O317XGxldmVsbnVtYmVyczt9XGYxMFxmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMjE2MFxsaW4yMTYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzDQpcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtMTUxMTIxOTY2XCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fVxmM1xmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMjg4MFxsaW4yODgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzDQpcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQxNjc5ODY1MjEyXCcwMW87fXtcbGV2ZWxudW1iZXJzO31cZjJcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTM2MDBcbGluMzYwMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjANClxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTMyNjMzODkxMFwnMDFcdS0zOTI5ID87fXtcbGV2ZWxudW1iZXJzO31cZjEwXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk0MzIwXGxpbjQzMjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MA0KXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC04OTA0ODE2MTJcJzAxXHUtMzkxMyA/O317XGxldmVsbnVtYmVyczt9XGYzXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk1MDQwXGxpbjUwNDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxDQpcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC03NDQ0NjY1NzJcJzAxbzt9e1xsZXZlbG51bWJlcnM7fVxmMlxmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNTc2MFxsaW41NzYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTANClxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQxOTM0OTQ3ODkwXCcwMVx1LTM5MjkgPzt9e1xsZXZlbG51bWJlcnM7fVxmMTBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTY0ODBcbGluNjQ4MCB9e1xsaXN0bmFtZSA7fVxsaXN0aWQ1OTExNTkyMjN9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkMTE4MDU2Nzg2OHtcbGlzdGxldmVsXGxldmVsbmZjMVxsZXZlbG5mY24xXGxldmVsamMwXGxldmVsamNuMA0KXGxldmVsZm9sbG93MlxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwZEFSVElDTEUgXCcwMCAtLSA7fXtcbGV2ZWxudW1iZXJzXCcwOTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxiMFxpMFxzdHJpa2UwXHNjYXBzMFxjYXBzMFx2MFxmMFxmczI0XHVsbm9uZVxleHBuZDBcZXhwbmR0dzBcY2YwXHVwMFxub3N1cGVyc3ViXGtlcm5pbmcwXGNoYXJzY2FsZXgxMDBcc3RyaWtlZDBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpMFxsaTM3ODBcbGluMzc4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsbGVnYWwNClxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDNcJzAwLlwnMDE7fXtcbGV2ZWxudW1iZXJzXCcwMVwnMDM7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGkwXHN0cmlrZTBcY2FwczBcdjBcZjBcZnMyNFx1bG5vbmVcZXhwbmQwXGV4cG5kdHcwXGNmMFx1cDBcbm9zdXBlcnN1YlxrZXJuaW5nMFxjaGFyc2NhbGV4MTAwXHN0cmlrZWQwXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaTcyMFxsaTBcbGluMCB9DQp7XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAzKFwnMDIpO317XGxldmVsbnVtYmVyc1wnMDI7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcYjBcaTBcc3RyaWtlMFxjYXBzMFx2MFxmMFxmczI0XHVsbm9uZVxleHBuZDBcZXhwbmR0dzBcY2YwXHVwMFxub3N1cGVyc3ViXGtlcm5pbmcwXGNoYXJzY2FsZXgxMDBcc3RyaWtlZDBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpMTQ0MFxsaTBcbGluMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsbGVnYWxcbGV2ZWxzcGFjZTANClxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDVcJzAwLlwnMDEuXCcwMzt9e1xsZXZlbG51bWJlcnNcJzAxXCcwM1wnMDU7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGkwXHN0cmlrZTBcY2FwczBcdjBcZjBcZnMyNFx1bG5vbmVcZXhwbmQwXGV4cG5kdHcwXGNmMFx1cDBcbm9zdXBlcnN1YlxrZXJuaW5nMFxjaGFyc2NhbGV4MTAwXHN0cmlrZWQwXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaTE0NDBcbGkwDQpcamNsaXN0dGFiXHR4MjQ0OFxsaW4wIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxsZWdhbFxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDdcJzAwLlwnMDEuXCcwMy5cJzA0O317XGxldmVsbnVtYmVyc1wnMDFcJzAzXCcwNVwnMDc7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcYjBcaTBcc3RyaWtlMFxjYXBzMFx2MFxmMFxmczI0XHVsbm9uZVxleHBuZDBcZXhwbmR0dzBcY2YwXHVwMFxub3N1cGVyc3ViXGtlcm5pbmcwXGNoYXJzY2FsZXgxMDBcc3RyaWtlZDBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpMjQ0OFxsaTBcamNsaXN0dGFiXHR4MzYwMFxsaW4wIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxsZWdhbA0KXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwN1wnMDAuXCcwMS5cJzAzLlwnMDU7fXtcbGV2ZWxudW1iZXJzXCcwMVwnMDNcJzA1XCcwNzt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaTBcc3RyaWtlMFxjYXBzMFx2MFxmMFxmczI0XHVsbm9uZVxleHBuZDBcZXhwbmR0dzBcY2YwXHVwMFxub3N1cGVyc3ViXGtlcm5pbmcwXGNoYXJzY2FsZXgxMDBcc3RyaWtlZDBcZmJpYXMwXGhyZXMwXGNoaHJlczAgDQpcZmkyNDQ4XGxpMFxqY2xpc3R0YWJcdHgzNjAwXGxpbjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDJcJzA2Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx2MFx1bG5vbmVcY2YyM1xmYmlhczBcaHJlczBcY2hocmVzMCANClxmaS03MjBcbGk2MzAwXGpjbGlzdHRhYlx0eDYzMDBcbGluNjMwMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMlwnMDcpO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHYwXHVsbm9uZVxjZjIzXGZiaWFzMFxocmVzMFxjaGhyZXMwIA0KXGZpLTcyMFxsaTcwMjBcamNsaXN0dGFiXHR4NzAyMFxsaW43MDIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAyXCcwOCk7fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdjBcdWxub25lXGNmMjNcZmJpYXMwXGhyZXMwXGNoaHJlczAgDQpcZmktNzIwXGxpNzc0MFxqY2xpc3R0YWJcdHg3NzQwXGxpbjc3NDAgfXtcbGlzdG5hbWUgO31cbGlzdGlkNjQwMzU0MTI4fXtcbGlzdFxsaXN0dGVtcGxhdGVpZDExNTI3MDIwNHtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO30NClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHNjYXBzMFxjYXBzXHVsbm9uZVxjZjIzXGhyZXMwXGNoaHJlczAgXGZpLTcyMFxsaTcyMFxqY2xpc3R0YWJcdHg3MjBcbGluNzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxsZWdhbFxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXCcwM1wnMDAuXCcwMTt9e1xsZXZlbG51bWJlcnNcJzAxXCcwMzt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxub25lXGNmMjNcaHJlczBcY2hocmVzMCBcZmktNzIwXGxpMTQ0MFxqY2xpc3R0YWJcdHgxNDQwXGxpbjE0NDAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXCcwMyhcJzAyKTt9e1xsZXZlbG51bWJlcnNcJzAyO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bG5vbmVcY2YyM1xocmVzMFxjaGhyZXMwIFxmaS03MjBcbGkyMTYwXGpjbGlzdHRhYlx0eDIxNjBcbGluMjE2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcJzAzKFwnMDMpO317XGxldmVsbnVtYmVyc1wnMDI7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsbm9uZVxjZjIzXGhyZXMwXGNoaHJlczAgXGZpLTcyMFxsaTI4ODBcamNsaXN0dGFiXHR4Mjg4MFxsaW4yODgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClwnMDMoXCcwNCk7fXtcbGV2ZWxudW1iZXJzXCcwMjt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxub25lXGNmMjNcaHJlczBcY2hocmVzMCBcZmktNzIwXGxpMzYwMFxqY2xpc3R0YWJcdHgzNjAwXGxpbjM2MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXCcwMlwnMDUuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsbm9uZVxjZjIzXGhyZXMwXGNoaHJlczAgXGZpLTcyMFxsaTQzMjBcamNsaXN0dGFiXHR4NDMyMFxsaW40MzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClwnMDJcJzA2Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bG5vbmVcY2YyM1xocmVzMFxjaGhyZXMwIFxmaS03MjBcbGk1MDQwXGpjbGlzdHRhYlx0eDUwNDBcbGluNTA0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcJzAyXCcwNyk7fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxub25lXGNmMjNcaHJlczBcY2hocmVzMCBcZmktNzIwXGxpNTc2MFxqY2xpc3R0YWJcdHg1NzYwXGxpbjU3NjAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXCcwMlwnMDgpO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsbm9uZVxjZjIzXGhyZXMwXGNoaHJlczAgXGZpLTcyMFxsaTY0ODBcamNsaXN0dGFiXHR4NjQ4MFxsaW42NDgwIH17XGxpc3RuYW1lIExlZ2FsIE51bWJlcmluZyAoMiBMZXZlbHMpO31cbGlzdGlkODUwOTUyMTA0fXtcbGlzdFxsaXN0dGVtcGxhdGVpZDExNjI4OTY3ODh7XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMA0KXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzJcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDlBcnRpY2xlIFwnMDA7fXtcbGV2ZWxudW1iZXJzXCcwOTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpMFxzY2FwczBcY2Fwc1xmMFxmczI0XHVsbm9uZVxocmVzMFxjaGhyZXMwIFxzMjU5XGZpMFxsaTBcamNsaXN0dGFiXHR4NzIwXGxpbjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMA0KXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsbGVnYWxcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAzXCcwMC5cJzAxO317XGxldmVsbnVtYmVyc1wnMDFcJzAzO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpMFxzY2FwczBcY2FwczBcZjBcZnMyNFx1bG5vbmVcaHJlczBcY2hocmVzMCBcczI2MVxmaTcyMFxsaTANClxqY2xpc3R0YWJcdHgxNDQwXGxpbjAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDMoXCcwMik7fXtcbGV2ZWxudW1iZXJzXCcwMjt9XHJ0bGNoXGZjczEgXGFiMFxhaTBcYWYwIFxsdHJjaFxmY3MwIA0KXGIwXGkwXHN0cmlrZTBcc2NhcHMwXGNhcHMwXHYwXGYwXHVsbm9uZVxleHBuZDBcZXhwbmR0dzBcY2YxXHVwMFxub3N1cGVyc3ViXGtlcm5pbmcwXGFuaW10ZXh0MFxzdHJpa2VkMFxub3Byb29mMFxzcHYwXGhyZXMwXGNoaHJlczAgXHMyNjNcZmkxNDQwXGxpMFxqY2xpc3R0YWJcdHgyMTYwXGxpbjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MQ0KXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMyhcJzAzKTt9e1xsZXZlbG51bWJlcnNcJzAyO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpMFxzY2FwczBcY2FwczBcZjBcZnMyNFx1bG5vbmVcaHJlczBcY2hocmVzMCBcczI2NVxmaTIxNjBcbGkwXGpjbGlzdHRhYlx0eDI4ODBcbGluMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMzXGxldmVsbmZjbjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MA0KXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAzKFwnMDQpO317XGxldmVsbnVtYmVyc1wnMDI7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGkwXHNjYXBzMFxjYXBzMFxmMFxmczI0XHVsbm9uZVxocmVzMFxjaGhyZXMwIFxzMjY3XGZpMjg4MFxsaTBcamNsaXN0dGFiXHR4MzYwMFxsaW4wIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjANClxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDJcJzA1Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpMFxzY2FwczBcY2FwczBcZjBcZnMyNFx1bG5vbmVcaHJlczBcY2hocmVzMCBcczI2OVxmaTM2MDBcbGkwXGpjbGlzdHRhYlx0eDQzMjBcbGluMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzANClxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAyXCcwNi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaTBcc2NhcHMwXGNhcHMwXGYwXGZzMjRcdWxub25lXGhyZXMwXGNoaHJlczAgXHMyNzFcZmk0MzIwXGxpMFxqY2xpc3R0YWJcdHg1MDQwXGxpbjAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240DQpcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMlwnMDcpO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGkwXHNjYXBzMFxjYXBzMFxmMFxmczI0XHVsbm9uZVxocmVzMFxjaGhyZXMwIFxzMjczXGZpNTA0MFxsaTBcamNsaXN0dGFiXHR4NTc2MFxsaW4wIH17XGxpc3RsZXZlbFxsZXZlbG5mYzINClxsZXZlbG5mY24yXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDJcJzA4KTt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpMFxzY2FwczBcY2FwczBcZjBcZnMyNFx1bG5vbmVcaHJlczBcY2hocmVzMCBcczI3NVxmaTU3NjBcbGkwXGpjbGlzdHRhYlx0eDY0ODBcbGluMCB9e1xsaXN0bmFtZSANCnp6bXBMZWdhbDJ8fExlZ2FsMnwyfDN8MXw0fDEwfDQ1fHwxfDEyfDR8fDF8MTJ8MHx8MXwxMnwxfHwxfDEyfDB8fDF8MTJ8MHx8MXwxMnwwfHwxfDEyfDB8fDF8MTJ8MHx8O31cbGlzdGlkMTEwMTE0NzUwOX17XGxpc3RcbGlzdHRlbXBsYXRlaWQ4NzIwNTU5NDBcbGlzdGh5YnJpZHtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwDQpcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTM2MDMyMTcyXCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fVxmM1xmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMTA4MFxsaW4xMDgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwDQp7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtNDU0MTQ3MTE4XCcwMW87fXtcbGV2ZWxudW1iZXJzO31cZjJcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTE4MDBcbGluMTgwMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkNDcwNTczMTkwXCcwMVx1LTM5MjkgPzt9e1xsZXZlbG51bWJlcnM7fVxmMTBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTI1MjBcbGluMjUyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkMjEzMzc1OTcxNlwnMDFcdS0zOTEzID87fXtcbGV2ZWxudW1iZXJzO31cZjNcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTMyNDBcbGluMzI0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkMTI4NzcwNDMxNlwnMDFvO317XGxldmVsbnVtYmVyczt9XGYyXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGkzOTYwXGxpbjM5NjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQxMTkxOTY5NjM2DQpcJzAxXHUtMzkyOSA/O317XGxldmVsbnVtYmVyczt9XGYxMFxmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNDY4MFxsaW40NjgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTU3MDc3NDY5NA0KXCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fVxmM1xmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNTQwMFxsaW41NDAwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTMyMDg1ODkyNg0KXCcwMW87fXtcbGV2ZWxudW1iZXJzO31cZjJcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTYxMjBcbGluNjEyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDEzNTEyMjk5NjINClwnMDFcdS0zOTI5ID87fXtcbGV2ZWxudW1iZXJzO31cZjEwXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk2ODQwXGxpbjY4NDAgfXtcbGlzdG5hbWUgO31cbGlzdGlkMTE0NDgwOTQ1Mn17XGxpc3RcbGlzdHRlbXBsYXRlaWQtMjEzMjUyMDMyMntcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzJcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDANCntcbGV2ZWx0ZXh0XCcwOUFSVElDTEUgXCcwMDt9e1xsZXZlbG51bWJlcnNcJzA5O31ccnRsY2hcZmNzMSBcYWkwXGFmMCBcbHRyY2hcZmNzMCBcYlxpMFxzdHJpa2UwXHNjYXBzMFxjYXBzXHYwXGY0NlxmczI0XHVsbm9uZVxleHBuZDBcZXhwbmR0dzBcY2YwXHVwMFxub3N1cGVyc3ViXGtlcm5pbmcwXGFuaW10ZXh0MFxzdHJpa2VkMFxub3Byb29mMFxzcHYwXGhyZXMwXGNoaHJlczAgXGZpMFxsaTQ1MFxqY2xpc3R0YWJcdHg0NTBcbGluNDUwIH0NCntcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbGxlZ2FsXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwM1wnMDAuXCcwMTt9e1xsZXZlbG51bWJlcnNcJzAxXCcwMzt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxiMFxpMFxzdHJpa2UwXGNhcHMwXHYwXGY0M1xmczI0XHVsbm9uZVxjZjFcbm9zdXBlcnN1YlxhbmltdGV4dDBcc3RyaWtlZDBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpNzIwXGxpLTM2MFxqY2xpc3R0YWJcdHgwXGxpbi0zNjAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXCcwMyhcJzAyKTt9e1xsZXZlbG51bWJlcnNcJzAyO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpMFxzdHJpa2UwXGNhcHMwXHYwXGZzMjRcdWxub25lXGNmMVxub3N1cGVyc3ViXGFuaW10ZXh0MFxzdHJpa2VkMFxocmVzMFxjaGhyZXMwIFxmaTE0NDBcbGkwXGpjbGlzdHRhYlx0eDBcbGluMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxDQpcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAzKFwnMDMpO317XGxldmVsbnVtYmVyc1wnMDI7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGkwXHN0cmlrZTBcY2FwczBcdjBcZnMyNFx1bG5vbmVcY2YxXG5vc3VwZXJzdWJcYW5pbXRleHQwXHN0cmlrZWQwXGhyZXMwXGNoaHJlczAgXGZpMTQ0MFxsaTcyMFxqY2xpc3R0YWJcdHgwXGxpbjcyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMzXGxldmVsbmZjbjMNClxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAzKFwnMDQpO317XGxldmVsbnVtYmVyc1wnMDI7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGkwXHN0cmlrZTBcY2FwczBcdjBcZnMyNFx1bG5vbmVcY2YxXG5vc3VwZXJzdWJcYW5pbXRleHQwXHN0cmlrZWQwXGhyZXMwXGNoaHJlczAgXGZpMTQ0MFxsaTE0NDANClxqY2xpc3R0YWJcdHgwXGxpbjE0NDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjU1XGxldmVsbmZjbjI1NVxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cyXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAwO317XGxldmVsbnVtYmVyczt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxiMFxpMFxzdHJpa2UwXGNhcHMwXHYwXGZzMjRcdWxub25lXGNmMVxub3N1cGVyc3ViXGFuaW10ZXh0MFxzdHJpa2VkMFxocmVzMFxjaGhyZXMwIFxmaS0xNDQwXGxpNTc2MFxqY2xpc3R0YWJcdHgwXGxpbjU3NjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjU1XGxldmVsbmZjbjI1NVxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cyXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClwnMDA7fXtcbGV2ZWxudW1iZXJzO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpMFxzdHJpa2UwXGNhcHMwXHYwXGZzMjRcdWxub25lXGNmMVxub3N1cGVyc3ViXGFuaW10ZXh0MFxzdHJpa2VkMFxocmVzMFxjaGhyZXMwIFxmaS03MjBcbGk1NzYwXGpjbGlzdHRhYlx0eDBcbGluNTc2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyNTVcbGV2ZWxuZmNuMjU1XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzJcbGV2ZWxzdGFydGF0MQ0KXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMDt9e1xsZXZlbG51bWJlcnM7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGkwXHN0cmlrZTBcY2FwczBcdjBcZnMyNFx1bG5vbmVcY2YxXG5vc3VwZXJzdWJcYW5pbXRleHQwXHN0cmlrZWQwXGhyZXMwXGNoaHJlczAgXGZpLTcyMFxsaTY0ODBcamNsaXN0dGFiXHR4MFxsaW42NDgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzI1NVxsZXZlbG5mY24yNTVcbGV2ZWxqYzANClxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cyXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAwO317XGxldmVsbnVtYmVyczt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaTBcc3RyaWtlMFxjYXBzMFx2MFxmczI0XHVsbm9uZVxjZjFcbm9zdXBlcnN1YlxhbmltdGV4dDBcc3RyaWtlZDBcaHJlczBcY2hocmVzMCBcZmktNzIwXGxpNzIwMFxqY2xpc3R0YWJcdHgwXGxpbjcyMDAgfQ0Ke1xsaXN0bmFtZSA7fVxsaXN0aWQxMTcxMDY2ODEwfXtcbGlzdFxsaXN0dGVtcGxhdGVpZDE5MzcwMTU4OTZcbGlzdGh5YnJpZHtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0xMTMyNjk1ODI0XCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fQ0KXGYzXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk3MjBcbGluNzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTkzNDk0ODI0MFwnMDFvO317XGxldmVsbnVtYmVyczt9XGYyXGZiaWFzMFxocmVzMFxjaGhyZXMwIA0KXGZpLTM2MFxsaTE0NDBcbGluMTQ0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDg5NTIzMDU2XCcwMVx1LTM5MjkgPzt9e1xsZXZlbG51bWJlcnM7fVxmMTBcZmJpYXMwXGhyZXMwXGNoaHJlczAgDQpcZmktMzYwXGxpMjE2MFxsaW4yMTYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkOTc4MjA1OTY2XCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fVxmM1xmYmlhczBcaHJlczBcY2hocmVzMCANClxmaS0zNjBcbGkyODgwXGxpbjI4ODAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtMTY1ODI3NjUzOFwnMDFvO317XGxldmVsbnVtYmVyczt9XGYyXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGkzNjAwXGxpbjM2MDAgfQ0Ke1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0xMzU5NzE2NTk4XCcwMVx1LTM5MjkgPzt9e1xsZXZlbG51bWJlcnM7fVxmMTBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTQzMjBcbGluNDMyMCB9e1xsaXN0bGV2ZWwNClxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTQ3NzczODE1MlwnMDFcdS0zOTEzID87fXtcbGV2ZWxudW1iZXJzO31cZjNcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTUwNDBcbGluNTA0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyMw0KXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTc3MjUxMjc2OFwnMDFvO317XGxldmVsbnVtYmVyczt9XGYyXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk1NzYwXGxpbjU3NjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzANClxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0yMDEyOTY4Mjc0XCcwMVx1LTM5MjkgPzt9e1xsZXZlbG51bWJlcnM7fVxmMTBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTY0ODBcbGluNjQ4MCB9e1xsaXN0bmFtZSA7fVxsaXN0aWQxMTg0ODk4MTIxfQ0Ke1xsaXN0XGxpc3R0ZW1wbGF0ZWlkLTIxNDY2NDcwNTJcbGlzdGh5YnJpZHtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0xNDMyMzI5MzA4XCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fVxmM1xmYmlhczBcaHJlczBcY2hocmVzMCANClxmaS0zNjBcbGk3MjBcbGluNzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMzgzMzkwMDAwXCcwMW87fXtcbGV2ZWxudW1iZXJzO31cZjJcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTE0NDBcbGluMTQ0MCB9DQp7XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTk4MjkwNTM3MFwnMDFcdS0zOTI5ID87fXtcbGV2ZWxudW1iZXJzO31cZjEwXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGkyMTYwXGxpbjIxNjAgfXtcbGlzdGxldmVsDQpcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDE5MjE5MTIyMDBcJzAxXHUtMzkxMyA/O317XGxldmVsbnVtYmVyczt9XGYzXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGkyODgwXGxpbjI4ODAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjMNClxsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDE5MjQyOTk5MDhcJzAxbzt9e1xsZXZlbG51bWJlcnM7fVxmMlxmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMzYwMFxsaW4zNjAwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwDQpcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQxMDgwMTgxMDIyXCcwMVx1LTM5MjkgPzt9e1xsZXZlbG51bWJlcnM7fVxmMTBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTQzMjBcbGluNDMyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjANClxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTc2MTQ5MTY0MFwnMDFcdS0zOTEzID87fXtcbGV2ZWxudW1iZXJzO31cZjNcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTUwNDBcbGluNTA0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwDQpcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTk3MDU1OTE4XCcwMW87fXtcbGV2ZWxudW1iZXJzO31cZjJcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTU3NjBcbGluNTc2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlDQpcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNTMzMjQ0ODY0XCcwMVx1LTM5MjkgPzt9e1xsZXZlbG51bWJlcnM7fVxmMTBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTY0ODBcbGluNjQ4MCB9e1xsaXN0bmFtZSA7fVxsaXN0aWQxMjMxMjM2MzkzfXtcbGlzdFxsaXN0dGVtcGxhdGVpZC02Mzk2MjExNjJcbGlzdGh5YnJpZHtcbGlzdGxldmVsXGxldmVsbmZjM1xsZXZlbG5mY24zDQpcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0xODY5MzQ0MDMwXCcwMlwnMDAuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTcyMFxsaW43MjAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwDQpcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0zNTA0NjUxNTZcJzAyXCcwMS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMTQ0MFxsaW4xNDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjINClxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ5MDc3Mzg3MDZcJzAyXCcwMi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMTgwXGxpMjE2MFxsaW4yMTYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwDQpcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ0NTE4MjkwMzJcJzAyXCcwMy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMjg4MFxsaW4yODgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDENClxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ0OTU0NjkyMzJcJzAyXCcwNC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMzYwMFxsaW4zNjAwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTANClxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtMjk1Mjg4MTQ0XCcwMlwnMDUuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGhyZXMwXGNoaHJlczAgXGZpLTE4MFxsaTQzMjBcbGluNDMyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MA0Ke1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTEwMTMxMzUzNzRcJzAyXCcwNi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNTA0MFxsaW41MDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQ2Njk4MzgwNjRcJzAyXCcwNy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNTc2MFxsaW41NzYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQtMTg2NzEwMzQwMlwnMDJcJzA4Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxocmVzMFxjaGhyZXMwIFxmaS0xODBcbGk2NDgwXGxpbjY0ODAgfXtcbGlzdG5hbWUgO31cbGlzdGlkMTIzMTUwMDQyMH17XGxpc3RcbGlzdHRlbXBsYXRlaWQ3MzYxNDU0OTB7XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwDQpcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmYmlhczBcaHJlczBcY2hocmVzMCBcczcyXGZpLTcyMFxsaTEwODBcamNsaXN0dGFiXHR4MTA4MFxsaW4xMDgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDENClxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDJcJzAxLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmYmlhczBcaHJlczBcY2hocmVzMCBcczcyXGZpLTcyMFxsaTE0NDBcamNsaXN0dGFiXHR4MTQ0MFxsaW4xNDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTANClxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDJcJzAyLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmYmlhczBcaHJlczBcY2hocmVzMCBcZmktNzIwXGxpMjE2MFxqY2xpc3R0YWJcdHgyMTYwXGxpbjIxNjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjU1XGxldmVsbmZjbjI1NVxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cyXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwDQp7XGxldmVsdGV4dFwnMDA7fXtcbGV2ZWxudW1iZXJzO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmYmlhczBcaHJlczBcY2hocmVzMCBcZmkwXGxpMFxsaW4wIH17XGxpc3RsZXZlbFxsZXZlbG5mYzI1NVxsZXZlbG5mY24yNTVcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MlxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMDt9e1xsZXZlbG51bWJlcnM7fVxydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpMFxsaTBcbGluMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyNTVcbGV2ZWxuZmNuMjU1XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzJcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDA7fXtcbGV2ZWxudW1iZXJzO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmYmlhczBcaHJlczBcY2hocmVzMCANClxmaTBcbGkwXGxpbjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjU1XGxldmVsbmZjbjI1NVxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cyXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAwO317XGxldmVsbnVtYmVyczt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpMFxsaTBcbGluMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyNTUNClxsZXZlbG5mY24yNTVcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MlxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMDt9e1xsZXZlbG51bWJlcnM7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaTBcbGkwXGxpbjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjU1XGxldmVsbmZjbjI1NVxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cyDQpcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDA7fXtcbGV2ZWxudW1iZXJzO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmYmlhczBcaHJlczBcY2hocmVzMCBcZmkwXGxpMFxsaW4wIH17XGxpc3RuYW1lIDt9XGxpc3RpZDE1MDY5MzcxMzN9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkLTYzOTYyMTE2MlxsaXN0aHlicmlke1xsaXN0bGV2ZWxcbGV2ZWxuZmMzXGxldmVsbmZjbjNcbGV2ZWxqYzANClxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTM5ODAzOTE0NFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk3MjBcbGluNzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjANClxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtMTQwMzM2MTM3NlwnMDJcJzAxLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGkxNDQwXGxpbjE0NDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzANClxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC01NzQ1NzU0ODJcJzAyXCcwMi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMTgwXGxpMjE2MFxsaW4yMTYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDENClxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtODQxMzUwMDRcJzAyXCcwMy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMjg4MFxsaW4yODgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTANClxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtMTQzMjAyNzYzNFwnMDJcJzA0Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGkzNjAwXGxpbjM2MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDANCntcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDQwMDk1NTkwMlwnMDJcJzA1Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxocmVzMFxjaGhyZXMwIFxmaS0xODBcbGk0MzIwXGxpbjQzMjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZC0xNjczNzc5NTg2XCcwMlwnMDYuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTUwNDBcbGluNTA0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkLTE5ODE0NDU4MFwnMDJcJzA3Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk1NzYwXGxpbjU3NjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZC02NzY4NTM3OTBcJzAyXCcwOC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMTgwXGxpNjQ4MFxsaW42NDgwIH17XGxpc3RuYW1lIDt9XGxpc3RpZDE1OTA1MDA5ODN9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkLTYwNzEwODI2OFxsaXN0aHlicmlke1xsaXN0bGV2ZWxcbGV2ZWxuZmMzXGxldmVsbmZjbjNcbGV2ZWxqYzBcbGV2ZWxqY24wDQpcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTk4MDI4MDkxOFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMTQ0MFxsaTIxNjBcamNsaXN0dGFiXHR4MjE2MFxsaW4yMTYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMA0KXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTMxMDIyNjE5OFwnMDJcJzAxLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGkxODAwXGpjbGlzdHRhYlx0eDE4MDBcbGluMTgwMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyDQpcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDE2OTAwMjUzMFwnMDJcJzAyLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxocmVzMFxjaGhyZXMwIFxmaS0xODBcbGkyNTIwXGpjbGlzdHRhYlx0eDI1MjBcbGluMjUyMCB9DQp7XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDIwMzQzOTUyNjRcJzAyXCcwMy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMzI0MA0KXGpjbGlzdHRhYlx0eDMyNDBcbGluMzI0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQxNjIzMTE3MzY4XCcwMlwnMDQuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGhyZXMwXGNoaHJlczAgDQpcZmktMzYwXGxpMzk2MFxqY2xpc3R0YWJcdHgzOTYwXGxpbjM5NjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTkyNzQwOTc3NFwnMDJcJzA1Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGhyZXMwXGNoaHJlczAgXGZpLTE4MFxsaTQ2ODBcamNsaXN0dGFiXHR4NDY4MFxsaW40NjgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDEyNjA0MTYxNTJcJzAyXCcwNi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk1NDAwXGpjbGlzdHRhYlx0eDU0MDBcbGluNTQwMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQxODk1MDkxOTEwXCcwMlwnMDcuO317XGxldmVsbnVtYmVycw0KXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNjEyMFxqY2xpc3R0YWJcdHg2MTIwXGxpbjYxMjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkOTczODkzMjMwDQpcJzAyXCcwOC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMTgwXGxpNjg0MFxqY2xpc3R0YWJcdHg2ODQwXGxpbjY4NDAgfXtcbGlzdG5hbWUgO31cbGlzdGlkMTYyOTU4NDAyOH17XGxpc3RcbGlzdHRlbXBsYXRlaWQtNjM5NjIxMTYyXGxpc3RoeWJyaWR7XGxpc3RsZXZlbFxsZXZlbG5mYzNcbGV2ZWxuZmNuM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwDQpcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtMTc5Njk3NTEyNlwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk3MjBcbGluNzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDENClxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQxNjEwMDEzMjAyXCcwMlwnMDEuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTE0NDBcbGluMTQ0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwDQpcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTE5Nzk4MTYxNzJcJzAyXCcwMi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMTgwXGxpMjE2MFxsaW4yMTYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwDQp7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtNzQyNjg4NzZcJzAyXCcwMy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMjg4MFxsaW4yODgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQtMTMzNjY2MjU1MlwnMDJcJzA0Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGkzNjAwXGxpbjM2MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZC0xNzkzMTg1OTY0XCcwMlwnMDUuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGhyZXMwXGNoaHJlczAgXGZpLTE4MFxsaTQzMjBcbGluNDMyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkMjAyMTU1MjE0XCcwMlwnMDYuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTUwNDBcbGluNTA0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkLTEwNTg4MjU0NFwnMDJcJzA3Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk1NzYwXGxpbjU3NjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZC0xNDg0NDM2NDJcJzAyXCcwOC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMTgwXGxpNjQ4MFxsaW42NDgwIH17XGxpc3RuYW1lIDt9XGxpc3RpZDE2NTAyODYzMTd9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkLTI0Mzc4Nzk3MFxsaXN0aHlicmlke1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wDQpcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNTgzNTczNTcyXCcwMlwnMDAuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTcyMFxsaW43MjAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzANClxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC01MDIyNTY2MjZcJzAyXCcwMS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFiMFxhZjAgXGx0cmNoXGZjczAgXGIwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTE0NDBcbGluMTQ0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MA0KXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0yMDk1NDQ2MjA4XCcwMlwnMDIuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGhyZXMwXGNoaHJlczAgXGZpLTE4MFxsaTIxNjBcbGluMjE2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MA0KXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDIxMzcyOTg5NTZcJzAyXCcwMy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMjg4MFxsaW4yODgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwDQpcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMjAzMDYwNjU3NlwnMDJcJzA0Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGkzNjAwXGxpbjM2MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbGZvbGxvdzANClxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtMTI1NjI2NTI3MlwnMDJcJzA1Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxocmVzMFxjaGhyZXMwIFxmaS0xODBcbGk0MzIwXGxpbjQzMjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzANClxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQxNTU5MTM4NzQ0XCcwMlwnMDYuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTUwNDBcbGluNTA0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MA0KXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0xMzEwMTU3NzMyXCcwMlwnMDcuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTU3NjBcbGluNTc2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MA0KXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC01OTQ3NTgwMlwnMDJcJzA4Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxocmVzMFxjaGhyZXMwIFxmaS0xODBcbGk2NDgwXGxpbjY0ODAgfXtcbGlzdG5hbWUgO31cbGlzdGlkMTc4ODIzMDA5OH17XGxpc3RcbGlzdHRlbXBsYXRlaWQxODQyNzQ5NDQ4DQpcbGlzdGh5YnJpZHtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0xOTA5MTQwOTc2XCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fVxmM1xmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNzIwXGxpbjcyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyMw0KXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkOTg4ODQ0NDcyXCcwMW87fXtcbGV2ZWxudW1iZXJzO31cZjJcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTE0NDBcbGluMTQ0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMA0KXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTM4Mzc3Mzc3OFwnMDFcdS0zOTI5ID87fXtcbGV2ZWxudW1iZXJzO31cZjEwXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGkyMTYwXGxpbjIxNjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wDQpcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDEyMTMzODU2NjhcJzAxXHUtMzkxMyA/O317XGxldmVsbnVtYmVyczt9XGYzXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGkyODgwXGxpbjI4ODAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MA0KXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0xODIyNDA0NTAyXCcwMW87fXtcbGV2ZWxudW1iZXJzO31cZjJcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTM2MDBcbGluMzYwMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlDQpcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTQ0NDc0MDA3NlwnMDFcdS0zOTI5ID87fXtcbGV2ZWxudW1iZXJzO31cZjEwXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk0MzIwXGxpbjQzMjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMA0KXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDI0NzI1MTE0OFwnMDFcdS0zOTEzID87fXtcbGV2ZWxudW1iZXJzO31cZjNcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTUwNDBcbGluNTA0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MA0Ke1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTQ3ODI4MTAxOFwnMDFvO317XGxldmVsbnVtYmVyczt9XGYyXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk1NzYwXGxpbjU3NjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZC01ODE1MTE3NjJcJzAxXHUtMzkyOSA/O317XGxldmVsbnVtYmVyczt9XGYxMFxmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpNjQ4MFxsaW42NDgwIH17XGxpc3RuYW1lIDt9XGxpc3RpZDE4ODg0NDg0Mzd9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkLTIxMzI1MjAzMjJ7XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cyXGxldmVsc3RhcnRhdDENClxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDlBUlRJQ0xFIFwnMDA7fXtcbGV2ZWxudW1iZXJzXCcwOTt9XHJ0bGNoXGZjczEgXGFpMFxhZjAgXGx0cmNoXGZjczAgXGJcaTBcc3RyaWtlMFxzY2FwczBcY2Fwc1x2MFxmNDZcZnMyNFx1bG5vbmVcZXhwbmQwXGV4cG5kdHcwXGNmMFx1cDBcbm9zdXBlcnN1YlxrZXJuaW5nMFxhbmltdGV4dDBcc3RyaWtlZDBcbm9wcm9vZjBcc3B2MFxocmVzMFxjaGhyZXMwIFxmaTBcbGk0NTANClxqY2xpc3R0YWJcdHg0NTBcbGluNDUwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxsZWdhbFxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDNcJzAwLlwnMDE7fXtcbGV2ZWxudW1iZXJzXCcwMVwnMDM7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcYjBcaTBcc3RyaWtlMFxjYXBzMFx2MFxmNDNcZnMyNFx1bG5vbmVcY2YxXG5vc3VwZXJzdWJcYW5pbXRleHQwXHN0cmlrZWQwXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaTcyMFxsaS0zNjBcamNsaXN0dGFiXHR4MFxsaW4tMzYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClwnMDMoXCcwMik7fXtcbGV2ZWxudW1iZXJzXCcwMjt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaTBcc3RyaWtlMFxjYXBzMFx2MFxmczI0XHVsbm9uZVxjZjFcbm9zdXBlcnN1YlxhbmltdGV4dDBcc3RyaWtlZDBcaHJlczBcY2hocmVzMCBcZmkxNDQwXGxpMFxqY2xpc3R0YWJcdHgwXGxpbjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MQ0KXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMyhcJzAzKTt9e1xsZXZlbG51bWJlcnNcJzAyO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpMFxzdHJpa2UwXGNhcHMwXHYwXGZzMjRcdWxub25lXGNmMVxub3N1cGVyc3ViXGFuaW10ZXh0MFxzdHJpa2VkMFxocmVzMFxjaGhyZXMwIFxmaTE0NDBcbGk3MjBcamNsaXN0dGFiXHR4MFxsaW43MjAgfXtcbGlzdGxldmVsXGxldmVsbmZjM1xsZXZlbG5mY24zDQpcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMyhcJzA0KTt9e1xsZXZlbG51bWJlcnNcJzAyO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpMFxzdHJpa2UwXGNhcHMwXHYwXGZzMjRcdWxub25lXGNmMVxub3N1cGVyc3ViXGFuaW10ZXh0MFxzdHJpa2VkMFxocmVzMFxjaGhyZXMwIFxmaTE0NDBcbGkxNDQwDQpcamNsaXN0dGFiXHR4MFxsaW4xNDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzI1NVxsZXZlbG5mY24yNTVcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MlxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMDt9e1xsZXZlbG51bWJlcnM7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcYjBcaTBcc3RyaWtlMFxjYXBzMFx2MFxmczI0XHVsbm9uZVxjZjFcbm9zdXBlcnN1YlxhbmltdGV4dDBcc3RyaWtlZDBcaHJlczBcY2hocmVzMCBcZmktMTQ0MFxsaTU3NjBcamNsaXN0dGFiXHR4MFxsaW41NzYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzI1NVxsZXZlbG5mY24yNTVcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MlxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcJzAwO317XGxldmVsbnVtYmVyczt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaTBcc3RyaWtlMFxjYXBzMFx2MFxmczI0XHVsbm9uZVxjZjFcbm9zdXBlcnN1YlxhbmltdGV4dDBcc3RyaWtlZDBcaHJlczBcY2hocmVzMCBcZmktNzIwXGxpNTc2MFxqY2xpc3R0YWJcdHgwXGxpbjU3NjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjU1XGxldmVsbmZjbjI1NVxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cyXGxldmVsc3RhcnRhdDENClxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDA7fXtcbGV2ZWxudW1iZXJzO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpMFxzdHJpa2UwXGNhcHMwXHYwXGZzMjRcdWxub25lXGNmMVxub3N1cGVyc3ViXGFuaW10ZXh0MFxzdHJpa2VkMFxocmVzMFxjaGhyZXMwIFxmaS03MjBcbGk2NDgwXGpjbGlzdHRhYlx0eDBcbGluNjQ4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyNTVcbGV2ZWxuZmNuMjU1XGxldmVsamMwDQpcbGV2ZWxqY24wXGxldmVsZm9sbG93MlxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMDt9e1xsZXZlbG51bWJlcnM7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGkwXHN0cmlrZTBcY2FwczBcdjBcZnMyNFx1bG5vbmVcY2YxXG5vc3VwZXJzdWJcYW5pbXRleHQwXHN0cmlrZWQwXGhyZXMwXGNoaHJlczAgXGZpLTcyMFxsaTcyMDBcamNsaXN0dGFiXHR4MFxsaW43MjAwIH0NCntcbGlzdG5hbWUgO31cbGlzdGlkMTk2NTU3NDM4OX17XGxpc3RcbGlzdHRlbXBsYXRlaWQzOTM0MDk5MTR7XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cyXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzA5QVJUSUNMRSBcJzAwO317XGxldmVsbnVtYmVyc1wnMDk7fVxydGxjaFxmY3MxIFxhaTBcYWYwIFxsdHJjaFxmY3MwIA0KXGJcaTBcc3RyaWtlMFxzY2FwczBcY2Fwc1x2MFxmNDZcZnMyNFx1bG5vbmVcZXhwbmQwXGV4cG5kdHcwXGNmMFx1cDBcbm9zdXBlcnN1YlxrZXJuaW5nMFxhbmltdGV4dDBcc3RyaWtlZDBcbm9wcm9vZjBcc3B2MFxocmVzMFxjaGhyZXMwIFxmaTBcbGk0NTBcamNsaXN0dGFiXHR4NDUwXGxpbjQ1MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxDQpcbGV2ZWxsZWdhbFxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDNcJzAwLlwnMDE7fXtcbGV2ZWxudW1iZXJzXCcwMVwnMDM7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGkwXHN0cmlrZTBcY2FwczBcdjBcZjBcZnMyNFx1bG5vbmVcY2YxXG5vc3VwZXJzdWJcYW5pbXRleHQwXHN0cmlrZWQwXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaTcyMFxsaS0zNjBcamNsaXN0dGFiXHR4MFxsaW4tMzYwIH0NCntcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDMoXCcwMik7fXtcbGV2ZWxudW1iZXJzXCcwMjt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxiMFxpMFxzdHJpa2UwXGNhcHMwXHYwXGZzMjRcdWxub25lXGNmMVxub3N1cGVyc3ViXGFuaW10ZXh0MFxzdHJpa2VkMFxocmVzMFxjaGhyZXMwIFxmaTE0NDBcbGkwXGpjbGlzdHRhYlx0eDBcbGluMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcJzAzKFwnMDMpO317XGxldmVsbnVtYmVyc1wnMDI7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGkwXHN0cmlrZTBcY2FwczBcdjBcZnMyNFx1bG5vbmVcY2YxXG5vc3VwZXJzdWJcYW5pbXRleHQwXHN0cmlrZWQwXGhyZXMwXGNoaHJlczAgXGZpMTQ0MFxsaTcyMFxqY2xpc3R0YWJcdHgwXGxpbjcyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMzXGxldmVsbmZjbjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MA0KXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAzKFwnMDQpO317XGxldmVsbnVtYmVyc1wnMDI7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGkwXHN0cmlrZTBcY2FwczBcdjBcZnMyNFx1bG5vbmVcY2YxXG5vc3VwZXJzdWJcYW5pbXRleHQwXHN0cmlrZWQwXGhyZXMwXGNoaHJlczAgXGZpMTQ0MFxsaTE0NDBcamNsaXN0dGFiXHR4MFxsaW4xNDQwIH17XGxpc3RsZXZlbA0KXGxldmVsbmZjMjU1XGxldmVsbmZjbjI1NVxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cyXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAwO317XGxldmVsbnVtYmVyczt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaTBcc3RyaWtlMFxjYXBzMFx2MFxmczI0XHVsbm9uZVxjZjFcbm9zdXBlcnN1YlxhbmltdGV4dDBcc3RyaWtlZDBcaHJlczBcY2hocmVzMCANClxmaS0xNDQwXGxpNTc2MFxqY2xpc3R0YWJcdHgwXGxpbjU3NjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjU1XGxldmVsbmZjbjI1NVxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cyXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAwO317XGxldmVsbnVtYmVyczt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxiMFxpMFxzdHJpa2UwXGNhcHMwXHYwXGZzMjRcdWxub25lXGNmMVxub3N1cGVyc3ViXGFuaW10ZXh0MFxzdHJpa2VkMFxocmVzMFxjaGhyZXMwIFxmaS03MjBcbGk1NzYwXGpjbGlzdHRhYlx0eDBcbGluNTc2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyNTVcbGV2ZWxuZmNuMjU1XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzJcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXCcwMDt9e1xsZXZlbG51bWJlcnM7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGkwXHN0cmlrZTBcY2FwczBcdjBcZnMyNFx1bG5vbmVcY2YxXG5vc3VwZXJzdWJcYW5pbXRleHQwXHN0cmlrZWQwXGhyZXMwXGNoaHJlczAgXGZpLTcyMFxsaTY0ODBcamNsaXN0dGFiXHR4MFxsaW42NDgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzI1NVxsZXZlbG5mY24yNTVcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MlxsZXZlbHN0YXJ0YXQxDQpcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAwO317XGxldmVsbnVtYmVyczt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaTBcc3RyaWtlMFxjYXBzMFx2MFxmczI0XHVsbm9uZVxjZjFcbm9zdXBlcnN1YlxhbmltdGV4dDBcc3RyaWtlZDBcaHJlczBcY2hocmVzMCBcZmktNzIwXGxpNzIwMFxqY2xpc3R0YWJcdHgwXGxpbjcyMDAgfXtcbGlzdG5hbWUgDQooVW5uYW1lZCBOdW1iZXJpbmcgU2NoZW1lKTt9XGxpc3RpZDIwMjM1MDUyNzh9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkNjE0MzQ4MjE0XGxpc3RoeWJyaWR7XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MFxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtOTA1MDM4NzQ4DQpcJzAxXHUtMzkxMyA/O317XGxldmVsbnVtYmVyczt9XGxvY2hcYWYzXGhpY2hcYWYzXGRiY2hcYWYwXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk3MjBcbGluNzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQxODY4MzQ1OTAyXCcwMW87fXtcbGV2ZWxudW1iZXJzO31cZjJcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTE0NDBcbGluMTQ0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDM5ODcyNTA2MA0KXCcwMVx1LTM5MjkgPzt9e1xsZXZlbG51bWJlcnM7fVxmMTBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTIxNjBcbGluMjE2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDk5MTIxNjE1Mg0KXCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fVxmM1xmYmlhczBcaHJlczBcY2hocmVzMCBcZmktMzYwXGxpMjg4MFxsaW4yODgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTIwMTA3MzQ5NDYNClwnMDFvO317XGxldmVsbnVtYmVyczt9XGYyXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGkzNjAwXGxpbjM2MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtMjAzMzMxOTI1MA0KXCcwMVx1LTM5MjkgPzt9e1xsZXZlbG51bWJlcnM7fVxmMTBcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTQzMjBcbGluNDMyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDEyMzc5ODI2NjANClwnMDFcdS0zOTEzID87fXtcbGV2ZWxudW1iZXJzO31cZjNcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTUwNDBcbGluNTA0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY2OTc3OTEyOFwnMDFvO317XGxldmVsbnVtYmVycw0KO31cZjJcZmJpYXMwXGhyZXMwXGNoaHJlczAgXGZpLTM2MFxsaTU3NjBcbGluNTc2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDIwMjM4OTkwMDZcJzAxXHUtMzkyOSA/O317XGxldmVsbnVtYmVyczt9DQpcZjEwXGZiaWFzMFxocmVzMFxjaGhyZXMwIFxmaS0zNjBcbGk2NDgwXGxpbjY0ODAgfXtcbGlzdG5hbWUgO31cbGlzdGlkMjExMjM1ODYyNX19e1wqXGxpc3RvdmVycmlkZXRhYmxle1xsaXN0b3ZlcnJpZGVcbGlzdGlkNjEwNTY5M1xsaXN0b3ZlcnJpZGVjb3VudDBcbHMxfXtcbGlzdG92ZXJyaWRlXGxpc3RpZDE1MDY5MzcxMzNcbGlzdG92ZXJyaWRlY291bnQwXGxzMn17XGxpc3RvdmVycmlkZVxsaXN0aWQzMjMzMTU4NTUNClxsaXN0b3ZlcnJpZGVjb3VudDBcbHMzfXtcbGlzdG92ZXJyaWRlXGxpc3RpZC0xMTlcbGlzdG92ZXJyaWRlY291bnQwXGxzNH17XGxpc3RvdmVycmlkZVxsaXN0aWQyNDUyNzEwOFxsaXN0b3ZlcnJpZGVjb3VudDBcbHM1fXtcbGlzdG92ZXJyaWRlXGxpc3RpZDI0ODk3MjUzN1xsaXN0b3ZlcnJpZGVjb3VudDBcbHM2fXtcbGlzdG92ZXJyaWRlXGxpc3RpZC0xMjVcbGlzdG92ZXJyaWRlY291bnQwXGxzN30NCntcbGlzdG92ZXJyaWRlXGxpc3RpZDExMDExNDc1MDlcbGlzdG92ZXJyaWRlY291bnQwXGxzOH17XGxpc3RvdmVycmlkZVxsaXN0aWQtNVxsaXN0b3ZlcnJpZGVjb3VudDBcbHM5fXtcbGlzdG92ZXJyaWRlXGxpc3RpZDQxOTY0NTM3MVxsaXN0b3ZlcnJpZGVjb3VudDBcbHMxMH17XGxpc3RvdmVycmlkZVxsaXN0aWQxNzg4MjMwMDk4XGxpc3RvdmVycmlkZWNvdW50MFxsczExfXtcbGlzdG92ZXJyaWRlXGxpc3RpZDIxMTIzNTg2MjUNClxsaXN0b3ZlcnJpZGVjb3VudDBcbHMxMn17XGxpc3RvdmVycmlkZVxsaXN0aWQ4NTA5NTIxMDRcbGlzdG92ZXJyaWRlY291bnQwXGxzMTN9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkMjAyMzUwNTI3OFxsaXN0b3ZlcnJpZGVjb3VudDBcbHMxNH17XGxpc3RvdmVycmlkZVxsaXN0aWQ1MTY1NzY0MjVcbGlzdG92ZXJyaWRlY291bnQwXGxzMTV9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkNTA3MDE1MTQ0XGxpc3RvdmVycmlkZWNvdW50MFxsczE2fQ0Ke1xsaXN0b3ZlcnJpZGVcbGlzdGlkMzIzMzE1ODU1XGxpc3RvdmVycmlkZWNvdW50OXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlc3RhcnRhdFxsZXZlbHN0YXJ0YXQzfXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlc3RhcnRhdFxsZXZlbHN0YXJ0YXQzfXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlc3RhcnRhdFxsZXZlbHN0YXJ0YXQxfXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlc3RhcnRhdFxsZXZlbHN0YXJ0YXQxfXtcbGZvbGV2ZWwNClxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDF9e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDF9e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDF9e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDF9e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDF9XGxzMTd9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkMjY4MTI3MTQ1DQpcbGlzdG92ZXJyaWRlY291bnQ5e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDF9e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDF9e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDF9e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDF9e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDF9e1xsZm9sZXZlbA0KXGxpc3RvdmVycmlkZXN0YXJ0YXRcbGV2ZWxzdGFydGF0MX17XGxmb2xldmVsXGxpc3RvdmVycmlkZXN0YXJ0YXRcbGV2ZWxzdGFydGF0MX17XGxmb2xldmVsXGxpc3RvdmVycmlkZXN0YXJ0YXRcbGV2ZWxzdGFydGF0MX17XGxmb2xldmVsXGxpc3RvdmVycmlkZXN0YXJ0YXRcbGV2ZWxzdGFydGF0MX1cbHMxOH17XGxpc3RvdmVycmlkZVxsaXN0aWQxMjMxNTAwNDIwXGxpc3RvdmVycmlkZWNvdW50OXtcbGZvbGV2ZWwNClxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDF9e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDF9e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDF9e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDF9e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDF9e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0DQpcbGV2ZWxzdGFydGF0MX17XGxmb2xldmVsXGxpc3RvdmVycmlkZXN0YXJ0YXRcbGV2ZWxzdGFydGF0MX17XGxmb2xldmVsXGxpc3RvdmVycmlkZXN0YXJ0YXRcbGV2ZWxzdGFydGF0MX17XGxmb2xldmVsXGxpc3RvdmVycmlkZXN0YXJ0YXRcbGV2ZWxzdGFydGF0MX1cbHMxOX17XGxpc3RvdmVycmlkZVxsaXN0aWQxNjUwMjg2MzE3XGxpc3RvdmVycmlkZWNvdW50OXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlc3RhcnRhdFxsZXZlbHN0YXJ0YXQxfQ0Ke1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDF9e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDF9e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDF9e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDF9e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDF9e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0DQpcbGV2ZWxzdGFydGF0MX17XGxmb2xldmVsXGxpc3RvdmVycmlkZXN0YXJ0YXRcbGV2ZWxzdGFydGF0MX17XGxmb2xldmVsXGxpc3RvdmVycmlkZXN0YXJ0YXRcbGV2ZWxzdGFydGF0MX1cbHMyMH17XGxpc3RvdmVycmlkZVxsaXN0aWQxNTkwNTAwOTgzXGxpc3RvdmVycmlkZWNvdW50OXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlc3RhcnRhdFxsZXZlbHN0YXJ0YXQxfXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlc3RhcnRhdFxsZXZlbHN0YXJ0YXQxfQ0Ke1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDF9e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDF9e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDF9e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDF9e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDF9e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0DQpcbGV2ZWxzdGFydGF0MX17XGxmb2xldmVsXGxpc3RvdmVycmlkZXN0YXJ0YXRcbGV2ZWxzdGFydGF0MX1cbHMyMX17XGxpc3RvdmVycmlkZVxsaXN0aWQ1NDg1NDA0NDdcbGlzdG92ZXJyaWRlY291bnQwXGxzMjJ9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkMTg4ODQ0ODQzN1xsaXN0b3ZlcnJpZGVjb3VudDBcbHMyM317XGxpc3RvdmVycmlkZVxsaXN0aWQxMjMxMjM2MzkzXGxpc3RvdmVycmlkZWNvdW50MFxsczI0fQ0Ke1xsaXN0b3ZlcnJpZGVcbGlzdGlkMTkwNjA4NTI4XGxpc3RvdmVycmlkZWNvdW50MFxsczI1fXtcbGlzdG92ZXJyaWRlXGxpc3RpZDY0MDM1NDEyOFxsaXN0b3ZlcnJpZGVjb3VudDBcbHMyNn17XGxpc3RvdmVycmlkZVxsaXN0aWQxNjI5NTg0MDI4XGxpc3RvdmVycmlkZWNvdW50MFxsczI3fXtcbGlzdG92ZXJyaWRlXGxpc3RpZC0xMjlcbGlzdG92ZXJyaWRlY291bnQwXGxzMjh9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkMQ0KXGxpc3RvdmVycmlkZWNvdW50MFxsczI5fXtcbGlzdG92ZXJyaWRlXGxpc3RpZDEyMzE1MDA0MjBcbGlzdG92ZXJyaWRlY291bnQwXGxzMzB9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkNTY2MTg2Mjg1XGxpc3RvdmVycmlkZWNvdW50MFxsczMxfXtcbGlzdG92ZXJyaWRlXGxpc3RpZDExNzEwNjY4MTBcbGlzdG92ZXJyaWRlY291bnQwXGxzMzJ9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkMzAyMTI0MzY1XGxpc3RvdmVycmlkZWNvdW50MFxsczMzfQ0Ke1xsaXN0b3ZlcnJpZGVcbGlzdGlkMTk2NTU3NDM4OVxsaXN0b3ZlcnJpZGVjb3VudDBcbHMzNH17XGxpc3RvdmVycmlkZVxsaXN0aWQ0MjA4MDc0MzBcbGlzdG92ZXJyaWRlY291bnQwXGxzMzV9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkNTkxMTU5MjIzXGxpc3RvdmVycmlkZWNvdW50MFxsczM2fXtcbGlzdG92ZXJyaWRlXGxpc3RpZDE2ODEwNjk4MlxsaXN0b3ZlcnJpZGVjb3VudDBcbHMzN317XGxpc3RvdmVycmlkZVxsaXN0aWQxMTg0ODk4MTIxDQpcbGlzdG92ZXJyaWRlY291bnQwXGxzMzh9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkMzIzMzE1ODU1XGxpc3RvdmVycmlkZWNvdW50MFxsczM5fXtcbGlzdG92ZXJyaWRlXGxpc3RpZDMyMzMxNTg1NVxsaXN0b3ZlcnJpZGVjb3VudDBcbHM0MH17XGxpc3RvdmVycmlkZVxsaXN0aWQxMTQ0ODA5NDUyXGxpc3RvdmVycmlkZWNvdW50MFxsczQxfX17XCpccmV2dGJsIHtVbmtub3duO319e1wqXHBncHRibCB7XHBncFxpcGdwMFxpdGFwMFxsaTBccmkwXHNiMFxzYTB9e1xwZ3BcaXBncDANClxpdGFwMFxsaTBccmkwXHNiMFxzYTB9fXtcKlxyc2lkdGJsIFxyc2lkNzMyMzZccnNpZDEzNDY1Mlxyc2lkMzk2NTY5XHJzaWQ0NzQwNDNccnNpZDYxNDY4M1xyc2lkNjgzNjM1XHJzaWQ3MjY5NDJccnNpZDc5NDI2Mlxyc2lkOTg0Mzc1XHJzaWQxMTQzNDQwXHJzaWQxMzE0OTM0XHJzaWQxMzM2Mzk0XHJzaWQxNTExODEzXHJzaWQxNjQwODg4XHJzaWQxNzIyNjIxXHJzaWQxNzg5ODYyXHJzaWQxOTkzODY3XHJzaWQyMTczMjAxXHJzaWQyMjQ3ODQyDQpccnNpZDIzODM1OTBccnNpZDI1NjM2MjZccnNpZDI2MzM3MjFccnNpZDI2MzYzNDJccnNpZDI2NDY2MDFccnNpZDMwMjU2MzRccnNpZDMwOTUxMzhccnNpZDMxNTA0ODRccnNpZDMyMTg2MTJccnNpZDMyMjY4MzZccnNpZDMzNTE2NTJccnNpZDMzNjIxMTlccnNpZDM0ODMzMjVccnNpZDM1NTU4NTFccnNpZDM2OTI2NzdccnNpZDM4MDE5NDVccnNpZDM5NjA1NThccnNpZDQwMDYxMDhccnNpZDQwMjY5MjNccnNpZDQwMjcwNjFccnNpZDQwNjgxMTUNClxyc2lkNDM5MTcxM1xyc2lkNDM5NTM4M1xyc2lkNDQwMjU5N1xyc2lkNDQyMjM1M1xyc2lkNDk4MTM5OVxyc2lkNTAwNDMwMFxyc2lkNTA1MDY4MVxyc2lkNTEzODA1OVxyc2lkNTM5NzY5N1xyc2lkNTUxMjgwNFxyc2lkNTY0OTc1Nlxyc2lkNTg1NjcyNFxyc2lkNjI1NzQxOFxyc2lkNjQ0MTYxN1xyc2lkNjU4NTMzMVxyc2lkNjYyMDY5OVxyc2lkNjc4MTI0NVxyc2lkNjgyOTAwOFxyc2lkNjgzMTgxMVxyc2lkNjgzMjk1OFxyc2lkNjg5ODY3OA0KXHJzaWQ3MDI0MTY3XHJzaWQ3MjE3NzQwXHJzaWQ3MzU0OTYxXHJzaWQ3NDEyNzQ1XHJzaWQ3NDE2MjA1XHJzaWQ3NjA5MTY3XHJzaWQ4MDAxODY0XHJzaWQ4MTMzMDk4XHJzaWQ4MTUzODYyXHJzaWQ4NDg2MTU0XHJzaWQ4ODY5OTU5XHJzaWQ4OTc4ODM4XHJzaWQ5MDQ3MzA2XHJzaWQ5MzI3MDYyXHJzaWQ5NDQ5NjEwXHJzaWQ5NDUwNjQ1XHJzaWQ5NTExOTM2XHJzaWQ5NTcxMDA5XHJzaWQ5NTk0Nzc0XHJzaWQ5NzI3NzMxXHJzaWQ5NzY3NTU5DQpccnNpZDk3ODAwMTFccnNpZDk3OTY0OThccnNpZDk5NjYxMzVccnNpZDEwMjkxMjQyXHJzaWQxMDI5OTg0N1xyc2lkMTAzODI1OTdccnNpZDEwNDk3NTU3XHJzaWQxMDYyMzUwOVxyc2lkMTA2OTQyNzBccnNpZDEwNzYzMjkxXHJzaWQxMDc2NTM1Mlxyc2lkMTA5NTk1NDlccnNpZDExMDM1NTExXHJzaWQxMTA3NzM4N1xyc2lkMTExNjMwMzdccnNpZDExMjgyMjU1XHJzaWQxMTM0MTExMlxyc2lkMTEzNDYxNzhccnNpZDExMzUxNTgyDQpccnNpZDExNDI3Njk3XHJzaWQxMTYwMTA5NFxyc2lkMTE2MjQxODNccnNpZDExNjY2MjE3XHJzaWQxMTY3MDk5OVxyc2lkMTE3MzgxOTFccnNpZDExNzQ4MzI4XHJzaWQxMTgwOTIwMlxyc2lkMTE5NDQxMDVccnNpZDEyMDg1MjU4XHJzaWQxMjIxNjI5MVxyc2lkMTIyMTk5OTVccnNpZDEyNzM1MDExXHJzaWQxMjc5Mjk1NFxyc2lkMTI5MzY2MzRccnNpZDEzMzcyNDIyXHJzaWQxMzM3MjUwM1xyc2lkMTM1NzQ0MTVccnNpZDEzNjU3ODU0DQpccnNpZDEzODM2NDE2XHJzaWQxMzg5ODc0NFxyc2lkMTM5NjIxOTlccnNpZDE0MjkxOTQ0XHJzaWQxNDc3Nzc3NVxyc2lkMTQ5NDY2ODhccnNpZDE1MDIwOTc2XHJzaWQxNTEwMDcxNVxyc2lkMTUyODEyNDBccnNpZDE1NTYwMTA1XHJzaWQxNTU2MTI0MFxyc2lkMTU2NjkyMzRccnNpZDE1NjczNzM0XHJzaWQxNjEzMTU0N1xyc2lkMTYxMzk2MjBccnNpZDE2MjAxNDUwXHJzaWQxNjI4MjcyM317XG1tYXRoUHJcbW1hdGhGb250MzRcbWJya0JpbjANClxtYnJrQmluU3ViMFxtc21hbGxGcmFjMFxtZGlzcERlZjFcbWxNYXJnaW4wXG1yTWFyZ2luMFxtZGVmSmMxXG13cmFwSW5kZW50MTQ0MFxtaW50TGltMFxtbmFyeUxpbTF9e1xpbmZve1xhdXRob3IgVGhvbWFzLCBUeXJvbmV9e1xvcGVyYXRvciBTYWFkLCBNYWhhIE0ufXtcY3JlYXRpbVx5cjIwMjFcbW8xXGR5MjVcaHIxNlxtaW4xM317XHJldnRpbVx5cjIwMjFcbW8xXGR5MjVcaHIxNlxtaW4xM30NCntccHJpbnRpbVx5cjIwMjFcbW8xXGR5MjJcaHIxM1xtaW40MH17XHZlcnNpb24yfXtcZWRtaW5zMH17XG5vZnBhZ2VzNH17XG5vZndvcmRzNDc5NTB9e1xub2ZjaGFyczI3MzMyMH17XG5vZmNoYXJzd3MzMjA2Mjl9e1x2ZXJuMTAzfX17XCpceG1sbnN0Ymwge1x4bWxuczEgaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9vZmZpY2Uvd29yZC8yMDAzL3dvcmRtbH19DQpccGFwZXJ3MTIyNDBccGFwZXJoMTU4NDBcbWFyZ2wxNDQwXG1hcmdyMTQ0MFxtYXJndDE0NDBcbWFyZ2IxNDQwXGd1dHRlcjBcbHRyc2VjdCANClx3aWRvd2N0cmxcZnRuYmpcYWVuZGRvY1x0cmFja21vdmVzMFx0cmFja2Zvcm1hdHRpbmcwXGRvbm90ZW1iZWRzeXNmb250MVxyZWx5b252bWwxXGRvbm90ZW1iZWRsaW5nZGF0YTBcZ3JmZG9jZXZlbnRzMFx2YWxpZGF0ZXhtbDFcc2hvd3BsYWNlaG9sZHRleHQwXGlnbm9yZW1peGVkY29udGVudDBcc2F2ZWludmFsaWR4bWwwXHNob3d4bWxlcnJvcnMxXG5veGxhdHRveWVuDQpcZXhwc2hydG5cbm91bHRybHNwY1xkbnRibG5zYmRiXG5vc3BhY2Vmb3J1bFxmb3Jtc2hhZGVcaG9yemRvY1xkZ21hcmdpblxkZ2hzcGFjZTE4MFxkZ3ZzcGFjZTE4MFxkZ2hvcmlnaW4xNDQwXGRndm9yaWdpbjE0NDBcZGdoc2hvdzFcZGd2c2hvdzENClxqZXhwYW5kXHZpZXdraW5kMVx2aWV3c2NhbGUxMDBccGdicmRyaGVhZFxwZ2JyZHJmb290XHNwbHl0d25pbmVcZnRubHl0d25pbmVcaHRtYXV0c3Bcbm9sbmh0YWRqdGJsXHVzZWx0YmFsblxhbG50YmxpbmRcbHl0Y2FsY3RibHdkXGx5dHRibHJ0Z3JcbG5icmtydWxlXG5vYnJrd3JwdGJsXHNuYXB0b2dyaWRpbmNlbGxcYWxsb3dmaWVsZGVuZHNlbFx3cnBwdW5jdA0KXGFzaWFuYnJrcnVsZVxyc2lkcm9vdDM1NTU4NTFcbmV3dGJsc3R5cnVsc1xub2dyb3dhdXRvZml0XHV0aW5sIFxmZXQwe1wqXHdncmZmbXRmaWx0ZXIgMjQ1MH1caWxmb21hY2F0Y2xudXAwe1wqXGRvY3ZhciB7ODVUcmFpbGVyQ2xpZW50TWF0dGVyfXswfX17XCpcZG9jdmFyIHs4NVRyYWlsZXJEYXRlfXswfX17XCpcZG9jdmFyIHs4NVRyYWlsZXJEYXRlRmllbGR9ezB9fXtcKlxkb2N2YXIgezg1VHJhaWxlckRyYWZ0fXswfX0NCntcKlxkb2N2YXIgezg1VHJhaWxlckxpYnJhcnl9ezB9fXtcKlxkb2N2YXIgezg1VHJhaWxlclRpbWV9ezB9fXtcKlxkb2N2YXIgezg1VHJhaWxlclR5cGV9ezEwMn19e1wqXGRvY3ZhciB7ODVUcmFpbGVyVmVyc2lvbn17MH19e1wqXGRvY3ZhciB7Y2J4TWF4TGV2ZWx9ezJ9fXtcKlxkb2N2YXIge2NieE1pbkxldmVsfXsxfX17XCpcZG9jdmFyIHtjYnhTY2hlZHVsZVN0eWxlc317MH19e1wqXGRvY3ZhciB7Y2J4VE9DU2NoZW1lfXs0fX0NCntcKlxkb2N2YXIge2Noa0FwcGx5TWFudWFsRm9ybWF0c1RvVE9DfXswfX17XCpcZG9jdmFyIHtjaGtBcHBseVRPQzl9ezB9fXtcKlxkb2N2YXIge2Noa0h5cGVybGlua3N9ezB9fXtcKlxkb2N2YXIge2Noa1N0eWxlc317MX19e1wqXGRvY3ZhciB7Y2hrVENFbnRyaWVzfXswfX17XCpcZG9jdmFyIHtjaGtUd29Db2x1bW59ezB9fQ0Ke1wqXGRvY3ZhciB7RG9jU3RhbXBfMV9PcHRpb25hbENvbnRyb2xWYWx1ZXN9e0xpYnJhcnl8JkxpYnJhcnl8MHwlbHxWZXJzaW9ufCZWZXJzaW9ufDB8JXZ8Q2xpZW50TWF0dGVyfCZDbGllbnQvTWF0dGVyfDB8JWNtfX17XCpcZG9jdmFyIHtFeGNsdXNpb25zfXssSGVhZGluZyx9fXtcKlxkb2N2YXIge01QRG9jSUR9ezExMjkyNjU2Mn19e1wqXGRvY3ZhciB7TVBEb2NJRFRlbXBsYXRlfXslbHwgJW58diV2fCAlY3wuJW19fQ0Ke1wqXGRvY3ZhciB7TVBEb2NJRFRlbXBsYXRlRGVmYXVsdH17JWx8ICVufHYldnwgJWN8LiVtfX17XCpcZG9jdmFyIHtOZXdEb2NTdGFtcFR5cGV9ezd9fXtcKlxkb2N2YXIge29wdENyZWF0ZUZyb219ezB9fXtcKlxkb2N2YXIge29wdEluY2x1ZGV9ezB9fQ0Ke1wqXGRvY3ZhciB7U3R5bGVFeGNsdXNpb25zfXssQXJ0aWNsZV9MMixDb3ZlcixEQ0FSVElDTEVfTDQsSGVhZGluZyAxLEhlYWRpbmcgMixIZWFkaW5nIDMsSGVhZGluZyA0LEhlYWRpbmcgNSxIZWFkaW5nIDYsSGVhZGluZyA3LEhlYWRpbmcgOCxIZWFkaW5nIDksTGVnYWwyX0wzLExlZ2FsMl9MNCxMZWdhbDJfTDUsTGVnYWwyX0w2LExlZ2FsMl9MNyxMZWdhbDJfTDgsTGVnYWwyX0w5LFMyLkhlYWRpbmcgMSxTMi5IZWFkaW5nIDIsUzIuSGVhZGluZyAzLFMyLkhlYWRpbmcgNCxTMi5IZWFkaW5nIDUNCixTMi5IZWFkaW5nIDYsUzIuSGVhZGluZyA3LFMyLkhlYWRpbmcgOCxTMi5IZWFkaW5nIDksU3R5bGUxMCxTdWJ0aXRsZSxUaXRsZSx9fXtcKlxkb2N2YXIge1N0eWxlSW5jbHVzaW9uc317LExlZ2FsMl9MMSxMZWdhbDJfTDIsfX17XCpcZG9jdmFyIHtUYXJpZmZTaGFya0RvY3VtZW50VHlwZX17VFJWTUFSS0VEfX17XCpcZG9jdmFyIHtUYXJpZmZTaGFya1JlY29yZElkfXs5NjYyfX0NCntcKlxkb2N2YXIge3p6bXBGaXhlZEN1clNjaGVtZX17TGVnYWwyfX17XCpcZG9jdmFyIHt6em1wRml4ZWRDdXJTY2hlbWVfOS4wfXsxenptcExlZ2FsMn19e1wqXGRvY3ZhciB7enptcExlZ2FjeVRyYWlsZXJSZW1vdmVkTmV3fXtUcnVlfX17XCpcZG9jdmFyIHt6em1wTGVnYWwyfXt8fExlZ2FsMnwyfDN8MXw0fDEwfDQ1fHwxfDEyfDR8fDF8MTJ8MHx8MXwxMnwxfHwxfDEyfDB8fDF8MTJ8MHx8MXwxMnwwfHwxfDEyfDB8fDF8MTJ8MHx8fX0NCntcKlxkb2N2YXIge3p6bXBuU2Vzc2lvbn17MC44OTU2NTY4fX17XCpcZG9jdmFyIHt6em1wVHJhaWxlckRhdGVGb3JtYXR9ezB9fXtcKlxmdG5zZXAgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IA0KXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGFmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDU2NDk3NTYgXGNoZnRuc2VwIA0KXHBhciB9fXtcKlxmdG5zZXBjIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxhZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1NjQ5NzU2IFxjaGZ0bnNlcGMgDQpccGFyIH19e1wqXGFmdG5zZXAgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0Ke1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1NjQ5NzU2IFxjaGZ0bnNlcCANClxwYXIgfX17XCpcYWZ0bnNlcGMgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxhZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ1NjQ5NzU2IFxjaGZ0bnNlcGMgDQpccGFyIH19XGx0cnBhciBcc2VjdGQgXGx0cnNlY3RcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xoZWFkZXJyIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkwXHJpMFx3aWRjdGxwYXINClx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIA0KXGx0cmNoXGZjczAgXGluc3JzaWQyNjM2MzQyIA0KXHBhciB9fXtcZm9vdGVyciBcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJccWMgXGxpMFxyaTBcd2lkY3RscGFyXHRxY1x0eDQ2ODBcdHFyXHR4OTM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGFmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGZzMTZcaW5zcnNpZDI2MzYzNDIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIFBBR0UgICBcXCogTUVSR0VGT1JNQVQgfX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcZnMxNlxpbnNyc2lkMjYzNjM0MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAxfX19XHNlY3RkIFxsdHJzZWN0XGxpbmV4MFxlbmRuaGVyZVxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDI2MzYzNDIgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZnMxNlxpbnNyc2lkMjYzNjM0MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBLQzAxRE9DU1xcMTI0NTY1NC4xMg0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkwXHJpMFxzbC0yMDBcc2xtdWx0MFx3aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjBcYWZzMTYgXGx0cmNoXGZjczAgXGZzMTZcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQyNjM2MzQyXGNoYXJyc2lkNDA3NDc5OSANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDQyMzM0MTE5fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxmczE2XGluc3JzaWQyNjM2MzQyXGNoYXJyc2lkNDA3NDc5OSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxmczE2XGluc3JzaWQyNjM2MzQyIA0KXHBhciB9fXtcaGVhZGVyZiBcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJccXIgXGxpMFxyaTBcd2lkY3RscGFyXHRxY1x0eDQ2ODBcdHFyXHR4OTM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGFmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFiXGFpXGFmMSBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQyNjM2MzQyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEV4ZWN1dGlvbiBWZXJzaW9ufXtccnRsY2hcZmNzMSBcYWJcYWlcYWYxIFxsdHJjaFxmY3MwIA0KXGJcaVxpbnNyc2lkMjYzNjM0MlxjaGFycnNpZDEzNzIzNTkxIA0KXHBhciB9fXtcKlxwbnNlY2x2bDFccG51Y3JtXHBuc3RhcnQxXHBuaW5kZW50NzIwXHBuaGFuZyB7XHBudHh0YSAufX17XCpccG5zZWNsdmwyXHBudWNsdHJccG5zdGFydDFccG5pbmRlbnQ3MjBccG5oYW5nIHtccG50eHRhIC59fXtcKlxwbnNlY2x2bDNccG5kZWNccG5zdGFydDFccG5pbmRlbnQ3MjBccG5oYW5nIHtccG50eHRhIC59fXtcKlxwbnNlY2x2bDRccG5sY2x0clxwbnN0YXJ0MVxwbmluZGVudDcyMFxwbmhhbmcge1xwbnR4dGEgKX19DQp7XCpccG5zZWNsdmw1XHBuZGVjXHBuc3RhcnQxXHBuaW5kZW50NzIwXHBuaGFuZyB7XHBudHh0YiAofXtccG50eHRhICl9fXtcKlxwbnNlY2x2bDZccG5sY2x0clxwbnN0YXJ0MVxwbmluZGVudDcyMFxwbmhhbmcge1xwbnR4dGIgKH17XHBudHh0YSApfX17XCpccG5zZWNsdmw3XHBubGNybVxwbnN0YXJ0MVxwbmluZGVudDcyMFxwbmhhbmcge1xwbnR4dGIgKH17XHBudHh0YSApfX17XCpccG5zZWNsdmw4DQpccG5sY2x0clxwbnN0YXJ0MVxwbmluZGVudDcyMFxwbmhhbmcge1xwbnR4dGIgKH17XHBudHh0YSApfX17XCpccG5zZWNsdmw5XHBubGNybVxwbnN0YXJ0MVxwbmluZGVudDcyMFxwbmhhbmcge1xwbnR4dGIgKH17XHBudHh0YSApfX1ccGFyZFxwbGFpbiBcbHRycGFyDQpccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGFmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSANClxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDI0NDkzNTIge1wqXGJrbWtzdGFydCBfSGxrNDgwODUzNzh9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQVNTSUdOTUVOVCwgQ08tVEVOQU5DWSx9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0MjkxOTQ0IFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBBTkQgU0hBUkVEIEZBQ0lMSVRJRVMgQUdSRUVNRU5UfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEJZIEFORCBBTU9ORw0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjQ0OTM1MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBIQVJESU4gU09MQVIgRU5FUkdZIExMQyx9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0MjkxOTQ0IFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBhIERlbGF3YXJlIGxpbWl0ZWQgbGlhYmlsaXR5IGNvbXBhbnl9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyNDQ5MzUyIHtcKlxia21rc3RhcnQgX0hsazM3MTk0MDI4fVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEhBUkRJTiBTT0xBUiBFTkVSR1kgSUkgTExDLH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQyOTE5NDQgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGEgRGVsYXdhcmUgbGltaXRlZCBsaWFiaWxpdHkgY29tcGFueX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDI0NDkzNTIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgSEFSRElOIFNPTEFSIEVORVJHWSBJSUkgTExDLH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQyOTE5NDQgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGEgRGVsYXdhcmUgbGltaXRlZCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgbGlhYmlsaXR5IGNvfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIG1wYW55DQoNClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBBTkQNClxwYXIgfVxwYXJkIFxsdHJwYXJccWMgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTE5ODgwNiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBIQVJESU4gU09MQVIgRU5FUkdZIExMQyx9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcYlxoaWdobGlnaHQ3XGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDI0Mzc5NzkgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQyOTE5NDQgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCmEgRGVsYXdhcmUgbGltaXRlZCBsaWFiaWxpdHkgY29tcGFueX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANClxwYXIgfVxwYXJkIFxsdHJwYXJccWMgXGxpMFxyaTBcc2E0ODBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkge1wqXGJrbWtlbmQgX0hsazM3MTk0MDI4fVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KYXMgQ28tVGVuYW5jeSBNYW5hZ2VyDQpccGFyIH1ccGFyZCBcbHRycGFyXHFjIFxsaTBccmkwXHNhMTIwMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgRGVjZW1iZXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGJcaW5zcnNpZDUzOTc2OTcgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgMzB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjMxMDEyOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAsIDIwfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAyMH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxiXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjggDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXHNlY3QgfVxzZWN0ZCBcbHRyc2VjdA0KXHBnbnJlc3RhcnRccGdubGNybVxsaW5leDBcaGVhZGVyeTEwODBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XGhlYWRlcnIgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHMyNzhccWMgXGxpMTE1XHJpMTE1XHdpZGN0bHBhcg0KXHRxY1x0eDQ2ODBcdHFyXHR4OTM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjExNVxsaW4xMTVcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGJcY2Fwc1xpbnNyc2lkMjYzNjM0MlxjaGFycnNpZDE0OTcwODQwIFRhYmxlIG9mIENvbnRlbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjYzNjM0MiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjYzNjM0MiAoY29udGludWVkKQ0KXHBhciB9XHBhcmQgXGx0cnBhclxzMjc4XHFyIFxsaTExNVxyaTExNVxzYTIwMFx3aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMTE1XGxpbjExNVxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQyNjM2MzQyXGNoYXJyc2lkMTQ5NzA4NDAgUGFnZX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMjYzNjM0MiANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczEwNFxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjYzNjM0MlxjaGFycnNpZDE0OTcwODQwIA0KXHBhciB9fXtcZm9vdGVyciBcbHRycGFyIFxsdHJyb3dcdHJvd2QgXGlyb3cwXGlyb3diYW5kMFxsYXN0cm93IFxsdHJyb3dcdHMxMVx0cnFjXHRyZ2FwaDEwOFx0cmxlZnQtMTA4XHRyZnRzV2lkdGgxXHRyZnRzV2lkdGhCM1x0cnBhZGRsMTA4XHRycGFkZHIxMDhcdHJwYWRkZmwzXHRycGFkZGZ0M1x0cnBhZGRmYjNcdHJwYWRkZnIzXHRibHJzaWQxNDI5MTk0NFx0YmxpbmQwXHRibGluZHR5cGUzIFxjbHZlcnRhbHRcY2xicmRydFxicmRydGJsIA0KXGNsYnJkcmxcYnJkcnRibCBcY2xicmRyYlxicmRydGJsIFxjbGJyZHJyXGJyZHJ0YmwgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoNDE0NlxjbHNoZHJhd25pbCBcY2VsbHg0MDM4XGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJ0YmwgXGNsYnJkcmxcYnJkcnRibCBcY2xicmRyYlxicmRydGJsIFxjbGJyZHJyXGJyZHJ0YmwgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTAwOFxjbHNoZHJhd25pbCBcY2VsbHg1MDQ2XGNsdmVydGFsdA0KXGNsYnJkcnRcYnJkcnRibCBcY2xicmRybFxicmRydGJsIFxjbGJyZHJiXGJyZHJ0YmwgXGNsYnJkcnJcYnJkcnRibCBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGg0MTQ2XGNsc2hkcmF3bmlsIFxjZWxseDkxOTJccGFyZFxwbGFpbiBcbHRycGFyXHMzNVxxbCBcbGkwXHJpMFxzbC0yMDBcc2xtdWx0MFx3aWRjdGxwYXJcaW50YmwNClx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBccGFyYXJzaWQ3NDEyNzQ1IFxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczE2XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxhZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI2MzYzNDJcY2hhcnJzaWQ1MDUwNjgxIFxjZWxsIH1ccGFyZCBcbHRycGFyXHMzNVxxYyBcbGkwXHJpMFx3aWRjdGxwYXJcaW50YmxcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxjczE0M1xpbnNyc2lkMjYzNjM0MlxjaGFycnNpZDUwNTA2ODEgLX17XGZpZWxke1wqXGZsZGluc3Qgew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcY3MxNDNcaW5zcnNpZDI2MzYzNDJcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBQQUdFICBcXCogTUVSR0VGT1JNQVQgfX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGNzMTQzXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkNDAyNjkyMyBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBpaX19fQ0KXHNlY3RkIFxsdHJzZWN0XHBnbmxjcm1cbGluZXgwXGVuZG5oZXJlXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxjczE0M1xpbnNyc2lkMjYzNjM0MlxjaGFycnNpZDUwNTA2ODEgLVxjZWxsIH1ccGFyZCBcbHRycGFyXHMzNVxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcaW50YmwNClx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjAge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQyNjM2MzQyXGNoYXJyc2lkNTA1MDY4MSBcY2VsbCB9XHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjAgDQpccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjYzNjM0MlxjaGFycnNpZDUwNTA2ODEgXHRyb3dkIFxpcm93MFxpcm93YmFuZDBcbGFzdHJvdyBcbHRycm93DQpcdHMxMVx0cnFjXHRyZ2FwaDEwOFx0cmxlZnQtMTA4XHRyZnRzV2lkdGgxXHRyZnRzV2lkdGhCM1x0cnBhZGRsMTA4XHRycGFkZHIxMDhcdHJwYWRkZmwzXHRycGFkZGZ0M1x0cnBhZGRmYjNcdHJwYWRkZnIzXHRibHJzaWQxNDI5MTk0NFx0YmxpbmQwXHRibGluZHR5cGUzIFxjbHZlcnRhbHRcY2xicmRydFxicmRydGJsIFxjbGJyZHJsXGJyZHJ0YmwgXGNsYnJkcmJcYnJkcnRibCBcY2xicmRyclxicmRydGJsIA0KXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoNDE0NlxjbHNoZHJhd25pbCBcY2VsbHg0MDM4XGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJ0YmwgXGNsYnJkcmxcYnJkcnRibCBcY2xicmRyYlxicmRydGJsIFxjbGJyZHJyXGJyZHJ0YmwgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTAwOFxjbHNoZHJhd25pbCBcY2VsbHg1MDQ2XGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJ0YmwgXGNsYnJkcmxcYnJkcnRibCBcY2xicmRyYlxicmRydGJsIA0KXGNsYnJkcnJcYnJkcnRibCBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGg0MTQ2XGNsc2hkcmF3bmlsIFxjZWxseDkxOTJccm93IH1ccGFyZFxwbGFpbiBcbHRycGFyXHMzNVxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgDQpcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjYzNjM0MiANClxwYXIgfX17XGhlYWRlcmYgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHMyNzhccWMgXGxpMTE1XHJpMTE1XHdpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4xMTVcbGluMTE1XGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGNhcHNcaW5zcnNpZDI2MzYzNDJcY2hhcnJzaWQxNDk3MDg0MCBUYWJsZSBvZiBDb250ZW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDI2MzYzNDIgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI2MzYzNDIgDQpccGFyIH1ccGFyZCBcbHRycGFyXHMyNzhccXIgXGxpMTE1XHJpMTE1XHNhMjAwXHdpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4xMTVcbGluMTE1XGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDI2MzYzNDJcY2hhcnJzaWQxNDk3MDg0MCBQYWdlfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNjM2MzQyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTA0XHFsIFxsaTBccmkwXHdpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxhZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQyNjM2MzQyXGNoYXJyc2lkMTQ5NzA4NDAgDQpccGFyIH19e1xmb290ZXJmIFxsdHJwYXIgXGx0cnJvd1x0cm93ZCBcaXJvdzBcaXJvd2JhbmQwXGxhc3Ryb3cgXGx0cnJvd1x0czExXHRycWNcdHJnYXBoMTA4XHRybGVmdC0xMDhcdHJmdHNXaWR0aDFcdHJmdHNXaWR0aEIzXHRycGFkZGwxMDhcdHJwYWRkcjEwOFx0cnBhZGRmbDNcdHJwYWRkZnQzXHRycGFkZGZiM1x0cnBhZGRmcjNcdGJscnNpZDE0MjkxOTQ0XHRibGluZDBcdGJsaW5kdHlwZTMgXGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJ0YmwgDQpcY2xicmRybFxicmRydGJsIFxjbGJyZHJiXGJyZHJ0YmwgXGNsYnJkcnJcYnJkcnRibCBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGg0MTQ2XGNsc2hkcmF3bmlsIFxjZWxseDQwMzhcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcnRibCBcY2xicmRybFxicmRydGJsIFxjbGJyZHJiXGJyZHJ0YmwgXGNsYnJkcnJcYnJkcnRibCBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGgxMDA4XGNsc2hkcmF3bmlsIFxjZWxseDUwNDZcY2x2ZXJ0YWx0DQpcY2xicmRydFxicmRydGJsIFxjbGJyZHJsXGJyZHJ0YmwgXGNsYnJkcmJcYnJkcnRibCBcY2xicmRyclxicmRydGJsIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDQxNDZcY2xzaGRyYXduaWwgXGNlbGx4OTE5MlxwYXJkXHBsYWluIFxsdHJwYXJcczM1XHFsIFxsaTBccmkwXHNsLTIwMFxzbG11bHQwXHdpZGN0bHBhclxpbnRibA0KXHRxY1x0eDQ2ODBcdHFyXHR4OTM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczE2XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxhZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI2MzYzNDJcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICANClxwYXIgfVxwYXJkIFxsdHJwYXJcczM1XHFsIFxsaTBccmkwXHNsLTIwMFxzbG11bHQwXHdpZGN0bHBhclxpbnRibFx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBccGFyYXJzaWQ3NDEyNzQ1IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjYzNjM0MlxjaGFycnNpZDUwNTA2ODEgXGNlbGwgfVxwYXJkIFxsdHJwYXINClxzMzVccWMgXGxpMFxyaTBcd2lkY3RscGFyXGludGJsXHRxY1x0eDQ2ODBcdHFyXHR4OTM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcY3MxNDNcaW5zcnNpZDI2MzYzNDJcY2hhcnJzaWQ1MDUwNjgxIC19e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGNzMTQzXGluc3JzaWQyNjM2MzQyXGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgUEFHRSAgXFwqIE1FUkdFRk9STUFUIH19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxjczE0M1xsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDQwMjY5MjMgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgaX19fVxzZWN0ZCBcbHRyc2VjdA0KXHBnbmxjcm1cbGluZXgwXGVuZG5oZXJlXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxjczE0M1xpbnNyc2lkMjYzNjM0MlxjaGFycnNpZDUwNTA2ODEgLVxjZWxsIH1ccGFyZCBcbHRycGFyXHMzNVxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcaW50YmxcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wIHsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQyNjM2MzQyXGNoYXJyc2lkNTA1MDY4MSBcY2VsbCB9XHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjAgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjYzNjM0MlxjaGFycnNpZDUwNTA2ODEgXHRyb3dkIFxpcm93MFxpcm93YmFuZDBcbGFzdHJvdyBcbHRycm93DQpcdHMxMVx0cnFjXHRyZ2FwaDEwOFx0cmxlZnQtMTA4XHRyZnRzV2lkdGgxXHRyZnRzV2lkdGhCM1x0cnBhZGRsMTA4XHRycGFkZHIxMDhcdHJwYWRkZmwzXHRycGFkZGZ0M1x0cnBhZGRmYjNcdHJwYWRkZnIzXHRibHJzaWQxNDI5MTk0NFx0YmxpbmQwXHRibGluZHR5cGUzIFxjbHZlcnRhbHRcY2xicmRydFxicmRydGJsIFxjbGJyZHJsXGJyZHJ0YmwgXGNsYnJkcmJcYnJkcnRibCBcY2xicmRyclxicmRydGJsIA0KXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoNDE0NlxjbHNoZHJhd25pbCBcY2VsbHg0MDM4XGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJ0YmwgXGNsYnJkcmxcYnJkcnRibCBcY2xicmRyYlxicmRydGJsIFxjbGJyZHJyXGJyZHJ0YmwgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoMTAwOFxjbHNoZHJhd25pbCBcY2VsbHg1MDQ2XGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJ0YmwgXGNsYnJkcmxcYnJkcnRibCBcY2xicmRyYlxicmRydGJsIA0KXGNsYnJkcnJcYnJkcnRibCBcY2x0eGxydGJcY2xmdHNXaWR0aDNcY2x3V2lkdGg0MTQ2XGNsc2hkcmF3bmlsIFxjZWxseDkxOTJccm93IH1ccGFyZFxwbGFpbiBcbHRycGFyXHMzNVxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgDQpcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjYzNjM0MiANClxwYXIgfX1ccGFyZFxwbGFpbiBcbHRycGFyXHM1NlxxbCBcZmktMTQ0MFxsaTE0NDBccmk3MjBcc2ExMjBca2VlcFx3aWRjdGxwYXJcdHFyXHRsZG90XHR4OTI4OFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjcyMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMTM4MzY0MTYgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQxMzgzNjQxNiB7XCpcYmtta3N0YXJ0IG1wVGFibGVPZkNvbnRlbnRzfUFydGljbGUgMVx0YWIgU0hBUkVEIFBSRU1JU0VTXHRhYiAyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTVccWwgXGZpLTcyMFxsaTE0NDBccmk3MjBcc2ExMjBca2VlcFx3aWRjdGxwYXJcdHFyXHRsZG90XHR4OTI4OFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjcyMFxsaW4xNDQwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkMTM4MzY0MTYgMS4xXHRhYiBDb252ZXlhbmNlIG9mIEludGVyZXN0cyBpbiBTaGFyZWQgUHJlbWlzZXNcdGFiIDJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkMTM4MzY0MTYgMS4yXHRhYiBNYWludGVuYW5jZSBvZiB0aGUgU2hhcmVkIFByZW1pc2VzXHRhYiAzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkNTA1MDY4MSANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU1XHFsIFxmaS03MjBcbGkxNDQwXHJpNzIwXHNhMTIwXGtlZXBcd2lkY3RscGFyXHRxclx0bGRvdFx0eDkyODhcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW43MjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDEzODM2NDE2IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQxMzgzNjQxNiAxLjNcdGFiIA0KQWRkaXRpb25hbCBQcmVtaXNlcyBSaWdodHNcdGFiIDN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTZccWwgXGZpLTE0NDBcbGkxNDQwXHJpNzIwXHNhMTIwXGtlZXBcd2lkY3RscGFyXHRxclx0bGRvdFx0eDkyODhcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW43MjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDEzODM2NDE2IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkMTM4MzY0MTYgQXJ0aWNsZSAyXHRhYiBTSEFSRUQgRkFDSUxJVElFU1x0YWIgNH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDUwNTA2ODEgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1NVxxbCBcZmktNzIwXGxpMTQ0MFxyaTcyMFxzYTEyMFxrZWVwXHdpZGN0bHBhclx0cXJcdGxkb3RcdHg5Mjg4XHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluNzIwXGxpbjE0NDBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQxMzgzNjQxNiAyLjFcdGFiIENvbnZleWFuY2Ugb2YgSW50ZXJlc3RzIGluIFNoYXJlZCBGYWNpbGl0aWVzXHRhYiA0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkNTA1MDY4MSANCg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IDIuMlx0YWIgTWFpbnRlbmFuY2Ugb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzXHRhYiA0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkNTA1MDY4MSANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQxMzgzNjQxNiAyLjNcdGFiIFJlcGxhY2VtZW50IG9mIENvbXBvbmVudHMgb2YgU2hhcmVkIEZhY2lsaXRpZXNcdGFiIDV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IDIuNFx0YWIgQ29uZGl0aW9ucyB0byBJbnN0YWxsYXRpb24gb2YgUmVwbGFjZW1lbnQgQ29tcG9uZW50XHRhYiA2fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkNTA1MDY4MSANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQxMzgzNjQxNiAyLjVcdGFiIEFkZGl0aW9uYWwgRmFjaWxpdGllc1x0YWIgNn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDUwNTA2ODEgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkMTM4MzY0MTYgMi42XHRhYiBPJk0gRmFjaWxpdGllc1x0YWIgN317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDUwNTA2ODEgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkMTM4MzY0MTYgMi43XHRhYiBDb25kaXRpb25zIHRvIEluc3RhbGxhdGlvbiBvZiBOZXcgRmFjaWxpdGllc1x0YWIgOH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDUwNTA2ODEgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1NVxxbCBcZmktNzIwXGxpMTQ0MFxyaTcyMFxzYTEyMFxrZWVwXHdpZGN0bHBhclx0cXJcdGxkb3RcdHg5Mjg4XHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluNzIwXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxMzgzNjQxNiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkMTM4MzY0MTYgMi44XHRhYiBXYXJyYW50eSBDbGFpbXMNClx0YWIgOH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDUwNTA2ODEgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1NlxxbCBcZmktMTQ0MFxsaTE0NDBccmk3MjBcc2ExMjBca2VlcFx3aWRjdGxwYXJcdHFyXHRsZG90XHR4OTI4OFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjcyMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMTM4MzY0MTYgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQxMzgzNjQxNiBBcnRpY2xlIDNcdGFiIEVBU0VNRU5UU1x0YWIgOX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDUwNTA2ODEgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1NVxxbCBcZmktNzIwXGxpMTQ0MFxyaTcyMFxzYTEyMFxrZWVwXHdpZGN0bHBhclx0cXJcdGxkb3RcdHg5Mjg4XHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluNzIwXGxpbjE0NDBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQxMzgzNjQxNiAzLjFcdGFiIFBhcnRpYWwgQXNzaWdubWVudCBvZiBFYXNlbWVudHNcdGFiIDl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IDMuMlx0YWIgQ29uZGl0aW9ucyB0byBJbnN0YWxsYXRpb24gb2YgU2VwYXJhdGUgQ29sbGVjdGlvbiBGYWNpbGl0aWVzXHRhYiAxMH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDUwNTA2ODEgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1NVxxbCBcZmktNzIwXGxpMTQ0MFxyaTcyMFxzYTEyMFxrZWVwXHdpZGN0bHBhclx0cXJcdGxkb3RcdHg5Mjg4XHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluNzIwXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxMzgzNjQxNiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkMTM4MzY0MTYgMy4zXHRhYiBPcGVyYXRpb24gYW5kIA0KTWFpbnRlbmFuY2Ugb2YgRWFzZW1lbnRzXHRhYiAxMH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDUwNTA2ODEgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1NlxxbCBcZmktMTQ0MFxsaTE0NDBccmk3MjBcc2ExMjBca2VlcFx3aWRjdGxwYXJcdHFyXHRsZG90XHR4OTI4OFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjcyMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMTM4MzY0MTYgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQxMzgzNjQxNiBBcnRpY2xlIDRcdGFiIFNFUEFSQVRFIEZBQ0lMSVRJRVM7IFNFUEFSQVRFIFBST0pFQ1RTXHRhYiAxMH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDUwNTA2ODEgDQoNClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU1XHFsIFxmaS03MjBcbGkxNDQwXHJpNzIwXHNhMTIwXGtlZXBcd2lkY3RscGFyXHRxclx0bGRvdFx0eDkyODhcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW43MjBcbGluMTQ0MFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IDQuMVx0YWIgU2VwYXJhdGUgRmFjaWxpdGllc1x0YWIgMTB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IDQuMlx0YWIgT3BlcmF0aW9uIGFuZCBNYWludGVuYW5jZSBvZiBTZXBhcmF0ZSBGYWNpbGl0aWVzOyBSaWdodCB0byBFbmN1bWJlclx0YWIgMTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTVccWwgXGZpLTcyMFxsaTE0NDBccmk3MjBcc2ExMjBca2VlcFx3aWRjdGxwYXJcdHFyXHRsZG90XHR4OTI4OFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjcyMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMTM4MzY0MTYge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IDQuM1x0YWIgDQpDb25kaXRpb25zIHRvIEluc3RhbGxhdGlvbiBvZiBTZXBhcmF0ZSBGYWNpbGl0aWVzXHRhYiAxMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDUwNTA2ODEgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1NlxxbCBcZmktMTQ0MFxsaTE0NDBccmk3MjBcc2ExMjBca2VlcFx3aWRjdGxwYXJcdHFyXHRsZG90XHR4OTI4OFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjcyMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMTM4MzY0MTYgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQxMzgzNjQxNiBBcnRpY2xlIDVcdGFiIENPTlNUUlVDVElPTiBFQVNFTUVOVDsgQUNDRVNTLCBOT05JTlRFUkZFUkVOQ0U7IE5BVFVSRSBPRiBSRUxBVElPTlNISVA7IFdBSVZFUiBPRiBQQVJUSVRJT05cdGFiIDExfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTVccWwgXGZpLTcyMFxsaTE0NDBccmk3MjBcc2ExMjBca2VlcFx3aWRjdGxwYXJcdHFyXHRsZG90XHR4OTI4OFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjcyMFxsaW4xNDQwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkMTM4MzY0MTYgNS4xXHRhYiBUZW1wb3JhcnkgQ29uc3RydWN0aW9uIEVhc2VtZW50XHRhYiAxMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDUwNTA2ODEgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkMTM4MzY0MTYgNS4yXHRhYiBBY2Nlc3MgdG8gdGhlIFNoYXJlZCBGYWNpbGl0aWVzIGFuZCBTZXBhcmF0ZSBGYWNpbGl0aWVzXHRhYiAxMn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDUwNTA2ODEgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkMTM4MzY0MTYgNS4zXHRhYiBDb252ZXlhbmNlcyBvZiBTaGFyZWQgUHJlbWlzZXMgYW5kIEZhY2lsaXRpZXMgYW5kIEVhc2VtZW50c1x0YWIgMTJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IDUuNFx0YWIgQ29udGludWFuY2Ugb2YgRWFzZW1lbnRzIGFuZCBTaGFyZWQgUHJlbWlzZXNcdGFiIDEyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkNTA1MDY4MSANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQxMzgzNjQxNiA1LjVcdGFiIE5vIEludGVyZmVyZW5jZVx0YWIgMTJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IDUuNlx0YWIgQ292ZW5hbnRzIFJ1bm5pbmcgd2l0aCB0aGUgTGFuZFx0YWIgMTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IDUuN1x0YWIgTmF0dXJlIG9mIFJlbGF0aW9uc2hpcCBCZXR3ZWVuIENvLVRlbmFudHNcdGFiIDEzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkNTA1MDY4MSANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU1XHFsIFxmaS03MjBcbGkxNDQwXHJpNzIwXHNhMTIwXGtlZXBcd2lkY3RscGFyXHRxclx0bGRvdFx0eDkyODhcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW43MjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDEzODM2NDE2IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQxMzgzNjQxNiA1LjhcdGFiIA0KV2FpdmVyIG9mIFJpZ2h0IHRvIFBhcnRpdGlvbiBvciBUZXJtaW5hdGlvblx0YWIgMTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTZccWwgXGZpLTE0NDBcbGkxNDQwXHJpNzIwXHNhMTIwXGtlZXBcd2lkY3RscGFyXHRxclx0bGRvdFx0eDkyODhcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW43MjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDEzODM2NDE2IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkMTM4MzY0MTYgQXJ0aWNsZSA2XHRhYiBBTExPQ0FUSU9OIEFORCBQQVlNRU5UIE9GIEVYUEVOU0VTLCBDT1NUUyBBTkQgQ08tVEVOQU5UIE1FVEVSIE1FQVNVUkVNRU5UXHRhYiAxNH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxkYmNoXGFmMTNcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkNTA1MDY4MSANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU1XHFsIFxmaS03MjBcbGkxNDQwXHJpNzIwXHNhMTIwXGtlZXBcd2lkY3RscGFyXHRxclx0bGRvdFx0eDkyODhcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW43MjBcbGluMTQ0MFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IDYuMVx0YWIgT3duZXJzaGlwIFNoYXJlcywgTWV0aG9kIGZvciBNb2RpZnlpbmcgT3duZXJzaGlwIFNoYXJlc1x0YWIgMTV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZGJjaFxhZjEzXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDUwNTA2ODEgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkMTM4MzY0MTYgNi4yXHRhYiBDYXBpdGFsIENvc3QgUmVpbWJ1cnNlbWVudDsgUGF5bWVudFx0YWIgMTV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IDYuM1x0YWIgTWFpbnRlbmFuY2UgYW5kIFJlcGFpciBvZiB0aGUgU2hhcmVkIFByZW1pc2VzIGFuZCBGYWNpbGl0aWVzLCBBZGRpdGlvbmFsIFByZW1pc2VzIG9yIEFkZGl0aW9uYWwgRmFjaWxpdGllc1x0YWIgMTZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZGJjaFxhZjEzXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDUwNTA2ODEgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkMTM4MzY0MTYgNi40XHRhYiBNYWludGVuYW5jZSBhbmQgUmVwYWlyIG9mIFNlcGFyYXRlIEZhY2lsaXRpZXMsIFNlcGFyYXRlIEVhc2VtZW50cywgU2VwYXJhdGUgQ29sbGVjdGlvbiBGYWNpbGl0aWVzIGFuZCBFYXNlbWVudHNcdGFiIDE3fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IDYuNVx0YWIgSW52b2ljaW5nLCBMYXRlIFBheW1lbnRzXHRhYiAxN317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDUwNTA2ODEgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkMTM4MzY0MTYgNi42XHRhYiBBZCBWYWxvcmVtIFRheGVzIGFuZCBBc3Nlc3NtZW50c1x0YWIgMTd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IDYuN1x0YWIgQ29zdHMgb2YgUmVwYWlyIFdvcmtcdGFiIDE3fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkNTA1MDY4MSANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQxMzgzNjQxNiA2LjhcdGFiIENvLVRlbmFuY3kgTyZNIEJ1ZGdldFx0YWIgMTh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IDYuOVx0YWIgT3RoZXIgRXhwZW5zZXMgQ2F1c2VkIEJ5IENvLVRlbmFudHNcdGFiIDE5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkNTA1MDY4MSANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQxMzgzNjQxNiA2LjEwXHRhYiBSaWdodHMgb2YgT3RoZXIgQ28tVGVuYW50cyBmb3IgTm9uLVBheW1lbnRcdGFiIDE5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkNTA1MDY4MSANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQxMzgzNjQxNiA2LjExXHRhYiBMaWVuc1x0YWIgMTl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTVccWwgXGZpLTcyMFxsaTE0NDBccmk3MjBcc2ExMjBca2VlcFx3aWRjdGxwYXJcdHFyXHRsZG90XHR4OTI4OFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjcyMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMTM4MzY0MTYge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IDYuMTJcdGFiIA0KQ28tVGVuYW50IE1ldGVyIE1lYXN1cmVtZW50XHRhYiAxOX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDUwNTA2ODEgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1NlxxbCBcZmktMTQ0MFxsaTE0NDBccmk3MjBcc2ExMjBca2VlcFx3aWRjdGxwYXJcdHFyXHRsZG90XHR4OTI4OFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjcyMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMTM4MzY0MTYgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQxMzgzNjQxNiBBcnRpY2xlIDdcdGFiIE9USEVSIFJJR0hUUyBBTkQgT0JMSUdBVElPTlMgT0YgQ08tVEVOQU5UU1x0YWIgMjB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZGJjaFxhZjEzXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDUwNTA2ODEgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1NVxxbCBcZmktNzIwXGxpMTQ0MFxyaTcyMFxzYTEyMFxrZWVwXHdpZGN0bHBhclx0cXJcdGxkb3RcdHg5Mjg4XHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluNzIwXGxpbjE0NDBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQxMzgzNjQxNiA3LjFcdGFiIE1haW50ZW5hbmNlIGFuZCBSZXBhaXIgb2YgU2VwYXJhdGUgRmFjaWxpdGllc1x0YWIgMjB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkMTM4MzY0MTYgNy4yXHRhYiBUZXJtaW5hdGlvbiBvciBNb2RpZmljYXRpb24gb2YgQW55IEVhc2VtZW50XHRhYiAyMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDUwNTA2ODEgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkMTM4MzY0MTYgNy4zXHRhYiBTdGFuZGFyZCBvZiBQZXJmb3JtYW5jZVx0YWIgMjF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IDcuNFx0YWIgQ28tVGVuYW50IFJlcHJlc2VudGF0aXZlc1x0YWIgMjJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IDcuNVx0YWIgRW52aXJvbm1lbnRhbCBDb21wbGlhbmNlXHRhYiAyMn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDUwNTA2ODEgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkMTM4MzY0MTYgNy42XHRhYiBQSUxPVCBDb21wbGlhbmNlXHRhYiAyMn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDUwNTA2ODEgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkMTM4MzY0MTYgNy43XHRhYiBDcml0aWNhbCBNaWxlc3RvbmUgTm90aWNlXHRhYiAyMn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDUwNTA2ODEgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1NVxxbCBcZmktNzIwXGxpMTQ0MFxyaTcyMFxzYTEyMFxrZWVwXHdpZGN0bHBhclx0cXJcdGxkb3RcdHg5Mjg4XHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluNzIwXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxMzgzNjQxNiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkMTM4MzY0MTYgNy44XHRhYiANClJlbGlhYmlsaXR5IGFuZCBTZWN1cml0eSBDb21wbGlhbmNlXHRhYiAyMn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDUwNTA2ODEgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1NlxxbCBcZmktMTQ0MFxsaTE0NDBccmk3MjBcc2ExMjBca2VlcFx3aWRjdGxwYXJcdHFyXHRsZG90XHR4OTI4OFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjcyMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMTM4MzY0MTYgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQxMzgzNjQxNiBBcnRpY2xlIDhcdGFiIE1BTkFHRU1FTlQgUklHSFRTIEFORCBWT1RJTkdcdGFiIDIzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkNTA1MDY4MSANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU1XHFsIFxmaS03MjBcbGkxNDQwXHJpNzIwXHNhMTIwXGtlZXBcd2lkY3RscGFyXHRxclx0bGRvdFx0eDkyODhcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW43MjBcbGluMTQ0MFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IDguMVx0YWIgSW4gR2VuZXJhbFx0YWIgMjN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IDguMlx0YWIgU3BlY2lmaWMgQXV0aG9yaXR5XHRhYiAyM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDUwNTA2ODEgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkMTM4MzY0MTYgOC4zXHRhYiBMaW1pdGF0aW9uIG9uIEF1dGhvcml0eVx0YWIgMjV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IDguNFx0YWIgQ3VydGFpbG1lbnQgb2YgRGVsaXZlcnlcdGFiIDI2fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkNTA1MDY4MSANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQxMzgzNjQxNiA4LjVcdGFiIERpc2Nvbm5lY3Rpb24gRnJvbSBTaGFyZWQgRmFjaWxpdGllcyBvciBBZGRpdGlvbmFsIEZhY2lsaXRpZXNcdGFiIDI3fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkNTA1MDY4MSANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQxMzgzNjQxNiA4LjZcdGFiIH17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTUxMTgxMyBbUkVEQUNURURdfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQxMzgzNjQxNiBcdGFiIDI4fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IDguN1x0YWIgQ28tVGVuYW5jeSBNYW5hZ2VyIFJlcHJlc2VudGF0aXZlXHRhYiAyOH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDUwNTA2ODEgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1NVxxbCBcZmktNzIwXGxpMTQ0MFxyaTcyMFxzYTEyMFxrZWVwXHdpZGN0bHBhclx0cXJcdGxkb3RcdHg5Mjg4XHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluNzIwXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxMzgzNjQxNiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkMTM4MzY0MTYgOC44XHRhYiANCkNvbXBldGluZyBWZW50dXJlc1x0YWIgMjl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTZccWwgXGZpLTE0NDBcbGkxNDQwXHJpNzIwXHNhMTIwXGtlZXBcd2lkY3RscGFyXHRxclx0bGRvdFx0eDkyODhcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW43MjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDEzODM2NDE2IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkMTM4MzY0MTYgQXJ0aWNsZSA5XHRhYiBDTy1URU5BTkNZIE1BTkFHRVJcdGFiIDI5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkNTA1MDY4MSANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU1XHFsIFxmaS03MjBcbGkxNDQwXHJpNzIwXHNhMTIwXGtlZXBcd2lkY3RscGFyXHRxclx0bGRvdFx0eDkyODhcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW43MjBcbGluMTQ0MFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IDkuMVx0YWIgQXBwb2ludG1lbnQgb2YgdGhlIENvLVRlbmFuY3kgTWFuYWdlclx0YWIgMjl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IDkuMlx0YWIgSW5kZW1uaWZpY2F0aW9uIG9mIENvLVRlbmFuY3kgTWFuYWdlclx0YWIgMjl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IDkuM1x0YWIgSW5kZW1uaWZpY2F0aW9uIGJ5IHRoZSBDby1UZW5hbmN5IE1hbmFnZXJcdGFiIDMwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkNTA1MDY4MSANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQxMzgzNjQxNiA5LjRcdGFiIEluZGVtbmlmaWNhdGlvbiBOb3RpY2VzOyBMaW1pdGF0aW9uIG9uIExpYWJpbGl0eVx0YWIgMzB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IDkuNVx0YWIgU3RhbmRhcmRzIG9mIFBlcmZvcm1hbmNlXHRhYiAzMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDUwNTA2ODEgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkMTM4MzY0MTYgOS42XHRhYiBSZW1vdmFsIG9mIHRoZSBDby1UZW5hbmN5IE1hbmFnZXJcdGFiIDMxfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkNTA1MDY4MSANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQxMzgzNjQxNiA5LjdcdGFiIEJvb2tzIGFuZCBSZWNvcmRzOyBSZXBvcnRpbmcgUmVxdWlyZW1lbnRzXHRhYiAzNH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDUwNTA2ODEgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkMTM4MzY0MTYgOS44XHRhYiBDby1UZW5hbmN5IE1hbmFnZXIgRmVlcyBhbmQgRXhwZW5zZXNcdGFiIDM0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkNTA1MDY4MSANClxwYXIgfVxwYXJkIFxsdHJwYXJcczU1XHFsIFxmaS03MjBcbGkxNDQwXHJpNzIwXHNhMTIwXGtlZXBcd2lkY3RscGFyXHRxclx0bGRvdFx0eDkyODhcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW43MjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDEzODM2NDE2IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQxMzgzNjQxNiA5LjlcdGFiIA0KRmFjaWxpdHkgTWFuYWdlbWVudCBBZ3JlZW1lbnRzXHRhYiAzNX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDUwNTA2ODEgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1NlxxbCBcZmktMTQ0MFxsaTE0NDBccmk3MjBcc2ExMjBca2VlcFx3aWRjdGxwYXJcdHFyXHRsZG90XHR4OTI4OFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjcyMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMTM4MzY0MTYgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQxMzgzNjQxNiBBcnRpY2xlIDEwXHRhYiBJTlNVUkFOQ0VcdGFiIDM1fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkNTA1MDY4MSANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU1XHFsIFxmaS03MjBcbGkxNDQwXHJpNzIwXHNhMTIwXGtlZXBcd2lkY3RscGFyXHRxclx0bGRvdFx0eDkyODhcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW43MjBcbGluMTQ0MFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IDEwLjFcdGFiIEluc3VyYW5jZVx0YWIgMzV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2XHNwdiAxMC4yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQxMzgzNjQxNiBcdGFiIENvbnN0cnVjdGlvbiBQaGFzZSBJbnN1cmFuY2VzXHRhYiAzNX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDUwNTA2ODEgDQoNClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQxMzgzNjQxNlxzcHYgMTAuM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkMTM4MzY0MTYgXHRhYiBPcGVyYXRpb25hbCBQaGFzZSBJbnN1cmFuY2VzXHRhYiAzN317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDUwNTA2ODEgDQoNClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQxMzgzNjQxNlxzcHYgMTAuNH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkMTM4MzY0MTYgXHRhYiBXYWl2ZXIgb2YgQ2xhaW1zIEZvciBJbnN1cmVkIEV2ZW50c1x0YWIgMzh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZGJjaFxhZjEzXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDUwNTA2ODEgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkMTM4MzY0MTYgMTAuNVx0YWIgRm9ybSBhbmQgQ29udGVudCBvZiBJbnN1cmFuY2VcdGFiIDM5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkNTA1MDY4MSANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQxMzgzNjQxNlxzcHYgMTAuNn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkMTM4MzY0MTYgXHRhYiBBZGRpdGlvbmFsIFJlcXVpcmVtZW50c1x0YWIgMzl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTVccWwgXGZpLTcyMFxsaTE0NDBccmk3MjBcc2ExMjBca2VlcFx3aWRjdGxwYXJcdHFyXHRsZG90XHR4OTI4OFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjcyMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMTM4MzY0MTYge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2XHNwdiAxMC43fXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IFx0YWIgQW1vdW50IG9mIEluc3VyYW5jZS5cdGFiIDQxfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkNTA1MDY4MSANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU2XHFsIFxmaS0xNDQwXGxpMTQ0MFxyaTcyMFxzYTEyMFxrZWVwXHdpZGN0bHBhclx0cXJcdGxkb3RcdHg5Mjg4XHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluNzIwXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxMzgzNjQxNiBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IEFydGljbGUgMTFcdGFiIEFTU0lHTk1FTlRTIEFORCBSSUdIVCBUTyBFTkNVTUJFUlx0YWIgNDF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1NVxxbCBcZmktNzIwXGxpMTQ0MFxyaTcyMFxzYTEyMFxrZWVwXHdpZGN0bHBhclx0cXJcdGxkb3RcdHg5Mjg4XHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluNzIwXGxpbjE0NDBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQxMzgzNjQxNiAxMS4xXHRhYiBBc3NpZ25tZW50IGJ5IENvLVRlbmFudHNcdGFiIDQxfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkNTA1MDY4MSANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQxMzgzNjQxNiAxMS4yXHRhYiBQcm9jZWR1cmVzXHRhYiA0MX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDUwNTA2ODEgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkMTM4MzY0MTZcc3B2IDExLjN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IFx0YWIgfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNTExODEzIFtSRURBQ1RFRF19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkMTM4MzY0MTYgXHRhYiA0Mn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDUwNTA2ODEgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1NVxxbCBcZmktNzIwXGxpMTQ0MFxyaTcyMFxzYTEyMFxrZWVwXHdpZGN0bHBhclx0cXJcdGxkb3RcdHg5Mjg4XHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluNzIwXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxMzgzNjQxNiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkMTM4MzY0MTYgMTEuNFx0YWIgDQpFeHBlbnNlcyBhbmQgT3RoZXIgTWF0dGVyc1x0YWIgNDN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTZccWwgXGZpLTE0NDBcbGkxNDQwXHJpNzIwXHNhMTIwXGtlZXBcd2lkY3RscGFyXHRxclx0bGRvdFx0eDkyODhcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW43MjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDEzODM2NDE2IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkMTM4MzY0MTYgQXJ0aWNsZSAxMlx0YWIgVEVSTSBBTkQgVEVSTUlOQVRJT05cdGFiIDQzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkNTA1MDY4MSANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU1XHFsIFxmaS03MjBcbGkxNDQwXHJpNzIwXHNhMTIwXGtlZXBcd2lkY3RscGFyXHRxclx0bGRvdFx0eDkyODhcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW43MjBcbGluMTQ0MFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IDEyLjFcdGFiIFRlcm0gYW5kIFRlcm1pbmF0aW9uXHRhYiA0M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDUwNTA2ODEgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkMTM4MzY0MTYgMTIuMlx0YWIgU3VycmVuZGVyIGFuZCBBc3NpZ25tZW50IG9mIFVuZGl2aWRlZCBJbnRlcmVzdFx0YWIgNDN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IDEyLjNcdGFiIERlY29tbWlzc2lvbmluZyBvZiBhIFByb2plY3RcdGFiIDQ0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkNTA1MDY4MSANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQxMzgzNjQxNiAxMi40XHRhYiBEaXN0cmlidXRpb24gb24gVGVybWluYXRpb24gb2YgdGhpcyBBZ3JlZW1lbnRcdGFiIDQ1fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkNTA1MDY4MSANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQxMzgzNjQxNiAxMi41XHRhYiBWYWx1YXRpb24gYW5kIERpc3RyaWJ1dGlvbiBvZiBOb24tQ2FzaCBEaXN0cmlidXRpb25zXHRhYiA0Nn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDUwNTA2ODEgDQpccGFyIH1ccGFyZCBcbHRycGFyXHM1NVxxbCBcZmktNzIwXGxpMTQ0MFxyaTcyMFxzYTEyMFxrZWVwXHdpZGN0bHBhclx0cXJcdGxkb3RcdHg5Mjg4XHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluNzIwXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxMzgzNjQxNiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkMTM4MzY0MTYgMTIuNlx0YWIgDQpSaWdodHMgb2YgUmV2ZXJ0ZXJcdGFiIDQ2fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkNTA1MDY4MSANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU2XHFsIFxmaS0xNDQwXGxpMTQ0MFxyaTcyMFxzYTEyMFxrZWVwXHdpZGN0bHBhclx0cXJcdGxkb3RcdHg5Mjg4XHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluNzIwXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxMzgzNjQxNiBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IEFydGljbGUgMTNcdGFiIERFRkFVTFQgQU5EIFJFTUVESUVTXHRhYiA0N317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDUwNTA2ODEgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHM1NVxxbCBcZmktNzIwXGxpMTQ0MFxyaTcyMFxzYTEyMFxrZWVwXHdpZGN0bHBhclx0cXJcdGxkb3RcdHg5Mjg4XHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluNzIwXGxpbjE0NDBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQxMzgzNjQxNlxzcHYgMTMuMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkMTM4MzY0MTYgXHRhYiBDby1UZW5hbnQgRXZlbnRzIG9mIERlZmF1bHRcdGFiIDQ3fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IDEzLjJcdGFiIENvLVRlbmFuY3kgTWFuYWdlciBFdmVudHMgb2YgRGVmYXVsdFx0YWIgNDh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KXHBhciB9XHBhcmQgXGx0cnBhclxzNTVccWwgXGZpLTcyMFxsaTE0NDBccmk3MjBcc2ExMjBca2VlcFx3aWRjdGxwYXJcdHFyXHRsZG90XHR4OTI4OFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjcyMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMTM4MzY0MTYge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IDEzLjNcdGFiIFJlbWVkaWVzXHRhYiA0OX0NCntccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkNTA1MDY4MSANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU2XHFsIFxmaS0xNDQwXGxpMTQ0MFxyaTcyMFxzYTEyMFxrZWVwXHdpZGN0bHBhclx0cXJcdGxkb3RcdHg5Mjg4XHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluNzIwXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxMzgzNjQxNiBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IEFydGljbGUgMTRcdGFiIFJFUFJFU0VOVEFUSU9OUyBBTkQgV0FSUkFOVElFU1x0YWIgNTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTVccWwgXGZpLTcyMFxsaTE0NDBccmk3MjBcc2ExMjBca2VlcFx3aWRjdGxwYXJcdHFyXHRsZG90XHR4OTI4OFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjcyMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMTM4MzY0MTYgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQxMzgzNjQxNiAxNC4xXHRhYiBSZXByZXNlbnRhdGlvbnMgYW5kIFdhcnJhbnRpZXMgb2YgQ28tVGVuYW50cyBhbmQgQ28tVGVuYW5jeSBNYW5hZ2VyXHRhYiA1MX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxkYmNoXGFmMTNcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkNTA1MDY4MSANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU2XHFsIFxmaS0xNDQwXGxpMTQ0MFxyaTcyMFxzYTEyMFxrZWVwXHdpZGN0bHBhclx0cXJcdGxkb3RcdHg5Mjg4XHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluNzIwXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxMzgzNjQxNiBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IEFydGljbGUgMTVcdGFiIElOREVNTklUWTsgTElNSVRBVElPTlMgT0YgTElBQklMSVRZXHRhYiA1MX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDUwNTA2ODEgDQoNClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU1XHFsIFxmaS03MjBcbGkxNDQwXHJpNzIwXHNhMTIwXGtlZXBcd2lkY3RscGFyXHRxclx0bGRvdFx0eDkyODhcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW43MjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDEzODM2NDE2IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkMTM4MzY0MTYgMTUuMVx0YWIgQ3Jvc3MgSW5kZW1uaXR5IG9mIENvLVRlbmFudHNcdGFiIDUxfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkNTA1MDY4MSANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczU2XHFsIFxmaS0xNDQwXGxpMTQ0MFxyaTcyMFxzYTEyMFxrZWVwXHdpZGN0bHBhclx0cXJcdGxkb3RcdHg5Mjg4XHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluNzIwXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxMzgzNjQxNiBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IEFydGljbGUgMTZcdGFiIEdFTkVSQUwgUFJPVklTSU9OU1x0YWIgNTJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNTVccWwgXGZpLTcyMFxsaTE0NDBccmk3MjBcc2ExMjBca2VlcFx3aWRjdGxwYXJcdHFyXHRsZG90XHR4OTI4OFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjcyMFxsaW4xNDQwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkMTM4MzY0MTYgMTYuMVx0YWIgTm90aWNlc1x0YWIgNTJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IDE2LjJcdGFiIFN1cnZpdmFsIG9mIFJpZ2h0c1x0YWIgNTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IDE2LjNcdGFiIEFtZW5kbWVudFx0YWIgNTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IDE2LjRcdGFiIEZFUkMgQXBwcm92YWwgYW5kIE5vdGljZVx0YWIgNTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2XHNwdiAxNi41fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQxMzgzNjQxNiBcdGFiIENvbnN0cnVjdGlvblx0YWIgNTV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IDE2LjZcdGFiIEFncmVlbWVudCBpbiBDb3VudGVycGFydHNcdGFiIDU2fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkNTA1MDY4MSANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQxMzgzNjQxNiAxNi43XHRhYiBEaXNwdXRlc1x0YWIgNTZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2XHNwdiAxNi44fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQxMzgzNjQxNiBcdGFiIEdvdmVybmluZyBMYXdcdGFiIDU2fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkNTA1MDY4MSANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQxMzgzNjQxNiAxNi45XHRhYiBUaW1lXHRhYiA1N317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDUwNTA2ODEgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkMTM4MzY0MTYgMTYuMTBcdGFiIEFkZGl0aW9uYWwgRG9jdW1lbnRzOyBDb29wZXJhdGlvblx0YWIgNTd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IDE2LjExXHRhYiBWYWxpZGl0eVx0YWIgNTh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IDE2LjEyXHRhYiBQZXJwZXR1aXRpZXMgU2F2aW5ncyBDbGF1c2VcdGFiIDU4fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkNTA1MDY4MSANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQxMzgzNjQxNiAxNi4xM1x0YWIgTm8gVGhpcmQgUGFydHkgQmVuZWZpY2lhcmllc1x0YWIgNTh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IDE2LjE0XHRhYiBBdHRvcm5leXNccnF1b3RlICBGZWVzXHRhYiA1OH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDUwNTA2ODEgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkMTM4MzY0MTYgMTYuMTVcdGFiIFdhaXZlclx0YWIgNTh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IDE2LjE2XHRhYiBUaXRsZXNcdGFiIDU5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkNTA1MDY4MSANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQxMzgzNjQxNiAxNi4xN1x0YWIgRXhoaWJpdHNcdGFiIDU5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkNTA1MDY4MSANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQxMzgzNjQxNiAxNi4xOFx0YWIgRm9yY2UgTWFqZXVyZVx0YWIgNTl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IDE2LjE5XHRhYiBNZW1vcmFuZHVtXHRhYiA1OX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDUwNTA2ODEgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkMTM4MzY0MTYgMTYuMjBcdGFiIENvbmRlbW5hdGlvblx0YWIgNTl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTM4MzY0MTZcY2hhcnJzaWQ1MDUwNjgxIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2XHNwdiAxNi4yMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkMTM4MzY0MTYgXHRhYiBDb25maWRlbnRpYWwgSW5mb3JtYXRpb25cdGFiIDU5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkNTA1MDY4MSANCg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzgzNjQxNlxjaGFycnNpZDEzODM2NDE2IDE2LjIyXHRhYiBMaW1pdGF0aW9ucyBvZiBMaWFiaWxpdHlcdGFiIDYwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDEzODM2NDE2XGNoYXJyc2lkNTA1MDY4MSANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGZpLTE4MDBcbGkxODAwXHJpNzIwXHNhMTIwXHdpZGN0bHBhclx0cXJcdGxkb3RcdHg5Mjg4XHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluNzIwXGxpbjE4MDBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxhZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDc2ODQ1MDAge1wqXGJrbWtlbmQgbXBUYWJsZU9mQ29udGVudHN9XHNlY3QgfVxzZWN0ZCBcbHRyc2VjdA0KXHBnbnJlc3RhcnRccGdubGNybVxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XGhlYWRlcnIgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhcg0KXHRxY1x0eDQ2ODBcdHFyXHR4OTM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxhZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI2MzYzNDIgDQpccGFyIH19e1xmb290ZXJyIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxxYyBcbGkwXHJpMFx3aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZnMxNlxpbnNyc2lkMjYzNjM0MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgUEFHRSAgIFxcKiBNRVJHRUZPUk1BVCB9fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxmczE2XGluc3JzaWQyNjM2MzQyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHZpfX19XHNlY3RkIFxsdHJzZWN0XHBnbmxjcm1cbGluZXgwXGVuZG5oZXJlXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjYzNjM0MiANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMFxyaTBcc2wtMjAwXHNsbXVsdDBcd2lkY3RscGFyXHRxY1x0eDQ2ODBcdHFyXHR4OTM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYwXGFmczE2IFxsdHJjaFxmY3MwIFxmczE2XGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkMjYzNjM0MlxjaGFycnNpZDQwNzQ3OTkgDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCA0MjMzNDExOX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZnMxNlxpbnNyc2lkMjYzNjM0MlxjaGFycnNpZDQwNzQ3OTkgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZnMxNlxpbnNyc2lkMjYzNjM0MiANClxwYXIgfX17XGhlYWRlcmYgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxhZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQyNjM2MzQyIA0KXHBhciB9fXtcZm9vdGVyZiBcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJcczM1XHFsIFxsaTBccmkwXHNsLTIwMFxzbG11bHQwXHdpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczE2XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxhZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQyNjM2MzQyXGNoYXJyc2lkOTEyNTkwNyBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjYzNjM0MiANClxwYXIgfX1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxmaS0xODAwXGxpMTgwMFxyaTcyMFxzYTEyMFx3aWRjdGxwYXJcdHFyXHRsZG90XHR4OTI4OFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjcyMFxsaW4xODAwXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxjYXBzXGluc3JzaWQxNDI5MTk0NCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxjYXBzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDI0Mzc5NzkgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQVBQRU5ESVggQTogIERFRklOSVRJT05TXHRhYiBBUFBFTkRJWCBBLTF9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGY0M1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyNDM3OTc5IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGNhcHNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjQzNzk3OSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBFWEhJQklUIEEtMTogIFNIQVJFRCBwckVNSVNFU1x0YWIgQS0xfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxmNDNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjQzNzk3OSANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxjYXBzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDI0Mzc5NzkgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgRVhISUJJVCBBLTI6ICBlYXNlbWVudHNcdGFiIEEtMn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcY2Fwc1xmNDNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjQzNzk3OSANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxjYXBzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDI0Mzc5NzkgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgRVhISUJJVCBCLTE6ICBCSUxMIE9GIFNBTEUgXGhpY2hcZjAgXGVuZGFzaCBcbG9jaFxmMCAgU0hBUkVEIEZBQ0lMSVRJRVNcdGFiIEItMX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcY2Fwc1xmNDNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjQzNzk3OSANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxjYXBzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDI0Mzc5NzkgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgRVhISUJJVCBCLTI6ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGNhcHNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjM2NTYwMiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBRVUlUQ0xBSU0gREVFRH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxjYXBzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDI0Mzc5NzkgXHRhYiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBCLTJ9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGY0M1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyNDM3OTc5IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGNhcHNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjQzNzk3OSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBFWEhJQklUIEItMzogIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcY2Fwc1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzY1NjAyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFBhcnRpXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQphbCBBc3NpZ25tZW50IG9mIEVhc2VtZW50c317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcY2Fwc1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyNDM3OTc5IFx0YWIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQi0zfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxmNDNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjQzNzk3OSANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxjYXBzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDI0Mzc5NzkgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgRVhISUJJVCBDOiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGNhcHNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjM2NTYwMiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGNhcHNcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFNoYXJlZH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcY2Fwc1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyNDM3OTc5IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBNQUlOVEVOQU5DRSBSRVNQT05TSUJJTElUSUVTXHRhYiBDLTF9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcZjQzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDI0Mzc5NzkgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcY2Fwc1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyNDM3OTc5IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEVYSElCSVQgRDogIERFU0NSSVBUSU9OIE9GIFNIQVJFRCBGQUNJTElUSUVTXHRhYiBELTF9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGY0M1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyNDM3OTc5IA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcZmktMTQ0MFxsaTE0NDBccmk3MjBcc2ExMjBcd2lkY3RscGFyXHR4MTQ0MFx0cXJcdGxkb3RcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluNzIwXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcY2Fwc1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyNDM3OTc5IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgRVhISUJJVCBFOiAgTUVNT1JBTkRVTSBPRiBBU1NJR05NRU5ULCBDTy1URU5BTkNZLCBBTkQgU0hBUkVEIEZBQ0lMSVRJRVMgQUdSRUVNRU5UXHRhYiBFLTF9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGNhcHNcZjQzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDI0Mzc5NzkgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxmaS0xODAwXGxpMTgwMFxyaTcyMFxzYTEyMFx3aWRjdGxwYXJcdHFyXHRsZG90XHR4OTI4OFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjcyMFxsaW4xODAwXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGNhcHNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjQzNzk3OSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCkVYSElCSVQgRjogIE5FVCBSRVZFTlVFIExPU1NFUyBDQUxDVUxBXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgVElPTiBNRVRIT0RPTE9HWVx0YWIgXGhpY2hcZjAgXCc4NVwnODVcJzg1XCc4NVxsb2NoXGYwIC5GLTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGNhcHNcZjQzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDg0NjI2OTggDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcY2Fwc1xpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgZVhISUJJVCBHfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxjYXBzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzNjU2MDIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgOiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxjYXBzXGluc3JzaWQxNDI5MTk0NCANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHByby1yYXRhIHNoQVJFU317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcY2Fwc1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzY1NjAyIFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxjYXBzXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBHLTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcY2Fwc1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4NDYyNjk4IA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcZmktMTgwMFxsaTE4MDBccmk3MjBcc2ExMjBcd2lkY3RscGFyXHRxclx0bGRvdFx0eDkyODhcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW43MjBcbGluMTgwMFxpdGFwMFxwYXJhcnNpZDEwMzgyNTk3IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxjYXBzXGluc3JzaWQxMDM4MjU5N1xjaGFycnNpZDg0NjI2OTggDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTAzODI1OTcgXHNlY3QgfVxzZWN0ZCBcbHRyc2VjdA0KXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xoZWFkZXJyIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgDQpccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjYzNjM0MiANClxwYXIgfX17XGZvb3RlcnIgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHFjIFxsaTBccmkwXHdpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxhZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjYzNjM0MlxjaGFycnNpZDc0NzEzOTAgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIFBBR0UgICBcXCogTUVSR0VGT1JNQVQgfX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjEgDQpcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQxMDQ5NzU1NyBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAxNH19fVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQyNjM2MzQyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMzVccWwgXGxpMFxyaTBcc2wtMjAwXHNsbXVsdDBcd2lkY3RscGFyXHRxY1x0eDQ2ODBcdHFyXHR4OTM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGFmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDI2MzYzNDIgDQpccGFyIH19e1xoZWFkZXJmIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjYzNjM0MiANClxwYXIgfX17XGZvb3RlcmYgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHMzNVxxbCBcbGkwXHJpMFxzbC0yMDBcc2xtdWx0MFx3aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjYzNjM0MlxjaGFycnNpZDkxMjU5MDcgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDI2MzYzNDIgDQpccGFyIH19XHBhcmRccGxhaW4gXGx0cnBhclxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxhZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBBU1NJR05NRU5ULCBDTy1URU5BTkNZLCBBTkQgU0hBUkVEIEZBQ0lMSVRJRVMgQUdSRUVNRU5UDQpccGFyIH1ccGFyZCBcbHRycGFyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KVGhpcyBBc3NpZ25tZW50LCBDby1UZW5hbmN5LCBhbmQgU2hhcmVkIEZhY2lsaXRpZXMgQWdyZWVtZW50IGlzIG1hZGUgYW5kIGVudGVyZWQgaW50byBieSBhbmQgYW1vbmcgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgSEFSRElOIFNPTEFSIEVORVJHWSBMTEN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAsIGEgRGVsYXdhcmUgbGltaXRcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBlZCBsaWFiaWxpdHkgY29tcGFueSAofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxiXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgSGFyZGluIFNvbGFyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCApLCB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IHtcKlxia21rc3RhcnQgX0hsazE0OTQ0MDg3fVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEhBUkRJTiBTT0xBUiBFTkVSR1kgSUkgTExDfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KLCBhIERlbGF3YXJlIGxpbWl0ZWQgbGlhYmlsaXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIGNvbXBhbnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgICh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANClxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBIYXJkaW4gU29sYXIgSUl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgKXtcKlxia21rZW5kIF9IbGsxNDk0NDA4N30sIGFuZCB9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCB7XCpcYmtta3N0YXJ0IF9IbGszNzE5Mjk1Nn1caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBIQVJESU4gU09MQVIgRU5FUkdZIElJSSBMTEN9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAsIGEgRGVsYXdhcmUgbGltaXRlZCBsaWFiaWxpdHkgY29tcGFueSAofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxiXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDI0Mzc5NzkgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgSGFyZGluIFNvbGFyIElJSX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTgge1wqXGJrbWtlbmQgX0hsazM3MTkyOTU2fQ0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgLCBjb2xsZWN0aXZlbHkgd2l0aCBIYXJkaW4gU29sYXIsIEhhcmRpbiBTXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgb2xhciBJSSwgYW5kIEhhcmRpbiBTb2xhciBJSUksIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGJcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBDby1UZW5hbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCiBhbmQgZWFjaCBpbmRpdmlkdWFsbHksIGEgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCApLCBhbmQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpIQVJESU4gU09MQVIgRU5FUkdZIExMQ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTU2ODM2NzIgLH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTczMjI1NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgYSBEZWxhd2FyZSBsaW1pdGVkIGxpYWJpbGl0eSBjb21wYW55LCBhcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBDfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIG8tfXtccnRsY2hcZmNzMSANClxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDI0Mzc5NzkgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgVGVuYW5jeSBNYW5hZ2VyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICwgYW5kIGlzIGRhdGVkIGFzIG9mIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgRGVjZW1iZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTM5NzY5NyBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAzMH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAsIDIwMjAgKHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBDb250cmFjdCBEYXRlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICkuICBDZXJ0YWluIGNhcGl0YWxpemVcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBkIHRlcm1zIHVzZWQgaW4gdGhpcyBBZ3JlZW1lbnQgYXJlIGdpdmVuIGRlZmluZWQgbWVhbmluZ3MgaW4gQXBwZW5kaXggQSBhdHRhY2hlZCBoZXJldG8ufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpccGFyIH1ccGFyZCBcbHRycGFyXHFjIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXHVsd1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgUiBFIEMgSSBUIEEgTCBTOg0KXHBhciB9XHBhcmQgXGx0cnBhclxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBBLlx0YWIge1wqXGJrbWtzdGFydCBfSGxrMTQ5NDQyMTV9DQpIYXJkaW4gU29sYXIgb3ducyBhbmQgb3BlcmF0ZXMgb3Igd2lsbCBiZSB0aGUgb3duZXIgYW5kIG9wZXJhdG9yIG9mIGEgc29sYXIgcG93ZXIgcHJvamVjdCAodGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBIYXJkaW4gU29sYXIgUHJvamVjdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgKSwgd2l0aCB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmMX0xNTANCntcKlxia21rZW5kIERvY1hUZXh0UmVmMX0gbWVnYXdhdHRzIG9mIGRlc2lnXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgbiBjYXBhY2l0eSAodGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBIYXJkaW4gU29sYXIgUGVybWl0dGVkIENhcGFjaXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCiksIGxvY2F0ZWQgaW4gSGFyZGluIENvdW50eSwgT2hpby59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTgge1wqXGJrbWtlbmQgX0hsazE0OTQ0MjE1fQ0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQi5cdGFiIEhhcmRpbiBTb2xhciBJSSBvd25zIGFuZCBvcGVyYXRlcyBvciB3aWxsIGJlIHRoZSBvd25lciBhbmQgb3BlcmF0b3Igb2YgYSBzb2xhciBwb3dlciBwcm9qZWN0ICh0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQpcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMzUxMTgzNiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBIYXJkaW4gU29sYXIgSUkgUHJvamVjdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCApLCB3aXRoIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWYyfTE1MHtcKlxia21rZW5kIERvY1hUZXh0UmVmMn0gbWVnYXdhdHRzIG9mIGRlc2lnbiBjYXBhY2l0eSAodGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBIYXJkaW4gU29sYXIgSUkgUGVybWl0dGVkIENhcGFjaXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICksIGxvY2F0ZWQgaW4gSGFyZGluIENvdW50eSwgT2hpby59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpccGFyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEMuXHRhYiB7XCpcYmtta3N0YXJ0IF9IbGszNzE5MzA5Mn1IYXJkaW4gU29sYXIgSUlJIG93bnMgYW5kIG9wZXJhdGVzIG9yIHdpbGwgYmUgdGhlIG93bmVyIGFuZCBvcGVyYXRvciBvZiBhIHNvbGFyIHBvd2VyIHByb2plY3QgKHRoZSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSANClxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgSGFyZGluIFNvbGFyIElJSSBQcm9qZWN0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICksIHdpdGggfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjN9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgMzAwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IHtcKlxia21rZW5kIERvY1hUZXh0UmVmM30NClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBtZWdhd2F0dHMgb2YgZGVzaWduIGNhcGFjaXR5ICh0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBIYXJkaW4gU29sDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBhciBJSUkgUGVybWl0dGVkIENhcGFjaXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCiksIGxvY2F0ZWQgaW4gSGFyZGluIENvdW50eSwgT2hpby57XCpcYmtta2VuZCBfSGxrMzcxOTMwOTJ9IH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgRH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCAuXHRhYiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANClRoZSBIYXJkaW4gU29sYXIgUHJvamVjdCwgSGFyZGluIFNvbGFyIElJIFByb2plY3QsIGFuZCBIYXJkaW4gU29sYXIgSUlJIFByb2plY3QgYXJlIGhlcmVpbiBzb21ldGltZXMgcmVmZXJyZWQgdG8gaW5kaXZpZHVhbGx5IGFzIGEgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFByb2plY3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KIG9yIGNvbGxlY3RpdmVseSBhcyB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBQcm9qZWN0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAuICBUaGUgSGFyZGluIFNvbFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGFyIElJIFByb2plY3QgYW5kIEhhcmRpbiBTb2xhciBJSUkgUHJvamVjdCBhcmUgc29tZXRpbWVzIHJlZmVycmVkIHRvIGluZGl2aWR1YWxseSBhcyBhIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBTdWJzZXF1ZW50IFByb2plY3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANClxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgLCBhbmQgY29sbGVjdGl2ZWx5IGFzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBTdWJzZXF1ZW50IFByb2plY3RzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCAufXtccnRsY2hcZmNzMSBcYWYxIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggLlx0YWIge1wqXGJrbWtzdGFydCBfSGxrNDAxMDAxMDB9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgSGFyZGluIFNvbGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgaXMgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBmZWUgc2ltcGxlIG93bmVyIG9mIGNlcnRhaW4gcHJvcGVydHkgZGVzY3JpYmVkIG9uIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEV4aGliaXQgQS0xfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBhdHRhY2hlZCBoZXJldG8gKHRoXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgU2hhcmVkIFByZW1pc2VzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICkufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IHtcKlxia21rZW5kIF9IbGs0MDEwMDEwMH0NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgRn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCAuXHRhYiB7XCpcYmtta3N0YXJ0IF9IbGs0MDEwMDI4MH1caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBIYXJkaW4gU29sYXIgaGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ3MjI3NDYgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgY29uc3RydWN0ZWR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBhbmQvb3IgaW50ZW5kcyB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgY29uc3RydWN0IGNlcnRhaW4gZWxlY3RyaWNhbCBhbmQgY29tbXVuaWNhdGlvbnMgZmFjaWxpdGllcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIG9uIHRoZSBTaGFyZWQgUHJlbWlzZXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KZm9yIHRoZSB0cmFuc21pc3Npb24sIG1vbml0b3JpbmcsIG9wZXJhdGlvbiwgYW5kIHRyYW5zZm9ybWF0aW9uIG9mIGVsZWN0cmljaXR5IGFuZCBmb3IgY29tbXVuaWNhdGlvbnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAsXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIGFzIG1vcmUgcGFydGljdWxhcmx5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGRlc2NyaWJlZCBvbiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgRXhoaWJpdCBEfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgICh0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBTaGFyZWQgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NFxsb2NoXGYwICwgYW5kIHRvZ2V0aGVyIHdpdGggdGhlIFNoYXJlZCBQcmVtaXNlcywgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGNvbGxlY3RpdmVseSwgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBTaGFyZWQgUHJlbWlzZXMgYW5kIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgKS59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTgge1wqXGJrbWtlbmQgX0hsazQwMTAwMjgwfQ0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBHfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IC5cdGFiIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEhhcmRpbiBTb2xhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGhhcyBhZ3JlZWQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHRvIGFzc2lnbiB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCkhhcmRpbiBTb2xhciBJSSBhbmQgSGFyZGluIFNvbGFyIElJSSAoYW5kIGVhY2ggb2YgSGFyXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgZGluIElJIGFuZCBIYXJkaW4gSUlJIGhhcyBhZ3JlZWQgdG8gYXNzaWduIHRvIHRoZSBvdGhlcil9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQosIG9uIHRoZSB0ZXJtcyBhbmQgY29uZGl0aW9ucyBzZXQgZm9ydGggaGVyZWluLCAoaSkgYW4gdW5kaXZpZGVkIHRlbmFudHMtaW4tY29tbW9uIGludGVyZXN0IGluIHRoZSBTaGFyZWQgUHJlbWlzZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgaW4gd2hpY2ggaXQgb3ducyBhbiBpbnRlcmVzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICwgYW5kIChpaSkgYW4gdW5kaXZpZGVkIHRlbmFudHMtaW4tY29tbW9uIGludGVyZXN0IGluIHRoZVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBTaGFyZWQgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KIGluIHdoaWNoIGl0IG93bnMgYW4gaW50ZXJlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMzMFxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYwXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxhZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBIfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IC5cdGFiIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgVGhlIENvLVRlbmFudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDcyMjc0NiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgaGF2ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBvYnRhaW5lZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBhbmQvb3Igd2lsbCBvYnRhaW4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgY2VydGFpbiBtdWx0aS1wdXJwb3NlIGVhc2VtZW50cyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDcyMjc0NiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCB3aGljaCBpbmNsdWRlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHRoZSB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzIyNzQ2IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHJpZ2h0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIG9mIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzIyNzQ2IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgZWFjaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBDby1UZW5hbnQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ3MjI3NDYgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgaG9sZGluZyBzdWNoIGludGVyZXN0IHRvIGNvbnN0cnVjdCBhbmQgbWFpbnRhaW4gDQp9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgY29sbGVjdGlvbiBmYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ3MjI3NDYgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIGZvciBtb25pdG9yXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgaW5nIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMDgzMDkzMiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ3MjI3NDYgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgUHJvamVjdHMgYW5kIGNvbm5lY3Rpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTA4MzA5MzIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ3MjI3NDYgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpQcm9qZWN0cyB0byB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgcHVyc3VhbnQgdG8gc3VjaCBlYXNlbWVudHMgKHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEVhc2VtZW50c317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCApLg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxhZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBJfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IC5cdGFiIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgRWFjaCBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGhhcyB9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBhZ3JlZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQogdG8gYXNzaWduIHRvIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGVhY2ggb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIG90aGVyIENvLVRlbmFudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgLCBvbiB0aGUgdGVybXMgYW5kIGNvbmRpdGlvbnMgc2V0IGZvcnRoIGhlcmVpbiwgYSBzZXBhcmF0ZSBpbnRlcmVzdCBpblxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBjZXJ0YWluIH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgcG9ydGlvbnMgb2YgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBFYXNlbWVudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCiwgYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIG5lY2Vzc2FyeSBmb3Igc3VjaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBDby1UZW5hbnRcaGljaFxmMCBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHMgUHJvamVjdC59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEp9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggLlx0YWIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgVGhlIENvLVRlbmFudHMgbm93IGRlc2lyZSB0byBzZXQgZm9ydGggaGVyZWluIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgaXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQogcmlnaHRzIGFuZCBvYmxpZ2F0aW9ucyB3aXRoIHJlc3BlY3QgdG8gdGhlIFNoYXJlZCBQcmVtaXNlcyBhbmQgRmFjaWxpdGllcyBhbmQgdGhlIEVhc2VtZW50cywgYW5kIHRoZSBjb3N0cywgdXNlIGFuZCBtYWludGVcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBuYW5jZSB0aGVyZW9mLn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgS317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCAuXHRhYiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANClRoZSBDby1UZW5hbnRzIGRlc2lyZSB0byBlbmdhZ2UgdGhlIENvLVRlbmFuY3kgTWFuYWdlciB0byBwcm92aWRlIGRheS10by1kYXksIHJvdXRpbmUgb3BlcmF0aW9uIGFuZCBtYWludGVuYW5jZSBzZXJ2aWNlIHRvIHRoZSBDby1UZW5hbnRzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGZvciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCB0aGUgU2hhcmVkIFByZW1pc2VzIGFuZCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgYW5kIH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBDby1UZW5hbmN5IE1hbmFnZXIgZGVzaXJlcyB0byBwcm92aWRlIHN1Y2ggc2VydmljZXMgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpmb3IgdGhlIENvLVRlbmFudHMgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZSB0ZXJtcyBoZXJlb2YufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpOT1csIFRIRVJFRk9SRSwgaW4gY29uc2lkZXJhdGlvbiBvZiB0aGUgZm9yZWdvaW5nIHJlY2l0YWxzLCB0aGUgbXV0dWFsIHByb21pc2VzIGNvbnRhaW5lZCBoZXJlaW4sIGFuZCBmb3Igb3RoZXIgZ29vZCBhbmQgdmFsdWFibGUgY29uc2lkZXJhdGlvbiwgdGhlIHJlY2VpcHQgYW5kIGFkZXF1YWN5IG9mIHdoaWNoIGFyZSBoZXJlYnkgYWNrbm93bGVkZ1xoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KZWQgYnkgdGhlIENvLVRlbmFudHMgYW5kIHRoZSBDby1UZW5hbmN5IE1hbmFnZXIsIHRoZSBDby1UZW5hbnRzIGFuZCB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIGFncmVlIGFzIGZvbGxvd3M6fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWYxMDEzMzg5Mjd9e1wqXGJrbWtzdGFydCBfUmVmNDgwMzUyMzh9e1wqXGJrbWtzdGFydCBfVG9jNjAxMzU0Mjh9e1wqXGJrbWtlbmQgX1JlZjEwMTMzODkyN317XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjU5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGJcY2Fwc1xkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQpcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCBBcnRpY2xlIDFcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyNTlccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDcyMFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGJcY2Fwc1xmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIHtcKlxia21rc3RhcnQgX1JlZjUwNjcwODA1fVNIQVJFRCB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEzNTExODM2IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBQUkVNSVNFU317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIHtcKlxia21rZW5kIF9SZWY0ODAzNTIzOH17XCpcYmtta2VuZCBfVG9jNjAxMzU0Mjh9e1wqXGJrbWtlbmQgX1JlZjUwNjcwODA1fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWYxMDI1NDUwNjJ9e1wqXGJrbWtzdGFydCBfUmVmNDgwMzUyMzl9e1wqXGJrbWtzdGFydCBfUmVmNDgwMzc0MjN9e1wqXGJrbWtzdGFydCBfVG9jNjAxMzU0Mjl9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTM1MTE4MzYgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIDEuMQ0KXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMjYxXHFsIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM4XGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTM1MTE4MzYgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIENvbnZleWFuY2Ugb2YgSW50ZXJlc3RzIGluIFNoYXJlZCBQcmVtaXNlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTM1MTE4MzYge1wqXGJrbWtlbmQgX1JlZjEwMjU0NTA2Mn0ue1wqXGJrbWtlbmQgX1JlZjQ4MDM1MjM5fXtcKlxia21rZW5kIF9SZWY0ODAzNzQyM317XCpcYmtta2VuZCBfVG9jNjAxMzU0Mjl9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1MjQwfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYxMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMzUxMTgzNiBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgKGEpXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMjYzXHFsIFxmaTE0NDBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgyMTYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM4XGlsdmwyXG91dGxpbmVsZXZlbDJcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTM1MTE4MzYgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIE9uIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIENvbnRyYWN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGRiY2hcYWYxMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMzUxMTgzNiBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgIERhdGUsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgSGFyZGluIFNvbGFyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGRiY2hcYWYxMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMzUxMTgzNiBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgIHNoYWxsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgZ3JhbnQgSGFyZGluIFNvbGFyIElJIGFuZCBIYXJkaW4gU29sYXIgSUlJfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMzUxMTgzNiBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgIGFuXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwICBVbmRpdmlkZWQgSW50ZXJlc3QgaW4gdGhlIFNoYXJlZCBQcmVtaXNlcyBlcXVhbCB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgSGFyZGluIFNvbGFyIElJIGFuZCBIYXJkaW4gU29sYXIgSUlJXGhpY2hcZjAgXHJxdW90ZSBcbG9jaFxmMCBzIHJlc3BlY3RpdmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMzUxMTgzNiANClxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBCYXNlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEzNTExODM2IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBQcm8tUmF0YSBTaGFyZS4gIH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgU2ltdWx0YW5lb3VzIHdpdGggdGhlIGNvbnZleWFuY2UgZGVzY3JpYmVkIGFib3ZlLCBIYXJkaW4gU29sYXIgSX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBJfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTM1MTE4MzYgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxMVxpbnNyc2lkMTQyOTE5NDQgDQpcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgYW5kIEhhcmRpbiBTb2xhciBJSUkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTM1MTE4MzYgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIHNoYWxsIHByb21wdGx5IHBheSB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIEhhcmRpbiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIFNvbGFyfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGRiY2hcYWYxMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMzUxMTgzNiBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgIGFueSBhbW91bnRcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgcyBkdWUgcHVyc3VhbnQgdG8gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTM1MTE4MzYgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIFNlY3Rpb24gDQp9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCAgUkVGIF9SZWY0ODAzNTI4OCBcXHIgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0IHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNDAwMzgwMDMwMDAzMzAwMzUwMDMyMDAzODAwMzgwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQ3OTQyNjIgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIDYuMihhKX19fVxzZWN0ZCBcbHRyc2VjdFxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MjQxOTU1IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCAgYW5kIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIFNlY3Rpb259DQp7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDQgDQpcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgIFJFRiBfUmVmNDgwNjgzNjggXFxyIFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzYwMDM4MDAzMzAwMzYwMDM4MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDc5NDI2MiBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgNi4yKGIpfX19DQpcc2VjdGQgXGx0cnNlY3RccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEzNTExODM2IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCANCiB3aXRoIHJlc3BlY3QgdG8gdGhlIFVuZGl2aWRlZCBJbnRlcmVzdHMgaW4gdGhlIFNoYXJlZCBQcmVtaXNlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIC4gIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFV9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTA2MzQ2MjEgcG9uIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IGl0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTA2MzQ2MjEgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KYWNoaWV2ZW1lbnQgb2YgdGhlIGNvbmRpdGlvbnMgZGV0YWlsZWQgaW4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCAgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgIFJFRiBfUmVmNDgwNjgzNjggXFxyIA0KXFxoXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDM2MDAzODAwMzMwMDM2MDAzODAwMDAwMH19DQp9e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDc5NDI2MiBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgNi4yKGIpfX19XHNlY3RkIFxsdHJzZWN0XHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmogew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCANCkhhcmRpbiBTb2xhciBJfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBJSX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgIHNoYWxsIHByb21wdGx5IHBheSB0byBIYXJkaW4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBTb2xhciBhbmQgSGFyZGluIFNvbGFyIElJIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgYW55IGFtb3VudHMgZHVlIHB1cnN1YW50IHRvIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgIFJFRiBfUmVmNDgwNjgzNjggXFxyIFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzYwMDM4MDAzMzAwMzYwMDM4MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDc5NDI2MiBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgNi4yKGIpfX19DQpcc2VjdGQgXGx0cnNlY3RccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIA0KIHdpdGggcmVzcGVjdCB0byB0aGUgVW5kaXZpZGVkIEludGVyZXN0cyBpbiB0aGUgU2hhcmVkIFByZW1pc2VzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgcHJldmlvdXNseX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTM1MTE4MzYgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwICBjb252ZXllZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIC4gIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBPbiB0aGUgQ29udHJhY3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMzUxMTgzNiBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgIFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBEYXRlfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwICwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgSGFyZGluIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBTb2xhcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEzNTExODM2IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCAgd2lsbCBleGVjdXRlIGFuZCBkZWxpdmVyIHRvIH0NCntccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBlYWNoIG9mIEhhcmRpbiBTb2xhciBJSSBhbmQgSGFyZGluIFNvbGFyIElJSX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgICgxfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTM1MTE4MzYgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwICkgYSBUZW5hbnQtaW4tQ29tbW9uIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBRdWl0Y2xhaW19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMzUxMTgzNiBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgIERlZWQgaW4gdGhlIGZvcm0gYXR0YWNoZWQgaGVyZXRvIGFzIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTM1MTE4MzYgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIEV4aGliaXQgQi0yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTM1MTE4MzYgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIFxoaWNoXGYwICAodGhlIFwnOTN9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcdWxcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgUXVpdGNsYWltfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTM1MTE4MzYgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwICBEZWVkfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxMVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCApLCBhbmQgKH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCAyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTM1MTE4MzYgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwICkgdHJhbnNmZXIgdGF4IGRlY2xhcmF0aW9ucywgb3duZXINClxoaWNoXGYwIFxycXVvdGUgXGxvY2hcZjAgcyBhZmZpZGF2aXRzLCBBTFRBXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwICBzdGF0ZW1lbnRzIGFuZCBzdWNoIG90aGVyIHJlYXNvbmFibGUgYW5kIGN1c3RvbWFyeSB0cmFuc2ZlciBkb2N1bWVudHMgcmVxdWlyZWQgaW4gY29ubmVjdGlvbiB3aXRoIHRoZSB0cmFuc2ZlciBvZiBhIHJlYWwgcHJvcGVydHkgaW50ZXJlc3Qgb3IgdGhhdCB3aWxsIGZhY2lsaXRhdGUgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIEhhcmRpbiBTb2xhciBJSSBhbmQgSGFyZGluIFNvbGFyIElJSVxoaWNoXGYwIFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTM1MTE4MzYgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwICBhYmlsaXR5IHRvIG9idGFpbiBvd25lcnNcaGljaFxmMCBccnF1b3RlIA0KXGxvY2hcZjAgIGFuZCBsZW5kZXJzXGhpY2hcZjAgXHJxdW90ZSBcbG9jaFxmMCAgdGl0bGUgaW5zdXJhbmNcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgZSB3aXRoIHJlc3BlY3QgdG8gdGhlIFNoYXJlZCBQcmVtaXNlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NCAsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGRiY2hcYWYxMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMzUxMTgzNiBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgIHRvIHRoZSBleHRlbnQgc3VjaCBkb2N1bWVudHMgZG8gbm90IGRlY3JlYXNlIGFueSByaWdodHMgb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTAwNTQ3OSBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgYW55IH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMzUxMTgzNiBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgDQogaGVyZXVuZGVyIGFuZCBkbyBub3QgaW5jcmVhc2UgdGhlIG9ibGlnYXRpb25zIG9mIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEwMDU0NzkgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIGFueSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDQgDQpcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTM1MTE4MzYgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwICBoZXJldW5kZXIsIGFsbCBvZiB3aGljaCBzaGFsbCBiZSBwcmVwYXJlZCBhbmQgcGFpZCBmb3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgLCBhcyBhcHBsaWNhYmxlLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEzNTExODM2IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCAgYXQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGRiY2hcYWYxMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQzMjMyNjQzIFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCByZWxcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgZXZhbnQgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGRiY2hcYWYxMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQzMjMyNjQzIFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBKb2luaW5nIENvLVRlbmFudFxoaWNoXGYwIFxycXVvdGUgXGxvY2hcZjAgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEzNTExODM2IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCAgZXhwZW5zZS4NCntcKlxia21rZW5kIF9SZWY0ODAzNTI0MH0gDQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1MjQxfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYxMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ3MzQ3NDA3IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCAoYilcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDczNDc0MDcgDQpcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgRWFjaCBDby1UZW5hbnQgc2hhbGwgb3duIGFuZCBob2xkIGl0cyBVbmRpdmlkZWQgSW50ZXJlc3QgaW4gdGhlIFNoYXJlZCBQcmVtaXNlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE2MjU3OTM3IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCANCiBqb2ludGx5LCBhcyB0ZW5hbnRzLWluLWNvbW1vbiwgYW5kIHdpdGhvdXQgcmlnaHRzIG9mIHN1cnZpdm9yc2hpcCwgc3ViamVjdCB0byB0aGUgdGVybXMgb2YgdGhpcyBBZ3JlZW1lbnQsIHRvIHRoZSBmdWxsIGV4dGVudCBuZWNlc3NhcnkgZm9yIFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCANCmVhY2ggUHJvamVjdCB0byBvcGVyYXRlIGF0IGl0cyBQZXJtaXR0ZWQgQ2FwYWNpdHkuICBXaXRob3V0IGxpbWl0aW5nIHRoZSBnZW5lcmFsaXR5IG9mIHRoZSBmb3JlZ29pbmcsIHRoZSB1bmRpdmlkZWQgam9pbnQgcmlnaHRzIG9mIGVhY2ggQ28tVGVuYW50IHNoYWxsIGluY2x1ZGU6IHRoZSBqb2ludCB1c2Ugb2YgdGhlIFNoYXJlZCBQcmVtaXNlcyB0byB0aGUgZnVsbCBleHRlbnQgbmVjZXNzYXJ5IGZvciBlYWNoIFByb2plY3QgdG8gb3BlcmF0ZQ0KXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwICBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgYXQgaXRzIFBlcm1pdHRlZCBDYXBhY2l0eSwgc3ViamVjdCB0byB0aGUgdGVybXMgb2YgdGhpcyBBZ3JlZW1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IC59e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE2MjU3OTM3IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCAgIEVhY2ggQ28tVGVuYW50IHNoYWxsIGhhdmUgdGhlIHJpZ2h0IHRvIG93biwgaG9sZCwgYW5kIHV0aWxpemUgaXRzIFVuZGl2aWRlZCBJbnRlcmVzdCBpbiB0aGUgU2hhcmVkIFByZW1pc2VzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGRiY2hcYWYxMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ3MzQ3NDA3IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCAgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZSB0ZXJtcyBvZiB0aGlzIEFncmVlbWVudC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxMVxpbnNyc2lkMTQyOTE5NDQge1wqXGJrbWtlbmQgX1JlZjQ4MDM1MjQxfQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTI0M317XCpcYmtta3N0YXJ0IF9SZWY0ODAzNzQyNH17XCpcYmtta3N0YXJ0IF9Ub2M2MDEzNTQzMH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYxIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ3MzQ3NDA3IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCAxLjJcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczI2MVxxbCBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDczNDc0MDcgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIE1haW50ZW5hbmNlIG9mIHRoZSBTaGFyZWQgUHJlbWlzXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIGVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGRiY2hcYWYxMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ3MzQ3NDA3IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCAuICBFZmZlY3RpdmUgYXMgb2YgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgQ29tbWVuY2VtZW50IH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgRGF0ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDczNDc0MDcgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIA0KLCB0aGUgQ28tVGVuYW50cyBoZXJlYnkgZW5nYWdlIHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgdG8sIGFuZCB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIGFncmVlcyB0byBwZXJmb3JtIGFuZCBwcm92aWRlIHdpdGggcmVzcGVjdCB0byB0aGUgU2hhcmVkIFByZW1pc2VzIHByb2Zlc3Npb25hbCwgc3VwZXJ2aXNvcnksIG1hbmFnZXJpYWwsIGFkbWluaXN0cmF0aXZlIGFuZCBvcGVyYVxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCANCnRpb25hbCByZXNwb25zaWJpbGl0aWVzIGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgc3RhbmRhcmRzIHNldCBmb3J0aCBpbiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGRiY2hcYWYxMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ3MzQ3NDA3IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgICBSRUYgX1JlZjQ4MDM1MzA2IFxcdyBcXGggXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NCB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNDAwMzgwMDMwMDAzMzAwMzUwMDMzMDAzMDAwMzYwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGNmMVxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDc5NDI2MlxjaGFycnNpZDc5NDI2MiANClxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCA3LjN9fX1cc2VjdGQgXGx0cnNlY3RccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggLn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzM0NzQwNyBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgICBUaGUgQ28tVGVuYW5jeSBNYW5hZ2VyXGhpY2hcZjAgXHJxdW90ZSBcbG9jaFxmMCBzIHJlc3BvbnNpYmlsaXRpZXMgaW5jbHVkZSB0aG9zZSBsaXN0ZWQgaW4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGRiY2hcYWYxMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ3MzQ3NDA3IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBFeGhpYml0IEN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ3MzQ3NDA3IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBcaGljaFxmMCAgKHRoZSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGRiY2hcYWYxMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ3MzQ3NDA3IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBTaGFyZWQgUHJlbWlzZXMgTWFpbnRlbmFuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ3MzQ3NDA3IFxsb2NoXGFmMFxkYmNoXGFmMTFcaGljaFxmMCBcJzk0XGxvY2hcZjAgKS4gIFRoZSBjb3N0cyBhbmQgDQpcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgZXhwZW5zZXMgaW5jdXJyZWQgYnkgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBpbiBwZXJmb3JtaW5nIHRoZSBTaGFyZWQgUHJlbWlzZXMgTWFpbnRlbmFuY2Ugc2hhbGwgYmUgaW5jdXJyZWQgb3IgcmVpbWJ1cnNlZCBhbmQgc2hhcmVkIGJ5IHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxMVxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIA0KT3BlcmF0aW9uYWwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzM0NzQwNyBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgQ28tVGVuYW50cyBhY2NvcmRpbmcgdG8gZWFjaCBDby1UZW5hbnRcaGljaFxmMCBccnF1b3RlIFxsb2NoXGYwIHMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0IA0KXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIE9wZXJhdGlvbmFsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDczNDc0MDcgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIFByby1SYXRhIFNoYXJlLntcKlxia21rZW5kIF9SZWY0ODAzNTI0M317XCpcYmtta2VuZCBfUmVmNDgwMzc0MjR9e1wqXGJrbWtlbmQgX1RvYzYwMTM1NDMwfQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTI0NH17XCpcYmtta3N0YXJ0IF9SZWY0ODAzNzQyNX17XCpcYmtta3N0YXJ0IF9Ub2M2MDEzNTQzMX17XCpcYmtta3N0YXJ0IF9SZWYxMDEzMzkyMzB9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzM0NzQwNyBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgMS4zDQpcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDczNDc0MDcgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIEFkZGl0aW9uYWwgUHJlbWlzZXMgUmlnaHRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzM0NzQwNyAue1wqXGJrbWtlbmQgX1JlZjQ4MDM1MjQ0fQ0Ke1wqXGJrbWtlbmQgX1JlZjQ4MDM3NDI1fXtcKlxia21rZW5kIF9Ub2M2MDEzNTQzMX0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzUyNDV9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDczNDc0MDcgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIChhKVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczI2M1xxbCBcZmkxNDQwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MjE2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxpbHZsMlxvdXRsaW5lbGV2ZWwyXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDczNDc0MDcgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIElmIGEgQ29caGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgXGhpY2hcZjAgLVRlbmFudCBkZXRlcm1pbmVzIHRoYXQgYWRkaXRpb25hbCBwcmVtaXNlcyBvciByaWdodHMgaW4gcHJlbWlzZXMgKFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDczNDc0MDcgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIEFkZGl0aW9uYWwgUHJlbWlzZXMgUmlnaHRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzM0NzQwNyBcbG9jaFxhZjBcZGJjaFxhZjExXGhpY2hcZjAgXCc5NFxsb2NoXGYwIA0KKSBhcmUgcmVxdWlyZWQgZm9yIHRoZSBpbnRlcmNvbm5lY3Rpb24sIGNvbnN0cnVjdGlvbiwgbWFpbnRlbmFuY2Ugb3Igb3BlcmF0aW9uIG9mIGl0cyBQcm9qZWN0LCBzdWNoIENvLVRlbmFudCByZXF1aXJpbmcgc3VjaCBBZGRpdGlvbmFsIFByZW1pc2VzIFJpZ2h0cyBzaGFsbCBoYXZcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgDQplIHRoZSByZXNwb25zaWJpbGl0eSBmb3IgcHJvY3VyaW5nIG9yIG90aGVyd2lzZSBhY3F1aXJpbmcgc3VjaCBBZGRpdGlvbmFsIFByZW1pc2VzIFJpZ2h0cywgYXQgc3VjaCBDby1UZW5hbnRcaGljaFxmMCBccnF1b3RlIFxsb2NoXGYwIHMgc29sZSBjb3N0IGFuZCBleHBlbnNlLCB1bmxlc3Mgb3RoZXJ3aXNlIHByb3ZpZGVkIGluIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzM0NzQwNyBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgU2VjdGlvbnMgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgICBSRUYgX1JlZjQ4MDM1MjQ2IFxcdyBcXGggXFwNCiogTUVSR0VGT1JNQVQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0IHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNDAwMzgwMDMwMDAzMzAwMzUwMDMyMDAzNDAwMzYwMDAwMDB9fX17XGZsZHJzbHQgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcY2YxXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkNzk0MjYyXGNoYXJyc2lkNzk0MjYyIFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCAxLjMoYil9fX1cc2VjdGQgXGx0cnNlY3RccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgIG9yIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDQgDQpcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgICBSRUYgX1JlZjQ4MDM1MjQ3IFxcdyBcXGggXFwqIE1caGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM1MDAzMjAwMzQwMDM3MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxjZjFcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQ3OTQyNjJcY2hhcnJzaWQ3OTQyNjIgDQpcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgMS4zKGMpfX19XHNlY3RkIFxsdHJzZWN0XHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IC59ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDczNDc0MDcge1wqXGJrbWtlbmQgX1JlZjQ4MDM1MjQ1fVxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGRiY2hcYWYxMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ3MzQ3NDA3IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTI0Nn17XCpcYmtta3N0YXJ0IF9SZWY1MDcxNTIwOH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzM0NzQwNyBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgKGIpXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDczNDc0MDcgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIElmIGEgQ28tVGVuYW50IGRldGVybWluZXMgdGhhdCBzdWNoIEFkZGl0aW9uYWwgUHJlbWlzZXMgUmlnaHRzIGFyZSByZXF1aXJlZCBmb3IgaXRzIFByb2plY3QsIHN1Y2ggQ28tVGVuYW50IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBzaGFsbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDczNDc0MDcgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIA0KIGdpdmUgd3JpdHRlbiBub3RpY2UgdG8gdGhlIG90aGVyIENvLVRlbmFudChzKSBvZiBzdWNoIHJlcXVpcmVtZW50LCB3aXRoIGEgZGV0YWlsZWQgZXhwbGFuYXRpb24gc2V0dGluZyBmb3J0aCB3aHkgc3VjaCBBXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIGRkaXRpb25hbCBQcmVtaXNlcyBSaWdodHMgYXJlIG5lZWRlZC4gIFRoZSBDby1UZW5hbnQocykgcmVjZWl2aW5nIHN1Y2ggbm90aWNlIHNoYWxsIGhhdmUgfXtccnRsY2hcZmNzMSANClxhYlxhZjAgXGx0cmNoXGZjczAgXGJcZGJjaFxhZjExXGluc3JzaWQ2NjIwNjk5IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBbUkVEQUNURURdfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzM0NzQwNyBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgDQogZGF5cyBmb2xsb3dpbmcgcmVjZWlwdCBvZiBzdWNoIG5vdGljZSB0byBkZXRlcm1pbmUgaWYgc3VjaCBBZGRpdGlvbmFsIFByZW1pc2VzIFJpZ2h0cyBhcmUgYWxzbyBuZWVkZWQgZm9yIGl0cyBQcm9qZWN0IGFuZCB0byBzbyBub3RpZnkgdGhlIHJlcXVlc3RpbmcgQ28tVGVuXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIA0KYW50IGluIHdyaXRpbmcgb2YgaXRzIGVsZWN0aW9uIHRvIHBhcnRpY2lwYXRlIGluIHN1Y2ggQWRkaXRpb25hbCBQcmVtaXNlcyBSaWdodHMuICBGYWlsdXJlIHRvIG5vdGlmeSB0aGUgcmVxdWVzdGluZyBDby1UZW5hbnQgb2YgaXRzIGVsZWN0aW9uIHRvIHBhcnRpY2lwYXRlIGluIHRoZSBhY3F1aXNpdGlvbiBvZiBzdWNoIEFkZGl0aW9uYWwgUHJlbWlzZXMgUmlnaHRzIHdpdGhpbiB9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgDQpcYlxkYmNoXGFmMTFcaW5zcnNpZDY2MjA2OTkgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIFtSRURBQ1RFRF19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ3MzQ3NDA3IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCAgZGF5cyBhZnRlciByZWNlaXZpbmcgc3VjaCBuXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIA0Kb3RpY2Ugc2hhbGwgYmUgZGVlbWVkIGFuIGVsZWN0aW9uIG5vdCB0byBwYXJ0aWNpcGF0ZS4gIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NCANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDczNDc0MDcgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIChjKVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzM0NzQwNyBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgDQpBbnkgQWRkaXRpb25hbCBQcmVtaXNlcyBSaWdodHMgbmVlZGVkIGJ5IG9uZSBvciBtb3JlLCBidXQgbm90IGFsbCwgb2YgdGhlIENvLVRlbmFudHMgbWF5IGJlIGFjcXVpcmVkIGFuZCBoZWxkIGluIHRoZSBuYW1lIG9mIHN1Y2ggaW5kaXZpZHVhbCBDby1UZW5hbnQgYXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBwYXJ0IG9mIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzM0NzQwNyBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgc3VjaCBDby1UZW5hbnRcaGljaFxmMCBccnF1b3RlIFxsb2NoXGYwIHMgU2VwYXJhdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBQcm9qZWN0fXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ3MzQ3NDA3IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCAgb3IgaVxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBuIHRoZSBuYW1lIG9mIHN1Y2ggQ28tVGVuYW50cyB3aG8gZWxlY3QgdG8gcGFydGljaXBhdGUgaW4gc3VjaCBBZGRpdGlvbmFsIFByZW1pc2VzIFJpZ2h0cyBhcyBzdWNoIENvLVRlbmFudHNcaGljaFxmMCANClxycXVvdGUgXGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgaGFyZWQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCByZW1pc2VzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzM0NzQwNyBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0IHtcKlxia21rc3RhcnQgX0hsazQ4MDY0OTA0fVxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBcaGljaFxmMCAoXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDQwODkwNjIgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIEFkZGl0aW9uYWwgUHJlbWlzZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjExXGhpY2hcZjAgXCc5NFxsb2NoXGYwICkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzM0NzQwNyBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgaGVsZCBpbiB1bmRpdmlkZWQgb3duZXJzaGlwIGludGVyZXN0cyBlcXVhbCB0byBzdWNoIENvLVRlbmFudHNcaGljaFxmMCBccnF1b3RlIA0KXGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgQWRkaXRpb25hbCBQcmVtaXNlcyBvciBGYWNpbGl0aWVzIFByby1SYXRhXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwICBTaGFyZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDczNDc0MDcgLn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0IHtcKlxia21rZW5kIF9SZWY0ODAzNTI0Nn17XCpcYmtta2VuZCBfSGxrNDgwNjQ5MDR9XGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwICAgSWYgYWxsIG9mIHRoZSBDby1UZW5hbnRzIGRldGVybWluZSB0aGF0IHN1Y2ggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzM0NzQwNyANClxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBBZGRpdGlvbmFsIFByZW1pc2VzIFJpZ2h0cyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxMVxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIGFyZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ3MzQ3NDA3IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBuZWVkZWR9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgLCB0aGVuLCB1cG9uIGFjcXVpc2l0aW9uIGJ5IGFsbCBvZiB0aGUgQ28tVGVuYW50cywgc3VjaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ3MzQ3NDA3IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCANCkFkZGl0aW9uYWwgUHJlbWlzZXMgUmlnaHRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCAgc2hhbGwgYmUgY29uc2lkZXJlZCBTaGFyZWQgUHJlbWlzZXMgZm9yIGFsbCBwdXJwb3NlcyB1bmRlciB0aGlzIEFncmVlbWVudC57XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTI0N317XCpcYmtta2VuZCBfUmVmNTA3MTUyMDh9DQpccGFyIHtcKlxia21rZW5kIF9SZWY0ODAzNTI0N317XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMzIzMjY0MyBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgKGQpXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQzMjMyNjQzIA0KXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIFVwb24gYWNcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgcXVpc2l0aW9uIG9mIGFueSBBZGRpdGlvbmFsIFByZW1pc2VzIFJpZ2h0cyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDMyMzI2NDMgdG8gYmUgdXNlZCBieSB0d28gb3IgbW9yZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzg3NjkwMCBDby1UZW5hbnRzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgdGhhdCBiZWNvbWUgQWRkaXRpb25hbCBQcmVtaXNlcyBvciBTaGFyZWQgUHJlbWlzZXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGRiY2hcYWYxMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQzMjMyNjQzIFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBwdXJzdWFudCB0byB0aGlzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDMyMzI2NDMgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIFNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCAgUkVGIF9SZWY0ODAzNTI0NCBcXHcgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NCB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNDAwMzgwMDMwMDAzMzAwMzUwMDMyMDAzNDAwMzQwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkNzk0MjYyIFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCAxLjN9fX0NClxzZWN0ZCBcbHRyc2VjdFxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTM3MjM3MTEgLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMzIzMjY0MyBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgIGEgY29weSBvZiB0aGUgYWdyZWVtZW50KHMpIHVuZGVybHlpbmcgdGhlIEFkZGl0aW9uYWwgUHJlbWlzZXMgUmlnaFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCB0cyBzaGFsbCBiZSBkZWxpdmVyZWQgdG8gdGhlIENvLVRlbmFuY3kgTWFuYWdlci59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjkzMTA5MSBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgDQpGb2xsb3dpbmcgZGVsaXZlcnkgdG8gdGhlIENvLVRlbmFuY3kgTWFuYWdlciwgdGhlIENvLVRlbmFudHMgaGVyZWJ5IGVuZ2FnZSB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIHRvLCBhbmQgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBhZ3JlZXMgdG8gcGVyZm9ybSBhbmQgcHJvdmlkZSB3aXRoIHJlc3BlY3QgdG8gc3VjaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyOTMxMDkxIFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBBZGRpdGlvbmFsIFByZW1pc2VzIG9yIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyOTMxMDkxIFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBTaGENClxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCByZWQgUHJlbWlzZXMgcHJvZmVzc2lvbmFsLCBzdXBlcnZpc29yeSwgbWFuYWdlcmlhbCwgYWRtaW5pc3RyYXRpdmUgYW5kIG9wZXJhdGlvbmFsIHJlc3BvbnNpYmlsaXRpZXMgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZSBzdGFuZGFyZHMgc2V0IGZvcnRoIGluIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyOTMxMDkxIA0KXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIFNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyOTMxMDkxIFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCAgIFJFRiBfUmVmNDgwMzUzMDYgXFx3IFxcaCBcXCogTUVSR0VGT1JNQVQgfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXHVsXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjkzMTA5MSB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM1MDAzMzAwMzAwMDM2MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGNmMVxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDc5NDI2MlxjaGFycnNpZDc5NDI2MiBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgNy4zfX19XHNlY3RkIFxsdHJzZWN0XHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyOTMxMDkxIC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjkzMTA5MSBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgICBUaGUgQ28tVGVuYW5jeSBNYW5hZ2VyXGhpY2hcZjAgXHJxdW90ZSBcbG9jaFxmMCANCnMgcmVzcG9uc2liaWxpdGllcyBhbmQgdGhlIGNvXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIHN0cyBhbmQgZXhwZW5zZXMgdGhlcmVvZiB3aXRoIHJlc3BlY3QgdG8gYW55IG5ldyBTaGFyZWQgUHJlbWlzZXMgc2hhbGwgYmUgYXMgc2V0IGZvcnRoIGluIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyOTMxMDkxIFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCANClNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyOTMxMDkxIFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCAgUkVGIF9SZWY0ODAzNTI0MyBcXHcgXFxoICBcXCogTUVSR0VGT1JNQVQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI5MzEwOTEgDQp7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM1MDAzMjAwMzQwMDMzMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxkYmNoXGFmMTFcaW5zcnNpZDc5NDI2MiBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgMS4yfX19XHNlY3RkIFxsdHJzZWN0DQpccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyOTMxMDkxIFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCAuICBUaGUgQ28tVGVuYW5jeSBNYW5hZ2VyXGhpY2hcZjAgXHJxdW90ZSBcbG9jaFxmMCANCnMgcmVzcG9uc2liaWxpdGllcyB3aXRoIHJlc3BlY3QgdG8gQWRkaXRpb25hbCBQcmVtaXNlcyBzaGFsbCBpbmNsdWRlIHRoZSBTaGFyZWQgUHJlbWlcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgc2VzIE1haW50ZW5hbmNlLiAgVGhlIGNvc3RzIGFuZCBleHBlbnNlcyBpbmN1cnJlZCBieSB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIGluIHBlcmZvcm1pbmcgdGhlIFNoYXJlZCBQcmVtaXNlcyBNYWludGVuYW5jZSB3aXRoIHJlc3BlY3QgdG8gfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjkzMTA5MSBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgQWRkaXRpb25hbCBQcmVtaXNlcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjkzMTA5MSANClxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBzaGFsbCBiZSBpbmN1cnJlZCBvciByZWltYnVyc2VkIGFuZCBzaGFyZWQgYnkgdGhlIENvLVRlbmFudHMgYWNjb3JkaW5nIHRvIGVhY2ggQ28tVGVuYW50XGhpY2hcZjAgXHJxdW90ZSBcbG9jaFxmMCBzIEFkZGl0aW9caGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgbmFsIFByZW1pc2VzIG9yIEZhY2lsaXRpZXMgUHJvLVJhdGEgU2hhcmUgd2l0aCByZXNwZWN0fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGRiY2hcYWYxMVxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwICB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyOTMxMDkxIFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCAgdGhlIHBhcnRpY3VsYXIgQWRkaXRpb25hbCBQcmVtaXNlcy59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDMyMzI2NDMgDQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjEwMTMzOTExNn17XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTI0OH17XCpcYmtta3N0YXJ0IF9Ub2M2MDEzNTQzMn17XCpcYmtta2VuZCBfUmVmMTAxMzM5MjMwfXtcKlxia21rZW5kIF9SZWYxMDEzMzkxMTZ9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI1OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxiXGNhcHNcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgQXJ0aWNsZSAyXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMjU5XHFjIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHg3MjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxiXGNhcHNcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCB7XCpcYmtta3N0YXJ0IF9SZWY1MDY3MDg4MH1TSEFSRUQgRkFDSUxJVElFUw0Ke1wqXGJrbWtlbmQgX1JlZjQ4MDM1MjQ4fXtcKlxia21rZW5kIF9Ub2M2MDEzNTQzMn17XCpcYmtta2VuZCBfUmVmNTA2NzA4ODB9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjEwMTM0MTAyNH17XCpcYmtta3N0YXJ0IF9Ub2M2MDEzNTQzM317XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYxIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAyLjFcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczI2MVxxbCBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIENvbnZleWFuY2Ugb2YgSW50ZXJlc3RzIGluIFNoYXJlZCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCAuDQp7XCpcYmtta2VuZCBfUmVmMTAxMzQxMDI0fXtcKlxia21rZW5kIF9Ub2M2MDEzNTQzM30NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNTc2MzE5ODV9e1wqXGJrbWtzdGFydCBfUmVmMTAxMzQxMDM3fXtcKlxia21rc3RhcnQgX1JlZjQ4MDM1MjQ5fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMDEwNDk2MiANClxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCAoYSlcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyNjNccWwgXGZpMTQ0MFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHgyMTYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM4XGlsdmwyXG91dGxpbmVsZXZlbDJcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgDQpcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTAxMDQ5NjIgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIEVhY2ggSm9pbmluZyBDby1UZW5hbnQgaGFzIGEgb25lLXRpbWUgb3B0aW9ufXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkNjYyMDY5OSBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDY2MjA2OTkgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIFtSRURBQ1RFRF19ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEwMTA0OTYyIFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCAgdG8gYWNxdWlyZSBhbiBVbmRpdmlkZWQgSW50ZXJlc3QgZXF1YWwgdG9caGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgIHN1Y2ggQ28tVGVuYW50XGhpY2hcZjAgXHJxdW90ZSBcbG9jaFxmMCANCnMgT3BlcmF0aW9uYWwgUHJvLVJhdGEgU2hhcmUgaW4gdGhlIFNoYXJlZCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCAgKGV4Y2x1ZGluZyB0aGUgTyZNIEZhY2lsaXRpZXMgc29sZWx5IGZvciBwdXJwb3NlcyBvZiB0aGlzIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTAxMDQ5NjIgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIFNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NCANClxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCAgUkVGIF9SZWYxMDEzNDEwMjQgXFx3IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzEwMDMwMDAzMTAwMzMwMDM0MDAzMTAwMzAwMDMyMDAzNDAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQ3OTQyNjIgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIDIuMX19fQ0KXHNlY3RkIFxsdHJzZWN0XHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwICwgd2hpY2ggYXJlIGFkZHJlc3NlZCBpbiB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEwMTA0OTYyIFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEwMTA0OTYyIFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCAgUkVGIF9SZWY1NTIxNTczNiBcXHcgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NCANClxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCAgXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEwMTA0OTYyIHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM1MDAzNTAwMzIwMDMxMDAzNTAwMzcwMDMzMDAzNjAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQ3OTQyNjIgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIDIuNn19fQ0KXHNlY3RkIFxsdHJzZWN0XHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwICl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEwMTA0OTYyIFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCAuICBJZiBlXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIGl0aGVyIEpvaW5pbmcgQ28tVGVuYW50IHNlZWtzIHRvIGFjcXVpcmUgYW4gaW50ZXJlc3QgaW4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIHN1Y2h9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMDEwNDk2MiBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgDQogU2hhcmVkIEZhY2lsaXRpZXMsIGl0IHNoYWxsIGRlbGl2ZXIgYSB3cml0dGVuIG5vdGljZSB0byBhbGwgb3RoZXIgQ28tVGVuYW50cyBvZiBzdWNoIEpvaW5pbmcgQ28tVGVuYW50XGhpY2hcZjAgXHJxdW90ZSBcbG9jaFxmMCBzIGludGVudGlvbiB0byBhY3F1aXJlIGFuIFVuZGl2aWRlZCBJbnRlcmVzdCBpbiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgc3VjaH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEwMTA0OTYyIFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCANCiBTaGFyZWQgRmFjaWxpdGllcyBlcXVhbCB0byBzdWNoIEpvaW5pbmdcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgIENvLVRlbmFudFxoaWNoXGYwIFxycXVvdGUgXGxvY2hcZjAgcyBPcGVyYXRpb25hbCBQcm8tUmF0YSBTaGFyZS4gIFVwb24gcmVjZWlwdCBvZiBzdWNoIG5vdGljZSwgSGFyZGluIFNvbGFyIChhbmQsIGlmIGFwcGxpY2FibGUsIGFueSBvdGhlciBDby1UZW5hbnQgdGhhdCBob2xkcyBhbiBVbmRpdmlkZWQgSW50ZXJlc3QgaW4gfQ0Ke1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIHN1Y2h9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMDEwNDk2MiANClxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCAgU2hhcmVkIEZhY2lsaXRpZXMgYXQgc3VjaCB0aW1lKSB3aWxsIGV4ZWN1dGUgYW5kIGRlbGl2ZXIgYSBCaWxsIG9mIFNhbGUgaW4gdGhlIGZvcm0gYXR0YWNoXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIGVkIGFzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEwMDU0NzkgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIA0KRXhoaWJpdCBCLTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMDEwNDk2MiBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgXGhpY2hcZjAgICh0aGUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEwMDU0NzkgDQpcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgQmlsbCBvZiBTYWxlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTAxMDQ5NjIgXGxvY2hcYWYwXGRiY2hcYWYxMVxoaWNoXGYwIFwnOTRcbG9jaFxmMCANCikgcHVyc3VhbnQgdG8gd2hpY2ggSGFyZGluIFNvbGFyIChhbmQsIGlmIGFwcGxpY2FibGUsIHN1Y2ggb3RoZXIgQ28tVGVuYW50IHRoYXQgb3ducyBhbiBVbmRpdmlkZWQgSW50ZXJlc3QgaW4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBzdWNofXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMDEwNDk2MiBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgIFNoYXJlZCBGYWNpbGl0aWVzIGF0IHN1Y2ggdGltZSkgd2lsbCB0cmFuc2ZlciB0byB0aGUgSm9pbmluZyBDby1UZW5hbnQgYW4gVW5kaXZpZGVkIEludGVyZXN0IGluIGFuZCB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgc1xoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCB1Y2h9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMDEwNDk2MiANClxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCAgU2hhcmVkIEZhY2lsaXRpZXMgZXF1YWwgdG8gc3VjaCBKb2luaW5nIENvLVRlbmFudFxoaWNoXGYwIFxycXVvdGUgXGxvY2hcZjAgcyBPcGVyYXRpb25hbCBQcm8tUmF0YSBTaGFyZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NCAue1wqXGJrbWtlbmQgX1JlZjU3NjMxOTg1fQ0KXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwICAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIge1wqXGJrbWtlbmQgX1JlZjEwMTM0MTAzN317XCpcYmtta2VuZCBfUmVmNDgwMzUyNDl9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1MjUwfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChiKVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANCkVhY2ggQ28tVGVuYW50IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IHNoYWxsIGhhdmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgdGhlIHJpZ2h0IHRvIGhvbGQgYW5kIHV0aWxpemUgaXRzIFVuZGl2aWRlZCBJbnRlcmVzdCBpbiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBzdWNofXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgU2hhcmVkIEZhY2lsaXRpZXMsIGpvaW50bHksIGFzIHRlbmFudHMtaW4tY29tbW9uLCBzdWJqfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBlY3QgdG8gdGhlIHRlcm1zIG9mIHRoaXMgQWdyZQ0KZW1lbnQsIHRvIHRoZSBmdWxsIGV4dGVudCBuZWNlc3NhcnkgZm9yIGVhY2ggUHJvamVjdCB0byBvcGVyYXRlIGF0IGl0cyBQZXJtaXR0ZWQgQ2FwYWNpdHkuICBXaXRob3V0IGxpbWl0aW5nIHRoZSBnZW5lcmFsaXR5IG9mIHRoZSBmb3JlZ29pbmcsIHRoZSB0ZW5hbnRzLWluLWNvbW1vbiByaWdodHMgb2YgZWFjaCBDby1UZW5hbnQgc2hhbGwgaW5jbHVkZSB0aGUgam9pbnQgdXNlIG9mIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDQgc3VjaH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgIFNoYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgcmVkIEZhY2lsaXRpZXMgKHdoZXRoZXIgbm93IA0KZXhpc3Rpbmcgb3IgaGVyZWFmdGVyIGNvbnN0cnVjdGVkKSB0byB0aGUgZnVsbCBleHRlbnQgbmVjZXNzYXJ5IGZvciBlYWNoIFByb2plY3QgdG8gb3BlcmF0ZSBhdCBpdHMgUGVybWl0dGVkIENhcGFjaXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MjE1MTMyIC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANCntcKlxia21rZW5kIF9SZWY0ODAzNTI1MH0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmMTAxMzQxMDU4fXtcKlxia21rc3RhcnQgX1RvYzYwMTM1NDM0fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDIuMlx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzMjYxXHFsIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM4XGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgTWFpbnRlbmFuY2Ugb2YgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgU2hhcmVkIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgLiB7XCpcYmtta3N0YXJ0IF9IbGs0MDEwMDMzNX0gRWZmZWN0aXZlIGFzIG9mIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgQ29tbWVuY2VtZW50IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgRGF0ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICwgdGhlIENvLVRlbmFudHMgaGVyZWJ5IGVuZ2FnZSB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIHRvLCBhbmQgdGhlDQogQ28tVGVuYW5jeSBNYW5hZ2VyIGFncmVlcyB0bywgcGVyZm9ybSBhbmQgcHJvdmlkZSB3aXRoIHJlc3BlY3QgdG8gdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgU2hhcmVkIEZhY2lsaXRpZXMgYWxsIHByb2Zlc3Npb25hbCwgc3VwZXJ2aXNvcnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIA0KLCBtYW5hZ2VyaWFsLCBhZG1pbmlzdHJhdGl2ZSBhbmQgb3BlcmF0aW9uYWwgcmVzcG9uc2liaWxpdGllcyBpbiBhY2NvcmRhbmNlIHdpdGggdGhlIHN0YW5kYXJkcyBzZXQgZm9ydGggaW4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCANCiAgUkVGIF9SZWY0ODAzNTMwNiBcXHcgXFxoIFxcKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM1MDAzMzAwMzAwMDM2MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGNmMVxpbnNyc2lkNzk0MjYyXGNoYXJyc2lkNzk0MjYyIDcuM319fVxzZWN0ZCBcbHRyc2VjdFxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICAgVGhlIENvLVRlbmFuY3kgTWFuYWdlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgXHJxdW90ZSBzIHJlc3BvbnNpYmlsaXRpZXMgaW5jbHVkZSB0aG9zZSBzZXQgZm9ydGggaW4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBFeGhpYml0IEN9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgICh0aGUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgU2hhcmVkIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDczNDc0MDcgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIA0KRmFjaWxpdGllcyBNYWludGVuYW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDczNDc0MDcgXGxvY2hcYWYwXGRiY2hcYWYxMVxoaWNoXGYwIFwnOTRcbG9jaFxmMCBcaGljaFxmMCAsIHRvZ2V0aGVyIHdpdGggdGhlIFNoYXJlZCBQcmVtaXNlcyBNYWludGVuYW5jZSwgdGhlIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDczNDc0MDcgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIFNoYXJlZCBNYWludGVuYW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDczNDc0MDcgXGxvY2hcYWYwXGRiY2hcYWYxMVxoaWNoXGYwIFwnOTRcbG9jaFxmMCApLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyNDQ5MzUyICAge1wqXGJrbWtlbmQgX0hsazQwMTAwMzM1fVRoZSBjb3N0cyBhbmQgZXhwZW5zZXMgb2YgdGhlIFNoYXJlZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBGYWNpbGl0aWVzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjQ0OTM1MiANCk1haW50ZW5hbmNlIHNoYWxsIGJlIGluY3VycmVkIG9yIHJlaW1idXJzZWQgYW5kIHNoYXJlZCBieSB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgT3BlcmF0aW9uYWwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyNDQ5MzUyIENvLVRlbmFudHMgaW4gYWNjb3JkYW5jZSB3aXRoIGVhY2ggQ28tVGVuYW50XHJxdW90ZSBzIH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgT3BlcmF0aW9uYWwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyNDQ5MzUyIFByby1SYXRhIFNoYXJlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgDQp7XCpcYmtta2VuZCBfUmVmMTAxMzQxMDU4fXtcKlxia21rZW5kIF9Ub2M2MDEzNTQzNH0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmMTAxMzM5Mzg0fXtcKlxia21rc3RhcnQgX1RvYzYwMTM1NDM1fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMi4zXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgUmVwbGFjZW1lbnQgb2YgQ29tcG9uZW50cyBvZiBTaGFyZWQgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgLntcKlxia21rZW5kIF9SZWYxMDEzMzkzODR9e1wqXGJrbWtlbmQgX1RvYzYwMTM1NDM1fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTI1Mn17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoYSlcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyNjNccWwgXGZpMTQ0MFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDIxNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcaWx2bDJcb3V0bGluZWxldmVsMlxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IFRoZSBhcHBsaWNhYmxlIENvLVRlbmFudHMgaG9sZGluZyBVbmRpdmlkZWQgSW50DQplcmVzdHMgaW4gdGhlIFNoYXJlZCBGYWNpbGl0aWVzIGhlcmVieSBhdXRob3JpemUgdGhlIENvLVRlbmFuY3kgTWFuYWdlciB0byByZXBsYWNlIGFueSBjb21wb25lbnQgb2YgYSBTaGFyZWQgRmFjaWxpdHkgd2l0aCBhIFF1YWxpZmllZCBSZXBsYWNlbWVudCBDb21wb25lbnQgd2l0aG91dCBzZWVraW5nIGFkZGl0aW9uYWwgY29uc2VudCBvZiB0aGUgYXBwbGljYWJsZSBDby1UZW5hbnRzIHVuZGVyIHRoaXMgQWdyZWVtZW50IChpKSBpZiBzdWNoIHINCmUNCnBsYWNlbWVudCwgYW5kIHRoZSBjb3N0IHRoZXJlb2YsIGlzIGluY2x1ZGVkIGluIHRoZSBBcHByb3ZlZCBDby1UZW5hbmN5IE8mTSBCdWRnZXQsIChpaSkgaWYgdGhlIGNvc3Qgb2YgdGhlIFF1YWxpZmllZCBSZXBsYWNlbWVudCBDb21wb25lbnQgKGluY2x1ZGluZyBpbnN0YWxsYXRpb24pIGlzIG5vdCBpbmNsdWRlZCBpbiB0aGUgQXBwcm92ZWQgQ28tVGVuYW5jeSBPJk0gQnVkZ2V0LCBhbmQgc3VjaCBjb3N0IChpbmNsdWRpbmcgaW5zdGFsbGF0aQ0Kb24pIGlzIH17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkNjYyMDY5OSBbUkVEQUNURURdfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIGluIGEgYnVkZ2V0IHllYXIsIG9yIChpaWkpIGluIHRoZSBldmVudCBvZiBhbiBFbWVyZ2VuY3ksIGlmIHRoZSBjb3N0IG9mIHRoZSBRdWFsaWZpZWQgUn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBlcGxhY2VtZW50IENvbXBvbmVudCAoaW5jbHVkaW5nIGluc3RhbGxhdGlvbikgaXMgfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQ2NjIwNjk5IFtSRURBQ1RFRF19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIDsgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIHByb3ZpZGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSAsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgaG93ZXZlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgDQosIGlmIHRoZSBjb3N0IG9mIHRoZSBRdWFsaWZpZWQgUmVwbGFjZW1lbnQgQ29tcG9uZW50IChpbmNsdWRpbmcgaW5zdGFsbGF0aW9uKSBleGNlZWRzIH17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkNjYyMDY5OSBbUkVEQUNURURdfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSANCiwgbm90aWNlIG9mIHN1Y2ggcmVwbGFjZW1lbnQgc2hhbGwgYmUgZ2l2ZW4gYnkgdGhlIENvLVRlbmFuY3kgTWFuYWdlciB0byB0aGUgYXBwbGljYWJsZSBDby1UZW5hbnRzIGFzIHNvb24gYXMgcmVhc29uYWJseSBwcmFjdGljYWJsZSBhZnRlciB0aGUgZXN0aW1hdGVkIHJlcGxhY2VtZW50IGNvc3QgZm9yIHRoZSBRdWFsaWZpZWQgUmVwbGFjZW1lbnQgQ29tcG9uZW50IGlzIGtub3duIGJ5IHRoZSBDby1UZW5hbg0KY3kgTWFuYWdlci4gIE5vIG90aGVyIG5vdGljZSBvZiBzdWNoIFF1YWxpZmllZCBSZXBsYWNlbWVudCBDb21wb25lbnQgc2hhbGwgYmUgcmVxdWlyZWQgZXhjZXB0IGFzIHN1Y2ggcmVwbGFjZW1lbnQgY29zdHMgbWF5IGJlIGluY2x1ZGVkIGluIHBlcmlvZGljIGZpbmFufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSANCmNpYWwgYW5kIG9wZXJhdGluZyByZXBvcnRzIHRoYXQgbWF5IGJlIHJlcXVpcmVkIHVuZGVyIHRoaXMgQWdyZWVtZW50Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IHtcKlxia21rZW5kIF9SZWY0ODAzNTI1Mn0gIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWYxMDEzMzk0MDd9e1wqXGJrbWtzdGFydCBfUmVmNDgwMzUyNTN9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGIpXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgRXhjZXB0IGFzIG90aGVyd2lzZSBwZXJtaXR0ZWQgYnkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCAgIFJFRiBfUmVmNDgwMzUyNTIgXFx3IFxcaCBcXA0KKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM1MDAzMjAwMzUwMDMyMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGNmMVxpbnNyc2lkNzk0MjYyXGNoYXJyc2lkNzk0MjYyIDIuMyhhKX19fVxzZWN0ZCBcbHRyc2VjdFxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4ICx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIHNoYWxsIHByb3ZpZGUgbm90aWNlICh0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBSZXBsYWNlbWVudCBOb3RpY2V9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXCc5NCkgaW4gd3JpdGluZyB0byB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDc4NzY5MDAgIGFwcGxpY2FibGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgQ28tVGVuYW50cyBvZiAoaSkgYW55IGNvbXBvbmVudCBvZiBhIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBTaGFyZWQgRmFjaWxpdHkgdGhhdCBuZWVkcyByZXBsYWNlbWVufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSB0LCAoaWkpIHRoZSBwcm9wb3NlZCByZXBsYWNlbWVudCBjb21wb25lbnQgKHRoZSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFByb3Bvc2VkIFJlcGxhY2VtZW50IENvbXBvbmVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXCc5NCksIHdoaWNoIHNoYWxsIGJlIGEgUXVhbGlmaWVkIFJlcGxhY2VtZW50IENvbXBvbmVudCwgYW5kIChpaWkpIHRoZSBlc3RpbWF0ZWQgY29zdCAoaW5jbHVkaW5nIGluc3RhbGxhdGlvbikgdGhlcmVvZi4gIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBJZiB0aGUgUmVxdWlyZWQgTWFqb3JpdHkgb2YgYXBwbGljYWJsZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBPcGVyYXRpb25hbCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBDby1UZW5hbn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCB0cyB7XCpcYmtta3N0YXJ0IF9EVl9DNjJ9d2l0aCBpbnRlcmVzdHMgaW4gdGhlIGNvbXBvbmVudCBvZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIGEgU2hhcmVkIEZhY2lsaXR5IHRoYXQgbmVlZHMgcmVwbGFjZW1lbnR7XCpcYmtta2VuZCBfRFZfQzYyfQ0KIGFwcHJvdmUgdGhlIFByb3Bvc2VkIFJlcGxhY2VtZW50IENvbXBvbmVudCwgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBzaGFsbCByZXBsYWNlIHN1Y2ggU2hhcmVkIEZhY2lsaXR5IGNvbXBvbmVudCB3aXRoIHRoZSBQcm9wb3NlZCBSZXBsYWNlbWVudCBDb21wb25lbnQuIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIElmIHRoZSBSZXF1aXJlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgIE1ham9yaXR5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIG9mIGFwcGxpY2FibGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgT3BlcmF0aW9uYWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANCnMgZmFpbCB0byBhcHByb3ZlIHRoZSBQcm9wb3NlZCBSZXBsYWNlbWVudCBDb21wb25lbnQgd2l0aGluIH17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkNjYyMDY5OSBbUkVEQUNURURdfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCAgZGF5cyBvZiByZWNlaXB0IG9mIHRoZSBSZXBsYWNlbWVudCBOb3RpY2UsIHRoZSBhcHBsaWNhYmxlIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgT3BlcmF0aW9uYWwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANCnMgaG9sZGluZyBVbmRpdmlkZWQgSW50ZXJlc3RzIGluIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBzaGFsbCBleGVyY2lzZSBjb21tZXJjaWFsbHkgcmVhc29uYWJsZSBlZmZvcnRzIHRvIGRldmVsb3AgYSBjb21tZXJjaWFsbHkgcmVhc29uYWJsZSBhbHRlcm5hdGl2ZSAodGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXCc5M317XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBBbHRlcm5hdGl2ZSBQcm9wb3NhbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXCc5NCkgd2hpY2ggc2hhbGwgYmUgcHJlc2VudGVkIHRvIHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgd2l0aGluIH17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTYxMzk2MjAgDQpbUkVEQUNURURdfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSAgZGF5cyBvZiByZWNlaXB0IG9mIHRoZSBSZXBsYWNlbWVudCBOb3RpY2UsIGFuZCB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIHNoYWxsIGJlIGF1dGhvcml6ZWQgdG8gcHJvY2VlZCB3aXRoIHRoZSBBbHRlcm5hdGl2ZSBQcm9wb3NhbCwgaWYgYW55LCBhcHByb3ZlZCBieSB0aGUgUmVxdWlyZWQgTWFqb3JpdHkgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBvZiBhcHBsaWNhYmxlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IE9wZXJhdGlvbmFsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBzLiAgSWYgYW4gYXBwbGljYWJsZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgT3BlcmF0aW9uYWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgQ28tVGVuYW50fXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwICBob2xkaW5nIFVuZGl2aWRlZCBJbnRlcmVzdHMgaW4gdGhlIFNoYXJlZCBGYWNpbGl0aWVzIHdobyBkb2VzIG5vdCBhcHByb3ZlIHN1Y2ggUHJvcG9zZWQgUmVwbGFjZW1lbnQgQ29tcG9uZW50IG9yIEFsdGVybmF0aXZlIFByb3Bvc2FsIGNhbiBkZW1vbnN0cmF0ZSB0byB0aGUgb3RoZXIgYXBwbGljYWJsZSB9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IE9wZXJhdGlvbmFsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgDQoocykgdGhhdCB0aGUgUHJvcG9zZWQgUmVwbGFjZW1lbnQgQ29tcG9uZW50IGlzIGxpa2VseSB0byBoYXZlIGEgbWF0ZXJpYWwgYWR2ZXJzZSBlZmZlY3QgdXBvbiBzdWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IE9wZXJhdGlvbmFsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIENvLVRlfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIG5hbnRccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgcyBQcm9qZWN0LCB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIHNoYWxsIG4NCm90IGltcGxlbWVudCB0aGUgUHJvcG9zZWQgUmVwbGFjZW1lbnQgQ29tcG9uZW50IG9yIEFsdGVybmF0aXZlIFByb3Bvc2FsIHdpdGhvdXQgdGhlIGNvbnNlbnQgb2YgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IE9wZXJhdGlvbmFsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCAgd2hvc2UgUHJvamVjdCB3aWxsIGJlIG1hdGVyaWFsbHkgYWR2ZXJzZWx5IGltcGFjdGVkLiAgTm90d2l0aHN0YW5kaW5nIHRoZSBmb3JlZ29pbmcsIGlmIGZhaWx1cmUgdG8gcmVwbGFjZSBzdWNoIGNvbXBvbmVudCBoYXMgY2F1c2VkIG9yDQogY291bGQgcmVhc29uYWJseSBjYXVzZSBhbiBFbWVyZ2VuY3ksIHRoZSBDby1UZW5hbnRzIGFncmVlIHRoYXQgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBtYXkgcHJvY2VlZCB3aXRoIHRoZSByZXBsYWNlbWVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgIG9mIHRoZSBjb21wb25lbnQgd2l0aCB0aGUgUHJvcG9zZWQgUmVwbGFjZW1lbnQgQ29tcG9uZW50DQp7XCpcYmtta2VuZCBfUmVmMTAxMzM5NDA3fSwgcmVnYXJkbGVzcyBvZiBhbnkgb2JqZWN0aW9uIG9yIGZhaWx1cmUgdG8gY29uc2VudCBieSBhbnkgc2luZ2xlIENvLVRlbmFudC57XCpcYmtta2VuZCBfUmVmNDgwMzUyNTN9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1MjU0fXtcKlxia21rc3RhcnQgX1JlZjQ4MDM3NDI2fXtcKlxia21rc3RhcnQgX1RvYzYwMTM1NDM2fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMi40XHRhYn19XHBhcmRccGxhaW4gXGx0cnBhcg0KXHMyNjFccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIENvbmRpdGlvbnMgdG8gSW5zdGFsbGF0aW9uIG9mIFJlcGxhY2VtZW50IENvbXBvbmVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KLiAgSWYgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBpbnN0YWxscyBhIFJlcGxhY2VtZW50IENvbXBvbmVudCwgaXQgc2hhbGwsIHRvIHRoZSBmdWxsZXN0IGV4dGVudCBjb21tZXJjaWFsbHkgcmVhc29uYWJsZSBhbmQgc3ViamVjdCB0byBQcnVkZW50IEluZHVzdHJ5IFByYWN0aWNlLCAofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANCmkpIGxpbWl0IGFueSBpbnRlcmZlcmVuY2Ugd2l0aCB0aGUgdXNlIGJ5IHRoZSBDby1UZW5hbnRzIG9mIHRoZSBTaGFyZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIA0KIEZhY2lsaXRpZXMgb3IgdGhlaXIgU2VwYXJhdGUgRmFjaWxpdGllcyBkdXJpbmcgc3VjaCBpbnN0YWxsYXRpb24gYWN0aXZpdGllcywgYW5kIChpaSkgZXhjZXB0IGluIHRoZSBldmVudCBvZiBhbiBFbWVyZ2VuY3ksIChBKSBzY2hlZHVsZSBkdXJpbmcgYW4gb2ZmLXBlYWsgYW5kL29yIGxvdyBzb2xhciByZXNvdXJjZSBkb3dufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSANCi10aW1lIHBlcmlvZCBmb3IgYW55IHJlcXVpcmVkIGRpc2Nvbm5lY3Rpb24gb2YNCiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgb3IgU2VwYXJhdGUgRmFjaWxpdGllcyB0byBjb25kdWN0IGNvbnN0cnVjdGlvbiBhY3Rpdml0aWVzIGluIG9yZGVyIHRvIG1pbmltaXplIHRoZSBpbXBhY3Qgb24gdGhlIFByb2plY3RzIG9mIHRoZSBDby1UZW5hbnRzLCBhbmQgKEIpIHByb3ZpZGUgcHJpb3Igd3JpdHRlbiBub3RpY2UgdG8gdGhlIENvLVRlbmFudHMgb2YgY29tbWVuY2VtZW50IG9mIHN1Y2ggY29uc3RydWN0aW9uIGFjdGl2aXRpZXMgdG9nZQ0KdGhlciB3aXRoIGEgcmVhc29uYWJseSBkZXRhaWxlZCBkZXNjcmlwdGlvbiB0aGVyZW9mLCBpbmNsdWRpbmcgZGF0ZXMgYW5kIHRpbWVzIG9mIGNvbnN0cnVjdGlvbiBhY3Rpdml0aWVzIGFuZCBkaXNjb25uZWN0aW9uLCBpZiBhbnkuICBJZiBhIFJlcGxhY2VtZW50IENvbXBvbmVudCBpcyByZXF1aXJlZCBmb3IgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ0MDEwMDQ0IFNoYXJlZH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4ICBGYWNpbGl0aWVzIHRoYXQgYXJlIHV0aWxpemVkIGJ5IGxlc3MgdGhhbiBhbGwgb2YgdGhlIENvLVRlbmFudHMgYW5kIHRoZSBpbnN0YWxsYXRpb24gb2Ygc3VjaCBSZXBsYWNlbWVudCBDb21wb25lbnQgZGlzY29ubmVjdHMgYSBDby1UZW5hbnRccnF1b3RlIA0KcyBJbXBsZW1lbnRlZCBQcm9qZWN0IHRoYXQgZG9lcyBub3QgdXRpbGl6ZSBzdWNoIFNoYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTczMjYxOCByZWQgRmFjaWxpdGllcywgdGhlIENvLVRlbmFudChzKSBiZW5lZml0aW5nIGZyb20gc3VjaCBSZXBsYWNlbWVudCBDb21wb25lbnQgc2hhbGwgcmVpbWJ1cnNlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MzE3ODEgdGhlIENvLVRlbmFudCBvd25lciBvZiBhbiBJbXBsZW1lbnRlZCBQcm9qZWN0IA0KZm9yIGFsbCBOZXQgUmV2ZW51ZSBMb3NzZXMgYWNjcnVpbmcgZHVyaW5nIHRoZSBwZXJpb2Qgb2YgZGlzY29ubmVjdGlvbiBhcmlzaW5nIGZyb20gdGhlIGluc3RhbGxhdGlvbiBvZiB0aGUgUmVwbGFjZW1lbnQgQ29tcG9uZW50LCBpdCBiZWluZyBoZXJlYnkgYWdyZWVkIHRoYXQgcGF5bWVudCBvZiB0aGUgTmV0IFJldmVudWUgTG9zc2VzIHNoYWxsIGJlIGEgQ28tVGVuYW50IG93bmVyIG9mIGFuIEltcGxlbWVudGVkIFByb2plY3RccnF1b3RlIA0KcyBzb2xlIGFuZCBleGNsdXNpdmUgcmVtZWR5IHdpdGggcmVzcGVjdCB0byBsb3NzIG9mIHJldmVudWUgYW5kIG90aGVyIENvbnNlcXVlbnRpYWwgRGFtYWdlcyBkdWUgdG8gdGhlIHBlcmlvZCBvZiBkaXNjb25uZWN0aW9uLiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgVGhlIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ0ODgxMjA5IENvLVRlbmFudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgYWdyZWUgdGhhdCB0aGUgYWN0dWFsIENvbnNlcXVlbnRpYWwgRGFtYWdlcyBhcmlzaW5nIGR1ZSB0byBzdWNoIHBlcmlvZCBvZiBkaX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBzY29ubmVjdGlvbiB3b3VsZCBiZSBkaWZmaWN1bHQgdG8gY29tcHV0ZSBhbmQgDQp0aGF0IHRoZSBtZXRob2RvbG9neSBmb3IgZGV0ZXJtaW5pbmcgc3VjaCBkYW1hZ2VzIHNldCBmb3J0aCBhYm92ZSBpcyBhIGdvb2QgZmFpdGggZXN0aW1hdGUgb2YgdGhlIGNhbGN1bGF0aW9ucyB1dGlsaXplZCB0byBkZXRlcm1pbmUgdGhlIGFjdHVhbCBDb25zZXF1ZW50aWFsIERhbWFnZXMgdGhhdCB3b3VsZCBiZSBzdWZmZXJlZC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIA0Ke1wqXGJrbWtlbmQgX1JlZjQ4MDM1MjU0fXtcKlxia21rZW5kIF9SZWY0ODAzNzQyNn17XCpcYmtta2VuZCBfVG9jNjAxMzU0MzZ9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM3NDI3fXtcKlxia21rc3RhcnQgX1JlZjQ4MDM1MjU1fXtcKlxia21rc3RhcnQgX1RvYzYwMTM1NDM3fXtcKlxia21rc3RhcnQgX1JlZjEwMjU0OTA2MH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYxIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDIuNQ0KXHRhYn19XHBhcmQgXGx0cnBhclxzMjYxXHFsIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM4XGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIA0KQWRkaXRpb25hbCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSAue1wqXGJrbWtlbmQgX1JlZjQ4MDM3NDI3fXtcKlxia21rZW5kIF9SZWY0ODAzNTI1NX17XCpcYmtta2VuZCBfVG9jNjAxMzU0Mzd9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1MjU2fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChhKVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczI2M1xxbCBcZmkxNDQwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MjE2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxpbHZsMlxvdXRsaW5lbGV2ZWwyXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgSWYgYSBDby1UZW5hbnQgZGV0ZXJtaW5lcyB0aGF0IGFkZGl0aW9uYWwgZmFjaWxpdGllcywgaW1wcm92ZW1lbnRzLCBtb2RpZmljYXRpb25zLCBvciB1cGdyYWRlcyBvZiBmYWNpbGl0aWVzIG9uIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IGEgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IHBvcnRpb24gb2YgdGhlIFNoYXJlZCBQcmVtaXNlcyAodGhlIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCBOZXd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5ICBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IFwnOTQpIGFyZSByZXF1aXJlZCBieSBzdWNoIENvLVRlbmFudCwgc3BlY2lmaWNhbGx5IGluY2x1ZGluZywgd2l0aG91dCBsaW1pdGF0aW9uLCBhbnkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgTmV3fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSANCiBGYWNpbGl0aWVzIGZvciB0aGUgdHJhbnNtaXNzaW9uIG9mIGVsZWN0cmljaXR5IGZyb20gYSBQcm9qZWN0IHRvIHRoZSBJbnRlcmNvbm5lY3Rpb24gUG9pbnQsIHRoZSBDby1UZW5hbnQgcmVxdWlyaW5nIHN1Y2ggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgTmV3fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSAgRmFjaWxpdGllcyBzfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDQwMTAwNDQgaGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjggbGwgaGF2ZSB0aGUgcmVzcG9uc2liaWxpdHkgZm9yIHByb2N1cmluZyBhbmQgaW5zdGFsbGluZyBzdWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IE5ld317XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4ICBGYWNpbGl0aWVzIGFuZCBvYnRhaW5pbmcgYWxsIG5lY2Vzc2FyeSBhcHByb3ZhbHMgZnJvbSBhcHBsaWNhYmxlIEdvdmVybm1lbnRhbCBBdXRob3JpdGllcyBhdCBzdWNoIENvLVRlbmFudFxycXVvdGUgcyBzb2xlIGNvc3QgYW5kIGV4cGVuc2UgKHVubGVzcywgYXMgcHJvdmlkZWQgaW4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjggU2VjdGlvbiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgICBSRUYgX1JlZjQ4MDM1MjU3IFxcdyBcXGggXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNTAwMzIwMDM1MDAzNzAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcY2YxXGluc3JzaWQ3OTQyNjJcY2hhcnJzaWQ3OTQyNjIgMi41KGIpfX19XHNlY3RkIFxsdHJzZWN0DQpccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNjE4NDEwNiApfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIge1wqXGJrbWtlbmQgX1JlZjQ4MDM1MjU2fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTI1N317XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoYilcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgDQpJZiBhIENvLVRlbmFudCBkZXRlcm1pbmVzIHRoYXQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgTmV3fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCAgRmFjaWxpdGllcyBhcmUgcmVxdWlyZWQsIGl0IHNoYWxsIGdpdmUgd3JpdHRlbiBub3RpY2UgdG8gdGhlIG90aGVyIENvLVRlbmFudChzKSBvZiBzdWNoIHJlcXVpcmVtZW50LCB3aQ0KdGggYSBkZXRhaWxlZCBleHBsYW5hdGlvbiBzZXR0aW5nIGZvcnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIGggd2h5IHN1Y2ggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgTmV3fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSANCiBGYWNpbGl0aWVzIGFyZSBuZWVkZWQuICBUaGUgQ28tVGVuYW50KHMpIHJlY2VpdmluZyBzdWNoIG5vdGljZSBzaGFsbCBoYXZlIH17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTYxMzk2MjAgW1JFREFDVEVEXX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgDQogZGF5cyBmb2xsb3dpbmcgcmVjZWlwdCBvZiBzdWNoIG5vdGljZSB0byBkZXRlcm1pbmUgaWYgc3VjaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBOZXd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxICBGYWNpbGl0aWVzIGFyZSBhbHNvIG5lZWRlZCBmb3Ige1wqXGJrbWtzdGFydCBfRFZfQzY2fWl0cyByZXNwZWN0aXZlIFByb2plY3QNCntcKlxia21rc3RhcnQgX0RWX00yNDF9e1wqXGJrbWtlbmQgX0RWX0M2Nn17XCpcYmtta2VuZCBfRFZfTTI0MX0gYW5kIHRvIHNvIG5vdGlmeSB0aGUgcmVxdWVzdGluZyBDby1UZW5hbnQgaW4gd3JpdGluZyBvZiBpdHMgZWxlY3Rpb24gdG8gcGFydGljaXBhdGUgaW4gc3VjaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBOZXd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgIEZhY2lsaXRpZXMuICBGYWlsdXJlIHRvIG5vdGlmeSB0aGUgcmVxdWVzdGluZyBDby1UZW5hbnQgb2YgaXRzIGVsZWN0aW9uIHRvIHBhcnRpY2lwYXRlIHdpdGhpbiB9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE2MTM5NjIwIFtSRURBQ1RFRF19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgIGRheXMgZm9sbG93aW5nIHJlY2VpcHQgb2Ygc3VjaCBub3RpY2Ugc2hhbGwgYmUgZGVlbWVkIGFuIGVsZWN0aW9uIG5vdCB0byBwYXJ0aWNpcGF0ZSBpbiB0aGUgQWRkaXRpb25hbCBGYWNpbGl0aWVzLiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjUxMzE2MTg2fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChjKVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBBbnkgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBOZXd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxICBGYWNpbGl0aWVzIG5lZWRlZCBieSBvbmUgb3IgbW9yZSwgYnV0IG5vdCBhbGwsIG9mIHRoZSBDby1UZW5hbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgIChcJzkzfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUxOTg4MDYgQWRkaXRpb25hbCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXCc5NCl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIA0KLCBtYXkgYmUgYWNxdWlyZWQgYW5kIGhlbGQgaW4gdGhlIG5hbWUgb2Ygc3VjaCBpbmRpdmlkdWFsIENvLVRlbmFudCBhcyBzdWNoIENvLVRlbmFudFxycXVvdGUgcyBTZXBhcmF0ZSBGYWNpbGl0aWVzIG9yIGluIHRoZSBuYW1lIG9mIHN1Y2ggQ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgDQpvLVRlbmFudHMgd2hvIGVsZWN0IHRvIHBhcnRpY2lwYXRlIGluIHN1Y2ggQWRkaXRpb25hbCBGYWNpbGl0aWVzIGFzIHN1Y2ggQ28tVGVuYW50c1xycXVvdGUgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IEFkZGl0aW9uYWwgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgdG8gYmUgaGVsZCBpbiB1bmRpdmlkZWQgb3duZXJzaGlwIGludGVyZXN0cyBhcyB0ZW5hbnRzIGluIGNvbW1vbiBlcXVhbCB0byBzdWNoIENvLVRlbmFudHNccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDQge1wqXGJrbWtlbmQgX1JlZjQ4MDM1MjU3fUFkZGl0aW9uYWwgUHJlbWlzZXMgb3IgRmFjaWxpdGllcyBQcm8tUmF0YSBTaGFyZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDczNDc0MDcgLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgICB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE2NDc2NzYzIFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBJZiBhbGwgb2YgdGhlIENvLVRlbmFudHMgZGV0ZXJtaW5lIHRoYXQgc3VjaCBBZGRpdGlvbmFsIEZhY2lsaXRpZXMgYXJlIG5lZWRlZCwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0IA0KXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIHRoZW4sIHVwb24gYWNxdWlzaXRpb24gYnkgYWxsIG9mIHRoZSBDby1UZW5hbnRzLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNjQ3Njc2MyBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgc3VjaH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NCANClxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTY0NzY3NjMgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIEFkZGl0aW9uYWwgRmFjaWxpdGllcyBzaGFsbCBiZSBjb25zaWRlcmVkIFNoYXJlZCBGYWNpbGl0aWVzIGZvciBhbGwgcHVycG9zZXMgdW5kZXIgdGhpcyBBZ3JlZW1lXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIA0KbnQgZm9sbG93aW5nIHRoZSBBZGRpdGlvbmFsIEZhY2lsaXRpZXMgT3BlcmF0aXZlIERhdGUufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyNDQ5MzUyIHtcKlxia21rZW5kIF9SZWY1MTMxNjE4Nn0NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzg3NjkwMCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoZClcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzg3NjkwMCANClVwb24gYWNxdWlzaXRpb24gb2YgYW55IEFkZGl0aW9uYWwgRmFjaWxpdGllcyB0byBiZSB1c2VkIGJ5IG1vcmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgdGhhbiBvbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ3ODc2OTAwIENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KIG9yIHRoYXQgYmVjb21lIFNoYXJlZCBGYWNpbGl0aWVzLCBpbiBlYWNoIGNhc2UgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ3ODc2OTAwIHB1cnN1YW50IHRvIHRoaXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjkzMTA5MSBTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE0MjkxOTQ0ICBSRUYgX1JlZjQ4MDM3NDI3IFxcdyBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNzAwMzQwMDMyMDAzNzAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNzk0MjYyIDIuNX19fVxzZWN0ZCBcbHRyc2VjdFxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ3ODc2OTAwICwgYSBjb3B5IG9mIGFsDQpsIHdhcnJhbnRpZXMgZm9yIHRoZSBBZGRpdGlvbmFsIEZhY2lsaXRpZXMgc2hhbGwgYmUgZGVsaXZlcmVkIHRvIHRoZSBDby1UZW5hbmN5IE1hbmFnZXIufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQge1wqXGJrbWtzdGFydCBfUmVmMTAxMzM5MjE3fXtcKlxia21rc3RhcnQgX1JlZjQ4MDM1MjU5fXtcKlxia21rc3RhcnQgX1JlZjQ4MDM3NDI4fXtcKlxia21rZW5kIF9SZWYxMDI1NDkwNjB9ICB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyOTI2MTQ3IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBGb2xsb3dpbmcgZGVsaXZlcnkgdG8gdGhlIENvLVRlbmFuY3kgTWFuYWdlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgDQogYW5kIHRoZSBBZGRpdGlvbmFsIEZhY2lsaXRpZXMgT3BlcmF0aXZlIERhdGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjkyNjE0NyBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgLCB0aGUgQ28tVGVuYW50cyBoZXJlYnkgZW5nYWdlIHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgdG8sIGFuZCB0aGUgQ28tVGVuYW5jeSBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgDQpNYW5hZ2VyIGFncmVlcyB0byBwZXJmb3JtIGFuZCBwcm92aWRlIHdpdGggcmVzcGVjdCB0byBzdWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyOTI2MTQ3IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBBZGRpdGlvbmFsIEZhY2lsaXRpZXMgb3IgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGRiY2hcYWYxMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjkyNjE0NyBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgU2hhcmVkIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyOTI2MTQ3IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBGYWNpbGl0aWVzIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI5MjYxNDcgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIHByb2Zlc3Npb25hbCwgc3VwZXJ2aXNvcnksIG1hbmFnZXJpYWwsIGFkbWluaXN0cmF0aXZlIGFuZCBvcGVyYXRpb25hbCByZXNwb25zaWJpbGl0aWVzIGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgc3RhbmRhcmRzIHNldCBmb3J0aCBpbiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyOTI2MTQ3IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjkyNjE0NyBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgICBSRUYgX1JlZjQ4DQpcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgMDM1MzA2IFxcdyBcXGggXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyOTI2MTQ3IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNTAwMzMwMDMwMDAzNjAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcY2YxXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkNzk0MjYyXGNoYXJyc2lkNzk0MjYyIA0KXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIDcuM319fVxzZWN0ZCBcbHRyc2VjdFxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI5MjYxNDcgLn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI5MjYxNDcgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwICAgVGhlIENvLVRlbmFuY3kgTWFuYWdlclxoaWNoXGYwIFxycXVvdGUgXGxvY2hcZjAgcyByZXNwb25zaWJpbGl0aWVzIGFuZCB0aGUgY29zdHMgYW5kIGV4cGVuc2VzIHRoZXJlb2Ygd2l0aCByZXNwZWN0IHRvIGFueSBuZXcgU2hhcmVkIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI5MjYxNDcgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIEZhY2lsaXRpZXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI5MjYxNDcgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIA0Kc2hhbGwgYmUgYXMgc2V0IGZvcnRoIGluIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyOTI2MTQ3IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGRiY2hcYWYxMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjkyNjE0NyANClxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCAgUkVGIF9SZWYxMDEzNDEwNTggXFx3IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGRiY2hcYWYxMVxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwICBcXCogTUVSR0VGT1JNQVQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI5MjYxNDcge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGUwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzEwMDMwMDAzMTAwMzMwMDM0MDAzMTAwMzAwMDM1MDAzODAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcZGJjaFxhZjExXGluc3JzaWQ3OTQyNjIgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIDIuMn19fVxzZWN0ZCBcbHRyc2VjdA0KXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjkyNjE0NyBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgLiAgVGhlIENvLVRlbmFuY3kgTVxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBhbmFnZXJcaGljaFxmMCANClxycXVvdGUgXGxvY2hcZjAgcyByZXNwb25zaWJpbGl0aWVzIHdpdGggcmVzcGVjdCB0byBBZGRpdGlvbmFsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyOTI2MTQ3IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBGYWNpbGl0aWVzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI5MjYxNDcgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIHNoYWxsIGluY2x1ZGUgdGhlIFNoYXJlZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjkyNjE0NyBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgRmFjaWxpdGllcyB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyOTI2MTQ3IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBNYWludGVuYW5jZS4gIFRoZSBjb3N0cyBhbmQgZXhwZW5zZXMgaW5jdXJyZWQgYnkgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBpbiBwZXJmb3JtaW5nIHRoZSBTaGFyZWQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjkyNjE0NyBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgRmFjaWxpdGllcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjkyNjE0NyBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgTWFpbnRlbmFuY2Ugd2l0aCByZXNwZWN0IHRvIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI5MjYxNDcgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIEFkZGl0aW9uYWwgRmFjaWxpdGllXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIHMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGRiY2hcYWYxMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjkyNjE0NyBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgc2hhbGwgYmUgaW5jdXJyZWQgb3IgcmVpbWJ1cnNlZCBhbmQgc2hhcmVkIGJ5IHRoZSBDby1UZW5hbnRzIGFjY29yZGluZyB0byBlYWNoIENvLVRlbmFudFxoaWNoXGYwIFxycXVvdGUgXGxvY2hcZjAgcyBBZGRpdGlvbmFsIFByZW1pc2VzIG9yIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI1NDc5NTggXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIEZhY2lsaXRpZXMgUHJvLVJhdGEgU2hhcmUgd2l0aCByZXNwZWN0IHRoZSBwYXJ0aWN1bGFyIEFkZGl0aW9uYWwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI1NDc5NTggDQpcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNTQ3OTU4IC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNTQ3OTU4IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY1NTIxNjE5Nn17XCpcYmtta3N0YXJ0IF9Ub2M2MDEzNTQzOH17XCpcYmtta3N0YXJ0IF9SZWY1NTIxNTczNn17XCpcYmtta3N0YXJ0IF9SZWY1MTgyNTYzMX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYxIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgyNjY5NTcgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMi42XHRhYn0NCn1ccGFyZFxwbGFpbiBcbHRycGFyXHMyNjFccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgyNjY5NTcgTyZNIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAue1wqXGJrbWtlbmQgX1JlZjU1MjE2MTk2fSAge1wqXGJrbWtlbmQgX1RvYzYwMTM1NDM4fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY1NTIxNjI5N317XCpcYmtta3N0YXJ0IF9SZWY1NTIxNzA1Mn17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyNjkxMTg3IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChhKVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzMjYzXHFsIFxmaTE0NDBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4MjE2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxpbHZsMlxvdXRsaW5lbGV2ZWwyXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjY5MTE4NyBFYWNoIEpvaW5pbmcgQ28tVGVuYW50IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODI2Njk1NyBoYXMgYSBvbmUtdGltZSBvcHRpb259e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MTM5NjIwICB9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE2MTM5NjIwIFtSRURBQ1RFRF19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgyNjY5NTcgIHRvIGFjcXVpcmUgYW4gVW5kaXZpZGVkIEludGVyZXN0IGluIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANCk8mTSBGYWNpbGl0aWVzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODI2Njk1NyBlcXVhbCB0byBzdWNoIENvLVRlbmFudFxycXVvdGUgcyBPcGVyYXRpb25hbCBQcm8tUmF0YSBTaGFyZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KIChvciBpbiB0aGUgZXZlbnQgSGFyZGluIFNvbGFyIElJIGV4ZXJjaXNlcyBpdHMgb3B0aW9uIGFmdGVyIEhhcmRpbiBTb2xhciBJSUkgaGFzIGRlY2xpbmVkIGl0cyBvcHRpb24gdG8gcHVyY2hhc2UgYW4gVW5kaXZpZGVkIEludGVyZXN0IGluIHRoZSBPJk0gRmFjaWxpdGllcywgSGFyZGluIFNvbGFyIElJIHNoYWxsIGhhdmUgYW4gb3B0aW9uIHRvIHB1cmNoYXNlIGEgNTAlIGludGVyZXN0IGluIHRoZSBPJk0gRmFjaWxpdGllcykuICB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE2NTI1OTYyIHtcKlxia21rZW5kIF9SZWY1NTIxNTczNn17XCpcYmtta2VuZCBfUmVmNTUyMTYyOTd9XGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIElmIGVpdGhlciBKb2luaW5nIENvLVRlbmFudCBzZWVrcyB0byBhY3F1aXJlIGFuIGludGVyZXN0IGluIHRoZSB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IE8mTX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCAgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE2NTI1OTYyIA0KXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwICwgaXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNjUyNTk2MiBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjQ0OTM1MiBzaGFsbCBkZWxpdmVyIGEgd3JpdHRlbiBub3RpY2UgdG8gfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBhbGwgb3RoZXIgQ28tVGVuYW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBvZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBzdWNofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBKb2luaW5nIENvLVRlbmFudFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBzIGludGVudGlvbiB0byBhY3F1aXJlIGFuIFVuZGl2aWRlZCBJbnRlcmVzdCBpbiB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgTyZNfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICBwdXJzdWFudCB0byB0aGlzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTY1MjU5NjIgU2VjdGlvbiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE2NTI1OTYyICBSRUYgX1JlZjU1MjE2MTk2IFxcdyBcXGggIFxcKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE2NTI1OTYyIHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM1MDAzNTAwMzIwMDMxMDAzNjAwMzEwMDM5MDAzNjAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDc5NDI2MiAyLjZ9fX1cc2VjdGQgXGx0cnNlY3QNClxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1NzE5MzM4IC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBVcG9uIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTcxOTMzOCByZWNlaXB0IG9mIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIHN1Y2ggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1NzE5MzM4IG5vdGljZSx9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDU3MTkzMzggSGFyZGluIFNvbGFyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KKGFuZCwgaWYgYXBwbGljYWJsZSwgYW55IG90aGVyIENvLVRlbmFudCB0aGF0IGhvbGRzIGFuIFVuZGl2aWRlZCBJbnRlcmVzdCBpbiB0aGUgTyZNIEZhY2lsaXRpZXMgYXQgc3VjaCB0aW1lKSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiB3aWxsIGV4ZWN1dGUgYW5kIGRlbGl2ZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIGEgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyNjkxMTg3IEJpbGwgb2YgU2FsZSBpbiB0aGUgZm9ybSBhdHRhY2hlZCBhcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDI2OTExODcgRXhoaWJpdCBCLTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgIHB1cnN1YW50IHRvIHdoaWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTcxOTMzOCBIYXJkaW4gU29sYXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQooYW5kLCBpZiBhcHBsaWNhYmxlLCBzdWNoIG90aGVyIENvLVRlbmFudCB0aGF0IG93bnMgYW4gVW5kaXZpZGVkIEludGVyZXN0IGluIHRoZSBPJk0gRmFjaWxpdGllcyBhdCBzdWNoIHRpbWUpIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIHdpbGwgdHJhbnNmZXIgdG8gdGhlIEpvaW5pbmcgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIENvLVRlbmFudCBhbiBVbmRpdmlkZWQgSW50ZXJlc3QgaW4gYW5kIHRvIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBPJk19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwICBGYWNpbGl0aWVzIGVxdWFsIHRvIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDQgdGhlIG93bmVyc2hpcCBwZXJjZW50YWdlcyBzZXQgZm9ydGggZm9yIHN1Y2ggSm9pbmluZyBDby1UZW5hbnQgcHVyc3VhbnQgdG8gdGhlIGZpcnN0IHR3byBzZW50ZW5jZXMgb2YgdGhpcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE2NTI1OTYyIFNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNjUyNTk2MiAgUkVGIF9SZWY1NTIxNjI5NyBcXHcgXFxoICBcXCogTUVSR0VGT1JNQVQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNjUyNTk2MiB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNTAwMzUwMDMyMDAzMTAwMzYwMDMyMDAzOTAwMzcwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ3OTQyNjIgMi42KGEpfX19XHNlY3RkIFxsdHJzZWN0DQpccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTcxOTMzOCAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQge1wqXGJrbWtlbmQgX1JlZjU1MjE3MDUyfSAgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDU3MTkzMzggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE2NTI1OTYyIFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoYilcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KSW4gdGhlIGV2ZW50IEhhcmRpbiBTb2xhciBJSSBleGVyY2lzZXMgaXRzIG9wdGlvbiB3aXRoIHJlc3BlY3QgdG8gdGhlIE8mTSBGYWNpbGl0aWVzIHByaW9yIHRvIEhhcmRpbiBTb2xhciBJSUkgZGVjbGluaW5nIGl0cyBvcHRpb24gd2l0aCByZXNwZWN0IHRvIHRoZSBPJk0gIEZhY2lsaXRpZXMsIHRoZSBPJk0gRmFjaWxpdGllcyBzaGFsbCBiZSBjb25zaWRlcmVkIFNoYXJlZCBGYWNpbGl0aWVzDQogZm9yIGFsbCBwdXJwb3NlcyB1bmRlciB0aGlzIEFncmVlbWVudCB1bnRpbCBzdWNoIHRpbWUgYXMgSGFyZGluIFNvbGFyIElJSSBkZWNsaW5lcyBpdCBvcHRpb24gd2l0aCByZXNwZWN0IHRvIHRoZSBPJk0gIEZhY2lsaXRpZXMuICBJZiBIYXJkaW4gU29sYXIgSUlJIGRlY2xpbmVzIGl0IG9wdGlvbiB3aXRoIHJlc3BlY3QgdG8gdGhlIE8mTSBGYWNpbGl0aWVzLCB0aGUgTyZNIEZhY2lsaXRpZXMgc2hhbGwgdGhlcmVhZnRlciBiZSB0cmVhdGVkIGENCnMgQWRkaXRpb25hbCBGYWNpbGl0aWVzIG9mIEhhcmRpbiBTb2xhciBhbmQgSGFyZGluIFNvbGFyIElJIGZvciBhbGwgcHVycG9zZXMgdW5kZXIgdGhpcyBBZ3JlZW1lbnQuICANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGMpXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIEVhY2ggQ28tVGVuYW50IH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgc2hhbGwgaGF2ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICB0aGUgcmlnaHQgdG8gaG9sZCBhbmQgdXRpbGl6ZSBpdHMgVW5kaXZpZGVkIEludGVyZXN0IGluIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBPJk19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBGYWNpbGl0aWVzLCBqb2ludGx5LCBhcyB0ZW5hbnRzLWluLWNvbW1vbiwgc3Vian17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgZWN0IHRvIHRoZSB0ZXJtcyBvZg0KIHRoaXMgQWdyZWVtZW50LCB0byB0aGUgZnVsbCBleHRlbnQgbmVjZXNzYXJ5IGZvciBlYWNoIFByb2plY3QgdG8gb3BlcmF0ZSBhdCBpdHMgUGVybWl0dGVkIENhcGFjaXR5LiAgV2l0aG91dCBsaW1pdGluZyB0aGUgZ2VuZXJhbGl0eSBvZiB0aGUgZm9yZWdvaW5nLCB0aGUgdGVuYW50cy1pbi1jb21tb24gcmlnaHRzIG9mIGVhY2ggQ28tVGVuYW50IHNoYWxsIGluY2x1ZGUgdGhlIGpvaW50IHVzZSBvZiB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBPJk19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxICBGYWNpbGl0aWVzICh3aGV0aGVyIG5vdyBleGlzdGluZyBvciBoZXJlYWZ0ZXIgY29uc3RydWN0ZWQpIHRvIHRoZSBmdWxsIGV4dGVudCBuZWNlc3NhcnkgZm9yIGVhY2ggUHJvamVjdCB0byBvcGVyYXRlIGF0IGl0cyBQZXJtaXR0ZWQgQ2FwYWNpdHl9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IC4NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNTUyMTg3ODl9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChkKVx0YWJ9VGhlIFBhcnRpZXMgaGVyZWJ5IGFja25vd2xlZGdlIGFuZCBhZ3JlZSB0aGF0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjU0Nzk1OCB0aGUgTyZNIEZhY2lsaXRpZXMgKGFzIGN1cnJlbnRseSBkZXNpZ25lZCkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgbWF5IGJlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjU0Nzk1OCAgaW5zdWZmaWNpZW50IHRvIHN1cHBvcnQgdXNlIGJ5IHRoZSANCkhhcmRpbiBTb2xhciBJSUkgUHJvamVjdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICBhbmQsIGFzIGEgcmVzdWx0LCBIYXJkaW4gU29sYXIgSUlJIG1heSBlaXRoZXIgKGkpIGJ1aWxkIFNlcGFyYXRlIEZhY2lsaXRpZXMgZm9yIHRoZSBvcGVyYXRpb25zIGFuZCBtYWludGVuYW5jZSBvZiBpdHMgUHJvamVjdCBvciAoaWkpIGV4ZXJjaXNlIGl0cyBvcHRpb24gdG8gYWNxdWlyZSBhbiB9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFVuZGl2aWRlZCBJbnRlcmVzdCBpbiB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgTyZNfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANCiBwdXJzdWFudCB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDg2NjE4ODAgU2VjdGlvbiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4NjYxODgwICBSRUYgX1JlZjU1MjE3MDUyIFxcdyBcXGggIFxcKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODY2MTg4MCB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzUwMDM1MDAzMjAwMzEwMDM3MDAzMDAwMzUwMDMyMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNzk0MjYyIDIuNihhKX19fVxzZWN0ZCBcbHRyc2VjdA0KXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAgYW5kIGJ1aWxkIGFueSBuZWNlc3NhcnkgYWRkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjU0Nzk1OCANCml0aW9ucywgZXhwYW5zaW9ucywgaW1wcm92ZW1lbnRzLCBtb2RpZmljYXRpb25zLCBvciB1cGdyYWRlcyBvZiBPJk0gRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IC4gIFR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNTQ3OTU4IGhlIGNvbnN0cnVjdGlvbiBvZiBhbnkgc3VjaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0IFNlcGFyYXRlIEZhY2lsaXRpZXMgb3IgYW55IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI1NDc5NTggYWRkaXRpb25zLCBleHBhbnNpb25zLCBpbXByb3ZlbWVudHMsIG1vZGlmaWNhdGlvbnMsIG9yIHVwZ3JhZGVzIGFuZCBhbGwgY2FwaXRhbCBjb3N0cyByZWxhdGVkIHRoZXJldG8gc2hhbGwgYmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0ICBhdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI1NDc5NTggIHRoZSBzb2xlIHJlc3BvbnNpYmlsaXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgIGFuZCBjb3N0IG9mIEhhcmRpbiBTb2xhciBJSUksIGFuZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI1NDc5NTggc2hhbGwgYmUgY29uZHVjdGVkIGluIGNvbXBsaWFuY2Ugd2l0aCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDg2NjE4ODAgU2VjdGlvbiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4NjYxODgwICBSRUYgX1JlZjU1MjE3ODI5IFxcdyANClxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDg2NjE4ODAge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM1MDAzNTAwMzIwMDMxMDAzNzAwMzgwMDMyMDAzOTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkNzk0MjYyIDIuN319fVxzZWN0ZCBcbHRyc2VjdFxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjU0Nzk1OCAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgICB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTQ2Mzc1MCBJZiBIYXJkaW4gU29sYXIgSUlJIGVsZWN0cyB0byBhY3F1aXJlIGFuIFVuZGl2aWRlZCBJbnRlcmVzdCBpbiB0aGUgTyZNIEZhY2lsaXRpZXMgcHVyc3VhbnQgdG8gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNDYzNzUwIFNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNDYzNzUwICBSRUYgX1JlZjU1MjE3MDUyIFxcdyBcXGggIFxcKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE0NjM3NTAge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzUwMDM1MDAzMjAwMzEwMDM3MDAzMDAwMzUwMDMyMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNzk0MjYyIDIuNihhKX19fVxzZWN0ZCBcbHRyc2VjdA0KXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE0NjM3NTAgDQogYW5kIGJ1aWxkIGFueSBuZWNlc3NhcnkgYWRkaXRpb25zLCBleHBhbnNpb25zLCBpbXByb3ZlbWVudHMsIG1vZGlmaWNhdGlvbnMsIG9yIHVwZ3JhZGVzIG9mIE8mTSBGYWNpbGl0aWVzLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDU1OTMwOTggb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTQ2Mzc1MCANCm5jZSBjb21wbGV0ZWQsIHN1Y2ggYWRkaXRpb25zLCBleHBhbnNpb25zLCBpbXByb3ZlbWVudHMsIG1vZGlmaWNhdGlvbnMsIG9yIHVwZ3JhZGVzIG9mIE8mTSBGYWNpbGl0aWVzIHNoYWxsIGJlIFNoYXJlZCBGYWNpbGl0aWVzIGZvciBhbGwgcHVycG9zZXMgb2YgdGhpcyBBZ3JlZW1lbnQufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjU0Nzk1OCAgIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgSW4gdGhlIGV2ZW50IEhhcmRpbiBTb2xhciBJSUkgd291bGQgbGlrZSB0byB1dGlsaXplIHNvbWUsIGJ1dCBub3QgYWxsIG9mIHRoZSBPJk0gRmFjaWxpdGllcywgSGFyZGluIFNvbGFyIGFuZCBIYXJkaW4gU29sYXIgSUkgaGVyZWJ5DQogYWdyZWUgdG8gbmVnb3RpYXRlIHdpdGggSGFyZGluIFNvbGFyIElJSSBpbiBnb29kIGZhaXRoIHRvIGRldmVsb3AgYW4gYWx0ZXJuYXRpdmUgam9pbnQgdXNlIGFncmVlbWVudCB3aXRoIHJlc3BlY3QgdG8gdGhlIE8mTSBGYWNpbGl0aWVzLntcKlxia21rZW5kIF9SZWY1NTIxODc4OX0NCiAgRm9yIHRoZSBhdm9pZGFuY2Ugb2YgZG91YnQsIHN1Y2ggYWx0ZXJuYXRpdmUgam9pbnQgdXNlIGFncmVlbWVudCBzaGFsbCBpbmNsdWRlIGFuIGFkanVzdGVkIHBheW1lbnQgZm9yIEhhcmRpbiBTb2xhciBJSUlccnF1b3RlIA0KcyBhY3F1aXNpdGlvbiBvZiBpdHMgVW5kaXZpZGVkIEludGVyZXN0IGluIHN1Y2ggTyZNIEZhY2lsaXRpZXMsIGJhc2VkIG9uIHRoZSBhY3R1YWwgcG9ydGlvbiBvZiB0aGUgTyZNIEZhY2lsaXRpZXMgdGhhdCBIYXJkaW4gU29sYXIgSUlJIGludGVuZHMgdG8gdXRpbGl6ZS4NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNTUyMTc4Mjl9e1wqXGJrbWtzdGFydCBfVG9jNjAxMzU0Mzl9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMi43XHRhYn19XHBhcmRccGxhaW4gXGx0cnBhcg0KXHMyNjFccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBDb25kaXRpb25zIHRvIEluc3RhbGxhdGlvbiBvZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCBOZXd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgLiAgQW55IENvLVRlbmFudCBpbnN0YWxsaW5nIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IE5ld317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KIEZhY2lsaXRpZXMgc2hhbGx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDcyOTUzMzcgLCB0byB0aGUgZnVsbGVzdCBleHRlbnQgY29tbWVyY2lhbGx5IHJlYXNvbmFibGUgYW5kIHN1YmplY3QgdG8gUHJ1ZGVudCBJbmR1c3RyeSBQcmFjdGljZSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIA0KIChpKSBsaW1pdCBhbnkgaW50ZXJmZXJlbmNlIHdpdGggdGhlIHVzZSBieSB0aGUgQ28tVGVuYW50cyBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgb3IgdGhlaXIgU2VwYXJhdGUgRmFjaWxpdGllcyBkdXJpbmcgc3VjaCBpbnN0YWxsYXRpb24sIChpaSkgc2NoZWR1bGUgZHVyaW5nIGFuIG9mZi1wZWFrIGFuZC9vciBsb3cgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSANCnNvbGFyIHJlc291cmNlIGRvd24tdGltZSBwZXJpb2QgZm9yIGFueSByZXF1aXJlZCBkaXNjb25uZWN0aW9uIG9mIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBvciBTZXBhcmF0ZSBGYWNpbGl0aWVzIG9mIHRoZSBvdGhlciBDby1UZW5hbnRzIHRvIGNvbmR1Y3QgY29uc3RydWN0aW9uIGFjdGl2aXRpZXMgaW4gb3JkZXIgdG8gbWluaW1pemUgdGhlIGltcGFjdCBvbiB0aGUgUHJvamVjdHMgb2YgdGhlIG90aGVyIENvLVRlbmFudHMsIChpDQppaSkgcHJvdmlkZSBwcmlvciB3cml0dGVuIG5vdGljZSB0byB0aGUgb3RoZXIgQ28tVGVuYW50cyBvZiBjb21tZW5jZW1lbnQgb2Ygc3VjaCBjb25zdHJ1Y3Rpb24gYWN0aXZpdGllcyB0b2dldGhlciB3aXRoIGEgcmVhc29uYWJseSBkZXRhaWxlZCBkZXNjcmlwdGlvbiB0aGVyZW9mLCBpbmNsdWRpbmcgdGhlIGRhdGVzIGFuZCB0aW1lcyBvZiBzdWNoIGNvbnN0cnVjdGlvbiBhbmQgZGlzY29ubmVjdGlvbiwgaWYgYW55LCBhbmQgKGl2KSB0YWtlIGkNCm50byBjb25zaWRlcmF0aW9uIGFueSBjaGFuZ2VzIGluIHRoZSBjb25zdHJ1Y3Rpb24gcGxhbnMgb3IgdGltaW5nIG9mIGNvbnN0cnVjdGlvbiByZXF1aXJlZCBieSB0aGUgb3RoZXIgQ28tVGVuYW50c3tcKlxia21rZW5kIF9SZWYxMDEzMzkyMTd9LiAgSW4gYWRkaXRpb24sIHRoZSBDby1UZW5hbnQgaW5zdGFsbGl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IG5nIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgTmV3fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSAgRmFjaWxpdGllcyBzaGFsbCByZWltYnVyc2UgYW55IENvLVRlbmFudCBvd25lciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBvZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIGFuIEltcGxlbWVudGVkIFByb2plY3QgZm9yIGFsbCBOZXQgUmV2ZW51ZSBMb3NzZXMgYWNjcnVpbmcgZHVyaW5nIHRoZSBwZXJpb2Qgb2YgZGlzY29ubmVjdGlvbiBhcmlzaW5nIGZyb20gdGhlIGluc3RhbGxhdGlvbiBvZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBOZXd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgIGluIGFjY29yZGFuY2Ugd2l0aCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEzMDAzNDQwIFNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMzAwMzQ0MCAgUkVGIF9SZWY0ODAzNTQ2MiBcXHcgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0ICBcXCogTUVSR0VGT1JNQVQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMzAwMzQ0MCB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNDAwMzgwMDMwMDAzMzAwMzUwMDM0MDAzNjAwMzIwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ3OTQyNjIgMTUuMX19fVxzZWN0ZCBcbHRyc2VjdA0KXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAgYW5kIHNoYWxsIG90aGVyd2lzZSBiZSBzdWJqZWN0IHRvIHRoZSBvdGhlciBpbmRlbW5pZmljYXRpb24gb2JsaWdhdGlvbnMgc2V0IGZvcnRoIGluIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMzAwMzQ0MCBTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEzMDAzNDQwICBSRUYgX1JlZjQ4MDM1NDYyIFxcdyBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgIFxcKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTMwMDM0NDAge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNTAwMzQwMDM2MDAzMjAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDc5NDI2MiAxNS4xfX19DQpcc2VjdGQgXGx0cnNlY3RccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICBmb3IgYW55IGRhbWFnZXMgY2F1c2VkIGJ5IHN1Y2ggQ28tVGVuYW50IGluIGNvbm5lY3Rpb24gd2l0aCB0aGUgaW5zdGFsbGF0aW9uIG9mIHN1Y2ggTmV3IEZhY2lsaXRpZXMufXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIHtcKlxia21rc3RhcnQgX1JlZjkwODQ0MjY0fXtcKlxia21rZW5kIF9SZWY0ODAzNTI1OX17XCpcYmtta2VuZCBfUmVmNDgwMzc0Mjh9e1wqXGJrbWtlbmQgX1JlZjUxODI1NjMxfXtcKlxia21rZW5kIF9SZWY1NTIxNzgyOX17XCpcYmtta2VuZCBfVG9jNjAxMzU0Mzl9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM3NDI5fXtcKlxia21rc3RhcnQgX1JlZjQ4MDM1MjYwfXtcKlxia21rc3RhcnQgX1RvYzYwMTM1NDQwfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMi44XHRhYn19e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgV2FycmFudHkgQ2xhaW1zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgLiAgVGhlIENvLVRlbmFuY3kgTWFuYWdlciBhbmQgZWFjaCBDby1UZW5hbnQgaW5zdGFsbGluZywgb3IgY2F1c2luZyB0byBiZSBpbnN0YWxsZWQsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBTaGFyZWQgRmFjaWxpdGllcywgUmVwbGFjZW1lbnQgQ29tcG9uZW50cyBvciBBZGRpdGlvbmFsIEZhY2lsaXRpZXMgdGhhdCBhcmUgdG8gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBiZSBTaGFyZWQgRmFjaWxpdGllcyBzaGFsbCBleGVyY2lzZSBzdWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ0ODgxMjA5IENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ0ODgxMjA5IHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANCiByaWdodHMgYW5kIG9ibGlnYXRpb25zIHVuZGVyIHRoZSBjb250cmFjdG9yIGFuZCB2ZW5kb3Igd2FycmFudGllcyB3aXRoIHJlc3BlY3QgdG8gdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgU2hhcmVkIEZhY2lsaXRpZXMgYW5kIHVwb24gdGhlIHJlYXNvbg0KYWJsZSByZXF1ZXN0IG9mIHRoZSBhcHBsaWNhYmxlIENvLVRlbmFudHMgYW5kIHN1YmplY3QgdG8gdGhlaXIgZGlyZWN0aW9uIGFuZCBjb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIA0KdHJvbCwgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBzaGFsbCBhc3Npc3QgdGhlbSB3aXRoIHRoZSBleGVyY2lzZSBvZiBzdWNoIHJpZ2h0cy4gIFRoZSBDby1UZW5hbmN5IE1hbmFnZXIgc2hhbGwgKGkpIG1vbml0b3IgYW5kIHJlcG9ydCB0byB0aGUgQ28tVGVuYW50cyBjb25jZXJuaW5nIHRoZSByZW1haW5pbmcNCiB0ZXJtcyBvZiBhbnkgd2FycmFudGllcyBvbiBTaGFyZWQgRmFjaWxpdGllczsgKGlpKSBwZXJmb3JtIHN1Y2ggaW5zcGVjdGlvbnMgYXMgYXJlIHJlYXNvbmFibGUgdG8gZW5zdXJlIHRoYXQgYW55IGZpbmFsIHdhcnJhbnR5IHdvcmsgaXMgbm90IHJlcXVpcmVkIHByaW9yIHRvIHRoZSBleHBpcmF0aW9uIG9mIGFueSBzdWNoIHdhcnJhbnR5LCBhbmQgKGlpaSkgc3ViamVjdCB0byB0aGUgZGlyZWN0aW9uIGFuZCBjb250cm9sIG9mIHRoZSBhcHBsaQ0KY2FibGUgQ28tVGVuYW50cywgcHJlcGFyZSBhbmQgcHJvc2VjdXRlIHdhcnJhbnR5IGNsYWltcyBvbiBiZWhhbGYgb2Ygc3VjaCBDby1UZW5hfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBudHMsIGlmIHJlYXNvbmFibHkgbmVjZXNzYXJ5IHRvIGVuZm9yY2UgYW55IHN1Y2ggd2FycmFudGllc3tcKlxia21rZW5kIF9SZWY5MDg0NDI2NH0NCi4gIFN1YmplY3QgdG8gdGhlIGRpcmVjdGlvbiBhbmQgY29udHJvbCBvZiB0aGUgYXBwbGljYWJsZSBDby1UZW5hbnRzLCB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIHNoYWxsIGJlIHByaW1hcmlseSByZXNwb25zaWJsZSBmb3IgYWRtaW5pc3RlcmluZyB0aGUgcHJvc2VjdXRpb24gb2YgdGhlIHdhcnJhbnR5IGNsYWltcyByZXF1aXJlbWVudHMgdW5kZXIgdGhpcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgU2VjdGlvbiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgICBSRUYgX1JlZjQ4MDM1MjYwIFxcdyBcXGggXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNTAwMzIwMDM2MDAzMDAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcY2YxXGluc3JzaWQ3OTQyNjJcY2hhcnJzaWQ3OTQyNjIgMi44fX19XHNlY3RkIFxsdHJzZWN0DQpccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KIG9uIGJlaGFsZiBvZiB0aGUgQ28tVGVuYW50cyBhbmQgZWFjaCBvZiB0aGUgQ28tVGVuYW50cyBzaGFsbCBjb29wZXJhdGUgd2l0aCBlYWNoIG90aGVyIHdpdGggcmVzcGVjdCB0byBzdWNoIHdhcnJhbnR5IGNsYWltcyB0byB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIA0KIGV4dGVudCBzdWNoIENvLVRlbmFudHMgYXJlIHRoZSBvd25lcnMgYW5kIGhvbGRlcnMgb2YgdGhlIHdhcnJhbnRpZXMuICBBbGwgcmVhc29uYWJsZSBleHBlbnNlcyBpbmN1cnJlZCBieSB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIG9yIGFueSBDby1UZW5hbnQgaW4gcHVyc3Vpbmcgc3VjaCB3YXJyYW50eSBjbGFpbXMgc2hhbGwgYmUgYWxsb2NhdGVkIHRvIHRoZSByZXNwZWN0aXZlIENvLVRlbmFudHMgd2l0aCBhbiBpbnRlcmVzdCBpbiB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IChBKSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBzdWJqZWN0IHRvIHJlaW1idXJzZW1lbnQgYnkgZWFjaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDcyODYzNzEgDQpDby1UZW5hbnQgaW4gYWNjb3JkYW5jZSB3aXRoIGl0cyBPcGVyYXRpb25hbCBQcm8tUmF0YSBTaGFyZSBvciAoQikgdGhlIEFkZGl0aW9uYWwgRmFjaWxpdGllcyBzdWJqZWN0IHRvIHJlaW1idXJzZW1lbnQgYnkgZWFjaCBDby1UZW5hbnQgaW4gYWNjb3JkYW5jZSB3aXRoIGl0cyBBZGRpdGlvbmFsIFByZW1pc2VzIG9yIEZhY2lsaXRpZXMgUHJvLVJhdGEgU2hhcmUufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIHtcKlxia21rZW5kIF9SZWY0ODAzNzQyOX17XCpcYmtta2VuZCBfUmVmNDgwMzUyNjB9e1wqXGJrbWtlbmQgX1RvYzYwMTM1NDQwfQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTI2MX17XCpcYmtta3N0YXJ0IF9Ub2M2MDEzNTQ0MX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjU5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGJcY2Fwc1xkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCBBcnRpY2xlIDNcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczI1OVxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4NzIwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM4XG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcYlxjYXBzXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgXGxpbmUge1wqXGJrbWtzdGFydCBfUmVmNTA2NzA5MjB9e1wqXGJrbWtzdGFydCBfUmVmNTA2NzQyNjd9RUFTRU1FTlRTe1wqXGJrbWtlbmQgX1JlZjQ4MDM1MjYxfXtcKlxia21rZW5kIF9Ub2M2MDEzNTQ0MX0NCntcKlxia21rZW5kIF9SZWY1MDY3MDkyMH17XCpcYmtta2VuZCBfUmVmNTA2NzQyNjd9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM3NDMwfXtcKlxia21rc3RhcnQgX1JlZjQ4MDM1MjYyfXtcKlxia21rc3RhcnQgX1RvYzYwMTM1NDQyfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy4xXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhcg0KXHMyNjFccWwgXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFBhcnRpYWwgQXNzaWdubWVudCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE0OTcwODQwIG9mIEVhc2VtZW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzM0NzQwNyB7XCpcYmtta2VuZCBfUmVmNDgwMzc0MzB9e1wqXGJrbWtlbmQgX1JlZjQ4MDM1MjYyfXtcKlxia21rZW5kIF9Ub2M2MDEzNTQ0Mn0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzUyNjN9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczE1NCBccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxjZjIzXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ2NDUyOTk4IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCAoYSlcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczE1NFxxaiBcZmkxNDQwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDIxNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczNcaWx2bDJcb3V0bGluZWxldmVsMlxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGNmMVxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNjQ1Mjk5OCBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgRWFjaCB9e1xydGxjaFxmY3MxIFxhZjEgDQpcbHRyY2hcZmNzMCBcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDAxNTAxIFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBKb2luaW5nIENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDY0NTI5OTggXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwICBzaGFsbH17DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgaGENCn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgdmV9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIHRoZX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgIG9wdGlvbn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDczNDc0MDcgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjQ0OTM1MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCB0byBhY3F1aXJlIGFuIGludGVyZXN0IGluIHRoZSBFYXNlbWVudHN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgLiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIElmIGVpdGhlciBKb2luaW5nIENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIyMDM4NDkgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwICBzZWVrfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBzfXtccnRsY2hcZmNzMSBcYWYxIA0KXGx0cmNoXGZjczAgXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjIwMzg0OSBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgIHRvIGFjcXVpcmUgYW4gaW50ZXJlc3QgaW4gfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0IA0KXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIGFuIEVhc2VtZW50LCBpdH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDczNDc0MDcgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDI0NDkzNTIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpzaGFsbCBkZWxpdmVyIHdyaXR0ZW4gbm90aWNcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBlIHRvIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIENvLVRlbmFudCBvd25lciBvZiBzdWNoIEVhc2VtZW50cyAofXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMDE1MDEgDQpcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgXGhpY2hcZjAgY29sbGVjdGl2ZWx5LCB0b2dldGhlciB3aXRoIGFueSBQYXJ0aWVzIHdpdGggYW4gaW50ZXJlc3QgaW4gdGhlIFNoYXJlZCBQcmVtaXNlcywgc29tZXRpbWVzIHJlZmVycmVkIHRvIGFzIHRoZSBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMDE1MDEgDQpcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgR3JhbnRpbmcgQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMDE1MDEgXGxvY2hcYWYwXGRiY2hcYWYxMVxoaWNoXGYwIFwnOTRcbG9jaFxmMCApfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KIG9mIGl0c317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBpbnRlbnRpb24gdG8gYWNxdWlyZSBhIHNlcGFyYXRlIGludGVyZXN0IGluIHRoZSBFYXNlbWVudHMgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNTY3MDk0MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCnRvIHRoZSBleHRlbnQgcmVxdWlcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCByZWQgZm9yfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIGl0c317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBQcm9qZWN0fXtccnRsY2hcZmNzMSBcYWYxIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgLiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgVXBvbiB9ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCByZWNlaXB0IG9mIHRoZSB3cml0dGVuIG5vdGljZSx9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgYW5kIHVwb24gb2J0YWluaW5nIH17XHJ0bGNoXGZjczEgXGFmMSANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgYX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBsZWdhbCBkZXNjcmlwdGlvbiBvZiB0aGUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpwb3J0aW9ucyBvZiB0aGUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgRWFzZW1lbnRzIHRvIGJlIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGFzc2lnbmVkfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEwNjQ5MzgzIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICwgdGhlIEdyYW50aW5nIENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB3aWxsIGV4ZWN1dGUgYW5kIGRlbGl2ZXIgYSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgUGFydGlhbCBBc3NpZ25tZW50IH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIG9mIEVhc2VtZW50c317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBpbiB0aGUgZm9ybSBhdHRhY2hlZCBoZXJldG8gXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgYXMgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEV4aGliaXQgQi19e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgICh0aGUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFBhcnRpYWwgQXNzaWdubWVudCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIG9mIEVhc2VtZW50c317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICkgcHVyc3VhbnQgdG8gd2hpY2ggfXsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEwNjQ5MzgzIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHRoZSBHcmFudGluZyBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgd2lsbCBhc3NpZ24gdG8gdGhlIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBKb2luaW5nIENvLVRlbmFudCB0aGUgcmlnaHRzIGluIGFuZCB0byB0aGUgRWFzZW1lbnRzIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIG5lY2Vzc2FyeSBmb3J9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgdGhlIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpKb2luaW5nIENvLVRlbmFudFxoaWNoXGYwIFxycXVvdGUgXGxvY2hcZjAgcyBQcm9qZWN0IH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGluY2x1ZGluZyB0aGUgcmlnaHRzLCBpZiBhbnksIGZvciB0aGUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEpvaW5caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBpbmcgQ28tVGVuYW50IHRvIGNvbnN0cnVjdCwgbW9uaXRvciBhbmQgbWFpbnRhaW59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgaXRzIG93bn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFxoaWNoXGYwIA0KY29sbGVjdGlvbiBmYWNpbGl0aWVzIGZvciBjb25uZWN0aW5nIGl0cyBQcm9qZWN0IHRvIHRoZSBTaGFyZWQgRmFjaWxpdGllcyAodGhlIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFNlcGFyYXRlIENvbGxlY3Rpb24gRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0XGxvY2hcZjAgKSwgYW5kIHRoZSByaWdodCBmb3Igc3VjaCBTZXBhcmF0ZSBDb2xsZWN0aW9uIEZhY2lsaXRpZXMgdG8gfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBjcm9zcyB9e1xydGxjaFxmY3MxIFxhZjEgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTA2NDkzODMgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgdGhlIEdyYW50aW5nIENvLVRlbmFudFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFxycXVvdGUgXGxvY2hcZjAgcyBleGlzdGluZyBTZXBhcmF0ZSBGYWNpbGl0aWVzLiAgSW4gYWRkaXRpb24sIHRoZSBHcmFudGluZyBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB3aWxsIGV4ZWN1dGUgYW5kIGRlbGl2ZXIgdHJhbnNmZXIgdGF4IGRlY2xhcmF0aW9ucywgb3duZXJ9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHMgYWZmaWRhdml0cywgQUxUQSBzdGF0ZW1lbnRzIGFuZCBzdWNoIG90aGVyIHJlYXNvbmFibGUgYW5kIGN1c3RvbWFyeSB0cmFuc2ZlciBkb2N1bWVudHMgcmVxdWlyZWQgaW4gY29ubmVjdGlvbiB3aXRoIHRoZSB0cmFuc2ZlXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpyIG9mIGEgcmVhbCBwcm9wZXJ0eSBpbnRlcmVzdCBvciB0aGF0IHdpbGwgZmFjaWxpdGF0ZSB0aGUgSm9pbmluZyBDby1UZW5hbnRcaGljaFxmMCBccnF1b3RlIFxsb2NoXGYwIHMgYWJpbGl0eSB0byBvYnRhaW4gb3duZXJzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBccnF1b3RlIFxsb2NoXGYwICBhbmQgbGVuZGVycw0KXGhpY2hcZjAgXHJxdW90ZSBcbG9jaFxmMCAgdGl0bGUgaW5zdXJhbmNlIHdpdGggcmVzcGVjdCB0byB0aGUgRWFzZW1lbnRzIHRvIHRoZSBleHRlbnQgc3VjaCBkb2N1bWVudHMgZG8gbm90IGRlY3JlYXNlIGFueSByaWdodHMgb2YgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMDY0OTM4MyBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBhbnkgfXtccnRsY2hcZmNzMSBcYWYxIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgaGVyZXVuZGVyIGFuZCBkbyBub3RcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgaW5jcmVhc2UgdGhlIG9ibGlnYXRpb25zIG9mIH17XHJ0bGNoXGZjczEgXGFmMSANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMDY0OTM4MyBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBhbnkgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQogaGVyZXVuZGVyLCBhbGwgb2Ygd2hpY2ggc2hhbGwgYmUgcHJlcGFyZWQgYW5kIHBhaWQgZm9yIGF0IHRoZSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEpvaW5pbmd9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KIENvLVRlbmFudFxoaWNoXGYwIFxycXVvdGUgXGxvY2hcZjAgcyBleHBlbnNlLntcKlxia21rZW5kIF9SZWY0ODAzNTI2M30NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczE1NCBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxjZjIzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE0MTgzMDcxIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIChiKVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNDE4MzA3MSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCklmLCBmb3IgYW55IHJlYXNvbiwgdGhlIEVhc2VtZW50cyBzZXQgZm9ydGggb24gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNDE4MzA3MSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBFeGhpYml0IEEtMn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTQxODMwNzEgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQogZG8gbm90IGNvbnN0aXR1dGUgdGhlIHJpZ2h0cyB0byBjb25zdHJ1Y3QgYW5kIG1haW50YWluIGNvbGxlY3RpXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgb24gZmFjaWxpdGllcyBuZWNlc3NhcnkgZm9yIGEgU3Vic2VxdWVudCBQcm9qZWN0LCBlYWNoIEdyYW50aW5nIENvLVRlbmFudCBhZ3JlZXMgdGhhdCBhcyBwcm9tcHRseSBhcyBwcmFjdGljYWJsZSBpdCBzaGFsbCwgc3ViamVjdCB0byB0aGUgbGltaXRhdGlvbnMgb2YgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE0MTgzMDcxIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTQxODMwNzEgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIFJFRiBfUmVmNDgwMzUyNzYgXFx3IFxcaCB9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBcXCogTUVSR0VGT1JNQVQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNDE4MzA3MSB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNDAwMzgwMDMwMDAzMzAwMzUwMDMyMDAzNzAwMzYwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ3OTQyNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgNS41fX19XHNlY3RkIFxsdHJzZWN0DQpccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTQxODMwNzEgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIGJlbG93LCBncmFudCB0byBhIEpvaW5pbmcgQ28tVGVuYW50IGFueSBhZGRpdGlvDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBuYWwgRWFzZW1lbnRzIG5lY2Vzc2FyeSBmb3IgdGhlIFN1YnNlcXVlbnQgUHJvamVjdCwgdG8gdGhlIGV4dGVudCB0aGUgR3JhbnRpbmcgQ28tVGVuYW50IGhhcyB0aGUgcmlnaHQgdG8gZ3JhbnQgc3VjaCBhZGRpdGlvbmFsIEVhc2VtZW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTMwNzM1OTQgLg0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTI2NX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMTU0IFxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGNmMjNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIChjKVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpPbiBvciBhZnRlciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBpdHMgUmVndWxhdG9yeSBBcHByb3ZhbCBEYXRlfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgLCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTY0ODY5OSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBhfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgbnl9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDk2NDg2OTkgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIENvLVRlbmFudCB9e1xydGxjaFxmY3MxIA0KXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIG1heSBkZWxpdmVyIHdyaXR0ZW4gbm90aWNlIHRvIHRoZSBvdGhlciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDk2NDg2OTkgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQ28tVGVuYW50c317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIG9mIHN1Y2ggfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5NjQ4Njk5IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIENvXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDk2NDg2OTkgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgc317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KIGRlc2lyZSB0byBhY3F1aXJlIGEgc2VwYXJhdGUgaW50ZXJlc3QgaW4gfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgYW4gZWFzZW1lbnQgaGVsZCBieSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBhbm90aGVyfXtccnRsY2hcZmNzMSBcYWYxIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDk2NDg2OTkgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgYW5kIHNlZWtpbmcgc3VjaCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDk2NDg2OTkgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjEgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTY0ODY5OSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIGNvbnNlbnQgdGhlcmV0by4gIFRoZSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDk2NDg2OTkgDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgdGhhdCBob2xkcyBzdWNoIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGV9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTY0ODY5OSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBhc2VtZW50fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIHNoYWxsIG5vdCB1bnJlYXNvbmFibHkgd2l0aGhvbGQsIGNvbmRpdGlvbiBvciBkZWxheSBzdWNoIGNvbnNlbnQuICBVcG9uIHRoZSBncmFudA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgaW5nIG9mIHN1Y2ggY29uc2VudCwgdGhlIHByb2Nlc3NlcyBzZXQgZm9ydGggaGVyZWluIGZvciBFYXNlbWVudHMgc2hhbGwgYXBwbHk7IH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDM5NjM1OCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBwcm92aWRlZCwgaG93ZXZlcn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgLCB0aGUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5NjQ4Njk5IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGdyYW50aW5nfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQogQ28tVGVuYW50IG1heSAoaSkgaW5jbHVkZSBlbmdpbmVlcmluZywgYW5kIGNvbnN0cnVjdGlvbiwgb3BlcmF0aW9uIGFuZCBtYWludGVuYW5jZS1yZWxhdGVkfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgdGVybXMgYW5kIGNvbmRpdGlvbnMgb24gc3VjaCB0cmFuc2ZlcnMgdGhhdCBhcmUgcmVhc29uDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBhYmx5IG5lY2Vzc2FyeSB0byBlbnN1cmUgdGhhdCB0aGUgb3BlcmF0aW9ucyBhbmQgbWFpbnRlbmFuY2Ugb2YgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgdGhlIGdyYW50aW5nfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgd2lsbCBub3QgYmUgdW5yZWFzb25hYmx5IGludGVycnVwdGVkLCBhbmQgKGlpKSByZWNvdmV9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgciBOZXQgUmV2ZW51ZSBMb3NzIHJlaW1idXJzZW1lbnRzIGRlc2NyaWJlZCBpbiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDQzOTYzNTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgU2VjdGlvbiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDExMjkwNzEyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICAgUkVGIF9SZWY0ODAzNTI2NiBcXHcgXFxoIFxcKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDExMjkwNzEyIHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNTAwMzIwMDM2MDAzNjAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDc5NDI2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAzLjJ9fX1cc2VjdGQgXGx0cnNlY3QNClxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIGJlbG93IGZvciBhbnlcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCiBpbnRlcnJ1cHRpb25zIG9mIGl0cyBvcGVyYXRpb25zIGFuZCBtYWludGVuYW5jZSBhcyBhIHJlc3VsdCB0aGVyZW9mfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCAufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSB7XCpcYmtta2VuZCBfUmVmNDgwMzUyNjV9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM3NDMxfXtcKlxia21rc3RhcnQgX1JlZjQ4MDM1MjY2fXtcKlxia21rc3RhcnQgX1RvYzYwMTM1NDQzfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy4yXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhcg0KXHMyNjFccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgQ29uZGl0aW9ucyB0byBJbnN0YWxsYXRpb24gb2YgU2VwYXJhdGUgQ29sbGVjdGlvbiBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxjZjFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDM5NjM1OCANCi4gIEFueSBDby1UZW5hbnQgaW5zdGFsbGluZyBhbnkgU2VwYXJhdGUgQ29sbGVjdGlvbiBGYWNpbGl0aWVzIHNoYWxsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxjZjFcaW5zcnNpZDE0MjkxOTQ0ICwgdG8gdGhlIGZ1bGxlc3QgZXh0ZW50IGNvbW1lcmNpYWxseSByZWFzb25hYmxlIGFuZCBzdWJqZWN0IHRvIFBydWRlbnQgSW5kdXN0cnkgUHJhY3RpY2UgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGNmMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ0Mzk2MzU4IA0KKGkpIGxpbWl0IGFueSBpbnRlcmZlcmVuY2Ugd2l0aCB0aGUgdXNlIGJ5IHRoZSBDby1UZW5hbnRzIG9mIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBvciB0aGVpciBTZXBhcmF0ZSBGYWNpbGl0aWVzIGR1cmluZyBjb25zdHJ1Y3Rpb24gYWN0aXZpdGllcywgKGlpKSBleGNlcHQgaW4gdGhlIGV2ZW50IG9mIGFuIEVtZXJnZW5jeSwgc2NoZWR1bGUgZHVyaW5nIGFuIG9mZi1wZWFrIGFuZC9vciBsb3cgDQpzb2xhciByZXNvdXJjZSBkb3duLXRpbWUgcGVyaW9kIGZvciBhbnkgcmVxdWlyZWQgZGlzY29ubmVjdGlvbiBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgb3IgU2VwYXJhdGUgRmFjaWxpdGllcyB0byBjb25kdWN0IGNvbnN0cnVjdGlvbiBhY3Rpdml0aWVzIGluIG9yZGVyIHRvIG1pbmltaXplIHRoZSBpbXBhY3Qgb24gdGhlIFByb2plY3RzIG9mIHRoZSBDby1UZW5hbnRzLCBhbmQgKGlpaSkgcHJvdmlkZSBwcmlvciB3cml0dGVuIG5vdGljZSB0byANCnQNCmhlIG90aGVyIENvLVRlbmFudHMgb2YgY29tbWVuY2VtZW50IG9mIHN1Y2ggY29uc3RydWN0aW9uIGFjdGl2aXRpZXMgdG9nZXRoZXIgd2l0aCBhIHJlYXNvbmFibHkgZGV0YWlsZWQgZGVzY3JpcHRpb24gdGhlcmVvZiwgaW5jbHVkaW5nIGRhdGVzIGFuZCB0aW1lcyBvZiBzdWNoIGNvbnN0cnVjdGlvbiBhbmQgZGlzY29ubmVjdGlvbiwgaWYgYW55LiAgSW4gYWRkaXRpb24sIHRoZSBDby1UZW5hbnQgaW5zdGFsbGluZyBTZXBhcmF0ZSBDb2xsZWN0aQ0Kbw0KbiBGYWNpbGl0aWVzIHNoYWxsIHJlaW1idXJzZSBhbnkgQ28tVGVuYW50IG93bmVyIG9mIGFuIEltcGxlbWVudGVkIFByb2plY3QgZm9yIGFsbCBOZXQgUmV2ZW51ZSBMb3NzZXMgYWNjcnVpbmcgZHVyaW5nIHRoZSBwZXJpb2Qgb2YgZGlzY29ubmVjdGlvbiBhcmlzaW5nIGZyb20gdGhlIGluc3RhbGxhdGlvbiBvZiBTZXBhcmF0ZSBDb2xsZWN0aW9uIEZhY2lsaXRpZXMsIGl0IGJlaW5nIGhlcmVieSBhZ3JlZWQgdGhhdCBwYXltZW50IG9mIHRoZSBODQpldCBSZXZlbnVlIExvc3NlcyBzaGFsbCBiZSBhIENvLVRlbmFudCBvd25lciBvZiBhbiBJbXBsZW1lbnRlZCBQcm9qZWN0XHJxdW90ZSBzIHNvbGUgYW5kIGV4Y2x1c2l2ZSByZW1lZHkgd2l0aCByZXNwZWN0IHRvIGxvc3Mgb2YgcmV2ZW51ZSBhbmQgb3RoZXIgQ29uc2VxdWVudGlhbCBEYW1hZ2VzIGR1ZSB0byB0aGUgcGVyaW9kIG9mIGRpc2Nvbm5lY3Rpb24uIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxjZjFcaW5zcnNpZDE0MjkxOTQ0ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGNmMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ0Mzk2MzU4IFRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGNmMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ0ODgxMjA5IENvLVRlbmFudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGNmMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ0Mzk2MzU4IA0KIGFncmVlIHRoYXQgdGhlIGFjdHVhbCBDb25zZXF1ZW50aWFsIERhbWFnZQ0KcyBhcmlzaW5nIGR1ZSB0byBzdWNoIHBlcmlvZCBvZiBkaXNjb25uZWN0aW9uIHdvdWxkIGJlIGRpZmZpY3VsdCB0byBjb21wdXRlIGFuZCB0aGF0IHRoZSBtZXRob2RvbG9neSBmb3IgZGV0ZXJtaW5pbmcgc3VjaCBkYW1hZ2VzIHNldCBmb3J0aCBhYm92ZSBpcyBhIGdvb2QgZmFpdGggZXN0aW1hdGUgb2YgdGhlIGNhbGN1bGF0aW9ucyB1dGlsaXplZCB0byBkZXRlcm1pbmUgdGhlIGFjdHVhbCBDb25zZXF1ZW50aWFsIERhbWFnZXMgdGhhdCB3b3VsDQpkIGJlIHN1ZmZlcmVkLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTk3ODY2NyB7XCpcYmtta2VuZCBfUmVmNDgwMzc0MzF9e1wqXGJrbWtlbmQgX1JlZjQ4MDM1MjY2fXtcKlxia21rZW5kIF9Ub2M2MDEzNTQ0M30NClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNjAxMzU0NDR9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTk3ODY2NyBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAzLjNcdGFifX1ccGFyZCBcbHRycGFyXHMyNjFccWwgXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxjZjFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTk3ODY2NyBPcGVyYXRpb24gYW5kIE1haW50ZW5hbmNlIG9mIEVhc2VtZW50c317XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxjZjFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTk3ODY2NyAuIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQxNDI5MTk0NCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxjZjFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTk3ODY2NyANClN1YmplY3QgdG8gcmVpbWJ1cnNlbWVudCBmcm9tIGFsbCBDby1UZW5hbnRzIHRoYXQgaGF2ZSBiZWVuIGFzc2lnbmVkIGFuIGludGVyZXN0IGluIHN1Y2ggRWFzZW1lbnRzIGluIGFjY29yZGFuY2Ugd2l0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQxNDI5MTk0NCAgc3VjaCBDby1UZW5hbnRccnF1b3RlIHMgRWFzZW1lbnQgUHJvLVJhdGEgU2hhcmUgcHVyc3VhbnQgdG8gfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGNmMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MzEyMzk4IFNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcY2YxXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDcyOTUzMzcgIFJFRiBfUmVmNDgwMzc0NDUgXFx3IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGNmMVxpbnNyc2lkMTQyOTE5NDQgIFxcKiBNRVJHRUZPUk1BVCB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcY2YxXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDcyOTUzMzcge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNzAwMzQwMDM0MDAzNTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxjZjFcaW5zcnNpZDc5NDI2MiA2LjN9fX1cc2VjdGQgXGx0cnNlY3RccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQxNDI5MTk0NCAgb3IgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxjZjFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzI5NTMzNyAgUkVGIF9SZWY0ODAzNTI5MyBcXHcgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcY2YxXGluc3JzaWQxNDI5MTk0NCAgXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcY2YxXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDcyOTUzMzcge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM1MDAzMjAwMzkwMDMzMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxjZjFcaW5zcnNpZDc5NDI2MiA2LjR9fX1cc2VjdGQgXGx0cnNlY3QNClxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxjZjFcaW5zcnNpZDE0MjkxOTQ0ICwgYXMgYXBwbGljYWJsZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE5Nzg2NjcgDQosIGVhY2ggQ28tVGVuYW50IHNoYWxsIGJlIHJlc3BvbnNpYmxlIGZvciB0aGUgb3BlcmF0aW9uIGFuZCBtYWludGVuYW5jZSBvZiB0aGUgRWFzZW1lbnRzIChidXQgbm90IGFub3RoZXIgQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxjZjFcaW5zcnNpZDE0MjkxOTQ0IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxjZjFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTk3ODY2NyANCnMgU2VwYXJhdGUgRmFjaWxpdGllcykgbG9jYXRlZCB3aXRoaW4gaXRzIFByb2plY3QgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxjZjFcaW5zcnNpZDE0MjkxOTQ0IHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGNmMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxOTc4NjY3IGl0ZS4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxjZjFcaW5zcnNpZDE0MjkxOTQ0ICB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE5Nzg2NjcgQWxsIGFwcGxpY2FibGUgQ28tVGVuYW50cyBhZ3JlZSB0byBwcm92aWRlIHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgYSBzY2hlZHVsZSBvZiBhbGwgY29zdHMgaW5jdXJyZWQgYnkgc3VjaCBDby1UZW5hbnQgaW4gY29ubmVjdGlvbiB3aXRoIHRoZSBtYWludGVuYW5jZSBhbmQgb3BlcmF0aW9uIG9mIHRoZSBFYXNlbWVudHMgbG9jYXRlZCBvbiBpdHMgUHJvamVjdCANCn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQxNDI5MTk0NCBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxjZjFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTk3ODY2NyBpdGUgaW4gd2hpY2ggYW5vdGhlciBDby1UZW5hbnQgaGFzIGFuIGludGVyZXN0Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQxNDI5MTk0NCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyOTI4MTE4IHtcKlxia21rZW5kIF9Ub2M2MDEzNTQ0NH0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmMTAxMzM4OTk2fXtcKlxia21rc3RhcnQgX1JlZjEwMTMzOTAzMH17XCpcYmtta3N0YXJ0IF9SZWYxMDEzMzk1MjJ9e1wqXGJrbWtzdGFydCBfUmVmMTAxMzM5NTU1fXtcKlxia21rc3RhcnQgX1JlZjQ4MDM1MjY3fXtcKlxia21rc3RhcnQgX1RvYzYwMTM1NDQ1fXtcKlxia21rZW5kIF9SZWYxMDEzMzg5OTZ9e1wqXGJrbWtlbmQgX1JlZjEwMTMzOTAzMH17XCpcYmtta2VuZCBfUmVmMTAxMzM5NTIyfQ0Ke1wqXGJrbWtlbmQgX1JlZjEwMTMzOTU1NX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjU5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGJcY2Fwc1xkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgQXJ0aWNsZSA0XHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMjU5XHFjIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDcyMFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGNhcHNcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFNFUEFSQVRFIEZBQ0lMSVRJRVM7IFNFUEFSQVRFIFBST0pFQ1RTfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSB7XCpcYmtta2VuZCBfUmVmNDgwMzUyNjd9DQp7XCpcYmtta2VuZCBfVG9jNjAxMzU0NDV9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM3NDMyfXtcKlxia21rc3RhcnQgX1JlZjQ4MDM1MjY4fXtcKlxia21rc3RhcnQgX1RvYzYwMTM1NDQ2fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTU2MjAzNDIgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNC4xXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhcg0KXHMyNjFccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE1NjIwMzQyIFNlcGFyYXRlIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAuICBFYWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNDMxNjcgQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIGhhcyBwcm9jdXJlZCBvciBtYXksIHN1YmplY3QgdG8gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNTYyMDM0MiBTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTU2MjAzNDIgICBSRUYgX1JlZjQ4MDM1MjU1IFxcdyBcXGggXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTU2MjAzNDIge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM1MDAzMjAwMzUwMDM1MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxjZjFcaW5zcnNpZDc5NDI2MlxjaGFycnNpZDc5NDI2MiAyLjV9fX1cc2VjdGQgXGx0cnNlY3QNClxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNDMxNjcgLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICByZWdhcmRpbmcgQWRkaXRpb25hbCBGYWNpbGl0aWVzLCBhbmQgfQ0Ke1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE1NjIwMzQyIFNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTU2MjAzNDIgICBSRUYgX1JlZjQ4MDM1MjY2IFxcdyBcXGggXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNTYyMDM0MiB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM1MDAzMjAwMzYwMDM2MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxjZjFcaW5zcnNpZDc5NDI2MlxjaGFycnNpZDc5NDI2MiAzLjJ9fX0NClxzZWN0ZCBcbHRyc2VjdFxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNDMxNjcgLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KIHJlZ2FyZGluZyBTZXBhcmF0ZSBDb2xsZWN0aW9uIEZhY2lsaXRpZXMsIHByb2N1cmUsIGluc3RhbGwsIGFuZCBjb25zdHJ1Y3QgY2VydGFpbiBvdGhlciBlbGVjdHJpY2FsIGFuZCBjb21tdW5pY2F0aW9ucyBmYWNpbGl0aWVzIGZvciB0aGUgdHJhbnNtaXNzaW9uIG9mIGVsZWN0cmljaXR5IGFuZCBmb3IgY29tbXVuaWNhdGlvbnMgYWxvbmcgYW5kIHdpdGhpbiB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFNoYXJlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgIFByZW1pc2VzIG9yIHRoZSBFYXNlbWVudHMsIHRvIGJlIG93bmVkIGluZGl2aWR1YWxseSBieSBzdWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTQzMTY3IENvLVRlbmFudH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQogYW5kIG5vdCBieSB0aGUgQ28tVGVuYW50cyBhcyB0ZW5hbnRzIGluIGNvbW1vbiwgaW5jbHVkaW5nIChpKSBtdWx0aXBsZSB1bmRlcmdyb3VuZCBjb250cm9sLCBlbGVjdHJpYyB0cmFuc21pc3Npb24sIGRpc3RyaWJ1dGlvbiBhbmQgY29sbGVjdGlvbiBsaW5lcyBhbmQgZmFjaWxpdGllcywgaW5jbHVkaW5nIGJyZWFrZXJzLCB0cmFuc2Zvcm1lcnMsIGludGVyY29ubmVjdGlvbiBhbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBkIHN3aXRjaGluZyBmYWNpbGl0aWVzLCB2YXVsdHMsIGNhYmluZXRzLCBjb25kdWl0LCBmaWJlciwgY2FibGVzLCB3aXJlcywgaW5zdWxhdG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIA0KcnMsIGFuZCBvdGhlciBjb25kdWN0b3JzLCAoaWkpIG11bHRpcGxlIHVuZGVyZ3JvdW5kIGNvbnRyb2wsIGNvbW11bmljYXRpb25zLCBkYXRhIGFuZCByYWRpbyByZWxheSBzeXN0ZW1zLCBpbmNsdWRpbmcgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgY29uZHVpdCwgZmliZXIsIGNhYmxlcyBhbmQgd2lyZXMsIChpaWkpIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBzdXBlcnZpc29yeSBjb250cm9sIGFuZCBkYXRhIGFjcXVpc2l0aW9uIHN5c3RlbSBjb250cm9sc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgDQosIGFuZCAoaXYpIGZhY2lsaXRpZXMsIHN0cnVjdHVyZXMsIGZpeHR1cmVzLCBhcHB1cnRlbmFuY2VzLCBhY2Nlc3NvcmllcywgYXBwbGlhbmNlcywgbWFjaGluZXJ5LCBtYXRlcmlhbHMgYW5kIGVxdWlwbWVudCBpbiBjb25uZWN0aW9uIHdpdGggdGhlIGNvbnN0cnVjdGlvbiwgb3BlcmF0aW9uIGFuZC9vciBtYWludGVuYW5jZSBvZiB0aGUgZm9yZWdvaW5nIChjb2xsZWN0aXZlbHksIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDAxMDA0NCBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNTYyMDM0MiBTZXBhcmF0ZSBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCApLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IHtcKlxia21rZW5kIF9SZWY0ODAzNzQzMn17XCpcYmtta2VuZCBfUmVmNDgwMzUyNjh9ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIHtcKlxia21rZW5kIF9Ub2M2MDEzNTQ0Nn0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzUyNjl9e1wqXGJrbWtzdGFydCBfUmVmNDgwMzc0MzN9e1wqXGJrbWtzdGFydCBfVG9jNjAxMzU0NDd9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA0LjJcdGFifX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBPcGVyYXRpb24gYW5kIE1haW50ZW5hbmNlIG9mIFNlcGFyYXRlIEZhY2lsaXRpZXM7IFJpZ2h0IHRvIEVuY3VtYmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgLiAgRWFjaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE0MzE2NyANCkNvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBzaGFsbCBiZSByZXNwb25zaWJsZSBmb3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwICB0aGUgb3BlcmF0aW9uIGFuZCBtYWludGVuYW5jZSBvZiBpdHMgb3duIFNlcGFyYXRlIEZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgYWNpbGl0aWVzIGFuZCBzaGFsbCBiZSBlbnRpdGxlZCBhdCBhbnkgdGltZSB0byBtb3J0Z2FnZSwgcGxlZGcNCmUsIGNvbGxhdGVyYWxseSBhc3NpZ24sIGVuY3VtYmVyIG9yIGdyYW50IGEgc2VjdXJpdHkgaW50ZXJlc3QgaW4gaXRzIFNlcGFyYXRlIEZhY2lsaXRpZXMgYW5kIGl0cyByaWdodHMgdW5kZXIgdGhpcyBBZ3JlZW1lbnQgd2l0aCByZXNwZWN0IHRoZXJldG8gdG8gYW55IFNlY3VyZWQgUGFydHkue1wqXGJrbWtlbmQgX1JlZjQ4MDM1MjY5fXtcKlxia21rZW5kIF9SZWY0ODAzNzQzM317XCpcYmtta2VuZCBfVG9jNjAxMzU0NDd9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1MjcwfXtcKlxia21rc3RhcnQgX1JlZjQ4MDM3NDM0fXtcKlxia21rc3RhcnQgX1RvYzYwMTM1NDQ4fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTMyMDM4OTEgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNC4zXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTMyMDM4OTEgQ29uZGl0aW9ucyB0byBJbnN0YWxsYXRpb24gb2YgU2VwYXJhdGUgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIC4gIEFueSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE0MzE2NyBDby1UZW5hbnR9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBpbnN0YWxsaW5nIGFueSBTZXBhcmF0ZSBGYWNpbGl0aWVzIHNoYWxsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgLCBzdWJqZWN0IHRvIFBydWRlbnQgSW5kdXN0cnkgUHJhY3RpY2VzLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KIChpKSBsaW1pdCBhbnkgaW50ZXJmZXJlbmNlIHdpdGggdGhlIHVzZSBieSB0aGUgQ28tVGVuYW50cyBvZiB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBTaGFyZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIA0KIEZhY2lsaXRpZXMgb3IgdGhlaXIgU2VwYXJhdGUgRmFjaWxpdGllcywgKGlpKSBzY2hlZHVsZSBkdXJpbmcgYW4gb2ZmLXBlYWsgYW5kL29yIGxvdyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IHNvbGFyIHJlc291cmNlIGRvd24tdGltZSBwZXJpb2QgZm9yIGFueSANCnJlcXVpcmVkIGRpc2Nvbm5lY3Rpb24gb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzIG9yIFNlcGFyYXRlIEZhY2lsaXRpZXMgdG8gY29uZHVjdCBjb25zdHJ1Y3Rpb24gYWN0aXZpdGllcyBpbiBvcmRlciB0byBtaW5pbWl6ZSB0aGUgaW1wYWN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ0MDEwMDQ0ICBvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjggbiB0aGUgUHJvamVjdHMgb2YgdGhlIENvLVRlbmFudHMsIGFuZCAoaWlpKSBwcm92aWRlIHByaW9yIHdyaXR0ZW4gbm90aWNlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTQzMTY3IG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQogdGhlIGNvbW1lbmNlbWVudCBvZiBzdWNoIGNvbnN0cnVjdGlvbiBhY3Rpdml0aWVzIHRvZ2V0aGVyIHdpdGggYSByZWFzb25hYmx5IGRldGFpbGVkIGRlc2NyaXB0aW9uIHRoZXJlb2YsIGluY2x1ZGluZyBkYXRlcyBhbmQgdGltZXMgb2Ygc3VjaCBjb25zdHJ1Y3Rpb24gYW5kIGRpc2Nvbm5lY3Rpb24sIGlmIGFueX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTQzMTY3IA0KLCB0byBhbnkgQ28tVGVuYW50cyB3aG9zZSBQcm9qZWN0cyBtYXkgYmUgaW1wYWN0ZWQgYnkgc3VjaCBjb25zdHJ1Y3Rpb24ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIA0KSW4gYWRkaXRpb24sIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE0MzE2NyBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgaW5zdGFsbGluZyBTZXBhcmF0ZSBGYWNpbGl0aWVzIHNoYWxsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCAgDQp9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIHJlaW1idXJzZSBhbnkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNDMxNjcgQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQogb3duZXIgb2YgYW4gSW1wbGVtZW50ZWQgUHJvamVjdCBmb3IgYWxsIE5ldCBSZXZlbnVlIExvc3NlcyBhY2NydWluZyBkdXJpbmcgdGhlIHBlcmlvZCBvZiBkaXNjb25uZWN0aW9uIGFyaXNpbmcgZnJvbSB0aGUgaW5zdGFsbGF0aW9uIG9mIFNlcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgYXJhdGUgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDQgIHtcKlxia21rZW5kIF9SZWY0ODAzNTI3MH17XCpcYmtta2VuZCBfUmVmNDgwMzc0MzR9aW4gYWNjb3JkYW5jZSB3aXRoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTMwMDM0NDAgU2VjdGlvbiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMzAwMzQ0MCANCiBSRUYgX1JlZjQ4MDM1NDYyIFxcdyBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgIFxcKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEzMDAzNDQwIHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNTAwMzQwMDM2MDAzMjAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDc5NDI2MiAxNS4xfX19XHNlY3RkIFxsdHJzZWN0DQpccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICBhbmQgc2hhbGwgb3RoZXJ3aXNlIGJlIHN1YmplY3QgdG8gdGhlIG90aGVyIGluZGVtbmlmaWNhdGlvbiBvYmxpZ2F0aW9ucyBzZXQgZm9ydGggaW4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEzMDAzNDQwIFNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTMwMDM0NDAgIFJFRiBfUmVmNDgwMzU0NjIgXFx3IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCAgXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMzAwMzQ0MCB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM1MDAzNDAwMzYwMDMyMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNzk0MjYyIDE1LjF9fX0NClxzZWN0ZCBcbHRyc2VjdFxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgIGZvciBhbnkgZGFtYWdlcyBjYXVzZWQgYnkgc3VjaCBDby1UZW5hbnQgaW4gY29ubmVjdGlvbiB3aXRoIHRoZSBpbnN0YWxsYXRpb24gb2Ygc3VjaCBTZXBhcmF0ZSBGDQphY2lsaXRpZXMufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSB7XCpcYmtta2VuZCBfVG9jNjAxMzU0NDh9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1MjcxfXtcKlxia21rc3RhcnQgX1RvYzYwMTM1NDQ5fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNTkgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcYlxjYXBzXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIEFydGljbGUgNVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzMjU5XHFjIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHg3MjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxiXGNhcHNcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBcbGluZSBDT05TVFJVQ1RJT04gRUFTRU1FTlQ7IEFDQ0VTUywgTk9OSU5URVJGRVJFTkNFOyBOQVRVUkUgT0YgUkVMQVRJT05TSElQOyBXQUlWRVIgT0YgUEFSVElUSU9OfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IHtcKlxia21rZW5kIF9SZWY0ODAzNTI3MX17XCpcYmtta2VuZCBfVG9jNjAxMzU0NDl9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM3NDM1fXtcKlxia21rc3RhcnQgX1JlZjQ4MDM1MjcyfXtcKlxia21rc3RhcnQgX1RvYzYwMTM1NDUwfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNS4xXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhcg0KXHMyNjFccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IFRlbXBvcmFyeSBDb25zdHJ1Y3Rpb24gRWFzZW1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE2MjEzOTIwIC4gIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDQgUH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTYyMTM5MjAgcmlvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICB0byBhIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTYyMTM5MjAgDQpKb2luaW5nIENvLVRlbmFudCBhY3F1aXJpbmcgYW4gaW50ZXJlc3QgaW4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgYW55IG9mIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTYyMTM5MjAgdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE2MjEzOTIwICBFYXNlbWVudHMgYXMgZGVzY3JpYmVkIGluIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDYyNTcwMjggICBSRUYgX1JlZjQ4MDM1MjYxIFxcbiBcXGggXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ2MjU3MDI4IHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNDAwMzgwMDMwMDAzMzAwMzUwMDMyMDAzNjAwMzEwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGNmMVxpbnNyc2lkNzk0MjYyXGNoYXJyc2lkNzk0MjYyIEFydGljbGUgM319fQ0KXHNlY3RkIFxsdHJzZWN0XHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE2MjEzOTIwICBhYm92ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICwgfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBlYWNoIE9wZXJhdGlvbmFsIENvLVRlbmFudCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBoZXJlYnkgZ3JhbnRzIHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzg3NjkwMCANCmFueSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBzdWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzg3NjkwMCBKb2luaW5nIENvLVRlbmFudCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAodG8gdGhlIGV4dGVudCB0aGF0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ3ODc2OTAwIHN1Y2ggZ3JhbnRpbmcgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgQ28tVGVuYW50IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIGhhcyB0aGUgcmlnaHQgdG8gbWFrZSBzdWNoIGdyYW50KSAoaSkgYSB0ZW1wb3JhcnkgYW5kIG5vbi1leGNsdXNpdmUgYWNjZXNzIGFuZCBjb25zdH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBydWN0aW9uIHN1Yi1lYXNlbWVudCBvbiwgb3ZlciwgdW5kZXIgYW5kIGFjcm9zcyB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNjIxMzkyMCBFYXNlbWVudHMsIGFuZCAoaWl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICkgYSB0ZW1wb3JhcnkgYW5kIG5vbi1leGNsdXNpdmUgYWNjZXNzIGFuZCBjb25zdHJ1Y3Rpb24gZWFzZW1lbnQgb24sIG92ZXIsIHVuZGVyIGFuZCBhY3Jvc3MgYW55IGFuZCBhbGwgYWNjZXNzIHJvdXRlcyB0byBhbmQgZnJvbSB0aGUgRWFzZW1lbnRzIGFuZCB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANClNoYXJlZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFByZW1pc2VzLCBvbmx5IHRvIHRoZSBleHRlbnQgbmVjZXNzYXJ5IGZvciBzdWNoIEpvDQppbmluZyBDby1UZW5hbnQgdG8gY29uc3RydWN0IGFuZCBpbnN0YWxsIGFueSBTZXBhcmF0ZSBGYWNpbGl0aWVzIGFuZCB0byBpbnRlcmNvbm5lY3Qgd2l0aCwgYWNjZXNzLCBhbmQgdXRpbGl6ZSBhbnkgU2hhcmVkIEZhY2lsaXRpZXMgY29udGVtcGxhdGVkIHRvIGJlIHVzZWQgYnkgc3VjaCBTdWJzZXF1ZW50IFByb2plY3QgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQp0byBkZWxpdmVyIGVuZXJneSBvdmVyIHN1Y2ggU2hhcmVkIEZhY2lsaXRpZXMgKGNvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBsbGVjdGl2ZWx5LCB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFRlbXBvcmFyeSBDb25zdHJ1Y3Rpb24gRWFzZW1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IA0KKSwgd2hpY2ggVGVtcG9yYXJ5IENvbnN0cnVjdGlvbiBFYXNlbWVudCBzaGFsbCBleHBpcmUgd2hlbiBzdWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTYyMTM5MjAgQ28tVGVuYW50IGFjcXVpcmVzIGFuIGludGVyZXN0IGluIHRoZSBFYXNlbWVudHMufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQogIFRoZSBncmFudGVlIG9mIGFueSBzdWNoIFRlbXBvcmFyeSBDb25zdHJ1Y3Rpb24gRWFzZW1lbnQgYWdyZWVzIHRvIGNvbXBseSB3aXRoIGFueSB1bmRlcmx5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBpbmcgRWFzZW1lbnQgYW5kL29yIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IGx9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTYyMTM5MjAgZWFzZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBvciBvdGhlciBhZ3JlZW1lbnQsIGNvdmVuYW50LCBjb25kaXRpb24gb3IgcmVzdHJpY3Rpb24gYXBwbGljYWJsZSB0byB0aGUgcHJvcGVydHkgdXBvbiB3aGljaCBzdWNoIFRlbXBvcmFyeSBDb25zdHJ1Y3Rpb24gRWFzZW1lbnQgaXMgZ3JhbnRlZC4NCn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAge1wqXGJrbWtlbmQgX1JlZjQ4MDM3NDM1fXtcKlxia21rZW5kIF9SZWY0ODAzNTI3Mn17XCpcYmtta2VuZCBfVG9jNjAxMzU0NTB9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1MjczfXtcKlxia21rc3RhcnQgX1JlZjQ4MDM3NDM2fXtcKlxia21rc3RhcnQgX1RvYzYwMTM1NDUxfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTA2NzQ3OSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA1LjJcdGFifX1ccGFyZCBcbHRycGFyDQpcczI2MVxxbCBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMDY3NDc5IA0KQWNjZXNzIHRvIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBhbmQgU2VwYXJhdGUgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIC4gIFN1YmplY3QgdG8gdGhlIHRlcm1zIGFuZCBsaW1pdGF0aW9ucyBzZXQgZm9ydGggaW4gdGhpc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgIEFnDQpyZWVtZW50IChhbmQgc3ViamVjdCB0byB0aGlyZC1wYXJ0eSByZWFsIGVzdGF0ZSBpbnRlcmVzdCBsaW1pdGF0aW9ucyBvbiBhIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTYyMTM5MjAgQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQogaGVyZXVuZGVyLCBpZiBhbnkpLCBlYWNoIENvLVRlbmFudCBhbmQgaXRzIGNvbnRyYWN0b3JzIGFuZCBkZXNpZ25lZXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgKGkpIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIHNoYWxsIGhhdmUgdW5yZXN0cmljdGVkIHRlbXBvcmFyeSBhY2Nlc3MgdG8gdGhlIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBTaGFyZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDc4NzY5MDAgUHJlbWlzZXMgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBTaGFyZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxICBGYWNpbGl0aWVzIChpdCBiZWluZyB1bmRlcnN0b29kIHRoYXQgdGhlIGRheS10by1kYXkgb3BlcmF0aW9uIG9mIHRoZSBTaGFyZWR9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgIEZhY2lsaXRpZXMgb24gdGhlIFNoYXJlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDAxMDA0NCAgUHJlbWlzZXMgc2hhbGwgYmUgcGVyZm9ybWVkIHNvbGVseSBieSB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIGFzIHByb3ZpZGVkIGhlcmV1bmRlcn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgKSwgYW5kIChpaSkgc2hhbGwgaGF2ZSB1bnJlc3RyaWN0ZWQgYWNjZXNzIHRvIGl0cyBTZXBhcmF0ZSBGYWNpbGl0aWVzLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICAgTm90d2l0aHN0YW5kaW5nIHRoZSBwcmVjZWRpbmcgc2VudGVuY2UsIGV4Y2VwdCBpbiB0aGUgZXZlbnQgb2YgYW4gRW1lcmdlbmN5LCBlYWNoIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNjIxMzkyMCBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgc2hhbGwgZ2l2ZSB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIFJlcHJlc2VudGF0aXZlIGF0IGxlYXN0IH17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTYxMzk2MjAgDQpbUkVEQUNURURdfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIHByaW9yIG5vdGljZSBvZiB0aGUgaW50ZW50IHRvIHBlcm1pdCBpdHMgY29udHJhY3RvcnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAgb3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIGRlc2lnbmVlcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE2MjEzOTIwIGFjY2Vzc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDc4NzY5MDAgU2hhcmVkIFByZW1pc2VzIGFuZCBTaGFyZWQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgRmFjaWxpdGllcyBhbmQgYXQgbGVhc3QgfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIA0KXGJcaW5zcnNpZDE2MTM5NjIwIFtSRURBQ1RFRF19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgZGF5cyBwcmlvciBub3RpY2Ugb2YgdGhlIGludGVudCB0byBwZXJtaXQgaXRzIGNvbnRyYWN0b3JzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgIG9yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgZGVzaWduZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgZXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgdG8gZW50ZXIgdXBvbiB0aGUgRWFzZW1lbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDc4NzY5MDAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIChzdWNoIG5vdGljZSBtYXkgYmUgYnkgdGVsZXBob25lLCBlLW1haWwsIG9yIGFueSBvdGhlciByZWNvZ25pemVkIGVsZWN0cm9uaWMgbWVhbnMgaW4gYWRkaXRpb24gdG8gYW55IG90aGVyIG1ldGhvZHMgb2Ygbm90aWNlIGF1dGhvcml6ZWQgaGVyZWluKSwgYW5kIGVhY2ggfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE2MjEzOTIwIENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBzaGFsbCBmb2xsb3csIGFuZCBjYXVzZSBpdHMgY29udHJhY3RvcnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgZGVzaWduZWVzIHRvIGZvbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgDQpsb3csIGFsbCB3cml0dGVuIHNhZmV0eSBhbmQgc2VjdXJpdHkgcHJvY2VkdXJlcyBhZG9wdGVkIGJ5IHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgd2l0aCB0aGUgYXBwcm92YWwgb2YgdGhlIENvLVRlbmFudHMuICBJbiB0aGUgZXZlbnQgb2YgYW4gRW1lcmdlbmN5LCBwcmlvciBub3RpY2UgaXMgbm90IHJlcXVpcmVkLCBidXQgYSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE2MjEzOTIwIA0KQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIHNoYWxsIGdpdmUgbm90aWNlIG9mIGVudHJ5IG9uIHRoZSBFYXNlbWVudHMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBhbmQgdGhlIFNoYXJlZCBQfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIHJlbWlzZXMgYXMgc29vbiBhcyByZWFzb25hYmx5IHByYWN0aWNhYmxlIHRoZXJlYWZ0ZXIufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQge1wqXGJrbWtlbmQgX1JlZjQ4MDM1MjczfXtcKlxia21rZW5kIF9SZWY0ODAzNzQzNn17XCpcYmtta2VuZCBfVG9jNjAxMzU0NTF9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1Mjc0fXtcKlxia21rc3RhcnQgX1JlZjQ4MDM3NDM3fXtcKlxia21rc3RhcnQgX1RvYzYwMTM1NDUyfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNS4zXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgQ29udmV5YW5jZXMgb2YgU2hhcmVkIFByZW1pc2VzIGFuZCBGYWNpbGl0aWVzIGFuZCBFYXNlbWVudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE2NzMyNjk5IC4gIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcY2Fwc1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNjczMjY5OSANCkV4Y2VwdCBhcyBvdGhlcndpc2Ugc2V0IGZvcnRoIGhlcmVpbiwgYWxsIGNvbnZleWFuDQpjZXMgYW5kIHRyYW5zZmVycyB0byBvciBiZXR3ZWVuIGFueSBDby1UZW5hbnRzIG9mIGFueSBTaGFyZWQgUHJlbWlzZXMgYW5kIEZhY2lsaXRpZXMsIEFOWSBBRERJVElPTkFMIEZBQ0lMSVRJRVMsIEFOWSBSRVBMQUNFTUVOVCBDT01QT05FTlRTLCBBTlkgU0VQQVJBVEUgRkFDSUxJVElFUyBhbmQgYW55IEVhc2VtZW50cyBtYWRlIHB1cnN1YW50IHRvIHRoaXMgQWdyZWVtZW50IGFyZSBtYWRlIFwnOTNBUyBJU1wnOTQsIFwnOTMNCldJVEggQUxMIEZBVUxUU1wnOTQgQU5EIFdJVEhPVVQgV0FSUkFOVFksIEVJVEhFUiBFWFBSRVNTIE9SIElNUExJRUQsIElOQ0xVRElORywgV0lUSE9VVCBMSU1JVEFUSU9OLCBBTlkgV0FSUkFOVElFUyBPRiBRVUFMSVRZLCBNRVJDSEFOVEFCSUxJVFksIFNVSVRBQklMSVRZIEFORCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSwgQU5ZIFdBUlJBTlRJRVMgUkVHQVJESU5HIFRIRSBFWElTVEVOQ0V9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTY3MzI2OTkgIE9GIEFOWSBTRUNVUklUWSBJTlRFUkVTVCwgTElFTiBPUiBFTkNVTUJSQU5DRSwgQU5EIEFOWSBXQVJSQU5USUVTIEFSSVNJTkcgQlkgQ09NTU9OIExBVy59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiB7XCpcYmtta2VuZCBfUmVmNDgwMzUyNzR9e1wqXGJrbWtlbmQgX1JlZjQ4MDM3NDM3fQ0Ke1wqXGJrbWtlbmQgX1RvYzYwMTM1NDUyfQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTI3NX17XCpcYmtta3N0YXJ0IF9SZWY0ODAzNzQzOH17XCpcYmtta3N0YXJ0IF9Ub2M2MDEzNTQ1M317XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYxIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDUuNFx0YWJ9fVxwYXJkIFxsdHJwYXINClxzMjYxXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM4XGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIENvbnRpbnVhbmNlIG9mIEVhc2VtZW50c317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSAgYW5kIFNoYXJlZCBQcmVtaXNlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIC4gIEVhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBjaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTYyMTM5MjAgQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIGFncmVlcyB0aGF0IGl0IHdpbGwgbm90IHRha2UgYW55IGFjdGlvbiB0aGF0IHJlc3VsdHMgaW4gYSBicmVhY2ggb2YgdGhlIHRlcm1zIG9mIGFueSBvZiB0aGUgRWFzZW1lbnRzIG9yIGFueSBhZ3JlZW1lbnQgb3IgY292ZW5hbnQgcmVsYXRlZCB0byB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgYW55fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSAgU2hhcmVkIFByZW1pc2VzIG9yIGFueSBTaGFyZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5ICBGYWNpbGl0aWVzLiAgQW55IGFtb3VudHMgZHVlDQp9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgd2l0aCByZXNwZWN0IHRvIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFNoYXJlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSAgUHJlbWlzZXMgb3IgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNjIxMzkyMCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBTaGFyZWR9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgIEZhY2lsaXRpZXMgKHN1Y2ggYXMgcmVhbCBwcm9wZXJ0eSB0YXhlcyksIHNoYWxsIGJlIHBhaWQgYnkgdGhlIENvLVRlbmFuY3kgTWFuYWdlciwgc3ViamVjdCB0byByZWltYnVyc2VtZW50IGZyb20gdGhlIENvLVRlbmFudHMgaW4gYWNjb3JkYW5jZSB3aXRoIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0ICAgUkVGIF9SZWY0ODAzNTI4MyBcXG4gXFxoIFxcKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM1MDAzMjAwMzgwMDMzMDAwMDAwfX0NCn17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGNmMVxpbnNyc2lkNzk0MjYyXGNoYXJyc2lkNzk0MjYyIEFydGljbGUgNn19fVxzZWN0ZCBcbHRyc2VjdFxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE2MjEzOTIwICBiZWxvd317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTY2NDY2MTQgLntcKlxia21rZW5kIF9SZWY0ODAzNTI3NX17XCpcYmtta2VuZCBfUmVmNDgwMzc0Mzh9ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE0ODc5OTExIA0KRWFjaCBDby1UZW5hbnQgc2hhbGwgcGF5IHRoZSBhcHBsaWNhYmxlIGxhbmRsb3JkIGZvciBlYWNoIG9mIHN1Y2ggQ28tVGVuYW50XHJxdW90ZSBzIEVhc2VtZW50cywgc3ViamVjdCB0byByZWltYnVyc2VtZW50IGZyb20gdGhlIENvLVRlbmFuY3kgTWFuYWdlciB3aG8gd2lsbCBjb2xsZWN0IHRoZSBhcHBsaWNhYmxlIHJlaW1idXJzZW1lbnQgYW1vdW50cyBmcm9tIGVhY2ggYXBwbGljYWJsZSBDby1UZW5hbnQgaW4gYWNjb3JkYW5jZSB3aXRoIH0NCntcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTQ4Nzk5MTEgICBSRUYgX1JlZjQ4MDM1MjgzIFxcbiBcXGggXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTQ4Nzk5MTEge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM1MDAzMjAwMzgwMDMzMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxjZjFcaW5zcnNpZDc5NDI2MlxjaGFycnNpZDc5NDI2MiBBcnRpY2xlIDZ9fX1cc2VjdGQgXGx0cnNlY3QNClxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNDg3OTkxMSAgYmVsb3cgZm9yIHRoZWlyIEVhc2VtZW50IFByb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IC19e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTQ4Nzk5MTEgUmF0YSBTaGFyZSBvZiBzdWNoIEVhc2VtZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNjY0NjYxNCAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTQ4Nzk5MTEgIH0NCntccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIge1wqXGJrbWtlbmQgX1RvYzYwMTM1NDUzfQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTI3Nn17XCpcYmtta3N0YXJ0IF9SZWY0ODAzNzQzOX17XCpcYmtta3N0YXJ0IF9Ub2M2MDEzNTQ1NH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYxIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA1LjVcdGFifX1ccGFyZCBcbHRycGFyDQpcczI2MVxxbCBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgTm8gSW50ZXJmZXJlbmN9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgLntcKlxia21rZW5kIF9SZWY0ODAzNTI3Nn17XCpcYmtta2VuZCBfUmVmNDgwMzc0Mzl9e1wqXGJrbWtlbmQgX1RvYzYwMTM1NDU0fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTI3N317XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoYSlcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyNjNccWwgXGZpMTQ0MFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDIxNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcaWx2bDJcb3V0bGluZWxldmVsMlxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIEVhY2ggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IHN9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICB1c2Ugb2YgYW55IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IEVhc2VtZW50cywgVGVtcG9yYXJ5IENvbnN0cnVjdGlvbiBFYXNlbWVudHMsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgU2hhcmVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxICBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgIFNoYXJlZCBQcmVtaXNlcyAodG8gdGhlIGV4dGVudCBzdWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBoYXMgYSByaWdodCB0byB1c2UgdGhlIHNhbWUgaGVyZXVuZGVyKSBvciBvZiBzdWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgU2VwYXJhdGUgRmFjaWxpdGllcyBzaGFsbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCAgKGkpIGxpbWl0IGFueSBpbnRlcmZlcmVuY2Ugd2l0aCB0aGUgdXNlIGFuZCBlbmpveW1lbnQgYnkgdGhlIG90aGVyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQogb2YgdGhlaXIgcmlnaHRzIGluIGFuZCB0byB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBTaGFyZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIA0KIEZhY2lsaXRpZXMgYW5kIFNoYXJlZCBQcmVtaXNlcywgKGlpKSBleGNlcHQgaW4gdGhlIGV2ZW50IG9mIGFuIEVtZXJnZW5jeSwgKEEpIHNjaGVkdWxlIGR1cmluZyBhbiBvZmYtcGVhayBhbmQvb3IgbG93IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgDQpzb2xhciByZXNvdXJjZSBkb3duLXRpbWUgcGVyaW9kIGZvciBhbnkgcmVxdWlyZWQgZGlzY29ubmVjdGlvbiBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgb3IgU2VwYXJhdGUgRmFjaWxpdGllcyB0byBjb25kdWN0IG1haW50ZW5hbmNlIGFuZCByZXBhaXIgYWN0aXZpdGllcyBpbiBvcmRlciB0byBtaW5pbWl6fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ0MDEwMDQ0IGUgfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjggdGhlIGltcGFjdCBvbiB0aGUgUHJvamVjdHMgb2YgdGhlIG90aGVyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgLCBhbmQgKEIpIHByb3ZpZGUgcHJpb3Igd317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCByaXR0ZW4gbm90aWNlIHRvIHRoZSBvdGhlciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KIG9mIGNvbW1lbmNlbWVudCBvZiBzdWNoIG1haW50ZW5hbmNlIGFuZCByZXBhaXIgYWN0aXZpdGllcyB0b2dldGhlciB3aXRoIGEgcmVhc29uYWJseSBkZXRhaWxlZCBkZXNjcmlwdGlvbiB0aGVyZW9mLCBpbmNsdWRpbmcgZGF0ZXMgYW5kIHRpbWVzIG9mIHN1Y2ggbWFpbnRlbmFuY2UgYW5kIHJlcGFpciBhY3Rpdml0aWVzLCBhbmQgYW55IGRpc2Nvbm5lY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANCntcKlxia21rZW5kIF9SZWY0ODAzNTI3N30sIChpaWkpIG5vdCBtYXRlcmlhbGx5IGFuZCBhZHZlcnNlbHkgYWZmZWN0IHRoZSBhYmlsaXR5IG9mIGFueSBDby1UZW5hbnQgdG8gdXNlIGFuZCBvcGVyYXRlIGEgUHJvamVjdCBleGlzdGluZyBhcyBvZiB0aGUgZGF0ZSBzdWNoIENvLVRlbmFudCBkZXZlbG9wcyBpdHMgU3Vic2VxdWVudCBQcm9qZWN0LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAxNDM0NSAgKGl2KX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICBvdGhlciB0aGFuIHRvIHRoZSBleHRlbnQgcHJvdmlkZWQgZm9yIHB1cnN1YW50IHRvIHRoZSB0ZXJtcyBvZiB0aGlzIEFncmVlbWVudCwgbm90IGRlY3JlYXNlIGFueSByaWdodHMgb2YgYSBDby1UZW5hbnQgaGVyZXVuZGVyLCBvciAodil9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMTQzNDUgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IG90aGVyIHRoYW4gdG8gdGhlIGV4dGVudCBwcm92aWRlZCBmb3IgcHVyc3VhbnQgdG8gdGhlIHRlcm1zIG9mIHRoaXMgQWdyZWVtZW50IChvciB0byB0aGUgZXh0ZW50IHN1Y2ggQ28tVGVuYW50IGlzIGZ1bGx5IGNvbXBlbnNhdGVkIGZvciBzdWNoIGluY3JlYXNlIGluIG9ibGlnYXRpb25zKSwgbm90IH0NCntccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAxNDM0NSBpbmNyZWFzZSB0aGUgb2JsaWdhdGlvbnMgb2YgYW55IENvLVRlbmFudCBoZXJldW5kZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzUyNzh9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGIpXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIEVhY2ggfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIHNoYWxsIHJlaW1idXJzZSBhbnkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIHRoYXQgaXMgYW4gb3duZXIgb2YgYW4gSW1wbGVtZW50ZWQgUHJvamVjdCBmb3IgYWxsIE5ldCBSZXZlbnVlIExvc3NlcyBhY2NydWluZyBkdXJpbmcgdGhlIHBlcmlvZCBvZiBkaXNjb25uZWN0aW9uIGFyaXNpbmcgZnJvbSBhbnkgaW50ZXJjb25uZWN0aW9uIGR1ZSB0byB0aGUgb3duZXIgb2YgYSBQcm9qZWN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBzIGNvbnN0cnVjdGlvbiwgb3BlcmF0aW9uIG9yIG1haW50ZW5hbmNlIGFjdGl2aXRpZXMsIHVzZSBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgb3IgRWFzZW1lbnRzLCBvciBlbnRyeSB1cG9uIGFueSBTaGFyZWR9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgIEZhY2lsaXRpZXMgb3IgRWFzZW1lbnRzLCBpdCBiZWluZyBoZXJlYnkgYWdyZWVkIHRoYXQgcGF5bWVudCBvZiB0aGUgTmV0IFJldmVudWUgTG9zc2VzIHNoYWxsIGJlIHRoZSBDby1UZW5hbnQgb3duZXIgb2YgYW4gSW1wbGVtZW50ZWQgUHJvamVjdFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDQwMTAwNDQgcyBzb2xlIGFuZCBleGNsdXNpdmUgcmVtZWR5IHdpdGggcmVzcGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjggY3QgdG8gbG9zcyBvZiByZXZlbnVlIGFuZCBvdGhlciBDb25zZXF1ZW50aWFsIERhbWFnZXMgZHVlIHRvIHRoZSBwZXJpb2Qgb2YgZGlzY29ubmVjdGlvbi4gfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgVGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIGFncmVlIHQNCmhhdCB0aGUgYWN0dWFsIENvbnNlcXVlbnRpYWwgRGFtYWdlcyBhcmlzaW5nIGR1ZSB0byBzdWNoIHBlcmlvZCBvZiBkaXNjb25uZWN0aW9uIHdvdWxkIGJlIGRpZmZpY3VsdCB0byBjb21wdXRlIGFuZCB0aGF0IHRoZSBtZXRob2RvbG9neSBmb3IgZGV0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANCmVybWluaW5nIHN1Y2ggZGFtYWdlcyBzZXQgZm9ydGggYWJvdmUgaXMgYSBnb29kIGZhaXRoIGVzdGltYXRlIG9mIHRoZSBjYWxjdWxhdGlvbnMgdXRpbGl6ZWQgdG8gZGV0ZXJtaW5lIHRoZSBhY3R1YWwgQ29uc2VxdWVudGlhbCBEYW1hZ2VzIHRoYXQgd291bGQgYn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgZSBzdWZmZXJlZC57XCpcYmtta2VuZCBfUmVmNDgwMzUyNzh9DQoNClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzUyNzl9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGMpXHRhYn0NCkVhY2ggQ28tVGVuYW50IHNoYWxsIGhhdmUgdGhlIHJpZ2h0IHRvIHRyYW5zbWl0IGVsZWN0cmljYWwgcG93ZXIgZnJvbSBpdHMgUHJvamVjdCB0aHJvdWdoIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBpbiBhY2NvcmRhbmNlIHdpdGggaXRzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgDQpVbmRpdmlkZWQgSW50ZXJlc3RzIGluIHN1Y2ggU2hhcmVkIEZhY2lsaXRpZXMgY2FsY3VsYXRlZCBpbiBhY2NvcmRhbmNlIHdpdGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNzMyMjU0IGl0cyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBPcGVyYXRpb25hbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MTk4ODA2ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE3MzIyNTQgUHJvLVJhdGEgU2hhcmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDM2ODMxMTcgIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KIGluIGFuIGFtb3VudCBub3QgdG8gZXhjZWVkIGl0cyBQZXJtaXR0ZWQgQ2FwYWNpdHkgYW5kIHRvIG90aGVyd2lzZSB1dGlsaXplIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFNoYXJlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgDQogRmFjaWxpdGllcyBpbiBhY2NvcmRhbmNlIHdpdGggaXRzIFVuZGl2aWRlZCBJbnRlcmVzdHMgaW4gY29ubmVjdGlvbiB3aXRoIHRoZSBnZW5lcmF0aW9uIGFuZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCB0cmFuc21pc3Npb24gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBvZiBlbGVjdHJpY2l0eSBmcm9tIGl0cyBQcm9qZWN0Ln17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQge1wqXGJrbWtlbmQgX1JlZjQ4MDM1Mjc5fSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIA0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTI4MH17XCpcYmtta3N0YXJ0IF9SZWY0ODAzNzQ0MH17XCpcYmtta3N0YXJ0IF9Ub2M2MDEzNTQ1NX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYxIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDUuNlx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzMjYxXHFsIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM4XGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBDb3ZlbmFudHMgUnVubmluZyB3aXRoIHRoZSBMYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgLiAgVGhlIGNvdmVuYW50cyBvZiB0aGUgfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBtYWRlIGluIHRoZSBleGhpYml0cyBhdHRhY2hlZCB0byB0aGlzIEFncmVlbWVudCBzaGFsbCBiZSBkZWVtZWQgdG8gYmUgY292ZW5hbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwICBydW5uaW5nIHdpdGggYW5kIGJpbmRpbmcgdXBvbiB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIGludGVyZXN0IGluIHRoZSBFYXNlbWVudHMsIGFuZCB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBTaGFyZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxICBQcmVtaXNlcyBwdXJzdQ0KYW50IHRvIEFwcGxpY2FibGUgTGF3IGZvciB0aGUgZHVyYXRpb24gb2YgdGhlIFRlcm0ue1wqXGJrbWtlbmQgX1JlZjQ4MDM1MjgwfXtcKlxia21rZW5kIF9SZWY0ODAzNzQ0MH17XCpcYmtta2VuZCBfVG9jNjAxMzU0NTV9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM3NDQxfXtcKlxia21rc3RhcnQgX1JlZjQ4MDM1MjgxfXtcKlxia21rc3RhcnQgX1RvYzYwMTM1NDU2fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNS43XHRhYn19e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgTmF0dXJlIG9mIFJlbGF0aW9uc2hpcCBCZXR3ZWVuIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcY2YxXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE0OTcwODQwIENvLVRlbmFudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAuICBUaGUgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBhbmQgQ28tVGVuYW5jeSBNYW5hZ2VyIGRvIG5vdCBpbnRlbmQgYnkgdGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIA0KaXMgQWdyZWVtZW50IHRvIGNyZWF0ZSBhIHBhcnRuZXJzaGlwIG9yIGEgam9pbnQgdmVudHVyZSwgYnV0IG1lcmVseSB0byBzZXQgZm9ydGggdGhlIHRlcm1zIGFuZCBjb25kaXRpb25zIHVwb24gd2hpY2ggZWF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIA0KY2ggb2YgdGhlbSBzaGFsbCBob2xkIHRoZWlyIHJlc3BlY3RpdmUgaW50ZXJlc3RzIGluIHRoZSBTaGFyZWQgUHJlbWlzZXMgYW5kIEZhY2lsaXRpZXMuICBFYWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANCiBhbmQgQ28tVGVuYW5jeSBNYW5hZ2VyIGhlcmVieSBlbGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIGN0cyB0byBiZSBleGNsdWRlZCBmcm9tIHRoZSBwcm92aXNpb25zIG9mIFN1YmNoYXB0ZXIgSyBvZiBDaGFwdGVyIDEgb2YgdGhlIEludGVybmFsIFJldmVudWUgQ29kZSBvZiAxOTg2LCBhcyBhbWVuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBlZCAodGhlIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIENvZGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFwnOTQpLCB3aXRoIHJlc3BlY3QgdG8gdGhlIGpvaW50IG93bmVyc2hpcCBvZiB0aGUgU2hhcmVkIH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBQcmVtaXNlcyBhbmQgRmFjaWxpdGllcy4gIFRoZSBleGNsdXNpb24gZWxlY3RlZCBieSB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgaGVyZXVuZGVyfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwICBzaGFsbCBjb21tZW5jZSB3aXRoIHRoZSBleGVjdXRpb24gb2YgdGhpcyBBZ3JlZW1lbnQgYW5kIHNoYWxsIGJlIGVxdWFsbHkgYXBwbGljYWJsZSB0byBhbGwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudHN9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIC4gIEVhY2ggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBhbmQgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBoZXJlYnkgY292ZW5hbnRzIGFuZCBhZ3JlZXMgdGhhdCBlYWNoIH0NCntccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBzaGFsbCByZXBvcnQgb24gc3VjaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIHJlc3BlY3RpdmUgZmVkZXJhbCBhbmQgc3RhdGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgIGluY29tZSB0YXggcmV0dXJucyBzdWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBzfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgcmVzcGVjdGl2ZSBzaGFyZSBvZiBpdGVtcyBvZiBpbmNvbWUsIGdhaW4vbG9zcywgZGVkdWN0aW9uIGFuZCBjcmVkaXRzIHRoYXQgcmVzdWx0IGZyb20gdXNlIG9mIHRoZSBTaGFyZWQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFByZW1pc2VzIGFuZCB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIEZhY2lsaXRpZXMgaW4gYSBtYW5uZXIgY29uc2lzdGVudCB3aXRoIChpKSB0aGUgdHJlYXRtZW50IG9mIHRoZSBjby10ZW5hbmN5IGFzIGEgY28tb3duZXJzaGlwIG9mIHByb3BlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANCnJ0eSAoYW5kIG5vdCBhIHBhcnRuZXJzaGlwKSBmb3IgRmVkZXJhbCBhbmQgc3RhdGUgaW5jb21lIHRheCBwdXJwb3NlcyBhbmQgKGl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIGkpIHRoZSBleGNsdXNpb24gb2YgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnRzfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgZnJvbSBTdWJjaGFwdGVyIEsgb2YgQ2hhcHRlciAxIG9mIHRoZSBDb2RlLCBjb21tZW5jaW5nIHdpdGggdGhlIGZpcnN0IHRheGFibGUgeWVhciBvZiBzdWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICB0aGF0IGluY2x1ZGVzIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBDb250cmFjdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBEYXRlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IC4gIE5vIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgQ28tVGVufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBhbnQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQpub3IgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBzaGFsbCBub3RpZnkgdGhlIENvbW1pc3Npb25lciBvZiBJbnRlcm5hbCBSZXZlbnVlIHRoYXQgc3VjaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIGRlcw0KaXJlcyB0aGF0IFN1YmNoYXB0ZXIgSyBvZiB0aGUgQ29kZSBhcHBseSB0byB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgYW5kIGVhY2ggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIGhlcmVieSBhZ3JlZXMgdG8gaW5kZW1uaWZ5LCBwcm90ZWN0LCBkZWZlbmQgYW5kIGhvbGQgdGhlIG90aGVyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnRzfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBmcmVlIGFuZCBoYXJtbGVzcyBmcm9tIGFsbCBsaWFiaWxpdGllcywgdGF4IGNvbnNlcXVlbmNlcyBhbmQgcmVhc29uYWJsZSBjb3N0cyBhbmQgZXhwZW5zZXMsIGluY2x1ZGluZywgdw0KaXRob3V0IGxpbWl0YXRpb24sIHJlYXNvbmFibGUgYXR0b3JuZXlzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBccnF1b3RlICBmZWVzLCB3aGljaCBtYXkgcmVzdWx0IGZyb20gYW55IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBzbyBub3RpZnlpbmcgdGhlIENvbW1pc3Npb25lciBpbiB2aW9sYXRpb24gb2YgdGhpcyBBZ3JlZW1lbnQgb3Igb3RoZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIHdpc2UgdGFraW5nIGEgY29udHJhcnkgcG9zaXRpb24gb24gYW55IHRheCByZXR1cm4uICBUaGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBhbmQgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBzaGFsbCBub3QgDQpmaWxlIGEgcGFydG5lcnNoaXAgb3IgY29ycG9yYXRlIHRheCByZXR1cm4sIGNvbmR1Y3QgYnVzaW5lc3MgdW5kZXIgYSBjb21tb24gbmFtZSwgZXhlY3V0ZSBhbiBhZ3JlZW1lbnQgaWRlbnRpZnlpbmcgYW55IG9yIGFsbCBvZiB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBhcyBwYXJ0bn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgZXJzLCBzaGFyZWhvbGRlcnMsIG9yIG1lbWJlcnMgb2YgYSBidXNpbmVzcyBlbnRpdHksIG9yIG90aGVyd2lzZSBob2xkIHRoZW1zZWx2ZXMgb3V0IGFzIGEgcGFydG5lcnNoaXAgb3INCiBvdGhlciBmb3JtIG9mIGJ1c2luZXNzIGVudGl0eS4gIEV4Y2VwdCBhcyBleHByZXNzbHkgcHJvdmlkZWQgaH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgZXJlaW4sIG5vIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBpcyBhdXRob3JpemVkIHRvIGFjdCBhcyBhZ2VudCBmb3IsIHRvIGFjdCBvbiBiZWhhbGYgb2YsIG9yIHRvIGRvIGFueSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIGFjdCB0aGF0IHdpbGwgYmluZCBhbnkgb3RoZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIG9yIHRvIGluY3VyIGFueSBvYmxpZ2F0aW9ucyB3aXRoIHJlc3BlY3QgdG8gdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgU2hhcmVkfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggUHJlbWlzZXMgYW5kIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIEZhY2lsaXRpZXMuICBUaGUgZW1wbG95ZWVzLCBhZ2VudHMsIGFuZCBzdWJjb250cmFjdG9ycyBvZiB0aGUgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBhbmQgdGhlIENvLVRlbmFuY3kgTWFuYWdlciwgaW4gcGVyZm9ybWluZyB0aGUgb2JsaWdhdGlvbnMgb2YgZWFjaCByZXNwZWN0aXZlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQogYW5kIHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgdW5kZXIgdGhpcyBBZ3JlZW1lbnQsIHNoYWxsIG5vdCBiZSBkZWVtZWQgdG8gYmUgdGhlIGFnZW50cyBvciBlbXBsb3llZXMgb3Igc3ViY29udHJhY3RvcnMgb2YgYW55IG90aGVyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBvciB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyLiAgRWFjaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIGFja25vd2xlZGdlcyB0aGF0IHdoaWxlIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIGhvbGQgdW5kaXZpZGVkIChpZiBhbnkpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANCiBvciBzZXBhcmF0ZSBpbnRlcmVzdHMgKGlmIGFueSkgaW4gdGhlIEVhc2VtZW50cywgYW5kIGFzIHN1Y2gsIGFsbCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICB3b3VsZCBiZSBlbnRpdGxlZCB0byBjb250cg0Kb2wgdGhlIHJlc3BlY3RpdmUgRWFzZW1lbnRzIGFuZCB0aGVpciB1c2UsIGVhY2ggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IHN9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICByaWdodCB0byBvY2N1cHkgYW5kIHVzZSB0aGUgRWFzZW1lbnRzIGlzIGdvdmVybmVkIGJ5IGFuZCBzdWJqZWN0IHRvIHRoaXMgQWdyZWVtZW50Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAge1wqXGJrbWtlbmQgX1JlZjQ4MDM3NDQxfQ0Ke1wqXGJrbWtlbmQgX1JlZjQ4MDM1MjgxfXtcKlxia21rZW5kIF9Ub2M2MDEzNTQ1Nn0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzc0NDJ9e1wqXGJrbWtzdGFydCBfUmVmNDgwMzUyODJ9e1wqXGJrbWtzdGFydCBfVG9jNjAxMzU0NTd9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA1LjhcdGFifX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBXYWl2ZXIgb2YgUmlnaHQgdG8gUGFydGl0aW9uIG9yIFRlcm1pbmF0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgLiAgVGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnRzfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgZWFjaCBhY2tub3dsZWRnZSBhbmQgYWdyZWUgdGhhdCBpdCB3b3VsZCBiZSBwcmVqdWRpY2lhbCB0byB0aGUgaW50ZXJlc3RzIG9mIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIHVuZGVyIHRoaXMgQWdyZWVtZW50IGlmIGFueSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIHdlcmUgdG8gc2VlayBwYXJ0aXRpb24gb3IgYW55IG90aGVyIHR5cGUgb2YgZGl2aXNpb259ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICwgaW5jbHVkaW5nIGEgcGFydGl0aW9uIGluIGtpbmQgb3Igc2FsZSBhbmQgZGl2aXNpb24gb2YgdGhlIHByb2NlZWRzLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBvZiB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANClNoYXJlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgIEZhY2lsaXRpZXMgb3IgdGhlIFNoYXJlZCBQcmVtaXNlcywgb3IgdG8gZmlsZSBhbiBhY3Rpb24gZm9yIHN1Y2ggcGFydGl0aW9uIG9yIGRpdmlzaW9uLiAgUGFydGl0aW9uIG9mIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgDQpTaGFyZWQgRmFjaWxpdGllcyBvciB0aGUgU2hhcmVkIFByZW1pc2VzIHdvdWxkIHJlc3VsdCBpbiBzdWJzdGFudGlhbCBhbmQgaXJyZXBhcmFibGUgZGFtYWdlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDAxMDA0NCB0byB0aGUgQ28tVGVuYW50cywgYW5kIGlzIGxpa2VseSB0byBpbnRlcmZlcmUgd2l0aCBhIENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IFxycXVvdGUgcyBhYmlsaXR5IHRvIHRyYW5zbWl0IHBvd2VyLiAgVH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTczMjYxOCBoZXJlZm9yZSwgaW4gY29uc2lkZXJhdGlvbiBvZiBzdWNoIGZhY3QgYW5kIGZvciBvdGhlciBnb29kIGFuZCB2YWx1YWJsZSBjb25zaWRlcmF0aW9uLCBlYWNoIG9mIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIGhlcmVieSB3YWl2ZSBhbmQgcmVsaW5xdWlzaCBhbnkgYW5kIGFsbCByaWdodHMgdGhhdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIA0KaXQgbWF5IGhhdmUgdG8gc2VlayBhIHBhcnRpdGlvbiBvciBhbnkgb3RoZXIgdHlwZSBvZiBkaXZpc2lvbiBvZiB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBTaGFyZWQgRmFjaWxpdGllcyBvciB0aGUgU2hhcmVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSAgUHJlbWlzZXMuICBUaGUgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KIGFyZSByZWx5aW5nIHVwb24gdGhpcyB3YWl2ZXIgdG8gdGhlaXIgZGV0cmltZW50IGluIGV4cGVuZGluZyBzdWJzdGFudGlhbCBmdW5kcyB0byBjb25zdHJ1Y3QgdGhlIFByb2plY3RzIGFuZCBvdGhlciBpbXByb3ZlbWVudHMsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgYW5kIGFsbCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIGFncmVlIHRoYXQgZWFjaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgc2hhbGwgYmUgZXN0b3BwZWQgZnJvbSBkZW55aW5nIHRoZSB2YWxpZGl0eSBvciBlbmZvcmNlYWJpbGl0eSBvZiB0aGUgZm9yZWdvaW5nIHdhaXZlci4gIEVhY2ggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIHNoYWxsIGJlIGVudGl0bGVkIHRvIGEgZGVjcmVlIG9yIG9yZGVyIHJlc3RyYWluaW5nIG9yIGVuam9pbmluZyBzdWNoIHBhcnRpdGlvbiwgYXBwbGljYXRpb24sIGFjdGlvbiBvciBwcm9jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgZWRpbmcgdXBvbiBhbnkgYnJlYWNoIG9mIHRoZSBwcm92aXNpb25zfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxICBvZiB0aGlzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgU2VjdGlvbiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgICBSRUYgX1JlZjQ4MDM1MjgyIFxcdyBcXGggXFwNCiogTUVSR0VGT1JNQVQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNTAwMzIwMDM4MDAzMjAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxjZjFcaW5zcnNpZDc5NDI2MlxjaGFycnNpZDc5NDI2MiA1Ljh9fX1cc2VjdGQgXGx0cnNlY3RccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCAuICBUaGUgQ28tVGVuYW50c317XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIGFja25vd2xlZGdlIGFuZCBhZ3JlZSB0aGF0IHRoZXkgaGF2ZSBiZWVuIHBhaWQgZnVsbCBjb25zaWRlcmF0aW9uIGZvciB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwICB3YWl2ZXIgaGVyZWluIHByb3ZpZGVkLiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiB7XCpcYmtta2VuZCBfUmVmNDgwMzc0NDJ9e1wqXGJrbWtlbmQgX1JlZjQ4MDM1MjgyfXtcKlxia21rZW5kIF9Ub2M2MDEzNTQ1N30NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzUyODN9e1wqXGJrbWtzdGFydCBfVG9jNjAxMzU0NTh9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI1OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxiXGNhcHNcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgQXJ0aWNsZSA2XHRhYn19XHBhcmRccGxhaW4gXGx0cnBhcg0KXHMyNTlccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDcyMFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGJcY2Fwc1xmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEge1wqXGJrbWtzdGFydCBfUmVmNTA2NjgxMDJ9DQpBTExPQ0FUSU9OIEFORCBQQVlNRU5UIE9GIEVYUEVOU0VTLCBDT1NUUyBBTkQgQ08tVEVOQU5UIE1FVEVSIE1FQVNVUkVNRU5Ue1wqXGJrbWtlbmQgX1JlZjQ4MDM1MjgzfXtcKlxia21rZW5kIF9Ub2M2MDEzNTQ1OH17XCpcYmtta2VuZCBfUmVmNTA2NjgxMDJ9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1Mjg0fXtcKlxia21rc3RhcnQgX1JlZjQ4MDM3NDQzfXtcKlxia21rc3RhcnQgX1JlZjUwNzA5NDU0fXtcKlxia21rc3RhcnQgX1RvYzYwMTM1NDU5fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNi4xDQpcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyNjFccWwgXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IE93bmVyc2hpcCBTaGFyZXMsIE1ldGhvZCBmb3IgTW9kaWZ5aW5nIE93bmVyc2hpcCBTaGFyZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IC59ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1Mjg1fXtcKlxia21rZW5kIF9SZWY0ODAzNTI4NH17XCpcYmtta2VuZCBfUmVmNDgwMzc0NDN9ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjggVGhlIFVuZGl2aWRlZCBJbnRlcmVzdHMgb2YgZWFjaCBDby1UZW5hbnQgZm9yIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgKGkpIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjMxMDEyOCB0aGUgU2hhcmVkIFByZW1pc2VzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IGFuZCBhbnkgQWRkaXRpb25hbCBQcmVtaXNlcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTczMjYxOCBmb3Igd2hpY2ggc3VjaCBDby1UZW5hbnQgbWFpbnRhaW5zIGFuIGludGVyZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTMxNzgxIGFyZSBzdGF0ZWQgYXMgYSBwZXJjZW50YWdlIG9mIG93bmVyc2hpcH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgIGNhbGN1bGF0ZWQgYXMgZGVzY3JpYmVkIGluIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgyODQ5NzkgIFJFRiBfUmVmNTA2NzA4MDUgXFx3IFxcaCAgXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODI4NDk3OSANCntcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNTAwMzAwMDM2MDAzNzAwMzAwMDM4MDAzMDAwMzUwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ3OTQyNjIgQXJ0aWNsZSAxfX19XHNlY3RkIFxsdHJzZWN0DQpccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTYzMzY2MzUgLCAoaWkpIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjMxMDEyOCB0aGUgU2hhcmVkIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgRmFjaWxpdGllcyBhbmQgYW55IEFkZGl0aW9uYWwgRmFjaWxpdGllcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDU3MzI2MTggZm9yIHdoaWNoIHN1Y2ggQ28tVGVuYW50IG1haW50YWlucyBhbiBpbnRlcmVzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTMxNzgxIGFyZSBzdGF0ZWQgYXMgYSBwZXJjZW50YWdlIG9mIG93bmVyc2hpcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICBjYWxjdWxhdGVkIGFzIGRlc2NyaWJlZCBpbiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4Mjg0OTc5IA0KIFJFRiBfUmVmNTA2NzA4ODAgXFx3IFxcaCAgXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODI4NDk3OSB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzUwMDMwMDAzNjAwMzcwMDMwMDAzODAwMzgwMDMwMDAwMDAwfX19e1xmbGRyc2x0IHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ3OTQyNjIgQXJ0aWNsZSAyfX19XHNlY3RkIFxsdHJzZWN0XHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE2MzM2NjM1ICBhbmQgKGlpaSkgfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjggdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IEVhc2VtZW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjMxMDEyOCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1NzMyNjE4IGZvDQpyIHdoaWNoIHN1Y2ggQ28tVGVuYW50IG1haW50YWlucyBhbiBpbnRlcmVzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkzMTc4MSBhcmUgc3RhdGVkIGFzIGEgcGVyY2VudGFnZSBvZiB7XCpcYmtta3N0YXJ0IF9EVl9NMzAyfXtcKlxia21rZW5kIF9EVl9NMzAyfW93bmVyc2hpcH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgIGNhbGN1bGF0ZWQgYXMgZGVzY3JpYmVkIGluIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgyODQ5NzkgIFJFRiBfUmVmNTA2NzA5MjAgXFx3IFxcaCAgXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4Mjg0OTc5IHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNTAwMzAwMDM2MDAzNzAwMzAwMDM5MDAzMjAwMzAwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ3OTQyNjIgQXJ0aWNsZSAzfX19XHNlY3RkIFxsdHJzZWN0DQpccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTYzMzY2MzUgLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBBIENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIHMgVW5kaXZpZGVkIEludGVyZXN0IHdpdGggcmVzcGVjdCB0byBlYWNoIGFuZCBldmVyeSBjb21wb25lbnQgb2YgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAoQSkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSB0aGUgU2hhcmVkIFByZW1pc2VzIHNoYWxsIGF0IGFsbCB0aW1lcyBlcXVhbCBzdWNoIENvLVRlbmFudFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBzIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgQmFzZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IFByby1SYXRhIFNoYXJlIHdpdGggcmVzcGVjdCB0byBlYWNoIGFuZCBldmVyeSBjb3JyZXNwb25kaW5nIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IHBhcmNlbH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSAgb2YgdGhlIFNoYXJlZCBQcmVtaXNlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICwgKEIpIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgdGhlIFNoYXJlZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANCkZhY2lsaXRpZXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBzaGFsbCBhdCBhbGwgdGltZXMgZXF1YWwgc3VjaCBDby1UZW5hbnRccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBPcGVyYXRpb25hbCB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgUHJvLVJhdGEgU2hhcmUgd2l0aCByZXNwZWN0IHRvIGVhY2ggYW5kIGV2ZXJ5IGNvcnJlc3BvbmRpbmcgY29tcG9uZW50IG9mIHRoZSBTaGFyZWQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgRmFjaWxpdGllc3tcKlxia21rc3RhcnQgX0RWX00zMDd9e1wqXGJrbWtlbmQgX0RWX00zMDd9DQosIChDKSBhbnkgQWRkaXRpb25hbCBQcmVtaXNlcyBvciBBZGRpdGlvbmFsIEZhY2lsaXRpZXMgc2hhbGwgYXQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBhbGwgdGltZXMgZXF1YWwgc3VjaCBDby1UZW5hbnRccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgcyB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IEFkZGl0aW9uYWwgUHJlbWlzZXMgb3IgRmFjaWxpdGllcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IFByby1SYXRhIFNoYXJlIHdpdGggcmVzcGVjdCB0byBlYWNoIGFuZCBldmVyeSBjb3JyZXNwb25kaW5nIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IHBhcmNlbH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSAgb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgYW55IEFkZGl0aW9uYWwgUHJlbWlzZXMgb3IgY29tcG9uZW50IG9mIGFueSBBZGRpdGlvbmFsIEZhY2lsaXRpZXMgYW5kIChEKSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIA0KdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IEVhc2VtZW50cyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIHNoYWxsIGF0IGFsbCB0aW1lcyBlcXVhbCBzdWNoIENvLVRlbmFudFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBzIH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgRWFzZW1lbnQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBQcm8tUmF0YSBTaGFyZSB3aXRoIHJlc3BlY3QgdG8gZWFjaCBhbmQgZXZlcnkgY29ycmVzcG9uZGluZyBjb21wb25lbnQgb2YgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KRWFzZW1lbnQgaW4gd2hpY2ggc3VjaCBDby1UZW5hbnQgaGFzIGFjcXVpcmVkIGFuIGludGVyZXN0IGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgdGVybXMgaGVyZWluLCBhbmQgZWFjaCBvZiB0aGUgZm9yZWdvaW5nIHNoYWxsIGJlIHRydWVkIHVwIGJ5IHRoZSBDby1UZW5hbnRzIHBlcmlvZGljYWxseSBhdCB0aGUgZGlyZWN0aW9uIG9mIHRoZSBDby1UZW5hbmN5IE1hbmFnZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIge1wqXGJrbWtlbmQgX1JlZjUwNzA5NDU0fXtcKlxia21rZW5kIF9Ub2M2MDEzNTQ1OX17XCpcYmtta2VuZCBfUmVmNDgwMzUyODV9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM3NDQ0fXtcKlxia21rc3RhcnQgX1JlZjQ4MDM1Mjg3fXtcKlxia21rc3RhcnQgX1JlZjQ4MjUwNjQxfXtcKlxia21rc3RhcnQgX1JlZjQ4MjUwNzM4fXtcKlxia21rc3RhcnQgX1JlZjQ4MjUwNzYxfXtcKlxia21rc3RhcnQgX1JlZjQ4MjUwNzg2fXtcKlxia21rc3RhcnQgX1JlZjQ4MjkxNjY0fXtcKlxia21rc3RhcnQgX1JlZjQ4Mjk2NDUwfXtcKlxia21rc3RhcnQgX1JlZjQ4MzAyOTIzfQ0Ke1wqXGJrbWtzdGFydCBfVG9jNjAxMzU0NjB9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA2LjJcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgDQpDYXBpdGFsIENvc3QgUmVpbWJ1cnNlbWVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IDsgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNDk3MDg0MCBQYXltZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ3NjExODg2IC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCB7XCpcYmtta2VuZCBfUmVmNDgwMzc0NDR9e1wqXGJrbWtlbmQgX1JlZjQ4MDM1Mjg3fXtcKlxia21rZW5kIF9SZWY0ODI1MDY0MX17XCpcYmtta2VuZCBfUmVmNDgyNTA3Mzh9e1wqXGJrbWtlbmQgX1JlZjQ4MjUwNzYxfXtcKlxia21rZW5kIF9SZWY0ODI1MDc4Nn17XCpcYmtta2VuZCBfUmVmNDgyOTE2NjR9e1wqXGJrbWtlbmQgX1JlZjQ4Mjk2NDUwfQ0Ke1wqXGJrbWtlbmQgX1JlZjQ4MzAyOTIzfXtcKlxia21rZW5kIF9Ub2M2MDEzNTQ2MH0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzUyODh9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChhKVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczI2M1xxbCBcZmkxNDQwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MjE2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxpbHZsMlxvdXRsaW5lbGV2ZWwyXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0IFV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggcG9uIGV4ZWN1dGlvbiBhbmQgZGVsaXZlcnkgYnkgSGFyZGluIFNvbGFyIG9mIHRoZSBkb2N1bWVudHMgcmVxdWlyZWQgaW4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDQgDQpcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgICBSRUYgX1JlZjQ4MDM1MjQwIFxcdyBcXGggXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NCB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNDAwMzgwMDMwMDAzMzAwMzUwMDMyMDAzNDAwMzAwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGNmMVxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDc5NDI2MlxjaGFycnNpZDc5NDI2MiANClxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCAxLjEoYSl9fX1cc2VjdGQgXGx0cnNlY3RccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCAsIEhhcmRpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDQgIFNvbGFyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4ICBJSSBzaGFsbCBwYXkgdG8gSGFyZGluIFNvbGFyIGFuIGFtb3VudCBlcXVhbCB0byB9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE2MTM5NjIwIFtSRURBQ1RFRF19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCAue1wqXGJrbWtlbmQgX1JlZjQ4MDM1Mjg4fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY1MTgyNDY5NH17XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTI4OX17XCpcYmtta3N0YXJ0IF9SZWY0ODA2ODM2OH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGIpXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0IFV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggcG9uIGV4ZWN1dGlvbiBhbmQgZGVsaXZlcnkgYnkgSGFyZGluIFNvbGFyIG9mIHRoZSBkb2N1bWVudHMgcmVxdWlyZWQgaW4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDQgDQpcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgICBSRUYgX1JlZjQ4MDM1MjQwIFxcdyBcXGggXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NCB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNDAwMzgwMDMwMDAzMzAwMzUwMDMyMDAzNDAwMzAwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGNmMVxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDc5NDI2MlxjaGFycnNpZDc5NDI2MiANClxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCAxLjEoYSl9fX1cc2VjdGQgXGx0cnNlY3RccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCAsIEhhcmRpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDQgIFNvbGFyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4ICBJSX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IEl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggIHNoYWxsIHBheSB0byBIYXJkaW4gU29sYXIgYW4gYW1vdW50IGVxdWFsIHRvIH17DQpccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNjEzOTYyMCBbUkVEQUNURURdfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgICh0aGUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTU1MzM0NDAgSGFyZGluIElJSSBJbml0aWFsIFBheW1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0IFwnOTQpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMzQyNjc0NCANClVwb24gdGhlIGxhdGVyIG9mIChpKSB0aGUgZXhlY3V0aW9uIG9mIHRoZSBIYXJkaW4gU29sYXIgSUlJIFBQQSBvciAoaWkpIHRoZSBpc3N1YW5jZSBvZiBhbiBPUFNCIFBlcm1pdCB0byBIYXJkaW4gU29sYXIgSUlJLCBIYXJkaW4gU29sYXIgSUlJIHNoYWxsIHBheSB0byBlYWNoIG9mIEhhcmRpbiBTb2xhciBhbmQgSGFyZGluIFNvbGFyIElJIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNDAyOTQwMCA1MCUgb2YgYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDM0MjY3NDQgIGFtb3VudCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE0MDI5NDAwIGVxdWFsIHRvIH17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQ3Nzc3NzUgW1JFREFDVEVEXX17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNDAyOTQwMCAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjU0Nzk1OCAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODEzNzU5MCBJZiBIYXJkaW4gU29sYXIgSUlJIGVsZWN0cyB0byBhY3F1aXJlIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgaXRzIFVuZGl2aWRlZCBJbnRlcmVzdCBpbiB0aGUgTyZNIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgxMzc1OTAgLCBzaW11bHRhbmVvdXMgd2l0aCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBzdWNoIGFjcXVpc2l0aW9uIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNDAyOTQwMCBIYXJkaW4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ0NTg4NDQ3IFNvbGFyIElJSSBzaGFsbCBwYXkgdG8gZWFjaCBvZiBIYXJkaW4gU29sYXIgYW5kIEhhcmRpbiBTb2xhciBJSSA1MCUgb2YgYW4gYW1vdW50IGVxdWFsIHRvIH17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQ3Nzc3NzUgDQpbUkVEQUNURURdfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgLiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjU0Nzk1OCBTdWNoIHBheW1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjU0Nzk1OCANCiBzaGFsbCBiZSBtYWRlIGJ5IHdpcmUgdHJhbnNmZXIgb2YgaW1tZWRpYXRlbHkgYXZhaWxhYmxlIGZlZGVyYWwgZnVuZHMgaW4gYWNjb3JkYW5jZSB3aXRoIHN1Y2ggaW5zdHJ1Y3Rpb25zIGFzIG1heSBiZSBwcm92aWRlZCBieSBIYXJkaW4gU29sYXIgYW5kIEhhcmRpbiBTb2xhciBJSS57XCpcYmtta2VuZCBfUmVmNTE4MjQ2OTR9ICAgDQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1MjkwfXtcKlxia21rZW5kIF9SZWY0ODAzNTI4OX17XCpcYmtta2VuZCBfUmVmNDgwNjgzNjh9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI4NjAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGMpXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI4NjAgU2ltdWx0YW5lb3VzIHdpdGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQpIYXJkaW4gU29sYXIgSUkgYW5kL29yIEhhcmRpbiBTb2xhciBJSUkgYWNxdWlyaW5nIGl0cyBVbmRpdmlkZWQgSW50ZXJlc3QgaW4gYW55IG9mIHRoZSBTaGFyZWQgUHJlbWlzZXMsIFNoYXJlZCBGYWNpbGl0aWVzLCBBZGRpdGlvbmFsIFByZW1pc2VzIGFuZC9vciBBZGRpdGlvbmFsIEZhY2lsaXRpZXMgb3IgYW4gaW50ZXJlc3QgaW4gdGhlIHNoYXJlZCBFYXNlbWVudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTQwMjk0MDAgLCBIYXJkaW4gU29sYXIgSUkgYW5kIEhhcmRpbiBTb2xhciBJSUkgc2hhbGwgYmUgc29sZWx5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSAgcmVzcG9uc2libGUgZm9yLCBhbmQgc2hhbGwgcGF5IChBKSB0byB0aGUgYXBwcm9wcmlhdGUgR292ZXJubWVudGFsIEF1dGhvcml0aWVzLCBhbnkgc3RhdGUsIGNvdW59ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgdHkgYW5kIG11bmljaXBhbCB0cmFuc2ZlciB0YXhlcyBwYXlhYmxlIHVwb24gZXhlY3V0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBkZWxpdmVyeX17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgLCBvciByZWNvcmRpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgb2Ygc3VjaH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFF1aXRjbGFpbX17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIERlZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwICx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxICBCaWxsIG9mIFNhbGUgYW5kL29yIFBhcnRpYWwgQXNzaWdubWVudCB9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IG9mIEVhc2VtZW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICwgYXMgdGhlIGNhc2UgbWF5IGJlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCAsIGFuZCBhbGwgcmVjdXJyaW5nIGNvc3RzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxICBhbmQgKEIpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSAgZXhwZW5zZXMgcmVsYXRpbmcgdG8gc3VjaCBTaGFyZWQgUHJlbWlzZXMgYW5kIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDAxMDA0NCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNDAyOTQwMCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgQWRkaXRpb25hbCBQcmVtaXNlcyBvciBBZGRpdGlvbmFsIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDQwMTAwNDQgDQosIGFzIHdlbGwgYXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IGFsbCBvdGhlciBpdGVtcyB1c3VhbGx5IGFkanVzdGVkIG9yIGFwcG9ydGlvbmVkICh3aGljaCBzaGFsbCBiZSBhcHBvcnRpb25lZCBvbiBhIHBlciBkaWVtIGJhc2lzIGFzIG9mIDExOjU5IFAuTS4gb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTczMjYxOCANCmYgdGhlIGRheSBpbW1lZGlhdGVseSBwcmVjZWRpbmcgdGhlIGV4ZWN1dGlvbiBhbmQgZGVsaXZlcnkgb2Ygc3V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkzMTc4MSBjaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBRdWl0Y2xhaW19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgRGVlZA0KfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCAsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgQmlsbCBvZiBTYWxlIGFuZC9vciBQYXJ0aWFsIEFzc2lnbm1lbnQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgb2YgRWFzZW1lbnRzfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAsIGFzIHRoZSBjYXNlIG1heSBiZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgKX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgLiAgRm9yIGFueSBQYXJ0aWFsIEFzc2lnbm1lbnQgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBvZiBFYXNlbWVudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAsIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQogZ3JhbnRpbmcgc3VjaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFBhcnRpYWwgQXNzaWdubWVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IG9mIEVhc2VtZW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIHNoYWxsIGNvbnRpbnVlIHRvIHBheSB0byB0aGUgYXBwbGljYWJsZSBwcm9wZXJ0eSBvd25lcnMgYWxsIGFtb3VudHMgZHVlIHVuZGVyIHRoZSBFYXNlbWVudHMgdW5kZXJseWluZyBzdWNoIGdyYW50IHdpdGhvdXQgYW55IGFkZGl0aW9uYWwgcGF5bWVudHMgZnJvbSB0aGUgZ3JhbnRlZSBwYXJ0eShpZXMpIHVuZGVyIHN1Y2ggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFBhcnRpYWwgQX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgc3NpZ25tZW50IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IG9mIEVhc2VtZW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIC59ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAge1wqXGJrbWtlbmQgX1JlZjQ4MDM1MjkwfQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTI5MX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoZClcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgQWxsfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDc4NzY5MDAgIGFwcGxpY2FibGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANCiBDby1UZW5hbnRzIGFncmVlIHRvIHByb3ZpZGUgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBhIHNjaGVkdWxlIG9mIGFsbCBDYXBpdGFsIENvc3RzIGluY3VycmVkIGJ5IHN1Y2ggQ28tVGVuYW50IGluIGNvbm5lY3Rpb24gd2l0aCB0aGUgU2hhcmVkIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgUHJlbWlzZXMgYW5kIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBGYWNpbGl0aWVzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IG9yIHRoZSBFYXNlbWVudHMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgdXBvbiByZXF1ZXN0IGJ5IHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgb3IgYW55IEN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgby1UZW5hbnQsIGFzIGFwcGxpY2FibGUuIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzg3NjkwMCAgVGhlIGFwcGxpY2FibGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANCiBDby1UZW5hbnRzIGF1dGhvcml6ZSB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIHRvLCBhbmQgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBzaGFsbCwgb24gYmVoYWxmIG9mIHN1Y2ggQ28tVGVuYW50cywgbWFpbnRhaW4gY3VycmVudCByZWNvcmRzIG9mIGVhY2ggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ3ODc2OTAwIGFwcGxpY2FibGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBzIENhcGl0YWwgQ29zdHMgd2l0aCByZXNwZWN0IHRvIFNoYXJlZCBQcmVtaXNlcyBhbmQgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IEZhY2lsaXRpZXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgb3IgRWFzZW1lbnRzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIGFuZCBzaGFsbCB1cGRhdGUgc3VjaCByZWNvcmRzIG5vIGxlc3MgZnJlcXVlbnRseSB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCB0aGFufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIGFubnVhbGx5IGFuZCBvdGhlcndpc2UgYXMgbmVjZXNzYXJ5IHRvIGRldGVybWluZSBhbnkgcGF5bWVudHMgZHVlIGJ5IG9yIHRvIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzg3NjkwMCANCmFuIGFwcGxpY2FibGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgQ28tVGVuYW50IGluIGFjY29yZGFuY2Ugd2l0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODg1NDUxNCBTZWN0aW9ufXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCAgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0ICBSRUYgX1JlZjQ4MDM1Mjg0IFxcciBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM1MDAzMjAwMzgwMDM0MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNzk0MjYyIDYuMX19fVxzZWN0ZCBcbHRyc2VjdA0KXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDExODczMjA0ICBhbmQgdGhpcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDcyMjAwMTcgU2VjdGlvbiB9DQp7XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDcyMjAwMTcgIFJFRiBfUmVmNDgyNTA3MzggXFxyIFxcaCAgXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzIyMDAxNyB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNDAwMzgwMDMyMDAzNTAwMzAwMDM3MDAzMzAwMzgwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ3OTQyNjIgNi4yfX19XHNlY3RkIFxsdHJzZWN0DQpccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQogIFRoZSBDby1UZW5hbmN5IE1hbmFnZXIgc2hhbGwgcHJvdmlkZSBlYWNoIG9mIHRoZSBhcHBsaWNhYmxlIENvLVRlbmFudHMgd2l0aCBhIGNvcHkgb2YgdGhlIHNjaGVkdWxlIHdoZW5ldmVyIGl0IGlzIHVwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBkYXRlZCBhbmQgZWFjaCBvZiBzdWNoIENvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIC1UZW5hbnRzIHNoYWxsIGhhdmUgdGhlIHJpZ2h0IHRvIHJldmlldyBhbmQgYXBwcm92ZSB0aGUgc2NoZWR1bGUgd2l0aGluIH17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQ3Nzc3NzUgW1JFREFDVEVEXX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgDQogZGF5cyBvZiByZWNlaXB0IG9mIHRoZSB1cGRhdGVkIHNjaGVkdWxlLiAgSWYgYSBDby1UZW5hbnQgb2JqZWN0cyB0byBhbiB1cGRhdGVkIHNjaGVkdWxlLCB0aGUgQ28tVGVuYW50IHNoYWxsIG5vdGlmeSB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIHdpdGhpbiBzdWNoIH17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQ3Nzc3NzUgW1JFREFDVEVEXX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSAgZGF5IHBlcmlvZCBhbmQgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBzaGFsbCBwcm9tcHRseSBjb252ZW5lIGEgbWVldGluZyB3aXRoIHRoZSBDby1UZW5hbnQgd2hvIHByb3ZpZGVkIHN1Y2ggaW5mb3JtYXRpb24gYW5kIHRoZSBvYmplY3RpbmcgQ28tVGVuYW50IHRvIHRyeSBhbmQgcmVzb2x2ZSB0aGUgZGlzY3JlcGFuY3kuICBJZiB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBhcmUgdW5hYmxlIHRvIHJlc29sdmUgc3VjaCBkaXNjcmVwYW5jfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCB5LCB0aGUgbWF0dGVyIHNoYWx9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgbCBiZSByZWZlcnJlZCB0byB0aGUgZGlzcHV0ZSByZXNvbHV0aW9uIHByb3Zpc2lvbnMgb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQzMzcyMjY1IFNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQzMzcyMjY1ICBSRUYgX1JlZjUwNzEyOTI0IFxcdyBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgIFxcKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDMzNzIyNjUge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzUwMDMwMDAzNzAwMzEwMDMyMDAzOTAwMzIwMDM0MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNzk0MjYyIDE2Ljd9fX1cc2VjdGQgXGx0cnNlY3QNClxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANCiAgU3ViamVjdCB0byBhIHRpbWVseSBkaXNwdXRlIHJlZ2FyZGluZyB0aGUgc2NoZWR1bGUgb2YgQ2FwaXRhbCBDb3N0cywgdGhlIHJlY29yZHMgbWFpbnRhaW5lZCBieSB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIHNoYWxsIGJlIGRldGVybWluYXRpdmUgYW1vbmcgdGhlIENvLVRlbmFudHMgd2l0aCByZXNwZWN0IHRvIENhcGl0YWwgQ29zdHMgYW5kIHRoZSByZWltYnVyc2VtZW50IHByb3Zpc2lvbnMgb2YgdGhpcyB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCAgUkVGIF9SZWY0ODI1MDc2MSBcXHIgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzIwMDM1MDAzMDAwMzcwMDM2MDAzMTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDc5NDI2MiA2LjJ9fX1cc2VjdGQgXGx0cnNlY3QNClxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiB7XCpcYmtta2VuZCBfUmVmNDgwMzUyOTF9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM3NDQ1fXtcKlxia21rc3RhcnQgX1JlZjQ4MDM1MjkyfXtcKlxia21rc3RhcnQgX1RvYzYwMTM1NDYxfXtcKlxia21rc3RhcnQgX1JlZjEwMTM0MDEzOX17XCpcYmtta3N0YXJ0IF9SZWYxMDIzODMyMzJ9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNDQyODEyNyANClxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDYuM1x0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczI2MVxxbCBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IA0KXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTQ0MjgxMjcgTWFpbnRlbmFuY2UgYW5kIFJlcGFpciBvZiB0aGUgU2hhcmVkIFByZW1pc2VzIGFuZCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgLH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjY2MjAxMyAgQWRkaXRpb25hbCBQcmVtaXNlcyBvciBBZGRpdGlvbmFsIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAuICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBCZWdpbm5pbmcgb24gdGhlIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBDb21tZW5jZW1lbnQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgRGF0ZSwgZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgYWNoIH0NCntccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgT3BlcmF0aW9uYWwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBDby1UZW5hbnQgc2hhbGwgYmUgcmVzcG9uc2libGUgZm9yIGFuZCBzaGFsbCBwYXkgaXRzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KKGEpIE9wZXJhdGlvbmFsIFByby1SYXRhIFNoYXJlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgb2YgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgDQpjb3N0cywgZXhwZW5zZXMgYW5kIGxpYWJpbGl0aWVzIHJlbGF0aW5nIHRvIHRoZSB1c2UsIG1haW50ZW5hbmNlLCByZXBhaXIsIGFuZCBpbnNwZWN0aW9uIG9mIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMzAxOTUzMiB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgU2hhcmVkIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBQcmVtaXNlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICBhbmQgdGhlIFNoYXJlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMzAxOTUzMiAgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KIGluY2x1ZGluZyBhbGwgc3ViY29udHJhY3RvciANCmNvc3RzIGFuZCBleHBlbnNlcywgKGIpIEVhc2VtZW50IFByby1SYXRhIFNoYXJlIG9mIHRoZSBjb3N0cywgZXhwZW5zZXMgYW5kIGxpYWJpbGl0aWVzIHJlbGF0aW5nIHRvIHRoZSB1c2UsIG1haW50ZW5hbmNlLCByZXBhaXIsIGFuZCBpbnNwZWN0aW9uIG9mIHRoZSBFYXNlbWVudHMgaW4gd2hpY2ggaXQgaGFzIGFuIGludGVyZXN0LCBpbmNsdWRpbmcsIHdpdGhvdXQgbGltaXRhdGlvbiBhbnkgYW5udWFsIHJlbnRhbCBvciBvdGhlciBwYXltZW50cw0KIGFwcGxpY2FibGUgdG8gdGhlIEVhc2VtZW50LCAoYykgYWxsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMzAxOTUzMiBjb3N0cywgZXhwZW5zZXMgYW5kIGxpYWJpbGl0aWVzIHJlbGF0aW5nIHRvIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQzMDE5NTMyICB1c2UsIG1haW50ZW5hbmNlLCByZXBhaXIsIGFuZCBpbnNwZWN0aW9uIG9mIHRoZSBFYXNlbWVudHMgaW4gd2hpY2ggaXQgaGFzIGFuIGludGVyZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgIHRoYXQgYXJlIGdlbmVyYXRlZCBieSBhbmQgYXJpc2Ugc29sZWx5IGZyb20gc3VjaCBDby1UZW5hbnRccnF1b3RlIA0KcyB1c2Ugb2YgdGhlIEVhc2VtZW50cyBhbmQgKGQpIEFkZGl0aW9uYWwgUHJlbWlzZXMgb3IgRmFjaWxpdGllcyBQcm8tUmF0YSBTaGFyZSBvZiB0aGUgY29zdHMsIGV4cGVuc2VzIGFuZCBsaWFiaWxpdGllcyByZWxhdGluZyB0byB0aGUgdXNlLCBtYWludGVuYW5jZSwgcmVwYWlyLCBhbmQgaW5zcGVjdGlvbiBvZiBhbnkgQWRkaXRpb25hbCBQcmVtaXNlcyBvciBBZGRpdGlvbmFsIEZhY2lsaXRpZXMgaW4gd2hpY2ggaXQgaGFzIGFuIGludGVyZXN0DQp9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQzMDE5NTMyICh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBjb2xsZWN0aXZlbHksIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTQ0MjgxMjcgU2hhcmVkIE8mTSBFeHBlbnNlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXCc5NCl9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwICAgRm9yIHRoZSBhdm9pZGFuY2Ugb2YgZG91YnQsIHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIA0KaGVyZSBzaGFsbCBiZSBubyBkdXBsaWNhdGlvbiBvZiBmZWVzLCBjb3N0cywgZXhwZW5zZXMgb3IgcmVpbWJ1cnNlbWVudHMgcGF5YWJsZSBieSBhIENvLVRlbmFudCB0byB0aGUgRmFjaWxpdHkgTWFuYWdlciB1bmRlciBhbnkgRmFjaWxpdHkgTWFuYWdlbWVudCBBZ3JlZW1lbnQgZm9yIHN1Y2ggQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBccnF1b3RlIA0KcyBQcm9qZWN0IGFuZCB0byB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIHVuZGVyIHRoaXMgQWdyZWVtZW50LiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQzMDE5NTMyIEVmZmVjdGl2ZSBhcyBvZiB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0IA0KXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIENvbW1lbmNlbWVudCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDMwMTk1MzIgRGF0ZSBhbmQgdW50aWwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIENvLVRlbmFudCBjZWFzZXMgdG8gYmUgYSBDby1UZW5hbnQgaGVyZXVuZGVyLCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAgT3BlcmF0aW9uYWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANCiBDby1UZW5hbnRzIHNoYWxsIHJlaW1idXJzZSB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIGZvciBhbGwgZGlyZWN0IGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICBpbmRpcmVjdCBob21lIG9mZmljZSBsYWJvciBhbmQgaG9tZSBvZmZpY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgb3V0LW9mLXBvY2tldCBleHBlbnNlcyB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNjgxOTUwOCBpbmNsdWRpbmcgdHJhdmVsLCB0ZWxlcGhvbmUsIGZhY3NpbWlsZSwgYW5kIHBvc3RhZ2Ugb2YgdGhlIENvLVRlbmFuY3kgTWFuYWdlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KLCBpbiB0aGUgZm9ybSBvZiBhbiBhZ2dyZWdhdGUgbW9udGhseSBmaXhlZCBhZG1pbmlzdHJhdGl2ZSBmZWUgaW4gYW4gYW1vdW50IGVxdWFsIHRvIH17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQ3Nzc3NzUgW1JFREFDVEVEXX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNjgxOTUwOCBwYXlhYmxlIG1vbnRobHkgaW4gYXJyZWFycyBieSBzdWNofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgIE9wZXJhdGlvbmFsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgQ28tVGVuYW50cyBiYXNlZCBvbiB0aGVpciByZXNwZWN0aXZlIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgT3BlcmF0aW9uYWwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBQcm8tUmF0YSBTaGFyZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgICh0aGUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNDQyODEyNyBNYW5hZ2VtZW50IEZlZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgXCc5NCkufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQge1wqXGJrbWtlbmQgX1JlZjQ4MDM3NDQ1fXtcKlxia21rZW5kIF9SZWY0ODAzNTI5Mn0gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiB7XCpcYmtta2VuZCBfVG9jNjAxMzU0NjF9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1MjkzfXtcKlxia21rc3RhcnQgX1JlZjQ4MDM3NDQ2fXtcKlxia21rc3RhcnQgX1RvYzYwMTM1NDYyfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNi40XHRhYn19e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgTWFpbnRlbmFuY2UgYW5kIFJlcGFpciBvZiBTZXBhcmF0ZSBGYWNpbGl0aWV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIHMsIFNlcGFyYXRlIEVhc2VtZW50cywgU2VwYXJhdGUgQ29sbGVjdGlvbiBGYWNpbGl0aWVzIGFuZCBFYXNlbWVudHN9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIC4gIFN1YmplY3QgdG8gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTYyMDY4ODggIFJFRiBfUmVmNTA2NzQyNjcgXFx3IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCAgXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNjIwNjg4OCB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzUwMDMwMDAzNjAwMzcwMDM0MDAzMjAwMzYwMDM3MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNzk0MjYyIEFydGljbGUgM319fQ0KXHNlY3RkIFxsdHJzZWN0XHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAgYW5kIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzM0MDY0MyBTZWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCBzIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCAgUkVGIF9SZWY1MDcwOTQ1NCBcXHcgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM1MDAzMDAwMzcwMDMwMDAzOTAwMzQwMDM1MDAzNDAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDc5NDI2MiA2LjF9fX1cc2VjdGQgXGx0cnNlY3QNClxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMzQzODI0MSAsIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCAgUkVGIF9SZWY0ODAzNzQ0NCBcXHcgXFxoIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNzAwMzQwMDM0MDAzNDAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDc5NDI2MiA2LjJ9fX1cc2VjdGQgXGx0cnNlY3QNClxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMzQzODI0MSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEzNDM4MjQxICB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNjIwNjg4OCAgUkVGIF9SZWY0ODAzNzQ0NSBcXHcgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0ICBcXCogTUVSR0VGT1JNQVQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE2MjA2ODg4IHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNDAwMzgwMDMwMDAzMzAwMzcwMDM0MDAzNDAwMzUwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ3OTQyNjIgNi4zfX19XHNlY3RkIFxsdHJzZWN0DQpccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTYyMDY4ODggLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KIGVhY2ggQ28tVGVuYW50IHNoYWxsIGJlIHNvbGVseSByZXNwb25zaWJsZSBmb3IgYW5kIHNoYWxsIHBheSBhbGwgZXhwZW5zZXMgYW5kIGxpYWJpbGl0aWVzIHJlbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgYXRpbmcgdG8gdGhlIHVzZSwgbWFpbnRlbmFuY2UsIHJlcGFpciwgYW5kIGluc3BlY3Rpb24gb2Ygc3VjaCBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXHJxdW90ZSBzIFNlcGFyYXRlIEZhY2lsaXRpZXMsIFNlcGFyYXRlIEVhc2VtZW50cywgU2VwYXJhdGUgQ29sbGVjdGlvbiBGYWNpbGl0aWVzIGFuZCBFYXNlbWVudHMgKHRoZSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBTZXBhcmF0ZSBPJk0gRXhwZW5zZXN9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgXCc5NCkue1wqXGJrbWtlbmQgX1JlZjQ4MDM1MjkzfXtcKlxia21rZW5kIF9SZWY0ODAzNzQ0Nn17XCpcYmtta2VuZCBfVG9jNjAxMzU0NjJ9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjEwMTMzOTI5MH17XCpcYmtta3N0YXJ0IF9Ub2M2MDEzNTQ2M317XCpcYmtta2VuZCBfUmVmMTAxMzQwMTM5fXtcKlxia21rZW5kIF9SZWYxMDIzODMyMzJ9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDYuNVx0YWJ9fQ0Ke1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjggSW52b2ljaW5nLCBMYXRlIFBheW1lbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ3NjExODg2IC4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDQgVH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgaGUgQ28tVGVuYW5jeSBNYW5hZ2VyIHNoYWxsIGRlbGl2ZXIgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgIGRldGFpbGVkIGludm9pY2UgdG8gdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDQgT3BlcmF0aW9uYWwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBDby1UZW5hbnRzIGZvciB0aGVpciByZXNwZWN0aXZlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IHNoYXJlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgDQpvZiB0aGUgYXBwbGljYWJsZSBTaGFyZWQgTyZNIEV4cGVuc2VzIG9uIGEgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ3NjExODg2IHF1YXJ0ZXJseX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBiYXNpcywgb24gb3IgYmVmb3JlIH17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQ3Nzc3NzUgDQpbUkVEQUNURURdfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgLCBmb3IgdGhlIGFjdHVhbCBhbW91bnQgaW5jdXJyZWQgZm9yIGFsbCBTaGFyZWQgTyZNIEV4cGVuc2VzIHVuZGVyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSAgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0ICBSRUYgX1JlZjQ4MjUwNjQxIFxcciBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMjAwMzUwMDMwMDAzNjAwMzQwMDMxMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNzk0MjYyIDYuMn19fVxzZWN0ZCBcbHRyc2VjdA0KXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgZm9yIHRoZSBpbW1lZGlhdGVseSBwcmVjZWRpbmcgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ3NjExODg2IHF1YXJ0ZXJ9DQp7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIC4gIFRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBPcGVyYXRpb25hbCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANCkNvLVRlbmFudHMgc2hhbGwgcGF5IHRvIHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgdGhlIGFtb3VudCBvZiBlYWNoIGludm9pY2Ugd2l0aGluIH17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQ3Nzc3NzUgW1JFREFDVEVEXSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBkYXlzIGFmdGVyIHRoZSBkYXRlIG9mIHRofXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIGUgQ28tVGVuYW5jeSBNYW5hZ2VyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBccnF1b3RlIHMgaXNzdWFuY2Ugb2YgZWFjaCBzdWNoIGludm9pY2UuICBJZiBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBDby1UZW5hbnQgZmFpbHMgdG8gcGF5IGFsbCBvciBhbnkgcG9ydGlvbiBvZiBhbnkgYW1vdW50IG93ZWQgdG8gdGhlIENvLVRlbmFuY3kgTWFuYWdlciB1bmRlciB0aGlzIEFncmVlbWVudCBieSBpdHMgZHVlIGRhdGUgZm9yIGFueSByZWFzb24gd2hhdHNvZXZlciwgdGhlbiBzdWNoIENvLVRlbmFudCBzaGFsbCwgaW4gYWRkaXRpb24gdG8gc3VjfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IGggdW5wYWlkIGFtb3VudCwgcGF5IGludGVyZXN0IG9uIHRoZSB1bnBhaWQgYW1vdW50IHdoaWNoIHNoYWxsIGFjY3J1ZSBhdCBhIHJhdGUgZXF1YWwgdG8gdGhlIERlZmF1bHQgSW50ZXJlc3QgUmF0ZSBmcm9tIHRoZSBkdWUgZGF0ZSB0aGVyZWZvciB1bnRpbCBzdWNoIGFtb3VudCBoYXMgYmVlbiBwYWlkIGluIGZ1bGwuDQp7XCpcYmtta2VuZCBfUmVmMTAxMzM5MjkwfXtcKlxia21rZW5kIF9Ub2M2MDEzNTQ2M30NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzc0NDd9e1wqXGJrbWtzdGFydCBfUmVmNDgwMzUyOTR9e1wqXGJrbWtzdGFydCBfVG9jNjAxMzU0NjR9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA2LjZcdGFifX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBBZCBWYWxvcmVtIFRheGVzIGFuZCBBc3Nlc3NtZW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIC4gIFVwb24gcmVxdWVzdCBmcm9tIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBuIE9wZXJhdGlvbmFsfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgQ28tVGVuYW50LCB0aGUgQ28tfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBUZW5hbmN5IE1hbmFnZXIgbWF5IHNlZWsgZnJvbSB0aGUgYXBwbGljYWJsZSBjb3VudHkgdGF4IGFzc2Vzc29yIGFuIGFsbG9jYXRpb24gb2YgYWQgdmFsb3JlbSB0YXhlcyBvZiB0aGUgU2hhcmVkIH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBQcmVtaXNlcyBhbmQgRmFjaWxpdGllcywgYW5kLCBpZiByZXF1ZXN0ZWQgYnkgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IG4gT3BlcmF0aW9uYWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIENvLVRlbmFudCwgdGhlIFNlcGFyYXRlIEZhY2lsaXRpZXMsIGFzIGFwcGxpY2FibGUgZm9yIHN1Y2ggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgT3BlcmF0aW9uYWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIENvLVRlbmFudFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBzIFByb2plY3QuICBJZiBhIHJlcXVlc3QgaXMgbm90IG1hZGUgZm9yIGFuIGFsbG9jYXRpb24gb2YgYWQgdmFsb3JlbSB0YXhlcyBvciB0aGUgdGF4IGFzc2Vzc29yIGYNCmFpbHMgdG8gbWFrZSBzdWNoIGFsbG9jYXRpb24sIHRoZSBDby1UZW5hbnRzIGFncmVlIHRoYXQgc3VjaCBhbGxvY2F0aW9uIHNoYWxsIGJlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgYmFzZWQgdXBvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IE9wZXJhdGlvbmFsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgUHJvLVJhdGEgU2hhcmUgb2YgZWFjaCBDby1UZW5hbnQgZm9yIHRoZSBhY3R1YWwgY29zdCBvZiBzdWNoIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgU2hhcmVkIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgUHJlbWlzZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDQwMTAwNDQgIGFuZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjMxMDEyOCBGYWNpbGl0aWVzIGFuZCBTZXBhcmF0ZSBGYWNpbGl0aWVzIChpbmNsdWRpbmcgaW5zdGFsbGF0aW9uIHRoZXJlb2YpIGFuZCB2YWx1ZSBvZiB0aGUgU2hhcmVkIFByZW1pc2VzIGFuZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDU3MzI2MTggRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDQgLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjMxMDEyOCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1NzMyNjE4IGFuZCB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIHNoYWxsIGNhbGN1bGF0ZSBzdWNoIGFsbG9jYXRpb24gYmFzZWQgb24gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDYzMjQyMTcgdGhlIGZvcmVnb2luZyBiYXNpcy4gIEFueSBpbmNyZWFzZWQgYWQgdmFsb3JlbSB0YXhlcyByZXN1bHRpbmcgZnJvbSBBZGRpdGlvbmFsIEZhY2lsaXRpZXMgb3IgQWRkaXRpb25hbCBQcmVtaXNlcyBSaWdodHMgdGhhdCBhcmUgYWRkZWQgYXMgDQpTaGFyZWQgUHJlbWlzZXMgYW5kIEZhY2lsaXRpZXMgaGVyZXVuZGVyIGFuZCBhbnkgYWRkaXRpb25hbCBTZXBhcmF0ZSBGYWNpbGl0aWVzIHNoYWxsIGJlIHRoZSByZXNwb25zaWJpbGl0eSBvZiB0aGUgQ28tVGVuYW50IG9yIENvLVRlbmFudHMgaW5zdGFsbGluZyBzdWNoIEFkZGl0aW9uYWwgRmFjaWxpdGllcyBhcyBkZXNjcmliZWQgaW4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDYzMjQyMTcgU2VjdGlvbiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ2MzI0MjE3ICAgUkVGIF9SZWY0ODAzNTI1NSBcXHcgXFxoIFxcKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDYzMjQyMTcge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM1MDAzMjAwMzUwMDM1MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxjZjFcaW5zcnNpZDc5NDI2MlxjaGFycnNpZDc5NDI2MiAyLjV9fX1cc2VjdGQgXGx0cnNlY3QNClxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ2MzI0MjE3ICBvciBhY3F1aXJpbmcgc3VjaCBBZGRpdGlvbmFsIFByZW1pc2VzIFJpZ2h0cyBhcyBkZXNjcmliZWQgaW4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDYzMjQyMTcgU2VjdGlvbiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ2MzI0MjE3ICBSRUYgX1JlZjQ4MDM1MjQ1IFxcdyBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgIFxcKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNjMyNDIxNyB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM1MDAzMjAwMzQwMDM1MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNzk0MjYyIDEuMyhhKX19fVxzZWN0ZCBcbHRyc2VjdA0KXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDYzMjQyMTcgIG9yIGFjcXVpcmluZyBzdWNoIFNlcGFyYXRlIEZhY2lsaXRpZXMgYXMgZGVzY3JpYmVkIGluIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ2MzI0MjE3IFNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNjMyNDIxNyAgIFJFRiBfUmVmNDgwMzUyNjggXFx3IFxcaCBcXCogTUVSR0VGT1JNQVQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ2MzI0MjE3IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNTAwMzIwMDM2MDAzODAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcY2YxXGluc3JzaWQ3OTQyNjJcY2hhcnJzaWQ3OTQyNjIgNC4xfX19XHNlY3RkIFxsdHJzZWN0DQpccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNjMyNDIxNyAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIge1wqXGJrbWtlbmQgX1JlZjQ4MDM3NDQ3fQ0Ke1wqXGJrbWtlbmQgX1JlZjQ4MDM1Mjk0fXtcKlxia21rZW5kIF9Ub2M2MDEzNTQ2NH0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmMTAyMzg3MjcwfXtcKlxia21rc3RhcnQgX1JlZjQ4MDM3NDQ4fXtcKlxia21rc3RhcnQgX1JlZjQ4MDM1Mjk1fXtcKlxia21rc3RhcnQgX1JlZjQ4MzAzMDU0fXtcKlxia21rc3RhcnQgX1RvYzYwMTM1NDY1fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgDQpcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA2LjdcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgQ29zdHMgb2YgUmVwYWlyIFdvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEga317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KLiAgVGhlIENvLVRlbmFuY3kgTWFuYWdlciBzaGFsbCBjaGFyZ2UgdGhlIGNvc3RzIG9mIHJlcGFpciBvZiBTaGFyZWQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBQcmVtaXNlcyBhbmQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NCAsIEFkZGl0aW9uYWwgUHJlbWlzZXMgb3IgQWRkaXRpb25hbCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSANCiwgaW5jbHVkaW5nIFJlcGxhY2VtZW50IENvbXBvbmVudHMsIGFuZCBmb3Igb3RoZXIgd29yayBvciBzZXJ2aWNlcyBwcm92aWRlZCBieSB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIHVuZGVyIHRoaXMgQWdyZWVtZW50IHRoYXQgYXJlIG5vdCBpbmNsdWRlZCBpbiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIEV4aGliaXQgQ317XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSAge1wqXGJrbWtlbmQgX1JlZjEwMjM4NzI3MH1hdCBjb3N0Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IHtcKlxia21rZW5kIF9SZWY0ODAzNzQ0OH17XCpcYmtta2VuZCBfUmVmNDgwMzUyOTV9DQogIFN1Y2ggY29zdHMgc2hhbGwgYmUgYm9ybmUgYnkgdGhlIE9wZXJhdGlvbmFsIENvLVRlbmFudHMgYmFzZWQgb24gdGhlaXIgcmVzcGVjdGl2ZSBPcGVyYXRpb25hbCBQcm8tUmF0YSBTaGFyZXMufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIge1wqXGJrbWtlbmQgX1JlZjQ4MzAzMDU0fXtcKlxia21rZW5kIF9Ub2M2MDEzNTQ2NX0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmMTAxMzQwNzcyfXtcKlxia21rc3RhcnQgX1RvYzYwMTM1NDY2fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNi44XHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgQ28tVGVuYW5jeSBPJk0gQnVkZ2V0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSAue1wqXGJrbWtlbmQgX1JlZjEwMTM0MDc3Mn17XCpcYmtta2VuZCBfVG9jNjAxMzU0NjZ9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1Mjk2fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYwXGluc3JzaWQxMTQzNDQwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChhKVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczI2M1xxbCBcZmkxNDQwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MjE2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxpbHZsMlxvdXRsaW5lbGV2ZWwyXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDExNDM0NDAgV317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgaXRoaW4gfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDc3Nzc3NSBbUkVEQUNURURdfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSANCiBkYXlzIHByaW9yIHRvIHRoZSBiZWdpbm5pbmcgb2YgY2FsZW5kYXIgeWVhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTQzNDQwIDIwMjIgYW5kIGVhY2ggY2FsZW5kYXIgeWVhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0MzkxNzEzIG9mIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTQzNDQwIFR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgZXJtfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDM5MTcxMyAgdGhlcmVhZnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgLCB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIHNoYWxsIHByZXBhcmUgYW5kIHN1Ym1pdCB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0ICh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0MzkxNzEzIGl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCApIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IE9wZXJhdGlvbmFsIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBDby1UZW5hbnRzIGEgcHJvcG9zZWQgYnVkZ2V0IGZvciBvcGVyYXRpb24sIG1haW50ZW5hbmNlIGFuZCByZXBhaXIgb2YgdGhlIFNoYXJlZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBQcmVtaXNlcywgKH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQzOTE3MTMgaWl9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICkgdGhlIE9wZXJhdGlvbmFsIENvLVRlbmFudHMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBhIHByb3Bvc2VkIGJ1ZGdldCBmb3Igb3BlcmF0aW9uLCBtYWludGVuYW5jZSBhbmQgcmVwYWlyIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQogdGhlIFNoYXJlZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBGYWNpbGl0aWVzIGFuZCBFYXNlbWVudHMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgYW5kICh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0MzkxNzEzIGlpaX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KKSB0byB0aGUgYXBwbGljYWJsZSBPcGVyYXRpb25hbCBDby1UZW5hbnRzIG93bmluZyBhbiBpbnRlcmVzdCBpbiBhbnkgQWRkaXRpb25hbCBQcmVtaXNlcyBvciBBZGRpdGlvbmFsIEZhY2lsaXRpZXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBhIHByb3Bvc2VkIGJ1ZGdldCBmb3Igb3BlcmF0aW9uLCBtYWludGVuYW5jZSBhbmQgcmVwYWlyIG9mIHRoZSB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IGFwcGxpY2FibGUgQWRkaXRpb25hbCBQcmVtaXNlcyBvciBBZGRpdGlvbmFsIEZhY2lsaXRpZXMsIGluIGVhY2ggY2FzZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBmb3IgdGhlIGZvbGxvd2luZyBjYWxlbmRhciB5ZWFyIChlYWNoLCBhIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNTY3MzczNCBDby1UZW5hbmN5IE8mTSBCdWRnZXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFwnOTQpLCB3aGljaCBzaGFsbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSAgaW5jbHVkZSwgYXQgYSBtaW5pbXVtLCB0aGUgYmlsbGluZyByYXRlcywgZXN0aW1hdGVkIGNvc3QgKGJhc2VkIG9uIHRpbWUgYW5kIG1hdGVyaWFscyksIGFuZCBhbGwgZmVlcyBhbmQgcmVpbWJ1cnNhDQpibGUgY29zdHMgY29udGVtcGxhdGVkIGluIHRoaXMgQWdyZWVtZW50IGZvciBhbnRpY2lwYXRlZCBvcGVyYXRpb24gYW5kIG1haW50ZW5hbmNlIHNlcnZpY2VzIGFuZCByZXBhaXJzIHRvIGJlIHByb3ZpZGVkIGJ5IHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgZHVyaW5nIGVhY2ggbW9udGggb2YgdGhlIGZvbGxvd2luZyB5ZWFyLCBpbmNsdWRpbmcgYW55IFNoYXJlZCBPJk0gRXhwZW5zZXMuICBUaGUgQ28tVGVuYW5jeSBPJk0gQnVkZ2V0IHNoYWxsIHMNCmV0IGZvcnRoIHRoZSByZXNwZWN0aXZlIGFtb3VudHMgYWxsb2NhdGVkIHRvIHRoZSBkaWZmZXJlbnQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgT3BlcmF0aW9uYWwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBDby1UZW5hbnRzIGluIGFjY29yZGFuY2Ugd2l0aCB0aGVpciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0IGFwcGxpY2FibGUgb3duZXJzaGlwIGludGVyZXN0IGluIHRoZSBTaGFyZWQgUHJlbWlzZXMsIFNoYXJlZCBGYWNpbGl0aWVzLCBBZGRpdGlvbmFsIFByZW1pc2VzLCBBZGRpdGlvbmFsIEZhY2lsaXRpZXMgYW5kIEVhc2VtZW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgLiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQ5NzY3NTU5IFd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IGhlbiBhcHByb3ZlZCBwdXJzdWFudCB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE1NjczNzM0IFNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNTY3MzczNCAgUkVGIF9SZWY0ODAzNTI5NyBcXHcgXFxoICBcXCogTUVSR0VGT1JNQVQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNTY3MzczNCB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNDAwMzgwMDMwMDAzMzAwMzUwMDMyMDAzOTAwMzcwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ3OTQyNjIgNi44KGIpfX19XHNlY3RkIFxsdHJzZWN0DQpccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBiZWxvdywgdGhlIENvLVRlbmFuY3kgTyZNIEJ1ZGdldCBzaGFsbCBiZSB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE1NjczNzM0IEFwcHJvdmVkIENvLVRlbmFuY3kgTyZNIEJ1ZGdldH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXCc5NCBmb3Igc3VjaCB5ZWFyLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSB7XCpcYmtta2VuZCBfUmVmNDgwMzUyOTZ9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1Mjk3fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChiKVx0YWJ9VGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4ICB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IGFwcGxpY2FibGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgT3BlcmF0aW9uYWwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgQ28tVGVuYW50fXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIHMgc2hhbGwgZ2l2ZSB0aGVpciBhcHByb3ZhbCBvciBkaXNhcHByb3ZhbCBvZiB0aGUgQ28tVGVuYW5jeSBPJk0gQnVkZ2V0IG5vIGxhdGVyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgdGhhbiB9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgDQpcYlxpbnNyc2lkMTQ3Nzc3NzUgW1JFREFDVEVEXX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgIGRheXMgYWZ0ZXIgcmVjZWlwdCB0aGVyZW9mIGZyb20gdGhlIENvLVRlbmFuY3kgTWFuYWdlci4gIElmIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NCBuIE9wZXJhdGlvbmFsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgIG9iamVjdHMgdG8gYWxsIG9yIGFueSBwb3J0aW9uIG9mIHRoZSBwcm9wb3NlZCBDby1UZW5hbmN5IE8mTSBCdWRnZXR9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICBhcHBsaWNhYmxlIHRvIHN1Y2ggQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCAsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IHN1Y2ggT3BlcmF0aW9uYWwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQpDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwICBzaGFsbCBmdXJuaXNoIHRoZSBDby1UZW5hbmN5IE1hbmFnZXIge1wqXGJrbWtzdGFydCBfRFZfQzEwNX1hbmQgb3RoZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDQgYXBwbGljYWJsZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBPcGVyYXRpb25hbCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBze1wqXGJrbWtlbmQgX0RWX0MxMDV9IGluIHdyaXRpbmcsIHRoZSByZWFzb25zIGZvciBzdWNoIG9iamVjdGlvbnMgYW5kIHNoYWxsIGltbWVkaWF0ZWx5IGNvbW1lbmNlIGRpc2N1c3Npb25zIHdpdGggdGhlIENvLVRlbmFuY3kgTWFuYWdlciBhbmQgdGhlIG90aGVyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KYXBwbGljYWJsZSBPcGVyYXRpb25hbCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIHMgaW4gYW4gZWZmb3J0IHRvIHJlYWNoIGFuIEFwcHJvdmVkIENvLVRlbmFuY3kgTyZNIEJ1ZGdldC4gIFVwb24gc3VjaCBhZ3JlZW1lbnQsIHRoZSBDby1UZW5hbmN5DQp9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxICBNYW5hZ2VyIHNoYWxsIHJldmlzZSB0aGUgQ28tVGVuYW5jeSBPJk0gQnVkZ2V0IHdpdGggcmVzcGVjdCB0aGVyZXRvLiAgSWYgdGhlIENvLVRlbmFuY3kgTyZNIEJ1ZGdldCBpcyBhcHByb3ZlZCBieSBhIFJlcXVpcmVkIE1ham9yaXR5IGFuZCB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyLCB0aGUgQ28tVGVuYW5jeSBPJk0gQg0KdWRnZXQgd2lsbCBiZSB0aGUgQXBwcm92ZWQgQ28tVGVuYW5jeSBPJk0gQnVkZ2V0IGZvciB0aGUgZm9sbG93aW5nIHllYXIuICBJZiB0aGUgcmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IHF1aXNpdGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDQgT3BlcmF0aW9uYWwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANCnMgYW5kIHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgYXJlIHVuYWJsZSB0byByZWFjaCBhbiBhZ3JlZW1lbnQgd2l0aCByZXNwZWN0IHRvIHRoZSBDby1UZW5hbmN5IE8mTSBCdWRnZXQgcHJpb3IgdG8gdGhlIGJlZ2lubmluZyBvZiB0aGUgY2FsZW5kYXIgeWVhciwgdGhlIEFwcHJvdmVkIENvLVRlbmFuY3kgTyZNIEJ1ZGdldCBmb3IgdGhlIHByZXZpb3VzIGNhbGVuZGFyIHllYXIgKG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgciB0aGUgbGFzdCBBcHByb3ZlZCBDby1UZW5hbmN5IE8mTSBCdWRnZXQgaWYgdGhlIENvLVRlbmFuY3kgTyZNIEJ1ZGdldCBmb3IgdGhlIHByaW9yIHllYXIgd2FzIG5vdCBhcHByb3ZlZCksIGluY3JlYXNlZCBwZXIgeWVhciBieSB0aGUgSW5mbGF0aW9uIEFkanVzdG1lbnQgRmFjdG9yLCBzaGFsbCBhcHBseTsgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIHByb3ZpZGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSAsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgaG93ZXZlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgDQosIHRoYXQgYW55IHNpbmdsZSBleHRyYW9yZGluYXJ5IGV4cGVuc2UgaW4gZXhjZXNzIG9mIH17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQ3Nzc3NzUgW1JFREFDVEVEXX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgDQogY29udGFpbmVkIGluIHN1Y2ggYnVkZ2V0IHNoYWxsIG5vdCBiZSBpbmN1cnJlZCB3aXRob3V0IHRoZSBwcmlvciBhcHByb3ZhbCBvZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBhIFJlcXVpcmVkIE1ham9yaXR5IG9mIHRoZSBhcHBsaWNhYmxlIE9wZXJhdGlvbmFsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIENvLVRlbmFudH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBzLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEge1wqXGJrbWtlbmQgX1JlZjQ4MDM1Mjk3fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTI5OH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoYylcdGFifVRoZSBDby1UZW5hbmN5IE1hbmFnZXIgc2hhbGwgbm90LCB3aXRob3V0IA0KdGhlIGFwcHJvdmFsIG9mIGEgUmVxdWlyZWQgTWFqb3JpdHksIGFtZW5kIG9yIG1vZGlmeSB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjU2MzYyNiBBcHByb3ZlZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIENvLVRlbmFuY3kgTyZNIEJ1ZGdldC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkge1wqXGJrbWtlbmQgX1JlZjQ4MDM1Mjk4fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNzQ0OX17XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTI5OX17XCpcYmtta3N0YXJ0IF9Ub2M2MDEzNTQ2N317XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYxIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDYuOVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzMjYxXHFsIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM4XGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBPdGhlciBFeHBlbnNlcyBDYXVzZWQgQnkgQ28tVGVuYW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KLiAgTm90d2l0aHN0YW5kaW5nIHRoZSBwcm92aXNpb25zIG9mIHRoaXMgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0ICAgUkVGIF9SZWY0ODAzNTI4MyBcXG4gXFxoIFxcKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNDAwMzgwMDMwMDAzMzAwMzUwMDMyMDAzODAwMzMwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGNmMVxpbnNyc2lkNzk0MjYyXGNoYXJyc2lkNzk0MjYyIEFydGljbGUgNn19fVxzZWN0ZCBcbHRyc2VjdA0KXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBhbnkgY29zdHMsIGNsYWltcywgbG9zc2VzIG9yIG90aGVyIA0KbGlhYmlsaXRpZXMgYXJpc2luZyBmcm9tIHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIGhlIGFjdGlvbnMgb3IgaW5hY3Rpb25zIG9mIGEgQ28tVGVuYW50IGluIHZpb2xhdGlvbiBvciBicmVhY2ggb2YgdGhlIGNvdmVuYW50cyBoZXJlaW4gb3IgdGhlIHByb3Zpc2lvbnMgb2YgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgRWFzZW1lbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCAgc2hhbGwgYmUgdGhlIHJlc3BvbnNpYmlsaXR5IG9mIHN1Y2ggQ28tVGVuYW50Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEge1wqXGJrbWtlbmQgX1JlZjQ4MDM3NDQ5fQ0Ke1wqXGJrbWtlbmQgX1JlZjQ4MDM1Mjk5fXtcKlxia21rZW5kIF9Ub2M2MDEzNTQ2N30NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzUzMDB9e1wqXGJrbWtzdGFydCBfUmVmNDgwMzc0NTB9e1wqXGJrbWtzdGFydCBfVG9jNjAxMzU0Njh9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA2LjEwXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgUmlnaHRzIG9mIE90aGVyIENvLVRlbmFudHMgZm9yIE5vbi1QYXltZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgLiAgSWYgYW55IENvLVRlbmFudCBmYWlscyB0byB0aW1lbHkgbWFrZSBhbnkgcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBlcXVpcmVkIHBheW1lbnQgb2YgYW1vdW50cyBkdWUgdW5kZXIgdGhpcyB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgICBSRUYgX1JlZjQ4MDM1MjgzIFxcbiBcXGggXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNTAwMzIwMDM4MDAzMzAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcY2YxXGluc3JzaWQ3OTQyNjJcY2hhcnJzaWQ3OTQyNjIgQXJ0aWNsZSA2fX19XHNlY3RkIFxsdHJzZWN0DQpccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBvciB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgICBSRUYgX1JlZjQ4MDM1MzcxIFxcbiBcXGggXFwNCiogTUVSR0VGT1JNQVQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNTAwMzMwMDM3MDAzMTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxjZjFcaW5zcnNpZDc5NDI2MlxjaGFycnNpZDc5NDI2MiBBcnRpY2xlIDEwfX19XHNlY3RkIFxsdHJzZWN0XHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgKHN1Y2ggQ28tVGVuYW50IGJlaW5nIGEgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIE5vbi1QYXlpbmcgQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBcJzk0KSwgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBzaGFsDQpsIHByb3ZpZGUgd3JpdHRlbiBub3RpY2UgdG8gdGhlIG90aGVyIENvLVRlbmFudHMgd2l0aGluIH17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQ3Nzc3NzUgW1JFREFDVEVEXX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgDQogZGF5cyBhZnRlciBzdWNoIHBheW1lbnQgYmVjb21lcyBwYXN0IGR1ZSwgYW5kIGFueSBub24tZGVmYXVsdGluZyBDby1UZW5hbnQgbWF5IHtcKlxia21rc3RhcnQgX0RWX0MxMDZ9KGJ1dCBzaGFsbCBub3QgYmUgb2JsaWdhdGVkIHRvKXtcKlxia21rZW5kIF9EVl9DMTA2fSBtYWtlIHN1Y2ggcGF5bWVudCBvbiBiZWhhbGYgb2Ygc3VjaCBOb24tUGF5aW5nIENvLVRlbmFudCBhbmQgdGhlIGFtb3VudCBzbyBwYWkNCmQgc2hhbGwgYmUgaW1tZWRpYXRlbHkgZHVlIGFuZCBwYXlhYmxlIGZyb20gdGhlIE5vbi1QYXlpbmcgQ28tVGVuYW50IHRvIHN1Y2ggb3RoZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgcGF5aW5nIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KQ28tVGVuYW50LCB0b2dldGhlciB3aXRoIGludGVyZXN0IGZyb20gdGhlIGRhdGUgcGFpZCBhdCB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBEZWZhdWx0IEludGVyZXN0IFJhdGUufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSB7XCpcYmtta2VuZCBfUmVmNDgwMzUzMDB9DQp7XCpcYmtta2VuZCBfUmVmNDgwMzc0NTB9e1wqXGJrbWtlbmQgX1RvYzYwMTM1NDY4fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTMwMX17XCpcYmtta3N0YXJ0IF9SZWY0ODAzNzQ1MX17XCpcYmtta3N0YXJ0IF9Ub2M2MDEzNTQ2OX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYxIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDYuMTFcdGFifX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBMaWVuc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIC4gIH17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQ3Nzc3NzUgW1JFREFDVEVEXX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCAsfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgbm8gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBzaGFsbCwgZGlyZWN0bHkgb3IgaW5kaXJlY3RseSwgY3JlYXRlLCBpbmN1ciBvciBwZQ0Kcm1pdCB0byBleGlzdCwgYW55IGxpZW4gb24gdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCAgcmlnaHQsIHRpdGxlIGFuZCBpbnRlcmVzdCBvZiB0aGUgb3RoZXIgQ28tVGVuYW50cyBpbiB0aGUgRWFzZW1lbnRzLCB0aGUgU2hhcmVkIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgDQpQcmVtaXNlcyBhbmQgRmFjaWxpdGllcyBvciBhbnkgb3RoZXIgQ28tVGVuYW50XHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IHMgU2VwYXJhdGUgRWFzZW1lbnRzIG9yIFNlcGFyYXRlIEZhY2lsaXRpZXMuICBObyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50fXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgc2hhbGwsIGRpcmVjdGx5IG9yIGluZGlyZWN0bHksIGNyZWF0ZSwgaW5jdXIgb3IgcGVybWl0IHRvIGV4aXN0IGFueSBsaX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgZW4gb24gaXRzIHJpZ2h0LCB0aXRsZSBhbmQgaW50ZXJlc3QgaW4gdGhlIEVhc2VtZW50cywgdGhlIFNoYXJlZCB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgUHJlbWlzZXMgYW5kIEZhY2lsaXRpZXMgb3IgdGhlIFNlcGFyYXRlIEZhY2lsaXRpZXMgZXhjZXB0IGZvciB0aGUgZm9sbG93aW5nIHRvIHRoZSBleHRlbnQgcGVybWl0dGVkIHVuZGVyIHN1Y2ggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBhcnJhbmdlbWVudHMgd2l0aCBpdHMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFNlY3VyZWQgUGFydGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgOg0KICAoYSkgYW55IGxpZW4gZm9yIHVucGFpZCB0YXhlcyB0aGF0IGFyZSAoaSkgbm90IHlldCBwYXlhYmxlIG9yIChpaSkgdGhhdCBhcmUgYmVpbmcgY29udGVzdGVkIGluIGdvb2QgZmFpdGggYnkgYXBwcm9wcmlhdGUgcHJvY2VlZGluZ3MsIG9yIChiKSBhbnkgbWVjaGFuaWNccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgcyBvciBtYXRlcmlhbG1lblxycXVvdGUgDQpzIGxpZW4gYXJpc2luZyBpbiB0aGUgb3JkaW5hcnkgY291cnNlIG9mIGJ1c2luZXNzLCBlaXRoZXIgKGkpIGZvciBhbW91bnRzIG5vdCB5ZXQgZA0KdWUgb3IgKGlpKSBmb3IgYW1vdW50cyBiZWluZyBjb250ZXN0ZWQgaW4gZ29vZCBmYWl0aCBieSBhcHByb3ByaWF0ZSBwcm9jZWVkaW5ncywgKGMpIGp1ZGdtZW50IGxpZW5zLCBwcm92aWRlZCB0aGF0IGluIGVhY2ggY2FzZSBvZiAoYSksIChiKSBhbmQgKGMpIGFib3ZlLCBzbyBsb25nIGFzIHN1Y2ggcHJvY2VlZGluZyBvciBsaWVuIHNoYWxsIG5vdCBpbnZvbHZlIGFueSBzdWJzdGFudGlhbCBkYW5nZXIgb2YgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjggdGhlIHNhbGUsIGZvcmZlaXR1cmUgb3IgbG9zcyBvZiBhbnkgcGFydCBvZiB0aGUgRWFzZW1lbnRzLCB0aGUgU2hhcmVkIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTczMjYxOCBQcmVtaXNlcyBhbmQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MzE3ODEgDQpGYWNpbGl0aWVzLCB0aGUgU2VwYXJhdGUgRmFjaWxpdGllcywgb3IgdGhlIFVuZGl2aWRlZCBJbnRlcmVzdCBvZiBhbnkgb3RoZXIgQ28tVGVuYW50cywgaW5jbHVkaW5nIHRoZSBwb3N0aW5nIG9mIGFueSBib25kIHRoYXQgaXMgcmVxdWlyZWQgYnkgQXBwbGljYWJsZSBMYXcgdG8gYXZvaWQgc3VjaCBzYWxlLCBmb3JmZWl0dXJlIG9yIGxvc3Mgd2hpbGUgc3VjaCBjbGFpbXMgYXJlIGJlaW5nIGNvbnRlc3RlZCBvcn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MTEwMDgxICwgKGQpIGxpZW5zIGluIGZhdm9yIG9mIHN1Y2ggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFNlY3VyZWQgUGFydHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIA0KIHB1cnN1YW50IHRvIHRoZSBTZWN1cml0eSBEb2N1bWVudHMuICBJZiBhbnkgc3VjaCBsaWVuIG5vdCBwZXJtaXR0ZWQgcHVyc3VhbnQgdG8gdGhpcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IFNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0ICAgUkVGIF9SZWY0ODAzNzQ1MSBcXHcgDQpcXGggXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNDAwMzgwMDMwMDAzMzAwMzcwMDM0MDAzNTAwMzEwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcY2YxXGluc3JzaWQ3OTQyNjJcY2hhcnJzaWQ3OTQyNjIgNi4xMX19fVxzZWN0ZCBcbHRyc2VjdFxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIGF0dGFjaGVzIG9yIGEgQ28tVA0KZW5hbnQgcmVjZWl2ZXMgbm90aWNlIG9mIGFueSBzdWNoIGxpZW4sIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQogd2hvc2UgYWN0dWFsIG9yIGFsbGVnZWQgYWN0IG9yIG9taXNzaW9uIHJlc3VsdGVkIGluIHN1Y2ggbGllbiBzaGFsbCBjYXVzZSBzdWNoIGxpZW4gdG8gYmUgcmVsZWFzZWQgYW5kIHJlbW92ZWQgb2YgcmVjb3JkIHdpdGhpbiB9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0Nzc3Nzc1IFtSRURBQ1RFRF19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANCiBkYXlzIG9mIHN1Y2ggYXR0YWNobWVudCBvciBub317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgdGljZSwgdW5sZXNzIChpbiB0aGUgY2FzZSBvZiBhbnkgbm9uLXBlcm1pdHRlZCBsaWVuIG9uIHN1Y2ggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICByaWdodCwgdGl0bGUgYW5kIGludGVyZXN0IGluIGFueSBFYXNlbWVudCwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFNoYXJlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgIEZhY2lsaXRpZXMgb3IgU2VwYXJhdGUgRmFjaWxpdGllcykgKGEpIHN1Y2ggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIChpKSBpbiBnb29kIGZhaXRoIGNvbnRlc3RzIG9yIGRpc3B1dGVzIHRoZSBjbGFpbSBvciBjbGFpbXMgb2YgdGhlIGxpZW5ob2xkZXJzIGFufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBkIHRoZSB2YWxpZGl0eSBvZiBzdWNoIGxpZW5zLCAoaWkpDQogcHJvbXB0bHkgY29tbWVuY2VzIGxlZ2FsIGFjdGlvbiB0byByZW1vdmUgc3VjaCBsaWVuIGFuZCAoaWlpKSBmdXJuaXNoZXMgdG8gdGhlIG90aGVyIENvLVRlbmFudHMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgYSBib25kIG9yIG90aGVyIHNlY3VyaXR5IGFjY2VwdGFibGUgdG8gdGhlIG90aGVyIENvLVRlbmFudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzg3NjkwMCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgaW4gYW4gYW1vdW50IHN1ZmZpY2llbnQgdG8gZGlzY2hhcmdlIGFsbCBzdWNoIGNvbnRlc3RlZCBsaWVucyBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIA0KIChiKSBkdXJpbmcgc3VjaCBwZXJpb2QgdGhlIGxpZW5ob2xkZXJzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBccnF1b3RlICBwcm9jZWVkaW5ncyBhcmUgc3RheWVkLntcKlxia21rZW5kIF9SZWY0ODAzNTMwMX17XCpcYmtta2VuZCBfUmVmNDgwMzc0NTF9e1wqXGJrbWtlbmQgX1RvYzYwMTM1NDY5fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M2MDEzNTQ3MH17XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTMwMn17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYxIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE2MjgzOTA0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDYuMTJcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNjI4MzkwNCBDby1UZW5hbnQgTWV0ZXIgTWVhc3VyZW1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEwODI4MjY0IC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE2MjgzOTA0ICAge1wqXGJrbWtlbmQgX1RvYzYwMTM1NDcwfQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNjI4MzkwNCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoYSlcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyNjNccWwgXGZpMTQ0MFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDIxNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcaWx2bDJcb3V0bGluZWxldmVsMlxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE2MjgzOTA0IFRoZSBtYWluIGhpZ2ggdm9sdGFnZSBzdGVwLXVwIHRyYW5zZm9ybWVyIGZvciBlYWNoIFByb2plY3Qgd2lsbCBoYXZlIG9uZSBkZWRpY2F0ZWQgbWV0ZXIgY29ubmVjdGVkIHRvIGl0cyBoaWdoIHNpZGUgdG8gbWVhc3VyZSBwb3dlciBwcm9kdWN0aW9uLiAgVGhlIHBvd2VyIHByb2R1Y3Rpb24gbWVhc3VyZW1lbnRzIGZvciBlYWNoIFByb2plDQpjdCwgd2l0aCByZXNwZWN0IHRvIGFueSBhcHBsaWNhYmxlIHBlcmlvZCwgd2lsbCBiZSBkZXRlcm1pbmVkIGJ5IG11bHRpcGx5aW5nIChpKSB0aGUgcHJvcG9ydGlvbmF0ZSBzaGFyZSAoYXMgYSBwZXJjZW50YWdlKSBvZiB0aGUgUHJvamVjdCwgdGhlIHBlcmNlbnRhZ2UgZGV0ZXJtaW5lZCBieSBkaXZpZGluZyB0aGUgaW5kaXZpZHVhbCBtZXRlciByZWFkaW5nKHMpIGZvciBlYWNoIFByb2plY3QgYnkgdGhlIHN1bSBvZiBhbGwgdGhlIENvLVRlbmENCm50XHJxdW90ZSBzIHJlc3BlY3RpdmUgaW5kaXZpZHVhbCBtZXRlciByZWFkaW5ncywgYnkgKGlpKSB0aGUgcHJvZHVjdGlvbiBtZWFzdXJlZCBhdCB0aGUgcmV2ZW51ZSBtZXRlciBsb2NhdGVkIGF0IHRoZSBwb2ludCBvZiBpbnRlcmNvbm5lY3Rpb24gc3Vic3RhdGlvbiBhcyBkZXNjcmliZWQgaW4gdGhlIEludGVyY29ubmVjdGlvbiBBZ3JlZW1lbnRzLiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQpGb3IgcHVycG9zZXMgb2YgY2xhcml0eSwgbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTA4MjgyNjQgbyBDby1UZW5hbnQgd2lsbCBhc3Nlc3MgYW55IGNoYXJnZSBmb3IgZW5lcmd5IHByb2R1Y2VkIGJ5IHN1Y2ggQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTA4MjgyNjQgcyBQcm9qZWN0IHRoYXQgaXMgdXNlZCBvciBjb25zdW1lZCBieSBhbm90aGVyIENvLVRlbmFudCBmb3IgaXRzIGF1eGlsaWFyeSBsb2FkIG9yIGZvciBhbnkgb3RoZXIgcHVycG9zZS59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE2MjgzOTA0IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY1NDk0MzE3OX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNjI4MzkwNCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoYilcdGFifQ0KRm9yIHRoZSBwcmltYXJ5IHJldGFpbCBwb3dlciB0byB0aGUgc3Vic3RhdGlvbiAoYXV4aWxpYXJ5IGxvYWQpLCB0aGUgT2ZmdGFrZXIgcmV2ZW51ZSBtZXRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE2MjgzOTA0IHdpbGwgYmUgdGhlIG1ldGVyIHRvIA0KbWVhc3VyZSB0aGUgbG9hZC4gIFRoZSBDby1UZW5hbmN5IE1hbmFnZXIgd2lsbCBiZSByZXNwb25zaWJsZSBmb3IgcGF5bWVudCBvZiB0aGUgYXV4aWxpYXJ5IGxvYWQgYXMgd2VsbCBhcyBjb2xsZWN0aW5nIGVhY2ggUHJvamVjdFxycXVvdGUgDQpzIHNoYXJlIG9mIHN1Y2ggcGF5bWVudCBhcyBkZXRlcm1pbmVkIGJlbG93LiAgVGhlIENvLVRlbmFuY3kgTWFuYWdlciB3aWxsIHNwbGl0IGNvc3QgZm9yIGF1eGlsaWFyeSBsb2FkIGJldHdlZW4gYWxsIFByb2plY3RzIA0KYmFzZWQgb24gaW5kaXZpZHVhbCBQcm9qZWN0IGxvYWQgY29uc3VtcHRpb24gY2FsY3VsYXRpb25zIGluIGEgbWFubmVyIHRvIGJlIGFncmVlZCB0byBieSBlYWNoIENvLVRlbmFudC4gIFdoZW4gYSBQcm9qZWN0IGJlY29tZXMgYW4gT3BlcmF0aW9uYWwgQ28tVGVuYW50LCBDby1UZW5hbmN5IE1hbmFnZXIgc2hhbGwgcHJvdmlkZSBhIGNhbGN1bGF0aW9uIHRvIE9wZXJhdGlvbmFsIENvLVRlbmFudHMgZm9yIHRoZWlyIHJlc3BlY3RpdmUgbG9hZCBjDQpvbnN1bXB0aW9uLiAgQXV4aWxpYXJ5IHBvd2VyIGZvciBlYWNoIE9wZXJhdGlvbmFsIENvLVRlbmFudCBzaGFsbCBpbmNsdWRlIGJ1dCBpcyBub3QgbGltaXRlZCB0byB0aGUgT3BlcmF0aW9uYWwgQ28tVGVuYW50XHJxdW90ZSANCnMgc3Vic3RhdGlvbiB5YXJkIGVxdWlwbWVudCwgaXRzIGVxdWlwbWVudCBpbiB0aGUgY29udHJvbCBlbmNsb3N1cmUsIGFuZCBpdHMgY29sbGVjdGlvbiBzeXN0ZW0gZXF1aXBtZW50LiAgVGhlIGNvbW1vbi9zaGFyZWQgc3Vic3RhdGlvbiB5YXJkIGxvYWRzIGFuZCBjb21tb24vc2hhcmVkIGNvbnRyb2wgZW5jbG9zdXJlIGxvYWRzIHdvdWxkIGJlIGV2ZW5seSBzcGxpdCBiZXR3ZWVuIGFsbCB0aGUgT3BlcmF0aW9uYWwgQ28tVGVuYW50DQpccnF1b3RlIHMgKGZvciBleGFtcGxlLCBsaWdodHMgcmVjZXB0YWNsZXMsIGV0Yy4pLiAgVGhlIENvLVRlbmFuY3kgTWFuYWdlciB3b3VsZCBlbnN1cmUgdGhhdCBhbGwgQ28tVGVuYW50cyBhZ3JlZSBvbiB0aGUgY2FsY3VsYXRpb24uICBUaGVuIGVhY2ggT3BlcmENCnRpb25hbCBDby1UZW5hbnQgd291bGQgYmUgY2hhcmdlZCBhIHBlcmNlbnRhZ2Ugb2YgdGhlIGJpbGwgYmFzZWQgb24gdGhlaXIgcGVyY2VudGFnZSBvZiBsb2FkIGNvbXBhcmVkIHRvIHRoZSB0b3RhbC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAgIEZvciBwdXJwb3NlcyBvZiBjbGFyaXR5LH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTA4MjgyNjQgDQogaWYgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBpcyBhbHNvIGEgQ28tVGVuYW50IHRoYXQgd2FudHMgdG8gb2J0YWluIG9yIG1haW50YWluIGV4ZW1wdCB3aG9sZXNhbGUgZ2VuZXJhdG9yIHN0YXR1cyBwDQp1cnN1YW50IHRvIHRoZSBQdWJsaWMgVXRpbGl0eSBIb2xkaW5nIENvbXBhbnkgQWN0IG9mIDIwMDUsIHRoZSByb2xlIHRoYXQgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBoYXMgd2l0aCByZXNwZWN0IHRvIHRoZSBhdXhpbGlhcnkgbG9hZCBhcnJhbmdlbWVudHMgcHJlc2NyaWJlZCBoZXJlaW4gY2Fubm90IGJlIHN0cnVjdHVyZWQgYXMgYSByZXRhaWwgc2FsZSBieSB0aGUgQ28tVGVuYW5jeSBNYW5nZXIgdG8gYW55IENvLVRlbmFudDsgcHJvdmlkZWQNCiwNCiBmdXJ0aGVyLCB0aGF0LCB0aGUgZXhlbXB0IHdob2xlc2FsZSBnZW5lcmF0b3IgY29uZGl0aW9uIHNldCBmb3J0aCBpbiB0aGUgZGVmaW5pdGlvbnMgb2YgT3BlcmF0aXZlIERhdGUgYW5kIEFkZGl0aW9uYWwgRmFjaWxpdGllcyBPcGVyYXRpdmUgRGF0ZSB3aWxsIG5vdCBiZSBhcHBsaWNhYmxlIHRvIEhhcmRpbiBTb2xhciBpZiBIYXJkaW4gU29sYXIgaXMgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBhbmQgY2Fubm90IG9idGFpbiBvciBtYWludGFpbg0KIGV4ZW1wdCB3aG9sZXNhbGUgZ2VuZXJhdG9yIHN0YXR1cyBhcyBhIHJlc3VsdCBvZiBpdHMgQ28tVGVuYW5jeSBNYW5hZ2VyIHJvbGUgaW4gdGhlIHBvd2VyIHNhbGUgYXJyYW5nZW1lbnRzIHNldCBmb3J0aCBpbiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDYxMTIzOTYgU2VjdGlvbiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDYxMTIzOTYgIFJFRiBfUmVmNTQ5NDMxNzkgXFx3IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCAgXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNjExMjM5NiB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNTAwMzQwMDM5MDAzNDAwMzMwMDMxMDAzNzAwMzkwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ3OTQyNjIgNi4xMihiKX19fVxzZWN0ZCBcbHRyc2VjdA0KXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEwODI4MjY0ICBvciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDYxMTIzOTYgU2VjdGlvbiB9e1xmaWVsZHtcKlxmbGRpbnN0IHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDYxMTIzOTYgIFJFRiBfUmVmNTQ5NDMyMDQgXFx3IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCAgXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNjExMjM5NiB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNTAwMzQwMDM5MDAzNDAwMzMwMDMyMDAzMDAwMzQwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ3OTQyNjIgNi4xMihjKX19fVxzZWN0ZCBcbHRyc2VjdA0KXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEwODI4MjY0ICBiZWluZyBjb25zaWRlcmVkIGEgcmV0YWlsIHNhbGUgYnkgSGFyZGluIFNvbGFyLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNjI4MzkwNCB7XCpcYmtta2VuZCBfUmVmNTQ5NDMxNzl9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjU0OTQzMjA0fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE2MjgzOTA0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChjKVx0YWJ9DQpJZiBlbWVyZ2VuY3kgcG93ZXIgdG8gdGhlIHN1YnN0YXRpb24gaXMgbmVlZGVkLCBpdCB3aWxsIGNvbWUgZnJvbSB0aGUgTWlkLU9oaW8gZGlzdHJpYnV0aW9uIGxpbmUgZGlyZWN0bHkgdG8gdGhlIHN1YnN0YXRpb24gY29udHJvbCBlbmNsb3N1cmUuICBJdCBzaGFsbCBvbmx5IGJlIHVzZWQgdG8gcG93ZXIgdGhlIGNvbnRyb2wgZW5jbG9zdXJlIGVxdWlwbWVudCBhbmQgaWYgYSBQcm9qDQplY3QgbG9zZXMgcHJpbWFyeSByZXRhaWwgcG93ZXIuICBUaGUgT3BlcmF0aW9uYWwgQ28tVGVuYW50cyB3b3VsZCBzcGxpdCBhbnkgYmlsbCBmb3Igc3VjaCBlbWVyZ2VuY3kgcG93ZXIgYmFzZWQgb24gdGhlIGxvYWQgY2FsY3VsYXRpb24gb2YgZWFjaCBQcm9qZWN0XHJxdW90ZSANCnMgY29udHJvbCBlbmNsb3N1cmUgZXF1aXBtZW50IGxvYWQgY29uc3VtcHRpb24uICBBbGwgUHJvamVjdHMgd2l0aCB0aGVpciBlcXVpcG1lbnQgaW5zaWRlIGEgY29udHJvbCBlbmNsb3N1cmUgd291bGQgZXZlbmx5IHNwbGl0IHRoZSBjb21tb24vc2hhcmVkIGl0ZW1zIGluIHRoYXQgc2FtZSBjb250cm9sIGVuY2xvc3VyZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTA4MjgyNjQgLn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIge1wqXGJrbWtlbmQgX1JlZjQ4MDM1MzAyfSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgRm9yIHB1cnBvc2VzIG9mIGNsYXJpdHksIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTA4MjgyNjQgDQp0aGUgYXJyYW5nZW1lbnRzIGZvciBlbWVyZ2VuY3kgcG93ZXIgcHJlc2NyaWJlZCBoZXJlaW4gc2hhbGwgbm90IGJlIHN0cnVjdHVyZWQgc3VjaCB0aGF0IHRoZXkgd2lsbCBiZSBhIHJldGFpbCBzYWxlIGJ5IGEgQ28tVGVuYW50IChvciB0aGUgQ28tVGVuYW5jeQ0KIE1hbmFnZXIgaWYgaXQgaXMgYSBDby1UZW5hbnQpIHRoYXQgd2FudHMgdG8gb2J0YWluIG9yIG1haW50YWluIGV4ZW1wdCB3aG9sZXNhbGUgZ2VuZXJhdG9yIHN0YXR1cyBwdXJzdWFudCB0byBQdWJsaWMgVXRpbGl0eSBIb2xkaW5nIENvbXBhbnkgQWN0IG9mIDIwMDUufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ2NzY5NjA1IHtcKlxia21rZW5kIF9SZWY1NDk0MzIwNH0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzUzMDN9e1wqXGJrbWtzdGFydCBfVG9jNjAxMzU0NzF9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI1OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxiXGNhcHNcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgQXJ0aWNsZSA3XHRhYn19XHBhcmRccGxhaW4gXGx0cnBhcg0KXHMyNTlccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDcyMFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGJcY2Fwc1xmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFxsaW5lIE9USEVSIFJJR0hUUyBBTkQgT0JMSUdBVElPTlMgT0YgQ08tVEVOQU5UU3tcKlxia21rZW5kIF9SZWY0ODAzNTMwM317XCpcYmtta2VuZCBfVG9jNjAxMzU0NzF9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1MzA0fXtcKlxia21rc3RhcnQgX1JlZjQ4MDM3NDUyfXtcKlxia21rc3RhcnQgX1RvYzYwMTM1NDcyfXtcKlxia21rc3RhcnQgX1JlZjEwMjUzNzE5Nn17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYxIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDcuMQ0KXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMjYxXHFsIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM4XGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBNYWludGVuYW5jZSBhbmQgUmVwYWlyIG9mIFNlcGFyYXRlIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAuICBFYWNoIH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBzaGFsbCwgYXQgaXRzIHNvbGUgY29zdCBhbmQgZXhwZW5zZSwgbWFpbnRhaW4gaW4gZ29vZCB3b3JraW5nIG9yZGVyIGFuZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgcmVwYWlyIGF0IGFsbCB0aW1lcyB0aGUgcG9ydGlvbiBvZiBpdHMgU2VwYXJhdGUgRmFjaWxpdGllcyB3aGljaCBjb25uZWN0cyB3aXRoIG9yIGNvdWxkIHJlYXNvbmFibHkgYmUgZXhwZWN0ZWQgdG8gYWZmZWN0IGFueSBvZiB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBTaGFyZWQgRmFjaWxpdGllcy4NCntcKlxia21rZW5kIF9SZWY0ODAzNTMwNH17XCpcYmtta2VuZCBfUmVmNDgwMzc0NTJ9e1wqXGJrbWtlbmQgX1RvYzYwMTM1NDcyfQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTMwNX17XCpcYmtta3N0YXJ0IF9Ub2M2MDEzNTQ3M317XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYxIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDcuMlx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFRlcm1pbmF0aW9uIG9yIE1vZGlmaWNhdGlvbiBvZiBBbnkgRWFzZW1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAuICBObyBFYXNlbWVudCBtYXkgYmUgdGVybWluYXRlZCwgbW9kaWZpZWQgb3IgYW1lbmRlZCB3aXRob3V0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCB0aGUgbXV0dWFsIGNvbnNlbnQgYW5kIGFncmVlbWVudCBvZiBhbGwgQ28tVGVuYW50cyBiZW5lZml0aW5nIGZyb20sIGFuZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KIGRlc2lnbmF0ZWQgdG8gYmVuZWZpdCBmcm9tIHN1Y2ggRWFzZW1lbnQgcHVyc3VhbnQgdG8gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBFeGhpYml0cyBBLTF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxICBhbmQgQS0yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIDsgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBwcm92aWRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IGhvd2V2ZXJ9DQp7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgLCB0aGF0IHdpdGggcmVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IHBlY3QgdG8gYW55IGV4dGVuc2lvbiBvZiB0aGUgdGVybSBvZiBhbnkgRWFzZW1lbnQsIHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgc2hhbGwgbm90aWZ5IHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIGF0IGxlYXN0IH17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQ3Nzc3NzUgW1JFREFDVEVEXX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KIGRheXMgcHJpb3IgdG8gdGhlIHRpbWUgd2hlbiBhbnkgRWFzZW1lbnQgbXVzdCBiZSBleHRlbmRlZC4gIElmIGFueSBFYXNlbWVudCBwcm92aWRlcyBmb3IgZXh0ZW5kaW5nIHRoZSB0ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgcm0gb2YgdGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIGUgRWFzZW1lbnQNCiBmb3Igc3VjY2Vzc2l2ZSBhbm51YWwgb3IgbG9uZ2VyIHBlcmlvZHMgYW5kIGlmIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KIGJlbmVmaXRpbmcgZnJvbSBzdWNoIEVhc2VtZW50IGFncmVlIHRvIGV4dGVuZCB0aGUgRWFzZW1lbnQgZm9yIHRoZSBsb25nZXIgcGVyaW9kIG9mIHRoZSBwZXJtaXR0ZWQgZXh0ZW5zaW9uLCBzdWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQogc2hhbGwgYXV0aG9yaXplIHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgdG8sIGFuZCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwICBDby1UZW5hbmN5IE1hbmFnZXIgc2hhbGwsIG9uIGJlaGFsZiBvZiBzdWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnRzfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAsIGV4dGVuZCBzdWNoIEVhc2VtZW50IGZvciBzdWNoIGxvbmdlciBwZXJpb2QuICBJZiB0aGUgYmVuZWZpdGluZyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBhbmQgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBkZXNpZ25hdGVkIHRvIGJlbmVmaXQgZnJvbSBzdWNoIEVhc2VtZW50IHB1cnN1YW50IHRvIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBFeGhpYml0cyBBLTEsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIGFuZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIEEtMn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSAsIGZhaWwgdG8gYWdyZWUgdG8gdGhlIGxvbmdlciBwZXJpb2Qgb2YgZXh0ZW5zaW9uLCBzdWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgc2hhbGwgYXV0aG9yaXplIHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgdG8sIGFuZCB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIHNoYWxsLCBvbiBiZWhhbGYgb2Ygc3VjaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgLCBleHRlbmQgc3VjaCBFYXNlbWVudCBmb3IgdGhlIGxlc3NlciB0aW1lIHBlcmlvZCBvZiAoaSkgYW5udWFsbHksIG9yIChpaSkgdGhlIG1pbmltdW0gZXh0ZW5zaW9uIHBlcmlvZCBwZXJtaXR0ZWQgdW5kZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwICBzdWNoIEVhc2VtZW50LiAgSW4gZWl0aGVyIGNhc2UsIHRoZSB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIHNoYWxsIHBheSB0aGVpcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NCBFYXNlbWVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIA0KUHJvLVJhdGEgU2hhcmUgb2YgdGhlIHBheW1lbnQgZHVlIHVuZGVyIHN1Y2ggRWFzZW1lbnQgb24gb3IgYmVmb3JlIHRoZSBiZWdpbm5pbmcgb2YgdGhlIGFwcGxpY2FibGUgZXh0ZW5zaW9uIHBlcmlvZC4gIFVwb24gdGhlIGZhaWx1cmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBvZiBhbnkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIHRvIHBheSBpdHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBFYXNlbWVudH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBQcm8tUmF0YSBTaH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgYXJlIG9mIHRoZSBleHRlbnNpb24gYW1vdW50LCBzdWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANCiByaWdodHMgaW4gYW5kIHRvIHN1Y2ggRWFzZW1lbnQgc2hhbGwgZXhwaXJlIG9uIHRoZSBiZWdpbm5pbmcgZGF0ZSBvZiB0aGUgZXh0ZW5zaW9uIHBlcmlvZHtcKlxia21rZW5kIF9SZWYxMDI1MzcxOTZ9LiAgTm90d2l0aHN0YW5kaW5nIGFueSBwcm92aXNpb24gY29udGFpbmVkIGluIHRoaXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBTZWN0aW9uIH0NCntcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0ICAgUkVGIF9SZWY0ODAzNTMwNSBcXHcgXFxoIFxcKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNDAwMzgwMDMwMDAzMzAwMzUwMDMzMDAzMDAwMzUwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGNmMVxpbnNyc2lkNzk0MjYyXGNoYXJyc2lkNzk0MjYyIDcuMn19fVxzZWN0ZCBcbHRyc2VjdA0KXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgdG8gdGhlIGNvbnRyYXJ5LCBpZiBhIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnR9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBub3RpZmllcyB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIGFuZCB0aGUgb3RoZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANCiBiZW5lZml0aW5nIGZyb20gc3VjaCBFYXNlbWVudCB0aGF0IGl0IGhhcyBlbGVjdGVkIG5vdCB0byBleHRlbmQgdGhlIHRlcm0gb2YgYW4gRWFzZW1lbnQgKGEgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBOb24tRXh0ZW5kaW5nIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwICksIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSB0aGUgb3RoZXIgYXBwbGljYWJsZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBtYXkgZXh0ZW5kIHRoZSB0ZXJtIG9mIHN1Y2ggRWFzZW1lbnQgZm9yIHRoZWlyIHMNCm9sZSBiZW5lZml0LiAgSW4gc3VjaCBhIGNhc2UsIHRoZSBOb24tRXh0ZW5kaW5nIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgYW5kIHRoZSBvdGhlciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIHNoYWxsIGV4ZWN1dGUsIGFuZCB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIHNoYWxsIGNhdXNlIHRvIGJlIHJlY29yZGVkIG9uIGJlaGFsZiBvZiBzdWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAsIHN1Y2ggaW5zdHJ1bWVudHMgYW5kIGFzc2lnbm1lbnRzIGFzIG5lY2Vzc2FyeSB0byB0cmFuc2ZlciBzdWNoIEVhc2VtZW50IHRvIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpDby1UZW5hbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIGVsZWN0aW5nIHRvIGV4dGVuZCB0aGUgdGVybSBvZiBzdWNoIEVhc2VtZW50IGFuZCB0aGUgTm9uLUV4dGVuZGluZyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgc2hhbGwsIHN1YmplY3QgdG8gYXBwbGljYWJsZSBhcHByb3ZhbHMgZnJvbSBHb3Zlcm5tZW50YWwgQXV0aG9yaXRpZXMsIGlmIGFueSwgcHJvbXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIA0KdGx5IHJlbW92ZSBhbGwgb2YgaXRzIGZpeHR1cmVzLCBpbXByb3ZlbWVudHMgYW5kIGVxdWlwbWVudCBmcm9tIHRoZSBFYXNlbWVudCBzbyBhcyBub3QgdG8gaW5jdXIgYW55IG90aGVyIGV4cGVuc2VzIGZvciB0aGUgb3RoZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBkdWUgdG8gdGhlIHByZXNlbmNlIG9mIHRoZSBOb24tRXh0ZW5kaW5nIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgZml4dHVyZXMsIGltcHJvdmVtZW50cyBvciBlcXVpcG1lbnQgd2l0aGluIHRoZSBFYXNlbWVudC4gIEZvciBwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANCnVycG9zZXMgb2YgY2xhcml0eSwgYW4gRWFzZW1lbnQgZ3JhbnRlZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBwdXJzdWFudCB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEzMzE4MDE1IFNlY3Rpb24gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ3Mjk1MzM3IDMuMShhKX17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgIG9yIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzI5NTMzNyAzLjEofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgYn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzI5NTMzNyApfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCB3aWxsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IGF1dG9tYXRpY2FsbHkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQp0ZXJtaW5hdGUgYXQgdGhlIGV4cGlyYXRpb24gb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgdGhlIG9yaWdpbmFsIHVuZGVybHlpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBFYXNlbWVudC59e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEge1wqXGJrbWtzdGFydCBfUmVmMTAxNTk3MjkwfXtcKlxia21rZW5kIF9SZWY0ODAzNTMwNX17XCpcYmtta2VuZCBfVG9jNjAxMzU0NzN9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM3NDUzfXtcKlxia21rc3RhcnQgX1JlZjQ4MDM1MzA2fXtcKlxia21rc3RhcnQgX1RvYzYwMTM1NDc0fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNy4zXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgU3RhbmRhcmQgb2YgUGVyZm9ybWFuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAuICBTdWJqZWN0IHRvIHRoZSBsaW1pdGF0aW9ucyBvciByZXN0cmljdGlvbnMgc2V0IGZvcnRoIGluIHRoaXMgQWdyZWVtZW50IChpbmNsdWRpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0ICB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgICBSRUYgX1JlZjQ4MDM1MzA5IFxcbiBcXGggXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNTAwMzMwMDMwMDAzOTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcY2YxXGluc3JzaWQ3OTQyNjJcY2hhcnJzaWQ3OTQyNjIgQXJ0aWNsZSA4fX19XHNlY3RkIFxsdHJzZWN0DQpccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCApLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIGFuZCBlYWNoIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KIHNoYWxsIHBlcmZvcm0gaXRzIHJlc3BlY3RpdmUgb2JsaWdhdGlvbnMgaGVyZXVuZGVyIGluIGFjY29yZGFuY2Ugd2l0aCB0aGlzIEFncmVlbWVudCwgYWxsIEFwcGxpY2FibGUgTGF3cywgUHJ1ZGVudCBJbmR1c3RyeSBQcmFjdGljZSwgVHJhbnNtaXR0aW5nIFV0aWxpdHkgUHJvdG9jb2xzLCB0aGUgSW50ZXJjb25uZWN0aW9uIEFncmVlbWVudHMsIGFuZCB0aGUgdGVybXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgIG9mIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBFYXNlbWVudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIA0KLiAgRnVydGhlciwgZXhjZXB0IGFzIHNwZWNpZmljYWxseSBhdXRob3JpemVkIHRvIHRoZSBjb250cmFyeSBpbiB0aGlzIEFncmVlbWVudCwgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBzaGFsbCBwZXJmb3JtIGl0cyBvYmxpZ2F0aW9ucyBoZXJldW5kZXIgaW4gYSBtYW5uZXIgdGhhdCAoQSkgZG9lcyBub3QgZGlzY3JpbWluYXRlIGFnYWluc3QgYW55IG90fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIGhlciBDby1UZW5hbnRzLCBhbmQgKEIpIGF0dGVtcHRzIHRvIG1heGltaXplIHRoZSBkZWxpdmVyeSBvZiBlbmVyZ3kgZnJvbSBhbGwgUHJvamVjdHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCB7XCpcYmtta2VuZCBfUmVmMTAxNTk3MjkwfSBiYXNlZCBvbiBlYWNoIFByb2plY3RccnF1b3RlIHMgUGVybWl0dGVkIENhcGFjaXR5fXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICAgSW4gYWRkaXRpb24sIHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgc2hhbGwgcGVyZm9ybSBpdHMgb2JsaWdhdGlvbnMgaGVyZXVuZGVyIGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgSW50ZXJjb25uZWN0aW9uIEFncmVlbWVudHM7IA0KfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMzU2OTcwOCBwcm92aWRlZCwgaG93ZXZlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICwgdGhhdCBlYWNoIENvLVRlbmF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIG50IHNoYWxsIH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgaGF2ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggZGVsaXZlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQogdG8gdGhlIENvLVRlbmFuY3kgTWFuYWdlciBhIGNvbXBsZXRlIGNvcHkgb2Ygc3VjaCBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBzIEludGVyY29ubmVjdGlvbiBBZ3JlZW1lbnRzLntcKlxia21rZW5kIF9SZWY0ODAzNzQ1M30NCntcKlxia21rZW5kIF9SZWY0ODAzNTMwNn17XCpcYmtta2VuZCBfVG9jNjAxMzU0NzR9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjEwMjM4NTIxNH17XCpcYmtta3N0YXJ0IF9SZWY0ODAzNzQ1NH17XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTMwN317XCpcYmtta3N0YXJ0IF9Ub2M2MDEzNTQ3NX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYxIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE0OTcwODQwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDcuNA0KXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE0OTcwODQwIENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBSZXByZXNlbnRhdGl2ZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAuICBPbiBvciBwcm9tcHRseSBhZnRlciB0aGUgDQp9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBDb250cmFjdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBEYXRlLCBlYWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBzaGFsbCBieSB3cml0dGVuIG5vdGljZSB0byB0aGUgb3RoZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgZGVzaWduYXRlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBhbiBpbmRpdmlkdWFsIHJlcHJlc2VudGF0aXZlICh0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIFJlcHJlc2VudGF0aXZlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSANCikgd2hvc2UgaW5zdHJ1Y3Rpb25zLCByZXF1ZXN0cywgYW5kIGRlY2lzaW9ucyB3aWxsIGJlIGJpbmRpbmcgdXBvbiBzdWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANCiBpbiBhbGwgbWF0dGVycyBjb25jZXJuaW5nIHRoaXMgQWdyZWVtZW50LCBleGNlcHQgdGhhdCB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBSZXByZXNlbnRhdGl2ZSBzaGFsbCBub3QgaGF2ZSB0aGUgYXV0aG9yaXR5IHRvfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwICBhbWVuZCB0aGlzIEFncmVlbWVudC4gIEVhY2ggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KIHNoYWxsIGhhdmUgdGhlIHJpZ2h0IHRvIGNoYW5nZSBzdWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgUmVwcmVzZW50YXRpdmUgYXQgYW55IHRpbWUgYW5kIGZyb20gdGltZSB0byB0aW1lIGJ5IHdyaXR0ZW4gbm90aWNlIHRvIHRoZSBvdGhlciB9DQp7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIGFuZCB0aGUgQ28tVGVuYW5jeSBNYW5hZ2Vye1wqXGJrbWtlbmQgX1JlZjEwMjM4NTIxNH0ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANCntcKlxia21rZW5kIF9SZWY0ODAzNzQ1NH17XCpcYmtta2VuZCBfUmVmNDgwMzUzMDd9e1wqXGJrbWtlbmQgX1RvYzYwMTM1NDc1fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTMwOH17XCpcYmtta3N0YXJ0IF9Ub2M2MDEzNTQ3Nn17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYxIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDYxNzY2NDggXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNy41XHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNjE3NjY0OCBFbnZpcm9ubWVudGFsIENvbXBsaWFuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDYxNzY2NDggLiAgRWFjaCBDby1UZW5hbnQgc2hhbGwsIHdpdGggcmVzcGVjdCB0byBpdA0KcyBQcm9qZWN0IChpbmNsdWRpbmcgcG9ydGlvbnMgb2YgaXRzIFByb2plY3QgbG9jYXRlZCBvbiBhbnkgZWFzZW1lbnRzIG9yIHJpZ2h0cyBvZiBhY2Nlc3MgcG9zc2Vzc2VkIGJ5IHN1Y2ggQ28tVGVuYW50KSwgYmUgcmVzcG9uc2libGUgZm9yIGFuZCBzaGFsbCBoYXZlIGNvbnRyb2wgb3ZlciBhbGwgZW52aXJvbm1lbnRhbCBjb21wbGlhbmNlIHByb2dyYW1zIGFuZCByZXF1aXJlbWVudHMgYXBwbGljYWJsZSB0byBpdHMgUHJvamVjdC4gIFRoZXNlDQogDQpjb21wbGlhbmNlIFByb2dyYW1zIGFuZCByZXF1aXJlbWVudHMgc2hhbGwgY29uc2lzdCBvZiBhbnkgZW52aXJvbm1lbnRhbCByZWd1bGF0b3J5IHJlcXVpcmVtZW50cyB0cmlnZ2VyZWQgYnkgYWN0aXZpdHkgdW5kZXJ0YWtlbiBieSB0aGUgUHJvamVjdCBhbmQgbWF5IGluY2x1ZGUgYnV0IG5vdCBiZSBsaW1pdGVkIHRvIGludmVzdGlnYXRpb25zLCBzdHVkaWVzLCBjbGVhbiB1cCwgY29ycmVjdGl2ZSBhY3Rpb24gb3IgcmVzcG9uc2Ugb3IgcmVtZWQNCmlhbCBhY3Rpb24gcmVxdWlyZWQgYnkgKGkpIGFueSBHb3Zlcm5tZW50YWwgQXV0aG9yaXR5IG5vdyBvciBoZXJlYWZ0ZXIgYXV0aG9yaXplZCB0byByZWd1bGF0ZSBlbnZpcm9ubWVudGFsIG9yIG90aGVyIG1hdHRlcnMsIG9yIChpaSkgYW55IGNvbnNlbnQgZGVjcmVlIG9yIGNvdXJ0IG9yIGFkbWluaXN0cmF0aXZlIG9yZGVyIG5vdyBvciBoZXJlYWZ0ZXIgYXBwbGljYWJsZSB0byBzdWNoIENvLVRlbmFudFxycXVvdGUgDQpzIHVzZSwgb3BlcmF0aW9uIG9yIG93bmVyDQpzaGlwIG9mIGl0cyBQcm9qZWN0LiAgVGhlIENvLVRlbmFuY3kgTWFuYWdlciBzaGFsbCwgd2l0aCByZXNwZWN0IHRvIHRoZSBTaGFyZWQgRmFjaWxpdGllcywgb3ZlcnNlZSBhbGwgcGVybWl0IGFjdGlvbnMsIGludmVzdGlnYXRpb25zLCBzdHVkaWVzLCBjbGVhbiB1cCwgY29ycmVjdGl2ZSBhY3Rpb24gb3IgcmVzcG9uc2Ugb3IgcmVtZWRpYWwgYWN0aW9uIHJlcXVpcmVkIGJ5IGFueSBHb3Zlcm5tZW50YWwgQXV0aG9yaXR5IG5vdyBvciBoZXJlYWYNCnQNCmVyIGF1dGhvcml6ZWQgdG8gcmVndWxhdGUgZW52aXJvbm1lbnRhbCBvciBvdGhlciBtYXR0ZXJzIG9yIGJ5IGFueSBjb25zZW50IGRlY3JlZSBvciBjb3VydCBvciBhZG1pbmlzdHJhdGl2ZSBvcmRlciBub3cgb3IgaGVyZWFmdGVyIGFwcGxpY2FibGUgdG8gdGhlIFNoYXJlZCBGYWNpbGl0aWVzLiAgVGhlIENvLVRlbmFuY3kgTWFuYWdlciBzaGFsbCBrZWVwIGFsbCBDby1UZW5hbnRzIGZ1bGx5IGFwcHJpc2VkIGFzIHRvIHRoZSBhYm92ZSBtYXR0ZQ0KcnMgYWZmZWN0aW5nIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBhbmQgc2hhbGwgY29uc3VsdCB3aXRoIHRoZW0gcHJpb3IgdG8gdGFraW5nIGFueSBtYXRlcmlhbCBhY3Rpb24gaW52b2x2aW5nIGFueSBHb3Zlcm5tZW50YWwgQXV0aG9yaXR5IG9yIHJpc2sgb2YgaW5jdXJyaW5nIGFueSBtYXRlcmlhbCBsaWFiaWxpdHkue1wqXGJrbWtlbmQgX1JlZjQ4MDM1MzA4fXtcKlxia21rZW5kIF9Ub2M2MDEzNTQ3Nn0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNTA3MDg0MjZ9e1wqXGJrbWtzdGFydCBfVG9jNjAxMzU0Nzd9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ2MTc2NjQ4IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDcuNlx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDYxNzY2NDggUElMT1QgQ29tcGxpYW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNjE3NjY0OCAuICBFYWNoIENvLVRlbmFudCB0aGF0IGlzIHN1YmplY3QgdG8gdGhlIFJlc29sdXRpb24gYWRvcHRlZCANCmJ5IHRoZSBCb2FyZCBvZiBIYXJkaW4gQ291bnR5IENvbW1pc3Npb25lcnMgb24gQXVndXN0IDIyLCAyMDE5LCBhcHByb3ZpbmcgdGhlIGFwcGxpY2F0aW9uIG9mIEhhcmRpbiBTb2xhciBmb3IgZXhlbXB0aW9uIGZyb20gdGF4YXRpb24gZm9yIHRoZSBwcm9wZXJ0eSBvZiB0aGUgSGFyZGluIFNvbGFyIEVuZXJneSBDZW50ZXIgYW5kIHBheW1lbnQgb2YgYW5udWFsIHNlcnZpY2UgcGF5bWVudHMgaW4gbGlldSB0aGVyZW9mICh0aGUgXCc5M317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ2MTc2NjQ4IFJlc29sdXRpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDYxNzY2NDggXCc5NA0KKSBzaGFsbCAoYSkgY29tcGx5IGluIGFsbCByZXNwZWN0cyB3aXRoIE9oaW8gUmV2LiBDb2RlIEFubi4gU2VjdGlvbiA1NzI3Ljc1IGFuZCB0aGUgUmVzb2x1dGlvbiwgYW5kIChiKSBjb29wZXJhdGUgZnVsbHkgd2l0aCB0aGUgb3RoZXIgQ28tVGVuYW50cyBmb3IgcHVycG9zZXMgb2Ygc3VjaCBDby1UZW5hbnRzXHJxdW90ZSANCiBjb21wbGlhbmNlIHdpdGggdGhlIHJlcXVpcmVtZW50cyBvZiBPaGlvIFJldi4gQ29kZSBBbm4uIFNlY3Rpb24gNTcyNy43NS57XCpcYmtta2VuZCBfUmVmNTA3MDg0MjZ9e1wqXGJrbWtlbmQgX1RvYzYwMTM1NDc3fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M2MDEzNTQ3OH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYxIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDYxNzY2NDggXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNy43XHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDYxNzY2NDggQ3JpDQp0aWNhbCBNaWxlc3RvbmUgTm90aWNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ2MTc2NjQ4IC4gIEVhY2ggQ28tVGVuYW50IHdpbGwgcHJvdmlkZSBwcm9tcHQgd3JpdHRlbiBub3RpY2UgdG8gdGhlIENvLVRlbmFuY3kgTWFuYWdlciB3aGVuIHN1Y2ggQ28tVGVuYW50XHJxdW90ZSBzIHByb2plY3QgYWNoaWV2ZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0ICBpdHMgQ29tbWVyY2lhbCBPcGVyYXRpb25zIERhdGUgYW5kIGl0cyBSZWd1bGF0b3J5IEFwcHJvdmFsIERhdGUsIGFzIGFwcGxpY2FibGUsIHdoaWNoIG5vdGljZSBzaGFsbCBpbmNsdWRlIHJlYXNvbmFibGUgZXZpZGVuY2UgZG9jdW1lbnRpbmcgdGhlIFByb2plY3RccnF1b3RlIHMgYWNoaWV2ZW1lbnQgb2Ygc3VjaCBtaWxlc3RvbmUgYW5kIHRoZSBkYXRlIG9uIHdoaWNoIGl0IHdhcyBhY2hpZXZlZC4NCntcKlxia21rZW5kIF9Ub2M2MDEzNTQ3OH0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNTk2MTgyNzF9e1wqXGJrbWtzdGFydCBfUmVmNTk2MjA3OTF9e1wqXGJrbWtzdGFydCBfVG9jNjAxMzU0Nzl9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTEwNzczODdcY2hhcnJzaWQxMTI4MjI1NSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA3LjhcdGFifX1ccGFyZCBcbHRycGFyDQpcczI2MVxxbCBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE1MTAwNzE1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTEwNzczODdcY2hhcnJzaWQxMTI4MjI1NSANClJlbGlhYmlsaXR5IGFuZCBTZWN1cml0eSBDb21wbGlhbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEwNzczODdcY2hhcnJzaWQxMTA3NzM4NyAuICBUaGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkODAwMTg2NCBPcGVyYXRpb25hbCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTA3NzM4N1xjaGFycnNpZDExMDc3Mzg3IENvLVRlbmFufXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ4MDAxODY0IHRzIHdpbGx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTI4MjI1NSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkODAwMTg2NCBhZ3JlZSB1cG9uIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDgwMDE4NjRcY2hhcnJzaWQ4MDAxODY0IHJlYXNvbmFibGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQzNjkyNjc3IE5FUkMsIHBoeXNpY2FsIHNlY3VyaXR5IGFuZCBjeWJlciBzZWN1cml0eSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ4MDAxODY0XGNoYXJyc2lkODAwMTg2NCBwcm9ncmFtfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkODAwMTg2NCAgcmVxdWlyZW1lbnRzIGZvciB0aGUgU2hhcmVkIFByZW1pc2VzIGFuZCBGYWNpbGl0aWVzIGFuZCBFYXNlbWVudHMgKGFuZCB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDgwMDE4NjRcY2hhcnJzaWQxMTA3NzM4NyBhbnkgQWRkaXRpb25hbCBQcmVtaXNlcyBvciBBZGRpdGlvbmFsIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNjkyNjc3ICB0aGF0IGFyZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNjkyNjc3XGNoYXJyc2lkMTEwNzczODcgb3duZWR9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDM2OTI2NzcgLCBpbiBhbnkgcGFydCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzNjkyNjc3XGNoYXJyc2lkMTEwNzczODcgIGJ5IGFueSBDby1UZW5hbnQgdGhhdCBoYXMgRG9taW5pb24gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjI0Nzg0MiBFbmVyZ3l9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDM2OTI2NzdcY2hhcnJzaWQxMTA3NzM4NyAsIEluYy4gYXMgaXRzIHVsdGltYXRlIHBhcmVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDgwMDE4NjQgKSB0aGF0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE3MjI2MjEgY29uZm9ybSB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDg0ODYxNTRcY2hhcnJzaWQ4MDAxODY0IA0KIERvbWluaW9uIEVuZXJneSwgSW5jLlxycXVvdGUgcyBORVJDLCBQaHlzaWNhbCBTZWN1cml0eSwgYW5kIEN5YmVyIFNlY3VyaXR5IHByb2dyYW0gcmVxdWlyZW1lbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTU5NDc3NCB7XCpcYmtta2VuZCBfUmVmNTk2MTgyNzF9ICh0aGUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDk1OTQ3NzRcY2hhcnJzaWQ5NTk0Nzc0IA0KUmVsaWFiaWxpdHkgYW5kIFNlY3VyaXR5IFJlcXVpcmVtZW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk1OTQ3NzQgXCc5NCl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTI4MjI1NSAuICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NTk0Nzc0IFRoZSBSZWxpYWJpbGl0eSBhbmQgU2VjdXJpdHkgUmVxdWlyZW1lbnRzIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTEyODIyNTUgc2hhbGwgYmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzY5MjY3NyBpbXBsZW1lbnRlZCBieSB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEyODIyNTVcY2hhcnJzaWQxMTI4MjI1NSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEyODIyNTUgDQp3aXRoIHJlc3BlY3QgdG8gdGhlIFNoYXJlZCBQcmVtaXNlcyBhbmQgRmFjaWxpdGllcyBhbmQgRWFzZW1lbnRzIChhbmQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEyODIyNTVcY2hhcnJzaWQxMTA3NzM4NyBhbnkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEyODIyNTUgYXBwbGljYWJsZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDExMjgyMjU1XGNoYXJyc2lkMTEwNzczODcgQWRkaXRpb25hbCBQcmVtaXNlcyBvciBBZGRpdGlvbmFsIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTI4MjI1NSApIGFuZCBlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjI0Nzg0MiBhY2ggQ28tVGVuYW50IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDExMjgyMjU1IGFncmVlcyB0byB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIyNDc4NDIgY29tcGx5IHdpdGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTU5NDc3NCB0aGUgUmVsaWFiaWxpdHkgYW5kIFNlY3VyaXR5IFJlcXVpcmVtZW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIyNDc4NDIgDQogd2l0aCByZXNwZWN0IHRvIHRoZSBTaGFyZWQgUHJlbWlzZXMgYW5kIEZhY2lsaXRpZXMgYW5kIEVhc2VtZW50cyAoYW5kIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIyNDc4NDJcY2hhcnJzaWQxMTA3NzM4NyBhbnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMTI4MjI1NSAgYXBwbGljYWJsZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjI0Nzg0MlxjaGFycnNpZDExMDc3Mzg3ICBBZGRpdGlvbmFsIFByZW1pc2VzIG9yIEFkZGl0aW9uYWwgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIyNDc4NDIgKTsgfXtccnRsY2hcZmNzMSBcYWlcYWYwIFxsdHJjaFxmY3MwIFxpXGluc3JzaWQyMjQ3ODQyXGNoYXJyc2lkMTEyODIyNTUgcHJvdmlkZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMjQ3ODQyIA0KLCB0aGF0LCBmb3IgdGhlIGF2b2lkYW5jZSBvZiBkb3VidCwgdGhhdCB0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk1OTQ3NzQgZSBSZWxpYWJpbGl0eSBhbmQgU2VjdXJpdHkgUmVxdWlyZW1lbnRzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIyNDc4NDJcY2hhcnJzaWQyMjQ3ODQyIHNoYWxsIG5vdCBhcHBseSB0byBhbnkgQ28tVGVuYW50XHJxdW90ZSBzIFNlcGFyYXRlIFByZW1pc2VzLn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkODAwMTg2NCB7XCpcYmtta2VuZCBfUmVmNTk2MjA3OTF9e1wqXGJrbWtlbmQgX1RvYzYwMTM1NDc5fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTMwOX17XCpcYmtta3N0YXJ0IF9Ub2M2MDEzNTQ4MH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjU5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGJcY2Fwc1xkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgQXJ0aWNsZSA4XHRhYn19XHBhcmRccGxhaW4gXGx0cnBhcg0KXHMyNTlccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDcyMFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGJcY2Fwc1xmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIE1BTkFHRU1FTlQgUklHSFRTIEFORCBWT1RJTkd9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEge1wqXGJrbWtlbmQgX1JlZjQ4MDM1MzA5fXtcKlxia21rZW5kIF9Ub2M2MDEzNTQ4MH0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzUzMTB9e1wqXGJrbWtzdGFydCBfUmVmNDgwMzc0NTV9e1wqXGJrbWtzdGFydCBfVG9jNjAxMzU0ODF9e1wqXGJrbWtzdGFydCBfUmVmMTAxMzM5NjMzfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgOC4xDQpcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyNjFccWwgXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIEluIEdlbmVyYWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIHtcKlxia21rZW5kIF9SZWY0ODAzNTMxMH17XCpcYmtta2VuZCBfUmVmNDgwMzc0NTV9e1wqXGJrbWtlbmQgX1RvYzYwMTM1NDgxfQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9EVl9NMjYyfXtcKlxia21rc3RhcnQgX1JlZjQ4MDM1MzExfXtcKlxia21rZW5kIF9EVl9NMjYyfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChhKVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzMjYzXHFsIFxmaTE0NDBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4MjE2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxpbHZsMlxvdXRsaW5lbGV2ZWwyXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgVGhlIGFjdGlvbnMgdGhhdCB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIGlzIGF1dGhvcml6ZWQgdG8gdGFrZSBwdXJzdWFudCB0byB0aGlzIEFncmVlbWVudCB3aXRoIHJlc3BlY3QgdG8gdGhlIFNoYXJlZCBQcmVtaXNlcyBhbmQgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgRWFzZW1lbnRzLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KIEFkZGl0aW9uYWwgUHJlbWlzZXMgb3IgQWRkaXRpb25hbCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSAgYXMgd2VsbCBhcyBhbnkgYWN0aW9ucyB0byBpbXBsZW1lbnQgdGhpcyBBZ3JlZW1lbnQsIHNoYWxsIGJlIHRha2VuIGJ5IHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgaQ0KbiBhY2NvcmRhbmNlIHdpdGggdGhlIHRlcm1zIG9mIHRoaXMgQWdyZWVtZW50LCBpbmNsdWRpbmcgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCAgIFJFRiBfUmVmMTAxMzM5OTE4IFxcdyBcXGggXFwqIE1FUkdFRk9STUFUIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDMxMDAzMDAwMzEwMDMzMDAzMzAwMzkwMDM5MDAzMTAwMzgwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcY2YxXGluc3JzaWQ3OTQyNjJcY2hhcnJzaWQ3OTQyNjIgOC4zfX19XHNlY3RkIFxsdHJzZWN0XHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANCiBhbmQgYW55IG90aGVyIGxpbWl0YXRpb25zIG9yIHJlc3RyaWN0aW9ucyBzZXQgZm9ydGggaGVyZWluLiAgRXhjZXB0IGFzIGV4cHJlc3NseSBzdGF0ZWQgaGVyZWluLCBhbGwgZGVjaXNpb25zIHdpdGggcmVzcGVjdCB0byB0aGUgU2VwYXJhdGUgRmFjaWxpdGllcyBvZiBhIENvLVRlbmFudCBzaGFsbCBiZSBtYWRlIGJ5IHN1Y2ggQ28tVH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBlbmFudC4gIFRoZSBDby1UZW5hbnRzIHNoYWxsIG5vdCBpbnRlcmZlcmUgaW4gdGhlIG1hbmFnZW1lbnQgb2YgdGhlIFNoYXJlZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIA0KUHJlbWlzZXMgYW5kIEZhY2lsaXRpZXMgYnkgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBpbiBhY2NvcmRhbmNlIHdpdGggdGhpcyBBZ3JlZW1lbnQgZXhjZXB0IGZvciBzdWNoIHRlbXBvcmFyeSBpbnRlcnJ1cHRpb25zIHRoYXQgYXJlIHBlcm1pdHRlZCBwdXJzdWFudCB0byB0aGUgZXhwbGljaXQgdGVybXMgY29udGFpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgDQplZCBpbiB0aGlzIEFncmVlbWVudC57XCpcYmtta2VuZCBfUmVmMTAxMzM5NjMzfXtcKlxia21rZW5kIF9SZWY0ODAzNTMxMX0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzUzMTN9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGIpXHRhYn1FYWNofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4ICB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IE9wZXJhdGlvbmFsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgDQogc2hhbGwgaGF2ZSB0aGUgcmlnaHQgdG8gdm90ZSBvbiBhbnkgbWF0dGVyIHJlcXVpcmluZyBhIHZvdGUgb2YgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgcyBpbiBwcm9wb3J0aW9uIHRvIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IHRoZWlyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgcmVzcGVjdGl2ZSBPcGVyYXRpb25hbCB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgUHJvLVJhdGEgU2hhcmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCAgaW4gdGhlIFNoYXJlZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgUHJlbWlzZXMgYW5kIEZhY2lsaXRpZXM7IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgcHJvdmlkZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5ICwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IGhvd2V2ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5ICwgdGhhdCBlYWNoIHZvdGUgc2hhbGwgcmVxdWlyZSBhcHByb3ZhbCBieSB0aGUgUmVxdWlyZWQgTWFqb3JpdHkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQp1bmxlc3Mgb3RoZXJ3aXNlIHJlcXVpcmVkIGhlcmVieS4gIElmIGEgbWF0dGVyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IHNvbGVseSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBpbnZvbHZlcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBBZGRpdGlvbmFsfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBQcmVtaXNlcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBvciBBZGRpdGlvbmFsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIEZhY2lsaXRpZXMgaW4gd2hpY2ggbm90IGFsbCBvZiB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBzIGhhdmUgYW4gfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFVuZGl2aWRlZCBJbnRlcmVzdCwgb25seSBzdWNofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBPcGVyYXRpb25hbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgcyB3aXRoIGFuIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgVW5kaXZpZGVkIEludGVyZXN0IGluIHN1Y2ggU2hhcmVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5ICBGYWNpbGl0aWVzIHNoYWxsIGJlIGVudGl0bGVkIHRvIHZvdGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAgcHVyc3VhbnQgdG8gdGhlaXIgcmVzcGVjdGl2ZSBBZGRpdGlvbmFsIFByZW1pc2VzIG9yIEZhY2lsaXRpZXMgUHJvLVJhdGEgU2hhcmVzIGluIHRoZSBhcHBsaWNhYmxlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDMyMzk5NDcgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IEFkZGl0aW9uYWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBQcmVtaXNlcyB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IG9yIEFkZGl0aW9uYWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAgYW5kIGVhY2ggc3VjaCB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgdm90ZSBzaGFsbCByZXF1aXJlIGFwcHJvdmFsIGJ5IHRoZSBSZXF1aXJlZCBNYWpvcml0eSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiB1bmxlc3Mgb3RoZXJ3aXNlIHJlcXVpcmVkIGhlcmVieX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQge1wqXGJrbWtlbmQgX1JlZjQ4MDM1MzEzfSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgSWYgYSBtYXR0ZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgc29sZWx5IH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgaW52b2x2ZXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgYW4gRWFzZW1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxICwgb25seSBzdWNofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IE9wZXJhdGlvbmFsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgcyB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgc2hhbGwgYmUgZW50aXRsZWQgdG8gdm90ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICBwdXJzdWFudCB0byB0aGVpciByZXNwZWN0aXZlIEVhc2VtZW50IFByby1SYXRhIFNoYXJlcyBpbiB0aGUgYXBwbGljYWJsZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMzIzOTk0NyANCiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBFYXNlbWVudCBhbmQgZWFjaCBzdWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgdm90ZSBzaGFsbCByZXF1aXJlIGFwcHJvdmFsIGJ5IHRoZSBSZXF1aXJlZCBNYWpvcml0eSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANCnVubGVzcyBvdGhlcndpc2UgcmVxdWlyZWQgaGVyZWJ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBJZiBhIG1hdHRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDQgIHRoYXQgcmVxdWlyZXMgYSB2b3RlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIGludm9sdmVzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgU2hhcmVkIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgDQpQcmVtaXNlcyBhbmQgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICBhcyB3ZWxsIGFzIEFkZGl0aW9uYWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBQcmVtaXNlcyB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IG9yIEFkZGl0aW9uYWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANCiBvciBFYXNlbWVudHMgaW4gYSBtYW5uZXIgd2hlcmUgdGhlIGFwcHJvdmFsIGNhbm5vdCBiZSBzZXBhcmF0ZWQgaW4gdGhlIG1hbm5lciBzZXQgZm9ydGggYWJvdmUsIHN1Y2ggbWF0dGVyIG1heSBiZSBhcHByb3ZlZCBieSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIGEgdm90ZSBvZiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgT3BlcmF0aW9uYWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBzIGluIHByb3BvcnRpb24gdG8gfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCB0aGVpcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IHJlc3BlY3RpdmUgT3BlcmF0aW9uYWwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANClByby1SYXRhIFNoYXJlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgcyBhbmQgZWFjaCBzdWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgdm90ZSBzaGFsbCByZXF1aXJlIGFwcHJvdmFsIGJ5IHRoZSBSZXF1aXJlZCBNYWpvcml0eSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIHVubGVzcyBvdGhlcndpc2UgcmVxdWlyZWQgaGVyZWJ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoYylcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTMxNH1JbiB0aGUgZXZlbnQgYW5kIGR1cmluZyB0aGUgY29udGludWFuY2Ugb2YgYSBtYXRlcmlhbCBDby1UZW5hbnQgRXZlbnQgb2YgRGVmYXVsdCwgdGhlIGRlZmF1bHRpbmcgQ28tVGVuYW50IHNoYWxsIGhhdmUgbm8gcmlnaHQgdG8gdm90ZSBvbiBhbnkgbWF0dGVyIHJlcXVpcmluZyBhIHZvdGUgb2YgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBzLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEge1wqXGJrbWtlbmQgX1JlZjQ4MDM1MzE0fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTMxNX17XCpcYmtta3N0YXJ0IF9SZWY0ODAzNzQ1Nn17XCpcYmtta3N0YXJ0IF9Ub2M2MDEzNTQ4Mn17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYxIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDguMlx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzMjYxXHFsIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM4XGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBTcGVjaWZpYyBBdXRob3JpdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANCi4gIFdpdGhvdXQgbGltaXRpbmcgdGhlIGdlbmVyYWxpdHkgb2YgdGhlIGZvcmVnb2luZywgYW5kIHN1YmplY3QgdG8gdGhlIGxpbWl0YXRpb25zIG9mIGF1dGhvcml0eSBvZiB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIGluIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgU2VjdGlvbiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NCAgIFJFRiBfUmVmMTAxMzM5OTE4IFxcdyBcXGggXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzMTAwMzAwMDMxMDAzMzAwMzMwMDM5MDAzOTAwMzEwMDM4MDAwMDAwfX0NCn17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGNmMVxpbnNyc2lkNzk0MjYyXGNoYXJyc2lkNzk0MjYyIDguM319fVxzZWN0ZCBcbHRyc2VjdFxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQogYmVsb3cgb3Igb3RoZXJ3aXNlIHNldCBmb3J0aCBpbiB0aGlzIEFncmVlbWVudCwgaW4gYWRkaXRpb24gdG8gdGhlIGF1dGhvcml0eSBvdGhlcndpc2UgZ3JhbnRlZCBoZXJlaW4sIHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgc2hhbGwgaGF2ZSB0aGUgcG93ZXIsIHdpdGhvdXQgZnVydGhlciBjb25zZW50IG9yIGFwcHJvdmFsIG9mIHRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANCmUgQ28tVGVuYW50cywgdG8gZG8gYW55IG9mIHRoZSBmb2xsb3dpbmc6fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSB7XCpcYmtta2VuZCBfUmVmNDgwMzUzMTV9e1wqXGJrbWtlbmQgX1JlZjQ4MDM3NDU2fXtcKlxia21rZW5kIF9Ub2M2MDEzNTQ4Mn0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzUzMTZ9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGEpXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMjYzXHFsIFxmaTE0NDBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgyMTYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM4XGlsdmwyXG91dGxpbmVsZXZlbDJcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBPbiBiZWhhbGYgb2YgdGhlIENvLVRlbmFudHMgdGhhdCBwb3NzZXNzIGFuIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IGl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggbnRlcmVzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIGluIHRoZSBTaGFyZWQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBQcmVtaXNlcyBhbmQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSANCkZhY2lsaXRpZXMsIHRvIG5lZ290aWF0ZSwgZW50ZXIgaW50bywgYW5kIGFkbWluaXN0ZXIgYWdyZWVtZW50cyB3aXRoIHRoaXJkIHBhcnR5IGNvbnRyYWN0b3JzLCBvciB0byBlbXBsb3kgcGVyc29ucywgYW5kIHRvIG90aGVyd2lzZSBleHBlbmQgbW9uaWVzIG5lY2Vzc2FyeSBmb3IgdGhlIG1hbmFnZW1lbnQsIG9wZXJhdGlvbiwgbWFpbnRlbmFuY2UsIGFuZCByZXBhaXIgb2YgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBTaGFyZWQgRmFjaWxpdGllcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBvciBBZGRpdGlvbmFsIEZhY2lsaXRpZXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBpbiBhY2NvcmRhbmNlIHdpdGggdGhpcyBBZ3JlZW1lbnQ7IH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBwcm92aWRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IGhvd2V2ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgLCB0aGF0IChpKSBzdWNoIGVuZ2FnZW1lbnQgYW5kIGFueSBmZWVzIHBhaWQgdG8gc3VjaCB0aGlyZCBwYXJ0eSBjb250cmFjdG9yIHRoZXJldW5kZXIgc2hhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IA0KbGwgYmUgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZSBBcHByb3ZlZCBDby1UZW5hbmN5IE8mTSBCdWRnZXQsIChpaSkgd2l0aCByZXNwZWN0IHRvIGFueSBhZ3INCmVlbWVudCB3aXRoIGEgdGhpcmQgcGFydHkgY29udHJhY3RvciB0aGF0IGlzIGFuIEFmZmlsaWF0ZSBvZiB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyLCB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIGVudGVycyBpbnRvIHN1Y2ggYWdyZWVtZW50IG9uIGFuIGFybXMtbGVuZ3RoIGJhc2lzLCBhbmQgKGlpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1NzMyNjE4IGkpfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkzMTc4MSAgbm8gc3VjaCB0aGlyZCBwYXJ0eSBjb250cmFjdG9yIGVuZ2FnZW1lbnQgc2hhbGwgcmVsaWV2ZSB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIG9mIGl0cyByaWdodHMgb3Igb2JsaWdhdGlvbnMgc2V0IGZvcnRoIGluIHRoaXMgQWdyZWVtZW50O3tcKlxia21rZW5kIF9SZWY0ODAzNTMxNn0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzUzMTd9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTMxNzgxIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChiKVx0YWJ9DQpUbyBwYXkgYW5kIGNvbGxlY3Qgb24gYmVoYWxmIG9mIHRoZSBDby1UZW5hbnRzIGFtb3VudHMgZHVlIGluIGNvbm5lY3Rpb24gd2l0aCB0aGUgU2hhcmVkIFByZW1pc2VzIGFuZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkxMTAwODEgRmFjaWxpdGllcyx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAgQWRkaXRpb25hbH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MzE3ODEgIFByZW1pc2VzIGFuZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBBZGRpdGlvbmFsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MzE3ODEgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTExMDA4MSANCkZhY2lsaXRpZXMgYnV0IG9ubHkgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZSBBcHByb3ZlZCBDby1UZW5hbmN5IE8mTSBCdWRnZXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ0ODU3ODUyIG9yIGFzIG90aGVyd2lzZSBhcHByb3ZlZCBieSB0aGUgQ28tVGVuYW50cyBwdXJzdWFudCB0byB0aGlzIEFncmVlbWVudA0KfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgO317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAge1wqXGJrbWtlbmQgX1JlZjQ4MDM1MzE3fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTMxOH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoYylcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgDQpUbyBjb21taXQgdG8gdGhlIGV4cGVuZGl0dXJlIG9mIG9yIHNwZW5kIHVwIHRvIGFuZCBpbmNsdWRpbmcgfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDc3Nzc3NSBbUkVEQUNURURdfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSANCiBpbiB0aGUgYWdncmVnYXRlIChpbmNsdWRpbmcgdGhlIGNvc3RzIG9mIGluc3RhbGxhdGlvbiBhbmQgZXhwZWRpdGluZyBmZWVzKSBwZXIgY2FsZW5kYXIgeWVhciBmb3IgYW5kIG9uIGJlaGFsZiBvZiB0aGUgQ28tVGVuYW50cyB0byByZXBhaXIgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgU2hhcmVkIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICwgQWRkaXRpb25hbCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSAgb3IgRWFzZW1lbnRzIGR1ZSB0byBhbiBFbWVyZ2VuY3k7IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTM1Njk3MDggcHJvdmlkZWR9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICB0aGF0IHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgZ2l2ZXMgY29uY3VycmVudCBub3RpY2UgYnkgZWxlY3Ryb25pYyBtYWlsIHRvIHRoZSBDby1UZW5hfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBudHMgYmVuZWZpdGluZyBmcm9tIHN1Y2ggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFNoYXJlZCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgLCBBZGRpdGlvbmFsIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIA0KIG9yIEVhc2VtZW50cyByZWdhcmRpbmcgdGhlIG5hdHVyZSBhbmQgYW1vdW50IG9mIHRoZSBleHBlbmRpdHVyZSBhcyBzb29uIGFzIHJlYXNvbmFibHkgcHJhY3RpY2FibGUgYWZ0ZXIgdGhlIGVzdGltYXRlZCBhbW91bnQgb2YgdGhlIGV4cGVuZGl0dXJlIGlzIGtub3duIGJ5IHRoZSBDby1UZW5hbmN5IE1hbmFnZXIsIGJ1dCBpbiBhbnkgZXZlbnQgbm8gbGF0ZXIgdGhhbiB0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBlIHRpbWUgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBjb21taXRzIHRvIHRoZSBleHBlbmRpdHVyZTt7XCpcYmtta2VuZCBfUmVmNDgwMzUzMTh9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1MzE5fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChkKVx0YWJ9VG8gbmVnb3RpYXRlIHdpdGgsIGFuZCByZXByZXNlbnQgdGhlIENvLVRlbmFudHNccnF1b3RlIA0KIGludGVyZXN0cyBiZWZvcmUsIGFueSBHb3Zlcm5tZW50YWwgQXV0aG9yaXR5IHB1cnN1YW50IHRvIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgU2VjdGlvbiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgIFJFRiBfUmVmNDgwMzc0NDcgXFxyIFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNDAwMzgwMDMwMDAzMzAwMzcwMDM0MDAzNDAwMzcwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ3OTQyNjIgNi42fX19XHNlY3RkIFxsdHJzZWN0DQpccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICByZWdhcmRpbmcgcHJvcGVydHkgdmFsdWF0aW9uIGFuZCByZWFsIHByb3BlcnR5IHRheGVzIChpZiBhbnkpIHJlbGF0ZWQgdG8gdGhlIEVhc2VtZW50cywgU2hhcmVkIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBQcmVtaXNlcyBhbmQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBGYWNpbGl0aWVzLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBBZGRpdGlvbmFsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkzMTc4MSAgUHJlbWlzZXMgYW5kIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IEFkZGl0aW9uYWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkzMTc4MSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MTEwMDgxIEZhY2lsaXRpZXN9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgIGFuZCB0aGUgU2VwYXJhdGUgRmFjaWxpdGllcyAoaWYgcGVybWl0dGVkIGluIGFkdmFuY2UgYnkgdGhlIENvLVRlbmFudCBvd25pbmcgc3VjaCBTZXBhcmF0ZSBGYWNpbGl0aWVzKTsgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBwcm92aWRlZH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSAgdGhhdCBhbnkgYWdyZWVtZW50cyBvciBzZXR0bGVtZW50cyB3aXRoIHJlc3BlY3QgdG8gdGhlIGZvcmVnb2luZyBhcmUgYXBwcm92ZWQgYnkgdGhlIGFwcGxpY2FibGUgQ28tVGVuYW50czsgYW5ke1wqXGJrbWtlbmQgX1JlZjQ4MDM1MzE5fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTMyMH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChlKVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IA0KVG8gZXhlY3V0ZSwgYWNrbm93bGVkZ2UsIGFuZCBkZWxpdmVyIGFueSBhbmQgYWxsIGluc3RydW1lbnRzIGFuZCB0YWtlIHN1Y2ggb3RoZXIgc3RlcHMgYXMgYXJlIHJlYXNvbmFibHkgbmVjZXNzYXJ5IHRvIGVmZmVjdHVhdGUgdGhlIGZvcmVnb2luZyBhbmQgYXMgYXJlIGNvbnNpc3RlbnQgd2l0aCB0aGUgdGVybXMgb2YgdGhpcyBBZ3JlZW1lbnQsIGluY2x1ZGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDU3MzI2MTggZyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkzMTc4MSBTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCAgIFJFRiBfUmVmMTAxMzM5OTE4IFxcdyBcXGggXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDMxMDAzMDAwMzEwMDMzMDAzMzAwMzkwMDM5MDAzMTAwMzgwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGNmMVxpbnNyc2lkNzk0MjYyXGNoYXJyc2lkNzk0MjYyIDguM319fVxzZWN0ZCBcbHRyc2VjdA0KXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgYW5kIGFueSBvdGhlciBsaW1pdGF0aW9ucyBzZXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIA0KIGZvcnRoIGhlcmVpbi59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIHtcKlxia21rZW5kIF9SZWY0ODAzNTMyMH0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzUzMjF9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGYpXHRhYn0NClRvIHByb3ZpZGUgZWFjaCBvZiB0aGUgQ28tVGVuYW50cyB3aXRoIGFjY2VzcyB0byBhbGwgZGF0YSBiZXR3ZWVuIHByaW1hcnkgYW5kIHJlZHVuZGFudCBmaWJlciBvcHRpYyBsaW5lcyBhbmQgY29tbXVuaWNhdGlvbnMgZXF1aXBtZW50IGZvciB0aGUgdHJhbnNtaX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgDQp0dGFsIG9mIG1ldGVyaW5nIGFuZCBvcGVyYXRpb25hbCBkYXRhIGZyb20gdGhlIGNvbGxlY3Rpb24gc3Vic3RhdGlvbnMgdG8gdGhlIGludGVyY29ubmVjdGlvbiBzd2l0Y2h5YXJkLntcKlxia21rZW5kIF9SZWY0ODAzNTMyMX0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzUzMjJ9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGcpXHRhYn0NClRvIGRlc2lnbiByZWxheSBzY2hlbWVzIGFuZCBvdmVyc2VlIG9wZXJhdGlvbmFsIGNvb3JkaW5hdGlvbiB0byBtZWV0IFBKTSByZXF1aXJlbWVudHMue1wqXGJrbWtlbmQgX1JlZjQ4MDM1MzIyfQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTMyM317XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMzU2OTcwOCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoaClcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEzNTY5NzA4IFRoZSB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIENvLVRlbmFuY3kgTWFuYWdlciB3aWxsIHNlcnZlIGFzIHRoZSBwb2ludCBvZiBjb250YWN0IGZvciBhbGwgR292ZXJubWVudGFsIEF1dGhvcml0aWVzLCBQSk0sIE5FUkMgYW5kIHRoZSBUcmFuc21pdHRpbmcgVXRpbGl0eSBvciBvdGhlciB0cmFuc21pc3Npb24gcHJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgb3ZpZGVycyB3aXRoIHJlc3BlY3QgdG8gdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgU2hhcmVkIEZhY2lsaXRpZXMgYW5kIGFncmVlcyB0byBwcm9tcHRseSBhZnRlciByZWNlaXZpbmcgdGhlIHNhbWUsIHByb3ZpZGUgdG8gdGhlIENvLVRlbmFudHMgd3JpdHRlbiBub3RpY2Ugb2YgYW55IGJpbGxzLCANCm9yZGVycywgcmVxdWlyZW1lbnRzIG9yIG90aGVyIGNvbW11bmljYXRpb25zIG9mIG9yIGZyb20gYW55IEdvdmVybm1lbnRhbCBBdXRob3JpdHksIE5FUkMsIFBKTSBvciB0aGUgVHJhbnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IA0KbWl0dGluZyBVdGlsaXR5IG9yIG90aGVyIHRyYW5zbWlzc2lvbiBwcm92aWRlciByZWNlaXZlZCBieSBDby1UZW5hbmN5IE1hbmFnZXIgYW5kIGFmZmVjdGluZyB0aGUgU2hhcmVkIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAgb3IgQWRkaXRpb25hbCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSAuDQp7XCpcYmtta2VuZCBfUmVmNDgwMzUzMjN9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1MzI0fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjggXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGkpXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjggQ28tVGVuYW5jeQ0KIE1hbmFnZXIgc2hhbGwgbm90IGJlIHJlc3BvbnNpYmxlIGZvciBtYWtpbmcgYW55IGZpbGluZ3Mgd2l0aCBORVJDIG9yIGFueSBvdGhlciBHb3Zlcm5tZW50YWwgQXV0aG9yaXR5IHdpdGggcmVzcGVjdCB0byB0aGUgY29tcGxpYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDU3MzI2MTggDQpjZSBieSBhbnkgQ28tVGVuYW50IHdpdGggTkVSQyByZXF1aXJlbWVudHMgb3IgdGhlIHJlcXVpcmVtZW50cyBvZiBhbnkgb3RoZXIgR292ZXJubWVudGFsIEF1dGhvcml0eSAoYWxsIG9mIHdoaWNoIHNoYWxsIGJlIHRoZSByZXNwb25zaWJpbGl0eSBvZiB0aGUgYXBwbGljYWJsZSBDby1UZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTMxNzgxIG5hbnQpOyB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTM1Njk3MDggcHJvdmlkZWQsIGhvd2V2ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAsIHRoYXQgdXBvbiByZXF1ZXN0IG9mIGEgQ28tVGVuYW50LCBDby1UZW5hbmN5IE1hbmFnZXIgc2hhbGwgcmVhc29uYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBibHkgY29vcGVyYXRlIHRvIHByb3ZpZGUgcmVjb3JkcyBvZiBDby1UZW5hbmN5IE1hbmFnZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFxycXVvdGUgcyBzZXJ2aWNlcyBwcm92aWRlZCB1bmRlciB0aGlzIEFncmVlbWVudCB0byBhc3Npc3QgQ28tVGVuYW50IHRvIG1ha2UgdGhlIG5lY2Vzc2FyeSBmaWxpbmdzLiAgfQ0Ke1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MjU3NDE4IFRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ2MjU3NDE4XGNoYXJyc2lkNjI1NzQxOCANCkNvLVRlbmFuY3kgTWFuYWdlciBzaGFsbCBlbnN1cmUgdGhhdCB0aGUgU2hhcmVkIFByZW1pc2VzIGFuZCBGYWNpbGl0aWVzIGFuZCBFYXNlbWVudHMgKGFuZCBhbnkgYXBwbGljYWJsZSBBZGRpdGlvbmFsIFByZW1pc2VzIG9yIEFkZGl0aW9uYWwgRmFjaWxpdGllcykgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTc4MDAxMVxjaGFycnNpZDYyNTc0MTggY29tcGx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDYyNTc0MThcY2hhcnJzaWQ2MjU3NDE4IHkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTc4MDAxMVxjaGFycnNpZDYyNTc0MTggd2l0aCB0aGUgUmVsaWFiaWxpdHkgYW5kIFNlY3VyaXR5IFJlcXVpcmVtZW50cy4gIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgV2l0aCByZXNwZWN0IHRvIHRoZSBTaGFyZWR9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAgYW5kIEFkZGl0aW9uYWwgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgDQosIHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgc2hhbGwgb3ZlcnNlZSBhbGwgaW52ZXN0aWdhdGlvbnMsIHN0dWRpZXMsIGFjdGlvbnMgb3IgcmVzcG9uc2VzIGJ5IG9yIHRvIE5FUkMgb3IgYW55IGNvdXJ0IG9yIGFkbWluaXN0cmF0aXZlIGFjdGlvbiBvciBvcmRlciByZWxhdGluZyB0byBtYXR0ZXJzIHdpdGhpbiB0aGUganVyaXNkaWN0aW9uIG9mIE5FUkMgbm93IG9yIGhlcmVhZnRlciBhcHBsaWNhYmxlIHRvIHRoZSBTaGFyZWR9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjMxMDEyOCAgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzczNDA3MCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgYW5kIEFkZGl0aW9uYWwgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IC4gIFRoZSBDby1UZW5hbmN5IE1hbmFnZXIgc2hhbGwga2VlcCBhbGwgQ28tVGVuYW50cyBmdWxseSBhcHByYWlzZWQgYXMgdG8gdGhlIG1hdHRlcnMgcmVmZXJyZWQgdG8gaW4gdGhlIHByaW9yIHNlbnRlbmNlIHdpdGggcmVzcGVjdCB0byB0aGUgU2hhcmVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1NzMyNjE4ICBGYWNpbGl0aWVzIA0KfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgYW5kIEFkZGl0aW9uYWwgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTczMjYxOCAgYW5kIHNoYWxsIGNvbnN1bHQgd2l0aCB0aGVtIHByaW9yIHRvIHRha2luZyBhbnkgbWF0ZXJpYWwgYWN0aW9uIGludm9sdmluZyBhbnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTMxNzgxICBHb3Zlcm5tZW50YWwgQXV0aG9yaXR5IG9yIHJpc2sgb2YgaW5jdXJyaW5nIGFueSBtYXRlcmlhbCBsaWFiaWxpdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCB7XCpcYmtta2VuZCBfUmVmNDgwMzUzMjR9Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI5MjgxMTggDQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjEwMjUzNzIxMn17XCpcYmtta3N0YXJ0IF9SZWYxMDEzMzk5MTh9e1wqXGJrbWtzdGFydCBfVG9jNjAxMzU0ODN9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgOC4zXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhcg0KXHMyNjFccWwgXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBMaW1pdGF0aW9uIG9uIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgQXV0aG9yaXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiB7XCpcYmtta2VuZCBfUmVmMTAyNTM3MjEyfS4gIHtcKlxia21rc3RhcnQgX1JlZjEwMjUzNzIyOH1UaGUgQ28tVGVuYW5jeSBNYW5hZ2VyIHNoYWxsIG5vdCB0YWtlIGFueSBvZiB0aGUgZm9sbG93aW5nIGFjdGlvbnMgd2l0aG91dCB0aGUgcHJpb3Igd3JpdHRlbiBhcHByb3ZhbCBvZiBhbGwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICB3aXRoIGEgYmVuZWZpY2lhbCBpbnRlcmVzdCBhZmZlY3RlZCBieSB0aGUgYWN0aW9uOn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAge1wqXGJrbWtlbmQgX1JlZjEwMTMzOTkxOH0NCntcKlxia21rZW5kIF9Ub2M2MDEzNTQ4M317XCpcYmtta2VuZCBfUmVmMTAyNTM3MjI4fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTMyNX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoYSlcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyNjNccWwgXGZpMTQ0MFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDIxNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcaWx2bDJcb3V0bGluZWxldmVsMlxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIENyZWF0ZSBvciBjYXVzZSB0byBiZSBjcmVhdGVkIGFueSBMaWVuIG9uIGFueSBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAsIEFkZGl0aW9uYWwgRmFjaWxpdGllcyx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIA0KIHRoZSBTZXBhcmF0ZSBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgIG9yIGEgU2VwYXJhdGUgUHJvamVjdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgO317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkge1wqXGJrbWtlbmQgX1JlZjQ4MDM1MzI1fQ0KDQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1MzI2fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChiKVx0YWJ9QW1lbmQgb3IgbW9kaWZ5IHRoZSB0ZXJtcyBvZiB0aGlzDQogQWdyZWVtZW50LCBvciBhbnkgb3RoZXIgYWdyZWVtZW50IHRoYXQgYWZmZWN0cyBhbnkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IHN9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICByaWdodHMgaGVyZXVuZGVyIHRvIGRldmVsb3AsIG93biBhbmQgb3BlcmF0ZSBpdHMgUHJvamVjdCBvciBTZXBhcmF0ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBQcm9qZWN0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KLCBpbmNsdWRpbmcgRWFzZW1lbnRzIGFuZCBJbnRlcmNvbm5lY3Rpb24gQWdyZWVtZW50czt9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIHtcKlxia21rZW5kIF9SZWY0ODAzNTMyNn0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzUzMjd9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGMpXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIA0KUGVyZm9ybSBvciBvbWl0IHRvIHBlcmZvcm0gYW55IGFjdCB3aGljaCB3b3VsZCBjYXVzZSBhbnkgcGVyc29uIHJlYXNvbmFibHkgdG8gYmVsaWV2ZSB0aGF0IHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgaXMgYSBwYXJ0bmVyIG9mIGEgQ28tVGVuYW50IG9yIGF1dGhvcml6ZWQgdG8gYmluZCBhIENvLVRlbmFudCwgZXhjZXB0IGFzIGV4cHJlc3NseSBwcm92aWRlZCBoZXJlaW47e1wqXGJrbWtlbmQgX1JlZjQ4MDM1MzI3fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTMyOH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoZClcdGFifVNlbGwsIGFzc2lnbiwgbW9ydGdhZ2UsIGVuY3VtYmVyLCBjb252ZXkgb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSByIG90aGVyd2lzZSB0cmFuc2ZlciBhbGwgb3IgYW55IHBvcnRpb24gb2YgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IGl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggbnRlcmVzdHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIGhlbGQgYnkgYW55IENvLVRlbmFudCwgb3IgYW55IGNvbXBvbmVudHMgb2YgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgU2hhcmVkIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICwgQWRkaXRpb25hbCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSAgb3IgYW55IFNlcGFyYXRlIEZhY2lsaXRpZXMgb3IgcmlnaHRzIHRoZXJlaW47e1wqXGJrbWtlbmQgX1JlZjQ4MDM1MzI4fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTMyOX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoZSlcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgDQpCb3Jyb3cgZnVuZHMgb3Igb3RoZXJ3aXNlIGluY3VyIGluZGVidGVkbmVzcyBvbiBiZWhhbGYgb2YgYSBDby1UZW5hbnQ7e1wqXGJrbWtlbmQgX1JlZjQ4MDM1MzI5fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTMzMH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoZilcdGFifVByb2N1cmUgYW55IGluc3VyYW5jZSBjb3ZlcmFnZSB0aGF0IGlzIGxlc3MgdGhhbiB0aGUgY292ZXJhZ2VzIHJlcXVpcmVkIGJ5IH0NCntcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0ICAgUkVGIF9SZWY0ODAzNTM3MSBcXG4gXFxoIFxcKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNDAwMzgwMDMwMDAzMzAwMzUwMDMzMDAzNzAwMzEwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGNmMVxpbnNyc2lkNzk0MjYyXGNoYXJyc2lkNzk0MjYyIEFydGljbGUgMTB9fX1cc2VjdGQgXGx0cnNlY3QNClxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IDt9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiB7XCpcYmtta2VuZCBfUmVmNDgwMzUzMzB9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1MzMxfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChnKVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANCkNvbW1pdCB0byBleHBlbmRpdHVyZXMgaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxICBleGNlc3Mgb2YgfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDc3Nzc3NSBbUkVEQUNURURdfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSANCiBmb3IgYW5kIG9uIGJlaGFsZiBvZiB0aGUgQ28tVGVuYW50cyBleGNlcHQgZm9yIHJlcGFpcnMgdG8gdGhlIFNoYXJlZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBQcmVtaXNlcyBhbmQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KLCBBZGRpdGlvbmFsIFByZW1pc2VzLCBBZGRpdGlvbmFsIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgb3IgRWFzZW1lbnRzIGR1ZSB0byBhbiBFbWVyZ2VuY3l9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAgb3IgYXMgb3RoZXJ3aXNlIGF1dGhvcml6ZWQgdW5kZXIgdGhpcyBBZ3JlZW1lbnR9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCA7fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQge1wqXGJrbWtlbmQgX1JlZjQ4MDM1MzMxfSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzUzMzJ9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGgpXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIA0KSW5jdXIgYW4gZXhwZW5zZSBvZiBtb3JlIHRoYW4gfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDc3Nzc3NSBbUkVEQUNURURdfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSANCiBpbiBhbnkgY2FsZW5kYXIgeWVhciB0aGF0IGlzIG5vdCBpbmNsdWRlZCBpbiB0aGUgQXBwcm92ZWQgQ28tVGVuYW5jeSBPJk0gQnVkZ2V0IG9yIHRoYXQgaXMgbm90IGluY3VycmVkIGZvciB0aGUgaW5zdGFsbGF0aW9uIG9mIGEgUmVwbGFjZW1lbnQgQ29tcG9uZW50IGFzIGF1dGhvcml6ZWQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgdW5kZXIgdGhpcyBBZ3JlZW1lbnR9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIDt9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIHtcKlxia21rZW5kIF9SZWY0ODAzNTMzMn0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzUzMzN9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGkpXHRhYn1NYWtlIGFueSBvZmZlciBvciBlbnRlciBpbnRvIGFueSBjb250cmFjdCwgbGV0dGV9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgciBvZiBpbnRlbnQgb3IgYWdyZWVtZW50IHdpdGggcmVzcGVjdCB0byB0aGUgem9uaW5nIGNsYXNzaWZpY2F0aW9uIG9yIG90aGVyIHpvbmluZyBvciBsYW5kIHVzZSByZXN0cmljdGlvbnM7IG9ye1wqXGJrbWtlbmQgX1JlZjQ4MDM1MzMzfQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTMzNH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMFxpbnNyc2lkMTQ3Nzc3NzUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGopXHRhYn19e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0Nzc3Nzc1IFtSRURBQ1RFRF19e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBrbm93aW5nbHkgYW5kIGludGVudGlvbmFsbHkgZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgbyBhbnkgYWN0IHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIA0KaGF0IGlzIHNwZWNpZmllZCBhcyBiZWluZyBiZXlvbmQgdGhlIGF1dGhvcml0eSBvZiBhIENvLVRlbmFudCwgb3IgaW4gY29udHJhdmVudGlvbiBvZiwgb3IgdGhhdCB3aWxsIG90aGVyd2lzZSBjYXVzZSBhIENvLVRlbmFudCB0byBiZSBpbiBkZWZhdWx0IHVuZGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQogdGhpcyBBZ3JlZW1lbnQsIHRoZSBGYWNpbGl0eSBNYW5hZ2VtZW50IEFncmVlbWVudCB0byB3aGljaCBzdWNoIENvLVRlbmFudCBpcyBhIHBhcnR5IG9yIGFueX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICBSZWd1bGF0b3J5IFJlcXVpcmVtZW50IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgDQp0byB3aGljaCBzdWNoIENvLVRlbmFudCBpcyBhIHBhcnR5IG9yIGJ5IHdoaWNoIGl0IGlzIGJvdW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQge1wqXGJrbWtzdGFydCBfSGxrNDgwNzIxNTR9LCBpbiBlYWNoIGNhc2Ugc29sZWx5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzg4NDMxNSANCnRvIHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgaGFzIGJlZW4gYWR2aXNlZCBvZiB0aGUgb2JsaWdhdGlvbnMgY29udGFpbmVkIGluIHN1Y2ggZG9jdW1lbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgIGluIHdyaXRpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIHtcKlxia21rZW5kIF9SZWY0ODAzNTMzNH17XCpcYmtta2VuZCBfSGxrNDgwNzIxNTR9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1MzM1fXtcKlxia21rc3RhcnQgX1RvYzYwMTM1NDg0fXtcKlxia21rc3RhcnQgX1JlZjEwMjU0OTEyNn17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYxIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDguNFx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzMjYxXHFsIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM4XGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBDdXJ0YWlsbWVudCBvZiBEZWxpdmVyeX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTM1Njk3MDggLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIge1wqXGJrbWtlbmQgX1JlZjQ4MDM1MzM1fXtcKlxia21rZW5kIF9Ub2M2MDEzNTQ4NH0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzUzMzZ9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGEpXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMjYzXHFsIFxmaTE0NDBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgyMTYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM4XGlsdmwyXG91dGxpbmVsZXZlbDJcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBUaGUgQ28tVGVuYW50cyBzaGFsbCBpbg0KdGVycnVwdCBvciByZWR1Y2UgZGVsaXZlcmllcyBvZiBlbGVjdHJpY2FsIHBvd2VyIG92ZXIgdGhlIFNoYXJlZCBGYWNpbGl0aWVzIGlmIHJlcXVlc3RlZCB0byBkbyBzbyBieSB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgZm9sbG93aW5nIHByb3Zpc2lvbnM6ICAoaSkgYWZ0ZXIgcmVhc29uYWJsZSBub3RpY2UgdG8sIGFuZCBhZ3JlZW1lbnQgYnksIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSB0aGUgQ28tVGVuYW50cyBhcyB0byB0aGUgdGltaW5nIGFuZCBkdXJhdGlvbiBvZiB0aGUgY3VydGFpbG1lbnQsIHRvIG1haW50YWluLCByZXBhaXIsIHJlcGxhY2UsIHJlbW92ZSwgaW52ZXN0aWdhdGUsIGluc3BlY3Qgb3IgdGVzdCBhbnkgcGFydCBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANCiwgQWRkaXRpb25hbCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSAgb3IgU2VwYXJhdGUgRmFjaWxpdGllcyBpbiBhY2NvcmRhbmNlIHdpdGggdGhlIHRlcm1zIG9mIHRoaXMgQWdyZWVtZW50OyAoaWkpIGlmIHRoZSBpbnRlcnJ1fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSANCnB0aW9uIG9yIHJlZHUNCmN0aW9uIGlzIG5lY2Vzc2FyeSBkdWUgdG8gYW4gRW1lcmdlbmN5IG9yIGEgU2VwYXJhdGUgRmFjaWxpdGllcyBFbWVyZ2VuY3ksIG9yIChpaWkpIGlmIHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgaXMgb3JkZXJlZCB0byBkbyBzbyBieSBUcmFuc21pdHRpbmcgVXRpbGl0eSwgYW55IG90aGVyIEdvdmVybm1lbnRhbCBBdXRob3JpdHkgb3IgcmVndWxhdG9yeSBhdXRob3JpdHkgd2l0aCBqdXJpc2RpY3Rpb24gb3ZlciB0aGVpciBTZXBhcmF0ZSBGfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjggYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTUwMTM1NTkgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IEFkZGl0aW9uYWwgRmFjaWxpdGllcw0KfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IA0KIG9yIFNoYXJlZCBGYWNpbGl0aWVzLCBvciBhIENvLVRlbmFudCAob3IgaXRzIGF1dGhvcml6ZWQgYWdlbnQpIG5vdGlmaWVzIHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgdGhhdCBzdWNoIGN1cnRhaWxtZW50IGlzIHJlcXVpcmVkIGJ5IFRyYW5zbWl0dGluZyBVdGlsaXR5IG9yIGFub3RoZXIgR292ZXJubWVudGFsIEF1dGhvcml0eSBvciByZWd1bGF0b3J5IGF1dGhvcml0eSB3aXRoIGp1cmlzZGljdGlvbiBvdmVyIHRoZWlyIFNlcGFyYX17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1NzMyNjE4IHRlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MzE3ODEgIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNTAxMzU1OSAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBBZGRpdGlvbmFsIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkzMTc4MSANCiBvciB0aGUgU2hhcmVkIEZhY2lsaXRpZXMuICBUaGUgQ28tVGVuYW5jeSBNYW5hZ2VyIHNoYWxsIGxpbWl0IHRoZSBsZW5ndGggb2YgYW55IHN1Y2ggaW50ZXJydXB0aW9uIG9yIGN1cnRhaWxtZW50IHRvIHRoYXQgdGltZSBzdHJpY3RseSBuZWNlc3NhcnkgdG8gY29ycmVjdCB0aGUgcHJvYmxlbS4gIEFueSBpbnRlcnJ1cHRpb24gb3IgY3VydGFpbG1lbnQNCiBtYWRlIHB1cnN1YW50IHRvIGNsYXVzZSAoaSkgYWJvdmUgc2hhbGwgYmUgbWFkZSB0byB0aGUgZXh0ZW50IGNvbW1lcmNpYWxseSByZWFzb25hYmxlIGR1cmluZyBwZXJpb2RzIHRoYXQgYmFsYW5jZSBib3RoIGxvdyBvciBubyBzb2xhciByZXNvdXJjZSBhbmQgbG93IGVuZXJneSBwcmljZXMgc28gYXMgdG8gbWluaW1pemUgcG90ZW50aWFsIGxvc3Mgb2YgcmV2ZW51ZSBvZiB0aGUgQ28tVGVuYW50KHMpIGJlaW5nIGN1cnRhaWxlZC4gIEFkZGl0aQ0Kb25hbGx5LCBhbnkgc3VjaCBjdXJ0YWlsbWVudCBzaGFsbCBiZSBhcHBsaWV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkxMTAwODEgZCB0byB0aGUgSGFyZGluIFNvbGFyIFByb2plY3Qgb3IgdGhlIEhhcmRpbiBTb2xhciBJSSBQcm9qZWN0XHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgzNTA5MDggDQpzIGluIGFjY29yZGFuY2Ugd2l0aCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEzNzc4NzgxIGFueSBTT0xBUiBGYXJtIE1hbmFnZW1lbnQgU3lzdGVtIGluIHBsYWNlIGF0IHRoZSB0aW1lLiAgVW5sZXNzIGRpcmVjdGVkIG90aGVyd2lzZSBieSBUcmFuc21pdHRpbmcgVXRpbGl0eSBvciBhbnkgb3RoZXIgR292ZXJubWVudGFsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwICBBdXRob3JpdHkgb3IgcmVndWxhdG9yeSBhdXRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBvcml0eSB3aXRoIGp1cmlzZGljdGlvbiBvdmVyIHRoZSBTaGFyZWQgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICBvciB0aGUgQWRkaXRpb25hbCBGYWNpbGl0aWVzDQp9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxICwgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBzaGFsbCBhbGxvY2F0ZSBjdXJ0YWlsbWVudCBvcmRlcnMgaXNzdWVkIHVuZGVyIHN1Yi1jbGF1c2VzIChpaSkgYW5kIChpaWkpIG9mIHRoZSBmaXJzdCBzZW50ZW5jZSBvZiB0aGlzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCAgIFJFRiBfUmVmNDgwMzUzMzUgXFx3IFxcaCBcXCogTUVSR0VGT1JNQVQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM1MDAzMzAwMzMwMDM1MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxjZjFcaW5zcnNpZDc5NDI2MlxjaGFycnNpZDc5NDI2MiA4LjR9fX1cc2VjdGQgXGx0cnNlY3QNClxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIGFtb25nIENvLVRlbmFudHMgaW4gYWNjb3JkYW5jZSB3aXRoIGVhY2ggQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBzIFBlcm1pdHRlZCBDYXBhY2l0eSBzdWJqZWN0IHRvIHN1Y2ggY3VydGFpbG1lbnQgb3JkZXJzIGFzIG9mIHN1Y2ggZGF0ZTsgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSANCnByb3ZpZGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSAsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgaG93ZXZlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgDQosIHRoYXQgKGkpIHRoZSBQZXJtaXR0ZWQgQ2FwYWNpdHkgd2l0aCByZXNwZWN0IHRvIGEgUHJvamVjdCB0aGF0IGhhcyBub3QgcmVhY2gNCmVkIGl0cyBDb21tZXJjaWFsIE9wZXJhdGlvbiBEYXRlIHNoYWxsIGJlIGV4Y2x1ZGVkIGZyb20gc3VjaCBjYWxjdWxhdGlvbiBmb3IgdGhlIHB1cnBvc2VzIG9mIHRoaXMgc2VudGVuY2UsIChpaSkgc3VjaCBQcm9qZWN0IHRoYXQgaGFzIG5vdCByZWFjaGVkIGl0cyBDb21tZXJjaWFsIE9wZXJhdGlvbiBEYXRlIHNoYWxsIGJlIGN1cnRhaWxlZCBpbiBpdHMgZW50aXJldHkgcHJpb3IgdG8gYW55IGN1cnRhaWxtZW50IG9mIGFueSBQcm9qZWN0cyB0aA0KYXQgaGF2ZSByZWFjaGVkIHRoZWlyIENvbW1lcmNpYWwgT3BlcmF0aW9uIERhdGUsIGFuZCAoaWlpKSB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANCiBhY2tub3dsZWRnZSB0aGF0IHN1Y2ggYWxsb2NhdGlvbiB3aWxsIGJlIGFzIGNsb3NlIHRvIHRoZSBmb3JtdWxhIGRlc2NyaWJlZCBhYm92ZSBhcyBDby1UZW5hbmN5IE1hbmFnZXIgY2F9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIG4gYWNjb21wbGlzaCwgYWN0aW5nIGNvbW1lcmNpYWxseSByZWFzb25hYmx5LiAgVG8gdGhlIGV4dGVudCBhbnkgY3VydGFpbG1lbnQgaQ0KcyBjYXVzZWQgYnkgYW55IHNwZWNpZmljIFByb2plY3Qocykgb3IgYSBicmVhY2ggYnkgYW55IHNwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSANCmVjaWZpYyBDby1UZW5hbnQocykgb2YgaXRzIG9ibGlnYXRpb25zIGhlcmV1bmRlciBvciBieSB0aGUgYWN0aW9uIG9yIGluYWN0aW9uIG9mIGFueSBpbmRpdmlkdWFsIENvLVRlbmFudCBvciBDby1UZW5hbnRzLCB0aGUgQ28tVGVuYW50IG9yIENvLVRlbmFudHMgd2hvIG93bnMgc3VjaCBzcGVjaWZpYyBQcm9qZWN0KHMpLCB3aG9zZSBicmVhY2ggb2YNCiBpdHMgb2JsaWdhdGlvbnMgaGVyZXVuZGVyIG9yIHdob3NlIGFjdGlvbiBvciBpbmFjdGlvbiBjYXVzZWQgdGhlIGN1cnRhaWxtZW50IHNoYWxsIHJlaW1idXJzZSBhbnkgQ28tVGVuYW50IG93bmVyIG9mIGFuIEltcGxlbWVudGVkIFByb2plY3QgZm9yIGFsbCBOZXQgUmV2ZW51ZSBMb3NzZXMgYXJpc2luZyBmcm9tIHN1Y2ggY3VydGFpbG1lbnQsIGl0IGJlaW5nIGhlcmVieSBhZ3JlZWQgdGhhdCB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIHBheW1lbnQgb2YgdGhlIE5ldCBSZXZlbnVlIExvc3NlcyBzaGFsbCBiZSB0aGUgQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgDQpzIG93bmVyIG9mIGFuIEltcGxlbWVudGVkIFByb2plY3RccnF1b3RlIHMgc29sZSBhbmQgZXhjbHVzaXZlIHJlbWVkeSB3aXRoIHJlc3BlY3QgdG8gbG9zcyBvZiByZXZlbnVlIGFuZCBDb25zZXF1ZW50aWFsIERhbWFnZXMgZHVlIHRvIHN1Y2ggY3VydGFpbG1lbnQuIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBhZ3JlZSB0aGF0IHRoZSBhY3R1YWwgQ29uc2VxdWVudGlhbCBEYW1hZ2VzIGFyaXNpbmcgZHVlIHRvIHN1Y2ggY3VydA0KYWlsbWVudCB3b3VsZCBiZSBkaWZmaWN1bHQgdG8gY29tcHV0ZSBhbmQgdGhhdCB0aGUgbWV0aG9kb2xvZ3kgZm9yIGRldGVybWluaW5nIHN1Y2ggQ29uc2VxdWVudGlhbCBEYW1hZ2VzIHNldCBmb3J0aCBhYm92ZSBpcyBhIGdvb2QgZmFpdGggZXN0aW1hdGUgb2YgdGhlIGNhbGN1bGF0aW9ucyB1dGlsaXplZCB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgDQogZGV0ZXJtaW5lIHRoZSBhY3R1YWwgQ29uc2VxdWVudGlhbCBEYW1hZ2VzIHRoYXQgd291bGQgYmUgc3VmZmVyZWQufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSB7XCpcYmtta2VuZCBfUmVmNDgwMzUzMzZ9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1MzM3fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChiKVx0YWJ9VGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW4NCmFudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgYWNrbm93bGVkZ2UgdGhhdCB0aGVpciByZXNwZWN0aXZlIEludGVyY29ubmVjdGlvbiBBZ3JlZW1lbnRzIGFuZCByZXF1ZXN0cyB1bmRlciBzdHVkeSB0aGF0IG9ubHkgcGVybWl0cyB0aGUgUHJvamVjdHMgY3VtdWxhdGl2ZWx5IHRvIHByb2R1Y2UgYW4gb3V0cHV0IG9mIHVwIHRvIHRoZSBzdW0gb2Z9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWYyMX02MH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCAwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiB7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjIxfSBNV317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgLiAgQXMgc3VjaCwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgZWFjaH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCANCiBDby1UZW5hbnQgYWdyZWV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCB0byBwcm9ncmFtfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCB0aGVpciByZXNwZWN0aXZlIHNlbGYtY3VydGFpbG1lbnQgY29udHJvbGxlciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBzbyB0aGF0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgIChpKX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIHRoZSBhZ2dyZWdhdGUgb3V0cHV0IG9mIHRoZSBQcm9qZWN0cyBzaGFsbCBuZXZlciBleGNlZWQgdGhlIGFnZ3JlZ2F0ZSBwZXJtaXR0ZWQgb3V0cHV0IHVuZGVyIHRoZWlyIHJlc3BlY3RpdmUgSW50ZXJjb25uZWN0aW9uIEFncmVlbWVudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANCiBhbmQgKGlpKSB0aGUgb3V0cHV0IG9mIHN1Y2ggQ28tVGVuYW50XHJxdW90ZSBzIFByb2plY3Qgc2hhbGwgbmV2ZXIgZXhjZWVkIHRoZSBQcm9qZWN0XHJxdW90ZSBzIFBlcm1pdHRlZCBDYXBhY2l0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIA0Ke1wqXGJrbWtlbmQgX1JlZjQ4MDM1MzM3fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTMzOH17XCpcYmtta3N0YXJ0IF9SZWY0ODAzNzQ1N317XCpcYmtta3N0YXJ0IF9Ub2M2MDEzNTQ4NX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYxIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDguNVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzMjYxXHFsIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM4XGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBEaXNjb25uZWN0aW9uIEZyb20gU2hhcmVkIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCAgb3IgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkwNjc3NzcgQWRkaXRpb25hbCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgLiAgQSBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIHMgUHJvamVjdCBzaGFsbCBiZSBkaXNjb25uZWN0ZWQgZnJvbSB0aGUgU2hhcmVkIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkwNjc3NzcgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IG9yIEFkZGl0aW9uYWwgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSAsIGFuZCB0aGUgQ28tVGVuYW50cyBoZXJlYnkgYXV0aG9yaXplIHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgdG8gaW1wbGVtZW50IHN1Y2ggZGlzY29ubmVjdGlvbiBvbiBiZWhhbGYgb2YgdGhlIENvLVRlbmFudHMsIHVuZGVyIGFueSBvZiB0aGUgZm9sbG93aW5nIGNpcmN1bXN0YW5jZXM6e1wqXGJrbWtlbmQgX1JlZjQ4MDM1MzM4fQ0Ke1wqXGJrbWtlbmQgX1JlZjQ4MDM3NDU3fXtcKlxia21rZW5kIF9Ub2M2MDEzNTQ4NX0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzUzMzl9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGEpXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMjYzXHFsIFxmaTE0NDBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgyMTYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM4XGlsdmwyXG91dGxpbmVsZXZlbDJcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBhIENvLVRlbmFudCBpcyBleGVyY2lzaW5nIGl0cyByaWdodHMgYXMgcGVybWl0dGVkIHVuZGVyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgU2VjdGlvbiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgICBSRUYgX1JlZjQ4MDM1NDQ2IA0KXFx3IFxcaCBcXCogTUVSR0VGT1JNQVQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNTAwMzQwMDM0MDAzNjAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxjZjFcaW5zcnNpZDc5NDI2MlxjaGFycnNpZDc5NDI2MiAxMy4zKGEpKGl2KX19fVxzZWN0ZCBcbHRyc2VjdFxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4ICx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIHByb3ZpZGVkIGFueSBuZWNlc3NhcnkgYXBwcm92YWxzIGFyZSBvYnRhaW5lZCBmcm9tIHRoZSBGRVJDIGFuZCBhbnkgb3RoZXIgYXBwbGljYWJsZSBHb3Zlcm5tfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIGVudGFsIEF1dGhvcml0eSB3aXRoIGp1cmlzZGljdGlvbiBvdmVyIHRoZSBTaGFyZWQgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICBvciBBZGRpdGlvbmFsIEZhY2lsaXRpZXMsIGFzIGFwcGxpY2FibGUsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSANCiBwcmlvciB0byBlZmZlY3R1YXRpbmcgc3VjaCBkaXNjb25uZWN0aW9uO3tcKlxia21rZW5kIF9SZWY0ODAzNTMzOX0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzUzNDB9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGIpXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IA0KdXBvbiB0ZXJtaW5hdGlvbiBvciBhYmFuZG9ubWVudCBvZiBhIFByb2plY3QgYnkgYSBDby1UZW5hbnQgb3Igd2l0aGRyYXdhbCBmcm9tIHRoaXMgQWdyZWVtZW50IGJ5IGEgQ28tVGVuYW50IGluIGFjY29yZGFuY2Ugd2l0aCB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgICBSRUYgX1JlZjQ4MDM1NDExIFxcbiBcXGggXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNTAwMzQwMDMxMDAzMTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcY2YxXGluc3JzaWQ3OTQyNjJcY2hhcnJzaWQ3OTQyNjIgQXJ0aWNsZSAxMn19fQ0KXHNlY3RkIFxsdHJzZWN0XHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgcHJvdmlkZWQgdGhhdCBhbnkgbmVjZXNzYXJ5IGFwcHJvdmFscyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgZnJvbSBGRVJDIG9yIGFueSBvdGhlciBHb3Zlcm5tZW50YWwgQXV0aG9yaXR5IHdpdGgganVyaXNkaWN0aW9uIG92ZXIgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgU2hhcmVkIEZhY2lsaXRpZXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQpvciBBZGRpdGlvbmFsIEZhY2lsaXRpZXMsIGFzIGFwcGxpY2FibGUsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSAgYXJlIG9idGFpbmVkIHByaW9yIHRvIGVmZmVjdHVhdGluZyBzdWNoIGRpc2Nvbm5lY3Rpb247e1wqXGJrbWtlbmQgX1JlZjQ4MDM1MzQwfQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTM0MX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoYylcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgDQppZiBkaXNjb25uZWN0aW9uIGlzIG5lY2Vzc2FyeSBmb3Igc2FmZXR5IGluIG9yZGVyIHRvIHBlcmZvcm0gbWFpbnRlbmFuY2UgdG8gYW55IFNoYXJlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjMxMDEyOCAgRmFjaWxpdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkwNjc3NzcgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDQgb3IgQWRkaXRpb25hbCBGYWNpbGl0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjMxMDEyOCAgb3IgaW4gdGhlIGV2ZW50IG9mIGFuIEVtZXJnZW5jeSBlZmZlY3RpbmcgYSBDby1UZW5hbnQgd2l0aCBhbiBpbnRlcmVzdCBpbiBzdWNoIFNoYXJlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTczMjYxOCANCiBGYWNpbGl0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTA2Nzc3NyAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgb3IgQWRkaXRpb25hbCBGYWNpbGl0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTczMjYxOCA7IG9yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkzMTc4MSB7XCpcYmtta2VuZCBfUmVmNDgwMzUzNDF9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1MzQyfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkzMTc4MSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoZClcdGFifQ0KYXQgdGhlIGRpcmVjdGlvbiBvZiBhIFRyYW5zbWl0dGluZyBVdGlsaXR5IHB1cnN1YW50IHRvIHRoZSBhcHBsaWNhYmxlIFRyYW5zbWl0dGluZyBVdGlsaXR5XHJxdW90ZSBzIHJpZ2h0cyB1bmRlciB0aGUgSW50ZXJjb25uZWN0aW9uIEFncmVlbWVudHMgd2l0aCBzdWNoIENvLVRlbmFudCBvciB1bmRlciBBcHBsaWNhYmxlIExhd3Mgb3IgcmVndWxhdGlvbnMuDQogIFRvIHRoZSBleHRlbnQgYW55IGRpc2Nvbm5lY3Rpb24gb2YgYSBDby1UZW5hbnQgcHVyc3VhbnQgdG8gdGhpcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkzMTc4MSBTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCAgIFJFRiBfUmVmNDgwMzc0NTcgXFx3IFxcaCBcXCogTUVSR0VGT1JNQVQgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM3MDAzNDAwMzUwMDM3MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxjZjFcaW5zcnNpZDc5NDI2MlxjaGFycnNpZDc5NDI2MiANCjguNX19fVxzZWN0ZCBcbHRyc2VjdFxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQogaXMgY2F1c2VkIGJ5IG9yIGF0dHJpYnV0YWJsZSB0byBhbnkgc3BlY2lmaWMgUHJvamVjdCBvZiBhbm90aGVyIENvLVRlbmFudCBvciBpcyBhdHRyaWJ1dGFibGUgdG8gYSBDby1UZW5hbnQgRXZlbnQgb2YgRGVmYXVsdCBvciBieSB0aGUgYWN0aW9uIG9yIGluYWN0aW9uIG9mIGFueSBvdGhlciBDby1UZW5hbnQsIHRoZSBDby1UZW5hbnQgd2hvIG93bnMgc3VjaCBzcGVjaWZpYyBQcm9qZWN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwICwgd2hvc2UgQ28tVGVuYW50IEV2ZW50IG9mIERlZmF1bHQgb3IgYWN0aW9uIG9yIGluYWN0aW9uIGNhdXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIGVkIHRoZSBkaXNjb25uZWN0aW9uIG9mIHN1Y2ggb3RoZXIgQ28tVGVuYW50XHJxdW90ZSANCnMgUHJvamVjdCBzaGFsbCByZWltYnVyc2Ugc3VjaCBkaXNjb25uZWN0ZWQgQ28tVGVuYW50IG93bmVyIG9mIGFuIEltcGxlbWVudGVkIFByb2plY3QgZm9yIGFsbCBOZXQgUmV2ZW51ZSBMb3NzZXMgYXJpc2luZyBmcm9tIHN1Y2ggZGlzY29ubmVjdGlvbiwgaXQgYmVpbmcgaGVyZWJ5IGFncmVlZCB0aGF0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KcGF5bWVudCBvZiB0aGUgTmV0IFJldmVudWUgTG9zc2VzIHNoYWxsIGJlIHRoZSBkaXNjb25uZWN0ZWQgQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgDQpzIHNvbGUgYW5kIGV4Y2x1c2l2ZSByZW1lZHkgd2l0aCByZXNwZWN0IHRvIGxvc3Mgb2YgcmV2ZW51ZSBhbmQgQ29uc2VxdWVudGlhbCBEYW1hZ2VzIGR1ZSB0byBzdWNoIGRpc2Nvbm5lY3Rpb24uIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBUaGUgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBhZ3JlZSB0aGF0IHRoZSBhY3R1YWwgQ29uc2VxdWVudGl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIA0KYWwgRGFtYWdlcyBhcmlzaW5nIGR1ZSB0byBzdWNoIGRpc2Nvbm5lY3Rpb24gd291bGQgYmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxICBkaWZmaWN1bHQgdG8gY29tcHV0ZSBhbmQgdGhhdCB0aGUgbWV0aG9kb2xvZ3kgZm9yIGRldGVybWluaW5nIHN1Y2ggQ29uc2VxdWVudGlhbCBEYW1hZ2VzIHNldCBmb3J0aCBhYm92ZSBpcyBhIGdvb2QNCiBmYWl0aCBlc3RpbWF0ZSBvZiB0aGUgY2FsY3VsYXRpb25zIHV0aWxpemVkIHRvIGRldGVybWluZSB0aGUgYWN0dWFsIENvbnNlcXVlbnRpYWwgRGFtYWdlcyB0aGF0IHdvdWxkIGJlIHN1ZmZlcmVkLiAgSWYgYSBkaXNjb25uZWN0aW9uIHRoYXQgaXMgbm90IGR1ZSB0byB0aGUgYWN0aW9ucyBvciBpbmFjdGlvbnMgb2YgYW55IHBhcnRpY3VsYXIgQ28tVGVuYW50IGlzIG5lY2Vzc2FyeSwgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBzaGFsbCBpbXBsZQ0KbWVudCBzdWNoIGRpc2Nvbm5lY3Rpb24gaW4gYSBmYWlyIGFuZCBub24tZGlzY3JpbWluYXRvcnkgbWFubmVyIHRha2luZyBpbnRvIGNvbnNpZGVyYXRpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5ICB0aGUgZGlzY29ubmVjdGlvbnMgcHJldmlvdXNseSBzdWZmZXJlZCBieSB0aGUgQ28tVGVuYW50cywgZWFjaCBhZmZlY3RlZCBDby1UZW5hbnRccnF1b3RlIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IHMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgT3BlcmF0aW9uYWwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IFByby1SYXRhIFNoYXJlIGluIHRoZSBTaGFyZWQgRmFjaWxpdGllcyB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IG9yIEFkZGl0aW9uYWwgRmFjaWxpdGllcyBvciBQcmVtaXNlcyBQcm8tUmF0YSBTaGFyZSBpbiB0aGUgQWRkaXRpb25hbCBGYWNpbGl0aWVzLCBhcyBhcHBsaWNhYmxlLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjggDQphbmQgc3VjaCBvdGhlciBpbmZvcm1hdGlvbiB0aGF0IGlzIGF2YWlsYWJsZSBhdCB0aGUgdGltZSBvZiBzdWNoIGEgZGlzY29ubmVjdGlvbi57XCpcYmtta2VuZCBfUmVmNDgwMzUzNDJ9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjU0ODc1NDU2fXtcKlxia21rc3RhcnQgX1RvYzYwMTM1NDg2fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjEgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE0Nzc3Nzc1XGNoYXJyc2lkMTQ3Nzc3NzUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgOC42XHRhYn19XHBhcmRccGxhaW4gXGx0cnBhcg0KXHMyNjFccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0Nzc3Nzc1XGNoYXJyc2lkMTQ3Nzc3NzUgW1JFREFDVEVEfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXHVsXGluc3JzaWQxNDc3Nzc3NSBdfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgLn17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMTU0ODE4MSB7XCpcYmtta2VuZCBfUmVmNTQ4NzU0NTZ9e1wqXGJrbWtlbmQgX1RvYzYwMTM1NDg2fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTM0NH17XCpcYmtta3N0YXJ0IF9SZWY0ODAzNzQ1OX17XCpcYmtta3N0YXJ0IF9Ub2M2MDEzNTQ4N317XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYxIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkxMTAwODEgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgOC43XHRhYn19XHBhcmQgXGx0cnBhcg0KXHMyNjFccWwgXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTExMDA4MSANCkNvLVRlbmFuY3kgTWFuYWdlciBSZXByZXNlbnRhdGl2ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIC4gIE9uIG9yIHByb21wdGx5IGFmdGVyIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIA0KQ29tbWVuY2VtZW50IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIERhdGUsIHRoZSBDby1UZW5hfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBuY3kgTWFuYWdlciBzaGFsbCwgYnkgd3JpdHRlbiBufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSANCm90aWNlIHRvIHRoZSBDby1UZW5hbnRzLCBkZXNpZ25hdGUgYW4gaW5kaXZpZHVhbCByZXByZXNlbnRhdGl2ZSAodGhlIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIENvLVRlbmFuY3kgTWFuYWdlciBSZXByZXNlbnRhdGl2ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgXCc5NA0KKSB3aG9zZSBpbnN0cnVjdGlvbnMsIHJlcXVlc3RzLCBhbmQgZGVjaXNpb25zIHdpbGwgYmUgYmluZGluZyB1cG9uIHN1Y2ggQ28tVGVuYW5jeSBNYW5hZ2VyIGluIGFsbCBtYXR0ZXJzIGNvbmNlcm5pbmcgdGhpcyBBZ3JlZW1lbnQsIGV4Y2VwdCB0aGF0IHRoZSBDby19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjggDQpUZW5hbmN5IE1hbmFnZXIgUmVwcmVzZW50YXRpdmUgc2hhbGwgbm90IGhhdmUgdGhlIGF1dGhvcml0eSB0byBhbWVuZCB0aGlzIEFncmVlbWVudC4gIFRoZSBDby1UZW5hbmN5IE1hbmFnZXIgc2hhbGwgaGF2ZSB0aGUgcmlnaHQgdG8gY2hhbmdlIHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgUmVwcmVzZW50YXRpdmUgYXQgYW55IHRpbWUgYW5kIGZyb20gdGltZSB0byB0aW1lIGJ5IHdyaXR0ZW4gbm90aWNlIHRvIHRoZSBvdGhlciBDby1UZW5hbnRzLg0Ke1wqXGJrbWtlbmQgX1JlZjEwMjU0OTEyNn17XCpcYmtta2VuZCBfUmVmNDgwMzUzNDR9e1wqXGJrbWtlbmQgX1JlZjQ4MDM3NDU5fXtcKlxia21rZW5kIF9Ub2M2MDEzNTQ4N30NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmMTAyMzc5MTE2fXtcKlxia21rc3RhcnQgX1RvYzYwMTM1NDg4fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTczMjYxOCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA4LjhcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1NzMyNjE4IEN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkzMTc4MSBvbXBldGluZyBWZW50dXJlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KLiAgU3ViamVjdCB0byBhbnkgYXBwbGljYWJsZSByZXN0cmljdGlvbnMgaW4gYW55IG90aGVyIGFncmVlbWVudHMgYmV0d2VlbiBvciBhbW9uZyBvciBvdGhlcndpc2UgYmluZGluZyBvbiB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANCiwgYSBDby1UZW5hbnQgb3IgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBtYXkgZW5nYWdlIGluIG9yIHBvc3Nlc3MgYW4gaW50ZXJlc3QgaW4gb3RoZXIgYn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgdXNpbmVzcyB2ZW50dXJlcyBvZiBhbnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIA0KIG5hdHVyZSBhbmQgZGVzY3JpcHRpb24sIGluZGVwZW5kZW50bHkgb3Igd2l0aCBvdGhlcnMsIGluY2x1ZGluZyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANCnRoZSBvd25lcnNoaXAsIGZpbmFuY2luZywgbGVhc2luZywgbWFuYWdlbWVudCwgc3luZGljYXRpb24sIGludmVzdG1lbnQsIGJyb2tlcmFnZSBhbmQgZGV2ZWxvcG1lbnQgb2YgcmVhbCBwcm9wZXJ0eSAoaW5jbHVkaW5nIHJlYWwgcHJvcGVydHkgb2YgdGhlIHNhbWUgdHlwZSBhbmQgbmF0dXJlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgYXMgdH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBoZSBQcm9qZWN0cyksIGFuZCBubyBDby1UZW5hbnQgbm9yIHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgc2hhbGwgaGF2ZSBhbnkgcmlnaHRzIGJ5IHZpcnR1ZSBvZiB0aGlzIEFncmVlbWVudCBpbiBhbmQgdG8gc3VjaCBpbmRlcGVuZGVudCB2ZW50dXJlcyBvciB0byB0aGUgaW5jb21lIG9yIHByb2ZpdHMgZGVyaXZlZCB0aGVyZWZyb20uDQp7XCpcYmtta2VuZCBfUmVmMTAyMzc5MTE2fXtcKlxia21rZW5kIF9Ub2M2MDEzNTQ4OH0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzUzNDV9e1wqXGJrbWtzdGFydCBfVG9jNjAxMzU0ODl9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI1OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxiXGNhcHNcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgQXJ0aWNsZSA5XHRhYn19XHBhcmRccGxhaW4gXGx0cnBhcg0KXHMyNTlccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDcyMFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGJcY2Fwc1xmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFxsaW5lIHtcKlxia21rc3RhcnQgX1JlZjQ4MzAxNTg2fUNPLVRFTkFOQ1kgTUFOQUdFUn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgDQp7XCpcYmtta2VuZCBfUmVmNDgwMzUzNDV9e1wqXGJrbWtlbmQgX1RvYzYwMTM1NDg5fXtcKlxia21rZW5kIF9SZWY0ODMwMTU4Nn0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzUzNDZ9e1wqXGJrbWtzdGFydCBfUmVmNDgwMzc0NjB9e1wqXGJrbWtzdGFydCBfUmVmNTExNDQ1MDh9e1wqXGJrbWtzdGFydCBfVG9jNjAxMzU0OTB9e1wqXGJrbWtzdGFydCBfUmVmMTAxMzM5NjkwfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTMzMjUzMDEgDQpcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA5LjFcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyNjFccWwgXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSANClxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEzMzI1MzAxIEFwcG9pbnRtZW50IG9mIHRoZSBDby1UZW5hbmN5IE1hbmFnZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEzMzI1MzAxIC4gIEhhcmRpbg0KIFNvbGFyIHNoYWxsIGJlIHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgZWZmZWN0aXZlIGFzIG9mIHRoZSBDb21tZW5jZW1lbnQgRGF0ZSBhbmQgc2hhbGwgaG9sZCBzdWNoIHBvc2l0aW9uIHVudGlsIGl0IChhKSByZXNpZ25zLCBvciAoYikgaXMgcmVtb3ZlZCBvciByZXBsYWNlZCBhcyBwcm92aWRlZCBieSB0aGlzIHtcKlxia21rc3RhcnQgX1JlZjEwNDcwNzg4NX19e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEzMzI1MzAxICAgUkVGIF9SZWY0ODAzNTM0NSBcXG4gXFxoIFxcKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEzMzI1MzAxIHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNTAwMzMwMDM0MDAzNTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcY2YxXGluc3JzaWQ3OTQyNjJcY2hhcnJzaWQ3OTQyNjIgQXJ0aWNsZSA5fX19XHNlY3RkIFxsdHJzZWN0DQpccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTMzMjUzMDEgLiAgVGhlIGluaXRpYWwgQ28tVGVuYW5jeQ0KIE1hbmFnZXIgc2hhbGwgYmUgSGFyZGluIFNvbGFyLiAgVGhlIENvLVRlbmFuY3kgTWFuYWdlciBoYXMgdGhlIHJpZ2h0IHRvIHN1YmNvbnRyYWN0IGFsbCBvciBhbnkgcG9ydGlvbiBvZiB0aGUgc2VydmljZXMgcmVxdWlyZWQgb2YgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBoZXJlaW4gdG8gYW55IFBlcnNvbiBpbiBhY2NvcmRhbmNlIHdpdGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEzMzI1MzAxIFNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTMzMjUzMDEgICBSRUYgX1JlZjQ4MDM1MzE2IFxcdyBcXGggXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTMzMjUzMDEgDQp7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM1MDAzMzAwMzEwMDM2MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxjZjFcaW5zcnNpZDc5NDI2MlxjaGFycnNpZDc5NDI2MiA4LjIoYSl9fX1cc2VjdGQgXGx0cnNlY3QNClxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMzMyNTMwMSAue1wqXGJrbWtlbmQgX1JlZjQ4MDM1MzQ2fXtcKlxia21rZW5kIF9SZWY0ODAzNzQ2MH0gIA0KRm9yIHRoZSBhdm9pZGFuY2Ugb2YgZG91YnQgYW5kIG5vdHdpdGhzdGFuZGluZyBhbnl0aGluZyB0byB0aGUgY29udHJhcnkgaW4gdGhpcyBBZ3JlZW1lbnQsIHRoZSByaWdodHMsIGR1dGllcyBhbmQgb2JsaWdhdGlvbnMgb2YgdGhlIENvLVRlbmFuY3kgTWFuYWdlciAoaSkgc2hhbGwgbm90IGJlZ2luIHVudGlsIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZGJjaFxhZjExXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEzMzI1MzAxIFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBDb21tZW5jZW1lbnQgRGF0ZSBhbmQgKGlpKSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEzMzI1MzAxIHdpdGggcmVzcGVjdCB0byBhbnkgQWRkaXRpb25hbCBGYWNpbGl0aWVzLCBzaGFsDQpsIG5vdCBiZWdpbiB1bnRpbCB0aGUgQWRkaXRpb25hbCBGYWNpbGl0aWVzIE9wZXJhdGl2ZSBEYXRlLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMzMyNTMwMSB7XCpcYmtta2VuZCBfUmVmNTExNDQ1MDh9e1wqXGJrbWtlbmQgX1RvYzYwMTM1NDkwfQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTM0N317XCpcYmtta3N0YXJ0IF9SZWY0ODAzNzQ2MX17XCpcYmtta3N0YXJ0IF9Ub2M2MDEzNTQ5MX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYxIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDkuMlx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIEluZGVtbmlmaWNhdGlvbiBvZiBDby1UZW5hbmN5IE1hbmFnZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAuICBUbyB0aGUgZnVsbGVzdCBleHRlbnQgcGVybWl0dGVkIGJ5IGxhdywgZWFjaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgc2hhbGwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBqb2ludGx5IGFuZCBzZXZlcmFsbHksIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBkZWZlbmQsIGluZGVtbmlmeSBhbmQgaG9sZCBoYXJtbGVzcyB0aGV7XCpcYmtta2VuZCBfUmVmMTAxMzM5NjkwfXtcKlxia21rZW5kIF9SZWYxMDQ3MDc4ODV9IENvLVRlbmFuY3kgTWFuYWdlciBhbmQgaXRzIEFmZmlsDQppYXRlcyBhbmQgYWxsIG9mIHRoZWlyIHJlc3BlY3RpdmUgb2ZmaWNlcnMsIGRpcmVjdG9ycywgZW1wbG95ZWVzLCBhZ2VudHMsIHBhcnRuZXJzLCBzaGFyZWhvbGRlcnMgYW5kIHJlcHJlc2VudGF0aXZlcywgZnJvbSBhbmQgYWdhaW5zdCBhbnkgYW5kIGFsbCBzdWl0cywgYWN0aW9ucywgbGlhYmlsaXRpZXMsIGludmVzdGlnYXRpb25zLCBsZWdhbCBwcm9jZWVkaW5ncywgY2xhaW1zLCBkZW1hbmRzLCBsb3NzZXMsIHJlYXNvbmFibGUgY29zdHMgYW4NCmQgZXhwZW5zZXMgb317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgZiB3aGF0c29ldmVyIGtpbmQgb3IgY2hhcmFjdGVyIChpbmNsdWRpbmcgcmVhc29uYWJsZSBhdHRvcm5leXNccnF1b3RlICBmZWVzIGFuZCBleHBlbnNlcykgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IChjb2xsZWN0aXZlbHkgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMzU2OTcwOCBEYW1hZ2VzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCApfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBhcmlzaW5nIG91dCBvZiAoaSkgdGhlIGFjdHMgKG9yIGZhaWx1cmVzIHRvIGFjdCkgb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBhbnkgc3VjaCB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgb3IgaXRzIG9mZmljZXJzLCBkaXJlY3RvcnMsIGVtcGxveWVlcywgYWdlbnRzLCBtZW1iZXJzIGFuZCByZXByZXNlbnRhdGl2ZXMsIGhlcmV1bmRlciBvciAoaWkpIHR9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgaGUgYWN0cyBvZiB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIHB1cnN1YW50IHRvIGl0cyBhdXRob3JpdHkgdW5kZXIgdGhpcyBBZ3JlZW1lbnQsIHByb3ZpZGVkIHRoZSBsaWFiaWxpdHkgb2YgZWFjaCBDby1UZW5hbnQgdW5kZXIgdGhpcyBzdWJzZWN0aW9uIChpaSkgc2hhbGwgYmUgaW4gcHJvcG9ydGlvbiB0byBzdWNoIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBCYXNlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTEzNjk5OTkgUHJvLVJhdGEgU2hhcmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiA7IGFuZCB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyLCBpdHMgb3duZXJzLCBvZmZpY2VyfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIHMsIGRpcmVjdG9ycyBhbmQgZW1wbG95ZWVzIHNoYWxsIG5vdCBiZSBsaWFibGUgdG8gdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQogb3IgYW55IHRoaXJkIHBhcnR5IGZvciBhbnkgb2JsaWdhdGlvbiwgbGlhYmlsaXR5LCBvciBjb21taXRtZW50IGluY3VycmVkIGJ5IG9yIG9uIGJlaGFsZiBvZiB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANCiBpbiBhY2NvcmRhbmNlIHdpdGggdGhlIHByb3Zpc2lvbnMgb2YgdGhpcyBBZ3JlZW1lbnQ7IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgcHJvdmlkZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxICwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIGhvd2V2ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxICwgdGhhdCB0aGUgQ28tfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSANClRlbmFuY3kgTWFuYWdlciwgaXRzIG9mZmljZXJzLCBkaXJlY3RvcnMgYW5kIGVtcGxveWVlcyBzaGFsbCBub3QgYmUgZW50aXRsZWQgdG8gaW5kZW1uaWZpY2F0aW9uIGhlcmV1bmRlciAoeCkgdG8gdGhlIGV4dGVudCBhbnkgYWN0aW9uLCBjbGFpbSwgZGVtYW5kLCBjb3N0IG9yIGxpYWJpbGl0eSByZXN1bHRzIGZyb20gYnJlYWNoIG9mIHRoaXMgQWdyZWVtZW50IG9yIGZyb20gdGhlIENvLVRlbmFuY3kgTWFuYWdlclxycXVvdGUgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjggcyBncm9zcyBuZWdsaWdlbmNlLCBiYWQgZmFpdGgsIHJlY2tsZXNzbmVzcyBvciB3aWxsZnVsIG1pc2NvbmR1Y3R7XCpcYmtta3N0YXJ0IF9EVl9DMTI3fSwgb3IgKHkpIHRvIHRoZSBleHRlbnQgc3VjaCBpbmRlbW5pZmljYXRpb24gcmVsYXRlcyB0byBTZXBhcmF0ZSBGYWNpbGl0aWVzLCBieSB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBub3Qgb3duaW5nIGFueSBzaGFyZSBvZiBzdWNoIFNlcGFyYXRlIEZhY2lsaXRpZXtcKlxia21rc3RhcnQgX0RWX000MTZ9e1wqXGJrbWtlbmQgX0RWX0MxMjd9e1wqXGJrbWtlbmQgX0RWX000MTZ9cy59e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAge1wqXGJrbWtlbmQgX1JlZjQ4MDM1MzQ3fXtcKlxia21rZW5kIF9SZWY0ODAzNzQ2MX17XCpcYmtta2VuZCBfVG9jNjAxMzU0OTF9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1MzQ4fXtcKlxia21rc3RhcnQgX1JlZjQ4MDM3NDYyfXtcKlxia21rc3RhcnQgX1RvYzYwMTM1NDkyfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgOS4zXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgSW5kZW1uaWZpY2F0aW9uIGJ5IHRoZSBDby1UZW5hbmN5IE1hbmFnZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAuICBTdWJqZWN0IHRvIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIA0Kb3RoZXIgdGVybXMgYW5kIGNvbmRpdGlvbnMgb2YgdGhpcyBBZ3JlZW1lbnQsIHRvIHRoZSBmdWxsZXN0IGV4dGVudCBwZXJtaXR0ZWQgYnkgbGF3LCB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIHNoYWxsIGluZGVtbmlmeSwgZGVmZW5kIGFuZCBob2xkIGhhcm1sZXNzIGVhY2ggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIGFuZCB0aGUgQWZmaWxpYXRlcyBvZiBlYWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAsIGFuZCBhbGwgb2YgdGhlaXIgcmVzcGVjdA0KaXZlIG9mZmljZXJzLCBkaXJlY3RvcnMsIGVtcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgDQpsb3llZXMsIGFnZW50cywgcGFydG5lcnMsIHNoYXJlaG9sZGVycyBhbmQgcmVwcmVzZW50YXRpdmVzLCBmcm9tIGFuZCBhZ2FpbnN0IGFueSBhbmQgYWxsIHN1aXRzLCBhY3Rpb25zLCBsaWFiaWxpdGllcywgaW52ZXN0aWdhdGlvbnMsIGxlZ2FsIHByb2NlZWRpbmdzLCBjbGFpbXMsIGRlbWFuZHMsIGxvc3NlcywgYW5kIHJlYXNvbmFibGUgY29zdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBzIGFuZCBleHBlbnNlcyBvZiB3aGF0c29ldmVyIGtpbmQgb3IgY2hhcmFjdGVyIChpbmNsdWRpbmcgcmVhc29uYWJsZSBhdHRvcm5leXNccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgIGZlZXMgYW5kIGV4cGVuc2VzKSBhcmlzaW5nIG91dCBvZiB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyXHJxdW90ZSANCnMgZ3Jvc3MgbmVnbGlnZW5jZSwgYmFkIGZhaXRoLCByZWNrbGVzc25lc3Mgb3Igd2lsbGZ1bCBtaXNjb25kdWN0LiAgSW4gYWRkaXRpb24sIHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgc2hhbGwgaW5kZW1uaWZ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4ICBhbmQgcHJvdGVjdCBlYWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBmcm9tIGFueSBhbmQgYWxsIExpZW5zIGZpbGVkIGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANCiBjb25uZWN0aW9uIHdpdGggdGhlIHBlcmZvcm1hbmNlIG9mIHRoZSBDby1UZW5hbmN5IE1hbmFnZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFxycXVvdGUgcyBzZXJ2aWNlcyB1bmRlciB0aGlzIEFncmVlbWVudCB1bmxlc3Mgc3VjaCBMaWVuIHJlc3VsdHMgZnJvbSB0aGUgbm9uLXBheW1lbnQgZm9yIHNlcnZpY2VzIG9yIGVxdWlwbWVudCBieSBhIH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBvciBpcyBvdGhlcndpc2UgcGVybWl0dGVkIGhlcmV1bmRlci59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIHtcKlxia21rZW5kIF9SZWY0ODAzNTM0OH0NCntcKlxia21rZW5kIF9SZWY0ODAzNzQ2Mn17XCpcYmtta2VuZCBfVG9jNjAxMzU0OTJ9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1MzQ5fXtcKlxia21rc3RhcnQgX1JlZjQ4MDM3NDYzfXtcKlxia21rc3RhcnQgX1RvYzYwMTM1NDkzfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgOS40XHRhYn19e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgSW5kZW1uaWZpY2F0aW9uIE5vdGljZXM7IExpbWl0YXRpb24gb24gTGlhYmlsaXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSB7XCpcYmtta2VuZCBfUmVmNDgwMzUzNDl9DQp7XCpcYmtta2VuZCBfUmVmNDgwMzc0NjN9e1wqXGJrbWtlbmQgX1RvYzYwMTM1NDkzfQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTM1MH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoYSlcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyNjNccWwgXGZpMTQ0MFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDIxNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcaWx2bDJcb3V0bGluZWxldmVsMlxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IFdoZW5ldmVyIGEgUGFydHkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IGVudGl0bGVkIHRvIGluZGVtbmlmaWNhdGlvbiB1bmRlciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjggU2VjdGlvbiB9e1xmaWVsZHtcKlxmbGRpbnN0IHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCAgIFJFRiBfUmVmNDgwMzc0NjEgXFx3IFxcaCBcXCogTUVSR0VGT1JNQVQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM3MDAzNDAwMzYwMDMxMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxjZjFcaW5zcnNpZDc5NDI2MlxjaGFycnNpZDc5NDI2MiA5LjJ9fX1cc2VjdGQgXGx0cnNlY3QNClxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIG9yIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCAgIFJFRiBfUmVmNDgwMzc0NjIgXFx3IFxcaCBcXA0KKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM3MDAzNDAwMzYwMDMyMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGNmMVxpbnNyc2lkNzk0MjYyXGNoYXJyc2lkNzk0MjYyIDkuM319fVxzZWN0ZCBcbHRyc2VjdFxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIG9mIHRoaXMgQWdyZWVtZW50IChhbiB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgSW5kZW1uaXRlZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggKX17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBzaGFsbCBsZWFybiBvZiBhIGNsYWltIHcNCmhpY2gsIGlmIGFsbG93ZWQgKHdoZXRoZXIgdm9sdW50YXJpbHkgb3IgYnkgYSBqdWRpY2lhbCBvciBxdWFzaS1qdWRpY2lhbCB0cmlidW5hbCBvciBhZ2VuY3kpLCB3b3VsZCBlbnRpdGxlIHN1Y2ggSW5kZW1uaXRlZSB0byBpbmRlbW5pZmljYXRpb24gdW5kZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0ICAgUkVGIF9SZWY0ODAzNzQ2MSBcXHcgXFxoIFxcKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNDAwMzgwMDMwMDAzMzAwMzcwMDM0MDAzNjAwMzEwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGNmMVxpbnNyc2lkNzk0MjYyXGNoYXJyc2lkNzk0MjYyIDkuMn19fVxzZWN0ZCBcbHRyc2VjdA0KXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggIG9yIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCAgIFJFRiBfUmVmNDgwMzc0NjIgXFx3IFxcaCANClxcKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM3MDAzNDAwMzYwMDMyMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGNmMVxpbnNyc2lkNzk0MjYyXGNoYXJyc2lkNzk0MjYyIDkuM319fVxzZWN0ZCBcbHRyc2VjdFxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIG9mIHRoaX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBzIEFncmVlbWVudCwgYmVmb3JlIHBheWluZyB0aGUgc2FtZSBvciBhZ3JlZWluZyB0aGVyZXRvLCB0aGUgSW5kZW1uaXRlZSBzaGFsbCBwcm9tcHRseSBzZW5kIGEgbm90aWNlIHRvIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgdGhlIFBhcnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCByZXF1aXJlZCB0byBwYXkgc3VjaCBpbmRlbW5pZmljYXRpb24gKHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgSW5kZW1uaXRvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXCc5NCkgaW4gd3JpdGluZyBvZiBhbGwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBtYXRlcmlhbCBmYWN0cyB3aXRoaW4gdGhlIEluZGVtbml0ZWVccnF1b3RlIA0KcyBrbm93bGVkZ2Ugd2l0aCByZXNwZWN0IHRvIHN1Y2ggY2xhaW0gYW5kIHRoZSBhbW91bnQgdGhlcmVvZjsgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IHByb3ZpZGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4ICwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjggaG93ZXZlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTczMjYxOCAsIHRoYXQgdGhlIEluZGVtbml0ZWV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkzMTc4MSBccnF1b3RlIA0KcyByaWdodCB0byBpbmRlbW5pZmljYXRpb24gc2hhbGwgYmUgZGltaW5pc2hlZCBieSB0aGUgZmFpbHVyZSB0byBnaXZlIHByb21wdCBub3RpY2Ugb25seSB0byB0aGUgZXh0ZW50IHRoYXQgdGhlIEluZGVtbml0ZWVccnF1b3RlIHMgZmFpbHVyZSB0byBnaXZlIHN1Y2ggbm90aWNlIHdhcyBwcmVqdWRpY2lhbCB0byB0aGUgcmlnaHQgb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkxMTAwODEgdGhlIEluZGVtbml0b3IuICBJZiwgcHJpb3IgdG8gdGhlIGV4cGlyYXRpb24gb2YgfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDc3Nzc3NSBbUkVEQUNURURdfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MTEwMDgxIA0KIGRheXMgZnJvbSB0aGUgZ2l2aW5nIG9mIHN1Y2ggbm90aWNlLCB0aGUgSW5kZW1uaXRvciBzaGFsbCByZXF1ZXN0LCBpbiB3cml0aW5nLCB0aGF0IHN1Y2ggY2xhaW0gbm90IGJlIHBhaWQsIHRoZSBJbmRlbW5pdGVlIHNoYWxsIG5vdCBwYXkgdGhlIHNhbWUsIHByb3ZpZGVkIHRoYXQgdGhlIEluZGVtbml0b3IgcHJvbXB0bHkgaW5pdGlhDQp0ZSBhbmQgZGlsaWdlbnRseSBwcm9zZWN1dGUgaW4gZ29vZCBmYWl0aCB0aGUgc2V0dGxlbWVudCBvciBsaXRpZ2F0aW9uIG9mIHN1Y2ggY2xhaW0uICBUaGUgSW5kZW1uaXRvciBzaGFsbCBoYXZlIGNoYXJnZSBhbmQgZGlyZWN0aW9uIG9mIHRoZSBkZWZlbnNlIGFuZCBzZXR0bGVtZW50IG9mIHN1Y2ggY2xhaW0sIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTExMDA4MSANCntcKlxia21rc3RhcnQgX0RWX002NzJ9e1wqXGJrbWtlbmQgX0RWX002NzJ9cHJvdmlkZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkxMTAwODEgLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgzNTA5MDggaG93ZXZlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MzUwOTA4ICwgdGhhdCB3aXRob3V0IHJlbGlldmluZyB0aGUgSW5kZW1uaXRvciBvZiBpdHMgb2JsaWdhdGlvbnMgaGVyZXVuZGVyIG9yIGltcGFpcmluZyB0aGUgSW5kZW1uaXRvclxycXVvdGUgDQpzIHJpZ2h0IHRvIGNvbnRyb2wgdGhlIGRlZmVuc2Ugb3Igc2V0dGxlbWVudCB0aGVyZW9mLCB0aGUgSW5kZW1uaXRlZSBtYXkgZWxlY3QgdG8gcGFydGljaXBhdGUgdGhyb3VnaCBzZXBhcmF0ZSBjb3Vuc2VsIGluIHRoZSBkZWZlbnNlIG9mIGFueSBzdWNoIGNsYWltLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgxMjE0MyANCmJ1dCB0aGUgZmVlcyBhbmQgZXhwZW5zZXMgb2Ygc3VjaCBjb3Vuc2VsIHNoYWxsIGJlIGF0IHRoZSBleHBlbnNlIG9mIHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDc0MTc3MjIgDQp1Y2ggSW5kZW1uaXRlZSB1bmxlc3MgKGkpIHRoZSBlbXBsb3ltZW50IG9mIGNvdW5zZWwgYnkgc3VjaCBJbmRlbW5pdGVlIGhhcyBiZWVuIGF1dGhvcml6ZWQgaW4gd3JpdGluZyBieSB0aGUgSW5kZW1uaXRvciwgKGlpKSB0aGUgSW5kZW1uaXRlZSBzaGFsbCBoYXZlIHJlYXNvbmFibHkgY29uY2x1ZGVkIHRoYXQgdGhlcmUgZXh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDM3NTU5NTAgDQppc3RzIGEgbWF0ZXJpYWwgY29uZmxpY3Qgb2YgaW50ZXJlc3QgYmV0d2VlbiB0aGUgSW5kZW1uaXRvciBhbmQgc3UNCmNoIEluZGVtbml0ZWUgaW4gdGhlIGNvbmR1Y3Qgb2YgdGhlIGRlZmVuc2Ugb2Ygc3VjaCBjbGFpbSAoaW4gd2hpY2ggY2FzZSB0aGUgSW5kZW1uaXRvciBzaGFsbCBub3QgaGF2ZSB0aGUgcmlnaHQgdG8gY29udHJvbCB0aGUgZGVmZW5zZSBvciBzZXR0bGVtZW50IG9mIHN1Y2ggY2xhaW0gb24gYmVoYWxmIG9mIHN1Y2ggSW5kZW1uaXRlZSkgb3IgKGlpaSkgdGhlIEluZGVtbml0b3Igc2hhbGwgbm90IGhhdmUgZW1wbG95ZWQgY291bnNlbCANCntcKlxia21rc3RhcnQgX0RWX002NzN9e1wqXGJrbWtzdGFydCBfRFZfTTY3NH17XCpcYmtta2VuZCBfRFZfTTY3M317XCpcYmtta2VuZCBfRFZfTTY3NH10byBhc3N1bWUgdGhlIGRlZmVuc2Ugb2Ygc3VjaCBjbGFpbSB3aXRoaW4gYSByZWFzb25hYmxlIHRpbWUgYWZ0ZXIgbm90aWNlIG9mIHRoZSBjb21tZW5jZW1lbnQgdGhlcmVvZi4gIEluIGVhY2ggb2Ygc3VjaCBjYXNlIHtcKlxia21rc3RhcnQgX0RWX002NzV9DQp7XCpcYmtta2VuZCBfRFZfTTY3NX1zZXQgZm9ydGggaW4gY2xhdXNlcyAoaSksIChpaSksIGFuZCAoaWlpKSBvZiB0aGUgcHJlY2VkaW5nIHNlbnRlbmNlIG9mIHRoaXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQzNzU1OTUwIFNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IA0KICBSRUYgX1JlZjQ4MDM1MzUwIFxcdyBcXGggXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNDAwMzgwMDMwMDAzMzAwMzUwMDMzMDAzNTAwMzAwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcY2YxXGluc3JzaWQ3OTQyNjJcY2hhcnJzaWQ3OTQyNjIgOS40KGEpfX19XHNlY3RkIFxsdHJzZWN0XHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggLH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIHtcKlxia21rc3RhcnQgX0RWX002NzZ9e1wqXGJrbWtlbmQgX0RWX002NzZ9dGhlIHJlYXNvbmFibGUgZmVlcyBhbmQgZXhwZW5zZXMgb2YgY291bnNlbCBzaGFsbCBiZSBhdCB0aGUgZXhwZW5zZSBvZiB0aGUgSW5kZW1uaXRvcntcKlxia21rc3RhcnQgX0RWX002Nzd9e1wqXGJrbWtlbmQgX0RWX002Nzd9DQogZXhjZXB0IHdoZXJlIHRoZSBJbmRlbW5pdG9yIGlzIHVsdGltYXRlbHkgZGVlbWVkIG5vdCB0byBoYXZlIGJlZW4gcmVxdWlyZWQgdG8gcHJvdmlkZSB0aGUgaW5kZW1uaXR5IHNvdWdodCBieSB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwICBJbmRlbW5pdGVlLiAgVGhlIEluZGVtbml0ZWUgc2hhbGwgbm90IGJlIHJlcXVpcmVkIHRvIHJlZnINCmFpbiBmcm9tIHBheWluZyBhbnkgY2xhaW0gd2hpY2ggaGFzIG1hdHVyZWQgYnkgYSBjb3VydCBqdWRnbWVudCBvciBkZWNyZWUsIHVubGVzcyBhbiBhcHBlYWwgaXMgZHVseSB0YWtlbiB0aGVyZWZyb20gYW5kIGV4ZWN1dGlvbiB0aGVyZW9mIGhhcyBiZWVuIHN0YXllZCwgbm9yIHNoYWxsIGl0IGJlIHJlcXVpcmVkIHRvIHJlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSANCmZyYWluIGZyb20gcGF5aW5nIGFueSBjbGFpbSB3aGVyZSB0aGUgZGVsYXkgdG8gcGF5IHN1Y2ggY2xhaW0gd291bGQgcmVzdWx0IGluIHRoZSBmb3JlY2xvc3VyZSBvZiBhIGxpZW4gdXBvbiBhbnkgb2YgdGhlIHByb3BlcnR5IG9yIGFzc2V0cyB0aGVuIGhlbGQgYnkgdGhlIEluZGVtbml0ZWUsIG9yIHdoZXJlIGFueSBkZWxheSBpbiBwYXltZW50IHdvdWxkIGNhdXNlIHRoZSBJbmRlbW5pdGVlIGEgbWF0ZXJpYWwgZWNvbm9taWMgbG9zcy4NCntcKlxia21rZW5kIF9SZWY0ODAzNTM1MH0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzUzNTF9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGIpXHRhYn1UaGUgQ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgDQpvLVRlbmFuY3kgTWFuYWdlciBzaGFsbCBub3QgYmUgbGlhYmxlIG9yIHJlc3BvbnNpYmxlIGhlcmV1bmRlciwgb3IgYWNjb3VudGFibGUgaW4gZGFtYWdlcyB0byB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANCiwgZm9yIGFueSBhY3Qgb3Igb21pc3Npb24gcGVyZm9ybWVkIG9yIG9taXR0ZWQgYnkgaXQgaW4gZ29vZCBmYWl0aCBwdXJzdWFudCB0byBhdXRob3JpdHkgZ3JhbnRlZCB0byBpdCBieSB0aGlzIEFncmVlbWVudCBhbmQgaW4gYSBtYW5uZXIgcmVhc29uYWJseSBiZWxpZXZlZCBieSBpdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgDQogdG8gYmUgd2l0aGluIHRoZSBzY29wZSBvZiBhdXRob3JpdHkgZ3JhbnRlZCB0byBpdCBieSB0aGlzIEFncmVlbWVudCBhbmQgaW4gdGhlIGJlc3QgaW50ZXJlc3RzIG9mIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIDsgfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIHByb3ZpZGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSAsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgaG93ZXZlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSAsIHRoYXQgdGhlIENvLVRlbmFuY3kgTWFuYWdlciB3YXMgbm90IGd1aWx0eSBvZiBncm9zcyBuZWdsaWdlbmNlLCBiYWQgZmFpdGgsIHJlY2tsZXNzbmVzcyBvciB3aWxsZnVsIG1pc2NvbmR1Y3QuICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggTm90aGluZyBpbiB0aGlzIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMzc3MiBTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAzNzcyICAgUkVGIF9SZWY0ODAzNzQ2MyBcXHcgXFxoIFxcKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAzNzcyIA0Ke1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNzAwMzQwMDM2MDAzMzAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcY2YxXGluc3JzaWQ3OTQyNjJcY2hhcnJzaWQ3OTQyNjIgOS40fX19XHNlY3RkIFxsdHJzZWN0DQpccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KIHNoYWxsIGJlIGNvbnN0cnVlZCBhcyBhIGxpbWl0YXRpb24gb3IgcmVzdHJpY3Rpb24gb24gdGhlIGFtb3VudCBvciBhcHBsaWNhYmlsaXR5IG9mIGFueSBpbnN1cmFuY2UgcG9saWNpZXMgb3IgY292ZXJhZ2VzIGhlbGQgYnkgb3Igb3RoZXJ3aXNlIHJlcXVpcmVkIHRvIGJlIHByb2N1cmVkIGFuZCBvYnRhaW5lZCBieSB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgUGFydHl9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICB1fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBue1wqXGJrbWtzdGFydCBfUmVmMTAxMzM5OTYyfWRlciB0aGUgdGVybXMgb2YgdGhpcyBBZ3JlZW1lbnQufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSANCntcKlxia21rZW5kIF9SZWY0ODAzNTM1MX0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzUzNTJ9e1wqXGJrbWtzdGFydCBfUmVmNDgwMzc0NjR9e1wqXGJrbWtzdGFydCBfVG9jNjAxMzU0OTR9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA5LjVcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczI2MVxxbCBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgU3RhbmRhcmRzIG9mIFBlcmZvcm1hbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgLiAgDQpJbiBwZXJmb3JtaW5nIGl0cyBkdXRpZXMgaGVyZXVuZGVyLCB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIHNoYWxsIGNvbXBseSB3aXRoIGFsbCBBcHBsaWNhYmxlIExhd3MgYW5kIFBydWRlbnQgSW5kdXN0cnkgUHJhY3RpY2VzLiAgSW4gbm8gZXZlbnQgc2hhbGwgdGhlIGxpYWJpbGl0eSBvZiB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIHRvIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIHVuZGVyIHRoaXMgQWdyZWVtZW50IGV4Y2VlZCB0aGUgY3VtdWxhdGl2ZSBNYW5hZ2VtZW50IEZlZSBwYWlkIHRvIHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgaGVyZXVuZGVyIGR1cmluZyB9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgDQpcYlxpbnNyc2lkNDQwMjU5NyBbUkVEQUNURURdfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIHBlcmlvZDsgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBwcm92aWRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgLCB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgaG93ZXZlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgDQosIHRoYXQgdGhlIGZvcmVnb2luZyBsaW1pdGF0aW9uIG9mIGxpYWJpbGl0eSBzaGFsbCBub3QgYXBwbHkgdG8sIGFuZCBubyBjcmVkaXQgc2hhbGwgYmUgaXNzdWVkIGFnYWluc3Qgc3VjaCBsaWFiaWxpdHkgZm9yLCBhbnkgbGlhYmlsaXRpZXMgcmVzdWx0aW5nIGZyb20gdGhlIGdyb3NzIA0KbmVnbGlnZW5jZSwgYmFkIGZhaXRoLCByZWNrbGVzc25lc3MsIG9yIHdpbGxmdWwgbWlzY29uZHVjdCBvZiB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIGFyaXNpbmcgaGVyZXVuZGVyLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFRoZSBkdXRpZXMgdG8gYmUgcGVyZm9ybWVkIGJ5IHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgYXMgc2V0IGZvcnRoIGhlcmVpbiBzaGFsbCBub3QgY317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgb25zdGl0dXRlIHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgaGUgQ28tVGVuYW5jeSBNYW5hZ2VyIGFzIGFuIGFyY2hpdGVjdCwgZW5naW5lZXIsIG9yIGNvbnN0cnVjdGlvbiBjb250cmFjdG9yLCBub3IgaW1wb3NlIHVwb24gdGhlIENvLVRlbmFuY3kgTWFuYWdlciBhbnkgb2JsaWdhdGlvbiB0byBhc3N1bWUsIHJlbmRlciB0bywgb3IgcGVyZm9ybSBvbiBiZWhhbGYgb2YgYW55IG9mIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIGFueSByZXNwb25zaWJpbGl0aWVzLCBkdXRpZXMsIHNlcnZpY2VzLCBvciBhY3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIGl2aXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgaWVzIGFzc3VtZWQgb3IgcmVuZGVyZWQgYnkgYW55IGFyY2hpdGVjdCwgZW5naW5lZXIsIG9yIGNvbnN0cnVjdGlvbiBjb250cmFjdG9yIGVtcGxveWVkIG9uIGFueSBQcm9qZWN0IG5vciBpbXBvc2UgdXBvbiB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIGFueSBsaWFiaWxpdHkgd2l0aCByZXNwZWN0IHRoZXJldG8ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCB7XCpcYmtta2VuZCBfUmVmNDgwMzUzNTJ9e1wqXGJrbWtlbmQgX1JlZjQ4MDM3NDY0fXtcKlxia21rZW5kIF9Ub2M2MDEzNTQ5NH0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzUzNTN9e1wqXGJrbWtzdGFydCBfUmVmNDgwMzc0NjV9e1wqXGJrbWtzdGFydCBfVG9jNjAxMzU0OTV9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA5LjZcdGFifX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBSZW1vdmFsIG9mIHRoZSBDby1UZW5hbmN5IE1hbmFnZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIC57XCpcYmtta2VuZCBfUmVmMTAxMzM5OTYyfXtcKlxia21rZW5kIF9SZWY0ODAzNTM1M317XCpcYmtta2VuZCBfUmVmNDgwMzc0NjV9e1wqXGJrbWtlbmQgX1RvYzYwMTM1NDk1fQ0KDQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1MzU0fXtcKlxia21rc3RhcnQgX1JlZjEwMTMzOTk4M317XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoYSlcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczI2M1xxbCBcZmkxNDQwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDIxNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcaWx2bDJcb3V0bGluZWxldmVsMlxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IFJlbW92YWwgZm9yIENhdXNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSANCi4gIFRoZSBDby1UZW5hbmN5IE1hbmFnZXIgbWF5IGJlIHJlbW92ZWQgZm9yIGNhdXNlIGJ5IGFueSBvZiB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgT3BlcmF0aW9uYWwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBDby1UZW5hbnRzIGZvciBhbnkgb2YgdGhlIHJlYXNvbnMgc2V0IGZvcnRoIGJlbG93fXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAgaW4gdGhlIG1hbm5lciBzZXQgZm9ydGggYmVsb3d9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IDp7XCpcYmtta2VuZCBfUmVmNDgwMzUzNTR9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1MzU1fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjMxMDEyOCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoaSlcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyNjVccWwgXGZpMjE2MFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDI4ODBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcaWx2bDNcb3V0bGluZWxldmVsM1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjggaWYgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBpcyBhbHNvIGEgRmFjaWxpdHkgTWFuYWdlciBvZiBhbnkgb2YgdGhlIFByb2plY3RzIGFuZCBoYXMgYmVlbiB0ZXJtaW5hdGVkIGJ5IGFueSBvZiB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgT3BlcmF0aW9uYWwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjggQ28tVGVuYW50cyBhcyBGYWNpbGl0eSBNYW5hZ2VyIGFzIGEgcmVzdWx0IG9mIGEgZGVmYXVsdCBifXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1NzMyNjE4IHkgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBpbiBpdHMgY2FwYWNpdHkgYXMgRmFjaWxpdHkgTWFuYWdlciB1bmRlciBhIEZhY2lsaXR5IE1hbmFnZW1lbnQgQWdyZWVtZW50Ow0Ke1wqXGJrbWtlbmQgX1JlZjEwMTMzOTk4M30gb3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkzMTc4MSB7XCpcYmtta2VuZCBfUmVmNDgwMzUzNTV9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1MzU2fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTMxNzgxIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChpaSlcdGFifQ0KaWYgYSBDby1UZW5hbmN5IE1hbmFnZXIgRXZlbnQgb2YgRGVmYXVsdCBoYXMgb2NjdXJyZWQsIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBwcm9jZWR1cmU6e1wqXGJrbWtlbmQgX1JlZjQ4MDM1MzU2fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTM1N317XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjY3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkzMTc4MSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoQSlcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyNjdccWwgXGZpMjg4MFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDM2MDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcaWx2bDRcb3V0bGluZWxldmVsNFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkzMTc4MSBUaGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgT3BlcmF0aW9uYWwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MzE3ODEgQ28tVGVuYW50KHMpIHNlZWtpbmcgcmVtb3ZhbCBvZiB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIGZvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MTEwMDgxICBjYXVzZSBoYXMgcHJvdmlkZWQgd3JpdHRlbiBub3RpY2UgKHRoZSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MTEwMDgxIFJlbW92YWwgTm90aWNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MTEwMDgxIFwnOTQNCikgdG8gdGhlIENvLVRlbmFuY3kgTWFuYWdlciBhbmQgdGhlIG90aGVyIENvLVRlbmFudHMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgb2YgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBFdmVudCBvZiBEZWZhdWx0LCBpbmNsdWRpbmcgdGhlIGZhY3RzIGFuZCBjaXJjdW1zdGFuY2VzIGdpdmluZyByaXNlIHRvIHRoZSBkZWZhdWx0LCBhbmQgb2Ygc3VjaCB9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IE9wZXJhdGlvbmFsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgcyBpbnRlbnQgdG8gcmVtb3ZlIENvLVRlbmFuY3kgTWFuYWdlciBwdXJzdWFudCB0byB0aGlzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgU2VjdGlvblx+fXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0ICAgUkVGIF9SZWY0ODAzNzQ2NSANClxcdyBcXGggXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNDAwMzgwMDMwMDAzMzAwMzcwMDM0MDAzNjAwMzUwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcY2YxXGluc3JzaWQ3OTQyNjJcY2hhcnJzaWQ3OTQyNjIgOS42fX19XHNlY3RkIFxsdHJzZWN0XHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggO317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIge1wqXGJrbWtlbmQgX1JlZjQ4MDM1MzU3fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY1NDI2MTgwN317XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTM1OH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjY3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChCKVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIElmIGFueSBDby1UZW5hbnQgZGVsaXZlcnMgYSBSZW1vdmFsIE5vdGljZSBwdXJzdWFudCB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0ICAgUkVGIF9SZWY0ODAzNTM1NyANClxcdyBcXGggXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNDAwMzgwMDMwMDAzMzAwMzUwMDMzMDAzNTAwMzcwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcY2YxXGluc3JzaWQ3OTQyNjJcY2hhcnJzaWQ3OTQyNjIgOS42KGEpKGlpKShBKX19fVxzZWN0ZCBcbHRyc2VjdFxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ0NDc0NTI1ICwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NCB1cG9uIHJlY2VpcHQgb2YgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgUmVtb3ZhbCBOb3RpY2UgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIENvLVRlbmFuY3kgTWFuYWdlciB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IG1heSBlbGVjdCB0byAoMSkgY3VyZSBzdWNoIEV2ZW50IG9mIERlZmF1bHQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCB3aXRoaW4gdGhlIHRpbX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgDQplIGZyYW1lcyBzZXQgZm9ydGggaW4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCAgIFJFRiBfUmVmNDgwMzc0ODAgXFx3IFxcaCBcXCogTUVSR0VGT1JNQVQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NCB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM3MDAzNDAwMzgwMDMwMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxjZjFcaW5zcnNpZDc5NDI2MlxjaGFycnNpZDc5NDI2MiAxMy4yfX19XHNlY3RkIFxsdHJzZWN0DQpccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBwbHVzIGFuIGFkZGl0aW9uYWwgfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDc3Nzc3NSBbUkVEQUNURURdfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgZGF5cyBmcm9tIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCByZWNlaXB0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIG9mIHRoZSBSZW1vdmFsIE5vdGljZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KIGFuZCwgdXBvbiBjdXJpbmcgc3VjaCBicmVhY2gsIHdpbGwgcHJvbXB0bHkgZGVsaXZlciBub3RpY2UgdGhhdCBzdWNoIEV2ZW50IG9mIERlZmF1bHQgaGFzIGJlZW4gY3VyZWQgb3IgdGhhdCB0aGUgQ28tVGVuYW5jeSBNYW5nZXIgaXMgZGlsaWdlbnRseSBhdHRlbXB0aW5nIHRvIGN1cmUgc3VjaCBicmVhY2ggb3IgKDIpIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KZGlzcHV0ZSB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIEV2ZW50IG9mIERlZmF1bHQgZGVzY3JpYmVkIHRoZXJlaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAgcHVyc3VhbnQgdG8gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ0NDc0NTI1IFNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ0NDc0NTI1ICBSRUYgX1JlZjU0MjYxNDcyIFxcdyBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgIFxcKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDQ0NzQ1MjUge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzUwMDM0MDAzMjAwMzYwMDMxMDAzNDAwMzcwMDMyMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNzk0MjYyIDkuNihhKShpaSkoRCl9fX1cc2VjdGQgXGx0cnNlY3QNClxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgO3tcKlxia21rZW5kIF9SZWY1NDI2MTgwN30NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNTQyNjIwNTR9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKEMpXHRhYn1JZiB0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANCmhlIENvLVRlbmFuY3kgTWFuYWdlciBoYXMgZmFpbGVkIHRvIGN1cmUgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBFdmVudCBvZiBEZWZhdWx0IHdpdGhpbiB0aGUgdGltfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBlIGZyYW1lcyBzZXQgZm9ydGggaW4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSANClNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0ICBSRUYgX1JlZjU0MjYxODA3IFxcdyBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzUwMDM0MDAzMjAwMzYwMDMxMDAzODAwMzAwMDM3MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNzk0MjYyIDkuNihhKShpaSkoQil9fX1cc2VjdGQgXGx0cnNlY3QNClxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNTAyMTU4MyB7XCpcYmtta3N0YXJ0IF9SZWYxMDEzNDAwMjB9IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IG9yfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE1MDIxNTgzICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBoYXMgZmFpbGVkIHRvIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTUwMjE1ODMgZGVsaXZlciBub3RpY2UgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgcHVyc3VhbnQgdG8gfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0ICBSRUYgX1JlZjU0MjYxODA3IFxcdyBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzUwMDM0MDAzMjAwMzYwMDMxMDAzODAwMzAwMDM3MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNzk0MjYyIDkuNihhKShpaSkoQil9fX1cc2VjdGQgXGx0cnNlY3QNClxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMzU2NzI1MSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQp0aGF0IHN1Y2ggaXRlbSBoYXMgYmVlbiBjdXJlZCBvciB0aGF0IGl0IGlzIGRpbGlnZW50bHkgd29ya2luZyB0byBjdXJlLCB0aGUgT3BlcmF0aW9uYWwgQ28tVGVuYW50IHRoYXQgZGVsaXZlcmVkIHRoZSBSZW1vdmFsIE5vdGljZSBtYXkgZGVsaXZlciBhIG5vdGljZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkxMTAwODEgdG8gdGhlIENvLVRlbmFuY3kgTWFuYWdlciBhbmQgdGhlIG8NCnRoZXIgQ28tVGVuYW50cyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBvZiB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXHJxdW90ZSBzIGZhaWx1cmUgdG8gY3VyZSBzdWNofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQogRXZlbnQgb2YgRGVmYXVsdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICAoYSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ0NDc0NTI1IE5vdGljZSBvZiBGYWlsdXJlIHRvIEN1cmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcJzk0KX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgO317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAge1wqXGJrbWtlbmQgX1JlZjQ4MDM1MzU4fXtcKlxia21rZW5kIF9SZWY1NDI2MjA1NH0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNTQyNjE0NzJ9e1wqXGJrbWtzdGFydCBfUmVmNDgwMzUzNTl9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoRClcdGFifUlmIGFueSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0IE9wZXJhdGlvbmFsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgQ28tVGVuYW50IGRlbGl2ZXJzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICgxKSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIA0KYSBSZW1vdmFsIE5vdGljZSBwdXJzdWFudCB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0ICAgUkVGIF9SZWY0ODAzNTM1NyBcXHcgXFxoIFxcKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE0MjkxOTQ0IHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNDAwMzgwMDMwMDAzMzAwMzUwMDMzMDAzNTAwMzcwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGNmMVxpbnNyc2lkNzk0MjYyXGNoYXJyc2lkNzk0MjYyIDkuNihhKShpaSkoQSl9fX1cc2VjdGQgXGx0cnNlY3QNClxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIGFuZCB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IGVsZWN0cyB0byB9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIGRpc3B1dGUgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBFdmVudCBvZiBEZWZhdWx0IGRlc2NyaWJlZCB0aGVyZWlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgIHB1cnN1YW50IHRvIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDQ3NDUyNSBTZWN0aW9uIH0NCntcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDQ3NDUyNSAgUkVGIF9SZWY1NDI2MTgwNyBcXHcgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0ICBcXCogTUVSR0VGT1JNQVQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ0NDc0NTI1IA0Ke1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM1MDAzNDAwMzIwMDM2MDAzMTAwMzgwMDMwMDAzNzAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDc5NDI2MiA5LjYoYSkoaWkpKEIpfX19XHNlY3RkIFxsdHJzZWN0DQpccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICBvciAoMikgYSBOb3RpY2Ugb2YgRmFpbHVyZSB0byBDdXJlIHB1cnN1YW50IHRvIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDQ3NDUyNSANClNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDQ3NDUyNSAgUkVGIF9SZWY1NDI2MjA1NCBcXHcgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0ICBcXCogTUVSR0VGT1JNQVQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ0NDc0NTI1IA0Ke1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM1MDAzNDAwMzIwMDM2MDAzMjAwMzAwMDM1MDAzNDAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDc5NDI2MiA5LjYoYSkoaWkpKEMpfX19XHNlY3RkIFxsdHJzZWN0DQpccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICwgdGhlbiB7XCpcYmtta2VuZCBfUmVmMTAxMzQwMDIwfXdpdGhpbiB9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0Nzc3Nzc1IFtSRURBQ1RFRF0NCn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBkYXlzIGFmdGVyIGRlbGl2ZXJ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIGZyb20gc3VjaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANCk9wZXJhdGlvbmFsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIENvLVRlbmFudCBvZiBzdWNoIFJlbW92YWwgTm90aWNlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IG9yIE5vdGljZSBvZiBGYWlsdXJlIHRvIEN1cmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANCiwgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBzaGFsbCBkZWxpdmVyIHRvIHRoZSBDby1UZW5hbnRzIGEgbm90aX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgY2Ugd2l0aCBhIGRldGFpbGVkIGRlc2NyaXB0aW9uIG9mIHRoZSByZWFzb25zIHdoeSB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIGRpc3B1dGVzIHN1Y2ggQ28tVGVuYW5jeSBNYW5hZ2VyIEV2ZW50IG9mIERlZmF1bHR9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICBvciB0aGF0IHN1Y2ggRXZlbnQgb2YgRGVmYXVsdCB3YXMgbm90IGN1cmVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCAsIGFuZCB3aXRoaW4gfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNzg5ODYyIFtSRURBQ1RFRF19e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgIGRheXMgYWZ0ZXIgZGVsaXZlcnkgb2Ygc3VjaCBub3RpY2UgYnkgdGhlIENvLVRlbmFuY3kgTWFuYWdlciwgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgT3BlcmF0aW9uYWwgfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIENvLVRlbmFudHMgYW5kIHRoZSBDDQpvLVRlbmFuY3kgTWFuYWdlciBzaGFsbCBtZWV0IGFuZCBjb25mZXIgaW4gZ29vZCBmYWl0aCB3aXRoIHJlc3BlY3QgdG8gc3VjaCBDby1UZW5hbmN5IE1hbmFnZXIgRXZlbnQgb2YgRGVmYXVsdC4gIFN1Y2ggbWVldGluZyBhbmQgY29uZmVyZW5jZSBtYXkgYmUgZG9uZSBlaXRoZXIgdGVsZXBob25pY2FsbHkgb3IgaW4gcGVyc29uLiAgSWYsIGFmdGVyIHN1Y2ggbWVldGluZyBhbmQgY29uZmVyZW5jZSwgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBhbmQNCiB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgT3BlcmF0aW9uYWwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSANCkNvLVRlbmFudChzKSBzZWVraW5nIHJlbW92YWwgb2YgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBhcmUgbm90IGFibGUgdG8gYWdyZWUgd2hldGhlciBzdWNoIENvLVRlbmFuY3kgTWFuYWdlciBFdmVudCBvZiBEZWZhdWx0IG9jY3VycmVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgIG9yIHdhcyBjdXJlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSAsIHN1Y2ggZGlzcHV0ZSBzaGFsbCBiZSBzdWJtaXR0ZWQgdG8gZGlzcHV0ZSByZXNvbHV0aW9uIHB1cnN1YW50IHRvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzg3NDc3OCBTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzg3NDc3OCAgUkVGIF9SZWY1MDcxMjkyNCBcXHcgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0ICBcXCogTUVSR0VGT1JNQVQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ3ODc0Nzc4IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM1MDAzMDAwMzcwMDMxMDAzMjAwMzkwMDMyMDAzNDAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDc5NDI2MiAxNi43fX19XHNlY3RkIFxsdHJzZWN0DQpccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgICBQZW5kaW5nIHJlc29sdXRpb24gb2Ygc3VjaCBkaXNwdXRlfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAgZWl0aGVyIGJ5IGFncmVlbWVudCBvZiB0aGUgUGFydGllcyBvciBieSBhIGZpbmFsLCBub24tYXBwZWFsYWJsZSBhZGp1ZGljYXRpb24gb2YgYSBjb3VydCBvZiBhcHByb3ByaWF0ZSBqdXJpc2RpY3Rpb24gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBwdXJzdWFudCB0b317XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzg3NDc3OCBTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCAgUkVGIF9SZWY1MDcxMjkxMyBcXHcgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM1MDAzMDAwMzcwMDMxMDAzMjAwMzkwMDMxMDAzMzAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDc5NDI2MiAxNi44fX19XHNlY3RkIFxsdHJzZWN0DQpccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICwgdGhlIENvLVRlbmFuY3kgTQ0KYW5hZ2VyIHNoYWxsIGNvbnRpbnVlIHBlcmZvcm1pbmcgaXRzIGR1dGllcyBhbmQgb2JsaWdhdGlvbnMgcHVyc3VhbnQgdG8gdGhpcyBBZ3JlZW1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCA7IGFuZHtcKlxia21rZW5kIF9SZWY1NDI2MTQ3Mn0NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQzOTM4MDEyIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChFKVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQzOTM4MDEyIElmIHRoZSByZXNvbHV0aW9uIG9mIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgZGlzcHV0ZSBwdXJzdWFudCB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE1MzA0NzYgU2VjdGlvbiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNTMwNDc2ICBSRUYgX1JlZjU0MjYxNDcyIFxcdyBcXGggIFxcKiBNRVJHRUZPUk1BVCB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTUzMDQ3NiB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzUwMDM0MDAzMjAwMzYwMDMxMDAzNDAwMzcwMDMyMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNzk0MjYyIA0KOS42KGEpKGlpKShEKX19fVxzZWN0ZCBcbHRyc2VjdFxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMzkzODAxMiANCiBkZXRlcm1pbmVzIGNvbmNsdXNpdmVseSAoZWl0aGVyIGJ5IGFncmVlbWVudCBvZiB0aGUgUGFydGllcyBvciBieSBhIGZpbmFsLCBub24tYXBwZWFsYWJsZSBhZGp1ZGljYXRpb24gb2YgYSBjb3VydCBvZiBhcHByb3ByaWF0ZSBqdXJpc2RpY3Rpb24gcHVyc3VhbnQgdG8gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNTMwNDc2IFNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNTMwNDc2ICBSRUYgX1JlZjUwNzEyOTEzIFxcdyBcXGggIFxcKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE1MzA0NzYge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzUwMDMwMDAzNzAwMzEwMDMyMDAzOTAwMzEwMDMzMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNzk0MjYyIDE2Ljh9fX1cc2VjdGQgXGx0cnNlY3QNClxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQzOTM4MDEyICkgdGhhdCBhIENvLVRlbmFuY3kgTWFuYWdlciBFdmVudCBvZiBEZWZhdWx0IGhhcyBvY2N1cnJlZCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDM5MzgwMTIgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBzaGFsbCBiZSByZW1vdmVkLCBhbmQgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IE9wZXJhdGlvbmFsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMzkzODAxMiANCkNvLVRlbmFudHMgc2hhbGwgcHJvbXB0bHkgY29tbWVuY2UgdGhlIHByb2Nlc3Mgb2YgYXBwb2ludGluZyBhIHN1Y2Nlc3NvciBDby1UZW5hbmN5IE1hbmFnZXIufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgICBJbiB0aGUgZXZlbnQgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBmYWlscyB0byBjdXJlLCBhdHRlbXB0IHRvIGN1cmUgb3IgZGlzcHV0ZSBhbiBldmVudCBvZiBkZWZhdWx0IHd9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgaXRoaW4gdGhlIHRpbX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgZSBmcmFtZXMgc2V0IGZvcnRoIGluIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTUzMDQ3NiBTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTUzMDQ3NiAgUkVGIF9SZWY1NDI2MTgwNyBcXHcgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTUzMDQ3NiB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNTAwMzQwMDMyMDAzNjAwMzEwMDM4MDAzMDAwMzcwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ3OTQyNjIgOS42KGEpKGlpKShCKX19fVxzZWN0ZCBcbHRyc2VjdA0KXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE4NTUyMTAgIGFmdGVyIHJlY2VpcHQgb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgYSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgUmVtb3ZhbCBOb3RpY2UgcHVyc3VhbnQgdG8gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCAgIFJFRiBfUmVmNDgwMzUzNTcgXFx3IFxcaCBcXCogTUVSR0VGT1JNQVQgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM1MDAzMzAwMzUwMDM3MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxjZjFcaW5zcnNpZDc5NDI2MlxjaGFycnNpZDc5NDI2MiANCjkuNihhKShpaSkoQSl9fX1cc2VjdGQgXGx0cnNlY3RccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTUzMDQ3NiAsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMzkzODAxMiANCnRoZSBDby1UZW5hbmN5IE1hbmFnZXIgc2hhbGwgYmUgcmVtb3ZlZCwgYW5kIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBPcGVyYXRpb25hbCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDM5MzgwMTIgQ28tVGVuYW50cyBzaGFsbCBwcm9tcHRseSBjb21tZW5jZSB0aGUgcHJvDQpjZXNzIG9mIGFwcG9pbnRpbmcgYSBzdWNjZXNzb3IgQ28tVGVuYW5jeSBNYW5hZ2VyLg0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWYxMDEzNDAwNzF9e1wqXGJrbWtlbmQgX1JlZjQ4MDM1MzU5fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoYilcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczI2M1xxbCBcZmkxNDQwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDIxNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcaWx2bDJcb3V0bGluZWxldmVsMlxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBTdWNjZXNzb3IgQ28tVGVuYW5jeSBNYW5hZ2VyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANCi4gIE5vIHJlbW92YWwgb2YgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBieSB0aGUgQ28tVGVuYW50cyBzaGFsbCBiZSBlZmZlY3RpdmUgdW5sZXNzIGFuZCB1bnRpbCBhIHN1Y2Nlc3N9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIG9yIENvLVRlbmFuY3kgTWFuYWdlciBpcyBhcHBvaW50ZWQuICBJZiB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIGlzIHJlbW92ZWQgDQpwdXJzdWFudCB0byB0aGlzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgU2VjdGlvbiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgICBSRUYgX1JlZjQ4MDM3NDY1IFxcdyBcXGggXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNzAwMzQwMDM2MDAzNTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcY2YxXGluc3JzaWQ3OTQyNjJcY2hhcnJzaWQ3OTQyNjIgOS42fX19XHNlY3RkIFxsdHJzZWN0DQpccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCAsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQogYSBzdWNjZXNzb3IgQ28tVGVuYW5jeSBNYW5hZ2VyIHNoYWxsIGJlIHNlbGVjfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCB0ZWQgcHVyc3VhbnQgdG8gdGhlIGFncmVlbWVudCBvZiB0aGUgUmVxdWlyZWQgTWFqb3JpdHkgb2YgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IE9wZXJhdGlvbmFsIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBzLiAgQW55IENvLVRlbmFuY3kgTWFuYWdlciB3aGljaCBpcyByZW1vdmVkIHNoYWxsLCBpbiBnb29kIGZhaXRoLCBjb250aW51ZSB0byB1bmRlcnRha2UgaXRzIGR1dGllcyBhbmQgb2JsaWdhdH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBpb25zIGFzIHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgdW50aWwgc3VjaCB0aW1lIGFzIGEgc3VjY2Vzc29yIENvLVRlbmFuY3kgTWFuYWdlciBpcyBhcHBvaW50ZWQgaGVyZXVuZGVyLiAgSWYgdGhlIENvLVRlbmFudHMgZmFpbCB0byBzZWxlY3QgYSByZXBsYWNlbWVudCBDby1UZW5hbmN5IE1hbmFnZXIgd2l0aGluIHNpeHR5ICg2MCkgZGF5cyBvZiB0aA0KZSBkZWNpc2lvbiB0byByZW1vdmUgdGhlIENvLVRlbmFuY3kgTWFuYWdlciwgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIHNoYWxsIGF2YWlsIHRoZW1zZWx2ZXMgb2YgdGhlIGRpc3B1dGUgcmVzb2x1dGlvbiBwcm9jZWR1cmVzfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwICBzZXQgZm9ydGggaW4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ3ODc0Nzc4IFNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzg3NDc3OCANCiBSRUYgX1JlZjUwNzEyOTI0IFxcdyBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgIFxcKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDc4NzQ3Nzgge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzUwMDMwMDAzNzAwMzEwMDMyMDAzOTAwMzIwMDM0MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNzk0MjYyIDE2Ljd9fX1cc2VjdGQgXGx0cnNlY3QNClxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANCiAgSW4gYWRkaXRpb24sIGFuZCBwcm92aWRlZCB0aGF0IHRoZSByZW1vdmVkIENvLVRlbmFuY3kgTWFuYWdlciBzaGFsbCBjb250aW51ZSB0byBiZSByZWltYnVyc2VkIGZvciBpdHMgc2VydmljZXMgYnkgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgYXMgcHJvdmlkZWQgaGVyZXVuZGVyLCB0aGUgcmVtb3ZlZCBDby1UZW5hbmN5IE1hbmFnZXIgc2hhbGwgY29vcGVyYXRlIHdpdGggYW5kIGFzc2lzdCB0aGUgbmV3IENvLVRlbmFuY3kgTWFuYWdlciBkdXJpbmcgYW55IHN1Y2ggdHJhbnNpdGlvbiBwZXJpb2QsIGluY2x1ZGluZyBleGVjdXRpb24gb2YgYWxsIG5lY2Vzc2FyeSBkb2N1bWUNCm50cyBhbmQgcHJvdmlzaW9uIG9mIGFsbCBpbmZvcm1hdGlvbiBhbmQgZG9jdW1lbnRhdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgIHRoYXQgdGhlIG5ldyBDby1UZW5hbmN5IE1hbmFnZXIgbWF5IHJlYXNvbmFibHkgcmVxdWlyZSB0byBmdWxmaWxsIGl0cyBkdXRpZXMgYW5kIG9ibGlnYXRpb25zIGhlcmV1bmRlci59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEge1wqXGJrbWtlbmQgX1JlZjEwMTM0MDA3MX0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzUzNjB9e1wqXGJrbWtzdGFydCBfUmVmNTE4NjI2NjB9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGMpXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgUmVzaWduYXRpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIC4gIFRoZSBDby1UZW5hbmN5IE1hbmFnZXIgc2hhbGwgaGF2ZSB0aGUgcmlnaHQgdG8gcmVzaWduIGFzIENvLVRlbmFuY3kgTWFuYWdlciBmb3IgY29udmVuaWVuY2UgYW5kIHdpdGhvdXQgYW55IGxpYWJpbGl0eSB0byBhbnkgb2YgdGhlIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgdXBvbiB9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE3ODk4NjIgW1JFREFDVEVEXX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIGRheXMgcHJpb3Igd3JpdHRlbiBub3RpY2UgdG8gdGhlIENvLVRlbmFudHMuICBUaGUgQ28tVGVuYW50cyBzaGFsbCBhcHBvaW50IGEgc3VjY2Vzc29yIENvLVRlbmFuY3kgTWFuYWdlciB3aXRoaW4gdGhpcyB9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE3ODk4NjIgW1JFREFDVEVEXX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIGRheSBwZXJpb2QsIGR1cmluZyB3aGljaCBwZXJpb2QgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBzaGFsbCwgaW4gZ29vZCBmYWl0aCwgY29udGludWUgdG8gdW5kZXJ0YWtlIGl0cyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIA0KZHV0aWVzIGFuZCBvYmxpZ2F0aW9ucyBhcyB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIHVudGlsIHN1Y2ggdGltZSBhcyBhIHN1Y2Nlc3NvciBDby1UZW5hbmN5IE1hbmFnZXIgaXMgYXBwb2ludGVkIGhlcmV1bmRlci4gIElmIHRoZSBDby1UZW5hbnRzIGZhaWwgdG8gc2VsZWN0IGEgcmVwbGFjZW1lbnQgQ28tVGVuYW5jeSBNYW5hZ2VyIHd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgaXRoaW4gfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNzg5ODYyIFtSRURBQ1RFRF19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxICBkYXlzIG9mIHRoZSBDby1UZW5hbmN5IE1hbmFnZXJccnF1b3RlIA0KcyBub3RpY2Ugb2YgaXRzIGludGVudCB0byByZXNpZ24sIHRoZSBDby1UZW5hbnRzIHNoYWxsIGF2YWlsIHRoZW1zZWx2ZXMgb2YgdGhlIGRpc3B1dGUgcmVzb2x1dGlvbiBwcm9jZWR1cmVzIHNldCBmb3J0aCBpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzg3NDc3OCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ3ODc0Nzc4IA0KU2VjdGlvbiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ3ODc0Nzc4ICBSRUYgX1JlZjUwNzEyOTI0IFxcdyBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgIFxcKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDc4NzQ3NzggDQp7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzUwMDMwMDAzNzAwMzEwMDMyMDAzOTAwMzIwMDM0MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNzk0MjYyIDE2Ljd9fX1cc2VjdGQgXGx0cnNlY3QNClxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgVGhlIENvLVRlbmFuY3kgTWFuYWdlciBzaGFsbCBjb317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBvcGVyYXRlIHdpdGggdGhlIENvLVRlbmFudHMgaW4gdGhlIHRyYW5zaXRpb24gb2YgdGhlIHBlcmZvcm1hbmNlIG9mIHRoZSBDby1UZW5hbmN5IE1hbmFnZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFxycXVvdGUgDQpzIG9ibGlnYXRpb25zIHRvIHRoZSBDby1UZW5hbnRzIG9yIGEgc3VjY2Vzc29yIENvLVRlbmFuY3kgTWFuYWdlciB1bnRpbCB0aGUgY29uY2x1c2lvbiBvZiBzdWNoIH17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTc4OTg2MiBbUkVEQUNURURdfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSAgZGF5IHBlcmlvZDsgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIHByb3ZpZGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSAsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgaG93ZXZlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSAsIHRoYXQgaWYgdGhlIENvLVRlbmFudHMgYXJlIHVuYWJsZSB0byBzZWxlY3Qgb3IgYWdyZWUgdXBvbiBhIHJlcGxhY2VtZW50IENvLVRlbmFuY3kgTWFuYWdlciBkdXJpbmcgc3VjaCB9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE3ODk4NjIgW1JFREFDVEVEXX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSAgZGF5IHBlcmlvZCwgdGhlIENvLVRlbmFudHMgbWF5IGV4dGVuZCBzdWNoIH17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTc4OTg2MiBbUkVEQUNURURdfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSAgZGF5IHBlcmlvZCBmb3IgdXAgdG8gYW4gYWRkaXRpb25hbCB9e1xydGxjaFxmY3MxIA0KXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTc4OTg2MiBbUkVEQUNURURdfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSAgZGF5cyBieSBwcm92aWRpbmcgdGhlIENvLVRlbmFuY3kgTWFuYWdlciB3cml0dGVuIG5vdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjMxMDEyOCANCmljZSBvZiB0aGVpciBpbnRlbnRpb24gdG8gZXh0ZW5kIHN1Y2ggcGVyaW9kIGF0IGxlYXN0IH17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTc4OTg2MiBbUkVEQUNURURdfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4ICBkYXlzIHByaW9yIHRvIHRoZSBlbmQgb2YgdGhlIGluaXRpYWwgfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIA0KXGJcaW5zcnNpZDE3ODk4NjIgW1JFREFDVEVEXX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjMxMDEyOCAgZGF5IHBlcmlvZC4gIER1cmluZyBhbnkgc3VjaCB0aW1lIHRoYXQgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBpcyBvYmxpZ2F0ZWQgcHVyc3VhbnQgdG8gdGhpcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDU3MzI2MTggDQpTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCAgIFJFRiBfUmVmNDgwMzc0NjUgXFx3IFxcaCBcXCogTUVSR0VGT1JNQVQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM3MDAzNDAwMzYwMDM1MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxjZjFcaW5zcnNpZDc5NDI2MlxjaGFycnNpZDc5NDI2MiA5LjZ9fX1cc2VjdGQgXGx0cnNlY3QNClxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIHRvIHBlcmZvcm0gaXRzIG9ibGlnYXRpDQpvbnMgaGVyZXVuZGVyLCB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIHNoYWxsIHJlbWFpbiBsaWFibGUgZm9yIHRoZSBwZXJmb3JtYW5jZSBvZiBzdWNoIG9ibGlnYXRpb25zIGluIGFjY29yZGFuY2Ugd2l0aCB0aGlzIEFncmVlbWVudCBhcyBpZiBubyByZXNpZ25hdGlvbiBub3RpY2UgaGFkIGJlZW4gZGVsaXZlcmVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQge1wqXGJrbWtlbmQgX1JlZjQ4MDM1MzYwfS59ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIHtcKlxia21rZW5kIF9SZWY1MTg2MjY2MH0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzUzNjF9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGQpXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIA0KQ28tVGVuYW5jeSBNYW5hZ2VyIEFzc2lnbm1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIC4gIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFN1YmplY3QgdG8gdGhlIHJlY2VpcHQgb2YgYW55IG5lY2Vzc2FyeSBhdXRob3JpemF0aW9ucyBmcm9tIEdvdmVybm1lbnRhbCBBdXRob3JpdGllcywgdH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBoZSBDby1UZW5hbmN5IE1hbmFnZXIgbWF5IGFzc2lnbiB0aGlzIEFncmVlbWVudCB0byBhbiBhZmZpbGlhdGUsIHdpdGhvdXQgYW55IGNvbnNlbnQgcmVxdWlyZW1lbnRzLCBwcm92aWRlZCB0aGF0IHN1Y2ggYWZmaWxpYXRlIGFzc3VtZXMgYWxsIG9mIHRoZSBDby1UZW5hbmN5IE1hbmFnZXJccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBzIG9ibGlnYXRpb25zIGhlcmV1bmRlciB3aGV0aGVyIGFjY3J1aW5nIHByaW9yLCBvbiBvciBhZnRlciB0aGUgZGF0ZSBvZiBzdWNoIGFzc2lnbm1lbnQgb3IgdG8gYSB0aGlyZCBwYXJ0eSB1cG9uIHdyaXR0ZW4gY29uc2VudCBvZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggYX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIFJlcXVpcmVkIE1ham9yaXR5LCB3aGljaCBjb25zZW50IHNoYWxsIG5vdCBiZSBjb25kaXRpb25lZCwgd2l0aGhlbGQgb3IgZGVsYXllZC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIHtcKlxia21rZW5kIF9SZWY0ODAzNTM2MX0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzUzNjJ9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGUpXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIA0KTGlhYmlsaXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSAuICBDby1UZW5hbmN5IE1hbmFnZXIgc2hhbGwgYmUgZGlzY2hhcmdlZCBhbmQgcmVsZWFzZWQgZnJvbSBhbGwgbGlhYmlsaXR5IGFyaXNpbmcgZnJvbSBhY3RzLCBhY3Rpb25zIG9yIG9taXNzaW9ucyBmaXJzdCBvY2N1cnJpbmcgb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgIG9yIGFmdGVyIHRoZSBkYXkgQ28tVGVuYW5jeSBNYW5hZ2VyIGNlYXNlcyB0byBwZXJmb3JtIHNlcnZpY2VzIGhlcmV1bmRlci59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCB7XCpcYmtta2VuZCBfUmVmNDgwMzUzNjJ9DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUxOTg4MDYgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGYpXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUxOTg4MDYgRkVSQyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE0MjkxOTQ0IEFtZW5kbWVudCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUxOTg4MDYgRmlsaW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgIFJlbGF0ZWQgdG8gQ28tVGVuYW5jeSBNYW5hZ2VyIFJlcGxhY2VtZW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MzMzNzMwIC4gIElmIHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgaXMgcmVwbGFjZWQgb3IgcmVzaWducyB1bmRlciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkyNDE5NTUgU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTI0MTk1NSAgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTI0MTk1NSAgUkVGIF9SZWYxMDEzNDAwNzEgXFx3IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCAgXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MjQxOTU1IHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzMTAwMzAwMDMxMDAzMzAwMzQwMDMwMDAzMDAwMzcwMDMxMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNzk0MjYyIDkuNihiKX19fVxzZWN0ZCBcbHRyc2VjdA0KXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCAsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MzMzNzMwICB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkyNDE5NTUgIFJFRiBfUmVmNTE4NjI2NjAgXFx3IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCAgXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTI0MTk1NSB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNTAwMzEwMDM4MDAzNjAwMzIwMDM2MDAzNjAwMzAwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ3OTQyNjIgOS42KGMpfX19XHNlY3RkIFxsdHJzZWN0DQpccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0ICBvciA5LjYoZCl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUzMzM3MzAgDQosIHRoaXMgQWdyZWVtZW50IHNoYWxsIGJlIGFtZW5kZWQgdG8gcmVmbGVjdCB0aGUgaWRlbnRpdHkgb2YgdGhlIG5ldyBDby1UZW5hbmN5IE1hbmFnZXIgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgLCBwdXJzdWFudCB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkzMTIzOTggU2VjdGlvbiB9e1xmaWVsZHtcKlxmbGRpbnN0IHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE4NTUyMTAgIFJFRiBfUmVmNTUzMDIzMjYgXFx3IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCAgXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTg1NTIxMCB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNTAwMzUwMDMzMDAzMDAwMzIwMDMzMDAzMjAwMzYwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ3OTQyNjIgMTYuNChhKX19fVxzZWN0ZCBcbHRyc2VjdA0KXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAgb2YgdGhpcyBBZ3JlZW1lbnQsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MzMzNzMwIA0KIHN1Y2ggYW1lbmRlZCBBZ3JlZW1lbnQgc2hhbGwgYmUgZmlsZWQgYXQgRkVSQyB1bmRlciBGUEEgU2VjdGlvbiAyMH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IDUufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSANClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzUzNjN9e1wqXGJrbWtzdGFydCBfUmVmNDgwMzc0NjZ9e1wqXGJrbWtzdGFydCBfVG9jNjAxMzU0OTZ9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA5LjdcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczI2MVxxbCBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgQm9va3MgYW5kIFJlY29yZHM7IFJlcG9ydGluZyBSZXF1aXJlbWVudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IC57XCpcYmtta2VuZCBfUmVmNDgwMzUzNjN9DQp7XCpcYmtta2VuZCBfUmVmNDgwMzc0NjZ9e1wqXGJrbWtlbmQgX1RvYzYwMTM1NDk2fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTM2NH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChhKVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczI2M1xxbCBcZmkxNDQwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MjE2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxpbHZsMlxvdXRsaW5lbGV2ZWwyXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjMxMDEyOCBNYWludGVuYW5jZSBvZiBSZWNvcmRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IC4gIFRoZSBDby1UZW5hbmN5IE1hbmFnZXIgc2hhbGwgbWFpbnRhaW4gYm9va3MgYW5kIHJlY29yZHMgaW4gc3VmZmljaWVudCBkZXRhaWwgdG8gdmVyaWZ5IGFtb3VudHMgZHVlIGFuZCBwYXlhYmxlIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1NzMyNjE4IGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MzE3ODEgDQpyZXVuZGVyIGZvciBhIHBlcmlvZCBvZiBub3QgbGVzcyB0aGFuIHRocmVlICgzKSB5ZWFycyBhZnRlciB0aGUgZW5kIG9mIHRoZSBjYWxlbmRhciBtb250aCB0byB3aGljaCB0aGV5IHJlbGF0ZSwgYW5kIGFsbCBzdWNoIGJvb2tzIGFuZCByZWNvcmRzIHNoYWxsIGJlIGF2YWlsYWJsZSBmb3IgaW5zcGVjdGlvbiBhbmQvb3IgY29weWluZyBieSBlYWNoIENvLVRlbmFudCBhbmQgaXRzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ3ODc2OTAwIFNlY3VyZWQgUGFydGllcyBvciBpdHMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQphdXRob3JpemVkIHJlcHJlc2VudGF0aXZlIGF0IHRoZSBjb3N0IGFuZCBleHBlbnNlIG9mIHN1Y2ggQ28tVGVuYW50IGFuZCBhdCByZWFzb25hYmxlIHRpbWVzIGR1cmluZyByZWd1bGFyIGJ1c2luZXNzIGhvdXJzLCB1cG9uIHJlYXNvbmFibGUgbm90aWNlIHRvIHRoZSBDby1UZW5hbmN5IE1hbmFnZXIufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANCntcKlxia21rZW5kIF9SZWY0ODAzNTM2NH0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzUzNjV9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGIpXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIA0KUHJvdmlzaW9uIG9mIFJlcG9ydHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIC4gIFRoZSBDby1UZW5hbmN5IE1hbmFnZXIgc2hhbGwsIGZyb20gdGltZSB0byB0aW1lLCBwcm92aWRlIHJlcG9ydHMgdG8gdGhlIENvLX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgDQpUZW5hbnRzIHN1ZmZpY2llbnQgdG8ga2VlcCB0aGUgQ28tVGVuYW50cyByZWFzb25hYmx5IGFwcHJpc2VkIGFzIHRvIHNpZ25pZmljYW50IG1hdHRlcnMgY29uY2VybmluZyB0aGUgbWFpbnRlbmFuY2UgYW5kIHJlcGFpciBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMsIGluY2x1ZGluZyBzdWNoIG1hdHRlcnMgcmVsYXRlZCB0aGVyZXRvIHdoaWNoIG1heSBoYXZlIGEgbWF0ZXJpYWwgaW0NCnBhY3Qgb24gdGhlIG9wZXJhdGlvbiwgbWFpbnRlbmFuY2Ugb3IgcmVwYWlyIG9mIGVhY2ggQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IFxycXVvdGUgcyBQcm9qZWN0LiAgVGhlIENvLVRlbmFuY3kgTWFuYWdlclxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1NzMyNjE4IA0KcyByZXBvcnRpbmcgb2JsaWdhdGlvbnMgc2hhbGwgaW5jbHVkZSBhbGwgb2YgdGhlIGZvbGxvd2luZzp9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkzMTc4MSB7XCpcYmtta2VuZCBfUmVmNDgwMzUzNjV9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1MzY2fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTMxNzgxIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChpKVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczI2NVxxbCBcZmkyMTYwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4Mjg4MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxpbHZsM1xvdXRsaW5lbGV2ZWwzXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTMxNzgxIENvbGxlY3RpbmcgYW5kIHByb3ZpZGluZyBhbnkgaW5mb3JtYXRpb24sIHRvIHRoZSBleHRlbnQgc3VjaCBpbmZvcm1hdGlvbiBpcyBpbiBDby1UZW5hbmN5IE1hbmFnZXJccnF1b3RlIHMgcG9zc2Vzc2lvbiBvciBpcyByZWFzb25hYmx5IGF2YWlsYWJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkxMTAwODEgDQpsZSB0byBDby1UZW5hbmN5IE1hbmFnZXIsIHJlZ2FyZGluZyB0aGUgU2hhcmVkIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBQcmVtaXNlcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBhbmQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgRmFjaWxpdGllc317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgLCBBZGRpdGlvbmFsIEZhY2lsaXRpZXMsIEFkZGl0aW9uYWwgUHJlbWlzZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANCmFuZCBFYXNlbWVudHMgcmVxdWlyZWQgZm9yIGFueSByZXBvcnRzIHRvIGFueSBHb3Zlcm5tZW50YWwgQXV0aG9yaXRpZXMufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSB7XCpcYmtta2VuZCBfUmVmNDgwMzUzNjZ9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1MzY3fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGlpKVx0YWJ9UmVwb3J0aW5nIHByb21wdGx5IChhbmQgaW4gYW55IGV2ZW50IHdpdGhpbiB9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgDQpcYlxpbnNyc2lkMTE2NjYyMTcgW1JFREFDVEVEXX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgDQogb2YgYmVjb21pbmcgYXdhcmUgb2YgYW4gRW1lcmdlbmN5KSB0byB0aGUgQ28tVGVuYW50cyBhbmQgdG8gYW55IG90aGVyIFBlcnNvbnMgZW50aXRsZWQgdG8gcmVjZWl2ZSBzdWNoIG5vdGljZSBhbnkgaW5jaWRlbnQgb2YgZXhwbG9zaW9uLCBmaXJlLCBzdG9ybSwgb3Igb3RoZXIgRW1lcmdlbmN5IG9uIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IA0KU2hhcmVkIFByZW1pc2VzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IGFuZCBGYWNpbGl0aWVzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIG9yIGFueSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBTZXBhcmF0ZSBQcm9qZWN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAsIG9yIG90aGVyd2lzZSBhZmZlY3RpbmcgYW55IG9mIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFNoYXJlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCAgUHJlbWlzZXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgLCBvZiB3aGljaH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgIGl0IGJlY29tZXMgYXdhcmUuDQp7XCpcYmtta2VuZCBfUmVmNDgwMzUzNjd9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1MzY4fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGlpaSlcdGFifQ0KUHJvdmlkaW5nIHByb21wdCB3cml0dGVuIG5vdGljZSB0byB0aGUgQ28tVGVuYW50cywgYWxsIGluIGNvbW1lcmNpYWxseSByZWFzb25hYmxlIGRldGFpbCB1cG9uIGxlYXJuaW5nIG9mIHRoZSBldmVudCByZXF1aXJpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgZyBub3RpY2UsIG9mICh4KSBhbnkgYWN0dWFsIHZpb2xhdGlvbiBvZg0KIGFueSBBcHBsaWNhYmxlIExhdywgaW5jbHVkaW5nIGEgcmVxdWlyZW1lbnQgb2YgYW55IEdvdmVybm1lbnRhbCBBdXRob3JpdHksIG9yIGFueSB2aW9sYXRpb24gb3IgYnJlYWNoIG9mIGFueSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBJbnRlcmNvbm5lY3Rpb24gQWdyZWVtZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQogcHJvdmlkZWQgdG8gdGhlIENvLVRlbmFuY3kgTWFuYWdlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBvciBhbnkgb2YgdGhlIGFncmVlbWVudHMgcmVsYXRpbmcgdG8gdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgU2hhcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBlZCBGYWNpbGl0aWVzIGFuZCAoeSkgYWxsIGV2ZW50cywgb2NjdXJyDQplbmNlcywgY29uZGl0aW9ucywgYW5kIGlzc3VlcyB0aGF0IHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgcmVhc29uYWJseSBjb25zaWRlcnMgYXJlIG1hdGVyaWFsIHRvLCBvciBhcmUgcmVhc29uYWJseSBsaWtlbHkgdG8gaGF2ZSBhIG1hdGVyaWFsIGFkdmVyc2UgZWZmZWN0IG9uLCB0aGUgb3BlcmF0aW9uLCBtYWludGVuYW5jZSwgb3IgcmVzdWx0cyBvZiBvcGVyYXRpb25zIG9mIHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgaGUgU2hhcmVkIEZhY2lsaXRpZXMsIGluY2x1ZGluZyBub3RpY2VzIG9mIExpZW5zIGFuZCBjbGFpbXMgb2YgTGllbnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCB7XCpcYmtta2VuZCBfUmVmNDgwMzUzNjgNCn0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmMTAxMzQwODk3fXtcKlxia21rc3RhcnQgX1JlZjQ4MDM1MzY5fXtcKlxia21rc3RhcnQgX1JlZjQ4MDM3NDY3fXtcKlxia21rc3RhcnQgX1RvYzYwMTM1NDk3fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgOS44DQpcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyNjFccWwgXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIENvLVRlbmFuY3kgTWFuYWdlciBGZWVzIGFuZCBFeHBlbnNlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAge1wqXGJrbWtlbmQgX1JlZjEwMTM0MDg5N30gIFRoZSBDby1UZW5hbmN5IE1hbmFnZXIgc2hhbGwgYmUgcGFpZCBvciByZWltYnVyc2VkLCB0byB0aGUgZXh0ZW50IGNvbnNpc3RlbnQgd2l0aCB0aGUgQXBwcm92ZWQgQ28tVGVuYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgDQpuY3kgTyZNIEJ1ZGdldCBvciBhcyBhcHByb3ZlZCBpbiBhZHZhbmNlIGJ5IENvLVRlbmFudHMsIGZvciBhbnkgdW5zY2hlZHVsZWQgbWFpbnRlbmFuY2UgYW5kIHJlcGFpcnMgdG8gYW5kIHJlcGxhY2VtZW50cyBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgcGVyZm9ybX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgDQplZCBieSB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIG9uIGJlaGFsZiBvZiB0aGUgQ28tVGVuYW50cyBpbiBhY2NvcmRhbmNlIHdpdGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCAgUkVGIF9SZWY0ODMwMzA1NCBcXHcgXFxoIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzMwMDMwMDAzMzAwMzAwMDM1MDAzNDAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDc5NDI2MiA2Ljd9fX1cc2VjdGQgXGx0cnNlY3QNClxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANCiAgRXhjZXB0IGluIHRoZSBldmVudCBvZiBhbiBFbWVyZ2VuY3ksIHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgc2hhbGwgaGF2ZSB0aGUgcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgDQppZ2h0IHRvIHByZS1pbnZvaWNlIHRoZSBDby1UZW5hbnRzIGZvciBhbnkgbWF0ZXJpYWxzIGFuZCBjb21wb25lbnRzIHJlcXVpcmVkIHRvIGJlIHByb3ZpZGVkIGhlcmV1bmRlciwgYW5kIG5vdCB0byBwcm9jZWVkIHdpdGggdGhlIGFjcXVpc2l0aW9uIG9mIHN1Y2ggbWF0ZXJpYWxzIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIA0KbmQgY29tcG9uZW50cyB1bmxlc3MgcGF5bWVudCBoYXMgYmVlbiByZWNlaXZlZCBieSB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIGZvciBzdWNoIG1hdGVyaWFscyBhbmQgY29tcG9uZW50cy57XCpcYmtta2VuZCBfUmVmNDgwMzUzNjl9e1wqXGJrbWtlbmQgX1JlZjQ4MDM3NDY3fXtcKlxia21rZW5kIF9Ub2M2MDEzNTQ5N30NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzUzNzB9e1wqXGJrbWtzdGFydCBfUmVmNDgwMzc0Njh9e1wqXGJrbWtzdGFydCBfVG9jNjAxMzU0OTh9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA5LjlcdGFifX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBGYWNpbGl0eSBNYW5hZ2VtZW50IEFncmVlbWVudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAuICBFYWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICB0aGF0IGhhcyBlbnRlcmVkIGludG8gYSBGYWNpbGl0eSBNYW5hZ2VtZW50IEFncmVlbWVudCBvbiBvciBwcmlvciB0byB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgQ29udHJhY3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANCiBEYXRlIG9yIGF0IGFueSB0aW1lIGR1cmluZyB0aGUgVGVybSBvZiB0aGlzIEFncmVlbWVudCBhZ3JlZXMgdGhhdCBpZiBhbmQgdG8gdGhlIGV4dGVudCBhbnkgbGFuZCBvciBlcXVpcG1lbnQgdGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIGF0IGlzIHN1YmplY3QgdG8gdGhlIEZhY2lsaXR5IE1hbmFnZW1lbnQgQWdyZWVtZW50IGNvbnN0aXR1dGVzIFNoYXJlZCB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgUHJlbWlzZXMgYW5kIEZhY2lsaXRpZXMgb3IgRWFzZW1lbnRzLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANCihpKSB0byB0aGUgZXh0ZW50IG9mIGFueSBvdmVybGFwIG9yIGluY29uc2lzdGVuY3kgYmV0d2VlbiBhbiBGYWNpbGl0eSBNYW5hZ2VtZW50IEFncmVlbWVudCBhbmQgdGhpcyBBZ3JlZW1lbnQgd2l0aCByZXNwZWN0IHRvIFNoYXJlZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFByZW1pc2VzIGFuZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgRmFjaWxpdGllcywgdGhpcyBBZ3JlZW1lbnQgc2hhbGwgY29udHJvbCBzbyBsb25nIGFzIG1vcmUgdGhhbiBvbmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KIGlzIGEgQ28tVGVuYW50IGhlcmV1bmRlciwgYW5kIChpaSkgaWYgdGhlIEZhY2lsaXR5IE1hbmFnZXIgb2YgYSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQogaXMgbm90IHRoZSBDby1UZW5hbmN5IE1hbmFnZXIsIHRoZSBGYWNpbGl0eSBNYW5hZ2VyIHNoYWxsIG5vdCBoYXZlIHRoZSByaWdodCB0byBvcGVyYXRlLCBtYWludGFpbiwgcmVwYWlyLCBvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCByIHJlcGxhY2UgdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSANCiBTaGFyZWQgUHJlbWlzZXMgYW5kIEZhY2lsaXRpZXMsIGJ1dCBzdWNoIEZhY2lsaXR5IE1hbmFnZXIgc2hhbGwgaGF2ZSB0aGUgcmlnaHQgdG8gYWNjZXNzIHRoZSBTaGFyZWQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSANClByZW1pc2VzIGFuZCBGYWNpbGl0aWVzIGFuZCB0aGUgRWFzZW1lbnRzIHVwb24gcmVhc29uYWJsZSBub3RpY2UgdG8gQ28tVGVuYW5jeSBNYW5hZ2VyIG9uIGEgdGVtcG9yYXJ5IGJhc2lzIGFzIGlzIHJlYXNvbmFibHkgbmVjZXNzYXJ5IHRvIGVuc3VyZSBzdWNoIEZhY2lsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IA0KaXR5IE1hbmFnZXIgd2lsbCBoYXZlIGFsbCBoYXJkd2FyZSBhbmQgc29mdHdhcmUgY29ubmVjdGlvbnMgbmVjZXNzYXJ5IGZvciB0aGUgRmFjaWxpdHkgTWFuYWdlciB0byBvcGVyYXRlIHRoZSBTZXBhcmF0ZSBGYWNpbGl0aWVzIHRoYXQgc3VjaCBGYWNpbGl0eSBNYW5hZ2VyIGlzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTQxNjE1ODkgDQpyZXNwb25zaWJsZSBmb3IsIGFuZCBzaGFsbCBhbHNvIGhhdmUgdGhlIHJpZ2h0IHRvIGFjY2VzcyBkYXRhIChzb2xlbHkgd2l0aCByZXNwZWN0IHRvIHRoZSBTaGFyZWQgRmFjaWxpdGllcykgZnJvbSB0aGUgTyZNIEZhY2lsaXRpZXMsIHRvIHRoZSBleHRlbnQgbmVjZXNzYXJ5IHRvIG9wZXJhdGUgc3VjaCBDby1UZW5hbnRccnF1b3RlIHMgU2VwYXJhdGUgRmFjaWxpdGllcy59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgICBUaGUgcHJvdmlzaW9ucyBvZiB0aGlzIEFncmVlbWVudCByZWdhcmRpbmcgc3VjaCBTaGFyZWQgUHJlbWlzZXMgYW5kIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgRmFjaWxpdGllcyBvciBFYXNlbWVudHMgYW5kIENvLVRlbmFuY3kgTWFuYWdlclxycXVvdGUgcyByaWdodCBhbmQgb2JsaWdhdGlvbnMgd2l0fXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjggDQpoIHJlc3BlY3QgdGhlcmV0byBzaGFsbCBub3QgcmVsaWV2ZSB0aGUgRmFjaWxpdHkgTWFuYWdlciBvZiBpdHMgb2JsaWdhdGlvbnMgYW5kIGR1dGllcyBjb250YWluZWQgaW4gYSBGYWNpbGl0eSBNYW5hZ2VtZW50IEFncmVlbWVudCwgYW5kIEZhY2lsaXR5IE1hbmFnZXIgc2hhbGwgcmVtYWluIGZ1bGx5IGxpYWJsZSBmb3IgYWxsIHNlcnZpY2VzIHRvIGJlIHBlcmZvcm1lZCBieSBGYWNpbGl0eSBNYW5hZ2VyIHVuZGVyIHN1DQpjaCBGYWNpbGl0eSBNYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDU3MzI2MTggYWd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkzMTc4MSBlbWVudCBBZ3JlZW1lbnQue1wqXGJrbWtlbmQgX1JlZjQ4MDM1MzcwfXtcKlxia21rZW5kIF9SZWY0ODAzNzQ2OH17XCpcYmtta2VuZCBfVG9jNjAxMzU0OTh9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjEwMTM0MDE3Nn17XCpcYmtta3N0YXJ0IF9SZWYxMDEzNDAyMTV9e1wqXGJrbWtzdGFydCBfUmVmNDgwMzUzNzF9e1wqXGJrbWtzdGFydCBfVG9jNjAxMzU0OTl9e1wqXGJrbWtlbmQgX1JlZjEwMTM0MDE3Nn17XCpcYmtta2VuZCBfUmVmMTAxMzQwMjE1fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNTkgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCANClxiXGNhcHNcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTMxNzgxIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIEFydGljbGUgMTBcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyNTlccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4NzIwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM4XG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcY2Fwc1xmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTMxNzgxIFxsaW5lIElOU1VSQU5DRXtcKlxia21rZW5kIF9SZWY0ODAzNTM3MX17XCpcYmtta2VuZCBfVG9jNjAxMzU0OTl9DQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzYwMTM1NTAwfXtcKlxia21rc3RhcnQgX1JlZjQ4MDM1MzcyfXtcKlxia21rc3RhcnQgX1JlZjQ4MDM3NDY5fXtcKlxia21rc3RhcnQgX1JlZjEwMTMzOTMxN317XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYxIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNjUzNjgzIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDEwLjENClx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczI2MVxxbCBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI2NTM2ODMgSW5zdXJhbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1NTcyNjcyIA0KLiAgV2l0aCB0aGUgZXhjZXB0aW9uIG9mIHdvcmtlcnMgY29tcGVuc2F0aW9uIGluc3VyYW5jZSBhbmQgYXV0b21vYmlsZSBpbnN1cmFuY2UgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMTE0MTczNiBhbmQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQ3Mjk3NyANCnVubGVzcyB0aGUgQ28tVGVuYW50cyBvdGhlcndpc2UgYWdyZWUsIGF0IHRoZSByZXF1ZXN0IG9mIHRoZSBDby19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBUZW5hbnRzIHRoYXQgb3duIGFuIFVuZGl2aWRlZCBJbnRlcmVzdCBpbiB0aGUgU2hhcmVkIFByZW19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIA0KaXNlcyBhbmQgRmFjaX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgLCB0aGUgQWRkaXRpb25hbCBQcmVtaXNlcyBvciBBZGRpdGlvbmFsIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIA0KLCB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIHNoYWxsLCBvbiBiZWhhbGYgb2YgdGhlIENvLVRlbmFudHMsIGFycmFuZ2UgdG8gcHJvY3VyZSBvciBjYXVzZSB0byBiZSBwcm9jdXJlZCB0aGUgY292ZXJhZ2VzIG9mIGluc3VyYW5jZSBvdXRsaW5lZCBiZWxvdyB0byBiZSBwdXQgaW4gcGxhY2UgZm9yIHRoZSBTaGFyZWQgUHJlbWlzZXMgYW5kIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANCiwgdGhlIEFkZGl0aW9uYWwgUHJlbWlzZXMgYW5kIEFkZGl0aW9uYWwgRmFjaWxpdGllcywgYnV0LCBmb3IgdGhlIGF2b2lkYW5jZSBvZiBkb3VidCwgbm90IGFueSBTZXBhcmF0ZSBQcm9qZWN0cyBvciBTZXBhcmF0ZSBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSANCi4gIFRoZSBjb3N0IG9mIGNvbnN0cnVjdGlvbiBwaGFzZSBpbnN1cmFuY2VzIGluIHRoZSBjYXNlIG9mIGNvbnN0cnVjdGlvbiBvZiBhIFN1YnNlcXVlbnQgUHJvamVjdCBzaGFsbCBiZSBwYWlkIGJ5IHRoZSBjb25zdHJ1Y3RpbmcgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgLiAgUmVnYXJkbGVzcyBvZiB3aG8gc2hhbGwgYXJyYW5nZSBmb3IgdGhlIGNvdmVyYWdlIG9mIGluc3VyYW5jZXMsIGFsbCBpbnN1cmFuY2VzIGZvciB0aGUgU2hhcmVkIFByZW1pc2VzIGFuZCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgLCB0aGUgQWRkaXRpb25hbCBQcmVtaXNlcyBhbmQgQWRkaXRpb25hbCBGYWNpbGl0aWVzfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgc2hhbGwgYmUgbWFpbnRhaW5lZCBpbiBhY2NvcmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIGFuY2Ugd2l0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBoIHRoaXMgfQ0Ke1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgICBSRUYgX1JlZjQ4MDM1MzcxIFxcbiBcXGggXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNTAwMzMwMDM3MDAzMTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcY2YxXGluc3JzaWQ3OTQyNjJcY2hhcnJzaWQ3OTQyNjIgQXJ0aWNsZSAxMH19fVxzZWN0ZCBcbHRyc2VjdA0KXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KICBOb3R3aXRoc3RhbmRpbmcgdGhlIGZvcmVnb2luZywgQ28tVGVuYW5jeSBNYW5hZ2VyIG1heSBzZWxmLWluc3VyZSB0byBtZWV0IHRoZSByZXF1aXJlbWVudHMgb2YgdGhpcyB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgICBSRUYgX1JlZjQ4MDM1MzcxIFxcbiBcXGggXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNTAwMzMwMDM3MDAzMTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcY2YxXGluc3JzaWQ3OTQyNjJcY2hhcnJzaWQ3OTQyNjIgQXJ0aWNsZSAxMH19fVxzZWN0ZCBcbHRyc2VjdA0KXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAuICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiB7XCpcYmtta2VuZCBfVG9jNjAxMzU1MDB9DQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzYwMTM1NTAxfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTAuMlx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANCkNvbnN0cnVjdGlvbiBQaGFzZSBJbnN1cn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgYW5jZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMFxzcHYge1wqXGJrbWtlbmQgX1RvYzYwMTM1NTAxfQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY1NDI2OTEzN317XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMTNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgKGEpXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMjYzXHFsIFxmaTE0NDBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgyMTYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM4XGlsdmwyXG91dGxpbmVsZXZlbDJcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxkYmNoXGFmMTNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgQnVpbGRlclxoaWNoXGYwIFxycXVvdGUgXGxvY2hcZjAgcyBBbFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCBsLVJpc2sgSW5zdXJhbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSANClxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCANCi4gIER1cmluZyBhbnkgY29uc3RydWN0aW9uIGVhY2ggQ28tVGVuYW50IChpbiB0aGUgY2FzZSBvZiBjb25zdHJ1Y3Rpb24gb2YgYSBTdWJzZXF1ZW50IFByb2plY3QpIGFuZCB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIGFzIHRoZSBjYXNlIG1heSBiZSAoaW4gdGhlIGNhc2Ugb2YgY29uc3RydWN0aW9uIG9uIGFuIEltcGxlbWVudGVkIFByb2plY3QpLCBzaGFsbCBwcm9jdXJlIG9yIGNhdXNlIHRvIGJlIHByb2N1cmVkLCBhbg0KXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIGQgbWFpbnRhaW4gb3IgY2F1c2UgdG8gYmUgbWFpbnRhaW5lZCwgYXQgaXRzIHNvbGUgY29zdCBhbmQgZXhwZW5zZSBidWlsZGVyXGhpY2hcZjAgXHJxdW90ZSBcbG9jaFxmMCANCnMgYWxsLXJpc2sgaW5zdXJhbmNlIGluIGFuIGFtb3VudCAoaSkgc3VmZmljaWVudCB0byByZXBsYWNlIGFueSBuZXcgb3IgZXhpc3RpbmcgU2hhcmVkIEZhY2lsaXRpZXMgb3IgQWRkaXRpb25hbCBGYWNpbGl0aWVzIHdoaWNoIGFyZSBzdWJqZWN0IHRvIHN1Y2ggY29uc3RydWN0aW9uLCBhbmQgKGlpKSB0aGF0IGlzIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCByXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIA0KZWFzb25hYmx5IGFjY2VwdGFibGUgdG8gdGhlIENvLVRlbmFudCBwZXJmb3JtaW5nIGNvbnN0cnVjdGlvbi4gIFN1Y2ggcG9saWNpZXMgc2hhbGwgbmFtZSB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIGFuZCBlYWNoIG9mIHRoZSBvdGhlciBDby1UZW5hbnRzIChhbmQsIHVwb24gdGhlIHdyaXR0ZW4gcmVxdWVzdCBvZiBhIENvLVRlbmFudCwgc3VjaCBDby1UZW5hbnRzIG1lbWJlcnMgb3IgU2VjdXJlZCBQYXJ0aWVzKSBhcyBhZGRpdGlvbmFsIG5hbWVkDQpcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCBpbnN1cmVkcy4gIElmIHRoZSBDby1UZW5hbnRzIGRvIG5vdCByZXF1ZXN0IENvLVRlbmFuY3kgTWFuYWdlciB0byBwcm9jdXJlIG9yIGNhdXNlIHRvIGJlIHByb2N1cmVkIHRoZSBpbnN1cmFuY2UgZGVzY3JpYmVkIGluIHRoaXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGRiY2hcYWYxM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCBTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGRiY2hcYWYxM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCAgUkVGIF9SZWY1NDI2OTEzNyBcXHcgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxkYmNoXGFmMTNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzUwMDM0MDAzMjAwMzYwMDM5MDAzMTAwMzMwMDM3MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGRiY2hcYWYxM1xpbnNyc2lkNzk0MjYyXGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgMTAuMihhKX19fVxzZWN0ZCBcbHRyc2VjdFxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGRiY2hcYWYxM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCAsIGVhY2ggQ28tVGVuYW50IHNoYWxsIGJlIHJlc3BvbnNpYmxlIGZvciBhbmQgc2hhbGwgcGF5IGl0cyAoQSkgT3BlcmF0aW9uYWwgUHJvLVJhdFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCANCmEgU2hhcmUgb2YgYW55IHByb3BlcnR5IGRhbWFnZSB0byB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgdGhhdCBpcyBub3QgdGhlIHJlc3BvbnNpYmlsaXR5IG9mIHRoZSBDby1UZW5hbnQgdGhhdCBjYXVzZWQgdGhlIGRhbWFnZSBwdXJzdWFudCB0byB0aGlzIEFncmVlbWVudCBvciAoQikgQWRkaXRpb25hbCBQcmVtaXNlcyBhbmQgRmFjaWxpdGllcyBQcm8tUmF0YSBTaGFyZSBvZiBhbnkgcHJvcGVydHkgZGFtYWdlIHRvIHRoZSBBZGRpdGlvbmFsIEZhYw0KXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIGlcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgbGl0aWVzIHRoYXQgaXMgbm90IHRoZSByZXNwb25zaWJpbGl0eSBvZiB0aGUgQ28tVGVuYW50IHRoYXQgY2F1c2VkIHRoZSBkYW1hZ2UgcHVyc3VhbnQgdG8gdGhpcyBBZ3JlZW1lbnQue1wqXGJrbWtlbmQgX1JlZjU0MjY5MTM3fSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDI0NDkzNTIgDQoNClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNTQyNjkxODR9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjEzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUwNTA2ODEgXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIChiKVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGRiY2hcYWYxM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCBHZW5lcmFsIExpYWJpbGl0eSBJbnN1cmFuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCANCi4gIFRoZSBDby1UZW5hbmN5IE1hbmFnZXIgc2hhbGwgcHJvY3VyZSBvciBjYXVzZSB0byBiZSBwcm9jdXJlZCwgYW5kIG1haW50YWluIG9yIGNhdXNlIHRvIGJlIG1haW50YWluZWQgY29tbWVyY2lhbCBnZW5lcmFcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgDQpsIGxpYWJpbGl0eSBpbnN1cmFuY2UgY292ZXJpbmcgdGhlIHJlc3BlY3RpdmUgYWN0aXZpdGllcyBvZiB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIG9uIHRoZSBzaXRlIG9mIHRoZSBvd25lZCBQcm9qZWN0cywgdGhlIFNoYXJlZCBQcmVtaXNlcyBvciBBZGRpdGlvbmFsIFByZW1pc2VzLiAgRWFjaCBDby1UZW5hbnQgc2hhbGwgcHJvY3VyZSBvciBjYXVzZSB0byBiZSBwcm9jdXJlZCwgYW5kIG1haW50YWluIG9yIGNhdXNlIHRvIGJlIG1haW50YWluZWQNClxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCAgXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIGNvbW1lcmNpYWwgZ2VuZXJhbCBsaWFiaWxpdHkgaW5zdXJhbmNlIGNvdmVyaW5nIHN1Y2ggQ28tVGVuYW50XGhpY2hcZjAgXHJxdW90ZSBcbG9jaFxmMCBzIG93bmVkIFByb2plY3QgYW5kIHN1Y2ggQ28tVGVuYW50XGhpY2hcZjAgXHJxdW90ZSBcbG9jaFxmMCBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQogYWN0aXZpdGllcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCBvbiB0aGUgc2l0ZSBvZiBhbnkgb3RoZXIgQ28tVGVuYW50XGhpY2hcZjAgXHJxdW90ZSBcbG9jaFxmMCANCnMgUHJvamVjdCwgdGhlIFNoYXJlZCBQcmVtaXNlcyBvciBBZGRpdGlvbmFsIFByZW1pc2VzLiAgU3VjaCBjb3ZlcmFnZSBzaGFsbCAoaSkgaGF2ZSBhIG1pbmltdW0gbGltaXRhdGlvbiBvZiB9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcZGJjaFxhZjEzXGluc3JzaWQxNzg5ODYyXGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgW1xoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCBSRURBQ1RFRF19ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUwNTA2ODEgXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIA0KLCBwcm92aWRlZCB0aGF0IHN1Y2ggYW1vdW50IG1heSBiZSBwcm92aWRlZCBhcyBwYXJ0IG9mIGEgYmxhbmtldCBwb2xpY3kgY292ZXJpbmcgb3RoZXIgcHJvcGVydGllcyBvd25lZCBieSBBZmZpbGlhdGVzIG9mIHRoZSBDby1UZW5hbmN5IE1hbmFnZXIsIChpaSkgY29udGFpbiBhIGJsYW5rZXQgYnJvYWQgZm9ybSBjb250cmFjdHVhbCBlbmRvcnNlbWVudCBhbmQgc2V2ZXJhYmlsaXR5IG9mIGludGVyZXN0IGNsYXVzZSwgYW5kIChpaQ0KXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIFxoaWNoXGYwIGkpIHVwb24gdGhlIHdyaXR0ZW4gcmVxdWVzdCBvZiBhIENvLVRlbmFudCwgZGVzaWduYXRlIHRoZSBTZWN1cmVkIFBhcnRpZXMsIGFuZCB0aGVpciByZXNwZWN0aXZlIG9mZmljZXJzLCBkaXJlY3RvcnMsIGVtcGxveWVlcyBhbmQgYWdlbnRzIGFzIGFkZGl0aW9uYWwgaW5zdXJlZHMuICBGdXJ0aGVybW9yZSwgaWYgYSBwb2xpY3kgaXMgb24gYSBcJzkzXGxvY2hcZjAgXGhpY2hcZjAgDQpjbGFpbXMgbWFkZVwnOTRcbG9jaFxmMCAgYmFzaXMsIHN1Y2ggY292ZXJhZ2Ugc2hhbGwgc3Vydml2ZSB0aGUgdGVybWluXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIGFcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgXGhpY2hcZjAgDQp0aW9uIG9mIHRoaXMgQWdyZWVtZW50IHVudGlsIHRoZSBleHBpcmF0aW9uIG9mIHRoZSBtYXhpbXVtIHN0YXR1dG9yeSBwZXJpb2Qgb2YgbGltaXRhdGlvbnMgaW4gdGhlIFN0YXRlIG9mIERlbGF3YXJlIGZvciBhY3Rpb25zIGJhc2VkIG9uIGNvbnRyYWN0IG9yIGluIHRvcnQuICBJZiBjb3ZlcmFnZSBpcyBvbiBhbiBcJzkzXGxvY2hcZjAgXGhpY2hcZjAgb2NjdXJyZW5jZVwnOTRcbG9jaFxmMCANCiBiYXNpcywgaW5zdXJhbmNlIG9uIGFuIG9jY3VycmVuY2UgYmFzaXMgc2hhbGwgYmUgbWFpbnRhaW5lZCBmb1xoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCByXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwICB0aGUgdGVybSBvZiB0aGlzIEFncmVlbWVudC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDI0NDkzNTIge1wqXGJrbWtlbmQgX1JlZjU0MjY5MTg0fQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMTNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgKGMpXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGRiY2hcYWYxM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIA0KXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIFdvcmtlcnMgQ29tcGVuc2F0aW9uIEluc3VyYW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUwNTA2ODEgXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIA0KLiAgVG8gdGhlIGV4dGVudCB0aGVyZSBhcmUgZW1wbG95ZWVzLCBlYWNoIENvLVRlbmFudCBvciB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIGFzIHRoZSBjYXNlIG1heSBiZSBzaGFsbCBpbmRlcGVuZGVudGx5IG9idGFpbiBhbmQgbWFpbnRhaW4gYXBwcm9wcmlhdGUgd29ya2VycyBjb21wZW5zYXRpb24gaW5zdXJhbmNlIHRvIHByb3ZpZGUgbWluaW1caGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgDQp1bSBjb3ZlcmFnZSB0byBjb21wbHkgd2l0aCBhbnkgc3RhdHV0b3J5IG9ibGlnYXRpb24gaW1wb3NlZCBieSB3b3JrZXJzIGNvbXBlbnNhdGlvbiBvciBvY2N1cGF0aW9uYWwgZGlzZWFzZSBsYXdzLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjQ0OTM1MiANClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNTQyNjkxODl9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTUzMzI3OCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoZClcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTUzMzI3OCANCkVtcGxveWVycyBMaWFiaWxpdHkgSW5zdXJhbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgLiAgVG8gdGhlIGV4dGVudCB0aGVyZSBhcmUgZW1wbG95ZWVzLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCANCmVhY2ggQ28tVGVuYW50IG9yIHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgYXMgdGhlIGNhc2UgbWF5IGJlLCBzaGFsbCBpbmRlcGVuZFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCBlbnRseSBvYnRhaW4gYW5kIG1haW50YWluIGFwcHJvcHJpYXRlIGVtcGxveWVyXGhpY2hcZjAgXHJxdW90ZSBcbG9jaFxmMCBzIGxpYWJpbGl0eSBpbnN1cmFuY2UuICBTdWNoIGNvdmVyYWdlIHNoYWxsIGhhdmUgKGkpIGEgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBtaW5pbXVtIGxpbWl0YXRpb24gfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNzg5ODYyIFtSRURBQ1RFRF19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAgcGVyIGVtcGxveWVlIGZvciBib2RpbHkgaW5qdXJ5IGJ5IGRpc2Vhc2Uue1wqXGJrbWtlbmQgX1JlZjU0MjY5MTg5fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY1NDI2OTE5M317XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMTNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgKGUpXHRhYn19e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgDQpcdWxcY2YxXGRiY2hcYWYxM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCBBdXRvbW9iaWxlIExpYWJpbGl0eSBJbnN1cmFuY2V9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMTNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgLiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGRiY2hcYWYxM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCBFYWNoIENvLVRlbmFudCBvciBDby1UZW5hbmN5IE1hbmFnZXIgYXMgdGhlIGNhc2VcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgDQogbWF5IGJlLCBzaGFsbCBwcm9jdXJlIG9yIGNhdXNlIHRvIGJlIHByb2N1cmVkLCBhbmQgbWFpbnRhaW4gb3IgY2F1c2UgdG8gYmUgbWFpbnRhaW5lZCBhdXRvbW9iaWxlIGxpYWJpbGl0eSBpbnN1cmFuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDQ5NDI3MzEgIGFnYWluc3QgY2xhaW1zIGZvciBwZXJzb25hbCBpbmp1cnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIwNTc5MzEgKGluY2x1ZGluZyBib2RpbHkgaW5qdXJ5IGFuZCBkZWF0aCkgYW5kIHByb3BlcnR5IGRhbWFnZSBjb3ZlcmluZyBhbGwgb3duZWQsIGxlYXNlZCBub24tb3duZWQgYW5kIGhpcmVkIG1vdG9yIHZlaGljbGVzLCBpbmNsdWRpbmcgbG9hZGluZyBhbmQgdW5sb2FkaW5nfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAuICBTdWNoIGNvdmVyYWdlIHNoYWxsIGhhdmUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMDU3OTMxIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAgbWluaW11bSBsaW1pdGF0aW9uIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIwNTc5MzEgIH17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxkYmNoXGFmMTNcaW5zcnNpZDE3ODk4NjJcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCBbUkVEQUNURURdfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMDU3OTMxIHBlciBvY2N1cnJlbmNlIGZvciBjb21iaW5lZCBib2RpbHkgaW5qdXJ5IGFuZCBwcm9wZXJ0eSBkYW1hZ2UgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgIHNoYWxsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMDU3OTMxICB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IGNvbnRhaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIwNTc5MzEgIGFwcHJvcHJpYXRlIG5vLWZhdWx0IGluc3VyYW5jZSwgd2hlcmV2ZXIgYXBwbGljYWJsZS59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDc4NzQ3NzggDQp7XCpcYmtta2VuZCBfUmVmNTQyNjkxOTN9DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoZilcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IFBvbGx1dGlvbiBMaWFiaWxpdHkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIwNTc5MzEgSW5zdXJhbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgLiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgRX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KYWNoIENvLVRlbmFudCBvciBDby1UZW5hbmN5IE1hbmFnZXIsIGFzIHRoZSBjYXNlIG1heSBiZSwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgc2hhbGwgcHJvY3VyZSBvciBjYXVzZSB0byBiZSBwcm9jdXJlZCwgYW5kIG1haW50YWluIG9yIGNhdXNlIHRvIGJlIG1haW50YWluZWQgcH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMDU3OTMxIG9sbHV0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgIGxpYWJpbGl0eSBpbnN1cmFuY2UuICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCANClN1Y2ggY292ZXJhZ2Ugc2hhbGwgaGF2ZSBhIG1pbmltdW0gbGltaXRhdGlvbiBvZiB9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcZGJjaFxhZjEzXGluc3JzaWQxNzg5ODYyXGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgW1JFREFDVEVEXX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUwNTA2ODEgDQpcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgIGluIHRoZSBhblxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCBudWFsIGFnZ3JlZ2F0ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KLiAgU3VjaCBpbnN1cmFuY2Ugd2lsbCBjb3ZlciBzdWRkZW4gYW5kIGFjY2lkZW50YWwgcG9sbHV0aW9uIGxvc3NlcyBhcmlzaW5nIGZyb20gdGhlIHNlcnZpY2VzIHBlcmZvcm1lZCB1bmRlciB0aGlzIEFncmVlbWVudCBhbmQgaW5jbHVkZSBjb21wbGV0ZWQgb3BlcmF0aW9ucyBjb3ZlcmFnZSwgb3IgaWYgd3JpdHRlbiBvbiBhIGNsYWltcyBtYWRlIGJhc2lzLCB0aGUgcG9saWN5IHNoYWxsIGJlIG1haW50YWluZWQgZm9yIGENCnQgbGVhc3QgdGhyZWUgKDMpIHllYXJzIGZvbGxvd2luZyBjb21wbGV0aW9uIG9mIGFueSBjb25zdHJ1Y3Rpb24uICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE0ODEyNjgxIA0KU3VjaCBjb3ZlcmFnZSBtYXkgYmUgaW5jbHVkZWQgaW4gdGhlIENvbW1lcmNpYWwgR2VuZXJhbCBMaWFiaWxpdHkgcG9saWN5IG9yIHByb3ZpZGVkIHVuZGVyIGEgc2VwYXJhdGUgUG9sbHV0aW9uIExpYWJpbGl0eSBwb2xpY3kufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ0NDYzMTAxIA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGcpXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCBFeGNlc3MgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEzMzI5NzQgTGlhYmlsaXR5IEluc3VyYW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IC4gIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUwNTA2ODEgXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIEV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0IGFjaCBDby1UZW5hbnQgb3IgQ28tVGVuYW5jeSBNYW5hZ2VyLCBhcyB0aGUgY2FzZSBtYXkgYmUsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUwNTA2ODEgXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIHNoYWxsIHByb2N1cmUgb3IgY2F1c2UgdG8gYmUgcHJvY3VyZWQsIGFuZCBtYWludGFpbiBvciBjYXVzZSB0byBiZSBtYWludGFpbmVkIH0NCntccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDQ2MzEwMSB4Y2Vzc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICBsaWFiaWxpdHkgaW5zdXJhbmNlIGNvdmVyaW5nIGNsYWltcyBpbiBleGNlc3Mgb2YgdGhlIHVuZGVybHlpbmcgaW5zdXJhbmNlIGRlc2NyaWJlZCBpbiB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDQ2MzEwMSBTZWN0aW9ucyB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgIFJFRiBfUmVmNTQyNjkxODQgXFx3IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNTAwMzQwMDMyMDAzNjAwMzkwMDMxMDAzODAwMzQwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ3OTQyNjIgMTAuMihiKX19fVxzZWN0ZCBcbHRyc2VjdA0KXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAsIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCAgUkVGIF9SZWY1NDI2OTE4OSBcXHcgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM1MDAzNDAwMzIwMDM2MDAzOTAwMzEwMDM4MDAzOTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDc5NDI2MiAxMC4yKGQpfX19XHNlY3RkIFxsdHJzZWN0DQpccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICBhbmQgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0ICBSRUYgX1JlZjU0MjY5MTkzIFxcdyBcXGggfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzUwMDM0MDAzMjAwMzYwMDM5MDAzMTAwMzkwMDMzMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNzk0MjYyIDEwLjIoZSl9fX1cc2VjdGQgXGx0cnNlY3QNClxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgIHdpdGggYSBtaW5pbXVtIGxpbWl0YXRpb24gb2YgfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNzg5ODYyIFtSRURBQ1RFRF19e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIwNTc5MzEgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzYwMTM1NTAyfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDEwLjNcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyNjFccWwgXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIE9wZXJhdGlvbmFsIFBoYXNlIEluc3VyYW5jZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDExMjkwNzEyIC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MlxzcHYge1wqXGJrbWtlbmQgX1RvYzYwMTM1NTAyfQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY1NDI2OTIyMX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMTNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgKGEpXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMjYzXHFsIFxmaTE0NDBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgyMTYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM4XGlsdmwyXG91dGxpbmVsZXZlbDJcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxkYmNoXGFmMTNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgUHJvcGVydHkgRGFtYWdlIEluc3VyYW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUwNTA2ODEgXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIA0KLiAgQXQgdGhlIHJlcXVlc3Qgb2YgdGhlIENvLVRlbmFudHMsIGR1cmluZyBvcGVyYXRpb25zIHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgc2hhbGwsIG9uIGJlaGFsZlxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCANCiBvZiB0aGUgQ28tVGVuYW50cywgcHJvY3VyZSBvciBjYXVzZSB0byBiZSBwcm9jdXJlZCwgYW5kIG1haW50YWluIG9yIGNhdXNlIHRvIGJlIG1haW50YWluZWQgcHJvcGVydHkgZGFtYWdlIGluc3VyYW5jZSBpbiBhbiBhbW91bnQgKGkpIHN1ZmZpY2llbnQgdG8gcmVwbGFjZSBhbnkgZXhpc3RpbmcgU2hhcmVkIEZhY2lsaXRpZXMgb3IgQWRkaXRpb25hbCBGYWNpbGl0aWVzIHRoYXQgbWF5IGJlIGFmZmVjdGVkIGJ5IGEgbG9zcywgYW5kIChpaSkgdA0KXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIGhcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgDQphdCBpcyByZWFzb25hYmx5IGFjY2VwdGFibGUgdG8gdGhlIENvLVRlbmFudHMuICBTdWNoIHBvbGljaWVzIHNoYWxsIG5hbWUgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBhbmQgZWFjaCBvZiB0aGUgb3RoZXIgQ28tVGVuYW50cyBhcyBuYW1lZCBpbnN1cmVkcywgYW5kIHVwb24gdGhlIHdyaXR0ZW4gcmVxdWVzdCBvZiBhIENvLVRlbmFudCBpdHMgU2VjdXJlZCBQYXJ0aWVzLCBhcyBhZGRpdGlvbmFsIGluc3VyZWRzLiAgSWYgdGhlIENvLVRlbmFudHMNClxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCAgXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIGRvIG5vdCByZXF1ZXN0IENvLVRlbmFuY3kgTWFuYWdlciB0byBwcm9jdXJlIG9yIGNhdXNlIHRvIGJlIHByb2N1cmVkIHRoZSBpbnN1cmFuY2UgZGVzY3JpYmVkIGluIHRoaXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxkYmNoXGFmMTNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSANClxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCBTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGRiY2hcYWYxM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCAgUkVGIF9SZWY1NDI2OTIyMSBcXHcgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxkYmNoXGFmMTNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzUwMDM0MDAzMjAwMzYwMDM5MDAzMjAwMzIwMDMxMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGRiY2hcYWYxM1xpbnNyc2lkNzk0MjYyXGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgMTAuMyhhKX19fVxzZWN0ZCBcbHRyc2VjdFxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGRiY2hcYWYxM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCAsIGVhY2ggQ28tVGVuYW50IHNoYWxsIGJlIHJlc3BvbnNpYmxlIGZvciBhbmQgc2hhbGwgcGF5IGl0cyAoQSkgT3BlcmF0aW9uYWwgUHJvLVJhdGEgU2hhcmUgb2YgYW55IHByb3BlcnR5IGRhbWFnXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIA0KZSB0byB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgdGhhdCBpcyBub3QgdGhlIHJlc3BvbnNpYmlsaXR5IG9mIHRoZSBDby1UZW5hbnQgdGhhdCBjYXVzZWQgdGhlIGRhbWFnZSBwdXJzdWFudCB0byB0aGlzIEFncmVlbWVudCBvciAoQikgQWRkaXRpb25hbCBQcmVtaXNlcyBhbmQgRmFjaWxpdGllcyBQcm8tUmF0YSBTaGFyZSBvZiBhbnkgcHJvcGVydHkgZGFtYWdlIHRvIHRoZSBBZGRpdGlvbmFsIEZhY2lsaXRpZXMgdGhhdCBpcyBub3QgdGhlIHJlc3BvDQpcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgblxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCBzaWJpbGl0eSBvZiB0aGUgQ28tVGVuYW50IHRoYXQgY2F1c2VkIHRoZSBkYW1hZ2UgcHVyc3VhbnQgdG8gdGhpcyBBZ3JlZW1lbnQue1wqXGJrbWtlbmQgX1JlZjU0MjY5MjIxfSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjQ0OTM1MiANClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNTQyNjkyNTN9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjEzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUwNTA2ODEgXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIChiKVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGRiY2hcYWYxM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCBHZW5lcmFsIExpYWJpbGl0eSBJbnN1cmFuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCANCi4gIFRoZSBDby1UZW5hbmN5IE1hbmFnZXIgc2hhbGwgcHJvY3VyZSBvciBjYXVzZSB0byBiZSBwcm9jdXJlZCwgYW5kIG1haW50YWluIG9yIGNhdXNlIHRvIGJlIG1haW50YWluZWQgY29tbWVyY2lhbCBnZW5lcmFsIGxpYWJpbGl0eSBpbnN1cmFuY2UgY292ZXJpbmdcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgDQogdGhlIHJlc3BlY3RpdmUgYWN0aXZpdGllcyBvZiB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIG9uIHRoZSBzaXRlIG9mIHRoZSBvd25lZCBQcm9qZWN0cywgdGhlIFNoYXJlZCBQcmVtaXNlcyBvciBBZGRpdGlvbmFsIFByZW1pc2VzLiAgRWFjaCBvZiB0aGUgQ28tVGVuYW50cyBzaGFsbCBwcm9jdXJlIG9yIGNhdXNlIHRvIGJlIHByb2N1cmVkLCBhbmQgbWFpbnRhaW4gb3IgY2F1c2UgdG8gYmUgbWFpbnRhaW5lZCBjb21tZXJjaWFsIGdlbmVyYWwgbGkNClxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCBhXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIGJpbGl0eSBpbnN1cmFuY2UgY292ZXJpbmcgc3VjaCBDby1UZW5hbnRcaGljaFxmMCBccnF1b3RlIFxsb2NoXGYwIHMgb3duZWQgUHJvamVjdCBhbmQgc3VjaCBDby1UZW5hbnRcaGljaFxmMCBccnF1b3RlIFxsb2NoXGYwIHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAgYWN0aXZpdGllcyB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUwNTA2ODEgXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIG9uIHRoZSBzaXRlIG9mIGFueSBvdGhlciBDby1UZW5hbnRcaGljaFxmMCBccnF1b3RlIFxsb2NoXGYwIA0KcyBQcm9qZWN0LCB0aGUgU2hhcmVkIFByZW1pc2VzIG9yIEFkZGl0aW9uYWwgUHJlbWlzZXMuICBTdWNoIGNvdmVyYWdlIHNoYWxsIChpKSBoYXZlIGEgbWluaW11bSBsaW1pdGF0aW9uIG9mIH17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxkYmNoXGFmMTNcaW5zcnNpZDE3ODk4NjJcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCBbUkVEQUNURURdfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCAsIHByb3ZpZGVkIHRoXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIA0KYXQgc3VjaCBhbW91bnQgbWF5IGJlIHByb3ZpZGVkIGFzIHBhcnQgb2YgYSBibGFua2V0IHBvbGljeSBjb3ZlcmluZyBvdGhlciBwcm9wZXJ0aWVzIG93bmVkIGJ5IEFmZmlsaWF0ZXMgb2YgdGhlIENvLVRlbmFuY3kgTWFuYWdlciwgKGlpKSBjb250YWluIGEgYmxhbmtldCBicm9hZCBmb3JtIGNvbnRyYWN0dWFsIGVuZG9yc2VtZW50IGFuZCBzZXZlcmFiaWxpdHkgb2YgaW50ZXJlc3QgY2xhdXNlLCBhbmQgKGlpaSkgdXBvbiB0aGUgd3JpdHRlbiByDQpcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgZVxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCBxdWVzdCBvZiBhIENvLVRlbmFudCwgaXRzIFNlY3VyZWQgUGFydGllcywgYW5kIHRoZWlyIHJlc3BlY3RpdmUgb2ZmaWNlcnMsIGRpcmVjdG9ycywgZW1wbG95ZWVzIGFuZCBhZ2VudHMgYXMgYWRkaXRpb25hbCBpbnN1cmVkcy57XCpcYmtta2VuZCBfUmVmNTQyNjkyNTN9IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyNDQ5MzUyIA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMTNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgKGMpXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGRiY2hcYWYxM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIA0KXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIFdvcmtlcnMgQ29tcGVuc2F0aW9uIEluc3VyYW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUwNTA2ODEgXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIC4gIFRvIHRoZSBleHRlbnQgdGhlcmUgYXJlIGVtcGxveWVlcywgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBhbmQgZWFjaCBvZiB0aGUgQ28tVGVuYW50cyBzaGFsbCBpDQpcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgbmRlcGVuZGVudGx5IG9idGFpbiBhbmQgbWFpbnRhaW4gYXBwcm9wcmlhdGUgd29ya2VycyBjb21wZW5zYXRpb24gaW5zdXJhbmNlIHRvIHByb3ZpZGUgbWluaW11bSBjb3ZlcmFnZSB0byBjb21wbHkgd2l0aCBhbnkgc3RhdHV0b3J5IG9ibGlnYXRpb24gaW1wb3NlZCBieSB3b3JrZXJzIGNvbXBlbnNhdGlvbiBvciBvY2N1cGF0aW9uYWwgZGlzZWFzZSBsYXdzLn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyNDQ5MzUyIA0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY1NDI2OTI1OX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNjUzMTg2MiBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoZClcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTY1MzE4NjIgDQpFbXBsb3llcnMgTGlhYmlsaXR5IEluc3VyYW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IC4gIFRvIHRoZSBleHRlbnQgdGhlcmUgYXJlIGVtcGxveWVlcywgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgDQplYWNoIENvLVRlbmFudCBvciB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIGFzIHRoZSBjYXNlIG1heSBiZSwgc2hhbGwgaW5kZXBlbmRlbnRseSBvYnRhaW4gYW5kIG1haW50YWluIGFwcHJvcHJpYXRlIGVtcGxveWVycyBsaWFiaWxpdHkgaW5zdXJhbmNlLiAgU3VjaCBjb3ZlcmFnZSBzaGFsbCBoYXZlIChpKSBhIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IG1pbmltdW0gbGltaXRhdGlvbiBvZiBhdCBsZWFzdCANCn17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxkYmNoXGFmMTNcaW5zcnNpZDE3ODk4NjJcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCBbUkVEQUNURURdfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDQgcGVyIGFjY2lkZW50IGZvciBhbnkgYm9kaWx5IGluanVyeSBieSBhY2NpZGVudCBhbmQgKGlpKSBhIG1pbmltdW0gbGltaXRhdGlvbiBvZiB9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE3ODk4NjIgW1JFREFDVEVEXX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUwNTA2ODEgDQpcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IHBlciBlbXBsb3llZSBmb3IgYm9kaWx5IGluanVyeSBieSBkaXNlYXNlLntcKlxia21rZW5kIF9SZWY1NDI2OTI1OX0gDQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjU0MjY5MjYwfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYxM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCAoZSlcdGFifX17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCANClx1bFxjZjFcZGJjaFxhZjEzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUwNTA2ODEgXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIEF1dG9tb2JpbGUgTGlhYmlsaXR5IEluc3VyYW5jZX17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYxM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCAuICBFfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGRiY2hcYWYxM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCBhY2ggQ28tVGVuYW50IG9yIENvLVRlbmFuY3kgTWFuYWdlciBhcyB0aGUgY2FzZSBtYXkgYmUsIHNoYWxsIHByb2N1cmUgb3IgY2F1c2UgdG8gYmUgcHJvY3VyZWQsIGFuZCBtYWludGFpbiBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgDQpvciBjYXVzZSB0byBiZSBtYWludGFpbmVkIGF1dG9tb2JpbGUgbGlhYmlsaXR5IGluc3VyYW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDk0MjczMSAgYWdhaW5zdCBjbGFpbXMgZm9yIHBlcnNvbmFsIGluanVyeX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjA1NzkzMSAoaW5jbHVkaW5nIGJvZGlseSBpbmp1cnkgYW5kIGRlYXRoKSBhbmQgcHJvcGVydHkgZGFtYWdlIGNvdmVyaW5nIGFsbCBvd25lZCwgbGVhc2VkIG5vbi1vd25lZCBhbmQgaGlyZWQgbW90b3IgdmVoaWNsZXMsIGluY2x1ZGluZyBsb2FkaW5nIGFuZCB1bmxvYWRpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAuICBTdWNoIGNvdmVyYQ0KZ2Ugc2hhbGwgaGF2ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIwNTc5MzEgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICBtaW5pbXVtIGxpbWl0YXRpb24gb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIwNTc5MzEgIH17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCANClxiXGRiY2hcYWYxM1xpbnNyc2lkMTc4OTg2MlxjaGFycnNpZDUwNTA2ODEgXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIFtSRURBQ1RFRF19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMDU3OTMxIA0KcGVyIG9jY3VycmVuY2UgZm9yIGNvbWJpbmVkIGJvZGlseSBpbmp1cnkgYW5kIHByb3BlcnR5IGRhbWFnZSBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAgc2hhbGx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIwNTc5MzEgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IGNvbnRhaW59e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjA1NzkzMSAgYXBwcm9wcmlhdGUgbm8tZmF1bHQgaW5zdXJhbmNlLCB3aGVyZXZlciBhcHBsaWNhYmxlLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTY1MzE4NjIge1wqXGJrbWtlbmQgX1JlZjU0MjY5MjYwfQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGYpXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCBQb2xsdXRpb24gTGlhYmlsaXR5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMDU3OTMxIEluc3VyYW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IC4gIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUwNTA2ODEgXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIEV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANCmFjaCBDby1UZW5hbnQgb3IgQ28tVGVuYW5jeSBNYW5hZ2VyLCBhcyB0aGUgY2FzZSBtYXkgYmUsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUwNTA2ODEgXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIHNoYWxsIHByb2N1cmUgb3IgY2F1c2UgdG8gYmUgcHJvY3VyZWQsIGFuZCBtYWludGFpbiBvciBjYXVzZSB0byBiZSBtYWludGFpbmVkIHB9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjA1NzkzMSBvbGx1dGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICBsaWFiaWxpdHkgaW5zdXJhbmNlLiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgDQpTdWNoIGNvdmVyYWdlIHNoYWxsIGhhdmUgYSBtaW5pbXVtIGxpbWl0YXRpb24gb2YgfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXGRiY2hcYWYxM1xpbnNyc2lkMTc4OTg2MlxjaGFycnNpZDUwNTA2ODEgXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIFtSRURBQ1RFRF19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANCi4gIFN1Y2ggaW5zdXJhbmNlIHdpbGwgY292ZXIgc3VkZGVuIGFuZCBhY2NpZGVudGFsIHBvbGx1dGlvbiBsb3NzZXMgYXJpDQpzaW5nIGZyb20gdGhlIHNlcnZpY2VzIHBlcmZvcm1lZCB1bmRlciB0aGlzIEFncmVlbWVudCBhbmQgaW5jbHVkZSBjb21wbGV0ZWQgb3BlcmF0aW9ucyBjb3ZlcmFnZSwgb3IgaWYgd3JpdHRlbiBvbiBhIGNsYWltcyBtYWRlIGJhc2lzLCB0aGUgcG9saWN5IHNoYWxsIGJlIG1haW50YWluZWQgZm9yIGF0IGxlYXN0IHRocmVlICgzKSB5ZWFycyBmb2xsb3dpbmcgdGhlIHRlcm1pbmF0aW9uIG9mIHRoaXMgQWdyZWVtZW50LiAgfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE0ODEyNjgxIFN1Y2ggY292ZXJhZ2UgbWF5IGJlIGluY2x1ZGVkIGluIHRoZSBDb21tZXJjaWFsIEdlbmVyYWwgTGlhYmlsaXR5IHBvbGljeSBvciBwcm92aWRlZCB1bmRlciBhIHNlcGFyYXRlIFBvbGx1dGlvbiBMaWFiaWxpdHkgcG9saWN5Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDQ2MzEwMSANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChnKVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgRXhjZXNzIExpYWJpbGl0eSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA2NzcxNyBJbnN1cmFuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAuICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCBFfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQphY2ggQ28tVGVuYW50IG9yIENvLVRlbmFuY3kgTWFuYWdlciwgYXMgdGhlIGNhc2UgbWF5IGJlLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCBzaGFsbCBwcm9jdXJlIG9yIGNhdXNlIHRvIGJlIHByb2N1cmVkLCBhbmQgbWFpbnRhaW4gb3JcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgDQogY2F1c2UgdG8gYmUgbWFpbnRhaW5lZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ0NDYzMTAxIHhjZXNzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQogbGlhYmlsaXR5IGluc3VyYW5jZSBjb3ZlcmluZyBjbGFpbXMgaW4gZXhjZXNzIG9mIHRoZSB1bmRlcmx5aW5nIGluc3VyYW5jZSBkZXNjcmliZWQgaW4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ0NDYzMTAxIFNlY3Rpb25zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0ICBSRUYgX1JlZjU0MjY5MjUzIFxcdyBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM1MDAzNDAwMzIwMDM2MDAzOTAwMzIwMDM1MDAzMzAwMDAwMH19fXtcZmxkcnNsdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNzk0MjYyIDEwLjMoYil9fX1cc2VjdGQgXGx0cnNlY3RccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICwgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgIFJFRiBfUmVmNTQyNjkyNTkgXFx3IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzUwMDM0MDAzMjAwMzYwMDM5MDAzMjAwMzUwMDM5MDAwMDAwfX19e1xmbGRyc2x0IHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ3OTQyNjIgMTAuMyhkKX19fVxzZWN0ZCBcbHRyc2VjdFxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MTIwODExICBhbmQgfXtcZmllbGR7XCpcZmxkaW5zdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgIFJFRiBfUmVmNTQyNjkyNjAgXFx3IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzUwMDM0MDAzMjAwMzYwMDM5MDAzMjAwMzYwMDMwMDAwMDAwfX0NCn17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ3OTQyNjIgMTAuMyhlKX19fVxzZWN0ZCBcbHRyc2VjdFxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MTIwODExICB9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IHdpdGggYSBtaW5pbXVtIGxpbWl0YXRpb24gb2YgfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNzg5ODYyIFtSRURBQ1RFRF19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNjUzMTg2MiANClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNjAxMzU1MDN9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyNDQ5MzUyIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDEwLjRcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyNjFccWwgXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjQ0OTM1MiBXYWl2ZXIgb2YgQ2xhaW1zIEZvciBJbnN1cmVkIEV2ZW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjQ0OTM1MiAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyNDQ5MzUyXHNwdiB7XCpcYmtta2VuZCBfVG9jNjAxMzU1MDN9DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYxM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCAoYSlcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyNjNccWwgXGZpMTQ0MFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDIxNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcaWx2bDJcb3V0bGluZWxldmVsMlxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGRiY2hcYWYxM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCANCk5vdHdpdGhzdGFuZGluZyBhbnl0aGluZyB0byB0aGUgY29udHJhcnkgY29udGFpbmVkIGluIHRoaXMgQWdyZWVtZW50LCBlYWNoIENvLVRlbmFudCB3YWl2ZXMgYW55IGFuZCBldmVyeSBjbGFpbSB0aGF0IGFyaXNlcyBvciBtYXkgYXJpc2UgaW4gaXRzIGZhdm9yIGFnYWluc3QgQ28tVGVuYW5jeSBNYW5hZ2VyIGFuZCBhbnkgb3RoZXIgQ28tXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIA0KVGVuYW50IGR1cmluZyB0aGUgdGVybSBvZiB0aGUgQWdyZWVtZW50IGZvciBhbnkgYW5kIGFsbCBsb3NzIG9mLCBvciBkYW1hZ2UgdG8gYW55IFNoYXJlZCBGYWNpbGl0aWVzIG9yIEFkZGl0aW9uYWwgUHJlbWlzZXMsIHRvIHRoZSBleHRlbnQgc3VjaCBsb3NzIG9yIGRhbWFnZSBpcyBhbiBpbnN1cmVkIGV2ZW50IGNvdmVyZWQgYnkgdGhlIGluc3VyYW5jZSB0byBiZSBtYWludGFpbmVkIGluIGFjY29yZGFuY2Ugd2l0aCB0aGlzIEFncmVlbWVudDsgDQp9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGRiY2hcYWYxM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCBwXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIHJvdmlkZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCAsIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxkYmNoXGFmMTNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgaG93ZXZlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUwNTA2ODEgXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIA0KLCB0aGUgZm9yZWdvaW5nIHdhaXZlciBzaGFsbCBub3QgYXBwbHkgdG8gYW55IHVuaW5zdXJlZCBkZWR1Y3RpYmxlIG9yIHNlbGYtaW5zdXJlZCByZXRlbnRpb24gb3IgdG8gaW5zdGFuY2VzIHdoZXJlIHRoZSByZWxldmFudCBpbnN1cmVyIGRpc3B1dGVzIHRoYXQgdGhlIHJlbGV2YW50IGV2ZW50IG9mIGxvc3Mgd2FzIGFuIGluc3VyZWQgZXZlbnQgY292ZXJlZCBieSB0aGUgYXBwbGljYWJsZSBpbnN1cmFuY2UgcG9saWN5Ln17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyNDQ5MzUyIA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMTNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgKGIpXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCANCkluIHRoZSBldmVudCBvZiBhbiBpbnN1cmVkIGV2ZW50LCBhbGwgaW5zdXJhbmNlIHByb2NlZWRzIChvdGhlciB0aGFuIHRob3NlIGFwcGxpY2FibGUgdG8gdGhpcmQgcGFydHkgb3Igd29ya2VycyBjb21wZW5zYXRpb24gbG9zc2VzKSB3aXRoIHJlc3BlY3QgdG8gdGhlIFNoYXJlZCBGYWNpbGl0aWVzIG9yIEFkZGl0aW9uYWwgRmFjaWxpdGllcyBzaGFsbCBiZSBwb29sZWQgYW5kIENvLVRlbmFuY3kgTWFuYWdlciBzaGFsbCBhcHBseSB0aGUgcHJvDQpcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgDQpjZWVkcyB0byByZWNvbnN0cnVjdGlvbi4gIElmIHRoZXJlIGlzIHVuaW5zdXJlZCBsb3NzIG9yIGluc3VyYW5jZSBwcm9jZWVkcyBhcmUgaW5hZGVxdWF0ZSwgaWYgc3VjaCB1bmluc3VyZWQgbG9zcyBpcyBub3Qgc3ViamVjdCB0byBhbiBhY3Rpb24gZm9yIHdoaWNoIGEgQ28tVGVuYW50IGlzIG9ibGlnYXRlZCB0byBpbmRlbW5pZnkgb3RoZXIgQ28tVGVuYW50cyBwdXJzdWFudCB0byB0aGUgdGVybXMgb2YgdGhpcyBBZ3JlZW1lbnQsIHRoZSBDby0NClxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCBUXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIA0KZW5hbnRzIHNoYWxsIGNvbnRyaWJ1dGUgYWRkaXRpb25hbCBhbW91bnRzIGJhc2VkIG9uIChBKSB0aGUgT3BlcmF0aW9uYWwgUHJvLVJhdGEgU2hhcmUgb2YgZWFjaCBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgZGFtYWdlZCBmb3IgYWxsIGNvc3RzIGFuZCBleHBlbnNlcyBvZiByZXBhaXIgb3IgcmVwbGFjZW1lbnQgb2Ygc3VjaCBkYW1hZ2VkIFNoYXJlZCBGYWNpbGl0aWVzIG9yIChCKSB0aGUgQWRkaXRpb25hbCBQcmVtaXNlcyBhbmQgRmFjaWxpDQpcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgdFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCBpZXMgUHJvLVJhdGEgU2hhcmUgb2YgZWFjaCBvZiB0aGUgQWRkaXRpb25hbCBGYWNpbGl0aWVzIGRhbWFnZWQgZm9yIGFsbCBjb3N0cyBhbmQgZXhwZW5zZXMgb2YgcmVwYWlyIG9yIHJlcGxhY2VtZW50IG9mIHN1Y2ggZGFtYWdlZCBBZGRpdGlvbmFsIEZhY2lsaXRpZXMuIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyNDQ5MzUyIA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M2MDEzNTUwNH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYxIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDI0NDkzNTIgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTAuNVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczI2MVxxbCBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM4XGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyNDQ5MzUyIEZvcm0gYW5kIENvbnRlbnQgb2YgSW5zdXJhbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyNDQ5MzUyIC4gIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IEF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggbGx9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBwb2xpY2llcyBhbmQgYmluZGVycyB3aXRoIHJlc3BlY3QgdG8gaW5zdXJhbmNlIHByb3ZpZGVkIHB1cnN1YW50IHRvIHRoaXMgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0ICAgUkVGIF9SZWY0ODAzNTM3MSBcXG4gXFxoIFxcKiBNRVJHRUZPUk1BVCB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNDAwMzgwMDMwMDAzMzAwMzUwMDMzMDAzNzAwMzEwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGNmMVxpbnNyc2lkNzk0MjYyXGNoYXJyc2lkNzk0MjYyIA0KQXJ0aWNsZSAxMH19fVxzZWN0ZCBcbHRyc2VjdFxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIHNoYWxsIGJlIGFzIGZvbGxvd3M6fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIHtcKlxia21rZW5kIF9Ub2M2MDEzNTUwNH0NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjEzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUwNTA2ODEgXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIChhKVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczI2M1xxbCBcZmkxNDQwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MjE2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxpbHZsMlxvdXRsaW5lbGV2ZWwyXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcZGJjaFxhZjEzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUwNTA2ODEgXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIEZvcm0gb2YgUG9saWNpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCANCi4gIEFsbCBpbnN1cmFuY2UgcHJvdmlkZWQgZm9yIGhlcmV1bmRlciBzaGFsbCBiZSBwbGFjZWQgb24gZm9ybXMgcmVhc29uYWJseSBhY2NlcHRhYmxlIHRvIENvLVRlbmFudHMufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyNDQ5MzUyIA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMTNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgKGIpXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGRiY2hcYWYxM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIA0KXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIEluc3VyYW5jZSBDb21wYW5pZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCAuICBBbGwgaW5zdXJhbmNlIHJlcXVpcmVkIGhlcmV1bmRlXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIA0KciBzaGFsbCBiZSB3aXRoIGluc3VyZXJzIHdpdGggYW4gQS5NLiBCZXN0IHJhdGluZyBvZiBBLSBvciBiZXR0ZXIgb3Igd2l0aCBpbnN1cmVycyBvdGhlcndpc2UgZGVlbWVkIGFjY2VwdGFibGUgdG8gQ28tVGVuYW5jeSBNYW5hZ2VyIGFuZCB0aGUgQ28tVGVuYW50cy59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDI0NDkzNTIgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYxM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCAoYylcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcZGJjaFxhZjEzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUwNTA2ODEgDQpcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgU2V2ZXJhYmlsaXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgLiAgQWxsIGxpYWJpbGl0eSBpbnN1cmFuY2Ugc2hhbGwgY29udGFpbiBhIHNldmVyYWJpbGl0eSBvZiBpbnRlcmVzdCBwcm92aXNpb24gcHJvdmlkaW5nIHRoYQ0KXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIHQsIGV4Y2VwdCB3aXRoIHJlc3BlY3QgdG8gdGhlIHRvdGFsIGxpbWl0cyBvZiBsaWFiaWxpdHksIHRoZSBpbnN1cmFuY2Ugc2hhbGwgYXBwbHkgdG8gZWFjaCBpbnN1cmVkIG9yIGFkZGl0aW9uYWwgaW5zdXJlZCBpbiB0aGUgc2FtZSBtYW5uZXIgYXMgaWYgc2VwYXJhdGUgcG9saWNpZXMgaGFkIGJlZW4gaXNzdWVkIHRvIGVhY2gufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDI0NDkzNTIgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYxM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCAoZClcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcZGJjaFxhZjEzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUwNTA2ODEgDQpcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgTm9uLVJlY291cnNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgLiAgQWxsIGluc3VyYW5jZSBzaGFsbCBwcm92aWRlIHRoYXQgdGhlcmUgd2lsbCBiZSBubyByZVxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCANCmNvdXJzZSBhZ2FpbnN0IHRoZSBhZGRpdGlvbmFsIGluc3VyZWRzIGZvciB0aGUgcGF5bWVudCBvZiBwcmVtaXVtcyBvciBjb21taXNzaW9ucyBvciAoaWYgc3VjaCBwb2xpY2llcyBwcm92aWRlIGZvciB0aGUgcGF5bWVudCB0aGVyZW9mKSBhZGRpdGlvbmFsIHByZW1pdW1zIG9yIGFzc2Vzc21lbnRzLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjQ0OTM1MiANClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNjAxMzU1MDV9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyNDQ5MzUyIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDEwLjZcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyNjFccWwgXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjQ0OTM1MiBBZGRpdGlvbmFsIFJlcXVpcmVtZW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjQ0OTM1MiAuICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MlxzcHYge1wqXGJrbWtlbmQgX1RvYzYwMTM1NTA1fQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMTNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgKGEpXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMjYzXHFsIFxmaTE0NDBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgyMTYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM4XGlsdmwyXG91dGxpbmVsZXZlbDJcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxkYmNoXGFmMTNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgV2FpdmVyIG9mIFN1YnJvZ2F0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgLiAgQWxsIGluc3VyYW5jZSBtYWludGFpbmVkIGJ5IHRoZSBDDQpcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgDQpvLVRlbmFudHMgYW5kIENvLVRlbmFuY3kgTWFuYWdlciBzaGFsbCBwcm92aWRlIGZvciB0aGUgd2FpdmVyIG9mIGFueSByaWdodCBvZiBzdWJyb2dhdGlvbiBieSB0aGUgaW5zdXJlcnMgdGhlcmV1bmRlciBhZ2FpbnN0IHRoZSBDby1UZW5hbmN5IE1hbmFnZXIsIHRoZSBDby1UZW5hbnRzIChhbmQgdGhlaXIgbWVtYmVycykgYW5kLCB1cG9uIHRoZSB3cml0dGVuIHJlcXVlc3Qgb2YgYSBDby1UZW5hbnQsIGl0IFNlY3VyZWQgUGFydGllcyBhbmQgdGgNClxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCBlXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIA0KaXIgb2ZmaWNlcnMsIGRpcmVjdG9ycywgZW1wbG95ZWVzLCBhZ2VudHMgYW5kIHJlcHJlc2VudGF0aXZlcywgYW5kIGFueSByaWdodCBvZiB0aGUgaW5zdXJlcnMgdG8gYW55IHNldG9mZiBvciBjb3VudGVyY2xhaW0gb3IgYW55IG90aGVyIGRlZHVjdGlvbiwgd2hldGhlciBieSBhdHRhY2htZW50IG9yIG90aGVyd2lzZSwgaW4gcmVzcGVjdCBvZiBhbnkgbGlhYmlsaXR5IG9mIGFueSBzdWNoIHBlcnNvbiBpbnN1cmVkIHVuZGVyIHN1Y2ggcG9saWN5DQoufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyNDQ5MzUyIA0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY1NDI2OTMwM317XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMTNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgKGIpXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcZGJjaFxhZjEzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUwNTA2ODEgXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIE5vdGljZSBvZiBDYW5jZWxsYXRpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCANCi4gIEFsbCBpbnN1cmFuY2Ugc2hhbGwgcHJvdmlkZSB0aGF0IGl0IG1heSBub3QgYmUgY2FuY2VsZWQgd2l0aG91dCBnaXZpbmcgYWxsIG9mIHRoZSBDby1UZW5hbnRzIChhbmQgdGhlaXIgbWVtYmVycyBvciBTZWN1cmVkIFBhcnRpZXMgaWYgc3VjaCBDby1UZW5hbnQgaGFzIHByb3ZpZGVkIGEgd3JpdHRlbiByZXF1ZXN0IHRvIHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgZm9yIHRoZWlyIGluY2x1c2lvbiBhbG9uDQpcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgZyB3aXRoIG5vdGljZSBpbmZvcm1hdGlvbiBmb3Igc3VjaCBtZW1iZXJzIG9yIFNlY3VyZWQgUGFydGllcyksIHRoZSBDby1UZW5hbmN5IE1hbmFnZXIsIGVuZGVhdm9yIHRvIHByb3ZpZGUgYXQgbGVhc3QgfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXGRiY2hcYWYxM1xpbnNyc2lkMTc4OTg2MlxjaGFycnNpZDUwNTA2ODEgXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIA0KW1JFREFDVEVEXX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUwNTA2ODEgXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwICBkYXlzIHByaW9yIHdyaXR0ZW4gbm90aWZpY2F0aW9uIHRoZXJlb2YsIGV4Y2VwdCBpbiBjYXNlcyBvZiBub24tcGF5bWVudCBvZiBwcmVtaXVtIGZvciB3aGljaCB9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgDQpcYlxkYmNoXGFmMTNcaW5zcnNpZDE3ODk4NjJcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCBbUkVEQUNURURdfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgIGRheXMgcHJpb3Igd3JpdHRlbiBub3RpY1xoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCANCmUgc2hhbGwgYmUgcHJvdmlkZWQgKHVubGVzcyBhIGxvbmdlciBub3RpY2UgcGVyaW9kIGZvciBub24tcGF5bWVudCBpcyBhZ3JlZWQgdG8gYnkgdGhlIHJlbGV2YW50IGluc3VyZXIpLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjQ0OTM1MiB7XCpcYmtta2VuZCBfUmVmNTQyNjkzMDN9DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYxM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCAoYylcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcZGJjaFxhZjEzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUwNTA2ODEgDQpcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgQ2VydGlmaWNhdGVzOyBQcm9vZiBvZiBMb3NzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgDQouICBQcmlvciB0byBhbnkgZW50cnkgb24gdGhlIHNpdGUgb2YgYSBQcm9qZWN0IG9yIHRoZSBTaGFyZWQgUHJlbWlzZXMgYnkgYSBDby1UZW5hbnQsIHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgYW5kIHRoZSBDby1UZW5caGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgDQphbnRzIHNoYWxsIGZ1cm5pc2ggY2VydGlmaWNhdGVzIG9mIGluc3VyYW5jZSB0byB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIGFuZCwgdXBvbiByZXF1ZXN0LCB0byB0aGUgb3RoZXIgQ28tVGVuYW50cyAoYW5kIHRoZWlyIG1lbWJlcnMgb3IgU2VjdXJlZCBQYXJ0aWVzIGlmIHN1Y2ggQ28tVGVuYW50IGhhcyBwcm92aWRlZCBhIHdyaXR0ZW4gcmVxdWVzdCB0byB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIGZvciB0aGVpciBpbmNsdXNpb24gYWxvbmcgd2kNClxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCB0XGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIA0KaCBub3RpY2UgaW5mb3JtYXRpb24gZm9yIHN1Y2ggbWVtYmVycyBvciBTZWN1cmVkIFBhcnRpZXMpLCBldmlkZW5jaW5nIHRoZSBpbnN1cmFuY2UgcmVxdWlyZWQgb2Ygc3VjaCBDby1UZW5hbmN5IE1hbmFnZXIgb3IgQ28tVGVuYW50IHB1cnN1YW50IHRvIHRoaXMgQWdyZWVtZW50LiAgRWFjaCBvZiB0aGUgQ28tVGVuYW50cyAoYW5kIHVwb24gd3JpdHRlbiByZXF1ZXN0IG9mIGEgQ28tVGVuYW50LCBpdHMgU2VjdXJlZCBQYXJ0aWVzKSBhbmQgdGhlDQpcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCANCkNvLVRlbmFuY3kgTWFuYWdlciBzaGFsbCBiZSBsaXN0ZWQgYXMgYWRkaXRpb25hbCBpbnN1cmVkcyBvbiB0aGUgcG9saWNpZXMgb2YgdGhlIG90aGVyIENvLVRlbmFudHMuICBUaGUgQ28tVGVuYW5jeSBNYW5hZ2VyIG9yIHRoZSBDby1UZW5hbnQgbWFpbnRhaW5pbmcgZWFjaCBwb2xpY3kgaGVyZXVuZGVyIHNoYWxsIG1ha2UgYWxsIHByb29mcyBvZiBsb3NzIHVuZGVyIGVhY2ggc3VjaCBwb2xpY3ksIGFuZCBzaGFsbCB0YWtlIGFsbCBvdGhlciBhYw0KXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIHRcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgDQppb24gcmVhc29uYWJseSByZXF1aXJlZCB0byBlbnN1cmUgY29sbGVjdGlvbiBmcm9tIGluc3VyZXJzIGZvciBhbnkgbG9zcyB1bmRlciBhbnkgc3VjaCBwb2xpY3ksIGV4Y2VwdCB0aGF0IGVhY2ggb2YgdGhlIENvLVRlbmFudHMgYW5kIHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgc2hhbGwgY29vcGVyYXRlIGFuZCBhc3Npc3QgaW4gdGhlIHByZXBhcmF0aW9uIG9mIHN1Y2ggcHJvb2ZzIG9mIGxvc3MgYW5kIHRha2Ugc3VjaCBvdGhlciBhY3Rpb25zIG8NClxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCBuXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwICBiZWhhbGYgb2YgdGhlIENvLVRlbmFudHMgYXMgbWF5IGJlIHJlcXVlc3RlZCBieSB0aGUgQ28tVGVuYW50cyBvciB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjQ0OTM1MiANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjEzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUwNTA2ODEgXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIChkKVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxkYmNoXGFmMTNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSANClxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCBQYXltZW50IG9mIERlZHVjdGlibGVzIGFuZCBTZWxmLUluc3VyZWQgUmV0ZW50aW9uIEFtb3VudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCANCi4gIEVhY2ggQ28tVGVuYW50IHNoYWxsIGJlIHJlc3BvbnNpYmxlIGZvciBkZWR1Y3RpYmxlcyBvciBzZWxmLWluc3VyZWQgcmV0ZW50aW9uIG9uIGEgcHJvLXJhdGEgYmFzaXMgaW4gcHJvcFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCBvcnRpb24gdG8gc3VjaCBDby1UZW5hbnRcaGljaFxmMCBccnF1b3RlIFxsb2NoXGYwIA0KcyBvd25lcnNoaXAgb2YgdGhlIGFwcGxpY2FibGUgU2hhcmVkIFByZW1pc2VzLCBTaGFyZWQgRmFjaWxpdHksIEFkZGl0aW9uYWwgUHJlbWlzZXMgb3IgQWRkaXRpb25hbCBGYWNpbGl0eSwgYW5kIGluIHByb3BvcnRpb24gdG8gdGhlIGFtb3VudCBvZiBlYWNoIENvLVRlbmFudFxoaWNoXGYwIFxycXVvdGUgXGxvY2hcZjAgcyBpbnN1cmFuY2UgcmVjb3Zlcnk7IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxkYmNoXGFmMTNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgcHJvdmlkZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCAsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxkYmNoXGFmMTNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgaG93ZXZlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUwNTA2ODEgXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwICwgd2l0aCByZXNwZWN0IHRvIGFueSBjbGFpbSB1bmRlciBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgDQphbnkgcG9saWN5IHByb3ZpZGVkIGJ5IGEgQ28tVGVuYW50IHRoYXQgcmVzdWx0cyBmcm9tIHRoZSBuZWdsaWdlbmNlIG9mIENvLVRlbmFuY3kgTWFuYWdlciwgQ28tVGVuYW5jeSBNYW5hZ2VyIHNoYWxsIGJlIHJlc3BvbnNpYmxlIGZvciB0aGUgcGF5bWVudCBvZiBzdWNoIGRlZHVjdGlibGUsIHN1YmplY3QgdG8gQ28tVGVuYW5jeSBNYW5hZ2VyXGhpY2hcZjAgXHJxdW90ZSBcbG9jaFxmMCANCnMgbGltaXRhdGlvbnMgb2YgbGlhYmlsaXR5IGFzIHNldCBmb3J0aCBpbiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxkYmNoXGFmMTNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgICBSRUYgX1JlZjQ4MDM1XGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIDM0NSBcXG4gXFxoIFxcKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcdWxcZGJjaFxhZjEzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUwNTA2ODEge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNTAwMzMwMDM0MDAzNTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxjZjFcZGJjaFxhZjEzXGluc3JzaWQ3OTQyNjJcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCBBcnRpY2xlIDl9fX1cc2VjdGQgXGx0cnNlY3RccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxkYmNoXGFmMTNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgIGhlcmVvZjsgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxkYmNoXGFmMTNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgcHJvdmlkZWQsIGhvd2V2ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZGJjaFxhZjEzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUwNTA2ODEgXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwICwgcHJvY2VlZHMgcGF5YWJsZSB1bmRlciBhbnkgcG9saWN5IHNoYWxsIG5vdCBhcHBseSBhZ2FpbnN0IHRoZSBsaW1pdGF0aW9ucyBvZiBsaWFiaWxpdHkgYW1vdW50IGluIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcZGJjaFxhZjEzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUwNTA2ODEgXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwICAgUkVGIF9SZWY0ODAzNTM0NSBcXG4gXFxoIFxcKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGRiY2hcYWYxM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNTAwMzMwMDM0MDAzNTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcY2YxXGRiY2hcYWYxM1xpbnNyc2lkNzk0MjYyXGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgQXJ0aWNsZSA5fX19DQpcc2VjdGQgXGx0cnNlY3RccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjEzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUwNTA2ODEgLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI5MjgxMTggDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYxM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCAoZSlcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcZGJjaFxhZjEzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUwNTA2ODEgDQpcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgU3ViY29udHJhY3RvciBJbnN1cmFuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCAuICBDby1UZW5hbmN5IE1hXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIA0KbmFnZXIgc2hhbGwgcmVxdWlyZSBhbGwgc3ViY29udHJhY3RvcnMgdG8gY2FycnkgYWRlcXVhdGUgY292ZXJhZ2UgaW4gYWNjb3JkYW5jZSB3aXRoIENvLVRlbmFuY3kgTWFuYWdlclxoaWNoXGYwIFxycXVvdGUgXGxvY2hcZjAgDQpzIG5vcm1hbCBwcmFjdGljZSwgcHJpb3IgdG8gZW50cnkgb24gdGhlIFNoYXJlZCBQcmVtaXNlcyBvciBBZGRpdGlvbmFsIFByZW1pc2VzIGFuZCBkdXJpbmcgdGhlIHRpbWUgaW4gd2hpY2ggdGhleSBhcmUgZW5nYWdlZCBpbiBwZXJmb3JtaW5nIHNlcnZpY2VzIHRvXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwICBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgDQpiZSBmdXJuaXNoZWQgYnkgQ28tVGVuYW5jeSBNYW5hZ2VyLCBhbmQgZm9yIHN1Y2ggc3ViY29udHJhY3RvcnMgdG8gcHJvdmlkZSB3cml0dGVuIGV2aWRlbmNlIG9mIHN1Y2ggaW5zdXJhbmNlIGFuZCBhZGRpdGlvbmFsIGluc3VyZWQgc3RhdHVzIHByaW9yIHRvIGVudHJ5IG9uIHRoZSBTaGFyZWQgUHJlbWlzZXMgb3IgQWRkaXRpb25hbCBQcmVtaXNlcy4gIENvLVRlbmFuY3kgTWFuYWdlciBzaGFsbCBwcm92aWRlIHRoZSBDby1UZW5hbnRzLCB1cG8NClxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCBuXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIA0KIHJlcXVlc3QsIHdpdGggY3VycmVudCBjZXJ0aWZpY2F0ZXMgb2YgaW5zdXJhbmNlIGV2aWRlbmNpbmcgc3VjaCBjb3ZlcmFnZSBhcyBtYXkgYmUgcmVhc29uYWJseSByZXF1ZXN0ZWQuICBBbGwgc3VjaCBpbnN1cmFuY2UgcG9saWNpZXMgc2hhbGwgbmFtZSBDby1UZW5hbmN5IE1hbmFnZXIsIHRoZSBDby1UZW5hbnRzLCBhbmQsIHVwb24gdGhlIHdyaXR0ZW4gcmVxdWVzdCBvZiBhIENvLVRlbmFudCwgaXRzIFNlY3VyZWQgUGFydGllcywgYXMgYWRkDQpcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgaVxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCB0aW9uYWwgbmFtZWQgaW5zdXJlZHMsIGFuZCB0aGUgcmVxdWVzdGVkIFNlY3VyZWQgUGFydGllcyBuYW1lZCBhcyBsb3NzIHBheWVlcy59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDI0NDkzNTIgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYxM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCAoZilcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcZGJjaFxhZjEzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUwNTA2ODEgDQpcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgTm90aWZpY2F0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgDQouICBUaGUgQ28tVGVuYW50cyBhbmQgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBhZ3JlZSB0byBhZHZpc2UgdGhlIG90aGVyIENvLVRlbmFudHMgYW5kIHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgYXMgc29vbiBhcyBwcmFjdGljYWJsZSBpbiB3cml0aW5nIG9mIGFueSBub3RpY2Ugb2YgY2xhaW1caGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgIHRvIHdoaWNoIGluc3VyYW5jZSBwdXJzdWFudCB0byB0aGlzIH17XGZpZWxke1wqXGZsZGluc3Qgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcZGJjaFxhZjEzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUwNTA2ODEgXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwICAgUkVGIF9SZWY0ODAzNTM3MSBcXG4gXFxoIFxcKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGRiY2hcYWYxM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNTAwMzMwMDM3MDAzMTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcY2YxXGRiY2hcYWYxM1xpbnNyc2lkNzk0MjYyXGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgQXJ0aWNsZSAxMH19fQ0KXHNlY3RkIFxsdHJzZWN0XHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCAgYXBwbGllcy59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjQ0OTM1MiANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjEzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUwNTA2ODEgXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIChnKVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxkYmNoXGFmMTNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSANClxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCBDby1UZW5hbnRcaGljaFxmMCBccnF1b3RlIFxsb2NoXGYwIHMgUmlnaHRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgDQouICBTaG91bGQgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBvciBhbnkgQ28tVGVuYW50IGZhaWwgdG8gcHJvdmlkZSBvciBtYWludGFpbiBhbnkgb2YgdGhlIGluc3VyYW5jZSBwb2xpY2llcyByZXF1aXJlZCBvZiBpdCBhbmQgc3VjaCBmYWlsdVxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCByZSBjb250aW51ZXMgZm9yIG1vcmUgdGhhbiB9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgDQpcYlxkYmNoXGFmMTNcaW5zcnNpZDE3ODk4NjJcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCBbUkVEQUNURURdfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgIGRheXMgYWZ0ZXIgbm90aWNlIG9mIGNhbmNlbGxhdGlvbiBpcyBwcm92aWRlZCBwdXJzdWFudCB0byB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcZGJjaFxhZjEzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUwNTA2ODEgXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIFNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcZGJjaFxhZjEzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUwNTA2ODEgXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwICBSRUYgX1JlZjU0MjY5MzAzIFxcDQp3IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGRiY2hcYWYxM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNTAwMzQwMDMyMDAzNjAwMzkwMDMzMDAzMDAwMzMwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcZGJjaFxhZjEzXGluc3JzaWQ3OTQyNjJcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCAxMC42KGIpfX19XHNlY3RkIFxsdHJzZWN0XHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZGJjaFxhZjEzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUwNTA2ODEgXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwICwgdGhlIG90aGVyIENvLVRlbmFudHMgc2hhbGwgaGF2ZSB0aGUgcmlnaHQgdG8gcHJvdmlkZSBhbmQvb3IgbWFpbnRhaW4gc3VjaCBjb3ZlcmFnZSBhdCBzdWNoIGRlZmF1bHRpbmcgQ28tVGVuYW5jeSBNYVxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCBuYWdlciBvciBDby1UZW5hbnRcaGljaFxmMCBccnF1b3RlIA0KXGxvY2hcZjAgcyBleHBlbnNlLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjQ0OTM1MiANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjEzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUwNTA2ODEgXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIChoKVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxkYmNoXGFmMTNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSANClxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCBBZGRpdGlvbmFsIEluc3VyZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCAuICBBcyBhcHBsaWNhYmxlLCBjb3ZlcmFnZSBwcm92aWRlZCBieSB0aGUgcG9saWNpZXMgZGVzY3JpYmVkIGluIHRoaXMgQWdyZWVtZW50IHNoYWxsIGluY2x1ZGVcfg0KYXMgdGhlaXIgaW50ZXJlc3RzIG1heSBhcHBlYXIsIHRoZSBDby1UZW5hbnRzLCB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyLCBhbmQsIHVwb24gdGhlIHdyaXR0ZW4gcmVxdWVzdCBvZiBhIENvLVRlbmFuXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIHQsIGl0cyBTZWN1cmVkIFBhcnRpZXMsXH5caGljaFxmMCBhcyBcJzkzXGxvY2hcZjAgXGhpY2hcZjAgYWRkaXRpb25hbCBpbnN1cmVkXCc5NC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjQ0OTM1MiANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTE5ODgwNiBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoaSlcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTE5ODgwNiBMb3NzIFBheWFibGV9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTU4OTQ5OCAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUwNTA2ODEgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgVGhlIH0NCntccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxkYmNoXGFmMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIENvLVRlbmFudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUwNTA2ODEgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgLCB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyLCBhbmR9e1xydGxjaFxmY3MxIA0KXGFmMSBcbHRyY2hcZmNzMCBcZGJjaFxhZjFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAsIGlmIGFwcGxpYWJsZSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYxXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUwNTA2ODEgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIHRoZSBTfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGRiY2hcYWYxM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCBcaGljaFxmMCBlY3VyZWQgUGFydGllcyBvciB0aGVpciBhZ2VudCBzaGFsbCBiZSBcJzkzXGxvY2hcZjAgXGhpY2hcZjAgbG9zcyBwYXllZXNcJzk0XGxvY2hcZjAgIGFzIHRoZWlyIGludGVyZXN0cyBtYXkgYXBwZWFyIHVuZGVyIGNvbnN0cnVjdGlvbiBwaGFzZSBidWlsZGVycyBhbGwtcmlzayBhbg0KXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIGQgb3BlcmF0aW9uYWwgcGhhc2UgcHJvcGVydHkgYWxsLXJpc2tcfmluc3VyYW5jZS59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDY4NDk3IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M2MDEzNTUwNn17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYxIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxMC43XHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMjYxXHFsIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NCBBbW91bnQgb2YgSW5zdXJhbmNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgLlx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx2XGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE2NTQyMjhcc3B2IHtcKlxia21rZW5kIF9Ub2M2MDEzNTUwNn0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgICBUaGUgYW1vdW50cyBvZiBpbnN1cmFuY2UgcmVxdWlyZWQgaW4gdGhpcyB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEFydGljbGUgMTB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgbWF5IGJlIHNhdGlzZmllZCBieSBwdXJjaGFzaW5nIGNvdmVyYWdlIGluIHRoZSBhbW91bnRzIHNwZWNpZmllZCBvciBieSBhbnkgY29tYmluYXRpb24gb2YgcHJpbWFyeSBhbmQgZXhjZXNzIGluc3VyYW5jZSwgc28gbG9uZyBhcw0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIHRoZSB0b3RhbCBhbW91bnQgb2YgaW5zdXJhbmNlIG1lZXRzIHRoZSByZXF1aXJlbWVudHMgc3BlY2lmaWVkIGFib3ZlfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxkYmNoXGFmMTNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSB7XCpcYmtta2VuZCBfUmVmNDgwMzUzNzJ9e1wqXGJrbWtlbmQgX1JlZjQ4MDM3NDY5fS59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjQ0OTM1MiANClxwYXIge1wqXGJrbWtzdGFydCBfUmVmMTAxMzM5NjU5fXtcKlxia21rc3RhcnQgX1JlZjEwMTM0MDI1N317XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTM5OX17XCpcYmtta3N0YXJ0IF9Ub2M2MDEzNTUwN317XCpcYmtta2VuZCBfUmVmMTAxMzM5MzE3fXtcKlxia21rZW5kIF9SZWYxMDEzMzk2NTl9e1wqXGJrbWtlbmQgX1JlZjEwMTM0MDI1N317XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjU5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgDQpcbHRyY2hcZmNzMCBcYlxjYXBzXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDI0NDkzNTIgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgQXJ0aWNsZSAxMVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczI1OVxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHg3MjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxjYXBzXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyNDQ5MzUyIFxsaW5lIEFTU0lHTk1FTlRTIEFORCBSSUdIVCBUTyBFTkNVTUJFUntcKlxia21rZW5kIF9SZWY0ODAzNTM5OX17XCpcYmtta2VuZCBfVG9jNjAxMzU1MDd9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1NDAwfXtcKlxia21rc3RhcnQgX1JlZjQ4MDM3NDc1fXtcKlxia21rc3RhcnQgX1RvYzYwMTM1NTA4fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTQ5NzA4NDAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTEuMVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzMjYxXHFsIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM4XGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNDk3MDg0MCBBc3NpZ25tZW50IGJ5IENvLVRlbmFudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAuICBFeGNlcHQgYXMgcGVybWl0dGVkIGJ5IH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBTZWN0aW9ucyB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgICBSRUYgX1JlZjQ4MDM3NDc2IFxcdyBcXGggXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNzAwMzQwMDM3MDAzNjAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcY2YxXGluc3JzaWQ3OTQyNjJcY2hhcnJzaWQ3OTQyNjIgMTEuMn19fVxzZWN0ZCBcbHRyc2VjdA0KXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNzg5ODYyIFtSRURBQ1RFRF19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCAsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIG5vIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgc2hhbGwgYXNzaWduLCBzZWwNCmwsIGRpc3Bvc2Ugb2YsIGdpdmUgb3Igb3RoZXJ3aXNlIHRyYW5zZmVyIChjb2xsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBlY3RpdmVseSwgZm9yIHRoZSBwdXJwb3NlcyBvZiB0aGlzIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCAgIFJFRiBfUmVmNDgwMzUzOTkgXFxuIFxcaCBcXA0KKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM1MDAzMzAwMzkwMDM5MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGNmMVxpbnNyc2lkNzk0MjYyXGNoYXJyc2lkNzk0MjYyIEFydGljbGUgMTF9fX1cc2VjdGQgXGx0cnNlY3RccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCAsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgcmVmZXJyZWQgdG8gYXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBBc3NpZ259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgIG9yIGFuIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IEFzc2lnbm1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgXCc5NCkgYWxsIG9yIGFueSBwb3J0aW99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjggbiBvZiBpdHMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgaX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBudGVyZXN0c317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgb3IgaXRzIHJpZ2h0cyB1bmRlciB0aGl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIHMgQWdyZWVtZW50LCB3aA0KZXRoZXIgdm9sdW50YXJpbHksIGJ5IG9wZXJhdGlvbiBvZiBsYXcsIGF0IGp1ZGljaWFsIHNhbGUgb3Igb3RoZXJ3aXNlLCB0byBhbnkgcGVyc29uLntcKlxia21rZW5kIF9SZWY0ODAzNTQwMH17XCpcYmtta2VuZCBfUmVmNDgwMzc0NzV9e1wqXGJrbWtlbmQgX1RvYzYwMTM1NTA4fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWYxMDEzNDAyOTF9e1wqXGJrbWtzdGFydCBfUmVmNDgwMzU0MDF9e1wqXGJrbWtzdGFydCBfUmVmNDgwMzc0NzZ9e1wqXGJrbWtzdGFydCBfVG9jNjAxMzU1MDl9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxMS4yDQpcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgUHJvY2VkdXJlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIC4gIHtcKlxia21rZW5kIF9SZWYxMDEzNDAyOTF9Tm90d2l0aHN0YW5kaW5nIHRoZSBmb3JlZ29pbmcsIGEgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIG1heSBBc3NpZ24gYWxsIG9yIGFueSBwb3J0aW9uIG9mIGl0cyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggbnRlcmVzdHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBvciBpdHMgcmlnaHRzIHVuZGVyIHRoaXMgQWdyZWVtZW50IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBwcm92aWRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgIHRoYXQgYWxsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSAgb2YgdGhlIGZvbGxvd2luZyBjb25kaXRpb25zIGFyZSBzYXRpc2ZpZWQ6e1wqXGJrbWtlbmQgX1JlZjQ4MDM1NDAxfQ0Ke1wqXGJrbWtlbmQgX1JlZjQ4MDM3NDc2fXtcKlxia21rZW5kIF9Ub2M2MDEzNTUwOX0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzU0MDJ9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGEpXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMjYzXHFsIFxmaTE0NDBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgyMTYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM4XGlsdmwyXG91dGxpbmVsZXZlbDJcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSB0aGUgYXNzaWduZWUgd2lsbCwgYXMgb2YgdGhlIGVmZmVjdGl2ZSBkYXRlIG9mIHN1Y2ggYXNzaWdubWVudCwgb3duIHRoZSBQcm9qZWN0IG9mIHRoZSBhc3NpZ25pbmcgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgO317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAge1wqXGJrbWtlbmQgX1JlZjQ4MDM1NDAyfQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTQwM317XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoYilcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgDQphIGNvdW50ZXJwYXJ0IG9mIHRoZSBpbnN0cnVtZW50IG9mIEFzc2lnbm1lbnQsIGV4ZWN1dGVkIGJ5IHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICB0aGVyZXRvLCBpcyBkZWxpdmVyZWQgdG8gdGhlIG99e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgdGhlciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIDt9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIA0Ke1wqXGJrbWtlbmQgX1JlZjQ4MDM1NDAzfQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTQwNH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoYylcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgDQp0aGUgYXNzaWduZWUgYXNzdW1lcyBhbmQgY29uc2VudHMgaW4gd3JpdGluZyB0byBiZSBib3VuZCBieSBhbGwgb2YgdGhlIHRlcm1zIGFuZCBvYmxpZ2F0aW9ucyBvZiB0aGlzIEFncmVlbWVudCBpbiB0aGUgcGxhY2UgYW5kIHN0ZWFkIG9mIHRoZSBhc3NpZ25pbmcgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIGFjY3J1aW5nIGJlZm9yZSBhbmQgYWZ0ZXIgdGhlIGRhdGUgb2Ygc3VjaCBhc3NpZ25tZW50O317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAge1wqXGJrbWtlbmQgX1JlZjQ4MDM1NDA0fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTQwNX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoZClcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgDQphbGwgbmVjZXNzYXJ5IHByaW9yIGFwcHJvdmFscyBoYXZlIGJlZW4gb2J0YWluZWQgZnJvbSB0aGUgVHJhbnNtaXR0aW5nIFV0aWxpdHkgYW5kIGZyb20gRkVSQyBhbmQgYW55IG90aGVyIEdvdmVybm1lbnRhbCBBdXRob3JpdHkgd2l0aCBqdXJpc2RpY3Rpb24gb3ZlciB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgb3IgdGhlIFNlcGFyYXRlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBGYWNpbGl0aWVzO3tcKlxia21rZW5kIF9SZWY0ODAzNTQwNX0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzU0MDZ9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGUpXHRhYn0NCnRoZSBhc3NpZ25lZSBjdXJlcyBhbnkgY3VyYWJsZSBDby1UZW5hbnQgZGVmYXVsdHMgaGVyZXVuZGVyIGFuZCBDby1UZW5hbnQgRXZlbnRzIG9mIERlZmF1bHQgb2YgdGhlIGFzc2lnbmluZyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgO317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCB7XCpcYmtta2VuZCBfUmVmNDgwMzU0MDZ9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1NDA3fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChmKVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSANCnRoZSBhc3NpZ25pbmcgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KIGFncmVlcyB0byByZW1haW4gbGlhYmxlIGZvciBhbnkgdW5wYWlkIGFtb3VudHMgZHVlIHB1cnN1YW50IHRvIHRoaXMgQWdyZWVtZW50IHRoYXQgYWNjcnVlZCBwcmlvciB0byB0aGUgZWZmZWN0aXZlIGRhdGUgb2Ygc3VjaCBBc3NpZ25tZW50OyBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIHtcKlxia21rZW5kIF9SZWY0ODAzNTQwN30NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IHtcKlxia21rc3RhcnQgX1JlZjEwMTM0MDI3Nn1caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANClVwb24gYW4gQXNzaWdubWVudCB0aGF0IHNhdGlzZmllcyBhbGwgb2YgdGhlIGZvcmVnb2luZyBjb25kaVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KdGlvbnMsIHRoZSBhc3NpZ25pbmcgQ28tVGVuYW50IHNoYWxsIGJlIHJlbGVhc2VkIGZyb20gYW55IGZ1cnRoZXIgb2JsaWdhdGlvbnMgYWNjcnVpbmcgcHVyc3VhbnQgdG8gdGhpcyBBZ3JlZW1lbnQgZnJvbSBhbmQgYWZ0ZXIgdGhlIGVmZmVjdGl2ZSBkYXRlIG9mIHN1Y2ggQXNzaWdubWVudCwgZXhjZXB0IGZvciB0aG9zZSBkZXNjcmliZWQgaW4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkyNDE5NTUgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgU2VjdGlvbiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MjQxOTU1IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBSRUYgX1JlZjQ4MDM1NDA3IFxcdyBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTI0MTk1NSB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM1MDAzNDAwMzAwMDM3MDAwMDAwDQp9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ3OTQyNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgMTEuMihmKX19fVxzZWN0ZCBcbHRyc2VjdFxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQogYWJvdmUuICBBbnkgcHVycG9ydGVkIEFzc2lnbm1lbnQgdGhhdCBkb2VzIG5vdCBzYXRpc2Z5IGFsbCBvZiB0aGUgZm9yZWdvaW5nIGNvbmRpdGlvbnMgc2hhbGwgYmUgbnVsbCBhbmQgdm9pZCBhbmQgb2Ygbm8gZWZmZWN0IGFuZCB0aGUgQ28tVGVuYW50IG1ha2luZyBzdWNoIGFuIEFzc2lnbm1lbnQgc2hhbGwgcmVtYWluIGxpYWJsZSBmb3IgYWxsIG9mIGl0cyByaWdodHMgYW5kIG9ibGlnYXRpb25zIHVuZGVyIHRoaXMgQWdyZWVtZW50Ln17DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTQwOH17XCpcYmtta3N0YXJ0IF9Ub2M2MDEzNTUxMH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYxIFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNzg5ODYyXGNoYXJyc2lkMTc4OTg2MiBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxMS4zXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhcg0KXHMyNjFccWwgXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQyNjM2MzQyIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTc4OTg2MlxjaGFycnNpZDE3ODk4NjIgW1JFREFDVEVEXX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNjIzNzY0MyB7XCpcYmtta3N0YXJ0IF9SZWYxMDEzNDA5MjJ9e1wqXGJrbWtlbmQgX1JlZjEwMTM0MDI3Nn0NCntcKlxia21rZW5kIF9SZWY0ODAzNTQwOH17XCpcYmtta2VuZCBfVG9jNjAxMzU1MTB9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1NDEwfXtcKlxia21rc3RhcnQgX1RvYzYwMTM1NTExfXtcKlxia21rZW5kIF9SZWYxMDEzNDA5MjJ9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTEuNFx0YWJ9fVxwYXJkIFxsdHJwYXINClxzMjYxXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM4XGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBFeHBlbnNlc317XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCAgYW5kIE90aGVyIE1hdHRlcnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAuICBBbGwgcmVhc29uYWJsZSBleHBlbnNlcywgaW5jbHVkaW5nIHJlYXNvbmFibGUgYXR0b3JuZXlzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANClxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSAgZmVlcywgaW5jdXJyZWQgYnkgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBvciBhbnkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNjI2NzY5NCBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBpbiBjb25uZWN0aW9uIHdpdGggKGEpIHRoZSBBc3NpZ25tZW50IG9yIHByb3Bvc2VkIEFzc2lnbm1lbnQgb2YgYW5vdGhlciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE2MjY3Njk0IENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE2MjY3Njk0IHMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgaX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTYyNjc2OTQgbnRlcmVzdHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgYW5kIGl0cyByaQ0KZ2h0cyB1bmRlciB0aGlzIEFncmVlbWVudCwgb3IgKGIpIHRoZSBhY3R1YWwgb3IgcHJvcG9zZWQgcGxlZGdlLCBjb2xsYXRlcmFsIGFzc2lnbm1lbnQsIGVuY3VtYnJhbmNlLCBvciBncmF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIG50IG9mIGEgc2VjdXJpdHkgaW50ZXJlc3QgaW4gYSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTYyNjc2OTQgQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE2MjY3Njk0IHMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgaX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNjI2NzY5NCBudGVyZXN0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIGFuZCBpdHMgcmlnaHRzIHVuZGVyIHRoaXMgQWdyZWVtZW50IHRvIGEgU2VjdXJlZCBQYXJ0eSwgc2h9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgYWxsIGJlIHJlaW1idXJzZWQgYnkgc3VjaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE2MjY3Njk0IENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBtYQ0Ka2luZyB0aGUgQXNzaWdubWVudCBvciBncmFudGluZyB0aGUgc2VjdXJpdHkgaW50ZXJlc3QufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCAgIE5vdHdpdGhzdGFuZGluZyBhbnl0aGluZyBpbiB0aGlzIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCAgIFJFRiBfUmVmNDgwMzUzOTkgXFxuIFxcaCBcXA0KKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM1MDAzMzAwMzkwMDM5MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGNmMVxpbnNyc2lkNzk0MjYyXGNoYXJyc2lkNzk0MjYyIEFydGljbGUgMTF9fX1cc2VjdGQgXGx0cnNlY3RccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KIHRvIHRoZSBjb250cmFyeSwgaW4gcmVzcG9uZGluZyB0byBhbnkgcmVxdWVzdCBieSBhbnkgU2VjdXJlZCBQYXJ0eSBmb3IgY2VydGlmaWNhdGVzLCBjb25zZW50cyBvciBvdGhlciBkb2N1bWVudHMgb3IgYWdyZWVtZW50cywgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBhbmQgdGhlIG90aGVyIENvLVRlbmFudHMgc2hhbGwgaGF2ZSBubyBvYmxpZ2F0aW9uIHRvIHByb3ZpZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBlIGFueSBzdWNoIGNlcnRpZmljYXRlcywgY29uc2VudHMgb3Igb3RoZXIgZG9jdW1lbnRzIG9yIGFncmVlbWVudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANCihpKSB1bmxlc3Mgc3BlY2lmaWNhbGx5IHJlcXVpcmVkIGluIHRoaXMgQWdyZWVtZW50IG9yIChpaSkgaWYgcHJvdmlkaW5nIHN1Y2ggaXRlbXMgY291bGQgcmVhc29uYWJseSBiZSBleHBlY3RlZCB0b317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBhZHZlcnNlbHkgYWZmZWN0cyBhbnkgb2YgdGhlIHJpZ2h0cywgYmVuZWZpdHMsIHJpc2tzIG9yIG9ibGlnYXRpb25zIG9mIHRoZX17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCAgQ28tVGVuYW5jeSBNYW5hZ2VyIG9yIG90aGVyIENvLVRlbmFudHMgdW5kZXIgdGhpcyBBZ3JlZW1lbnQgb3Igd2l0aCByZXNwZWN0IHRvIHRoZSBQcm9qZWN0cy59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIHtcKlxia21rZW5kIF9SZWY0ODAzNTQxMH0NCntcKlxia21rZW5kIF9Ub2M2MDEzNTUxMX0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmMTAxMzQ3NjgyfXtcKlxia21rc3RhcnQgX1JlZjEwMTM0NzcwOX17XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTQxMX17XCpcYmtta3N0YXJ0IF9Ub2M2MDEzNTUxMn17XCpcYmtta2VuZCBfUmVmMTAxMzQ3NjgyfXtcKlxia21rZW5kIF9SZWYxMDEzNDc3MDl9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI1OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIA0KXGJcY2Fwc1xkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCBBcnRpY2xlIDEyXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMjU5XHFjIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDcyMFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGNhcHNcZnMyNFx1bFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgVEVSTSBBTkQgVEVSTUlOQVRJT059e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjgge1wqXGJrbWtlbmQgX1JlZjQ4MDM1NDExfXtcKlxia21rZW5kIF9Ub2M2MDEzNTUxMn0NCg0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTQxMn17XCpcYmtta3N0YXJ0IF9SZWY0ODAzNzQ3N317XCpcYmtta3N0YXJ0IF9SZWY0ODAzNzg0OX17XCpcYmtta3N0YXJ0IF9Ub2M2MDEzNTUxM317XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYxIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjggXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTIuMQ0KXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMjYxXHFsIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM4XGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IFRlcm0gYW5kIFRlcm1pbmF0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgLiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFRoZSB0ZXJtICh0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBUZXJtfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSANCntcKlxia21rc3RhcnQgT0xFX0xJTksxfVwnOTR7XCpcYmtta2VuZCBPTEVfTElOSzF9DQopIG9mIHRoaXMgQWdyZWVtZW50IHNoYWxsIGJlZ2luIG9uIHRoZSBDb250cmFjdCBEYXRlIGFuZCBzaGFsbCB0ZXJtaW5hdGUsIHN1YmplY3QgdG8gb2J0YWluaW5nIGFueSBuZWNlc3NhcnkgcHJpb3IgRkVSQyBhcHByb3ZhbHMgZm9yIHN1Y2ggdGVybWluYXRpb24sIHVwb24gdGhlIGZpcnN0IG9jY3VycmVuY2Ugb2Ygb25lIG9mIHRoZSBmb2xsb3dpbmc6IChhKSBhIHNpbmdsZSBDby1UZW5hbnQgb3IgU2VjdXJlZCBQYXJ0eX17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4ICBiZWNvbWluZyB0aGUgb3duZXIgb2YgdGhlIGVudGlyZSBvd25lcnNoaXAgaW50ZXJlc3QgaW4gYWxsIG9mIHRoZSBFYXNlbWVudHMgYW5kIHRoZSBTaGFyZWQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgUHJlbWlzZXMgYW5kIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgRmFjaWxpdGllcyAoYWZ0ZXIgYSBzZWNvbmQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBiZWNvbWVzIGEgQ28tVGVuYW50IGhlcmV0byksIG99e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgciAoYikgdGhlIG11dHVhbCBhZ3JlZW1lbnQgb2YgYWxsIHRoZSBDby1UZW5hbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBJZiB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgUmVndWxhdG9yeSBBcHByb3ZhbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgIERhdGV9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICBmb3IgYSBDby1UZW5hbnQgaGFzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCAgbm90IG9jY3VycmVkIG9uIG9yIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgYmVmb3JlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDQgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTM1MTI2NDkgZGF0ZSB0aGF0IGlzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzk2NTY5ICB0ZW4gKDEwKX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTM1MTI2NDkgIHllYXJzIGZyb20gdGhlIENvbnRyYWN0IERhdGUsIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQzMjEyNjIxIHRoZW4gc3VjaCBDby1UZW5hbnRccnF1b3RlIHMgaW50ZXJlc3QgaW4gdGhpcyBBZ3JlZW1lbnQgc2hhbGwgaW1tZWRpYXRlbHkgdGVybWluYXRlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMzUxMjY0OSANCiBhbmQgYmUgb2Ygbm8gZnVydGhlciBmb3JjZSBvciBlZmZlY3QsIHN1YmplY3QgdG8gb2J0YWluaW5nIGFueSBuZWNlc3NhcnkgcHJpb3IgRkVSQyBhcHByb3ZhbHMgZm9yIHN1Y2ggdGVybWluYXRpb24ue1wqXGJrbWtlbmQgX1JlZjQ4MDM1NDEyfXtcKlxia21rZW5kIF9SZWY0ODAzNzQ3N317XCpcYmtta2VuZCBfUmVmNDgwMzc4NDl9DQogSWYgdGhlIFJlZ3VsYXRvcnkgQXBwcm92YWwgRGF0ZSBoYXMgbm90IG9jY3VycmVkIHdpdGggcmVzcGVjdCB0byBib3RoIHRoZSBIYXJkaW4gU29sYXIgSUkgUHJvamVjdCBhbmQgdGhlIEhhcmRpbiBTb2xhciBJSUkgUHJvamVjdCBvbiBvciBiZWZvcmUgdGhlIGRhdGUgdGhhdCBpc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDM5NjU2OSAgdGVuICgxMCl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTM1MTI2NDkgIHllYXJzIGZyb20gdGhlIENvbnRyYWN0IERhdGUsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMzIxMjYyMSB0aGVuIHRoaXMgQWdyZWVtZW50IHNoYWxsIGltbWVkaWF0ZWx5IHRlcm1pbmF0ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTM1MTI2NDkgIGFuZH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgYmUgb2Ygbm8gZnVydGhlciBmb3JjZSBvciBlZmZlY3QsIHN1YmplY3QgdG8gb2J0YWluaW5nIGFueSBuZWNlc3NhcnkgcHJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIA0KaW9yIEZFUkMgYXBwcm92YWxzIGZvciBzdWNoIHRlcm1pbmF0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkge1wqXGJrbWtlbmQgX1RvYzYwMTM1NTEzfQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWYxMDE1OTkyMTJ9e1wqXGJrbWtzdGFydCBfVG9jNjAxMzU1MTR9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxMi4yXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgU3VycmVuZGVyIGFuZCBBc3NpZ25tZW50IG9mIFVuZGl2aWRlZCBJbnRlcmVzdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIC4gIEFueSBDby1UZW5hbnQgd2hvIHdpc2hlcyB0byBhYmFuZG9uIGFuZCBkZWNvbW1pc3Npb24gaXRzIFByb2plY3QgbWF5IGVsZWN0DQosIG9yIG5vbi1kZWZhdWx0aW5nIENvLVRlbmFudHMgbWF5IHJlcXVpcmUgYSBkZWZhdWx0aW5nIENvLVRlbmFudCwgcHVyc3VhbnQgdG8gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDExMjkwNzEyIA0KICBSRUYgX1JlZjQ4MDM1NDQ3IFxcdyBcXGggXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTYzNDY2MDcge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNTAwMzQwMDM0MDAzNzAwMDAwMH19fXtcZmxkcnNsdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxjZjFcaW5zcnNpZDc5NDI2MlxjaGFycnNpZDc5NDI2MiAxMy4zKGEpKHYpfX19XHNlY3RkIFxsdHJzZWN0XHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANCiBoZXJlb2YsIHRvIGNvbnZleSBpdHMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgaX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBudGVyZXN0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgYW5kIGFzc2lnbiBpdHMgcmlnaHRzIGhlcmV1bmRlciB0byB0aGUgb3RoZXIgQ28tVGVuYW50cyBpbiBhY2NvcmRhbmNlIHdpdGggdGhlaXIgcmVzcGVjdGl2ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KcHJvcG9ydGlvbmF0ZSBzaGFyZSBvZiB0aGUgU2hhcmVkIFByZW1pc2VzIGFuZCBGYWNpbGl0aWVzLCBBZGRpdGlvbmFsIFByZW1pc2VzLCBBZGRpdGlvbmFsIEZhY2lsaXRpZXMgb3IgRWFzZW1lbnRzIChpbiBlYWNoIGNhc2UgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgY2FsY3VsYXRlZCB3aXRob3V0IHJlZmVyZW5jZSB0byB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBpbnRlcmVzdCBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgU3VycmVuZGVyaW5nIENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICl9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgIGFuZCwgdGhlcmV1cG9uLCB0byBjZWFzZSB0byBoYXZlIGFueSByaWdodCwgdGl0bGUgb3IgaW50ZXJlc3QgaW4gdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgaGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFNoYXJlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFByZW1pc2VzIGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCAgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgLCBBZGRpdGlvbmFsIFByZW1pc2VzLCBBZGRpdGlvbmFsIEZhY2lsaXRpZXMgb3IgRWFzZW1lbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIChzdWNoIENvLVRlbmFudCBhIH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBTdXJyZW5kZXJpbmcgQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5ICkufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIA0KVGhlIFN1cnJlbmRlcmluZyBDby1UZW5hbnQgbXVzdCAoYSkgZGVsaXZlciBhbGwgaW5zdHJ1bWVudHMgb2YgdHJhbnNmZXIgYXMgbWF5IGJlIG5lY2Vzc2FyeSBvciBhcHByb3ByaWF0ZSB0byBlZmZlY3QgdGhlIGNvbnZleWFuY2Ugb2YgaXRzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IGl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpudGVyZXN0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIGFuZCBhc3NpZ25tZW50IG9mIGl0cyByaWdodHMgaGVyZXVuZGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSANCiB0bywgYW5kIHdoaWNoIGFyZSByZWFzb25hYmx5IHNhdGlzZmFjdG9yeSB0bywgdGhlIHJlbWFpbmluZyBDby1UZW5hbnQocyksIChiKSBhc3NpZ24gYW5kIGNvbnZleSB0byB0aGUgcmVtYWluaW5nIENvLVRlbmFudChzKSBhbGwgaXRzIHJpZ2h0cyB1bmRlciB0aGlzIEFncmVlbWVudCwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBwcm92aWRlZH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSAsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgaG93ZXZlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgLCB0aGF0ICh4KSBhbnkgc3VjfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjggaCBzdXJyZW5kZXIgb2YgYW4gZW5jdW1iZXJlZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IG50ZXJlc3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIG1heSBvbmx5IGJlIHN1cnJlbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIGVyZWQgd2l0aCB0aGUgd3JpdHRlbiBjb25zZW50IG9mIGVhY2ggU2VjdXJlZCBQYXJ0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSAgdGhhdCBob2xkcyBhIHNlY3VyaXR5IGludGVyZXN0IGluIHN1Y2ggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgaX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBudGVyZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBhbmQgYSByZWxlYXNlIG9mIHN1Y2ggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBTZWN1cmVkIFBhcnR5XHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgcyBzZWN1cml0eSBpbnRlcmVzdCBiZWluZyBwcm92aWRlZCBieSBzdWNoIFNlY3VyZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjMxMDEyOCBkIFBhcnR5LCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANCndoaWNoIHRoZSBTdXJyZW5kZXJpbmcgQ28tVGVuYW50IHNoYWxsIGJlIG9ibGlnYXRlZCB0byBvYnRhaW4gZnJvbSB0aGUgU2VjdXJlZCBQYXJ0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCAsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIHByb3ZpZGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwICwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBob3dldmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSAsIHRoYXQgaW4gdGhlIGNhc2Ugb2YgYSBzdXJyZW5kZXIgcHVyc3VhbnQgdG8gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IFNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTEyOTA3MTIgICBSRUYgX1JlZjQ4MDM1NDQ3IFxcdyBcXGggXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDc3MTUyIHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNTAwMzQwMDM0MDAzNzAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcY2YxXGluc3JzaWQ3OTQyNjJcY2hhcnJzaWQ3OTQyNjIgMTMuMyhhKSh2KX19fVxzZWN0ZCBcbHRyc2VjdA0KXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICB9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgDQpcYlxpbnNyc2lkMTE2MjQxODMgW1JFREFDVEVEXX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICwgYW5kIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgKHkpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSANCiBhbGwgbmVjZXNzYXJ5IHByaW9yIEZFUkMgYXBwcm92YWxzIG11c3QgYmUgb2J0YWluZWQgYW5kIGFsbCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KIGluY2x1ZGluZyB0aGUgU3VycmVuZGVyaW5nIENvLVRlbmFudCBtdXN0IHRha2UgYWxsIHJlYXNvbmFibGUgc3RlcHMgdG8gb2J0YWluIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgc3VjaCBGRVJDIGFwcHJvdmFsIGF0IHRoZSBTdXJyZW5kZXJpbmcgQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFxycXVvdGUgcyBzb2xlIGNvc3QgYW5kIGV4cGVuc2UsIGFuZCAoYykgY3VyZSBhbGwgQ28tVGVuYW50IEV2ZW50cyBvZiBEZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgDQpmYXVsdCB0aGVuIGV4aXN0aW5nLiAgVGhlIFN1cnJlbmRlcmluZyBDby1UZW5hbnQgc2hhbGwgcmVtYWluIGZ1bGx5IHJlc3BvbnNpYmxlIGZvciwgYW5kIHNoYWxsIHBheSBpdHMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgYXBwbGljYWJsZSBzaGFyZSBwdXJzdWFudCB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEzMjA1MjAxIA0KU2VjdGlvbiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMzIwNTIwMSAgUkVGIF9SZWY0ODAzNzQ0NSBcXHcgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0ICBcXCogTUVSR0VGT1JNQVQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEzMjA1MjAxIHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNDAwMzgwMDMwMDAzMzAwMzcwMDM0MDAzNDAwMzUwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ3OTQyNjIgNi4zfX19XHNlY3RkIFxsdHJzZWN0DQpccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgIG9mLCBhbGwgU2hhcmVkIE8mTSBFeHBlbnNlcyBvZiBzdWNoIFN1cnJlbmRlcmluZyBDby1UZQ0KbmFudCB0aHJvdWdoIHRoZSBlZmZlY3RpdmUgZGF0ZSBvZiBpdHMgc3VycmVuZGVyIG9mIGl0cyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IG50ZXJlc3RzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBhbmQgc2hhbGx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxICBhdCBhbGwgdGltZXMgY29udGludWUgdG8gcGF5IGFueSBTZXBhcmF0ZSBPJk0gRXhwZW5zZXMgYW5kIGFsbCByZWFzb25hYmxlIGNvc3RzLCBpbmNsdWRpbmcgcmVhc29uYWJsZSBhdHRvcm5leXNccnF1b3RlIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSAgZmVlcywgaW5jdXJyZWQgYnkgYW55IG9mIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KIGluIG9idGFpbmluZyBGRVJDIGFwcHJvdmFsIG9mIHN1Y2ggc3VycmVuZGVyLiAgTm8gc3VycmVuZGVyIG9mIGEgQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0IGl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggbnRlcmVzdHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANCiBzaGFsbCByZWxpZXZlIHRoZSBTdXJyZW5kZXJpbmcgQ28tVGVuYW50IG9mIGFueSBvZiBpdHMgb2JsaWdhdGlvbnMgdW5kZXIgdGhpcyBBZ3JlZW1lbnQsIHRoZSBFYXNlbWVudHMsIHRoZSBJbnRlcmNvbm5lY3Rpb24gQWdyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANCmVlbWVudHMgb3IgUG93ZXIgUHVyY2hhc2UgQWdyZWVtZW50cyBvciBhbnkgb3RoZXIgYWdyZWVtZW50IGVudGVyZWQgaW50byBwdXJzdWFudCB0byB0aGl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIHMgQWdyZWVtZW50LCBvciBpdHMgb2JsaWdhdGlvbnMgaGVyZXVuZGVyIHdpdGggcmVzcGVjdCB0byBpdHMgU2VwYXJhdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NCBQcm9qZWN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSAsIHVubGVzcyBleHByZXNzbHkgcHJvdmlkZWQgZm9yIGluIHRoaXMgQWdyZWVtZW50LCBvciBpbiBhIHdyaXRpbmcgYW1vbmcgdGhlIENvLVRlbmFudHMufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSANCntcKlxia21rZW5kIF9SZWYxMDE1OTkyMTJ9e1wqXGJrbWtlbmQgX1RvYzYwMTM1NTE0fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWYxMDE2MDAwODN9e1wqXGJrbWtzdGFydCBfUmVmNDgwMzU0MTN9e1wqXGJrbWtzdGFydCBfUmVmNDgwMzc0Nzh9e1wqXGJrbWtzdGFydCBfVG9jNjAxMzU1MTV9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxMi4zDQpcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgRGVjb21taXNzaW9uaW5nIG9mIGEgUHJvamVjdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIC4gIEFueSBTdXJyZW5kZXJpbmcgQ28tVGVuYW50IHNoYWxsIHByb3ZpZGUgfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIA0KXGJcaW5zcnNpZDExNjI0MTgzIFtSRURBQ1RFRF19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgZGF5cyB3cml0dGVuIG5vdGljZSBvZiBpdHMgaW50ZW50IHRvIGRlY29tbWlzc2lvbiBhbmQgYWJhbmRvbiBpdHMgUHJvamVjdCB0byB0aGUgb3RoZXIgQ28tVGVuYW50cyBhbmQgdGhlIENvLVRlbmFuY3kgTWFuYWdlciAodGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBXaXRoZHJhd2FsIE5vdGljZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSApLiAgVGhlIFN1cnJlbmRlcmluZyBDby1UZW5hbnQgc2hhbGx7XCpcYmtta2VuZCBfUmVmMTAxNjAwMDgzfSBiZSByZXNwb25zaWJsZSBmb3IgdGhlIGRlY29tbWlzc2lvbmluZyBhbmQgcmVtb3ZhbCBvZiBpdHMgU2VwYXJhdGUgRmFjaWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjggDQppdGllcyBhbmQgZm9yIGFsbCByZWxhdGVkIGFjdGlvbnMgdGFrZW4gYW5kIGNvc3RzIGluY3VycmVkIGJ5IHRoZSBvdGhlciBDby1UZW5hbnRzIGFzIGEgcmVzdWx0IG9mIHN1Y2ggQ28tVGVuYW50XHJxdW90ZSBzIGFiYW5kb25tZW50IG9mIGl0cyBQcm9qZWN0LiAgSWYgdGhlIFN1cnJlbmRlcmluZyBDby1UZW5hbnQgZmFpbHMgdG8gcHJvcGVybHkgZGVjb21taXNzaW9uIGFuZCByZW1vdmUgaXRzIFNlcGFyYXRlIEZhY2lsaXRpZXMsIA0KaWYgYW55IHN1Y2ggZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTczMjYxOCBhaX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTMxNzgxIA0KbHVyZSBjb3VsZCByZWFzb25hYmx5IGNyZWF0ZSBhIGxpYWJpbGl0eSBmb3IgdGhlIHJlbWFpbmluZyBDby1UZW5hbnRzLCB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIG1heSwgc3ViamVjdCB0byB0aGUgZGlyZWN0aW9uIGFuZCBjb250cm9sIG9mIHRoZSByZW1haW5pbmcgQ28tVGVuYW50cywgZGVjb21taXNzaW9uIGFuZCByZW1vdmUgc2FtZSBvbiBiZWhhbGYgb2Ygc3VjaCBTdXJyZW5kZXJpbmcgQ28tVGVuYW50LCBidXQgbw0Kbmx5IHRvIHRoZSBleHRlbnQgbmVjZXNzYXJ5IHRvIGF2b2lkIHRoZSBhZm9yZW1lbnRpb25lZCBsaWFiaWxpdHksIGFuZCBzaGFsbCBjaGFyZ2UgdGhlIFN1cnJlbmRlcmluZyBDby1UZW5hbnQgYWxsIHJlYXNvbmFibGUgYW5kIG5lY2Vzc2FyeSBjb3N0cyBpbmN1cnJlZCB0byBhY2NvbXBsaXNoIHN1Y2ggZGVjb21taXNzaW9uaW5nIGFuZCByZW1vdmFsIGFuZCBhbnkgYWRkaXRpb25hbCBleHBlbnNlcyBvZiB0aGUgcmVtb3ZhbCBvZiBhbnkgb2YgDQp0aGUgU2hhcmVkIEZhY2lsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MTEwMDgxIGl0aWVzLCBpbmNsdWRpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANCmNvc3RzIGluY3VycmVkIGluIHRoZSByZXN0b3JhdGlvbiBvZiBpbnRlcmVzdHMgaW4gbGFuZCBhcyByZXF1aXJlZCBieSB0aGUgRWFzZW1lbnRzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IGFuZCBhbnkgcGVybWl0cyBmb3IgYW55IHN1Y2ggZGVjb21taXNzaW9uaW5nIFByb2plY3QgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANCihjb2xsZWN0aXZlbHksIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFdpdGhkcmF3YWwgQ29zdHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IFwnOTQNCikuICBUaGUgQ28tVGVuYW5jeSBNYW5hZ2VyIHNoYWxsIGFkbWluaXN0ZXIgdGhlIGNhbGN1bGF0aW9uLCBjb2xsZWN0aW9uLCBhbmQgZGlzdHJpYnV0aW9uIG9mIHRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IGUgV2l0aGRyYXdhbCBDb3N0cywgYXMgZm9sbG93czp7XCpcYmtta2VuZCBfUmVmNDgwMzU0MTN9e1wqXGJrbWtlbmQgX1JlZjQ4MDM3NDc4fQ0Ke1wqXGJrbWtlbmQgX1RvYzYwMTM1NTE1fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTQxNH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1NzMyNjE4IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChhKVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczI2M1xxbCBcZmkxNDQwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MjE2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxpbHZsMlxvdXRsaW5lbGV2ZWwyXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTczMjYxOCBUaGUgQ28tVGVuYW5jeSBNYW5hZ2VyIHNoYWxsIGVzdGltYXRlIHRoZSBXaXRoZHJhd2FsIENvc3RzIGFuZCBzaGFsbCBwcm92aWRlIHdyaXR0ZW4gbm90aWNlIG9mIHN1Y2ggY29zdHMgdG8gdGhlIFN1cnJlbmRlcmluZyBDby1UZW5hbnQgd2l0aGluIH17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTE2MjQxODMgW1JFREFDVEVEXX17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MzE3ODEgIGRheXMgYWZ0ZXIgQ28tVGVuYW5jeSBNYW4NCmFnZXIgaGFzIHJlY2VpdmVkIHRoZSBXaXRoZHJhd2FsIE5vdGljZS4gIFRoZSBDby1UZW5hbmN5IE1hbmFnZXIgbWF5IGVuZ2FnZSBhIHRoaXJkIHBhcnR5IGNvbnN1bHRhbnQgdG8gYXNzaXN0IGluIHRoZSBjYWxjdWxhdGlvbiBvZiB0aGUgV2l0aGRyYXdhbCBDb3N0cywgaW4gd2hpY2ggY2FzZSwgc3VjaCBjb25zdWx0aW5nIGZlZXMgc2hhbGwgYmUgcGFpZCBieSB0aGUgU3VycmVuZGVyaW5nIENvLVRlbmFudC4NCntcKlxia21rZW5kIF9SZWY0ODAzNTQxNH0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzU0MTV9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTMxNzgxIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChiKVx0YWJ9VGhlIFN1cnJlbmRlcmluZyBDby1UZW5hbnQgc2hhbGwsIHdpdGhpbiB9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgDQpcYlxpbnNyc2lkMTE2MjQxODMgW1JFREFDVEVEXX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTMxNzgxICBkYXlzIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MTEwMDgxIA0KIHRoZSByZWNlaXB0IG9mIHRoZSB3cml0dGVuIG5vdGljZSBvZiB0aGUgV2l0aGRyYXdhbCBDb3N0cywgcGF5IHRoZSBXaXRoZHJhd2FsIENvc3RzIHRvIHRoZSBDby1UZW5hbmN5IE1hbmFnZXIuICBUaGUgV2l0aGRyYXdhbCBDb3N0cyBzaGFsbCBiZSBtYWludGFpbmVkIGJ5IHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgaW4gYSByZXNlcnZlIGFjY291bnQgYW5kIHVzZWQgYnkgdGhlIA0KQ28tVGVuYW5jeSBNYW5hZ2VyIGZvciB0aGUgcGF5bWVudCBvZiBTaGFyZWQgTyZNIEV4cGVuc2VzICh0byB0aGUgZXh0ZW50IHN1Y2ggYW1vdW50cyB3ZXJlIGNvbGxlY3RlZCBmcm9tIHRoZSBTdXJyZW5kZXJpbmcgQ28tVGVuYW50IGFzIHByb3ZpZGVkIGFib3ZlKSB0byBiZSBhcHBsaWVkIGZvciB0aGUgYmVuZWZpdCBvZiB0aGUgcmVtYWluaW5nIENvLVRlbmFudHMgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZWlyIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBpdHMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgYXBwbGljYWJsZSBzaGFyZXMgb2Ygc3VjaCBleHBlbnNlcyBwdXJzdWFudCB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEzMjA1MjAxIFNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMzIwNTIwMSAgUkVGIF9SZWY0ODAzNzQ0NSBcXHcgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0ICBcXCogTUVSR0VGT1JNQVQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMzIwNTIwMSB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNDAwMzgwMDMwMDAzMzAwMzcwMDM0MDAzNDAwMzUwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ3OTQyNjIgNi4zfX19XHNlY3RkIFxsdHJzZWN0DQpccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTExMDA4MSAgYW5kIGZvciByZW1vdmFsIG9mIFNoYXJlZCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQogYW5kIEFkZGl0aW9uYWwgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTExMDA4MSAgYW5kIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODM1MDkwOCAgcmVzdG9yYXRpb24gb2YgdGhlIHJlbGV2YW50IGxhbmQsIGFzIG5lY2Vzc2FyeS57XCpcYmtta2VuZCBfUmVmNDgwMzU0MTV9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1NDE2fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgzNTA5MDggXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGMpXHRhYn1BbnkgZGlzcHV0ZSBpbiByZWdhcmQgdG8gdGhlIGFtb3VudCBvZiB0aGUgV2l0aGRyYXcNCmFsIENvc3RzIHNoYWxsIGJlIHN1Ym1pdHRlZCB0byBkaXNwdXRlIHJlc29sdXRpb24gcHVyc3VhbnQgdG8gdGhlIHRlcm1zIG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTU3MzM2MzcgU2VjdGlvbiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE1NzMzNjM3ICBSRUYgX1JlZjUwNzEyOTI0IFxcdyBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgIFxcKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE1NzMzNjM3IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM1MDAzMDAwMzcwMDMxMDAzMjAwMzkwMDMyMDAzNDAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDc5NDI2MiAxNi43fX19XHNlY3RkIFxsdHJzZWN0DQpccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIge1wqXGJrbWtlbmQgX1JlZjQ4MDM1NDE2fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTQxN317XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoZClcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgDQpBIFN1cnJlbmRlcmluZyBDfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBvLVRlbmFudCB3aG8gZmFpbHMgdG8gcGF5IHRoZSBXaXRoZHJhd2FsIENvc3RzIHNoYWxsIGltbWVkaWF0ZWx5IGZpbGUgZm9yIGFsbCBGRVJDIGFwcHJvdmFscyBuZWNlc3NhcnkgdG8gY2Vhc2UgYW5kIGRlc2lzdCBmcm9tIHRoZSB1c2Ugb2YgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBTaGFyZWQgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICBhbmQsIGlmIGFwcGxpY2FibGUsIEFkZGl0aW9uYWwgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgDQosIGFuZCB1cG9uIG9idGFpbmluZyB0aGUgbmVjZXNzYXJ5IHByaW9yIEZFUkMgYXBwcm92YWxzLCBmb3JmZWl0IGFsbCBvZiBpdHMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgaX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBudGVyZXN0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIGhlcmV1bmRlciB0byB0aGUgb3RoZXIgQ28tVGVuYW50cywgYW5kIGNlYXNlIGFuZCBkZXNpc3QgZnJvbSBzdWNoIHVzZTsgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkxODYxMTUgcHJvdmlkZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANCiB0aGF0IHRoZSBDby1UZW5hbnRzIHNoYWxsIGFsc28gaGF2ZSBvYnRhaW5lZCBhbnkgbmVjZXNzYXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIHkgRkVSQyBhcHByb3ZhbHMgd2l0aCByZXNwZWN0IHRvIHN1Y2ggZm9yZmVpdCBhbmQgdHJhbnNmZXIgb2YgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IGl9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBudGVyZXN0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIC4gIEFueSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IG50ZXJlc3RzfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgb2YgdGhlIFN1cnJlbmRlcmluZyBDby1UZW5hbnQgdHJhbnNmZXJyZWQgb3Igc3VycmVuZGVyZWQgdG8gdGhlIG90aGVyIENvLVRlbmFudHMgc2hhbGwgYmUgYWxsb2NhdGVkIHRvIHRoZSBvdGhlciBDby1UZW5hbnRzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgDQppbiBhY2NvcmRhbmNlIHdpdGggdGhlaXIgcmVzcGVjdGl2ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KcHJvcG9ydGlvbmF0ZSBzaGFyZSBvZiB0aGUgYXBwbGljYWJsZSBTaGFyZWQgUHJlbWlzZXMgYW5kIEZhY2lsaXRpZXMsIEFkZGl0aW9uYWwgUHJlbWlzZXMsIEFkZGl0aW9uYWwgRmFjaWxpdGllcyBvciBFYXNlbWVudHMgKGluIGVhY2ggY2FzZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBjYWxjdWxhdGVkIHdpdGhvdXQgcmVmZXJlbmNlIHRvIHRoZSB9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IGludGVyZXN0IG9mfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBTdXJyZW5kZXJpbmcgQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgKX17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCAufXtccnRsY2hcZmNzMSBcYWYxXGFmczE2IFxsdHJjaFxmY3MwIFxjczg5XGZzMTZcZGJjaFxhZjFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSB7XCpcYmtta2VuZCBfUmVmNDgwMzU0MTd9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjEwMjMwOTkxNX17XCpcYmtta3N0YXJ0IF9Ub2M2MDEzNTUxNn17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYxIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDEyLjRcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczI2MVxxbCBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgRGlzdHJpYnV0aW9uIG9uIFRlcm1pbmF0aW9uIG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIGYgdGhpcyBBZ3JlZW1lbnR9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTQ5NzA4NDAgLiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANClVwb24gdGVybWluYXRpb24gb2YgdGhpcyBBZ3JlZW1lbnQgb3IgaW4gdGhlIGV2ZW50IHRoYXQgdGhlIENvLVRlbmFudHMgZGVjaWRlIHRvIGRlY29tbWlzc2lvbiBhbGwgb2YgdGhlIFByb2plY3RzIGFuZCB0byBwcm9jZWVkIHdpdGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSB0aGUgcmVtb3ZhbCBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICwgQWRkaXRpb25hbCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSAgYW5kIHRoZSBTZXBhcmF0ZSBGYWNpbGl0aWVzLCB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyIHNoYWxsIHRha2UgYWNjb3VudCBvZiBhbGwgb2YgdGhlIENvLVRlbmFudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgXHJxdW90ZSAgam9pbnQgYXNzZXRzIHB1cmNoYXNlZCBwdXJzdWFudCB0byB0aGUgQXBwcm92ZWQgQ28tVGVuYW5jeSBPJk0gQnVkZ2V0LCBpbmNsdWRpbmcgdGhlIFNoYXJlZCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgLCBBZGRpdGlvbmFsIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgLCBqb2ludCBsaWFiaWxpdGllcywgYW5kIGV4aXN0aW5nIHRoaXJkIHBhcnR5IGFncmVlbWVudHMgYW5kLCBzdWJqZWN0IHRvIHRoZSBkaXJlY3Rpb24gYW5kIGNvbnRyb2wgb2YgdGhlIENvLVRlbmFudHMgYW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjggDQpkIG9idGFpbmluZyBhbnkgbmVjZXNzYXJ5IEZFUkMgYXBwcm92YWxzIHRvIGRpc3Bvc2Ugb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgIGFuZCwgaWYgYXBwbGljYWJsZSwgQWRkaXRpb25hbCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IA0KLCBzaGFsbCBwcm9jZWVkIHdpdGggdGhlIGxpcXVpZGF0aW9uIHRoZXJlb2YuICBUaGUgQ28tVGVuYW50c1xycXVvdGUgIGpvaW50IGFzc2V0cyBwdXJjaH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTczMjYxOCBhc2VkIHB1cnN1YW50IHRvIHRoZSBBcHByb3ZlZCBDby1UZW5hbmN5IE8mTSBCdWRnZXQgc2hhbGwgYmUgbGlxdWlkYXRlZCB1bmRlciB0aGUgc3VwZXJ2aXNpb24gb2YgdGh9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTMxNzgxIGUgQ28tVGVuYW5jeSBNYW5hZ2VyIGFzIHByb21wdGx5IGFzIGlzIGNvbnNpc3RlbnQgd2l0aCBvYnRhaW5pbmcgYSByZWFzb25hYmxlIHZhbHVlIHRoZXJlZm9yLCBhbmQgdGhlIHByb2NlZWRzIHRoZXJlZnJvbSwgdA0Kb2dldGhlciB3aXRoIGFueSBhc3NldHMgZGlzdHJpYnV0ZWQgaW4ta2luZCwgc2hhbGwgYmUgYXBwbGllZCBhbmQgZGlzdHJpYnV0ZWQgYXMgZm9sbG93czp7XCpcYmtta2VuZCBfUmVmMTAyMzA5OTE1fXtcKlxia21rZW5kIF9Ub2M2MDEzNTUxNn0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzU0MTh9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTMxNzgxIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChhKVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczI2M1xxbCBcZmkxNDQwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MjE2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxpbHZsMlxvdXRsaW5lbGV2ZWwyXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTMxNzgxIFRvIHRoZSBwYXltZW50IG9mIGRlYnRzIGFuZCBsaWFiaWxpdGllcyBvZiB0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTExMDA4MSBlIENvLVRlbmFudHMgdG8gdGhpcmQgcGFydGllcyBpbiBjb25uZWN0aW9uIHdpdGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgKGkpIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MTEwMDgxIHRoZSBTaGFyZWQgRmFjaWxpdGllcyB3aGljaCBhcmUgdGhlbiBkdWUgYW5kIHRoZSBleHBlbnNlcyBvZiBsaXF1aWRhdGlvbiBvbiBhIHByby1yYXRhIGFuZCBwYXJpIHBhc3N1IGJhc2lzLCBiYXNlZCB1cG9uIGVhY2ggQ28tVGVuYW50XHJxdW90ZSBzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KT3BlcmF0aW9uYWwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MTEwMDgxIFByby1SYXRhIFNoYXJlcyBpbiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgYXMgb2YgdGhlIGRhdGUgb2YgbGlxdWlkYXRpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCB7XCpcYmtta2VuZCBfUmVmNDgwMzU0MTh9LCBhbmQgKGlpKSB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTExMDA4MSB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTQxOX10aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgQWRkaXRpb25hbCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkxMTAwODEgDQpGYWNpbGl0aWVzIHdoaWNoIGFyZSB0aGVuIGR1ZSBhbmQgdGhlIGV4cGVuc2VzIG9mIGxpcXVpZGF0aW9uIG9uIGEgcHJvLXJhdGEgYW5kIHBhcmkgcGFzc3UgYmFzaXMsIGJhc2VkIHVwb24gZWFjaCBDby1UZW5hbnRccnF1b3RlIHMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgQWRkaXRpb25hbCBQcmVtaXNlcyBvciBGYWNpbGl0aWVzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MTEwMDgxIFByby1SYXRhIFNoYXJlcyBpbiB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgQWRkaXRpb25hbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTExMDA4MSAgRmFjaWxpdGllcyBhcyBvZiB0aGUgZGF0ZSBvZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0IGxpcXVpZGF0aW9uLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MzUwOTA4IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChiKVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MzUwOTA4IA0KVG8gdGhlIHNldHRpbmcgdXAgb2YgYW55IHJlc2VydmVzIHdoaWNoIGFyZSByZWFzb25hYmx5IG5lY2Vzc2FyeSBmb3IgYW55IGNvbnRpbmdlbnQgb3IgdW5mb3Jlc2VlbiBsaWFiaWxpdGllcyBvciBvYmxpZ2F0aW9ucyBvciBkZWJ0cyBub3QgeWV0IHBheWFibGUgYnkgdGhlIENvLVRlbmFudHMgaW4gY29ubmVjdGlvbiB3aXRoIHRoZSBTaGFyZWQgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDQgIG9yIEFkZGl0aW9uYWwgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODM1MDkwOCAsIGluY2x1ZGluZyBhbnkgcmVzZXJ2ZXMgdG8gcGF5IGNvc3RzIGFzc29jaWF0ZWQgd2l0aCB0aGUgZGVjb21taXNzaW9uaW5nIGFuZCByZW1vdmFsIG9mIHRoZSBTaGFyZWQgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDQgLCBBZGRpdGlvbmFsIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgzNTA5MDggIG9yIGFueSBTZXBhcmF0ZSBGYWNpbGl0aWVzIG5vdCB5ZXQgcmVtb3ZlZCBieSBhIENvLVRlbmFudC57XCpcYmtta2VuZCBfUmVmNDgwMzU0MTl9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1NDIwfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgzNTA5MDggXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGMpXHRhYn1Bbnkgc3VtIHJlbWFpbmluZyBhZnRlciB0aGUgcGF5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgxMjE0MyBtZW50IG9mIGFtb3VudHMgaW4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MjQxOTU1IFNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTI0MTk1NSAgUkVGIF9SZWY0ODAzNTQxNCBcXHcgXFxoIH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgIFxcKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkyNDE5NTUge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNTAwMzQwMDMxMDAzNDAwMDAwMH19DQp9e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNzk0MjYyIDEyLjMoYSl9fX1cc2VjdGQgXGx0cnNlY3RccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICBhbmQgfXtcZmllbGR7XCpcZmxkaW5zdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MjQxOTU1ICBSRUYgX1JlZjQ4MDM1NDE1IFxcdyBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgIFxcKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkyNDE5NTUge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM1MDAzNDAwMzEwMDM1MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNzk0MjYyIDEyLjMoYil9fX1cc2VjdGQgXGx0cnNlY3QNClxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIGFib3ZlIHNoYWxsIGJlIGRpc3RyaWJ1dGVkLCBvbiBhIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgDQpwcm8tcmF0YX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgIGJhc2lzLCBiYXNlZCB1cG9uIGVhY2ggQ28tVGVuYW50XHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAgKGkpfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBPcGVyYXRpb25hbCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IFByby1SYXRhIFNoYXJlIGluIHRoZSBTaGFyZWQgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDQgIGFuZCAoaWkpIEFkZGl0aW9uYWwgUHJlbWlzZXMgb3IgRmFjaWxpdGllcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkxMTAwODEgUHJvLVJhdGEgU2hhcmVzIGluIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBBZGRpdGlvbmFsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkxMTAwODEgIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IC57XCpcYmtta2VuZCBfUmVmNDgwMzU0MjB9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1NDIxfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjggXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGQpXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjggDQpBdCB0aGUgcmVxdWVzdCBvZiBhbmQgc3ViamVjdCB0byB0aGUgZGlyZWN0aW9uIGFuZCBjb250cm9sIG9mIHRoZSBDby1UZW5hbnRzIGFuZCBvYnRhaW5pbmcgYW55IG5lY2Vzc2FyeSBGRVJDIGFwcHJvdmFsIGZvciBzdWNoIGRpc2Nvbm5lY3Rpb24sIHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgbWF5LCBpbiBvcmRlciB0byBlZmZlY3R1YXRlIHRoZSBsaXF1aWRhdGlvbiBvZiB0aGUgQ28tVGVuYW50c317XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1NzMyNjE4IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MzE3ODEgIGpvaW50IGFzc2V0cyBwdXJjaGFzZWQgcHVyc3VhbnQgdG8gdGhlIEFwcHJvdmVkIENvLVRlbmFuY3kgTyZNIEJ1ZGdldCwgZGlzY29ubmVjdCB0aGUgU2hhcmVkIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0ICBhbmQgQWRkaXRpb25hbCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MzE3ODEgIGZyb20gdGhlIEludGVyY29ubmVjdGlvbiBGYWNpbGl0aWVzIGFuZCB0aGUgUHJvamVjdHMue1wqXGJrbWtlbmQgX1JlZjQ4MDM1NDIxfQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTQyMn17XCpcYmtta3N0YXJ0IF9SZWY0ODAzNzQ3OX17XCpcYmtta3N0YXJ0IF9Ub2M2MDEzNTUxN317XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYxIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkzMTc4MSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxMi41XHRhYn19XHBhcmRccGxhaW4gXGx0cnBhcg0KXHMyNjFccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MzE3ODEgVmFsdWF0aW9uIGFuZCBEaXN0cmlidXRpb24gb2YgTm9uLUNhc2ggRGlzdHJpYnV0aW9uc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIC4gIFRvIHRoZSBleHRlbnQgdGhhdCBub24tY2FzaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgY29uc2lkZXJhdGlvbiBpcyBkaXN0cmlidXRlZCBpbiBraW5kIGFzIHBlcm1pdHRlZCBoZXJlaW4sIHRoZSBmYWlyIHZhbHVlIG9mIHN1Y2ggYXNzZXRzIHNoYWxsIGZpcnN0IGJlIGRldGVybWluZWQgYnkgYW4gaW5kZXBlbmRlbnQgdmFsdWF0aW9uIGV4cGVydCBzZWxlY3RlZCBieSB0aGUgQ28tVGVuYW50cywgaW5jbHVkaW5nIHNlcGFyYXR9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgZSB2YWx1YXRpb25zIGZvciBlYWNoIG9mIHRoZSBTaGFyZWQgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICwgQWRkaXRpb25hbCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSANCiwgYW5kIHRoZSBkaXN0cmlidXRpb24gb2YgYXNzZXRzIHNoYWxsIGJlIG1hZGUgaW4gYWNjb3JkYW5jZSB3aXRoIHN1Y2ggdmFsdWF0aW9uLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IHtcKlxia21rZW5kIF9SZWY0ODAzNTQyMn17XCpcYmtta2VuZCBfUmVmNDgwMzc0Nzl9e1wqXGJrbWtlbmQgX1RvYzYwMTM1NTE3fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M2MDEzNTUxOH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYxIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkyMDA5MTIgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTIuNlx0YWJ9fVxwYXJkIFxsdHJwYXJcczI2MVxxbCBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM4XGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkyMDA5MTIgUmlnaHRzIG9mIFJldmVydGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQouIHtcKlxia21rZW5kIF9Ub2M2MDEzNTUxOH0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNTQyMjAxMzN9e1wqXGJrbWtzdGFydCBfUmVmNTQyNjk0OTV9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTk3ODczMCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoYSlcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczI2M1xxbCBcZmkxNDQwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDIxNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcaWx2bDJcb3V0bGluZWxldmVsMlxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDk5Nzg3MzAgVGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgIFF1aXRjbGFpbSBEZWVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5OTc4NzMwICB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IGFuZCBhbnkgQmlsbCBvZiBTYWxlIG9yIFBhcnRpYWwgQXNzaWdubWVudCBvZiBFYXNlbWVudHMgZnJvbSBIYXJkaW4gU29sYXIgdG8gSGFyZGluIFNvbGFyIElJIHNoYWxsIGNvbnRhaW4gYSByaWdodCBvZiByZXZlcnRlciBpbiBmYXZvciBvZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDk5Nzg3MzAgDQpIYXJkaW4gU29sYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgKHRoZSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQzMjEyNjIxIEhTSUkgUmV2ZXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcJzk0KSBwcm92aWRpbmcgdGhhdCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTk3ODczMCBIYXJkaW4gU29sYXIgSUlccnF1b3RlIHMgVW5kaXZpZGVkIEludGVyZXN0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KIGluIHRoZSBTaGFyZWQgUHJlbWlzZXMsIFNoYXJlZCBGYWNpbGl0aWVzLCBBZGRpdGlvbmFsIFByZW1pc2VzLCBBZGRpdGlvbmFsIEZhY2lsaXRpZXMgYW5kIEVhc2VtZW50cywgYXMgYXBwbGljYWJsZSwgd2lsbCAoc3ViamVjdCB0byBhbnkgbGFuZG93bmVyLCBGRVJDIG9yIG90aGVyIHJlZ3VsYXRvcnkgYXBwcm92YWxzIHJlcXVpcmVkIGZvciBzdWNoIHRyYW5zZmVyIHdoaWNoIEhhcmRpbiBTbw0KbGFyIElJIHdpbGwgdXNlIGNvbW1lcmNpYWxseSByZWFzb25hYmxlIGVmZm9ydHMgdG8gb2J0YWluKSByZXZlcnQgYmFjayB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDk5Nzg3MzAgSGFyZGluIFNvbGFyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgIGluIHRoZSBldmVudCB0aGF0IChpKSB0aGUgUmVndWxhdG9yeSBBcHByb3ZhbCBEYX17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MTI3OTE0IHRlIGFzIGFwcGxpY2FibGUgdG8gSGFyZGluIFNvbGFyIElJIGRvZXMgbm90IG9jY3VyIG9uIG9yIGJlZm9yZSB0aGUgZGF0ZSB0aGF0IGlzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzk2NTY5ICB0ZW4gKDEwKX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MTI3OTE0ICB5ZWFycyBmcm9tIHRoZSBDb250cmFjdCBEYXRlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgLCBvciAoaWkpIGZvbGxvd2luZyBjb21tZW5jZW1lbnQgb2Ygb3BlcmF0aW9ucyBvZiBpdHMgUHJvamVjdCwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MzEyMzk4IA0KSGFyZGluIFNvbGFyIElJIGlzIGRlZW1lZCBhbiBBYmFuZG9uZWQgUHJvamVjdCAoZGVmaW5lZCBiZWxvdykuXH4gQXMgdXNlZCBoZXJlaW4sIGFuIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkzMTIzOTgge1wqXGJrbWtzdGFydCBfSGxrNTgyNDY2NDZ9QWJhbmRvbmVkIFByb2plY3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTMxMjM5OCBcJzk0IGlzIGEgUHJvamVjdCB0aGF0IChhKSBmYWlscyB0byBvcGVyYXRlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IGZvciBhIHBlcmlvZCBpbiBleGNlc3Mgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNjM2MzQyICB0d28gKDIpIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KeWVhcnMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MzEyMzk4IGZvciByZWFzb25zIG90aGVyIHRoYW4gRm9yY2UgTWFqZXVyZSwgXH59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTMxMjM5OCANCiBhYmFuZG9ucyB0aGUgdXNlIG9yIG9wZXJhdGlvbiBvZiBpdHMgUHJvamVjdCB3aXRob3V0IHRoZSBpbnRlbnRpb24gdG8gcmVzdW1lIHRoZSB1c2Ugb3Igb3BlcmF0aW9uLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkxMjU5MDcgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MzEyMzk4ICAofXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBifXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MzEyMzk4ICkgZGVmYXVsdHMgb24gaXRzIG9ibGlnYXRpb25zIHB1cnN1YW50IHRvIHRoaXMgQWdyZWVtZW50IChpbmNsdWRpbmcgYW55IHBheW1lbnQgb2JsaWdhdGlvbnMpIGFuZCBmYWlscyB0byBjdXJlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0Kc3VjaCBkZWZhdWx0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTMxMjM5OCB3aXRoaW4gdGhlIGFwcGxpY2FibGUgY3VyZSBwZXJpb2RzIHNldCBmb3J0aCBoZXJlaW57XCpcYmtta2VuZCBfSGxrNTgyNDY2NDZ9Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTEyNzkxNCAgIHtcKlxia21rZW5kIF9SZWY1NDIyMDEzM30NCntcKlxia21rZW5kIF9SZWY1NDI2OTQ5NX0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNTQyMjAyODB9e1wqXGJrbWtzdGFydCBfUmVmNTQyNjk1MTd9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTEyNzkxNCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoYilcdGFifVRoZSBRdWl0Y2xhaW0gRGVlZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTMzMDM2NyBhbmQgYW55IEJpbGwgb2YgU2FsZSBvciBQYXJ0aWFsIEFzc2lnbm1lbnQgb2YgRWFzZW1lbnRzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTEyNzkxNCBmcm9tIEhhcmRpbiBTb2xhciB0byBIYXJkaW4gU29sYXIgSUlJIHNoYWxsIGNvbnRhaW4gYSByaWdodCBvZiByZXZlcnRlciBpbiBmYXZvciBvZiBIYXJkaW4gU29sYXIgKHRoZSANClwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkzMTIzOTggSFNJSUkgUmV2ZXJ0ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUxMjc5MTQgXCc5NCkgcHJvdmlkaW5nIHRoYXQgSGFyZGluIFNvbGFyIElJSVxycXVvdGUgcyBVbmRpdmlkZWQgSW50ZXJlc3RzIGluIHRoZSBTaGFyZWQgUHJlbWlzZXN9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICwgU2hhcmVkIEZhY2lsaXRpZXMsIEFkZGl0aW9uYWwgUHJlbWlzZXMsIEFkZGl0aW9uYWwgRmFjaWxpdGllcyBhbmQgRWFzZW1lbnRzLCBhcyBhcHBsaWNhYmxlLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTEyNzkxNCAgd2lsbCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANCihzdWJqZWN0IHRvIGFueSBsYW5kb3duZXIsIEZFUkMgb3Igb3RoZXIgcmVndWxhdG9yeSBhcHByb3ZhbHMgcmVxdWlyZWQgZm9yIHN1Y2ggdHJhbnNmZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMjIwOTk5ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANCndoaWNoIEhhcmRpbiBTb2xhciBJSUkgd2lsbCB1c2UgY29tbWVyY2lhbGx5IHJlYXNvbmFibGUgZWZmb3J0cyB0byBvYnRhaW4pIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTEyNzkxNCByZXZlcnQgYmFjayB0byBIYXJkaW4gU29sYXIgaW4gdGhlIGV2ZW50IHRoYXQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgKGkpIH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MTI3OTE0IHRoZSBSZWd1bGF0b3J5IEFwcHJvdmFsIERhdGUgYXMgYXBwbGljYWJsZSB0byBIYXJkaW4gU29sYXIgSUlJIGRvZXMgbm90IG9jY3VyIG9uIG9yIGJlZm9yZSB0aGUgZGF0ZSB0aGF0IGlzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzk2NTY5ICB0ZW4gKDEwKX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MTI3OTE0ICB5ZWFycyBmcm9tIHRoZSBDb250cmFjdCBEYXRlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgLCBvciAoaWkpIGZvbGxvd2luZyBjb21tZW5jZW1lbnQgb2Ygb3BlcmF0aW9ucyBvZiBpdHMgUHJvamVjdCwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MzEyMzk4IA0KSGFyZGluIFNvbGFyIElJSSBpcyBkZWVtZWQgYW4gQWJhbmRvbmVkIFByb2plY3QufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MTI3OTE0ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTI1MX0gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MTI3OTE0IA0Ke1wqXGJrbWtlbmQgX1JlZjU0MjIwMjgwfXtcKlxia21rZW5kIF9SZWY1NDI2OTUxN317XCpcYmtta2VuZCBfUmVmNDgwMzUyNTF9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjEwMTMzOTgzNX17XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTQyM317XCpcYmtta3N0YXJ0IF9Ub2M2MDEzNTUxOX17XCpcYmtta2VuZCBfUmVmMTAxMzM5ODM1fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNTkgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcYlxjYXBzXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IA0KXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgQXJ0aWNsZSAxM1x0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczI1OVxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4NzIwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM4XG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcYlxjYXBzXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgXGxpbmUgREVGQVVMVCBBTkQgUkVNRURJRVN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjgge1wqXGJrbWtlbmQgX1JlZjQ4MDM1NDIzfQ0Ke1wqXGJrbWtlbmQgX1RvYzYwMTM1NTE5fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTQyNH17XCpcYmtta3N0YXJ0IF9Ub2M2MDEzNTUyMH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYxIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjggXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTMuMVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzMjYxXHFsIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM4XGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IENvLVRlbmFudCBFdmVudHMgb2YgRGVmYXVsdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE1OTAxNDNcc3B2IHtcKlxia21rZW5kIF9SZWY0ODAzNTQyNH17XCpcYmtta2VuZCBfVG9jNjAxMzU1MjB9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGFmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBUaGUgZm9sbG93aW5nIHNoYWxsIGVhY2ggY29uc3RpdHV0ZSBhIGRlZmF1bHQgYnkgYSBDby1UZW5hbnQgdW5kZXIgdGhpcyBBDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBncmVlbWVudCAoYSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIENvLVRlbmFudCBFdmVudCBvZiBEZWZhdWx0fXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICk6fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9EVl9NNzcyfXtcKlxia21rc3RhcnQgX1JlZjQ4MDM1NDI1fXtcKlxia21rZW5kIF9EVl9NNzcyfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoYSlcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczI2M1xxbCBcZmkxNDQwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDIxNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcaWx2bDJcb3V0bGluZWxldmVsMlxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBmYWlsdXJlIGJ5IGEgQ28tVGVuYW50IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgDQp0byBwYXkgaW4gZnVsbCBhbnkgYW1vdW50IGR1ZSBhbmQgcGF5YWJsZSBoZXJldW5kZXIgd2hlbiBkdWUsIG9yIGFueSBtb25ldGFyeSBqdWRnbWVudCBhd2FyZGVkIGJ5IGEgY291cnQgb2YgY29tcGV0ZW50IGp1cmlzZGljdGlvbiB3aGljaCBpcyBub3QgYmVpbmcgYXBwZWFsZWQgd2l0aGluIH17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTE2MjQxODMgW1JFREFDVEVEXX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCAgZGF5cyBvZiBzdWNoIGp9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIHVkZ21lbnQsIHdoZXJlIHN1Y2ggZmFpbHVyZSBpcyBub3QgY3VyZWQgd2l0aGluIH17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTE2MjQxODMgW1JFREFDVEVEXX17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSAgZGF5cyBhZnRlciB3cml0dGVuIG5vdGljZSBvZiBzdWNoIGZhaWx1cmU7e1wqXGJrbWtzdGFydCBfRFZfTTc3M317XCpcYmtta2VuZCBfRFZfTTc3M30gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNTkwMTQzIHByb3ZpZGVkLCBob3dldmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAsIHRoYXQgc3VjaCBwZXJpb2Qgc2hhbGwgYmUgZXh0ZW5kZWQgZm9yIHNvIGxvbmcgYXMgdGhlIGRlZmF1bHRpbmcgQ28tVGVuYW50IGlzIGRpc3B1dGluZyBpbiBnb29kIGZhaXRoIHN1Y2ggYW1vdW50IHB1cnN1YW50IHRvIHRoZSBwcm9jZWR1cmVzIHNldCBmb3J0aCBpbiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDY3NjcxNDkgDQpTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDY3NjcxNDkgIFJFRiBfUmVmNTA3MTI5MjQgXFx3IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCAgXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNjc2NzE0OSANCntcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNTAwMzAwMDM3MDAzMTAwMzIwMDM5MDAzMjAwMzQwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ3OTQyNjIgMTYuN319fVxzZWN0ZCBcbHRyc2VjdA0KXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggO317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIHtcKlxia21rZW5kIF9SZWY0ODAzNTQyNX0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzU0MjZ9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChiKVx0YWJ9YSB7XCpcYmtta3N0YXJ0IF9EVl9NNzc0fXtcKlxia21rZW5kIF9EVl9NNzc0fUNvLVRlbmFudCBCYW5rcnVwdGN5IEV2ZW50DQp7XCpcYmtta3N0YXJ0IF9EVl9NNzc1fXtcKlxia21rZW5kIF9EVl9NNzc1fTt9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIHtcKlxia21rZW5kIF9SZWY0ODAzNTQyNn0NClxwYXIge1wqXGJrbWtzdGFydCBfRFZfTTc3Nn17XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTQyN317XCpcYmtta2VuZCBfRFZfTTc3Nn17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoYylcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBhIGJyZWFjaCwgb3IgdGhlIGNhdXNlIG9mIGEgYnJlYWNoLCBieSBzdWNoIENvLVRlbmFudCBvZiBhbiBFYXNlbWVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIA0KYW5kIGEgZmFpbHVyZSB0byBjdXJlIHN1Y2ggYnJlYWNoIHdpdGhpbiB0aGUgY3VyZSBwZXJpb2QgcGVybWl0dGVkIGJ5IHN1fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBjaCBFYXNlbWVudCBsZXNzLCBpbiBlYWNoIGluc3RhbmNlLCB0aGUgZm9sbG93aW5nIHJlZHVjZWQgdGltZSBwZXJpb2RzOiAoYSkgfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIA0KXGJcaW5zcnNpZDExNjI0MTgzIFtSRURBQ1RFRF19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxICBkYXlzIGluIHRoZSBldmVudCBvZiBhbnkgbW9uZXRhcnkgZGVmYXVsdDsgYW5kIChiKSB9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDExNjI0MTgzIFtSRURBQ1RFRF19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgIGRheXMgaW4gdGhlIGV2ZW50IG9mIGFueSBub24tbW9uZXRhcnkgZGVmYXVsdDsgcHJvdmlkZWQgdGhhdCBwcm9tcHRseSBhZnRlciByZWNlaXZpbmcgd3JpdHRlbiBub3RpY2Ugb2YgYW55IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgYnJlYWMNCmggb2YgYW4gRWFzZW1lbnQsIHRoZSBkZWZhdWx0aW5nIENvLVRlbmFudCBzaGFsbCBwcm92aWRlIGEgY29weSB0aGVyZW9mIHRvIHRoZSBvdGhlciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBhbmQgdGhlIENvLVRlbmFuY3kgTWFuYWdlcjt9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAge1wqXGJrbWtlbmQgX1JlZjQ4MDM1NDI3fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTQyOH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ0MzI3NTM1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChkKVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ0MzI3NTM1IA0KbGV2eSwgc2VpenVyZSwgYXNzaWdubWVudCBvciBzYWxlIG9mIGEgc3Vic3RhbnRpYWwgcGFydCBvZiB0aGUgcHJvcGVydHkgb2YgYSBDby1UZW5hbnQgZm9yIG9yIGJ5IGFueSBjcmVkaXRvciAob3RoZXIgdGhhbiB0aGUgU2VjdXJlDQpkIFBhcnRpZXMpIG9yIEdvdmVybm1lbnRhbCBBdXRob3JpdHkgdGhhdCBtYXRlcmlhbGx5IGFmZmVjdHMgdGhlIHJpZ2h0cyBvZiBhbnkgb3RoZXIgQ28tVGVuYW50cyB1bmRlciB0aGlzIEFncmVlbWVudCBvciB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyXHJxdW90ZSANCnMgYWJpbGl0eSB0byBwZXJmb3JtIHVuZGVyIHRoaXMgQWdyZWVtZW50LCBidXQsIGZvciB0aGUgYXZvaWRhbmNlIG9mIGRvdWJ0LCBzcGVjaWZpY2FsbHkgZXhjbHVkaW5nIGFueSBhc3NpZ25tZW50DQogZm9yLCBvciBmb3JlY2xvc3VyZXMsIHNhbGVzLCBhc3NpZ25tZW50cyBvciB0cmFuc2ZlcnMgaW4gbGlldSBvZiBmb3JlY2xvc3VyZSwgZXhlcmNpc2Ugb2Ygb3RoZXIgcmVtZWRpZXMgb3IgYW55IG90aGVyIGFjdGlvbnMgdW5kZXJ0YWtlbiBieSwgYSBDby1UZW5hbnRccnF1b3RlIHMgU2VjdXJlZCBQYXJ0aWVzO3tcKlxia21rZW5kIF9SZWY0ODAzNTQyOH0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzU0Mjl9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGUpXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IA0KYSBicmVhY2ggb2YgYSByZXByZXNlbnRhdGlvbiBvciB3YXJyYW50eSBwcm92aWRlZCBieSBhIENvLVRlbmFudCB1bmRlciB0aGlzIEFncmVlbWVudCwgd2hlcmUgc3VjaCBicmVhY2ggaXMgbm90IGN1cmVkIHdpdGhpbiB9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDExNjI0MTgzIFtSRURBQ1RFRF19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjggDQogZGF5cyBhZnRlciB3cml0dGVuIG5vdGljZSB0aGVyZW9mIGZyb20gb25lIG9yIG1vcmUgbm9uLWRlZmF1bHRpbmcgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiA7IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBwcm92aWRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgLCB0aGF0IGlmIHN1Y2ggYnJlYWNoIGNhbm5vdCByZWFzb25hYmx5IGJlIGN1cmVkIHdpdGhpbiB0aGUgfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxMTYyNDE4MyBbUkVEQUNURURdfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxICBkYXkgcGVyaW9kLCBhbmQgaWYgc3VjaH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICBkZWZhdWx0aW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSAgQ28tVGVuYW50IGgNCmFzIGNvbW1lbmNlZCBhbmQgaXMgZGlsaWdlbnRseSBwdXJzdWluZyBzdWNoIGN1cmUgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgbmQgcHJvdmlkZXMgdGhlIG90aGVyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgd2l0aCBhZGVxdWF0ZSBhc3N1cmFuY2Ugb2YgZHVlIHBlcmZvcm1hbmNlLCB0aGUgY3VyZSBwZXJpb2Qgc2hhbGwgYmUgZXh0ZW5kZWQgdG8gbm90IG1vcmUgfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxMTYyNDE4MyBbUkVEQUNURURdfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQogZGF5cyBhZnRlciB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQzMjI2OTA5IHdyaXR0ZW4gbm90aWNlIG9mIGRlZmF1bHQsIGFzIHNoYWxsIGJlIG5lY2Vzc2FyeSBmb3Igc3VjDQpoIGRlZmF1bHRpbmcgQ28tVGVuYW50IHRvIGN1cmUgdGhlIGJyZWFjaCB3aXRoIGFsbCBkdWUgZGlsaWdlbmNlIGFuZCBkaXNwYXRjaCwgb3Igc3VjaCBsZXNzZXIgcGVyaW9kIG9mIHRpbWUgYXMgbWF5IGJlIHByb3ZpZGVkIGluIGFueSBGaW5hbmNpbmcgRG9jdW1lbnRzLCBJbnZlc3RtZW50IERvY3VtZW50cyBvciBQcm9qZWN0IEFncmVlbWVudHMgdG8gd2hpY2ggdGhlIGRlZmF1bHRpbmcgQ28tVGVuYW50IGlzIGEgcGFydHkgfXsNClxydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDExNjI0MTgzIFtSRURBQ1RFRF19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDMyMjY5MDkgO3tcKlxia21rc3RhcnQgX0RWX003Nzh9e1wqXGJrbWtlbmQgX1JlZjQ4MDM1NDI5fXtcKlxia21rZW5kIF9EVl9NNzc4fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTQzMH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQzMjI2OTA5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChmKVx0YWJ9DQphIGJyZWFjaCBieSBhIENvLVRlbmFudCBpbiBvYnNlcnZpbmcgb3IgcGVyZm9ybWluZyBhbnkgb2YgaXRzIG9ibGlnYXRpb25zIHNldCBmb3J0aCBpbiB0aGlzIEFncmVlbWVudCwgb3RoZXIgdGhhbiB0aG9zZSBkZXNjcmliZWQgaW4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQzMjI2OTA5IFNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQzMjI2OTA5ICBSRUYgX1JlZjQ4MDM1NDI1IFxcdyBcXGggIFxcKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDMyMjY5MDkge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM1MDAzNDAwMzIwMDM1MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNzk0MjYyIDEzLjEoYSl9fX1cc2VjdGQgXGx0cnNlY3QNClxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQzMjI2OTA5ICB0aHJvdWdoIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDMyMjY5MDkgDQogUkVGIF9SZWY0ODAzNTQyOSBcXHcgXFxoICBcXCogTUVSR0VGT1JNQVQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQzMjI2OTA5IHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNDAwMzgwMDMwMDAzMzAwMzUwMDM0MDAzMjAwMzkwMDAwMDB9fX17XGZsZHJzbHQgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDc5NDI2MiAxMy4xKGUpfX19XHNlY3RkIFxsdHJzZWN0XHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDMyMjY5MDkgIGFib3ZlOyBwcm92aWRlZCANCntcKlxia21rc3RhcnQgX0RWX003Nzl9e1wqXGJrbWtlbmQgX0RWX003Nzl9c3VjaCBicmVhY2ggaXMgbm90IGN1cmVkIHdpdGhpbiB9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDExNjI0MTgzIFtSRURBQ1RFRF19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDMyMjY5MDkgDQogZGF5cyBhZnRlciB3cml0dGVuIG5vdGljZSB0aGVyZW9mIGZyb20gb25lIG9yIG1vcmUgbm9uLWRlZmF1bHRpbmcgQ28tVGVuYW50czsgYW5kIHByb3ZpZGVkIGZ1cnRoZXIgdGhhdCBpZiBzdWNoIGJyZWFjaCBjYW5ub3QgcmVhc29uYWJseSBiZSBjdXJlZCB3aXRoaW4gdGhlIH17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTE2MjQxODMgW1JFREFDVEVEXX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQzMjI2OTA5ICBkYXkgcGVyaW9kLCBhbmQgaWYgc3VjaCBkZWZhdWx0aQ0KbmcgQ28tVGVuYW50IGhhcyBjb21tZW5jZWQgYW5kIGlzIGRpbGlnZW50bHkgcHVyc3Vpbmcgc3VjaCBjdXJlIGFuZCBwcm92aWRlcyB0aGUgb3RoZXIgQ28tVGVuYW50cyB3aXRoIGFkZXF1YXRlIGFzc3VyYW5jZSBvZiBkdWUgcGVyZm9ybWFuY2UsIHRoZSBjdXJlIHBlcmlvZCBzaGFsbCBiZSBleHRlbmRlZCB0byBub3QgbW9yZSB0aGFuIH17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTE2MjQxODMgDQpbUkVEQUNURURdfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQzMjI2OTA5ICBkYXlzIGFmdGVyIHRoZSB3cml0dGVuIG5vdGljZSBvZiBkZWZhdWx0LCBhcyBzaGFsbCBiDQplIG5lY2Vzc2FyeSBmb3Igc3VjaCBkZWZhdWx0aW5nIENvLVRlbmFudCB0byBjdXJlIHRoZSBicmVhY2ggd2l0aCBhbGwgZHVlIGRpbGlnZW5jZSBhbmQgZGlzcGF0Y2gsIG9yIHN1Y2ggbGVzc2VyIHBlcmlvZCBvZiB0aW1lIGFzIG1heSBiZSBwcm92aWRlZCBpbiBhbnkgRmluYW5jaW5nIERvY3VtZW50cywgSW52ZXN0bWVudCBEb2N1bWVudHMgb3IgUHJvamVjdCBBZ3JlZW1lbnRzIHRvIHdoaWNoIHRoZSBkZWZhdWx0aW5nIENvLVRlbmFudCBpcyANCmEgcGFydHkgfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxMTYyNDE4MyBbUkVEQUNURURdfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQzMjI2OTA5IDt7XCpcYmtta2VuZCBfUmVmNDgwMzU0MzB9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1NDMxfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChnKVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSANCmEgYnJlYWNoIG9mIG9yIGRlZmF1bHQgYnkgYSBDby1UZW5hbnQgb2YgYW4gb2JsaWdhdGlvbiBpbiBhbiBJbnRlcmNvbm5lY3Rpb24gQWdyZWVtZW50IChhcyBhcHBsaWNhYmxlKSBvciBhIFBvd2VyIFB1cmNoYXNlIEFncmVlbWVudCB0byB3aGljaCBzdWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IGRlZmF1bHRpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzg3NjkwMCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBDby1UZW5hbnQgaXMgYSBwYXJ0eSBvciBieSB3aGljaCBpdCBpcyBib3VuZCB0aGF0IGFmZmVjdHMgdGhlIHJpZ2h0cyBvZiBhbnkgb2YgdGhlIG90aGVyIENvLVRlbmFudHMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IHVuZGVyIHRoaXMgQWdyZWVtZW50IG9yIHRoZSBDby1UZW5hbmN5IE1hbmFnZXJccnF1b3RlIHMgYWJpbGl0eSB0byBwZXJmb3JtIHVuZGVyIHRoaXMgQWdyZWVtZW50LCBhbmQgYSBmYWlsdXJlIGJ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4ICBzdWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDQgZGVmYXVsdGluZ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzg3NjkwMCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IENvLVRlbmFudCB0byBjdXJlIHN1Y2ggYnJlYWNoIHdpdGhpbiB0aGUgdGltZSBwZXJpb2QgcHJvdmlkZWQgYnkgc3VjaCBhZ3JlZW1lbnRzLCBhcyBhcHBsaWNhYmxlOyBvcg0Ke1wqXGJrbWtlbmQgX1JlZjQ4MDM1NDMxfQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTQzMn17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChoKVx0YWJ9YSBicmVhY2ggb2Ygb3IgZGVmYXVsdCBieSBhIENvLVRlbmFudCBvZiBhbiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTczMjYxOCBvYmxpZ2F0aW9uIGluIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IGl0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBGaW5hbmNpbmcgRG9jdW1lbnQsIEludmVzdG1lbnQgRG9jdW1lbnQgb3IgUHJvamVjdCBBZ3JlZW1lbnQgKG90aGVyIHRoYW4gYW4gSW50ZXJjb25uZWN0fXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIGlvbiBBZ3JlZW1lbnQgb3IgYSBQb3dlciBQdXJjaGFzZSBBZ3JlZW1lbnQpIHRvIHdoaWNoIHN1Y2ggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgZGVmYXVsdGluZyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIA0KQ28tVGVuYW50IGlzIGEgcGFydHkgb3IgYnkgd2hpY2ggaXQgaXMgYm91bmQgdGhhdCBhZmZlY3RzIHRoZSByaWdodHMgb2YgYW55IG9mIHRoZSBvdGhlciBDfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBvLVRlbmFudHMgdW5kZXIgdGhpcyBBZ3JlZW1lbnQgb3IgdGhlIENvLVRlbmFuY3kgTWFuYWdlclxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IHMgYWJpbGl0eSB0byBwZXJmb3JtIHVuZGVyIHRoaXMgQWdyZWVtZW50LCBhbmQgYSBmYWlsdXJlIGJ5IHN1Y2ggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgZGVmYXVsdGluZyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IA0KQ28tVGVuYW50IHRvIGN1cmUgc3VjaCBicmVhY2ggd2l0aGluIHRoZSB0aW1lIHBlcmlvZCBwcm92aWRlZCBieSBzdWNoIGFncmVlbWVudHMsIGFzIGFwcGxpY2FibGUufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IHtcKlxia21rZW5kIF9SZWY0ODAzNTQzMn0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzU0MzN9e1wqXGJrbWtzdGFydCBfUmVmNDgwMzc0ODB9e1wqXGJrbWtzdGFydCBfVG9jNjAxMzU1MjF9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDEzLjJcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczI2MVxxbCBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjMxMDEyOCBDby1UZW5hbmN5IE1hbmFnZXIgRXZlbnRzIG9mIERlZmF1bHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDU3MzI2MTggLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MzE3ODEge1wqXGJrbWtlbmQgX1JlZjQ4MDM1NDMzfXtcKlxia21rZW5kIF9SZWY0ODAzNzQ4MH17XCpcYmtta2VuZCBfVG9jNjAxMzU1MjF9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGFmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCB7XCpcYmtta3N0YXJ0IF9EVl9DMTU4fVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KVGhlIGZvbGxvd2luZyBzaGFsbCBlYWNoIGNvbnN0aXR1dGUgYSBkZWZhdWx0IGJ5IHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgdW5kZXIgdGhpcyBBZ3JlZW1lbnQgKGEgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIENvLVRlbmFuY3kgTWFuYWdlciBFdmVudCBvZiBEZWZhdWx0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCApOn17XHJ0bGNoXGZjczEgXGFmMSANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTQzNH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGEpXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMjYzXHFsIFxmaTE0NDBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgyMTYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM4XGlsdmwyXG91dGxpbmVsZXZlbDJcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgZmFpbHVyZSB0byBwYXkgaW4gZnVsbCBhbnkgYW1vdW50IGR1ZSBhbmQgcGF5YWJsZSBoZXJldW5kZXIgd2hlbiBkdWUsIHdoZXJlIHN1Y2ggZmFpbHVyZSBpcyBub3QgY3VyZWQgd2l0aGluIH17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTE2MjQxODMgW1JFREFDVEVEXX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIGRheXMgYWZ0ZXIgd3JpdHRlbiBub3RpY2Ugb2Ygc3VjaCBmYWlsdXJlOyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE1OTAxNDMgcHJvdmlkZWQsIGhvd2V2ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANCiwgdGhhdCBzdWNoIHBlcmlvZCBzaGFsbCBiZSBleHRlbmRlZCBmb3Igc28gbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgb25nIGFzIHRoZSBkZWZhdWx0aW5nIENvLVRlbmFudCBpcyBkaXNwdXRpbmcgaW4gZ29vZCBmYWl0aCBzdWNoIGFtb3VudCBwdXJzdWFudCB0byB0aGUgcHJvY2VkdXJlcyBzZXQgZm9ydGggaW4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDQzMjc1MzUgU2VjdGlvbiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ0MzI3NTM1ICBSRUYgX1JlZjUwNzEyOTI0IFxcdyBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgIFxcKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDMyNzUzNSB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzUwMDMwMDAzNzAwMzEwMDMyMDAzOTAwMzIwMDM0MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNzk0MjYyIDE2Ljd9fX1cc2VjdGQgXGx0cnNlY3QNClxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IDt9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiB7XCpcYmtta2VuZCBfUmVmNDgwMzU0MzR9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1NDM1fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChiKVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANCmEgQ28tVGVuYW5jeSBNYW5hZ2VyIEJhbmtydX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgcHRjeSBFdmVudDt7XCpcYmtta2VuZCBfUmVmNDgwMzU0MzV9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1NDM2fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChjKVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSANCmEgYnJlYWNoLCBvciB0aGUgY2F1c2Ugb2YgYSBicmVhY2gsIG9mIGFuIEVhc2VtZW50IGJ5IGEgQ28tVGVuYW5jeSBNYW5hZ2VyIGFuZCBhIGZhaWx1cmUgdG8gY3VyZSBzdWNoIGJyZWFjaCB3aXRoaW4gdGhlIGN1cmUgcGVyaW9kIHBlcm1pdHRlZCBieSBzdWNoIEVhc2VtZW50IGxlc3MsIGluIGVhY2ggaW5zdGFuY2UsIHRoZSBmfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IA0Kb2xsb3dpbmcgcmVkdWNlZCB0aW1lIHBlcmlvZHM6IChhKSB9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDExNjI0MTgzIFtSRURBQ1RFRF19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjggIGRheXMgaW4gdGhlIGV2ZW50IG9mIGFueSBtb25ldGFyeSBkZWZhdWx0OyBhbmQgKGIpIH17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCANClxiXGluc3JzaWQxMTYyNDE4MyBbUkVEQUNURURdfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4ICBkYXlzIGluIHRoZSBldmVudCBvZiBhbnkgbm9uLW1vbmV0YXJ5IGRlZmF1bHQ7IHByb3ZpZGVkIHRoYXQgcHJvbXB0bHkgYWZ0ZXIgcmVjZWl2aW5nIHdyaXR0ZW4gbm90aWNlIG9mIGFueSBicmVhY2ggb2YgYW4gRWFzZW1lbnQsIHRoZSBDby1UZW5hbmN5IE1hbn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1NzMyNjE4IGFnZXIgc2hhbGwgcHJvdmlkZSBhIGNvcHkgdGhlcmVvZiB0byB0aGUgQ28tVGVuYW50czt9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkzMTc4MSB7XCpcYmtta2VuZCBfUmVmNDgwMzU0MzZ9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1NDM3fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkzMTc4MSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoZClcdGFifQ0KbGV2eSwgc2VpenVyZSwgYXNzaWdubWVudCBvciBzYWxlIG9mIGEgc3Vic3RhbnRpYWwgcGFydCBvZiB0aGUgcHJvcGVydHkgb2YgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBmb3Igb3IgYnkgYW55IGNyZWRpdG9yIG9yIEdvdmVybm1lbnRhbCBBdXRob3JpdHkgdGhhdCBtYXRlcmlhbGx5IGFmZmVjdHMgdGhlIHJpZ2h0cyBvZiBhbnkgb2YgdGhlIENvLVRlbmFudHMgdW5kZXIgdGhpcyBBZ3JlZW1lbnQgb3IgdGhlIENvLVRlbmFuY3kgTWFuYWdlcg0KXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkxMTAwODEgcyBhYmlsaXR5IHRvIHBlcmZvcm0gdW5kZXIgdGhpcyBBZ3JlZW1lbnQ7e1wqXGJrbWtlbmQgX1JlZjQ4MDM1NDM3fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTQzOH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MTEwMDgxIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChlKVx0YWJ9DQphIGJyZWFjaCBvZiBhIHJlcHJlc2VudGF0aW9uIG9yIHdhcnJhbnR5IHByb3ZpZGVkIGJ5IHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgdW5kZXIgdGhpcyBBZ3JlZW1lbnQsIHdoZXJlIHN1Y2ggYnJlYWNoIGlzIG5vdCBjdXJlZCB3aXRoaW4gfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxMTYyNDE4MyBbUkVEQUNURURdfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkxMTAwODEgIGRheXMgYWZ0ZXIgd3JpdHRlbiBub3RpY2UgdGhlcmVvZiBmcm9tIG9uZSBvciBtb3JlIG5vbi1kZWZhdWx0aW5nIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgOyB9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTk5Mzg2NyBwcm92aWRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgLCB0aGF0IGlmIHN1Y2ggYnJlYWNoIGNhbm5vdCByZWFzb25hYmx5IGJlIGN1cmVkIHdpdGhpbiB0aGUgfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxMTYyNDE4MyBbUkVEQUNURURdfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxICBkYXkgcGVyaW9kLCBhbmQgaWYgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBoYXMgY29tbWVuY2VkIGFuZCBpcyBkaWxpZ2VudGx5IHB1cnN1aW5nIHN1Y2ggY3VyZSBhbmQgcHJvdmlkZXMgdGhlIG90aGVyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnRzfQ0Ke1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgd2l0aCBhZGVxdWF0ZSBhc3N1cmFuY2Ugb2YgZHVlIHBlcmZvcm1hbmN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIGUsIHRoZSBjdXJlIHBlcmlvZCBzaGFsbCBiZSBleHRlbmRlZCB0byBub3QgbW9yZSB0aGFuIH17XHJ0bGNoXGZjczEgXGFiXGFmMCANClxsdHJjaFxmY3MwIFxiXGluc3JzaWQxMTYyNDE4MyBbUkVEQUNURURdfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCAgZGF5cyBhZnRlciB0aGUgd3JpdHRlbiBub3RpY2Ugb2YgZGVmYXVsdCwgYXMgc2hhbGwgYmUgbmVjZXNzYXJ5IHRvIGN1cmUgdGhlIGJyZWFjaCB3aXRoIGFsbCBkdWUgZGlsaWdlbmNlIGF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgbmQgZGlzcGF0Y2h9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAgfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxMTYyNDE4MyBbUkVEQUNURURdfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxOTkzODY3IDt7XCpcYmtta2VuZCBfUmVmNDgwMzU0Mzh9IG9yDQoNClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzU0Mzl9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGYpXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIA0KYSBicmVhY2ggYnkgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBpbiBvYnNlcnZpbmcgb3IgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBwZXJmb3JtaW5nIGFueSBvZiBpdHMgb2JsaWdhdGlvbnMgc2V0IGZvcnRoIGluIHRoaXMgQWdyZWVtZW50LCBvdGhlciB0aGFuIHRob3NlIGRlc2NyaWJlZCBpbiBjbGF1c2UgKGEpIHRocm91Z2ggfXtcZmllbGR7XCpcZmxkaW5zdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgICBSRUYgX1JlZjQ4MDM1NDM4IFxcbiBcXGggXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNTAwMzQwMDMzMDAzODAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQ3OTQyNjJcY2hhcnJzaWQ3OTQyNjIgKGUpfX19XHNlY3RkIFxsdHJzZWN0DQpccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBhYm92ZTsgcHJvdmlkZWQgc3VjaCBicmVhY2ggaXMgbm90IGN1cmVkIHdpdGhpbiB9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDExNjI0MTgzIA0KW1JFREFDVEVEXX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBkYXlzIGFmdGVyIHdyaXR0ZW4gbm90aWNlIHRoZXJlb2YgZnJvbSBvbmUgb3IgbW9yZSBvZiB0aGUgbm9uLWRlZmF1bHRpbmcgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIDsgYW5kIHByb3ZpZGVkIGZ1cnRoZXIgdGhhdCBpZiBzdWNoIGJyZWFjaCBjYW5ub3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwICByZWFzb25hYmx5IGJlIGN1cmVkIHdpdGhpbiB0aGUgfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxMTYyNDE4MyBbUkVEQUNURURdfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwICBkYXkgcGVyaW9kLCBhbmQgaWYgc3VjaCBDby1UZW5hbnQgaGFzIGNvbW1lbmNlZCBhbmQgaXMgZGlsaWdlbnRseSBwdXJzdWluZyBzdWNoIGN1cmUgYW5kIHByb3ZpZGVzIHRoZSBvdGhlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSByIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgd2l0aCBhZGVxdWF0ZSBhc3N1cmFuY2Ugb2YgZHVlIHBlcmZvcm1hbmNlLCB0aGUgY3VyZSBwZXJpb2Qgc2hhbGwgYmUgZXh0ZW5kZWQgdG8gbm90IG1vcmUgdGhhbiB9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgDQpcYlxpbnNyc2lkMTE2MjQxODMgW1JFREFDVEVEXX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBkYXlzIGFmdGVyIHRoZSB3cml0dGVuIG5vdGljZSBvZiBkZWZhdWx0LCBhcyBzaGFsbCBiZSBuZWNlc3NhcnkgZm9yIHRvIGN1cmUgdGhlIGJyZWFjaCB3aXRoIGFsbCBkdWUgZGlsaWdlbmNlIGFuZCBkaXNwYXRjaH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MzEyMzk4IHtcKlxia21rc3RhcnQgX0RWX001NDB9e1wqXGJrbWtzdGFydCBfRFZfTTU0MX17XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTQ0MH17XCpcYmtta2VuZCBfUmVmNDgwMzU0Mzl9e1wqXGJrbWtlbmQgX0RWX001NDB9e1wqXGJrbWtlbmQgX0RWX001NDF9IH17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTE2MjQxODMgW1JFREFDVEVEXX17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxOTkzODY3IC57XCpcYmtta2VuZCBfUmVmNDgwMzU0NDB9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1NDQxfXtcKlxia21rc3RhcnQgX1JlZjQ4MDM3NDgxfXtcKlxia21rc3RhcnQgX1RvYzYwMTM1NTIyfXtcKlxia21rZW5kIF9EVl9DMTU4fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDEzLjNcdGFifQ0KfVxwYXJkXHBsYWluIFxsdHJwYXJcczI2MVxxbCBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFJlbWVkaWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIHtcKlxia21rZW5kIF9SZWY0ODAzNTQ0MX17XCpcYmtta2VuZCBfUmVmNDgwMzc0ODF9e1wqXGJrbWtlbmQgX1RvYzYwMTM1NTIyfQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTQ0Mn17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoYSlcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyNjNccWwgXGZpMTQ0MFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDIxNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcaWx2bDJcb3V0bGluZWxldmVsMlxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIElmIGEgQ28tVGVuYW50IEV2ZW50IG9mIERlZmF1bHQgaGFzIG9jY3VycmVkIGFuZCBpcyBjb250aW51aW5nLCB0aGUgbm9uLWRlZmF1bHRpbmcgQ28tVGVuYW50cyBqfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSANCm9pbnRseSBhbmQgc2V2ZXJhbGx5IG9yIHRoZSBDby1UZW5hbmN5IE1hbmFnZXIsIG9uIGJlaGFsZiBvZiB0aGUgbm9uLWRlZmF1bHRpbmcgQ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjMxMDEyOCANCm8tVGVuYW50cyAodXBvbiB3cml0dGVuIGRpcmVjdGlvbiBmcm9tIHRoZSBub24tZGVmYXVsdGluZyBDby1UZW5hbnRzIGFuZCBzdWJqZWN0IHRvIHRoZWlyIGRpcmVjdGlvbiBhbmQgY29udHJvbCksIHNoYWxsIGhhdmUgdGhlIGZvbGxvd2luZyByZW1lZGllczp7XCpcYmtta2VuZCBfUmVmNDgwMzU0NDJ9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1NDQzfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjMxMDEyOCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoaSlcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyNjVccWwgXGZpMjE2MFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDI4ODBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcaWx2bDNcb3V0bGluZWxldmVsM1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjggVG8gYnJpbmcgYW4gYWN0aW9uIGZvciBhbiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDU3MzI2MTggaW5qdW5jdGlvbiBvciB0byBzcGVjaWZpY2FsbHkgZW5mb3JjZSB0aGUgcHJvdmlzaW9ucyBvZiB0aGlzIEFncmVlbWVudCAodGhlIENvLX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MzE3ODEgVGVuYW50cyBhZ3JlZSB0aGF0IGlmIGFueSBDby1UZW5hbnQgYnJlYWNoZXMgdGhpcyBBZ3JlZW1lbnQsIHRoZSBpbmp1cnkgdG8gdGhlIG90aGVyIENvLVRlbmFudHMgd2lsbCBiZSBpcnJlcGFyYWJsZSBhbmQgbW9uZXkgZGFtYWdlcyBhbG9uZSB3aWxsIG5vdCBiZSBhbiBhZGVxdWF0ZSByZW1lZHkpO3tcKlxia21rZW5kIF9SZWY0ODAzNTQ0M30NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzU0NDR9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2NSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MzE3ODEgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGlpKVx0YWJ9VG8gcmVjZWl2ZSBhbW91bnRzIHBheWFibGUgdW5kZXIgdGhlIGluZGVtbml0aWVzIGNvbnRhaW5lZCBoZXJlaW47DQp7XCpcYmtta2VuZCBfUmVmNDgwMzU0NDR9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1NDQ1fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTExMDA4MSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoaWlpKVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MTEwMDgxIEluIGl0cyBzb2wNCmUgYW5kIGFic29sdXRlIGRpc2NyZXRpb24sIHRvIGN1cmUgdGhlIENvLVRlbmFudCBFdmVudCBvZiBEZWZhdWx0IGJ5IG1ha2luZyBvciB0ZW5kZXJpbmcgdGhlIHJlcXVpcmVkIHBheW1lbnQgb3IgcGVyZm9ybWFuY2U7IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTExMDA4MSBwcm92aWRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MTEwMDgxICB0aGF0IHRoZSBjdXJpbmcgQ28tVGVuYW50IHNoYWxsIHByb3ZpZGUgYXQgbGVhc3QgfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxMTYyNDE4MyBbUkVEQUNURURdfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MTEwMDgxIA0KIGRheXMgcHJpb3Igd3JpdHRlbiBub3RpY2UgdG8gdGhlIGRlZmF1bHRpbmcgQ28tVGVuYW50IHRoYXQgaXQgaXMgZ29pbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODM1MDkwOCBnIHRvIHVuZGVydGFrZSBzdWNoIGN1cmUgYW5kIGFueSBzdWNoIHJlYXNvbmFibGUgYW1vdW50cy4gIEFueSBzdWNoIGFtb3VudHMgcmVxdWlyZWQgdG8gY3VyZSBzdWNofXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggIENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIEV2ZW50IG9mIERlZmF1bHQgdGhhdCBhcmUgcGFpZCBieSB0aGUgbm9uLWRlZmF1bHRpbmcgQ28tVGVuYW50IChvciB0fXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIGhlIENvLVRlbmFuY3kgTWFuYWdlciBvbiBiZWhhbGYgb2YgdGhlIG5vbi1kZWZhdWx0aW5nIENvLVRlbmFudHMpLCBpbmNsdWRpbmcgYWxsIHJlYXNvbmFibGUgYXR0b3JuZXlzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBccnF1b3RlIA0KIGZlZXMgYW5kIGNvc3RzLCBzaGFsbCBiZSB0cmVhdGVkIGFzIGEgbG9hbiB0byB0aGUgZGVmYXVsdGluZyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQosIHdoaWNoIGxvYW4gc2hhbGwgYWNjcnVlIGludGVyZXN0IHVudGlsIHJlcGFpZCBpbiBmdWxsIGF0IHRoZSBEZWZhdWx0IEludGVyZXN0IFJhdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgZSwgYW5kIHRoZSBub24tZGVmYXVsdGluZyBDby1UZW5hbnQgKG9yIHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgb24gYmVoYWxmIG9mIHR9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgaGUgbm9uLWRlZmF1bHRpbmcgQ28tVGVuYW50KSBzaGFsbCBiZSBlbnRpdGxlZCB0byBzZXQgb2ZmIHN1Y2ggbG9hbiBhbW91bnRzIGFnYWluc3QgYW55IGFtb3VudCBvd2VkIHRvIHRoZSBkZWZhdWx0aW5nIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnR9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICB1bmRlciB0aGlzIEFncmVlbWVudDt9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIHtcKlxia21rZW5kIF9SZWY0ODAzNTQ0NX0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzU0NDZ9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2NSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoaXYpXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIA0KRWFjaCBDby1UZW5hbnQgKGEgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgRGVmYXVsdGluZyBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjggXCc5NCkgd2lsbCBwcm9tcHRseSByZWltYnVyc2UgQ28tVGVuYW5jeSBNYW5hZ2VyIGFuZCB0aGUgb3RoZXIgQ299e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTczMjYxOCAtVGVuYW50cywgYXMgdGhlIGNhc2UgbWF5IGJlLCBpZiBDby1UZW5hbmN5IE1hbmFnZXIgb3IgYW55IG90aGVyIENvLVRlbmFudHMgbWFrZSBhbnkgcGF5bWVudHMgb24gYmVoYWxmIG9mIHRoZSBEZWZhdWx0aW5nIENvLVRlbmFudCBhcmlzaW5nIG91dCBvZiwgcmVsYXRlZCB0byBvciBpbiBjb25uZWN0aW9uIHdpdGggYW55fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkzMTc4MSAgYnJlYWNoIG9mIGFueSBvYmxpZ2F0aW9uIG9mIG9yIG90aGVyIGFjdGlvbiBvciBpbmFjdGlvbiBieSB0aGUgRGVmYXVsdGluZyBDby1UZW5hbnQsIGluY2x1ZGluZyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANCnRvIGFueSBHb3Zlcm5tZW50YWwgQXV0aG9yaXR5IHB1cnN1YW50IHRvIGFueSBBcHBsaWNhYmxlIExhdyBvciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIHVuZGVyIG9yIHdpdGggcmVzcGVjdCB0byBhbnkgSW50ZXJjb25uZWN0aW9uIEFncmVlbWVudCBvciBzaW1pbGFyIGFncmVlbWVudC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI5MjgxMTgge1wqXGJrbWtlbmQgX1JlZjQ4MDM1NDQ2fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTQ0N317XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjY1IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAodilcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFNvbGVseSBpbiB0aGUgY2FzZSANCn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgb2YgYSBDby1UZW5hbnQgRXZlbnQgb2YgRGVmYXVsdCBzZXQgZm9ydGggaW4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBTZWN0aW9ucyB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NCAgIFJFRiBfUmVmNDgwMzU0MjUgXFx3IFxcaCBcXCogTUVSR0VGT1JNQVQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNTAwMzQwMDMyMDAzNTAwMDAwMH19fXtcZmxkcnNsdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxjZjFcaW5zcnNpZDc5NDI2MlxjaGFycnNpZDc5NDI2MiAxMy4xKGEpfX19XHNlY3RkIFxsdHJzZWN0XHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggLCB9DQp7XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCAgIFJFRiBfUmVmNDgwMzU0MjggXFxuIFxcaCBcXCogTUVSR0VGT1JNQVQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM1MDAzNDAwMzIwMDM4MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxjZjFcaW5zcnNpZDc5NDI2MlxjaGFycnNpZDc5NDI2MiAoZCl9fX1cc2VjdGQgXGx0cnNlY3QNClxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIG9yIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCAgIFJFRiBfUmVmNDgwMzU0MzEgXFxuIFxcaCBcXA0KKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM1MDAzNDAwMzMwMDMxMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGNmMVxpbnNyc2lkNzk0MjYyXGNoYXJyc2lkNzk0MjYyIChnKX19fVxzZWN0ZCBcbHRyc2VjdFxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIChidXQgaW4gdGhlIGNhc2Ugb2YgfXtcZmllbGR7XCpcZmxkaW5zdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgICBSRUYgX1JlZjQ4MDM1NDMxIFxcbiBcXGggXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNTAwMzQwMDMzMDAzMTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQ3OTQyNjJcY2hhcnJzaWQ3OTQyNjIgKGcpfX19XHNlY3RkIFxsdHJzZWN0DQpccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBvbmx5IGlmIHN1Y2h9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggIENvLVRlbmFudH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgRXZlbnQgb2YgRGVmYXVsdCBpcyBtYXRlcmlhbCBpbiBuYXR1cmUpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSANCiwgZGlzY29ubmVjdGlvbiBvZiB0aGUgZGVmYXVsdGluZyBDby1UZW5hbnRccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgcyBQcm9qZWN0IGZyb20gdGhlIFNoYXJlZCBGYWNpbGl0aWVzIHRvIHRoZSBleHRlbnQgcGVybWl0dGVkIHVuZGVyIGFuZCBpbiBhY2NvcmRhbmNlIHdpdGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IFNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0ICAgUkVGIF9SZWY0ODAzNzQ1NyBcXHcgXFxoIFxcKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNDAwMzgwMDMwMDAzMzAwMzcwMDM0MDAzNTAwMzcwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGNmMVxpbnNyc2lkNzk0MjYyXGNoYXJyc2lkNzk0MjYyIDguNX19fVxzZWN0ZCBcbHRyc2VjdA0KXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggO317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgIGluIHRoZSBjYXNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSAgb2YgYSBDby1UZW5hbnQgRXZlbnQgb2YgRGVmYXVsdCBzZXQgZm9ydGggaW4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBTZWN0aW9uIDEzLjEoYSl9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IHByb3ZpZGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4ICB0aGF0IHRoZSBDby1UZW5hbnQgaXMgcHJvdmlkZWQgYW4gYWRkaXRpb25hbCB9e1xydGxjaFxmY3MxIA0KXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTE2MjQxODMgW1JFREFDVEVEXX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjMxMDEyOCAgZGF5cyB0byBjdXJlIHN1Y2ggQ28tVGVuYW50IEV2ZW50IG9mIERlZmF1bHQgcHJpb3IgdG8gc3VjaCBkaXNjb25uZWN0aW9uOyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjggDQpwcm92aWRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjMxMDEyOCAsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTczMjYxOCBob3dldmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MzE3ODEgLCB0aGF0IHRoZSBkZWZhdWx0aW5nIENvLVRlbmFudFxycXVvdGUgDQpzIFByb2plY3Qgc2hhbGwgYmUgcGVybWl0dGVkIHRvIHJlY29ubmVjdCBwcm9tcHRseSwgYW5kIHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgc2hhbGwgcHJvbXB0bHkgdGFrZSBhbGwgYWN0aW9ucyBuZWNlc3NhcnkgZm9yIHN1Y2ggcmVjb25uZWN0aW9uLCB3aGVuIGFuZCBpZiAoQSkgdGhlIENvLVRlbmFudCBFdmVudCBvZiBEZWZhdWx0IGlzIGN1cmVkLCBhbmQgKEIpIGFueSBhbmQgYWxsIGRhbWFnZXMgc3VmZmVyfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkxMTAwODEgZWQgYW5kIGluY3VycmVkIGJ5IHRoZSBub24tZGVmYXVsdGluZyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBoYXZlIGJlZW4gY29tcGVuc2F0DQplZCBvciBhZ3JlZWQgdG8gYmUgY29tcGVuc2F0ZWQgd2l0aGluIH17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTE2MjQxODMgW1JFREFDVEVEXX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBkYXlzIHdpdGggYWRlcXVhdGUgYXNzdXJhbmNlcyBvZiBwYXltZW50IHNhdGlzZmFjdG9yeSB0byB0aGUgbm9uLWRlZmF1bHRpbmcgfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICwgZXhjbHVkaW5nLCBob3dldmVyLCBhbnkgcmV2ZW51ZSBsb3NzZXMgaW5jdXJyZWQgb3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIA0KIHN1ZmZlcmVkIGJ5IHN1Y2ggbm9uLWRlZmF1bHRpbmcgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgZHVyaW5nIHRoZSBwZXJpb2Qgb2YgZGlzY29ubmVjdGlvbiBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICwgQWRkaXRpb25hbCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIG9yIFNlcGFyYXRlIEZhY2lsaXRpZXMgKHdoaWNoIHN1Y2ggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudHN9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBzaGFsbCBub25ldGhlbGVzcyBiZSBlbnRpdGxlZCB0byBwdXJzdWFudCB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0ICAgUkVGIF9SZWY0ODAzNzQ1NyANClxcdyBcXGggXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNDAwMzgwMDMwMDAzMzAwMzcwMDM0MDAzNTAwMzcwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcY2YxXGluc3JzaWQ3OTQyNjJcY2hhcnJzaWQ3OTQyNjIgOC41fX19XHNlY3RkIFxsdHJzZWN0XHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggKTt9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIHtcKlxia21rZW5kIF9SZWY0ODAzNTQ0N30NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzU0NDh9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2NSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAodmkpXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIA0KSWYgYSBkZWZhdWx0aW5nIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgUHJvamVjdCBpcyBkaXNjb25uZWN0ZWQgZnJvbSB0aGUgU2hhcmVkIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAgb3IgQWRkaXRpb25hbCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIHB1cnN1YW50IHRvIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCAgUkVGIF9SZWY0ODAzNTQ0NyBcXHcgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNTAwMzQwMDM0MDAzNzAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDc5NDI2MiAxMy4zKGEpKHYpfX19XHNlY3RkIFxsdHJzZWN0DQpccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTQ5NjkzOTcgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgDQphbmQgcmVtYWlucyBkaXNjb25uZWN0ZWQgZHVlIHRvIGEgZmFpbHVyZSBieSB0aGUgZGVmYXVsdGluZyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIHRvIGN1cmUgdGhlIGRlZmF1bHQgdGhhdCBsZWQgdGhlIG5vbi1kZWZhdWx0aW5nIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICB0byBkZW1hbmQgZGlzY29ubmVjdGlvbiBmb3IgYSBwZXJpb2Qgb2YgfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxMTYyNDE4MyBbUkVEQUNURURdfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwICBkYXlzLCB0aGUgbm9uLWRlZmF1bHRpbmcgQ28tVGVuYW50cyBtYXksIGJ1dCBvbmx5IGJ5IHVuYW5pbW91cyBhZ3JlZW1lbnQsIHJlcXVpcmUgdGhhdCB0aGUgZGVmYXVsdGluZyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgc3VycmVuZGVyIGFsbCBvciBhbnkgcG9ydGlvbiBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgb3IgQWRkaXRpb25hbCBGYWNpbGl0aWVzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIHB1cnN1YW50IHRvIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCAgIFJFRiBfUmVmMTAxNTk5MjEyIFxcdyBcXGggXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDMxMDAzMDAwMzEwMDM1MDAzOTAwMzkwMDMyMDAzMTAwMzIwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGNmMVxpbnNyc2lkNzk0MjYyXGNoYXJyc2lkNzk0MjYyIDEyLjJ9fX1cc2VjdGQgXGx0cnNlY3QNClxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IDt9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIHtcKlxia21rZW5kIF9SZWY0ODAzNTQ0OH0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzU0NDl9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2NSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAodmlpKVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSANClRvIGV4ZXJjaXNlIGFueSBhbmQgYWxsIG90aGVyIHJpZ2h0cyBhbmQgcmVtZWRpZXMgd2hpY2ggYW55IG9uZSBvciBtb3JlIG9mIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KIG1pZ2h0IG90aGVyd2lzZSBoYXZlIGF0IGxhdyBvciBpbiBlcXVpdHkufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCB7XCpcYmtta2VuZCBfUmVmNDgwMzU0NDl9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1NDUwfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChiKVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczI2M1xxbCBcZmkxNDQwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MjE2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxpbHZsMlxvdXRsaW5lbGV2ZWwyXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgSWYgYSBDby1UZW5hbmN5IE1hbmFnZXIgRXZlbnQgb2YgRGVmYXVsdCBoYXMgb2NjdXJyZWQgYW5kIGlzIGNvbnRpbnVpbmcsIGFueSBub24tZGVmYXVsdGluZyBDby1UZW5hbnQgc2hhbGwgaGF2ZSB0aGUgZm9sbG93aW5nIHJlbWVkaWVzOn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgDQp7XCpcYmtta2VuZCBfUmVmNDgwMzU0NTB9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1NDUxfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGkpXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMjY1XHFsIFxmaTIxNjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgyODgwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM4XGlsdmwzXG91dGxpbmVsZXZlbDNcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBUbyByZW1vdmUgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBmb3IgY2F1c2UgcHVyc3VhbnQgdG8gdGhlIHByb2NlZHVyZXMgc2V0IGZvcnRoIGluIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjMxMDEyOCBTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE0MjkxOTQ0ICAgUkVGIF9SZWY0ODAzNzQ2NSBcXHcgXFxoIFxcKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM3MDAzNDAwMzYwMDM1MDAwMDAwfX19e1xmbGRyc2x0IHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGNmMVxpbnNyc2lkNzk0MjYyXGNoYXJyc2lkNzk0MjYyIDkuNn19fVxzZWN0ZCBcbHRyc2VjdFxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IDt9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIHtcKlxia21rZW5kIF9SZWY0ODAzNTQ1MX0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzU0NTJ9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2NSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoaWkpXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIA0KSW4gaXRzIHNvbGUgYW5kIGFic29sdXRlIGRpc2NyZXRpb24sIHRvIGN1cmUgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBFdmVudCBvZiBEZWZhdWx0IGJ5IG1ha2luZyBvciB0ZW5kZXJpbmcgdGhlIHJlcXVpcmVkIHBheW1lbnQgb3IgcGVyZm9ybWFuY2U7IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgcHJvdmlkZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgIHRoYXQgYW55IHN1Y2ggcmVhc29uYWJsZSBhbW91bnRzIHBhaWQgYnkgdGhlIG5vbi1kZWZhdWx0aW5nIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAsIGluY2x1ZGluZyBhbGwgcmVhc29uYWINCn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgbGUgYXR0b3JuZXlzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBccnF1b3RlICBmZWVzIGFuZCBjb3N0cywgc2hhbGwgYmUgdHJlYXRlZCBhcyBhIGxvYW4gdG8gdGhlIEMNCm8tVGVuYW5jeSBNYW5hZ2VyLCB3aGljaCBsb2FuIHNoYWxsIGFjY3J1ZSBpbnRlcmVzdCB1bnRpbCByZXBhaWQgaW4gZnVsbCBhdCB0aGUgRGVmYXVsdCBJbnRlcmVzdCBSYXRlO317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkge1wqXGJrbWtlbmQgX1JlZjQ4MDM1NDUyfQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTQ1M317XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjY1IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChpaWkpXHRhYn1UbyBicmluZyBhbiBhY3Rpb24gdG8gc3BlY2lmaWNhbGx5IGVuZm9yY2UgdGhlIHByfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjggb3Zpc2lvbnMgb2YgdGhpcyBBZ3JlZW1lbnQ7IGFuZHtcKlxia21rZW5kIF9SZWY0ODAzNTQ1M30NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzU0NTR9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2NSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1NzMyNjE4IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChpdilcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTczMjYxOCBUbyBleGVyfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkzMTc4MSBjaXNlIGFueSBhbmQgYWxsIG90aGVyIHJpZ2h0cyBhbmQgcmVtZWRpZXMgd2hpY2ggYW55IG9uZSBvciBtb3JlIG9mIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIG1pZ2h0IG90aGVyd2lzZSBoYXZlIGF0IGxhdyBvciBpbiBlcXVpdHkufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCB7XCpcYmtta2VuZCBfUmVmNDgwMzU0NTR9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1NDU1fXtcKlxia21rc3RhcnQgX1RvYzYwMTM1NTIzfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNTkgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcYlxjYXBzXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIEFydGljbGUgMTRcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczI1OVxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4NzIwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM4XG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcYlxjYXBzXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXGxpbmUgUkVQUkVTRU5UQVRJT05TIEFORCBXQVJSQU5USUVTfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSB7XCpcYmtta2VuZCBfUmVmNDgwMzU0NTUNCn17XCpcYmtta2VuZCBfVG9jNjAxMzU1MjN9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1NDU2fXtcKlxia21rc3RhcnQgX1JlZjQ4MDM3NDgyfXtcKlxia21rc3RhcnQgX1RvYzYwMTM1NTI0fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTQuMVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzMjYxXHFsIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM4XGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBSZXByZXNlbnRhdGlvbnMgYW5kIFdhcnJhbnRpZXMgb2YgQ28tVGVuYW50cyBhbmQgQ28tVGVufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IA0KYW5jeSBNYW5hZ2VyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgLiAgQXMgb2YgdGhlIENvbnRyYWN0IERhdGUsIGVhY2h9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50fXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgcmVwcmVzZW50cyBhbmQgd2FycmFudHMgZm9yIHRoZSBiZW5lZml0IG9mIHRoZSBvdGhlciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KIGFuZCB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyLCBhbmQgdGhlIENvLVRlbmFuY3kgTWFuYWdlciByZXByZXNlbnRzIGFuZCB3YXJyYW50cyBmb3IgdGhlIGJlbmVmaXQgb2YgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIGFzIGZvbGxvd3M6fXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIHtcKlxia21rZW5kIF9SZWY0ODAzNTQ1Nn17XCpcYmtta2VuZCBfUmVmNDgwMzc0ODJ9e1wqXGJrbWtlbmQgX1RvYzYwMTM1NTI0fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTQ1N317XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoYSlcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyNjNccWwgXGZpMTQ0MFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDIxNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcaWx2bDJcb3V0bGluZWxldmVsMlxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIEl0IGlzIGEgbGltaXRlZCBsaWFiaWxpdHkgY29tcGFueSBvciBjb3Jwb3JhdGlvbiwgZHVseSBvcmdhbml6ZWQgYW5kIGV4aXN0aW5nIGluIGdvb2Qgc3RhbmRpbmcgdW5kZXIgdGhlIGxhd3Mgb2YgdGhlIHN0YXQNCmUgb2YgaXRzIGZvcm1hdGlvbiBvciBpbmNvcnBvcmF0aW9uLCBxdWFsaWZpZWQgdG8gZG8gYnVzaW5lc3MgaW4gdGhlIFN0YXRlIG9mIE9oaW8sIGFuZCBoYXMgdGhlIHJlcXVpc2l0ZSBwb3dlciBhbmQgYXV0aG9yaXR5IHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IG8gZW50ZXIgaW50byB0aGlzIEFncmVlbWVudC57XCpcYmtta2VuZCBfUmVmNDgwMzU0NTd9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1NDU4fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjggXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGIpXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjggDQpUaGlzIEFncmVlbWVudCBoYXMgYmVlbiBkdWx5IGF1dGhvcml6ZWQgYW5kIGNvbnN0aXR1dGVzIHRoZSBsZWdhbCwgdmFsaWQgYW5kIGJpbmRpbmcgb2JsaWdhdGlvbiBvZiBpdCwgZW5mb3JjZWFibGUgYWdhaW5zdCBpdCBpbiBhY2NvcmRhbmNlIHdpdGggaXRzIHRlcm1zOyBhbmQgdGhlIGV4ZWN1dGlvbiBhbmQgZGVsaXZlcnkgb2YgdGhpcyBBZ3JlZW1lbnQgYW5kLCBleGNlcHQgYXMgb3RoZXJ3aX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1NzMyNjE4IHNlIHNldCBmb3J0aCBoZXJlaW4sIHBlcmZvcm1hbmNlIG9mIGl0cyBvYmxpZ2F0aW9ucyBoZXJldW5kZXIgd2l9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkzMTc4MSBsbCBub3QgcmVxdWlyZSB0aGUgYXBwcm92YWwgb2YgYW55IEdvdmVybm1lbnRhbCBBdXRob3JpdHkgYW5kIHdpbA0KbCBub3QgY29udHJhdmVuZSwgY29uZmxpY3Qgd2l0aCBvciByZXN1bHQgaW4gdGhlIGJyZWFjaCBvciB2aW9sYXRpb24gb2YgYW55IGRvY3VtZW50IHRvIHdoaWNoIGl0IGlzIGJvdW5kIG9yIGluIGFueSBsYXcsIHJ1bGUgb3IgcmVndWxhdGlvbi57XCpcYmtta2VuZCBfUmVmNDgwMzU0NTh9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1NDU5fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkzMTc4MSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoYylcdGFifQ0KRXhjZXB0IGFzIG90aGVyd2lzZSBzZXQgZm9ydGggaGVyZWluLCBpdCBwb3NzZXNzZXMgYWxsIHJlcXVpc2l0ZSBwb3dlciBhbmQgYXV0aG9yaXR5IGFuZCByZXF1aXJlZCBwZXJtaXRzLCBjb25zZW50cyBhbmQgbGljZW5zZXMgKGlmIGFueSkgdG8gcGVyZm9ybSB0aGlzIEFncmVlbWVudCBhbmQgdG8gY2Fycnkgb3V0IHRoZSB0cmFuc2FjdGlvbnMgY29udGVtcGxhdGVkIGhlcmVpbi59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTExMDA4MSB7XCpcYmtta2VuZCBfUmVmNDgwMzU0NTl9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1NDYwfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkxMTAwODEgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGQpXHRhYn0NCk5vIHN1aXQsIGFjdGlvbiBvciBhcmJpdHJhdGlvbiwgb3IgbGVnYWwsIGFkbWluaXN0cmF0aXZlIG9yIG90aGVyIHByb2NlZWRpbmcgaXMgcGVuZGluZyBvciwgdG8gaXRzIGtub3dsZWRnZSwgdGhyZWF0ZW5lZCBhZ2FpbnN0IGl0IHRoYXQgd291bGQgYWZmZWN0IHRoDQplIHZhbGlkaXR5IG9yIGVuZm9yY2VhYmlsaXR5IG9mIHRoaXMgQWdyZWVtZW50IG9yIHRoZSBhYmlsaXR5IG9mIGl0IHRvIGZ1bGZpbGwgaXRzIG9ibGlnYXRpb25zIGFuZCBjb21taXRtZW50cyBoZXJldW5kZXIue1wqXGJrbWtlbmQgX1JlZjQ4MDM1NDYwfQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTQ2MX17XCpcYmtta3N0YXJ0IF9Ub2M2MDEzNTUyNX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjU5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGJcY2Fwc1xkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MzUwOTA4IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIEFydGljbGUgMTVcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczI1OVxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4NzIwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM4XG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcYlxjYXBzXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODM1MDkwOCBcbGluZSB7XCpcYmtta3N0YXJ0IF9SZWY0ODMwMTYwMn1JTkRFTU5JVFk7IExJTUlUQVRJT05TIE9GIExJQUJJTElUWXtcKlxia21rZW5kIF9SZWY0ODAzNTQ2MX17XCpcYmtta2VuZCBfVG9jNjAxMzU1MjV9DQp7XCpcYmtta2VuZCBfUmVmNDgzMDE2MDJ9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1NDYyfXtcKlxia21rc3RhcnQgX1JlZjQ4MDM3NDgzfXtcKlxia21rc3RhcnQgX1RvYzYwMTM1NTI2fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODM1MDkwOCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNS4xXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhcg0KXHMyNjFccWwgXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgzNTA5MDggQ3Jvc3MgSW5kZW1uaXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgIG9mIENvLVRlbmFudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIHtcKlxia21rZW5kIF9SZWY0ODAzNTQ2Mn17XCpcYmtta2VuZCBfUmVmNDgwMzc0ODN9e1wqXGJrbWtlbmQgX1RvYzYwMTM1NTI2fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTQ2M317XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoYSlcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyNjNccWwgXGZpMTQ0MFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDIxNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcaWx2bDJcb3V0bGluZWxldmVsMlxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIEV4Y2VwdCBhcyBvdGhlcndpc2UgcHJvdmlkZWQgaGVyZWluLCBlYWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAsIGZvciBhbmQgb24gYmUNCmhhbGYgb2YgaXRzZWxmIGFuZCBpdHMgYWdlbnRzLCBzdWNjZXNzb3JzIGFuZCBhc3NpZ25zLCBzaGFsbCBkZWZlbmQsIGluZGVtbmlmeSBhbmQgaG9sZCBoYXJtbGVzcyBlYWNoIG9mIHRoZSBvdGhlciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KIGFuZCB0aGVpciByZXNwZWN0aXZlIGRpcmVjdG9ycywgb2ZmaWNlcnMsIHBhcnRuZXJzLCBtZW1iZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIHMsIEFmZmlsaWF0ZXMgKGV4Y2VwdCBmb3IgdGhlIENvLVRlbmFuY3kgTWFuYWdlciksIGNvbnRyYWN0b3JzLCBlbXBsb3llZQ0KcywgYWdlbnRzLCBzdWNjZXNzb3JzIGFuZCBhc3NpZ25zLCBmcm9tIGFuZCBhZ2FpbnN0IGFueSBhbmQgYWxsIGxvc3NlcywgbGlhYmlsaXRpZXMsIGNsYWltcyBhbmQgZGFtYWdlcyAodGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgTG9zc2V9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjMxMDEyOCANCikgc3VmZmVyZWQgb3IgaW5jdXJyZWQgdG8gdGhlIGV4dGVudCB0aGV5IChpKSBhcmUgYSByZXN1bHQgb2YgdGhlIG5lZ2xpZ2VudCBhY3RzIG9yIG9taXNzaW9ucywgYmFkIGZhaXRoLCBvciByZWNrbGVzc25lc3Mgb3Igd2lsbGZ1bCBtaXNjb25kdWN0IG9mIHRoZSBpbmRlbW5pZnlpbmcgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIG9yIGl0cyBkaXJlY3RvcnMsIG9mZmljZXJzLCBwYXJ0bmVycywgbWVtYmVycywgQWZmaWxpYXRlcywgZW1wbG95ZWVzLCBhZ2VudHMsIHN1Y2Nlc3NvcnMgYW5kIGFzc2lnbnMsIGluIGNvbm5lY3Rpb24gd2l0aCB0aGUgcGVyZm9ybWFuY2Ugb2YgaXRzIGR1dGllfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIHMgYW5kIG9ibGlnYXRpb25zIGhlcmV1bmRlciwgKGlpKSBhcmUgYSByZXN1bHQgb2YgYW55IGJyZWFjaCBvZiBvciBkZWZhdWx0IGJ5IHRoZSBpbmRlbW5pZnlpbmcgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIGhlcmV1bmRlciBiZXlvbmQgYXBwbGljYWJsZSBjdXJlIHBlcmlvZHMsIG9yIChpaWkpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANCmFsbCBMb3NzZXMgb2YgYW55IGNoYXJhY3RlciBvciBuYXR1cmUgd2hhdHNvZXZlciwgcmVnYXJkbGVzcyBvZiBieSB3aG9tIGFzc2VydGVkIG9yIGltcG9zZWQsIGFuZCBvZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIGV2ZXJ5IGNvbmNlaXZhYmxlIGtpbmQsIGNoYXJhY3RlciBhbmQgbmF0dXJlIHdoYXRzb2V2ZXIgY2xhaW1lZCBieSBvciBvbg0KIGJlaGFsZiBvZiBhbnkgUGVyc29uLCBvciBhbnkgcHJvcGVydHkgZGFtYWdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSAgaW5jdXJyZWQgb3Igc3VmZmVyZWQgYXMgYSByZXN1bHQgb2Ygc3VjaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAsIG9yIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQogYXMgdGhlIGNhc2UgbWF5IGJlLCBvcGVyYXRpb24sIG1haW50ZW5hbmNlLCBjb25zdHJ1Y3Rpb24sIGluc3RhbGxhdGlvbiwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCB1c2UsIHJlcGFpciBvciByZW1vdmFsIG9mLCBvciBlbnRyeSBvbiwgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgU2hhcmVkIH0NCntccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgUHJlbWlzZXMgYW5kIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIEZhY2lsaXRpZXMsIFJlcGxhY2VtZW50IENvbXBvbmVudHMsIEFkZGl0aW9uYWwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgUHJlbWlzZXMsfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgQWRkaXRpb25hbCBGYWNpbGl0aWVzLCBhbmQgU2VwYXJhdGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAgUHJvamVjdHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANCiAoaW5jbHVkaW5nIHRoZSBnZW5lcmFsaXR5IG9mIHRoZSBmb3JlZ29pbmcsIGxpYWJpbGl0eSBmb3IgYW55IExvc3NlcyBhcmlzaW5nIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgZnJvbSB0aGUgZmFpbHVyZSBvZiB0aGUgU2VwYXJhdGUgRmFjaWxpdGllcyB0byBiZSBvcGVyYXRlZCwgbWFpbnRhaW5lZCwgY29uc3RydWN0ZWQsIA0KaW5zdGFsbGVkLCB1c2VkLCByZXBhaXJlZCBvciByZW1vdmVkIGluIGNvbXBsaWFuY2Ugd2l0aCBBcHBsaWNhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSANCmJsZSBMYXcgb3IgUGVybWl0cyAoaW5jbHVkaW5nIGFueSBBcHBsaWNhYmxlIExhdyBhbmQgUGVybWl0cyBwcm90ZWN0aW5nIGh1bWFuIGhlYWx0aCBvciB0aGUgZW52aXJvbm1lbnQgbm93IGluIGVmZmVjdCBvciB3aGljaCBtYXkgaGVyZWFmdGVyIGNvbWUgaW50byBlZmZlY3QpKSwgZXhjZXB0IHRvIHRoZSBleHRlbnQgY2F1c2VkIGJ5IHRoZSBpbmRlbW5pZmllZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQogY29udHJpYnV0b3J5LCBjb21wYXJhdGl2ZSBvciBncm9zcyBuZWdsaWdlbmNlIG9yIGJhZCBmYWl0aCwgb3IgcmVja2xlc3NuZXNzIG9yIHdpbGxmdWwgbWlzY29uZHVjdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICBpbiB3aGljaCBjYXNlIHRoZSBpbmRlbW5pZnlpbmcgQ28tVGVuYW50XHJxdW90ZSANCnMgaW5kZW1uaXR5IHNoYWxsIGJlIGxpbWl0ZWQgdG8gdGhlIGV4dGVudCBvZiBpdHMgY29udHJpYnV0b3J5IG9yIGNvbXBhcmF0aXZlIGZhdWx0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiB7XCpcYmtta2VuZCBfUmVmNDgwMzU0NjN9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1NDY0fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDc0MDkyNTkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGIpXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDc0MDkyNTkgTm90d2kNCnRoc3RhbmRpbmcgdGhlIHByb3Zpc2lvbnMgb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ3NDA5MjU5IFNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzQwOTI1OSAgIFJFRiBfUmVmNDgwMzU0NjMgXFx3IFxcaCBcXCogTUVSR0VGT1JNQVQgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDc0MDkyNTkge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNTAwMzQwMDM2MDAzMzAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcY2YxXGluc3JzaWQ3OTQyNjJcY2hhcnJzaWQ3OTQyNjIgDQoxNS4xKGEpfX19XHNlY3RkIFxsdHJzZWN0XHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDc0MDkyNTkgIGFib3ZlIG9yIGFueSBwcm92aXNpb25zIGluIHRoaXMgQWdyZWVtZW50IHRvIHRoZSBjb250cmFyeSwgYSBDby1UZW5hbnQNClxycXVvdGUgcyBzb2xlIGFuZCBleGNsdXNpdmUgcmVtZWR5IGZvciBsb3NzZXMgaW4gcmV2ZW51ZXMgYW5kIG90aGVyIENvbnNlcXVlbnRpYWwgRGFtYWdlcyBkdWUgdG8gdGhlIGluYWJpbGl0eSB0byBnZW5lcmF0ZSwgdHJhbnNtaXQgb3Igc2VsbCBlbGVjdHJpY2l0eSBkdXJpbmcgYSBwZXJpb2Qgb2YgZGlzY29ubmVjdGlvbiBvZiBhbnkgU2hhcmVkIEZhY2lsaXRpZXMgb3IgQWRkaXRpb25hbCBGYWNpbGl0aWVzIHRoYXQgYXJpc2VzIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgYXMgYSByZXN1bHQgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDc0MDkyNTkgIHRoZSBjb25uZWN0aW9uLCByZXBhaXIgb3IgcmVwbGFjZW1lbnQgb2YgYW55IFNoYXJlZCBGYWNpbGl0aWVzLCBBZGRpdGlvbmFsIEZhY2lsaXRpZXMgb3IgU2VwYXJhdGUgRmFjaWxpdGllcyB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IGluY2x1ZGluZyBhcyBhIHJlc3VsdCBvZiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDc0MDkyNTkgDQp0aGUgbmVnbGlnZW5jZSBvZiBhIENvLVRlbmFudCwgQ28tVGVuYW5jeSBNYW5hZ2VyLCBvciBhZ2VudCBvciBlbXBsb3llZSBvZiBhIENvLVRlbmFudCwgQ28tVGVuYW5jeSBNYW5hZ2VyIG9yIGFueSBjb250cmFjdG9yIG9yIHN1YmNvbnRyYWN0b3Igb2YgYW55IHRpZXIsIHNoYWxsIGJlIHN1Y2ggQ28tVGVuYW50XHJxdW90ZSBzIE5ldCBSZXZlbnVlIExvc3Nlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KOyBwcm92aWRlZCwgdGhhdCBmb3IgdGhlIGF2b2lkYW5jZSBvZiBkb3VidCwgYW55IGRpcmVjdCBkYW1hZ2VzIGluY2x1ZGluZyBwcm9wZXJ0eSBkYW1hZ2VzIHNoYWxsIGJlIHRoZSBvYmxpZ2F0aW9uIG9mIHRoZSBDby1UZW5hbnQgY2F1c2luZyBzdWNoIGRhbWFnZSBwdXJzdWFudCB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDc0MDkyNTkgU2VjdGlvbiB9DQp7XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDc0MDkyNTkgICBSRUYgX1JlZjQ4MDM1NDYzIFxcdyBcXGggXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzQwOTI1OSB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNDAwMzgwMDMwMDAzMzAwMzUwMDM0MDAzNjAwMzMwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGNmMVxpbnNyc2lkNzk0MjYyXGNoYXJyc2lkNzk0MjYyIDE1LjEoYSl9fX1cc2VjdGQgXGx0cnNlY3QNClxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ3NDA5MjU5IC4gIFRoZSBDby1UZW5hbnRzIGFncmVlIHRoZSBhY3R1YWwgQ29uc2VxdWVudGlhbCBEYW0NCmFnZXMgYXJpc2luZyBkdWUgdG8gc3VjaCBkaXNjb25uZWN0aW9uIHdvdWxkIGJlIGRpZmZpY3VsdCB0byBjb21wdXRlIGFuZCB0aGUgbWV0aG9kb2xvZ3kgZm9yIGRldGVybWluaW5nIHN1Y2ggZGFtYWdlcyBpcyBhIGdvb2QgZmFpdGggZXN0aW1hdGUgb2YgdGhlIGNhbGN1bGF0aW9ucyB1dGlsaXplZCB0byBkZXRlcm1pbmUgdGhlIGFjdHVhbCBDb25zZXF1ZW50aWFsIERhbWFnZXMgdGhhdCB3b3VsZCBiZSBzdWZmZXJlZC4NCntcKlxia21rZW5kIF9SZWY0ODAzNTQ2NH0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzU0NzN9e1wqXGJrbWtzdGFydCBfVG9jNjAxMzU1Mjd9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI1OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxiXGNhcHNcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIEFydGljbGUgMTZcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczI1OVxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4NzIwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM4XG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcYlxjYXBzXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgR0VORVJBTCBQUk9WfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIElTSU9OU3tcKlxia21rZW5kIF9SZWY0ODAzNTQ3M317XCpcYmtta2VuZCBfVG9jNjAxMzU1Mjd9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjEwMTM0MDU3N317XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTQ3NH17XCpcYmtta3N0YXJ0IF9Ub2M2MDEzNTUyOH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYxIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE2LjFcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczI2MVxxbCBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgTm90aWNlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KLiAgQW55IG5vdGljZSByZXF1aXJlZCBvciBhdXRob3JpemVkIHRvIGJlIGdpdmVuIGhlcmV1bmRlciBvciBhbnkgb3RoZXIgY29tbXVuaWNhdGlvbnMgYmV0d2VlbiB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBQYXJ0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSANCiBzaGFsbCBiZSBpbiB3cml0aW5nICh1bmxlc3Mgb3RoZXJ3aXNlIHByb3ZpZGVkKSBhbmQgc2hhbGwgYmUgc2VydmVkIHBlcnNvbmFsbHkgb3IgYnkgcmVwdXRhYmxlIGV4cHJlc3MgY291cmllciBzZXJ2aWNlIG9yIGJ5IGVtYWlsIGFkZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgcmVzc2VkIHRvIHRoZSByZWxldmFudCBQYXJ0eX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4ICBhdCB0aGUgYWRkcmVzcyBzdGF0ZWQgYmVsb3cgb3IgYXQgYW55IG90aGVyIGFkZHJlc3Mgbm90aWZpZWQgYnkgdGhhdCBQYXJ0eSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDU3MzI2MTggDQp0byB0aGUgb3RoZXJzIGFzIGl0cyBhZGRyZXNzIGZvciBzZXJ2aWNlLiAgQW55IG5vdGljZSBzbyBnaXZlbiBwZXJzb25hbGx5IHNoYWxsIGJlIGRlZW1lZCB0byBoYXZlIGJlZW4gc2VydmVkIG9uIGRlbGl2ZXJ5LCBhbnkgbm90aWNlIHNvIGdpdn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTMxNzgxIGVuIGJ5IGV4cHJlc3MgDQpjb3VyaWVyIHNlcnZpY2Ugc2hhbGwgYmUgZGVlbWVkIHRvIGhhdmUgYmVlbiBzZXJ2ZWQgfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxMjA4NTI1OCBbUkVEQUNURURdfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MzE3ODEgDQogZGF5cyBhZnRlciB0aGUgc2FtZSBzaGFsbCBoYXZlIGJlZW4gZGVsaXZlcmVkIHRvIHRoZSByZWxldmFudCBjb3VyaWVyLCBhbmQgYW55IG5vdGljZSBzbyBnaXZlbiBieSBlbWFpbCBzaGFsbCBiZSBkZWVtZWQgdG8gaGF2ZSBiZWVuIHNlcnZlZCBvbiBkaXNwYXRjaDsgcHJvdmlkZWQgdGhhdCBzdWNoIGVtYWlsIGlzIHRyYW5zbWl0dGVkIGR1cmluZyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTExMDA4MSBcJzkzYnVzaW5lc3MgaG91cnNcJzk0IGluIHRoZSBwcmltYXJ5IHJlY2lwaWVudHtcKlxia21rc3RhcnQgX0RWX0M3MjR9XHJxdW90ZSB7XCpcYmtta2VuZCBfRFZfQzcyNH1zIGxvY2F0aW9uICh3aGljaCwgZm9yIHB1cnBvc2VzIG9mIHRoaXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MTEwMDgxIFNlY3Rpb24gfQ0Ke1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgICBSRUYgX1JlZjQ4MDM1NDc0IFxcdyBcXGggXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNTAwMzQwMDM3MDAzNDAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcY2YxXGluc3JzaWQ3OTQyNjJcY2hhcnJzaWQ3OTQyNjIgMTYuMX19fVxzZWN0ZCBcbHRyc2VjdA0KXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KIHNoYWxsIG1lYW4gYW55IHRpbWUgYmVmb3JlIDU6MDAgcC5tLiBvbiBhIGRheSB0aGF0IGlzIG5vdCBhIFNhdHVyZGF5LCBTdW5kYXkgb3IgbGVnYWwgaG9saWRheSBpbiB0aGUgc3RhdGUgd2hlcmUgc3VjaCByZWNpcGllbnQgaXMgbG9jYXRlZCkgYW5kIG90aGVyd2lzZSBzaGFsbCBiZSBkZWVtZWQgdG8gaGF2ZSBiZWVuIHNlcnZlZCB1fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIHBvbiB0aGUgY29tbWVuY2VtZW50IG9mIHRoZSBuZXh0IHN1Y2NlZWRpbmcgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBcJzkzYnVzaW5lc3MgaG91cnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IFwnOTQgaW4gdGhlIHJlY2lwaWVudH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IHtcKlxia21rc3RhcnQgX0RWX0M3MjZ9XHJxdW90ZSB7XCpcYmtta2VuZCBfRFZfQzcyNn1zIGxvY2F0aW9uLiAgQXMgcHJvb2Ygb2Ygc3VjaCBzZXJ2aWNlIGl0IHNoYWxsIGJlIHN1ZmZpY2llbnQgdG8gcHJvZHVjZSBhIHJlY2VpcHQgc2h9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTczMjYxOCBvd2luZyBwZXJzb25hbCBzZXJ2aWNlLCB0aGUgcmVjZWlwdCBvZiBhIHJlcHV0YWJsZSBjb3VyaWVyIGNvbXBhbnkgc2hvd2luZyB0aGUgY29ycmVjdCBhZGRyZXNzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MzE3ODEgIG9mIHRoZSBhZGRyZXNzZWUgb3IgYSBcJzkzZGVsaXZlcnkgY29uZmlybWVkXCc5NCBvZiB0aGUgc2VuZGVyDQpccnF1b3RlIHMgZW1haWwgc2hvd2luZyB0aGUgY29ycmVjdCBlbWFpbCBhZGRyZXNzIG9mIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkxMTAwODEgUGFydHkgb24gd2hvbSBub3RpY2UgaXMgc2VydmVke1wqXGJrbWtlbmQgX1JlZjEwMTM0MDU3N30ue1wqXGJrbWtlbmQgX1JlZjQ4MDM1NDc0fXtcKlxia21rZW5kIF9Ub2M2MDEzNTUyOH0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE1XHFsIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGFmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBUaGUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpQYXJ0aWVzXGhpY2hcZjAgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIGFkZHJlc3NlcyBmb3Igc2VydmljZSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBhcmUgYXMgZm9sbG93cywgYWx0aG91Z2ggZWFjaCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFBhcnR5fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBtYXkgY2hhbmdlIGl0cyBhZGRyZXNzIGZvciBzZXJ2aWNlIGJ5IHdyaXR0ZW4gbm90aWNlIHRvIHRoZSBvdGhlciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFBhcnRpZXN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIGdpdmVuIGFzIHByb3ZpZGVkIGluIHRoaXMgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFNlY3Rpb24gfQ0Ke1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgICBSRUYgX1JlZjQ4MDM1NDc0IFxcdyBcXGggXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNTAwMzQwMDM3MDAzNDAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcY2YxXGluc3JzaWQ3OTQyNjJcY2hhcnJzaWQ3OTQyNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgMTYuMX19fVxzZWN0ZCBcbHRyc2VjdA0KXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgOg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiB7XCpcYmtta3N0YXJ0IF9IbGs0ODEwNzYyODh9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgSWYgdG8gSGFyZGluIFNvbGFyOlx0YWIgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KSGFyZGluIFNvbGFyIEVuZXJneSBMTEN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcdGFiIFx0YWIgXHRhYiBcdGFiIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGMvbyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE1NTU3MzA4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIERvbWluaW9uIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFNvbGFyIFByb2plY3RzIFZJSSwgSW5jLg0KDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxmaTcyMFxsaTIxNjBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMjE2MFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNTU1NzMwOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAxMjAgVHJlZGVnYXIgU3RyZWV0DQpccGFyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFJpY2htb25kLCBWQSAyMzIxOQ0KXHBhciBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBBdHRuOiAgXHRhYiBFbWlsIEF2cmFtLCBWaWNlIFByZXNpZGVudCAtIEJ1c2luZXNzIERldmVsb3BtZW50DQpccGFyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEVtYWlsOiBcdGFiIGVtaWwuYXZyYW1AZG9taW5pb25lbmVyZ3kuY29tfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MTMxNTQ3IA0KXHBhciBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYxMzE1NDcgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxmaTcyMFxsaTIxNjBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMjE2MFxpdGFwMFxwYXJhcnNpZDE2MTMxNTQ3IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYxMzE1NDdcY2hhcnJzaWQxMjgwMjkxMCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBIYXJkaW4gU29sYXIgRW5lcmd5IExMQ317DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYxMzE1NDdcY2hhcnJzaWQxMjAyMzIwMSANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTYxMzE1NDcge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjEzMTU0NyBcdGFiIFx0YWIgXHRhYiBcdGFiIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGMvbyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE2MTMxNTQ3XGNoYXJyc2lkMTU1NTczMDggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgRG9taW5pb24gU29sYXIgUHJvamVjdHMgVklJLCBJbmMuDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxmaTcyMFxsaTIxNjBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMjE2MFxpdGFwMFxwYXJhcnNpZDE2MTMxNTQ3IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYxMzE1NDdcY2hhcnJzaWQxNjEzMTU0NyBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCA2MDAgRWFzdCBDYW5hbCBTdHJlZXQsIDENClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDV0aCBGbG9vciBOb3J0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MTMxNTQ3IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjEzMTU0N1xjaGFycnNpZDE2MTMxNTQ3IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFJpY2htb25kLCBWQSAyMzIxOX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MTMxNTQ3IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjEzMTU0N1xjaGFycnNpZDE2MTMxNTQ3IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEF0dG46IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2MTMxNTQ3IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNjEzMTU0N1xjaGFycnNpZDE2MTMxNTQ3IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgRGlyZWN0b3IgLSBSZW5ld2FibGUgRW5lcmd5IE9wZXJhdGlvbnMgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxmaTcyMFxsaTIxNjBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMjE2MFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTYxMzE1NDcgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTU1NTczMDggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgYW5kDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE1NTU3MzA4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIERvbWluaW9uIEVuZXJneSBTZXJ2aWNlcywgSW5jLg0KXHBhciBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBMZWdhbCBEZXBhcnRtZW50DQpccGFyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDEyMCBUcmVkZWdhciBTdHJlZXQNClxwYXIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgUmljaG1vbmQsIFZBIDIzMjE5DQpccGFyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEF0dG46ICBOb29wdXIgTi4gR2FyZyAtIFNlbmlvciBDb3Vuc2VsIFxoaWNoXGYwIFxlbmRhc2ggXGxvY2hcZjAgIFNlY3VyaXRpZXMsIE0mQQ0KXHBhciBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBhbmQgUHJvamVjdCBEZXZlbG9wbWVudA0KXHBhciBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBFbWFpbDogTm9vcHVyLm4uZ2FyZ0Bkb21pbmlvbmVuZXJneS5jb20NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTU1NTczMDggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgd2l0aCBhIGNvcHkgdG86DQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE1NTU3MzA4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFRyb3V0bWFufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIFBlcHBlciBIYW1pbHRvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNTU1NzMwOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgU2FuZGVycyBMTFANClxwYXIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgMTAwMSBIYXhhbGwgUG9pbnQNClxwYXIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgUmljaG1vbmQsIFZBIDIzMjE5DQpccGFyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEF0dG46ICBcdGFiIFIuIE1hc29uIEJheWxlciwgSnIuDQpccGFyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEVtYWlsOiBcdGFiIG1hc29uLmJheWxlckB0cm91dG1hbi5jb219e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBJZiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHRvIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBIYXJkaW4gU29sYXJ9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBJSTp9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFx0YWIgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgSGFyZGluIFNvbGFyIEVuZXJneSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBJSSB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBMTEMNClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMjg4MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4yODgwXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgMSBTLiBXYWNrXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQplciBEcml2ZSwgU3VpdGUgMTgwMA0KXHBhciBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBDaGljYWdvLCBJbGxpbm9pcyA2MDYwNg0KXHBhciBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBXaXRoIGNjIHRvIGF0dGVudGlvbiBvZjogfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEdlbmVyYWwgQ291bnNlbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMjg4MFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4yODgwXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgRW1haWw6fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDU1OTkyNDEgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBnZW5lcmFsY291bnNlbEBpbnZlbmVyZ3lsbGMuY29tfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIElmIHRvIEhhcmRpbiBTb2xhciBJSUk6fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcdGFiIFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEhhcmRpbiBTb2xhciBFbmVyZ3kgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgSUlJIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIExMQw0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkyODgwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjI4ODBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDEgUy4gV2Fja2VyIERyaXZlLCBTdWl0ZSAxODAwfXtccnRsY2hcZmNzMSANClxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIENoaWNhZ28sIElsbGlub2lzIDYwNjA2DQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgV2l0aCBjYyB0byBhdHRlbnRpb24gb2Y6XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgR2VuZXJhbCBDb3Vuc2VsfQ0Ke1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjggDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTI4ODBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMjg4MFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEVtYWlsOn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1NTk5MjQxIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgZ2VuZXJhbGNvdW5zZWxAaW52ZW5lcmd5bGxjLmNvbX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNTU0MTA3MiANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGZpNjNcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIElmIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCB0b317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCkNvLVRlbmFuY3kgTWFuYWdlcjp9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcdGFiIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFNlZSBIYXJkaW4gU29sYXIgRW5lcmd5IExMQyBjb250YWN0IGluZm9ybWF0aW9uIGFib3ZlfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTI4ODBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMjg4MFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1NDc1fXtcKlxia21rc3RhcnQgX1JlZjQ4MDM3NDg2fXtcKlxia21rc3RhcnQgX1RvYzYwMTM1NTI5fXtcKlxia21rZW5kIF9IbGs0ODEwNzYyODh9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNi4yDQpcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyNjFccWwgXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFN1cnZpdmFsIG9mIFJpZ2h0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KLiAgVGhlIEVhc2VtZW50cywgdGhlIHJpZ2h0cywgaW50ZXJlc3RzIGFuZCBvYmxpZ2F0aW9ucyB0aGVyZXVuZGVyIGFuZCBlYWNoIENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIHMgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IG50ZXJlc3RzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgLCBzaA0KYWxsIGJlIGhlbGQsIGNvbnZleWVkLCBoeXBvdGhlY2F0ZWQsIGVuY3VtYmVyZWQsIHRyYW5zZmVycmVkIGFuZCB1c2VkIHN1YmplY3QgdG8gdGhlIGNvdmVuYW50cywgdGVybXMgYW5kIHByb3Zpc2lvbnMgc2V0IGZvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgDQp0aCBpbiB0aGlzIEFncmVlbWVudCwgd2hpY2ggc2hhbGwgYmUgYmluZGluZyB1cG9uIGFuZCBpbnVyZSB0byB0aGUgYmVuZWZpdCBvZiB0aGUgQ28tVGVuYW50cyBhbmQgYW55IG90aGVyIHBlcnNvbiBhbmQgZW50aXR5IGhhdml9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIG5nIA0KYW55IGludGVyZXN0IHRoZXJlaW4gZHVyaW5nIHRoZWlyIG93bmVyc2hpcCB0aGVyZW9mLCBhbmQgdGhlaXIgcmVzcGVjdGl2ZSBwZXJtaXR0ZWQgZ3JhbnRlZXMsIHBlcm1pdHRlZCB0cmFuc2ZlcmVlcywgaGVpcnMsIGxlZ2F0ZWVzLCBleGVjdXRvcnMsIGFkbWluaXN0cmF0b3JzLCBzdWNjZXNzb3JzIGFuZCBwZXJtaXR0ZWQgYXNzaWducywgYW5kIGFsbCBwZXJzb25zIGNsYWltaW5nIHVuZGVyIHRoZW0uICBUbyB0aGUgbWF4aW11bSBleHRlbn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSB0IHBlcm1pdHRlZCBieSBsYXcsIHRoZSBjb3ZlbmFudHMgc2V0IGZvcnRoIGluIHRoZSBleGhpYml0cyB0byB0aGlzIEFncmVlbWVudCBzaGFsbCBiZSBkZWVtZWQgdG8gcnVuIHdpdGggdGhlIEVhc2VtZW50cywgdGhlIHJpZ2h0cywgaW50ZXJlc3RzIGFuZCBvYmxpZ2F0aW9ucyB0aGVyZXVuZGVyLCBlYWNoIENvLVRlbmFudH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ0MDEwMDQ0IFxycXVvdGUgcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IG50ZXJlc3RzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgYW5kIGVhY2ggcG9ydGlvbiB0aGVyZW9mIGFuZCBpbnRlcmVzdCB0aGVyZWluLCBhcyBlcXVpdGFibGUgc2Vydml0dWRlcy59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIHtcKlxia21rZW5kIF9SZWY0ODAzNTQ3NX17XCpcYmtta2VuZCBfUmVmNDgwMzc0ODZ9e1wqXGJrbWtlbmQgX1RvYzYwMTM1NTI5fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTQ3Nn17XCpcYmtta3N0YXJ0IF9SZWY0ODAzNzQ4N317XCpcYmtta3N0YXJ0IF9Ub2M2MDEzNTUzMH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYxIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE2LjNcdGFifX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBBbWVuZG1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAuICBBbnkgY2hhbmdlcyB0byB0aGlzIEFncmVlbWVudCBzaGFsbCByZXF1aXJlIHRoZSB3cml0dGVuIGFwcHJvdmFsIG9mIGFsbCBvZiB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQpQYXJ0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ3ODc2OTAwICBhbmQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgc2hhbGwgYmUgc3ViamVjdCB0byBGRVJDIGFwcHJvdmFsIHB1cnN1YW50IHRvIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgDQpTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCAgIFJFRiBfUmVmNDgwMzc0ODggXFx3IFxcaCBcXCogTUVSR0VGT1JNQVQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM3MDAzNDAwMzgwMDM4MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxjZjFcaW5zcnNpZDc5NDI2MlxjaGFycnNpZDc5NDI2MiAxNi40fX19XHNlY3RkIFxsdHJzZWN0DQpccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBiZWxvdywgYW5kIGFsbCBvdGhlciByZXF1aXJlZCBhcHByb3ZhbHMgb2YgYW55IEdvdmVybm1lbnRhbCBBdXRob3JpdHkufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIHtcKlxia21rZW5kIF9SZWY0ODAzNTQ3Nn17XCpcYmtta2VuZCBfUmVmNDgwMzc0ODd9e1wqXGJrbWtlbmQgX1RvYzYwMTM1NTMwfQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M2MDEzNTUzMX17XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTQ3N317XCpcYmtta3N0YXJ0IF9SZWY0ODAzNzQ4OH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYxIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE2LjRcdGFifX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBGRVJDIEFwcHJvdmFsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgIGFuZCBOb3RpY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgIA0Ke1wqXGJrbWtlbmQgX1RvYzYwMTM1NTMxfQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY1NTMwMjMyNn17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGEpXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMjYzXHFsIFxmaTE0NDBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgyMTYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM4XGlsdmwyXG91dGxpbmVsZXZlbDJcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgVGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgUGFydGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgIGFja25vd2xlZGdlIGFuZCBhZ3JlZSB0aGF0OiAofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgaX17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSApIHRoaXMgQWdyZWVtZW50IHdpbGwgYmUgcHVibGljbHkgYXZhaWxhYmxlIHRocm91Z2ggaXRzIGZpbGluZyB3aXRoIEZFUkMgZm9yIGFjY2VwdGFuY2UgdW5kZXIgU2VjdGlvbiB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNjN9MjA1e1wqXGJrbWtlbmQgRG9jWFRleHRSZWY2M30gb2YgdGhlIEZQQTsgKH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgaWl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxICkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgYWZ0ZXIgdGhpcyBBZ3JlZW1lbnQgaGFzIGJlZW4gZmlsZWQgYXQgRkVSQyB1bmRlciBTZWN0aW9uIDIwNSBvZiB0aGUgRlBBLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgYX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgbnkgc3Vic2VxdWVudCBhbWVuZG1lbnRzIHRvIHRoaXMgQWdyZWVtZW50IG11c3QgYmUgYWNjZXB0ZWQgYnkgRkVSQywgYW5kIHRoZSBlZmZlY3RpdmVuZXNzIG9mIHN1Y2ggYW1lbmRtZW50cyB3aWxsIGJlIGNvbnRpbmdlbnQgb24gc3VjaCBGRVJDIGFjY2VwdGFuY2U7ICgNCn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IGlpaX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgKSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBjaGFuZ2VzIGluIG93bmVyc2hpcCBjb250ZW1wbGF0ZWQgYnkgdGhpcyBBZ3JlZW1lbnQgbQ0KYXkgYmUgc3ViamVjdCB0byBwcmlvciBGRVJDIGFwcHJvdmFsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgIG9yIG1heSByZXF1aXJlIG5vdGljZSB0byBGRVJDIGluIGFjY29yZGFuY2Ugd2l0aCBGRVJDIHJlZ3VsYXRpb25zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgOyAgKH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDQgaXZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiApfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCAgZGlzY29ubmVjdGlvbnMgb3IgdGVybWluYXRpb25zIGNvbnRlbXBsYXRlZCBieSB0aGlzIEFncmVlbWVudCBtYXkgcmVxdWlyZSBwcmlvciBGRVJDIGFwcHJvdmFsfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCA7ICh2KSBpdCBpcyB0aGUgb2JsaWdhdGlvbiBvZiBlYWNoIENvLVRlbmFudCB0byBvYnRhaW4gYW55IG5lY2Vzc2FyeSBGRVJDIGFjY2VwdGFuY2VzIG9yIGFwcHJvdmFscyB3aXRoIHJlc3BlY3QgdG8gc3VjaCBDby1UZW5hbnRccnF1b3RlIA0KcyByaWdodHMgb3Igb2JsaWdhdGlvbnMgdW5kZXIgdGhpcyBBZ3JlZW1lbnQ7IGFuZCAodmkpIGVhY2ggT3BlcmF0aW9uYWwgQ28tVGVuYW50IHdpbGwgcmVhc29uYWJseSBjb29wZXJhdGUgKGF0IEpvaW5pbmcgQ28tVGVuYW50XHJxdW90ZSBzIGNvc3QgYW5kIGV4cGVuc2UpIHdpdGggYW55IEpvaW5pbmcgQ28tVGVuYW50IGluDQogY29ubmVjdGlvbiB3aXRoIHN1Y2ggSm9pbmluZyBDby1UZW5hbnQgb2J0YWluaW5nIHRoZSBGRVJDIGFwcHJvdmFscyBhcHBsaWNhYmxlIHRvIHN1Y2ggSm9pbmluZyBDby1UZW5hbnRccnF1b3RlIA0KcyBSZWd1bGF0b3J5IEFwcHJvdmFsIERhdGUsIGFuZCB0byB0aGUgZXh0ZW50IHRoYXQgc3VjaCBPcGVyYXRpb25hbCBDby1UZW5hbnQgbWF5IG5lZWQgaXRzIG93biBGRVJDIGFwcHJvdmFsIHNvIHRoYXQgYSBKb2luaW5nIENvLVRlbmFudCBjYW4gYWNoaWV2ZSBpDQp0cyBSZWd1bGF0b3J5IEFwcHJvdmFsIERhdGUsIHN1Y2ggT3BlcmF0aW9uYWwgQ28tVGVuYW50IHNoYWxsIG1ha2UgcmVhc29uYWJsZSBlZmZvcnRzIHRvIHRpbWVseSBvYnRhaW4gc3VjaCBhcHByb3ZhbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFN1YmplY3QgdG8gdGhlIHRlcm1zIGFuZCBjb25kaXRpb25zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCAgc2V0IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBmb3J0aCBoZXJlaW4sIHRoZSBQYXJ0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgDQphZ3JlZSB0byBleGVjdXRlIGFuZCBkZWxpdmVyIGFsbCBkb2N1bWVudHMgcmVhc29uYWJseSBuZWNlc3NhcnkgZm9yIHRoaXMgQWdyZWVtZW50IHRvIGNvbXBseSB3aXRoIEZFUkMgcmVxdWlyZW1lbnRzOyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDg0MDUwNTMgcHJvdmlkZWQsIGhvd2V2ZXIsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgdGhhdCBmb3IgcHVycG9zZXMgb2YgY2xhcml0eSBubyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFBhcnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSAgc2hhbGwgYmUgb2JsaWdhdGVkIHRvIGV4ZWN1dGUgYW55IGRvY3VtZW50cyB3aGljaCBofXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IGF2ZSBvciBjb3VsZCByZWFzb25hYmx5IGJlIGV4cGVjdGVkIHRvIGhhdmUgYSBtYXRlcmlhbCBhZHZlcnNlIGVmZmVjdCBvbiBzdWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFBhcnR5XHJxdW90ZSBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgb3IgaXRzIHJpZ2h0cyBhbmQgYmVuZWZpdHMgdW5kZXIgdGhpcyBBZ3JlZW1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCB7XCpcYmtta2VuZCBfUmVmNDgwMzU0Nzd9e1wqXGJrbWtlbmQgX1JlZjQ4MDM3NDg4fS57XCpcYmtta2VuZCBfUmVmNTUzMDIzMjZ9DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYwXGluc3JzaWQxMjA4NTI1OCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoYilcdGFifX17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTIwODUyNTggW1JFREFDVEVEXX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNTg4MDM5MCAsIEhhcmRpbiBTb2xhciBzaGFsbCBmaWxlIHRoaXMgQWdyZWVtZW50IHdpdGggRkVSQyByZXF1ZXN0aW5nIHRoYXQgRkVSQyBhY2NlcHQgdGhlIEFncmVlbWVudCBhcyBpdHMgcmF0ZSBzY2hlZHVsZSB1bmRlciBTZWN0aW9uIDIwNSBvZiB0aGUgRlBBfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgICh0aGUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MzEyMzk4IEhhcmRpbiBTb2xhciBJbml0aWFsIEZpbGluZyBEYXRlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXCc5NCkuDQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjU0ODAzODg5fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUwNTA2ODEgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgKGMpXHRhYn19e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGRiY2hcYWYxXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUwNTA2ODEgDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBBZnRlciB0aGUgT3BlcmF0aXZlIERhdGUgYnV0XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQogYXQgdGhlIGFwcHJvcHJpYXRlIHRpbWUgcHJpb3IgdG8gdGhlIHRpbWUgdGhhdCBhIEpvaW5pbmcgQ28tVGVuYW50IGFjcXVpcmVzIGl0cyBVbmRpdmlkZWQgSW50ZXJlc3RzIGluIFNoYXJlZCBGYWNpbGl0aWVzLCBzdWNoIEpvaW5pbmcgQ28tVGVuYW50IHNoYWxsIGZpbGUgdGhpcyBBZ3JlZW1lbnQgd2l0aCBGRVJDIHJlcXVlc3RpbmcgdGhhdCBGRVJDIGFjY2VwdCB0aGUgQWdyZWVtZW50IGF0IGl0cyByYXRlIHNjaGVkdWxlIHVuZGVyIFNlY3QNClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGlcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBcaGljaFxmMCBvbiAyMDUgb2YgdGhlIEZQQSAoXCc5M317XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcdWxcZGJjaFxhZjFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBKb2luaW5nIENvLVRlbmFudCBJbml0aWFsIEZpbGluZyBEYXRlfXtccnRsY2hcZmNzMSANClxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGRiY2hcYWYxXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUwNTA2ODEgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NFxsb2NoXGYwICkufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4NDA1MDUzIHtcKlxia21rZW5kIF9SZWY1NDgwMzg4OX0NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxjZjFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAoZClcdGFifX17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcZGJjaFxhZjFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCklmIGEgSm9pbmluZyBDby1UZW5hbnQgZGV0ZXJtaW5lcyB0aGF0IHRoZSB0aGVuLWN1cnJlbnQgRkVSQyByZWd1bGF0aW9ucyByZXF1aXJlIGl0IHRvIHByb3ZpZGUgbm90aWNlIHRvIEZFUkMgYWZ0ZXIgc3VjaCBKb2luaW5nIENvLVRlbmFudFxoaWNoXGYwIFxycXVvdGUgXGxvY2hcZjAgcyBhY3F1aXNpdGlvbiBvZiBhbiBVbmRpdmlkZWQgSW50ZXJlc3QgaW4gdGhlIFNoYXJlZCBGYWNcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCmlsaXRpZXMgaW4gYWNjb3JkYW5jZSB3aXRoIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcdWxcZGJjaFxhZjFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXHVsXGRiY2hcYWYxXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUwNTA2ODEgDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgUkVGIF9SZWY0ODAzNTI0OSBcXHcgXFxoICBcXCogTUVSR0VGT1JNQVQgfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFx1bFxkYmNoXGFmMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MDUwNjgxIHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNTAwMzIwMDM0MDAzOTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcdWxcZGJjaFxhZjFcaW5zcnNpZDc5NDI2MlxjaGFycnNpZDUwNTA2ODEgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgMi4xKGEpfX19XHNlY3RkIFxsdHJzZWN0DQpccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcZGJjaFxhZjFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTA1MDY4MSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCiwgc3VjaCBKb2luaW5nIENvLVRlbmFudCBzaGFsbCBiZSByZXNwb25zaWJsZSBmb3IgdGhlIHByZXBhcmF0aW9uIGFuZCBzdWJtaXNzaW9uIG9mIHN1Y2ggbm90aWNlIGluIGFjY29yZGFuY2Ugd2l0aCBGRVJDXGhpY2hcZjAgXHJxdW90ZSBcbG9jaFxmMCBzIHJlcXVpcmVtZW50cy4gIEVhY2ggT3BlcmF0aW9uYWwgQ28tVGVuYW50IHdpbGwgcmVcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCmFzb25hYmx5IGNvb3BlcmF0ZSAoYXQgSm9pbmluZyBDby1UZW5hbnRcaGljaFxmMCBccnF1b3RlIFxsb2NoXGYwIHMgY29zdCBhbmQgZXhwZW5zZSkgd2l0aCBhbnkgSm9pbmluZyBDby1UZW5hbnQgaW4gY29ubmVjdGlvbiB3aXRoIHRoZSBwcmVwYXJhdGlvbiBhbmQgc3VibWlzc2lvbi59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDg0MDUwNTMgDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzYwMTM1NTMyfXtcKlxia21rc3RhcnQgX1JlZjQ4MDM1NDc4fXtcKlxia21rc3RhcnQgX1JlZjQ4MDM3NDg5fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDQ4NTczMjYgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTYuNVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzMjYxXHFsIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM4XGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxjZjFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDg1NzMyNiBDb25zdHJ1Y3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggLiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDQ4NTczMjZcc3B2IHtcKlxia21rZW5kIF9Ub2M2MDEzNTUzMn0NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChhKVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczI2M1xxbCBcZmkxNDQwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MjE2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxpbHZsMlxvdXRsaW5lbGV2ZWwyXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFRoZSBsYW5ndWFnZSBpbiBhbGwgcGFydHMgb2YgdGhpcyBBZ3JlZW1lbnQgc2hhbGwgYmUgaW4gYWxsIGNhc2VzIGNvbnN0cnVlZCBzaW1wbHkgYWNjb3JkaW5nIHRvIGl0cyBmYWl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIHIgbWVhbmluZyBhbmQgbm90IHN0cmljdGx5IGZvciBvciBhZ2FpbnN0IGFueSBvZiB0aGUgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFBhcnRpZXMgaGVyZXRvLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkge1wqXGJrbWtlbmQgX1JlZjQ4MDM1NDc4fXtcKlxia21rZW5kIF9SZWY0ODAzNzQ4OX0NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChiKVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQpBbnkgcmVmZXJlbmNlIGluIHRoaXMgQWdyZWVtZW50IHRvIGFub3RoZXIgY29udHJhY3Qgb3IgZG9jdW1lbnQgc2hhbGwgYmUgY29uc3RydWVkIGFzIGEgcmVmZXJlbmNlIHRvIHRoYXQgb3RoZXIgY29udHJhY3Qgb3IgZG9jdW1lbnQgYXMgdGhlIHNhbWUgbWF5IGhhdmUgYmVlbiwgb3IgbWF5IGZyb20gdGltZSB0byB0aW1lIA0KYmUsIHZhcmllZCwgYW1lbmRlZCwgc3VwcGxlbWVudGVkLCBzdWJzdGl0dXRlZCwgbm92YXRlZCwgYXNzaWduZWQgb3Igb3RoZXJ3aXNlIHRyYW5zZmVycmVkLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGMpXHRhYn1BbnkgcmVmZXJlbmNlIGluIHRoaXMgQWdyZWVtZW50IHRvIFwnOTN0aGlzIEFncmVlbWVudCxcJzk0IFwnOTNoZXJlaW4sXCc5NCBcJzkzaGVyZW9mXCc5NCBvciBcJzkzaGVyZXVuZGVyXCc5NA0KIHNoYWxsIGJlIGRlZW1lZCB0byBiZSBhIHJlZmVyZW5jZSB0byB0aGlzIEFncmVlbWVudCBhcyBhIHdob2xlIGFuZCBub3QgbGltaXRlDQpkIHRvIHRoZSBwYXJ0aWN1bGFyIEFydGljbGUsIFNlY3Rpb24sIEV4aGliaXQsIFNjaGVkdWxlIG9yIHByb3Zpc2lvbiBpbiB3aGljaCB0aGUgcmVsZXZhbnQgcmVmZXJlbmNlIGFwcGVhcnMgYW5kIHRvIHRoaXMgQWdyZWVtZW50IGFzIHZhcmllZCwgYW1lbmRlZCwgc3VwcGxlbWVudGVkLCBzdWJzdGl0dXRlZCwgbm92YXRlZCwgYXNzaWduZWQgb3Igb3RoZXJ3aXNlIHRyYW5zZmVycmVkIGZyb20gdGltZSB0byB0aW1lLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGQpXHRhYn1SZWZlcmVuY2VzIHRvIGFueSBQYXJ0eSBzaGFsbCwgd2hlcmUgYXBwcm9wcmlhdGUsIGluY2x1ZGUgYW55IHN1Y2Nlc3NvcnMgYW5kIHBlcm1pdHRlZCBhc3NpZ25zIG9mIHN1Y2ggUGFydHkuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoZSlcdGFifVJlZmVyZW5jZXMgdG8gdGhlIHRlcm0gXCc5M2luY2x1ZGVzXCc5NCBvciBcJzkzaW5jbHVkaW5nXCc5NCBzaGFsbCBtZWFuIFwnOTNpbmNsdWRlcywgd2l0aG91dCBsaW1pdGF0aW9uXCc5NCBvciBcJzkzDQppbmNsdWRpbmcsIHdpdGhvdXQgbGltaXRhdGlvbi5cJzk0DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoZilcdGFifVdvcmRzIGltcG9ydGluZyB0aGUgc2luZ3VsYXIgaW5jbHVkDQplIHRoZSBwbHVyYWwgYW5kIHZpY2UgdmVyc2EgYW5kIHRoZSBtYXNjdWxpbmUsIGZlbWluaW5lIGFuZCBuZXV0ZXIgZ2VuZGVycyBpbmNsdWRlIGFsbCBnZW5kZXJzLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGcpXHRhYn0NCklmIHRoZSB0aW1lIGZvciBwZXJmb3JtaW5nIGFuIG9ibGlnYXRpb24gdW5kZXIgdGhpcyBBZ3JlZW1lbnQgb2NjdXJzIG9yIGV4cGlyZXMgb24gYSBkYXkgdGhhdCBpcyBub3QgYSBidXNpbmVzcyBkYXksIHRoZSB0aW1lIGZvciBwZXJmb3JtYW5jZSBvZiBzdWNoIG9ibGlnYXRpb24gc2hhbGwgYmUgZXh0ZW5kZWQgdW50aWwgdGhlIG5leHQgc3VjY2VlZGluZyBidXNpbmVzcyBkYXkuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoaClcdGFifQ0KUmVmZXJlbmNlcyB0byBhbnkgc3RhdHV0ZSwgY29kZSBvciBzdGF0dXRvcnkgcHJvdmlzaW9uIGFyZSB0byBiZSBjb25zdHJ1ZWQgYXMgYSByZWZlcmVuY2UgdG8gdGhlIHNhbWUgYXMgaXQgbWF5IGhhdmUgYmVlbiwgb3IgbWF5IGZyb20gdGltZSB0byB0aW1lIGJlLCBhbWVuZGVkLCBtb2RpZmllZCBvciByZWVuYWN0ZWQsIGFuZCBpbmNsdWRlIHINCmVmZXJlbmNlcyB0byBhbGwgYnlsYXdzLCBpbnN0cnVtZW50cywgb3JkZXJzIGFuZCByZWd1bGF0aW9ucyBmb3IgdGhlIHRpbWUgYmVpbmcgbWFkZSB0aGVyZXVuZGVyIG9yIGRlcml2aW5nIHZhbGlkaXR5IHRoZXJlZnJvbSB1bmxlc3MgdGhlIGNvbnRleHQgb3RoZXJ3aXNlIHJlcXVpcmVzLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGkpXHRhYn1SZWZlcmVuY2VzIHRvIGFueSBhbW91bnQgb2YgbW9uZXkgc2hhbGwgbWVhbiBhIHJlZmVyZW5jZSB0byB0aGUgYW1vdW50IGluIFVuaXRlZCBTdGF0ZXMgRG9sbGFycy4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTYyMTM2MjcgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGopXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE2MjEzNjI3IA0KV2hlbmV2ZXIgYSBQZXJzb24gaXMgdG8gZGV0ZXJtaW5lIHRoYXQgc29tZXRoaW5nIGlzIFwnOTNzYXRpc2ZhY3RvcnkgdG8sXCc5NCBcJzkzYWNjZXB0YWJsZSB0byxcJzk0IG9yIFwnOTN0byB0aGUgc2F0aXNmYWN0aW9uIG9mXCc5NCBzdWNoIFBlcnNvbiwgdGhlIGRldGVybWluYXRpb24gbWF5IG5vdCBiZSBtYWRlIGluIGJhZCBmYWl0aC4gIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTQ3OX17XCpcYmtta3N0YXJ0IF9SZWY0ODAzNzQ5MH17XCpcYmtta3N0YXJ0IF9Ub2M2MDEzNTUzM317XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYxIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNi42XHRhYn19XHBhcmRccGxhaW4gXGx0cnBhcg0KXHMyNjFccWwgXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBBZ3JlZW1lbnQgaW4gQ291bnRlcnBhcnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgLiAgVGhpcyBBZ3JlZW1lbnQgbWF5IGJlIGV4ZWN1dGVkIGluIG11bHRpcGxlDQogY291bnRlcnBhcnRzLCBlYWNoIGFuZCBhbGwgb2Ygd2hpY2ggc2hhbGwgYmUgZGVlbWVkIGFuIG9yaWdpbmFsIEFncmVlbWVudCwgYW5kIGFsbCBvZiB3aGljaCBzaGFsbCBjb25zdGl0dXRlIG9uZSBBZ3JlZW1lbnQgdG8gYmUgZWZmZWN0aXZlIGFzIG9mIHRoZSBkYXkgYW5kIHllYXIgZmlyc3QgYWJvdmUgd3JpdHRlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANCm4uICBGb3IgcHVycG9zZXMgb2YgcmVjb3JkaW5nIHRoaXMgQWdyZWVtZW50LCB0aGUgc2lnbmF0dXJlIHBhZ2UgYW5kIHRoZSBhY2tub3dsZWRnZW1lbnQgcGFnZXMgcGVydGFpbmluZyB0aGVyZXRvIG1heSBiZSBkZXRhY2hlZCBmcm9tIGEgY291bnRlcnBhcnQsIHdoZW4gZXhlY3V0ZWQsIGFuZCBhdHRhY2hlZCB0byBhbm90aGVyIGNvdW50ZXJwYXJ0LCB3aGljaCBvdGhlciBjb3VudGVycGFydH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSAgbWF5IHRoZXJlYWZ0ZXIgYmUgcmVjb3JkZWQgYXMgdGhpcyBBZ3JlZW1lbnQue1wqXGJrbWtlbmQgX1JlZjQ4MDM1NDc5fXtcKlxia21rZW5kIF9SZWY0ODAzNzQ5MH17XCpcYmtta2VuZCBfVG9jNjAxMzU1MzN9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1NDY3fXtcKlxia21rc3RhcnQgX1JlZjQ4MDM3NDg1fXtcKlxia21rc3RhcnQgX1JlZjUwNzEyOTI0fXtcKlxia21rc3RhcnQgX1RvYzYwMTM1NTM0fXtcKlxia21rc3RhcnQgX1JlZjQ4MDM1NDgwfXtcKlxia21rc3RhcnQgX1JlZjQ4MDM3NDkxfXtcKlxia21rc3RhcnQgX1JlZjQ4MzA2MTc1fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCANClxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNi43XHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIERpc3B1dGVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQouICBFeGNlcHQgYXMgb3RoZXJ3aXNlIHByb3ZpZGVkIGluIHRoaXMgQWdyZWVtZW50LCBpbiB0aGUgZXZlbnQgYSBkaXNwdXRlIGFyaXNlcyBiZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgdHdlZW4gb3IgYW1vbmcgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnRzfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgcmVnYXJkaW5nIHRoZSBhcHBsaWNhdGlvbiBvciBpbnRlcnByZXRhdGlvbiBvZiBhbnkgcHJvdmlzaW9uIG9mIHRoaXMgQWdyZWVtZW50LCB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIGFsbGVnaW5nIHRoZSBkaXNwdXRlIHNoYWxsIHByb21wdGx5IG5vdGlmeSB0aGUgb3RoZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBvciB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIG9mIHRoZSBkaXNwdXRlIGluIHdyaXRpbmcuICBJZiB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudHN9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBzaGFsbCBoYXZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIGUgZmFpbGVkIHRvIHJlc29sdmUgdGhlIGRpc3B1dGUgd2l0aGluIH17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTIwODUyNTggW1JFREFDVEVEXX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCAgZGF5cyBhZnRlciBkZWxpdmVyeSBvZiBzdWNoIHdyaXR0ZW4gbm90aWNlLCBlYWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgc2hhbGwsIHdpdGhpbiB9e1xydGxjaFxmY3MxIA0KXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTIwODUyNTggW1JFREFDVEVEXX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBkYXlzIG9mIHJlY2VpcHQgb2YgYSB3cml0dGVuIGRlbWFuZCBmcm9tIHRoZSBvdGhlciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50fXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgdG8gZG8gc28sIGRpcmVjdCBpdHMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBSZXByZXNlbnRhdGl2ZSBvciB0aGUgQ28tVGVuYW5jeSBNfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIGFuYWdlciBSZXByZXNlbnRhdGl2ZSB0byBjb25mZXIgaW4gZ29vZCBmYWl0aCB3aXRoaW4gfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxMjA4NTI1OCBbUkVEQUNURURdfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANCiBkYXlzIHdpdGggdGhlIG90aGVyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgUmVwcmVzZW50YXRpdmVzIG9yIENvLVRlbmFuY3kgTWFuYWdlciBSZXByZXNlbnRhdGl2ZSB0byByZXNvbHZlIHRoZSBkaXNwdXRlLiAgU2hvdWxkIHRoZSB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIGJlIHVuYWJsZSB0byByZXNvbHZlIHRoZSBkaXNwdXRlIHRvIHRoZWlyIG11dHVhbCBzYXRpc2ZhY3Rpb24gd2l9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgdGhpbiB9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDEyMDg1MjU4IFtSRURBQ1RFRF19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwICBkYXlzLCBlYWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnR9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBzaGFsbCBoYXZlIHRoZSByaWdodCB0byBwdXJzdWUgdGhlIHJlc29sdXRpb24gb2Ygc3VjaCBkaXNwdXRlIGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgcHJvdmlzaW9ucyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBBZ3JlZW1lbnQgaW4gYSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBjb3VydCBvZiBjb21wZXRlbnQganVyaXNkaWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgIGluIGFjY29yZGFuY2Ugd2l0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgU2VjdGlvbiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgIFJFRiBfUmVmNTA3MTI5MTMgXFx3IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNTAwMzAwMDM3MDAzMTAwMzIwMDM5MDAzMTAwMzMwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ3OTQyNjIgMTYuOH19fVxzZWN0ZCBcbHRyc2VjdA0KXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IHtcKlxia21rZW5kIF9SZWY0ODAzNTQ2N317XCpcYmtta2VuZCBfUmVmNDgwMzc0ODV9ICB9DQp7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFVubGVzcyBzdGF0ZWQgb3RoZXJ3aXNlIGhlcmVpbiwgYWxsIGRpc3B1dGVzIHNoYWxsIGJlIHJlc29sdmVkIGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgZGlzcHV0ZSByZXNvbHV0aW9uIHByb2NlZHVyZXMgc2V0IGZvcnRoIGluIHRoaXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE1NzMzNjM3IFNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTU3MzM2MzcgIFJFRiBfUmVmNTA3MTI5MjQgXFx3IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCAgXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNTczMzYzNyB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzUwMDMwMDAzNzAwMzEwMDMyMDAzOTAwMzIwMDM0MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNzk0MjYyIDE2Ljd9fX0NClxzZWN0ZCBcbHRyc2VjdFxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANCiBOb3R3aXRoc3RhbmRpbmcgdGhlIGZvcmVnb2luZywgKGEpIHRoZSBwYXJ0aWVzIG1heSBhdCBhbnkgdGltZSBzZWVrIGluanVuY3RpdmUgcmVsaWVmIGZyb20gYSBjb3VydCBvZiBjb21wZXRlbnQganVyaXNkaWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgIGluIGFjY29yZGFuY2Ugd2l0aCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgU2VjdGlvbiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgIFJFRiBfUmVmNTA3MTI5MTMgXFx3IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNTAwMzAwMDM3MDAzMTAwMzIwMDM5MDAzMTAwMzMwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ3OTQyNjIgMTYuOH19fVxzZWN0ZCBcbHRyc2VjdA0KXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KIGFuZCAoYikgbm90aGluZyBoZXJlaW4gc2hhbGwgcHJldmVudCBhIHBhcnR5IGZyb20gZGVmZW5kaW5nIG9yIHB1cnN1aW5nIGFueSBjbGFpbSBpbiBhIGNvdXJ0IG9yIG90aGVyIHByb2NlZWRpbmcgYWdhaW5zdCBhIHRoaXJkIHBhcnR5IHRoYXQgaGFzIGJlZW4gaW5pdGlhdGVkIGJ5IHN1Y2ggdGhpcmQgcGFydHkue1wqXGJrbWtlbmQgX1JlZjUwNzEyOTI0fSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE1NzMzNjM3IHtcKlxia21rZW5kIF9Ub2M2MDEzNTUzNH0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNTA3MTI5MTN9e1wqXGJrbWtzdGFydCBfVG9jNjAxMzU1MzV9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDg1NzMyNiBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNi44XHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcY2YxXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDQ4NTczMjYgR292ZXJuaW5nIExhd317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCAue1wqXGJrbWtlbmQgX1JlZjUwNzEyOTEzfSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ0ODU3MzI2XHNwdiB7XCpcYmtta2VuZCBfVG9jNjAxMzU1MzV9DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoYSlcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMyNjNccWwgXGZpMTQ0MFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDIxNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcaWx2bDJcb3V0bGluZWxldmVsMlxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NCBUSElTIEFHUkVFTUVOVCBTSEFMTCBCRSBHT1ZFUk5FRCBJTiBBTEwgUkVTUEVDVFMgQlkgVEhFIExBV1MgT0YgVEhFIFNUQVRFIE9GIERFTEFXQVJFIFdJVEhPVVQgR0lWSU5HIEVGRkVDVCBUTyBUSEUgQ09ORkxJQ1RTIE9GIExBV1MgUFJJTkNJUExFUyBUSEVSRU9GLiAgQWxsIGp1ZGljaWFsIA0KYWN0aW9ucyBvciBwcm9jZWVkaW5ncyBicm91Z2h0IGFnYWluc3QgYW55IFBhcnR5IHdpdGggcmVzcGVjdCB0byB0aGlzIEFncmVlbWVudCwgdGhlIEJ1eWVyIEFuY2lsbGFyeSBBZ3JlZW1lbnRzIGFuZCB0aGUgU2VsbGVyIEFuY2lsbGFyeSBBZ3JlZW1lbnRzLCBzaGFsbCBiZSBicm91Z2h0IGluIHRoZSBEZWxhd2FyZSBDb3VydCBvZiBDaGFuY2VyeSBhbmQgYW55IHN0YXRlIGFwcGVsbGF0ZSBjb3VydCB0aGVyZWZyb20gd2l0aGluIHRoZSBTdGF0DQplDQogb2YgRGVsYXdhcmUgKG9yLCBvbmx5IGlmIHRoZSBEZWxhd2FyZSBDb3VydCBvZiBDaGFuY2VyeSBkZWNsaW5lcyB0byBhY2NlcHQganVyaXNkaWN0aW9uIG92ZXIgYSBwYXJ0aWN1bGFyIG1hdHRlciwgYW55IHN0YXRlIG9yIGZlZGVyYWwgY291cnQgd2l0aGluIHRoZSBTdGF0ZSBvZiBEZWxhd2FyZSksIGFuZCBlYWNoIFBhcnR5IGhlcmVieSBpcnJldm9jYWJseSBhbmQgdW5jb25kaXRpb25hbGx5IGFncmVlcyB0aGF0IGFueSBzdWNoIGxlZ2FsIGENCmMNCnRpb24gb3IgcHJvY2VlZGluZyBtYXkgYmUgaGVhcmQgYW5kIGRldGVybWluZWQgaW4gc3VjaCBzdGF0ZSBjb3VydCBvciBzdWNoIGZlZGVyYWwgY291cnQuICBFYWNoIFBhcnR5IGFncmVlcyB0aGF0IGEgZmluYWwganVkZ21lbnQgaW4gYW55IHN1Y2ggbGVnYWwgYWN0aW9uIG9yIHByb2NlZWRpbmcgbWF5IGJlIGVuZm9yY2VkIGluIGFueSBvdGhlciBqdXJpc2RpY3Rpb24gYnkgc3VpdCBvbiB0aGUganVkZ21lbnQgb3IgaW4gYW55IG90aGVyIG1hbg0KbmVyIHByb3ZpZGVkIGJ5IGxhdy4gIEVhY2ggUGFydHkgaXJyZXZvY2FibHkgd2FpdmVzIGFueSBvYmplY3Rpb24gKGluY2x1ZGluZyBhbnkgb2JqZWN0aW9uIGJhc2VkIHVwb24gdGhlIGdyb3VuZHMgb2YgXCc5M2ZvcnVtIG5vbiBjb252ZW5pZW5zXCc5NA0KKSB0aGF0IGl0IG5vdyBvciBoZXJlYWZ0ZXIgbWF5IGhhdmUgdG8gdGhlIGJyaW5naW5nIG9yIHByb3NlY3V0aW9uIG9mIGFueSBzdWNoIGFjdGlvbiBvciBwcm9jZWVkaW5nIHdpdGggcmVzcGVjdCB0byB0aA0KaXMgQWdyZWVtZW50IG9yIHRoZSBkb2N1bWVudHMgYW5kIGluc3RydW1lbnRzIGNvbnRlbXBsYXRlZCBoZXJlYnkgaW4gdGhlIFN0YXRlIG9mIERlbGF3YXJlLiAgRWFjaCBQYXJ0eSBoZXJlYnkgaXJyZXZvY2FibHkgY29uc2VudHMgdG8gdGhlIHNlcnZpY2Ugb2YgYW55IGFuZCBhbGwgcHJvY2VzcyBpbiBhbnkgYWN0aW9uIG9yIHByb2NlZWRpbmcgYnkgbWFpbGluZyBhIGNvcHkgb2Ygc3VjaCBwcm9jZXNzIHRvIHN1Y2ggUGFydHkgYXQgdGhlIGFkDQpkcmVzcyBmb3Igc3VjaCBQYXJ0eSBzZXQgZm9ydGggaW4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNjQwODE2NyBTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE2NDA4MTY3ICBSRUYgX1JlZjQ4MDM1NDc0IFxcdyBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NCAgXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTY0MDgxNjcge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNTAwMzQwMDM3MDAzNDAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNzk0MjYyIDE2LjF9fX1cc2VjdGQgXGx0cnNlY3RccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IC4NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgzMDcxNDl9e1wqXGJrbWtlbmQgX1JlZjQ4MDM1NDgwfXtcKlxia21rZW5kIF9SZWY0ODAzNzQ5MX17XCpcYmtta2VuZCBfUmVmNDgzMDYxNzV9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTY0MDgxNjcgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGIpXHRhYn19DQp7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTY0MDgxNjcgRUFDSCBQQVJUWSBBQ0tOT1dMRURHRVMgQU5EIEFHUkVFUyBUSEFUIEFOWSBDT05UUk9WRVJTWSBXSElDSCBNQVkgQVJJU0UgVU5ERVIgVEhJUyBBR1JFRU1FTlQgT1IgVEhFIFRSQU5TQUNUSU9OUyBJUyBMSUtFTFkgVE8gSU5WT0xWRSBDT01QTElDQVRFRCBBTkQgRElGRklDVUxUIElTU1VFDQpTLCBBTkQgVEhFUkVGT1JFIEVBQ0ggUEFSVFkgSEVSRUJZIElSUkVWT0NBQkxZIEFORCBVTkNPTkRJVElPTkFMTFkgV0FJVkVTIEFOWSBSSUdIVCBBIFBBUlRZIE1BWSBIQVZFIFRPIEEgVFJJQUwgQlkgSlVSWSBJTiBSRVNQRUNUIE9GIEFOWSBMSVRJR0FUSU9OIFJFU1VMVElORyBGUk9NLCBBUklTSU5HIE9VVCBPRiBPUiBSRUxBVElORyBUTyBUSElTIEFHUkVFTUVOVCBPUiBUSEUgVFJBTlNBQ1RJT05TLiAgRUFDSCBQQVJUWSBDRVJUSUZJRVMgQU4NCkQNCiBBQ0tOT1dMRURHRVMgVEhBVCAoYSkgTk8gUkVQUkVTRU5UQVRJVkUsIEFHRU5UIE9SIEFUVE9STkVZIE9GIEFOWSBPVEhFUiBQQVJUWSBIQVMgUkVQUkVTRU5URUQsIEVYUFJFU1NMWSBPUiBPVEhFUldJU0UsIFRIQVQgU1VDSCBPVEhFUiBQQVJUWSBXT1VMRCBOT1QsIElOIFRIRSBFVkVOVCBPRiBMSVRJR0FUSU9OLCBTRUVLIFRPIEVORk9SQ0UgVEhFIEZPUkVHT0lORyBXQUlWRVIsIChiKSBFQUNIIFBBUlRZIFVOREVSU1RBTkRTIEFORCBIQVMgQw0KT05TSURFUkVEIFRIRSBJTVBMSUNBVElPTlMgT0YgVEhJUyBXQUlWRVIsIChjKSBFQUNIIFBBUlRZIE1BS0VTIFRISVMgV0FJVkVSIEtOT1dJTkdMWSwgVk9MVU5UQVJJTFkgQU5EIFVOQ09ORElUSU9OQUxMWSwgQU5EIChkKSBFQUNIIFBBUlRZIEhBUyBCRUVOIElORFVDRUQgVE8gRU5URVIgSU5UTyBUSElTIEFHUkVFTUVOVCBCWSwgQU1PTkcgT1RIRVIgVEhJTkdTLCBUSEUgTVVUVUFMIFdBSVZFUlMgQU5EIENFUlRJRklDQVRJT05TIElOIFRISVMgDQp9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEzMzA5Mzc1IFNFQ1RJT04gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTMzMDkzNzUgIFJFRiBfUmVmNDgzMDcxNDkgXFx3IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCAgXFwNCiogTUVSR0VGT1JNQVQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMzMwOTM3NSB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMzAwMzAwMDM3MDAzMTAwMzQwMDM5MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQ3OTQyNjIgMTYuOChiKX19fVxzZWN0ZCBcbHRyc2VjdFxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNjQwODE2NyAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTgge1wqXGJrbWtlbmQgX1JlZjQ4MzA3MTQ5fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTQ4MX17XCpcYmtta3N0YXJ0IF9SZWY0ODAzNzQ5Mn17XCpcYmtta3N0YXJ0IF9Ub2M2MDEzNTUzNn17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYxIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNi45XHRhYn19XHBhcmRccGxhaW4gXGx0cnBhcg0KXHMyNjFccWwgXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczhcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBUaW1lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgLiAgVGltZSBpcyBvZiB0aGUgZXNzZW5jZSB3aXRoIHJlc3BlY3QgdG8gdGhpcyBBZ3JlZW1lbnQufXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIHtcKlxia21rc3RhcnQgX1JlZjEwMjM3MjgxNH17XCpcYmtta2VuZCBfUmVmNDgwMzU0ODF9e1wqXGJrbWtlbmQgX1JlZjQ4MDM3NDkyfXtcKlxia21rZW5kIF9Ub2M2MDEzNTUzNn0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzU0ODJ9e1wqXGJrbWtzdGFydCBfUmVmNDgwMzc0OTN9e1wqXGJrbWtzdGFydCBfVG9jNjAxMzU1Mzd9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNi4xMFx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIEFkZGl0aW9uYWwgRG9jdW1lbnRzOyBDb29wZXJhdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIC4gIEVhY2ggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBQYXJ0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgLCB1cG9uIHRoZSByZXF1ZXN0IGFuZCBhdCB0aGUgZXhwZW5zZSBvZiB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDc4NzY5MDAgIENvLVRlbmFuY3kgTWFuYWdlciBvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBhbm90aGVyIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBQYXJ0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgLCBhZ3JlZXMgDQp0byBwZXJmb3JtIGFueSBmdXJ0aGVyIGFjdHMgYW5kIGV4ZWN1dGUgYW5kIGRlbGl2ZXIgYW55IGRvY3VtZW50cyB3aGljaCBtYXkgYmUgcmVhc29uYWJseSBuZWNlc3NhcnkgdG8gY2Fycnkgb3V0IHRoZSBwcm92aXNpb25zIG9mIHRoaXMgQWdyZWVtZW50LCBpbmNsdWRpbmcgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQpwcm92aWRpbmcgYWNrbm93bGVkZ2VtZW50IGJlZm9yZSBhIG5vdGFyeSBwdWJsaWMgb2YgYW55IHNpZ25hdHVyZSBoZXJldG9mb3JlIG9yIGhlcmVhZnRlciBtYWRlIGJ5IGEgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBQYXJ0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgDQouICBJbiBhZGRpdGlvbiwgdGhlIFBhcnRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5ICBzaGFsbCBhY3QgaW4gZ29vZCBmYWl0aCBhbmQgd2l0aCBkdWUgY29uc2lkZXJhdGlvbiB0byB0aGUgb3BlcmF0aW9uIG9mIGVhY2ggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KIFByb2plY3QgdG8gc3VwcG9ydCBhbmQgY29vcGVyYXRlIHdpdGggZWFjaCBvdGhlciBpbiB0aGUgY29uZHVjdCBvZiB0aGVpciByZXNwZWN0aXZlIG9ibGlnYXRpb25zIGhlcmV1bmRlciwgaW5jbHVkaW5nIHRoZSB1c2UsIGltcHJvdmVtZW50LCBhZG1pbmlzdHJhdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgaW9uLCBtYWludGVuYW5jZSBhbmQgb3BlcmF0aW9uIG9mIHRoZSB9DQp7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgU2hhcmVkIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFByZW1pc2VzIGFuZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANCkZhY2lsaXRpZXMsIGFuZCBTZXBhcmF0ZSBGYWNpbGl0aWVzLCBhbmQgaW4gb3RoZXJ3aXNlIGdpdmluZyBlZmZlY3QgdG8gdGhlIHB1cnBvc2UgYW5kIGludGVudCBvZiB0aGlzIEFncmVlbWVudCwgYW5kIGluY2x1ZGluZyBhbnkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBQYXJ0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBccnF1b3RlIHMgZWZmb3J0cyB0byBvYnRhaW4gZnJvbSBhbnkgR292ZXJubWVudGFsIEF1dA0KaG9yaXR5IG9yIGFueSBvdGhlciBwZXJzb24gb3IgZW50aXR5IGFueSBlbnZpcm9ubWVudGFsIGltcGFjdCByZXZpZXcsIHBlcm1pdCBlbnRpdGxlbWVudCwgYXBwcm92YWwsIGF1dGhvcml6YXRpb24gb2Ygb3RoZXIgcmlnaHRzIG5lY2Vzc2FyeSBvciBjb252ZW5pZW50IGluIGNvbm5lY3Rpb24gd2l0aCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5ICBTaGFyZWR9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDAxMDA0NCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgUHJlbWlzZXMgYW5kIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIEZhY2lsaXRpZXM7IGFuZCB0aGUgb3RoZXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBzaGFsbCwgd2l0aG91dCBkZW1hbmRpDQpuZyBhZGRpdGlvbmFsIGNvbnNpZGVyYXRpb24gdGhlcmVmb3JlIG90aGVyIHRoYW4gcmVpbWJ1cnNlbWVudCBvZiByZWFzb25hYmxlIGVuZ2luZWVyaW5nIGNvc3RzLCBhZG1pbmlzdHJhdGl2ZSBjaGFyZ2VzIGltcG9zZWQgYnkgcHVibGljIGVudGl0aWVzLCBhbmQgYnkgYW55IHJlbGV2YW50IHRyYW5zbWlzc2lvbiBwcm92aWRlciwgcmVhc29uYWJsZSBhdHRvcm5leX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgcyBmZWVzIGFuZCBjb25zdWx0aW5nIGZlZXMgYWN0dWFsbHkgaW5jdXJyZWQsIA0KZXhlY3V0ZSwgYW5kLCBpZiBhcHByb3ByaWF0ZSwgY2F1c2UgdG8gYmUgYWNrbm93bGVkZ2VkIGFuZCByZWNvcmRlZCwgYW55IG1hcCwgYXBwbGljYXRpb24sIGRvY3VtZW50IG9yIGluc3RydW1lbnQgdGhhdCBpcyByZWFzb25hYmx5IHJlcXVlc3RlZCBieSBhIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBpbiBjb25uZWN0aW9uIHRoZXJld2l0aCwgYW5kIHNoYWxsIHJldHVybiB0aGUgc2FtZSAoYXMgZXhlY3V0ZWQpIHRvIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIHdpdGhpbiB9ew0KXHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTIwODUyNTggW1JFREFDVEVEXX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyICBkYXlzIGFmdGVyIHRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgcmVjZWlwdCB0aGVyZW9mLn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCB7XCpcYmtta2VuZCBfUmVmMTAyMzcyODE0fXtcKlxia21rZW5kIF9SZWY0ODAzNTQ4Mn17XCpcYmtta2VuZCBfUmVmNDgwMzc0OTN9e1wqXGJrbWtlbmQgX1RvYzYwMTM1NTM3fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTQ4M317XCpcYmtta3N0YXJ0IF9SZWY0ODAzNzQ5NH17XCpcYmtta3N0YXJ0IF9Ub2M2MDEzNTUzOH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYxIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE2LjExXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgVmFsaWRpdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANCi4gIFNob3VsZCBhbnkgcG9ydGlvbiBvZiB0aGlzIEFncmVlbWVudCBiZSBkZWNsYXJlZCBpbnZhbGlkIGFuZCB1bmVuZm9yY2VhYmxlLCB0aGVuIHN1Y2ggcG9ydGlvbiBzaGFsbCBiZSBkZWVtZWQgdG8gYmUgc2V2ZXJhYmxlIGZyb20gdGhpcyBBZ3JlZW1lbnQgYW5kIHNoYWxsIG5vdCBhZmZlY3QgdGhlIHJlbWFpbmRlciBoZXJlb2Y7IGFuZCB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFBhcnRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxICBzaGFsbCBuZWdvdGlhdGUgaW4gZ29vZCBmYWl0aCB0byByZXBsYWNlIHN1Y2ggaW52YWxpZCBhbmQgdW5lbmZvcmNlYWJsZSBwcm92aXNpb24ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSANCntcKlxia21rZW5kIF9SZWY0ODAzNTQ4M317XCpcYmtta2VuZCBfUmVmNDgwMzc0OTR9e1wqXGJrbWtlbmQgX1RvYzYwMTM1NTM4fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTQ4NH17XCpcYmtta3N0YXJ0IF9SZWY0ODAzNzQ5NX17XCpcYmtta3N0YXJ0IF9Ub2M2MDEzNTUzOX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYxIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE2LjEyXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgUGVycGV0dWl0aWVzIFNhdmluZ3MgQ2xhdXNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgLiAgSWYgYW55IHJpZ2h0IG9mIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgUGFydHl9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgIHByb3ZpZGVkIGZvciBpbiB0aGlzIEFncmVlbWVudCB3b3VsZCwgaW4gdGhlIGFic2VuY2Ugb2YgdGhlIGxpbWl0YXRpb24gaW1wb3NlZCBieSB0aGlzIHNlbnRlbmNlLCBiZSBpbnZhbGlkIG9yIHVuZW5mb3JjZWFibGUgYXMgYmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IA0KaW5nIGluIHZpb2xhdGlvbiBvZiB0aGUgcnVsZSBhZ2FpbnN0IHBlcnBldHVpdGllcyBvciBhbnkgb3RoZXIgcnVsZSBvZiBsYXcgcmVsYXRpbmcgdG8gdGhlIHZlc3Rpbmcgb2YgYW4gaW50ZXJlc3QgaW4gb3IgdGhlIHN1c3BlbnNpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDQwMTAwNDQgDQogb2YgdGhlIHBvd2VyIG9mIGFsaWVuYXRpb24gb2YgcHJvcGVydHksIHRoZW4gc3VjaCByaWdodCBvciBvcHRpb24gc2hhbGwgYmUgZXhlcmNpc2FibGUgb25seSBkdXJpbmcgdGhlIHBlcg0KaW9kIHdoaWNoIHNoYWxsIGVuZCB0d2VudHktb25lIHllYXJzIGxlc3Mgb25lIGRheSBhZnRlciB0aGUgZGF0ZSBvZiBkZWF0aCBvZiB0aGUgbGFzdCBzdXJ2aXZvciBvZiB0aGUgZGVzY2VuZGFudHMgbGl2aW5nIG9uIHRoZSBkYXRlIG9mIHRoaXMgQWdyZWVtZW50IG9mIEpvc2VwaCBQLiBLZW5uZWR5LCBmYXRoZXIgb2YgUHJlc2lkZW50IEpvaG4gRi4gS2VubmVkeSwgYnV0IGlmIGFueSBzdWNoIHJpZ2h0cywgcHJpdmlsZWdlcyBhbmQgb3B0aW9uDQpzIHNoYWxsIGJlIG9yIGJlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IA0KY29tZSB2YWxpZCB1bmRlciBBcHBsaWNhYmxlIExhdyBmb3IgYSBwZXJpb2Qgc3Vic2VxdWVudCB0byB0aGUgdHdlbnR5LWZpcnN0IGFubml2ZXJzYXJ5IG9mIHRoZSBkZWF0aCBvZiB0aGUgbGFzdCBzdWNoIHN1cnZpdm9yIChvciwgd2l0aG91dCBsaW1pdGluZyB0aGUgZ2VuZXJhbGl0eSBvZiB0aGUgZm9yZWdvaW5nLCBpZiBsZWdpc2xhdGlvbiBzaGFsbCBiZWNvbWUgZWZmZWN0aXZlIHByb3ZpZGluZyBmb3IgdGhlIHZhbA0KaWRpdHkgb3IgcGVybWl0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1NzMyNjE4IHRpbmcgdGhlIGVmZmVjdGl2ZSBncmFudCBvZiBzdWNoIHJpZ2h0cywgcHJpdmlsZWdlcyBhbmQgb3B0aW9ucyBmb3IgYSBwZXJpb2QgaW4gZ3Jvc3MsIGV4Y2VlZGluZyB0aGUgcGVyaW9kIGZvciB3aGljaCBzdWNoIHJpZ2h0cywgcH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MzE3ODEgcml2aWxlZ2VzIGFuZCBvcHRpb25zIGFyZSBoZXJlaW5hYm92ZSBzdGF0ZWQgdG8gZXh0ZW5kIGFuZCBiZSB2YWxpZCksIHRoZW4gc3VjaCByaWdodHMsIHByaXZpbGVnZXMgb3Igb3B0aW9ucw0KIHNoYWxsIG5vdCB0ZXJtaW5hdGUgYXMgYWZvcmVzYWlkIGJ1dCBzaGFsbCBleHRlbmQgdG8gYW5kIGNvbnRpbnVlIGluIGVmZmVjdCwgYnV0IG9ubHkgaWYgc3VjaCBub24tdGVybWluYXRpb24gYW5kIGV4dGVuc2lvbiBzaGFsbCB0aGVuIGJlIHZhbGlkIHVuZGVyIEFwcGxpY2FibGUgTGF3IHVudGlsIHN1Y2ggdGltZSBhcyB0aGUgc2FtZSBzaGFsbCB1bmRlciBBcHBsaWNhYmxlIExhdyBjZWFzZSB0byBiZSB2YWxpZC59e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1NDg1fXtcKlxia21rc3RhcnQgX1JlZjQ4MDM3NDk2fXtcKlxia21rZW5kIF9SZWY0ODAzNTQ4NH17XCpcYmtta2VuZCBfUmVmNDgwMzc0OTV9e1wqXGJrbWtlbmQgX1RvYzYwMTM1NTM5fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2M2MDEzNTU0MH17XCpcYmtta2VuZCBfUmVmNDgwMzU0ODV9e1wqXGJrbWtlbmQgX1JlZjQ4MDM3NDk2fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTM0NjUyMjEgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTYuMTNcdGFifX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMzQ2NTIyMSBObyBUaGlyZCBQYXJ0eSBCZW5lZmljaWFyaWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMzQ2NTIyMSANCi4gIFRoaXMgQWdyZWVtZW50IGlzIGVudGVyZWQgaW50byBmb3IgdGhlIHNvbGUgYmVuZWZpdCBvZiB0aGUgUGFydGllcywgYW5kIGV4Y2VwdCBhcyBzcGVjaWZpY2FsbHkgcHJvdmlkZWQgaGVyZWluLCBubyBvdGhlciBQZXJzb24gc2hhbGwgYmUgYSBkaXJlY3Qgb3IgaW5kaXJlY3QgYmVuZWZpY2lhcnkgb2YsIG9yIHNoYWxsIGhhdmUgYW55IGRpcmVjdCBvciBpbmRpcmVjdCBjYXVzZSBvZiBhY3Rpb24gb3IgY2xhaW0gaW4gY28NCm5uZWN0aW9uIHdpdGgsIHRoaXMgQWdyZWVtZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAge1wqXGJrbWtlbmQgX1RvYzYwMTM1NTQwfQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTQ4N317XCpcYmtta3N0YXJ0IF9Ub2M2MDEzNTU0MX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYxIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE2LjE0XHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgQXR0b3JuZXlzXHJxdW90ZSAgRmVlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIC4gIElmIGFueSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFBhcnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxICBicmluZ3MgYW55IGFjdGlvbiBvciBwcm9jZWVkaW5nIG9yIGluaXRpYXRlcyBhcmJpdHJhdGlvbiBmb3IgdGhlIGVuZm9yY2VtZW50LCBwcm90ZWN0aW9uIG9yIGVzdGFibGlzaG1lbnQgb2YgYW55IHJpZ2h0IG9yIHJlbWVkeSB1bmRlciB0aGlzIEFncmVlbWVudCwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSANCm9yIGZvciB0aGUgaW50ZXJwcmV0YXRpb24gb2YgdGhpcyBBZ3JlZW1lbnQsIHRoZSBwcmV2YWlsaW5nIFBhcnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ0MDEwMDQ0ICBzaGFsbCBiZSBlbnRpdGxlZCB0byByZWNvdmVyIGZyb20gdGhlIG5vbi1wcmV2YWlsaW5nIFBhcnR5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjMxMDEyOCANCml0cyByZWFzb25hYmxlIGNvc3RzIGFuZCBleHBlbnNlcywgaW5jbHVkaW5nIHJlYXNvbmFibGUgYXR0b3JuZXlzXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDU3MzI2MTggIGZlZXMgYW5kIGV4cGVuc2VzLCBpbiBjb25uZWN0aW9uIHdpdGggc3VjaCBhY3Rpb24gb3IgcHJvY2VlZGlufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkzMTc4MSBnLiAgVG8gdGhlIGV4dGVudCB0aGlzIEFncmVlbWVudCByZXF1aXJlcyBvciANCmFub3RoZXIgQ28tVGVuYW50IHJlcXVlc3RzIHRoZSBhcHByb3ZhbCBvciByZXZpZXcgYnkgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBvciBhbm90aGVyIENvLVRlbmFudCBvZiBhY3Rpb25zIHByb3Bvc2VkIHRvIGJlIHRha2VuIGJ5IGFub3RoZXIgQ28tVGVuYW50LCB0aGUgcmVxdWVzdGluZyBDby1UZW5hbnQgc2hhbGwgcGF5IGZvciB0aGUgcmVhc29uYWJsZSBmZWVzIGFuZCBleHBlbnNlcyAoaW5jbHVkaW5nIHJlYXNvbmFibGUgYXR0b3JuZXlzDQpccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTExMDA4MSAgZmVlcykgb2YgdGhlIENvLVRlbmFuY3kgTWFuYWdlciBhbmQgdGhlIG90aGVyIENvLVRlbmFudHMgaW5jdXJyZWQgaW4gY29ubmVjdGlvbiB3aXRoIHJldmlldyBvciBhcHByb3ZhbC57XCpcYmtta2VuZCBfUmVmNDgwMzU0ODd9e1wqXGJrbWtlbmQgX1RvYzYwMTM1NTQxfQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTQ4OH17XCpcYmtta3N0YXJ0IF9SZWY0ODAzNzQ5N317XCpcYmtta3N0YXJ0IF9Ub2M2MDEzNTU0Mn17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYxIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkxMTAwODEgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTYuMTVcdGFifX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MTEwMDgxIFdhaXZlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIC4gIFRoZSBmYWlsdXJlIG9mIGFueSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFBhcnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxICBhdCBhbnkgdGltZSB0byByZXF1aXJlIHBlcmZvcm1hbmNlIGJ5IGFueSBvdGhlciBQYXJ0eSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IG9mIGFueSBwcm92aXNpb24gaGVyZW9mIHNoYWxsIG5vdCBhZmZlY3QgaW4gYW55IHdheSB0aGUgZnVsbCByaQ0KZ2h0IHRvIHJlcXVpcmUgc3VjaCBwZXJmb3JtYW5jZSBhdCBhbnkgdGltZSB0aGVyZWFmdGVyLCBub3Igc2hhbGwgdGhlIHdhaXZlciBieSBhbnkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ0MDEwMDQ0IFBhcnR5IG9mIGFueSBicmVhY2ggb2YgYW55IHByb3Zpc2lvbiBoZXJlb2YgYmUgaGVsZCBvciBkZWVtZWQgdG8gYmUgYSB3YWl2ZXIgb2YgdGhlIHByb3Zpc2lvbiBpdHNlbGYufXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjgge1wqXGJrbWtlbmQgX1JlZjQ4MDM1NDg4fXtcKlxia21rZW5kIF9SZWY0ODAzNzQ5N317XCpcYmtta2VuZCBfVG9jNjAxMzU1NDJ9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1NDg5fXtcKlxia21rc3RhcnQgX1JlZjQ4MDM3NDk4fXtcKlxia21rc3RhcnQgX1RvYzYwMTM1NTQzfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjMxMDEyOCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNi4xNlx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjggVGl0bGVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgLiAgVGhlIHRpdGxlcyB0byB0aGUgc2VjdGlvbnMgb2YgdGhpcyBBZ3JlZW1lbnQgYXJlIGZvciBjb252ZW5pZQ0KbmNlIG9ubHksIGFyZSBub3QgYSBwYXJ0IG9mIHRoaXMgQWdyZWVtZW50LCBhbmQgc2hhbGwgaGF2ZSBubyBlZmZlY3QgdXBvbiB0aGUgY29uc3RydWN0aW9uIG9yIGludGVycHJldGF0aW9uIG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIGYgYW55IHByb3Zpc2lvbiBvZiB0aGlzIEFncmVlbWVudC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEge1wqXGJrbWtlbmQgX1JlZjQ4MDM1NDg5fXtcKlxia21rZW5kIF9SZWY0ODAzNzQ5OH17XCpcYmtta2VuZCBfVG9jNjAxMzU1NDN9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1NDkwfXtcKlxia21rc3RhcnQgX1JlZjQ4MDM3NDk5fXtcKlxia21rc3RhcnQgX1RvYzYwMTM1NTQ0fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTYuMTdcdGFifX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBFeGhpYml0c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIC4gIEFsbCBhdHRhY2hlZCBhcHBlbmRpY2VzLCBleGhpYml0cyBhbmQgc2NoZWR1bGVzIHRvIHdoaWNoIHJlZmVyZW5jZSBpcyBtYWRlIGhlcmVpbiBhcmUgaGVyZWJ5IGluY29ycG9yYXRlZCBieSB0aGlzIHJlZmVyZW5jZS59ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAge1wqXGJrbWtlbmQgX1JlZjQ4MDM1NDkwfXtcKlxia21rZW5kIF9SZWY0ODAzNzQ5OX17XCpcYmtta2VuZCBfVG9jNjAxMzU1NDR9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1NDkxfXtcKlxia21rc3RhcnQgX1JlZjQ4MDM3NTAwfXtcKlxia21rc3RhcnQgX1RvYzYwMTM1NTQ1fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTYuMThcdGFifX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBGb3JjZSBNYWpldXJlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgLiAgRXhjZXB0IGZvciBmYWlsdXJlIHRvIHBheSBtb25pZXMgcmVxdWlyZWQgdG8gYmUgcGFpZCBoZXJldW5kZXIgd2hlbiBkdWUgYW5kIHBheWFibGUsIG5vIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBQYXJ0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgIHNoYWxsIGJlIGxpYWJsZSBvciBkZWVtZWQgdG8gYmUgaW4gZGVmYXVsdCBoZXJldW5kZXIgZm9yIHdoZW4gc3VjaCBQYXJ0eVxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSANCnMgcGVyZm9ybWFuY2UgaGFzIGJlZW4gbWFkZSBkZWxheWVkIG9yIG1hZGUgaW1wb3NzaWJsZSBkdWUgdG8gYW4gZXZlbnQgb2YgRm9yY2UgTWFqZXVyZS59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDQwMTAwNDQge1wqXGJrbWtlbmQgX1JlZjQ4MDM1NDkxfXtcKlxia21rZW5kIF9SZWY0ODAzNzUwMH17XCpcYmtta2VuZCBfVG9jNjAxMzU1NDV9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1NDkyfXtcKlxia21rc3RhcnQgX1RvYzYwMTM1NTQ2fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjMxMDEyOCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNi4xOVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjggTWVtb3JhbmR1bX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIC4gIENvbmN1cnJlbnRseSB3aXRoIGV4ZWN1dGlvbiBoZXJlb2YsIHRoZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICBhcHBsaWNhYmxlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgUGFydGllfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBzIGhlcmV0byBzaGFsbCBleGVjdXRlIGFuZCBkZWxpdmVyIGEgTWVtb3JhbmR1bSBvZiBBc3NpZ25tZW50LCBDby1UZW5hbmN5LCBhbmQgU2hhcmVkIEZhY2lsaXRpZXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIEFncmVlbWVudCBhdHRhY2hlZCBoZXJldG8gYXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBFeGhpYml0IEV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxICwgd2hpY2ggTWVtb3JhbmR1bSBvZiBBc3NpZ25tZW50LCBDby1UZW5hbmN5LCBhbn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBkIFNoYXJlZCBGYWNpbGl0aWVzIEFncmVlbWVudCBzaGFsbCBwcm9tcHRseSBiZSByZWNvcmRlZCBpbiB0aGUgb2ZmaWNpYWwgcmVjb3JkcyBvZiBIYXJkaW4gQ291bnR5LCBPaGlvLntcKlxia21rZW5kIF9SZWY0ODAzNTQ5Mn17XCpcYmtta2VuZCBfVG9jNjAxMzU1NDZ9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1NDkzfXtcKlxia21rc3RhcnQgX1JlZjQ4MDM3NTAxfXtcKlxia21rc3RhcnQgX1RvYzYwMTM1NTQ3fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTcyMjc4OCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNi4yMFx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDk3MjI3ODggQ29uZGVtbmF0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgLiAgSWYgYW55IG9mIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFNoYXJlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBQcmVtaXNlcywgU2hhcmVkIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KLCBBZGRpdGlvbmFsIFByZW1pc2VzIG9yIEFkZGl0aW9uYWwgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgIGFyZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIA0KY29uZGVtbmVkIG9yIHRha2VuIGJ5IGVtaW5lbnQgZG9tYWluLCBhbnkgY29zdHMgaW5jdXJyZWQgYnkgdGhlIENvLVRlbmFudHMgaW4gY29ubmVjdGlvbiB3aXRoIHN1Y2ggY29uZGVtbmF0aW9uIG9yIGVtaW5lbnQgZG9tYWluIHNoYWxsIGJlIHBhaWQgZm9yIHB1cnN1YW50IHRvIHN1Y2ggQ28tVGVuYW50XHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IHMgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBhcHBsaWNhYmxlIG93bmVyc2hpcCBwZXJjZW50YWdlIG9mIHN1Y2ggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBTaGFyZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDQgUHJlbWlzZXMsIFNoYXJlZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAsIEFkZGl0aW9uYWwgUHJlbWlzZXMgb3IgQWRkaXRpb25hbCBGYWNpbGl0aWVzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgKH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTcyMjc4OCBwcm92aWRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgIHRoYXQgdGhlIENvLVRlbmFudHMgd2lsbCBoYXZlIG5vIG9ibGlnYXRpb24gdG8gcmVzdG9yZSBhbnkgc3VjaCB9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgU2hhcmVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBQcmVtaXNlcywgU2hhcmVkIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgDQpGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgLCBBZGRpdGlvbmFsIFByZW1pc2VzIG9yIEFkZGl0aW9uYWwgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgKSwgdGhlIENvLVRlbmFudHMgc2hhbGwgc2VlayBhbiBhd2FyZCBqb2ludGx5LCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgYW5kIHRoZSBwcm9jZWVkcyBzaGFsbCBiZSBkaXZpZGVkIGJhc2VkIG9uIGVhY2ggQ28tVGVuYW50XHJxdW90ZSBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgIG93bmVyc2hpcCBvZiB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBTaGFyZWR9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgUHJlbWlzZXMsIFNoYXJlZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANCiwgQWRkaXRpb25hbCBQcmVtaXNlcyBvciBBZGRpdGlvbmFsIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBzbyBiZWluZyB0YWtlbiwgc3ViamVjdCB0byByZWltYnVyc2VtZW50IHRvIGluIHRoZSBtYW5uZXIgZGVzY3JpYmVkIGluIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5NzIyNzg4IFNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTcyMjc4OCAgIFJFRiBfUmVmNDgwMzU0MjAgXFx3IFxcaCBcXCogTUVSR0VGT1JNQVQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDk3MjI3ODgge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNTAwMzQwMDMyMDAzMDAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcY2YxXGluc3JzaWQ3OTQyNjJcY2hhcnJzaWQ3OTQyNjIgMTIuNChjKX19fQ0KXHNlY3RkIFxsdHJzZWN0XHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0Ke1wqXGJrbWtlbmQgX1JlZjQ4MDM1NDkzfXtcKlxia21rZW5kIF9SZWY0ODAzNzUwMX17XCpcYmtta2VuZCBfVG9jNjAxMzU1NDd9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1NDk0fXtcKlxia21rc3RhcnQgX1RvYzYwMTM1NTQ4fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTYuMjFcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBDb25maWRlbnRpYWwgSW5mb3JtYXRpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDg1NzMyNlxzcHYge1wqXGJrbWtlbmQgX1JlZjQ4MDM1NDk0fXtcKlxia21rZW5kIF9Ub2M2MDEzNTU0OH0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzU0OTV9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChhKVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczI2M1xxbCBcZmkxNDQwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MjE2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxpbHZsMlxvdXRsaW5lbGV2ZWwyXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIEdlbmVyYWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIC4gIER1cmluZyB0aGUgVGVybSwgYW5kIGZvciB0aHJlZSAoMykgeWVhcnMgYWZ0ZXIgdGhlIHRlcm1pbmF0aW9uIG9mIHRoaXMgQWdyZWVtZW50LCBlYWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBQYXJ0eSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBzaGFsbCBob2xkIGluIGNvbmZpZGVuY2UgYW55IENvbmZpZGVudGlhbCBJbmZvcm1hdGlvbiBzdXBwbGllZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgIGJ5IH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgYW55fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgb3RoZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxICBQYXJ0eX17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ3ODc2OTAwIC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgIFRoZSB0ZXJtIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBDb25maWRlbnRpYWwgSW5mb3JtYXRpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFwnOTQgbWVhbnMgd2l0aCByZXNwZWN0IHRvIGVhY2ggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBQYXJ0eX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgLCBhbGwgd3JpdHRlbiBvciBvcmFsIGluZm9ybWF0aW9uIG9mIGEgcHJvcHJpZXRhcnksIGludGVsbGVjdHVhbCBvciBzaW1pbGFyIG5hdHVyZSwgcmVsYXRpbmcgdG8gc3VjaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFBhcnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFxycXVvdGUgcyBidXNpbmVzcywgcHJvamVjdHMsIG9wZXJhdGlvbnMsIGFjdGl2aXRpZXMgb3IgYWZmYWlycywgd2hldGhlciBvZiBhIHRlY2huaWNhbCBvciBmaW5hbmNpYWwgbmF0dXJlIG9yIG90aGVyd2lzZSAoaW5jbHVkaW5nIGVudmlyb25tZW50YWwgYXNzZXNzbWVudCByZXBvcnRzLCBmaW5hbmNpYWwgaW5mb3JtYXRpb24sIGJ1c2luZXNzIHBsYW5zIH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBhbmQgcHJvcG9zYWxzLCBpZGVhcywgY29uY2VwdHMsIHRyYWRlIHNlY3JldHMsIGtub3ctaG93LCBwcm9jZXNzZXMsIHByaWNpbmcgb2Ygc2VydmljZXMgb3IgcHJvZHVjdHMsIGFuZCBvdGhlciB0ZWNobmljYWwgb3IgYnVzaW5lc3MgaW5mb3JtYXRpb24sIHdoZXRoZXIgY29uY2VybmluZyB0aGlzIEFncmVlbWVudCwgc3VjaCBQYXJ0eX17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ0MDEwMDQ0IFxycXVvdGUgcyByZXNwZWN0aXZlIGJ1c2luZXNzZXMgb3Igb3RoZXJ3aXNlKSB0aGF0IGhhcyBub3QgYmVlbiBwdWJsaWNseSBkaXNjbG9zZWQgYW5kIHRoYXQgdGhlIHJlY2VpdmluZyBQYXJ0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjMxMDEyOCANCiBhY3F1aXJlcyBkaXJlY3RseSBvciBpbmRpcmVjdGx5IGZyb20gdGhlIGRpc2Nsb3NpbmcgUGFydHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDU3MzI2MTggLiAgVGhlIHJlY2VpdmluZyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkzMTc4MSBQYXJ0eSBtYXkgZGlzY2xvc2UgQ29uZmlkZW50aWFsIEluZm9ybWF0aW9uIHRvIGkNCnRzIFJlcHJlc2VudGF0aXZlcyBmb3IgcHVycG9zZXMgb2YgbWVldGluZyBpdHMgb2JsaWdhdGlvbnMgYW5kIGV4ZXJjaXNpbmcgaXRzIHJpZ2h0cyBoZXJldW5kZXIsIHByb3ZpZGVkIHRoYXQgdGhlIFJlcHJlc2VudGF0aXZlcyBzaGFsbCBiZSBpbmZvcm1lZCBvZiB0aGUgY29uZmlkZW50aWFsaXR5IG9ibGlnYXRpb25zIHByb3ZpZGVkIGhlcmVpbi4gIEVhY2ggUGFydHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzg3NjkwMCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBhfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBncmVlcyB0byBiZSByZXNwb25zaWJsZSBmb3IgYW55IGJyZWFjaCBvZiB0DQpoZSBjb25maWRlbnRpYWxpdHkgb2JsaWdhdGlvbnMgdW5kZXIgdGhpcyBBZ3JlZW1lbnQgYnkgaXRzIFJlcHJlc2VudGF0aXZlcy4gIFRoZSB0ZXJtIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IFJlcHJlc2VudGF0aXZlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgXCc5NA0KIG1lYW5zIHdpdGggcmVzcGVjdCB0byBhIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDAxMDA0NCBQYXJ0eSBpdCBhbmQgaXRzIEFmZmlsaWF0ZXNccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjMxMDEyOCANCiBlcXVpdHkgb3duZXJzLCBkaXJlY3RvcnMsIG1hbmFnZXJzLCBvZmZpY2VycywgZW1wbG95ZWVzLCBhZHZpc29ycywgYXR0b3JuZXlzLCBhbmQgYWdlbnRzLiAgVGhlIHJlY2VpdmluZyBQYXJ0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTczMjYxOCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MzE3ODEgDQpvciBpdHMgQWZmaWxpYXRlcyBtYXkgbWFrZSBuZWNlc3NhcnkgZGlzY2xvc3VyZXMgdG8gaXRzIGFnZW50cywgU2VjdXJlZCBQYXJ0aWVzIGFuZCBwb3RlbnRpYWwgcHVyY2hhc2VycyBvZiBhIFByb2plY3QgaWYgc3VjaCB0aGlyZCBwYXJ0aWVzIGFyZSB1bmRlciBhbiBvYmxpZ2F0aW9uIHRvIHJlY2VpdmUgYW5kIGhvbGQgc3VjaCBDb25maWRlbnRpYWwgSW5mb3JtYXRpb24gaW4gY29uZmlkZW5jZS59e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTExMDA4MSB7XCpcYmtta2VuZCBfUmVmNDgwMzU0OTV9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1NDk2fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkxMTAwODEgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGIpXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkxMTAwODEgRXhjZXB0aW9ucw0KfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MTEwMDgxIC4gIFRoZSBwcm92aXNpb25zIG9mIHRoaXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MTEwMDgxIFNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0ICAgUkVGIF9SZWY0ODAzNTQ5NCANClxcdyBcXGggXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNDAwMzgwMDMwMDAzMzAwMzUwMDM0MDAzOTAwMzQwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcY2YxXGluc3JzaWQ3OTQyNjJcY2hhcnJzaWQ3OTQyNjIgMTYuMjF9fX1cc2VjdGQgXGx0cnNlY3RccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KIGRvIG5vdCBhcHBseSB0byBpbmZvcm1hdGlvbiB3aXRoaW4gb25lIG9yIG1vcmUgb2YgdGhlIGZvbGxvd2luZyBjYXRlZ29yaWVzOn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAge1wqXGJrbWtlbmQgX1JlZjQ4MDM1NDk2fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTQ5N317XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjY1IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChpKVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczI2NVxxbCBcZmkyMTYwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4Mjg4MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxpbHZsM1xvdXRsaW5lbGV2ZWwzXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgUHVibGljIERvbWFpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgLiAgQ29uZmlkZW50aWFsIEluZm9ybWF0aW9uIHRoYXQgd2FzIGluIHRoZSBwdWJsaWMgZG9tYWluIHByaW9yIHRvIHRoZSByZWNlaXZpbmcgUGFydHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgXHJxdW90ZSBzIHJlY2VpcHQgb3IgdGhhdCBzdWJzZXF1ZW50bHkgYmVjb21lcyBwYXJ0IG9mIHRoZSBwdWJsaWMgZG9tYWl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDQwMTAwNDQgbiBieSBwdWJsaWNhdGlvbiBvciBvdGhlcndpc2UsIGV4Y2VwdCBieSB0aGUgcmVjZWl2aW5nIFBhcnR5XHJxdW90ZSB9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjMxMDEyOCBzIHdyb25nZnVsIGFjdCwgb3J7XCpcYmtta2VuZCBfUmVmNDgwMzU0OTd9DQpccGFyIHtcKlxia21rc3RhcnQgX1JlZjQ4MDM1NDk4fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyNjUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjMxMDEyOCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoaWkpXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjggUHJpb3IgUmVjZWlwdA0KfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1NzMyNjE4IC4gIENvbmZpZGVudGlhbCBJbmZvcm1hdGlvbiB0aGF0IHRoZSByZWNlaXZpbmcgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MzE3ODEgUGFydHkgY2FuIGRlbW9uc3RyYXRlIHdhcyBpbiBpdHMgcG9zc2Vzc2lvbiBwcmlvciB0byByDQplY2VpcHQgdGhlcmVvZiBmcm9tIHRoZSBkaXNjbG9zaW5nIFBhcnR5LCBvcntcKlxia21rZW5kIF9SZWY0ODAzNTQ5OH0NClxwYXIge1wqXGJrbWtzdGFydCBfUmVmNDgwMzU0OTl9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2NSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MTEwMDgxIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChpaWkpXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkxMTAwODEgDQpUaGlyZCBQYXJ0eSBEZWxpdmVyeX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTExMDA4MSAuICBDb25maWRlbnRpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MzUwOTA4IA0KYWwgSW5mb3JtYXRpb24gcmVjZWl2ZWQgZnJvbSBhIHRoaXJkIHBhcnR5IGhhdmluZyBubyBvYmxpZ2F0aW9uIG9mIHNlY3JlY3kgd2l0aCByZXNwZWN0IHRoZXJldG8ue1wqXGJrbWtlbmQgX1JlZjQ4MDM1NDk5fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9SZWY0ODAzNTUwMH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjYzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MzUwOTA4IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChjKVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczI2M1xxbCBcZmkxNDQwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MjE2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzOFxpbHZsMlxvdXRsaW5lbGV2ZWwyXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODM1MDkwOCBSZXF1aXJlZCBEaXNjbG9zdXJlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MzUwOTA4IC4gIEFueSByZWNlaXZpbmcgUGFydHkgcmVxdWlyZWQgYnkgYSBHb3Zlcm5tZW50YWwgQXV0aG9yaXR5LCBsYXcsIHJ1bGUsIHJlZ3VsYXRpb24sIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KbGlzdGluZyByZXF1aXJlbWVudCwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgc3VicG9lbmEgb3Igb3JkZXIsIG9yIGluIHRoZSBjb3Vyc2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIA0KIG9mIGFkbWluaXN0cmF0aXZlIG9yIGp1ZGljaWFsIHByb2NlZWRpbmdzLCB0byBkaXNjbG9zZSBDb25maWRlbnRpYWwgSW5mb3JtYXRpb24gdGhhdCBpcyBvdGhlcndpc2UgcmVxdWlyZWQgdG8gYmUgbWFpbnRhaW5lZCBpbiBjb25maWRlbmNlIHB1cnN1YW50IHRvIHRoaXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0ICAgUkVGIF9SZWY0ODAzNTQ5NCBcXHcgXFxoIFxcKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNDAwMzgwMDMwMDAzMzAwMzUwMDM0MDAzOTAwMzQwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGNmMVxpbnNyc2lkNzk0MjYyXGNoYXJyc2lkNzk0MjYyIDE2LjIxfX19XHNlY3RkIFxsdHJzZWN0DQpccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCAsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQogbWF5IG1ha2UgZGlzY2xvc3VyZSBub3R3aXRoc3RhbmRpbmcgdGhlIHByb3Zpc2lvbnMgb2YgdGhpcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0ICAgUkVGIF9SZWY0ODAzNTQ5NCBcXHcgXFxoIFxcKiBNRVJHRUZPUk1BVCB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNDAwMzgwMDMwMDAzMzAwMzUwMDM0MDAzOTAwMzQwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGNmMVxpbnNyc2lkNzk0MjYyXGNoYXJyc2lkNzk0MjYyIA0KMTYuMjF9fX1cc2VjdGQgXGx0cnNlY3RccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQogIFByaW9yIHRvIGRvaW5nIHNvLCB0aGUgcmVjZWl2aW5nIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgUGFydHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxICBpbW1lZGlhdGVseSB1cG9uIGxlYXJuaW5nIG9mIHRoZSByZXF1aXJlbWVudCwgc2hhbGwgbm90aWZ5IHRoZSBkaXNjbG9zaW5nIFBhcnR5fXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5ICBvZiB0aGUgcmVxdWlyZW1lbnQgYW5kIGNvb3BlcmF0ZSB0byB0aGUgbWF4aW11bSBleHRlbnQgcHJhY3RpY2FibGUgdG8gbWluaW1pemUgdGhlIGRpc2Nsb3N1cmUgb2YgQ29uZmlkZW50aWFsIEluZm9ybWF0aW9uLiAgQW55IHJlY2VpdmluZyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDAxMDA0NCBQYXJ0eSBkaXNjbG9zaW5nIENvbmZpZGVudGlhbCBJbmZvcm1hdGlvbiBwdXJzdWFudCB0byB0aGlzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDAxMDA0NCBTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCANCiAgUkVGIF9SZWY0ODAzNTQ5NCBcXHcgXFxoIFxcKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM1MDAzNDAwMzkwMDM0MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGNmMVxpbnNyc2lkNzk0MjYyXGNoYXJyc2lkNzk0MjYyIDE2LjIxfX19XHNlY3RkIFxsdHJzZWN0XHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANCiBzaGFsbCB1c2UgcmVhc29uYWJsZSBlZmZvcnRzLCBhdCB0aGUgZGlzY2xvc2luZyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFBhcnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBccnF1b3RlIA0KcyBjb3N0LCB0byBvYnRhaW4gcHJvcHJpZXRhcnkgb3IgY29uZmlkZW50aWFsIHRyZWF0bWVudCBvZiBDb25maWRlbnRpYWwgSW5mb3JtYXRpb24gYnkgdGhlIHRoaXJkIHBhcnR5IHRvIHdob20gdGhlIGluZm9ybWF0aW9uIHdpbGwgYmUgZGlzY2xvc2VkLCBhbmQgdG8gdGhlIGV4dGVudCBzdWNoIHJlbWVkaWVzIGFyZSBhdg0KYWlsYWJsZSwgc2hhbGwgdXNlIHJlYXNvbmFibGUgZWZmb3J0cyB0byBzZWVrIHByb3RlY3RpdmUgb3JkZXJzIGxpbWl0aW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSANCiB0aGUgZGlzc2VtaW5hdGlvbiBhbmQgdXNlIG9mIENvbmZpZGVudGlhbCBJbmZvcm1hdGlvbi4gIE5vdGhpbmcgaW4gdGhpcyBBZ3JlZW1lbnQgaXMgaW50ZW5kZWQgdG8gcHJldmVudCB0aGUgZGlzY2xvc2luZyBQYXJ0eSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDQwMTAwNDQgZnJvbSBhcHBlYXJpbmcgaW4gYW55IHByb2NlZWRpbmdzIGFuZCBvYmplY3RpbmcgdG8gdGhlIGRpDQpzY2xvc3VyZS4NClxwYXIge1wqXGJrbWtzdGFydCBfVG9jNjAxMzU1NDl9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczI2MSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNjE0Mjk5MCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNi4yMlx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczI2MVxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHM4XGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNjE0Mjk5MCBMaW1pdGF0aW9ucyBvZiBMaWFiaWxpdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDQ3MjgwNTAgLiAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxjYXBzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE2MTQyOTkwIA0KVEhFIFBBUlRJRVMgSEVSRUJZIEFHUkVFIFRIQVQsIEVYQ0VQVCBGT1IgTkVUIFJFVkVOVUUgTE9TU0VTLCBsaXF1aWRhdGVkIGRhbWFnZXMgb3IgaW5kZW1uaWZpY2F0aW9uIG9ibGlnYXRpb24gY29udGFpbmVkIGluIHRoaXMgQWdyZWVtZW50LCBJTkNMVURJTkcgUFVSU1VBTlQgVE8gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcY2Fwc1x1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNjE0Mjk5MCANCiBSRUYgX1JlZjQ4MzAxNTg2IFxcdyBcXGggIFxcKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGNhcHNcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTYxNDI5OTAge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzMwMDMwMDAzMTAwMzUwMDM4MDAzNjAwMDAwMH19fXtcZmxkcnNsdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxjYXBzXHVsXGluc3JzaWQ3OTQyNjIgQXJ0aWNsZSA5fX19XHNlY3RkIFxsdHJzZWN0XHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGNhcHNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTYxNDI5OTAgIGFuZCB9DQp7XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGNhcHNcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTYxNDI5OTAgIFJFRiBfUmVmNDgzMDE2MDIgXFx3IFxcaCAgXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcY2Fwc1x1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNjE0Mjk5MCB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNDAwMzgwMDMzMDAzMDAwMzEwMDM2MDAzMDAwMzIwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGNhcHNcdWxcaW5zcnNpZDc5NDI2MiBBcnRpY2xlIDE1fX19XHNlY3RkIFxsdHJzZWN0DQpccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcY2Fwc1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNjE0Mjk5MCANCiwgQU5EIEFTIE9USEVSV0lTRSBFWFBSRVNTTFkgU0VUIEZPUlRIIEhFUkVJTiwgSU4gTk8gRVZFTlQgV0lMTCBBTlkgUEFSVFkgKG5vciBpdHMgbWVtYmVycyBvciBBZmZpbGlhdGVzLCBub3IgYW55IG9mIHRoZWlyIHByaW5jaXBhbHMsIG9mZmljZXJzLCBkaXJlY3RvcnMsIGVtcGxveWVlcywgYWdlbnRzLCBzaGFyZWhvbGRlcnMsIHBhcnRuZXJzIG9yIA0KcmVwcmVzZW50YXRpdmVzKSBiZSBMSUFCTEUgVE8gQU5ZIE9USEVSIFBBUlRZIFRPIFRISVMgQUdSRUVNRU5UIEZPUiBFWEVNUExBUlkgREFNQUdFUyBBUklTSU5HIE9VVCBPRiBPUiBSRUxBVElORyBUTyBUSElTIEFHUkVFTUVOVCwgRVZFTiBJRiBBIFBBUlRZIEhBUyBCRUVOIE5PVElGSUVEIE9GIFRIRSBQT1NTSUJJTElUWSBPRiBTVUNIIERBTUFHRVMgQU5EIE5PVFdJVEhTVEFORElORyBUSEUgRkFJTFVSRSBPRiBFU1NFTlRJQUwgUFVSUE9TRSBPDQpGIEFOWSBMSU1JVEVEIFdBUlJBTlRZIENPTlRBSU5FRCBIRVJFSU4ue1wqXGJrbWtlbmQgX1JlZjQ4MDM1NTAwfSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGNhcHNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDg1NzMyNiANCiBUaGUgUGFydGllcyBmdXJ0aGVyIGFncmVlIHRoYXQgdGhlIHdhaXZlcnMgYW5kIGRpc2NsYWltZXJzIG9mIGxpYWJpbGl0eSwgcmVsZWFzZXMgZnJvbSBsaWFiaWxpdHksIGFuZCBsaW1pdGF0aW9ucyBvbiBsaWFiaWxpdHkgZXhwcmVzc2VkIGluIHRoaXMgQWdyZWVtZW50IHNoYWxsIHN1cnZpdmUgdGVybWluYXRpb24gb3IgZXhwaXJhdGlvbiBvZiB0aGlzIEFncmVlbWVudCwgYQ0KbmQgZXhjZXB0IGFzIG90aGVyd2lzZSBleHByZXNzbHkgc2V0IGZvcnRoIGluIHRoaXMgQWdyZWVtZW50IHNoYWxsIGFwcGx5IHdoZXRoZXIgaW4gY29udHJhY3QsIGVxdWl0eSwgdG9ydCBvciBvdGhlcndpc2UsIGV2ZW4gaW4gdGhlIGV2ZW50IG9mIHRoZSBmYXVsdCwgbmVnbGlnZW5jZSwgaW5jbHVkaW5nIGdyb3NzIG5lZ2xpZ2VuY2UsIHN0cmljdCBsaWFiaWxpdHksIG9yIGJyZWFjaCBvZiB0aGUgUGFydHkgcmVsZWFzZWQgb3Igd2hvc2UgbGlhDQpiaWxpdGllcyBhcmUgbGltaXRlZCwgYW5kIHNoYWxsIGV4dGVuZCB0byB0aGUgbWVtYmVycywgcmVwcmVzZW50YXRpdmVzLCBwYXJ0bmVycywgcHJpbmNpcGFscywgc2hhcmVob2xkZXJzLCBkaXJlY3RvcnMsIG9mZmljZXJzLCBlbXBsb3llZXMgYW5kIGFnZW50cyBvZiBlYWNoIFBhcnR5IGFuZCBpdHMgQWZmaWxpYXRlcy59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiAgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IHtcKlxia21rZW5kIF9Ub2M2MDEzNTU0OX0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJccWMgXGxpMFxyaTBcc2E3MjBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXGlcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFtTSUdOQVRVUkVTIE9OIE5FfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGJcaVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBYVCBQQUdFXX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxzZWN0IH1cc2VjdGQgXGx0cnNlY3QNClxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XGZvb3RlcnIgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHFjIFxsaTBccmkwXHdpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSANClxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxhZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjYzNjM0MlxjaGFycnNpZDc0NzEzOTAgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIFBBR0UgICBcXCogTUVSR0VGT1JNQVQgfQ0KfXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDI2MzYzNDIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgNTB9fX1cc2VjdGQgXGx0cnNlY3RcbGluZXgwXGVuZG5oZXJlXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjYzNjM0MlxjaGFycnNpZDc0NzEzOTAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZnMxNlxpbnNyc2lkMjYzNjM0MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBLQzAxRE9DU1xcMTI0NTY1NC4xMg0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkwXHJpMFxzbC0yMDBcc2xtdWx0MFx3aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjBcYWZzMTYgXGx0cmNoXGZjczAgXGZzMTZcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQyNjM2MzQyXGNoYXJyc2lkNDA3NDc5OSANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDQyMzM0MTE5fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxmczE2XGluc3JzaWQyNjM2MzQyXGNoYXJyc2lkNDA3NDc5OSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxmczE2XGluc3JzaWQyNjM2MzQyIA0KXHBhciB9fXtcaGVhZGVyZiBcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHRxY1x0eDQ2ODBcdHFyXHR4OTM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGFmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDI2MzYzNDIgDQpccGFyIH19e1xmb290ZXJmIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxzMzVccWwgXGxpMFxyaTBcc2wtMjAwXHNsbXVsdDBcd2lkY3RscGFyXHRxY1x0eDQ2ODBcdHFyXHR4OTM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGFmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDI2MzYzNDJcY2hhcnJzaWQ5MTI1OTA3IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQyNjM2MzQyIA0KXHBhciB9fVxwYXJkXHBsYWluIFxsdHJwYXJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIElOIFdJVE5FU1MgV0hFUkVPRiwgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgUGFydGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgaGF2ZSBleGVjdXRlXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgZCB0aGlzIEFncmVlbWVudCBlZmZlY3RpdmUgYXMgb2YgdGhlIGRhdGUgZmlyc3QgYWJvdmUgd3JpdHRlbi59e1xydGxjaFxmY3MxIFxhZjEgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEhBUkRJTiBTT0xBUiBFTkVSR1kgTExDfXtccnRsY2hcZmNzMSANClxhZjEgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBCeTp9e1xydGxjaFxmY3MxIFxhaVxhZjEgXGx0cmNoXGZjczAgDQpcaVx1bFxpbnNyc2lkMTIwODUyNTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgL3MvIEVtaWwgQXZyYW19e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgTmFtZTp9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxMjA4NTI1OCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgRW1pbCBBdnJhbX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCANClx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgVGl0bGU6fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxMjA4NTI1OCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgVmljZSBQcmVzaWRlbnQgXGhpY2hcZjAgXGVuZGFzaCBcbG9jaFxmMCAgQnVzaW5lc3MgRGV2ZWxvcG1lbnR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXHRhYiBcdGFiIFx0YWIgXHRhYiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTgge1wqXGJrbWtzdGFydCBfSGxrMTQ5NTE3NzB9DQpccGFyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEhBUkRJTiBTT0xBUiBFTkVSR1kgSUkgTExDDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEJ5On17XHJ0bGNoXGZjczEgXGFpXGFmMSBcbHRyY2hcZmNzMCANClxpXHVsXGluc3JzaWQ2NDQxNjE3IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICAvcy8gQnJ5YW4gU2NodWVsZXJ9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiANClxwYXIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgTmFtZTpcdGFiIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDY0NDE2MTcgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQnJ5YW5caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgU2NodWVsZXJ9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIFx0YWIgDQpcdGFiIA0KXHBhciBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBUaXRsZTpcdGFiIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDY0NDE2MTcgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgVmljZSBQcmVzaWRlbnR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCB7XCpcYmtta2VuZCBfSGxrMTQ5NTE3NzB9DQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlxoaWdobGlnaHQ3XGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IHtcKlxia21rc3RhcnQgX0hsazM3MTk0MTg4fVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEhBUkRJTiBTT0xBUiBFTkVSR1kgSUlJIExMQw0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBCeTp9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDY0NDE2MTcgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFpXGFmMSBcbHRyY2hcZmNzMCBcaVx1bFxpbnNyc2lkNjQ0MTYxNyBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAvcy8gQnJ5YW4gU2NodWVsZXJ9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiANCg0KXHBhciBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBOYW1lOlx0YWIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNjQ0MTYxNyBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBCcnlhbiBTY2h1ZWxlcn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcdGFiIFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIA0KXHBhciBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBUaXRsZTpcdGFiIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDY0NDE2MTcgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgVmljZSBQcmVzaWRlbnR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IHtcKlxia21rZW5kIF9IbGszNzE5NDE4OH0NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGhpZ2hsaWdodDdcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBIQVJESU4gU09MQVIgRU5FUkdZIExMQ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4ICx9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIGFzIENvLVRlbmFuY3kgTWFuYWdlcn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEJ5On17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTIwODUyNTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFpXGFmMSBcbHRyY2hcZmNzMCBcaVx1bFxpbnNyc2lkMTIwODUyNTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgL3MvIEVtaWwgQXZyYW19e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIA0KDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBOYW1lOn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDEyMDg1MjU4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBFbWlsIEF2cmFcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBtfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkwXHJpMFxzYTcyMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBUaXRsZTp9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDEyMDg1MjU4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBWaWNlIFByZXNpZGVudCBcaGljaFxmMCBcZW5kYXNoIFxsb2NoXGYwICBCdXNpbmVzcyBEZXZlbG9wbWVudH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcdGFiIFx0YWIgXHRhYiBcdGFiIA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxzZWN0IH1cc2VjdGQgXGx0cnNlY3QNClxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtcaGVhZGVyciBcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHRxY1x0eDQ2ODBcdHFyXHR4OTM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IA0KXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGFmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDI2MzYzNDIgDQpccGFyIH19e1xmb290ZXJyIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxxYyBcbGkwXHJpMFx3aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjYzNjM0MlxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBBcHBlbmRpeCBBIC0gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjYzNjM0MlxjaGFycnNpZDg0MTI0NDUgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIFBBR0UgICBcXCogTUVSR0VGT1JNQVQgfX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkMTA0OTc1NTcgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgMTF9fX1cc2VjdGQgXGx0cnNlY3RcbGluZXgwXGVuZG5oZXJlXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIA0Ke1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGZzMThcaW5zcnNpZDI2MzYzNDIgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTBccmkwXHNsLTIwMFxzbG11bHQwXHdpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDI2MzYzNDJcY2hhcnJzaWQ5MTI1OTA3IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB9ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDI2MzYzNDIgDQpccGFyIH19e1xoZWFkZXJmIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjYzNjM0MiANClxwYXIgfX17XGZvb3RlcmYgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHMzNVxxbCBcbGkwXHJpMFxzbC0yMDBcc2xtdWx0MFx3aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjYzNjM0MlxjaGFycnNpZDkxMjU5MDcgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDI2MzYzNDIgDQpccGFyIH19XHBhcmRccGxhaW4gXGx0cnBhclxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxhZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBBUFBFTkRJWCBBDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBBdHRhY2hlZCB0byBhbmQgbWFkZSBhIHBhcnQgb2YgdGhlIEFzc2lnbm1lbnQsfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQ28tVGVuYW5jeSwgYW5kIFNoYXJlZCBGYWNpbGl0aWVzIEFncmVlbWVudA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBEZWZpbml0aW9ucw0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMTVccWwgXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M1xsb2NoXGYwIFxoaWNoXGYwIEFiYW5kb25lZCBQcm9qZWN0XCc5NFxsb2NoXGYwICBzaGFsbCBoYXZlIHRoZSBtZWFuaW5nIHNldCBmb3J0aCBpbiB9ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTAwNTQ3OSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBTZWN0aW9uIDEyLjYoYSl9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAuDQpccGFyIFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQWRkaXRpb25caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBhbCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBzaGFsbCBoYXZlIHRoZSBtZWFuaW5nIHNldCBmb3J0aCBpbiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgU2VjdGlvbiB9e1xmaWVsZHtcKlxmbGRpbnN0IHsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgUkVGIF9SZWY1MTMxNjE4NiBcXHcgXFxoIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM1MDAzMTAwMzMwMDMxMDAzNjAwMzEwMDM4MDAzNjAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDc5NDI2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAyLjUoYyl9fX1cc2VjdGQgXGx0cnNlY3QNClxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IC4NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNDYzMzI0MyBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzXGxvY2hcZjAgXGhpY2hcZjAgQWRkaXRpb25hbCBGYWNpbGl0aWVzIE9wZXJhdGl2ZSBEYXRlXCc5NFxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDQwODUzNzYgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpzaGFsbCBtZWFuIHRoZSBkYXkgYWZ0ZXIgYWxsIG9mIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9ucyBoYXZlIGJlZW4gc2F0aXNmaWVkIHdpdGggcmVzcGVjdCB0byB0aGUgcmVsZXZhbnQgQ28tVGVuYW50cyBvd25pblxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KZyBhbiBpbnRlcmVzdCBpbiB0aGUgQWRkaXRpb25hbCBGYWNpbGl0aWVzOiAgKGkpIEZFUkMgYWxsb3dzIGFtZW5kbWVudHMgdG8gdGhpcyBBZ3JlZW1lbnQgcmVmbGVjdGluZyB0aGUgYWRkaXRpb24gb2YgdGhlIEFkZGl0aW9uYWwgRmFjaWxpdGllcyB0byBiZWNvbWUgZWZmZWN0aXZlIHVuZGVyIFNlY3Rpb24gMjA1IG9mIHRoZSBGUEE7IChpaSkgdGhlIHJlbGV2YW50IENvLVRlbmFudHMgZGV0ZXJtaW5lIHRoYXQgdGhlIEFkZGl0aW9uYWwgRmFjDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBpXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgXGhpY2hcZjAgbGl0aWVzIGRvIG5vdCBpbXBhY3QgdGhlaXIgcHJldmlvdXMgcXVhbGlmaWNhdGlvbiBmb3IgYSBibGFua2V0IG9wZW4gYWNjZXNzIHRyYW5zbWlzc2lvbiB3YWl2ZXIgdW5kZXIgMTggQy5GLlIuIFwnYTdcbG9jaFxmMCAzNS4yOChkKSgyKSBvZiB0aGUgQ29tbWlzc2lvblxoaWNoXGYwIFxycXVvdGUgXGxvY2hcZjAgDQpzIHJlZ3VsYXRpb25zIHRoYXQgZ3JhbnQgYW4gRlBBIHB1YmxpYyB1dGlsaXR5IHRoYXQgb3ducywgY29udHJvbHMgb3Igb3BlcmF0ZXMgb25seSBJbnRlcmNvbm5lY3Rpb24gQ3VzdG9tZXJcaGljaFxmMCBccnF1b3RlIFxsb2NoXGYwIHMgSVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIG5caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCB0ZXJjb25uZWN0aW9uIEZhY2lsaXRpZXMgYSB3YWl2ZXIgZnJvbSBGRVJDXGhpY2hcZjAgXHJxdW90ZSANClxsb2NoXGYwIFxoaWNoXGYwIHMgb3BlbiBhY2Nlc3MgcmVxdWlyZW1lbnRzIGluIDE4IEMuRi5SLiBcJ2E3XGxvY2hcZjAgMzUuMjgsMTggQy5GLlIuIFBhcnQgMzcgUGFydCAxOCBDLkYuUi4gUGFydCAzNTggb2YgRkVSQ1xoaWNoXGYwIFxycXVvdGUgXGxvY2hcZjAgDQpzIG9wZW4gdHJhbnNtaXNzaW9uIHJ1bGVzLCBvciBpZiBGRVJDIHByZXZpb3VzbHkgaXNzdWVkIGFuIG9yZGVyIGdyYW50aW5nIHRoZSByZWxldmFudCBDby1UZW5hbnRzIHdhaXZlcnMgZnJvbSBzdWNcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBoXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQogb3BlbiBhY2Nlc3MgdHJhbnNtaXNzaW9uIHJlcXVpcmVtZW50cyBjdXN0b21hcnkgZm9yIGVudGl0aWVzIHRoYXQgb3duIGxpbWl0ZWQgYW5kIGRpc2NyZXRlIGludGVyY29ubmVjdGlvbiB0cmFuc21pc3Npb24gZmFjaWxpdGllcywgRkVSQyBpc3N1ZXMgYSBuZXcgb3JkZXIgY29udGludWluZyBzdWNoIHdhaXZlciB3aXRoIHJlc3BlY3QgdG8gdGhlIEFkZGl0aW9uYWwgRmFjaWxpdGllczsgKGlpaSkgfXtccnRsY2hcZmNzMSBcYWYxIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBpZiBub3QgYWxyZWFkeSBvYnRhaW5lZCwgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ0MDg1Mzc2IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHRoXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQplIHJlbGV2YW50IENvLVRlbmFudHMgaGF2ZSBvYnRhaW5lZCBleGVtcHQgd2hvbGVzYWxlIGdlbmVyYXRvciBzdGF0dXMgcHVyc3VhbnQgdG8gdGhlIFB1YmxpYyBVdGlsaXR5IEhvbGRpbmcgQ29tcGFueSBBY3Qgb2YgMjAwNSBhbmQgRkVSQ1xoaWNoXGYwIFxycXVvdGUgXGxvY2hcZjAgDQpzIGltcGxlbWVudGluZyByZWd1bGF0aW9ucyB3aXRoIHJlc3BlY3QgdG8gdGhlIG93bmVyc2hpcCBvZiBpdHMgUHJvamVjdCBhbmQgdGhlIGNvLXRlbmFuY3kgYXJyYW5nZW1lbnRzIGNvbnRlbXBsYXRlZCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBoXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQplcmVpbjsgKGl2KSBhbiBvcmRlciBmcm9tIEZFUkMgZ3JhbnRpbmcgU2VjdGlvbiAyMDMgYXBwcm92YWwgaWYgb25lIG9yIGFsbCBvZiB0aGUgcmVsZXZhbnQgQ28tVGVuYW50cyBkZXRlcm1pbmUgdGhhdCB0aGUgdGhlbi1jdXJyZW50IEZFUkMgcmVndWxhdGlvbnMgcmVxdWlyZSB0aGVtIHRvIGFjcXVpcmUsIG9yIGFub3RoZXIgcmVsZXZhbnQgQ28tVGVuYW50IGRldGVybWluZXMgdGhhdCBpdCBuZWVkcywgcHJpb3IgYXBwcm92YWwgdW5kZXIgU2UNClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGNcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCB0aW9uIDIwMyBvZiB0aGUgRlBBIGZvciBjbG9zaW5nIG9uIHRoZSB0cmFuc2ZlciBjby10ZW5hbmN5IG93bmVyc2hpcCBpbnRlcmVzdHMgY29udGVtcGxhdGVkIGJ5IHRoaXMgQWdyZWVtZW50IGluIHRoZSBBZGRpdGlvbmFsIEZhY2lsaXRpZXM7ICh2KSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGlmIG5vdCBhbHJlYWR5IG9idGFpbmVkLCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDQwODUzNzYgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgdGhlIHJlbGV2YW50IENvLVRlbmFudHMgaGF2ZSBiZWVuIGdyYW50ZWQgbWFya2V0IGJhc2VkIHJhdGUgYXV0aG9yaXR5IHVuZGVyIFNlY3Rpb24gMjA1DQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgb2YgdGhlIEZQQSBmb3IgdGhlIHNhbGUgb2YgcG93ZXIgYXQgd2hvbGVzYWxlIGFuZCBhIHdhaXZlciBmcm9tIEZFUkNcaGljaFxmMCBccnF1b3RlIFxsb2NoXGYwIHMgYWNjb3VudGluZyBhbmQgcmVsYXRlZCByZXBvcnRpbmcgcmVxdWlyZW1lbnRzIHVuZGVyIDE4IEMuRi5SLiBQYXJ0cyA0MSwgMTAxIGFuZCAxNDEgKG5vdCBpbmNsdWRpbmcgMTQxLjE0IGFuZCAxNDEuMTUgKSBvZiBGRVJDDQpcaGljaFxmMCBccnF1b3RlIFxsb2NoXGYwIHMgcmVndWxhdGlvbnMgYW5kIGJsYW5rZXQgYXV0aG9yaXphdGlvbiB0byBpc3N1ZSBzZWN1cml0XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgaVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGVzIG9yIGFzc3VtZSBsaWFiaWxpdGllcyB1bmRlciBTZWN0aW9uIDIwNCBvZiB0aGUgRlBBfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgLg0KXHBhciBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEFkZGl0aW9uYWwgUHJlbWlzZXN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIHNoYWxsIGhhdmUgdGhlIG1lYW5pbmcgc2V0IGZvcnRoIGluIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBTZWN0aW9ufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBSRUYgX1JlZjUwNzE1MjA4IFxcdyBcXGggfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzUwMDMwMDAzNzAwMzEwMDM1MDAzMjAwMzAwMDM4MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNzk0MjYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDEuMyhiKX19fVxzZWN0ZCBcbHRyc2VjdA0KXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggLn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBBZGRpdGlvbmFsIFByZW1pc2VzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgXGhpY2hcZjAgIG9yIEZhY2lsaXRpZXMgUHJvLVJhdGEgU2hhcmVcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIHNoYWxsIGhhdmUgdGhlIG1lYW5pbmcgc2V0IGZvcnRoIGluIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTA1MDI2MjEgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgRXhoaWJpdCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEd9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggLn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXHBhciBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEFcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBkZGl0aW9uYWwgUHJlbWlzZXMgUmlnaHRzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH0NCntccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBzaGFsbCBoYXZlIHRoZSBtZWFuaW5nIHNldCBmb3J0aCBpbiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMSANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgUkVGIF9SZWY0ODAzNTI0NSBcXHcgXFxoIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNTAwMzIwMDM0MDAzNTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDc5NDI2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAxLjMoYSl9fX1cc2VjdGQgXGx0cnNlY3QNClxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IC4NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBBZmZpbGlhdGV9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCANClwnOTR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIHNoYWxsIG1lYW4sIHdoZW4gdXNlZCB3aXRoIHJlZmVyZW5jZSB0byBhIHNwZWNpZmllZCBQZXJzb24sIGFueSBvdGhlciBQZXJzb24gdGhhdCBkaXJlY3RseSwgb3IgaW5kaXJlY3RseSB0aHJvdWdoIG9uZSBvciBtb3JlIGludGVybWVkaWFyDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBpZXMsIENvbnRyb2xzLCBpcyBDb250cm9sbGVkIGJ5IG9yIGlzIHVuZGVyIGNvbW1vbiBDb250cm9sIHdpdGggdGhlIHNwZWNpZmllZCBQZXJzb24uICBGb3IgcHVycG9zZXMgb2YgdGhpcyBBZ3JlZW1lbnQsIChpKSBhIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFNlY3VyZWQgUGFydHl9e1xydGxjaFxmY3MxIA0KXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgc2hhbGwgbm90IGJlIGNvbnNpZGVyZWQgYXMgYW4gQWZmaWxpYXRlIG9mIGEgQ28tVGVuYW50IHNvbGVseSBhcyBhIHJlc3VsdCBvZiBhbnkgdHJhbnNhY3Rpb25zIGRlc2NyaWJlZCBpbiBpdHMgU2VjdXJpXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQp0eSBEb2N1bWVudHMsIGFuZCAoaWkpIGFuIGluZGVtbmlmaWVkIENvLVRlbmFudCBhbmQgYW4gaW5kZW1uaWZ5aW5nIENvLVRlbmFudCBzaGFsbCBub3QgYmUgY29uc2lkZXJlZCBhcyBhbiBBZmZpbGlhdGUgb2YgdGhlIG90aGVyLg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEFncmVlbWVudH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIA0KXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgc2hhbGwgbWVhbiB0aGUgQXNzaWdubWVudCwgQ28tVGVuYW5jeSBhbmQgU2hhcmVkIEZhY2lsaXRpZXMgQWdyZWVtZW50IHRvIHdoaWNoIHRoaXMgQXBwZW5kaXggaXMgYXR0YWNoZWQsIHRvZ2V0aFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KZXIgd2l0aCBhbGwgb3RoZXIgYXBwZW5kaWNlcyBhbmQgZXhoaWJpdHMgYXR0YWNoZWQgaGVyZXRvLg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEFsdGVybmF0aXZlIFByb3Bvc2FsfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQpcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBzaGFsbCBoYXZlIHRoZSBtZWFuaW5nIHNldCBmb3J0aCBpbiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgIFJFRiBfUmVmNDgwMzUyNTMgXFx3IFxcaCBcXCogTUVSR0VGT1JNQVQgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM1MDAzMjAwMzUwMDMzMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxjZjFcaW5zcnNpZDc5NDI2MlxjaGFycnNpZDc5NDI2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAyLjMoYil9fX1cc2VjdGQgXGx0cnNlY3QNClxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IC4NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBBcHBsaWNhYmxlIExhd317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgc2hhbGwgbWVhbiBhbnkgc3RhdHV0ZSwgcmVndWxhdGlvbiwgb3JkaW5hbmNlLCBydWxlLCBnb3Zlcm5tZVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KbnQgYXBwcm92YWwsIGFncmVlbWVudCwgZGlyZWN0aXZlLCBndWlkZWxpbmUsIHBvbGljeSwgcmVxdWlyZW1lbnQsIG9yIG90aGVyIGdvdmVybm1lbnRhbCByZXN0cmljdGlvbiBvciBhbnkgc2ltaWxhciBmb3JtIG9mIGRlY2lzaW9uIG9mIG9yIGRldGVybWluYXRpb24gYnksIG9yIGFueSBpbnRlcnByZXRhdGlvbiBvciBhZG1pbmlzdHJhdGlvbiBvZiBhbnkgb2YgdGhlIGZvcmVnb2luZyBieSwgYW55IEdvdmVybm1lbnRhbCBBdXRob3JpdHkgaGF2DQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBpXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgbmcganVyaXNkaWN0aW9uIG92ZXIgdGhlIG1hdHRlciBvciBQZXJzb24gaW4gcXVlc3Rpb24sIHdoZXRoZXIgbm93IG9yIGhlcmVhZnRlciBpbiBlZmZlY3QgYXBwbGljYWJsZSB0byB0aGlzIEFncmVlbWVudCBvciB0byBhbnkgb2YgdGhlIENvLVRlbmFudHMgdG8gdGhpcyBBZ3JlZW1lbnQuDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQXBwcm92ZWQgQ28tVGVuYW5jeSBPJk0gQnVkZ2V0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQpcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBzaGFsbCBoYXZlIHRoZSBtZWFuaW5nIHNldCBmb3J0aCBpbiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgUkVGIF9SZWYxMDFcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAzNDA3NzIgXFx3IFxcaCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzMTAwMzAwMDMxMDAzMzAwMzQwMDMwMDAzNzAwMzcwMDMyMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNzk0MjYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDYuOH19fVxzZWN0ZCBcbHRyc2VjdA0KXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggLg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEFzc2lnbn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTQNCn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgb3IgYW4gfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEFzc2lnbm1lbnR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBzaGFsbCBoYXZlIHRoZSBtZWFuaW5nIHNldCBmb3J0aCBpbiB9ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgIFJFRiBfUmVmNDgwMzc0NzUgXFx3IFxcaCBcXCogTUVSR0VGT1JNQVQgfXtccnRsY2hcZmNzMSANClxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM3MDAzNDAwMzcwMDM1MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxjZjFcaW5zcnNpZDc5NDI2MlxjaGFycnNpZDc5NDI2MiANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDExLjF9fX1cc2VjdGQgXGx0cnNlY3RccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCAuDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQmFua3J1cHRjeSBFdmVudH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgbWVhbnMsIHdpdGggcmVzcGVjdCB0byBhbnkgZW50aXR5LCBzdWNoIGVudGl0eTogKGkpIHZvbHVudGFyaWx5IGZpbGVzIGEgcGV0aXRpb24gb3Igb3RoZXJ3aXNlIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KY29tbWVuY2VzLCBhdXRob3JpemVzIG9yIGFjcXVpZXNjZXMgaW4gdGhlIGNvbW1lbmNlbWVudCBvZiBhIHByb2NlZWRpbmcgb3IgY2F1c2Ugb2YgYWN0aW9uIHVuZGVyIGFueSBiYW5rcnVwdGN5LCBpbnNvbHZlbmN5LCByZW9yZ2FuaXphdGlvbiBvciBzaW1pbGFyIGxhdywgb3IgaGFzIGFueSBzdWNoIHBldGl0aW9uIGZpbGVkIG9yIGNvbW1lbmNlZCBhZ2FpbnN0IGl0IGJ5IGl0cyBjcmVkaXRvcnMgYW5kIHN1Y2ggcGV0aXRpb24gaXMgbm90IGRpDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBzXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgbWlzc2VkIHdpdGhpbiB9e1xydGxjaFxmY3MxIFxhYlxhZjEgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDEyMDg1MjU4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFtSRURBQ1RFRF19e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIGRhDQp7XCpcYmtta3N0YXJ0IF9EVl9DMjg2fXlzIG9mIHRoZSBmaWxpbmcgb3IgY29tbWVuY2VtZW50IG9yIGFuIG9yZGVyIGZvciByZWxpZWYgaXMgZW50ZXJlZHtcKlxia21rc3RhcnQgX0RWX00xNjl9e1wqXGJrbWtlbmQgX0RWX0MyODZ9e1wqXGJrbWtlbmQgX0RWX00xNjl9DQo7IChpaSkgbWFrZXMgYW4gYXNzaWdubWVudCBvciBhbnkgZ2VuZXJhbCBhcnJhbmdlbWVudCBmb3IgdGhlIGJlbmVmaXQgb2YgY3JlZGl0b3JzOyAoaWlpKSBvdGhlcndpc2UgYmVjb21lcyBpbnNvbHZlbnQsIGhvd2V2ZXIgZXZpZGVuY2VkOyAoaXYpIGhhcyBhIGxpcXVpZGF0b3IsIGFkXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQptaW5pc3RyYXRvciwgcmVjZWl2ZXIsIHRydXN0ZWUsIGNvbnNlcnZhdG9yIG9yIHNpbWlsYXIgb2ZmaWNpYWwgYXBwb2ludGVkIHdpdGggcmVzcGVjdCB0byBpdCBvciBhbnkgc3Vic3RhbnRpYWwgcG9ydGlvbiBvZiBpdHMgcHJvcGVydHkgb3IgYXNzZXRzOyBvciAodikgaXMgZ2VuZXJhbGx5IHVuYWJsZSB0byBwYXkgaXRzIGRlYnRzIGFzIHRoZXkgZmFsbCBkdWUuDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTNcbG9jaFxmMCBcaGljaFxmMCBCYXNlIFByby1SYXRhIFNoYXJlXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgc2hhbGwgaGF2ZSB0aGUgbWVhbmluZyBzZQ0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgdCBmb3J0aCBpbiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEwNTAyNjIxIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEV4aGliaXQgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgR317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IC59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANClxwYXIgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBCaWxsIG9mIFNhbGUgLSBTaGFyZWQgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjEgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgc2hhbGwgaGF2ZSB0aGUgbWVhbmluZyBzZXQgZm9ydGggaW4gfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMSANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgICBSRUYgX1JlZjQ4MDM1MjQ5IFxcdyBcXGggXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNTAwMzIwMDM0MDAzOTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcY2YxXGluc3JzaWQ3OTQyNjJcY2hhcnJzaWQ3OTQyNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgMi4xKGEpfX19XHNlY3RkIFxsdHJzZWN0DQpccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCAuDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQ2FwaXRhbCBDb3N0c317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgc2hhbGwgbWVhbiBhbGwgY2FwaXRhbCBjb3N0cyBpbmN1cnJlZCBieSBhIENvLVRlbmFudCB3aXRoIHJlc3BlY3QgdG8gYW55IFNoYXJlZCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFByZW1pc2VcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBzIGFuZCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgRmFjaWxpdGllcyBvciBFYXNlbWVudHMsIGFzIHRoZSBjYXNlIG1heSBiZSwgZGV0ZXJtaW5lZCBpbiBhY2NvcmRhbmNlIHdpdGggR0FBUC4NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBDb2RlfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBzaGFsbCBoYXZlIHRoZSBtZWFuaW5nIHNldCBmb3J0aCBpbiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgU2VjdGlvbiB9e1xmaWVsZHtcKlxmbGRpbnN0IHsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgIFJFRiBfUmVmNDgwMzUyODEgXFx3IFxcaCBcXCogTUVSR0VGT1JNQVQgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM1MDAzMjAwMzgwMDMxMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxjZjFcaW5zcnNpZDc5NDI2MlxjaGFycnNpZDc5NDI2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCA1Ljd9fX1cc2VjdGQgXGx0cnNlY3QNClxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IC4NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBDb21tZX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KXGhpY2hcZjAgbmNlbWVudCBEYXRlXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgc2hhbGwgbWVhbiB0aGUgZGF0ZSB1cG9uIHdoaWNoIHRoZSBmaXJzdCBPcGVyYXRpbw0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgbmFsIENvLVRlbmFudCBub3RpZmllcyB0aGUgQ28tVGVuYW5jeSBNYW5hZ2VyLCB3aXRoIGEgY29weSB0byB0aGUgb3RoZXIgQ28tVGVuYW50cywgdGhhdCBzdWNoIE9wZXJhdGlvbmFsIENvLVRlbmFudCBkZXNpcmVzIHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgdG8gY29tbWVuY2UgcGVyZm9ybWluZyBzZXJ2aWNlcyB1bmRlciB0aGlzIEFncmVlbWVudC4NClxwYXIgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBDb21tZXJjaWFsIE9wZXJhdGlvbiBEYXRlfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMSANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB3aXRoIHJlc3BlY3QgdG8gZWFjaCBQcm9qZWNcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCnQgc2hhbGwgbWVhbiB0aGUgZGF0ZSB0aGF0IHN1Y2ggUHJvamVjdCBhY2hpZXZlcyBjb21tZXJjaWFsIG9wZXJhdGlvbiB1bmRlciB0aGUgYXBwbGljYWJsZSBQcm9qZWN0IEFncmVlbWVudHMgb2YgdGhlIENvLVRlbmFudCB0aGF0IG93bnMgdGhlIFByb2plY3QufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQge1wqXGJrbWtzdGFydCBfUmVmNDgwMzU1MTR9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIH17DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IHtcKlxia21rZW5kIF9SZWY0ODAzNTUxNH0NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNTE0MzMzMiBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzXGxvY2hcZjAgXGhpY2hcZjAgQ29uc2VxdWVudGlhbCBEYW1hZ2VzXCc5NFxsb2NoXGYwICBzaGFsbCBtZWFuIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0Kc3BlY2lhbCwgaW5jaWRlbnRhbCwgY29uc2VxdWVudGlhbCBhbmQgaW5kaXJlY3QgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGxvc3Mgb3IgZGFtYWdlLCBpbmNsdWRcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBpbmcgbG9zdCBwcm9maXRzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgLH17DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMzc3MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KbG9zcyBvZiByZXZlbnVlcywgY29zdCBvZiBjYXBpdGFsLCBsb3NzIG9mIGdvb2R3aWxsLCBpbmNyZWFzZWQgb3BlcmF0aW5nIGNvc3RzLCBkZWxheSBjb3N0cyBvciBhbnkgb3RoZXIgc3BlY2lhbCwgaW5kaXJlY3Qgb3IgY29uc2VxdWVudGlhbCBkYW1hZ2VzIG9mIHdoYXRldmVyIG5hdHVyZX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IC4NClxwYXIgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBDb25zdW1hYmxlc317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgc2hhbGwgbWVhbiwgY29sbGVjdGl2ZWx5LCBhbGwgaXRlbXMgY29uc3VtZWQgb3IgbmVlZGluZyBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCnJlZ3VsYXIgcGVyaW9kaWMgcmVwbGFjZW1lbnQgKGF0IGxlYXN0IG9uY2UgZXZlcnkgdHdvIHllYXJzKSBkdXJpbmcgb3BlcmF0aW9uIGFuZCBtYWludGVuYW5jZSBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMsIGluY2x1ZGluZyBsdWJyaWNhbnRzLCBvZmZpY2Ugc3VwcGxpZXMsIGFpciBmaWx0ZXJzLCBnYXNrZXRzLCBoYW5kIHRvb2xzLCBhbmQgYWxsIG90aGVyIGNvbnN1bWFibGUgbWF0ZXJpYWxzIGFuZCBwYXJ0cyByZXF1aXJlZCBmb3IgdGhlIA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgblxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIG9ybWFsIG9wZXJhdGlvbiBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMuDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQ29udHJhY3QgRGF0ZX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgc2hhbGwgaGF2ZSB0aGUgbWVhbmluZyBzZXQgZm9ydGggaW4gdGhlIFByZWFtYmxlIHRvIHRoaXMgQWdyZWVtZW50Lg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIENvbnRyb2wsfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgDQpcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQ29udHJvbGxlZCBieSx9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBhbmQgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHVuZGVyIGNvbW1vbiBDb250cm9sIHdpdGgsfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB3aXRoIHJlc3BlY3QgdG8gYW55IFBlcnNvbiBzaGFsbCBtZWFuIHRoZSBwb3NzZXNzaW9uLCBkaXJlY3RseSBvciBpbmRcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCmlyZWN0bHksIG9mIHRoZSBwb3dlciB0byBkaXJlY3Qgb3IgY2F1c2UgdGhlIGRpcmVjdGlvbiBvZiB0aGUgbWFuYWdlbWVudCBhbmQgcG9saWNpZXMgb2Ygc3VjaCBQZXJzb24sIHdoZXRoZXIgdGhyb3VnaCB0aGUgb3duZXJzaGlwIG9mIHZvdGluZyBzZWN1cml0aWVzIG9yIG1lbWJlciBvciBwYXJ0bmVyc2hpcCBpbnRlcmVzdHMsIGJ5IGNvbnRyYWN0IG9yIG90aGVyd2lzZS4NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBDby1UZW5hbmN5fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgDQpcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBzaGFsbCBoYXZlIHRoZSBtZWFuaW5nIHNldCBmXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgb3J0aH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjEgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBpbiB0aGUgUHJlYW1ibGUgdG8gdGhpcyBBZ3JlZW1lbnR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAuDQpccGFyIFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQ28tVGVuYW5jeSBNYW5hZ2VyfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBzaGFsbCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBtZWFuIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTI0MTk1NSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCkhhcmRpbiBTb2xhciwgaXRzIHN1Y2Nlc3NvcnMgYW5kIHBlcm1pdHRlZCBhc3NpZ25zLH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgYW5kIGl0cyByZXBsYWNlbWVudHMuDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQ28tVGVuYW5jeSBNYW5hZ2VyIEV2ZW50IG9mIERlZmF1bHR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANClxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIHNoYWxsIGhhdmUgdGhlIG1lYW5pbmcgc2V0IGZvcnRoIGluIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANClNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICAgUkVGIF9SZWY0ODAzNzQ4MCBcXHcgXFxoIFxcKlxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNDAwMzgwMDMwMDAzMzAwMzcwMDM0MDAzODAwMzAwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGNmMVxpbnNyc2lkNzk0MjYyXGNoYXJyc2lkNzk0MjYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDEzLjJ9fX1cc2VjdGQgXGx0cnNlY3QNClxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IC4NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBDby1UZW5hbmN5IE1hbmFnZXIgUmVwcmVzZW50YXRpdmV9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANClxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIHNoYWxsIGhhdmUgdGhlIG1lYW5pbmcgc2V0IGZvcnRoIGluIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANClNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICAgUkVGIF9SZWY0ODAzNzQ1OSBcXHcgXFxoIFxcKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNDAwMzgwMDMwMDAzMzAwMzcwMDM0MDAzNTAwMzkwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGNmMVxpbnNyc2lkNzk0MjYyXGNoYXJyc2lkNzk0MjYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDguN319fVxzZWN0ZCBcbHRyc2VjdA0KXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggLg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIENvLVRlbmFuY3kgTyZNIEJ1ZGdldH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgc2hhbGwgaGF2ZSB0aGUgbWVhbmluZyBnaXZlbiBpbiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgUkVGIF9SZWYxMDEzNDA3NzIgXFx3IFxcaCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzMTAwMzAwMDMxMDAzMzAwMzQwMDMwMDAzNzAwMzcwMDMyMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNzk0MjYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDYuOH19fVxzZWN0ZCBcbHRyc2VjdA0KXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggLg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIENvLVRlblxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGFudH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgb3IgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIENvLVRlbmFudHN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KIHNoYWxsIGhhdmUgdGhlIG1lYW5pbmcgc2V0IGZvcnRoIGluIHRoZSBvcGVuaW5nIHBhcmFncmFwaCBvZiB0aGUgQWdyZWVtZW50Ln17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXHBhciBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIENvLVRlbmFudCBFdmVudCBvZiBEZWZhdWx0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMSANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBzaGFsbCBoYXZlIHRoZSBtZWFuaW5nIHNldCBmb3J0aCBpbiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgU2VjdGlvbiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYxIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgIFJFRiBfUmVmNDgwMzU0MjQgXFx3IFxcaCBcXCogTUVSR0VGT1JNQVQgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM1MDAzNDAwMzIwMDM0MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxjZjFcaW5zcnNpZDc5NDI2MlxjaGFycnNpZDc5NDI2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAxMy4xfX19XHNlY3RkIFxsdHJzZWN0DQpccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCAufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQpccGFyIFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQ28tVGVuYW50IFJlcHJlc2VudGF0aXZlfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMSANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBzaGFsbCBoYXZcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBlIHRoZSBtZWFuaW5nIHNldCBmb3J0aCBpbiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgU2VjdGlvbiB9DQp7XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgIFJFRiBfUmVmNDgwMzUzMDcgXFx3IFxcaCBcXCogTUVSR0VGT1JNQVQgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM1MDAzMzAwMzAwMDM3MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxjZjFcaW5zcnNpZDc5NDI2MlxjaGFycnNpZDc5NDI2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCA3LjR9fX1cc2VjdGQgXGx0cnNlY3QNClxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IC4NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBEYW1hZ2VzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgDQpcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBzaGFsbCBoYXZlIHRoZSBtZWFuaW5nIHNldCBmb3J0aCBpbiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgU2VjdGlvbiB9e1xmaWVsZHtcKlxmbGRpbnN0IHsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgIFJFRiBfUmVmNDgwMzc0NjEgXFx3IFxcaCBcXCogTUVSR0VGT1JNQVQgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM3MDAzNDAwMzYwMDMxMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxjZjFcaW5zcnNpZDc5NDI2MlxjaGFycnNpZDc5NDI2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCA5LjJ9fX1cc2VjdGQgXGx0cnNlY3QNClxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIC4gDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgRGVmYXVsdCBJbnRlcmVzdCBSYXRlfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQpcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBzaGFsbCBtZWFuIHRoZSBsZXNzZXIgb2YgKGkpIFByaW1lIFJhdGUgcGx1c1xoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNzd9MjAwe1wqXGJrbWtlbmQgRG9jWFRleHRSZWY3N30gfXsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBifXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGFzaXMgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgcH17DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIG9pbnRzLCBvciAoaWkpIHRoZSBtYXhpbXVtIHJhdGUgYWxsb3dlZCBieSBsYXcuDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgRWFzZW1lbnRzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgDQpcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBzaGFsbCBoYXZlIHRoZSBtZWFuaW5nIHNldCBmb3J0aCBpbiB0aGUgUmVjaXRhbHMuDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgRWFzZW1lbnR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANClxoaWNoXGYwICBQcm8tUmF0YSBTaGFyZVwnOTR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIHNoYWxsIGhhdmUgdGhlIG1lYW5pbmcgc2V0IGZvcnRoIGluIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTA1MDI2MjEgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpFeGhpYml0IH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEd9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggLn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXHBhciBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEVtZXJnZW5jeX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgc2hhbGwgbWVhbiBhbnkgb2NjdXJyZW5jZSwgaW4gdGhlIHJlYXNvbmFibGUganVkZ1xoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KbWVudCBvZiBDby1UZW5hbmN5IE1hbmFnZXIgdGhhdCByZXF1aXJlcyBhY3Rpb24gYW5kIChpKSB3aGljaCBjb25zdGl0dXRlcyBhIHNlcmlvdXMgYWN0dWFsIG9yIHBvdGVudGlhbCBoYXphcmQgdG8gdGhlIHNhZmV0eSBvZiBQZXJzb25zIG9yIHByb3BlcnR5LCAoaWkpIG1heSBpbW1lZGlhdGVseSBhbmQgbWF0ZXJpYWxseSBpbnRlcmZlcmUgd2l0aCB0aGUgc2FmZSwgZWNvbm9taWNhbCBvciBlbnZpcm9ubWVudGFsbHkgc291bmQgb3BlcmF0aW9uDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzLCAoaWlpKSB3b3VsZCB2aW9sYXRlIEFwcGxpY2FibGUgTGF3LCBpbiBlYWNoIGNhc2UgaWYgbm90IGltbWVkaWF0ZWx5IHJlY3RpZmllZH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjEgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzIyMDAxNyBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBvciAoaXYpIHdvdWxkIHJlc3VsdCBpbiBhbiB1bnBsYW5uZWQgb3V0YWdlIGR1ZSB0byBtZWNoYW5pY2FsIGZhaWx1cmUgb3Igb3RoZXJ3aXNlLn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M1xsb2NoXGYwIEV4ZW1wbGFyeX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgRGFtYWdlc317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgc2hhbGwgbWVhbn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBhbnkgQ29uc2VxdWVudGlhbCBEYW1hZ2VzIG9yIHB1bml0aXZlDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgZGFtYWdlcy59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgRmFjaWxpdHkgTWFuYWdlbWVudCBBZ3JlZW1lbnRzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQpcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KIHNoYWxsIG1lYW4gdGhlIHNlcGFyYXRlIGZhY2lsaXR5IG1hbmFnZW1lbnQgYWdyZWVtZW50cyB0aGF0IGVhY2ggQ28tVGVuYW50IGVudGVycyBpbnRvIHdpdGggcmVzcGVjdCB0byB0aGUgb3BlcmF0aW9uLCBtYWludGVuYW5jZSwgcmVwYWlyIGFuZCByZXBsYWNlbWVudCBvZiBhIENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFxycXVvdGUgfXsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgcyBQcm9qZWN0IGluY2x1ZGluZywgd2l0aCBsaW1pdGF0aW9uIHN1Y2ggQ29caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAtVGVuYW50fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXHJxdW90ZSB9ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBzIFNlcGFyYXRlIEZhY2lsaXRpZXMuDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgRmFjaWxpdHkgTWFuYWdlcn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgc2hhbGwgbWVhbiB0aGUgZW50aXR5IGFjdGluZyBpbiBpdHMgY2FwYWNpdHkgYXMgbWFuYWdlciBvZiBzdWNoIENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgcyBTZXBhcmF0ZSBGYWNpbGl0aWVzIHVuZGVyIGFueSBvZiB0aGUgRmFjaWxpdHkgTWFuYWdlbWVudCBBZ3JlZW1lbnRzLg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEZFUkN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIHNoYWxsIG1lYW4gdGhlIEZlZGVyYWwgRW5lcmd5IFJlZ3VsYXRvcnkgQ29tbWlzc2lvbn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBvclxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KIGFueSBzdWNjZXNzb3IgZW50aXR5fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IC4NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBGaW5hbmNpbmcgRG9jdW1lbnR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANClxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIG9yIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBGaW5hbmNpbmcgRG9jdW1lbnRzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCiBzaGFsbCBtZWFuIHRob3NlIGRvY3VtZW50cyBnb3Zlcm5pbmcgYSBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBzIHJlbGF0aW9uc2hpcCB3aXRoIGEgfXsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBTZWN1cmVkIFBhcnR5fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IC4NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBGb3JjZSBNYWpldXJlfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQpcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBzaGFsbCBtZWFuIGFueSBhY3QsIGNhc3VhbHR5IG9yIG9jY3VycmVuY2UsIGNvbmRpdGlvbiwgZXZlbnQgb3IgY2lyY3Vtc3RhbmNlIG9mIGFueSBrXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQppbmQgb3IgbmF0dXJlIG5vdCByZWFzb25hYmx5IHdpdGhpbiB0aGUgZXhjdXNlZCBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCnMgY29udHJvbCBhbmQgd2hpY2ggY291bGQgbm90IGhhdmUgYmVlbiBhdm9pZGVkIGJ5IHJlYXNvbmFibGUgbWVhc3VyZXMsIGluY2x1ZGluZzogKGkpIGFjdHMgb2YgR29kIG9yIHRoZSBlbGVtZW50cyAoaW5jbHVkaW5nIGZpcmUsIGVhcnRocXVha2UsIGV4cGxvc2lvbiwgZmxvb2QsIGVwaWRlbWljIG9yIGFueSBvdGhlciBjYXN1YWx0eSBvciBhY1xoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KY2lkZW50KSBvciBjb25kZW1uYXRpb247IChpaSkgc3RyaWtlcywgbG9jayBvdXRzIG9yIG90aGVyIGxhYm9yIGRpc3B1dGVzOyAoaWlpKSB0aGUgaW5hYmlsaXR5IHRvIHNlY3VyZSBsYWJvciBvciBtYXRlcmlhbHMgaW4gdGhlIG9wZW4gbWFya2V0OyBhbmQgKGl2KSB3YXIsIHRlcnJvcmlzbSwgc2Fib3RhZ2UsIGNpdmlsIHN0cmlmZSBvciBvdGhlciB2aW9sZW5jZS4gIEZvcmNlIE1hamV1cmUgZXhwcmVzc2x5IGRvZXMgbm90IGluY2x1ZGUgbGF0DQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBlXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIGRlbGl2ZXJ5IG9yIGJyZWFrYWdlIG9mIGVxdWlwbWVudCBvciBtYXRlcmlhbHMgb3IgZWNvbm9taWMgaGFyZHNoaXAgZXhjZXB0IHRvIHRoZSBleHRlbnQgY2F1c2VkIGJ5IGEgRm9yY2UgTWFqZXVyZSBldmVudC4NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBGUEF9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIHNoYWxsIG1lYW4gdGhlIEZlZGVyYWwgUG93ZXIgQWN0Lg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEdEUElQRH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTQNCn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgc2hhbGwgbWVhbiB0aGUgaW1wbGljaXQgcHJpY2UgZGVmbGF0b3IgZm9yIHRoZSBncm9zcyBkb21lc3RpYyBwcm9kdWN0IGFzIGNvbXB1dGVkIGFuXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpkIHB1Ymxpc2hlZCBieSB0aGUgVS5TLiBEZXBhcnRtZW50IG9mIENvbW1lcmNlLiAgVGhlIGZpZ3VyZXMgdG8gYmUgdXNlZCBpbiB0aGlzIGFkanVzdG1lbnQgc2hhbGwgYmUgdGhvc2UgcHJlc2VudGVkIGluIHRoZSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgR3Jvc3MgRG9tZXN0aWMgUHJvZHVjdDogVGhpcmQgUXVhcnRlciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcbHF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEZpbmFsfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIFByZXNzIFJlbGVhc2V9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIHR5cGljYWxseSByZWxlYXNlZCBpbiBEZWNlbWJlciBvZiBlYWNoIGNhbGVuZGFyIHllYXIgYnkgdGhlIFVuaXRlZCBTdGF0XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQplcyBEZXBhcnRtZW50IG9mIENvbW1lcmNlLCBCdXJlYXUgb2YgRWNvbm9taWMgQW5hbHlzaXMuICBObyBzdWJzZXF1ZW50IHJldmlzaW9ucyByZWxlYXNlZCBieSB0aGUgVW5pdGVkIFN0YXRlcyBEZXBhcnRtZW50IG9mIENvbW1lcmNlIHRvIHRob3NlIGZpZ3VyZXMgd2lsbCBiZSBjb25zaWRlcmVkIHRvIGFmZmVjdCBvciBhZGp1c3QgdGhlIEluZmxhdGlvbiBBZGp1c3RtZW50IEZhY3Rvci4NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBHb3Zlcm5tZW50YWwgQXV0aG9yaXR5fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQpcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBzaGFsbCBtZVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KYW4gdGhlIGdvdmVybm1lbnQgb2YgYW55IGZlZGVyYWwsIHN0YXRlLCBtdW5pY2lwYWwsIG9yIG90aGVyIHBvbGl0aWNhbCBzdWJkaXZpc2lvbiBpbiB3aGljaCB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgYXJlIGxvY2F0ZWQsIGFuZCBhbnkgb3RoZXIgZ292ZXJubWVudCBvciBwb2xpdGljYWwgc3ViZGl2aXNpb24gdGhlcmVvZiBleGVyY2lzaW5nIGp1cmlzZGljdGlvbiBvdmVyIChpKSB0aGUgU2hhcmVkIEZhY2lsaXRpZXMsIG9yIChpaSkgd2l0aCByDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBlXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgc3BlY3QgdG8gdGhlaXIgcmlnaHRzIGFuZCBvYmxpZ2F0aW9ucyBoZXJldW5kZXIgb3IgdW5kZXIgdGhlIEVhc2VtZW50cywgYW55IENvLVRlbmFudDsgaW4gZWFjaCBjYXNlIGluY2x1ZGluZyBhbGwgYWdlbmNpZXMgYW5kIGluc3RydW1lbnRhbGl0aWVzIG9mIHN1Y2ggZ292ZXJubWVudHMgYW5kIHBvbGl0aWNhbCBzdWJkaXZpc2lvbnMuDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgSGFyZGluIFNvbGFyfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQpcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBzaGFsbCBoYXZlIHRoZSBtZWFuaW5nIHNldCBmb3J0aCBpbiB0aGV9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSANClxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgUHJlYW1ibGVcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgdG8gdGhpcyBBZ3JlZW1lbnQuDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgSGFyZGluIFNvbGFyIElJfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQpcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBzaGFsbCBoYXZlIHRoZSBtZWFuaW5nIHNldCBmb3J0aCBpbiBQcmVhbWJsZSB0byB0aGlzIEFncmVlbWVudC4NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBIYXJkaW4gU29sYXIgSUlJfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQpcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBzaGFsbCBoYXZlIHRoZSBtZWFuaW5nIHNldCBmb3J0aCBpbiB0aGUgUHJlYW1ibGUgdG8gdGhpcyBBZ3JlZW1lbnQuDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTUxMDYwOSBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzXGxvY2hcZjAgXGhpY2hcZjAgSGFyZGluIFNvbGFyIEludGVyY29ubmVjdGlvbiBBZ3JlZW1lbnRcJzk0XGxvY2hcZjAgIHNoYWxsIG1lYW4gdGhhdCBjZXJ0YWluIEluXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQp0ZXJjb25uZWN0aW9uIFNlcnZpY2UgQWdyZWVtZW50LCBkYXRlZCBhcyBvZiBBcHJpbCAyMiwgMjAyMCwgYnkgYW5kIGFtb25nIFBKTSBJbnRlcmNvbm5lY3Rpb24sIEwuTC5DLiwgSGFyZGluIFNvbGFyIGFuZCBBRVAsIGFuZCBhbnkgYW1lbmRtZW50cyBvciBzdWNjZXNzb3IgYWdyZWVtZW50cyB0aGVyZXRvLn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDg1NzMyNiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M1xsb2NoXGYwIFxoaWNoXGYwIEhhcmRpbiBTb2xhciBJbml0aWFsIEZpbGluZyBEYXRlXCc5NFxsb2NoXGYwICBoYXMgdGhlIG1lYW5pbmcgc2V0IGZvcnRoIGluIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KU2VjdGlvbiAxNi40KGIpfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgLg0KXHBhciBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEhhcmRpbiBTb2xhciBJSSBJbnRlcmNvbm5lY3Rpb24gQWdyZWVtZW50fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDQ4NTczMjYgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgc2hhbGwgbWVhbiB0aGF0IGNlcnRhaW4gfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgSW50ZXJjb25uZWN0aW9uIFNlcnZpY2UgQWdyZWVtZW50IH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHRvIGJlIGVudGVyZWQgaW50b317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBifXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ0ODU3MzI2IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHkgYW5kIGFtb25nIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCkhhcmRpbiBTb2xhciBJSSwgUEpNLCBhbmQgdGhlIFRyYW5zbWl0dGluZyBVdGlsaXR5fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgLH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTMxMjM5OCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5NTEwNjA5IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgYW5kIGFueSBhbWVuZG1lbnRzIG9yIHN1Y2Nlc3NvciBhZ3JlZW1lbnRzIHRoZXJldG8ufXtccnRsY2hcZmNzMSBcYWYxXGFmczE2IFxsdHJjaFxmY3MwIFxjczg5XGZzMTZcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBIYXJkaW4gU29sYXIgSVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEl9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEl9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIEludGVyY29ubmVjdGlvbiBBZ3JlZW1lbnR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSANClxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDg1NzMyNiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBzaGFsbCBtZWFuIHRoYXQgY2VydGFpbiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBJbnRlcmNvbm5lY3Rpb24gU2VydmljZSBBZ3JlZW1lbnQgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgdG8gYmUgZW50ZXJlZCBpbnRvfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIGJ9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDQ4NTczMjYgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgeSBhbmQgYW1vbmcgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEhhcmRpbiBTb2xhciBJSX17XHJ0bGNoXGZjczEgDQpcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgSX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAsIFBKTSwgYW5kIHRoZSBUcmFuc21pdHRpbmcgVXRpbGl0eX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0ICx9e1xydGxjaFxmY3MxIA0KXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTMxMjM5OCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5NTEwNjA5IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGFuZCBhbnkgYW1lbmRtZW50cyBvciBzdWNjZXNzb3IgYWdyZWVtZW50cyB0aGVyZXRvfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NCAufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEhhcmRpbiBTb2xhciBQZXJtaXR0ZWQgQ2FwYWNpdFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHl9e1xydGxjaFxmY3MxIFxhZjEgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIHNoYWxsIGhhdmUgdGhlIG1lYW5pbmcgc2V0IGZvcnRoIGluIHRoZSBSZWNpdGFscy4NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBIYXJkaW4gU29sYXIgSUkgUGVybWl0dGVkIENhcGFjaXR5fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQpcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBzaGFsbCBoYXZlIHRoZSBtZWFuaW5nIHNldCBmb3J0aCBpbiB0aGUgUmVjaXRhbHMuDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgSGFyZGluIFNvbGFyIElJSSBQZXJtaXR0ZWQgQ2FwYWNpdHl9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANClxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIHNoYWxsIGhhdmUgdGhlIG1lYW5pbmcgc2V0IGZvcnRoIGluIHRoZSBSZWNpdGFscy4NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBIYXJkaW4gU29sYXIgSUlJIFBQQX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgc2hhbGxcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgbWVhbiB0aGF0IGNlcnRhaW4gUG93ZXIgUHVyY2hhc2UgQWdyZWVtZW50fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgb3Igb3RoZXIgYWdyZWVtZW50IGZvciB0aGUgc2FsZSBvZiBlbGVjdHJpY2l0eSBnZW5lcmF0ZWQgYnkgSGFyZGluIFNvbGFyIElJSSB0byBiZSBleGVjdXRlZCBieSBhbmQgYmV0d2VlbiBIYXJkaW4gU29sYXIgSUlJIGFuZCBhIHRoaXJkIHBhcnR5IHBvd2VyIHB1cmNoYXNlciBhZnRlciB0aGUgZGF0ZSBoZXJlb2YufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgSW1wbGVtZW50ZWQgUHJvamVjdH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgc2hhbGwgbWVhXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgbiBQcm9qZWN0IHRoYXQgaGFzIGFjaGlldmVkIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgaXRzIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBDb21tZXJjaWFsIE9wZXJhdGlvbiBEYXRlLg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEluZGVtbml0ZWV9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCANClwnOTR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIHNoYWxsIGhhdmUgdGhlIG1lYW5pbmcgc2V0IGZvcnRoIGluIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qgew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICAgUkVGIF9SZWY0ODAzNTM1MCBcXHcgXFxoIFxcKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNDAwMzgwMDMwMDAzMzAwMzUwMDMzMDAzNTAwMzAwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGNmMVxpbnNyc2lkNzk0MjYyXGNoYXJyc2lkNzk0MjYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDkuNChhKX19fVxzZWN0ZCBcbHRyc2VjdA0KXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggLg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEluZGVtbml0b3J9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCANClwnOTR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIHNoYWxsIGhhdmUgdGhlIG1lYW5pbmcgc2V0IGZvcnRoIGluIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qgew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICAgUkVGIF9SZWY0ODAzNTM1MCBcXHcgXFxoIFxcKiBNRVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNDAwMzgwMDMwMDAzMzAwMzUwMDMzMDAzNTAwMzAwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGNmMVxpbnNyc2lkNzk0MjYyXGNoYXJyc2lkNzk0MjYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDkuNChhKX19fVxzZWN0ZCBcbHRyc2VjdA0KXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggLg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzXGxvY2hcZjAgXGhpY2hcZjAgSGFyZGluIElJSSBJbml0aWFsIFBheW1lbnRcJzk0XGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCnNoYWxsIGhhdmUgdGhlIG1lYW5pbmcgc2V0IGZvcnRoIGluIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgUkVGIF9SZWY1MTgyNDY5NCBcXA0KdyBcXGggfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM1MDAzMTAwMzgwMDMyMDAzNDAwMzYwMDM5MDAzNDAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDc5NDI2MiANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDYuMihiKX19fVxzZWN0ZCBcbHRyc2VjdFxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IC59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQzNDI1OTY2IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTNcbG9jaFxmMCBcaGljaFxmMCBIU0lJIFJldmVydGVyXCc5NFxsb2NoXGYwICBzaGFsbH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCiBoYXZlIHRoZSBtZWFuaW5nIHNldCBmb3J0aCBpbiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgU2VjdGlvbiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIFJFRiBfUmVmNTQyNjk0OTUgXFx3IFxcDQpoIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNTAwMzQwMDMyMDAzNjAwMzkwMDM0MDAzOTAwMzUwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ3OTQyNjIgDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAxMi42KGEpfX19XHNlY3RkIFxsdHJzZWN0XHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggLn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMzQyNTk2NiBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzXGxvY2hcZjAgSFNJfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgSX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMzQyNTk2NiANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFxoaWNoXGYwIEkgUmV2ZXJ0ZXJcJzk0XGxvY2hcZjAgIHNoYWxsfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBoYXZlIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHRoZSBtZWFuaW5nIHNldCBmb3J0aCBpbiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgUkVGIF9SZWY1NDI2OTUxNyBcXHcgXFxoIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IA0Ke1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM1MDAzNDAwMzIwMDM2MDAzOTAwMzUwMDMxMDAzNzAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDc5NDI2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAxMi42KGIpfX19XHNlY3RkIFxsdHJzZWN0DQpccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCAufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQpccGFyIFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgSW5mbGF0aW9uIEFkanVzdG1lbnQgRmFjdG9yfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMSANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBzaGFsbCBtZWFuIGEgZnJhY3Rpb24sIHRoZSBudW1lcmF0b3Igb2Ygd2hpY2ggaXMgdGhlIEdEUElQRCBmb3IgdGhlIHByaW9yIGNhbGVuZGFyIHllYXIgYW5kIHRoZSBkZW5vbWluYXRvciBvZiB3aGljaCBpcyB0aGUgR0RQSVBEIGZvciB0aGUgbmV4dCBwcmlvciBjYWxlbmQNClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGFyIHllYXI7IHByb3ZpZGVkIHRoYXQgc3VjaCBmcmFjdGlvbiBzaGFsbCBiZSBjb252ZXJ0ZWQgdG8gZGVjaW1hbCBmb3JtYXQgdG8gYmUgY2FycmllZCB0byBmaXZlICg1KSBkZWNpbWFsIHBsYWNlcy4NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBJbnRlcmNvbm5lY3Rpb24gQWdyZWVtZW50c317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgc2hhbGwgbWVhbiB0aGUgSGFyZGluIFNvbGFyIEludGVyY29ubmVjdGlvbiBBZ3JlZW1lbnQsIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KdGhlIEhhcmRpbiBTb2xhciBJSSBJbnRlcmNvbm5lY3Rpb24gQWdyZWVtZW50IGFuZCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgdGhlIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEhhXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpyZGluIFNvbGFyIElJSSBJbnRlcmNvbm5lY3Rpb24gQWdyZWVtZW50fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IC4NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBJbnRlcmNvbm5lY3Rpb24gRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgc2hhbGwgbWVhbiB0aG9zZSBmYWNpbGl0aWVzIG9mIGEgVHJhbnNtaXR0aW5nIFV0aWxpdHkgYXQgdGhlIEludGVyY29ubmVjdGlvbiBQb2ludHMuDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgSW50ZXJjb25uZWN0aW9uIFBvaW50c317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgc2hhbGwgbWVhbiBhbnkgb2YgdGhlIHBvaW50cyBkZXNpZ25hdGVkIGluIHRoZSBJbnRlcmNvbm5lY3Rpb24gQWdyZWVtZW50cyBmXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpvciB0aGUgaW50ZXJjb25uZWN0aW9uIG9mIHRoZSBhcHBsaWNhYmxlIFRyYW5zbWl0dGluZyBVdGlsaXR5IHdpdGggdGhlIFNoYXJlZCBGYWNpbGl0aWVzIHVzZWQgZm9yIGRlbGl2ZXJpbmcgZWxlY3RyaWNpdHkgdG8gc3VjaCBUcmFuc21pdHRpbmcgVXRpbGl0eS4NClxwYXIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgSW52ZXN0bWVudCBEb2N1bWVudH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgb3IgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEludmVzdG1lbnQgRG9jdW1lbnRzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCiBzaGFsbCBtZWFuIHRob3NlIGRvY3VtZW50cyBnb3Zlcm5pbmcgYSBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBzIHJlbGF0DQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBpb25zaGlwIHdpdGggaXRzIGludmVzdG9ycy4NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTMzNzIwNiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBKb2luaW5nIENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTMzNzIwNiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgc2hhbGx9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCiBtZWFuIEhhcmRpbiBJSSBhbmQvb3IgSGFyZGluIElJSSBhcyB0aGUgY29udGV4dCBtYXkgcmVxdWlyZX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTMzNzIwNiAufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDk1MTA2MDkgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M1xsb2NoXGYwIFxoaWNoXGYwIEpvaW5pbmcgQ28tVGVuYW50IEluaXRpYWwgRmlsaW5nIERhdGVcJzk0XGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCnNoYWxsIGhhdmUgdGhlIG1lYW5pbmcgc2V0IGZvcnRoIGluIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgUkVGIF9SZWY1NDgwMzg4OSBcXA0KciBcXGggfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM1MDAzNDAwMzgwMDMwMDAzMzAwMzgwMDM4MDAzOTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDc5NDI2MiANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDE2LjQoYyl9fX1cc2VjdGQgXGx0cnNlY3RccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCAufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDk1MTA2MDkgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgTGllbn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTR9ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgc2hhbGwgbWVhbiBhXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpueSBsaWVuIChzdGF0dXRvcnkgb3Igb3RoZXJ3aXNlKSwgbW9ydGdhZ2UsIGRlZWQgb2YgdHJ1c3QsIGNsYWltLCBvcHRpb24sIHJpZ2h0IHRvIHB1cmNoYXNlLCByaWdodCB0byBvYnRhaW4sIGxlYXNlLCBlYXNlbWVudCwgY2hhcmdlLCBwbGVkZ2UsIHNlY3VyaXR5IGludGVyZXN0LCBoeXBvdGhlY2F0aW9uLCBhc3NpZ25tZW50LCB1c2UgcmVzdHJpY3Rpb24gb3Igb3RoZXIgZW5jdW1icmFuY2Ugb2YgYW55IGtpbmQgb3IgbmF0dXJlIHdoYXRzb2UNClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHZcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBlciwgd2hldGhlciB2b2x1bnRhcnkgb3IgaW52b2x1bnRhcnksIGNob2F0ZSBvciBpbmNob2F0ZSAoaW5jbHVkaW5nIGFueSBhZ3JlZW1lbnQgdG8gZ2l2ZSBhbnkgb2YgdGhlIGZvcmVnb2luZywgYW55IGNvbmRpdGlvbmFsIHNhbGUgb3Igb3RoZXIgdGl0bGUgcmV0ZW50aW9uIGFncmVlbWVudCkuDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgTG9zc2VzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NA0KfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBzaGFsbCBoYXZlIHRoZSBtZWFuaW5nIHNldCBmb3J0aCBpbiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgU2VjdGlvbiB9e1xmaWVsZHtcKlxmbGRpbnN0IHsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgIFJFRiBfUmVmNDgwMzU0NjMgXFx3IFxcaCBcXCogTUVSR1xoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEVGT1JNQVQgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM1MDAzNDAwMzYwMDMzMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxjZjFcaW5zcnNpZDc5NDI2MlxjaGFycnNpZDc5NDI2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAxNS4xKGEpfX19XHNlY3RkIFxsdHJzZWN0DQpccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCAuDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgTWFuYWdlbWVudCBGZWV9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANClxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIHNoYWxsIGhhdmUgdGhlIG1lYW5pbmcgc2V0IGZvcnRoIGluIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANClNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBSRUYgX1JlZjQ4MDM3NDQ1IFxcdyBcXGggfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM3MDAzNDAwMzQwMDM1MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNzk0MjYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDYuM319fVxzZWN0ZCBcbHRyc2VjdA0KXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggLg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIE5FUkN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIHNoYWxsIG1lYW4gdGhlIE5vcnRoIEFtZXJpY2FuIEVsZWN0cmljIFJlbGlhYmlsaXR5IENvcnBvcmF0aW9uLg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIE5ldCBSZXZlbnVlIExvc3Nlc317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgc2hhbGwgbWVhbiB0aGUgcmVkdWN0aW9uIGluIG5ldCByZXZlbnVlIGNhbGN1bGF0ZWRcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgaW4gYWNjb3JkYW5jZSB3aXRoIG1ldGhvZG9sb2d5IHNldCBmb3J0aCBvbiB9ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBFeGhpYml0IEZ9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggLg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzXGxvY2hcZjAgXGhpY2hcZjAgTmV3IEZhY2lsaXRpZXNcJzk0XGxvY2hcZjAgIHNoYWxsIGhhdmUgdGhlIG1lYW5pbmcgc2V0IGZvcnRoIGluIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTE5ODgwNiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANClNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTE5ODgwNiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgUkVGIF9SZWY0ODAzNTI1NiBcXHcgXFxoIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBcXCogTUVSR0VGT1JNQVQgfXsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUxOTg4MDYge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNTAwMzIwMDM1MDAzNjAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDc5NDI2MiANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDIuNShhKX19fVxzZWN0ZCBcbHRyc2VjdFxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgLg0KXHBhciBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIE5vbi1FeHRlbmRpbmcgQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBzaGFsbCBoYXZlIHRoZSBtZWFuaW5nIHNldCBmb3J0aCBpbiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgU2VjdGlvbiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgIFJFRiBfUmVmNDgwMzUzXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgMDUgXFx3IFxcaCBcXCogTUVSR0VGT1JNQVQgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM1MDAzMzAwMzAwMDM1MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxjZjFcaW5zcnNpZDc5NDI2MlxjaGFycnNpZDc5NDI2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCA3LjJ9fX1cc2VjdGQgXGx0cnNlY3QNClxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IC4NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBOb24tUGF5aW5nIENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgc2hhbGwgaGF2ZSB0aGUgbWVhbmluZyBzZXQgZm9ydGggaW4gfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KU2VjdGlvbiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIFJFRiBfUmVmNDgwMzUzMDAgXFx3IFxcaCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNDAwMzgwMDMwMDAzMzAwMzUwMDMzMDAzMDAwMzAwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ3OTQyNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgNi4xMH19fVxzZWN0ZCBcbHRyc2VjdA0KXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggLg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzXGxvY2hcZjAgXGhpY2hcZjAgTm90aWNlIG9mIEZhaWx1cmUgdG8gQ3VyZVwnOTRcbG9jaFxmMCAgc2hhbGwgaGF2ZSB0aGUgbWVhbmluZyBzZXQgZm9ydGggaW4gfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ0NDc0NTI1IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgU2VjdGlvbiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ0NDc0NTI1IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBSRUYgX1JlZjU0MjYyMDU0IFxcdyBcXGggfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIFxcDQoqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDQ3NDUyNSB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzUwMDM0MDAzMjAwMzYwMDMyMDAzMDAwMzUwMDM0MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQ3OTQyNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgOS42KGEpKGlcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBpKShDKX19fVxzZWN0ZCBcbHRyc2VjdFxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ2MTc4MjcgDQoufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQpccGFyIFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgTyZNIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIHNoYWxsIG1lYW4gYW4gb3BlcmF0aW9ucyBhbmQgbWFpbnRlbmFuY2UgYnVpbGRpbmcsIHBhcmtpbmcgYXJlYSwgc2hvcCwgc3RvcmFnZSBhcmVhIGFuZCByZWxhdGVkIGFwcHVydGVuYW5jZXN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCiBpbmNsdWRpbmcgYWxsIG1lY2hhbmljYWwsIGVsZWN0cmljYWwgYW5kIHBsdW1iaW5nfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IC4NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ0MDg1Mzc2IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTNcbG9jaFxmMCBcaGljaFxmMCBPZmZ0YWtlclwnOTRcbG9jaFxmMCAgc2hhbGwgbWVhbiBlYWNoIFByb2plY3RcaGljaFxmMCBccnF1b3RlIFxsb2NoXGYwIHMgY291bnRlcnBhcnR5IHRvIHRoZSBJbnRlcmNvbm5lY3RpXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpvbiBBZ3JlZW1lbnRzLn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXHBhciBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzXGxvY2hcZjAgXGhpY2hcZjAgT3BlcmF0aW9uYWwgQ28tVGVuYW50XCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgc2hhbGwgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgbWVhbiB9ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNjYzNzU3MCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBIYXJkaW59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCiBTb2xhciBhbmQgYW55IEpvaW5pbmcgQ28tVGVuYW50IHRoYXQgaGFzIGFjaGlldmVkIGl0cyBSZWd1bGF0b3J5IEFwcHJvdmFsIERhdGUgYW5kIG93bnMgVW5kaXZpZGVkIEludGVyZXN0cyBpbiBib3RoIFNoYXJlZCBQcmVtaXNlcyBhbmQgU2hhcmVkIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDExMjkwNzEyIC59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M1xsb2NoXGYwIFxoaWNoXGYwIE9wZXJhdGlvbmFsIFByby1SYXRhIFNoYXJlXCc5NFxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgc2hhbGwgaGF2ZSB0aGUgDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBtZWFuaW5nIHNldCBmb3J0aCBpbiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEwNTAyNjIxIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEV4aGliaXQgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgR317XHJ0bGNoXGZjczEgXGFmMSANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IC59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgDQpccGFyIFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgT3BlcmF0aXZlIERhdGV9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHNoYWxsIG1lYW4gdGhlIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDA4NTM3NiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCmRheSBhZnRlciBhbGwgb2YgdGhlIGZvbGxvd2luZyBjb25kaXRpb25zIGhhdmUgYmVlbiBzYXRpc2ZpZWQgd2l0aCByZXNwZWN0IHRvIEhhcmRpbiBTb2xhcjogIChpKSBGRVJDIGFsbG93cyB0aGlzIEFncmVlbWVudCB0byBiZWNvbWUgZWZmZWN0aXZlIGFzIGEgcmF0ZSBzY2hlZHVsZSwgdW5kZXIgU2VjdGlvbiAyMDUgb2YgdGhlIEZQXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgXGhpY2hcZjAgDQpBLCBvZiBIYXJkaW4gU29sYXI7IChpaSkgaWYgSGFyZGluIFNvbGFyIGRldGVybWluZXMgdGhhdCBpdCB3aWxsIG5vdCBxdWFsaWZ5IGZvciBhIGJsYW5rZXQgb3BlbiBhY2Nlc3MgdHJhbnNtaXNzaW9uIHdhaXZlciB1bmRlciAxOCBDLkYuUi4gXCdhN1xsb2NoXGYwIDM1LjI4KGQpKDIpIG9mIHRoZSBDb21taXNzaW9uXGhpY2hcZjAgXHJxdW90ZSBcbG9jaFxmMCANCnMgcmVndWxhdGlvbnMgdGhhdCBncmFudCBhbiBGUEEgcHVibGljIHV0aWxpdHkgdGhhdCBvd25zLCBjb250cm9scyBvciBvcGVyYXRlcyBvbmx5IElcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBuXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgdGVyY29ubmVjdGlvbiBDdXN0b21lclxoaWNoXGYwIFxycXVvdGUgXGxvY2hcZjAgcyBJbnRlcmNvbm5lY3Rpb24gRmFjaWxpdGllcyBhIHdhaXZlciBmcm9tIEZFUkNcaGljaFxmMCBccnF1b3RlIA0KXGxvY2hcZjAgXGhpY2hcZjAgcyBvcGVuIGFjY2VzcyByZXF1aXJlbWVudHMgaW4gMTggQy5GLlIuIFwnYTdcbG9jaFxmMCAzNS4yOCwxOCBDLkYuUi4gUGFydCAzNyBQYXJ0IDE4IEMuRi5SLiBQYXJ0IDM1OCBvZiBGRVJDXGhpY2hcZjAgXHJxdW90ZSBcbG9jaFxmMCBzIG9wZW4gdHJhbnNtaXNzaW9uIHJ1bGVzLCBGRVJDIGhhcyBpc3N1ZWQgYW4gb3JkZXIgZ3JhbnRpbmcgSGFyZGluIFNvbGFyIHdhaXZlcnMgZnJvbSANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHNcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCB1Y2ggb3BlbiBhY2Nlc3MgdHJhbnNtaXNzaW9uIHJlcXVpcmVtZW50cyBjdXN0b21hcnkgZm9yIGVudGl0aWVzIHRoYXQgb3duIGxpbWl0ZWQgYW5kIGRpc2NyZXRlIGludGVyY29ubmVjdGlvbiB0cmFuc21pc3Npb24gZmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjAzMzYxNSANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICwgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNTA4NTIzNyBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBwcm92aWRlZH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjAzMzYxNSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAsIH17XHJ0bGNoXGZjczEgXGFmMSANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNTA4NTIzNyBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBob3dldmVyfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMDMzNjE1IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KLCB0aGF0IGlmIEhhcmRpbiBTb2xhciBkb2VzIG5vdCBzdWJtaXQgdG8gRkVSQyBieSB0aGUgSGFyZGluIFNvbGFyIEluaXRpYWwgRmlsaW5nIERhdGUgYSByZXF1ZXN0IGZvciBzdVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGNoIG9wZW59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCiBhY2Nlc3MgdHJhbnNtaXNzaW9uIHdhaXZlciBvcmRlciwgdGhlbiB0aGlzIGl0ZW0gKGlpKSBjb25kaXRpb24gc2hhbGwgYmUgZGVlbWVkIHNhdGlzZmllZDsgYW5kfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ0MDg1Mzc2IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KIChpaWkpIEhhcmRpbiBTb2xhciBoYXMgb2J0YWluZWQgZXhlbXB0IHdob2xlc2FsZSBnZW5lcmF0b3Igc3RhdHVzIHB1cnN1YW50IHRvIHRoZSBQdWJsaWMgVXRpbGl0eSBIb2xkaW5nIENvbXBhbnkgQWN0IG9mIDIwMDUgYW5kIEZFUkNcaGljaFxmMCBccnF1b3RlIFxsb2NoXGYwIHMgaW1wbGVtZW50aW5nIHJlZ3VcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCmxhdGlvbnMgd2l0aCByZXNwZWN0IHRvIHRoZSBvd25lcnNoaXAgb2YgaXRzIFByb2plY3QgYW5kIHRoZSBjby10ZW5hbmN5IGFycmFuZ2VtZW50cyBjb250ZW1wbGF0ZWQgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMDMzNjE1IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGhlcmVpbiwgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE1MDg1MjM3IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHByb3ZpZGVkfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMDMzNjE1IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICwgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNTA4NTIzNyANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGhvd2V2ZXJ9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIwMzM2MTUgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgLCB0aGF0IGJlY2F1c2V9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCiBIYXJkaW4gU29sYXIgaGFzIGFscmVhZHkgb2J0YWluZWQgZXhlbXB0IHdob2xlc2FsZSBnZW5lcmF0b3Igc3RhdHVzLCBpZiBIYXJkaW4gU29sYXIgZG9lcyBub3Qgc3VibWl0IHRvIEZFUkMgYnkgdGhlIEhhXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpyZGluIFNvbGFyIEluaXRpYWwgRmlsaW5nIERhdGUgYSBub3RpY2Ugb2Ygc2VsZi1yZWNlcnRpZmljYXRpb24gZm9yIGV4ZW1wdCB3aG9sZXNhbGUgZ2VuZXJhdG9yIHN0YXR1cywgdGhlbiB0aGlzIGl0ZW0gKGlpaSkgY29uZGl0aW9uIHNoYWxsIGJlIGRlZW1lZCBzYXRpc2ZpZWR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggLg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzXGxvY2hcZjAgXGhpY2hcZjAgT1BTQiBQZXJtaXRcJzk0XGxvY2hcZjAgIHNoYWxsIG1lYW4sIHdpdGggcmVzcGVjdCB0byBhbnkgUHJvamVjdCwgYSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDg4NTIzIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KQ2VydGlmaWNhdGUgb2YgRW52aXJvbm1lbnRhbCBDb21wfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgYXRpYmlcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBsaXR5fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4ODUyMyBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgYW5kIFB1YmxpYyBOZWVkfXsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgaXNzdWVkIGJ5IHRoZSBPaGlvIFBvd2VyIFNpdGluZyBCb2FyZCB3aGljaCBwZXJtaXRzIHRoZSBDby1UZW5hbnQgb3duZXIgb2Ygc3VjaCBQcm9qZWN0IHRvIGJ1aWxkIHRoZSBQcm9qZWN0IChpKSB1cCB0byBzdWNoIENvLVRlbmFudFxoaWNoXGYwIFxycXVvdGUgXGxvY2hcZjAgDQpzIFBlcm1pdHRlZCBDYXBhY2l0eSwgYW5kIChpaSkgdXBvbiB0aGUgcmVhbCBwcm9wZXJ0eSBzZXQgZm9ydGggaW4gdGhlIGFwcGxpY2F0aW9uIGZvciBzdWNoIENlcnRpZmljYVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHRlIG9mIEVudmlyb25tZW50YWwgQ29tcGF0aWJpbGl0eSBhbmQgUHVibGljIE5lZWQufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzXGxvY2hcZjAgXGhpY2hcZjAgUGFydGlhbCBBc3NpZ25tZW50IG9mIEVhc2VtZW50c1wnOTR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQogc2hhbGwgaGF2ZSB0aGUgbWVhbmluZyBzZXQgZm9ydGggaW4gfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICAgUkVGIF9SZWY0ODAzNTI2MyANClxcdyBcXGggXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNDAwMzgwMDMwMDAzMzAwMzUwMDMyMDAzNjAwMzMwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcdWxcY2YxXGluc3JzaWQ3OTQyNjJcY2hhcnJzaWQ3OTQyNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgMS4xKGEpfX19XHNlY3RkIFxsdHJzZWN0XHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggLg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBcaGljaFxmMCANCmFydGllc1wnOTR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHNoYWxsIG1lYW4gY29sbGVjdGl2ZWx5IHRoZSBDby1UZW5hbmN5IE1hbmFnZXIgYW5kIGVhY2ggQ28tVGVuYW50Lg0KXHBhciBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFBlcm1pdH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgc2hhbGwgbWVhbn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCiBhbnkgYWN0aW9uLCBjZXJ0aWZpY2F0ZSwgY2VydGlmaWNhdGUgb2YgYXV0aG9yaXphdGlvbiwgcmVnaXN0cmF0aW9uLCByZWNvcmRpbmcsIG5vdGljZSwgZGVjcmVlLCBkZWNsYXJhdGlvbiwgZmlsaW5nLCBhcHByb3ZhbCwgY29uc2VudCwgd2FpdmVyLCBleGVtcHRpb24sIHZhcmlhbmNlLCBmcmFuY2hpc2UsIG9yZGVyLCBwZXJtaXQsIHJpZ2h0LCBsaWNlbnNlIG9yIG90aGVyIGF1dGhvcml6YXRpb24gb2Ygb3INClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBmcm9tIGEgR292ZXJubWVudGFsIEF1dGhvcml0eSBvciB0aGUgZ2l2aW5nIG9mIG5vdGljZSB0byBhbnkgR292ZXJubWVudGFsIEF1dGhvcml0eS4NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBQZXJtaXR0ZWQgQ2FwYWNpdHl9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANClxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIHNoYWxsIG1lYW4gdGhlIEhhcmRpbiBTb2xhciBQZXJtaXR0ZWQgQ2FwYWNpdHl9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAsIH17DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHRoZSBIYXJkaW4gU29sYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgSUkgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgUGVybWl0dGVkIENhcGFjaXR5IGFuZC9vciB0aGUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgSGFyZGluIFNvbGFyIElJSSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpQZXJtaXR0ZWQgQ2FwYWNpdHksIGFzIHRoZSBjb250ZXh0XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIG1heSByZXF1aXJlLg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFBlcnNvbn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTQNCn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCiBzaGFsbCBtZWFuIGFuIGluZGl2aWR1YWwsIGNvcnBvcmF0aW9uLCBsaW1pdGVkIGxpYWJpbGl0eSBjb21wYW55LCB2b2x1bnRhcnkgYXNzb2NpYXRpb24sIGpvaW50IHN0b2NrIGNvbXBhbnksIGJ1c2luZXNzIHRydXN0LCBwYXJ0bmVyc2hpcCwgYWdlbmN5LCBHb3Zlcm5tZW50YWwgQXV0aG9yaXR5IG9yIG90aGVyIGVudGl0eS4NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBQSk19e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIHNoYWxsIG1lYW4gUEpNIEludGVyY29ubmVjdGlvbiwgTC5MLkMuDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgUG93ZXIgUHVyY2hhc2UgQWdyZWVtZW50fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQpcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBvciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgUG93ZXIgUHVyY2hhc2UgQWdyZWVtZW50c317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQogc2hhbGwgbWVhbiB0aGUgSGFyZGluIFNvbGFyIFBvd2VyIFB1cmNoYXNlIEFncmVlbWVudH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICwgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KdGhlIEhhcmRpbiBTb2xhciBJSSBQb3dlciBQdXJjaGFzZSBBZ3JlZW1lbnR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgYW5kL29yIHRoZSBIYXJkaW4gU29sYXIgSUlJIFBvd2VyIFB1cmNoYXNlIEFncmVlbWVudH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCAuDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgUHJpbWUgUmF0ZX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIA0KXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgc2hhbGwgbWVhbiB0aGUgcmF0ZSBwdWJsaXNoZWQgaW4gfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgVGhlIFdhbGwgU3RyZWV0IEpvdXJuYWx9ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgYXMgdGhlIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBQcmltZSBSYXRlfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCiBmcm9tIHRpbWUgdG8gdGltZSAob3IsIGlmIG1vcmUgdGhhbiBvbmUgc3VjaCByYXRlIGlzIHB1Ymxpc2hlZCwgdGhlIGFyaXRobWV0aWMgbWVhbiBvZiBzdWNoIHJhdGVzKSwgaW4gZWl0aGVyIGNhc2UgZGV0ZXJtaW5lZCBhcyBvZiB0aGUgZGF0ZSB0aGUgb2JsaWdhdGlvbiB0byBwYXkgaW50ZXJlc3QgYXJpc2VzLCBidXQgaW4gbm8gZXZlbnQgbW9yZSB0aGFuIHRoZSBtYVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KeGltdW0gcmF0ZSBwZXJtaXR0ZWQgYnkgQXBwbGljYWJsZSBMYXcuDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgUHJvamVjdH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIA0KXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgb3IgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFByb2plY3RzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgc2hhbGwgaGF2ZSB0aGUgbWVhbmluZyBzZXQgZm9ydGggaW4gdGhlIFJlY2l0YWxzLg0KDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgUHJvamVjdCBBZ3JlZW1lbnR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANClxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIG9yIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBQcm9qZWN0IEFncmVlbWVudHN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KIHdpdGggcmVzcGVjdCB0byBlYWNoIFByb2plY3Qgc2hhbGwgaGF2ZSB0aGUgbWVhbmluZyBzZXQgZm9ydGggaW4gdGhlIGFwcGxpY2FibGUgRmFjaWxpdHkgTWFuYWdlbWVuXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgdCBBZ3JlZW1lbnQgZm9yIHN1Y2ggUHJvamVjdC4NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBQcm9wb3NlZCBSZXBsYWNlbWVudCBDb21wb25lbnR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANClxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIHNoYWxsIGhhdmUgdGhlIG1lYW5pbmcgc2V0IGZvcnRoIGluIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANClNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICAgUkVGIF9SZWY0ODAzNTI1MyBcXHcgXFxoIFxcKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNDAwMzgwMDMwMDAzMzAwMzUwMDMyMDAzNTAwMzMwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGNmMVxpbnNyc2lkNzk0MjYyXGNoYXJyc2lkNzk0MjYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDIuMyhiKX19fVxzZWN0ZCBcbHRyc2VjdA0KXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggLg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFBydWRlbnQgSW5kdXN0cnkgUHJhY3RpY2V9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANClxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIHNoYWxsIG1lYW4gdGhvc2UgcHJhY3RpY2VzLCBtZXRob2RzIGFuZCBhY3RzIHRoYXQgd291bGQgYmUgaW1wbGVtZW50ZVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KZCBhbmQgZm9sbG93ZWQgYnkgYSBwcnVkZW50IG9wZXJhdG9yIHByb3ZpZGluZyBzZXJ2aWNlcyBzaW1pbGFyIHRvIHRob3NlIGJlaW5nIHByb3ZpZGVkIGhlcmV1bmRlciBmb3IgcmVuZXdhYmxlIGdlbmVyYXRpbmcgZmFjaWxpdGllcyBzaW1pbGFyIHRvIHRoZSBQcm9qZWN0cyBpbiB0aGUgZ2VvZ3JhcGhpYyBhcmVhIG9mIHRoZSBQcm9qZWN0cyBhbmQgUEpNIGR1cmluZyB0aGUgcmVsZXZhbnQgdGltZSBwZXJpb2QsIHdoaWNoIHByYWN0aWNlcywgDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBtXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpldGhvZHMgYW5kIGFjdHMsIGluIHRoZSBleGVyY2lzZSBvZiByZWFzb25hYmxlIGp1ZGdtZW50IGluIHRoZSBsaWdodCBvZiB0aGUgZmFjdHMga25vd24gYXQgdGhlIHRpbWUgdGhlIGRlY2lzaW9uIHdhcyBtYWRlLCBjb3VsZCByZWFzb25hYmx5IGhhdmUgYmVlbiBleHBlY3RlZCB0byBhY2NvbXBsaXNoIHRoZSBkZXNpcmVkIHJlc3VsdCBjb25zaXN0ZW50IHdpdGggdGhlIHJlcXVpcmVtZW50cyBvZiBBcHBsaWNhYmxlIExhdy4gIEluIGRldGVybWkNClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIG5caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBpbmcgd2hpY2ggcHJhY3RpY2VzLCBtZXRob2RzIGFuZCBhY3RzIGNvbnN0aXR1dGUgUHJ1ZGVudCBJbmR1c3RyeSBQcmFjdGljZSwgZHVlIHJlZ2FyZCBzaGFsbCBiZSBnaXZlbiB0bywgYW1vbmcgb3RoZXIgdGhpbmdzLCBtYW51ZmFjdHVyZXJzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQpcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgd2FycmFudGllcywgY29udHJhY3R1YWwgb2JsaWdhdGlvbnMsIHRoZSByZXF1aXJlbWVudHMgb3IgZ3VpZGFuY2Ugb2YgR292ZXJubWVudGFsIEF1dGhvcml0aWVzLCBUcmFuc21pdHRpbmcgVXRpbGl0eQ0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQosIEFwcGxpY2FibGUgTGF3cywgYW5kIHRoZSByZXF1aXJlbWVudHMgb2YgaW5zdXJlcnMsIGJ1dCBpbiBubyBldmVudCBzaGFsbCBQcnVkZW50IEluZHVzdHJ5IFByYWN0aWNlIGJlIGludGVycHJldGVkIHRvIHJlcXVpcmUgYW55IHByYWN0aWNlLCBtZXRob2Qgb3IgYWN0IHRoYXQgdmlvbGF0ZXMgQXBwbGljYWJsZSBMYXdzLiAgV2l0aCByZXNwZWN0IHRvIENvLVRlbmFuY3kgTWFuYWdlciwgUHJ1ZGVudCBJbmR1c3RyeSBQcmFjdGljZSBpcyBub3QNClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCmxpbWl0ZWQgdG8gdGhlIG9wdGltdW0gcHJhY3RpY2VzLCBtZXRob2RzIG9yIGFjdHMgdG8gdGhlIGV4Y2x1c2lvbiBvZiBhbGwgb3RoZXJzLCBidXQgcmF0aGVyIGluY2x1ZGUgYSBzcGVjdHJ1bSBvZiBwb3NzaWJsZSBwcmFjdGljZXMsIG1ldGhvZHMgb3IgYWN0cyBjb21tb25seSBlbXBsb3llZCBpbiB0aGUgcmVuZXdhYmxlIHBvd2VyIGdlbmVyYXRpb24gaW5kdXN0cnkuDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgUXVhbGlmaWVkIFJlcGxhY2VtZW50IENvbXBvbmVudH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgc2hhbGwgbWVhXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpuIGEgcmVwbGFjZW1lbnQgY29tcG9uZW50IHRoYXQgaXMgKGkpIG5ldyBvciAoaWkpIChhKSBpcyByZWZ1cmJpc2hlZCBmb3IgdGhlIHB1cnBvc2UgZm9yIHdoaWNoIGl0IGlzIGludGVuZGVkIGFuZCBpbiBnb29kIGNvbmRpdGlvbiwgYW5kIChiKSBzdWNoIHJlcGxhY2VtZW50IGNvbXBvbmVudCBhbmQgdGhlIGluc3RhbGxhdGlvbiB0aGVyZW9mIHdvdWxkIGNvbXBseSB3aXRoIFBydWRlbnQgSW5kdXN0cnkgUHJhY3RpY2UuDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTNcbG9jaFxmMCBRdWl0Y2xhaW0gRGVlXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgXGhpY2hcZjAgZFwnOTR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQogc2hhbGwgaGF2ZSB0aGUgbWVhbmluZyBzZXQgZm9ydGggaW4gfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ0ODU3MzI2IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTA0OTIwNTcgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQogIFJFRiBfUmVmNDgwMzUyNDAgXFx3IFxcaCBcXCogTUVSR0VGT1JNQVQgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMDQ5MjA1NyB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM1MDAzMjAwMzQwMDMwMDAwMDAwfX19e1xmbGRyc2x0IHsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGNmMVxpbnNyc2lkNzk0MjYyXGNoYXJyc2lkNzk0MjYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDEuMShhKX19fVxzZWN0ZCBcbHRyc2VjdFxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEwNDkyMDU3IC59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgUkVDc317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTR9ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgc2hhbGwgaGF2ZSB0aGUgbWVhbmluZyBzZXQgZm9ydGggaW4gfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEV4aGliaXQgRn17XHJ0bGNoXGZjczEgXGFmMSANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IC4NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M1xsb2NoXGYwIFxoaWNoXGYwIFJlZ3VsYXRvcnkgQXBwcm92YWwgRGF0ZVwnOTRcbG9jaFxmMCAgc2hhbGwgbWVhbiB0aGUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KZGF5IGFmdGVyIGFsbCBvZiB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnMgaGF2ZSBiZWVuIHNhdGlzZmllZH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB3aXRoIHJlc3BlY3QgdG8gdGhlIHJlbGV2YW50IEpvaW5pbmcgQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgOiAgKGkpIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHRoZSBPcGVyYXRpdmUgRGF0ZSBoYXMgb2NjdXJyZWQsIChpaSkgc3VjaCBKb2luaW5nIENvLVRlbmFudCBoYXMgb2J0YWluZWQgYW4gT1BTQiBQZXJtaXQsIChpaWkpIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEZFUkMgaGFzIGFjY2VwdGVkIHRoaXMgQWdyZWVtZW50IGZvciBmaWxpbmcgYnkgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgc3VjaH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBKb2luaW5nIENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBhcyBpdHMgcmF0ZSBzY2hlZHVsZSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgdW5kZXIgU2VjdGlvbiAyXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgMDUgb2YgdGhlIEZQQSB3aXRoIHRoZSBlZmZlY3RpdmUgZGF0ZSByZXF1ZXN0ZWQgYnkgfXsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBzdWNoIEpvaW5pbmcgQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDsgKGl9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHZ9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgKSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBcaGljaFxmMCANCmlmIHN1Y2ggSm9pbmluZyBDby1UZW5hbnQgZGV0ZXJtaW5lcyB0aGF0IGl0IHdpbGwgbm90IHF1YWxpZnkgZm9yIGEgYmxhbmtldCBvcGVuIGFjY2VzcyB0cmFuc21pc3Npb24gd2FpdmVyIHVuZGVyIDE4IEMuRi5SLiBcJ2E3XGxvY2hcZjAgMzUuMjgoZCkoMikgb2YgdGhlIENvbW1pc3Npb25caGljaFxmMCBccnF1b3RlIFxsb2NoXGYwIHMgcmVndWxhdGlvbnMgdGhhdCBnclxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KYW50IGFuIEZQQSBwdWJsaWMgdXRpbGl0eSB0aGF0IG93bnMsIGNvbnRyb2xzIG9yIG9wZXJhdGVzIG9ubHkgSW50ZXJjb25uZWN0aW9uIEN1c3RvbWVyXGhpY2hcZjAgXHJxdW90ZSBcbG9jaFxmMCBzIEludGVyY29ubmVjdGlvbiBGYWNpbGl0aWVzIGEgd2FpdmVyIGZyb20gRkVSQ1xoaWNoXGYwIFxycXVvdGUgXGxvY2hcZjAgXGhpY2hcZjAgcyBvcGVuIGFjY2VzcyByZXF1aXJlbWVudHMgaW4gMTggQy5GLlIuIFwnYTdcbG9jaFxmMCANCjM1LjI4LDE4IEMuRi5SLiBQYXJ0IDM3IFBhcnQgMTggQy5GLlIuIFBhcnQgMzU4IG9mIEZFUkNcaGljaFxmMCBccnF1b3RlIFxsb2NoXGYwIHMgb3BlbiB0cmFuc21pc3Npb24gcnVcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBsXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgZXMsIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCkZFUkMgaGFzIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGlzc3VlZCBhbiBvcmRlciBncmFudGluZ317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBzdWNofXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBKb2luaW5nIENvLVRlbmFudCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCB3YWl2ZXJzIGZyb20gfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgc3VjaH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCiBvcGVuIGFjY2VzcyB0cmFuc21pc3Npb24gcmVxdWlyZW1lbnRzIGN1c3RvbWFyeSBmb3IgZW50aXRpZXMgdGhhdCBvd24gbGltaXRlZCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBhbmQgZGlzY3JldGUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgaW50ZXJjb25uZWN0aW9uIHRyYW5zbWlzc2lvbiBmYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5NTEwNjA5IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICwgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5NTEwNjA5IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KcHJvdmlkZWQsIGhvd2V2ZXJ9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDk1MTA2MDkgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgLCB0aGF0IGlmIHN1Y2ggSm9pbmluZyBDby1UZVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KbmFudCBkb2VzIG5vdCBzdWJtaXQgdG8gRkVSQyBieSB0aGUgSm9pbmluZyBDby1UZW5hbnQgSW5pdGlhbCBGaWxpbmcgRGF0ZSBhIHJlcXVlc3QgZm9yIHN1Y2ggb3BlbiBhY2Nlc3MgdHJhbnNtaXNzaW9uIHdhaXZlciBvcmRlciwgdGhlbiB0aGlzIGl0ZW0gKGl2KSBjb25kaXRpb24gc2hhbGwgYmUgZGVlbWVkIHNhdGlzZmllZH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIGFzIG9mIHRoZSB9e1xydGxjaFxmY3MxIFxhYlxhZjEgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDEyMDg1MjU4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFtSRURBQ1RFRF19e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgZGF5IGZvbGxvd2luZyB0aGUgSm9pbmluZyBDby1UZW5hbnQgSW5pdGlhbCBGaWwNClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGluZyBEYXRlfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDsgKH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHZ9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCApIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHN1Y2h9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMSANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgSm9pbmluZyBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIGhhfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgc317DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBvYnRhaW5lZCBleGVtcHQgd2hvbGVzYWxlIGdlbmVyYXRvciBzdGF0dXMgcHVyc3VhbnQgdG8gdGhlIFB1YmxpYyBVdGlsaXR5IEhvbGRpbmcgQ29tcGFueSBBY3Qgb2YgMjAwNSBhbmQgRkVSQ317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgcyBpbXBsZW1lbnRpbmcgcmVndWxhdGlvbnMgd2l0aCByZXNwZWN0IHRvIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KdGhlIG93bmVyc2hpcCBvZiBpdHMgUHJvamVjdCBhbmQgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHRoZSBjby10ZW5hbmN5IGFycmFuZ2VtZW50cyBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBjb250ZW1wbGF0ZWQgaGVyZWluOyAodn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgaX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCApIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGFuIG9yZGVyIGZyb20gRkVSQyBncmFudGluZyBTZWN0aW9uIDIwMyBhcHByb3ZhbCBpZiB9ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCB0aGUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgSm9pbmluZyBDby1UZW5hbnQgZGV0ZXJtaW5lc317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCB0aGF0IHRoZSB0aGVuLWN1cnJlbnQgRkVSQyByZWd1bGF0aW9ucyByZXF1aXJlIGl0IHRvIGFjcXVpcmUsIG9yIGFuIE9wZXJhdGlvbmFsIENvLVRlbmFudCBkZXRlcm1pbmVzIHRoYXQgaXQgbmVlZHN9ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAsIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHByaW9yIGFwcHJvdmFsIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHVuZGVyIFNlY3Rpb24gXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgMjAzIG9mIHRoZSBGUEEgZm9yIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGNsb3Npbmcgb24gdGhlIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHRyYW5zZmVyfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIGJ5IGFuIE9wZXJhdGlvbmFsIENvLVRlbmFudCB0byBhIEpvaW5pbmcgQ28tVGVuYW50IH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCm9mIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHN1Y2ggSm9pbmluZyBDby1UZW5hbnRcaGljaFxmMCBccnF1b3RlIFxsb2NoXGYwIHMgaW5pdGlhbCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgY28tdGVuYW5jeSB9e1xydGxjaFxmY3MxIA0KXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIG93bmVyc2hpcCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgaW50ZXJlc3RzIGNvbnRlbXBsYXRlZCBieSB0aGlzIEFncmVlbWVudCBpbiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgZGVzY3JpYmVkIGluIH17XHJ0bGNoXGZjczEgDQpcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEV4aGliaXQgRH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgaGVyZXRvfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgLH17XHJ0bGNoXGZjczEgXGFmMSANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5NTEwNjA5IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE0NjkyOTQzIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHByb3ZpZGVkXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgLCBob3dldmVyfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDk1MTA2MDkgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQosIHRoYXQgaWYgbmVpdGhlciBzdWNoIEpvaW5pbmcgQ28tVGVuYW50IG5vciBhbiBPcGVyYXRpb25hbCBDby1UZW5hbnQgaGFzIHN1Ym1pdHRlZCB0byBGRVJDIGJ5IHRoZSBKb2luaW5nIENvLVRlbmFudCBJbml0aWFsIEZpbGluZyBEYXRlIGFuIGFwcGxpY2F0aW9uIGZvciBzdWNoIFNlY3Rpb24gMjAzIGFwcHJvdmFsLCB0aGVuIHRoaXMgaXRlbSAodmkpIGNvbmRpdGlvbiBzaGFsbCBiZSBkZWVtZWQgc2F0aXNmaWVkfXtccnRsY2hcZmNzMSANClxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgYXMgb2YgdGhcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBlIH17XHJ0bGNoXGZjczEgXGFiXGFmMSBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTIwODUyNTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgW1JFREFDVEVEXX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIGRheSBmb2xsb3dpbmcgdGhlIEpvaW5pbmcgQ28tVGVuYW50IEluaXRpYWwgRmlsaW5nIERhdGV9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgOyBhbmQgKHZ9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGlpfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICkgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgc3VjaH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBKb2luaW5nIENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgaGF9ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQogYmVlbiBncmFudGVkIG1hcmtldCBiYXNlZCByYXRlIGF1dGhvcml0eSB1bmRlciBTZWN0aW9uIDIwNSBvZiB0aGUgRlBBIGZvciB0aGUgc2FsZSBvZiBwb3dlciBhdCB3aG9sZXNhbGUgYW5kIGEgd2FpdmVyIGZyb20gRkVSQ317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgcyBhY2NvdW50aW5nIGFuZCByZWxhXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgdGVkIHJlcG9ydGluZyByZXF1aXJlbWVudHMgdW5kZXIgMTggQy5GLlIuIFBhcnRzIDQxLCAxMDEgYW5kIDE0MX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB9ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTM4NzIzMiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAobm90IGluY2x1ZGluZyAxNDEuMTQgYW5kIDE0MS4xNSApfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBvZiBGRVJDfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBzIHJlZ3VsYXRpb25zIGFuZCBibGFua2V0IGF1dGhvcml6YXRpb24gdG8gaXNzdWUgc2VjdXJpdGllcyBvciBhc3N1bWUgbGlhYmlsaXRpZXMgdW5kZXIgU2VjdGlvbiAyMDQgb2YgdGhlIEZQQX17DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgLg0KXHBhciB9e1xydGxjaFxmY3MxIFxhYlxhZjEgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDEyMDg1MjU4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFtSRURBQ1RFRF19e1xydGxjaFxmY3MxIFxhYlxhZjEgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwODUyNTggDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDMyMTg2MTIgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M1xsb2NoXGYwIFJlbGlhYmlsaXR5IGFuZCBTZWN1cml0eVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFxoaWNoXGYwICBSZXF1aXJlbWVudHNcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzIxODYxMlxjaGFycnNpZDMyMTg2MTIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIA0KfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzIxODYxMlxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgc2hhbGwgaGF2ZSB0aGUgbWVhbmluZyBzZXQgZm9ydGggaW4gfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMzIxODYxMlxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgU2VjdGlvbiB9e1xmaWVsZHtcKlxmbGRpbnN0IHsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQzMjE4NjEyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBSRUYgX1JlZjU5NjIwNzkxIFxcciBcXGggfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMzIxODYxMiB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNTAwMzkwMDM2MDAzMjAwMzAwMDM3MDAzOTAwMzEwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ3OTQyNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgNy44fX19XHNlY3RkIFxsdHJzZWN0DQpccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDMyMTg2MTJcY2hhcnJzaWQzMjE4NjEyIC59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQzMjE4NjEyIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFJlbW92YWwgTm90aWNlfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQpcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB7XCpcYmtta3N0YXJ0IF9IbGs1OTYyMDc3NX1zaGFsbCBoYXZlIHRoZSBtZWFuaW5nIHNldCBmb3J0aCBpbiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgIFJFRiBfUmVmNDgwMzUzNTcgXFx3IFxcaCBcXCogTUVSR0VGT1JNQVQgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM1MDAzMzAwMzUwMDM3MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxjZjFcaW5zcnNpZDc5NDI2MlxjaGFycnNpZDc5NDI2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCA5LjYoYSkoaWkpKEEpfX19XHNlY3RkIFxsdHJzZWN0DQpccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMzIxODYxMiAufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IHtcKlxia21rZW5kIF9IbGs1OTYyMDc3NX0NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBSZXBsYWNlbWVudCBDb21wb25lbnR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANClxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIHNoYWxsIG1lYW4gYW55IHJlcGxhXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgY2VtZW50IGNvbXBvbmVudCBvZiB0aGUgU2hhcmVkIEZhY2lsaXRpZXMsIG90aGVyIHRoYW4gQ29uc3VtYWJsZXMuDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgUmVwbGFjZW1lbnQgTm90aWNlfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQpcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBzaGFsbCBoYXZlIHRoZSBtZWFuaW5nIHNldCBmb3J0aCBpbiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgIFJFRiBfUmVmNDgwMzUyNTMgXFx3IFxcaCBcXCogTUVSR0VGT1JNQVQgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM1MDAzMjAwMzUwMDMzMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxjZjFcaW5zcnNpZDc5NDI2MlxjaGFycnNpZDc5NDI2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAyLjMoYil9fX1cc2VjdGQgXGx0cnNlY3QNClxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IC4NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMDQyNTEzOSBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzXGxvY2hcZjAgXGhpY2hcZjAgUmVxdWlyZWQgTWFqb3JpdHlcJzk0XGxvY2hcZjAgIHNoYWxsIG1lYW4gd2l0aCByZXNwZWN0IHRvIGEgZGVjaXNpb24gaW1wYWN0aW5nIChhKSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANClNoYXJlZCBQcmVtaXNlcyBhbmQgRmFjaWxpdGllcywgdGhlIGFmZmlybWF0aXZlIGFwcHJvdmFsIG9mIHRoZSBPcGVyYXRpb25hbCBDby1UZW5hbnRzIGhvbGRpbmcgYXQgbGVhc3QgYSBtYWpvcml0eSBvZiB0aGV9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgT3BlcmF0aW9uYWx9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTA0MjUxMzkgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIFByby1SYXRhIFNoYXJlcyBpbiB0aGUgcmVzcGVjdGl2ZSBTaGFyZWQgUHJlbWlzZXMgYW5kIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAsIChiKSBBZGRpdGlvbmFsIFByZW1pc2VzIG9yIEFkZGl0aW9uYWwgRmFjaWxpdGllc317DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMDQyNTEzOSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAsIHRoZSBhZlxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGZpcm1hdGl2ZSBhcHByb3ZhbCBvZiB0aGUgT3BlcmF0aW9uYWwgQ28tVGVuYW50cyBob2xkaW5nIGF0IGxlYXN0IGEgbWFqb3JpdHkgb2YgdGhlIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQWRkaXRpb25hbCBQcmVtaXNlcyBvciBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMDQyNTEzOSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgUHJvLVJhdGEgU2hhcmVzIGluIHRoZSByZXNwZWN0aXZlIEVhc2VtZW50c317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTA0MjUxMzkgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgYW5kICh9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBjfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEwNDI1MTM5IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICkgRWFzZW1lbnRzLCB0aGUgYWZmaXJtYXRpdmUgYXBwcm92YWwgb2YgdGhlIE9wZXJhdGlvbmFsIENvLVRlbmFudHMgaG9sZGluZyBhdCBsZWFzdCBhIG1caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBham9yaXR5IG9mIHRoZSBFYXNlbWVudCBQcm8tUmF0YSBTaGFyZXMgaW4gdGhlIHJlc3BlY3RpdmUgRWFzZW1lbnRzfXsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAsIGluIGVhY2ggY2FzZSwgZm9yIHRoZSBhdm9pZGFuY2Ugb2YgZG91YnQsfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMDQyNTEzOSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgdGFraW5nIGludG8gYWNjb3VudCBvbmx5IHRoZSB9e1xydGxjaFxmY3MxIA0KXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIG93bmVyc2hpcCBpbnRlcmVzdCBvZiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEwNDI1MTM5IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHRoZSBPcGVyYXRpb25hbCBDby1UZW5hbnRzLn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5NzIwNjYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTY2MzM2NSBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzXGxvY2hcZjAgUmVzb2x1dGlvbn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzQ3MjExOCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDk2NjMzNjUgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBzaGFsbCBoYXZlIHRoZSBtZWFuaW5nIG9mIHN1Y2ggdGVybSBpbiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBTZWN0aW9ufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIDcuNn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCAufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NCANClxwYXIgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M1xsb2NoXGYwIFxoaWNoXGYwIFNlY3VyZWQgUGFydHlcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KIHNoYWxsIG1lYW4sIHdpdGggcmVzcGVjdCB0byBhbnkgQ28tVGVuYW50LCB0aGUgYWdlbnQgb3IgbGVhZCBiYW5rLCBsZW5kaW5nIGluc3RpdHV0aW9uKHMpIG9yIG90aGVyIGZpbmFuY2lhbCBpbnN0aXR1dGlvbiB1bmRlciBhIGxvYW4gYWdyZWVtZW50LCBoZWRnZSBhZ3JlZW1lbnQgb3Igb3RoZXIgZmluYW5jaW5nIGluc3RydW1lbnQgd2l0aCBzdWNoIENvLVRlbmFudCBzZWN1cmVkIGJ5IGFueSBvZiB0aGUgU2hhcmVkIA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICwgQWRkaXRpb25hbCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KLCB0aGUgU2VwYXJhdGUgRmFjaWxpdGllcywgb3IgYWxsIG9yIGEgcG9ydGlvbiBvZiBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCnMgVW5kaXZpZGVkIEludGVyZXN0czsgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHByb3ZpZGVkfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICwgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgaG93ZXZlcn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCiwgdGhhdCBhbnkgc3VjaCBhZ2VudCwgbGVhZCBiYW5rLCBsZW5kaW5nIGluc3RpdHV0aW9uIG9yIG90aGVyIGZpbmFuY2lhbCBpbnN0aXR1dGlvbiBzaGFsbCBub3QgYmUgZGVlbWVkIGEgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M1xsb2NoXGYwIFxoaWNoXGYwIFNlY3VyZWQgUGFydHlcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGVudGl0bGVkIHRvIHRoZSByaWdodHMgYWNjcnVpbmcgdG8gYSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBTZWN1cmVkIFBhcnR5fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIHVudGlsIHN1Y2ggQ28tVGVuYW50IGdpdmVzIHdyaXR0ZW4gbm90aWNlIHRvIGV2ZXJ5IG90aGVyIENvLVRlbmFudCBhbmQgQ28tVGVuYW5jeSBNYW5hZ2VyIGFsb25nIHdpdGggYW4gYWRkcmVzcyBmb3IgcmVjZWlwdCBvZiBub3RpY2VzLg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFNlY3VyaXR5IERvY3VtZW50c317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgc2hhbGwgbWVhbiwgd2l0aCByZXNwZWN0IHRvIGFueSBDby1UZW5hbnQsIHRoZSBzXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQplY3VyaXR5IGRvY3VtZW50cyBleGVjdXRlZCBiZXR3ZWVuIHN1Y2ggQ28tVGVuYW50IGFuZCBpdHMgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgU2VjdXJlZCBQYXJ0eX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCiBvciBvdGhlciBlbnRpdGllcyBpbiB3aGljaCB0aGUgU2hhcmVkIEZhY2lsaXRpZXMsIG9yIGFsbCBvciBhIHBvcnRpb24gb2YgQ28tVGVuYW50fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBzIFVuZGl2aWRlZCBJbnRlcmVzdHMgc2VjdXJlIHRoZSBwYXltZW50IG9mIGFueSBpbmRlYnRlZG5lc3Mgb3dlZCBieSBzdWNoIENvLVRlbmFudCB0byBzdWNoIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFNlY3VyZWQgUFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGFydHl9e1xydGxjaFxmY3MxIFxhZjEgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCAuDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IHtcKlxia21rc3RhcnQgX0RWX0MyMDF9XGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBTZXBhcmF0ZSBDb2xsZWN0aW9uIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIHNoYWxsIGhhdmUgdGhlIG1lYW5pbmcgc2V0IGZvcnRoIGluIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICAgUkVGIF9SZWY0ODAzNTI2MiBcXHcgXFxoIFxcKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNDAwMzgwMDMwMDAzMzAwMzUwMDMyMDAzNjAwMzIwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGNmMVxpbnNyc2lkNzk0MjYyXGNoYXJyc2lkNzk0MjYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDMuMX19fVxzZWN0ZCBcbHRyc2VjdA0KXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggLntcKlxia21rZW5kIF9EVl9DMjAxfQ0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFNlcGFyYXRlIEVhc2VtZW50c317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgc2hhbGwgbWVhbiBhbnkgZWFzZW1lbnRzLCBsZWFzZXMsIGxpY2Vuc2VzIG9yIG90aGVyIHJpZ2h0cyBvZiBhIENvLVRlbmFudCB0aGF0IGFyZSBub3QgRWFzZW1lbnRzLg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFNlcGFcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCByYXRlIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIHNoYWxsIGhhdmUgdGhlIG1lYW5pbmcgc2V0IGZvcnRoIGluIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICAgUkVGIF9SZWY0ODAzNTI2OCBcXHcgXFxoIFxcKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNDAwMzgwMDMwMDAzMzAwMzUwMDMyMDAzNjAwMzgwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGNmMVxpbnNyc2lkNzk0MjYyXGNoYXJyc2lkNzk0MjYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDQuMX19fVxzZWN0ZCBcbHRyc2VjdA0KXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggLg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFNlcGFyYXRlIEZhY2lsaXRpZXMgRW1lcmdlbmN5fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQpcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBzaGFsbCBtZWFuIGFueSBFbWVyZ2VuY3kgaW52b2x2aW5nIHRoZSBTZXBhcmF0ZSBGYWNpbGl0aWVzIG9mIHRoZSBvdGhlciBDby1UZW5hbnQuDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgU2VwYXJhdGUgTyZNIEV4cGVuc2VzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQpcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBzaGFsbCBoXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgYXZlIHRoZSBtZWFuaW5nIHNldCBmb3J0aCBpbiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgUkVGIF9SZWY0ODAzNTI5MyBcXHcgXFxoIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNTAwMzIwMDM5MDAzMzAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDc5NDI2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCA2LjR9fX1cc2VjdGQgXGx0cnNlY3QNClxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IC4NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M1xsb2NoXGYwIFxoaWNoXGYwIFNlcGFyYXRlIFByb2plY3RcJzk0XGxvY2hcZjAgDQogc2hhbGwgbWVhbiBhbnkgYW5kIGFsbCBzZXBhcmF0ZSBQcm9qZWN0IGZhY2lsaXRpZXMsIHByZW1pc2VzLCByZWFsIHByb3BlcnR5IGFuZCBlYXNlbWVudHMgb2YgYSBDby1UZW5hbnQsIGluY2x1ZGluZyBhbGwgU2VwYXJhdGUgRWFzZW1lbnRzLCBTZXBhcmF0ZSBGYWNpbGl0aWVzIGFuZH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjg0MDU0NSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCiBTZXBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBhcmF0ZSBDb2xsZWN0aW9uIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAsfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyODQwNTQ1IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB0aGF0IH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgYXJlIG5vdCBzaGFyZWQgd2l0aCBhbnkgb3RoZXIgQ28tVGVuYW50Lg0KXHBhciBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFNoYXJlZCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBzaGFsbCBoYXZlIHRoZSBtZWFuaW5nIHNldCBmb3J0aCBpbiB0aGUgUmVjaXRhbHMuDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgU2hhcmVkIE1haW50ZW5hbmNlfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQpcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBzaGFsbCBoYXZlIHRoZSBtZWFuaW5nIHNldCBmb3J0aCBpbiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgIFJFRiBfUmVmMTAxMzQxMDU4IFxcdyBcXGggXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBlMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDMxMDAzMDAwMzEwMDMzMDAzNDAwMzEwMDMwMDAzNTAwMzgwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGNmMVxpbnNyc2lkNzk0MjYyXGNoYXJyc2lkNzk0MjYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDIuXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgMn19fQ0KXHNlY3RkIFxsdHJzZWN0XHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggLg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFNoYXJlZCBPJk0gRXhwZW5zZXN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANClxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIHNoYWxsIGhhdmUgdGhlIG1lYW5pbmcgc2V0IGZvcnRoIGluIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANClNlY3Rpb259e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBSRUYgX1JlZjQ4MDM3NDQ1IFxcciBcXGggfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NCB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM3MDAzNDAwMzQwMDM1MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNzk0MjYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDYuM319fVxzZWN0ZCBcbHRyc2VjdA0KXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggLg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFNoYXJlZCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANClxoaWNoXGYwIFByZW1pc2VzXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgc2hhbGwgaGF2ZSB0aGUgbWVhbmluZyBzZXQgZm9ydGggaW4gdGhlIFJlY2l0YWxzLg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFNoYXJlZCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANClxoaWNoXGYwIFByZW1pc2VzIGFuZCBGYWNpbGl0aWVzXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgc2hhbGwgaGF2ZSB0aGUgbWVhbmluZyBzZXQgZm9ydGggaW4gdGhlIFJlY2l0YWxzLg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzXGxvY2hcZjAgU1xoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFxoaWNoXGYwIE9MQVIgRmFybSBNYW5hZ2VtZW50IFN5c3RlbVwnOTRcbG9jaFxmMCANCiBzaGFsbCBtZWFuIGEgY29tbXVuaWNhdGlvbiBhbmQgZWxlY3Ryb25pYyBjb250cm9sIHN5c3RlbSBjb25zaXN0aW5nIG9mIGhhcmR3YXJlLCBpbnN0cnVtZW50YXRpb24gYW5kIHNvZnR3YXJlIHVzZWQgdG8gbW9uaXRvciwgY29tbXVuaWNhdGUsIHJlZ3VsYXRlIGFuZCBjb29yZGluYXRlIHRoZSByZWFsIGFuZCByZWFjdGl2ZSBlbmVyZ3kgb3V0cHV0IG9mIEhhcmRpbiBTb2xhciBQcm9qZWN0LCBIXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgYQ0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgcmRpbiBTb2xhciBJSSBQcm9qZWN0IGFuZCBIYXJkaW4gU29sYXIgSUlJIFByb2plY3QuDQpccGFyIFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgU3Vic2VxdWVudCBQcm9qZWN0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBzaGFsbCBoYXZlIHRoZSBtZWFuaW5nIHNldCBmb3J0aCBpbiB0aGUgUmVjaXRhbHMuDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgU3VycmVuZGVyaW5nIENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgc2hhbGwgaGF2ZSB0aGUgbWVhbmluZyBzZXQgZm9ydGggaW4gfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KU2VjdGlvbiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgICBSRUYgX1JlZjEwMTU5OTIxMiBcXHcgXFxoIFxcKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZTAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzMTAwMzAwMDMxMDAzNTAwMzkwMDM5MDAzMjAwMzEwMDMyMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxjZjFcaW5zcnNpZDc5NDI2MlxjaGFycnNpZDc5NDI2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAxMi4yfX19XHNlY3RkIFxsdHJzZWN0DQpccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCAuDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgVGVtcG9yYXJ5IENvXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgbnN0cnVjdGlvbiBFYXNlbWVudH17XHJ0bGNoXGZjczEgXGFmMSANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgc2hhbGwgaGF2ZSB0aGUgbWVhbmluZyBzZXQgZm9ydGggaW4gfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgU2VjdGlvbiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgICBSRUYgX1JlZjQ4MDM1MjcyIFxcdyBcXGggXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNTAwMzIwMDM3MDAzMjAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcY2YxXGluc3JzaWQ3OTQyNjJcY2hhcnJzaWQ3OTQyNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgNS4xfX19XHNlY3RkIFxsdHJzZWN0DQpccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCAuDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgVGVybX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTR9ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgc2hhbGwgaGF2ZSB0aGUgbWVhbmluZyBzZXQgZm9ydGggaW4gfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFNlY3Rpb24gfXtcZmllbGR7XCpcZmxkaW5zdCB7DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgICBSRUYgX1JlZjQ4MDM3NDc3IFxcdyBcXGggXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNzAwMzQwMDM3MDAzNzAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcY2YxXGluc3JzaWQ3OTQyNjJcY2hhcnJzaWQ3OTQyNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgMTIuMX19fVxzZWN0ZCBcbHRyc2VjdA0KXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggLg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFRyYW5zbWl0dGluZyBVdGlsaXR5fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQpcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBzaGFsbCBtZWFuIEFFUCBPaGlcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBvIFRyYW5zbWlzc2lvbiBDb21wYW55LCBJbmMuDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgVHJhbnNtaXR0aW5nIFV0aWxpdHkgUHJvdG9jb2xzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQpcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KIHNoYWxsIG1lYW4gdGhlIGRvY3VtZW50cyBhZG9wdGVkIGJ5IFRyYW5zbWl0dGluZyBVdGlsaXR5LCBpbmNsdWRpbmcgYW55IGV4aGliaXRzIG9yIGF0dGFjaG1lbnRzIHJlZmVyZW5jZWQgdGhlcmVpbiwgdGhhdCBjb250YWluIHRoZSBzY2hlZHVsaW5nLCBvcGVyYXRpbmcsIHBsYW5uaW5nLCByZWxpYWJpbGl0eSBhbmQgc2V0dGxlbWVudCBwXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpvbGljaWVzLCBydWxlcywgZ3VpZGVsaW5lcyAoaW5jbHVkaW5nIHRoZSBUcmFuc21pdHRpbmcgVXRpbGl0eSBvcGVyYXRpbmcgZ3VpZGVzKSwgcHJvY2VkdXJlcywgc3RhbmRhcmRzIGFuZCBjcml0ZXJpYSBvZiBUcmFuc21pdHRpbmcgVXRpbGl0eS4NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBVbmRpdmlkZWQgSW50ZXJlc3RzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQpcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBzaGFsbCBtZWFuLCB3aXRoIHJlc3BlY3QgdG8gYW55IENvLVRlbmFudCwgc3VjaCBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCANClxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHMgdW5kaXZpZGVkIHRlbmFudHMtaW4tY29tbW9uIHJpZ2hcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCB0cyBhbmQgaW50ZXJlc3RzIGluIHRoZSBTaGFyZWQgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBQcmVtaXNlcywgU2hhcmVkIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQosIEFkZGl0aW9uYWwgUHJlbWlzZXMgYW5kL29yIEFkZGl0aW9uYWwgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCAuDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgV2l0aGRyYXdhbCBDb3N0c317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgc2hhbGwgaGF2ZSB0aGUgbWVhbmluZyBzZXQgZm9ydGggaW4gfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KU2VjdGlvbiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgICBSRUYgX1JlZjQ4MDM3NDc4IFxcdyBcXGggXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNzAwMzQwMDM3MDAzODAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcY2YxXGluc3JzaWQ3OTQyNjJcY2hhcnJzaWQ3OTQyNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgMTIuM319fVxzZWN0ZCBcbHRyc2VjdA0KXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHRpdGxlcGdcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggLg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFdpdGhkcmF3YWwgTm90aWNlfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQpcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBzaGFsbCBoYXZlIHRoXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgZSBtZWFuaW5nIHNldCBmb3J0aCBpbiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgIFJFRiBfUmVmNDgwMzc0NzggXFx3IFxcaCBcXCogTUVSR0VGT1JNQVQgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM3MDAzNDAwMzcwMDM4MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxjZjFcaW5zcnNpZDc5NDI2MlxjaGFycnNpZDc5NDI2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAxMi4zfX19XHNlY3RkIFxsdHJzZWN0DQpccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCAuDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGFmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxzZWN0IH1cc2VjdGQgXGx0cnNlY3RccGducmVzdGFydFxsaW5leDBcZW5kbmhlcmVcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDI5MTk0NFxzZnRuYmoge1xmb290ZXJyIFxsdHJwYXIgDQpccGFyZFxwbGFpbiBcbHRycGFyXHFjIFxsaTBccmkwXHdpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxhZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNjM2MzQyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEV4aGliaXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNjM2MzQyXGNoYXJyc2lkODQxMjQ0NSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgQQ0KfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjYzNjM0MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAtMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI2MzYzNDJcY2hhcnJzaWQ4NDEyNDQ1IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICAtIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNjM2MzQyIA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIFBBR0UgIFxcXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgKiBBcmFiaWMgIFxcKiBNRVJHRUZPUk1BVCB9fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQxMDQ5NzU1NyBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCA0fX19XHNlY3RkIFxsdHJzZWN0DQpcbGluZXgwXGVuZG5oZXJlXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmczE4XGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkMjYzNjM0MiANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMFxyaTBcc2wtMjAwXHNsbXVsdDBcd2lkY3RscGFyXHRxY1x0eDQ2ODBcdHFyXHR4OTM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjYzNjM0MlxjaGFycnNpZDkxMjU5MDcgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIH17DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjYzNjM0MiANClxwYXIgfX17XGhlYWRlcmYgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxhZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQyNjM2MzQyIA0KXHBhciB9fVxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXHBhciB9XHBhcmQgXGx0cnBhclxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBFWEhJQklUIEEtMX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxiXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpccGFyIH1ccGFyZCBcbHRycGFyXHFjIFxsaTBccmkwXHNhNzIwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgU0hBUkVEIFBSRU1JU0VTDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTBccmkwXHNhMTIwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXHVsXGV4cG5kMVxleHBuZHR3NVxjZjFcZGJjaFxhZjQ0XGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTgge1wqXGJrbWtzdGFydCBfY3BfdGV4dF8xXzZ9DQpcaGljaFxhZjBcZGJjaFxhZjQ0XGxvY2hcZjAgVFJBQ1Qge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjMxNH0xN317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxleHBuZDFcZXhwbmR0dzVcY2YxXGRiY2hcYWY0NFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IHtcKlxia21rZW5kIERvY1hUZXh0UmVmMzE0fQ0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxjZjFcZGJjaFxhZjQ0XGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTgge1wqXGJrbWtlbmQgX2NwX3RleHRfMV82fQ0KXHBhciB9XHBhcmQgXGx0cnBhclxxaiBcbGkwXHJpMFxzYTEyMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGNmMVxkYmNoXGFmNDRcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfN30NClxoaWNoXGFmMFxkYmNoXGFmNDRcbG9jaFxmMCBTaXR1YXRlZCBpbiB0aGUgVG93bnNoaXAgb2YgTWNEb25hbGQsIENvdW50eSBvZiBIYXJkaW4gYW5kIFN0YXRlIG9mIE9oaW8sIGtub3duIGFzIGJlaW5nIHBhcnQgb2YgVmlyZ2luaWEgTWlsaXRhcnkgU3VydmV5IE5vcy4gMTMyNDgsIDFcaGljaFxhZjBcZGJjaFxhZjQ0XGxvY2hcZjAgMzI3OSwgMTMzNTksIDEzNDQ5IGFuZCB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmMzE2fTE1MDYzDQp7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjMxNn0gYW5kIGFsc28gYmVpbmcgcGFydCBvZiBQYXJjZWwgTm9zLiAzMTI1MDAwMy4wMDAwIGFuZCB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmMzE3fTMxMjUwMDA0LjAwMDB7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjMxN30gbm93IG9yIGZvcm1lcmx5IG93bmVkIGJ5IHRoZSBXeXNzIEZhcm1zIEhvbGRpbmcgQ29tcGFueSwgTExDIGFzIFJlY29yZGVkIGluIE8uUi4gVm9sdW1lIA0Ke1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjMxNX00NjJ7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjMxNX0sIFBhZ2UgMTI1NCBvZiB0aGUgSGFyZGluIENvdW50eSBEZWVkIFJlY29yZHMgYW5kIGJlaW5nIGZ1cnRoZXIgYm91blxoaWNoXGFmMFxkYmNoXGFmNDRcbG9jaFxmMCBkXGhpY2hcYWYwXGRiY2hcYWY0NFxsb2NoXGYwIGVkIGFuZCBkZXNjcmliZWQgYXMgZm9sbG93czsNClxwYXIge1wqXGJrbWtlbmQgX2NwX3RleHRfMV83fQ0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcY2YxXGRiY2hcYWY0NFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV84fVxoaWNoXGFmMFxkYmNoXGFmNDRcbG9jaFxmMCBCZWdpbm5pbmcgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjQ0XGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWY0NFxsb2NoXGYwIA0KYXQgdGhlIGludGVyc2VjdGlvbiBvZiBhIGJlbmQgaW4gdGhlIGNlbnRlcmxpbmUgb2YgVG93bnNoaXAgUm9hZCB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmMzE4fTY1e1wqXGJrbWtlbmQgRG9jWFRleHRSZWYzMTh9DQogKERvZGRzIFJvYWQpICg0MCBmZWV0IHdpZGUpIGFuZCB0aGUgZWFzdGVybHkgbGluZSBvZiBzYWlkIFd5c3MgRmFybXMgSG9sZGluZyBDb21wYW55LCBMTEMgUGFyY2VsIE5vLiAzMTI1MDAwNC4wMDAwIGF0IGEgbWFnIG5haWwgc2V0O317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGNmMVxkYmNoXGFmNDRcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGNmMVxkYmNoXGFmNDRcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCB7XCpcYmtta2VuZCBfY3BfdGV4dF8xXzh9DQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc3XGNmMVxkYmNoXGFmNDRcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfOX1caGljaFxhZjBcZGJjaFxhZjQ0XGxvY2hcZjAgQ291cnNlIE5vLiAxOlxoaWNoXGFmMFxkYmNoXGFmNDRcbG9jaFxmMCBcaGljaFxmMCAgVGhlbmNlIFNvdXRoIDA2XCdiMFxsb2NoXGYwIDM3fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xjZjFcZGJjaFxhZjQ0XGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjQ0XGhpY2hcZjAgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xjZjFcZGJjaFxhZjQ0XGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWY0NFxsb2NoXGYwIDQ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xjZjFcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3N1xjZjFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3N1xjZjFcZGJjaFxhZjQ0XGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWY0NFxsb2NoXGYwIEVhc3QsIGFsb25nIHRoZSBjZW50ZXJsaW5lIG9mIHNhaWQgVG93bnNoaXAgUm9hZCB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmMzE5fTY1e1wqXGJrbWtlbmQgRG9jWFRleHRSZWYzMTl9DQosIGFuIGVhc3Rlcmx5IGxpbmUgb2Ygc2FpZCBXeXNzIEZhcm1zIEhvbGRpbmcgQ29tcGFueSwgTExDIFBhcmNlbCBOby4gMzEyNTAwMDQuMDAwMCBhbmQgYSBuZXcgZGl2aXNpb24gbGluZSwgYSBkaXN0YW5jZSBvZiB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmMzIwfTM4Mi41OXtcKlxia21rZW5kIERvY1hUZXh0UmVmMzIwfSBmZWV0IHRvIGEgbWFnIG5haWwgc2V0Ow0KXHBhciB7XCpcYmtta2VuZCBfY3BfdGV4dF8xXzl9DQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWY0NFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV8xMH1caGljaFxhZjBcZGJjaFxhZjQ0XGxvY2hcZjAgQ291cnNlIE5vLiAyOiBUaGVuY2UgU291dGhcaGljaFxhZjBcZGJjaFxhZjQ0XGxvY2hcZjAgXGhpY2hcZjAgIDgzXCdiMFxsb2NoXGYwIDIyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGNmMVxkYmNoXGFmNDRcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmNDRcaGljaFxmMCBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWY0NFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmNDRcbG9jaFxmMCAxMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCANClwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGNmMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmNDRcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjQ0XGxvY2hcZjAgV2VzdCwgYWxvbmcgYSBuZXcgZGl2aXNpb24gbGluZSwgYSBkaXN0YW5jZSBvZiANCntcKlxia21rc3RhcnQgRG9jWFRleHRSZWYzMjJ9MjAuMDB7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjMyMn0gZmVldCB0byBhIHBvaW50IG9uIHRoZSB3ZXN0ZXJseSBsaW5lIG9mIHNhaWQgVG93bnNoaXAgUm9hZCB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmMzIxfTY1e1wqXGJrbWtlbmQgRG9jWFRleHRSZWYzMjF9IGFuZCBhbiBpcm9uIHBpbiBzZXQ7DQpccGFyIHtcKlxia21rZW5kIF9jcF90ZXh0XzFfMTB9DQpccGFyIH1ccGFyZCBcbHRycGFyXHFqIFxsaTBccmkxNDRcc2ExMjBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMTQ0XGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGNmMVxkYmNoXGFmNDRcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfMTF9DQpcaGljaFxhZjBcZGJjaFxhZjQ0XGxvY2hcZjAgXGhpY2hcZjAgQ291cnNlIE5vLiAzOiBUaGVuY2UgTm9ydGggMzhcJ2IwXGxvY2hcZjAgNTB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxjZjFcZGJjaFxhZjQ0XGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjQ0XGhpY2hcZjAgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGNmMVxkYmNoXGFmNDRcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjQ0XGxvY2hcZjAgNTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxjZjFcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGNmMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxjZjFcZGJjaFxhZjQ0XGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWY0NFxsb2NoXGYwIFdlc3QsIGFsb25nIGEgbmV3IGRpdmlzaW9uIGxpbmUsIGEgZGlzdGFuY2Ugb2YgDQp7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmMzIzfTg3Ljk3e1wqXGJrbWtlbmQgRG9jWFRleHRSZWYzMjN9IGZlZXQgdG8gYW4gaXJvbiBwaVxoaWNoXGFmMFxkYmNoXGFmNDRcbG9jaFxmMCBuIHNldDsgDQpccGFyIHtcKlxia21rZW5kIF9jcF90ZXh0XzFfMTF9DQpccGFyIHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV8xMn1caGljaFxhZjBcZGJjaFxhZjQ0XGxvY2hcZjAgXGhpY2hcZjAgQ291cnNlIE5vLiA0OiBUaGVuY2UgU291dGggODVcJ2IwXGxvY2hcZjAgMjB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxjZjFcZGJjaFxhZjQ0XGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjQ0XGhpY2hcZjAgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGNmMVxkYmNoXGFmNDRcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjQ0XGxvY2hcZjAgMDV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxjZjFcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGNmMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxjZjFcZGJjaFxhZjQ0XGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWY0NFxsb2NoXGYwIFdlc3QsIGFsb25nIGEgbmV3IGRpdmlzaW9uIGxpbmUsIGEgZGlzdGFuY2Ugb2YgDQp7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmMzI0fTI1MC41N3tcKlxia21rZW5kIERvY1hUZXh0UmVmMzI0fSBmZWV0IHRvIGFuIGlyb24gcGluIHNldDsgDQpccGFyIHtcKlxia21rZW5kIF9jcF90ZXh0XzFfMTJ9DQpccGFyIHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV8xM31caGljaFxhZjBcZGJjaFxhZjQ0XGxvY2hcZjAgXGhpY2hcZjAgQ291cnNlIE5vLiA1OiBUaGVuY2UgU291dGggNDFcJ2IwXGxvY2hcZjAgMTh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxjZjFcZGJjaFxhZjQ0XGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjQ0XGhpY2hcZjAgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGNmMVxkYmNoXGFmNDRcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjQ0XGxvY2hcZjAgNTZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxjZjFcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGNmMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxjZjFcZGJjaFxhZjQ0XGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWY0NFxsb2NoXGYwIFdlc3QsIGFsb25nIGEgbmV3IGRpdmlzaW9uIGxpbmUsIGEgZGlzdGFuY2Ugb2YgDQp7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmMzI1fTkwMi43M3tcKlxia21rZW5kIERvY1hUZXh0UmVmMzI1fSBmZWV0IHRvIGFuIGlyb24gcGluIHNldDsgDQpccGFyIHtcKlxia21rZW5kIF9jcF90ZXh0XzFfMTN9DQpccGFyIHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV8xNH1caGljaFxhZjBcZGJjaFxhZjQ0XGxvY2hcZjAgQ291cnNlIE5vLiBcaGljaFxhZjBcZGJjaFxhZjQ0XGxvY2hcZjAgXGhpY2hcZjAgNjogVGhlbmNlIE5vcnRoIDUyXCdiMFxsb2NoXGYwIDQ3fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcY2YxXGRiY2hcYWY0NFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWY0NFxoaWNoXGYwIFxycXVvdGUgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxjZjFcZGJjaFxhZjQ0XGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWY0NFxsb2NoXGYwIDU3fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcY2YxXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxjZjFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcY2YxXGRiY2hcYWY0NFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmNDRcbG9jaFxmMCBXZXN0LCBhbG9uZyBhIG5ldyBkaXZpc2lvbiBsaW5lLCBhIGRpc3RhbmNlIG9mIA0Ke1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjMyNn00OTQuMjF7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjMyNn0gZmVldCB0byBhbiBpcm9uIHBpbiBzZXQ7IA0KXHBhciB7XCpcYmtta2VuZCBfY3BfdGV4dF8xXzE0fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfMTV9XGhpY2hcYWYwXGRiY2hcYWY0NFxsb2NoXGYwIFxoaWNoXGYwIENvdXJzZSBOby4gNzogVGhlbmNlIE5vcnRoIDQ1XCdiMFxsb2NoXGYwIDUyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcY2YxXGRiY2hcYWY0NFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWY0NFxoaWNoXGYwIFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxjZjFcZGJjaFxhZjQ0XGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWY0NFxsb2NoXGYwIDI3fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcY2YxXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxjZjFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcY2YxXGRiY2hcYWY0NFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmNDRcbG9jaFxmMCBXZXN0LCBhbG9uZyBhIG5ldyBkaXZpc2lvbiBsaW5lLCBhIGRpc3RhbmNlIG9mIA0Ke1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjMyN300MjIuNTF7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjMyN30gZmVldCB0byBhbiBpcm9uIHBpbiBzZXQ7DQpccGFyIHtcKlxia21rZW5kIF9jcF90ZXh0XzFfMTV9DQpccGFyIHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV8xNn1caGljaFxhZjBcZGJjaFxhZjQ0XGxvY2hcZjAgXGhpY2hcZjAgQ291cnNlIE5vLiA4OiBUaGVuY2UgTm9ydGggNDFcJ2IwXGxvY2hcZjAgMTB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxjZjFcZGJjaFxhZjQ0XGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjQ0XGhpY2hcZjAgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGNmMVxkYmNoXGFmNDRcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjQ0XGxvY2hcZjAgMTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxjZjFcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGNmMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxjZjFcZGJjaFxhZjQ0XGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWY0NFxsb2NoXGYwIEVhc3QsIGFsb25nIGEgbmV3IGRpdmlzaW9uIGxpbmUsIGEgZGlzdGFuY2Ugb2YgDQp7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmMzI4fTg4MS43MntcKlxia21rZW5kIERvY1hUZXh0UmVmMzI4fSBmZWV0IHRvIGFuIGlyb24gcGluIHNldDsgDQpccGFyIHtcKlxia21rZW5kIF9jcF90ZXh0XzFfMTZ9DQpccGFyIHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV8xN31caGljaFxhZjBcZGJjaFxhZjQ0XGxvY2hcZjAgXGhpY2hcZjAgQ291cnNlIE5vLiA5OiBUaGVuY2UgU291dGggNDZcJ2IwXGxvY2hcZjAgMzR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxjZjFcZGJjaFxhZjQ0XGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjQ0XGhpY2hcZjAgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGNmMVxkYmNoXGFmNDRcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjQ0XGxvY2hcZjAgMzZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxjZjFcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZXhwbmQxXGV4cG5kdHc1XGNmMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMVxleHBuZHR3NVxjZjFcZGJjaFxhZjQ0XGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWY0NFxsb2NoXGYwIEVhc3QsIGFsb25nIGEgbmV3IGRpdmlzaW9uIGxpbmUsIGEgZGlzdGFuY2Ugb2YgDQp7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmMzI5fTM3OS45MHtcKlxia21rZW5kIERvY1hUZXh0UmVmMzI5fSBmZWV0IHRvIGFuIGlyb24gcGluIHNldDsgDQpccGFyIHtcKlxia21rZW5kIF9jcF90ZXh0XzFfMTd9DQpccGFyIHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV8xOH1caGljaFxhZjBcZGJjaFxhZjQ0XGxvY2hcZjAgXGhpY2hcZjAgQ291cnNlIE5vLiAxMDogVGhlbmNlIE5vcnRoIDg0XCdiMFxsb2NoXGYwIDMyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcY2YxXGRiY2hcYWY0NFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWY0NFxoaWNoXGYwIFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxjZjFcZGJjaFxhZjQ0XGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWY0NFxsb2NoXGYwIDQyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcY2YxXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGV4cG5kMVxleHBuZHR3NVxjZjFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDFcZXhwbmR0dzVcY2YxXGRiY2hcYWY0NFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmNDRcbG9jaFxmMCBFYXN0LCBhbG9uZyBhIFxoaWNoXGFmMFxkYmNoXGFmNDRcbG9jaFxmMCANCm5ldyBkaXZpc2lvbiBsaW5lLCBhIGRpc3RhbmNlIG9mIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWYzMzB9NzE0LjQ1e1wqXGJrbWtlbmQgRG9jWFRleHRSZWYzMzB9IGZlZXQgdG8gYW4gaXJvbiBwaW4gc2V0Ow0KXHBhciB7XCpcYmtta2VuZCBfY3BfdGV4dF8xXzE4fQ0KXHBhciB9XHBhcmQgXGx0cnBhclxxaiBcbGkwXHJpMFxzYTEyMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWY0NFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV8xOX0NClxoaWNoXGFmMFxkYmNoXGFmNDRcbG9jaFxmMCBcaGljaFxmMCBDb3Vyc2UgTm8uIDExOiBUaGVuY2UgU291dGggMDZcJ2IwXGxvY2hcZjAgMzd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGNmMVxkYmNoXGFmNDRcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmNDRcaGljaFxmMCBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxjZjFcZGJjaFxhZjQ0XGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWY0NFxsb2NoXGYwIDQ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxjZjFcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGNmMVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWY0NFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmNDRcbG9jaFxmMCBFYXN0LCBhbG9uZyBhIG5ldyBkaXZpc2lvbiBsaW5lLCBhIGRpc3RhbmNlIG9mIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWYzMzF9NTEuNTh7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjMzMX0gZmVldCB0byB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGJcY2YxXGRiY2hcYWY0NFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmNDRcbG9jaFxmMCBQbGFjZSBvZiBCZWdpbm5pbmcgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjQ0XGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWY0NFxsb2NoXGYwIA0Kb2YgdGhlIHBhcmNlbCBvZiBsYW5kIGhlcmVpbiBkZXNjcmliZWQsIGNvbnRhaW5pbmcge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjMzMn0yMy4wNzN7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjMzMn02IGFjcmVzIG9mIFxoaWNoXGFmMFxkYmNoXGFmNDRcbG9jaFxmMCBsYW5kLCBtb3JlIG9yIGxlc3MsIGJ1dCBzdWJqZWN0IHRvIGFsbCBsZWdhbCBoaWdod2F5cyBhbmQgZWFzZW1lbnRzIG9mIHJlY29yZC4NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcY2YxXGRiY2hcYWY0NFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV8yMH17XCpcYmtta2VuZCBfY3BfdGV4dF8xXzE5fVxoaWNoXGFmMFxkYmNoXGFmNDRcbG9jaFxmMCAyLjM2NTAgQWNyZXMgKG1vcmUgb3IgbGVzcykgZnJvbSBQYXJjZWwgTm8uIDMxMjUwMDAzLjAwMDANClxwYXIge1wqXGJrbWtzdGFydCBfY3BfdGV4dF8xXzIxfXtcKlxia21rZW5kIF9jcF90ZXh0XzFfMjB9XGhpY2hcYWYwXGRiY2hcYWY0NFxsb2NoXGYwIDIwLjcwODYgQWNyZXMgKG1vcmUgb3IgbGVzcyApIGZyb20gUGFyY2VsIE5vLiAzMTI1MDAwNC4wMDAwDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQxXGV4cG5kdHc1XGNmMVxkYmNoXGFmNDRcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfMjJ9e1wqXGJrbWtlbmQgX2NwX3RleHRfMV8yMX1caGljaFxhZjBcZGJjaFxhZjQ0XGxvY2hcZjAgUHJpb3IgRGVlZCwgTy5SLiBWb2x1bWUge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjMzM300NjINCntcKlxia21rZW5kIERvY1hUZXh0UmVmMzMzfSwgUGFnZSAxMjU0IG9mIEhhcmRpbiBDb3VudHkgRGVlXGhpY2hcYWYwXGRiY2hcYWY0NFxsb2NoXGYwIGQgUmVjb3Jkcy4NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjQ0XGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTgge1wqXGJrbWtzdGFydCBfY3BfdGV4dF8xXzIzfXtcKlxia21rZW5kIF9jcF90ZXh0XzFfMjJ9XGhpY2hcYWYwXGRiY2hcYWY0NFxsb2NoXGYwIEJhc2lzIG9mIGJlYXJpbmcgZm9yIHRoaXMgZGVzY3JpcHRpb24gaXMgU3RhdGUgUGxhbmUgT2hpbyBOb3J0aCBDb29yZGluYXRlIFN5c3RlbSBOQUQgDQp7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmMzM0fTgze1wqXGJrbWtlbmQgRG9jWFRleHRSZWYzMzR9IGJhc2VkIG9uIEdQUyBvYnNlcnZhdGlvbnMgaW4gTm92ZW1iZXIgMjAxMSwgd2l0aCB0aGUgY2VudGVybGluZSBiZWFyaW5nIG9mIFRvd25zaGlwIFJvYWQge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjMzNX02NXtcKlxia21rZW5kIERvY1hUZXh0UmVmMzM1fVxoaWNoXGYwICAoRG9kZHMgUm9hZCkgYmVpbmcgTm9ydGggODRcJ2IwMDB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcY2YxXGRiY2hcYWY0NFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWY0NFxoaWNoXGYwIFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjQ0XGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggMDB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGNmMVxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgDQpcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxjZjFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxjZjFcZGJjaFxhZjQ0XGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWY0NFxsb2NoXGYwIEVhc3QuDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHc0XGNmMVxkYmNoXGFmNDRcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfMjR9e1wqXGJrbWtlbmQgX2NwX3RleHRfMV8yM31caGljaFxhZjBcZGJjaFxhZjQ0XGxvY2hcZjAgVGhpcyBkZXNjcmlwdGlvbiBwcmVwYXJcaGljaFxhZjBcZGJjaFxhZjQ0XGxvY2hcZjAgDQplZCBhbmQgc3VydmV5ZWQgYnkgQXR3ZWxsLCBMTEMgdW5kZXIgdGhlIHN1cGVydmlzaW9uIG9mIEFsZXggRS4gTWFya3MsIE9oaW8gUHJvZmVzc2lvbmFsIExhbmQgU3VydmV5b3IgTm8uIDg2MTYgaW4gTm92ZW1iZXIgMjAxNy4gQWxsIGlyb24gcGlucyBzZXQgYXJlIDUvOCBpbmNoIGRpYW1ldGVyIHJlYmFyLCB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmMzM2fTMwe1wqXGJrbWtlbmQgRG9jWFRleHRSZWYzMzZ9DQogaW5jaGVzIGxvbmcgd2l0aCBhIHBsYXN0aWMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcY2YxXGRiY2hcYWY0NFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWY0NFxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxjZjFcZGJjaFxhZjQ0XGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpcaGljaFxhZjBcZGJjaFxhZjQ0XGxvY2hcZjAgQXR3ZWxsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dzRcY2YxXGRiY2hcYWY0NFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWY0NFxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3NFxjZjFcZGJjaFxhZjQ0XGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpcaGljaFxhZjBcZGJjaFxhZjQ0XGxvY2hcZjAgIGNhcC4NClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMFxyaTBcc2ExMjBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCB7XCpcYmtta2VuZCBfY3BfdGV4dF8xXzI0fQ0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV8yNX1caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBFWENFUFRJTkcgVH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBIRVJFRlJPTSBUSEUgRk9MTE9XSU5HOn17DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSANClxwYXIge1wqXGJrbWtlbmQgX2NwX3RleHRfMV8yNX0NClxwYXIgfVxwYXJkIFxsdHJwYXJccWogXGxpMFxyaTBcc2ExMjBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV8yNn1caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANClNpdHVhdGVkIGluIHRoZSBUb3duc2hpcCBvZiBNY0RvbmFsZCwgQ291bnR5IG9mIEhhcmRpbiBhbmQgU3RhdGUgb2YgT2hpbywga25vd24gYXMgYmVpbmcgcGFydCBvZiBWaXJnaW5pYSBNaWxpdGFyeSBTdXJ2ZXkgTm9zLiAxMzI0OCwgMTMyNzksIDEzMzU5LCAxMzQ0OSBhbmQge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjMzOH0xNTA2M3tcKlxia21rZW5kIERvY1hUZXh0UmVmMzM4fQ0KIGFuZCBhbHNvIGJlaW5nIHBhcnQgb2YgUGFyY2VsIE51bWJlcnMgMzEyNTAwMTYuMDAwMCBhbmQge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjMzOX0zMTI1MDAxNy4wMH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDAxMDA0NCAwMHtcKlxia21rZW5kIERvY1hUZXh0UmVmMzM5fVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBub3cgb3IgZm9ybWVybHkgb3duZQ0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgZCBieSBIYXJkaW4gV2luZCBFbmVyZ3kgTExDIGFzIFJlY29yZGVkIGluIE8uUi4gVm9sdW1lIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWYzMzd9NTQ4e1wqXGJrbWtlbmQgRG9jWFRleHRSZWYzMzd9LCBQYWdlIDU5MzQgb2YgdGhlIEhhcmRpbiBDb3VudHkgRGVlZCBSZWNvcmRzIGFuZCBiZWluZyBmdXJ0aGVyIGJvdW5kZWQgYW5kIGRlc2NyaWJlZCBhcyBmb2xsb3dzO317XHJ0bGNoXGZjczEgDQpcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IA0KXHBhciB7XCpcYmtta2VuZCBfY3BfdGV4dF8xXzI2fQ0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjMxMDEyOCB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfMjd9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQ29tbX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1NzMyNjE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGVufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTMxNzgxIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGNpbmd9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkzMTc4MSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgYXQgYSBtYWcgbmFpbCBmb3VuZCBhdCB0aGUgaW50ZXJzZWN0aW9uIG9mIGEgYmVuZCBpbiB0aGUgY2VudGVybGluZSBvZiBUb3duc2hpcCBSb2FkIA0Ke1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjM0MH02NXtcKlxia21rZW5kIERvY1hUZXh0UmVmMzQwfSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAoRG9kZHMgUm9hZCkgKDQwIGZlZXQgd2lkZSkgYW5kIHRoZSBXZXN0ZXJseSBsaW5lIG9mIHBhcmNlbCBub3cgb3IgZm9ybWVybHkgb3duZWQgYnkgV3lzcyBGYXJtcyBIb2xkaW5nIENvbXBhbnksIExMQyBQYXJjZWwgTm8uIDMxMjUwMDA3LjAwMDAgYXMgcmVjb3JkZWQgaW4gTy5SLiBWb2x1bWUgDQp7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmMzQxfTQ2MntcKlxia21rZW5kIERvY1hUZXh0UmVmMzQxfVxoaWNoXGYwICwgUGFnZSAxMjU0IG9mIHRoZSBIYXJkaW4gQ291bnR5IERlZWRzIFJlY29yZHMsIHRoZW5jZSBTb3V0aCAwNlwnYjB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMzlcbG9jaFxmMCAzN317XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMzlcaGljaFxmMCBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjM5XGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYzOVxsb2NoXGYwIDQ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0IA0KXGxvY2hcYWYwXGRiY2hcYWYzOVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgRWFzdCwgYWxvbmcgdFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGhlIGNlbnRlcmxpbmUgb2Ygc2FpZCBUb3duc2hpcCBSb2FkIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWYzNDJ9NjUNCntcKlxia21rZW5kIERvY1hUZXh0UmVmMzQyfSwgdGhlIHdlc3Rlcmx5IGxpbmUgb2Ygc2FpZCBXeXNzIEZhcm1zIEhvbGRpbmcgQ29tcGFueSwgTExDLCBhIGRpc3RhbmNlIG9mIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWYzNDV9MzgyLjU5e1wqXGJrbWtlbmQgRG9jWFRleHRSZWYzNDV9DQogZmVldCB0byBhIG1hZyBuYWlsIGZvdW5kIGF0IGFuIGVhc3Rlcmx5IGNvcm5lciBvZiBwYXJjZWwgbm93IG9yIGZvcm1lcmx5IG93bmVkIGJ5IFd5c3MgRmFybXMgSG9sZGluZyBDb21wYW55LCBMTEN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBQYXJjZWwgTm8uIDMxMjUwMDA0LjAwDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAwMCBhcyByZWNvcmRlZCBpbiBPLlIuIFZvbHVtZSB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmMzQzfTQ2MntcKlxia21rZW5kIERvY1hUZXh0UmVmMzQzfVxoaWNoXGYwICwgUGFnZSAxMjU0IG9mIHRoZSBIYXJkaW4gQ291bnR5IERlZWRzIFJlY29yZCwgdGhlbmNlIFNvdXRoIDgzXCdiMH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjM5XGxvY2hcZjAgMjJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYzOVxoaWNoXGYwIFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCANClxoaWNoXGFmMFxkYmNoXGFmMzlcbG9jaFxmMCAxMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjM5XGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjM5XGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KIFdlc3QsIGFsb25nIGEgbm9ydGhlcmx5IGxpbmUgb2YgV3lzcyBGYXJtcyBIb2xkaW5nIENvbXBhbnksIExMQywgYSBkaXN0YW5jZSBvZiB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmMzQ2fTIwLjAwe1wqXGJrbWtlbmQgRG9jWFRleHRSZWYzNDZ9IGZlZXQgdG8gYSA1LzggaW5jaCBpcm9uIHBpbiB3aXRoIGNhcCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDQgDQpcbG9jaFxhZjBcZGJjaFxhZjM5XGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEF0d2VsbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjM5XGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjM5XGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIGZvdW5kIGF0IGEgbm9ydGhlcmx5IGxcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBpbmUgb2Ygc2FpZCBXeXNzIEZhcm1zIEhvbGRpbmcgQ29tcGFueSwgTExDIHBhcmNlbCBzYWlkIHBvaW50IGFsc28gYmVpbmcgYXQgdGhlIHdlc3Rlcmx5IGxpbmUgb2Ygc2FpZCBUb3duc2hpcCBSb2FkIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWYzNDR9DQo2NXtcKlxia21rZW5kIERvY1hUZXh0UmVmMzQ0fVxoaWNoXGYwICwgVGhlbmNlIE5vcnRoIDM4XCdiMH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjM5XGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYzOVxsb2NoXGYwIDUwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMzlcaGljaFxmMCANClxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjM5XGxvY2hcZjAgNTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYzOVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBXZXN0LCBhbG9uZyBhIG5vcnRoZXJseSBsaW5lIG9mIFd5c3MgRmFybXMgSG9sZGluZyBDb21wYW55LCBMTEMsIGEgZGlzdGFuY2Ugb2Yge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjM0N304Ny45N3tcKlxia21rZW5kIERvY1hUZXh0UmVmMzQ3fSBmZWV0IH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCB0byBhIDUvOCBpbmNoIGlyb24gcGluIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHdpdGggY2FwIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjM5XGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjM5XGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQXR3ZWxsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMzlcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgXGhpY2hcZjAgDQogZm91bmQgYXQgYSBub3J0aGVybHkgbGluZSBvZiBzYWlkIFd5c3MgRmFybXMgSG9sZGluZyBDb21wYW55LCBMTEMgcGFyY2VsLCBUaGVuY2UgU291dGggODVcJ2IwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjM5XGxvY2hcZjAgMjB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZGJjaFxhZjM5XGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjM5XGhpY2hcZjAgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMzlcbG9jaFxmMCAwNX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjM5XGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjM5XGhpY2hcZjAgDQpcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIFdlc3QsIGFsb25nIGEgbm9ydGhlcmx5IGxpbmUgb2YgV3lzcyBGYXJtcyBIb2xkaW5nIENvbXBhbnksIExMQywgYSBkaXN0YW5jZSBvZiB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmMzQ4fTI1MC41N3tcKlxia21rZW5kIERvY1hUZXh0UmVmMzQ4fQ0KIGZlZXQgdG8gYSA1LzggaW5jaCBpcm9uIHBpbiB3aXRofXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgY2FwIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjM5XGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjM5XGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQXR3ZWxsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMzlcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIGZvdW5kIGF0IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgXGhpY2hcZjAgYSBub3J0aGVybHkgY29ybmVyIG9mIHNhaWQgV3lzcyBGYXJtcyBIb2xkaW5nIENvbXBhbnksIExMQyBwYXJjZWwgVGhlbmNlIFNvdXRoIDQxXCdiMH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjM5XGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYzOVxsb2NoXGYwIDE4fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYzOVxoaWNoXGYwIFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjM5XGxvY2hcZjAgNTZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDQgDQpcbG9jaFxhZjBcZGJjaFxhZjM5XGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBXZXN0LCBhbG9uZyBhIG5vcnRoZXJseSBsaW5lIG9mIFd5c3MgRmFybXMgSG9sZGluZyBDb21wYW55LCBMTEMsIGEgZGlzdGFuY2Ugb2Yge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjM0OX05MDIuNzMNCntcKlxia21rZW5kIERvY1hUZXh0UmVmMzQ5fSBmZWV0IHRvIGEgNS84IGluY2ggaXJvbiBwaW4gd2l0aCBjYXAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMzlcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQXR3ZWxsfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYzOVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgZm91bmQgYXQgYSBub3J0aGVybHkgY29ybmVyIG9mIHNhaWRcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBcaGljaFxmMCANCiBXeXNzIEZhcm1zIEhvbGRpbmcgQ29tcGFueSwgTExDIHBhcmNlbCwgVGhlbmNlIE5vcnRoIDUyXCdiMH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjM5XGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYzOVxsb2NoXGYwIDQ3fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMzlcaGljaFxmMCANClxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjM5XGxvY2hcZjAgNTd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYzOVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBXZXN0LCBhbG9uZyBhIG5vcnRoZXJseSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGxpbmUgb2YgV3lzcyBGYXJtcyBIb2xkaW5nIENvbXB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgYW55LCBMTEMsIGEgZGlzdGFuY2Ugb2Yge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjM1MH0yMTQuNTJ7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjM1MH0gZmVldCB0byBhbiBpcm9uIHBpbiBzZXQsIHNhaWQgcG9pbnQgYWxzbyBiZWluZyB0aGUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgUGxhY2Ugb2YgQmVnaW5uaW5nfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgb2YgdGhlIHBhcmNlbCBoZXJlaW4gdG8gYmUgZGVzY3JpYmVkXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgO317XHJ0bGNoXGZjczEgDQpcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSANClxwYXIgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDAxMDA0NCB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfMjh9e1wqXGJrbWtlbmQgX2NwX3RleHRfMV8yN31caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBcaGljaFxmMCBDb3Vyc2UgTm8uIDE6IFRoZW5jZSBOb3J0aCA1MlwnYjB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZGJjaFxhZjM5XGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYzOVxsb2NoXGYwIDQ3fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMzlcaGljaFxmMCBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjM5XGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpcaGljaFxhZjBcZGJjaFxhZjM5XGxvY2hcZjAgNTd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYzOVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCiBXZXN0LCBjb250aW51aW5nIGFsb25nIHNhaWQgbm9ydGhlcmx5IGxpbmUgb2YgV3l9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHNzIEZhcm1zIEhvbGRpbmcgQ29tcGFueSx9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIExMQyBwYXJjZWwsIGEgZGlzdGFuY2Ugb2Yge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjM1MX0yNzkuNjl7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjM1MX0gZmVldCB0byBhIDUvOCBpbmNoIGlyb24gcGluIHdpdGggY2FwIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjM5XGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjM5XGhpY2hcZjAgXCc5M317DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQXR3ZWxsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMzlcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgZm91bmQgYXQgYSBub3J0aGVybHkgbGluZSBvZiBzYWlkIHBhcmNlbDt9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIHtcKlxia21rZW5kIF9jcF90ZXh0XzFfMjh9DQpccGFyIHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV8yOX1caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBDb3Vyc2UgTm8uIDI6IFRoZW5jZVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFxoaWNoXGYwICBOb3J0aCA0NVwnYjB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMzlcbG9jaFxmMCA1Mn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMzlcaGljaFxmMCBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjM5XGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYzOVxsb2NoXGYwIDI3fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0IA0KXGxvY2hcYWYwXGRiY2hcYWYzOVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgV2VzdCwgYWxvbmcgc2FpZCBub3J0aGVybHkgbGluZSBvZiBXeXNzIEZhcm1zIHBhcmNlbCwgYSBkaXN0YW5jZSBvZiB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmMzUyfTMwN317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAuODd7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjM1Mn0gZmVldCB0byBhbiBpcn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpvbiBwaW4gc2V0IGF0IGFuIGVhc3Rlcmx5IGxpbmUgb2Ygc2FpZCBXeXNzIEZhcm1zIEhvbGRpbmcgQ29tcGFueSwgTExDIHBhcmNlbDsNClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSB7XCpcYmtta2VuZCBfY3BfdGV4dF8xXzI5fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfMzB9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgXGhpY2hcZjAgQ291cnNlIE5vLiAzOiBUaGVuY2UgTm9ydGggNDFcJ2IwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjM5XGxvY2hcZjAgMzB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZGJjaFxhZjM5XGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjM5XGhpY2hcZjAgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMzlcbG9jaFxmMCAzN317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjM5XGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjM5XGhpY2hcZjAgDQpcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIEVhc3QsIGFsb25nIGEgbmV3IGRpdmlzaW9uIGxpbmUsIGFcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgZGlzdGFuY2Ugb2Yge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjM1M30xOS4wMntcKlxia21rZW5kIERvY1hUZXh0UmVmMzUzfSBmZWV0IHRvIGFuIGlyb24gcGluIHNldDsNCn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEge1wqXGJrbWtlbmQgX2NwX3RleHRfMV8zMH0NClxwYXIge1wqXGJrbWtzdGFydCBfY3BfdGV4dF8xXzMxfVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFxoaWNoXGYwIENvdXJzZSBOby4gNDogVGhlbmNlIE5vcnRoIDQ1XCdiMH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjM5XGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYzOVxsb2NoXGYwIDUyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYzOVxoaWNoXGYwIFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjM5XGxvY2hcZjAgMjd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYzOVxoaWNoXGYwIA0KXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBXZXN0LCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGFsb25nfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBhIG5ldyBkaXZpc2lvbiBsaW5lLCBhIGRpc3RhbmNlIG9mIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWYzNTR9MTkuMDJ7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjM1NH0gZmVldCB0byBhbiBpcm9uIHBpbiBzZXQ7DQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkge1wqXGJrbWtlbmQgX2NwX3RleHRfMV8zMX0NClxwYXIge1wqXGJrbWtzdGFydCBfY3BfdGV4dF8xXzMyfVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFxoaWNoXGYwIENvdXJzZSBOby4gNTogVGhlbmNlIE5vcnRoIDQxXCdiMH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjM5XGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYzOVxsb2NoXGYwIDMwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYzOVxoaWNoXGYwIFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjM5XGxvY2hcZjAgMzd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYzOVxoaWNoXGYwIA0KXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBFYXN0LCBhbG9uZyBhIG5ldyBkaXZpc2lvbiBsaW5lLCBhIGRpc3RhbmNlIG9mIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWYzNTV9MjEzLjI1e1wqXGJrbWtlbmQgRG9jWFRleHRSZWYzNTV9IGZlZXRcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCiB0byBhbiBpcm9uIHBpbiBzZXQ7fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSB7XCpcYmtta2VuZCBfY3BfdGV4dF8xXzMyfQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfMzN9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgXGhpY2hcZjAgQ291cnNlIE5vLiA2OiBUaGVuY2UgU291dGggNDhcJ2IwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjM5XGxvY2hcZjAgMjl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZGJjaFxhZjM5XGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjM5XGhpY2hcZjAgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMzlcbG9jaFxmMCAyM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjM5XGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjM5XGhpY2hcZjAgDQpcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIEVhc3QsIGFsb25nIGEgbmV3IGRpdmlzaW9uIGxpfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBuZSwgYSBkaXN0YW5jZSBvZiANCntcKlxia21rc3RhcnQgRG9jWFRleHRSZWYzNTZ9MTAxLjg5e1wqXGJrbWtlbmQgRG9jWFRleHRSZWYzNTZ9IGZlZXQgdG8gYW4gaXJvbiBwaW4gc2V0O317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgDQpccGFyIHtcKlxia21rZW5kIF9jcF90ZXh0XzFfMzN9DQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkge1wqXGJrbWtzdGFydCBfY3BfdGV4dF8xXzM0fVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFxoaWNoXGYwIENvdXJzZSBOby4gNzogVGhlbmNlIE5vcnRoIDQxXCdiMH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjM5XGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpcaGljaFxhZjBcZGJjaFxhZjM5XGxvY2hcZjAgMzF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYzOVxoaWNoXGYwIFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjM5XGxvY2hcZjAgNDh9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZGJjaFxhZjM5XGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjM5XGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBFYXN0LCBhbG9uZyBhIG5ldyBkaXZpc2lvbiBsaW5lLCBhIGRpc3RhbmNlIG9mIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWYzNTd9MTAyLjQzDQp7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjM1N30gZmVldCB0byBhbiBpcm9uIHBpbiBzZXQ7fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSB7XCpcYmtta2VuZCBfY3BfdGV4dF8xXzM0fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfMzV9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgXGhpY2hcZjAgQ291cnNlIE5vLiA4OiBUaGVuY2UgU291dGggNDhcJ2IwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjM5XGxvY2hcZjAgMjl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZGJjaFxhZjM5XGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjM5XGhpY2hcZjAgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMzlcbG9jaFxmMCAxN317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjM5XGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjM5XGhpY2hcZjAgDQpcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIEVhc3QsIGFsb25nIGEgbmV3IGRpdmlzaW9uIGxpbmUsIGEgZGlzdGFuY2Ugb2Yge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjM1OH02NjMufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDQ5e1wqXGJrbWtlbmQgRG9jWFRleHRSZWYzNTh9IGZlZXQgdG8gYW4gaXJvbiBwaW4gc2V0O317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgDQpccGFyIHtcKlxia21rZW5kIF9jcF90ZXh0XzFfMzV9DQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkge1wqXGJrbWtzdGFydCBfY3BfdGV4dF8xXzM2fVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFxoaWNoXGYwIENvdXJzZSBOby4gOTogVGhlbmNlIFNvdXRoIDY3XCdiMH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjM5XGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpcaGljaFxhZjBcZGJjaFxhZjM5XGxvY2hcZjAgMjh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYzOVxoaWNoXGYwIFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjM5XGxvY2hcZjAgMDh9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcZGJjaFxhZjM5XGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjM5XGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBXZXN0LCBhbG9uZyBhIG5ldyBkaXZpc2lvbiBsaW5lLCBhIGRpc3RhbmNlIG9mIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWYzNTl9MzY1LjQ0DQp7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjM1OX0gZmVldCB0byB0aGUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFBsYWNlIG9mIEJlZ2lubmluZ317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQogb2YgdGhlIHBhcmNlbCBvZiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBsYW5kIGhlcmVpbiBkZXNjcmliZWQsIGNvbnRhaW5pbmcge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjM2MH01LjA5MXtcKlxia21rZW5kIERvY1hUZXh0UmVmMzYwfTQgYWNyZXMgb2YgbGFuZCwgbW9yZSBvciBsZXNzLCBidXQgc3ViamVjdCB0byBhbGwgbGVnYWwgaGlnaHdheXMgYW5kIGVhc2VtZW50cyBvZiByZWNvcmQufXtccnRsY2hcZmNzMSBcYWYxIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IA0KXHBhciB7XCpcYmtta2VuZCBfY3BfdGV4dF8xXzM2fQ0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDQwMTAwNDQge1wqXGJrbWtzdGFydCBfY3BfdGV4dF8xXzM3fVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFByaW9yIERlZWQsIE8uUi4gVm9sdW1lIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWYzNjF9NTQ4e1wqXGJrbWtlbmQgRG9jWFRleHRSZWYzNjF9LCBQYWdlIDU5MzQgb2YgSGFyZGluIENvdW50eSBEZWVkIFJlY29yZHMNClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IHtcKlxia21rZW5kIF9jcF90ZXh0XzFfMzd9DQpccGFyIHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV8zOH1caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBCYXNpcyBvZiBiZWFyaW5nIGZvciB0aGlzIGRlc2NyaXB0aW9uIGlzIFN0YXRlIFBsYW5lIE9oaVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIG8gTm9ydGggQ29vcmRpbmF0ZSBTeXN0ZW0gTkFEIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWYzNjJ9ODN7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjM2Mn0NCiBiYXNlZCBvbiBHUFMgb2JzZXJ2YXRpb25zIGluIE59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDU3MzI2MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgb3ZlbWJlciAyMDExLCB3aXRoIHRoZX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTMxNzgxIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KIGNlbnRlcmxpbmUgYmVhcmluZyBvZiBUb3duc2hpcCBSb2FkIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWYzNjN9NjV7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjM2M31caGljaFxmMCAgKERvZGRzIFJvYWQpIGJlaW5nIE5vcnRoIDg0XCdiMH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjM5XGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggMDB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZGJjaFxhZjM5XGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjM5XGhpY2hcZjAgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IDAwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMzlcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYxIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgRWFzdC4gfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSB7XCpcYmtta2VuZCBfY3BfdGV4dF8xXzM4fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfMzl9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgVGhpcyBkZXNjcmlwdGlvbiBwcmVwYXJlZCBhbmQgc3VydmV5ZWQgYnkgQXR3ZWxsLCBMTEMsIHVuZGVyIHRoZSBzdXBlcnZpc2lvbiBvZiBBbGV4IEUuIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIE1hcmtzLCBPaGlvIFByb2Zlc3Npb25hbCBMYW5kIFN1cnZleW9yIE5vLiA4NjE2IGluIE5vdmVtYn17XHJ0bGNoXGZjczEgXGFmMSANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBlciAyMDE3LiBBbGwgaXJvbiBwaW5zIHNldCBhcmUgNS84IGluY2ggZGlhbWV0ZXIgcmViYXIsIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWYzNjR9MzB7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjM2NH0gaW5jaGVzIGxvbmcgd2l0aCBhIHBsYXN0aWMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYzOVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBBdHdlbGx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYzOVxoaWNoXGYwIFwnOTR9ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBjYXAufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IHtcKlxia21rZW5kIF9jcF90ZXh0XzFfMzl9DQpccGFyIHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV80MH1caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBQYXJjZWwgTm9zLjogIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWYzNjV9MzF7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjM2NX0tMjUwMDE2LjAwMDAgYW5kIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWYzNjZ9MzF7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjM2Nn0tMjUwMDE3LjAwMDANClxwYXIge1wqXGJrbWtlbmQgX2NwX3RleHRfMV80MH0NClxwYXIgfVxwYXJkIFxsdHJwYXJccWMgXGxpMFxyaTBcc2ExMjBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxzZWN0IH1cc2VjdGQgXGx0cnNlY3QNClxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVxzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XGZvb3RlcnIgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHFjIFxsaTBccmkwXHdpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCANClxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxhZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyNjM2MzQyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEV4aGliaXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI2MzYzNDJcY2hhcnJzaWQ4NDEyNDQ1IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBBfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjYzNjM0MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAtMn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI2MzYzNDJcY2hhcnJzaWQ4NDEyNDQ1IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICAtIH17XGZpZWxke1wqXGZsZGluc3Qgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDI2MzYzNDIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIFBBR0UgIFxcKiBBcmFiaWMgIFxcKiBNRVJHRUZPUk1BVCB9fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQxMDQ5NzU1NyBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAxMX19fVxzZWN0ZCBcbHRyc2VjdA0KXGxpbmV4MFxlbmRuaGVyZVxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZnMxOFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDI2MzYzNDIgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTBccmkwXHNsLTIwMFxzbG11bHQwXHdpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDI2MzYzNDJcY2hhcnJzaWQ5MTI1OTA3IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB9ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDI2MzYzNDIgDQpccGFyIH19XHBhcmRccGxhaW4gXGx0cnBhclxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxhZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIHtcKlxia21rc3RhcnQgX0RWX000OH17XCpcYmtta3N0YXJ0IF9EVl9NNDl9e1wqXGJrbWtzdGFydCBfRFZfTTUxfXtcKlxia21rc3RhcnQgX0RWX001Mn0NCntcKlxia21rc3RhcnQgX0RWX001M317XCpcYmtta2VuZCBfRFZfTTQ4fXtcKlxia21rZW5kIF9EVl9NNDl9e1wqXGJrbWtlbmQgX0RWX001MX17XCpcYmtta2VuZCBfRFZfTTUyfXtcKlxia21rZW5kIF9EVl9NNTN9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgRVhISUJJVCBBLX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAyfQ0Ke1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFjIFxsaTBccmkwXHNhNzIwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXHVsXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBFQVNFTUVOVFN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcYlx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFqIFxsaTBccmkwXHNhMjAwXHNsMjc2XHNsbXVsdDFcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGh5cGhwYXIwXGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAge1wqXGJrbWtzdGFydCBfY3BfdGV4dF8xXzQyfQ0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgVFJBQ1Qge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjM2N30xfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIHtcKlxia21rZW5kIERvY1hUZXh0UmVmMzY3fVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICAoU09ISEFSMDAwMSl9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcYlxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSANClxwYXIgfVxwYXJkIFxsdHJwYXJccWogXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGh5cGhwYXIwXGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV80M317XCpcYmtta2VuZCBfY3BfdGV4dF8xXzQyfQ0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgTGVhc1xoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGUgYW5kIEVhc2VtZW50IEFncmVlbWVudCBkYXRlZCBEZWNlbWJlciAxLCAyMDE2IGJ5IGFuZCBiZXR3ZWVuIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWYzNjh9MzN7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjM2OH0NCiBBICYgRyBMTEMgYW5kIEludmVuZXJneSBTb2xhciBEZXZlbG9wbWVudCBMTEMsIGFzIGZ1cnRoZXIgZXZpZGVuY2VkIGJ5IHRoYXQgTWVtb3JhbmR1bSBvZiBTb2xhciBMZWFzZSBhbmQgRWFzZW1lbnQgQWdyZWVtZW50IGFzIHJlY29yZGVkIE1hcmNoIDgsIDIwMTcgaW4gVm9sdW1lIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWYzNjl9NTQye1wqXGJrbWtlbmQgRG9jWFRleHRSZWYzNjl9LCBQYWdlIDE3MjUgb2YgdGhlIE9mZmljaQ0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgYVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGwgUmVjb3JkcyBvZiBIYXJkaW4gQ291bnR5LCBPaGlvLCBhcyBhbWVuZGVkIGJ5IHRoYX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDAxMDA0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCB0IH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEZpcnN0IEFtZW5kbWVudCB0byBMZWFzZSBhbmQgRWFzZW1lbnQgQWdyZWVtZW50IHJlY29yZGVkIEp1bmUgMjcsIDIwMTkgaW4gQm9vayB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmMzcwfTU1M3tcKlxia21rZW5kIERvY1hUZXh0UmVmMzcwfQ0KLCBQYWdlIDE1MDEgb2YgdGhlIE9mZmljaWFsIFJlY29yZHMgb2YgSGFyZGluIENvdW50eSwgT2hpbywgYW5kIGJ5IHRoYXQgdW5yZWNvcmRlZCBGaXJzdCBBbWVuZG1lbnQgdG8gTGVhc2UgYW5kIEVhc2VtZW50IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEFncmVlbWVudCBkYXRlZCBTZXB0ZW1iZXIgMTgsIDIwMTksIGFuZCBhcyBhc3NpZ25lZCB0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDU3MzI2MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgbyBIYXJkaW4gU29sfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MzE3ODEgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQphciBFbmVyZ3kgTExDLCBhIERlbGF3YXJlIGxpbWl0ZWQgbGlhYmlsaXR5IGNvbXBhbnksIGJ5IEFzc2lnbm1lbnQgYW5kIEFzc3VtcHRpb24gQWdyZWVtZW50IGRhdGVkIEFwcmlsIDI5LCAyMDIwIGFuZCByZWNvcmRlZCBNYXkgNSwgMjAyMCBpbiBCb29rIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWYzNzF9NTU2e1wqXGJrbWtlbmQgRG9jWFRleHRSZWYzNzF9LCBQYWdlIDIxMDUgb2YgdGhlIE9mZmljaWFsIFJlY29yZHMgb2YgSGFyDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBkaW4gQ291bnR5LCBPaGlvLCBvdmVyLCB1bmRlciBhbmQgYWNyb3NzIHRoZSBmb2xsb3dpbmcgZGVzY3JpYmVkIHByb3BlcnR5On17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTExMDA4MSANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGh5cGhwYXIwXGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkxMTAwODEge1wqXGJrbWtlbmQgX2NwX3RleHRfMV80M30NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkxMTAwODEge1wqXGJrbWtzdGFydCBfY3BfdGV4dF8xXzQ0fVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFRSQUNUIEk6DQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MTEwMDgxIHtcKlxia21rZW5kIF9jcF90ZXh0XzFfNDR9DQpccGFyIH1ccGFyZCBcbHRycGFyXHFqIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxoeXBocGFyMFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MTEwMDgxIHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV80NX1caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANClNpdHVhdGVkIGluIHRoZSBUb3duc2hpcCBvZiBNYXJpb24sIENvdW50eSBvZiBIYXJkaW4gYW5kIFN0YXRlIG9mIE9oaW8gYW5kIGJlaW5nIHRoZSBTb3V0aCBoYWxmIChTIDEvMikgb2YgU2VjdGlvbiB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmMzcyfTM0e1wqXGJrbWtlbmQgRG9jWFRleHRSZWYzNzJ9IGluIFRvd25zaGlwIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWYzNzN9NHtcKlxia21rZW5kIERvY1hUZXh0UmVmMzczfQ0KIFNvdXRoLCBSYW5nZSB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmMzc0fTl7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjM3NH0gRWFzdC59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgzNTA5MDggDQpccGFyIHtcKlxia21rZW5kIF9jcF90ZXh0XzFfNDV9DQpccGFyIHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV80Nn1caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBDb250YWluaW5nIGluIHRoXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgZSBhYm92ZSB0cmFjdCB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmMzc1fTMyMHtcKlxia21rZW5kIERvY1hUZXh0UmVmMzc1fSBhY3JlcywgbW9yZSBvciBsZXNzLg0KXHBhciB7XCpcYmtta2VuZCBfY3BfdGV4dF8xXzQ2fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfNDd9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgUGFyY2VsIE51bWJlcn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODEyMTQzIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHMge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjM3Nn0yOHtcKlxia21rZW5kIERvY1hUZXh0UmVmMzc2fS0zNDAwMDMuMDAwMCAoY29tYmluZWQgd2l0aCANCntcKlxia21rc3RhcnQgRG9jWFRleHRSZWYzNzd9Mjh7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjM3N30tMzQwMDA0LjAwMDApfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ3NDE3NzIyIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDM3NTU5NTAge1wqXGJrbWtlbmQgX2NwX3RleHRfMV80N30NClxwYXIge1wqXGJrbWtzdGFydCBfY3BfdGV4dF8xXzQ4fVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFByb3BlcnR5IEFkZHJlc3M6DQpccGFyIHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV80OX17XCpcYmtta2VuZCBfY3BfdGV4dF8xXzQ4fVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFRvd25zaGlwIFJvYWQge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjM3OH0xMjB7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjM3OH0sIEFsZ2VyLCBPaGlvLn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTU2NzE5NjggDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxoeXBocGFyMFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE1NjcxOTY4IHtcKlxia21rZW5kIF9jcF90ZXh0XzFfNDl9DQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNTY3MTk2OCB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfNTB9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgVFJBQ1QgSUk6DQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNTY3MTk2OCB7XCpcYmtta2VuZCBfY3BfdGV4dF8xXzUwfQ0KXHBhciB9XHBhcmQgXGx0cnBhclxxaiBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcaHlwaHBhcjBcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzczNTQxMyB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfNTF9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpTaXR1YXRlZCBpbiB0aGUgVG93bnNoaXAgb2YgUm91bmRoZWFkLCBDb3VudHkgb2YgSGFyZGluIGFuZCBTdGF0ZSBvZiBPaGlvLCB0by13aXQ6IFRoZSBOb3J0aFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBoYWxmIChOIDEvMikgb2YgU2VjdH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTcxMjM4NyBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBpb24gDQp7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmMzc5fTN7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjM3OX0gaW4gVG93bnNoaXAge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjM4Mn01e1wqXGJrbWtlbmQgRG9jWFRleHRSZWYzODJ9IFNvdXRoIG9mIFJhbmdlIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWYzODN9OXtcKlxia21rZW5kIERvY1hUZXh0UmVmMzgzfQ0KIEVhc3QsIGV4Y2VwdGluZyB0aGF0IHBhcnQgdGhlcmVvZiBjb252ZXllZCB0byBBbGV4IERvdHNvbiBieSBkZWVkIGRhdGVkIFNlcHRlbWJlciAxLCAxOTIwLCBhbmQgcmVjb3JkZWQgaW4gVm9sLiB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmMzg0fTEzNHtcKlxia21rZW5kIERvY1hUZXh0UmVmMzg0fSBhdCBQYWdlIDUzMC4gVGhpcyBleGNlcHRpb24gbW9yZSBwYXJ0aWN1bGFybHkgZGVzY3JpYmVkIGFzIGZvbGxvd3M6IEEgdHJpYW5ndWxhciBwDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBpZWNlIG9mIGxhbmQgYmVnaW5uaW5nIGluIHRoZSBTb3V0aGVhc3QgY29ybmVyIG9mIHNhaWQgTm9ydGggMS8yIG9mIFNlY3Rpb24ge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjM4MH0ze1wqXGJrbWtlbmQgRG9jWFRleHRSZWYzODB9LCBSb3VuZGhlYWQgVG93bnNoaXA7IHRoZW5jZSBOb3J0aCB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmMzg1fTg5e1wqXGJrbWtlbmQgRG9jWFRleHRSZWYzODV9DQogZGVncmVlcyA0NyBtaW51dGVzIFdlc3Qge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjM4OH04MDEuOXtcKlxia21rZW5kIERvY1hUZXh0UmVmMzg4fSBmZWV0IHRvIGEgcG9pbnQgaW4gU3RhdGUgSGlnaHdheSB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmMzg2fTE5NXtcKlxia21rZW5kIERvY1hUZXh0UmVmMzg2fTsgdGhlbmNlIE5vcnRoIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWYzODd9MTV7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjM4N30NCiBkZWdyZWVzIEVhc3Qgd2l0aCBzYWlkIGhpZ2h3YXkgMjcyNi42MiBmZWV0OyB0aGVuY2UgU291dFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGhcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgYWxvbmcgdGhlIEVhc3QgbGluZSBvZiBTZWN0aW9uIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWYzODF9M3tcKlxia21rZW5kIERvY1hUZXh0UmVmMzgxfSwgMjYxMS4yMSBmZWV0IHRvIHRoZSBwb2ludCBvZiBiZWdpbm5pbmcgY29udGFpbmluZyANCntcKlxia21rc3RhcnQgRG9jWFRleHRSZWYzODl9MjUuNzV7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjM4OX0gYWNyZXMuDQpccGFyIHtcKlxia21rZW5kIF9jcF90ZXh0XzFfNTF9DQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODkyMjU5NCB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfNTJ9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgU0FWRSBBTkQgRVhDRVBUOg0KXHBhciB7XCpcYmtta2VuZCBfY3BfdGV4dF8xXzUyfQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfNTN9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQWxzbyBleGNlcHRpbmcgYSBwYXJ0IHRoZXJlb2YgY29udmV5ZWQgdG8gdGhlIFN0YXRlIG9mIE9oaW8gYnkgZGVlZCBkYXRlZCBOb3ZlbWJlciAxNCwgMTkyOSwgYW5kIHJlY29yZGVkIGluIFZvbHVtZSB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmMzkwfTE1NHtcKlxia21rZW5kIERvY1hUZXh0UmVmMzkwfSBhdCBQYWdlIDQ1NiBvZiB0aGUgDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBkZWVkIFJlY29yZHMgb2YgSGFyZGluIENvdW50eSwgT2hpby4NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ2ODI4OTY0IHtcKlxia21rZW5kIF9jcF90ZXh0XzFfNTN9DQpccGFyIHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV81NH1caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBTYWlkIGV4Y2VwdGlvbiBtb3JlIHBhcnRpY3VsYXJseSBkZXNjcmliZWQgYXMgZm9sbG93czogTGFuZCBTaXR1YXRlZCBpbiBIYXJkaW4gQ291bnR5LCBPaGlvLCBSb3VuZGhlYWQgVG93bnNoaXAsIFNlY3Rpb24ge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjM5MX0ze1wqXGJrbWtlbmQgRG9jWFRleHRSZWYzOTF9DQosIFQ1UywgUjlFLCBhbmQgYm91bmRlZCBhbmQgZGVzY3JpYmVkIGFzIGZvbGxvd3M6IEJlZ2lubmluZyBhdCBhIHBvaW50IGluIHRoZSBXZXN0IHJpZ2h0IG9mIHdheSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBsaW5lLCBzYW1lIGJlaW5nIHRoZSBwcm9wZXJ0eSBsaW5lIGJldHdlZW4gVy4gUC4gYW5kIE1hcnkgQm9lY2hlcn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTc2ODA5NSANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBhbmQgdGhlIFNjaW90byBMYW5kIENvLiBhbmQgYXQgcmlnaHQgYW5nbGVzIHRvIGFuZCB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNDA3fTQ1e1wqXGJrbWtlbmQgRG9jWFRleHRSZWY0MDd9IGZlZXQgZnJvbSBTdGF0aW9uIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWYzOTJ9ODJ7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjM5Mn0gKyB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNDAyfTYzLjYNCntcKlxia21rZW5kIERvY1hUZXh0UmVmNDAyfSBvbiB0aGUgY2VudGVybGluZSBvZiBzdXJ2ZXkgbWFkZSBieSB0aGUgRGVwYXJ0bWVudCBvZiBIaWdod2F5czsgdGhlbmNlIE5vcnRoIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWYzOTN9MTd7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjM5M30gZGVncmVlcyA0NSBtaW51dGVzIEVhc3QgcGFyYVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KbGxlbCB0byBzYWlkIGNlbnRlcmxpbmUgb2Ygc3VydmV5IDg0NjkuNCBmZWV0IHRvIGEgcG9pbnQgd2hpY2ggaXMgYXQgcmlnaHQgYW5nbGVzIHRvIGFuZCB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNDA4fTQ1e1wqXGJrbWtlbmQgRG9jWFRleHRSZWY0MDh9IGZlZXQgZnJvbSBTdGF0aW9uIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWYzOTR9MTY3e1wqXGJrbWtlbmQgRG9jWFRleHRSZWYzOTR9DQogKyAzMyBvbiB0aGUgY2VudGVybGluZSBvZiBzdXJ2ZXk7IHRoZW5jZSBTb3V0aCB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmMzk1fTcye1wqXGJrbWtlbmQgRG9jWFRleHRSZWYzOTV9IGRlZ3JlZXMgMTUgbWludXRlcyBFYXN0IHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWYzOTZ9NDV7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjM5Nn0gZmVldCB0byBhIHBvaW50IHdoaWNoIFN0YXRpb24ge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjM5N30xNjcNCntcKlxia21rZW5kIERvY1hUZXh0UmVmMzk3fSArIDMzIG9uIHRoZSBjZW50ZXJsaW5lIG9mIHN1cnZcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBlXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgeTsgdGhlbmNlIFNvdXRoIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWYzOTh9MTd7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjM5OH0NCiBkZWdyZWVzIDQ1IG1pbnV0ZXMgV2VzdCBhbG9uZyB0aGUgY2VudGVybGluZSBvZiBzdXJ2ZXkgODQ1NS40IGZlZXQgdG8gYSBwb2ludCB3aGljaCBpcyBTdGF0aW9uIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWYzOTl9ODJ7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjM5OX0gKyB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNDAzfTc3LjZ7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjQwM30NCiBvbiB0aGUgY2VudGVybGluZSBvZiBzdXJ2ZXk7IHRoZW5jZSBOb3J0aCB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNDAwfTB7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjQwMH0gZGVncmVlcyAxOCBtaW51dGVzIEVhc3QgYWxvbmcgdGhlIHByb3BlcnR5IGxpbmUgb2YgVy4gUC4gYW5kIE1hcnkgQm9lY2hlciBhbmQgVGhlIFNjaW90XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgb1xoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBMYW5kIENvLiANCntcKlxia21rc3RhcnQgRG9jWFRleHRSZWY0MDR9NDcuODh7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjQwNH0NCiBmZWV0IHRvIHRoZSBwb2ludCBvZiBiZWdpbm5pbmcgYXMgc2hvd24gYnkgcGxhbnMgb24gZmlsZSBpbiB0aGUgb2ZmaWNlIG9mIHRoZSBEZXBhcnRtZW50IG9mIEhpZ2h3YXlzLCBDb2x1bWJ1cywgT2hpby4gSXQgaXMgdW5kZXJzdG9vZCB0aGF0IHRoZSBzdHJpcCBvZiBsYW5kIGFib3ZlIGRlc2NyaWJlZCBpcyBub3QgdG8gYmUgaW4gZXhjZXNzIG9mIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY0MDF9MTUNCntcKlxia21rZW5kIERvY1hUZXh0UmVmNDAxfSBmZWV0IGluIHdpZHRoLCBleGNlcHQgYXMgaGVyZWluYWZ0ZXJcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgc3RpcHVsYXRlZCBvbiBzaGVldCBhfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNDg4MjQzOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBuZCBjb250YWlucyANCntcKlxia21rc3RhcnQgRG9jWFRleHRSZWY0MDV9OC43NDR7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjQwNX0gYWNyZXMsIG1vcmUgb3IgbGVzcywgb2Ygd2hpY2ggdGhlIHByZXNlbnQgcm9hZCBvY2N1cGllcyB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNDA2fTUuNTc4e1wqXGJrbWtlbmQgRG9jWFRleHRSZWY0MDZ9IGFjcmVzLCBtb3JlIG9yIGxlc3MuDQpccGFyIHtcKlxia21rZW5kIF9jcF90ZXh0XzFfNTR9DQpccGFyIHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV81NX1caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBTQVZFIEFORCBFWENFUFQ6DQpccGFyIHtcKlxia21rZW5kIF9jcF90ZXh0XzFfNTV9DQpccGFyIHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV81Nn1caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBTYXZlIGFuZCBleGNlcHQgdGhlIHJlYWwgZXN0YXRlIGRlc2NyaWJlZCBpbiBWb2x1bWUge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjQwOX02NntcKlxia21rZW5kIERvY1hUZXh0UmVmNDA5fSBvZiB0aGUgSGFyZGluIENvdW50eSB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjggXGx0cmNoXGZjczAgDQpcZGJjaFxhZjM5XGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYzOVxsb2NoXGYwIFJlY29yZGVyfXtccnRsY2hcZmNzMSBcYWYwXGFmczI4IFxsdHJjaFxmY3MwIFxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMzlcaGljaFxmMCBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyOCBcbHRyY2hcZmNzMCANClxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjM5XGxvY2hcZjAgc317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBPZmZpY2UgYXQgUGFnZSAxODEsIGJlaW5nIGEgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpwYXJ0IG9mIHRoZSBOb3J0aHdlc3QgUXVhcnRlciBvZiBTZWN0aW9uIE5vLiAzLCBULjUgUy4sIFIuIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY0MTB9OXtcKlxia21rZW5kIERvY1hUZXh0UmVmNDEwfSBFLiwgUm91bmRoZWFkIFRvd25zaGlwLCBIYXJkaW4gQ291bnR5LCBTdGF0ZSBvZiBPaGlvIGFuZCBmdXJ0aGVyIGRlc2NyaWJlZCBhcyBmb2xsb3dzOn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSB7XCpcYmtta2VuZCBfY3BfdGV4dF8xXzU2fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfNTd9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQmVnaW5uaW5nIGF0IGEgcG9pbnQgbWFya2VkIGJ5IGEgcmFpbHJvYWQgc3Bpa2Ugc2V0IGluIHBhdmVtZW50IG92ZXIgdGhlIHN0b25lIGF0IHRoZSBTb3V0aHdlc3QgQ29ybmVyIG9mIHRcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBoZSBzYWlkIE5vcnRod2VzdCBRdWFydGVyOyB0aGVuY2UgTm9ydGggDQp7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNDExfTB7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjQxMX0gZH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgZWdyZWVzIDE4IG1pbnV0ZXMgV2VzdCBvbiB0aGUgV2VzdCBsaW5lIG9mIHNhaWQgTm9ydGh3ZXN0IFF1YXJ0ZXIgYSBkaXN0YW5jZSBvZiANCntcKlxia21rc3RhcnQgRG9jWFRleHRSZWY0MTN9Mzc1LjAwe1wqXGJrbWtlbmQgRG9jWFRleHRSZWY0MTN9IGZlZXQgdG8gYSBwb2ludCBtYXJrZWQgYnkgYSBzdGVlbCByb2Q7IHRoZW5jZSBFYXN0IGEgZGlzdGFuY2Ugb2Yge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjQxNH0zMTAuMDB7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjQxNH0gZmVldCB0byBhIHBvaW50IG1hcmtlZCBieSBhIHN0ZWVsIHJvZDsgdGhlbmNlIFNvdXRoIA0Ke1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjQxMn0we1wqXGJrbWtlbmQgRG9jWFRleHRSZWY0MTJ9IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGRlZ3JlZXMgMTggbWludXRlcyBFYXN0IGEgZGlzdGFuY2Ugb2Yge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjQxNX0zNzV9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDQwMTAwNDQgLjB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjMxMDEyOCAwe1wqXGJrbWtlbmQgRG9jWFRleHRSZWY0MTV9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIGZlZXQgdG8gYSBwb2ludCBtYXJrZWQgYnkgYSBuYWlsIHNldCBpbiBwYXZlbWVudCBvbiB0aGUgU291dGggbGluZSBvZiBzYWlkIFNlY3Rpb24gTm8uIDM7IHRoZW5jZSBXZXN0IGEgZGlzdGFuY2Ugb2Yge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjQxNn0zMTAuMDANCntcKlxia21rZW5kIERvY1hUZXh0UmVmNDE2fSBmZWV0IHRvIHRoZSBwbGFjZSBvZiBiZWdpbm5pbmcsIGNvbnRhaW5pbmcge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjQxN30yLjY2OHtcKlxia21rZW5kIERvY1hUZXh0UmVmNDE3fSBhY3JlcyBvZiBsYW5kIG1vcmUgb3IgbGVzcyBidXQgc3ViamVjdCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCB0byBhbGwgbGVnYWwgaGlnaHdheXMuDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTczMjYxOCB7XCpcYmtta2VuZCBfY3BfdGV4dF8xXzU3fQ0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkzMTc4MSB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfNTh9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgSm9obiBXLiBEZXJpbmdlciwgUmVnaXN0ZXJlZCBTdXJ2ZXlvciBOby4gNDg2MywgT2hpby4NClxwYXIge1wqXGJrbWtlbmQgX2NwX3RleHRfMV81OH0NClxwYXIge1wqXGJrbWtzdGFydCBfY3BfdGV4dF8xXzU5fVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIENvbnRhaW5pbmcgYWZ0ZXIgc2FpZCBleGNlcHRpb25zIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY0MTh9MjgyLjg0MntcKlxia21rZW5kIERvY1hUZXh0UmVmNDE4fSBhY3JlcyBtb3JlIG9yIGxlc3MufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MTEwMDgxIA0KXHBhciB7XCpcYmtta2VuZCBfY3BfdGV4dF8xXzU5fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfNjB9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgUGFyY2VsIE5vLiAzNy0wMjAwMDEuMDAwMA0KXHBhciB7XCpcYmtta2VuZCBfY3BfdGV4dF8xXzYwfQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfNjF9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgUHJvcGVydHkgQWRkcmVzczoNClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MzUwOTA4IHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV82Mn17XCpcYmtta2VuZCBfY3BfdGV4dF8xXzYxfVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIENvdW50eSBSb2FkIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY0MTl9MTMwe1wqXGJrbWtlbmQgRG9jWFRleHRSZWY0MTl9LCBSb3VuZGhlYWQsIE9oaW8uIA0KXHBhciB7XCpcYmtta2VuZCBfY3BfdGV4dF8xXzYyfQ0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODM1MDkwOCB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfNjN9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgVFJBQ1QgSUlJOg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgzNTA5MDgge1wqXGJrbWtlbmQgX2NwX3RleHRfMV82M30NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MTIxNDMge1wqXGJrbWtzdGFydCBfY3BfdGV4dF8xXzY0fVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFNpdHVhdGVkIGluIHRoZSBUb3duc2hcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBpcCBvZiBNYXJpb24gYW5kIE1jRG9uYWxkLCBIYXJkaW4gQ291bnR5LCBPfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDc0MTc3MjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgaGlvLCB0by13aXQ6fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQzNzU1OTUwIA0KXHBhciB7XCpcYmtta2VuZCBfY3BfdGV4dF8xXzY0fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfNjV9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQmVpbmcgdGhlIFNvdXRoIGhhbGYgb2YgRnJhY3Rpb25hbCBTZWN0aW9uIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY0MjB9MzV7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjQyMH0sIFRvd25zaGlwIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY0MjV9NHtcKlxia21rZW5kIERvY1hUZXh0UmVmNDI1fSBTb3V0aCwgUmFuZ2UgDQp7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNDI2fTl7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjQyNn0gRWFzdCwgTWFyaW9uIFRvd25zaGlwIGFuZCBhIHBhcnQgb2YgVmlyZ2luaWEgTWlsaXRhcnkgU3VydmV5IE5vLiAxNTAyNiwgTWNEb25hbGQgVG93bnNoaXAsIGFsbCBpbiBIYXJkaW4gQ291bnR5LCBPaGlvLCBhbmQgbW9yXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgZSBwYXJ0aWN1bGFybHkgZGVzY3JpYmVkIGFzIGZvbGxvd3M6IEJlZ2l9ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTU2NzE5NjggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgbm5pbmcgYXQgYW4gaXJvbiBwaXBlIGF0IHRoZSBTb3V0aHdlc3QgY29ybmVyIG9mIHNhaWQgRnJhY3Rpb25hbCBTZWN0aW9uIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY0MjF9MzV7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjQyMX0NCiBhbmQgaW4gdGhlIFdlc3QgQmFuayBvZiB0aGUgbmV3IGNoYW5uZWwgb2YgdGhlIFNjaW90byBSaXZlciB0aGVuY2UgTm9ydGggYWxvbmcgdGhlIFdlc3QgbGluZSBvZiBzYWlkIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY0MjR9U2VjdGlvbiB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNDIyfTM1e1wqXGJrbWtlbmQgRG9jWFRleHRSZWY0MjJ9IGF7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjQyNH0gZGlzdGFuY2Ugb2YgMiw3MzguNTEgZmVldA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIHRvIGEgc3Rha2UgYXQgdGhlIE5vcnRod2VzdCBjb3JuZXIgb2Ygc2FpZH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzczNTQxMyBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgU291dGggaGFsZiBvZiBGcmFjdGlvbmFsIFNlY3Rpb24ge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjQyM30zNXtcKlxia21rZW5kIERvY1hUZXh0UmVmNDIzfQ0KOyB0aGVuY2UgRWFzdCBhbG9uZyB0aGUgaGFsZiBzZWN0aW9uIGxpbmUgYSBkaXN0YW5jZSBvZiB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNDI3fTcwMHtcKlxia21rZW5kIERvY1hUZXh0UmVmNDI3fSBmZWV0IHRvIGEgc3Rha2U7IHRoZW5jZSBTb3V0aCBhIGRpc3RhbmNlIG9mIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY0Mjh9NTB7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjQyOH0NCiBmZWV0IHRvIGEgc3Rha2U7IHRoZW5jZSBFYXN0IGFuZCBwYXJhbGxlfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1NzEyMzg3IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGwgdG8gdGhlIGhhbGYgc2VjdGlvbiBsaW5lIGEgZFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGlzdGFuY2Ugb2Yge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjQzMX0xNDMuMTANCntcKlxia21rZW5kIERvY1hUZXh0UmVmNDMxfSBmZWV0IHRvIGFuIGlyb24gcGluIG9uIHRoZSBXZXN0IEJhbmsgb2YgdGhlIG5ldyBjaGFubmVsIG9mIHRoZSBTY2lvdG8gcml2ZXI7IHRoZW5jZSBTb3V0aGVybHkgd2l0aCBhbiBpbnRlcmlvciBhbmdsZSBvZiB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNDI5fTcze1wqXGJrbWtlbmQgRG9jWFRleHRSZWY0Mjl9IGRlZ3JlZXMgMjYgbWludXRlcyB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNDMwfQ0KMzB7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjQzMH0gc2Vjb25kcyBhbmQgYWxvbmcgdGhlIFdlc3QgQmFuayBvZiB0aGUgbmV3IGNoYW5uZWwgb2YgdGhlIFNjaW90byByaXZlciBhIGRpc3RhbmNlIG9mIDIsODExLjVcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAxXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIGZlZXQgdG8gdGhlIHBsYWNlIG9mIGJlZ2lubmluZyBjb250YWluaW5nIGluIGFsbCB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNDMyDQp9MjcuNTR7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjQzMn0gYWNyZXMgb2YgbGFuZCwgc3ViamVjdCB0byBhbGwgbGVnYWwgaGlnaHdheXMgYW5kIGVhc2VtZW50cyBvZiByZWNvcmQuDQpccGFyIHtcKlxia21rZW5kIF9jcF90ZXh0XzFfNjV9DQpccGFyIHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV82Nn1caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBKb2huIFcuIERlcmluZ2VyLCBSZWdpc3RlcmVkIFN1cnZleW9yIE5vLiA0ODYzLCBPaGlvDQpccGFyIHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV82N317XCpcYmtta2VuZCBfY3BfdGV4dF8xXzY2fVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4OTIyNTk0IHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV82OH17XCpcYmtta2VuZCBfY3BfdGV4dF8xXzY3fVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFBhcmNlbCBOby4gMjgtMzUwMDAyLjAwMDANClxwYXIge1wqXGJrbWtlbmQgX2NwX3RleHRfMV82OH0NClxwYXIge1wqXGJrbWtzdGFydCBfY3BfdGV4dF8xXzY5fVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFByb3BlcnR5IEFkZHJlc3M6DQpccGFyIHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV83MH17XCpcYmtta2VuZCBfY3BfdGV4dF8xXzY5fVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFRvd25zaGlwIFJvYWQge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjQzM30xMjB7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjQzM30sIEFsZ2VyLCBPaGlcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBvLn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ2ODI4OTY0IA0KXHBhciB7XCpcYmtta2VuZCBfY3BfdGV4dF8xXzcwfQ0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNjgyODk2NCB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfNzF9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgVFJBQ1QgSVY6DQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNjgyODk2NCB7XCpcYmtta2VuZCBfY3BfdGV4dF8xXzcxfQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfNzJ9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgU2l0dWF0ZWQgaW4gdGhlIFRvd25zaGlwIG99e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDk3NjgwOTUgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgZiBNYXJpb24sIENvdW50eSBvZiBIYXJkaW4gYW5kIFN0YXRlIG9mIE9oaW86DQpccGFyIHtcKlxia21rZW5kIF9jcF90ZXh0XzFfNzJ9DQpccGFyIHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV83M31caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBCZWluZyB0aGUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDk3NjgwOTUgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgV2VzdCAxLzJ9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIG9mfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgdGhlIE5vcnRoIDEvMiBvZiBTZWN0aW9uIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY0MzR9MzR7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjQzNH0sIFRvd25zaGlwIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY0MzV9NHtcKlxia21rZW5kIERvY1hUZXh0UmVmNDM1fSBTb3V0aCwgUmFuZ2Uge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjQzNn0NCjl9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IHtcKlxia21rZW5kIERvY1hUZXh0UmVmNDM2fVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBFYXN0LCBNYXJpb24gVG93bnNoaXAsIEhhcmRpbiBDb3VudHksIE9oaW8uDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDAxMDA0NCB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfNzR9e1wqXGJrbWtlbmQgX2NwX3RleHRfMV83M31caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfNzV9e1wqXGJrbWtlbmQgX2NwX3RleHRfMV83NH1caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBDb250YWluaW5nIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY0Mzd9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgMTYwfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDU3MzI2MTgge1wqXGJrbWtlbmQgRG9jWFRleHRSZWY0Mzd9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIGFjcmVzLCBtb3JlIG9yIGxlc3MufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MzE3ODEgDQpccGFyIHtcKlxia21rZW5kIF9jcF90ZXh0XzFfNzV9DQpccGFyIHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV83Nn1caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBQYXJjZWwgTlxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHVtYmVycyB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNDM4fTI4e1wqXGJrbWtlbmQgRG9jWFRleHRSZWY0Mzh9LTM0MDAwMS4wMDAwDQpccGFyIHtcKlxia21rZW5kIF9jcF90ZXh0XzFfNzZ9DQpccGFyIHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV83N31caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBQcm9wZXJ0eSBBZGRyZXNzOn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTExMDA4MSANClxwYXIge1wqXGJrbWtzdGFydCBfY3BfdGV4dF8xXzc4fXtcKlxia21rZW5kIF9jcF90ZXh0XzFfNzd9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgVG93bnNoaXAgUm9hZCB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNDM5fTEyMHtcKlxia21rZW5kIERvY1hUZXh0UmVmNDM5fSwgQWxnZXIsIE9oaW8uDQpccGFyIH1ccGFyZCBcbHRycGFyXHFqIFxsaTBccmkwXHNhMjAwXHNsMjc2XHNsbXVsdDFcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGh5cGhwYXIwXGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGZzMjhcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTExMDA4MSB7XCpcYmtta2VuZCBfY3BfdGV4dF8xXzc4fQ0KXHBhciB9XHBhcmQgXGx0cnBhclxxaiBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcaHlwaHBhcjBcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MTEwMDgxIHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV83OX1caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBUUkFDVCBWSToNCg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODM1MDkwOCB7XCpcYmtta2VuZCBfY3BfdGV4dF8xXzc5fQ0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgzNTA5MDgge1wqXGJrbWtzdGFydCBfY3BfdGV4dF8xXzgwfVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFNpdHVhdGVkIGluIHRoZSBDb3VudHkgb2YgSGFyZGluLCBpbiB0aGUgU3RhdGUgb2YgT2hpbyBhbmQgaW4gdGhlIFRvd25zaGlwIG9mIE1hcmlvbjoNClxwYXIge1wqXGJrbWtlbmQgX2NwX3RleHRfMV84MH0NClxwYXIge1wqXGJrbWtzdGFydCBfY3BfdGV4dF8xXzgxfVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEJlaW5nIHRoZSBOb3J0aCBvbmUtaGFsZiBvZiB0aGUgU291dGhlYXN0IHF1YXJ0ZXIgb2YgU2VjdGlvbiBUaGlydHktdGhyZWUgaW4gVG93bnNoaVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHAge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjQ0Mn00e1wqXGJrbWtlbmQgRG9jWFRleHRSZWY0NDJ9DQosIFNvdXRoIG9mIFJhbmdlIE5pbmUgRWFzdCwgY29udGFpbmluZyB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgxMjE0MyBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBieSByZXN1cnZleSwge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjQ0N304My42MXtcKlxia21rZW5kIERvY1hUZXh0UmVmNDQ3fSBhY3JlcywgbW9yZSBvciBsZXNzLiB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjggDQpcbHRyY2hcZmNzMCBcZGJjaFxhZjM5XGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjM5XGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEFsc28sIGFuIGVhc2VtZW50IGZvciBpbmdyZXNzIGFuZCBlZ3Jlc3Mgb3ZlciB0aGUgV2VzdCBuaW5ldHkge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjQ0M30oOTApDQp7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjQ0M30gZmVldCBvZmYgdGhlIGV9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIG50aXJlIFdlc3Qgc2lkZSBvZiB0aGUgTm9ydGh3ZXN0IHF1YXJ0ZXIgb2YgU2VjdGlvbiB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNDQwfTM0e1wqXGJrbWtlbmQgRG9jWFRleHRSZWY0NDB9LCBUb3duc2hpcCANCntcKlxia21rc3RhcnQgRG9jWFRleHRSZWY0NDR9NHtcKlxia21rZW5kIERvY1hUZXh0UmVmNDQ0fSBTb3V0aCwgUmFuZ2Uge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjQ0NX05e1wqXGJrbWtlbmQgRG9jWFRleHRSZWY0NDV9IEVhc3QgYW5kIGFcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgcGFyY2VsIG9mIGxhbmQgbmluZXR5IHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY0NDZ9KDkwKXtcKlxia21rZW5kIERvY1hUZXh0UmVmNDQ2fQ0KIGZlZXQgc3F1YXJlIHNpfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCB0dWF0ZWQgaW4gdGhlIE5vcnRod2VzdCBjb3JuZXIgb2YgdGhlIFNvdXRoLXdlc3Qgb2YgU2VjdGlvbiB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNDQxfTM0e1wqXGJrbWtlbmQgRG9jWFRleHRSZWY0NDF9LCBUNFMsIFI5RS4gfXtccnRsY2hcZmNzMSANClxhZjBcYWZzMjggXGx0cmNoXGZjczAgXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYzOVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBSZWFsIGVzdGF0ZSBsb2NhdGVkIGF0IFQuUi4xMjAsIE1hcmlvbiBUb3duc2hpcH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAsIEhhcmRpbiBDb3VudHksIE9oaW8ufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSANClxwYXIge1wqXGJrbWtlbmQgX2NwX3RleHRfMV84MX0NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfODJ9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgUGFyY2VsIE5vLiAyOC0zMzAwMDcuMDAwMCANClxwYXIge1wqXGJrbWtlbmQgX2NwX3RleHRfMV84Mn0NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ0MDEwMDQ0IHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV84M31caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBQcm9wZXJ0eSBBZGRyZXNzOn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjMxMDEyOCANClxwYXIge1wqXGJrbWtzdGFydCBfY3BfdGV4dF8xXzg0fXtcKlxia21rZW5kIF9jcF90ZXh0XzFfODN9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgVG93bnNoaXAgUm9hZCB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNDQ4fTEyMHtcKlxia21rZW5kIERvY1hUZXh0UmVmNDQ4fSwgQWxnXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgZXIsIE9oaW8uDQpccGFyIH1ccGFyZCBcbHRycGFyXHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxoeXBocGFyMFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxmczI4XGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjgge1wqXGJrbWtlbmQgX2NwX3RleHRfMV84NH0NClxwYXIgfVxwYXJkIFxsdHJwYXJccWogXGxpMFxyaTBcc2EyMDBcc2wyNzZcc2xtdWx0MVx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcaHlwaHBhcjBcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1NzMyNjE4IHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV84NX0NClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFRSQUNUIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY0NDl9M3tcKlxia21rZW5kIERvY1hUZXh0UmVmNDQ5fSAoU09ISFIyMDAwMyl9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTMxNzgxIA0KXHBhciB9XHBhcmQgXGx0cnBhclxxaiBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcaHlwaHBhcjBcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTMxNzgxIHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV84Nn17XCpcYmtta2VuZCBfY3BfdGV4dF8xXzg1fQ0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgU29sYXIgTGVhc2UgYW5kIEVhc2VtZW50IEFncmVlbWVudCBkYXRlZCBGZWJydWFyeSAyNywgMjAxOCBieSBhbmQgYmV0d2VlbiBHYXJ5IEEuIEhhbGwgYW5kIEludmVuZXJneSBTb2xhciBEZXZlbG9wbWVudCBOb3J0aCBBbWVyaWNhIExMQywgYXMgZnVydGhlciBldmlkZW5jZWQgYnkgdGhhdCBNZW1vcmFuZHVtIG9mIFNvbGFyIExlYXNlIGFuZCBFYXNlbWVudCBBZ3JlZW1lbnQgcmVjb3JkZWQNClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBKdWx5IDEyLCAyMDE4IGluIEJvb2sge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjQ1MH01NTB7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjQ1MH0sIFBhZ2UgMjYyMyBvZiB0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MTEwMDgxIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KaGUgT2ZmaWNpYWwgUmVjb3JkcyBvZiBIYXJkaW4gQ291bnR5LCBPaGlvLCBhcyBhbWVuZGVkIGJ5IHRoYXQgRmlyc3QgQW1lbmRtZW50IGFuZCBKb2luZGVyIHRvIFNvbGFyIExlYXNlIGFuZCBFYXNlbWVudCBBZ3JlZW1lbnQgcmVjb3JkZWQgSnVseSA4LCAyMDE5IGluIEJvb2sge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjQ1MX01NTN7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjQ1MX0NCiwgUGFnZSAyMDY3IG9mIHRoZSBPZmZpY2lhbCBSZWNvcmRzIG9mIEhhcmRpbiBDb3VudHlcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCiwgT2hpbywgYW5kIGFzIGFzc2lnbmVkIHRvIEhhcmRpbiBTb2xhciBFbmVyZ3kgTExDLCBhIERlbGF3YXJlIGxpbWl0ZWQgbGlhYmlsaXR5IGNvbXBhbnksIGJ5IEFzc2lnbm1lbnQgYW5kIEFzc3VtcHRpb24gQWdyZWVtZW50IGRhdGVkIEFwcmlsIDI5LCAyMDIwIGFuZCByZWNvcmRlZCBNYXkgNSwgMjAyMCBpbiBCb29rIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY0NTJ9NTU2e1wqXGJrbWtlbmQgRG9jWFRleHRSZWY0NTJ9DQosIFBhZ2UgMjA4NiBvZiB0aGUgT2ZmaWNpYWwgUmVjb3JkcyBvZiBIYXJkaW4gQ291bnR5LCBPaGlvLCBvdmVyLCB1bmRcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBlXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgciBhbmQgYWNyb3NzIHRoZSBmb2xsb3dpbmcgZGVzY3JpYmVkIHByb317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODM1MDkwOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCnBlcnR5Og0KXHBhciB7XCpcYmtta2VuZCBfY3BfdGV4dF8xXzg2fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfODd9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgU2l0dWF0ZWQgaXMgdGhlIFRvd25zaGlwIG9mIE1hcmlvbiwgSGFyZGluIENvdW50eSBhbmQgU3RhdGUgb2YgT2hpbyBjb250YWluaW5nIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY0NTN9ODB7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjQ1M30gYWNyZXMsIHRvLXdpdDoNClxwYXIge1wqXGJrbWtlbmQgX2NwX3RleHRfMV84N30NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MTIxNDMge1wqXGJrbWtzdGFydCBfY3BfdGV4dF8xXzg4fVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFRoZSBFYXN0IGhhbGYgb2YgdGhlIE5vcnRoZWFzdCBRdWFydGVyIG9mIFNlY3Rpb24gVGhpcnR5LXRocmVlIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY0NTR9KDMzKXtcKlxia21rZW5kIERvY1hUZXh0UmVmNDU0fQ0KLCBUb3duc2hpcCBGb3VyIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY0NTV9KDQpe1wqXGJrbWtlbmQgRG9jWFRleHRSZWY0NTV9IFNvdXRoIG9mIFJhbmdlIE5pbmUge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjQ1Nn0oOSl7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjQ1Nn1caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgRWFzdCBpbiBzYWlkIE1hcmlvbiBUb3duc2hpcCwgQ291bnR5IGFuZCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzQxNzcyMiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBTdGF0ZSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDM3NTU5NTAgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgYWZvcmVzYWlkLg0KXHBhciB7XCpcYmtta2VuZCBfY3BfdGV4dF8xXzg4fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfODl9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgUFBOOiB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNDU3fTI4e1wqXGJrbWtlbmQgRG9jWFRleHRSZWY0NTd9LTMzMDAxMC4wMDAwfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNTY3MTk2OCANClxwYXIgfVxwYXJkIFxsdHJwYXJccWogXGxpMFxyaTBcc2EyMDBcc2wyNzZcc2xtdWx0MVx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcaHlwaHBhcjBcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTU2NzE5Njgge1wqXGJrbWtlbmQgX2NwX3RleHRfMV84OX0NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE1NjcxOTY4IHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV85MH1caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBUUkFDVCB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNDU4fTd7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjQ1OH0gKFNPSEhSMjAwMDQpfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTU2NzE5NjggDQpccGFyIH1ccGFyZCBcbHRycGFyXHFqIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxoeXBocGFyMFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNTY3MTk2OCB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfOTF9e1wqXGJrbWtlbmQgX2NwX3RleHRfMV85MH0NClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFNvbGFyIExlYXNlIGFuZCBFYXNlbWVudCBkYXRlZCBNYXJjaCAxNCwgMjAxOCBieSBhbmQgYmV0d2VlbiBNaWR3ZXN0IE9oaW8gRmFybXMgTExDIGFuZCBJbnZlbmVyZ3kgU29sYXIgRGV2ZWxvcG1lbnQgTm9ydGggQW1lcmljYSBMTEMsIGFzIGZ1cnRoZXIgZXZpZGVuY2VcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBkIGJ5IHRoYXQgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDc3MzU0MTMgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgTWVtb3JhbmR1bSBvZiBTb2xhciBMZWFzZSBhbmQgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1NzEyMzg3IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEVhc2VtZW50IEFncmVlbWVudCByZWNvcmRlZCBKdWx5IDEyLCAyMDE4IGluIEJvb2sgDQp7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNDU5fTU1MHtcKlxia21rZW5kIERvY1hUZXh0UmVmNDU5fSwgUGFnZSAyNjEzIG9mIHRoZSBPZmZpY2lhbCBSZWNvcmRzIG9mIEhhcmRpbiBDb3VudHksIE9oaW8sIGFzIGFtZW5kZWQgYnkgdGhhdCBGaXJzdCBBbWVuZG1lbnQgdG8gU29sYXIgTGVhc2UgYW5kIEVhc2VtZW50IEFncmVlbWVudCByZWNvcmRlZCBKdWx5IDgsIDIwMTkgaW4gQm9vayB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNDYwfQ0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgNTUze1wqXGJrbWtlbmQgRG9jWFRleHRSZWY0NjB9DQosIFBhZ2UgMjA3MiBvZiB0aGUgT2ZmaWNpYWwgUmVjb3JkcyBvZiBIYXJkaW4gQ291bnR5LCBPaGlvLCBhbmQgYXMgYXNzaWduZWQgdG8gSGFyZGluIFNvbGFyIEVuZXJneSBMTEMsIGEgRGVsYXdhcmUgbGltaXRlZCBsaWFiaWxpdHkgY29tcGFueSwgYnkgQXNzaWdubWVudCBhbmQgQXNzdW1wdGlvbiBBZ3JlZW1lbnQgZGF0ZWQgQXByaWwgMjksIDIwMjAgYW5kIHJlY29yZGVkIE1heSA1LCAyMDIwIGluIEJvb2sgDQp7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNDYxfTU1NntcKlxia21rZW5kIERvY1hUZXh0UmVmNDYxfSwgUGFnZSAyMDg2XyBvXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgZlxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB0aGUgT2ZmaWNpYWwgUmVjb3JkcyBvZiBIYXJkaW4gQ291bnR5LCBPaGlvLCBvdmVyLCB1bmRlciBhbmQgYWNyb3NzIHRoZSBmb2xsb3dpbmcgZGVzY3JpYmVkIHByb3BlcnR5Og0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDg5MjI1OTQge1wqXGJrbWtlbmQgX2NwX3RleHRfMV85MX0NClxwYXIge1wqXGJrbWtzdGFydCBfY3BfdGV4dF8xXzkyfVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFNpdHVhdGVkIGluIHRoZSBUb3duc2hpcCBvZiBNYXJpb24sIENvdW50eSBvZiBIYXJkaW4gYW5kIFN0YXRlIG9mIE9oaW86DQpccGFyIHtcKlxia21rZW5kIF9jcF90ZXh0XzFfOTJ9DQpccGFyIHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV85M31caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBCZWluZyBhbGwgb2YgU2VjdGlvbiB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNDYyfTI3e1wqXGJrbWtlbmQgRG9jWFRleHRSZWY0NjJ9LCBUb3duc2hpcCB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNDYzfTR7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjQ2M30gU291dGgsIFJhbmdlIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY0NjR9OQ0Ke1wqXGJrbWtlbmQgRG9jWFRleHRSZWY0NjR9IEVhc3QsIE1hcmlvbiBUb3duc2hpcCwgSGFyZGlcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBuIENvdW50eSwgT2hpbyBhbmQgbW9yZSBwYXJ0aWN1bGFybHkgZGVzY3J9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDY4Mjg5NjQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgaWJlZCBhcyBmb2xsb3dzOg0KXHBhciB7XCpcYmtta2VuZCBfY3BfdGV4dF8xXzkzfQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfOTR9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQmVnaW5uaW5nIGF0IGEgNS84IGluY2ggcmViYXIgc2V0IGF0IHRoZSBOb3J0aGVhc3QgY29ybmVyIG9mIHNhaWQgU2VjdGlvbiB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNDY1fTI3e1wqXGJrbWtlbmQgRG9jWFRleHRSZWY0NjV9Ow0KXHBhciB7XCpcYmtta2VuZCBfY3BfdGV4dF8xXzk0fQ0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDk3NjgwOTUge1wqXGJrbWtzdGFydCBfY3BfdGV4dF8xXzk1fVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFxoaWNoXGYwIFRoZW5jZSBTb3V0aCAwMFwnYjBcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCANCntcKlxia21rc3RhcnQgRG9jWFRleHRSZWY0Njh9XGhpY2hcYWYwXGRiY2hcYWYzOVxsb2NoXGYwIDM1fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0IHtcKlxia21rZW5kIERvY1hUZXh0UmVmNDY4fVxsb2NoXGFmMFxkYmNoXGFmMzlcaGljaFxmMCBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY0Njl9NDF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDQge1wqXGJrbWtlbmQgRG9jWFRleHRSZWY0Njl9XGxvY2hcYWYwXGRiY2hcYWYzOVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBFYXN0IHdpdGggdGhlIEVhc3QgbGluZSBvZiBzYWlkIFNlY3Rpb24ge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjQ2Nn0yN3tcKlxia21rZW5kIERvY1hUZXh0UmVmNDY2fSwgNTQwNy4xOSBmZWV0IHRvIGEgNS84IGluY2ggcmViYXIgZm91bmQgYXQgdGhlIFNvXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgdXRoZWFzdCBjb3JuZXIgb2Ygc2FpZCBTZWN0aW9uIA0Ke1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjQ2N30yN3tcKlxia21rZW5kIERvY1hUZXh0UmVmNDY3fTt9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIHtcKlxia21rZW5kIF9jcF90ZXh0XzFfOTV9DQpccGFyIHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV85Nn1caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBUaH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgXGhpY2hcZjAgZW5jZSBOb3J0aCA4OVwnYjBcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY0NzJ9XGhpY2hcYWYwXGRiY2hcYWYzOVxsb2NoXGYwIDE0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0IHtcKlxia21rZW5kIERvY1hUZXh0UmVmNDcyfVxsb2NoXGFmMFxkYmNoXGFmMzlcaGljaFxmMCBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY0NzN9MTl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDQge1wqXGJrbWtlbmQgRG9jWFRleHRSZWY0NzN9XGxvY2hcYWYwXGRiY2hcYWYzOVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBXZXN0IHdpdGggdGhlIFNvdXRoIGxpbmUgb2YgdGhlIFNvdXRoZWFzdCBxdWFydGVyIG9mIHNhaWQgU2VjdGlvbiB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNDcwfTI3e1wqXGJrbWtlbmQgRG9jWFRleHRSZWY0NzB9DQosIDI2NTMuMjcgZmVldCB0byBhIDUvOCBpbmNoIHJlYmFyIHNldCBhdCB0aGUgU291dGggcXVhcnRlciBwb3N0IG9mIHNhaWQgU2VjdGlvbiB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNDcxfTI3e1wqXGJrbWtlbmQgRG9jWFRleHRSZWY0NzF9O317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgDQpccGFyIHtcKlxia21rZW5kIF9jcF90ZXh0XzFfOTZ9DQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEge1wqXGJrbWtzdGFydCBfY3BfdGV4dF8xXzk3fVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFxoaWNoXGYwIFRoZW5jZSBOb3J0aCA4OVwnYjBcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCANCntcKlxia21rc3RhcnQgRG9jWFRleHRSZWY0NzZ9XGhpY2hcYWYwXGRiY2hcYWYzOVxsb2NoXGYwIDM5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0IHtcKlxia21rZW5kIERvY1hUZXh0UmVmNDc2fVxsb2NoXGFmMFxkYmNoXGFmMzlcaGljaFxmMCBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY0Nzd9NDF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDQge1wqXGJrbWtlbmQgRG9jWFRleHRSZWY0Nzd9XGxvY2hcYWYwXGRiY2hcYWYzOVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBXZXN0IHdpdGggdGhlIFNvXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgdXRoIGxpbmUgb2YgdGhlIFNvdXRod2VzdCBxdWFydGVyIG9mIHNhaWQgU2VjdGlvfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBuIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY0NzR9MjcNCntcKlxia21rZW5kIERvY1hUZXh0UmVmNDc0fSwgMjY0MC4wMCBmZWV0IHRvIGEgcmFpbHJvYWQgc3Bpa2UgZm91bmQgYXQgdGhlIFNvdXRod2VzdCBjb3JuZXIgb2Ygc2FpZCBTZWN0aW9uIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY0NzV9Mjd7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjQ3NX07fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSANClxwYXIge1wqXGJrbWtlbmQgX2NwX3RleHRfMV85N30NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfOTh9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgXGhpY2hcZjAgVGhlbmNlIE5vcnRoIDAwXCdiMFxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0Ke1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjQ4MH1caGljaFxhZjBcZGJjaFxhZjM5XGxvY2hcZjAgMTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDQge1wqXGJrbWtlbmQgRG9jWFRleHRSZWY0ODB9XGxvY2hcYWYwXGRiY2hcYWYzOVxoaWNoXGYwIFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjQ4MX0xOX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjM5XGluc3JzaWQxNDI5MTk0NCB7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjQ4MX1cbG9jaFxhZjBcZGJjaFxhZjM5XGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIEVhc3Qgd2l0aCB0aGUgV2VzdCBsaW5lIG9mIHRoZSBTb3V0aHdlc3QgcXVhcnRlciBvZiBzYWlkIFNlY3Rpb24ge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjQ3OH0yN3tcKlxia21rZW5kIERvY1hUZXh0UmVmNDc4fSwgMjY3NS45MiBmZWV0IHRvIGEgNS84IGluXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgY2ggcmViYXIgc2V0IGF0IHRoZSBXZXN0IHF1YXJ0ZXIgcG9zdCBvZiBzYWlkIFNlfXsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGN0aW9uIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY0Nzl9Mjd7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjQ3OX07fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSANClxwYXIge1wqXGJrbWtlbmQgX2NwX3RleHRfMV85OH0NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfOTl9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgXGhpY2hcZjAgVGhlbmNlIE5vcnRoIDAwXCdiMFxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0Ke1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjQ4NH1caGljaFxhZjBcZGJjaFxhZjM5XGxvY2hcZjAgMjF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDQge1wqXGJrbWtlbmQgRG9jWFRleHRSZWY0ODR9XGxvY2hcYWYwXGRiY2hcYWYzOVxoaWNoXGYwIFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjQ4NX0zNn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjM5XGluc3JzaWQxNDI5MTk0NCB7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjQ4NX1cbG9jaFxhZjBcZGJjaFxhZjM5XGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIEVhc3Qgd2l0aCB0aGUgV2VzdCBsaW5lIG9mIHRoZSBOb3J0aHdlc3QgcXVhcnRlciBvZiBzYWlkIFNlY3Rpb24ge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjQ4Mn0yN3tcKlxia21rZW5kIERvY1hUZXh0UmVmNDgyfSwgMjY5My4zMyBmZWV0IHRvIGEgNS84IGluY2ggcmViYXIgc2V0IGF0IHRoZSBOb3J0aHdlc3QgY29ybmVyIG9mIHNhaWQgU2VjdGlvbiANCntcKlxia21rc3RhcnQgRG9jWFRleHRSZWY0ODN9Mjd7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjQ4M307fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSB7XCpcYmtta2VuZCBfY3BfdGV4dF8xXzk5fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfMTAwfVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFxoaWNoXGYwIFRoZW5jZSBTb3V0aCA4OVwnYjBcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNDg4fVxoaWNoXGFmMFxkYmNoXGFmMzlcbG9jaFxmMCA1MH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0IHtcKlxia21rZW5kIERvY1hUZXh0UmVmNDg4fVxsb2NoXGFmMFxkYmNoXGFmMzlcaGljaFxmMCBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNDg5fTAwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDQge1wqXGJrbWtlbmQgRG9jWFRleHRSZWY0ODl9XGxvY2hcYWYwXGRiY2hcYWYzOVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgRWFzdCB3aXRoIHRoZSBOb3J0aCBsaW5lIG9mIHRoZSBOb3J0aHdlc3QgcXVhcnRlciBvZiBzYWlkIFNlY3Rpb24gDQp7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNDg2fTI3e1wqXGJrbWtlbmQgRG9jWFRleHRSZWY0ODZ9LCAyNTk5Ljk3IGZlZXQgdG8gYSAzLzQgaW5jaCBpcm9uIHBpbiBzZXQgYXQgdGhlIE5vcnRoIHF1YXJ0ZXIgcG9zdCBvZiBzYWlkIFNlY3Rpb24ge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjQ4N30yN3tcKlxia21rZW5kIERvY1hUZXh0UmVmNDg3fTt9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEge1wqXGJrbWtlbmQgX2NwX3RleHRfMV8xMDB9DQpccGFyIHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV8xMDF9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgXGhpY2hcZjAgVGhlbmNlIFNvdXRoIDg5XCdiMFxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY0OTF9XGhpY2hcYWYwXGRiY2hcYWYzOVxsb2NoXGYwIDUyfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDQge1wqXGJrbWtlbmQgRG9jWFRleHRSZWY0OTF9XGxvY2hcYWYwXGRiY2hcYWYzOVxoaWNoXGYwIFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY0OTJ9Mzl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcZGJjaFxhZjM5XGluc3JzaWQxNDI5MTk0NCB7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjQ5Mn1cbG9jaFxhZjBcZGJjaFxhZjM5XGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBFYXN0IHdpdGggdGhlIE5vcnRoIGxpbmUgb2YgdGhlIE5vcnRoZWFzdCBxdWFydGVyIG9mIHNhaWQgU2VjdGlvbiANCntcKlxia21rc3RhcnQgRG9jWFRleHRSZWY0OTB9Mjd7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjQ5MH0sIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDI2MH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgOC44NSBmZWV0IHR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgbyB0aGUgcGxhY2Ugb2YgYmVnaW5uaW5nLCBjb250YWluaW5nIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY0OTN9NjQ5LjAwN3tcKlxia21rZW5kIERvY1hUZXh0UmVmNDkzfSBhY3JlcyBtb3JlIG9yIGxlc3MgYW5kIHN1YmplY3QgdG8gYWxsIGhpZ2h3YXlzIGFuZCBvdGhlciBlYXNlbWVudHMgb2YgcmVjb3JkLg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IHtcKlxia21rZW5kIF9jcF90ZXh0XzFfMTAxfQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfMTAyfVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFRoZSBhYm92ZSBkZXNjcmlwdGlvbiBwcmVwYXJlZCBieSBSaWNoYXJkIEQuIE1vcnJpc2V5LCBSZWdpc3RlcmVkIFN1cnZleW9yIE5vLiA2NDcwLn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDAxMDA0NCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IHtcKlxia21rZW5kIF9jcF90ZXh0XzFfMTAyfQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfMTAzfVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFBhcmNlbCBOb3M6IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDU3MzI2MTgge1wqXGJrbWtzdGFydCBfY3BfdGV4dF8xXzEwNH17XCpcYmtta2VuZCBfY3BfdGV4dF8xXzEwM31caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAyOC0yNzAwMDEuMDAwMCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkzMTc4MSANClxwYXIge1wqXGJrbWtzdGFydCBfY3BfdGV4dF8xXzEwNX17XCpcYmtta2VuZCBfY3BfdGV4dF8xXzEwNH1caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAyOC1caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAyNzAwMDIuMDAwMA0KXHBhciB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfMTA2fXtcKlxia21rZW5kIF9jcF90ZXh0XzFfMTA1fVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDI4LTI3MDAwMy4wMDAwfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MTEwMDgxIA0KXHBhciB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfMTA3fXtcKlxia21rZW5kIF9jcF90ZXh0XzFfMTA2fVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDI4LTI3MDAwNC4wMDAwDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxoeXBocGFyMFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkxMTAwODEge1wqXGJrbWtlbmQgX2NwX3RleHRfMV8xMDd9DQpccGFyIH1ccGFyZCBcbHRycGFyXHFqIFxsaTBccmkwXHNhMjAwXHNsMjc2XHNsbXVsdDFcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGh5cGhwYXIwXGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTExMDA4MSB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfMTA4fQ0Ke1wqXGJrbWtzdGFydCBfSGxrNTg4NTQxMjh9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgVFJBQ1Qge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjQ5NH04e1wqXGJrbWtlbmQgRG9jWFRleHRSZWY0OTR9IChTT0hIUjIwMDA2KX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlxjZjZcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTExMDA4MSANClxwYXIgfVxwYXJkIFxsdHJwYXJccWogXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGh5cGhwYXIwXGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgzNTA5MDgge1wqXGJrbWtzdGFydCBfY3BfdGV4dF8xXzEwOX17XCpcYmtta3N0YXJ0IF9IbGs1ODg1NDExN30NCntcKlxia21rZW5kIF9jcF90ZXh0XzFfMTA4fVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFNvbGFyIExlYXNlIGFuZCBFYXNlbWVudCBBZ3JlZW1lbnQgZGF0ZWQgSnVseSAyLCAyMDE4IGJ5IGFuZCBiZXR3ZWVuIFd5c3MgRmFybXMgSG9sZGluZyBDb21wYW55LCBMTEMgYW5kIEludmVuZXJneSBTb2xhciBEZXZlbG9wbWVudCBOb3J0aCBBbWVyaWNhIExMQywgYXMgZnVydGhlciBldmlkZW5jZWQgYnkgdGhhdCBNZW1vcmFuZHVtIA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpvZiBTb2xhciBMZWFzZSBhbmQgRWFzZW1lbnQgQWdyZWVtZW50IGFzIHJlY29yZGVkIE5vdmVtYmVyIDEzLCAyMDE4IGluIHRoZSBPZmZpY2lhbCBSZWNvcmRzIG9mIEhhcmRpbiBDb3VudHksIE9oaW8gYXMgSW5zdHJ1bWVudCBOdW1iZXIgMjAxODAwMzYyNCwgYW5kIGFzIGFzc2lnbmVkIHRvIEhhcmRpbiBTb2xhciBFbmVyZ3kgTExDLCBhIERlbGF3YXJlIGxpbWl0ZWQgbGlhYmlsaXR5IGNvbXBhbnksIGJ5IEFzc2lnbm1lbnQgYW5kIEFzc3VtcHQNClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGlcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBvbiBBZ3JlZW1lbnQgZGF0ZWQgQXByaWwgMjksIDIwMjAgYW5kIHJlY29yZGVkIE1heSA1LCAyMDIwIGluIEJvfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MTIxNDMgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgb2sge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjQ5NX01NTYNCntcKlxia21rZW5kIERvY1hUZXh0UmVmNDk1fSwgUGFnZSAyMDg2IG9mIHRoZSBPZmZpY2lhbCBSZWNvcmRzIG9mIEhhcmRpbiBDb3VudHksIE9oaW8sIGFuZCBhcyBhbWVuZGVkIGJ5IHVucmVjb3JkZWQgRmlyc3QgQW1lbmRtZW50IHRvIFNvbGFyIExlYXNlIGFuZCBFYXNlbWVudCBBZ3JlZW1lbnQgZGF0ZWQgTWF5IH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE2NDA4ODggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQoyMX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODEyMTQzIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICwgMjAyMCwgb3ZlciwgdW5kZXIgYW5kIGFjcm9zcyBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCB0aGUgZm9sbG93fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ3NDE3NzIyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGlufXsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDM3NTU5NTAgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgZyBkZXNjcmliZWQgcHJvcGVydHk6DQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQzNzU1OTUwIHtcKlxia21rZW5kIF9jcF90ZXh0XzFfMTA5fQ0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcaHlwaHBhcjBcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQzNzU1OTUwIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFNpdHVhdGVkIGluIHRoZSBUb3duc2hpcCBvZn17DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE1NjcxOTY4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBNY0RvbmFsZCwgQ291bnR5IG9mIEhhcmRpbiBhbmQgU3RhdGUgb2YgT2hpbywga25vd24gYXMgYmVpbmcgcGFydCBvZiBWaXJnaW5pYSBNaWxpdGFyeSBTdXJ2ZXkgTm9zLiAxMzI0OCwgMTMyNzksIDEzMzU5IGFuZCB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNDk3fTEzNDQ5DQp7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjQ5N30gYW5kIGFsc28gYmVpbmcgcGFydCBvZiBhIHBhcmNlbCBvZiBsYW5kIG5vdyBvciBmb3JtZXJseSBvd25lZCBieVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBXeXNzIEZhcm1zIEhvbGRpbmcgQ29tcGFueSwgTExDIGFzIFJlY29yZGVkIGluIE8uIFIuIFZvbHVtZSB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNDk2fTQ2MntcKlxia21rZW5kIERvY1hUZXh0UmVmNDk2fQ0KLCBQYWdlIDEyNTQgb2YgdGhlIEhhcmRpbiBDb3VudHkgUmVjb3JkcyBhbmQgYmVpbmcgbW9yZSBmdWxseSBib3VuZGVkIGFuZCBkZXNjcmliZWQgYXMgZm9sbG93czt9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzczNTQxMyANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxmczIyXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDU3MTIzODcge1wqXGJrbWtlbmQgX0hsazU4ODU0MTI4fQ0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDU3MTIzODcge1wqXGJrbWtlbmQgX0hsazU4ODU0MTE3fVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIENvbW1lbmNpbmcgYXQgYSBtYWcgbmFpbCBmb3VuZCBhdCB0aGUgaW50ZXJzZWN0aW9uIG9mIGEgYmVuZCBpbiB0aGUgY2VudGVybGluZSBvZiBUb3duc2hpcCBSb2FkXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIA0Ke1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjQ5OH02NXtcKlxia21rZW5kIERvY1hUZXh0UmVmNDk4fSAoRG9kZHMgUm9hZCkgKDQwIGZlZXQgd2lkZSkgYW5kIHRoZSBlYXN0ZXJseSBsaW5lIG9mIHBhcmNlbCBub3cgb3IgZm9ybWVybHkgb3duZWQgYnkgSGFyZGluIFdpbmQgRW5lcmd5IExMQyBhcyByZWNvcmRlZCBpbiBPLlIuIFZvbHVtZSB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNDk5fTU0OHtcKlxia21rZW5kIERvY1hUZXh0UmVmNDk5fQ0KXGhpY2hcZjAgLCBQYWdlIDU5MzQgb2YgdGhlIEhhcmRpbiBDb3VudHkgUmVjb3JkcywgdGhlbmNlIE5vcnRoIDA2XCdiMFxsb2NoXGYwIDM3XGhpY2hcZjAgXHJxdW90ZSBcbG9jaFxmMCBcaGljaFxmMCA0OVwnOTRcbG9jaFxmMCAgV2VzdCBhbG9uZyB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCnRoZSBlYXN0ZXJseSBsaW5lIG9mIHNhaWQgSGFyZGluIFdpbmQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgRW5lcmd5IGxhbmQsIGEgZGlzdGFuY2Ugb2Yge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjUwMX01MS41OHtcKlxia21rZW5kIERvY1hUZXh0UmVmNTAxfSBmZWV0IHRvIGEgNS84IGluY2ggaXJvbiBwaW4gZn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBvdW5kIGF0IHRoZSBzb3V0aGVhc3Rlcmx5IGxpbmUgb2YgYSBwYXJjZWwgbm93IG9yIGZvcm1lcmx5IG93bmVkIGJ5IFd5c3MgRmFybXMgSG9sZGluZyBDb21wYW55LCBMTEMgcGFyY2VsIG51bWJlciAzMTI1MDA0LjAwMDAgYXMgcmVjb3JkZWQgaW4gT1IgVm9sdW1lIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY1MDB9NDYye1wqXGJrbWtlbmQgRG9jWFRleHRSZWY1MDB9DQosIFBhZ2UgMTI1NCBvZiB0aGUgSGFyZGluIENvdW50eSBSZWNvcmRcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBzLCB0aGVuY2UgU317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgXGhpY2hcZjAgb3V0aCA4NFwnYjBcbG9jaFxmMCAzMlxoaWNoXGYwIFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFxoaWNoXGYwIDQyXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDAxMDA0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgV2VzdCBhbG9uZyB0aGUgc291dGhlcmx5IGxpbmUgb2Ygc2FpfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgZCBXeXNzIEZhcm1zIHBhcmNlbCAzMTI1MDAwNC4wMDAwLCBhIGRpc3RhbmNlIG9mIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY1MDJ9NTc4LjY2e1wqXGJrbWtlbmQgRG9jWFRleHRSZWY1MDJ9IGZlZXQgdG8gdGhlIFBsYWNlIG9mIEJlZ2lubmluZyBvZiB0aGUgZWFzZW1lbnQgaGVyZWluIGRlc2NyaWJlZDsNClxwYXIgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTczMjYxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBcaGljaFxmMCBDb3Vyc2UgTm8uIDE6IFRoZW5jZSBTb3V0aCA4NFwnYjB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMzlcbG9jaFxmMCAzMn17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMzlcaGljaFxmMCBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjM5XGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYzOVxsb2NoXGYwIDQyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0IA0KXGxvY2hcYWYwXGRiY2hcYWYzOVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgV2VzdCBhbG9uZyB0aGUgc291dGhlcmx5IGxpbmUgb2Ygc2FcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBpZCBXeXNzIEZhcm1zIHBhcmNlbCAzMTI1MDAwNC4wMDAwLCBhIGRpc3RhbmNlIG9mIA0Ke1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjUwM30xMzUuNzl7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjUwM30gZmVldCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHRvIGEgNS84IGluY2ggaXJvbiBwaW4gZm91bmQgYXQgYSBwb2ludCB0aGVyZW9uO317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSANClxwYXIgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgXGhpY2hcZjAgQ291cnNlIE5vLiAyOiBUaGVuY2UgTm9ydGggNDZcJ2IwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjM5XGxvY2hcZjAgMzR9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjM5XGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjM5XGhpY2hcZjAgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMzlcbG9jaFxmMCAzNn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjM5XGluc3JzaWQxNDI5MTk0NCANClxsb2NoXGFmMFxkYmNoXGFmMzlcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIFdlc3QgYWxvbmcgYSBzb3V0aHdlc3Rlcmx5IGxpbmUgb2Ygc2FpZCBXeXNzIEZhcm1zIHBhcmNlbCAzMTI1MDAwNC4wMDAwLCBhIGRpc3RhbmNlIG9mIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY1MDV9MzIwLjM5DQp7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjUwNX0gZmVldCB0byBhIHNvdVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHRoZWFzdGVybHkgY29ybmVyIG9mIGEgc2Vjb25kIHBhcmNlbCBvZiBsYW5kIG5vdyBvciBmb3JtZXJseSBvfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCnduZWQgYnkgV3lzcyBGYXJtcyBIb2xkaW5nIENvbXBhbnksIExMQyBwYXJjZWwgbnVtYmVyIDMxMjUwMDMuMDAwMCBhcyByZWNvcmRlZCBpbiBPUiBWb2x1bWUge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjUwNH00NjJ7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjUwNH0sIFBhZ2UgMTI1NCBvZiB0aGUgSGFyZGluIENvdW50eSBSZWNvcmRzO317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSANClxwYXIgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgXGhpY2hcZjAgQ291cnNlIE5vLiAzOiBUaGVuY2UgTm9ydGggMzNcJ2IwXGxvY2hcZjAgNDlcaGljaFxmMCBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDAxMDA0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAwOQ0KfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTRcbG9jaFxmMCAgRWFzdCBhbG9uZyBhIHNvdXRofXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1NzMyNjE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGVcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCmFzdGVybHkgbGluZSBvZiBzYWlkIFd5c3MgRmFybXMgcGFyY2VsIG51bWJlciAzMTI1MDAwMy4wMDAwLCBhfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MzE3ODEgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIGRpc3RhbmNlIG9mIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY1MDZ9MTA3LjUwe1wqXGJrbWtlbmQgRG9jWFRleHRSZWY1MDZ9IGZlZXQgdG8gYSBwb2ludCB0aGVyZW9uOw0KDQpccGFyIA0KXHBhciBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBcaGljaFxmMCBDb3Vyc2UgTm8uIDQ6IFRoZW5jZSBOb3J0aCAzOVwnYjBcbG9jaFxmMCAwMlxoaWNoXGYwIFxycXVvdGUgXGxvY2hcZjAgMzB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkxMTAwODEgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NFxsb2NoXGYwIA0KIFdlc3QgYWNyb3NzIHNhaWQgV3lzcyBGYXJtcyBwYXJjZWwgbnVtYmVyIDMxMjUwMDAzLjAwMDAsIGEgZGlzdGFuY2Ugb2YgMTYwOC4xMCB0byBhIHBvaW50Ow0KXHBhciANClxwYXIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQ291cnNlIE5vLiA1OiBUaGVuY1xoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFxoaWNoXGYwIGUgTm9ydGggMjBcJ2IwXGxvY2hcZjAgNDZ9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgzNTA5MDggXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXHJxdW90ZSBcbG9jaFxmMCBcaGljaFxmMCAyOFwnOTRcbG9jaFxmMCANCiBXZXN0IGFjcm9zcyBzYWlkIFd5c3MgRmFybXMgcGFyY2VsIG51bWJlciAzMTI1MDAwMy4wMDAwLCBhIGRpc3RhbmNlIG9mIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY1MDh9NTkuMjh7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjUwOH0gZmVldCB0byBhIHBvaW50IG9uIGNlbnRlcmxpbmUgb2YgQ291bnR5IFJvYWQge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjUwN30xMzB7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjUwN30NCiBhbmQgdGhlIG5vcnRoZXJseSBsaW5lIG9mIHNhaWQgV3lzcyBGYXJtcyBwYXJjZWwgMzEyNTAwMDMuMDAwMDsNClxwYXIgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODEyMTQzIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFxoaWNoXGYwIENvdXJzZSBOby4gNjogVGhlbmNlIE5vcnRoIDcwXCdiMFxsb2NoXGYwIDA4XGhpY2hcZjAgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDc0MTc3MjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgMjB9ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMzc1NTk1MCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0XGxvY2hcZjAgIEVhc3QgYWxvbmdcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgdGhlIHNhaWQgY2VudGVybGluZSBvZiBDb3VudHkgUm9hZCB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNTA5fTEzMHtcKlxia21rZW5kIERvY1hUZXh0UmVmNTA5fQ0KIGFuZCB0aGUgbm9ydGhlcmx5IGxpbmUgb2Ygc2FpZCBXeXNzIEZhcm1zIHBhcmNlbCAzMTI1MDAwMy4wMDAwLCBhIGRpc3RhbmNlIG9mIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY1MTB9MTMwLjAye1wqXGJrbWtlbmQgRG9jWFRleHRSZWY1MTB9IGZlZXQgdG8gYSBwb2ludCB0aGV9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE1NjcxOTY4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KcmVvbjsNClxwYXIgDQpccGFyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFxoaWNoXGYwIENvdXJzZSBOby4gNzogVGhlbmNlIFNvdXRoIDIwXCdiMFxsb2NoXGYwIDQ2XGhpY2hcZjAgXHJxdW90ZSBcbG9jaFxmMCAyOH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzczNTQxMyBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDU3MTIzODcgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIEVhc3QgYWNyb3NzIHNhaWQgV3lzcyBGYXJtcyBwYXJjZWwgbnVtYmVyIDMxMjUwMDAzLjAwMDAsIGEgZGlzdGFuY2UgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgb2Yge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjUxMX0zNi4zMXtcKlxia21rZW5kIERvY1hUZXh0UmVmNTExfSBmZWV0IHRvIGEgcG9pbnQ7DQpccGFyIA0KXHBhciBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBcaGljaFxmMCBDb3Vyc2UgTm8uIDg6IFRoZW5jZSBTb3V0aCAzOVwnYjBcbG9jaFxmMCAwMlxoaWNoXGYwIFxycXVvdGUgXGxvY2hcZjAgXGhpY2hcZjAgMzBcJzk0XGxvY2hcZjAgIEVhc3QgYWNyb3NzIHNhaWQgV3lzcyBGYXJtcyBwYXJjZWwgbnVtYmVycyAzMTI1MDAwMy4wMDAwIGFuZCB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNTEyfTMxMjUwMDA0LjAwMDANCntcKlxia21rZW5kIERvY1hUZXh0UmVmNTEyfSwgYSBkaXN0YW5jZSBvZiAxOTAwLjk4IGZlZXQgdG8gYSBwb2ludDsNClxwYXIgDQpccGFyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFxoaWNoXGYwIENvdXJzZSBOby4gOTogVGhlbmNlIFNvdXRoIDA0XCdiMDAwfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4OTIyNTk0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFxycXVvdGUgXGxvY2hcZjAgXGhpY2hcZjAgMDNcJzk0XGxvY2hcZjAgIEVhc3QgYWNyb3NzIHNhaWQgV3lzcyBGYXJtcyBwYXJjZWwgbnVtYg0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgZXIgMzEyNTAwMDQuMDAwMCwgYSBkaXN0YW5jZSBvZiB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNTEzfTEzNS4xNHtcKlxia21rZW5kIERvY1hUZXh0UmVmNTEzfSBmZWV0IHRvIHRoZSBQbGFjZSBvZiBCZWdpbm5pbmcgb2YgdGhlIGVhc2VtZW50IGhlcmVpbiBkZXNjcmliZWQsIGNvbnRhaW5pbmcge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjUxNH02LjcxOQ0Ke1wqXGJrbWtlbmQgRG9jWFRleHRSZWY1MTR9IGFjcmVzIG9mIGxhbmQgYmFzZWQgb24gYSBzdXJ2ZXkgYnkgQXR3ZWxsLCBMTEMgdW5kZXIgdGhlIHN1cGVydmlzaW9uIG9mIEFsZXggRS4gTWFya3MsIE9oaW8gUHJvZmVzc2lvbn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNjgyODk2NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBhbCBMYW5kIFN1cnZleW9yIE5vLiA4NjE2IGluIE5vdmUNClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIG1iZXIgMjAxNywgbW9yZSBvciBsZXNzLg0KXHBhciANClxwYXIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgUGFyY2VsIE5vczogIFBhcnQgb2Yge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjUxNX0zMXtcKlxia21rZW5kIERvY1hUZXh0UmVmNTE1fS0yNTAwMDMuMDAwMCBhbmQge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjUxNn0zMXtcKlxia21rZW5kIERvY1hUZXh0UmVmNTE2fS0yNTAwMDQuMDAwMH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5NzY4MDk1IA0KXHBhciANClxwYXIgfVxwYXJkIFxsdHJwYXJccWogXGxpMFxyaTBcc2EyMDBcc2wyNzZcc2xtdWx0MVx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcaHlwaHBhcjBcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5NzY4MDk1IHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV8xNjV9DQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBUUkFDVCB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNTE3fTEwe1wqXGJrbWtlbmQgRG9jWFRleHRSZWY1MTd9IChTT0hIUjIwMDA4KX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5NzY4MDk1IA0KXHBhciB9XHBhcmQgXGx0cnBhclxxaiBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcaHlwaHBhcjBcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTc2ODA5NSB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfMTY2fXtcKlxia21rZW5kIF9jcF90ZXh0XzFfMTY1fQ0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgU29sYXIgTGVhc2UgYW5kIEVhc2VtZW50IEFncmVlbWVudCBkYXRlZCBKdWx5IDIwLCAyMDE4IGJ5IGFuZCBiZXR3ZWVuIFJvaHJzIExhbmQgQ28uIGFuZCBJbnZlbmVyZ3kgU29sYXIgRGV2ZWxvcG1lbnQgTm9ydGggQW1lcmljYSBMTEMsIGFzIGZ1cnRoZXIgZXZpZGVcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCm5jZWQgYnkgdGhhdCBNZW1vcmFuZHVtIG9mIFNvbGFyIExlYXNlIGFuZCBFYXNlbWVudCBBZ3JlZW1lbnQgcmVjb3JkZWQgSmFudWFyeSAxNCwgMjAxOSBpbiBCb29rIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY1MTh9NTUxe1wqXGJrbWtlbmQgRG9jWFRleHRSZWY1MTh9DQosIFBhZ2UgNTg0NyBvZiB0aGUgT2ZmaWNpYWwgUmVjb3JkcyBvZiBIYXJkaW4gQ291bnR5LCBPaGlvLCBhcyBhbWVuZGVkIGJ5IHRoYXQgY2VydGFpbiBGaXJzdCBBbWVuZG1lbnQgdG8gU29sYXIgTGVhc2UgYW5kIEVhc2VtZW50IEFncmVlbWVudCBkYXRlZCBEZWNlbWJlciBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAzXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgLCAyMDE5IGFuZCByZWNvcmRlZCBBcHJpbCA2LCAyMDIwIGluIEJvb2sgDQp7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNTE5fTU1NXtcKlxia21rZW5kIERvY1hUZXh0UmVmNTE5fSwgUGFnZSA1NjY4IG9mIHRoZSBPZmZpY2lhbCBSZWNvcmRzIG9mIEhhcmRpbiBDb3VudHksIE9oaW8sIGFuZCBhcyBhc3NpZ25lZCB0byBIYXJkaW4gU29sYXIgRW5lcmd5IExMQywgYSBEZWxhd2FyZSBsaW1pdGVkIGxpYWJpbGl0eSBjb21wYW55LCBieSBBc3NpZ25tZW50IGFuZCBBc3N1bXB0aW9uIEFncmVlbWVudCBkYXRlZCB9ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTQ4ODI0MzggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQXByaWwgMjksIDIwMjAgYW5kIHJlY29yXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgZGVkIE1heSA1LCAyMDIwIGluIEJvb2sge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjUyMH01NTZ7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjUyMH0NCiwgUGFnZSAyMDg2IG9mIHRoZSBPZmZpY2lhbCBSZWNvcmRzIG9mIEhhcmRpbiBDb3VudHksIE9oaW8sIG92ZXIsIHVuZGVyIGFuZCBhY3Jvc3MgdGhlIGZvbGxvd2luZyBkZXNjcmliZWQgcHJvcGVydHk6IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTQ4ODI0Mzgge1wqXGJrbWtlbmQgX2NwX3RleHRfMV8xNjZ9DQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNDg4MjQzOCB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfMTY3fVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFBBUkNFTCBCOg0KXHBhciB7XCpcYmtta2VuZCBfY3BfdGV4dF8xXzE2N30NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNDg4MjQzOCB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfMTY4fVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFNpdHVhdGVkIGluIE1hcmlvbiBUb3duc2hpcHMsIENvdW50eSBvZiBIYXJkaW4gYW5kIFN0YXRlIG9mIE9oaW8gdG8gd2l0Og0KXHBhciB7XCpcYmtta2VuZCBfY3BfdGV4dF8xXzE2OH0NClxwYXIge1wqXGJrbWtzdGFydCBfY3BfdGV4dF8xXzE2OX1caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBTZWN0aW9uIFR3ZW50eS10aHJlZSB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNTIxfSgyMyl7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjUyMX1caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAsIFRvd25zaGlwIEZvdXIge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjUyMn0oNCl7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjUyMn0NCiBTb3V0aCwgUmFuZ2UgTmluZSB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNTIzfSg5KXtcKlxia21rZW5kIERvY1hUZXh0UmVmNTIzfSBFYXN0LCBleGNlcHQgYSB0cmFjdCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDU5MjcyOSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBvZiB0ZW4ge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjUyNH0oMTApDQp7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjUyNH0gYWNyZXMgaW4gTm9ydGh3ZXN0IGNvcm5lciB0aGVyZW9mIGNvbnZleWVkIHRvIHRoZSBTdGF0ZSBvZiBPaGlvIGJ5IGRlZWQgZGF0ZWQgSmFudWFyeSAyMCwgMTkzMiwgYW5kIHJlY29yZGVkIGluIHRoZSByZWNvcmRzIG9mIHNhaWQgQ291bnR5IGluIFZvLiB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNTI1fTE0e1wqXGJrbWtlbmQgRG9jWFRleHRSZWY1MjV9DQogb2YgRGVlZHMgYXQgcGFnZSAzNjMgYW5kIGV4Y2VwdCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBhIHRyYWN0IG9mIGZpZnR5IHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY1MjZ9KDUwKXtcKlxia21rZW5kIERvY1hUZXh0UmVmNTI2fQ0KIGFjcmVzIGFsc28gaW4gdGhlIG5vcnRod2VzdCBjb3JuZXIgdGhlcmVvZiBjb252ZXllZCB0byBDYXJsIEtydW1tZXJ5IGJ5IGRlZWQgZGF0ZWQgU2VwdGVtYmVyIDE4LCAxOTQzLCBhbmQgcmVjb3JkZWQgaW4gdGhlIHJlY29yZGVkIGluIHRoZSByZWNvcmRzIG9mIHRoZSBDb3VudHkgaW4gVm8uIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY1Mjd9MTc1e1wqXGJrbWtlbmQgRG9jWFRleHRSZWY1Mjd9LCBwYWdlIDQ1Ni4gDQpccGFyIHtcKlxia21rZW5kIF9jcF90ZXh0XzFfMTY5fQ0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTgge1wqXGJrbWtzdGFydCBfY3BfdGV4dF8xXzE3MH1caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBBbHNvLCB0aGUgZm9sbG93aW5nIGRlc2NyaWJlZCByZWFsIGVzdGF0ZSBzaXR1YXRlXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQogaW4gTWFyaW9uIFRvd25zaGlwLCBIYXJkaW4gQ291bnR5IGFuZCBTdGF0ZSBvZiBPaGlvLCB0by13aXQ6DQpccGFyIHtcKlxia21rZW5kIF9jcF90ZXh0XzFfMTcwfQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfMTcxfVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFRoZSBOb3J0aHdlc3QgUXVhcnRlciAoMS80KSBvZiBTZWN0aW9uIE51bWJlciBUd2VudHkgc2l4IHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY1Mjh9KDI2KXtcKlxia21rZW5kIERvY1hUZXh0UmVmNTI4fSwgdG93bnNoaXAgZm91ciB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNTI5fSg0KXtcKlxia21rZW5kIERvY1hUZXh0UmVmNTI5fQ0KIHNvdXRoLCBvZiByYW5nZSBuaW5lIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY1MzB9KDkpe1wqXGJrbWtlbmQgRG9jWFRleHRSZWY1MzB9IEVhc3QuDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcY2YxXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTgge1wqXGJrbWtlbmQgX2NwX3RleHRfMV8xNzF9DQpccGFyIHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV8xNzJ9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgUGFyY2VsIE5vcy46DQpccGFyIHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV8xNzN9e1wqXGJrbWtlbmQgX2NwX3RleHRfMV8xNzJ9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgMjgtMjMwMDAyLjAwMDANClxwYXIge1wqXGJrbWtzdGFydCBfY3BfdGV4dF8xXzE3NH17XCpcYmtta2VuZCBfY3BfdGV4dF8xXzE3M31caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAyOC0yMzAwMDMuMDAwMA0KXHBhciB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfMTc1fXtcKlxia21rZW5kIF9jcF90ZXh0XzFfMTc0fVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDI4LTIzMDAwNC4wMDAwDQpccGFyIHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV8xNzZ9e1wqXGJrbWtlbmQgX2NwX3RleHRfMV8xNzV9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgMjgtMjMwMDA5LjAwMDANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV8xNzd9e1wqXGJrbWtlbmQgX2NwX3RleHRfMV8xNzZ9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgMjgtMjMwMFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDAxLjAwMDB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcY2YxXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfMTc4fXtcKlxia21rZW5kIF9jcF90ZXh0XzFfMTc3fVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDI4LTI2MDAwMS4wMDAwe1wqXGJrbWtzdGFydCBfY3BfdGV4dF8xXzE3OX17XCpcYmtta2VuZCBfY3BfdGV4dF8xXzE3OH0NClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGh5cGhwYXIwXGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGZzMjJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCB7XCpcYmtta2VuZCBfY3BfdGV4dF8xXzE3OX0NClxwYXIgfVxwYXJkIFxsdHJwYXJccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGh5cGhwYXIwXGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCANClxwYXIgfVxwYXJkIFxsdHJwYXJccWogXGxpMFxyaTBcc2EyMDBcc2wyNzZcc2xtdWx0MVx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcaHlwaHBhcjBcZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTgge1wqXGJrbWtzdGFydCBfY3BfdGV4dF8xXzE4MX1caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANClRyYWN0IHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY1MzF9MTJ7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjUzMX0gKFNPSEhSMjAwMTUpfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpccGFyIH1ccGFyZCBcbHRycGFyXHFqIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxoeXBocGFyMFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV8xODJ9e1wqXGJrbWtlbmQgX2NwX3RleHRfMV8xODF9DQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBDb2xsZWN0aW9uIFN5c3RlbSBFYXNlbWVudCBBZ3JlZW1lbnQgZGF0ZWQgSnVseSAxMiwgMjAxOSBieSBhbmQgYmV0d2VlbiBTdGFtYmF1Z2ggRmFtaWx5IEludmVzdG1lbnRzLCBMLlAuLCBhbiBBcml6b25hIGxpbWl0ZWQgcGFydG5lcnNoaXAsIGFuZCBIYXJkaW4gU29sYXIgRW5lcmd5IExMQywgYSBEZWxhd2FyZSBsaW1pdGVkIGxpYWJpbGl0eSBjb21wYW55LCBhbg0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgZCByZWNvcmRlZCBKdWx5IDI2LCAyMDIwIGluIEJvb2sge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjUzMn01NTN7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjUzMn0NCiwgUGFnZSAzMTM0IG9mIHRoZSBPZmZpY2lhbCBSZWNvcmRzIG9mIEhhcmRpbiBDb3VudHksIE9oaW8sIGFzIGZ1cnRoZXIgZXZpZGVuY2VkIGJ5IE1lbW9yYW5kdW0gb2YgQ29sbGVjdGlvbiBTeXN0ZW0gRWFzZW1lbnQgQWdyZWVtZW50IHJlY29yZGVkIEp1bHkgMjYsIDIwMjAgaW4gQm9vayB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNTMzfTU1M3tcKlxia21rZW5kIERvY1hUZXh0UmVmNTMzfQ0KLCBQYWdlIDMxNTQgb2YgdGhlIE9mZmljaWFsIFJlY29yZHMgb2YgSGFyZGluIENvdW5caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCB0XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQp5LCBPaGlvLCBhbmQgYXMgYXNzaWduZWQgdG8gSGFyZGluIFNvbGFyIEVuZXJneSBMTEMsIGEgRGVsYXdhcmUgbGltaXRlZCBsaWFiaWxpdHkgY29tcGFueSwgYnkgUXVpdCBjbGFpbSBBc3NpZ25tZW50IGFuZCBBc3N1bXB0aW9uIEFncmVlbWVudCBkYXRlZCBBcHJpbCAyOSwgMjAyMCBhbmQgcmVjb3JkZWQgTWF5IDUsIDIwMjAgaW4gQm9vayB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNTM0fTU1NntcKlxia21rZW5kIERvY1hUZXh0UmVmNTM0fQ0KLCBQYWdlIDIwOTggb2YgdGhlIE9mZmljaWFsIFJlY29yZHMgb2YgSGFyZGluIENvdW50eSwgT2hpXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgb1xoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICwgb3ZlciwgdW5kZXIgYW5kIGFjcm9zcyB0aGUgZm9sbG93aW5nIGRlc2NyaWJlZCBwcm9wZXJ0eToNClxwYXIge1wqXGJrbWtlbmQgX2NwX3RleHRfMV8xODJ9DQpccGFyIHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV8xODN9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgU2l0dWF0ZWQgaW4gdGhlIFRvd25zaGlwIG9mIE1jRG9uYWxkLCBDb3VudHkgb2YgSGFyZGluIGFuZCBTdGF0ZSBvZiBPaGlvIGFuZCBkZXNjcmliZWQgYXMgZm9sbG93czoNClxwYXIge1wqXGJrbWtlbmQgX2NwX3RleHRfMV8xODN9DQpccGFyIHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV8xODR9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgU2l0dWF0ZWQgaW4gTWNEb25hbGQgVG93bnNoaXAsIEhhcmRpbiBDb3VudHksIE9oaW86DQpccGFyIHtcKlxia21rZW5kIF9jcF90ZXh0XzFfMTg0fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfMTg1fVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEFuZCBrbm93biBhcyBiZWluZyBhIHBhcnQgb2YgVi4gTS4gUy4gTm9zLiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAxNTAyNiBhbmQge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjUzOX0xNTA2M3tcKlxia21rZW5kIERvY1hUZXh0UmVmNTM5fSBhbmQgYmVnaW5uaW5nIGluIHRoZSBjZW50ZXIgb2YgdGhlIFNoZWxkb24gUGlrZSwgU291dGggDQp7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNTM1fTcwe1wqXGJrbWtlbmQgRG9jWFRleHRSZWY1MzV9IGRlZy59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNTM2fVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXGhpY2hcYWYwXGRiY2hcYWYzOVxsb2NoXGYwIDE1fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0IHtcKlxia21rZW5kIERvY1hUZXh0UmVmNTM2fVxsb2NoXGFmMFxkYmNoXGFmMzlcaGljaFxmMCBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBXZXN0IA0Ke1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjUzOH0xOS42MntcKlxia21rZW5kIERvY1hUZXh0UmVmNTM4fSByb2RzIGZyb20gdGhlIFNvdXRod2VzdCBjb3JuZXIgb2YgSi4gTS4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjM5XGxvY2hcZjAgU3RhbWJhdWdofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYzOVxoaWNoXGYwIFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjM5XGxvY2hcZjAgc317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIGFuZCBTb24ge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjUzN30zMDB7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjUzN30gYWNyZSBUcmFjdCBpbiBzYWlkIFN1cnZleSBOby4gMTUwMjY7fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSB7XCpcYmtta2VuZCBfY3BfdGV4dF8xXzE4NX0NClxwYXIge1wqXGJrbWtzdGFydCBfY3BfdGV4dF8xXzE4Nn1caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBUaGVuY2Ugd2l0aCB0aGUgY2VudGVyIG9mIHNpZGUgcGlrZSBTb3V0aCB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNTQwfTcwe1wqXGJrbWtlbmQgRG9jWFRleHRSZWY1NDB9IH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgZGVnLiB9DQp7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjM5XGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTgge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjU0MX1caGljaFxhZjBcZGJjaFxhZjM5XGxvY2hcZjAgMTV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDQge1wqXGJrbWtlbmQgRG9jWFRleHRSZWY1NDF9XGxvY2hcYWYwXGRiY2hcYWYzOVxoaWNoXGYwIFxycXVvdGUgfXsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgV2VzdCB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNTQzfTJcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCA1LjYwe1wqXGJrbWtlbmQgRG9jWFRleHRSZWY1NDN9IHJvZHMgdG8gdGh9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgZSBjZW50ZXIgb2YgQ29ja2xleSBEaXRjaDsgYW5kIGluIHRoZSBFYXN0IGxpbmUgb2YgdGhlIGxhbmQgb2YgdGhlIFNjaW90byBMYW5kIENvLiBTZWMuIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY1NDJ9MntcKlxia21rZW5kIERvY1hUZXh0UmVmNTQyfSBSb3VuZGhlYWQgVG93bnNoaXA7fXtccnRsY2hcZmNzMSBcYWYxIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIA0KXHBhciB7XCpcYmtta2VuZCBfY3BfdGV4dF8xXzE4Nn0NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfMTg3fVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFRoZW5jZSB3aXRoIHRoZSBFYXN0IGxpbmUgb2YgdGhlIFNjaW90byBMYW5kIENvbXBhbnkgYW5kIGNlbnRlciBvZiBzYWlkIERpdGNoLCBOb3J0aCB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNTQ0fTE5DQp7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjU0NH0gZGVnLiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY1NDV9XGhpY2hcYWYwXGRiY2hcYWYzOVxsb2NoXGYwIDQ1fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0IHtcKlxia21rZW5kIERvY1hUZXh0UmVmNTQ1fQ0KXGxvY2hcYWYwXGRiY2hcYWYzOVxoaWNoXGYwIFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIFdlc3Qge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjU0OX0xMDIuNjd7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjU0OX0gcm9kcyB0byB0aGUgU291dGh3ZXN0XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQogY29ybmVyIG9mIGEgdHJ9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGFjdCBvd25lZCBieSBDLiBFLiBOYXNoIGZyb20gd2hpY2ggY29ybmVyIGFuIGlyb24gcGlwZSBpcyBzZXQgTm9ydGgge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjU0Nn03NXtcKlxia21rZW5kIERvY1hUZXh0UmVmNTQ2fSBkZWcuIH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNTQ3fVxoaWNoXGFmMFxkYmNoXGFmMzlcbG9jaFxmMCA0NX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjM5XGluc3JzaWQxNDI5MTk0NCB7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjU0N31cbG9jaFxhZjBcZGJjaFxhZjM5XGhpY2hcZjAgXHJxdW90ZSB9e1xydGxjaFxmY3MxIA0KXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBFYXN0IHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY1NDh9MTd7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjU0OH0gZmVldDt9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIHtcKlxia21rZW5kIF9jcF90ZXh0XzFfMTg3fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfMTg4fVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFRoZW5jZSB3aXRoIHNhaWQgU291dGgsIGxpbmUgb2Ygc2FpZCBOYXNoIFRyYWN0IE5vcnRoIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY1NTB9NzV7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjU1MH0gZGVnLiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0Ke1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjU1MX1caGljaFxhZjBcZGJjaFxhZjM5XGxvY2hcZjAgNDV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDQge1wqXGJrbWtlbmQgRG9jWFRleHRSZWY1NTF9XGxvY2hcYWYwXGRiY2hcYWYzOVxoaWNoXGYwIFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgRWFzdCB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNTUyfTM4LjIye1wqXGJrbWtlbmQgRG9jWFRleHRSZWY1NTJ9IHJvZHMgdG8gYW4gaXJvbiBwaXBlO317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEge1wqXGJrbWtlbmQgX2NwX3RleHRfMV8xODh9DQpccGFyIHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV8xODl9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgVGhlbmNlIFNvdXRoIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY1NTN9MTJ7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjU1M30gZGVnfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAuIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNTU0fVxoaWNoXGFmMFxkYmNoXGFmMzlcbG9jaFxmMCAzMH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjM5XGluc3JzaWQxNDI5MTk0NCB7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjU1NH1cbG9jaFxhZjBcZGJjaFxhZjM5XGhpY2hcZjAgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjEgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBFYXN0IHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY1NTV9OTkuNTZ9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIHtcKlxia21rZW5kIERvY1hUZXh0UmVmNTU1fVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICByb2RzIHRvIHRoDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBlIHBsYWNlIG9mIGJlZ2lubmluZywgY29udGFpbmluZyB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNTU2fTIwLjE1e1wqXGJrbWtlbmQgRG9jWFRleHRSZWY1NTZ9IGFjcmVzLn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgDQpccGFyIHtcKlxia21rZW5kIF9jcF90ZXh0XzFfMTg5fQ0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV8xOTB9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQWxzbyBhIHBhcnQgb2YgVi4gTS4gUy4gTm9zLiAxNTAyNiBhbmQge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjU1OH0xNTA2M3tcKlxia21rZW5kIERvY1hUZXh0UmVmNTU4fQ0KIGFuZCBiZWdpbm5pbmcgaW4gdGhlIGNlbnRlciBvZiB0aGUgU2hlbGRvbiBQaWtlIGF0IHRoZSBTb3V0aHdlc3QgY29ybmVyIG9mIEouIEIuIFN0YW1iYXVnaCAmIFNvbnMge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjU1N30zMDB7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjU1N30gYWNyZSB0cmFjdCBpbiBTdXJ2ZXkgTm8uIDE1MDI2O317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDAxMDA0NCANCg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjgge1wqXGJrbWtlbmQgX2NwX3RleHRfMV8xOTB9DQpccGFyIHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV8xOTF9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgVGhlbmNlIHdpdGggdGhlIGNlbnRlciBvZiBzYWlcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBkIHBpa2UgU291dGgge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjU1OX03MHtcKlxia21rZW5kIERvY1hUZXh0UmVmNTU5fSBkZWcuIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNTYwfVxoaWNoXGFmMFxkYmNoXGFmMzlcbG9jaFxmMCAxNX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjM5XGluc3JzaWQxNDI5MTk0NCB7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjU2MH1cbG9jaFxhZjBcZGJjaFxhZjM5XGhpY2hcZjAgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBXZXN0IHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY1NjF9MTkuNjJ7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjU2MX0gcm9kczt9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIHtcKlxia21rZW5kIF9jcF90ZXh0XzFfMTkxfQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfMTkyfVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFRoZW5jZSBOb3J0aCB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNTYyfTEye1wqXGJrbWtlbmQgRG9jWFRleHRSZWY1NjJ9IGRlZy4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNTYzfQ0KXGhpY2hcYWYwXGRiY2hcYWYzOVxsb2NoXGYwIDMwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0IHtcKlxia21rZW5kIERvY1hUZXh0UmVmNTYzfVxsb2NoXGFmMFxkYmNoXGFmMzlcaGljaFxmMCBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KIFdlc3QgYW5kIHBhcmFsbGVsIHdpdGggdGhlIFdlc3QgbGluZSBvZiBzYWlkIFN0YW1iYXVnaCBUcmFjdCB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNTY0fTk5LjU2e1wqXGJrbWtlbmQgRG9jWFRleHRSZWY1NjR9IHJvZHMgdG8gYW4gaXJvbiBwaXBlIGluIHRoZSBTb3V0aCBsaW5lIG9mIGEge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjU2NX0zMy41NXtcKlxia21rZW5kIERvY1hUZXh0UmVmNTY1fQ0KIGFjcmUgVHJhY3Qgb3duZWQgYnkgQy4gRS4gTmFzaDt9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIHtcKlxia21rZW5kIF9jcF90ZXh0XzFfMTkyfQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfMTkzfVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFRofXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBlbmNlIHdpdGggc2FpZCBTb3V0aCBsaW5lIG9mIHNhaWQgTmFcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBzaCBUcmFjdCBOb3J0aCANCntcKlxia21rc3RhcnQgRG9jWFRleHRSZWY1NjZ9NzV7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjU2Nn0gZGVnLiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY1Njd9XGhpY2hcYWYwXGRiY2hcYWYzOVxsb2NoXGYwIDQ1fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0IA0Ke1wqXGJrbWtlbmQgRG9jWFRleHRSZWY1Njd9XGxvY2hcYWYwXGRiY2hcYWYzOVxoaWNoXGYwIFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIEVhc3Qge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjU2OH0xOS40OHtcKlxia21rZW5kIERvY1hUZXh0UmVmNTY4fQ0KIHBvbGVzIHRvIGFuIGlyb24gcGlwZSBpbiB0aGUgV2VzdCBsaW5lIG9mIHNhaWQgU3RhbWJhdWdoIFRyYWN0Ln17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEge1wqXGJrbWtlbmQgX2NwX3RleHRfMV8xOTN9DQpccGFyIHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV8xOTR9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgVGhlbmNlIFNvdXRoIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY1Njl9MTJ7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjU2OX0gZGVnLiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY1NzB9DQpcaGljaFxhZjBcZGJjaFxhZjM5XGxvY2hcZjAgMzB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDQge1wqXGJrbWtlbmQgRG9jWFRleHRSZWY1NzB9XGxvY2hcYWYwXGRiY2hcYWYzOVxoaWNoXGYwIFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIEVhc3QgDQp7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNTczfTk3LjY4e1wqXGJrbWtlbmQgRG9jWFRleHRSZWY1NzN9IHJvZHMgdG8gdGhlIHBsYWNlIG9mIGJlZ2lubmluZywgY29udGFpbmluZyB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNTcxfTEye1wqXGJrbWtlbmQgRG9jWFRleHRSZWY1NzF9IGFjcmVzIG9mIGxhbmQuIENvbnRhaW5pbmcgaW4gYWxsIG9mIFRyYWN0IHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY1NzJ9NA0Ke1wqXGJrbWtlbmQgRG9jWFRleHRSZWY1NzJ9IHRoZSBBbW91bnQgb2Yge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjU3NH0zMn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgLjE1e1wqXGJrbWtlbmQgRG9jWFRleHRSZWY1NzR9IGFjcmVzLCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBtb3JlIG9yIGxlc3MufXsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIA0KXHBhciB7XCpcYmtta2VuZCBfY3BfdGV4dF8xXzE5NH0NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfMTk1fVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFBhcmNlbCBOby46IHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY1NzV9MzF7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjU3NX0tMjUwMDAxLjAwMDB7XCpcYmtta2VuZCBfY3BfdGV4dF8xXzE5NX0NClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGh5cGhwYXIwXGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDQwMTAwNDQgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFqIFxsaTBccmkwXHNhMjAwXHNsMjc2XHNsbXVsdDFcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGh5cGhwYXIwXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV8xOTZ9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpUcmFjdCB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNTc2fTEze1wqXGJrbWtlbmQgRG9jWFRleHRSZWY1NzZ9IChTT0hIUjIwMDE1KX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IA0KXHBhciB9XHBhcmQgXGx0cnBhclxxaiBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcaHlwaHBhcjBcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjMxMDEyOCB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfMTk3fXtcKlxia21rZW5kIF9jcF90ZXh0XzFfMTk2fQ0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQ29sbGVjdGlvbiBTeXN0ZW0gRWFzZW1lbnQgQWdyZWVtZW50IGRhdGVkIEp1bHkgMTEsIDIwMTkgYnkgYW5kIGJldHdlZW4gU3RhbWJhdWdoIEZhbWlseSBJbnZlc3RtZW50cywgTC5QLiwgYW4gQXJpem9uYSBsaW1pdGVkIHBhcnRuZXJzaGlwLCBSb2JlcnRhfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1NzMyNjE4IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIFN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkzMTc4MSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAuIExvcHJlc3RvLCBhIG1hcnJpZWQgd29tYW4sIGFuZCBMZXNsZXkgRS5caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCiBNY0tpbnN0cnksIGEgbWFycmllZCB3b21hbiwgYW5kIEhhcmRpbiBTb2xhciBFbmVyZ3kgTExDLCBhIERlbGF3YXJlIGxpbWl0ZWQgbGlhYmlsaXR5IGNvbXBhbnksIGFuZCByZWNvcmRlZCBNYXJjaCAxNywgMjAyMCBpbiBCb29rIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY1Nzd9NTU1e1wqXGJrbWtlbmQgRG9jWFRleHRSZWY1Nzd9DQosIFBhZ2UgNDQ4MiBvZiB0aGUgT2ZmaWNpYWwgUmVjb3JkcyBvZiBIYXJkaW4gQ291bnR5LCBPaGlvLCBhbmQgYXMgYXNzaWduZWQgdG8gSGFyZGluIFNvbGFyIEVuZXJneSBMTEMsIGEgRGVsYXdhcmUgbGltaXRcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBlXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpkIGxpYWJpbGl0eSBjb21wYW55LCBieSBRdWl0IGNsYWltIEFzc2lnbm1lbnQgYW5kIEFzc3VtcHRpb24gQWdyZWVtZW50IGRhdGVkIEFwcmlsIDI5LCAyMDIwIGFuZCByZWNvcmRlZCBNYXkgNSwgMjAyMCBpbiBCb29rIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY1Nzh9NTU2e1wqXGJrbWtlbmQgRG9jWFRleHRSZWY1Nzh9LCBQYWdlIDIwOTh9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTExMDA4MSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgb2YgdGhlIE9mZmljaWFsIFJlY29yZHMgb2YgSGFyZGluIENvdW50eSwgT2hpbywgb3ZlciwgdW5kZXIgYW5kIGFjcm9zcyB0aGUgZm9sbG93aW5nIGRlc2NyaWJlZCBwcm9wZXJ0eToNClxwYXIge1wqXGJrbWtlbmQgX2NwX3RleHRfMV8xOTd9DQpccGFyIHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV8xOTh9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgUGFyY2VsIDE6IH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODM1MDkwOCANClxwYXIge1wqXGJrbWtlbmQgX2NwX3RleHRfMV8xOTh9DQpccGFyIHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV8xOTl9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgU2l0dWF0ZWQgaW4gdGhlIFRvd25zaGlwcyBvZiBNY0RvbmFsZCBhbmQgTWFyaW9uLCBDb3VudHkgb2YgSGFyZGluIGFuZCBTdGF0ZSBvZiBPaGlvIGFuZCBib3VuZGVkIGFuZCBkZXNjcmliZWQgYXMgZm9sbG93czoNClxwYXIge1wqXGJrbWtlbmQgX2NwX3RleHRfMV8xOTl9DQpccGFyIHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV8yMDB9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQW5kIGtub3duIGFzIGJlaW5nIGEgcGFydCBvZiBWaXJnaW5pYSBNaWxpdGFyeSBTdXJ2ZXkgTm8uIDE1MDI2IG9uIHRoZSB3YXRlcnMgb2YgdGhlIFNjaW90byBSaXZlciwgYW5kIGEgcGFydCBvZiBTZWN0aW99e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgxMjE0MyANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIG4gTm8uIDM1IGluXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIFRvd25zaGlwIEZvdXIge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjU3OX0oNCl7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjU3OX0gU291dGggb2YgUmFuZ2UgTmluZSB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNTgwfSg5KXtcKlxia21rZW5kIERvY1hUZXh0UmVmNTgwfQ0KIEVhc3QgYW5kIGJvdW5kZWQgYW5kIGRlc2NyaWJlZCBhcyBmb2xsb3dzLCB0by13aXQ6DQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzQxNzcyMiB7XCpcYmtta2VuZCBfY3BfdGV4dF8xXzIwMH0NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQzNzU1OTUwIHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV8yMDF9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQmVnaW5uaW5nIGF0IGEgcG9pbnQgaW4gdGhlIGNlbnRlciBvZiB0aGUgTmV3IENoYW5uZWwgb2YgdGhlIFNjaW90byBSaXZlciBEaXRjaCwgd2hlcmUgdGhlIGxpbmUga25vd24gYXMgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYzOVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBUaGUgTG9zdCBDaGFubmVsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMzlcaW5zcnNpZDE0MjkxOTQ0IA0KXGxvY2hcYWYwXGRiY2hcYWYzOVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgb2YgdGhlIFNjaW90byBSaXZlciBjcm9zc2VzIHRoZSBjZW50ZVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHJsaW5lIG9mIHNhaWQgbmV3IGNoYW5uZWwufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYzOVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANClNhaWQgcG9pbnQgYmVpbmcgTm9ydGgge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjU4MX0yMXtcKlxia21rZW5kIERvY1hUZXh0UmVmNTgxfSBkZWcuIFdlc3QgMTQwNiBmZWV0IGZyb20gYSBwb3N0IGluIHRoZSBsaX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpuZSBiZXR3ZWVuIHRoZSBDb25ncmVzcyBhbmQgTWlsaXRhcnkgbGFuZHMsIHdoaWNoIGxpbmUgaXMga25vd24gYXMgc2FpZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYzOVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCkxvc3QgQ2hhbm5lbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjM5XGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjM5XGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KIGFuZCBzYWlkIHBvc3QgYmVpbmcgdGhlIEVhc3Rlcm4gdGVybWludXMgb2YgdGhlIFRvd25zaGlwIGxpbmUgYmV0d2VlbiB0aGUgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgVG93bnNoaXBzIG9mIE1hcmlvbiBhbmQgUm91bmRoZWFkLCBIYXJkaW4gQ291bnR5LCBPaGlvO317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEge1wqXGJrbWtlbmQgX2NwX3RleHRfMV8yMDF9DQpccGFyIHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV8yMDJ9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgVGhlbmNlIE5vcnRoIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY1ODJ9MTd7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjU4Mn0gZGVnLiBFYXN0IDI2MTYgZmVldCB0b317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQogYSBwb2ludCB3aGVyZSB0aGUgZGl2aXNpb24gbGluZSBiZXR3ZWVuIFByaWNlIGFuZCBDYXJ0ZXIgYW5kIEpvc2VwaCBUaW1tb25zIGNyb3NzZXMgc2FpZCBuZXcgY2hhbm5lbCwgd2l0bmVzcyBhbiBpfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ0MDEwMDQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHJvbiBwaXBlIG9uIHRoZSBXZXN0IGJhbmsgb2Ygc2FpZCBuZXcgY2hhbm5lbCANCntcKlxia21rc3RhcnQgRG9jWFRleHRSZWY1ODN9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgMzI2e1wqXGJrbWtlbmQgRG9jWFRleHRSZWY1ODN9IGZlZXQgU291dGgge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjU4NH0xNHtcKlxia21rZW5kIERvY1hUZXh0UmVmNTg0fSBkZWcuIEVhc3QgZnJvbSB0aGUgZXh0cmVtZSBOb3J0aCBjb3JuZXIgb2YgdGhlIE9uZSBodW5kcmVkIGFjcmUgdHJhY3Qgb2YgbGFuZH17XHJ0bGNoXGZjczEgXGFmMSANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBmb3JtZXJseSBvd25lZCBieSBOZWxzb24gTmFzaCBhbmQgd2lmZSwgYW5kIHdoaWNoIGxhbmQgd2FzIGNvbnZleWVkIHRvIGhpbSBieSBkZWVkIGZyb20gSm9zZXBoIFRpbW1vbnMgYW5kIHdpZmUsIHVuZGVyIGRhdGUgb2YgU2VwdGVtYmVyIDI2dGgsIDE4ODgsIGFuZCByZWNvcmRlDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBkIGluIFZvbHVtZSB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNTg1fTY3e1wqXGJrbWtlbmQgRG9jWFRleHRSZWY1ODV9IGF0IFBhZ2UgMzA3IG9mIHRoZSBEZWVkIFJlY29yZHMgb2YgSGFyZGluIENvdW50eSwgT2hpbywgd2hpY2ggZGl2aXNpb24gbGluZSBpcyBhfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1NzMyNjE4IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgbHNvIHRoZSBFYXN0IGxpbmUgb2Ygc2FpZCBOZWxzb24gTmFzaCB0cmFjdCBvZiB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNTg2fTEwMHtcKlxia21rZW5kIERvY1hUZXh0UmVmNTg2fSBhY3Jlcyx9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkzMTc4MSANClxwYXIge1wqXGJrbWtlbmQgX2NwX3RleHRfMV8yMDJ9DQpccGFyIHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV8yMDN9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgVGhlbmNlIFNvdXRoIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY1ODd9MTR7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjU4N30gZGVnLiBFYXN0IDQ1OTcgZmVldCB0byBhIHBvc3QsIGJlaW5nIHRoZSBTb3V0aGVhc3QgY29ybmVyIG9mIHNhaWQgTmFzaCB0cmFjdCBvZiB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNTg4fTEwMA0Ke1wqXGJrbWtlbmQgRG9jWFRleHRSZWY1ODh9IGFjXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgcmVzLA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkxMTAwODEge1wqXGJrbWtlbmQgX2NwX3RleHRfMV8yMDN9DQpccGFyIHtcKlxia21rc3RhcnQgX2NwX3RleHRfMV8yMDR9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgVGhlbmNlIFNvdXRoIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY1ODl9NzZ7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjU4OX0gZGVnLiBXZXN0IHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY1OTB9OTQ3e1wqXGJrbWtlbmQgRG9jWFRleHRSZWY1OTB9IGZlZXQgdG8gYSBwb3N0IGluIHNhaWQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYzOVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBMb3N0IENoYW5uZWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYzOVxoaWNoXGYwIFwnOTR9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjM5XGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYzOVxsb2NoXGYwIDt9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCB7XCpcYmtta2VuZCBfY3BfdGV4dF8xXzIwNH0NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfMjA1fVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFRoZW5jZSBOb3J0aCB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNTkxfTIxe1wqXGJrbWtlbmQgRG9jWFRleHRSZWY1OTF9IGRlZy4gV2VzdCB3aXRoIHNhaWQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYzOVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBMb3N0IENoYW5uZWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYzOVxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYzOVxoaWNoXGYwIFwnOTR9ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICAyNDU1IGZlZXQgdG8gdGhlIHBsYWNlIG9mIGJlZ2lubmluZywgY29udGFpbmluZyBOaW5ldHkgdGhyZWUgYW5kIGZpZnR5IGh1bmRyZWR0aHMgKDkzLjUwKSBhY3JlcyBvZiBsYW5kLCBtb3JlIG9yIGxlc3MsIG9mIHdoaWNoIE5caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCmluZXR5IG9uZSBhbmQgZm9ydHkgaHVuZHJlZHRocyBpcyBpbiBTdXJ2ZXkgTnVtYmVyIDE1MDI2IGFuZCBUd28gYW5kIFRlbiBodW59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGRyZWR0aHMgYWNyZXMgaXMgaW4gU2VjdGlvbiBUaGlydHkgZml2ZSB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNTkyfSgzNSkNCntcKlxia21rZW5kIERvY1hUZXh0UmVmNTkyfS59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIA0KXHBhciB7XCpcYmtta2VuZCBfY3BfdGV4dF8xXzIwNX0NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfMjA2fVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEFuZCBiZWluZyBhbGwgdGhhdCBwYXJ0IG9mIHRoZSBsYW5kIGRlZWRlZCBieSBDLiBFLiBOYXNoIGFuZCBBbGljZSBDLiBOYXNoLCBoaXMgd2l9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDAxMDA0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBmZSwgdG8gV2FsdGVyIFMuIFNueWRlciBhbmQgSi4gRS4gRHlzZXJ0LCBieSBkZWVkIGRcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBhdGVkIE1hcmNoIDI0dGgsIEEuIEQuIDE5MjAgYW5kIHJlY29yZGVkIGluIERlZWQgcmVjb3JkIE51bWJlciB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNTkzfTEyOQ0Ke1wqXGJrbWtlbmQgRG9jWFRleHRSZWY1OTN9IGF0IFBhZ2UgNX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjMxMDEyOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAwMiBvZiB0aGUgUmVjb3JkcyBvZiBIYXJkaW4gQ291bnR5LCBPaGlvLCBseWluZyBFYXN0IGFuZCBTb3V0aCBvZiB0aGUgbmV3IGNoYW5uZWwgb2YgdGhlIFNjaW90byBSaXZlciBEaXRjaC4NClxwYXIge1wqXGJrbWtlbmQgX2NwX3RleHRfMV8yMDZ9DQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcbGFuZzEwMzZcbGFuZ2ZlMTAzM1xsYW5nbnAxMDM2XGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDU3MzI2MTgge1wqXGJrbWtzdGFydCBfY3BfdGV4dF8xXzIwN31caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBQYXJjZWwgTm9zLiAgMjgzNX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxsYW5nMTAzNlxsYW5nZmUxMDMzXGxhbmducDEwMzZcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTMxNzgxIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDAwMDMwMDAwOyAzMTI0MDAwNjAwMDAgYW5kIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY1OTR9MzEyNDAwMDcwMDAwe1wqXGJrbWtlbmQgRG9jWFRleHRSZWY1OTR9DQpccGFyIH1ccGFyZCBcbHRycGFyXHFqIFxsaTBccmkwXHNhMjAwXHNsMjc2XHNsbXVsdDFcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGh5cGhwYXIwXGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcdWxcbGFuZzEwMzZcbGFuZ2ZlMTAzM1xsYW5nbnAxMDM2XGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkzMTc4MSANCntcKlxia21rZW5kIF9jcF90ZXh0XzFfMjA3fQ0KXHBhciB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfMjA4fVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFRSQUNUIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY1OTV9MTl7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjU5NX0gKFNPXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgSEhSMjAwMjEpfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGJcbGFuZzEwMzZcbGFuZ2ZlMTAzM1xsYW5nbnAxMDM2XGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkzMTc4MSANClxwYXIgfVxwYXJkIFxsdHJwYXJccWogXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGh5cGhwYXIwXGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkxMTAwODEge1wqXGJrbWtzdGFydCBfY3BfdGV4dF8xXzIwOX17XCpcYmtta2VuZCBfY3BfdGV4dF8xXzIwOH0NClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEFjY2VzcyBFYXNlbWVudCBBZ3JlZW1lbnQgZGF0ZWQgTm92ZW1iZXIgMSwgMjAxOSBieSBhbmQgYmV0d2VlbiBQYXVsIFJpY2hhcmRzb24gSnIuICYgTWFyeSBKYW5lIFJpY2hhcmRzb24sIGh1c2JhbmQgYW5kIHdpZmUsIGFuZCBJbnZlbmVyZ3kgU29sYXIgRGV2ZWxvcG1lbnQgTm9ydGggQW1lcmljYSBMTEMsIGFuZCByZWNvcmRlZCBBcHJpbCAyNCwgMjAyMCBpbiBCb29rIA0Ke1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjU5Nn01NTZ7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjU5Nn0sIFBhZ2UgODYxIG9mIHRoZSBPZmZpY2lhbCBSZWNcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCm9yZHMgb2YgSGFyZGluIENvdW50eSwgT2hpbywgYW5kIGFzIGFzc2lnbmVkIHRvIEhhcmRpbiBTb2xhciBFbmVyZ3kgTExDLCBhIERlbGF3YXJlIGxpbWl0ZWQgbGlhYmlsaXR5IGNvbXBhbnkgYnkgQXNzaWdubWVudCBhbmQgQXNzdW1wdGlvbiBBZ3JlZW1lbnQgZGF0ZWQgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MzUwOTA4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KQXByaWwgMjksIDIwMjAgYW5kIHJlY29yZGVkIE1heSA1LCAyMDIwIGluIEJvb2sge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjU5N301NTZ7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjU5N30sIFBhZ2UgMjA4NiBvZiB0aGUgT2ZmaWNpYWwgUmVjb3JkcyBvZiBIYXJkaW4gQ291blxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHR5LCBPaGlvLCBvdmVyLCB1bmRlciBhbmQgYWNyb3NzIHRoZSBmb2xsb3dpbmcgZGVzY3JpYmVkIHByb3BlcnR5Og0KDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZnMyMlxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MzUwOTA4IHtcKlxia21rZW5kIF9jcF90ZXh0XzFfMjA5fQ0KXHBhciB9XHBhcmQgXGx0cnBhclxxaiBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODM1MDkwOCB7XCpcYmtta3N0YXJ0IF9jcF90ZXh0XzFfMjEwfVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEEgcGFydH17DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MTIxNDMgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIG9mIHRoZSBOb3J0aHdlc3QgUXVhcnRlciBvZiBTZWN0aW9uIE5vLiAzLCBULiB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNTk4fTV7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjU5OH0gUy4sIFIuIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY1OTl9OQ0Ke1wqXGJrbWtlbmQgRG9jWFRleHRSZWY1OTl9IEUuLCBSb3VuZGhlYWQgVG93bnNoaXAsIEhhcmRpbiBDb3VudHksIFN0YXRlIG9mIE9oaW8gYW5kIGZ1cnRoZXIgZGVzY3JpYn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzQxNzcyMiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBlZCBhcyBmb2xsb3dzOn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQzNzU1OTUwIA0KXHBhciB7XCpcYmtta2VuZCBfY3BfdGV4dF8xXzIxMH0NClxwYXIge1wqXGJrbWtzdGFydCBfY3BfdGV4dF8xXzIxMX1caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBCZWdpbm5pbmcgYXQgYSBwb2ludCBtYXJrZWQgYnkgYSByYWlcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBscm9hZCBzcGlrZSBzZXQgaW4gcGF2ZW1lbnQgb3ZlciB0aGUgc3RvbmUgYXQgdGhlIFNvdXRod2VzdCBjb3JuZXIgb2YgdGhlIHNhaWQgTm9ydGh3ZXN0IFF1YXJ0ZXI7IHRoZW5jZSBOb3J0aCANCntcKlxia21rc3RhcnQgRG9jWFRleHRSZWY2MDB9MHtcKlxia21rZW5kIERvY1hUZXh0UmVmNjAwfSBkZWdyZWVzIDE4IG1pbnV0ZXMgV2VzdCBvbiB0aGUgV2VzdCBsaW5lIG9mIHNhaWQgTm9ydGh3ZXN0IFF1YXJ0ZXIgYSBkaXN0YW5jZSBvZiB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNjAyfTM3NS4wMHtcKlxia21rZW5kIERvY1hUZXh0UmVmNjAyfSBmfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE1NjcxOTY4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGVldCB0byBhIHBvaW50IG1hcmtlZCBieSBhIHN0ZWVsIHJvZDsgdGhlbmNlIEVhc3QgYSBkaVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHN0YW5jZSBvZiB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNjAzfTMxMC4wMHtcKlxia21rZW5kIERvY1hUZXh0UmVmNjAzfQ0KIGZlZXQgdG8gYSBwb2ludCBtYXJrZWQgYnkgYSBzdGVlbCByb2Q7IHRoZW5jZSBTb3V0aCB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNjAxfTB7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjYwMX0gZGVncmVlcyAxOCBtaW51dGVzIEVhc3QgYSBkaXN0YW5jZSBvZiB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNjA0fTM3NS4wMHtcKlxia21rZW5kIERvY1hUZXh0UmVmNjA0fQ0KIGZlZXQgdG8gYSBwb2ludCBtYXJrZWQgYnkgYSBuYWlsIHNldCBpbiBwYXZlbWVudCBvbiB0aGUgU291dGggbGluZSBvZiBzYWlkIFNlY3Rpb24gTm8uIDM7IHRoZW5jZSBXZXN0IGEgZGlzdGFuY2Ugb2Yge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjYwNX0zMTAuMDB7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjYwNX0gZmVldCB0byB0aGUgcGxhY1xoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGVcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCiBvZiBiZWdpbm5pbmcsIGNvbnRhaW5pbmcge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjYwNn0yLjY2OHtcKlxia21rZW5kIERvY1hUZXh0UmVmNjA2fSBhY3JlcyBvZiBsYW5kIG1vcmUgb3IgbGVzcyBidXQgc3ViamVjdCB0byB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDc3MzU0MTMgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgYWxsIGxlZ2FsIGhpZ2h3YXlzLn17XHJ0bGNoXGZjczEgDQpcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1NzEyMzg3IA0KXHBhciB7XCpcYmtta2VuZCBfY3BfdGV4dF8xXzIxMX0NClxwYXIgfVxwYXJkIFxsdHJwYXJccWogXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTMzNzI1MDMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDU3MTIzODcge1wqXGJrbWtzdGFydCBfY3BfdGV4dF8xXzIxMn1caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBQUE46IA0Ke1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjYwN30zN3tcKlxia21rZW5kIERvY1hUZXh0UmVmNjA3fS0wMjAwMTcuMDAwMH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMzcyNTAzIHtcKlxia21rZW5kIF9jcF90ZXh0XzFfMjEyfQ0KXHBhciANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXHVsXGluc3JzaWQxMzM3MjUwM1xjaGFycnNpZDEzMzcyNTAzIFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTNcbG9jaFxmMCBcaGljaFxmMCBMZWFzZSAzXCc5NFxsb2NoXGYwICAoU09ISFIyMDAzMCl9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcdWxcaW5zcnNpZDEzMzcyNTAzIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxMzM3MjUwM1xjaGFycnNpZDEzMzcyNTAzIA0KXHBhciBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBDb2xsZWN0aW9uIFN5c3RlbSBFYXNlbWVudCBBZ3JlZW1lbnQgZGF0ZWQgSnVuZSAyNSwgMjAyMCBieSBhbmQgYmV0d2VlbiBTdGFtYmF1Z2ggRmFtaWx5IEludmVzdG1lbnRzLCBMLlAuLCBhbiBBcml6b1xoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KbmEgbGltaXRlZCBwYXJ0bmVyc2hpcCwgYW5kIFRoZSBKZW5uaW5ncyBNLiBTdGFtYmF1Z2ggVHJ1c3QgYS9rL2EgdGhlIEplbm5pbmdzIE0uIFN0YW1iYXVnaCBUcnVzdCBjcmVhdGVkIGJ5IEl0ZW0gNSBvZiB0aGUgTGFzdCBXaWxsIGFuZCBUZXN0YW1lbnQgb2YgSmVubmluZ3MgTS4gU3RhbWJhdWdoIGRhdGVkIEp1bHkgMTcsIDE5ODAsIGFuZCBIYXJkaW4gU29sYXIgRW5lcmd5IElJIExMQywgYSBEZWxhd2FyZSBsaW1pdGVkIGxpYWJpbGl0eSBjDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBvXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQptcGFueSwgYXMgZXZpZGVuY2VkIGJ5IE1lbW9yYW5kdW0gb2YgIENvbGxlY3Rpb24gU3lzdGVtIEVhc2VtZW50IEFncmVlbWVudCByZWNvcmRlZCBBdWd1c3QgNywgMjAyMCBpbiBCb29rIDU1NywgUGFnZSAyNTcxIG9mIHRoZSBPZmZpY2lhbCBSZWNvcmRzIG9mIEhhcmRpbiBDb3VudHksIE9oaW8sIG92ZXIsIHVuZGVyIGFuZCBhY3Jvc3MgdGhlIGZvbGxvd2luZyBkZXNjcmliZWQgcHJvcGVydHk6DQpccGFyIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxMzM3MjUwM1xjaGFycnNpZDEzMzcyNTAzIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFBBUkNFTCAxOn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDEzMzcyNTAzXGNoYXJyc2lkMTMzNzI1MDMgDQpccGFyIA0KXHBhciBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBTaXR1YXRlZCBpbiB0aGUgVFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIG93bnNoaXAgb2YgUm91bmRoZWFkLCBDb3VudHkgb2YgSGFyZGluIGFuZCBTdGF0ZSBvZiBPaGlvIGFuZCBkZXNjcmliZWQgYXMgZm9sbG93czoNClxwYXIgDQpccGFyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEFuZCBrbm93biBhcyBiZWluZyBmcmFjdGlvbmFsIFNvdXRod2VzdCBRdWFydGVyIG9mIFNlY3Rpb24gVHdvICgyKSwgVG93bnNoaXAgRml2ZSAoNSkgU291dGgsIFJhbmdlIE5pbmUgKDkpIEVhc3QsIGJlZ2lubmluZyBhdCBhIHN0b25lIGluIHRoZSBOb3J0aHdlc3QgY29ybmVyIG9mIHNhaWQgU291dGhcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCB3ZXN0IFF1YXJ0ZXI7DQpccGFyIA0KXHBhciBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBUaGVuY2UgTm9ydGggOTAgZGVnLiBFYXN0IHdpdGggdGhlIE5vcnRoIGxpbmUgb2Ygc2FpZCBRdWFydGVyIE9uZSB0aG91c2FuZCBlaWdodCBodW5kcmVkIHNldmVudGVlbiBhbmQgZml2ZSB0ZW50aHMgKDE4MTcuNSkgZmVldCB0byBhIHN0b25lIGluIHRoZSBsb3N0IGNoYW5uZWwgbGluZSBvZiB0aGUgU2Npb3RvIFJpdmVyOw0KXHBhciANClxwYXIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgVGhlbmNlIHdpdGggbG9zdCBjaGFubmVsIGxpbmUgU291dGggMjAgZGVnLiAzMCcgRm91ciBoXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgdW5kcmVkIGVsZXZlbiAoNDExKSBmZWV0IHRvIGEgc3RvbmUgYXQgdGhlIFNvdXRoZXJseSBlbmQgb2Ygc2FpZCBsaW5lIGFuZCBvbGQgY2hhbm5lbCBvZiBTY2lvdG8gUml2ZXI7DQpccGFyIA0KXHBhciBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBUaGVuY2UgdXAgc2FpZCByaXZlciB3aXRoIGl0cyBtZWFuZGVyaW5ncyBTb3V0aCAzNCBkZWcuIDMwJyBXZXN0IE9uZSB0aG91c2FuZCB0d28gaHVuZHJlZCB0d2VudHktbmluZSAoMTIyOSkgZmVldCB0byBhIHN0b25lIGluIGNlbnRlciBvZiBzYWlkIG9sZCBjaGFublxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGVsOw0KXHBhciANClxwYXIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgVGhlbmNlIFNvdXRoIDI3IGRlZy4gNDUnIFdlc3QgT25lIHRob3VzYW5kIHR3byBodW5kcmVkIGVpZ2h0ZWVuIGFuZCBmaXZlIHRlbnRocyAoMTIxOC41KSBmZWV0IHRvIGEgc3RvbmUgaW4gY2VudGVyIG9mIHNhaWQgb2xkIGNoYW5uZWw7DQpccGFyIA0KXHBhciBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBUaGVuY2UgU291dGggOCBkZWcuIDYwJyBUd28gaHVuZHJlZCBuaW5lICgyMDkpIGZlZXQgdG8gYSBzdG9uZSBpbiBjZW50ZXIgb2Ygc2FpZCBvbGQgY2hhbm5lbCBhbmQgdGhlIFNvdXRoIGxpbmUgb2ZcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgc2FpZCBmcmFjdGlvbmFsIFNlY3Rpb24gVHdvICgyKTsNClxwYXIgDQpccGFyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFRoZW5jZSB3aXRoIHRoZSBTb3V0aCBsaW5lIHRoZXJlb2YgTm9ydGggODkgZGVnLiA0NScgV2VzdCBTaXggSHVuZHJlZCBzZXZlbnR5LXNldmVuICg2NzcpIGZlZXQgdG8gYSBzdG9uZSBpbiB0aGUgU291dGh3ZXN0IGNvcm5lciBvZiBzYWlkIHNlY3Rpb247DQpccGFyIA0KXHBhciBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBUaGVuY2Ugd2l0aCB0aGUgV2VzdCBsaW5lIHRoZXJlb2YgTm9ydGggMCBkZWcuIDAwJyBXZXN0IFR3byB0aG91c2FuZCBzaXggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpodW5kcmVkIHNldmVudHktdGhyZWUgKDI2NzMpIGZlZXQgdG8gdGhlIHBsYWNlIG9mIGJlZ2lubmluZywgY29udGFpbmluZyBFaWdodHktb25lIGFuZCBlaWdodHktZml2ZSBodW5kcmVkdGhzICg4MS44NSkgYWNyZXMgb2YgbGFuZCwgbW9yZSBvciBsZXNzLg0KXHBhciANClxwYXIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgUFBOIDM3MDEwMDAyMDAwMA0KXHBhciANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTMzNzI1MDNcY2hhcnJzaWQxMzM3MjUwMyBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBQQVJDRUwgMjp9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxMzM3MjUwM1xjaGFycnNpZDEzMzcyNTAzIA0KXHBhciANClxwYXIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgU2l0dWF0ZWQgaW4gdGhlIFRvd25zaGlwIG9mIFJvdW5kaGVhZCwgQ291bnR5IG9mIEhhcmRpbiBhbmQgU3RhdGUgb2YgT2hpbzoNClxwYXIgDQpccGFyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEFuZFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBrbm93biBhcyBiZWluZyB0aGUgU291dGhlYXN0IHBhcnQgb2YgdGhlIFNvdXRoZWFzdCBRdWFydGVyIG9mIFNlY3Rpb24gMywgVG93bnNoaXAgNSBTb3V0aCwgUmFuZ2UgOSBFYXN0LCBSb3VuZGhlYWQgVG93bnNoaXAsIGNvbW1lbmNpbmcgYXQgdGhlIFNvdXRoZWFzdCBjb3JuZXIgb2Ygc2FpZCBRdWFydGVyIFNlY3Rpb247DQpccGFyIA0KXHBhciBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBUaGVuY2UgYWxvbmcgdGhlIFNvdXRoIGxpbmUgdGhlcmVvZiBOb3J0aCA4OSBkZWcuIDQ1JyBXZXN0IE5pbmV0eS1laWdcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCmh0ICg5OCkgcm9kcyB0byB0aGUgU291dGhlYXN0IGNvcm5lciBvZiB0aGUgbGFuZHMgY29udmV5ZWQgYnkgV2lsbGlhbSBDLiBNeWVycyBldC4gYWwuIHRvIEZyZWRlcmljayBMb2VmZmxlciBhbmQgc2FpZCBMb2VmZmxlciB0byBILiBQcmljZSBoZXJlaW47DQpccGFyIA0KXHBhciBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBUaGVuY2UgYWxvbmcgdGhlIEVhc3QgbGluZSBvZiBzYWlkIGxhc3QgbWVudGlvbmVkIGxhbmRzIE5vcnRoIDE3IGRlZy4gMzAnIEVhc3QgNzUuNzUgcm9kcyB0byB0aGUgTm9ydGhlYXN0IGNcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBvcm5lciBvZiBzYWlkIGxhc3QgbWVudGlvbmVkIHRyYWN0Ow0KXHBhciANClxwYXIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgVGhlbmNlIE5vcnRoIDg5IGRlZy4gRWFzdCA3NC40IHJvZHMgdG8gdGhlIEVhc3QgbGluZSBvZiBzYWlkIFF1YXJ0ZXIgU2VjdGlvbjsNClxwYXIgDQpccGFyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFRoZW5jZSBhbG9uZyBzYWlkIGxpbmUgU291dGggMCBkZWcuIDMwJyBFYXN0IDc1LjIgcm9kcyB0byB0aGUgcGxhY2Ugb2YgYmVnaW5uaW5nIGNvbnRhaW5pbmcgNDAuNTEgYWNyZXMsIGFuZCBiZWluZyB0aGUgc2FtZSBwcmVtaXNlcyBjb252ZXllXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpkIGJ5IFdpbGxpYW0gQy4gTXllcnMgZXQgYWwgdG8gSC4gUHJpY2UgYnkgZGVlZCBkYXRlZCBKYW51YXJ5IDMwLCAxODk5LCByZWNvcmRlZCBpbiBWb2x1bWUgODUsIFBhZ2UgNDYyLCBEZWVkIFJlY29yZHMsIFJlY29yZGVyJ3MgT2ZmaWNlLCBIYXJkaW4gQ291bnR5LCBPaGlvLg0KXHBhciANClxwYXIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgUFBOICAzNzAyMDAwNDAwMDANClxwYXIgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFqIFxsaTBccmkwXHNhNzIwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXHVsXGluc3JzaWQxMzM3MjUwM1xjaGFycnNpZDU3MTIzODcgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTBccmkwXHNhNzIwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1NzEyMzg3IA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxzZWN0IH1cc2VjdGQgXGx0cnNlY3RcbGluZXgwXGVuZG5oZXJlXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiANCntcZm9vdGVyciBcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJcczM1XHFsIFxsaTBccmkwXHNsLTIwMFxzbG11bHQwXHdpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczE2XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxhZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQyNjM2MzQyXGNoYXJyc2lkOTEyNTkwNyBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjYzNjM0MiANClxwYXIgfX1ccGFyZFxwbGFpbiBcbHRycGFyXHFjIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGFmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEVYSElCSVQgQi0xDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEJJTEwgT0YgU0FMRSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcdWxcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFxlbmRhc2ggfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGJcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXHVsXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBbfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpTSEFSRUQgRkFDSUxJVElFU317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlx1bFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgL08mTSBGQUNJTElUSUVTXX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXHBhciB9XHBhcmQgXGx0cnBhclxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjM4MTY1NSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBUSElTIEJJTEwgT0YNClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBTQUxFIFxoaWNoXGYwIFxlbmRhc2ggXGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFt9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzODE2NTUgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgU0hBUkVEIEZBQ0lMSVRJRVN9ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIC9PJk0gRkFDSUxJVElFU10gfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzgxNjU1IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFxoaWNoXGYwICh0aGlzIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjM4MTY1NSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBCaWxsIG9mIFNhbGV9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzODE2NTUgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NFxsb2NoXGYwICkgaXMgZWZmZWN0aXZlIGFzIG9mIF9fX19fX19fX19fXywgMjB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDMxNTA0ODQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgMn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjM4MTY1NSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBcaGljaFxmMCBfX18gKHRoZSBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzgxNjU1IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KRWZmZWN0aXZlIERhdGV9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzODE2NTUgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NFxsb2NoXGYwICksIGJldHdlZW4gX19fX19fX19fX19fX19fLCBhIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjM4MTY1NSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBcaGljaFxmMCAgKFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzODE2NTUgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQXNzaWdub3J9ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjM4MTY1NSBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0XGxvY2hcZjAgXGhpY2hcZjAgKSwgYW5kIF9fX19fX19fX19fX19fX19fXywgYSBfX19fX19fX19fX19fX19fX19fXyAoXCc5M1xsb2NoXGYwIEFzXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgXGhpY2hcZjAgc2lnbmVlXCc5NFxsb2NoXGYwIFxoaWNoXGYwIA0KKS4gIEFzc2lnbm9yIGFuZCBBc3NpZ25lZSBhcmUgc29tZXRpbWVzIHJlZmVycmVkIHRvIGluIHRoaXMgQmlsbCBvZiBTYWxlIGFzIGEgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMFxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjM4MTY1NSBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0XGxvY2hcZjAgXGhpY2hcZjAgIGFuZCBjb2xsZWN0aXZlbHkgYXMgdGhlIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjBcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggQ28tVGVuYW50c317XHJ0bGNoXGZjczEgXGFmMSANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzgxNjU1IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTQufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXGY0M1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzgxNjU1IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzODE2NTUgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgV0hFUkVBUywgQXNzaWdub3IgaXMgdGhlIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0OTQ2Njg4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIG93bmVyfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzODE2NTUgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIG9mIHRoYXQgY2VydGFpbiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBfX19fX19ffXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzgxNjU1IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgZW5lcmd5IGZhY2lsaXR5ICh0aGUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzgxNjU1IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzODE2NTUgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgX19fX19fX19fX19fX19ffXsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzODE2NTUgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIFByb2plY3R9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzODE2NTUgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NFxsb2NoXGYwICksIGFuZCBBc3NpZ25lZSBpcyB0aFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KZSBvd25lciBvZiB0aGF0IGNlcnRhaW4gfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgX19fX19ffXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzgxNjU1IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFxoaWNoXGYwICBlbmVyZ3kgZmFjaWxpdHkgKHRoZSBcJzkzXGxvY2hcZjAgDQpfX19fX19fX317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjM4MTY1NSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgUHJvamVjdH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjM4MTY1NSBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0XGxvY2hcZjAgXGhpY2hcZjAgDQosIHRvZ2V0aGVyIHdpdGggdGhlIF9fX19fX19fX19fX19fXyBQcm9qZWN0LCB0aGUgXCc5M317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjM4MTY1NSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBQcm9qZWN0c317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjM4MTY1NSBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0DQpcbG9jaFxmMCBcaGljaFxmMCAgYW5kIGluZGl2aWR1YWxseSwgYSBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzgxNjU1IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFByb2plY3R9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzODE2NTUgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NFxsb2NoXGYwIA0KKSwgZWFjaCBvZiB3aGljaCBhcmUgbG9jYXRlZCBpbiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDk0NjY4OCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBIYXJkaW59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzODE2NTUgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIENvdW50eSwgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDk0NjY4OCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBPSH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjM4MTY1NSAufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxmNDNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjM4MTY1NSANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzgxNjU1IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFdIRVJFQVMsIEFzc2lnbm9yIGFuZCBBc3NpZ25lZSBhcmUgcGFydGllcyB0byBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBhIGNlcnRhaW4gfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNjE0NjgzIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KQXNzaWdubWVudCwgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzgxNjU1IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIENvLVRlbmFuY3kgYW5kIFNoYXJlZCBGYWNpbGl0aWVzIEFncmVlbWVudCBkYXRlZCBhcyBvZiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxMTM0NjE3OCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBEZWNlbWJlciB9ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDUzOTc2OTcgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgMzB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzODE2NTUgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgLCAyMH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDMxNTA0ODQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgMn17DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTEzNDYxNzggMH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjM4MTY1NSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBcaGljaFxmMCAgYnkgYW5kIGFtb25nIEFzc2lnbm9yLCBBc3NpZ25lZSBhbmQgY2VydGFpbiBvdGhlciBwYXJ0aWVzICh0aGUgXCc5M317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzgxNjU1IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIENvLVRlbmFuY3kgQWdyZWVtZW50fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzgxNjU1IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTRcbG9jaFxmMCANCikgd2hpY2ggYWdyZWVtZW50LCBhbW9uZyBvdGhlciB0aGluZ3MsIGdvdmVybnMgdGhlIGpvaW50IG93bmVyc2hpcCBvZiBjZXJ0YWlcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBuIHByb3BlcnR5IGFuZCBmYWNpbGl0aWVzIHV0aWxpemVkIGZvciB0aGUgb3BlcmF0aW9uIG9mIHRoZSBQcm9qZWN0cyBhbmQgZ292ZXJucyB0aGUgcmVsYXRpb25zaGlwIGFtb25nIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMFxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBDby1UZW5hbnRzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzgxNjU1IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB3aXRoIHJlc3BlY3QgdG8gdGhlIFByb2plY3RzLn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxmNDNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjM4MTY1NSANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFdIRVJFQVMsIG9uIHRoZSB0ZXJtcyBzZXQgZm9ydGggaGVyZWluLCBBc3NpZ25vciBkZXNpcmVzIHRvIGNvbnZleSBhbmQgcXVpdC1jbGFpbSB0byBBc3NpZ25lZSwgYW4gdW5kaXZpZGVkXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQogdGVuYW50cy1pbi1jb21tb24gaW50ZXJlc3QgaW4gYW5kIHRvIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBbfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFNoYXJlZCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAvTyZNIEZhY2lsaXRpZXNdfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDk0NjY4OCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAoZGVmaW5lZCBiZWxvdykgDQp9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgKHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgVHJhbnNmZXJyZWQgVElDIEludGVyZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCiksIHJldGFpbmluZywgZm9yIGl0c2VsZiwgYW4gdW5kaXZpZGVkIHRlbmFudHMtaW4tY29tbW9uIGludGVyZXN0IGluIGFuZCB0byB0aGUgU2hhcmVkIEZhY2lsaXRpZXMgKHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgUmV0YWluZWQgVElDIEludGVyZXN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCApLn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgTk9XXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQogVEhFUkVGT1JFLCBpbiBjb25zaWRlcmF0aW9uIG9mIHRoZSBmb3JlZ29pbmcgcmVjaXRhbHMsIHdoaWNoIGFyZSBoZXJlYnkgaW5jb3Jwb3JhdGVkIGhlcmVpbiwgYW5kIHRoZSBtdXR1YWwgb2JsaWdhdGlvbnMgYW5kIGNvdmVuYW50cyBvZiB0aGUgQ28tVGVuYW50cyBoZXJlaW4gY29udGFpbmVkLCBhbmQgZm9yIG90aGVyIGdvb2QgYW5kIHZhbHVhYmxlIGNvbnNpZGVyYXRpb24sIHRoZSByZWNlaXB0IGFuZCBzdWZmaWNpZW5jeSBvZiB3aGljaCANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGlcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBzIGhlcmVieSBtdXR1YWxseSBhY2tub3dsZWRnZWQsIHRoZSBDby1UZW5hbnRzIGhlcmV0byBhZ3JlZSBhcyBmb2xsb3dzOn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDEuXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDY1NzU3NDEgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgW1NoYXJlZCBGYWNpbGl0aWVzL08mTSBGYWNpbGl0aWVzXX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIC4gIFRoZSB0ZXJtIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFxoaWNoXGYwIFtcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgU2hhcmVkIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0XGxvY2hcZjAgXGhpY2hcZjAgL1wnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDY1NzU3NDEgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgTyZNIEZhY2lsaXRpZXN9DQp7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTRcbG9jaFxmMCBdfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBhcyB1c2VkIGhlcmVpbiBzaGFsbCBtZWFuIHRoZSBmYWNpbGl0aWVzIGRlc2NyaWJlZCBvbiB0aGUgYXR0YWNoZWQgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgRXhoaWJpdCBBfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFRoZSBDby1UZW5hbmN5IEFnXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgcmVlbWVudCBpcyBpbmNvcnBvcmF0ZWQgaGVyZWluIGJ5IHJlZmVyZW5jZS59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAyLlx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ2NTc1NzQxIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIENvbnZleWFuY2Ugb2YgW1NoYXJlZCBGYWNpbGl0aWVzL08mTSBGYWNpbGl0aWVzXSBieSB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBBc3NpZ25vcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCi4gIEFzc2lnbm9yIGhlcmVieSBzZWxscywgY29udmV5cyBhbmQgcXVpdGNsYWltcyB0byBBc3NpZ25lZSB0aGUgVHJhbnNmZXJyZWQgVElDIEludGVyZXN0LCByZXRhaW5pbmcsIGZvciBpdHNlbGYsIHRoZSBSZXRhaW5lZCBUSUMgSW50ZXJlc3QsIHN1YmplY3RcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCiBpbiBlYWNoIGNhc2UgdG8gdGhlIHRlcm1zLCBjb3ZlbmFudHMgYW5kIGNvbmRpdGlvbnMgY29udGFpbmVkIGluIHRoZSBDby1UZW5hbmN5IEFncmVlbWVudC4gIFRoZSByZXNwZWN0aXZlIHNoYXJlcyBvZiBlYWNoIENvLVRlbmFudCBhZnRlciBzdWNoIGNvbnZleWFuY2Ugc2hhbGwgYmUgYXMgZm9sbG93czp9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTIxNjBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMjE2MFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQXNzaWdub3I6IF9fXyV9e1xydGxjaFxmY3MxIFxhZjEgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTIxNjBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMjE2MFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBBc3NpZ25lZTogX19fJQ0KXHBhciB9XHBhcmQgXGx0cnBhclxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBcaGljaFxmMCBUSElTIENPTlZFWUFOQ0UgSVMgTUFERSBcJzkzfXsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDAxMDA0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBBUyBJU317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTRcbG9jaFxmMCBcaGljaFxmMCAsIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcYlxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1NzMyNjE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFdJVEggQUxMIEZBVUxUU317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MzE3ODEgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KIEFORCBXSVRIT1VUIFdBUlJBTlRZLCBFSVRIRVIgRVhQUkVTU0VEIE9SIElNUExJRUQsIElOQ0xVRElORywgV0lUSE9VVCBMSU1JVEFUSU9OLCBBTlkgV0FSUkFOVElFUyBPRiBRVUFMSVRZLCBNRVJDSEFOVEFCSUxJVFksIFNVSVRBQklMSVRZIEFORCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSwgQU5ZIFdBUlJBTlRJRVMgUkVHQVJESU5HIFRIRSBFWElTVEVOQ0UgT0YgQU5ZIFNFQ1VSSVRZIElOVEVSRVNULCBMSUVOIE9SIEVOQ1VNDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBCXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgUkFOQ0UgQU5EIEFOWSBXQVJSQU5USUVTIEFSSVNJTkcgQlkgQ09NTU9OIExBVywgRVhDRVBUIEZPUiBUSE9TRSBXQVJSfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkxMTAwODEgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpBTlRJRVMgTUFERSBCWSBHUkFOVE9SIFVOREVSIFRIRSBDTy1URU5BTkNZIEFHUkVFTUVOVCBBTkQgSVMgU1VCSkVDVCBUTyBTRUNUSU9OIDUuMyBPRiBUSEUgQ08tVEVOQU5DWSBBR1JFRU1FTlQufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MTEwMDgxIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICAgQW55IHN1YnNlcXVlbnQgbW9kaWZpY2F0aW9ucyB0byB0aGUgfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBbfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFNoYXJlZCBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQovTyZNIEZhY2lsaXRpZXNdIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTExMDA4MSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBvclxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBBc3NpZ25vclxoaWNoXGYwIFxycXVvdGUgXGxvY2hcZjAgcyB0ZW5hbn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODM1MDkwOCANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHRzLWluLWNvbW1vbiBpbnRlcmVzdCBzaGFsbCBvcGVyYXRlIGFzIGEgbW9kaWZpY2F0aW9uIHRvIHRoaXMgQmlsbCBvZiBTYWxlIHdpdGhvdXQgZnVydGhlciBhY3Rpb24gd2l0aCByZXNwZWN0IHRvIHRoaXMgQmlsbCBvZiBTYWxlIGJ5IGVpdGhlciBvZiB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQ28tVGVuYW50c317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIC59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAzLlx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQ29uZmxpY3RzIHdpdGggQ28tVGVuYW5jeSBBZ3JlZW1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgLiAgVGhpcyBCaWxsIG9mIFNhbGUgaXMgc3ViamVjdCB0byB0aGUgdA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgZXJtcyBhbmQgY29uZGl0aW9ucyBvZiB0aGUgQ28tVGVuYW5jeSBBZ3JlZW1lbnQuICBJbiB0aGUgZXZlbnQgb2YgYSBjb25mbGljdCBiZXR3ZWVuIHRoaXMgQmlsbCBvZiBTYWxlIGFuZCB0aGUgQ28tVGVuYW5jeSBBZ3JlZW1lbnQsIHRoZSBDby1UZW5hbmN5IEFncmVlbWVudCBzaGFsbCBjb250cm9sLn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgNC5cdGFiIE1pc2NlbGxhbmVvdXMufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgNC4xXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgTm90aWNlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIC4gIEFueSBub3RpY2UgcmVxdWlyZWQgb3IgYXV0aG9yaXplZCB0byBiZSBnaXZlbiBoZXJldVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KbmRlciBvciBhbnkgb3RoZXIgY29tbXVuaWNhdGlvbnMgYmV0d2VlbiB0aGUgQ28tVGVuYW50cyBzaGFsbCBiZSBpbiB3cml0aW5nICh1bmxlc3Mgb3RoZXJ3aXNlIHByb3ZpZGVkKSBhbmQgc2hhbGwgYmUgc2VydmVkIHBlcnNvbmFsbHkgb3IgYnkgcmVwdXRhYmxlIGV4cHJlc3MgY291cmllciBzZXJ2aWNlIG9yIGJ5IGZhY3NpbWlsZSB0cmFuc21pc3Npb24gYWRkcmVzc2VkIHRvIHRoZSByZWxldmFudCBDby1UZW5hbnQgYXQgdGhlIGFkZHJlc3MgDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBzXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQp0YXRlZCBiZWxvdyBvciBhdCBhbnkgb3RoZXIgYWRkcmVzcyBub3RpZmllZCBieSB0aGF0IENvLVRlbmFudCB0byB0aGUgb3RoZXIgYXMgaXRzIGFkZHJlc3MgZm9yIHNlcnZpY2UuICBBbnkgbm90aWNlIHNvIGdpdmVuIHBlcnNvbmFsbHkgc2hhbGwgYmUgZGVlbWVkIHRvIGhhdmUgYmVlbiBzZXJ2ZWQgb24gZGVsaXZlcnksIGFueSBub3RpY2Ugc28gZ2l2ZW4gYnkgZXhwcmVzcyBjb3VyaWVyIHNlcnZpY2Ugc2hhbGwgYmUgZGVlbWVkIHRvIGhhdmUNClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBiZWVuIHNlcnZlZCB9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDQ0MDI1OTcgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgW1JFREFDVEVEXX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCiBkYXlzIGFmdGVyIHRoZSBzYW1lIHNoYWxsIGhhdmUgYmVlbiBkZWxpdmVyZWQgdG8gdGhlIHJlbGV2YW50IGNvdXJpZXIuICBBcyBwcm9vZiBvZiBzdWNoIHNlcnZpY2UgaXQgc2hhbGwgYmUgc3VmZmljaWVudCB0byBwcm9kdWNlIGEgcmVjZWlwdCBzaG93aW5nIHBlcnNvbmFsIHNlcnZpY2Ugb3IgdGhlIHJlY2VpcHQgb2YgYSByZXB1dGFibGUgY291cmllciBjb21wYW55IHNob3dpbmcgdGhlIGNvcnJlY3QgYQ0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgZGRyZXNzIG9mIHRoZSBhZGRyZXNzZWUufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgVGhlIENvLVRlbmFudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBhZGRyZXNzZXMgZm9yIHNlcnZpY2UgYXJlIGFzIGZvbGxvd3MsIGFsdGhvdWdoIGVhY2ggQ28tVGVuYW50IG1heSBjaGFuZ2UgaXRzIGFkZHJlc3MgZm9yIHNlcnZpY2UgYnkgd3JpdHRlbiBub3RpY2UgdG8gdGhlIG90aGVyIENvLVRlbmFudHMgZ2l2ZW4gYXMgcHJvdmlkZWQgaW4gdGhpcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgIFJFRiBfUmVmNDgwMzUyNjggXFx3IFxcaCBcXCogTUVSR0VGT1JNQVQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NCB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM1MDAzMjAwMzYwMDM4MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxjZjFcaW5zcnNpZDc5NDI2MlxjaGFycnNpZDc5NDI2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCA0LjF9DQp9fVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDp9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgSWYgdG8gQXNzaWdub3I6IFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiANClx0YWIgSWYgdG8gQXNzaWduZWU6fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXHRhYiBcdGFiIFx0YWIgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFx0YWIgXHRhYiBcdGFiIFx0YWIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcdGFiIFx0YWIgXHRhYiBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXHBhciB9XHBhcmQgXGx0cnBhclxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCA0LjJcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEVudGlyZSBBZ3JlZW1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQouICBFeGNlcHQgYXMgb3RoZXJ3aXNlIHN0YXRlZCBoZXJlaW4sIHRoaXMgQmlsbCBvZiBTYWxlIGFuZCB0aGUgQ28tVGVuYW5jeSBBZ3JlZW1lbnQgYW5kIGFueSBkb2N1bWVudHMgb3IgYWdyZWVtZW50cyByZWZlcmVuY2VkIHRoZXJlaW4gY29uc3RpdHV0ZSB0aGUgZW50aXJlIGFncmVlbWVudCBiZXR3ZWVuIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KQXNzaWdub3IgYW5kIEFzc2lnbmVlIHJlc3BlY3RpbmcgaXRzIHN1YmplY3QgbWF0dGVyLiAgRXhjZXB0IGFzIG90aGVyd2lzZSBzdGF0ZWQgaGVyZWluLCBhbnkgYWdyZWVtZW50LCB1bmRlcnN0YW5kaW5nIG9yIHJlcHJlc2VudGF0aW9uIHJlc3BlY3RpbmcgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFt9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBTaGFyZWQgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIC9PJk0gRmFjaWxpdGllc119e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAsIG9yIGFueSBvdGhlciBtYXR0ZXIgcmVmZXJlbmNlZCBoZXJlaW4gbm90IGV4cHJlc3NseSBzZXQgZm9ydGggb3IgcmVmZVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHJlbmNlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCmluIHRoaXMgQmlsbCBvZiBTYWxlLCB0aGUgQ28tVGVuYW5jeSBBZ3JlZW1lbnQgb3IgYSBzdWJzZXF1ZW50IHdyaXRpbmcgc2lnbmVkIGJ5IGJvdGggcGFydGllcyBpcyBudWxsIGFuZCB2b2lkLiAgRXhjZXB0IGFzIG90aGVyd2lzZSBwcm92aWRlZCBoZXJlaW4sIHRoaXMgQmlsbCBvZiBTYWxlIHNoYWxsIG5vdCBiZSBtb2RpZmllZCBvciBhbWVuZGVkIGV4Y2VwdCBpbiBhIHdyaXRpbmcgc2lnbmVkIGJ5IGJvdGggcGFydGllcyBhbmQgbg0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpvIHB1cnBvcnRlZCBtb2RpZmljYXRpb25zIG9yIGFtZW5kbWVudHMsIGluY2x1ZGluZyBhbnkgb3JhbCBhZ3JlZW1lbnQgKGV2ZW4gaWYgc3VwcG9ydGVkIGJ5IG5ldyBjb25zaWRlcmF0aW9uKSwgY291cnNlIG9mIGNvbmR1Y3Qgb3IgYWJzZW5jZSBvZiBhIHJlc3BvbnNlIHRvIGEgdW5pbGF0ZXJhbCBjb21tdW5pY2F0aW9uLCBzaGFsbCBvdGhlcndpc2UgYmUgYmluZGluZyBvbiBlaXRoZXIgQ28tVGVuYW50Ln17XHJ0bGNoXGZjczEgXGFmMSANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgNC4zXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgR292ZXJuaW5nIExhd317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIC4gIFRoXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQppcyBCaWxsIG9mIFNhbGUgc2hhbGwgYmUgZ292ZXJuZWQgYnkgYW5kIGludGVycHJldGVkIGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgbGF3cyBvZiB0aGUgU3RhdGUgb2YgT2hpby4gIElmIHRoZSBwYXJ0aWVzIGFyZSB1bmFibGUgdG8gcmVzb2x2ZSBhbWljYWJseSBhbnkgZGlzcHV0ZSBhcmlzaW5nIG91dCBvZiBvciBpbiBjb25uZWN0aW9uIHdpdGggdGhpcyBCaWxsIG9mIFNhbGUsIHRoZXkgYWdyZWUgdGhhdCBzdWNoIGRpc3B1dGUgc2hhbGwgYmUNClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCnJlc29sdmVkIGluIHRoZSBtYW5uZXIgcHJvdmlkZWQgaW4gdGhlIENvLVRlbmFuY3kgQWdyZWVtZW50LiAgVGhlIHBhcnRpZXMgYWdyZWUgdGhhdCBhbnkgcnVsZSBvZiBjb25zdHJ1Y3Rpb24gdG8gdGhlIGVmZmVjdCB0aGF0IGFtYmlndWl0aWVzIGFyZSB0byBiZSByZXNvbHZlZCBpbiBmYXZvciBvZiBlaXRoZXIgQ28tVGVuYW50IHNoYWxsIG5vdCBiZSBlbXBsb3llZCBpbiB0aGUgaW50ZXJwcmV0YXRpb24gb2YgdGhpcyBCaWxsIG9mIFNhbGUgYQ0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgblxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGQgaXMgaGVyZWJ5IHdhaXZlZC59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCA0LjRcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBObyBQYXJ0bmVyc2hpcCBvciBKb2ludCBWZW50dXJlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgLiAgTm90aGluZyBjb250YWluZWQgaW4gdGhpcyBCaWxsIG9mIFNhbGUgc2hhbGwgYmUgZGVlbWVkIHRvIGNvbnN0aXR1dGUgYW55IENvLVRlbmFudCBhIHBhcnRuZXIgb2YsIG9yIGpvaW50IHZlbnR1cmVyIHdpdGgsIGFueSBvdGhlciBDby1UZW5hbnQufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCA0LjVcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBQYXJ0aWFsIEludmFsaWRpdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAuICBTaG91bGQgYW55IHBvcnRpb24gb2YgdGhpcyBCaWxsXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQogb2YgU2FsZSBiZSBkZWNsYXJlZCBpbnZhbGlkIGFuZCB1bmVuZm9yY2VhYmxlLCB0aGVuIHN1Y2ggcG9ydGlvbiBzaGFsbCBiZSBkZWVtZWQgdG8gYmUgc2V2ZXJhYmxlIGZyb20gdGhpcyBCaWxsIG9mIFNhbGUgYW5kIHNoYWxsIG5vdCBhZmZlY3QgdGhlIHJlbWFpbmRlciBoZXJlb2Y7IGFuZCB0aGUgQ28tVGVuYW50cyBzaGFsbCBuZWdvdGlhdGUgaW4gZ29vZCBmYWl0aCB0byByZXBsYWNlIHN1Y2ggaW52YWxpZCBhbmQgdW5lbmZvcmNlYWJsZSANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCByb3Zpc2lvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IC59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCA0LjZcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBBZ3JlZW1lbnQgaW4gQ291bnRlcnBhcnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQouICBUaGlzIEJpbGwgb2YgU2FsZSBtYXkgYmUgZXhlY3V0ZWQgaW4gbXVsdGlwbGUgY291bnRlcnBhcnRzLCBlYWNoIGFuZCBhbGwgb2Ygd2hpY2ggc2hhbGwgYmUgZGVlbWVkIGFuIG9yaWdpbmFsIGFncmVlbWVudCwgYW5kIGFsbCBvZiB3aGljaCBzaGFsbCBjb25zdGl0dXRlIG9uZSBhZ3JlZW1lbnQgdG8gYmUgZWZmZWN0aXZlIGFzIG9mIHRoZSBFZmZlY3RpdmUgRGF0ZS4gIEZvXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpyIHB1cnBvc2VzIG9mIHJlY29yZGluZyB0aGlzIEJpbGwgb2YgU2FsZSwgdGhlIHNpZ25hdHVyZSBwYWdlIGFuZCB0aGUgYWNrbm93bGVkZ2VtZW50IHBhZ2VzIHBlcnRhaW5pbmcgdGhlcmV0byBtYXkgYmUgZGV0YWNoZWQgZnJvbSBhIGNvdW50ZXJwYXJ0LCB3aGVuIGV4ZWN1dGVkLCBhbmQgYXR0YWNoZWQgdG8gYW5vdGhlciBjb3VudGVycGFydCwgd2hpY2ggb3RoZXIgY291bnRlcnBhcnQgbWF5IHRoZXJlYWZ0ZXIgYmUgcmVjb3JkZWQgYXMgdGgNClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGlcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBzIEJpbGwgb2YgU2FsZS59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANClxwYXIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgNS5cdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNjc4MjAwMyBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBSZXZlcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNjc4MjAwMyBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCi4gIElmIGF0IGFueSB0aW1lIGZvbGxvd2luZyB0aGUgRWZmZWN0aXZlIERhdGUsIEFzc2lnbmVlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDk0NjY4OCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCApIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTMxMjM5OCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBmYWlscyB0byBvcGVyYXRlIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDMyMjY4MzZcY2hhcnJzaWQxMzQ1MTQ0OSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCmZvciBhIHBlcmlvZCBpbiBleGNlc3Mgb2YgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjYzNjM0MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCB0d28gKDIpfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzIyNjgzNlxjaGFycnNpZDEzNDUxNDQ5IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB5ZWFyc317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMzIyNjgzNlxjaGFycnNpZDkzMTIzOTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTMxMjM5OCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBmb3IgcmVhc29ucyBvdGhlciB0aGFuIEZvcmNlIE1hamV1cmUsIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDMyMjY4MzYgDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBvcn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTMxMjM5OCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ5NDY2ODggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgKGlpKSAoYSkgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkzMTIzOTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgYWJhbmRvbnMgdGhlIHVzZSBvciBvcGVyYXRpb24gb2YgaXRzIFByb2plY3Qgd2l0aG91dCB0aGUgaW50ZVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIG50aW9uIHRvIHJlc3VtZSB0aGUgdXNlIG9yIG9wZXJhdGlvbiwgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MTI1OTA3IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgYW5kfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MzEyMzk4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICAofXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ5NDY2ODggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgYn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MzEyMzk4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICkgZGVmYXVsdHMgb24gaXRzIG9ibGlnYXRpb25zIHB1cnN1YW50IHRvIHRofXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgZSBDby1UZW5hbmN5fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQzMjI2OTA5IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIEFncmVlbWVudH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTMxMjM5OCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgKGluY2x1ZGluZyBhbnkgcGF5bWVudCBvYmxpZ2F0aW9ucykgYW5kIGZhaWxzIHRvIGN1cmUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBzdWNoIGRlZmF1bHR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkzMTIzOTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIHdpdGhpbiB0aGUgYXBwbGljYWJsZSBjdXJlIHBlcmlvZHMgc2V0IGZvcnRoIGhlcmVpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNjc4MjAwMyANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICwgdGhlbiBhbGwgcmlnaHQsIHRpdGxlIGFuZFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBpbnRlcmVzdCBpbiBhbmQgdG8gdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFt9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBTaGFyZWQgRmFjaWxpdGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIC9PJk0gRmFjaWxpdGllc10gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ2NzgyMDAzIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHNoYWxsfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAsIGltbWVkaWF0ZWx5IGZvbGxvd2luZyB0aGUgcmVjZWlwdCBvZiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCmFueSBGRVJDIG9yIG90aGVyIHJlZ3VsYXRvcnkgYXBwcm92YWxzIHJlcXVpcmVkIGZvciBzdWNoIHRyYW5zZmVyICh3aGljaCBBc3NpZ25lZSB3aWxsIHVzZSBjb21tZXJjaWFsbHkgcmVhc29uYWJsZSBlZmZvcnRzIHRvIG9idGFpbil9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ2NzgyMDAzIA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIGF1dG9tYXRpY2FsbHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgKGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNjc4MjAwMyBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgd2l0aG91dCBmdXJ0aGVyIGFjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgKX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNjc4MjAwMyBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCiByZXZlcnQgdG8gYW5kIHJldmVzdCBpbiBBc3NpZ25vciwgYXMgZnVsbHkgYW5kIGNvbXBsZXRlbHkgYXMgaWYgdGhpcyBCaWxsIG9mIFNhbGUgaGFkIG5ldmVyIGJlZW4gZXhlY3V0ZWQ7IHByb3ZpZGVkLCBob3dldmVyLCBBc3NpZ25lZSBzaGFsbCBjb25maXJtIHN1Y2ggcmV2ZXJzaW9uIGJ5IGNvbnZleWluZyB0aGUgVHJhbnNmZXJyZWQgVElDIEludGVyZXN0IGJhY2sgdG8gQXNzaWdub3IgYnkgQmlsbCANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIG9mIFNhbGUgaW4gZm9ybSBhbmQgc3Vic3RhbmNlIHN1YnN0YW50aWFsbHkgc2ltaWxhciB0byB0aGlzIEJpbGwgb2YgU2FsZS59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANClxwYXIgfVxwYXJkIFxsdHJwYXJccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzODE2NTUgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFjIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCltSRU1BSU5ERVIgT0YgUEFHRSBJTlRFTlRJT05BTExZIExFRlQgQkxBTks7fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDI5MTk0NCBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFNJR05BVFVSRSBQQUdFIEZPTExPV1NdfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBccGFnZSANClxwYXIgfVxwYXJkIFxsdHJwYXJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpJTiBXSVRORVNTIFdIRVJFT0YsIEFzc2lnbm9yIGFuZCBBc3NpZ25lZSwgYWN0aW5nIHRocm91Z2ggdGhlaXIgZHVseSBhdXRob3JpemVkIHJlcHJlc2VudGF0aXZlcywgaGF2ZSBleGVjdXRlZFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KIHRoaXMgQmlsbCBvZiBTYWxlIHdpdGggdGhlIGludGVudCB0aGF0IGl0IGJlIGVmZmVjdGl2ZSBhcyBvZiB0aGUgRWZmZWN0aXZlIERhdGUsIGFuZCBjZXJ0aWZ5IHRoYXQgdGhleSBoYXZlIHJlYWQsIHVuZGVyc3RhbmQgYW5kIGFncmVlIHRvIHRoZSB0ZXJtcyBhbmQgY29uZGl0aW9ucyBvZiB0aGlzIEJpbGwgb2YgU2FsZS59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQoNClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEFzc2lnbm9yfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0DQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcdGFiIFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEJ5On17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcdGFiIFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIE5hbWU6fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkwXHJpMFxzYTcyMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBUaXRsZTp9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcdGFiIFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFNUQVRFIE9GIF9fX19fX19fXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpfX19fX1x0YWIgKQ0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcZmkyODgwXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgKSBzcw0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBDT1VOVFkgT0YgX19fX19fX19fX19cdGFiICkNClxwYXIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgVGhlIGZvcmVnb2luZyBpbnN0cnVtZW50IHdhcyBhY2tub3dsZWRnZWQgYmVmb3JlIG1lIHRoaXMgX19fXyBkYXkgb2YgX19fX19fX19fXywgMjB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQzMTUwNDg0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDJ9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBfX18sIGJ5IF9fX19fX19fX19fX19fX19fX19fX19fLCBhcyBfX19fX19fX18gb2YgX19fX19fX19fX19fX19fX19fICwgYSBfX19fX19fX19fX19fX19fIF9fX19fX19fX19fX19fX19fLg0KXHBhciBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBNeSBjb21taXNzaW9uIGV4cGlyZXMgIF9fX19caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBfX19fX19fX19fX19fX19fX19fX18NClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMFxyaTBcc2E3MjBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgV2l0bmVzcyBteSBoYW5kIGFuZCBvZmZpY2lhbCBzZWFsLg0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGk0MzIwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjQzMjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBfX19fX19fX19fX19fX19fX19fX19fX19fX19fXw0KXHBhciBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBOYW1lOg0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGk0MzIwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjQzMjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBOb3RhcnkgUHVibGljDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXHBhciBccGFnZSANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBBc3NpZ25lZX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIA0KXCc5NH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCANClxwYXIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgX19fX19fX19fX19fX19fX19fX19fX19fX19fDQpccGFyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEJ5Ol9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fDQpccGFyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIE5hbWU6X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18NClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMFxyaTBcc2E3MjBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgVGl0bGU6X19fX19fX19fX19fX19fX19fX19fX19fDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBfX19fX19fX18NClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgU1RBVEUgT0YgX19fX19fX19fX19fX1x0YWIgKQ0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcZmkyODgwXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgKSBzcw0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBDT1VOVFkgT0YgX19fX19fX19fX19cdGFiICkNClxwYXIgfVxwYXJkIFxsdHJwYXJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpUaGUgZm9yZWdvaW5nIGluc3RydW1lbnQgd2FzIGFja25vd2xlZGdlZCBiZWZvcmUgbWUgdGhpcyBfX19fIGRheSBvZiBfX19fX19fX19fLCAyMH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMxNTA0ODQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgMn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCl9fXywgYnkgX19fX19fX19fX19fX19fX19fXywgYXMgX19fX19fX19fX19fX18gb2YgX19fX19fX19fX19fLCBhIF9fX19fX19fX19fX18ufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIE15IGNvbW1pc3Npb24gZXhwaXJlcyAgX19fXw0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgX19fX19fX19fX19fX19fX19fX19ffXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBXaXRuZXNzIG15IGhhbmQgYW5kIG9mZmljaWFsIHNlYWwuDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTQzMjBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNDMyMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBfX19fX19fX19fX19fX19fX19fX19fX19fX19fXw0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDQwMTAwNDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgTmFtZTp9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjggDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTQzMjBccmkwXHNhMTIwMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjQzMjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjMxMDEyOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBOb3RhcnkgUHVibGljDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXHNlY3QgfVxzZWN0ZCBcbHRyc2VjdA0KXGxpbmV4MFxlbmRuaGVyZVx0aXRsZXBnXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtcaGVhZGVyciBcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHRxY1x0eDQ2ODBcdHFyXHR4OTM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIA0KXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGFmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDI2MzYzNDIgDQpccGFyIH19e1xoZWFkZXJmIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjYzNjM0MiANClxwYXIgfX17XGZvb3RlcmYgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHMzNVxxbCBcbGkwXHJpMFxzbC0yMDBcc2xtdWx0MFx3aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjYzNjM0MlxjaGFycnNpZDkxMjU5MDcgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDI2MzYzNDIgDQpccGFyIH19XHBhcmRccGxhaW4gXGx0cnBhclxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxhZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgRXhoaWJpdCBBIHRvIEJpbGwgb2YgU2FsZSAtIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ2NTc1NzQxIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFtTaGFyZWQgRmFjaWxpdGllcy9PJk0gRmFjaWxpdGllc119e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTBccmkwXHNhNzIwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgW1RvIEJlIFVwZGF0ZWRdDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXHNlY3QgfVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIA0Ke1xoZWFkZXJyIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxhZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQyNjM2MzQyIA0KXHBhciB9fXtcZm9vdGVyciBcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJcczM1XHFsIFxsaTBccmkwXHNsLTIwMFxzbG11bHQwXHdpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczE2XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxhZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQyNjM2MzQyXGNoYXJyc2lkOTEyNTkwNyBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjYzNjM0MiANClxwYXIgfX17XGhlYWRlcmYgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGFmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDI2MzYzNDIgDQpccGFyIH19e1xmb290ZXJmIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxzMzRccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjYzNjM0MlxjaGFycnNpZDExMTU5ODc3IA0KXHBhciB9fVxwYXJkXHBsYWluIFxsdHJwYXJccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEVYSElCSVQgQi0yfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQoNClxwYXIgfVxwYXJkIFxsdHJwYXJccWMgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpccGFyIA0KXHBhciANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXGJyZHJiXGJyZHJzXGJyZHJ3MTBcYnJzcDIwIFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXHBhciB9XHBhcmQgXGx0cnBhclxxciBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFNQQUNFIEFCT1ZFIFRISVMgTElORSBGT1IgUkVDT1JERVJ9ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaVxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGlcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBTIFVTRQ0KXHBhciB9XHBhcmQgXGx0cnBhclxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcaHlwaHBhcjBcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgUVVJVENMQUlNfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgREVFRH0NCntccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KRk9SIFRFTiBET0xMQVJTICgkMTAuMDApIGFuZCBvdGhlciBnb29kIGFuZCB2YWx1YWJsZSBjb25zaWRlcmF0aW9uIGluIGhhbmQgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBcaGljaFxmMCBwYWlkLCBfX19fX19fX19fX19fX18gTExDLCBhIERlbGF3YXJlIGxpbWl0ZWQgbGlhYmlsaXR5IGNvbXBhbnkgKFwnOTN9ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDAxMDA0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBHcmFudG9yfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTRcbG9jaFxmMCApIG9mIGMvbyBJbnZlbmVyZ3kgTExDLCB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNjExfTENCntcKlxia21rZW5kIERvY1hUZXh0UmVmNjExfSBTLiBXYWNrZXIgRHIuLCBTdWl0ZSAxODAwLCBDaGljYWdvLCBJbCA2MDYwNiwgaGVyZWJ5IHNlbGxzIGFuZCBxdWl0Y2xhaW1zIHRvXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIF9fX19fX19fX19fX19fX19fX19fX19fX199e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDU3MzI2MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgX19fICh9ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTMxNzgxIFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTNcbG9jaFxmMCBcaGljaFxmMCBHcmFudGVlXCc5NFxsb2NoXGYwICksIG9mIF9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgYSBfX19fX18lfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQogdW5kaXZpZGVkIHRlbmFudC1pbi1jb21tb24gaW50ZXJlc3QgaW4gYW5kIHRvIHdoYXRldmVyIHJpZ2h0LCB0aXRsZSBhbmQgaW50ZXJlc3QgR3JhbnRvciBoYXMgaW4gYW5kIHRvIHRoZSByZWFsIHByb3BlcnR5IGRlc2NyaWJlZCBpbiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEV4aGliaXQgQX17XHJ0bGNoXGZjczEgDQpcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBcaGljaFxmMCAgKHRoZSBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBcaGljaFxmMCBQcmVtaXNlc1wnOTR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDAxMDA0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCApIGF0XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgdGFjaGVkIGhlcmV0byBhbn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjMxMDEyOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBkIG1hZGUgYSBwYXJ0IGhlcmVvZiwgcmV0YWluaW5nIGZvciBpdHNlbGYsIH17DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ5NDY2ODggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgX19fX18lfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB1bmRpdmlkZWQgdGVuYW50LWluLWNvbW1vbiBpbnRlcmVzdCBpbiBhbmQgdG8gc3VjaCByZWFsIHByb3BlcnR5Ln17XHJ0bGNoXGZjczEgXGFmMSANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1NzMyNjE4IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkzMTc4MSANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MzE3ODEgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgXGhpY2hcZjAgVEhJUyBDT05WRVlBTkNFIElTIE1BREUgXCc5M1xsb2NoXGYwIFxoaWNoXGYwIEFTIElTXCc5NFxsb2NoXGYwICwgDQp9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTExMDA4MSBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzXGxvY2hcZjAgXGhpY2hcZjAgV0lUSCBBTEwgRkFVTFRTXCc5NFxsb2NoXGYwICBBTkQgV0lUSE9VVCBXQVJSQU5UWSx9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcY2Fwc1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MTEwMDgxIA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIEVJVEhFUiBFWFBSRVNTRUQgT1IgSU1QTElFRCwgSU5DTFVESU5HLCBXSVRIT1VUIExcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBJTUlUQVRJT04sIEFOWSBXfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXGNhcHNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODM1MDkwOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCkFSUkFOVElFUyBPRiBRVUFMSVRZLCBNRVJDSEFOVEFCSUxJVFksIFNVSVRBQklMSVRZIEFORCBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSwgQU5ZIFdBUlJBTlRJRVMgUkVHQVJESU5HIFRIRSBFWElTVEVOQ0UgT0YgQU5ZIFNFQ1VSSVRZIElOVEVSRVNULCBMSUVOIE9SIEVOQ1VNQlJBTkNFIEFORCBBTlkgV0FSUkFOVElFUyBBUklTSU5HIEJZIENPTU1PTiBMQVcsfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODM1MDkwOCBcflxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEVYQ0VQVCBGT1IgVEhPU0UgV0FSUkFOVFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIElFUyBNQURFIEJZIEdSQU5UT1IgVU5ERVIgVEhFIENPLVRFTkFOQ1kgQUdSRUVNRU5UIEFORCBJUyBTVUJKRUNUIFRPIFNFQ1RJT04gfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGJcY2YxXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzODE2NTUge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjE4MzB9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgNS4zfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiB7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjE4MzB9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIE9GIFRIRSBDTy1URU5BTkNZIEFHUkVFTUVOVH17DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIC59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IA0KXHBhciBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBUaGlzIGNvbnZleWFuY2UgaXMgbWFkZSBzdWJqZWN0IHRvIGFuZCB1cG9uIGFsbCBvZiB0aGUgdGVybXMsIGNvdmVuYW50cyBhbmQgY29uZGl0aW9ucyBvZiB0aGF0IGNlcnRhaW4gQXNzaWdubWVudCwgQ28tVGVuYW5jeSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDQwMTAwNDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQphbmQgU2hhcmVkIEZhY2lsaXRcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBpZXMgQWdyZWVtZW50IH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjMxMDEyOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBcaGljaFxmMCAodGhlIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDU3MzI2MTggDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBDby1UZW5hbmN5IEFncmVlbWVudH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTMxNzgxIFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTRcbG9jaFxmMCApLCBkYXRlZCBhcyBvZiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxMTM0NjE3OCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBEZWNlbWJlciB9ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDUzOTc2OTcgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgMzB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkzMTc4MSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAsIDIwfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDAyNzA2MSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAyfXsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxMTM0NjE3OCAwfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MzE3ODEgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQosIGJ5IGFuZCBhbW9uZyBHcmFudG9yLCBHcmFudGVlIGFuZCBjZXJ0YWluIG90aGVyIHBhcnRpZXMsIGEgY29weSBvZiB3aGljaCB3YXMgcmVjb3JkZWQgb24gX19fX19fX19fX19fX19fX19fX18gYXMgRG9jdW1lbnQgTm8uIF9fX19fIGluIHRoZSBvZmZpY2Ugb2YgdGhlIENsZXJrIGFuZCBSZWNvcmRlciBvZiBfX19fX19caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCl9fXyBDb3VudHksIF9fX19fX19fX19fLCBhbmQgd2hpY2ggQ28tVGVuYW5jeSBBZ3JlZW1lbnQsIGFtb25nIG90aGVyIHRoaW5ncywgZ292ZXJucyB0aGUgam9pbnQgb3duZXJzaGlwIG9mIHRoZSByZWFsIHByb3BlcnR5IGNvbnZleWVkIGhlcmVieSBhbmQgZ292ZXJucyB0aGUgcmVsYXRpb25zaGlwIGFtb25nIEdyYW50b3IsIEdyYW50ZWUgYW5kIHN1Y2ggb3RoZXIgcGFydGllcyB3aXRoIHJlc3BlY3QgdG8gdGhlIHJlYWwgcHJvcGVydHkgY29udg0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgZVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHllfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MTEwMDgxIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KZCBoZXJlYnkuICBJbiB0aGUgZXZlbnQgb2YgYSBjb25mbGljdCBiZXR3ZWVuIHRoaXMgRGVlZCBhbmQgdGhlIENvLVRlbmFuY3kgQWdyZWVtZW50LCB0aGUgQ28tVGVuYW5jeSBBZ3JlZW1lbnQgc2hhbGwgY29udHJvbC4NClxwYXIgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMzIxMjYyMSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBJZiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxMTc0ODMyOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAoaSkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ2NzgyMDAzIFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBHcmFudGVlIGhhcyBub3QgY29tbWVuY2VkIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE1MjEzODc4IA0KXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIHVzZSBvZiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE1MjEzODc4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxNTIxMzg3OCANClxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBTaGFyZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ2NzgyMDAzIFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIEZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ2NzgyMDAzIFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjEgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMzIxMjYyMSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgKGFzIGRlZmluZWQgaW4gdGhlIENvLVRlbmFuY3kgQWdyZWVtZW50KSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ2NzgyMDAzIFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCANCmxvY2F0ZWQgb24gdGhlIFByZW1pc2VzIFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBvbiBvciBiZWZvcmUgX19fX19fX19fLCBvciwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDExMDM1NTExIFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCAoaWkpIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNjc4MjAwMyBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgaWYgYXQgYW55IHRpbWUgZm9sbG93aW5nIHRoZSBlZmZlY3RpdmUgZGF0ZSBvZiB0aGlzIERlZWQsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxMTAzNTUxMSANClxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBHcmFudGVlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgKGEpIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTMxMjM5OCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCmZhaWxzIHRvIG9wZXJhdGUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzIyNjgzNlxjaGFycnNpZDEzNDUxNDQ5IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGZvciBhIHBlcmlvZCBpbiBleGNlc3Mgb2Z9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQyNjM2MzQyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB0d28gKDIpIHllYXJzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQzMjI2ODM2XGNoYXJyc2lkOTMxMjM5OCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MzEyMzk4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGZvciByZWFzb25zIG90aGVyIHRoYW4gRm9yY2UgTWFqZXVyZSwgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzIyNjgzNiANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIG9yfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MzEyMzk4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBhYmFuZG9ucyB0aGUgdXNlIG9yIG9wZXJhdGlvbiBvZiBpdHMgUHJvamVjdCB3aXRob3V0IHRoXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgZSBpbnRlbnRpb24gdG8gcmVzdW1lIHRoZSB1c2Ugb3Igb3BlcmF0aW9uLCB9ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTEyNTkwNyBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBhbmR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkzMTIzOTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgICh9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQzMjI2ODM2IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgYn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTMxMjM5OCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCApIGRlZmF1bHRzIG9uIGl0cyBvYmxpZ2F0aW9ucyBwdXJzdWFudCB0byB0aH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGUgQ28tVGVuYW5jeX17DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQzMjI2OTA5IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBBZ3JlZW1lbnR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAsfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MzEyMzk4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KIChpbmNsdWRpbmcgYW55IHBheW1lbnQgb2JsaWdhdGlvbnMpIGFuZCBmYWlscyB0byBjdXJlIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHN1Y2ggZGVmYXVsdH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTMxMjM5OCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCiB3aXRoaW4gdGhlIGFwcGxpY2FibGUgY3VyZSBwZXJpb2RzIHNldCBmb3J0aCBoZXJlaW59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ2NzgyMDAzICx9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDMyMTI2MjEgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNjc4MjAwMyBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgdGhlbiBhbGwgcmlnaHQsIHRpXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIA0KdGxlIGFuZCBpbnRlcmVzdCBpbiBhbmQgdG8gdGhlIFByZW1pc2VzIHNoYWxsIGF1dG9tYXRpY2FsbHksIHdpdGhvdXQgZnVydGhlciBhY3Rpb24sIHJldmVydCB0byBhbmQgcmV2ZXN0IGluIEdyYW50b3IsIGFzIGZ1bGx5IGFuZCBjb21wbGV0ZWx5IGFzIGlmIHRoaXMgRGVlZCBoYWQgbmV2ZXIgYmVlbiBleGVjdXRlZDsgcHJvdmlkZWQsIGhvd2V2ZXIsIEdyYW50ZWUgc2hhbGwgY29uZmlybSBzdWNoIHJldmVyc2lvbiBieSBsYXRlciBjb252ZXlpDQpcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgblxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCBnIGl0cyBpbnRlcmVzdCBpbiB0aGUgUHJlbWlzZXMgYmFjayB0byBHcmFudG9yIGJ5IHF1aXRjbGFpbSBkZWVkIGluIGZvcm0gYW5kIHN1YnN0YW5jZSBzdWJzdGFudGlhbGx5IHNpbWlsYXIgdG8gdGhpcyBEZWVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxOTE1MDgxIFxoaWNoXGFmMFxkYmNoXGFmMTFcbG9jaFxmMCAuICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSANClxwYXIgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxoeXBocGFyMFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBJTiB9e1xydGxjaFxmY3MxIFxhZjEgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDAxMDA0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBXSVRORVNTIFdIRVJFT0YsIEdyYW50b3IgaGFzIHNpZ25lZCB0aGVzZSBwcmVzZW50cyB0aGlzIF9fX18gZGF5IG9mIF9fX19fXywgMjB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ0MDI3MDYxIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDJ9e1xydGxjaFxmY3MxIFxhZjEgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDAxMDA0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBfX19fLiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjggDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxoeXBocGFyMFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXHBhciANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIF9fX19fX19fX19fX19fXyBMTEMNClxwYXIgDQpccGFyIFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEJ5On17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcdGFiIFx0YWIgXHRhYiBcdGFiIFx0YWIgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcdGFiIFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBOYW1lOn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcdGFiIFx0YWIgXHRhYiBcdGFiIFx0YWIgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcdGFiIFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBUaXRsZTp9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpccGFyIH1ccGFyZCBcbHRycGFyXHFjIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx0eDI4ODBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzgxNjU1IA0KXHBhciBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBBQ0tOT1dMRURHRU1FTlR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcZjQzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzODE2NTUgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx0eDI4ODBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzgxNjU1IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFNUQVRFIE9GICB9ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcZXhwbmQwXGV4cG5kdHctM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzgxNjU1IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dy0zXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzODE2NTUgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgKX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dy0zXGluc3JzaWQxNDI5MTk0NCBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjM4MTY1NSBcdGFiIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIClcdGFiIHNzLn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctM1xpbnNyc2lkMTQyOTE5NDQgXGxpbmUgfXtccnRsY2hcZmNzMSBcYWYxIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjM4MTY1NSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBDT1VOVFkgT0YgIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcZXhwbmQwXGV4cG5kdHctM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzgxNjU1IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGV4cG5kMFxleHBuZHR3LTNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjM4MTY1NSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCApDQpccGFyIH1ccGFyZCBcbHRycGFyXHFqIFxmaTcyMFxsaTBccmkwXHNhNDgwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzgxNjU1IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KVGhlIGZvcmVnb2luZyBpbnN0cnVtZW50IHdhcyBhY2tub3dsZWRnZWQgYmVmb3JlIG1lIHRoaXMgX19fXyBkYXkgb2YgX19fX19fX19fXywgMjB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ0MDI3MDYxIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDJ9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzODE2NTUgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpfX18sIGJ5IF9fX19fX19fX19fX19fX19fLCBhcyB0aGUgVmljZSBQcmVzaWRlbnQgb2YgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzODE2NTUgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgX19fX19fX19fX19fX19fIExMQ317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjM4MTY1NSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCiwgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgYSBEZWxhd2FyZSBsaW1pdGVkIGxpYWJpbGl0eSBjb21wYW55Ln17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZjQzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzODE2NTUgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjM4MTY1NSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBNeSBjb21taXNzaW9uIGV4cGlyZXMgX19fX19fX19fX19fX19fX19fX19fX19fX19ffXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxmNDNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjM4MTY1NSANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzgxNjU1IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFdpdG5lc3MgbXkgaGFuZCBhbmQgb2ZmaWNpYWwgc2VhbC59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGY0M1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzgxNjU1IA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcdHg3NzQwXHR4OTM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzgxNjU1IFx0YWIgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjM4MTY1NSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBOYW1lOn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjM4MTY1NSBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZjQzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzODE2NTUgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTUwNDBccmkwXHdpZGN0bHBhclx0eDc3NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjUwNDBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjM4MTY1NSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBOb3RhcnkgUHVibGljfXtccnRsY2hcZmNzMSBcYWYxIA0KXGx0cmNoXGZjczAgXGY0M1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzgxNjU1IA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFByZXBhcmVkIGJ5IGFuZH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgDQpccGFyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGFmdGVyIHJlY29yZGF0aW9uLCByZXR1cm4gdG86fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSANClxwYXIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgSW52ZW5lcmd5IExMQ317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDAxMDA0NCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEF0dG46ICBHZW5lcmFsIENvdW5zZWx9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjMxMDEyOCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1NzMyNjE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDEgU291dGggV2Fja2VyIERyaXZlLCBTdWl0XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgZSAxODAwfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MzE3ODEgDQpccGFyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIENoaWNhZ28sIElMIDYwNjA2DQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTUwNDBccmkwXHNhNzIwXHdpZGN0bHBhclx0eDc3NDBcdHg5MTgwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW41MDQwXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjM4MTY1NSANClxwYXIgDQpccGFyIA0KXHBhciANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHRxY1x0eDQ2ODBcd3JhcGRlZmF1bHRcaHlwaHBhcjBcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgRXhoaWJpdCBBIHRvIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgUXVpdGNsYWltfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgRGVlZH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx0cWNcdHg0NjgwXHdyYXBkZWZhdWx0XGh5cGhwYXIwXGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFx0YWIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpEZXNjcmlwdGlvbiBvZiBSZWFsIFByb3BlcnR5fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXHRhYiANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpccGFyIH1ccGFyZCBcbHRycGFyXHFjIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpccGFyIH1ccGFyZCBcbHRycGFyXHFjIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxwYWdlIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxiXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpccGFyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEVYSElCSVQgQi19e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcdWxcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgUEFSVElBTCBBU1NJR059e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgTUVOVCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcYlx1bFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgT0YgRUFTRU1FTlRTfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANClxwYXIgfVxwYXJkIFxsdHJwYXJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgVEhJUyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFBBUlRJQUwgQVNTSUdOTUVOVCBPRiBFQVNFTUVOVFN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgICh0aGlzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBQYXJ0aWFsIEFzc2lnbm1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgKSBpcyBlZmZlY3RpdmUgYXMgb2YgX19fX19fX19fX19fLCAyMH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQwMjcwNjEgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgMn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBfXyAodGhlIH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBFZmZlY3RpXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgdmUgRGF0ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCApLCBiZXR3ZWVuIF9fX19fX19fX19fXywgYSBfX19fX19fX19fX19fX19fX19fX19fICh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzODE2NTUgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgR3JhbnRvcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCApIG9mIGMvbyBfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fLCBhbmQgX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXywgYSBfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18gKH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjM4MTY1NSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBHcmFudGVlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICkgX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fLlxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICAgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzgxNjU1IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEdyYW50b3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgYW5kIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjM4MTY1NSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBHcmFudGVlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KIGFyZSBzb21ldGltZXMgcmVmZXJyZWQgdG8gaW4gdGhpcyBQYXJ0aWFsIEFzc2lnbm1lbnQgYXMgYSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIENvLVRlbmFudH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgYW5kIGNvbGxlY3RpdmVseSBhcyB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQpcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIENvLVRlbmFudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggLn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFdIRVJFQVMsIEdyYW50b3IgaXMgYSBwYXJ0eSB0byB0aG9zZSBjZXJ0YWluIGFncmVlbWVudHMgZGVzY3JpYmVkIGluIGRldGFpbCBvbiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEV4aGliaXQgQX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgYXR0YWNoZWQgaGVyZXRvIGFuZCBtYWRlIGEgcGFydCBoZXJlb1xoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGYgKGNvbGxlY3RpdmVseSwgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBFYXNlbWVudCBBZ3JlZW1lbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICkgbWFkZSBieSBhbmQgYmV0d2VlbiBHcmFudG9yIGFuZCB0aGUgbGFuZG93bmVycyBzcGVjaWZpZWQgaW4gc3VjaCBkZXNjcmlwdGlvbnMgKGNvbGxlY3RpdmVseSwgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTMNCn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBMYW5kb3duZXJzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICkufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgV0hFUkVBUywgcHVyc3VhbnQgdG8gdGhlIEVhc2VtZW50IEFncmVlbWVudHMsIHRoZSBMYW5kb3duZXJzIGdyYW50ZWQgZWFzZW1lbnRzIHRvIEdyYW50b3IgdXBvbiwgb3ZlclxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KLCBhY3Jvc3MgYW5kIHVuZGVyIGNlcnRhaW4gcmVhbCBwcm9wZXJ0eSBvd25lZCBieSB0aGUgTGFuZG93bmVycyAoYXMgaWRlbnRpZmllZCBpbiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KRXhoaWJpdCBBfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgb2YgZWFjaCBFYXNlbWVudCBBZ3JlZW1lbnQsIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgRWFzZW1lbnQgUHJvcGVydHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgKSBmb3IgcHVycG9zZXMgb2YsIGFtb25nIG90aGVyIHRoaW5ncywgdGhlIGNvbnN0cnVjdGlvbiwgbGF5aW5nIGRvd24sIGluc3RhbGxhdGlvbiwgdXNlLCByZXBsYWNlbWVudCwgcmVsb2NhdGlcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCm9uLCByZW1vdmFsLCBvcGVyYXRpb24gYW5kIG1haW50ZW5hbmNlIG9mIHVuZGVyZ3JvdW5kIGVsZWN0cmljIGNvbGxlY3Rpb24gZmFjaWxpdGllcyBpbmNsdWRpbmcgZWxlY3Ryb25pYyB0cmFuc21pc3Npb24gYW5kIGRpc3RyaWJ1dGlvbiBsaW5lcywgY29tbXVuaWNhdGlvbiBsaW5lcywgaW50ZXJjb25uZWN0aW9uLCBzd2l0Y2hpbmcgc3RhdGlvbnMsIGFjY2VzcyByb2FkcyBvbiwgdW5kZXIsIG92ZXIgYW5kIGFjcm9zcyB0aGUgcHJvcGVydHkgZA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgZVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHNjcmliZWQgaW4gdGhlIEVhc2VtZW50IEFncmVlbWVudHMgKHRvZ2V0aGVyIHdpdGggYWxsIG9mIEdyYW50b3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHMgb3RoZXIgcmlnaHRzIGluIGFuZCB0byB0aGUgRWFzZW1lbnQgQWdyZWVtZW50cywgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBHcmFudG9yIEVhc2VtZW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgKS59ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFdIRVJFQVMsIHB1cnN1YW50IHRvIHRoZSB0ZXJtcyBhbmQgY29uZGl0aW9ucyBvZiB0aGUgRWFzZW1lbnQgQWdyZWVtZW50cywgTGFuZG93bmVycyBncmFudGVkIHRvIEdyYW50b3IgdGhlIHJpZ2h0IHRcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCm8gYXNzaWduIG9yIGNvbnZleSBhbGwgb3IgYW55IHBvcnRpb24gb2YgdGhlIEdyYW50b3IgRWFzZW1lbnRzIHRvIGFueSBwZXJzb24gb24gYW4gZXhjbHVzaXZlIG9yIG5vbmV4Y2x1c2l2ZSBiYXNpcy59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBXSEVSRUFTLCBHcmFudG9yIGlzIHRoZSBkZXZlbG9wZXIgYW5kL29yIG9wZXJhdG9yIG9mIHRoYXQgY2VydGFpbiBfX19fX19fIGVuZXJneSBmYWNpbGl0eSBsb2NhdGVkIGluIF9fX19fX19fXyBDb3VudHksIF9fX19fX19fIGFuZCBrbm93biBhcw0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIF9fX19fX19fX19fX19fXyBFbmVyZ3kgUHJvamVjdCAodGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzODE2NTUgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgR3JhbnRvcn17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBQcm9qZWN0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCiksIGFuZCBHcmFudGVlIGlzIHRoZSBkZXZlbG9wZXIgYW5kL29yIG9wZXJhdG9yIG9mIHRoYXQgY2VydGFpbiBfX19fX19lbmVyZ3kgZmFjaWxpdHkgdG8gYmUgbG9jYXRlZCBhZGphY2VudCB0byB0aGUgR3JhbnRvciBQcm9qZWN0IGluIF9fX19fXyBDb3VudHksIF9fX19fX19fIGtub3duIGFzIF9fX19fX19fX19fICh0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQpcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzgxNjU1IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEdyYW50ZWV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIFByb2plY3R9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgLCB0b2dldGhlciB3aXRoIHRoZSBHcmFudG9yIFByb2plY3QsIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANClxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgUHJvamVjdHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIGFuZCBpbmRpdmlkdWFsbHksIGEgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANClByb2plY3R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICkufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgV0hFUkVBUywgR3JhbnRvciBhbmQgR3JhbnRlZSBhcmUgcGFydGllcyB0byBhIGNlcnRhaW4gQ28tVGVuYW5jeSBhbmQgU2hhcmVkIEZhY2lsaXRpZXMgQWdyZWVtZW50ICh0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQpcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIENvLVRlbmFuY3kgQWdyZWVtZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICksIHdoaWNoIHdhcyByZWNvcmRlZCBvbiBfX19fX19fX19fX19fX19fLCBhcyBSZVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KY2VwdGlvbiBOby4gX19fX19fX19fX19fX19fXyBpbiB0aGUgb2ZmaWNlIG9mIHRoZSBDbGVyayBhbmQgUmVjb3JkZXIgb2YgX19fX19fIENvdW50eSwgX19fX19fX19fX19fX19fXywgd2hpY2ggYWdyZWVtZW50LCBhbW9uZyBvdGhlciB0aGluZ3MsIGdvdmVybnMgdGhlIGpvaW50IG93bmVyc2hpcCBvZiBjZXJ0YWluIHByb3BlcnR5IGFuZCBmYWNpbGl0aWVzIHRvIGJlIHV0aWxpemVkIGZvciB0aGUgb3BlcmF0aW9uIG9mIHRoZSBQcm9qZWN0cywgDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBhXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgbmQgZ292ZXJucyB0aGUgcmVsYXRpb25zaGlwIGFtb25nIHRoZSBDby1UZW5hbnRzIHdpdGggcmVzcGVjdCB0byB0aGUgUHJvamVjdHMufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpXSEVSRUFTLCBvbiB0aGUgdGVybXMgc2V0IGZvcnRoIGhlcmVpbiwgR3JhbnRvciBkZXNpcmVzIHRvIGFzc2lnbiB0byBHcmFudGVlIGEgcG9ydGlvbiBvZiB0aGUgR3JhbnRvciBFYXNlbWVudHMgYW5kIGNlcnRhaW4gcmlnaHRzIHJlbGF0ZWQgdGhlcmV0byBmb3IgdXNlIHdpdGggdGhlIEdyYW50ZWUgUHJvamVcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCmN0LCBhbmQgR3JhbnRlZSBkZXNpcmVzIHRvIGFjY2VwdCBzdWNoIHBvcnRpb24gb2YgdGhlIEdyYW50b3IgRWFzZW1lbnRzIGFuZCBjZXJ0YWluIHJpZ2h0cyByZWxhdGVkIHRoZXJldG8gZm9yIHVzZSB3aXRoIHRoZSBHcmFudGVlIFByb2plY3QsIGFuZCB0byBhc3N1bWUgdGhlIHJlc3BvbnNpYmlsaXRpZXMgYW5kIGR1dGllcyByZWxhdGVkIHRoZXJldG8ufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBOT1cgVEhFUkVGT1JFLCBpbiBjb25zaWRlcmF0aW9uIG9mIHRoZSBmb3JlZ29pbmcgcmVjXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQppdGFscyBhbmQgdGhlIG11dHVhbCBvYmxpZ2F0aW9ucyBhbmQgY292ZW5hbnRzIG9mIHRoZSBDby1UZW5hbnRzIGhlcmVpbiBjb250YWluZWQsIGFuZCBmb3Igb3RoZXIgZ29vZCBhbmQgdmFsdWFibGUgY29uc2lkZXJhdGlvbiwgdGhlIHJlY2VpcHQgYW5kIHN1ZmZpY2llbmN5IG9mIHdoaWNoIGlzIGhlcmVieSBtdXR1YWxseSBhY2tub3dsZWRnZWQsIHRoZSBDby1UZW5hbnRzIGhlcmV0byBhZ3JlZSBhcyBmb2xsb3dzOn17XHJ0bGNoXGZjczEgDQpcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgMS5cdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBBc3NpZ25tZW50IG9mXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQogRWFzZW1lbnRzIGFuZCBFYXNlbWVudCBBZ3JlZW1lbnRzIGJ5IEdyYW50b3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQouICBHcmFudG9yIGhlcmVieSBhc3NpZ25zLCB0cmFuc2ZlcnMgYW5kIGNvbnZleXMgdG8gR3JhbnRlZSBpdHMgcmlnaHQsIHRpdGxlIGFuZCBpbnRlcmVzdCBpbiBhbmQgdG8gdGhhdCBwb3J0aW9uIG9mIHRoZSBHcmFudG9yIEVhc2VtZW50cyBsb2NhdGVkIHVwb24sIG92ZXIsIGFjcm9zcyBhbmQgdW5kZXIgdGhlIHJlYWwgcHJvcGVydHkgbW9yZSBwYXJ0aWN1bGFybHkgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgZGVzY3JpYmVkIGluIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgRXhoaWJpdCBCfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB3aGljaCBpcyBhdHRhY2hlZCBoZXJldG8gYW5kIG1hZGUgYSBwYXJ0IGhlcmVvZiAodGhlIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBMaW1pdGVkIEZhY2lsaXRpZXMgRWFzZW1lbnQgUHJvcGVydHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANClxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQopIGFuZCBhbGwgcmlnaHRzIGFuZCBvYmxpZ2F0aW9ucyB1bmRlciB0aGUgRWFzZW1lbnQgQWdyZWVtZW50cyBhcyB0byB0aGUgTGltaXRlZCBGYWNpbGl0aWVzIEVhc2VtZW50IFByb3BlcnR5LCBzb2xlbHkgYW5kIGV4Y2x1c2l2ZWx5IGZvcjoge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjYxNH0oYSl7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjYxNH1caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCiB0aGUgcGxhY2VtZW50LCBvcGVyYXRpb24sIG1haW50ZW5hbmNlLCByZXBhaXIgYW5kIHJlcGxhY2VtZW50IG9mIEdyYW50ZWV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCnMgZWxlY3RyaWNhbCBhbmQgY29tbXVuaWNhdGlvbiBjYWJsZXMgYW5kIHJlbGF0ZWQgZXF1aXBtZW50LCBmb3IgYWNjZXNzIHJvYWRzIGFuZCBmb3IgYWNjZXNzIHRvIGFuZCBmcm9tIHRoZSBzYW1lLCBpbmNsdWRpbmcsIGJ1dCBub3QgbGltaXRlZCB0bywgdGhlIGNvbnN0cnVjdGlvbiwgbGF5aW5nIGRvd24sIGluc3RhXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpsbGF0aW9uLCB1c2UsIHJlcGxhY2VtZW50LCByZWxvY2F0aW9uLCByZW1vdmFsLCBvcGVyYXRpb24gYW5kIG1haW50ZW5hbmNlIG9mIHVuZGVyZ3JvdW5kIGVsZWN0cmljIGNvbGxlY3Rpb24gZmFjaWxpdGllcyBpbmNsdWRpbmcgZWxlY3Ryb25pYyB0cmFuc21pc3Npb24gYW5kIGRpc3RyaWJ1dGlvbiBsaW5lcywgY29tbXVuaWNhdGlvbiBsaW5lcywgaW50ZXJjb25uZWN0aW9uIGFuZCBzd2l0Y2hpbmcgc3RhdGlvbnMsIGFuZCBhY2Nlc3Mgcm9hZHMNClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCB0b2dldGhlciB3aXRoIHRoZSByaWdodCB0byBhY2Nlc3Mgc3VjaCBpbXByb3ZlbWVudHM7ICAoc3VjaCBjb2xsZWN0aXZlIHJpZ2h0cywgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBMaW1pdGVkIEZhY2lsaXRpZXMgRWFzZW1lbnRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICksIHN1YmplY3QsIGluIGVhY2ggY2FzZSwgdG8gdGhlIHRlcm1zLCBjb3ZlbmFudHMgYW5kIGNvbmRpdGlvbnMgY29udGFpbmVkIGluIHRoZSBDby1UZW5hbmN5IEFncmVlbWVudCBhbmQgdGhlIEVhc2VtZW50IEFncmVlbWVudHMuICBBbGwgY29sbGVjXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQp0aW9uIGZhY2lsaXRpZXMsIGVxdWlwbWVudCwgY2FibGVzLCBlbGVjdHJvbmljIHRyYW5zbWlzc2lvbiBhbmQgZGlzdHJpYnV0aW9uIGxpbmVzLCBjb21tdW5pY2F0aW9uIGxpbmVzLCBpbnRlcmNvbm5lY3Rpb24gYW5kIHN3aXRjaGluZyBzdGF0aW9ucyBhbmQgYWNjZXNzIHJvYWRzIGluc3RhbGxlZCBieSBvciBmb3IgdGhlIGJlbmVmaXQgb2YgR3JhbnRlZSBvbiB0aGUgTGltaXRlZCBGYWNpbGl0aWVzIEVhc2VtZW50IFByb3BlcnR5IHNoYWxsIGINClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGVcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgcmVmZXJyZWQgdG8gaGVyZWluIGFzIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KR3JhbnRlZSBDb2xsZWN0aW9uIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KVGhpcyBhc3NpZ25tZW50IGlzIG1hZGUgd2l0aG91dCBjb3ZlbmFudCwgcmVwcmVzZW50YXRpb24gb3Igd2FycmFudHksIGV4cHJlc3Mgb3IgaW1wbGllZCBieSBHcmFudG9yLCBleGNlcHQgZm9yIHRob3NlIGNvdmVuYW50cywgcmVwcmVzZW50YXRpb25zIGFuZCB3YXJyYW50aWVzIG1hZGUgaW4gdGhlIENvLVRlbmFuY3kgQWdyZWVtZW50IGFuXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpkIHN1Y2ggY29udmV5YW5jZSBpcyBzdWJqZWN0IHRvIFNlY3Rpb24gfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxjZjFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjM4MTY1NSB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmMTgzMX1caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCA1LjN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQp7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjE4MzF9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIG9mIHRoZSBDby1UZW5hbmN5IEFncmVlbWVudC59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAyLlx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEFzc3VtcHRpb24gb2YgRWFzZW1lbnQgYW5kIEVhc2VtZW50IEFncmVlbWVudHMgYnkgR3JhbnRlZX17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIC4gIEdyYW50ZWUgaGVyZWJ5IGFjY2VwdHMgdGhlIGZvcmVnb2luZyBjb252ZXlhbmNlIGFuZCBhc3NpZ25tZW50IGFuZCBhc3N1bWVzIGFuZCBhZ3JlZXMgdG8gcGVyZm9ybSB0aGUgb2JsaWdhdGlvbnMgdW5kZXIgdFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KaGUgdGVybXMgb2YgdGhlIEVhc2VtZW50IEFncmVlbWVudHMgd2l0aCByZXNwZWN0IHRvIHRoZSBMaW1pdGVkIEZhY2lsaXRpZXMgRWFzZW1lbnRzLCBzdWJqZWN0IHRvIGFuZCBpbiBhY2NvcmRhbmNlIHdpdGggdGhlIENvLVRlbmFuY3kgQWdyZWVtZW50Ln17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDMuXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgUmV0ZW50aW9uIG9mIEdyYW50b3IgRWFzZW1lbnRzIGJ5IEdyYW50b3J9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAuICBHcmFudG9yIGhlcmVieSByZXNlcnZlcyBhbmQgcmV0YWlucywgc3ViamVjdCB0byB0aGUgdGVybXMsIGNvdmVcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCm5hbnRzIGFuZCBjb25kaXRpb25zIGNvbnRhaW5lZCBpbiB0aGUgQ28tVGVuYW5jeSBBZ3JlZW1lbnQsIHRoZSBHcmFudG9yIEVhc2VtZW50cyBvbiB0aGUgcmVtYWluZGVyIG9mIHRoZSBFYXNlbWVudCBQcm9wZXJ0eSBmb3IgdGhlIHB1cnBvc2VzIGRlc2NyaWJlZCBpbiB0aGUgRWFzZW1lbnQgQWdyZWVtZW50cywgYW5kIHRoaXMgUGFydGlhbCBBc3NpZ25tZW50IHNoYWxsIG5vdCBpbiBhbnkgd2F5IGFmZmVjdCBvciBpbXBhaXIgYW55IHJpZ2h0cw0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KYW5kIGVhc2VtZW50cyBncmFudGVkIHRvIEdyYW50b3Igbm90IGV4cHJlc3NseSBhc3NpZ25lZCB0byBHcmFudGVlIGhlcmV1bmRlci4gIEFsbCBzb2xhciBnZW5lcmF0aW5nIGVxdWlwbWVudCwgY29sbGVjdGlvbiBmYWNpbGl0aWVzLCBlcXVpcG1lbnQsIGNhYmxlcywgZWxlY3Ryb25pYyB0cmFuc21pc3Npb24gYW5kIGRpc3RyaWJ1dGlvbiBsaW5lcywgY29tbXVuaWNhdGlvbiBsaW5lcywgaW50ZXJjb25uZWN0aW9uIGFuZCBzd2l0Y2hpbmcgc3RhDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCB0XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgaW9ucyBhbmQgYWNjZXNzIHJvYWRzIGluc3RhbGxlZCBieSBvciBvbiBiZWhhbGYgb2YgR3JhbnRvciBwdXJzdWFudCB0byB0aGUgRWFzZW1lbnQgQWdyZWVtZW50cyBzaGFsbCBiZSByZWZlcnJlZCB0byBoZXJlaW4gYXMgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBHcmFudG9yIEZhY2lsaXRpZXMufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICAgR3JhbnRvciBoZXJlYnkgZnVydGhlciByZXNlcnZlcyBhbmQgcmV0YWlucyB0aGUgcmlnaHQgdG8gbWFpbnRhaW4sIGFjY2VzcywgcmVwYWlyLCByZXBsYWNlLCByZW1vdmUgYW5kIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KdXRpbGl6ZSBhbGwgR3JhbnRvciBGYWNpbGl0aWVzIGxvY2F0ZWQgd2l0aGluLCB1cG9uIG9yIHVuZGVyIHRoZSBMaW1pdGVkIEZhY2lsaXRpZXMgRWFzZW1lbnQgUHJvcGVydHkgZXhpc3RpbmcgYXMgb2YgdGhlIEVmZmVjdGl2ZSBEYXRlLCBpZiBhbnksIGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgRWFzZW1lbnQgQWdyZWVtZW50cywgYW5kIHRoaXMgUGFydGlhbCBBc3NpZ25tZW50IHNoYWxsIG5vdCBpbiBhbnkgd2F5IGFmZmVjdCBvciBpbXBhaXIgDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBhXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgbnkgcmlnaHRzIGFuZCBlYXNlbWVudHMgZ3JhbnRlZCB0byBHcmFudG9yIGluLCB0byBhbmQgdXBvbiB0aGUgTGltaXRlZCBGYWNpbGl0aWVzIEVhc2VtZW50IFByb3BlcnR5IHdpdGggcmVzcGVjdCB0byBHcmFudG9yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgDQpccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBzIHJpZ2h0IHRvIG1haW50YWluLCBhY2Nlc3MsIHJlcGFpciwgcmVwbGFjZSBhbmQgdXRpbGl6ZSBhbnkgR3JhbnRvciBGYWNpbGl0aWVzLn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDQuXHRhYiBDcm9zc2luZy59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCA0LjFcdGFiIEdyYW50b3IgZ3JhbnRzIGFuZCBjb252ZXlzIHRvIEdyYW5caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCnRlZSwgc3ViamVjdCB0byB0aGUgdGVybXMsIGNvdmVuYW50cyBhbmQgY29uZGl0aW9ucyBjb250YWluZWQgaW4gdGhlIENvLVRlbmFuY3kgQWdyZWVtZW50IGFuZCB0aGUgRWFzZW1lbnQgQWdyZWVtZW50cywgYSBzdWJlYXNlbWVudCBvdmVyLCB1cG9uLCBhY3Jvc3MgYW5kIHVuZGVyIHRoZSBFYXNlbWVudCBQcm9wZXJ0eSB0byBhY2Nlc3MgdGhlIExpbWl0ZWQgRmFjaWxpdGllcyBFYXNlbWVudCBQcm9wZXJ0eSwgYXMgcmVhc29uYWJseSBuZWNlcw0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgc1xoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGFyeSBmb3IgdGhlIHVzZSBhbmQgb3BlcmF0aW9uIG9mIHRoZSBHcmFudGVlIFByb2plY3QufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgNC4yXHRhYiANCkdyYW50ZWUgZ3JhbnRzIGFuZCBjb252ZXlzIHRvIEdyYW50b3IsIHN1YmplY3QgdG8gdGhlIHRlcm1zLCBjb3ZlbmFudHMgYW5kIGNvbmRpdGlvbnMgY29udGFpbmVkIGluIHRoZSBDby1UZW5hbmN5IEFncmVlbWVudCBhbmQgdGhpcyBQYXJ0aWFsIEFzc2lnbm1lbnQsIGEgc3ViZWFzZW1lbnQgb3ZlciwgdXBvbiwgYWNyb3NzIGFuZCB1bmRlciB0aFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KZSBMaW1pdGVkIEZhY2lsaXRpZXMgRWFzZW1lbnQgUHJvcGVydHkgdG8gYWNjZXNzIHRoZSBHcmFudG9yIEZhY2lsaXRpZXMsIGlmIGFueSwgYXMgcmVhc29uYWJseSBuZWNlc3NhcnkgZm9yIHRoZSB1c2UgYW5kIG9wZXJhdGlvbiBvZiB0aGUgR3JhbnRvciBQcm9qZWN0Ln17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDQuM1x0YWIgVGhlIGZvcmVnb2luZyBncmFudHMgYW5kIGNvbnZleWFuY2VzIGFyZSBtYWRlIHdpdGhvdXQgcmVjb3Vyc2UgdG8sIGFuZCB3aXRob3V0IGNvdmVuYW50IG9yIHdhcnJhblxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KdHksIGV4cHJlc3Mgb3IgaW1wbGllZCBieSwgdGhlIGdyYW50aW5nIENvLVRlbmFudCBpbiBhbnkgY2FzZSBvciBldmVudCwgb3IgZm9yIGFueSBwdXJwb3NlIHdoYXRzb2V2ZXIufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgNS5cdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBBc3NpZ25tZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgLiAgRWFjaCBDby1UZW5hbnQgc2hhbGwgaGF2ZSB0aGUgcmlnaHQgdG8gc2VsbCwgY29udmV5LCBsZWFzZSwgYXNzaWduLCBtb3J0Z2FnZSwgZW5jdW1iZXIgb3IgdHJhbnNmZXIgdGhlaXIgcmVzcGVjdGl2ZSByaWdodHMgaGVyZXVuZGVyIGluIGFcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCmNjb3JkYW5jZSB3aXRoIHRoZSB0ZXJtcyBhbmQgY29uZGl0aW9ucyBzZXQgZm9ydGggaW4gdGhlIEVhc2VtZW50IEFncmVlbWVudHMgYW5kIHRoZSBDby1UZW5hbmN5IEFncmVlbWVudC4gIEFueSBvdGhlciBhc3NpZ25tZW50IHdpdGhvdXQgdGhlIG90aGVyIENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFxycXVvdGUgfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgcyBjb25zZW50IHNoYWxsIGJlIHZvaWQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgYWIgaW5pdGlvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgLiAgUmVmZXJlbmNlcyBpbiB0aGlzIFBhcnRpYWwgQXNzaWdubWVudCB0byBlaXRoZXIgQ28tVGVuYW50IG9yIHRvXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQogTGFuZG93bmVyIHNoYWxsIGJlIGRlZW1lZCB0byByZWZlciB0byBhbnkgcGVybWl0dGVkIHN1Y2Nlc3NvcnMgb3IgYXNzaWduZWVzIG9mIHN1Y2ggQ28tVGVuYW50IG9yIExhbmRvd25lci59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCA2Llx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIENvLVRlbmFuY3kgQWdyZWVtZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgLiAgVGhpcyBQYXJ0aWFsIEFzc2lnbm1lbnQgaXMgc3ViamVjdCB0byB0aGUgdGVybXMgYW5kIGNvbmRpdGlvbnMgb2YgdGhlIENvLVRlbmFuY3kgQWdyZWVtZW50LiAgSW4gdGhlIGV2ZW50IG9mIGEgY29uZmxpY3QgYlxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KZXR3ZWVuIHRoaXMgUGFydGlhbCBBc3NpZ25tZW50IGFuZCB0aGUgQ28tVGVuYW5jeSBBZ3JlZW1lbnQsIHRoZSBDby1UZW5hbmN5IEFncmVlbWVudCBzaGFsbCBjb250cm9sLiAgRWFjaCBDby1UZW5hbnQgc2hhbGwgcHJvdmlkZSB0aGUgb3RoZXIgd2l0aCBhIGNvcHkgb2YgYW55IG5vdGljZXMgZnJvbSwgb3Igb3RoZXIgY29ycmVzcG9uZGVuY2Ugd2l0aCwgYW55IExhbmRvd25lciByZWdhcmRpbmcgdGhlIExpbWl0ZWQgRmFjaWxpdGllcyBFYXNlDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBtXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQplbnQgb3IgTGltaXRlZCBGYWNpbGl0aWVzIEVhc2VtZW50IFByb3BlcnR5LiAgR3JhbnRvciBhY2tub3dsZWRnZXMgdGhhdCB0aGF0IHRoZSBMaW1pdGVkIEZhY2lsaXRpZXMgRWFzZW1lbnQgZ3JhbnRlZCBoZXJlaW4gbWF5IGJlIGJhc2VkIG9uIHBsYW5zIHJhdGhlciB0aGFuIGFzLWJ1aWx0IGZhY2lsaXRpZXMsIGFuZCBHcmFudG9yIHNoYWxsIHJlYXNvbmFibHkgY29vcGVyYXRlIHdpdGggR3JhbnRlZSByZWdhcmRpbmcgYW55IHByb3Bvc2VkIG0NClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIG9caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBkaWZpY2F0aW9uIHRvIHRoZSBMaW1pdGVkIEZhY2lsaXRpZXMgRWFzZW1lbnQgdG8gcmVmbGVjdCBhcy1idWlsdCBmYWNpbGl0aWVzLn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDcuXHRhYiBNaXNjZWxsYW5lb3VzLn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDcuMVx0YWIgTm90aWNlcy4gIEFueSBub3RpY2UgcmVxdWlyZWQgb3IgYXV0aG9yaXplZCB0byBiZSBnaXZlbiBoZXJldW5kZXIgb3IgYW55IG90aGVyIGNvbW11bmljYXRpb25zIGJldHdlZW4gdGhlIENvLVRlbmFudHMgc2hhbGwgYmUgaW4gd3JpdGluZyAodW5sZXNzIG90aGVyd2lzZSBwDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCnJvdmlkZWQpIGFuZCBzaGFsbCBiZSBzZXJ2ZWQgcGVyc29uYWxseSBvciBieSByZXB1dGFibGUgZXhwcmVzcyBjb3VyaWVyIHNlcnZpY2Ugb3IgYnkgZmFjc2ltaWxlIHRyYW5zbWlzc2lvbiBhZGRyZXNzZWQgdG8gdGhlIHJlbGV2YW50IENvLVRlbmFudCBhdCB0aGUgYWRkcmVzcyBzdGF0ZWQgYmVsb3cgb3IgYXQgYW55IG90aGVyIGFkZHJlc3Mgbm90aWZpZWQgYnkgdGhhdCBDby1UZW5hbnQgdG8gdGhlIG90aGVyIGFzIGl0cyBhZGRyZXNzIGZvcg0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHNlcnZpY2UuICBBbnkgbm90aWNlIHNvIGdpdmVuIHBlcnNvbmFsbHkgc2hhbGwgYmUgZGVlbWVkIHRvIGhhdmUgYmVlbiBzZXJ2ZWQgb24gZGVsaXZlcnksIGFueSBub3RpY2Ugc28gZ2l2ZW4gYnkgZXhwcmVzcyBjb3VyaWVyIHNlcnZpY2Ugc2hhbGwgYmUgZGVlbWVkIHRvIGhhdmUgYmVlbiBzZXJ2ZWQgfXtccnRsY2hcZmNzMSBcYWJcYWYwIA0KXGx0cmNoXGZjczAgXGJcaW5zcnNpZDExNjY2MjE3IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFtSRURBQ1RFRF19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIGRheXMgYWZ0ZXIgdGhlIHNhbWUgc2hhbGwgaGF2ZSBiZWVuIGRlbGl2ZXJlZCB0byB0aGUgcmVsZXZhbnQgY291cmllci4gIA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQXMgcHJvb2Ygb2Ygc3VjaCBzZXJ2aWNlIGl0IHNoYWxsIGJlIHN1ZmZpY2llbnQgdG8gcHJvZHVjZSBhIHJlY2VpcHQgc2hvd2luZyBwZXJzb25hbCBzZXJ2aWNlIG9yIHRoZSByZWNlaXB0IG9mIGEgcmVwdXRhYmxlIGNvdXJpZXIgY29tcGFueSBzaG93aW5nIHRoZSBjb3JyZWN0IGFkZHJlc3Mgb2YgdGhlIGFkZHJlc3NlZS59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCANClxwYXIgfVxwYXJkIFxsdHJwYXJccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBUaGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQ28tVGVuYW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQogYWRkcmVzc2VzIGZvciBzZXJ2aWNlIGFyZSBhcyBmb2xsb3dzLCBhbHRob3VnaCBlYWNoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBDb1xoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIC1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBtYXkgY2hhbmdlIGl0cyBhZGRyZXNzIGZvciBzZXJ2aWNlIGJ5IHdyaXR0ZW4gbm90aWNlIHRvIHRoZSBvdGhlciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQ28tVGVuYW50c317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIGdpdmVuIGFzIHByb3ZpZGVkIGluIHRoaXMgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBTZWN0aW9uIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClx1bFxjZjFcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjM4MTY1NSB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmMTgxM31caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCA3LjF9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiB7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjE4MTN9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgOn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIElmIHRvIEdyYW50b3I6XHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIH17DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFx0YWIgXHRhYiBcdGFiIFx0YWIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGk0NDEwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjQ0MTBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcdGFiIFx0YWIgXHRhYiBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGk0NDEwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjQ0MTBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcdGFiIFx0YWIgXHRhYiBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkwXHJpMFxzYTcyMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBJZiB0byBHcmFudGVlOg0KXHBhciB9XHBhcmQgXGx0cnBhclxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCA3LjJcdGFiIA0KR292ZXJuaW5nIExhdy4gIFRoaXMgUGFydGlhbCBBc3NpZ25tZW50IHNoYWxsIGJlIGdvdmVybmVkIGJ5IGFuZCBpbnRlcnByZXRlZCBpblxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KIGFjY29yZGFuY2Ugd2l0aCB0aGUgbGF3cyBvZiB0aGUgU3RhdGUgb2YgT2hpby4gIElmIHRoZSBwYXJ0aWVzIGFyZSB1bmFibGUgdG8gcmVzb2x2ZSBhbWljYWJseSBhbnkgZGlzcHV0ZSBhcmlzaW5nIG91dCBvZiBvciBpbiBjb25uZWN0aW9uIHdpdGggdGhpcyBQYXJ0aWFsIEFzc2lnbm1lbnQsIHRoZXkgYWdyZWUgdGhhdCBzdWNoIGRpc3B1dGUgc2hhbGwgYmUgcmVzb2x2ZWQgaW4gdGhlIG1hbm5lciBwcm92aWRlZCBpbiB0aGUgQ28tVGVuYW5jDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCB5XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQogQWdyZWVtZW50LiAgVGhlIHBhcnRpZXMgYWdyZWUgdGhhdCBhbnkgcnVsZSBvZiBjb25zdHJ1Y3Rpb24gdG8gdGhlIGVmZmVjdCB0aGF0IGFtYmlndWl0aWVzIGFyZSB0byBiZSByZXNvbHZlZCBpbiBmYXZvciBvZiBlaXRoZXIgQ28tVGVuYW50IHNoYWxsIG5vdCBiZSBlbXBsb3llZCBpbiB0aGUgaW50ZXJwcmV0YXRpb24gb2YgdGhpcyBQYXJ0aWFsIEFzc2lnbm1lbnQgYW5kIGlzIGhlcmVieSB3YWl2ZWQufXtccnRsY2hcZmNzMSBcYWYxIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCA3LjNcdGFiIE5vIFBhcnRuZXJzaGlwIG9yIEpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCm9pbnQgVmVudHVyZS4gIE5vdGhpbmcgY29udGFpbmVkIGluIHRoaXMgUGFydGlhbCBBc3NpZ25tZW50IHNoYWxsIGJlIGRlZW1lZCB0byBjb25zdGl0dXRlIGFueSBDby1UZW5hbnQgYSBwYXJ0bmVyIG9mLCBvciBqb2ludCB2ZW50dXJlciB3aXRoLCBhbnkgb3RoZXIgQ28tVGVuYW50Ln17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDcuNFx0YWIgUGFydGlhbCBJbnZhbGlkaXR5LiAgU2hvdWxkIGFueSBwb3J0aW9uIG9mIHRoaXMgUGFydGlhbCBBc3NpZ25tZW50IGJlIGRlY2xhcmVkIGludmFsaWQgYW5caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCmQgdW5lbmZvcmNlYWJsZSwgdGhlbiBzdWNoIHBvcnRpb24gc2hhbGwgYmUgZGVlbWVkIHRvIGJlIHNldmVyYWJsZSBmcm9tIHRoaXMgUGFydGlhbCBBc3NpZ25tZW50IGFuZCBzaGFsbCBub3QgYWZmZWN0IHRoZSByZW1haW5kZXIgaGVyZW9mOyBhbmQgdGhlIENvLVRlbmFudHMgc2hhbGwgbmVnb3RpYXRlIGluIGdvb2QgZmFpdGggdG8gcmVwbGFjZSBzdWNoIGludmFsaWQgYW5kIHVuZW5mb3JjZWFibGUgcHJvdmlzaW9uLn17XHJ0bGNoXGZjczEgDQpcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgNy41XHRhYiBBZ3JlZW1lbnQgaVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KbiBDb3VudGVycGFydHMuICBUaGlzIFBhcnRpYWwgQXNzaWdubWVudCBtYXkgYmUgZXhlY3V0ZWQgaW4gbXVsdGlwbGUgY291bnRlcnBhcnRzLCBlYWNoIGFuZCBhbGwgb2Ygd2hpY2ggc2hhbGwgYmUgZGVlbWVkIGFuIG9yaWdpbmFsIGFncmVlbWVudCwgYW5kIGFsbCBvZiB3aGljaCBzaGFsbCBjb25zdGl0dXRlIG9uZSBhZ3JlZW1lbnQgdG8gYmUgZWZmZWN0aXZlIGFzIG9mIHRoZSBFZmZlY3RpdmUgRGF0ZS4gIEZvciBwdXJwb3NlcyBvZiByZWNvDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCByXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpkaW5nIHRoaXMgUGFydGlhbCBBc3NpZ25tZW50LCB0aGUgc2lnbmF0dXJlIHBhZ2UgYW5kIHRoZSBhY2tub3dsZWRnZW1lbnQgcGFnZXMgcGVydGFpbmluZyB0aGVyZXRvIG1heSBiZSBkZXRhY2hlZCBmcm9tIGEgY291bnRlcnBhcnQsIHdoZW4gZXhlY3V0ZWQsIGFuZCBhdHRhY2hlZCB0byBhbm90aGVyIGNvdW50ZXJwYXJ0LCB3aGljaCBvdGhlciBjb3VudGVycGFydCBtYXkgdGhlcmVhZnRlciBiZSByZWNvcmRlZCBhcyB0aGlzIFBhcnRpYWwgQXMNClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHNcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBpZ25tZW50Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDE1MTY4MDc3IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDguXHRhYiBSZXZlcnRlci4gIElmIGF0IGFueSB0aW1lIGZvbGxvd2luZyB0aGUgRWZmZWN0aXZlIERhdGUsIEdyYW50ZWUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgKGEpIH17DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MzEyMzk4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGZhaWxzIHRvIG9wZXJhdGUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzIyNjgzNlxjaGFycnNpZDEzNDUxNDQ5IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGZvciBhIHBlcmlvZCBpbiBleGNlc3Mgb2Z9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDI2MzYzNDIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIHR3byAoMikgeWVhcnN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQzMjI2ODM2XGNoYXJyc2lkOTMxMjM5OCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MzEyMzk4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KZm9yIHJlYXNvbnMgb3RoZXIgdGhhbiBGb3JjZSBNYWpldXJlLCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQzMjI2ODM2IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIG9yfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MzEyMzk4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KIGFiYW5kb25zIHRoZSB1c2Ugb3Igb3BlcmF0aW9uIG9mIGl0cyBQcm9qZWN0IHdpdGhvdXQgdGhlIGludGVudGlvbiB0byByZXN1bWUgdFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGhlIHVzZSBvciBvcGVyYXRpb24sIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTEyNTkwNyBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBhbmR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTMxMjM5OCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgKH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDMyMjY4MzYgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgYn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTMxMjM5OCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCikgZGVmYXVsdHMgb24gaXRzIG9ibGlnYXRpb25zIHB1cnN1YW50IHRvIHRofXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgZSBDby1UZW5hbmN5fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQzMjI2OTA5IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBBZ3JlZW1lbnR9e1xydGxjaFxmY3MxIFxhZjEgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTMxMjM5OCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgKGluY2x1ZGluZyBhbnkgcGF5bWVudCBvYmxpZ2F0aW9ucykgYW5kIGZhaWxzIHRvIGN1cmUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgc3VjaCBkZWZhdWx0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkzMTIzOTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIHdpdGhpbiB0aGUgYXBwbGljYWJsZSBjdXJlIHBlcmlvZHMgc2V0IGZvcnRoIGhlcmVpbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTUxNjgwNzcgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgLCB0aGVuIGFsbCByaWdodCwgdGl0bGUgYW5kIGludGVyZXN0IGluIGFuZCANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHRvIHRoZSBFYXNlbWVudHMgc2hhbGwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgaW1tZWRpYXRlbHkgZm9sbG93aW5nIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KYW55IGxhbmRvd25lciBvciByZWd1bGF0b3J5IGFwcHJvdmFscyByZXF1aXJlZCBmb3Igc3VjaCB0cmFuc2ZlciAod2hpY2ggR3JhbnRlZSB3aWxsIHVzZSBjb21tZXJjaWFsbHkgcmVhc29uYWJsZSBlZmZvcnRzIHRvIG9idGFpbil9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCAsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ2NzgyMDAzIA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIGF1dG9tYXRpY2FsbHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgKGFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNjc4MjAwMyBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgd2l0aG91dCBmdXJ0aGVyIGFjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgKX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTUxNjgwNzcgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIHJldmVydCB0byBhbmQgcmV2ZXN0IGluIEdyYW50b3IsIGFzXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQogZnVsbHkgYW5kIGNvbXBsZXRlbHkgYXMgaWYgdGhpcyBQYXJ0aWFsIEFzc2lnbm1lbnQgaGFkIG5ldmVyIGJlZW4gZXhlY3V0ZWQ7IHByb3ZpZGVkLCBob3dldmVyLCBHcmFudGVlIHNoYWxsIGNvbmZpcm0gc3VjaCByZXZlcnNpb24gYnkgY29udmV5aW5nIGl0cyBpbnRlcmVzdCBpbiB0aGUgRWFzZW1lbnRzIGJhY2sgdG8gR3JhbnRvciBieSBhc3NpZ25tZW50IGluIGZvcm0gYW5kIHN1YnN0YW5jZSBzdWJzdGFudGlhbGx5IHNpbWlsYXIgdG8gdGgNClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGlcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBzIFBhcnRpYWwgQXNzaWdubWVudC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1NjM5NjE2IA0KXHBhciB9XHBhcmQgXGx0cnBhclxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQogW1JFTUFJTkRFUiBPRiBQQUdFIElOVEVOVElPTkFMTFkgTEVGVCBCTEFOSzt9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0MjkxOTQ0IFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgU0lHTkFUVVJFIFBBR0UgRk9MTE9XU119e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBccGFnZSANClxwYXIgfVxwYXJkIFxsdHJwYXJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpJTiBXSVRORVNTIFdIRVJFT0YsIEdyYW50b3IgYW5kIEdyYW50ZWUsIGFjdGluZyB0aHJvdWdoIHRoZWlyIGR1bHkgYXV0aG9yaXplZCByZXByZXNlbnRhdGl2ZXMsIGhhdmUgZXhlY3V0ZWQgdGhpcyBQYXJ0aWFsIEFzc2lnbm1lbnQgd2l0aCB0aGUgaW50ZW50IHRoYXQgaXQgYmUgZVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KZmZlY3RpdmUgYXMgb2YgdGhlIEVmZmVjdGl2ZSBEYXRlLCBhbmQgY2VydGlmeSB0aGF0IHRoZXkgaGF2ZSByZWFkLCB1bmRlcnN0YW5kIGFuZCBhZ3JlZSB0byB0aGUgdGVybXMgYW5kIGNvbmRpdGlvbnMgb2YgdGhpcyBQYXJ0aWFsIEFzc2lnbm1lbnQufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgR3JhbnR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFxoaWNoXGYwIG9yXCc5NA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIF9fX19fX19fX19fX19fX19fX19ffXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ0MDEwMDQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIF9fX19fX19fX19fX19fX19ffXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDAxMDA0NCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEJ5Ol9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fDQpccGFyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIE5hbWU6X19fX19fX19fX19fX19fX19fX1xoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIF9fX19fX19fX19fX199e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDU3MzI2MTggDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTBccmkwXHNhMTIwMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTMxNzgxIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFRpdGxlOl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXw0KDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MzE3ODEgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgU1RBVEUgT0YgX19fX19fX19fX19fX19cdGFiICkNClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGZpMjg4MFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MzE3ODEgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgKVx0YWIgc3MuDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MTEwMDgxIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIENPVU5UWSBPRiBfX19fX19fX19fX18pDQpccGFyIH1ccGFyZCBcbHRycGFyXHFqIFxmaTcyMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KVGhlIGZvcmVnb2luZyBpbnN0cnVtZW50IHdhcyBhY2tub3dsZWRnZWQgYmVmb3JlIG1lIHRoaXMgX19fXyBkYXkgb2YgX19fX19fX19fX18sIDIwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDAyNzA2MSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KX19fXywgYnkgX19fX19fX19fX19fX19fX18sIGFzIF9fX19fX19fX19fX19fX19fX18gb2YgX19fX19fX1xoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIF9fX19fX19fXyAsIGEgX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXy59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpNeSBjb21taXNzaW9uIGV4cGlyZXMgX19fX19fX19fX19fX19fX19fX19fX19fX199e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkwXHJpMFxzYTcyMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgV2l0bmVzcyBteSBoYW5kIGFuZCBvZmZpY2lhbCBzZWFsLg0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGk0MzIwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjQzMjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgX19fX19fX19fX19fX19fX19fX19fX19fX19fX199ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDAxMDA0NCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIE5hbWU6DQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTQzMjBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNDMyMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIE5vdH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1NzMyNjE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGFyfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MzE3ODEgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgeSBQdWJsaWMNClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkzMTc4MSBccGFnZSANClxwYXIgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M1xsb2NoXGYwIFxoaWNoXGYwIEdyYW50ZWVcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MTEwMDgxIA0KXHBhciBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19ffXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkxMTAwODEgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTExMDA4MSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBCeTpfX19fX19fX19fX19fX19fX19fXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgX19fX19fX19fX19fX19fXw0KXHBhciBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBOYW1lOl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19ffXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MzUwOTA4IA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkwXHJpMFxzYTEyMDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgzNTA5MDggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgVGl0bGU6X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fDQoNClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgzNTA5MDggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgU1RBVEUgT0YgX19fX19fX19fX19fX19cdGFiICkNClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGZpMjg4MFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MzUwOTA4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIClcdGFiIHNzLg0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODEyMTQzIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIENPVU5UWSBPRiBfX19fX19fX19fX18pfXtccnRsY2hcZmNzMSBcYWYxIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDc0MTc3MjIgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMzc1NTk1MCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBUaGUgZm9yZWdvaW5nIGluc3RydW1lbnQgd2FzIGFja25vd2xlZGdlZCBiZWZvcmUgbWUgdGhpcyBfX19fIGRheSBvZiBfX19fX19fX19fXywgMjB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ0MDI3MDYxIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDJ9ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMzc1NTk1MCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBfX19fLCBieSBfX19fX19fX19fX1xoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIF9fX19fX19fX19fXywgYXMgX19fX19fX19fX19fX19fX19fX19fXyBvZiBfX19fX19fX19fX19fX19fX19fX19fLCBhIF9fX19fX19fX19fX19fX19fX19fX18uDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTU2NzE5NjggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgTXkgY29tbWlzc2lvbiBleHBpcmVzIF9fX19fX19fX19fX19fX19fX19fX19fX19fX19fXw0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkwXHJpMFxzYTcyMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTU2NzE5NjggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgV2l0bmVzcyBteSBoYW5kIGFuZCBvZmZpY2lhbCB9ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzczNTQxMyBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBzZWFsLn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTcxMjM4NyANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpNDMyMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW40MzIwXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDU3MTIzODcgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgX19fX19fX19fX19fX19fX19fX19fX19fX19fX18NClxwYXIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgTmFtZToNClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpNDMyMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW40MzIwXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDU3MTIzODcgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgTm90YXJ5IFB1YmxpYw0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1NzEyMzg3IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFBSRVBBUkVEIEJZIEFORH17XHJ0bGNoXGZjczEgXGFmMSANClxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDI5MTk0NCBcbGluZSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTcxMjM4NyBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBXSEVOIFJFQ09caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBSREVEIFJFVFVSTiBUTzoNClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1NzEyMzg3IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIF9fX19fX19fX19fX19fX18NClxwYXIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgX19fX19fX19fX19fX19fDQpccGFyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIF9fX19fX19fX19fX19fX317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODkyMjU5NCANClxwYXIgXHBhZ2UgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFjIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4OTIyNTk0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEV4aGliaXQgQSB0byBQYXJ0aWFsIEFzc2lnbm1lbnQgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBvZn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBFYXNlbWVudHN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIA0KDQpccGFyIH1ccGFyZCBcbHRycGFyXHFjIFxsaTBccmkwXHNhNzIwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBMaXN0IG9mIEVhc2VtZW50IEFncmVlbWVudHMNClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IA0KXHBhciBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBbQS0yICBTaGFyZWQgRmFjaWxpdH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDAxMDA0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBpZXMgVE8gQkUgQ09ORklSTUVEXX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjMxMDEyOCANClxwYXIgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxzZWN0IH1cc2VjdGQgXGx0cnNlY3RcbGluZXgwXGVuZG5oZXJlXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiBccGFyZFxwbGFpbiBcbHRycGFyXHFjIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXHR4NzY2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxhZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBFeGhpYml0IEIgdG8gfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgUGFydGlhbCBBc3NpZ25tZW50IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0Kb2YgRWFzZW1lbnRzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFjIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBMZWdhbCBEZXNjcmlwdGlvbnMgZm9yIExpbWkNClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHRlZCBGYWNpbGl0aWVzIEVhc2VtZW50IEFncmVlbWVudH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXHNlY3QgfVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIA0KXHBhcmRccGxhaW4gXGx0cnBhclxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxhZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgRXhoaWJpdCBCLTEgdG8gfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBQYXJ0aWFsIEFzc2lnbm1lbnQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgb2YgRWFzZW1lbnRzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgRGVzY3JpcHRpb25zIGZvciBMaW1pdGVkIEZhY2lsaXRpZXMgRWF9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHNlbWVudCBQcm9wZXJ0eQ0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxzZWN0IH1cc2VjdGQgXGx0cnNlY3QNClxsaW5leDBcZW5kbmhlcmVcdGl0bGVwZ1xzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XGhlYWRlcmYgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSANClxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxhZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQyNjM2MzQyIA0KXHBhciB9fVxwYXJkXHBsYWluIFxsdHJwYXJccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwNzU4NTYge1wqXGJrbWtzdGFydCBfRFZfTTE1fXtcKlxia21rc3RhcnQgX0RWX00xN317XCpcYmtta3N0YXJ0IF9EVl9NMTh9e1wqXGJrbWtzdGFydCBfRFZfTTE5fQ0Ke1wqXGJrbWtzdGFydCBfRFZfTTIwfXtcKlxia21rc3RhcnQgX0RWX00yMX17XCpcYmtta3N0YXJ0IF9EVl9NMjV9e1wqXGJrbWtzdGFydCBfRFZfTTI3fXtcKlxia21rc3RhcnQgX0RWX00yOX17XCpcYmtta3N0YXJ0IF9EVl9NMzF9e1wqXGJrbWtzdGFydCBfRFZfTTMyfXtcKlxia21rc3RhcnQgX0RWX00zNH17XCpcYmtta3N0YXJ0IF9EVl9NMzZ9e1wqXGJrbWtzdGFydCBfRFZfTTM4fXtcKlxia21rc3RhcnQgX0RWX000M30NCntcKlxia21rc3RhcnQgX0RWX000NX17XCpcYmtta3N0YXJ0IF9EVl9NNTR9e1wqXGJrbWtzdGFydCBfRFZfTTU5fXtcKlxia21rc3RhcnQgX0RWX002NX17XCpcYmtta3N0YXJ0IF9EVl9NNjh9e1wqXGJrbWtzdGFydCBfRFZfTTcxfXtcKlxia21rc3RhcnQgX0RWX003M317XCpcYmtta3N0YXJ0IF9EVl9NODB9e1wqXGJrbWtzdGFydCBfRFZfTTgyfXtcKlxia21rc3RhcnQgX0RWX004N317XCpcYmtta3N0YXJ0IF9EVl9NOTF9DQp7XCpcYmtta3N0YXJ0IF9EVl9NOTJ9e1wqXGJrbWtzdGFydCBfRFZfTTEwMX17XCpcYmtta3N0YXJ0IF9EVl9NMTAyfXtcKlxia21rc3RhcnQgX0RWX00xMDN9e1wqXGJrbWtzdGFydCBfRFZfTTEwNH17XCpcYmtta3N0YXJ0IF9EVl9NMTEwfXtcKlxia21rc3RhcnQgX0RWX00xMTF9e1wqXGJrbWtzdGFydCBfRFZfTTExMn17XCpcYmtta3N0YXJ0IF9EVl9NMTE1fXtcKlxia21rc3RhcnQgX0RWX00xMTZ9e1wqXGJrbWtzdGFydCBfRFZfTTExOH0NCntcKlxia21rc3RhcnQgX0RWX00xMTl9e1wqXGJrbWtzdGFydCBfRFZfTTEyMX17XCpcYmtta3N0YXJ0IF9EVl9NMTIyfXtcKlxia21rc3RhcnQgX0RWX00xMjV9e1wqXGJrbWtzdGFydCBfRFZfTTEyNn17XCpcYmtta3N0YXJ0IF9EVl9NMTI4fXtcKlxia21rc3RhcnQgX0RWX00xMzJ9e1wqXGJrbWtzdGFydCBfRFZfTTEzM317XCpcYmtta3N0YXJ0IF9EVl9NMTM0fXtcKlxia21rc3RhcnQgX0RWX00xfXtcKlxia21rc3RhcnQgX0RWX002fQ0Ke1wqXGJrbWtzdGFydCBfRFZfTTd9e1wqXGJrbWtzdGFydCBfRFZfTTh9e1wqXGJrbWtzdGFydCBfRFZfTTExfXtcKlxia21rc3RhcnQgX0RWX00xMn17XCpcYmtta3N0YXJ0IF9EVl9NMTN9e1wqXGJrbWtzdGFydCBfRFZfTTEzOH17XCpcYmtta3N0YXJ0IF9EVl9NMTM5fXtcKlxia21rc3RhcnQgX0hsazQwMDk5NzM5fXtcKlxia21rZW5kIF9EVl9NMTV9e1wqXGJrbWtlbmQgX0RWX00xN317XCpcYmtta2VuZCBfRFZfTTE4fQ0Ke1wqXGJrbWtlbmQgX0RWX00xOX17XCpcYmtta2VuZCBfRFZfTTIwfXtcKlxia21rZW5kIF9EVl9NMjF9e1wqXGJrbWtlbmQgX0RWX00yNX17XCpcYmtta2VuZCBfRFZfTTI3fXtcKlxia21rZW5kIF9EVl9NMjl9e1wqXGJrbWtlbmQgX0RWX00zMX17XCpcYmtta2VuZCBfRFZfTTMyfXtcKlxia21rZW5kIF9EVl9NMzR9e1wqXGJrbWtlbmQgX0RWX00zNn17XCpcYmtta2VuZCBfRFZfTTM4fXtcKlxia21rZW5kIF9EVl9NNDN9DQp7XCpcYmtta2VuZCBfRFZfTTQ1fXtcKlxia21rZW5kIF9EVl9NNTR9e1wqXGJrbWtlbmQgX0RWX001OX17XCpcYmtta2VuZCBfRFZfTTY1fXtcKlxia21rZW5kIF9EVl9NNjh9e1wqXGJrbWtlbmQgX0RWX003MX17XCpcYmtta2VuZCBfRFZfTTczfXtcKlxia21rZW5kIF9EVl9NODB9e1wqXGJrbWtlbmQgX0RWX004Mn17XCpcYmtta2VuZCBfRFZfTTg3fXtcKlxia21rZW5kIF9EVl9NOTF9e1wqXGJrbWtlbmQgX0RWX005Mn0NCntcKlxia21rZW5kIF9EVl9NMTAxfXtcKlxia21rZW5kIF9EVl9NMTAyfXtcKlxia21rZW5kIF9EVl9NMTAzfXtcKlxia21rZW5kIF9EVl9NMTA0fXtcKlxia21rZW5kIF9EVl9NMTEwfXtcKlxia21rZW5kIF9EVl9NMTExfXtcKlxia21rZW5kIF9EVl9NMTEyfXtcKlxia21rZW5kIF9EVl9NMTE1fXtcKlxia21rZW5kIF9EVl9NMTE2fXtcKlxia21rZW5kIF9EVl9NMTE4fXtcKlxia21rZW5kIF9EVl9NMTE5fXtcKlxia21rZW5kIF9EVl9NMTIxfQ0Ke1wqXGJrbWtlbmQgX0RWX00xMjJ9e1wqXGJrbWtlbmQgX0RWX00xMjV9e1wqXGJrbWtlbmQgX0RWX00xMjZ9e1wqXGJrbWtlbmQgX0RWX00xMjh9e1wqXGJrbWtlbmQgX0RWX00xMzJ9e1wqXGJrbWtlbmQgX0RWX00xMzN9e1wqXGJrbWtlbmQgX0RWX00xMzR9e1wqXGJrbWtlbmQgX0RWX00xfXtcKlxia21rZW5kIF9EVl9NNn17XCpcYmtta2VuZCBfRFZfTTd9e1wqXGJrbWtlbmQgX0RWX004fXtcKlxia21rZW5kIF9EVl9NMTF9DQp7XCpcYmtta2VuZCBfRFZfTTEyfXtcKlxia21rZW5kIF9EVl9NMTN9e1wqXGJrbWtlbmQgX0RWX00xMzh9e1wqXGJrbWtlbmQgX0RWX00xMzl9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgRVhISUJJVCBDDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMTMzNzgwNiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBTSEFSRUQgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDExMzM3ODA2IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIE1BSU5URU5BTkNFDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMTMzNzgwNiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAxLlx0YWJ9fVxwYXJkIFxsdHJwYXJccWwgXGZpLTM2MFxsaTcyMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xsczExXHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDRcY29udGV4dHVhbHNwYWNlIHsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTEzMzc4MDYgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgU2hhcmVkIH17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMTMzNzgwNiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBQcmVtaXNlc317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxiXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDExMzM3ODA2IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBNYWludGVuYW5jZToNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMTMzNzgwNiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBhLlx0YWJ9fVxwYXJkIFxsdHJwYXINClxxbCBcZmktMzYwXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMxMVxpbHZsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NFxjb250ZXh0dWFsc3BhY2Uge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDExMzM3ODA2IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KVmVnZXRhdGl2ZSBtYW5hZ2VtZW50IGFuZA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDExMzM3ODA2IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGIuXHRhYn19XHBhcmQgXGx0cnBhclxxbCBcZmktMzYwXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xsczExXGlsdmwxXHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0XGNvbnRleHR1YWxzcGFjZSANCntccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMTMzNzgwNiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBXZWVkIGFiYXRlbWVudCBCcnVzaCBjb250cm9sIHRvIGluY1xoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGx1ZGUgY2xlYXJpbmcgYW5kIG1haW50ZW5hbmNlIG9mIHRyYW5zbWlzc2lvbiByaWdodHMgb2Ygd2F5LCBhcyBhcHBsaWNhYmxlDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTEzMzc4MDYgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgYy5cdGFifVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFNub3cgcmVtb3ZhbCwgYXMgbmVlZGVkDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTEzMzc4MDYgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgZC5cdGFifVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEVyb3Npb24gY29udHJvbCwgaW5jbHVkaW5nIGN1bHZlcnRzLCBhcyBuZWVkZWQNClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMTQ0MFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NFxjb250ZXh0dWFsc3BhY2Uge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDExMzM3ODA2IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTEzMzc4MDYgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgMi5cdGFifX1ccGFyZCBcbHRycGFyXHFsIFxmaS0zNjBcbGk3MjBccmkwXHNhNjQwXHNsMjUyXHNsbXVsdDENClx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczExXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDRcY29udGV4dHVhbHNwYWNlIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDExMzM3ODA2IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFNoYXJlZCB9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgDQpcYlxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMTMzNzgwNiBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDExMzM3ODA2IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBNYWludGVuYW5jZX17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxkYmNoXGFmMFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMTMzNzgwNiA6fXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTEzMzc4MDYgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTEzMzc4MDYgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgYS5cdGFifX1ccGFyZCBcbHRycGFyDQpccWwgXGZpLTM2MFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMTFcaWx2bDFcYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDRcY29udGV4dHVhbHNwYWNlIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMTMzNzgwNiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANClBlcmlvZGljIGluc3BlY3Rpb25zIGFuZCBhc3NvY2lhdGVkIHNlcnZpY2UgdG8gZWxlY3RyaWNhbCBjb25uZWN0aW9ucywgcmVsYXlzLFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBjb21tdW5pY2F0aW9ucyBhbmQgc3RydWN0dXJlcyBpZGVudGlmaWVkIGluIEV4aGliaXQgRA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDExMzM3ODA2IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIGIuXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDExMzM3ODA2IEFkaGVyZW5jZSB0byBtYW51ZmFjdHVyZXJccnF1b3RlIA0KcyByZWNvbW1lbmRlZCBtYWludGVuYW5jZSBwcm9jZWR1cmVzDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTEzMzc4MDYgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgYy5cdGFifX1ccGFyZCBcbHRycGFyXHFsIFxmaS0zNjBcbGkxNDQwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXGxzMTFcaWx2bDFccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDRcY29udGV4dHVhbHNwYWNlIA0Ke1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDExMzM3ODA2IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEdlbmVyYWwgaW5zcGVjdGlvbiBvZiBnYXRlcywgY3VsdmVydHMsIGFuZCBsaWdodGluZyANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMTMzNzgwNiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBkLlx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMTMzNzgwNiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBUb3JxdWVpbmd9e1xydGxjaFxmY3MxIFxhZjEgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTEzMzc4MDYgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIG9mIGVsZWN0cmljYWwgY29ubmVjdGlvbnMgYW5kIHN0cnVjdHVyZXMNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMTMzNzgwNiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBlLlx0YWJ9XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQ29vcmRpbmF0ZSB3aXRoIG90aGVyIENvLVRlbmFudHMgZlxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0Kb3IgZXZlbnRzIG9yIGNvbmRpdGlvbnMgdGhhdCB3b3VsZCBhZmZlY3QgdGhlIFByb2plY3RzDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTEzMzc4MDYgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgZi5cdGFifVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KUGVyaW9kaWMgdGVzdGluZyBhbmQgbWFpbnRlbmFuY2Ugb2YgYWxsIHJlbGF5cywgY29tbXVuaWNhdGlvbiwgYW5kIGNvbnRyb2wgc3lzdGVtcyByZXF1aXJlZCBmb3IgcGxhbnQgb3BlcmF0aW9uIA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDExMzM3ODA2IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGcuXHRhYn1caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBNYWludGVuYW5jZSBvZiBjb21tdW5pY2F0aW9uIGFuZCBiYWNrdXAgcG93ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTEzMzc4MDYgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTEzMzc4MDYgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgaC5cdGFifX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTEzMzc4MDYgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpQcm92aWRpbmcgdGhlIENvLVRlbmFudHMgd2l0aCBhbGwgbmVjZXNzYXJcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCB5IGV2aWRlbmNlIHJlZ2FyZGluZyBtYWludGVuYW5jZSBhbmQgdGVzdGluZyBhY3Rpdml0aWVzIGNvbmR1Y3RlZCB0byBkZW1vbnN0cmF0ZSBjb21wbGlhbmNlIHdpdGggTkVSQyBHZW5lcmF0b3IgT3duZXIgKEdPKSBhbmQgR2VuZXJhdG9yIE9wZXJhdG9yIChHT1ApIHJlcXVpcmVtZW50cy59e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTEzMzc4MDYgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTEzMzc4MDYgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgaS5cdGFifX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTEzMzc4MDYgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpNYWludGFpbiBhY2Nlc3Mgcm9hZHMgbmVjZXNzYXJ5IGZvciB0aGUgU2hhcmVkIFByZW1pc2VzIGFuZCBhY2Nlc3NpbmcgU2hhcmVkIEZhY2lsaXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDExMzM3ODA2IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDExMzM3ODA2IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGouXHRhYn19e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDExMzM3ODA2IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIERyXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQplc3Npbmcgb2Ygcm9hZHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDExMzM3ODA2IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDExMzM3ODA2IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGsuXHRhYn19e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDExMzM3ODA2IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFNub3cgcmVtb3ZhbCwgYXMgbmVlZGVkfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDExMzM3ODA2IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDExMzM3ODA2IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGwuXHRhYn19e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDExMzM3ODA2IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KRXJvc2lvbiBjb250cm9sLCBpbmNsdWRpbmcgY3VsdmVydHMsIGFzIG5lZWRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTEzMzc4MDYgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTEzMzc4MDYgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgbS5cdGFifX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTEzMzc4MDYgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpNYWludGFpbiBzdG9ybXdhdGVyIGNvbnRyb2wgbWVhc3VyZXMsIGluY2x1ZGluZyBkcnkgcG9uZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTEzMzc4MDYgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTEzMzc4MDYgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgbi5cdGFifX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTEzMzc4MDYgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpNYWludGFpbiBhbGwgTyZNIEZhY2lsaXRpZXMgdG8gaW5jbHVkZSBhbGwgYXNzb2NpYXRlZCBtZWNoYW5pY2FsLCBlbGVjdHJpY2FsLCBhbmQgcGx1bWJpbmcgKGkuZS4gc2VwdGljIHN5c3RlbSBhXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgbmQgSFZBQyl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDExMzM3ODA2IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMjM0XHFsIFxsaTE0NDBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxmYWF1dG9ccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDRcY29udGV4dHVhbHNwYWNlIFxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxhZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcZmFhdXRvXHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxhZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTQyNTI5MzggXHNlY3QgfVxzZWN0ZCBcbHRyc2VjdFxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVxzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDE0MjkxOTQ0XHNmdG5iaiB7XGhlYWRlcmYgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhcg0KXHRxY1x0eDQ2ODBcdHFyXHR4OTM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxhZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDI2MzYzNDIgDQpccGFyIH19XHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxhZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIHtcKlxia21rZW5kIF9IbGs0MDA5OTczOX0NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCB7XCpcYmtta3N0YXJ0IF9IbGs0MDA5OTc1Nn0NClxwYXIgfVxwYXJkIFxsdHJwYXJccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgRVhISUJJVCBEDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBERVNDUklQVElPTiBPRiBTSEFSRUR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDAxMDA0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgRkFDSUxJVElFU317XHJ0bGNoXGZjczEgXGFmMSANClxsdHJjaFxmY3MwIFxiXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiB7XCpcYmtta2VuZCBfSGxrNDAwOTk3NTZ9DQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxmaS0zNjBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMzIxMjYyMSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANClNoYXJlZCBGYWNpbGl0aWVzIHRvIGJlIG93bmVkIGFuZCB1c2VkIGJ5IH17XHJ0bGNoXGZjczEgXGFiXGFmMSBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1MzI0ODY1IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGFsbCBDby1UZW5hbnRzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDMyMTI2MjEgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgOn17DQpccnRsY2hcZmNzMSBcYWJcYWYxIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDUzMjQ4NjUgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZjNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCB7XGZpZWxke1wqXGZsZGluc3QgU1lNQk9MIDE4MyBcXGYgIlN5bWJvbCIgXFxzIDEyfXtcZmxkcnNsdFxmM1xmczI0fX19e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDU5Nzk4NTcgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTMyNDg2NSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBTfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgdWJzdGF0aW9uIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KZGVhZC1lbmQgc3RydWN0dXJlIHdoZXJlIHRoZSBBRVAgbGluZSB0ZXJtaW5hdGVzLCBhcyB3ZWxsIGFzIHRoZSBvdGhlciBsaW5lIGVxdWlwbWVudCBpbmNsdWRpbmcgdGhlIGp1bXBlcnMsIE9QR1cgc3BsaWNlIGVuY2xvc3VyXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgZSwgc3VyZ2UgYXJyZXN0ZXJzLCBDVlR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIA0KXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHMsIG1vdG9yIG9wZXJhdGVkIGRpc2Nvbm5lY3Qgc3dpdGNoLCBhbmQgY2lyY3VpdCBicmVha2VyLiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBUaGlzIGluY2x1ZGVzIHRoZSBjb25kdWl0IGFuZCBjYWJsaW5nIHRvIHRoaXMgZXF1aXBtZW50Ln17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZjNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCB7XGZpZWxke1wqXGZsZGluc3QgU1lNQk9MIDE4MyBcXGYgIlN5bWJvbCIgXFxzIDEyfXtcZmxkcnNsdFxmM1xmczI0fX19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGYzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXHRhYiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFRoZSAzNDVrViBtYWluIG92ZXJoZWFkIGJ1c3dvcmssIGluY2x1ZGluZyB0aGUgc3RlZWwgc3RydWN0dXJlcyBpbnN1bGF0b3JzIGFuZCBmb3VuZGF0aW9ucywgYmV0d2VlbiB0aGUgc3Vic3RhdGlvblxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBzaWRlIHRlcm1pbmFscyBvZiB0aGUgbGluZSBjaXJjdWl0IGJyZWFrZXIgUENCIA0Ke1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjYxOX0zNDV7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjYxOX0tQSB1cCB0byB0aGUgbGluZSBzaWRlIHRlcm1pfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBuYWxzIG9mIHRoZSBtb3RvciBvcGVyYXRlZCBkaXNjb25uZWN0IHN3aXRjaGVzIG9mIGVhY2ggcHJvamVjdCwgU1cgDQp7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNjIwfTM0NXtcKlxia21rZW5kIERvY1hUZXh0UmVmNjIwfS17XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNjE3fTF7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjYxN30gdGhyb3VnaCBTVyB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNjIxfTM0NXtcKlxia21rZW5kIERvY1hUZXh0UmVmNjIxfS17XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNjE4fTUufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIHtcKlxia21rZW5kIERvY1hUZXh0UmVmNjE4fVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpUaGUgbW90b3Igb3BlcmF0ZWQgZGlzY29ubmVjdCBzd2l0Y2gge1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjYyMn0zNDV7XCpcYmtta2VuZCBEb2NYVGV4dFJlZjYyMn0tQiBhbmQgYWxsIGl0cyBhc3NvY2lhdGVkIGVxdWlwbWVudCwgY29uZHVpdCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBhbmQgY2FibGluZyBpcyBhIHNoYXJlZCBwaWVjZSBvZiBlcXVpcG1lbnQuIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IHtcZmllbGR7XCpcZmxkaW5zdCBTWU1CT0wgMTgzIFxcZiAiU3ltYm9sIiBcXHMgMTJ9e1xmbGRyc2x0XGYzXGZzMjR9fX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZjNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgU3Vic3RhdGlvbiBjb21tb24gaXRlbXMgc3VjaCBhcyB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KdGhlIGFjY2VzcyByb2Fkcywgc3Vic3RhdGlvbiBwYWQsIGdyb3VuZCBncmlkLCBmZW5jZXMsIGdhdGVzLCBzaGllbGQgbWFzdHMgYW5kIHdpcmUsIHN1YnN0YXRpb24gbGlnaHRpbmcsIGFuZCB0aGUgc3Rvcm13YXRlciBjb250fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCnJvbCBtZWFzdXJlcyBpbmNsdWRpbmcgdGhlIGRyeSBwb25kIHN1cnJvdW5kaW5nIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHRoZSBmYWNpbGl0eS4NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IHtcZmllbGR7XCpcZmxkaW5zdCBTWU1CT0wgMTgzIFxcZiAiU3ltYm9sIiBcXHMgMTJ9e1xmbGRyc2x0XGYzXGZzMjR9fX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZjNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgVGhlIHByaW1hcnkgc3RhdGlvbiBzZXJ2aWNlIHRyYW5zZm9ybWVyIFNTMSBsb2NhdGVkIG9uIHRoZSB7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNjIzfTM0LjV9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIHtcKlxia21rZW5kIERvY1hUZXh0UmVmNjIzfQ0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAga1YgYnVzIG9mIHRoZSBIYXJkaW4gU29sYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgcHJvamVjdCBhbmQgaXRzIGFzc29jaWF0ZWQgZnVzaW5nLCBjYWJsaW5nLCBhbmQgY29uZHVpdC4gfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGYzXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTgge1xmaWVsZHtcKlxmbGRpbnN0IFNZTUJPTCAxODMgXFxmICJTeW1ib2wiIFxccyAxMn17XGZsZHJzbHRcZjNcZnMyNH19fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmM1xpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBUaGUgc3Vic3RhdGlvbiBjYWJsZSB0cmVuY2hlcyBhbmQgdGhlIGJhY2t1cCBwb3dlciBhbmQgdGVsZWNvbSBkZW1hcmNhdGlvbiBhcmVhIHdpdGggaXRzIGFcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBzc29jaWF0ZWQgZmVuY2UsIGdhdGVzLCBlcXVpcG1lbnQsIGNvbmR1aXQgYW5kIGNhYmxpbmcuIH17XHJ0bGNoXGZjczEgXGFmMSANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZjNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTc4NTE2MCB7XGZpZWxke1wqXGZsZGluc3QgU1lNQk9MIDE4MyBcXGYgIlN5bWJvbCIgXFxzIDEyfXtcZmxkcnNsdFxmM1xmczI0fX19e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDExMzM3ODA2IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBUaGUgc3Vic3RhdGlvbiBjb250cn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpvbCBlbmNsb3N1cmVzIGFuZCBhbGwgYXNzb2NpYXRlZCBlcXVpcG1lbnQsIGV4Y2VwdCBmb3IgdGhlIHByb2plY3Qgc3BlY2lmaWMgcmVsYXkgcGFuZWxzICYgZGV2aWNlcy59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTc4NTE2MCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgVGhlIHBhbmVscyBhbmQgcmVsYXlpbmcgJiBjb21tdW5pY2F0aW9uIGRldmljZXMgZm9yIHRoZSAzNDVrViBsaW5lLCBQQ0Ige1wqXGJrbWtzdGFydCBEb2NYVGV4dFJlZjYyNH0zNDUNCntcKlxia21rZW5kIERvY1hUZXh0UmVmNjI0fS1caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBBIGxpbmUgYnJlYWtlciBhbmQgMzQ1a1YgbWFpbiBidXMgcHJvdGVjdGlvbiBhcmUgdG8gYmUgc2hhcmVkLn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1Nzg1MTYwIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBUaGlzIGluY2x1ZGVzIHR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgaGUgYXNzb2NpYXRlZCBjYWJsZXMsIGNvbmR1aXRzLCBhbmQgdHJlbmNoZXMgdXNlZCB0byBwcm90ZWN0IHRoZSBsaW5lLCBsaW5lIGJyZWFrZXIsIGFuZCBtYWluIGJ1cy4gfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMyMzQgXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZjNcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxsb2NoXGFmM1xkYmNoXGFmMVxoaWNoXGYzIFwnYjdcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczIzNFxxbCBcZmktMzYwXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczQxXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDRcY29udGV4dHVhbHNwYWNlIFxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGFmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEFsbCBlcXVpcG1lbnQgYW5kIGNhYmxpbmcgYXNzb2NpYXRlZCB3aXRoIHRoZSBTb2xhciBGYXJtIE1hbmFnZW1lbnQgU3lzdGVtLn17DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxjczEwM1xzdXBlclxpbnNyc2lkMTYxMzE1NDcgXGNoZnRuIHtcZm9vdG5vdGUgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHMzOFxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMVxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyMFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxjczEwM1xzdXBlclxpbnNyc2lkMjYzNjM0MiBcY2hmdG4gfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjYzNjM0MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgU317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMjYzNjM0MlxjaGFycnNpZDE2MTMxNTQ3IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHViamVjdCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCB0byBmdXJ0aGVyIHJldmlldyBhbmQgYWRqdXN0bWVudCBiYXNlZCBvbiBmdXR1cmUgc2l0ZSBkZXNpZ24ufX19e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQpccGFyIH1ccGFyZCBcbHRycGFyXHMyMzRccWwgXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0XGNvbnRleHR1YWxzcGFjZSB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMjM0IFxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGYzXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjNcZGJjaFxhZjFcaGljaFxmMyBcJ2I3XHRhYn19XHBhcmQgXGx0cnBhcg0KXHMyMzRccWwgXGZpLTM2MFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOFxhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0XGNvbnRleHR1YWxzcGFjZSB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFN1YmplY3R9e1xydGxjaFxmY3MxIFxhZjEgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMzIxMjYyMSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgdG8gfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMzIwMjQ4NSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBTZWN0aW9uIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTMyMDI0ODUgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIFJFRiBfUmVmNTUyMTcwNTIgXFx3IFxcaCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTMyMDI0ODUgDQp7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzUwMDM1MDAzMjAwMzEwMDM3MDAzMDAwMzUwMDMyMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNzk0MjYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDIuNihhKX19fVxzZWN0ZCBcbHRyc2VjdA0KXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTQyOTE5NDRcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgLCB0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMTMzNzgwNiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCmhlIE8mTSBGYWNpbGl0aWVzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgLn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTEzMzc4MDYgXHNlY3QgfVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtcZm9vdGVyciBcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXINClxzMzVccWMgXGxpMFxyaTBcd2lkY3RscGFyXHRxY1x0eDQ2ODBcdHFyXHR4OTM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0Ke1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjYzNjM0MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgUEFHRSAgIFxcKiBNRVJHRUZPUk1BVCB9fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQxMDQ5NzU1NyBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAzfX19XHNlY3RkIFxsdHJzZWN0DQpcbGluZXgwXGVuZG5oZXJlXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjYzNjM0MiANClxwYXIgfX17XGhlYWRlcmYgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHFyIFxsaTBccmkwXHdpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxhZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcZnMxNlxpbnNyc2lkMjYzNjM0MlxjaGFycnNpZDM0OTQ2MDAgDQpccGFyIH19e1xmb290ZXJmIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjYzNjM0MiANClxwYXIgfX1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxmaS0zNjBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFjIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgRVhISUJJVCBFDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIE1FTU9SQU5EVU0gT0Z9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcdWxcaW5zcnNpZDE0MjkxOTQ0IFxsaW5lIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQVNTSUdOTUVOVCwgQ08tVEVOQU5DWSwgQU5EIFNIQVJFRCBGQUNJTElUSUVTIEFHUkVFTUVOVA0KXHBhciB9XHBhcmQgXGx0cnBhclxxaiBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ0MDY4MTE1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDA2ODExNSANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgVGhpcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGNhcHNcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KTUVNT1JBTkRVTSBPRiBBc3NpZ25tZW50LCBDby1UZW5hbmN5LCBhbmQgU2hhcmVkIEZhY2lsaXRpZXMgQWdyZWVtZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgICh0aGlzXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQwNjgxMTUgDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAifXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgTWVtb3JhbmR1bX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQwNjgxMTUgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgKSBpcyBtYWRlIGFzIG9mIHRoZSBfX18gZGF5IG9mIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQwNjgxMTUgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgRGVjZW1iZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkODAxMjkxOCANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICwgMjB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0MDY4MTE1IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDIwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgLCBieSBhbmQgYW1vbmcgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGJcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEhBUkRJTiBTT0xBUiBFTkVSR1kgTExDfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgLCBhIERlbGF3YXJlIGxpbWl0ZWQgbGlhYmlsaXR5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDIwMDAzNyBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBjb21wYW55fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDA2ODExNSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQ1NTIzODI0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0Kd2l0aCBhbiBhZGRyZXNzIG9mIGMvbyBEb21pbmlvbiBTb2xhciBQcm9qZWN0cyBWSUksIEluYy4sIDEyMCBUcmVkZWdhciBTdHJlZXQsIFJpY2htb25kLCBWQSAyMzIxOSwgQXR0bjogRW1pbCBBdnJhbSwgVmljXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgZSBQcmVzaWRlbnQgLSBCdXNpbmVzcyBEZXZlbG9wbWVudCAoIn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQ1NTIzODI0IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgSGFyZGluIFNvbGFyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDU1MjM4MjQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIiksfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxiXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBIQVJESU4gU09MQVIgRU5FUkdZIElJIExMQ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICwgYSBEZWxhd2FyZSBsaW1pdGVkIGxpYWJpbGl0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQwNjgxMTUgDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgY29tcGFueSwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDU1MjM4MjQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgd2l0aCBhbiBhZGRyZXNzIG9mIDEgUy4gV2Fja2VyIERyaXZlLCBTdWl0ZSAxODAwLCBDaGljYWdvLCBJbGxpbm9pcyA2MDYwNn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQyMDAwMzcgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgKCJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkMjAwMDM3IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KSGFyZGluIFNvbGFyIElJfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDIwMDAzNyBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAiKSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgYW5kIH17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCANClxiXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBIQVJESU4gU09MQVIgRU5FUkdZIElJSSBMTEN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAsIGEgRGVsYXdhclxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGUgbGltaXRlZCBsaWFiaWxpdHkgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkMjAwMDM3IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGNvbXBhbnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0MDY4MTE1IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDU1MjM4MjQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQp3aXRoIGFuIGFkZHJlc3Mgb2YgMSBTLiBXYWNrZXIgRHJpdmUsIFN1aXRlIDE4MDAsIENoaWNhZ28sIElsbGlub2lzIDYwNjA2fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDIwMDAzNyBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgKCJ9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkMjAwMDM3IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgSGFyZGluIFNvbGFyIElJSX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQyMDAwMzcgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIiwgY29sbGVjdGl2ZWx5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQogd2l0aCBIYXJkaW4gU29sYXIsIEhhcmRpbiBTb2xhciBJSSwgYW5kIEhhcmRpbiBTb2xhciBJSUksIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQyMDAwMzcgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgdGhlICJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkMjAwMDM3IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIENvLVRlbmFudHMNCn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQyMDAwMzcgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIiBhbmR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgZWFjaCBpbmRpdmlkdWFsbHksIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDIwMDAzNyBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBhICJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkMjAwMDM3IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQyMDAwMzcgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQoiKSwgYW5kfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgSFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEFSRElOIFNPTEFSIEVORVJHWSBMTEN9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQxNTY4MzY3MiAsfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDE3MzIyNTQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KYSBEZWxhd2FyZSBsaW1pdGVkIGxpYWJpbGl0eSBjb21wYW55fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDA2ODExNSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQ1NTIzODI0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0Kd2l0aCBhbiBhZGRyZXNzIG9mIGMvbyBEb21pbmlvbiBTb2xhciBQcm9qZWN0cyBWSUksIEluYy4sIDEyMCBUcmVkZWdhciBTdHJlZXQsIFJpY2htb25kLCBWQSAyMzIxOSwgQXR0bjogRW1pbCBBdnJhbSwgVmljZSBQcmVzaWRlbnQgLSBCdXNpbmVzcyBEZXZlbG9wbWVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQwNjgxMTUgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQosIGFzIENvLVRlbmFuY3kgTWFuYWdlciAoaW4gc3VjaCBjYXBhY2l0XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgXGhpY2hcZjAgeSwgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQ1NTIzODI0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIENvLVRlbmFuY3kgTWFuYWdlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQwNjgxMTUgDQpcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0XGxvY2hcZjAgKSwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgd2hpY2ggcGFydGllcyBoZXJlYnkgYWdyZWUgYXMgZm9sbG93czp9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkODAxMjkxOCANClxwYXIgfVxwYXJkIFxsdHJwYXJccWogXGZpLTcyMFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQ0MDY4MTE1IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAxLlx0YWIgQ28tVGVufXtccnRsY2hcZmNzMSBcYWYxIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkMTI4MDI5MTAgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgYW50cyBhbmQgQ28tVGVuYW5jeSBNYW5hZ2VyIGhhdmUgZW50ZXJlZCBpbnRvIHRoYXQgY2VydGFpbiBBc3NpZ25tZW50LCBDby1UZW5hbmN5LCBhbmQgU2hhcmVkIEZhY2lsaXRpZXMgQWdyZWVtZW50LCBkYXRlZCBhcyBvZiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ0MDY4MTE1IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgRGVjZW1iZXIgX19ffXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDEyODAyOTEwIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICwgMjB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ0MDY4MTE1IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDIwIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDEyODAyOTEwIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICh0aGUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDA2ODExNSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAifXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDEyMDIzMjAxIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEFncmVlbWVudH17DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDA2ODExNSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAifXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDEyNDE4Mjk5IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICkgKGN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkNDAxMDA0NCANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGFwaXRhbGl6ZWQgdGVybVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHMgdXNlZCBpbiB0aGlzIE1lbW9yYW5kdW0gYnV0IG5vdCBvdGhlcndpc2UgZGVmaW5lZCBoZXJlaW4gc2hhbGwgaGF2ZSB0aGUgbX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQyMzEwMTI4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KZWFuaW5ncyBzZXQgZm9ydGggaW4gdGhlIEFncmVlbWVudCkuDQpccGFyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDIuXHRhYiBQdXJzdWFudCB0byB0aGUgQWdyZWVtZW50LCB0aGUgQ28tVGVuYW50cywgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDA2ODExNSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBpZiBhbmQgdG8gdGhlIGV4dGVudCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkMjMxMDEyOCANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGJlaW5nIHRoZSBob2xkZXJzIGFuZCBvd25lcnMgb2YgY2VydGFpbiBTaGFyZWQgRmFjaWxpdGllcyAoYXMgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDA2ODExNSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBkZWZpbmVkIGluIHRoZSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBBZ3JlZW1lbnR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQ5MzE3ODEgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQopLCB3aWxsIGFzc2lnbiB0byB0aGUgb3RoZXIgQ28tVGVuYW50cywgYW5kIHRoZSBvdGhlciBDby1UZW5hbnRzIHdpbGwgYWNjZXB0IGFuZCBhc3N1bWUgZnJvbSBzdWNoIGFzc2lnbmluZyBDby1UZW5hbnQsIGNlcnRhaW4gaW50ZXJlc3RzIGluIHRoZSBTaGFyZWQgRmFjaWxpdGllcywgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZSB0ZXJtcyBhbmQgY29uZGl0aW9ucyBjb250YWluZWQgaW4gdGhlIEFncmVlbWVudC4gIFRoZSBwcm9wZXJ0DQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCB5IG93bmVkIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDQwNjgxMTUgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgYW5kL29yIGxlYXNlZCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkOTMxNzgxIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KYnkgZWFjaCBvZiB0aGUgQ28tVGVuYW50cyBhcyBvZiB0aGUgZGF0ZSBoZXJlb2YgdGhhdCBpcyBlbmN1bWJlcmVkIGJ5IHRoZSBBZ3JlZW1lbnQgaXMgbGVnYWxseSBkZXNjcmliZWQgb24gfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDkxMTAwODEgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgRXhoaWJpdCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDQwNjgxMTUgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgMX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQ3NzM4Mzc3IC59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkOTExMDA4MSANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGZpLTcyMFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQ0MDY4MTE1IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDkxMTAwODEgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgMy5cdGFiIA0KUHVyc3VhbnQgdG8gdGhlIEFncmVlbWVudCwgQ28tVGVuYW50cyB3aWxsIGVuZ2FnZSBDby1UZW5hbmN5IE1hbmFnZXIgdG8gb3BlcmF0ZSBhbmQgbWFpbnRhaW4gdGhlIFNoYXJlZH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQ4MzUwOTA4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBGYWNpbGl0aVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KZXMsIGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgdGVybXMgYW5kIGNvbmRpdGlvbnMgY29udGFpbmVkIGluIHRoZSBBZ3JlZW1lbnQuDQpccGFyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDQuXHRhYiBUaGUgdGVybSBvZiB0aGUgQWdyZWVtZW50IGNvbW1lbmNlcyBvbiB0aGUgRWZmZWN0aXZlIERhdGUgb2YgdGhlIEFncmVlbWVudCBhbmQgY29udGludWVzIHVudGlsIHRoZSBlYXJsaWVyIHRvIG9jY3VyIG9mIHtcKlxia21rc3RhcnQgRG9jWFRleHRSZWY2Mjd9KGkpe1wqXGJrbWtlbmQgRG9jWFRleHRSZWY2Mjd9IGEgc2luZ2xlIENvLVRlbmFudCBvciBTZWN1cmVkIFBhcnR5fXsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkODEyMTQzIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBiZWNvbWluZyB0aGUgb3duZXJcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCiBvZiB0aGUgZW50aXJlIG93bmVyc2hpcCBpbnRlcmVzdCBpbiBhbGwgb2YgdGhlIFNoYXJlZCBGYWNpbGl0aWVzIG9yIChpaSkgdGhlIG11dHVhbCBhZ3JlZW1lbnQgb2YgYWxsIHRoZSBDby1UZW5hbnRzIHdpdGggdGhlIGNvbnNlbnQgb2YgdGhlIHRoZW4gZXhpc3RpbmcgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDc0MTc3MjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpTZWN1cmVkIFBhcnRpZXN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkMzc1NTk1MCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAsIGVhY2ggaW4gYWNjb3JkYW5jZSB3aXRoIHRoZSB0ZXJtcyBhbmQgY29uZGl0aW9ucyBjb250YWluZWQgaW4gdGhlIEFncmVlbWVudC4NClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDE1NjcxOTY4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDUuXHRhYiBJbiB0XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgaGUgZXZlbnQgb2YgYW55IGNvbmZsaWN0IGJldHdlZW4gdGhlIHRlcm1zIG9mIHRoaXMgTWVtb3JhbmR1bSBhbmQgdGhlIEFncmVlbWVudCwgdGhlIHRlcm1zIG9mIHRoZSBBZ3JlZW1lbnQgc2hhbGwgcHJldmFpbC4NCg0KXHBhciBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCA2Llx0YWIgVGhpcyBNZW1vcmFuZHVtIG1heSBiZSBleGVjdXRlZCBpbiBjb3VudGVycGFydHMsIGFuZCBhbGwgY291bnRlcnBhcnRzIHRvZ2V0aGVyIHNoYWx9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkNzczNTQxMyBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBsIGJlIGNvbnN0cnVlZCBhcyBvbmUgZG9jdW1lbnQufXtccnRsY2hcZmNzMSANClxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkNTcxMjM4NyANClxwYXIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgNy5cdGFiIFRoZSBjb3ZlbmFudFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHMgb2YgdGhlIENvLVRlbmFudHMgbWFkZSBpbiB0aGUgQWdyZWVtZW50IHNoYWxsIGJlIGRlZW1lZCB0byBiZSBjb3ZlbmFudHMgcnVubmluZyB3aXRoIGFuZCBiaW5kaW5nIHVwb24gdGhlIGxhbmQgcHVyc3VhbnQgdG8gYXBwbGljYWJsZSBsYXcgZm9yIHRoZSBkdXJhdGlvbiBvZiB0aGUgVGVybS59ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDQwNjgxMTUgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFjIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDQwNjgxMTUge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQ1NzEyMzg3IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcYlxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1NzEyMzg3IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFtTSUdOQVRVUkVTIE9OIE5FWFQgUEFHRV0NClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDU3MTIzODcgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDI2MzM3MjEgXHNlY3QgfVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtcZm9vdGVyciBcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJcczM1XHFjIFxsaTBccmkwXHdpZGN0bHBhcg0KXHRxY1x0eDQ2ODBcdHFyXHR4OTM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQyNjM2MzQyIA0KXHBhciB9fVxwYXJkXHBsYWluIFxsdHJwYXJccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkNDA2ODExNSBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxhZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBJTiBXSVRORVNTIFdIRVJFT0YsIENvLVRlbmFudHMgYW5kIENvLVRlbmFuY3kgTWFuYWdlciBoYXYNClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGUgZXhlY3V0ZWQgdGhpcyBNZW1vcmFuZHVtIGFzIG9mIHRoZSBkYXkgYW5kIHllYXIgZmlyc3QgYWJvdmUgd3JpdHRlbi59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkMTYwNzQ5IA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGk0MzIwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcaHlwaHBhcjBcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjQzMjBcaXRhcDBccGFyYXJzaWQ0MDY4MTE1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQ0MDY4MTE1IA0KXHBhciBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzXGxvY2hcZjAgXGhpY2hcZjAgSGFyZGluIFNvbGFyXCc5NA0KXHBhciANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBIQVJESU4gU09MQVIgRU5FUkdZIExMQ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDA2ODExNSANCg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBhIERlbGF3YXJlIGxpbWl0ZWQgbGlhYmlsaXR5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQyMDAwMzcgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgY29tcGFueSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDQwNjgxMTUgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQ4MDEyOTE4IA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcaHlwaHBhcjBcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ0MDY4MTE1IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDgwMTI5MTggDQpccGFyIFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEJ5On17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQ4MDEyOTE4IFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ0MDY4MTE1IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkODAxMjkxOCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDgwMTI5MTggXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIFx0YWIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgTmFtZTp9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkODAxMjkxOCBcdGFiIFx0YWIgXHRhYiBcdGFiIFx0YWIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQ0MDY4MTE1IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDgwMTI5MTggDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQ4MDEyOTE4IFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFRpdGxlOn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQ4MDEyOTE4IFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDQwNjgxMTUgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkODAxMjkxOCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDgwMTI5MTggDQpccGFyIH1ccGFyZCBcbHRycGFyXHFjIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx0eDI4ODBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ0MDY4MTE1IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkMjM4MTY1NSANClxwYXIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQUNLTk9XTEVER0VNRU5UfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXGY0M1xpbnNyc2lkNDA2ODExNVxjaGFycnNpZDIzODE2NTUgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDQwNjgxMTUge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTNcaW5zcnNpZDQwNjgxMTUgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQ09NTU9OV0VBTFRIIE9GIFZJUkdJTklBfXtccnRsY2hcZmNzMSBcYWYxIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTNcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQxMTc0MDQ1NiANClxwYXIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQ0lUWX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctM1xpbnNyc2lkNDA2ODExNSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgT1xoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEYgUklDSE1PTkR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTNcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQxMTc0MDQ1NiANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICwgdG8td2l0On17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctM1xpbnNyc2lkNDA2ODExNSANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dy0zXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkMTE3NDA0NTYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctM1xpbnNyc2lkNDA2ODExNSBcdGFiIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFRoZSBmb3JlZ29pbmcgaW5zdHJ1bWVudH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctM1xpbnNyc2lkNDA2ODExNVxjaGFycnNpZDExNzQwNDU2IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KIHdhcyBhY2tub3dsZWRnZWQgYmVmb3JlIG1lLCBpbiB0aGUgYWJvdmUganVyaXNkaWN0aW9uIHRoaXMgX19fX18gZGF5IG9mIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctM1xpbnNyc2lkNDA2ODExNSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBEZWNlbWJlcn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctM1xpbnNyc2lkNDA2ODExNVxjaGFycnNpZDExNzQwNDU2IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgLCAyMH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctM1xpbnNyc2lkNDA2ODExNSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAyMH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctM1xpbnNyc2lkNDA2ODExNVxjaGFycnNpZDExNzQwNDU2IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KLCBieSBfX19fX19fX19fX19fX19fX19fX18sIGFzIF9fX19fX19fX19fX19fXyBvZiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTNcaW5zcnNpZDQwNjgxMTUgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgSGFyZGluIFNvbGFyIEVuZXJneSBMTEN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTNcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQxMTc0MDQ1NiANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICwgYSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTNcaW5zcnNpZDQwNjgxMTUgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgRGVsYXdhcmUgbGltaXRlZCBsaWFiaWxpdHkgY29tcGFueX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctM1xpbnNyc2lkNDA2ODExNVxjaGFycnNpZDExNzQwNDU2IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgLCBmb3IgYW5kIG9uXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIGJlaGFsZiBvZiB0aGUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dy0zXGluc3JzaWQ0MDY4MTE1IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGNvbXBhbnl9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHctM1xpbnNyc2lkNDA2ODExNVxjaGFycnNpZDExNzQwNDU2IC59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTNcaW5zcnNpZDQwNjgxMTUgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctM1xpbnNyc2lkNDA2ODExNVxjaGFycnNpZDExNzQwNDU2IA0KXHBhciBcdGFiIA0KXHBhciBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBbQUZGSVggU0VBTF1cdGFiIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctM1xpbnNyc2lkNDA2ODExNSBcdGFiIFx0YWIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dy0zXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkMTE3NDA0NTYgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18NClxwYXIgXHRhYiBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctM1xpbnNyc2lkNDA2ODExNSBcdGFiIFx0YWIgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTNcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQxMTc0MDQ1NiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBOb3RhcnkgUHVibGljDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctM1xpbnNyc2lkNDA2ODExNSANClxwYXIgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctM1xpbnNyc2lkNDA2ODExNVxjaGFycnNpZDExNzQwNDU2IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIE15IENvbW1pc3Npb24gZXhwaXJlczogX19fX19fX19fX19fX19fX19fDQpccGFyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIE5vdGFyeSBSZWdpc3RyYXRpb24gTm8uICBfX19fX19fX19fX19fX19fX19fDQpccGFyIA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ0MDY4MTE1IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDgwOTM2MiANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDEyODAyOTEwIFxwYWdlIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQxMjAyMzIwMSANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpNDMyMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGh5cGhwYXIwXGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW40MzIwXGl0YXAwXHBhcmFyc2lkNDA2ODExNSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkNDA2ODExNSANClxwYXIgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M1xsb2NoXGYwIFxoaWNoXGYwIEhhcmRpbiBTb2xhciBJSVwnOTQNClxwYXIgDQpccGFyIA0KXHBhciBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBIfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBBUkRJTiBTT0xBUiBFTkVSR1kgSUkgTExDfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgLCB9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQwNjgxMTUgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGEgRGVsYXdhcmUgbFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGltaXRlZCBsaWFiaWxpdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0MDY4MTE1IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBjb21wYW55fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDA2ODExNSANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDgwMTI5MTggDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxoeXBocGFyMFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDQwNjgxMTUge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkODAxMjkxOCANClxwYXIgXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIFx0YWIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQnk6fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDgwMTI5MTggXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDQwNjgxMTUgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQ4MDEyOTE4IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkODAxMjkxOCBcdGFiIFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBOYW1lOn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQ4MDEyOTE4IFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDQwNjgxMTUgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkODAxMjkxOCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDgwMTI5MTggXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIFx0YWIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgVGl0bGU6fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDgwMTI5MTggXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkNDA2ODExNSBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQ4MDEyOTE4IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkODAxMjkxOCANClxwYXIgfVxwYXJkIFxsdHJwYXJccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHR4Mjg4MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDQwNjgxMTUge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQyMzgxNjU1IA0KXHBhciBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBBQ0tOT1dMRURHRU1FTlR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcZjQzXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkMjM4MTY1NSANClxwYXIgfVxwYXJkIFxsdHJwYXJccWogXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkNDA2ODExNSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMzNcbGFuZ2ZlMjA1MlxkYmNoXGFmMTNcbGFuZ2ZlbnAyMDUyXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkMTAyMjM2OTMgXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIA0KU1RBVEUgT0YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAzM1xsYW5nZmUyMDUyXGRiY2hcYWYxM1xsYW5nZmVucDIwNTJcaW5zcnNpZDQwNjgxMTUgXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIElMTElOT0lTfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAzM1xsYW5nZmUyMDUyXGRiY2hcYWYxM1xsYW5nZmVucDIwNTJcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQxMDIyMzY5MyBcdGFiIFx0YWIgDQpcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgKVx0YWIgDQpccGFyIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDMzXGxhbmdmZTIwNTJcZGJjaFxhZjEzXGxhbmdmZW5wMjA1MlxpbnNyc2lkNDA2ODExNSBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgQ09VTlRZIE9GIENPT0t9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDMzXGxhbmdmZTIwNTJcZGJjaFxhZjEzXGxhbmdmZW5wMjA1MlxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDEwMjIzNjkzIFx0YWIgXHRhYiB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMzNcbGFuZ2ZlMjA1MlxkYmNoXGFmMTNcbGFuZ2ZlbnAyMDUyXGluc3JzaWQ0MDY4MTE1IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAzM1xsYW5nZmUyMDUyXGRiY2hcYWYxM1xsYW5nZmVucDIwNTJcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQxMDIyMzY5MyBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgKSBzcw0KXHBhciANClxwYXIgXHRhYiBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgVGhlIGZvcmVnb2luZyBpbnN0cnVtZW50IHdhcyBhY2tub3dsZWRnZWQgYmVmb3JlIG1lLCB0aGUgdW5kZXJzaWduZWQgbm90YXJ5IHB1YmxpYywgdGhpcyBfX19fXyBkYXkgb2YgRGVjZW1iZXJcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgDQosIDIwMjAsIGJ5IF9fX19fX19fX19fX19fX19fX19fX19fXywgdGhlIF9fX19fX19fX19fX19fX19fX19fX18gb2YgSGFyZGluIFNvbGFyIEVuZXJneSBJSSBMTEMsIGEgRGVsYXdhcmUgbGltaXRlZCBsaWFiaWxpdHkgY29tcGFueSwgb24gYmVoYWxmIG9mIHNhaWQgbGltaXRlZCBsaWFiaWxpdHkgY29tcGFueS4NClxwYXIgDQpccGFyIFx0YWIgXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIFtTRUFMXVx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiBfX19fX19fX19fX19fX19fX19fX19fX19fX19fX18NClxwYXIgXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgTm90YXJ5IFB1YmxpYw0KXHBhciBcdGFiIFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCBNeSBDb21caGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgbWlzc2lvbiBFeHBpcmVzOiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGxhbmcxMDMzXGxhbmdmZTIwNTJcZGJjaFxhZjEzXGxhbmdmZW5wMjA1MlxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDEwMjIzNjkzIFx0YWIgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcbGFuZzEwMzNcbGFuZ2ZlMjA1MlxkYmNoXGFmMTNcbGFuZ2ZlbnAyMDUyXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkMTAyMjM2OTMgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDQwNjgxMTUge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTNcaW5zcnNpZDQwNjgxMTUgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTQzMjBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxoeXBocGFyMFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNDMyMFxpdGFwMFxwYXJhcnNpZDQwNjgxMTUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDQwNjgxMTUgXHNlY3QgfVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIA0KXHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGk0MzIwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcaHlwaHBhcjBcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjQzMjBcaXRhcDBccGFyYXJzaWQ0MDY4MTE1IFxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGFmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkNDA2ODExNSANClxwYXIgDQpccGFyIFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTNcbG9jaFxmMCBcaGljaFxmMCBIYXJkaW4gU29sYXIgSUlJXCc5NA0KXHBhciANClxwYXIgfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBIQVJESU4gU09MQVIgRU5FUkdZIElJSSBMTEN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNDA2ODExNSANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgYSBEZWxhd2FyZSBsaW1pdGVkIGxpYWJpbGl0eSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkMjAwMDM3IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGNvbXBhbnl9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDQwNjgxMTUgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQ4MDEyOTE4IA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcaHlwaHBhcjBcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ0MDY4MTE1IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDgwMTI5MTggDQpccGFyIFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEJ5On17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQ4MDEyOTE4IFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ0MDY4MTE1IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkODAxMjkxOCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDgwMTI5MTggXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIFx0YWIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgTmFtZTp9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkODAxMjkxOCBcdGFiIFx0YWIgXHRhYiBcdGFiIFx0YWIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQ0MDY4MTE1IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDgwMTI5MTggDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQ4MDEyOTE4IFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFRpdGxlOn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQ4MDEyOTE4IFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDQwNjgxMTUgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkODAxMjkxOCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDgwMTI5MTggDQpccGFyIH1ccGFyZCBcbHRycGFyXHFjIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx0eDI4ODBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ0MDY4MTE1IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkMjM4MTY1NSANClxwYXIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQUNLTk9XTEVER0VNRU5UfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXGY0M1xpbnNyc2lkNDA2ODExNVxjaGFycnNpZDIzODE2NTUgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFqIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDQwNjgxMTUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDMzXGxhbmdmZTIwNTJcZGJjaFxhZjEzXGxhbmdmZW5wMjA1MlxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDEwMjIzNjkzIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCANClNUQVRFIE9GIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMzNcbGFuZ2ZlMjA1MlxkYmNoXGFmMTNcbGFuZ2ZlbnAyMDUyXGluc3JzaWQ0MDY4MTE1IFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCBJTExJTk9JU317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMzNcbGFuZ2ZlMjA1MlxkYmNoXGFmMTNcbGFuZ2ZlbnAyMDUyXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkMTAyMjM2OTMgXHRhYiBcdGFiIA0KXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIClcdGFiIA0KXHBhciANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAzM1xsYW5nZmUyMDUyXGRiY2hcYWYxM1xsYW5nZmVucDIwNTJcaW5zcnNpZDQwNjgxMTUgXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIENPVU5UWSBPRiBDT09LXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDMzXGxhbmdmZTIwNTJcZGJjaFxhZjEzXGxhbmdmZW5wMjA1MlxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDEwMjIzNjkzIFx0YWIgXHRhYiANClxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCApIHNzDQpccGFyIA0KXHBhciBcdGFiIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCBUaGUgZm9yZWdvaW5nIGluc3RydW1lbnQgXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIA0Kd2FzIGFja25vd2xlZGdlZCBiZWZvcmUgbWUsIHRoZSB1bmRlcnNpZ25lZCBub3RhcnkgcHVibGljLCB0aGlzIF9fX19fIGRheSBvZiBEZWNlbWJlciwgMjAyMCwgYnkgX19fX19fX19fX19fX19fX19fX19fX19fLCB0aGUgX19fX19fX19fX19fX19fX19fX19fXyBvZiBIYXJkaW4gU29sYXIgRW5lcmd5IElJfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDMzXGxhbmdmZTIwNTJcZGJjaFxhZjEzXGxhbmdmZW5wMjA1MlxpbnNyc2lkNDA2ODExNSBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgSX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMzNcbGFuZ2ZlMjA1MlxkYmNoXGFmMTNcbGFuZ2ZlbnAyMDUyXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkMTAyMjM2OTMgXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIA0KIExMQywgYSBEZWxhd2FyZSBsaW1pdGVkIGxpYWJpbGl0eSBjb21wYW55LCBvbiBiZWhhbGYgb2Ygc2FpZCBsaW1pdGVkIGxpYWJpbGl0eSBjXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIG9tcGFueS4NClxwYXIgDQpccGFyIFx0YWIgXGhpY2hcYWYwXGRiY2hcYWYxM1xsb2NoXGYwIFtTRUFMXVx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiBfX19fX19fX19fX19fX19fX19fX19fX19fX19fX18NClxwYXIgXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiBcaGljaFxhZjBcZGJjaFxhZjEzXGxvY2hcZjAgTm90YXJ5IFB1YmxpYw0KXHBhciBcdGFiIFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIFxoaWNoXGFmMFxkYmNoXGFmMTNcbG9jaFxmMCBNeSBDb21taXNzaW9uIEV4cGlyZXM6IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcbGFuZzEwMzNcbGFuZ2ZlMjA1MlxkYmNoXGFmMTNcbGFuZ2ZlbnAyMDUyXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkMTAyMjM2OTMgXHRhYiBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxsYW5nMTAzM1xsYW5nZmUyMDUyXGRiY2hcYWYxM1xsYW5nZmVucDIwNTJcaW5zcnNpZDQwNjgxMTUgDQpccGFyIA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ0MDY4MTE1IHtccnRsY2hcZmNzMSBcYWYxXGFmczIwIFxsdHJjaFxmY3MwIFxmczIwXGluc3JzaWQ0MDY4MTE1IFxzZWN0IH1cc2VjdGQgXGx0cnNlY3RcbGluZXgwXGVuZG5oZXJlXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiANCntcaGVhZGVyZiBcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJccXIgXGxpMFxyaTBcd2lkY3RscGFyXHRxY1x0eDQ2ODBcdHFyXHR4OTM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IFxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGFmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlxmczE2XGluc3JzaWQyNjM2MzQyXGNoYXJyc2lkMzQ5NDYwMCANClxwYXIgfX17XGZvb3RlcmYgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxhZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQyNjM2MzQyIA0KXHBhciB9fVxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkNDA2ODExNSBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjFcYWZzMjAgXGx0cmNoXGZjczAgXGZzMjBcaW5zcnNpZDQwNjgxMTUgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTQzMjBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxoeXBocGFyMFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNDMyMFxpdGFwMFxwYXJhcnNpZDQwNjgxMTUge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDQwNjgxMTUgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M1xsb2NoXGYwIFxoaWNoXGYwIENvLVRlbmFuY3kgTWFuYWdlclwnOTQNCg0KXHBhciANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBIQVJESU4gU09MQVIgRU5FUkdZIExMQ317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDA2ODExNSANCg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBhIERlbGF3YXJlIGxpbWl0ZWQgbGlhYmlsaXR5IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQyMDAwMzcgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgY29tcGFueSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDQwNjgxMTUgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQ4MDEyOTE4IA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcaHlwaHBhcjBcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ0MDY4MTE1IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDgwMTI5MTggDQpccGFyIFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEJ5On17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQ4MDEyOTE4IFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ0MDY4MTE1IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkODAxMjkxOCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDgwMTI5MTggXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIFx0YWIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgTmFtZTp9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkODAxMjkxOCBcdGFiIFx0YWIgXHRhYiBcdGFiIFx0YWIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQ0MDY4MTE1IFx0YWIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDgwMTI5MTggDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQ4MDEyOTE4IFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiBcdGFiIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFRpdGxlOn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQ4MDEyOTE4IFx0YWIgXHRhYiBcdGFiIFx0YWIgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDQwNjgxMTUgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkODAxMjkxOCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDgwMTI5MTggDQpccGFyIH1ccGFyZCBcbHRycGFyXHFjIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx0eDI4ODBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ0MDY4MTE1IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkMjM4MTY1NSANClxwYXIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQUNLTlxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIE9XTEVER0VNRU5UfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxiXGY0M1xpbnNyc2lkNDA2ODExNVxjaGFycnNpZDIzODE2NTUgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDQwNjgxMTUge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTNcaW5zcnNpZDQwNjgxMTUgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQ09NTU9OV0VBTFRIIE9GIFZJUkdJTklBfXtccnRsY2hcZmNzMSBcYWYxIA0KXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTNcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQxMTc0MDQ1NiANClxwYXIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQ0lUWX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctM1xpbnNyc2lkNDA2ODExNSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgT0YgUklDSE1PTkR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTNcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQxMTc0MDQ1NiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAsIHRvLXdpdDp9ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctM1xpbnNyc2lkNDA2ODExNSANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dy0zXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkMTE3NDA0NTYgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctM1xpbnNyc2lkNDA2ODExNSBcdGFiIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFRoZSBmb3JlZ29pbmcgaW5zdHJ1bWVudH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctM1xpbnNyc2lkNDA2ODExNVxjaGFycnNpZDExNzQwNDU2IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KIHdhcyBhY2tub3dsZWRnZWQgYmVmb3JlIG1lLCBpbiB0aGUgYWJvdmUganVyaXNkaWN0aW9uIHRoaXMgX19fX18gZGF5IG9mIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctM1xpbnNyc2lkNDA2ODExNSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBEZWNlbWJlcn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctM1xpbnNyc2lkNDA2ODExNVxjaGFycnNpZDExNzQwNDU2IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgLCAyMH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctM1xpbnNyc2lkNDA2ODExNSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAyMH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctM1xpbnNyc2lkNDA2ODExNVxjaGFycnNpZDExNzQwNDU2IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KLCBieSBfX19fX19fX19fX19fX19fX19fX18sIGFzIF9fX19fX19fX19fX19fXyBvZiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTNcaW5zcnNpZDQwNjgxMTUgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgSGFyZGluIFNvbGFyIEVuZXJneSBMTEN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTNcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQxMTc0MDQ1NiANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICwgYSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTNcaW5zcnNpZDQwNjgxMTUgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgRGVsXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgYXdhcmUgbGltaXRlZCBsaWFiaWxpdHkgY29tcGFueX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxleHBuZDBcZXhwbmR0dy0zXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkMTE3NDA0NTYgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgLCBmb3IgYW5kIG9uIGJlaGFsZiBvZiB0aGUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dy0zXGluc3JzaWQ0MDY4MTE1IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGNvbXBhbnl9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcZXhwbmQwXGV4cG5kdHctM1xpbnNyc2lkNDA2ODExNVxjaGFycnNpZDExNzQwNDU2IC59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTNcaW5zcnNpZDQwNjgxMTUgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctM1xpbnNyc2lkNDA2ODExNVxjaGFycnNpZDExNzQwNDU2IA0KXHBhciBcdGFiIA0KXHBhciBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBbQUZGSVggU0VBTF1cdGFiIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctM1xpbnNyc2lkNDA2ODExNSBcdGFiIFx0YWIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxleHBuZDBcZXhwbmR0dy0zXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkMTE3NDA0NTYgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18NClxwYXIgXHRhYiBcdGFiIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctM1xpbnNyc2lkNDA2ODExNSBcdGFiIFx0YWIgXHRhYiB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGV4cG5kMFxleHBuZHR3LTNcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQxMTc0MDQ1NiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBOb3RhcnkgUHVibGljDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctM1xpbnNyc2lkNDA2ODExNSANClxwYXIgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcZXhwbmQwXGV4cG5kdHctM1xpbnNyc2lkNDA2ODExNVxjaGFycnNpZDExNzQwNDU2IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIE15IENvbW1pc3Npb24gZXhwaXJlczogX19fX19fX19fX19fX19fX19fDQpccGFyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIE5vdGFyeSBSZWdpc3RyYXRpb24gTm8uICBfX19fX19fX19fX19fX19fX19ffXtccnRsY2hcZmNzMSBcYWYxXGFmczIwIFxsdHJjaFxmY3MwIFxmczIwXGluc3JzaWQ0MDY4MTE1IA0KXHBhciANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDA2ODExNSANClxwYXIgDQpccGFyIA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkNTAwNjY4OSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBQcmVwYXJlZCBieSBhbmQNClxwYXIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgYWZ0XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgZXIgcmVjb3JkYXRpb24sIHJldHVybiB0bzoNClxwYXIgDQpccGFyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEludmVuZXJneSBMTEMNClxwYXIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQXR0bjogIFR5cm9uZSBILiBUaG9tYXMsIEpyLn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDUwMDY2ODkgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDQwNjgxMTVcY2hhcnJzaWQ1MDA2Njg5IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIDEgU291dGggV2Fja2VyIERyaXZlLCBTdWl0ZSAxODAwDQpccGFyIH1ccGFyZCBcbHRycGFyXHFqIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDQwNjgxMTUge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQ0MDY4MTE1XGNoYXJyc2lkNTAwNjY4OSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBDaGljYWdvLCBJTCA2MDYwNlx0YWIgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGxhbmcxMDMzXGxhbmdmZTIwNTJcZGJjaFxhZjEzXGxhbmdmZW5wMjA1MlxpbnNyc2lkNDA2ODExNVxjaGFycnNpZDUwMDY2ODkgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTBccmkwXHNhNzIwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXHNlY3QgfVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIA0KXHBhcmRccGxhaW4gXGx0cnBhclxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxhZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgRXhoaWJpdCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQyNjQ2NjAxIA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgMX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgdG8gTWVtb3JhbmR1bSBvZiBBbWVuZGVkIGFuZCBSZXN0YXRlZCBBc3NpZ25tZW50LCBDby1UZW5hbmN5LCBhbmQgU2hhcmVkIEZhY2lsaXRpZXMgQWdyZWVtZW50DQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBMZWdhbCBEZXNjcmlwdGlvbnMgb2YgZWFjaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQ28tVGVuYW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDQgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgUHJvcGVydHl9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDQwMDYxMDhcY2hhcnJzaWQxMjQxODI5OSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFtERVNDUklQVElPTlMgVE8gQkUgQ09NUExFVEVEIFdIRU4gTUVNT1JBTkRVTSBJUyBFWEVDVVRFRF19e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcc2VjdCB9XHNlY3RkIFxsdHJzZWN0XGxpbmV4MFxlbmRuaGVyZVxzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xmb290ZXJyIA0KXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHMzNVxxYyBcbGkwXHJpMFx3aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMTZcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGFmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDI2MzYzNDIgDQpccGFyIH19XHBhcmRccGxhaW4gXGx0cnBhclxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCBccnRsY2hcZmNzMSBcYWYxXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcbG9jaFxhZjBcaGljaFxhZjBcZGJjaFxhZjFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNTkyNzI5IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEVYSElCSVQgRg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGJcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIE5FVCBSRVZFTlVFIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcYlx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBMT1NTRVMgQ0FMQ1VMQVRJT04gTUVUSE9ET0xPR1l9e1xydGxjaFxmY3MxIFxhZjEgDQpcbHRyY2hcZmNzMCBcYlx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0MjkxOTQ0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBOZXQgUmV2ZW51ZSBMb3NzIHBheW1lbnRzICh9e1xydGxjaFxmY3MxIA0KXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5M1xsb2NoXGYwIFxoaWNoXGYwIE5STCBQYXltZW50c1wnOTRcbG9jaFxmMCApIGR1cmluZyBhbnkgcGVyaW9kIG9mIHRpbWUgZm9yIHdoaWNoIHRoZXkgYXJlIHJlcXVpcn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI0MTgyOTkgDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBcaGljaFxmMCBlZCBoZXJldW5kZXIgKHRoZSBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ0MDEwMDQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIE5STCBQZXJpb1xoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIzMTAxMjggDQpcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0XGxvY2hcZjAgKSBzaGFsbCBlcXVhbCB0aGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDc4NzY5MDAgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHByb2R1Y3Qgb2YgDQp7XCpcYmtta3N0YXJ0IERvY1hUZXh0UmVmNjMxfShpKXtcKlxia21rZW5kIERvY1hUZXh0UmVmNjMxfSB0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBoZSBNV2ggb2YgZWxlY3RyaWNpdHkgdGhhdCB3b3VsZCBoYXZlIGJlZW4gcHJvZHVjZWQgYmFzZWQgb24gdGhlIGFjdHVhbCB9e1xydGxjaFxmY3MxIFxhZjEgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgcmVuZXdhYmxlIGVuZXJneSBtZWFzdXJlbWVudHMgZHVyaW5nIHRoZSBOUkwgUGVyaW9kLCBhbmQgKGlpKSB0aGUgcHJpY2Ugc3VjaCBlbGVjdHJpY2l0eSBjb3VsZCBoYXZlIGJlZW4gfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjQxODI5OSANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHNvbGQgYW5kIGRlbGl2ZXJlZCBpbiBQSk0gYnkgdGhlIENvLVRlbmFudCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCByZWNlaXZpbmcgc3VjaCBOUkwgUGF5bWVudCBhdCB0aGUgQ29tbW9kaXR5IFJlZmVyZW5jZSBQcmljZSBmb3IgZWxlY3RyaWNpdHkgZHVyaW5nIHN1Y2ggTlJMIFBlcmlvZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ1NzA1NTQ1IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICwgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgZ3Jvc3NlZCB1cCBvbiBhbiBhZnRlci10YXggYmFzaXMgYXNzdW1pbmcgdGhlIGhpZ2hlc3QgbWFyZ2luYWwgZmVkZXJhbCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBpbmNvbWUgdGF4IHJhdGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQphbmQgU3RhdGUgb2YgT2hpbyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBDb21tZXJjaWFsIEFjdGl2aXRpZXMgVGF4IHJhdGUsIGluIGVhY2ggY2FzZX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB0aGVuIGkNClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIG4gZWZmZWN0IChhbmQgbm8gbG9jYWwsIGZvcmVpZ24gb3Igb317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgdGhlciBpbmNvbWUgdGF4ZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCApfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgLn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KICBGdXJ0aGVyLCBpZiB0aGUgQ28tVGVuYW50IGlzIGVsaWdpYmxlIHRvIHJlY2VpdmUgcmVuZXdhYmxlIGVuZXJneSBjcmVkaXRzLCBpbmNsdWRpbmcgdGhvc2UgZ3JhbnRlZCBwdXJzdWFudCB0byBsYXcsIHJlZ3VsYXRpb24sIGNlcnRpZmljYXRpb24sIG1hcmtldHMsIHRyYWRpbmcsIG9mZi1zZXQsIHByaXZhdGUgdHJhbnNhY3Rpb24sIHJlbmV3YWJsXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQplIHBvcnRmb2xpbyBzdGFuZGFyZHMsIHZvbHVudGFyeSBwcm99e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGdyYW1zLCAofXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzkzXGxvY2hcZjAgXGhpY2hcZjAgUkVDcw0KXCc5NFxsb2NoXGYwICkgYW5kIGlmIHN1Y2ggQ28tVGVuYW50IGlzIG5vdCBvdGhlcndpc2UgY29tcGVuc2F0ZWQgZm9yIFJFQ3MgYXMgcGFydCBvZiBzdWJzZWN0aW9uIChhKSBhYm92ZSwgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBDby1UZW5hbnR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBjYXVzaW5nIHRoZSBsb3NzIG9mIHN1Y2ggUkVDcyBzaGFsbCB0cmFuc2ZlciBvciBjYXVzZSB0byBiZSB0cmFuc2ZlcnJlZCB0byB0aGUgQ28tVGVuYW50IGxvc2luZyBzXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgdWNoIFJFQ3MgcmVwbGFjZW1lbnQgUkVDcyBvZiBlcXVhbCB2fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIG9sdW1lLCB0ZWNobm9sb2d5IHR5cGUsIHN0YXRlIGFuZCB2aW50YWdlIG9mIHRoZSBSRUNzIGJlaW5nIGxvc3QuICBUaGUgdGVybSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTNcbG9jaFxmMCBcaGljaFxmMCANCkNvbW1vZGl0eSBSZWZlcmVuY2UgUHJpY2VcJzk0XGxvY2hcZjAgIG1lYW5zIHRoZSBhdmVyYWdlIG9mIHRoZSBkYXktYWhlYWQgUEpNIGxvY2F0aW9uYWwgbWFyZ2luYWwgcHJ9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyNDE4Mjk5IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGljZSBhdCBQSk1caGljaFxmMCBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ0MDEwMDQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHMgcHJpY2luZyBub2RlIGZvciB0aGUgUHJvamVjdHMgd2hpY2ggd2lsbCBiXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgZSBlc3RhYmxpc2hlZCB1cG9uIGludGVyY29ubmVjdGlvbiBvfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMzEwMTI4IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgZiB0aGUgUHJvamVjdHMgZHVyaW5nIHRoZSBOUkwgUGVyaW9kIG9yIGFueSBzdWNjZXNzb3IgUEpNIHByaWNpbmcgbWFya2V0IHRoYXQgcmVwb3J0cyBwcmljZXMgYXBwbGljYWJsZSBkdXJpbmcgdGhlIE5STCBQZXJpb2QgYXQgdGhlIGFmZmVjdGVkIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIENvLVRlbmFudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBwcmljaW5nIG5vZGUgZm9yIGFsbCBob3VycyBkdXJpbmcgc3VjaCBOUkwgUGVyaW9kLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXHBhciB9XHBhcmQgXGx0cnBhclxxbCBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDI5MTk0NCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxzZWN0IH1cc2VjdGQgXGx0cnNlY3RcbGluZXgwXGVuZG5oZXJlXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiANClxwYXJkXHBsYWluIFxsdHJwYXJccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWJcYWYxIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBFWEhJQklUfXtccnRsY2hcZmNzMSBcYWJcYWYxIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDExMjkwNzEyIA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFiXGFmMSBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgR317XHJ0bGNoXGZjczEgXGFiXGFmMSBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMTI5MDcxMiANClxwYXIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgUFJPLVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFJBVEEgU0hBUkV9e1xydGxjaFxmY3MxIFxhYlxhZjEgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFMNClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQyOTE5NDQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBBZGRpdGlvbmFsIFByZW1pc2VzIG9yIEZhY2lsaXRpZXMgfXtccnRsY2hcZmNzMSBcYWYxIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDg5MTQ5MzQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgUHJvfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgLX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODkxNDkzNCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBSYXRhIFNoYXJlDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFxoaWNoXGYwIEZvciBlYWNoIENvLVRlbmFudCwgaXRzIFwnOTN9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDQwMTczMTAgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQWRkaXRpb25hbCBQcmVtaXNlcyBvciBGYWNpbGl0aWVzIFByby1SYXRhIFNoYXJlfQ0Ke1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0XGxvY2hcZjAgIHdpdGggcmVzcGVjdCB0byBhbnkgQWRkaXRpb25hbCBTaGFyZWQgUHJlbWlzZXMgb3IgQWRkaXRpb25hbCBTaGFyZWQgRmFjaWxpdGllcyBpbiB3aGljaCBzdWNoIENvLVRlbmFudCBvd25zIGFuIGludGVyZXN0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0Kc2hhbGwgYmUgYSBmcmFjdGlvbiAod2hpY2ggZnJhY3Rpb24gc2hhbGwgYmUgcmVkdWNlZCB0byBhIHBlcmNlbnRhZ2UpLCB0aGUgbnVtZXJhdG9yIG9mIHdoaWNoIGlzIHRoZSBQZXJtaXR0ZWQgQ2FwYWNpdHkgZm9yIHN1Y2ggQ28tVGVuYW50XGhpY2hcZjAgXHJxdW90ZSBcbG9jaFxmMCANCnMgUHJvamVjdCBhbmQgdGhlIGRlbm9taW5hdG9yIG9mIHdoaWNoIHNoYWxsIGJlIHRoZSBhZ2dyZWdhdGUgUGVybWl0dGVkIENhcGFjaXR5IG9mIHRoZSBQcm9qZWN0cyBvZiBhbGwgdGhlIENvLVRlbmFuXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgdFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KcyB0aGF0IG93biBhbiBpbnRlcmVzdCBpbiB0aGUgcmVzcGVjdGl2ZSBBZGRpdGlvbmFsIFNoYXJlZCBQcmVtaXNlcyBvciBBZGRpdGlvbmFsIFNoYXJlZCBGYWNpbGl0aWVzLH17XHJ0bGNoXGZjczEgXGFpXGFmMSBcbHRyY2hcZmNzMCBcaVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMjk2NTMzIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhaVxhZjEgXGx0cmNoXGZjczAgXGlcaW5zcnNpZDE0MjkxOTQ0IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgcHJvdmlkZWR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgdGhhdCBpbiB0aGUgZXZlbnQgb2YgKGkpIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzg3NjkwMCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCB0aGUgfXtccnRsY2hcZmNzMSBcYWYxIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBzdXJyZW5kZXIgYW5kIGFzc2lnbm1lbnQgb2YgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBVbmRpdmlkZWQgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEludGVyZXN0cyBwdXJzdWFudCB0byB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgICBSRUYgX1JlZjQ4MDM1NDExIFxcbiBcXGggXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNTAwMzQwMDMxMDAzMTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcY2YxXGluc3JzaWQ3OTQyNjJcY2hhcnJzaWQ3OTQyNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpBcnRpY2xlIDEyfX19XHNlY3RkIFxsdHJzZWN0XGxpbmV4MFxlbmRuaGVyZVxzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggLH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIA0KXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIG9caGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCByfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgKGlpKSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCB0aGUgdGVybWluYXRpb24gb2YgYSBDby1UZW5hbnQgcHVyc3VhbnQgdG8gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgICBSRUYgX1JlZjQ4MDM1NDExIFxcbiBcXGggXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNDAwMzgwMDMwMDAzMzAwMzUwMDM0MDAzMTAwMzEwMDAwMDB9fQ0KfXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcY2YxXGluc3JzaWQ3OTQyNjJcY2hhcnJzaWQ3OTQyNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQXJ0aWNsZSAxMn19fVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIG9yIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgIFJFRiBfUmVmNDgwMzU0MjMgXFx3IFxcaCBcXCogTUVSR0VGT1JNQVQgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM1MDAzNDAwMzIwMDMzMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxjZjFcaW5zcnNpZDc5NDI2MlxjaGFycnNpZDc5NDI2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBBcnRpY2xlIDEzfX19XHNlY3RkIFxsdHJzZWN0DQpcbGluZXgwXGVuZG5oZXJlXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICAofXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpleGNlcHQgdG8gdGhlIGV4dGVudCB0aGF0IHRoZSBvd25lcnNoaXAgb2YgYSBwYXJ0aWN1bGFyIGNvbXBvbmVudCBvZiB0aGUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgYXBwbGljYWJsZSBBZGRpdGlvblxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGFsIFNoYXJlZCBQcmVtaXNlcyBvciBBZGRpdGlvbmFsIFNoYXJlZCBGYWNpbGl0aWVzfXsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgaXMgdW5hZmZlY3RlZCBieSB0aGUgdHJhbnNhY3Rpb25zIGlkZW59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHRpZmllZCBpbiB9e1xydGxjaFxmY3MxIFxhZjEgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTIwMjMyMDEgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgc3Vic2VjdGlvbnMgKGkpLSh9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgaX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgaX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICl9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDkyODMxMCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCApfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAsIGVhY2ggcmVtYWluaW5nIENvLVRlbmFudFxoaWNoXGYwIFxycXVvdGUgXGxvY2hcZjAgcyBBZGRpdGlvbmFsIFByZW1pc2VzIG9yIEZhY2lsaXRpZXMgUHJvLVJhdGEgU2hhcmUgd2lsbCBiZSByZWNhbGN1bGF0ZWQgaW4gdGhlIHNhbWUgbWFubmVyIGFzIHNldCBmb3J0aCBhYm92ZX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IC59e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCANClxwYXIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQmFzZSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDg5MTQ5MzQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgUHJvfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgLX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODkxNDkzNCANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFJhdGEgU2hhcmUNClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgXGhpY2hcZjAgRm9yIGVhY2ggQ28tVGVuYW50LCBpdHMgXCc5M317XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEJhc2V9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDAxNzMxMCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgUHJvLVJhdGEgU2hhcmV9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0XGxvY2hcZjAgDQogc2hhbGwgYmUgYXMgZm9sbG93czogIDI1JSBmb3IgSGFyZGluIFNvbGFyLCAyNSUgZm9yIEhhcmRpbiBTb2xhciBJSSBhbmQgNTAlIGZvciBIYXJkaW4gU29sYXIgSUlJLCB9e1xydGxjaFxmY3MxIFxhaVxhZjEgXGx0cmNoXGZjczAgXGlcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHByb3ZpZGVkfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgdGhhdCBpbiB0aGUgZXZlbnQgb2YgKGkpIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzg3NjkwMCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCB0aGUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpzdXJyZW5kZXIgYW5kIGFzc2lnbm1lbnQgb2YgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBVbmRpdmlkZWQgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBJbnRlcmVzdHMgcHVycw0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgdWFudCB0byB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgICBSRUYgX1JlZjQ4MDM1NDExIFxcbiBcXGggXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNTAwMzQwMDMxMDAzMTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcY2YxXGluc3JzaWQ3OTQyNjJcY2hhcnJzaWQ3OTQyNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQXJ0aWNsZSAxMn19fVxzZWN0ZCBcbHRyc2VjdA0KXGxpbmV4MFxlbmRuaGVyZVxzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggLH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIG9yfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIChpaSkgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCB0aGUgdGVybWluYXRpb24gb2YgYSBDby1UZW5hbnQgcHVyc3VhbnQgdG8gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICAgUkVGIF9SZWY0ODAzNTQxMSBcXG4gXFxoIFxcKiBNRVJHRUZPUk1BVCB9ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNDAwMzgwMDMwMDAzMzAwMzUwMDM0MDAzMTAwMzEwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGNmMVxpbnNyc2lkNzk0MjYyXGNoYXJyc2lkNzk0MjYyIA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQXJ0aWNsZSAxMn19fVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBvciB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgIFJFRiBfUmVmNDgwMzU0MjMgXFx3IFxcaCBcXCogTUVSR0VGT1JNQVQgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM1MDAzNDAwMzIwMDMzMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxjZjFcaW5zcnNpZDc5NDI2MlxjaGFycnNpZDc5NDI2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBBcnRpY2xlIDEzfX19XHNlY3RkIFxsdHJzZWN0DQpcbGluZXgwXGVuZG5oZXJlXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICAofXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgZXhjZXB0IHRvIHRoZSBleHRlbnQgdGhhdCB0DQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBoZSBvd25lcnNoaXAgb2YgYSBwYXJ0aWN1bGFyIGNvbXBvbmVudCBpcyB1bmFmZmVjdGVkIGJ5IHRoZSB0cmFuc2FjdGlvbnMgaWRlbn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgdGlmaWVkIGluIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBzdWJzZWN0aW9ucyAoaSktKH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBpfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgaQ0KfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgKX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTI4MzEwIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICl9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggLH17DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGVhY2ggcmVtYWluaW5nIENvLVRlbmFudFxoaWNoXGYwIFxycXVvdGUgXGxvY2hcZjAgDQpzIEJhc2UgUHJvLVJhdGEgU2hhcmUgd2lsbCBiZSBhZGp1c3RlZCB0byBlcXVhbCBhIGZyYWN0aW9uICh3aGljaCBmcmFjdGlvbiBzaGFsbCBiZSByZWR1Y2VkIHRvIGEgcGVyY2VudGFnZSksIHRoZSBudW1lcmF0XGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgb3Igb2Ygd2hpY2ggaXMgdGhlIFBlcm1pdHRlZCBDYXBhY2l0eSBmb3Igc3VjaCBDby1UZW5hbnRcaGljaFxmMCBccnF1b3RlIFxsb2NoXGYwIA0KcyBQcm9qZWN0IG9yIFByb2plY3RzIHRoYXQgb3ducyBhbiBpbnRlcmVzdCBvciBoYXMgcmlnaHRzIGluIHRoZSBTaGFyZWQgUHJlbWlzZXMgb3IgU2hhcmVkIEZhY2lsaXRpZXMgYW5kIHRoZSBkZW5vbWluYXRvciBvZiB3aGljaCBzaGFsbCBiZSB0aGUgYWdncmVnYXRlIFBlcm1pdHRlZCBDYXBhY2l0eSBmb3IgYWxsIG9mIHRoZSBDby1UZW5hbnRzXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXHJxdW90ZSANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBQcm9qZWN0cyB0aGF0IG93biBhbiBpbnRlcmVzdCBpbiB0aGUgU2hhcmVkIFByZW1pc2VzIG9yIFNoYXJlZCBGYWNpbGl0aWVzLg0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBFYXNlbWVudH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzY4NDUwMCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgUHJvfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgLX17XHJ0bGNoXGZjczEgXGFmMSANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ3Njg0NTAwIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFJhdGEgU2hhcmUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjI5NjUzMyBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBcaGljaFxmMCBGb3IgZWFjaCBDby1UZW5hbnQsIGl0cyBcJzkzfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ0MDE3MzEwIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEVhc2VtZW50IFByby1SYXRhIFNoYXJlfXsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIyOTY1MzMgXGxvY2hcYWYwXGRiY2hcYWYxXGhpY2hcZjAgXCc5NFxsb2NoXGYwICB3aXRoIHJlc3BlY3QgdG8gYW4gRWFzZW1lbnQgc2hhbGwgYmUgYSBmcmFjdGlvbiAod2hpY2ggZnJhY3Rpb24gc2hhbGwgYmUgcmVkdWNlZCB0byBhIHBlcmNlbnRhZ2UpLCB0aGUgbnVcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCm1lcmF0b3Igb2Ygd2hpY2ggaXMgdGhlIGFjcmVhZ2Ugb2YgdGhlIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODk0NDkyOSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBwb3J0aW9uIG9mIHRoZSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIyOTY1MzMgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpFYXNlbWVudCBiZWluZyBhc3NpZ25lZCAob3IgcmV0YWluZWQgYXMgdGhlIGNhc2UgbWF5IGJlKSBhbmQgdGhlIGRlbm9taW5hdG9yIG9mIHdoaWNoIHNoYWxsIGJlIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHRoZSB0b3RhbCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIyOTY1MzMgDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBhY3JlYWdlIG9mIHRoZSBsYW5kIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGVuY3VtYmVyZWQgYnl9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDIyOTY1MzMgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQogdGhlIEVhc2VtZW50IGlzIGJlaW5nIGNvbnZleWVkfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgLH17XHJ0bGNoXGZjczEgXGFpXGFmMSBcbHRyY2hcZmNzMCBcaVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyMjk2NTMzIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIFxhaVxhZjEgXGx0cmNoXGZjczAgXGlcaW5zcnNpZDE0MjkxOTQ0IA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgcHJvdmlkZWR9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgdGhhdCBpbiB0aGUgZXZlbnQgb2YgKFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGkpIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNzg3NjkwMCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCnRoZSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBzdXJyZW5kZXIgYW5kIGFzc2lnbm1lbnQgb2YgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBVbmRpdmlkZWQgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEludGVyZXN0cyBwdXJzdWFudCB0byB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgICBSRUYgX1JlZjQ4MDM1NDExIFxcbiBcXGggXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNTAwMzQwMDMxMDAzMTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcY2YxXGluc3JzaWQ3OTQyNjJcY2hhcnJzaWQ3OTQyNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpBcnRpY2xlIDEyfX19XHNlY3RkIFxsdHJzZWN0XGxpbmV4MFxlbmRuaGVyZVxzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggLH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICB9e1xydGxjaFxmY3MxIA0KXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIG9yfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIChpaSkgfXtccnRsY2hcZmNzMSBcYWYxIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCB0aGUgdGVybWluYXRpb24gb2YgYSBDby1UZW5hbnQgcHVyc3VhbnQgdG8gfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICAgUkVGIF9SZWY0ODAzNTQxMSBcXG4gXFxoIFxcKiBNRVJHRUZPUk1BVCB9DQp7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1MjAwNjUwMDY2MDAzNDAwMzgwMDMwMDAzMzAwMzUwMDM0MDAzMTAwMzEwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGNmMVxpbnNyc2lkNzk0MjYyXGNoYXJyc2lkNzk0MjYyIA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQXJ0aWNsZSAxMn19fVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBvciB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgIFJFRiBfUmVmNDgwMzU0MjMgXFx3IFxcXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgaCBcXCogTUVSR0VGT1JNQVQgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCANCjA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM1MDAzNDAwMzIwMDMzMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxjZjFcaW5zcnNpZDc5NDI2MlxjaGFycnNpZDc5NDI2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBBcnRpY2xlIDEzfX19XHNlY3RkIFxsdHJzZWN0DQpcbGluZXgwXGVuZG5oZXJlXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICAofXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgDQpleGNlcHQgdG8gdGhlIGV4dGVudCB0aGF0IHRoZSBvd25lcnNoaXAgb2YgYSBwYXJ0aWN1bGFyIGNvbXBvbmVudCBvZiB0aGUgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgYXBwbGljYWJsZSBFYXNlbWVudH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIGlzIHVuYWZmZWN0ZWQgYnkgdGhlIHRyYW5zYWN0aW9ucyBpZGVufXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjgwMjkxMCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCB0aWZpZWQgaW4gfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSANClxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHN1YnNlY3Rpb25zIChpKS0ofXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDEyOTE4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGl9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBpfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCApfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ5MjgzMTAgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgKX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCAsfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgZWFjaCByZW1haW5pbmcgQ28tVGVuYW50XGhpY2hcZjAgXHJxdW90ZSBcbG9jaFxmMCBzIEVhc2VtZW50IFByby1SYXRhIFNoYXJlIHdpbGwgYmUgclxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIA0KZWNhbGN1bGF0ZWQgaW4gdGhlIHNhbWUgbWFubmVyIGFzIHNldCBmb3J0aCBhYm92ZX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjI5NjUzMyBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAuICB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCANClxwYXIgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyNDkxNTQ4IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIE9wZXJhdGlvbmFsIFByby1SYXRhIFNoYXJlIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBGb3IgZWFjaCBPcGVyYXRpb25hbCBDby1UZW5hbnQgKG9yIGVhY2ggSm9pbmluZyBDby1UZW5hbnQgdGhhdCBvd25zIGFuIFVuZGl2aWRlZCBJbnRlcmVzdCBpbiB0aGUgU2hhcmVkIFByZW1pc2VzLCBoYXMgYWNoaWV2ZWQgaXRzIFJlZ3VsYXRvcnkgQXBwcm92YWwgRGF0ZSBhbmQgc2Vla3MgdG8gb3duIGFuDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgVW5kaXZpZGVkIEludGVyZXN0IGluIHRoZSBTaGFyZWQgRmFjaWxpdGllcyBwdXJzdWFudCB0byB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMDEwNDk2MiBcaGljaFxhZjBcZGJjaFxhZjExXGxvY2hcZjAgU2VjdGlvbiB9e1xmaWVsZHtcKlxmbGRpbnN0IHsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGxhbmcxMDMzXGxhbmdmZTEwNDFcZGJjaFxhZjExXGxhbmdmZW5wMTA0MVxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwICBSRUYgX1JlZjU3NjMxOTg1IFxcciBcXGggfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxsYW5nMTAzM1xsYW5nZmUxMDQxXGRiY2hcYWYxMVxsYW5nZmVucDEwNDFcaW5zcnNpZDE0MjkxOTQ0IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM1MDAzNzAwMzYwMDMzMDAzMTAwMzkwMDM4MDAzNTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcbGFuZzEwMzNcbGFuZ2ZlMTA0MVxkYmNoXGFmMTFcbGFuZ2ZlbnAxMDQxXGluc3JzaWQ3OTQyNjIgXGhpY2hcYWYwXGRiY2hcYWYxMVxsb2NoXGYwIDIuMShhKX19fQ0KXHNlY3RkIFxsdHJzZWN0XGxpbmV4MFxlbmRuaGVyZVxzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCApLCBpdHMgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQyNDkxNTQ4IFxsb2NoXGFmMFxkYmNoXGFmMVxoaWNoXGYwIFwnOTN9ew0KXHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkNDAxNzMxMCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBPcGVyYXRpb25hbCBQcm8tUmF0YSBTaGFyZX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMjQ5MTU0OCBcbG9jaFxhZjBcZGJjaFxhZjFcaGljaFxmMCBcJzk0fXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgc2hhbGwgYmUgYXMgZm9sbG93czogIChhKSBhdCBhbGwgdGltZXMgd2hlbiBIYXJkaW4gU29sYXIsIEhhcmRpbiBTb2xhciBJSSBvciBIYXJkaW4gU29sYXIgSUlJIGlzIHRoZSBzb2xlIE9wZXJhdGlvbmFsIENvLVxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFRlbmFudCwgc3VjaCBPcGVyYXRpb25hbCBDby1UZW5hbnRcaGljaFxmMCBccnF1b3RlIFxsb2NoXGYwIA0KcyBPcGVyYXRpb25hbCBQcm8tUmF0YSBTaGFyZSBzaGFsbCBiZSAxMDAlLCAoYikgYXQgYWxsIHRpbWVzIHdoZW4gSGFyZGluIFNvbGFyIGFuZCBIYXJkaW4gU29sYXIgSUkgYXJlIHRoZSBzb2xlIE9wZXJhdGlvbmFsIENvLVRlbmFudHMsIHtcKlxia21rc3RhcnQgX0hsazUwOTk3MjA0fUhhcmRpbiBTb2xhciA1MCUgYW5kIEhhcmRpbiBTb2xhciBJSSA1MCUsIHtcKlxia21rZW5kIF9IbGs1MDk5NzIwNH0NCihjKSBhdCBhbGwgdGltZXMgd2hlbiBhbGwgQ28tVGVuYW50cyBhcmUgT1xoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCmVyYXRpb25hbCBDby1UZW5hbnRzLCBIYXJkaW4gU29sYXIgMjUlLCBIYXJkaW4gU29sYXIgSUkgMjUlIGFuZCBIYXJkaW4gU29sYXIgSUlJIDUwJSwgKGQpIGF0IGFsbCB0aW1lcyB3aGVuIEhhcmRpbiBTb2xhciBJIGFuZCBIYXJkaW4gU29sYXIgSUlJIGFyZSB0aGUgc29sZSBPcGVyYXRpb25hbCBDby1UZW5hbnRzLCBIYXJkaW4gU29sYXIgSSAzMy4zNCUgYW5kIEhhcmRpbiBTb2xhciBJSUkgNjYuNjYlIGFuZCAoZSkgYXQgYWxsIHRpbWVzIHdoZQ0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgblxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICBIYXJkaW4gU29sYXIgSUkgYW5kIEhhcmRpbiBTb2xhciBJSUkgYXJlIHRoZSBzb2xlIE9wZXJhdGlvbmFsIENvLVRlbmFudHMsIEhhcmRpbiBTb2xhciBJSSAzMy4zNCUgYW5kIEhhcmRpbiBTb2xhciBJSUkgNjYuNjYlLiAgRWFjaCBPcGVyYXRpb25hbCBDby1UZW5hbnRcaGljaFxmMCBccnF1b3RlIFxsb2NoXGYwIA0KcyBPcGVyYXRpb25hbCBQcm8tUmF0YSBTaGFyZSBzaGFsbCBiZSByZWFsbG9jYXRlZCBmcm9tIHRpbWUgdG8gdGltZSBmb2xsb3dpbmcgdGhlIG9jY3VycmVuY2Ugb2YgYSBKb1xoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIGlcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBuaW5nIENvLVRlbmFudCBiZWNvbWluZyBhbiBPcGVyYXRpb25hbCBDby1UZW5hbnQgb3IgdXBvbiBpbiB0aGUgZXZlbnQgb2YgKGkpIH17XHJ0bGNoXGZjczEgXGFmMSANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ3ODc2OTAwIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIHRoZSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBzdXJyZW5kZXIgYW5kIGFzc2lnbm1lbnQgb2YgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyODAyOTEwIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFVuZGl2aWRlZCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDEyMDIzMjAxIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEludGVyZXN0cyBwdXJzdWFudCB0byB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgIFJFRiBfUmVmNDgwMzU0MTEgXFxuIFxcaCBcXCogTUVSR0VGT1JNQVQgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNTAwMzQwMDMxMDAzMTAwMDAwMH19DQp9e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxjZjFcaW5zcnNpZDc5NDI2MlxjaGFycnNpZDc5NDI2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBBcnRpY2xlIDEyfX19XHNlY3RkIFxsdHJzZWN0XGxpbmV4MFxlbmRuaGVyZVxzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggLH17DQpccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIG9yfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCAgfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgKGlpKSB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCB0aGUgdGVybWluYXRpb24gb2YgYSBDby1UZW5hbnQgcHVyc3VhbnQgdG8gfQ0Ke1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDQgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgICBSRUYgX1xoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIFJlZjQ4MDM1NDExIFxcbiBcXGggXFwqIE1FUkdFRk9STUFUIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0IHtcKlxkYXRhZmllbGQgDQowOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDUyMDA2NTAwNjYwMDM0MDAzODAwMzAwMDMzMDAzNTAwMzQwMDMxMDAzMTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcY2YxXGluc3JzaWQ3OTQyNjJcY2hhcnJzaWQ3OTQyNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgQXJ0aWNsZSAxMn19fVxzZWN0ZCBcbHRyc2VjdA0KXGxpbmV4MFxlbmRuaGVyZVxzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwMTI5MTggXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgIG9yIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCANCiAgUkVGIF9SZWY0ODAzNTQyMyBcXHcgXFxoIFxcKiBNRVJHRUZPUk1BVCB9e1xydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTIwMDY1MDA2NjAwMzQwMDM4MDAzMDAwMzMwMDM1MDAzNDAwMzIwMDMzMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYxIA0KXGx0cmNoXGZjczAgXHVsXGNmMVxpbnNyc2lkNzk0MjYyXGNoYXJyc2lkNzk0MjYyIFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIEFydGljbGUgMTN9fX1cc2VjdGQgXGx0cnNlY3RcbGluZXgwXGVuZG5oZXJlXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwICAofXtccnRsY2hcZmNzMSBcYWYxIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDI5MTk0NFxjaGFycnNpZDgwOTM2MiBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBleGNlcHQgdG8gdGhlIGV4dGVudCB0aGF0IHRoZSBvd25lcnNoaXAgb2YgYSBwYXJ0aWN1bGFyIGNvbXBvbmVudCBpcyB1bmFmZmVjdGVkIGJ5IHRoZSB0cmFuc2FjdGlvbnMgaWRlbn17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkMTI4MDI5MTAgDQpcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCB0aWZpZWQgaW4gfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQxMjAyMzIwMSBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBzdWJzZWN0aW9ucyAoaSktKH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODAxMjkxOCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBpfXsNClxydGxjaFxmY3MxIFxhZjEgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDI5MTk0NCBcaGljaFxhZjBcZGJjaFxhZjFcbG9jaFxmMCBpfXtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQyOTE5NDRcY2hhcnJzaWQ4MDkzNjIgXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgKX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkOTI4MzEwIA0KXGhpY2hcYWYwXGRiY2hcYWYxXGxvY2hcZjAgKX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0IFxoaWNoXGFmMFxkYmNoXGFmMVxsb2NoXGYwIC4gIH17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ1MDUwNjgxIHtcKlxia21rZW5kIF9IbGs0ODA4NTM3OH0NCntcc2hwe1wqXHNocGluc3Rcc2hwbGVmdDBcc2hwdG9wMTQ4ODBcc2hwcmlnaHQ0NjgwXHNocGJvdHRvbTE1MTIwXHNocGZoZHIwXHNocGJ4bWFyZ2luXHNocGJ4aWdub3JlXHNocGJ5cGFnZVxzaHBieWlnbm9yZVxzaHB3cjNcc2hwd3JrMFxzaHBmYmx3dHh0MVxzaHB6MFxzaHBsb2NrYW5jaG9yXHNocGxpZDEwMjZ7XHNwe1xzbiBzaGFwZVR5cGV9e1xzdiAyMDJ9fXtcc3B7XHNuIGZGbGlwSH17XHN2IDB9fXtcc3B7XHNuIGZGbGlwVn17XHN2IDB9fQ0Ke1xzcHtcc24gZkxvY2tSb3RhdGlvbn17XHN2IDB9fXtcc3B7XHNuIGZMb2NrQXNwZWN0UmF0aW99e1xzdiAwfX17XHNwe1xzbiBmTG9ja1Bvc2l0aW9ufXtcc3YgMH19e1xzcHtcc24gZkxvY2tBZ2FpbnN0U2VsZWN0fXtcc3YgMH19e1xzcHtcc24gZkxvY2tWZXJ0aWNpZXN9e1xzdiAwfX17XHNwe1xzbiBmTG9ja1RleHR9e1xzdiAwfX17XHNwe1xzbiBmTG9ja0FkanVzdEhhbmRsZXN9e1xzdiAwfX0NCntcc3B7XHNuIGZMb2NrQWdhaW5zdEdyb3VwaW5nfXtcc3YgMH19e1xzcHtcc24gbFR4aWR9e1xzdiA2NTUzNn19e1xzcHtcc24gZHhUZXh0TGVmdH17XHN2IDB9fXtcc3B7XHNuIGR5VGV4dFRvcH17XHN2IDB9fXtcc3B7XHNuIGR4VGV4dFJpZ2h0fXtcc3YgMH19e1xzcHtcc24gZHlUZXh0Qm90dG9tfXtcc3YgMH19e1xzcHtcc24gZlJvdGF0ZVRleHR9e1xzdiAwfX17XHNwe1xzbiBmRml0U2hhcGVUb1RleHR9e1xzdiAwfX0NCntcc3B7XHNuIGZGaWxsZWR9e1xzdiAwfX17XHNwe1xzbiBmQXJyb3doZWFkc09LfXtcc3YgMH19e1xzcHtcc24gZkxpbmV9e1xzdiAwfX17XHNwe1xzbiBmTG9ja1NoYXBlVHlwZX17XHN2IDB9fXtcc3B7XHNuIHd6TmFtZX17XHN2IHp6bXBEb2NTdGFtcF8xMX19e1xzcHtcc24gcG9zcmVsaH17XHN2IDB9fXtcc3B7XHNuIHBvc3JlbHZ9e1xzdiAxfX17XHNwe1xzbiBtZXRyb0Jsb2J9e1xzdiB7XCpcc3ZiIA0KNTA0YjAzMDQxNDAwMDYwMDA4MDAwMDAwMjEwMGI2ODMzODkyZmUwMDAwMDBlMTAxMDAwMDEzMDAwMDAwNWI0MzZmNmU3NDY1NmU3NDVmNTQ3OTcwNjU3MzVkMmU3ODZkNmM5NDkxNDE0ZWMzMzAxMDQ1Zjc0OGRjYzFmMjE2MjU0ZWJiNDAwODI1ZTk4MmI0NGI0MGE4MWM2MDY0NGYxMjhiNjQ2Yzc5NGM2ODZmOGY5M2I2MWI0NDkxNThkYTMzZmZiZjI3YmJkYzFjYzY0MTRjMThkODNhYWFlNDJhMmZhNDQwZDJjZTU4ZWEyYWY5YmVkZjY1MGY1MjcwMDQNCjMyMzAzOGMyNGExZTkxZTVhNmJlYmQyOWY3NDc4ZjJjNTI5YWI4OTI3ZDhjZmU1MTI5ZDYzZDhlYzBiOWYzNDg2OWQyYmEzMDQyNGNjN2QwMjkwZmZhMDMzYTU0ZWJhMmI4NTdkYTUxNDQ4YTU5OWMzYjY0NWQzNmQ4YzJlNzEwYzVmNjkwYWU0ZjI2MDEwNzk2ZTJlOWI0MzhiMzJhMDlkZTBmNTY0MzRjYTY2YTIyZjM4MzkyOWQwOTc5NGEyZTNiZGM1YmNmNzc0OTQzYWE1ZjA5ZjNlNDNhZTA5YzdiNDk0ZjEzYWM0MWYxMGEyMTNlYzM5ODM0OTQwOWFjDQo3MGVkMWFhN2YzYmYzYjY2Yzk5MTMzZDdiNjU2NjNkZTA0ZGUyZWE5OGJkM2I1NmVlM2JlMjhlMGY0ZGZmMjI2YzVkZTcwYmFiNGFiZTU4M2VhNmYwMDAwMDBmZmZmMDMwMDUwNGIwMzA0MTQwMDA2MDAwODAwMDAwMDIxMDAzOGZkMjFmZmQ2MDAwMDAwOTQwMTAwMDAwYjAwMDAwMDVmNzI2NTZjNzMyZjJlNzI2NTZjNzNhNDkwYzE2YWMzMzAwYzg2ZWY4M2JkODNkMTdkNzE5YWMzMThhMzRlMmZhM2QwNmJlOTFlYzBkODhhNjMxYTViNDYzMmQ5ZmFmNg0KMzM4M2MxMzI3YWRiNTFiZmQwZjc4OTdmN2ZmODRjOGI1YTkxMjU1MjM2YjBlYjdhNTA5ODFkZjk5ODgzODFmN2NiZjFlOTA1OTQ1NDliYmQ1ZDI4YTM4MTFiMGExY2M2Yzc4N2ZkMTkxNzViZGI5MWNjYjE4ODZhOTQyYzA2ZTY1YWNiYWJkNmUyNjY0YzU2M2EyYTk4ZGI2NjIyNGViNmI2OTE4MzJlZDY1ZDZkNDAzZGY0ZmRiM2U2ZGYwYzE4Mzc0Yzc1ZjIwNmY4ZTQwNzUwOTc1YjY5ZTYzZmVjMTQxZDkzZDA1NDNiNDc0OWQzMzQ0NTc3OGZhYTNkN2QNCmU0MzNhZThkNjIzOTYwMzVlMDU5YmU0M2M2YjU2YmNmODFiZWVmZGRmZGQzMWJkODk2MzliYTIzZGI4NDZmZTRiNjdlMWNhODY1M2Y3YWJkZTk3MmZjMDIwMDAwZmZmZjAzMDA1MDRiMDMwNDE0MDAwNjAwMDgwMDAwMDAyMTAwMGY5NjUwODZhNTAyMDAwMDk0MDUwMDAwMGUwMDAwMDA2NDcyNzMyZjY1MzI2ZjQ0NmY2MzJlNzg2ZDZjYWM1NGRiNmU5YzMwMTA3ZGFmZDQ3ZmIwZmM0ZWI4OTRiZDgwYzI0NmM5YjI1NDk1ZDI4Yjk0ZjZiOWYyODI1OWFjDQo4MmVkZGFkZTg1YTRlYWJmNzc2Yzk2Y2QyNjUxYTVhYWFkMWZhY2MxMWU5Zjk5MzM3Mzk4Y2JhYmExNmJkMTgxMmFjZDA0Y2Y3MDc4MTE2MDQ0NzkyOTJhYzY3NzE5ZmVmMmI5ZjA5NjE4Njk0Mzc4NDU1YWMxNjk4NmVmYTljNjU3YWJkN2FmMmU3Yjk5ZDI0ODM0YTJhZGE4NDIwMGMyNzVkYWNiMGMzN2M2YzhkNGY3NzVkOWQwOGVlODBiMjEyOTg3Y2I1YWE4OGUxOGY4NTQzYmJmNTJhNDA3ZjRhZWY1YTMyMDk4ZmJiZDUwOTU1NGEyYTQ1YWMzNjkzZQ0KNWVlMjk1YzNhZjZiNWE5YThmNzVhZGE5NDE2ZDg2MjEzN2UzNzZlNWY2YWRkZGZkZDUyNTQ5Nzc4YWM4ODY5NWM3MzRjODVmNjRkMTExYzYyMWU4MDkyYTI3ODZhMGJkNjIyZmEwM2E1NjJhYTE0NTZkMmU0YWQxZjlhMmFlNTk0OTFkMDc2MDEzMDZjZmQ4ZGMzNTQ0NTJjNzA1OGFhM2U1YTk0Y2ZhZmZjMTk2MWYwZTlmMTQ2MjU1ODYyMzhjMzhlOWEwNDUwZjBmOWRjYzQ1Nzk2NzQ4MjdiZjg2YTEyZDUxMmY3NTBhOWU3NzEyN2NjZDcwMjMwNjY4YjUNCmEzYWJlNWFkMjhiZjY5YzRjNWJhMjE3YzQ3YWY5NTEyN2Q0MzQ5MDUyOWJhOTdmZWQ5ZDMxMTQ3NWI5MDZkZmY1ZTU0MTA4YmVjOGQ3MDQwNDNhZDNhNWIzZmE4MDgwMjc0NjhkNWZkYTkzZDc0MzBhODg0YzMyODU5ODRjYjAwYWU0YWI4MGI2NzUxMGMzNjI0ZTc5Mzc0N2EyZDk1MzY2ZmE5ZTg5MDM1MzJhY2EwZmQwZTlkMWM2ZWI1MTk1ZDI3MTcxYjhjOGI4MmI1YWQ5MzQwY2I5ZjFjMDBlNjc4MDJiMWUxYTliZGIzNTliODhlZmU0ODgyNjRiM2RjDQoyYzYzMmY4ZWU2MWIyZjBlZjJkY2JiMmVkNmIxMzcyZmMyYzUyYzdmOTNhZmQ3NzlmOGQzYzYwZGUzYjQ2MTU1NDViOTBkMzNhOTJiOGNmZmFjN2I0NzlkOGZiYTM4ZTk0YjhiOTY1NTE2Y2VhNmE0ZDU2ZWJiNmUxNTNhMTA1MDc3ZTFkNmIxMjA2NzZlZmVkMzM0NWNiZDgwY2IzMzRhMjE1NGYzMjY0YWJjNjJiZTVjNzg3MTExY2ZiYzY0MTEyY2JkMjA0YzZlOTI3OTEwMjc3MTVlM2NhNTc0Y2IzOGZkNzc0YWE4Y2Y3MDMyOGI2NmEzOTg3ZWNiMmQ3MA0KZWIyNTM3OTI3NmNjYzBmYzY4NTk5NzYxOTAwNjJjZWI0NDUyMmJjMTBkYWY5YzZkMDg2YjQ3ZmJhYzE0MzZmZGM3NTI0MGJiYTc0NjNiYzE1YThkOGU2YTM1YzM3NjAwMTRhYmUyYWRhOGVlNDFiYTRhODBiMjQwODQzMGY0YzA2ODg0N2FjMGE4ODcwMTkyNjFmZDdkNGYxNGM1YTg3ZGM3NDFmZTc2ZGE0Yzg2OWE4Y2VkNjQxMDVlYzJkMzBjMWI4YzQ2NzM2ZGM2YTliNDk3OGFlZDFhNDA3ZWZjN2RlMGQ3NzdhOTFlYzc5NDlkMmRlN2RmNjA5ZjBmZDMNCmQ1MmYwMDAwMDBmZmZmMDMwMDUwNGIwMzA0MTQwMDA2MDAwODAwMDAwMDIxMDAwMDdiNzQ5ZWRkMDAwMDAwMGEwMTAwMDAwZjAwMDAwMDY0NzI3MzJmNjQ2Zjc3NmU3MjY1NzYyZTc4NmQ2YzRjNGY0MTRlYzMzMDEwYmMyM2YxMDc2YjkxYjg1MWJiNTU4OTQyODg1MzU1MDg0ZTQ4ODgzNDFjMzgzYWM5MzZiMTFhYWY0M2VjYjZlMWY3NmM0ZmY0MzYzYjMzOWE5ZGM5MzdiMzFiYzQwOWE3NjAzZDY5NTgyZTE0MDhhNGM2Yjc5NjNhMGQ1ZmQ1ZGI0MzBhDQoyMjQ0NDNhZDE5M2NhMTg2NWYwY2IwMjk2ZTZmNzI5M2I1ZmU0YzI1OWU3NmIxMTMxYzQyMjEzMzFhZmExOGM3NGNjYWQwZjRlODRjNThmODExODliNWJkOWY5Yzg5N2M0ZTlkNmMyNzczZTY3MDM3Yzg5NTUyODk3NGM2MTI3ZmU4Y2Q4ODJmM2QzNjg3ZGRkMTY5ZDg3ZTUzZjk2YTdmM2VlYWNmNzI1ZmRhYWE3YTUyZjQ5ZTFjYjRiZWJmOWJiN2NmMjAyMmNlZjFkZjBjOTdmYTVjMWQwYWVlNTRmYjIzYjU0MTBjMWE3ODQ4NjQ3NjlkYTY4YzU4NWYyNw0KMTc1MDMzZjViODVjMjk5MDQ1MmVhZjI3MTQ3ZjAwMDAwMGZmZmYwMzAwNTA0YjAxMDIyZDAwMTQwMDA2MDAwODAwMDAwMDIxMDBiNjgzMzg5MmZlMDAwMDAwZTEwMTAwMDAxMzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA1YjQzNmY2ZTc0NjU2ZTc0NWY1NDc5NzA2NTczNWQyZTc4NmQ2YzUwNGIwMTAyMmQwMDE0MDAwNjAwMDgwMDAwMDAyMTAwMzhmZDIxZmZkNjAwMDAwMDk0MDEwMDAwMGIwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDANCjAwMmYwMTAwMDA1ZjcyNjU2YzczMmYyZTcyNjU2YzczNTA0YjAxMDIyZDAwMTQwMDA2MDAwODAwMDAwMDIxMDAwZjk2NTA4NmE1MDIwMDAwOTQwNTAwMDAwZTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMmUwMjAwMDA2NDcyNzMyZjY1MzI2ZjQ0NmY2MzJlNzg2ZDZjNTA0YjAxMDIyZDAwMTQwMDA2MDAwODAwMDAwMDIxMDAwMDdiNzQ5ZWRkMDAwMDAwMGEwMTAwMDAwZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmYwNDAwMDA2NDcyNzMyZjY0DQo2Zjc3NmU3MjY1NzYyZTc4NmQ2YzUwNGIwNTA2MDAwMDAwMDAwNDAwMDQwMGYzMDAwMDAwMDkwNjAwMDAwMDAwfX19e1xzcHtcc24gZGhndH17XHN2IDI1MTY1NzcyOH19e1xzcHtcc24gZkxheW91dEluQ2VsbH17XHN2IDB9fXtcc3B7XHNuIGZBbGxvd092ZXJsYXB9e1xzdiAxfX17XHNwe1xzbiBmQmVoaW5kRG9jdW1lbnR9e1xzdiAxfX17XHNwe1xzbiBmSGlkZGVufXtcc3YgMH19e1xzcHtcc24gZlBzZXVkb0lubGluZX17XHN2IDB9fQ0Ke1xzcHtcc24gZkxheW91dEluQ2VsbH17XHN2IDB9fXtcc2hwdHh0IFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMVxhZnMyNFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcYWYwXGhpY2hcYWYwXGRiY2hcYWYxXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYxIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjYzNjM0MiANClxwYXIgfX19e1xzaHByc2x0e1wqXGRvXGRvYnhtYXJnaW5cZG9ieXBhZ2VcZG9kaGd0MFxkcHR4YnhcZHB0eGxydGJ7XGRwdHhieHRleHRcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjFcYWZzMjRcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xsb2NoXGFmMFxoaWNoXGFmMFxkYmNoXGFmMVxjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDI2MzYzNDIgDQpccGFyIH19XGRweDBcZHB5MTQ4ODBcZHB4c2l6ZTQ2ODBcZHB5c2l6ZTI0MFxkcGZpbGxmZ2NyMjU1XGRwZmlsbGZnY2cyNTVcZHBmaWxsZmdjYjI1NVxkcGZpbGxiZ2NyMjU1XGRwZmlsbGJnY2cyNTVcZHBmaWxsYmdjYjI1NVxkcGZpbGxwYXQwXGRwbGluZWhvbGxvd319fX17XHJ0bGNoXGZjczEgXGFmMSBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0MjkxOTQ0XGNoYXJyc2lkODA5MzYyIA0KXHBhciB9e1wqXHRoZW1lZGF0YSA1MDRiMDMwNDE0MDAwNjAwMDgwMDAwMDAyMTAwZTlkZTBmYmZmZjAwMDAwMDFjMDIwMDAwMTMwMDAwMDA1YjQzNmY2ZTc0NjU2ZTc0NWY1NDc5NzA2NTczNWQyZTc4NmQ2Y2FjOTFjYjRlYzMzMDEwNDVmNzQ4ZmM4M2U1MmQ0YQ0KOWNiMjQwMDgyNWU5ODJjNzhlYzdhMjdjYzBjODk5MjQxNmM5ZDhiMmE3NTVmYmY3NGNkMjU0NDJhODIwMTY2YzJjZDkzM2Y3OWUzYmUzNzJiZDFmMDdiNWMzOTg5Y2E3NGFhZmYyNDIyYjI0ZWIxYjQ3NWRhNWRmMzc0ZmQ5YWQNCjU2ODk4MTFhMTgzYzYxYTUwZjk4ZjRiYWJlYmMyODM3ODc4MDQ5ODk5YTUyYTU3YmU2NzA2NzRjYjIzZDhlOTA3MjFmOTBhNGQyZmEzODAyY2IzNTc2MjY4MGZkODAwZWNkNzU1MWRjMThlYjg5OTEzOGUzYzk0M2Q3ZTUwM2I2DQpiMDFkNTgzZGVlZTVmOTk4MjRlMjkwYjRiYTNmMzY0ZWFjNGE0MzA4ODNiM2MwOTJkNGVjYThmOTQ2YzkxNjQyMmVjYWI5MjdmNTJlYTQyYjg5YTFjZDU5YzI1NGY5MTliMGU4NWU2NTM1ZDEzNWE4ZGUyMGYyMGI4YzEyYzNiMA0KMGM4OTVmY2Y2NzIwMTkyZGU2YmYzYjllODllY2RiZDY1OTZjYmNkZDhlYjI4ZTdjMzY1ZWNjNGVjMWZmMTQ2MGY1M2ZlODEzZDNjYzdmNWI3ZjAyMDAwMGZmZmYwMzAwNTA0YjAzMDQxNDAwMDYwMDA4MDAwMDAwMjEwMGE1ZDYNCmE3ZTdjMDAwMDAwMDM2MDEwMDAwMGIwMDAwMDA1ZjcyNjU2YzczMmYyZTcyNjU2YzczODQ4ZmNmNmFjMzMwMGM4N2VmODViZDgzZDE3ZDUxZDJjMzE4MjU3NjJmYTU5MDQzMmZhMzdkMDBlMTI4N2Y2ODIyMWJkYjFiZWJkYjRmDQpjNzA2MGFiYjA4ODRhNGVmZjdhOTNkZmVhZThiZjllMTk0ZTcyMDE2OWFhYTA2YzNlMjQzM2ZjYjY4ZTE3NjNkYmY3ZjgyYzk4NWE0YTcyNTA4NWI3ODcwODZhMzdiZGJiNTVmYmM1MGQxYTMzY2NkMzExYmE1NDhiNjMwOTUxMg0KMGY4OGQ5NGZiYzUyYWU0MjY0ZDFjOTEwZDI0YTQ1ZGIzNDYyMjQ3ZmE3OTE3MTVmZDcxZjk4OWUxOWUwMzY0Y2QzZjUxNjUyZDczNzYwYWU4ZmE4YzlmZmIzYzMzMGNjOWU0ZmMxN2ZhZjJjZTU0NTA0NmUzNzk0NGM2OWU0NjINCmExYTgyZmUzNTNiZDkwYTg2NWFhZDQxZWQwYjViOGY5ZDZmZDAxMDAwMGZmZmYwMzAwNTA0YjAzMDQxNDAwMDYwMDA4MDAwMDAwMjEwMDZiNzk5NjE2ODMwMDAwMDA4YTAwMDAwMDFjMDAwMDAwNzQ2ODY1NmQ2NTJmNzQ2ODY1DQo2ZDY1MmY3NDY4NjU2ZDY1NGQ2MTZlNjE2NzY1NzIyZTc4NmQ2YzBjY2M0ZDBhYzMyMDEwNDBlMTdkYTE3NzkwZDkzNzYzYmIyODQ1NjJiMmNiYWViYmY2MDA0MzljMWE0MWM3YTBkMjlmZGJkN2U1ZTM4MzM3Y2VkZjE0ZDU5Yg0KNGIwZDU5MmM5YzA3MGQ4YTY1Y2QyZTg4YjdmMDdjMmNhNzFiYThkYTQ4MWNjNTJjNmNlMWM3MTVlNmU5NzgxOGM5YjQ4ZDEzZGY0OWM4NzM1MTdkMjNkNTkwODVhZGI1ZGQyMGQ2YjUyYmQ1MjFlZjJjZGQ1ZWI5MjQ2YTNkOGINCjQ3NTdlOGQzZjcyOWUyNDVlYjJiMjYwYTAyMzhmZDAxMDAwMGZmZmYwMzAwNTA0YjAzMDQxNDAwMDYwMDA4MDAwMDAwMjEwMDA3Yjc0MGFhY2EwNjAwMDA4ZjFhMDAwMDE2MDAwMDAwNzQ2ODY1NmQ2NTJmNzQ2ODY1NmQ2NTJmDQo3NDY4NjU2ZDY1MzEyZTc4NmQ2Y2VjNTk1YjhiZGI0NjE0N2UyZmY0M2YwOGJkM2JiZTQ5YmUyY2YxMDY1YmI2OTMzNmJiNDk4ODlkOTQzY2NlZGE2MzZiYjIyMzhkZDE4Yzc3NjM0MmEwMjQ0ZjdkMjkxNGQyZDI4NzA2ZmFkNg0KODc1MjFhNjhhMGExMmZmZDMxMGIxYmRhZjQ0N2Y0Y2M0ODk2NjdlYzcxZjY0MjBhYTE2NDBkOGIzNGZhY2U5OTZmY2UzOWZhY2U0OGJhN2FlZDUxNDQ5ZDIzOWM3MGMyZTI5NjViYmU1MjcyMWQxYzhmZDg5OGM0ZDM5NjdiNmYNCmQ4MmYzNDVjODcwYjE0OGYxMTY1MzE2ZWI5MGJjY2RkNmJiYjlmN2U3MjE1ZWQ4ODEwNDdkODAxZmI5OGVmYTA5NjFiMGEzMWRiMjkxNmY5MDg4NjExYmZjMjY2Mzg4NjZiMTM5NjQ0NDhjMDY5MzIyZDhlMTM3NDBjN2UyMzVhDQphYzk0NGFiNTYyODQ0OGVjM2EzMThhYzBlZGVkYzk4NDhjYjAzMzk0MmVkZGRkYTVmMzFlODVkMzU4NzAzOTMwYTJjOTQwYmFjNjg2ODVjMjhlMGZjYjEyYzExNzNjYTA4OTczODQ2OGNiODU3OWM2ZWM3ODg4MWYwOWQ3YTE4OA0KMGJiOGQwNzI0YmVhY2YyZGVlNWUyZGEyOWRjYzg4OGEyZGI2OWE1ZDVmZmQ2NTc2OTljMWY4YjBhMmU2NGNhNjA3ZjlhNDllZTc3YmI1NzZlZTVmMDFhOGQ4YzRmNWVhYmQ1YWFmOTZmYjUzMDAzNDFhYzE0YTUzMmViYTRmYmYNCmQzZWM3NGZkMGNhYjgxZDI0MzhiZWY2ZWJkNWIyZDFiNzhjZDdmNzU4MzczZGI5NzNmMDNhZjQwYTk3ZjZmMDNkZmVmMDcxMDQ1MDNhZjQwMjlkZWRmYzA3YjVlYmQxMjc4MDY1ZTgxNTI3YzZkMDM1ZjJmYjViYjVlZGRjMDJiDQo1MDQ4NDk3Y2I4ODEyZWY5YjU2YWIwNWM2ZDBlOTkzMDdhYzMwYTZmZmE1ZWJmNWVjOTljYWY1MDUwMGQ3OTc1YzkyOTI2MmMxNmRiNmEyZDQyMGY1OWQyMDc4MDA0NTIyNDQ4ZWM4OGM1MGM0ZmQwMDhhYTM4NDA5NDFjMjRjNA0KZDkyM2QzMTAwYTZmODY2MmM2NjFiODU0MjlmNTRiNTVmODJmN2Y5ZTNhNTIxMTQxM2IxODY5ZDY5MjE3MzBlMTFiNDM5MjhmYzM0NzA5OTk4OTk2ZmIzOTc4NzUzNWM4ZTllYmQ3Mjc0ZjVmOWQzY2ZkZmRlNGQ5YjM5M2E3YmYNCjY2NzMyYjU3ODZkZDBkMTQ0Zjc1YmJiNzNmN2RmM2NmOGIyZjlkYmY3ZmZiZjFlZGYzNmZkM2E5ZDdmMTVjYzdiZmY5ZTVhYjM3N2ZmY2Y5MmVmN2IwZTI1NTI4NGViZjdiZjllNmQ1Y2JkM2VmYmZmZWViZTdlNzE2ZWZlZDA0DQoxZGU4ZjAyMTg5MzA3NzZlZTE2M2U3MmU4YjYwODExNmZlZjgyMGI5OThjNTMwNDQ0NGI3NjhjNzUzOGU2MjI0NjdiMWY4ZWY4OWQwNDBkZjVhMjA4YTJjYjgwZTM2ZTM3ODNmMDFhOWIxMDFhZmNmMWYxYTg0MDc2MTMyMTdjNA0KZTJmMTY2MTgxOWMwN2RjNjY4ODcyNWQ2MjhkYzk0NzM2OTYxMWVjZWUzYTk3ZGYyNjRhZWUzZWUyMjc0NjQ5YjNiNDBiMTkxZTVkZTdjMDYxYTRiNmMyZTgzMTAxYjM0ZWY1MDE0MGIzNGM1MzExNjhlYmNjNjBlMzFiNmFjZWUNCjAxMjE0NjVjZjdjOTI4NjE5YzRkODRmMzgwMzgxZDQ0YWMyMTE5OTIwM2EzOWE1NjQ2Mzc0ODA0Nzk1OWQ4MDg0MmJlOGRkOGVjZGY3NzNhOGNkYTU2ZGRjNTQ3MjYxMmVlMGQ0NDJkZTQ4Nzk4MWE2MWJjOGVlNjAyNDUzNjk3DQo0MzE0NTEzZGUwN2I0ODg0MzY5MjgzNDUzMmQyNzEzZDJlMjBkMzUzNGM5OWQzMWI2M2NlNmQzNmI3MTM1OGFmOTZmNDliMjAzM2Y2YjRlZmQzNDU2NDIyMTM0MTBlNmQzZWY3MTA2MzNhYjJjYjBlODMxMDQ1MzMxYjc2NDBlMg0KNTBjNzdlYzYwZmExNDQ5MTczODcwOTFiN2M5Zjk5Nzc4ODNjODczY2EwNzg2YmJhZWYxMzZjYTRmYjZjMzViODA3MGFhYjUzNWExNTg4YmMzMjRmMmNiOWJjOGU5OTUxYmY4MzA1OWQyMGFjYTQwNjFhODBhMWViMTE4OWNmMTQNCmY5MzU3OWY3ZmYzYjc5MDcxMTNkZmRlMTg1NjU0NWVmNDdkMmVkOGU4ZDdjNWM1MGNjZGIwOWIxZGU0ZDM3ZDYyNDdjMWI2ZTVkYjgwMzk2OGNjOTg3YWZkYjVkMzQ4ZmVmNjBiODU1MzY5YmQ3NDdkOWZlMjhkYmVlZmY1ZWI2DQpiN2RkY2ZlZjVmYWM1N2ZhMGNkMjJkYjdhZGU5NzY1ZDZkZGVhM2FkN2JmNzA5YTE3NDIwMTYxNGVmNzFiNTdkZTdkMDk1YzY3ZDE4OTQ3NmVhYjkxNWU3Y2Y3MmIzMTAwZWU1OWQwYzEzMThiODY5ODI5NDhkOTMzMGYxMDUxMQ0KZTEyMDQ0MzNkOGUzOTc1ZGU5NjRjYTMzZDc1M2VlY2MxODg3YWRiZjFhYjZmYTk2NzgzYThmZjZkOTM4N2Q2NDJkOTdlNWUzNjkyYTFlMWM4OWQ1NzhjOWNmYzdlMTcxNDNhNGU4NWE3ZGY1MTg5NmJiNTc2Y2E3ZWE3MTc5NDkNCjQwZGE1ZTg0ODQzNjk5NDlhMjZhMjE1MTVmMGVjYTIwYTk4NzczMDg5YTg1ODQ1YWQ5N2I2MWQxYjRiMDY4NDhmN2NiNTQ2ZGIwMDA2YTc5NTY2MGRiZTRjMDY2YWJlNWZhMWU5ODgwMTEzYzU1MjE4YWM3MzI0ZjY5YWE5N2Q5DQo1NWM5N2M5Zjk5ZGUxNjRjYTMwMjYwMGZiMWFjODA1NWE2OWI5MmViZDZlNWM5ZDVhNWE1NzY4ZTRjMWIyNGI0NzIzMzQ5YThjOGE4MWVjNjQzMzRjNjU5NzVjYWQxZjNkMGI4NjhhZTliYWI5NDFhZjQ2NDI4ZDQ3YzUwNWEyYg0KMWFmNWM2YmI1ODVjMzZkNzYwYjdhZTBkMzRkNjk1ODJjNmNlNzFjYmFkNTU3ZDI4OTkxMTlhYjVkYzA5M2NmYWMzNjEzNDgzZGFlMTcyYmI4YmU4MTRkZTlmOGQ0NDkyZGVmMDk3NTE5NjU5YzI0NTE3ZjEzMDBkYjgxMjlkNTQNCjBkMjIyMjcwZTI1MDEyYjU1Y2I5ZmMzYzBkMzQ1NjFhYTJiODk1MmIyMDA4MWYyY2I5MjZjOGNhODc0NjBlOTI2ZTI2MTk0ZjI2NzgyNGY0YjQ2YjIzMzJkMmU5MjkyODdjYWExNWQ2YWJjYWZjZjI2MDY5YzllNjkwZWU0MTM4DQozZTc2MGVlODNjYjk4YmEwYzRmYzdhNTkwNjcwNGMzOGJjMDEyYWE3ZDExYzEzNzhhNTk5MGJkOWFhZmVkNjFhNTMyNmJiZmEzYjQ1NTU0M2U5MzhhMmIzMTA2NTFkNDUxN2YzMTRhZWE0M2NhN2EzY2VmMjE4Njg2N2Q5OWEyMQ0KYTA1YTQ4YjI0Njc4MzA5NTBkNTYwZmFhZDE0ZGYzYWU5MTcyZDhkYTc1Y2YzNjkyOTFkMzQ0NzNkNTMzMGQ1NTkxNWRkM2FlNjJjNjBjY2IzNmIwMTZjYmNiMzU3OThkZDUzMmM0YTA2OTdhODc0ZmE1N2I1ZDcyOWI0YmFkNWINCmRiMjdlNDVkMDIwMjllYzdjZmQyNzVjZmQxMTAzNDZhYWJjOTBjNmE5MmYxYTYwYzRiY2RjZTQ2Y2RkZWIxNWNlMDE5ZDRjZWQzMjQzNGQ1YWYyZGRkYWVjNTJkZWYxMWQ2ZTk2MGYwNTI5ZDFmZWNkNmFiMTY4NjI2Y2I3ZGE1DQo4YWI0ZmFmNmExN2Y5ZTYwMDcwZjQxM2NiYWYwMjI3ODRlMDU1N2E5ODQ4ZjBmMDk4MjBkZDE0MGVkNDk1MmQ5ODA1YmU0OTFjODZlMGQzODcyZTYwOTY5Yjk4ZjRiN2VkYjBiMmE3ZTUwMjgzNWZjNWVjMWFiN2FhNTQyYzM2Zg0KNTcwYjZkZGZhZjk2N2I3ZWI5ZDRlZDU0OWU0MDYzMTE2MTU0ZjZkM2VmMmU3ZDc4MGQ0NTE3ZDlkNzE3MzViZWYxMDUyNjVhYmU2OWJiMzI2MjUxOTFhOTJmMmM0NTQ1NWM3ZDgxMjk1N2I2N2Y4MTcxMDg4OGNlZTM1YWE1ZGYNCmFjMzYzYmI1NDJiM2RhZWUxN2JjNmVhNzUxNjgwNmI1NGVhMTViMGJlYWRkN2UzN2YwMWJjZGZlMTNkNzM5NTI2MGFmNWQwZGJjNWFhZjUxYTg5NTgzYTBlMGQ1NGE5MjdlYTM1OWE4N2I5NTRhZGJhYmI3MWIzZGFmZmQyNGRiDQpjNmMwY2E1M2Y5Yzg2MjAxZTE1NWJjNzZmZjA1MDAwMGZmZmYwMzAwNTA0YjAzMDQxNDAwMDYwMDA4MDAwMDAwMjEwMDBkZDE5MDlmYjYwMDAwMDAxYjAxMDAwMDI3MDAwMDAwNzQ2ODY1NmQ2NTJmNzQ2ODY1NmQ2NTJmNWY3Mg0KNjU2YzczMmY3NDY4NjU2ZDY1NGQ2MTZlNjE2NzY1NzIyZTc4NmQ2YzJlNzI2NTZjNzM4NDhmNGQwYWMyMzAxNDg0Zjc4Mjc3MDg2ZjZmZDNiYTEwOTEyNmRkODhkMGFkZDQwMzg0ZTQzNTBkMzYzZjI0NTFlY2VkMGRhZTJjMDgNCjJlODc2MWJlOTk2OWJiOTc5ZGM5MTM2MzMyZGUzMTY4YWExYTA4M2FlOTk1NzE5YWMxNmRiOGVjOGU0MDUyMTY0ZTg5ZDkzYjY0YjA2MDgyOGU2ZjM3ZWQxNTY3OTE0YjI4NGQyNjI0NTIyODJlMzE5ODcyMGUyNzRhOTM5Y2QwDQo4YTU0Zjk4MGFlMzhhMzhmNTZlNDIyYTNhNjQxYzhiYmQwNDhmNzc1N2RhMGYxOWIwMTdjYzUyNGJkNjIxMDdiZDUwMDE5OTY1MDlhZmZiM2ZkMzgxYTg5NjcyZjFmMTY1ZGZlNTE0MTczZDk4NTA1MjhhMmM2Y2NlMDIzOWJhYQ0KNGMwNGNhNWJiYWJhYzRkZjAwMDAwMGZmZmYwMzAwNTA0YjAxMDIyZDAwMTQwMDA2MDAwODAwMDAwMDIxMDBlOWRlMGZiZmZmMDAwMDAwMWMwMjAwMDAxMzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA1YjQzNmYNCjZlNzQ2NTZlNzQ1ZjU0Nzk3MDY1NzM1ZDJlNzg2ZDZjNTA0YjAxMDIyZDAwMTQwMDA2MDAwODAwMDAwMDIxMDBhNWQ2YTdlN2MwMDAwMDAwMzYwMTAwMDAwYjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMzAwMTAwMDA1ZjcyDQo2NTZjNzMyZjJlNzI2NTZjNzM1MDRiMDEwMjJkMDAxNDAwMDYwMDA4MDAwMDAwMjEwMDZiNzk5NjE2ODMwMDAwMDA4YTAwMDAwMDFjMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAxOTAyMDAwMDc0Njg2NTZkNjUyZjc0Njg2NQ0KNmQ2NTJmNzQ2ODY1NmQ2NTRkNjE2ZTYxNjc2NTcyMmU3ODZkNmM1MDRiMDEwMjJkMDAxNDAwMDYwMDA4MDAwMDAwMjEwMDA3Yjc0MGFhY2EwNjAwMDA4ZjFhMDAwMDE2MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBkNjAyMDANCjAwNzQ2ODY1NmQ2NTJmNzQ2ODY1NmQ2NTJmNzQ2ODY1NmQ2NTMxMmU3ODZkNmM1MDRiMDEwMjJkMDAxNDAwMDYwMDA4MDAwMDAwMjEwMDBkZDE5MDlmYjYwMDAwMDAxYjAxMDAwMDI3MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwDQowMGQ0MDkwMDAwNzQ2ODY1NmQ2NTJmNzQ2ODY1NmQ2NTJmNWY3MjY1NmM3MzJmNzQ2ODY1NmQ2NTRkNjE2ZTYxNjc2NTcyMmU3ODZkNmMyZTcyNjU2YzczNTA0YjA1MDYwMDAwMDAwMDA1MDAwNTAwNWQwMTAwMDBjZjBhMDAwMDAwMDB9DQp7XCpcY29sb3JzY2hlbWVtYXBwaW5nIDNjM2Y3ODZkNmMyMDc2NjU3MjczNjk2ZjZlM2QyMjMxMmUzMDIyMjA2NTZlNjM2ZjY0Njk2ZTY3M2QyMjU1NTQ0NjJkMzgyMjIwNzM3NDYxNmU2NDYxNmM2ZjZlNjUzZDIyNzk2NTczMjIzZjNlMGQwYTNjNjEzYTYzNmM3MjRkDQo2MTcwMjA3ODZkNmM2ZTczM2E2MTNkMjI2ODc0NzQ3MDNhMmYyZjczNjM2ODY1NmQ2MTczMmU2ZjcwNjU2ZTc4NmQ2YzY2NmY3MjZkNjE3NDczMmU2ZjcyNjcyZjY0NzI2MTc3Njk2ZTY3NmQ2YzJmMzIzMDMwMzYyZjZkNjE2OQ0KNmUyMjIwNjI2NzMxM2QyMjZjNzQzMTIyMjA3NDc4MzEzZDIyNjQ2YjMxMjIyMDYyNjczMjNkMjI2Yzc0MzIyMjIwNzQ3ODMyM2QyMjY0NmIzMjIyMjA2MTYzNjM2NTZlNzQzMTNkMjI2MTYzNjM2NTZlNzQzMTIyMjA2MTYzNjMNCjY1NmU3NDMyM2QyMjYxNjM2MzY1NmU3NDMyMjIyMDYxNjM2MzY1NmU3NDMzM2QyMjYxNjM2MzY1NmU3NDMzMjIyMDYxNjM2MzY1NmU3NDM0M2QyMjYxNjM2MzY1NmU3NDM0MjIyMDYxNjM2MzY1NmU3NDM1M2QyMjYxNjM2MzY1NmU3NDM1MjIyMDYxNjM2MzY1NmU3NDM2M2QyMjYxNjM2MzY1NmU3NDM2MjIyMDY4NmM2OTZlNmIzZDIyNjg2YzY5NmU2YjIyMjA2NjZmNmM0ODZjNjk2ZTZiM2QyMjY2NmY2YzQ4NmM2OTZlNmIyMjJmM2V9DQp7XCpcbGF0ZW50c3R5bGVzXGxzZHN0aW1heDM3MVxsc2Rsb2NrZWRkZWYwXGxzZHNlbWloaWRkZW5kZWYwXGxzZHVuaGlkZXVzZWRkZWYwXGxzZHFmb3JtYXRkZWYwXGxzZHByaW9yaXR5ZGVmOTl7XGxzZGxvY2tlZGV4Y2VwdCBcbHNkcWZvcm1hdDEgXGxzZHByaW9yaXR5OTggXGxzZGxvY2tlZDAgTm9ybWFsO1xsc2RxZm9ybWF0MSBcbHNkcHJpb3JpdHkwIFxsc2Rsb2NrZWQwIGhlYWRpbmcgMTsNClxsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZHFmb3JtYXQxIFxsc2Rwcmlvcml0eTAgXGxzZGxvY2tlZDAgaGVhZGluZyAyO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZHFmb3JtYXQxIFxsc2Rwcmlvcml0eTAgXGxzZGxvY2tlZDAgaGVhZGluZyAzO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZHFmb3JtYXQxIFxsc2Rwcmlvcml0eTAgXGxzZGxvY2tlZDAgaGVhZGluZyA0Ow0KXGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkcWZvcm1hdDEgXGxzZHByaW9yaXR5MCBcbHNkbG9ja2VkMCBoZWFkaW5nIDU7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkcWZvcm1hdDEgXGxzZHByaW9yaXR5MCBcbHNkbG9ja2VkMCBoZWFkaW5nIDY7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkcWZvcm1hdDEgXGxzZHByaW9yaXR5MCBcbHNkbG9ja2VkMCBoZWFkaW5nIDc7DQpcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2RxZm9ybWF0MSBcbHNkcHJpb3JpdHkwIFxsc2Rsb2NrZWQwIGhlYWRpbmcgODtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2RxZm9ybWF0MSBcbHNkcHJpb3JpdHkwIFxsc2Rsb2NrZWQwIGhlYWRpbmcgOTtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIGluZGV4IDE7DQpcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIGluZGV4IDI7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBpbmRleCAzO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgaW5kZXggNDtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIGluZGV4IDU7DQpcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIGluZGV4IDY7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBpbmRleCA3O1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgaW5kZXggODtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIGluZGV4IDk7DQpcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rwcmlvcml0eTM5IFxsc2Rsb2NrZWQwIHRvYyAxO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZHByaW9yaXR5MzkgXGxzZGxvY2tlZDAgdG9jIDI7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkcHJpb3JpdHkzOSBcbHNkbG9ja2VkMCB0b2MgMzsNClxsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZHByaW9yaXR5MzkgXGxzZGxvY2tlZDAgdG9jIDQ7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkcHJpb3JpdHkzOSBcbHNkbG9ja2VkMCB0b2MgNTtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rwcmlvcml0eTM5IFxsc2Rsb2NrZWQwIHRvYyA2Ow0KXGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkcHJpb3JpdHkzOSBcbHNkbG9ja2VkMCB0b2MgNztcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rwcmlvcml0eTM5IFxsc2Rsb2NrZWQwIHRvYyA4O1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZHByaW9yaXR5MzkgXGxzZGxvY2tlZDAgdG9jIDk7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBOb3JtYWwgSW5kZW50Ow0KXGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBmb290bm90ZSB0ZXh0O1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgYW5ub3RhdGlvbiB0ZXh0O1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZHByaW9yaXR5MCBcbHNkbG9ja2VkMCBoZWFkZXI7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBmb290ZXI7DQpcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIGluZGV4IGhlYWRpbmc7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkcWZvcm1hdDEgXGxzZHByaW9yaXR5MzUgXGxzZGxvY2tlZDAgY2FwdGlvbjtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIHRhYmxlIG9mIGZpZ3VyZXM7DQpcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIGVudmVsb3BlIGFkZHJlc3M7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBlbnZlbG9wZSByZXR1cm47XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkcHJpb3JpdHkwIFxsc2Rsb2NrZWQwIGZvb3Rub3RlIHJlZmVyZW5jZTsNClxsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgYW5ub3RhdGlvbiByZWZlcmVuY2U7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBsaW5lIG51bWJlcjtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIHBhZ2UgbnVtYmVyO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgZW5kbm90ZSByZWZlcmVuY2U7DQpcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIGVuZG5vdGUgdGV4dDtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIHRhYmxlIG9mIGF1dGhvcml0aWVzO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgbWFjcm87XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCB0b2EgaGVhZGluZzsNClxsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgTGlzdDtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rwcmlvcml0eTAgXGxzZGxvY2tlZDAgTGlzdCBCdWxsZXQ7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBMaXN0IE51bWJlcjtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIExpc3QgMjsNClxsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgTGlzdCAzO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgTGlzdCA0O1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgTGlzdCA1O1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZHByaW9yaXR5MCBcbHNkbG9ja2VkMCBMaXN0IEJ1bGxldCAyOw0KXGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBMaXN0IEJ1bGxldCAzO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgTGlzdCBCdWxsZXQgNDtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIExpc3QgQnVsbGV0IDU7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBMaXN0IE51bWJlciAyOw0KXGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBMaXN0IE51bWJlciAzO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgTGlzdCBOdW1iZXIgNDtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIExpc3QgTnVtYmVyIDU7XGxzZHFmb3JtYXQxIFxsc2Rwcmlvcml0eTAgXGxzZGxvY2tlZDAgVGl0bGU7DQpcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIENsb3Npbmc7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkcHJpb3JpdHkyMCBcbHNkbG9ja2VkMCBTaWduYXR1cmU7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkcHJpb3JpdHkxIFxsc2Rsb2NrZWQwIERlZmF1bHQgUGFyYWdyYXBoIEZvbnQ7DQpcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2RxZm9ybWF0MSBcbHNkcHJpb3JpdHkxIFxsc2Rsb2NrZWQwIEJvZHkgVGV4dDtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIEJvZHkgVGV4dCBJbmRlbnQ7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBMaXN0IENvbnRpbnVlOw0KXGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBMaXN0IENvbnRpbnVlIDI7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBMaXN0IENvbnRpbnVlIDM7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBMaXN0IENvbnRpbnVlIDQ7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBMaXN0IENvbnRpbnVlIDU7DQpcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIE1lc3NhZ2UgSGVhZGVyO1xsc2RxZm9ybWF0MSBcbHNkcHJpb3JpdHkxMCBcbHNkbG9ja2VkMCBTdWJ0aXRsZTtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rwcmlvcml0eTIwIFxsc2Rsb2NrZWQwIFNhbHV0YXRpb247XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBEYXRlOw0KXGxzZHFmb3JtYXQxIFxsc2Rwcmlvcml0eTEgXGxzZGxvY2tlZDAgQm9keSBUZXh0IEZpcnN0IEluZGVudDtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rwcmlvcml0eTQgXGxzZGxvY2tlZDAgQm9keSBUZXh0IEZpcnN0IEluZGVudCAyO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZHByaW9yaXR5NCBcbHNkbG9ja2VkMCBCb2R5IFRleHQgMjsNClxsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZHFmb3JtYXQxIFxsc2Rsb2NrZWQwIEJvZHkgVGV4dCAzO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgQm9keSBUZXh0IEluZGVudCAyO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgQm9keSBUZXh0IEluZGVudCAzOw0KXGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkcWZvcm1hdDEgXGxzZGxvY2tlZDAgQmxvY2sgVGV4dDtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIEh5cGVybGluaztcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIEZvbGxvd2VkSHlwZXJsaW5rO1xsc2RxZm9ybWF0MSBcbHNkbG9ja2VkMCBTdHJvbmc7DQpcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIERvY3VtZW50IE1hcDtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIFBsYWluIFRleHQ7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBFLW1haWwgU2lnbmF0dXJlO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgSFRNTCBUb3Agb2YgRm9ybTsNClxsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgSFRNTCBCb3R0b20gb2YgRm9ybTtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIE5vcm1hbCAoV2ViKTtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIEhUTUwgQWNyb255bTtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIEhUTUwgQWRkcmVzczsNClxsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgSFRNTCBDaXRlO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgSFRNTCBDb2RlO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgSFRNTCBEZWZpbml0aW9uO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgSFRNTCBLZXlib2FyZDsNClxsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgSFRNTCBQcmVmb3JtYXR0ZWQ7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBIVE1MIFNhbXBsZTtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIEhUTUwgVHlwZXdyaXRlcjtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIEhUTUwgVmFyaWFibGU7DQpcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIE5vcm1hbCBUYWJsZTtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIGFubm90YXRpb24gc3ViamVjdDtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIE5vIExpc3Q7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBPdXRsaW5lIExpc3QgMTsNClxsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgT3V0bGluZSBMaXN0IDI7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBPdXRsaW5lIExpc3QgMztcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIFRhYmxlIFNpbXBsZSAxO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgVGFibGUgU2ltcGxlIDI7DQpcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIFRhYmxlIFNpbXBsZSAzO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgVGFibGUgQ2xhc3NpYyAxO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgVGFibGUgQ2xhc3NpYyAyO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgVGFibGUgQ2xhc3NpYyAzOw0KXGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBUYWJsZSBDbGFzc2ljIDQ7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBUYWJsZSBDb2xvcmZ1bCAxO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgVGFibGUgQ29sb3JmdWwgMjtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIFRhYmxlIENvbG9yZnVsIDM7DQpcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIFRhYmxlIENvbHVtbnMgMTtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIFRhYmxlIENvbHVtbnMgMjtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIFRhYmxlIENvbHVtbnMgMztcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIFRhYmxlIENvbHVtbnMgNDsNClxsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgVGFibGUgQ29sdW1ucyA1O1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgVGFibGUgR3JpZCAxO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgVGFibGUgR3JpZCAyO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgVGFibGUgR3JpZCAzOw0KXGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBUYWJsZSBHcmlkIDQ7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBUYWJsZSBHcmlkIDU7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBUYWJsZSBHcmlkIDY7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBUYWJsZSBHcmlkIDc7DQpcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIFRhYmxlIEdyaWQgODtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIFRhYmxlIExpc3QgMTtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIFRhYmxlIExpc3QgMjtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIFRhYmxlIExpc3QgMzsNClxsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgVGFibGUgTGlzdCA0O1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgVGFibGUgTGlzdCA1O1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgVGFibGUgTGlzdCA2O1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgVGFibGUgTGlzdCA3Ow0KXGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBUYWJsZSBMaXN0IDg7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBUYWJsZSAzRCBlZmZlY3RzIDE7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBUYWJsZSAzRCBlZmZlY3RzIDI7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBUYWJsZSAzRCBlZmZlY3RzIDM7DQpcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIFRhYmxlIENvbnRlbXBvcmFyeTtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIFRhYmxlIEVsZWdhbnQ7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBUYWJsZSBQcm9mZXNzaW9uYWw7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBUYWJsZSBTdWJ0bGUgMTsNClxsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgVGFibGUgU3VidGxlIDI7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBUYWJsZSBXZWIgMTtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIFRhYmxlIFdlYiAyO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgVGFibGUgV2ViIDM7DQpcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIEJhbGxvb24gVGV4dDtcbHNkcHJpb3JpdHk1OSBcbHNkbG9ja2VkMCBUYWJsZSBHcmlkO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgVGFibGUgVGhlbWU7XGxzZHNlbWloaWRkZW4xIFxsc2Rsb2NrZWQwIFBsYWNlaG9sZGVyIFRleHQ7XGxzZHFmb3JtYXQxIFxsc2Rwcmlvcml0eTEgXGxzZGxvY2tlZDAgTm8gU3BhY2luZzsNClxsc2Rwcmlvcml0eTYwIFxsc2Rsb2NrZWQwIExpZ2h0IFNoYWRpbmc7XGxzZHByaW9yaXR5NjEgXGxzZGxvY2tlZDAgTGlnaHQgTGlzdDtcbHNkcHJpb3JpdHk2MiBcbHNkbG9ja2VkMCBMaWdodCBHcmlkO1xsc2Rwcmlvcml0eTYzIFxsc2Rsb2NrZWQwIE1lZGl1bSBTaGFkaW5nIDE7XGxzZHByaW9yaXR5NjQgXGxzZGxvY2tlZDAgTWVkaXVtIFNoYWRpbmcgMjtcbHNkcHJpb3JpdHk2NSBcbHNkbG9ja2VkMCBNZWRpdW0gTGlzdCAxOw0KXGxzZHByaW9yaXR5NjYgXGxzZGxvY2tlZDAgTWVkaXVtIExpc3QgMjtcbHNkcHJpb3JpdHk2NyBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAxO1xsc2Rwcmlvcml0eTY4IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDI7XGxzZHByaW9yaXR5NjkgXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMztcbHNkcHJpb3JpdHk3MCBcbHNkbG9ja2VkMCBEYXJrIExpc3Q7XGxzZHByaW9yaXR5NzEgXGxzZGxvY2tlZDAgQ29sb3JmdWwgU2hhZGluZzsNClxsc2Rwcmlvcml0eTcyIFxsc2Rsb2NrZWQwIENvbG9yZnVsIExpc3Q7XGxzZHByaW9yaXR5NzMgXGxzZGxvY2tlZDAgQ29sb3JmdWwgR3JpZDtcbHNkcHJpb3JpdHk2MCBcbHNkbG9ja2VkMCBMaWdodCBTaGFkaW5nIEFjY2VudCAxO1xsc2Rwcmlvcml0eTYxIFxsc2Rsb2NrZWQwIExpZ2h0IExpc3QgQWNjZW50IDE7XGxzZHByaW9yaXR5NjIgXGxzZGxvY2tlZDAgTGlnaHQgR3JpZCBBY2NlbnQgMTsNClxsc2Rwcmlvcml0eTYzIFxsc2Rsb2NrZWQwIE1lZGl1bSBTaGFkaW5nIDEgQWNjZW50IDE7XGxzZHByaW9yaXR5NjQgXGxzZGxvY2tlZDAgTWVkaXVtIFNoYWRpbmcgMiBBY2NlbnQgMTtcbHNkcHJpb3JpdHk2NSBcbHNkbG9ja2VkMCBNZWRpdW0gTGlzdCAxIEFjY2VudCAxO1xsc2RzZW1paGlkZGVuMSBcbHNkbG9ja2VkMCBSZXZpc2lvbjtcbHNkcWZvcm1hdDEgXGxzZHByaW9yaXR5MzQgXGxzZGxvY2tlZDAgTGlzdCBQYXJhZ3JhcGg7DQpcbHNkcWZvcm1hdDEgXGxzZHByaW9yaXR5MSBcbHNkbG9ja2VkMCBRdW90ZTtcbHNkcHJpb3JpdHk2NiBcbHNkbG9ja2VkMCBNZWRpdW0gTGlzdCAyIEFjY2VudCAxO1xsc2Rwcmlvcml0eTY3IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDEgQWNjZW50IDE7XGxzZHByaW9yaXR5NjggXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMiBBY2NlbnQgMTtcbHNkcHJpb3JpdHk2OSBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAzIEFjY2VudCAxOw0KXGxzZHByaW9yaXR5NzAgXGxzZGxvY2tlZDAgRGFyayBMaXN0IEFjY2VudCAxO1xsc2Rwcmlvcml0eTcxIFxsc2Rsb2NrZWQwIENvbG9yZnVsIFNoYWRpbmcgQWNjZW50IDE7XGxzZHByaW9yaXR5NzIgXGxzZGxvY2tlZDAgQ29sb3JmdWwgTGlzdCBBY2NlbnQgMTtcbHNkcHJpb3JpdHk3MyBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBHcmlkIEFjY2VudCAxO1xsc2Rwcmlvcml0eTYwIFxsc2Rsb2NrZWQwIExpZ2h0IFNoYWRpbmcgQWNjZW50IDI7DQpcbHNkcHJpb3JpdHk2MSBcbHNkbG9ja2VkMCBMaWdodCBMaXN0IEFjY2VudCAyO1xsc2Rwcmlvcml0eTYyIFxsc2Rsb2NrZWQwIExpZ2h0IEdyaWQgQWNjZW50IDI7XGxzZHByaW9yaXR5NjMgXGxzZGxvY2tlZDAgTWVkaXVtIFNoYWRpbmcgMSBBY2NlbnQgMjtcbHNkcHJpb3JpdHk2NCBcbHNkbG9ja2VkMCBNZWRpdW0gU2hhZGluZyAyIEFjY2VudCAyO1xsc2Rwcmlvcml0eTY1IFxsc2Rsb2NrZWQwIE1lZGl1bSBMaXN0IDEgQWNjZW50IDI7DQpcbHNkcHJpb3JpdHk2NiBcbHNkbG9ja2VkMCBNZWRpdW0gTGlzdCAyIEFjY2VudCAyO1xsc2Rwcmlvcml0eTY3IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDEgQWNjZW50IDI7XGxzZHByaW9yaXR5NjggXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMiBBY2NlbnQgMjtcbHNkcHJpb3JpdHk2OSBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAzIEFjY2VudCAyO1xsc2Rwcmlvcml0eTcwIFxsc2Rsb2NrZWQwIERhcmsgTGlzdCBBY2NlbnQgMjsNClxsc2Rwcmlvcml0eTcxIFxsc2Rsb2NrZWQwIENvbG9yZnVsIFNoYWRpbmcgQWNjZW50IDI7XGxzZHByaW9yaXR5NzIgXGxzZGxvY2tlZDAgQ29sb3JmdWwgTGlzdCBBY2NlbnQgMjtcbHNkcHJpb3JpdHk3MyBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBHcmlkIEFjY2VudCAyO1xsc2Rwcmlvcml0eTYwIFxsc2Rsb2NrZWQwIExpZ2h0IFNoYWRpbmcgQWNjZW50IDM7XGxzZHByaW9yaXR5NjEgXGxzZGxvY2tlZDAgTGlnaHQgTGlzdCBBY2NlbnQgMzsNClxsc2Rwcmlvcml0eTYyIFxsc2Rsb2NrZWQwIExpZ2h0IEdyaWQgQWNjZW50IDM7XGxzZHByaW9yaXR5NjMgXGxzZGxvY2tlZDAgTWVkaXVtIFNoYWRpbmcgMSBBY2NlbnQgMztcbHNkcHJpb3JpdHk2NCBcbHNkbG9ja2VkMCBNZWRpdW0gU2hhZGluZyAyIEFjY2VudCAzO1xsc2Rwcmlvcml0eTY1IFxsc2Rsb2NrZWQwIE1lZGl1bSBMaXN0IDEgQWNjZW50IDM7XGxzZHByaW9yaXR5NjYgXGxzZGxvY2tlZDAgTWVkaXVtIExpc3QgMiBBY2NlbnQgMzsNClxsc2Rwcmlvcml0eTY3IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDEgQWNjZW50IDM7XGxzZHByaW9yaXR5NjggXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMiBBY2NlbnQgMztcbHNkcHJpb3JpdHk2OSBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAzIEFjY2VudCAzO1xsc2Rwcmlvcml0eTcwIFxsc2Rsb2NrZWQwIERhcmsgTGlzdCBBY2NlbnQgMztcbHNkcHJpb3JpdHk3MSBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBTaGFkaW5nIEFjY2VudCAzOw0KXGxzZHByaW9yaXR5NzIgXGxzZGxvY2tlZDAgQ29sb3JmdWwgTGlzdCBBY2NlbnQgMztcbHNkcHJpb3JpdHk3MyBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBHcmlkIEFjY2VudCAzO1xsc2Rwcmlvcml0eTYwIFxsc2Rsb2NrZWQwIExpZ2h0IFNoYWRpbmcgQWNjZW50IDQ7XGxzZHByaW9yaXR5NjEgXGxzZGxvY2tlZDAgTGlnaHQgTGlzdCBBY2NlbnQgNDtcbHNkcHJpb3JpdHk2MiBcbHNkbG9ja2VkMCBMaWdodCBHcmlkIEFjY2VudCA0Ow0KXGxzZHByaW9yaXR5NjMgXGxzZGxvY2tlZDAgTWVkaXVtIFNoYWRpbmcgMSBBY2NlbnQgNDtcbHNkcHJpb3JpdHk2NCBcbHNkbG9ja2VkMCBNZWRpdW0gU2hhZGluZyAyIEFjY2VudCA0O1xsc2Rwcmlvcml0eTY1IFxsc2Rsb2NrZWQwIE1lZGl1bSBMaXN0IDEgQWNjZW50IDQ7XGxzZHByaW9yaXR5NjYgXGxzZGxvY2tlZDAgTWVkaXVtIExpc3QgMiBBY2NlbnQgNDsNClxsc2Rwcmlvcml0eTY3IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDEgQWNjZW50IDQ7XGxzZHByaW9yaXR5NjggXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMiBBY2NlbnQgNDtcbHNkcHJpb3JpdHk2OSBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAzIEFjY2VudCA0O1xsc2Rwcmlvcml0eTcwIFxsc2Rsb2NrZWQwIERhcmsgTGlzdCBBY2NlbnQgNDtcbHNkcHJpb3JpdHk3MSBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBTaGFkaW5nIEFjY2VudCA0Ow0KXGxzZHByaW9yaXR5NzIgXGxzZGxvY2tlZDAgQ29sb3JmdWwgTGlzdCBBY2NlbnQgNDtcbHNkcHJpb3JpdHk3MyBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBHcmlkIEFjY2VudCA0O1xsc2Rwcmlvcml0eTYwIFxsc2Rsb2NrZWQwIExpZ2h0IFNoYWRpbmcgQWNjZW50IDU7XGxzZHByaW9yaXR5NjEgXGxzZGxvY2tlZDAgTGlnaHQgTGlzdCBBY2NlbnQgNTtcbHNkcHJpb3JpdHk2MiBcbHNkbG9ja2VkMCBMaWdodCBHcmlkIEFjY2VudCA1Ow0KXGxzZHByaW9yaXR5NjMgXGxzZGxvY2tlZDAgTWVkaXVtIFNoYWRpbmcgMSBBY2NlbnQgNTtcbHNkcHJpb3JpdHk2NCBcbHNkbG9ja2VkMCBNZWRpdW0gU2hhZGluZyAyIEFjY2VudCA1O1xsc2Rwcmlvcml0eTY1IFxsc2Rsb2NrZWQwIE1lZGl1bSBMaXN0IDEgQWNjZW50IDU7XGxzZHByaW9yaXR5NjYgXGxzZGxvY2tlZDAgTWVkaXVtIExpc3QgMiBBY2NlbnQgNTsNClxsc2Rwcmlvcml0eTY3IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDEgQWNjZW50IDU7XGxzZHByaW9yaXR5NjggXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMiBBY2NlbnQgNTtcbHNkcHJpb3JpdHk2OSBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAzIEFjY2VudCA1O1xsc2Rwcmlvcml0eTcwIFxsc2Rsb2NrZWQwIERhcmsgTGlzdCBBY2NlbnQgNTtcbHNkcHJpb3JpdHk3MSBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBTaGFkaW5nIEFjY2VudCA1Ow0KXGxzZHByaW9yaXR5NzIgXGxzZGxvY2tlZDAgQ29sb3JmdWwgTGlzdCBBY2NlbnQgNTtcbHNkcHJpb3JpdHk3MyBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBHcmlkIEFjY2VudCA1O1xsc2Rwcmlvcml0eTYwIFxsc2Rsb2NrZWQwIExpZ2h0IFNoYWRpbmcgQWNjZW50IDY7XGxzZHByaW9yaXR5NjEgXGxzZGxvY2tlZDAgTGlnaHQgTGlzdCBBY2NlbnQgNjtcbHNkcHJpb3JpdHk2MiBcbHNkbG9ja2VkMCBMaWdodCBHcmlkIEFjY2VudCA2Ow0KXGxzZHByaW9yaXR5NjMgXGxzZGxvY2tlZDAgTWVkaXVtIFNoYWRpbmcgMSBBY2NlbnQgNjtcbHNkcHJpb3JpdHk2NCBcbHNkbG9ja2VkMCBNZWRpdW0gU2hhZGluZyAyIEFjY2VudCA2O1xsc2Rwcmlvcml0eTY1IFxsc2Rsb2NrZWQwIE1lZGl1bSBMaXN0IDEgQWNjZW50IDY7XGxzZHByaW9yaXR5NjYgXGxzZGxvY2tlZDAgTWVkaXVtIExpc3QgMiBBY2NlbnQgNjsNClxsc2Rwcmlvcml0eTY3IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDEgQWNjZW50IDY7XGxzZHByaW9yaXR5NjggXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMiBBY2NlbnQgNjtcbHNkcHJpb3JpdHk2OSBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAzIEFjY2VudCA2O1xsc2Rwcmlvcml0eTcwIFxsc2Rsb2NrZWQwIERhcmsgTGlzdCBBY2NlbnQgNjtcbHNkcHJpb3JpdHk3MSBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBTaGFkaW5nIEFjY2VudCA2Ow0KXGxzZHByaW9yaXR5NzIgXGxzZGxvY2tlZDAgQ29sb3JmdWwgTGlzdCBBY2NlbnQgNjtcbHNkcHJpb3JpdHk3MyBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBHcmlkIEFjY2VudCA2O1xsc2RzZW1paGlkZGVuMSBcbHNkcHJpb3JpdHk5OCBcbHNkbG9ja2VkMCBCb29rIFRpdGxlO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZHByaW9yaXR5MzcgXGxzZGxvY2tlZDAgQmlibGlvZ3JhcGh5Ow0KXGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkcHJpb3JpdHkzOSBcbHNkbG9ja2VkMCBUT0MgSGVhZGluZzt9fXtcKlxkYXRhc3RvcmUgMDEwNTAwMDAwMjAwMDAwMDE4MDAwMDAwNGQ3Mzc4NmQ2YzMyMmU1MzQxNTg1ODRkNGM1MjY1NjE2NDY1NzIyZTM2MmUzMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGUwMDAwDQpkMGNmMTFlMGExYjExYWUxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAzZTAwMDMwMGZlZmYwOTAwMDYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDEwMDAwMDAwMTAwMDAwMDAwMDAwMDAwMDAxMDAwMDAwMjAwMDAwMDAxMDAwMDAwZmVmZmZmZmYwMDAwMDAwMDAwMDAwMDAwZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYNCmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZg0KZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmDQpmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYNCmZmZmZmZmZmZmZmZmZmZmZmZGZmZmZmZjA0MDAwMDAwZmVmZmZmZmYwNTAwMDAwMGZlZmZmZmZmZmVmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZg0KZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmDQpmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYNCmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZg0KZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmY1MjAwNmYwMDZmMDA3NDAwMjAwMDQ1MDA2ZTAwNzQwMDcyMDA3OTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDE2MDAwNTAwZmZmZmZmZmZmZmZmZmZmZjAxMDAwMDAwMGM2YWQ5ODg5MmYxZDQxMWE2NWYwMDQwOTYzMjUxZTUwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAzMDgyDQpmZGY3NWVmM2Q2MDEwMzAwMDAwMGMwMDIwMDAwMDAwMDAwMDA0ZDAwNzMwMDZmMDA0NDAwNjEwMDc0MDA2MTAwNTMwMDc0MDA2ZjAwNzIwMDY1MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDFhMDAwMTAxZmZmZmZmZmZmZmZmZmZmZjAyMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDIwNWJmZGY3NWVmM2Q2MDENCjMwODJmZGY3NWVmM2Q2MDEwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBkNzAwYzYwMDQyMDBjYTAwNTIwMGMzMDBkODAwYzMwMGQxMDBjNDAwMzAwMGQyMDBjNzAwNDQwMDM1MDA1NDAwZDAwMGM4MDBjZDAwNGQwMDRiMDA0MTAwM2QwMDNkMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDMyMDAwMTAxZmZmZmZmZmZmZmZmZmZmZjAzMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDIwNWJmZGY3NWVmMw0KZDYwMTMwODJmZGY3NWVmM2Q2MDEwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA0OTAwNzQwMDY1MDA2ZDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBhMDAwMjAxZmZmZmZmZmYwNDAwMDAwMGZmZmZmZmZmMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwDQowMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDMyMDEwMDAwMDAwMDAwMDAwMTAwMDAwMDAyMDAwMDAwMDMwMDAwMDAwNDAwMDAwMGZlZmZmZmZmMDYwMDAwMDAwNzAwMDAwMDA4MDAwMDAwMDkwMDAwMDAwYTAwMDAwMGZlZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYNCmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZg0KZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmDQpmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYNCmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYzYzNmNzg2ZDZjMjA3NjY1NzI3MzY5NmY2ZTNkMjIzMTJlMzAyMjIwNjU2ZTYzNmY2NDY5NmU2NzNkMjI1NTU0NDYyZDM4MjIyMDczNzQ2MTZlNjQ2MTZjNmY2ZTY1M2QyMjZlNmYyMjNmM2UzYzYyM2E1MzZmNzU3MjYzNjU3MzIwNzg2ZDZjNmU3MzNhNjIzZDIyNjg3NDc0NzAzYTJmMmY3MzYzNjg2NTZkNjE3MzJlNmY3MDY1NmU3OA0KNmQ2YzY2NmY3MjZkNjE3NDczMmU2ZjcyNjcyZjZmNjY2NjY5NjM2NTQ0NmY2Mzc1NmQ2NTZlNzQyZjMyMzAzMDM2MmY2MjY5NjI2YzY5NmY2NzcyNjE3MDY4NzkyMjIwNzg2ZDZjNmU3MzNkMjI2ODc0NzQ3MDNhMmYyZjczNjM2ODY1NmQ2MTczMmU2ZjcwNjU2ZTc4NmQ2YzY2NmY3MjZkNjE3NDczMmU2ZjcyNjcyZjZmNjY2NjY5NjM2NTQ0NmY2Mzc1NmQ2NTZlNzQyZjMyMzAzMDM2MmY2MjY5NjI2YzY5NmY2NzcyNjE3MDY4NzkyMjIwNTM2NTZjDQo2NTYzNzQ2NTY0NTM3NDc5NmM2NTNkMjI1YzQxNTA0MTUzNjk3ODc0Njg0NTY0Njk3NDY5NmY2ZTRmNjY2NjY5NjM2NTRmNmU2YzY5NmU2NTJlNzg3MzZjMjIyMDUzNzQ3OTZjNjU0ZTYxNmQ2NTNkMjI0MTUwNDEyMjIwNTY2NTcyNzM2OTZmNmUzZDIyMzYyMjNlM2MyZjYyM2E1MzZmNzU3MjYzNjU3MzNlMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDNjM2Y3ODZkNmMyMDc2NjU3MjczNjk2ZjZlM2QyMjMxMmUzMDIyMjA2NTZlNjM2ZjY0NjkNCjZlNjczZDIyNTU1NDQ2MmQzODIyMjA3Mzc0NjE2ZTY0NjE2YzZmNmU2NTNkMjI2ZTZmMjIzZjNlMGQwYTNjNjQ3MzNhNjQ2MTc0NjE3Mzc0NmY3MjY1NDk3NDY1NmQyMDY0NzMzYTY5NzQ2NTZkNDk0NDNkMjI3YjM0MzYzNjQxMzYzMDQ0NDUyZDMyMzMzMzQ1MmQzNDM2NDMzNjJkNDIzMjM5NDMyZDMzMzc0NDMzNDMzMjM4NDIzNDQzMzIzODdkMjIyMDc4NmQ2YzZlNzMzYTY0NzMzZDIyNjg3NDc0NzAzYTJmMmY3MzYzNjg2NTZkNjE3MzJlNmY3MA0KNjU2ZTc4NmQ2YzY2NmY3MjZkNjE3NDczMmU2ZjcyNjcyZjZmNjY2NjY5NjM2NTQ0NmY2Mzc1NmQ2NTZlNzQyZjMyMzAzMDM2MmY2Mzc1NzM1MDAwNzIwMDZmMDA3MDAwNjUwMDcyMDA3NDAwNjkwMDY1MDA3MzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDE2MDAwMjAwZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmMDAwMDAwMDAwMDAwDQowMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwNTAwMDAwMDU1MDEwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmMDAwMDAwMDANCjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmMDAwMA0KMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmDQowMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA3NDZmNmQ1ODZkNmMyMjNlM2M2NDczM2E3MzYzNjg2NTZkNjE1MjY1NjY3MzNlM2M2NDczM2E3MzYzNjg2NTZkNjE1MjY1NjYyMDY0NzMzYTc1NzI2OTNkMjI2ODc0NzQ3MDNhMmYyZjczNjM2ODY1NmQ2MTczMmU2ZjcwNjU2ZTc4NmQ2YzY2NmY3MjZkNjE3NDczMmU2ZjcyNjcNCjJmNmY2NjY2Njk2MzY1NDQ2ZjYzNzU2ZDY1NmU3NDJmMzIzMDMwMzYyZjYyNjk2MjZjNjk2ZjY3NzI2MTcwNjg3OTIyMmYzZTNjMmY2NDczM2E3MzYzNjg2NTZkNjE1MjY1NjY3MzNlM2MyZjY0NzMzYTY0NjE3NDYxNzM3NDZmNzI2NTQ5NzQ2NTZkM2UwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMA0KMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwDQowMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDANCjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMTA1MDAwMDAwMDAwMDAwfX0=</record_binary_data>
      <record_plain_text>ASSIGNMENT, CO-TENANCY,
AND SHARED FACILITIES AGREEMENT
BY AND AMONG
HARDIN SOLAR ENERGY LLC,
a Delaware limited liability company
HARDIN SOLAR ENERGY II LLC,
a Delaware limited liability company
HARDIN SOLAR ENERGY III LLC,
a Delaware limited liability company
AND
HARDIN SOLAR ENERGY LLC, 
a Delaware limited liability company
as Co-Tenancy Manager
December 30, 2020

Article 1	SHARED PREMISES	2
1.1	Conveyance of Interests in Shared Premises	2
1.2	Maintenance of the Shared Premises	3
1.3	Additional Premises Rights	3
Article 2	SHARED FACILITIES	4
2.1	Conveyance of Interests in Shared Facilities	4
2.2	Maintenance of the Shared Facilities	4
2.3	Replacement of Components of Shared Facilities	5
2.4	Conditions to Installation of Replacement Component	6
2.5	Additional Facilities	6
2.6	O&amp;M Facilities	7
2.7	Conditions to Installation of New Facilities	8
2.8	Warranty Claims	8
Article 3	EASEMENTS	9
3.1	Partial Assignment of Easements	9
3.2	Conditions to Installation of Separate Collection Facilities	10
3.3	Operation and Maintenance of Easements	10
Article 4	SEPARATE FACILITIES; SEPARATE PROJECTS	10
4.1	Separate Facilities	10
4.2	Operation and Maintenance of Separate Facilities; Right to Encumber	11
4.3	Conditions to Installation of Separate Facilities	11
Article 5	CONSTRUCTION EASEMENT; ACCESS, NONINTERFERENCE; NATURE OF RELATIONSHIP; WAIVER OF PARTITION	11
5.1	Temporary Construction Easement	11
5.2	Access to the Shared Facilities and Separate Facilities	12
5.3	Conveyances of Shared Premises and Facilities and Easements	12
5.4	Continuance of Easements and Shared Premises	12
5.5	No Interference	12
5.6	Covenants Running with the Land	13
5.7	Nature of Relationship Between Co-Tenants	13
5.8	Waiver of Right to Partition or Termination	14
Article 6	ALLOCATION AND PAYMENT OF EXPENSES, COSTS AND CO-TENANT METER MEASUREMENT	14
6.1	Ownership Shares, Method for Modifying Ownership Shares	15
6.2	Capital Cost Reimbursement; Payment	15
6.3	Maintenance and Repair of the Shared Premises and Facilities, Additional Premises or Additional Facilities	16
6.4	Maintenance and Repair of Separate Facilities, Separate Easements, Separate Collection Facilities and Easements	17
6.5	Invoicing, Late Payments	17
6.6	Ad Valorem Taxes and Assessments	17
6.7	Costs of Repair Work	17
6.8	Co-Tenancy O&amp;M Budget	18
6.9	Other Expenses Caused By Co-Tenants	19
6.10	Rights of Other Co-Tenants for Non-Payment	19
6.11	Liens	19
6.12	Co-Tenant Meter Measurement	19
Article 7	OTHER RIGHTS AND OBLIGATIONS OF CO-TENANTS	20
7.1	Maintenance and Repair of Separate Facilities	20
7.2	Termination or Modification of Any Easement	21
7.3	Standard of Performance	21
7.4	Co-Tenant Representatives	22
7.5	Environmental Compliance	22
7.6	PILOT Compliance	22
7.7	Critical Milestone Notice	22
7.8	Reliability and Security Compliance	22
Article 8	MANAGEMENT RIGHTS AND VOTING	23
8.1	In General	23
8.2	Specific Authority	23
8.3	Limitation on Authority	25
8.4	Curtailment of Delivery	26
8.5	Disconnection From Shared Facilities or Additional Facilities	27
8.6	[REDACTED]	28
8.7	Co-Tenancy Manager Representative	28
8.8	Competing Ventures	29
Article 9	CO-TENANCY MANAGER	29
9.1	Appointment of the Co-Tenancy Manager	29
9.2	Indemnification of Co-Tenancy Manager	29
9.3	Indemnification by the Co-Tenancy Manager	30
9.4	Indemnification Notices; Limitation on Liability	30
9.5	Standards of Performance	31
9.6	Removal of the Co-Tenancy Manager	31
9.7	Books and Records; Reporting Requirements	34
9.8	Co-Tenancy Manager Fees and Expenses	34
9.9	Facility Management Agreements	35
Article 10	INSURANCE	35
10.1	Insurance	35
10.2	Construction Phase Insurances	35
10.3	Operational Phase Insurances	37
10.4	Waiver of Claims For Insured Events	38
10.5	Form and Content of Insurance	39
10.6	Additional Requirements	39
10.7	Amount of Insurance.	41
Article 11	ASSIGNMENTS AND RIGHT TO ENCUMBER	41
11.1	Assignment by Co-Tenants	41
11.2	Procedures	41
11.3	[REDACTED]	42
11.4	Expenses and Other Matters	43
Article 12	TERM AND TERMINATION	43
12.1	Term and Termination	43
12.2	Surrender and Assignment of Undivided Interest	43
12.3	Decommissioning of a Project	44
12.4	Distribution on Termination of this Agreement	45
12.5	Valuation and Distribution of Non-Cash Distributions	46
12.6	Rights of Reverter	46
Article 13	DEFAULT AND REMEDIES	47
13.1	Co-Tenant Events of Default	47
13.2	Co-Tenancy Manager Events of Default	48
13.3	Remedies	49
Article 14	REPRESENTATIONS AND WARRANTIES	51
14.1	Representations and Warranties of Co-Tenants and Co-Tenancy Manager	51
Article 15	INDEMNITY; LIMITATIONS OF LIABILITY	51
15.1	Cross Indemnity of Co-Tenants	51
Article 16	GENERAL PROVISIONS	52
16.1	Notices	52
16.2	Survival of Rights	54
16.3	Amendment	54
16.4	FERC Approval and Notice	54
16.5	Construction	55
16.6	Agreement in Counterparts	56
16.7	Disputes	56
16.8	Governing Law	56
16.9	Time	57
16.10	Additional Documents; Cooperation	57
16.11	Validity	58
16.12	Perpetuities Savings Clause	58
16.13	No Third Party Beneficiaries	58
16.14	Attorneys' Fees	58
16.15	Waiver	58
16.16	Titles	59
16.17	Exhibits	59
16.18	Force Majeure	59
16.19	Memorandum	59
16.20	Condemnation	59
16.21	Confidential Information	59
16.22	Limitations of Liability	60


APPENDIX A:  DEFINITIONS	APPENDIX A-1
EXHIBIT A-1:  SHARED PREMISES	A-1
EXHIBIT A-2:  EASEMENTS	A-2
EXHIBIT B-1:  BILL OF SALE - SHARED FACILITIES	B-1
EXHIBIT B-2:  QUITCLAIM DEED	B-2
EXHIBIT B-3:  PARTIAL ASSIGNMENT OF EASEMENTS	B-3
EXHIBIT C:  SHARED MAINTENANCE RESPONSIBILITIES	C-1
EXHIBIT D:  DESCRIPTION OF SHARED FACILITIES	D-1
EXHIBIT E:  MEMORANDUM OF ASSIGNMENT, CO-TENANCY, AND SHARED FACILITIES AGREEMENT	E-1
EXHIBIT F:  NET REVENUE LOSSES CALCULATION METHODOLOGY	.............F-1
EXHIBIT G:  PRO-RATA SHARES	G-1


ASSIGNMENT, CO-TENANCY, AND SHARED FACILITIES AGREEMENT
      This Assignment, Co-Tenancy, and Shared Facilities Agreement is made and entered into by and among HARDIN SOLAR ENERGY LLC, a Delaware limited liability company ("Hardin Solar"), HARDIN SOLAR ENERGY II LLC, a Delaware limited liability company ("Hardin Solar II"), and HARDIN SOLAR ENERGY III LLC, a Delaware limited liability company ("Hardin Solar III", collectively with Hardin Solar, Hardin Solar II, and Hardin Solar III, the "Co-Tenants" and each individually, a "Co-Tenant"), and HARDIN SOLAR ENERGY LLC, a Delaware limited liability company, as Co-Tenancy Manager, and is dated as of December 30, 2020 (the "Contract Date").  Certain capitalized terms used in this Agreement are given defined meanings in Appendix A attached hereto.
R E C I T A L S:
      A.	Hardin Solar owns and operates or will be the owner and operator of a solar power project (the "Hardin Solar Project"), with 150 megawatts of design capacity (the "Hardin Solar Permitted Capacity"), located in Hardin County, Ohio.
      B.	Hardin Solar II owns and operates or will be the owner and operator of a solar power project (the "Hardin Solar II Project"), with 150 megawatts of design capacity (the "Hardin Solar II Permitted Capacity"), located in Hardin County, Ohio.
      C.	Hardin Solar III owns and operates or will be the owner and operator of a solar power project (the "Hardin Solar III Project"), with 300 megawatts of design capacity (the "Hardin Solar III Permitted Capacity"), located in Hardin County, Ohio. 
      D.	The Hardin Solar Project, Hardin Solar II Project, and Hardin Solar III Project are herein sometimes referred to individually as a "Project" or collectively as the "Projects".  The Hardin Solar II Project and Hardin Solar III Project are sometimes referred to individually as a "Subsequent Project", and collectively as "Subsequent Projects".
      E.	Hardin Solar is the fee simple owner of certain property described on Exhibit A-1 attached hereto (the "Shared Premises").
      F.	Hardin Solar has constructed and/or intends to construct certain electrical and communications facilities on the Shared Premises for the transmission, monitoring, operation, and transformation of electricity and for communications, as more particularly described on Exhibit D (the "Shared Facilities", and together with the Shared Premises, collectively, the "Shared Premises and Facilities").
      G.	Hardin Solar has agreed to assign to Hardin Solar II and Hardin Solar III (and each of Hardin II and Hardin III has agreed to assign to the other), on the terms and conditions set forth herein, (i) an undivided tenants-in-common interest in the Shared Premises in which it owns an interest, and (ii) an undivided tenants-in-common interest in the Shared Facilities in which it owns an interest. 
      H.	The Co-Tenants have obtained and/or will obtain certain multi-purpose easements which include the right of each Co-Tenant holding such interest to construct and maintain collection facilities for monitoring the Projects and connecting the Projects to the Shared Facilities pursuant to such easements (the "Easements").
      I.	Each Co-Tenant has agreed to assign to each of the other Co-Tenants, on the terms and conditions set forth herein, a separate interest in certain portions of the Easements, as necessary for such Co-Tenant's Project.
      J.	The Co-Tenants now desire to set forth herein their rights and obligations with respect to the Shared Premises and Facilities and the Easements, and the costs, use and maintenance thereof.
      K.	The Co-Tenants desire to engage the Co-Tenancy Manager to provide day-to-day, routine operation and maintenance service to the Co-Tenants for the Shared Premises and Facilities, and the Co-Tenancy Manager desires to provide such services for the Co-Tenants in accordance with the terms hereof.
      NOW, THEREFORE, in consideration of the foregoing recitals, the mutual promises contained herein, and for other good and valuable consideration, the receipt and adequacy of which are hereby acknowledged by the Co-Tenants and the Co-Tenancy Manager, the Co-Tenants and the Co-Tenancy Manager agree as follows:
Article 1 
SHARED PREMISES
      1.1 Conveyance of Interests in Shared Premises.
            (a) On the Contract Date, Hardin Solar shall grant Hardin Solar II and Hardin Solar III an Undivided Interest in the Shared Premises equal to Hardin Solar II and Hardin Solar III's respective Base Pro-Rata Share.  Simultaneous with the conveyance described above, Hardin Solar II and Hardin Solar III shall promptly pay to Hardin Solar any amounts due pursuant to Section 6.2(a) and Section 6.2(b) with respect to the Undivided Interests in the Shared Premises.  Upon its achievement of the conditions detailed in Section 6.2(b), Hardin Solar III shall promptly pay to Hardin Solar and Hardin Solar II any amounts due pursuant to Section 6.2(b) with respect to the Undivided Interests in the Shared Premises previously conveyed.  On the Contract Date, Hardin Solar will execute and deliver to each of Hardin Solar II and Hardin Solar III (1) a Tenant-in-Common Quitclaim Deed in the form attached hereto as Exhibit B-2 (the "Quitclaim Deed"), and (2) transfer tax declarations, owner's affidavits, ALTA statements and such other reasonable and customary transfer documents required in connection with the transfer of a real property interest or that will facilitate Hardin Solar II and Hardin Solar III's ability to obtain owners' and lenders' title insurance with respect to the Shared Premises, to the extent such documents do not decrease any rights of any Co-Tenant hereunder and do not increase the obligations of any Co-Tenant hereunder, all of which shall be prepared and paid for, as applicable, at the relevant Joining Co-Tenant's expense. 
            (b) Each Co-Tenant shall own and hold its Undivided Interest in the Shared Premises jointly, as tenants-in-common, and without rights of survivorship, subject to the terms of this Agreement, to the full extent necessary for each Project to operate at its Permitted Capacity.  Without limiting the generality of the foregoing, the undivided joint rights of each Co-Tenant shall include: the joint use of the Shared Premises to the full extent necessary for each Project to operate at its Permitted Capacity, subject to the terms of this Agreement.  Each Co-Tenant shall have the right to own, hold, and utilize its Undivided Interest in the Shared Premises in accordance with the terms of this Agreement.
      1.2 Maintenance of the Shared Premises.  Effective as of the Commencement Date, the Co-Tenants hereby engage the Co-Tenancy Manager to, and the Co-Tenancy Manager agrees to perform and provide with respect to the Shared Premises professional, supervisory, managerial, administrative and operational responsibilities in accordance with the standards set forth in Section 7.3.  The Co-Tenancy Manager's responsibilities include those listed in Exhibit C (the "Shared Premises Maintenance").  The costs and expenses incurred by the Co-Tenancy Manager in performing the Shared Premises Maintenance shall be incurred or reimbursed and shared by the Operational Co-Tenants according to each Co-Tenant's Operational Pro-Rata Share.
      1.3 Additional Premises Rights.
            (a) If a Co-Tenant determines that additional premises or rights in premises ("Additional Premises Rights") are required for the interconnection, construction, maintenance or operation of its Project, such Co-Tenant requiring such Additional Premises Rights shall have the responsibility for procuring or otherwise acquiring such Additional Premises Rights, at such Co-Tenant's sole cost and expense, unless otherwise provided in Sections 1.3(b) or 1.3(c). 
            (b) If a Co-Tenant determines that such Additional Premises Rights are required for its Project, such Co-Tenant shall give written notice to the other Co-Tenant(s) of such requirement, with a detailed explanation setting forth why such Additional Premises Rights are needed.  The Co-Tenant(s) receiving such notice shall have [REDACTED] days following receipt of such notice to determine if such Additional Premises Rights are also needed for its Project and to so notify the requesting Co-Tenant in writing of its election to participate in such Additional Premises Rights.  Failure to notify the requesting Co-Tenant of its election to participate in the acquisition of such Additional Premises Rights within [REDACTED] days after receiving such notice shall be deemed an election not to participate.  
            (c) Any Additional Premises Rights needed by one or more, but not all, of the Co-Tenants may be acquired and held in the name of such individual Co-Tenant as part of such Co-Tenant's Separate Project or in the name of such Co-Tenants who elect to participate in such Additional Premises Rights as such Co-Tenants' shared premises ("Additional Premises") held in undivided ownership interests equal to such Co-Tenants' Additional Premises or Facilities Pro-Rata Share.  If all of the Co-Tenants determine that such Additional Premises Rights are needed, then, upon acquisition by all of the Co-Tenants, such Additional Premises Rights shall be considered Shared Premises for all purposes under this Agreement.
            (d) Upon acquisition of any Additional Premises Rights to be used by two or more Co-Tenants that become Additional Premises or Shared Premises pursuant to this Section 1.3, a copy of the agreement(s) underlying the Additional Premises Rights shall be delivered to the Co-Tenancy Manager.  Following delivery to the Co-Tenancy Manager, the Co-Tenants hereby engage the Co-Tenancy Manager to, and the Co-Tenancy Manager agrees to perform and provide with respect to such Additional Premises or Shared Premises professional, supervisory, managerial, administrative and operational responsibilities in accordance with the standards set forth in Section 7.3.  The Co-Tenancy Manager's responsibilities and the costs and expenses thereof with respect to any new Shared Premises shall be as set forth in Section 1.2.  The Co-Tenancy Manager's responsibilities with respect to Additional Premises shall include the Shared Premises Maintenance.  The costs and expenses incurred by the Co-Tenancy Manager in performing the Shared Premises Maintenance with respect to Additional Premises shall be incurred or reimbursed and shared by the Co-Tenants according to each Co-Tenant's Additional Premises or Facilities Pro-Rata Share with respect to the particular Additional Premises.
Article 2 
SHARED FACILITIES
      2.1 Conveyance of Interests in Shared Facilities.
            (a) Each Joining Co-Tenant has a one-time option [REDACTED] to acquire an Undivided Interest equal to such Co-Tenant's Operational Pro-Rata Share in the Shared Facilities (excluding the O&amp;M Facilities solely for purposes of this Section 2.1, which are addressed in Section 2.6).  If either Joining Co-Tenant seeks to acquire an interest in such Shared Facilities, it shall deliver a written notice to all other Co-Tenants of such Joining Co-Tenant's intention to acquire an Undivided Interest in such Shared Facilities equal to such Joining Co-Tenant's Operational Pro-Rata Share.  Upon receipt of such notice, Hardin Solar (and, if applicable, any other Co-Tenant that holds an Undivided Interest in such Shared Facilities at such time) will execute and deliver a Bill of Sale in the form attached as Exhibit B-1 (the "Bill of Sale") pursuant to which Hardin Solar (and, if applicable, such other Co-Tenant that owns an Undivided Interest in such Shared Facilities at such time) will transfer to the Joining Co-Tenant an Undivided Interest in and to such Shared Facilities equal to such Joining Co-Tenant's Operational Pro-Rata Share.  
            (b) Each Co-Tenant shall have the right to hold and utilize its Undivided Interest in such Shared Facilities, jointly, as tenants-in-common, subject to the terms of this Agreement, to the full extent necessary for each Project to operate at its Permitted Capacity.  Without limiting the generality of the foregoing, the tenants-in-common rights of each Co-Tenant shall include the joint use of such Shared Facilities (whether now existing or hereafter constructed) to the full extent necessary for each Project to operate at its Permitted Capacity.
      2.2 Maintenance of the Shared Facilities.  Effective as of Commencement Date, the Co-Tenants hereby engage the Co-Tenancy Manager to, and the Co-Tenancy Manager agrees to, perform and provide with respect to the Shared Facilities all professional, supervisory, managerial, administrative and operational responsibilities in accordance with the standards set forth in Section 7.3.  The Co-Tenancy Manager's responsibilities include those set forth in Exhibit C (the "Shared Facilities Maintenance", together with the Shared Premises Maintenance, the "Shared Maintenance").  The costs and expenses of the Shared Facilities Maintenance shall be incurred or reimbursed and shared by the Operational Co-Tenants in accordance with each Co-Tenant's Operational Pro-Rata Share.
      2.3 Replacement of Components of Shared Facilities.
            (a) The applicable Co-Tenants holding Undivided Interests in the Shared Facilities hereby authorize the Co-Tenancy Manager to replace any component of a Shared Facility with a Qualified Replacement Component without seeking additional consent of the applicable Co-Tenants under this Agreement (i) if such replacement, and the cost thereof, is included in the Approved Co-Tenancy O&amp;M Budget, (ii) if the cost of the Qualified Replacement Component (including installation) is not included in the Approved Co-Tenancy O&amp;M Budget, and such cost (including installation) is [REDACTED] in a budget year, or (iii) in the event of an Emergency, if the cost of the Qualified Replacement Component (including installation) is [REDACTED]; provided, however, if the cost of the Qualified Replacement Component (including installation) exceeds [REDACTED], notice of such replacement shall be given by the Co-Tenancy Manager to the applicable Co-Tenants as soon as reasonably practicable after the estimated replacement cost for the Qualified Replacement Component is known by the Co-Tenancy Manager.  No other notice of such Qualified Replacement Component shall be required except as such replacement costs may be included in periodic financial and operating reports that may be required under this Agreement.  
            (b) Except as otherwise permitted by Section 2.3(a), the Co-Tenancy Manager shall provide notice (the "Replacement Notice") in writing to the applicable Co-Tenants of (i) any component of a Shared Facility that needs replacement, (ii) the proposed replacement component (the "Proposed Replacement Component"), which shall be a Qualified Replacement Component, and (iii) the estimated cost (including installation) thereof.  If the Required Majority of applicable Operational Co-Tenants with interests in the component of a Shared Facility that needs replacement approve the Proposed Replacement Component, the Co-Tenancy Manager shall replace such Shared Facility component with the Proposed Replacement Component.  If the Required Majority of applicable Operational Co-Tenants fail to approve the Proposed Replacement Component within [REDACTED] days of receipt of the Replacement Notice, the applicable Operational Co-Tenants holding Undivided Interests in the Shared Facilities shall exercise commercially reasonable efforts to develop a commercially reasonable alternative (the "Alternative Proposal") which shall be presented to the Co-Tenancy Manager within [REDACTED] days of receipt of the Replacement Notice, and the Co-Tenancy Manager shall be authorized to proceed with the Alternative Proposal, if any, approved by the Required Majority of applicable Operational Co-Tenants.  If an applicable Operational Co-Tenant holding Undivided Interests in the Shared Facilities who does not approve such Proposed Replacement Component or Alternative Proposal can demonstrate to the other applicable Operational Co-Tenant(s) that the Proposed Replacement Component is likely to have a material adverse effect upon such Operational Co-Tenant's Project, the Co-Tenancy Manager shall not implement the Proposed Replacement Component or Alternative Proposal without the consent of the Operational Co-Tenant whose Project will be materially adversely impacted.  Notwithstanding the foregoing, if failure to replace such component has caused or could reasonably cause an Emergency, the Co-Tenants agree that the Co-Tenancy Manager may proceed with the replacement of the component with the Proposed Replacement Component, regardless of any objection or failure to consent by any single Co-Tenant.
      2.4 Conditions to Installation of Replacement Component.  If the Co-Tenancy Manager installs a Replacement Component, it shall, to the fullest extent commercially reasonable and subject to Prudent Industry Practice, (i) limit any interference with the use by the Co-Tenants of the Shared Facilities or their Separate Facilities during such installation activities, and (ii) except in the event of an Emergency, (A) schedule during an off-peak and/or low solar resource down-time period for any required disconnection of the Shared Facilities or Separate Facilities to conduct construction activities in order to minimize the impact on the Projects of the Co-Tenants, and (B) provide prior written notice to the Co-Tenants of commencement of such construction activities together with a reasonably detailed description thereof, including dates and times of construction activities and disconnection, if any.  If a Replacement Component is required for Shared Facilities that are utilized by less than all of the Co-Tenants and the installation of such Replacement Component disconnects a Co-Tenant's Implemented Project that does not utilize such Shared Facilities, the Co-Tenant(s) benefiting from such Replacement Component shall reimburse the Co-Tenant owner of an Implemented Project for all Net Revenue Losses accruing during the period of disconnection arising from the installation of the Replacement Component, it being hereby agreed that payment of the Net Revenue Losses shall be a Co-Tenant owner of an Implemented Project's sole and exclusive remedy with respect to loss of revenue and other Consequential Damages due to the period of disconnection.  The Co-Tenants agree that the actual Consequential Damages arising due to such period of disconnection would be difficult to compute and that the methodology for determining such damages set forth above is a good faith estimate of the calculations utilized to determine the actual Consequential Damages that would be suffered.
      2.5 Additional Facilities.
            (a) If a Co-Tenant determines that additional facilities, improvements, modifications, or upgrades of facilities on a portion of the Shared Premises (the "New Facilities") are required by such Co-Tenant, specifically including, without limitation, any New Facilities for the transmission of electricity from a Project to the Interconnection Point, the Co-Tenant requiring such New Facilities shall have the responsibility for procuring and installing such New Facilities and obtaining all necessary approvals from applicable Governmental Authorities at such Co-Tenant's sole cost and expense (unless, as provided in Section 2.5(b)).
            (b) If a Co-Tenant determines that New Facilities are required, it shall give written notice to the other Co-Tenant(s) of such requirement, with a detailed explanation setting forth why such New Facilities are needed.  The Co-Tenant(s) receiving such notice shall have [REDACTED] days following receipt of such notice to determine if such New Facilities are also needed for its respective Project and to so notify the requesting Co-Tenant in writing of its election to participate in such New Facilities.  Failure to notify the requesting Co-Tenant of its election to participate within [REDACTED] days following receipt of such notice shall be deemed an election not to participate in the Additional Facilities.  
            (c) Any New Facilities needed by one or more, but not all, of the Co-Tenants ("Additional Facilities"), may be acquired and held in the name of such individual Co-Tenant as such Co-Tenant's Separate Facilities or in the name of such Co-Tenants who elect to participate in such Additional Facilities as such Co-Tenants' Additional Facilities to be held in undivided ownership interests as tenants in common equal to such Co-Tenants' Additional Premises or Facilities Pro-Rata Share.  If all of the Co-Tenants determine that such Additional Facilities are needed, then, upon acquisition by all of the Co-Tenants, such Additional Facilities shall be considered Shared Facilities for all purposes under this Agreement following the Additional Facilities Operative Date.
            (d) Upon acquisition of any Additional Facilities to be used by more than one Co-Tenant or that become Shared Facilities, in each case pursuant to this Section 2.5, a copy of all warranties for the Additional Facilities shall be delivered to the Co-Tenancy Manager.  Following delivery to the Co-Tenancy Manager and the Additional Facilities Operative Date, the Co-Tenants hereby engage the Co-Tenancy Manager to, and the Co-Tenancy Manager agrees to perform and provide with respect to such Additional Facilities or Shared Facilities professional, supervisory, managerial, administrative and operational responsibilities in accordance with the standards set forth in Section 7.3.  The Co-Tenancy Manager's responsibilities and the costs and expenses thereof with respect to any new Shared Facilities shall be as set forth in Section 2.2.  The Co-Tenancy Manager's responsibilities with respect to Additional Facilities shall include the Shared Facilities Maintenance.  The costs and expenses incurred by the Co-Tenancy Manager in performing the Shared Facilities Maintenance with respect to Additional Facilities shall be incurred or reimbursed and shared by the Co-Tenants according to each Co-Tenant's Additional Premises or Facilities Pro-Rata Share with respect the particular Additional Facilities.
      2.6 O&amp;M Facilities.  
            (a) Each Joining Co-Tenant has a one-time option [REDACTED] to acquire an Undivided Interest in the O&amp;M Facilities equal to such Co-Tenant's Operational Pro-Rata Share (or in the event Hardin Solar II exercises its option after Hardin Solar III has declined its option to purchase an Undivided Interest in the O&amp;M Facilities, Hardin Solar II shall have an option to purchase a 50% interest in the O&amp;M Facilities).  If either Joining Co-Tenant seeks to acquire an interest in the O&amp;M Facilities, it shall deliver a written notice to all other Co-Tenants of such Joining Co-Tenant's intention to acquire an Undivided Interest in the O&amp;M Facilities pursuant to this Section 2.6.  Upon receipt of such notice, Hardin Solar (and, if applicable, any other Co-Tenant that holds an Undivided Interest in the O&amp;M Facilities at such time) will execute and deliver a Bill of Sale in the form attached as Exhibit B-1 pursuant to which Hardin Solar (and, if applicable, such other Co-Tenant that owns an Undivided Interest in the O&amp;M Facilities at such time) will transfer to the Joining Co-Tenant an Undivided Interest in and to the O&amp;M Facilities equal to the ownership percentages set forth for such Joining Co-Tenant pursuant to the first two sentences of this Section 2.6(a).    
            (b) In the event Hardin Solar II exercises its option with respect to the O&amp;M Facilities prior to Hardin Solar III declining its option with respect to the O&amp;M  Facilities, the O&amp;M Facilities shall be considered Shared Facilities for all purposes under this Agreement until such time as Hardin Solar III declines it option with respect to the O&amp;M  Facilities.  If Hardin Solar III declines it option with respect to the O&amp;M Facilities, the O&amp;M Facilities shall thereafter be treated as Additional Facilities of Hardin Solar and Hardin Solar II for all purposes under this Agreement.  
            (c) Each Co-Tenant shall have the right to hold and utilize its Undivided Interest in the O&amp;M Facilities, jointly, as tenants-in-common, subject to the terms of this Agreement, to the full extent necessary for each Project to operate at its Permitted Capacity.  Without limiting the generality of the foregoing, the tenants-in-common rights of each Co-Tenant shall include the joint use of the O&amp;M Facilities (whether now existing or hereafter constructed) to the full extent necessary for each Project to operate at its Permitted Capacity.
            (d) The Parties hereby acknowledge and agree that the O&amp;M Facilities (as currently designed) may be insufficient to support use by the Hardin Solar III Project and, as a result, Hardin Solar III may either (i) build Separate Facilities for the operations and maintenance of its Project or (ii) exercise its option to acquire an Undivided Interest in the O&amp;M Facilities pursuant to Section 2.6(a) and build any necessary additions, expansions, improvements, modifications, or upgrades of O&amp;M Facilities.  The construction of any such Separate Facilities or any additions, expansions, improvements, modifications, or upgrades and all capital costs related thereto shall be at the sole responsibility and cost of Hardin Solar III, and shall be conducted in compliance with Section 2.7.  If Hardin Solar III elects to acquire an Undivided Interest in the O&amp;M Facilities pursuant to Section 2.6(a) and build any necessary additions, expansions, improvements, modifications, or upgrades of O&amp;M Facilities, once completed, such additions, expansions, improvements, modifications, or upgrades of O&amp;M Facilities shall be Shared Facilities for all purposes of this Agreement.  In the event Hardin Solar III would like to utilize some, but not all of the O&amp;M Facilities, Hardin Solar and Hardin Solar II hereby agree to negotiate with Hardin Solar III in good faith to develop an alternative joint use agreement with respect to the O&amp;M Facilities.  For the avoidance of doubt, such alternative joint use agreement shall include an adjusted payment for Hardin Solar III's acquisition of its Undivided Interest in such O&amp;M Facilities, based on the actual portion of the O&amp;M Facilities that Hardin Solar III intends to utilize.
      2.7 Conditions to Installation of New Facilities.  Any Co-Tenant installing New Facilities shall, to the fullest extent commercially reasonable and subject to Prudent Industry Practice, (i) limit any interference with the use by the Co-Tenants of the Shared Facilities or their Separate Facilities during such installation, (ii) schedule during an off-peak and/or low solar resource down-time period for any required disconnection of the Shared Facilities or Separate Facilities of the other Co-Tenants to conduct construction activities in order to minimize the impact on the Projects of the other Co-Tenants, (iii) provide prior written notice to the other Co-Tenants of commencement of such construction activities together with a reasonably detailed description thereof, including the dates and times of such construction and disconnection, if any, and (iv) take into consideration any changes in the construction plans or timing of construction required by the other Co-Tenants.  In addition, the Co-Tenant installing New Facilities shall reimburse any Co-Tenant owner of an Implemented Project for all Net Revenue Losses accruing during the period of disconnection arising from the installation of New Facilities in accordance with Section 15.1 and shall otherwise be subject to the other indemnification obligations set forth in Section 15.1 for any damages caused by such Co-Tenant in connection with the installation of such New Facilities.
      2.8 Warranty Claims.  The Co-Tenancy Manager and each Co-Tenant installing, or causing to be installed, Shared Facilities, Replacement Components or Additional Facilities that are to be Shared Facilities shall exercise such Co-Tenant's rights and obligations under the contractor and vendor warranties with respect to the Shared Facilities and upon the reasonable request of the applicable Co-Tenants and subject to their direction and control, the Co-Tenancy Manager shall assist them with the exercise of such rights.  The Co-Tenancy Manager shall (i) monitor and report to the Co-Tenants concerning the remaining terms of any warranties on Shared Facilities; (ii) perform such inspections as are reasonable to ensure that any final warranty work is not required prior to the expiration of any such warranty, and (iii) subject to the direction and control of the applicable Co-Tenants, prepare and prosecute warranty claims on behalf of such Co-Tenants, if reasonably necessary to enforce any such warranties.  Subject to the direction and control of the applicable Co-Tenants, the Co-Tenancy Manager shall be primarily responsible for administering the prosecution of the warranty claims requirements under this Section 2.8 on behalf of the Co-Tenants and each of the Co-Tenants shall cooperate with each other with respect to such warranty claims to the extent such Co-Tenants are the owners and holders of the warranties.  All reasonable expenses incurred by the Co-Tenancy Manager or any Co-Tenant in pursuing such warranty claims shall be allocated to the respective Co-Tenants with an interest in (A) the Shared Facilities subject to reimbursement by each Co-Tenant in accordance with its Operational Pro-Rata Share or (B) the Additional Facilities subject to reimbursement by each Co-Tenant in accordance with its Additional Premises or Facilities Pro-Rata Share.
Article 3 
EASEMENTS
      3.1 Partial Assignment of Easements.
            (a) Each Joining Co-Tenant shall have the option to acquire an interest in the Easements.  If either Joining Co-Tenant seeks to acquire an interest in an Easement, it shall deliver written notice to Co-Tenant owner of such Easements (collectively, together with any Parties with an interest in the Shared Premises, sometimes referred to as the "Granting Co-Tenant") of its intention to acquire a separate interest in the Easements to the extent required for its Project.  Upon receipt of the written notice, and upon obtaining a legal description of the portions of the Easements to be assigned, the Granting Co-Tenant will execute and deliver a Partial Assignment of Easements in the form attached hereto as Exhibit B-3 (the "Partial Assignment of Easements") pursuant to which the Granting Co-Tenant will assign to the Joining Co-Tenant the rights in and to the Easements necessary for the Joining Co-Tenant's Project including the rights, if any, for the Joining Co-Tenant to construct, monitor and maintain its own collection facilities for connecting its Project to the Shared Facilities (the "Separate Collection Facilities"), and the right for such Separate Collection Facilities to cross the Granting Co-Tenant's existing Separate Facilities.  In addition, the Granting Co-Tenant will execute and deliver transfer tax declarations, owner's affidavits, ALTA statements and such other reasonable and customary transfer documents required in connection with the transfer of a real property interest or that will facilitate the Joining Co-Tenant's ability to obtain owners' and lenders' title insurance with respect to the Easements to the extent such documents do not decrease any rights of any Co-Tenant hereunder and do not increase the obligations of any Co-Tenant hereunder, all of which shall be prepared and paid for at the Joining Co-Tenant's expense.
            (b) If, for any reason, the Easements set forth on Exhibit A-2 do not constitute the rights to construct and maintain collection facilities necessary for a Subsequent Project, each Granting Co-Tenant agrees that as promptly as practicable it shall, subject to the limitations of Section 5.5 below, grant to a Joining Co-Tenant any additional Easements necessary for the Subsequent Project, to the extent the Granting Co-Tenant has the right to grant such additional Easements.
            (c) On or after its Regulatory Approval Date, any Co-Tenant may deliver written notice to the other Co-Tenants of such Co-Tenant's desire to acquire a separate interest in an easement held by another Co-Tenant and seeking such Co-Tenant's consent thereto.  The Co-Tenant that holds such easement shall not unreasonably withhold, condition or delay such consent.  Upon the granting of such consent, the processes set forth herein for Easements shall apply; provided, however, the granting Co-Tenant may (i) include engineering, and construction, operation and maintenance-related terms and conditions on such transfers that are reasonably necessary to ensure that the operations and maintenance of the granting Co-Tenant will not be unreasonably interrupted, and (ii) recover Net Revenue Loss reimbursements described in Section 3.2 below for any interruptions of its operations and maintenance as a result thereof.
      3.2 Conditions to Installation of Separate Collection Facilities.  Any Co-Tenant installing any Separate Collection Facilities shall, to the fullest extent commercially reasonable and subject to Prudent Industry Practice (i) limit any interference with the use by the Co-Tenants of the Shared Facilities or their Separate Facilities during construction activities, (ii) except in the event of an Emergency, schedule during an off-peak and/or low solar resource down-time period for any required disconnection of the Shared Facilities or Separate Facilities to conduct construction activities in order to minimize the impact on the Projects of the Co-Tenants, and (iii) provide prior written notice to the other Co-Tenants of commencement of such construction activities together with a reasonably detailed description thereof, including dates and times of such construction and disconnection, if any.  In addition, the Co-Tenant installing Separate Collection Facilities shall reimburse any Co-Tenant owner of an Implemented Project for all Net Revenue Losses accruing during the period of disconnection arising from the installation of Separate Collection Facilities, it being hereby agreed that payment of the Net Revenue Losses shall be a Co-Tenant owner of an Implemented Project's sole and exclusive remedy with respect to loss of revenue and other Consequential Damages due to the period of disconnection.  The Co-Tenants agree that the actual Consequential Damages arising due to such period of disconnection would be difficult to compute and that the methodology for determining such damages set forth above is a good faith estimate of the calculations utilized to determine the actual Consequential Damages that would be suffered.
      3.3 Operation and Maintenance of Easements.  Subject to reimbursement from all Co-Tenants that have been assigned an interest in such Easements in accordance with such Co-Tenant's Easement Pro-Rata Share pursuant to Section 6.3 or 6.4, as applicable, each Co-Tenant shall be responsible for the operation and maintenance of the Easements (but not another Co-Tenant's Separate Facilities) located within its Project site.  All applicable Co-Tenants agree to provide the Co-Tenancy Manager a schedule of all costs incurred by such Co-Tenant in connection with the maintenance and operation of the Easements located on its Project site in which another Co-Tenant has an interest. 
Article 4 
SEPARATE FACILITIES; SEPARATE PROJECTS
      4.1 Separate Facilities.  Each Co-Tenant has procured or may, subject to Section 2.5, regarding Additional Facilities, and Section 3.2, regarding Separate Collection Facilities, procure, install, and construct certain other electrical and communications facilities for the transmission of electricity and for communications along and within the Shared Premises or the Easements, to be owned individually by such Co-Tenant and not by the Co-Tenants as tenants in common, including (i) multiple underground control, electric transmission, distribution and collection lines and facilities, including breakers, transformers, interconnection and switching facilities, vaults, cabinets, conduit, fiber, cables, wires, insulators, and other conductors, (ii) multiple underground control, communications, data and radio relay systems, including conduit, fiber, cables and wires, (iii) supervisory control and data acquisition system controls, and (iv) facilities, structures, fixtures, appurtenances, accessories, appliances, machinery, materials and equipment in connection with the construction, operation and/or maintenance of the foregoing (collectively, the "Separate Facilities").  
      4.2 Operation and Maintenance of Separate Facilities; Right to Encumber.  Each Co-Tenant shall be responsible for the operation and maintenance of its own Separate Facilities and shall be entitled at any time to mortgage, pledge, collaterally assign, encumber or grant a security interest in its Separate Facilities and its rights under this Agreement with respect thereto to any Secured Party.
      4.3 Conditions to Installation of Separate Facilities.  Any Co-Tenant installing any Separate Facilities shall, subject to Prudent Industry Practices, (i) limit any interference with the use by the Co-Tenants of the Shared Facilities or their Separate Facilities, (ii) schedule during an off-peak and/or low solar resource down-time period for any required disconnection of the Shared Facilities or Separate Facilities to conduct construction activities in order to minimize the impact on the Projects of the Co-Tenants, and (iii) provide prior written notice of the commencement of such construction activities together with a reasonably detailed description thereof, including dates and times of such construction and disconnection, if any, to any Co-Tenants whose Projects may be impacted by such construction.  In addition, the Co-Tenant installing Separate Facilities shall reimburse any Co-Tenant owner of an Implemented Project for all Net Revenue Losses accruing during the period of disconnection arising from the installation of Separate Facilities in accordance with Section 15.1 and shall otherwise be subject to the other indemnification obligations set forth in Section 15.1 for any damages caused by such Co-Tenant in connection with the installation of such Separate Facilities.
Article 5 
CONSTRUCTION EASEMENT; ACCESS, NONINTERFERENCE; NATURE OF RELATIONSHIP; WAIVER OF PARTITION
      5.1 Temporary Construction Easement.  Prior to a Joining Co-Tenant acquiring an interest in any of the Easements as described in Article 3 above, each Operational Co-Tenant hereby grants to any such Joining Co-Tenant (to the extent that such granting Co-Tenant has the right to make such grant) (i) a temporary and non-exclusive access and construction sub-easement on, over, under and across the Easements, and (ii) a temporary and non-exclusive access and construction easement on, over, under and across any and all access routes to and from the Easements and the Shared Premises, only to the extent necessary for such Joining Co-Tenant to construct and install any Separate Facilities and to interconnect with, access, and utilize any Shared Facilities contemplated to be used by such Subsequent Project to deliver energy over such Shared Facilities (collectively, the "Temporary Construction Easement"), which Temporary Construction Easement shall expire when such Co-Tenant acquires an interest in the Easements.  The grantee of any such Temporary Construction Easement agrees to comply with any underlying Easement and/or lease or other agreement, covenant, condition or restriction applicable to the property upon which such Temporary Construction Easement is granted.
      5.2 Access to the Shared Facilities and Separate Facilities.  Subject to the terms and limitations set forth in this Agreement (and subject to third-party real estate interest limitations on a Co-Tenant hereunder, if any), each Co-Tenant and its contractors and designees (i) shall have unrestricted temporary access to the Shared Premises and Shared Facilities (it being understood that the day-to-day operation of the Shared Facilities on the Shared Premises shall be performed solely by the Co-Tenancy Manager as provided hereunder), and (ii) shall have unrestricted access to its Separate Facilities.  Notwithstanding the preceding sentence, except in the event of an Emergency, each Co-Tenant shall give the Co-Tenancy Manager Representative at least [REDACTED] prior notice of the intent to permit its contractors or designees to access the Shared Premises and Shared Facilities and at least [REDACTED] days prior notice of the intent to permit its contractors or designees to enter upon the Easements (such notice may be by telephone, e-mail, or any other recognized electronic means in addition to any other methods of notice authorized herein), and each Co-Tenant shall follow, and cause its contractors and designees to follow, all written safety and security procedures adopted by the Co-Tenancy Manager with the approval of the Co-Tenants.  In the event of an Emergency, prior notice is not required, but a Co-Tenant shall give notice of entry on the Easements and the Shared Premises as soon as reasonably practicable thereafter.
      5.3 Conveyances of Shared Premises and Facilities and Easements.  EXCEPT AS OTHERWISE SET FORTH HEREIN, ALL CONVEYANCES AND TRANSFERS TO OR BETWEEN ANY CO-TENANTS OF ANY SHARED PREMISES AND FACILITIES, ANY ADDITIONAL FACILITIES, ANY REPLACEMENT COMPONENTS, ANY SEPARATE FACILITIES AND ANY EASEMENTS MADE PURSUANT TO THIS AGREEMENT ARE MADE "AS IS", "WITH ALL FAULTS" AND WITHOUT WARRANTY, EITHER EXPRESS OR IMPLIED, INCLUDING, WITHOUT LIMITATION, ANY WARRANTIES OF QUALITY, MERCHANTABILITY, SUITABILITY AND FITNESS FOR A PARTICULAR PURPOSE, ANY WARRANTIES REGARDING THE EXISTENCE OF ANY SECURITY INTEREST, LIEN OR ENCUMBRANCE, AND ANY WARRANTIES ARISING BY COMMON LAW.
      5.4 Continuance of Easements and Shared Premises.  Each Co-Tenant agrees that it will not take any action that results in a breach of the terms of any of the Easements or any agreement or covenant related to any Shared Premises or any Shared Facilities.  Any amounts due with respect to the Shared Premises or the Shared Facilities (such as real property taxes), shall be paid by the Co-Tenancy Manager, subject to reimbursement from the Co-Tenants in accordance with Article 6 below.  Each Co-Tenant shall pay the applicable landlord for each of such Co-Tenant's Easements, subject to reimbursement from the Co-Tenancy Manager who will collect the applicable reimbursement amounts from each applicable Co-Tenant in accordance with Article 6 below for their Easement Pro-Rata Share of such Easement.  
      5.5 No Interference.
            (a) Each Co-Tenant's use of any Easements, Temporary Construction Easements, Shared Facilities, Shared Premises (to the extent such Co-Tenant has a right to use the same hereunder) or of such Co-Tenant's Separate Facilities shall (i) limit any interference with the use and enjoyment by the other Co-Tenants of their rights in and to the Shared Facilities and Shared Premises, (ii) except in the event of an Emergency, (A) schedule during an off-peak and/or low solar resource down-time period for any required disconnection of the Shared Facilities or Separate Facilities to conduct maintenance and repair activities in order to minimize the impact on the Projects of the other Co-Tenants, and (B) provide prior written notice to the other Co-Tenants of commencement of such maintenance and repair activities together with a reasonably detailed description thereof, including dates and times of such maintenance and repair activities, and any disconnection, (iii) not materially and adversely affect the ability of any Co-Tenant to use and operate a Project existing as of the date such Co-Tenant develops its Subsequent Project, (iv) other than to the extent provided for pursuant to the terms of this Agreement, not decrease any rights of a Co-Tenant hereunder, or (v) other than to the extent provided for pursuant to the terms of this Agreement (or to the extent such Co-Tenant is fully compensated for such increase in obligations), not increase the obligations of any Co-Tenant hereunder.
            (b) Each Co-Tenant shall reimburse any Co-Tenant that is an owner of an Implemented Project for all Net Revenue Losses accruing during the period of disconnection arising from any interconnection due to the owner of a Project's construction, operation or maintenance activities, use of the Shared Facilities or Easements, or entry upon any Shared Facilities or Easements, it being hereby agreed that payment of the Net Revenue Losses shall be the Co-Tenant owner of an Implemented Project's sole and exclusive remedy with respect to loss of revenue and other Consequential Damages due to the period of disconnection.  The Co-Tenants agree that the actual Consequential Damages arising due to such period of disconnection would be difficult to compute and that the methodology for determining such damages set forth above is a good faith estimate of the calculations utilized to determine the actual Consequential Damages that would be suffered.
            (c) Each Co-Tenant shall have the right to transmit electrical power from its Project through the Shared Facilities in accordance with its Undivided Interests in such Shared Facilities calculated in accordance with its Operational Pro-Rata Share and in an amount not to exceed its Permitted Capacity and to otherwise utilize the Shared Facilities in accordance with its Undivided Interests in connection with the generation and transmission of electricity from its Project. 
      5.6 Covenants Running with the Land.  The covenants of the Co-Tenants made in the exhibits attached to this Agreement shall be deemed to be covenants running with and binding upon the Co-Tenants' interest in the Easements, and the Shared Premises pursuant to Applicable Law for the duration of the Term.
      5.7 Nature of Relationship Between Co-Tenants.  The Co-Tenants and Co-Tenancy Manager do not intend by this Agreement to create a partnership or a joint venture, but merely to set forth the terms and conditions upon which each of them shall hold their respective interests in the Shared Premises and Facilities.  Each Co-Tenant and Co-Tenancy Manager hereby elects to be excluded from the provisions of Subchapter K of Chapter 1 of the Internal Revenue Code of 1986, as amended (the "Code"), with respect to the joint ownership of the Shared Premises and Facilities.  The exclusion elected by the Co-Tenants hereunder shall commence with the execution of this Agreement and shall be equally applicable to all Co-Tenants.  Each Co-Tenant and the Co-Tenancy Manager hereby covenants and agrees that each Co-Tenant shall report on such Co-Tenant's respective federal and state income tax returns such Co-Tenant's respective share of items of income, gain/loss, deduction and credits that result from use of the Shared Premises and Facilities in a manner consistent with (i) the treatment of the co-tenancy as a co-ownership of property (and not a partnership) for Federal and state income tax purposes and (ii) the exclusion of the Co-Tenants from Subchapter K of Chapter 1 of the Code, commencing with the first taxable year of such Co-Tenant that includes the Contract Date.  No Co-Tenant nor the Co-Tenancy Manager shall notify the Commissioner of Internal Revenue that such Co-Tenant desires that Subchapter K of the Code apply to the Co-Tenants and each Co-Tenant hereby agrees to indemnify, protect, defend and hold the other Co-Tenants free and harmless from all liabilities, tax consequences and reasonable costs and expenses, including, without limitation, reasonable attorneys' fees, which may result from any Co-Tenant so notifying the Commissioner in violation of this Agreement or otherwise taking a contrary position on any tax return.  The Co-Tenants and the Co-Tenancy Manager shall not file a partnership or corporate tax return, conduct business under a common name, execute an agreement identifying any or all of the Co-Tenants as partners, shareholders, or members of a business entity, or otherwise hold themselves out as a partnership or other form of business entity.  Except as expressly provided herein, no Co-Tenant is authorized to act as agent for, to act on behalf of, or to do any act that will bind any other Co-Tenant or to incur any obligations with respect to the Shared Premises and Facilities.  The employees, agents, and subcontractors of the Co-Tenants and the Co-Tenancy Manager, in performing the obligations of each respective Co-Tenant and the Co-Tenancy Manager under this Agreement, shall not be deemed to be the agents or employees or subcontractors of any other Co-Tenant or the Co-Tenancy Manager.  Each Co-Tenant acknowledges that while the Co-Tenants hold undivided (if any) or separate interests (if any) in the Easements, and as such, all Co-Tenants would be entitled to control the respective Easements and their use, each Co-Tenant's right to occupy and use the Easements is governed by and subject to this Agreement.
      5.8 Waiver of Right to Partition or Termination.  The Co-Tenants each acknowledge and agree that it would be prejudicial to the interests of the Co-Tenants under this Agreement if any Co-Tenant were to seek partition or any other type of division, including a partition in kind or sale and division of the proceeds, of the Shared Facilities or the Shared Premises, or to file an action for such partition or division.  Partition of Shared Facilities or the Shared Premises would result in substantial and irreparable damage to the Co-Tenants, and is likely to interfere with a Co-Tenant's ability to transmit power.  Therefore, in consideration of such fact and for other good and valuable consideration, each of the Co-Tenants hereby waive and relinquish any and all rights that it may have to seek a partition or any other type of division of the Shared Facilities or the Shared Premises.  The Co-Tenants are relying upon this waiver to their detriment in expending substantial funds to construct the Projects and other improvements, and all Co-Tenants agree that each Co-Tenant shall be estopped from denying the validity or enforceability of the foregoing waiver.  Each Co-Tenant shall be entitled to a decree or order restraining or enjoining such partition, application, action or proceeding upon any breach of the provisions of this Section 5.8.  The Co-Tenants acknowledge and agree that they have been paid full consideration for the waiver herein provided.  
Article 6 
ALLOCATION AND PAYMENT OF EXPENSES, COSTS AND CO-TENANT METER MEASUREMENT
      6.1 Ownership Shares, Method for Modifying Ownership Shares.  The Undivided Interests of each Co-Tenant for (i) the Shared Premises and any Additional Premises for which such Co-Tenant maintains an interest are stated as a percentage of ownership calculated as described in Article 1, (ii) the Shared Facilities and any Additional Facilities for which such Co-Tenant maintains an interest are stated as a percentage of ownership calculated as described in Article 2 and (iii) the Easements for which such Co-Tenant maintains an interest are stated as a percentage of ownership calculated as described in Article 3.  A Co-Tenant's Undivided Interest with respect to each and every component of (A) the Shared Premises shall at all times equal such Co-Tenant's Base Pro-Rata Share with respect to each and every corresponding parcel of the Shared Premises, (B) the Shared Facilities shall at all times equal such Co-Tenant's Operational Pro-Rata Share with respect to each and every corresponding component of the Shared Facilities, (C) any Additional Premises or Additional Facilities shall at all times equal such Co-Tenant's Additional Premises or Facilities Pro-Rata Share with respect to each and every corresponding parcel of any Additional Premises or component of any Additional Facilities and (D) the Easements shall at all times equal such Co-Tenant's Easement Pro-Rata Share with respect to each and every corresponding component of the Easement in which such Co-Tenant has acquired an interest in accordance with the terms herein, and each of the foregoing shall be trued up by the Co-Tenants periodically at the direction of the Co-Tenancy Manager.
      6.2 Capital Cost Reimbursement; Payment.
            (a) Upon execution and delivery by Hardin Solar of the documents required in Section 1.1(a), Hardin Solar II shall pay to Hardin Solar an amount equal to [REDACTED].
            (b) Upon execution and delivery by Hardin Solar of the documents required in Section 1.1(a), Hardin Solar III shall pay to Hardin Solar an amount equal to [REDACTED] (the "Hardin III Initial Payment").  Upon the later of (i) the execution of the Hardin Solar III PPA or (ii) the issuance of an OPSB Permit to Hardin Solar III, Hardin Solar III shall pay to each of Hardin Solar and Hardin Solar II 50% of an amount equal to [REDACTED].  If Hardin Solar III elects to acquire its Undivided Interest in the O&amp;M Facilities, simultaneous with such acquisition Hardin Solar III shall pay to each of Hardin Solar and Hardin Solar II 50% of an amount equal to [REDACTED].  Such payments shall be made by wire transfer of immediately available federal funds in accordance with such instructions as may be provided by Hardin Solar and Hardin Solar II.   
            (c) Simultaneous with Hardin Solar II and/or Hardin Solar III acquiring its Undivided Interest in any of the Shared Premises, Shared Facilities, Additional Premises and/or Additional Facilities or an interest in the shared Easements, Hardin Solar II and Hardin Solar III shall be solely responsible for, and shall pay (A) to the appropriate Governmental Authorities, any state, county and municipal transfer taxes payable upon execution, delivery, or recording of such Quitclaim Deed, Bill of Sale and/or Partial Assignment of Easements, as the case may be, and all recurring costs and (B) expenses relating to such Shared Premises and Facilities, Additional Premises or Additional Facilities, as well as all other items usually adjusted or apportioned (which shall be apportioned on a per diem basis as of 11:59 P.M. of the day immediately preceding the execution and delivery of such Quitclaim Deed, Bill of Sale and/or Partial Assignment of Easements, as the case may be).  For any Partial Assignment of Easements, the Co-Tenant granting such Partial Assignment of Easements shall continue to pay to the applicable property owners all amounts due under the Easements underlying such grant without any additional payments from the grantee party(ies) under such Partial Assignment of Easements.
            (d) All applicable Co-Tenants agree to provide the Co-Tenancy Manager a schedule of all Capital Costs incurred by such Co-Tenant in connection with the Shared Premises and Facilities or the Easements upon request by the Co-Tenancy Manager or any Co-Tenant, as applicable.  The applicable Co-Tenants authorize the Co-Tenancy Manager to, and the Co-Tenancy Manager shall, on behalf of such Co-Tenants, maintain current records of each applicable Co-Tenant's Capital Costs with respect to Shared Premises and Facilities or Easements and shall update such records no less frequently than annually and otherwise as necessary to determine any payments due by or to an applicable Co-Tenant in accordance with Section 6.1 and this Section 6.2.  The Co-Tenancy Manager shall provide each of the applicable Co-Tenants with a copy of the schedule whenever it is updated and each of such Co-Tenants shall have the right to review and approve the schedule within [REDACTED] days of receipt of the updated schedule.  If a Co-Tenant objects to an updated schedule, the Co-Tenant shall notify the Co-Tenancy Manager within such [REDACTED] day period and the Co-Tenancy Manager shall promptly convene a meeting with the Co-Tenant who provided such information and the objecting Co-Tenant to try and resolve the discrepancy.  If the Co-Tenants are unable to resolve such discrepancy, the matter shall be referred to the dispute resolution provisions of Section 16.7.  Subject to a timely dispute regarding the schedule of Capital Costs, the records maintained by the Co-Tenancy Manager shall be determinative among the Co-Tenants with respect to Capital Costs and the reimbursement provisions of this Section 6.2.
      6.3 Maintenance and Repair of the Shared Premises and Facilities, Additional Premises or Additional Facilities.  Beginning on the Commencement Date, each Operational Co-Tenant shall be responsible for and shall pay its (a) Operational Pro-Rata Share of the costs, expenses and liabilities relating to the use, maintenance, repair, and inspection of the Shared Premises and the Shared Facilities including all subcontractor costs and expenses, (b) Easement Pro-Rata Share of the costs, expenses and liabilities relating to the use, maintenance, repair, and inspection of the Easements in which it has an interest, including, without limitation any annual rental or other payments applicable to the Easement, (c) all costs, expenses and liabilities relating to the use, maintenance, repair, and inspection of the Easements in which it has an interest that are generated by and arise solely from such Co-Tenant's use of the Easements and (d) Additional Premises or Facilities Pro-Rata Share of the costs, expenses and liabilities relating to the use, maintenance, repair, and inspection of any Additional Premises or Additional Facilities in which it has an interest (collectively, the "Shared O&amp;M Expenses").  For the avoidance of doubt, there shall be no duplication of fees, costs, expenses or reimbursements payable by a Co-Tenant to the Facility Manager under any Facility Management Agreement for such Co-Tenant's Project and to the Co-Tenancy Manager under this Agreement.  Effective as of the Commencement Date and until a Co-Tenant ceases to be a Co-Tenant hereunder, the Operational Co-Tenants shall reimburse the Co-Tenancy Manager for all direct and indirect home office labor and home office out-of-pocket expenses including travel, telephone, facsimile, and postage of the Co-Tenancy Manager, in the form of an aggregate monthly fixed administrative fee in an amount equal to [REDACTED] payable monthly in arrears by such Operational Co-Tenants based on their respective Operational Pro-Rata Share (the "Management Fee"). 
      6.4 Maintenance and Repair of Separate Facilities, Separate Easements, Separate Collection Facilities and Easements.  Subject to Article 3 and Sections 6.1, 6.2 and 6.3, each Co-Tenant shall be solely responsible for and shall pay all expenses and liabilities relating to the use, maintenance, repair, and inspection of such Co-Tenant's Separate Facilities, Separate Easements, Separate Collection Facilities and Easements (the "Separate O&amp;M Expenses").
      6.5 Invoicing, Late Payments.  The Co-Tenancy Manager shall deliver a detailed invoice to the Operational Co-Tenants for their respective share of the applicable Shared O&amp;M Expenses on a quarterly basis, on or before [REDACTED], for the actual amount incurred for all Shared O&amp;M Expenses under Section 6.2 for the immediately preceding quarter.  The Operational Co-Tenants shall pay to the Co-Tenancy Manager the amount of each invoice within [REDACTED] days after the date of the Co-Tenancy Manager's issuance of each such invoice.  If a Co-Tenant fails to pay all or any portion of any amount owed to the Co-Tenancy Manager under this Agreement by its due date for any reason whatsoever, then such Co-Tenant shall, in addition to such unpaid amount, pay interest on the unpaid amount which shall accrue at a rate equal to the Default Interest Rate from the due date therefor until such amount has been paid in full.
      6.6 Ad Valorem Taxes and Assessments.  Upon request from an Operational Co-Tenant, the Co-Tenancy Manager may seek from the applicable county tax assessor an allocation of ad valorem taxes of the Shared Premises and Facilities, and, if requested by an Operational Co-Tenant, the Separate Facilities, as applicable for such Operational Co-Tenant's Project.  If a request is not made for an allocation of ad valorem taxes or the tax assessor fails to make such allocation, the Co-Tenants agree that such allocation shall be based upon the Operational Pro-Rata Share of each Co-Tenant for the actual cost of such Shared Premises and Facilities and Separate Facilities (including installation thereof) and value of the Shared Premises and Facilities, and the Co-Tenancy Manager shall calculate such allocation based on the foregoing basis.  Any increased ad valorem taxes resulting from Additional Facilities or Additional Premises Rights that are added as Shared Premises and Facilities hereunder and any additional Separate Facilities shall be the responsibility of the Co-Tenant or Co-Tenants installing such Additional Facilities as described in Section 2.5 or acquiring such Additional Premises Rights as described in Section 1.3(a) or acquiring such Separate Facilities as described in Section 4.1.
      6.7 Costs of Repair Work.  The Co-Tenancy Manager shall charge the costs of repair of Shared Premises and Facilities, Additional Premises or Additional Facilities, including Replacement Components, and for other work or services provided by the Co-Tenancy Manager under this Agreement that are not included in Exhibit C at cost.  Such costs shall be borne by the Operational Co-Tenants based on their respective Operational Pro-Rata Shares.
      6.8 Co-Tenancy O&amp;M Budget.
            (a) Within [REDACTED] days prior to the beginning of calendar year 2022 and each calendar year of the Term thereafter, the Co-Tenancy Manager shall prepare and submit to (i) the Operational Co-Tenants a proposed budget for operation, maintenance and repair of the Shared Premises, (ii) the Operational Co-Tenants a proposed budget for operation, maintenance and repair of the Shared Facilities and Easements and (iii) to the applicable Operational Co-Tenants owning an interest in any Additional Premises or Additional Facilities a proposed budget for operation, maintenance and repair of the applicable Additional Premises or Additional Facilities, in each case for the following calendar year (each, a "Co-Tenancy O&amp;M Budget"), which shall include, at a minimum, the billing rates, estimated cost (based on time and materials), and all fees and reimbursable costs contemplated in this Agreement for anticipated operation and maintenance services and repairs to be provided by the Co-Tenancy Manager during each month of the following year, including any Shared O&amp;M Expenses.  The Co-Tenancy O&amp;M Budget shall set forth the respective amounts allocated to the different Operational Co-Tenants in accordance with their applicable ownership interest in the Shared Premises, Shared Facilities, Additional Premises, Additional Facilities and Easements.  When approved pursuant to Section 6.8(b) below, the Co-Tenancy O&amp;M Budget shall be the "Approved Co-Tenancy O&amp;M Budget" for such year.
            (b) The applicable Operational Co-Tenants shall give their approval or disapproval of the Co-Tenancy O&amp;M Budget no later than [REDACTED] days after receipt thereof from the Co-Tenancy Manager.  If an Operational Co-Tenant objects to all or any portion of the proposed Co-Tenancy O&amp;M Budget applicable to such Co-Tenant, such Operational Co-Tenant shall furnish the Co-Tenancy Manager and other applicable Operational Co-Tenants in writing, the reasons for such objections and shall immediately commence discussions with the Co-Tenancy Manager and the other applicable Operational Co-Tenants in an effort to reach an Approved Co-Tenancy O&amp;M Budget.  Upon such agreement, the Co-Tenancy Manager shall revise the Co-Tenancy O&amp;M Budget with respect thereto.  If the Co-Tenancy O&amp;M Budget is approved by a Required Majority and the Co-Tenancy Manager, the Co-Tenancy O&amp;M Budget will be the Approved Co-Tenancy O&amp;M Budget for the following year.  If the requisite Operational Co-Tenants and the Co-Tenancy Manager are unable to reach an agreement with respect to the Co-Tenancy O&amp;M Budget prior to the beginning of the calendar year, the Approved Co-Tenancy O&amp;M Budget for the previous calendar year (or the last Approved Co-Tenancy O&amp;M Budget if the Co-Tenancy O&amp;M Budget for the prior year was not approved), increased per year by the Inflation Adjustment Factor, shall apply; provided, however, that any single extraordinary expense in excess of [REDACTED] contained in such budget shall not be incurred without the prior approval of a Required Majority of the applicable Operational Co-Tenants.
            (c) The Co-Tenancy Manager shall not, without the approval of a Required Majority, amend or modify the Approved Co-Tenancy O&amp;M Budget.
      6.9 Other Expenses Caused By Co-Tenants.  Notwithstanding the provisions of this Article 6, any costs, claims, losses or other liabilities arising from the actions or inactions of a Co-Tenant in violation or breach of the covenants herein or the provisions of the Easements shall be the responsibility of such Co-Tenant.
      6.10 Rights of Other Co-Tenants for Non-Payment.  If any Co-Tenant fails to timely make any required payment of amounts due under this Article 6 or Article 10 (such Co-Tenant being a "Non-Paying Co-Tenant"), the Co-Tenancy Manager shall provide written notice to the other Co-Tenants within [REDACTED] days after such payment becomes past due, and any non-defaulting Co-Tenant may (but shall not be obligated to) make such payment on behalf of such Non-Paying Co-Tenant and the amount so paid shall be immediately due and payable from the Non-Paying Co-Tenant to such other paying Co-Tenant, together with interest from the date paid at the Default Interest Rate.
      6.11 Liens.  [REDACTED], no Co-Tenant shall, directly or indirectly, create, incur or permit to exist, any lien on the right, title and interest of the other Co-Tenants in the Easements, the Shared Premises and Facilities or any other Co-Tenant's Separate Easements or Separate Facilities.  No Co-Tenant shall, directly or indirectly, create, incur or permit to exist any lien on its right, title and interest in the Easements, the Shared Premises and Facilities or the Separate Facilities except for the following to the extent permitted under such Co-Tenant's arrangements with its Secured Parties:  (a) any lien for unpaid taxes that are (i) not yet payable or (ii) that are being contested in good faith by appropriate proceedings, or (b) any mechanic's or materialmen's lien arising in the ordinary course of business, either (i) for amounts not yet due or (ii) for amounts being contested in good faith by appropriate proceedings, (c) judgment liens, provided that in each case of (a), (b) and (c) above, so long as such proceeding or lien shall not involve any substantial danger of the sale, forfeiture or loss of any part of the Easements, the Shared Premises and Facilities, the Separate Facilities, or the Undivided Interest of any other Co-Tenants, including the posting of any bond that is required by Applicable Law to avoid such sale, forfeiture or loss while such claims are being contested or, (d) liens in favor of such Co-Tenant's Secured Party pursuant to the Security Documents.  If any such lien not permitted pursuant to this Section 6.11 attaches or a Co-Tenant receives notice of any such lien, the Co-Tenant whose actual or alleged act or omission resulted in such lien shall cause such lien to be released and removed of record within [REDACTED] days of such attachment or notice, unless (in the case of any non-permitted lien on such Co-Tenant's right, title and interest in any Easement, Shared Facilities or Separate Facilities) (a) such Co-Tenant (i) in good faith contests or disputes the claim or claims of the lienholders and the validity of such liens, (ii) promptly commences legal action to remove such lien and (iii) furnishes to the other Co-Tenants a bond or other security acceptable to the other Co-Tenants in an amount sufficient to discharge all such contested liens and (b) during such period the lienholders' proceedings are stayed.
      6.12 Co-Tenant Meter Measurement.  
            (a) The main high voltage step-up transformer for each Project will have one dedicated meter connected to its high side to measure power production.  The power production measurements for each Project, with respect to any applicable period, will be determined by multiplying (i) the proportionate share (as a percentage) of the Project, the percentage determined by dividing the individual meter reading(s) for each Project by the sum of all the Co-Tenant's respective individual meter readings, by (ii) the production measured at the revenue meter located at the point of interconnection substation as described in the Interconnection Agreements.  For purposes of clarity, no Co-Tenant will assess any charge for energy produced by such Co-Tenant's Project that is used or consumed by another Co-Tenant for its auxiliary load or for any other purpose.
            (b) For the primary retail power to the substation (auxiliary load), the Offtaker revenue meter will be the meter to measure the load.  The Co-Tenancy Manager will be responsible for payment of the auxiliary load as well as collecting each Project's share of such payment as determined below.  The Co-Tenancy Manager will split cost for auxiliary load between all Projects based on individual Project load consumption calculations in a manner to be agreed to by each Co-Tenant.  When a Project becomes an Operational Co-Tenant, Co-Tenancy Manager shall provide a calculation to Operational Co-Tenants for their respective load consumption.  Auxiliary power for each Operational Co-Tenant shall include but is not limited to the Operational Co-Tenant's substation yard equipment, its equipment in the control enclosure, and its collection system equipment.  The common/shared substation yard loads and common/shared control enclosure loads would be evenly split between all the Operational Co-Tenant's (for example, lights receptacles, etc.).  The Co-Tenancy Manager would ensure that all Co-Tenants agree on the calculation.  Then each Operational Co-Tenant would be charged a percentage of the bill based on their percentage of load compared to the total.  For purposes of clarity, if the Co-Tenancy Manager is also a Co-Tenant that wants to obtain or maintain exempt wholesale generator status pursuant to the Public Utility Holding Company Act of 2005, the role that the Co-Tenancy Manager has with respect to the auxiliary load arrangements prescribed herein cannot be structured as a retail sale by the Co-Tenancy Manger to any Co-Tenant; provided, further, that, the exempt wholesale generator condition set forth in the definitions of Operative Date and Additional Facilities Operative Date will not be applicable to Hardin Solar if Hardin Solar is the Co-Tenancy Manager and cannot obtain or maintain exempt wholesale generator status as a result of its Co-Tenancy Manager role in the power sale arrangements set forth in Section 6.12(b) or Section 6.12(c) being considered a retail sale by Hardin Solar.
            (c) If emergency power to the substation is needed, it will come from the Mid-Ohio distribution line directly to the substation control enclosure.  It shall only be used to power the control enclosure equipment and if a Project loses primary retail power.  The Operational Co-Tenants would split any bill for such emergency power based on the load calculation of each Project's control enclosure equipment load consumption.  All Projects with their equipment inside a control enclosure would evenly split the common/shared items in that same control enclosure.  For purposes of clarity, the arrangements for emergency power prescribed herein shall not be structured such that they will be a retail sale by a Co-Tenant (or the Co-Tenancy Manager if it is a Co-Tenant) that wants to obtain or maintain exempt wholesale generator status pursuant to Public Utility Holding Company Act of 2005.
Article 7 
OTHER RIGHTS AND OBLIGATIONS OF CO-TENANTS
      7.1 Maintenance and Repair of Separate Facilities.  Each Co-Tenant shall, at its sole cost and expense, maintain in good working order and repair at all times the portion of its Separate Facilities which connects with or could reasonably be expected to affect any of the Shared Facilities.
      7.2 Termination or Modification of Any Easement.  No Easement may be terminated, modified or amended without the mutual consent and agreement of all Co-Tenants benefiting from, and Co-Tenants designated to benefit from such Easement pursuant to Exhibits A-1 and A-2; provided, however, that with respect to any extension of the term of any Easement, the Co-Tenancy Manager shall notify the Co-Tenants at least [REDACTED] days prior to the time when any Easement must be extended.  If any Easement provides for extending the term of the Easement for successive annual or longer periods and if the Co-Tenants benefiting from such Easement agree to extend the Easement for the longer period of the permitted extension, such Co-Tenants shall authorize the Co-Tenancy Manager to, and the Co-Tenancy Manager shall, on behalf of such Co-Tenants, extend such Easement for such longer period.  If the benefiting Co-Tenants and Co-Tenants designated to benefit from such Easement pursuant to Exhibits A-1, and A-2, fail to agree to the longer period of extension, such Co-Tenants shall authorize the Co-Tenancy Manager to, and the Co-Tenancy Manager shall, on behalf of such Co-Tenants, extend such Easement for the lesser time period of (i) annually, or (ii) the minimum extension period permitted under such Easement.  In either case, the Co-Tenants shall pay their Easement Pro-Rata Share of the payment due under such Easement on or before the beginning of the applicable extension period.  Upon the failure of any Co-Tenant to pay its Easement Pro-Rata Share of the extension amount, such Co-Tenant's rights in and to such Easement shall expire on the beginning date of the extension period.  Notwithstanding any provision contained in this Section 7.2 to the contrary, if a Co-Tenant notifies the Co-Tenancy Manager and the other Co-Tenants benefiting from such Easement that it has elected not to extend the term of an Easement (a "Non-Extending Co-Tenant"), the other applicable Co-Tenants may extend the term of such Easement for their sole benefit.  In such a case, the Non-Extending Co-Tenant and the other Co-Tenants shall execute, and the Co-Tenancy Manager shall cause to be recorded on behalf of such Co-Tenants, such instruments and assignments as necessary to transfer such Easement to the Co-Tenants electing to extend the term of such Easement and the Non-Extending Co-Tenant shall, subject to applicable approvals from Governmental Authorities, if any, promptly remove all of its fixtures, improvements and equipment from the Easement so as not to incur any other expenses for the other Co-Tenants due to the presence of the Non-Extending Co-Tenant's fixtures, improvements or equipment within the Easement.  For purposes of clarity, an Easement granted pursuant to Section 3.1(a) or 3.1(b) will automatically terminate at the expiration of the original underlying Easement.
      7.3 Standard of Performance.  Subject to the limitations or restrictions set forth in this Agreement (including Article 8), the Co-Tenancy Manager and each Co-Tenant shall perform its respective obligations hereunder in accordance with this Agreement, all Applicable Laws, Prudent Industry Practice, Transmitting Utility Protocols, the Interconnection Agreements, and the terms of the Easements.  Further, except as specifically authorized to the contrary in this Agreement, the Co-Tenancy Manager shall perform its obligations hereunder in a manner that (A) does not discriminate against any other Co-Tenants, and (B) attempts to maximize the delivery of energy from all Projects based on each Project's Permitted Capacity.  In addition, the Co-Tenancy Manager shall perform its obligations hereunder in compliance with the Interconnection Agreements; provided, however, that each Co-Tenant shall have delivered to the Co-Tenancy Manager a complete copy of such Co-Tenant's Interconnection Agreements.
      7.4 Co-Tenant Representatives.  On or promptly after the Contract Date, each Co-Tenant shall by written notice to the other Co-Tenants designate an individual representative (the "Co-Tenant Representative") whose instructions, requests, and decisions will be binding upon such Co-Tenant in all matters concerning this Agreement, except that the Co-Tenant Representative shall not have the authority to amend this Agreement.  Each Co-Tenant shall have the right to change such Co-Tenant Representative at any time and from time to time by written notice to the other Co-Tenants and the Co-Tenancy Manager.
      7.5 Environmental Compliance.  Each Co-Tenant shall, with respect to its Project (including portions of its Project located on any easements or rights of access possessed by such Co-Tenant), be responsible for and shall have control over all environmental compliance programs and requirements applicable to its Project.  These compliance Programs and requirements shall consist of any environmental regulatory requirements triggered by activity undertaken by the Project and may include but not be limited to investigations, studies, clean up, corrective action or response or remedial action required by (i) any Governmental Authority now or hereafter authorized to regulate environmental or other matters, or (ii) any consent decree or court or administrative order now or hereafter applicable to such Co-Tenant's use, operation or ownership of its Project.  The Co-Tenancy Manager shall, with respect to the Shared Facilities, oversee all permit actions, investigations, studies, clean up, corrective action or response or remedial action required by any Governmental Authority now or hereafter authorized to regulate environmental or other matters or by any consent decree or court or administrative order now or hereafter applicable to the Shared Facilities.  The Co-Tenancy Manager shall keep all Co-Tenants fully apprised as to the above matters affecting the Shared Facilities and shall consult with them prior to taking any material action involving any Governmental Authority or risk of incurring any material liability.
      7.6 PILOT Compliance.  Each Co-Tenant that is subject to the Resolution adopted by the Board of Hardin County Commissioners on August 22, 2019, approving the application of Hardin Solar for exemption from taxation for the property of the Hardin Solar Energy Center and payment of annual service payments in lieu thereof (the "Resolution") shall (a) comply in all respects with Ohio Rev. Code Ann. Section 5727.75 and the Resolution, and (b) cooperate fully with the other Co-Tenants for purposes of such Co-Tenants' compliance with the requirements of Ohio Rev. Code Ann. Section 5727.75.
      7.7 Critical Milestone Notice.  Each Co-Tenant will provide prompt written notice to the Co-Tenancy Manager when such Co-Tenant's project achieves its Commercial Operations Date and its Regulatory Approval Date, as applicable, which notice shall include reasonable evidence documenting the Project's achievement of such milestone and the date on which it was achieved.
      7.8 Reliability and Security Compliance.  The Operational Co-Tenants will agree upon reasonable NERC, physical security and cyber security program requirements for the Shared Premises and Facilities and Easements (and any Additional Premises or Additional Facilities that are owned, in any part, by any Co-Tenant that has Dominion Energy, Inc. as its ultimate parent) that conform to Dominion Energy, Inc.'s NERC, Physical Security, and Cyber Security program requirements (the "Reliability and Security Requirements").  The Reliability and Security Requirements shall be implemented by the Co-Tenancy Manager with respect to the Shared Premises and Facilities and Easements (and any applicable Additional Premises or Additional Facilities) and each Co-Tenant agrees to comply with the Reliability and Security Requirements with respect to the Shared Premises and Facilities and Easements (and any applicable Additional Premises or Additional Facilities); provided, that, for the avoidance of doubt, that the Reliability and Security Requirements shall not apply to any Co-Tenant's Separate Premises.
Article 8 
MANAGEMENT RIGHTS AND VOTING
      8.1 In General.
            (a) The actions that the Co-Tenancy Manager is authorized to take pursuant to this Agreement with respect to the Shared Premises and Facilities, Easements, Additional Premises or Additional Facilities as well as any actions to implement this Agreement, shall be taken by the Co-Tenancy Manager in accordance with the terms of this Agreement, including Section 8.3 and any other limitations or restrictions set forth herein.  Except as expressly stated herein, all decisions with respect to the Separate Facilities of a Co-Tenant shall be made by such Co-Tenant.  The Co-Tenants shall not interfere in the management of the Shared Premises and Facilities by the Co-Tenancy Manager in accordance with this Agreement except for such temporary interruptions that are permitted pursuant to the explicit terms contained in this Agreement.
            (b) Each Operational Co-Tenant shall have the right to vote on any matter requiring a vote of the Co-Tenants in proportion to their respective Operational Pro-Rata Shares in the Shared Premises and Facilities; provided, however, that each vote shall require approval by the Required Majority unless otherwise required hereby.  If a matter solely involves Additional Premises or Additional Facilities in which not all of the Co-Tenants have an Undivided Interest, only such Operational Co-Tenants with an Undivided Interest in such Shared Facilities shall be entitled to vote pursuant to their respective Additional Premises or Facilities Pro-Rata Shares in the applicable Additional Premises or Additional Facilities and each such vote shall require approval by the Required Majority unless otherwise required hereby.  If a matter solely involves an Easement, only such Operational Co-Tenants shall be entitled to vote pursuant to their respective Easement Pro-Rata Shares in the applicable Easement and each such vote shall require approval by the Required Majority unless otherwise required hereby.  If a matter that requires a vote involves Shared Premises and Facilities as well as Additional Premises or Additional Facilities or Easements in a manner where the approval cannot be separated in the manner set forth above, such matter may be approved by a vote of the Operational Co-Tenants in proportion to their respective Operational Pro-Rata Shares and each such vote shall require approval by the Required Majority unless otherwise required hereby. 
            (c)  In the event and during the continuance of a material Co-Tenant Event of Default, the defaulting Co-Tenant shall have no right to vote on any matter requiring a vote of the Co-Tenants.
      8.2 Specific Authority.  Without limiting the generality of the foregoing, and subject to the limitations of authority of the Co-Tenancy Manager in Section 8.3 below or otherwise set forth in this Agreement, in addition to the authority otherwise granted herein, the Co-Tenancy Manager shall have the power, without further consent or approval of the Co-Tenants, to do any of the following:
            (a) On behalf of the Co-Tenants that possess an interest in the Shared Premises and Facilities, to negotiate, enter into, and administer agreements with third party contractors, or to employ persons, and to otherwise expend monies necessary for the management, operation, maintenance, and repair of the Shared Facilities or Additional Facilities in accordance with this Agreement; provided, however, that (i) such engagement and any fees paid to such third party contractor thereunder shall be in accordance with the Approved Co-Tenancy O&amp;M Budget, (ii) with respect to any agreement with a third party contractor that is an Affiliate of the Co-Tenancy Manager, the Co-Tenancy Manager enters into such agreement on an arms-length basis, and (iii) no such third party contractor engagement shall relieve the Co-Tenancy Manager of its rights or obligations set forth in this Agreement;
            (b) To pay and collect on behalf of the Co-Tenants amounts due in connection with the Shared Premises and Facilities, Additional Premises and Additional Facilities but only in accordance with the Approved Co-Tenancy O&amp;M Budget or as otherwise approved by the Co-Tenants pursuant to this Agreement;
            (c) To commit to the expenditure of or spend up to and including [REDACTED] in the aggregate (including the costs of installation and expediting fees) per calendar year for and on behalf of the Co-Tenants to repair the Shared Facilities, Additional Facilities or Easements due to an Emergency; provided that the Co-Tenancy Manager gives concurrent notice by electronic mail to the Co-Tenants benefiting from such Shared Facilities, Additional Facilities or Easements regarding the nature and amount of the expenditure as soon as reasonably practicable after the estimated amount of the expenditure is known by the Co-Tenancy Manager, but in any event no later than the time the Co-Tenancy Manager commits to the expenditure;
            (d) To negotiate with, and represent the Co-Tenants' interests before, any Governmental Authority pursuant to Section 6.6 regarding property valuation and real property taxes (if any) related to the Easements, Shared Premises and Facilities, Additional Premises and Additional Facilities and the Separate Facilities (if permitted in advance by the Co-Tenant owning such Separate Facilities); provided that any agreements or settlements with respect to the foregoing are approved by the applicable Co-Tenants; and
            (e) To execute, acknowledge, and deliver any and all instruments and take such other steps as are reasonably necessary to effectuate the foregoing and as are consistent with the terms of this Agreement, including Section 8.3 and any other limitations set forth herein.
            (f) To provide each of the Co-Tenants with access to all data between primary and redundant fiber optic lines and communications equipment for the transmittal of metering and operational data from the collection substations to the interconnection switchyard.
            (g) To design relay schemes and oversee operational coordination to meet PJM requirements.
            (h) The Co-Tenancy Manager will serve as the point of contact for all Governmental Authorities, PJM, NERC and the Transmitting Utility or other transmission providers with respect to the Shared Facilities and agrees to promptly after receiving the same, provide to the Co-Tenants written notice of any bills, orders, requirements or other communications of or from any Governmental Authority, NERC, PJM or the Transmitting Utility or other transmission provider received by Co-Tenancy Manager and affecting the Shared Facilities or Additional Facilities.
            (i) Co-Tenancy Manager shall not be responsible for making any filings with NERC or any other Governmental Authority with respect to the compliance by any Co-Tenant with NERC requirements or the requirements of any other Governmental Authority (all of which shall be the responsibility of the applicable Co-Tenant); provided, however, that upon request of a Co-Tenant, Co-Tenancy Manager shall reasonably cooperate to provide records of Co-Tenancy Manager's services provided under this Agreement to assist Co-Tenant to make the necessary filings.  The Co-Tenancy Manager shall ensure that the Shared Premises and Facilities and Easements (and any applicable Additional Premises or Additional Facilities) comply with the Reliability and Security Requirements.  With respect to the Shared Facilities and Additional Facilities, the Co-Tenancy Manager shall oversee all investigations, studies, actions or responses by or to NERC or any court or administrative action or order relating to matters within the jurisdiction of NERC now or hereafter applicable to the Shared Facilities and Additional Facilities.  The Co-Tenancy Manager shall keep all Co-Tenants fully appraised as to the matters referred to in the prior sentence with respect to the Shared Facilities and Additional Facilities and shall consult with them prior to taking any material action involving any Governmental Authority or risk of incurring any material liability.
      8.3 Limitation on Authority.  The Co-Tenancy Manager shall not take any of the following actions without the prior written approval of all Co-Tenants with a beneficial interest affected by the action:
            (a) Create or cause to be created any Lien on any of the Shared Facilities, Additional Facilities, the Separate Facilities or a Separate Project;
            (b) Amend or modify the terms of this Agreement, or any other agreement that affects any Co-Tenant's rights hereunder to develop, own and operate its Project or Separate Projects, including Easements and Interconnection Agreements;
            (c) Perform or omit to perform any act which would cause any person reasonably to believe that the Co-Tenancy Manager is a partner of a Co-Tenant or authorized to bind a Co-Tenant, except as expressly provided herein;
            (d) Sell, assign, mortgage, encumber, convey or otherwise transfer all or any portion of the interests held by any Co-Tenant, or any components of the Shared Facilities, Additional Facilities or any Separate Facilities or rights therein;
            (e) Borrow funds or otherwise incur indebtedness on behalf of a Co-Tenant;
            (f) Procure any insurance coverage that is less than the coverages required by Article 10;
            (g) Commit to expenditures in excess of [REDACTED] for and on behalf of the Co-Tenants except for repairs to the Shared Premises and Facilities, Additional Premises, Additional Facilities or Easements due to an Emergency or as otherwise authorized under this Agreement; 
            (h) Incur an expense of more than [REDACTED] in any calendar year that is not included in the Approved Co-Tenancy O&amp;M Budget or that is not incurred for the installation of a Replacement Component as authorized under this Agreement;
            (i) Make any offer or enter into any contract, letter of intent or agreement with respect to the zoning classification or other zoning or land use restrictions; or
            (j) [REDACTED] knowingly and intentionally do any act that is specified as being beyond the authority of a Co-Tenant, or in contravention of, or that will otherwise cause a Co-Tenant to be in default under this Agreement, the Facility Management Agreement to which such Co-Tenant is a party or any Regulatory Requirement to which such Co-Tenant is a party or by which it is bound, in each case solely to the Co-Tenancy Manager has been advised of the obligations contained in such documents in writing.
      8.4 Curtailment of Delivery.
            (a) The Co-Tenants shall interrupt or reduce deliveries of electrical power over the Shared Facilities if requested to do so by the Co-Tenancy Manager in accordance with the following provisions:  (i) after reasonable notice to, and agreement by, the Co-Tenants as to the timing and duration of the curtailment, to maintain, repair, replace, remove, investigate, inspect or test any part of the Shared Facilities, Additional Facilities or Separate Facilities in accordance with the terms of this Agreement; (ii) if the interruption or reduction is necessary due to an Emergency or a Separate Facilities Emergency, or (iii) if the Co-Tenancy Manager is ordered to do so by Transmitting Utility, any other Governmental Authority or regulatory authority with jurisdiction over their Separate Facilities, Additional Facilities or Shared Facilities, or a Co-Tenant (or its authorized agent) notifies the Co-Tenancy Manager that such curtailment is required by Transmitting Utility or another Governmental Authority or regulatory authority with jurisdiction over their Separate Facilities, Additional Facilities or the Shared Facilities.  The Co-Tenancy Manager shall limit the length of any such interruption or curtailment to that time strictly necessary to correct the problem.  Any interruption or curtailment made pursuant to clause (i) above shall be made to the extent commercially reasonable during periods that balance both low or no solar resource and low energy prices so as to minimize potential loss of revenue of the Co-Tenant(s) being curtailed.  Additionally, any such curtailment shall be applied to the Hardin Solar Project or the Hardin Solar II Project's in accordance with any SOLAR Farm Management System in place at the time.  Unless directed otherwise by Transmitting Utility or any other Governmental Authority or regulatory authority with jurisdiction over the Shared Facilities or the Additional Facilities, the Co-Tenancy Manager shall allocate curtailment orders issued under sub-clauses (ii) and (iii) of the first sentence of this Section 8.4 among Co-Tenants in accordance with each Co-Tenant's Permitted Capacity subject to such curtailment orders as of such date; provided, however, that (i) the Permitted Capacity with respect to a Project that has not reached its Commercial Operation Date shall be excluded from such calculation for the purposes of this sentence, (ii) such Project that has not reached its Commercial Operation Date shall be curtailed in its entirety prior to any curtailment of any Projects that have reached their Commercial Operation Date, and (iii) the Co-Tenants acknowledge that such allocation will be as close to the formula described above as Co-Tenancy Manager can accomplish, acting commercially reasonably.  To the extent any curtailment is caused by any specific Project(s) or a breach by any specific Co-Tenant(s) of its obligations hereunder or by the action or inaction of any individual Co-Tenant or Co-Tenants, the Co-Tenant or Co-Tenants who owns such specific Project(s), whose breach of its obligations hereunder or whose action or inaction caused the curtailment shall reimburse any Co-Tenant owner of an Implemented Project for all Net Revenue Losses arising from such curtailment, it being hereby agreed that payment of the Net Revenue Losses shall be the Co-Tenant's owner of an Implemented Project's sole and exclusive remedy with respect to loss of revenue and Consequential Damages due to such curtailment.  The Co-Tenants agree that the actual Consequential Damages arising due to such curtailment would be difficult to compute and that the methodology for determining such Consequential Damages set forth above is a good faith estimate of the calculations utilized to determine the actual Consequential Damages that would be suffered.
            (b) The Co-Tenants acknowledge that their respective Interconnection Agreements and requests under study that only permits the Projects cumulatively to produce an output of up to the sum of 600 MW.  As such, each Co-Tenant agrees to program their respective self-curtailment controller so that (i) the aggregate output of the Projects shall never exceed the aggregate permitted output under their respective Interconnection Agreements and (ii) the output of such Co-Tenant's Project shall never exceed the Project's Permitted Capacity.
      8.5 Disconnection From Shared Facilities or Additional Facilities.  A Co-Tenant's Project shall be disconnected from the Shared Facilities or Additional Facilities, and the Co-Tenants hereby authorize the Co-Tenancy Manager to implement such disconnection on behalf of the Co-Tenants, under any of the following circumstances:
            (a) a Co-Tenant is exercising its rights as permitted under Section 13.3(a)(iv), provided any necessary approvals are obtained from the FERC and any other applicable Governmental Authority with jurisdiction over the Shared Facilities or Additional Facilities, as applicable, prior to effectuating such disconnection;
            (b) upon termination or abandonment of a Project by a Co-Tenant or withdrawal from this Agreement by a Co-Tenant in accordance with Article 12 provided that any necessary approvals from FERC or any other Governmental Authority with jurisdiction over the Shared Facilities or Additional Facilities, as applicable, are obtained prior to effectuating such disconnection;
            (c) if disconnection is necessary for safety in order to perform maintenance to any Shared Facility or Additional Facility or in the event of an Emergency effecting a Co-Tenant with an interest in such Shared Facility or Additional Facility; or
            (d) at the direction of a Transmitting Utility pursuant to the applicable Transmitting Utility's rights under the Interconnection Agreements with such Co-Tenant or under Applicable Laws or regulations.  To the extent any disconnection of a Co-Tenant pursuant to this Section 8.5 is caused by or attributable to any specific Project of another Co-Tenant or is attributable to a Co-Tenant Event of Default or by the action or inaction of any other Co-Tenant, the Co-Tenant who owns such specific Project, whose Co-Tenant Event of Default or action or inaction caused the disconnection of such other Co-Tenant's Project shall reimburse such disconnected Co-Tenant owner of an Implemented Project for all Net Revenue Losses arising from such disconnection, it being hereby agreed that payment of the Net Revenue Losses shall be the disconnected Co-Tenant's sole and exclusive remedy with respect to loss of revenue and Consequential Damages due to such disconnection.  The Co-Tenants agree that the actual Consequential Damages arising due to such disconnection would be difficult to compute and that the methodology for determining such Consequential Damages set forth above is a good faith estimate of the calculations utilized to determine the actual Consequential Damages that would be suffered.  If a disconnection that is not due to the actions or inactions of any particular Co-Tenant is necessary, the Co-Tenancy Manager shall implement such disconnection in a fair and non-discriminatory manner taking into consideration the disconnections previously suffered by the Co-Tenants, each affected Co-Tenant's Operational Pro-Rata Share in the Shared Facilities or Additional Facilities or Premises Pro-Rata Share in the Additional Facilities, as applicable, and such other information that is available at the time of such a disconnection.
      8.6 [REDACTED].
      8.7 Co-Tenancy Manager Representative.  On or promptly after the Commencement Date, the Co-Tenancy Manager shall, by written notice to the Co-Tenants, designate an individual representative (the "Co-Tenancy Manager Representative") whose instructions, requests, and decisions will be binding upon such Co-Tenancy Manager in all matters concerning this Agreement, except that the Co-Tenancy Manager Representative shall not have the authority to amend this Agreement.  The Co-Tenancy Manager shall have the right to change the Co-Tenancy Manager Representative at any time and from time to time by written notice to the other Co-Tenants.
      8.8 Competing Ventures.  Subject to any applicable restrictions in any other agreements between or among or otherwise binding on the Co-Tenants, a Co-Tenant or the Co-Tenancy Manager may engage in or possess an interest in other business ventures of any nature and description, independently or with others, including the ownership, financing, leasing, management, syndication, investment, brokerage and development of real property (including real property of the same type and nature as the Projects), and no Co-Tenant nor the Co-Tenancy Manager shall have any rights by virtue of this Agreement in and to such independent ventures or to the income or profits derived therefrom.
Article 9 
CO-TENANCY MANAGER
      9.1 Appointment of the Co-Tenancy Manager.  Hardin Solar shall be the Co-Tenancy Manager effective as of the Commencement Date and shall hold such position until it (a) resigns, or (b) is removed or replaced as provided by this Article 9.  The initial Co-Tenancy Manager shall be Hardin Solar.  The Co-Tenancy Manager has the right to subcontract all or any portion of the services required of the Co-Tenancy Manager herein to any Person in accordance with Section 8.2(a).  For the avoidance of doubt and notwithstanding anything to the contrary in this Agreement, the rights, duties and obligations of the Co-Tenancy Manager (i) shall not begin until the Commencement Date and (ii) with respect to any Additional Facilities, shall not begin until the Additional Facilities Operative Date.
      9.2 Indemnification of Co-Tenancy Manager.  To the fullest extent permitted by law, each Co-Tenant shall jointly and severally, defend, indemnify and hold harmless the Co-Tenancy Manager and its Affiliates and all of their respective officers, directors, employees, agents, partners, shareholders and representatives, from and against any and all suits, actions, liabilities, investigations, legal proceedings, claims, demands, losses, reasonable costs and expenses of whatsoever kind or character (including reasonable attorneys' fees and expenses) (collectively "Damages") arising out of (i) the acts (or failures to act) of any such Co-Tenant or its officers, directors, employees, agents, members and representatives, hereunder or (ii) the acts of the Co-Tenancy Manager pursuant to its authority under this Agreement, provided the liability of each Co-Tenant under this subsection (ii) shall be in proportion to such Co-Tenant's Base Pro-Rata Share; and the Co-Tenancy Manager, its owners, officers, directors and employees shall not be liable to the Co-Tenants or any third party for any obligation, liability, or commitment incurred by or on behalf of the Co-Tenants in accordance with the provisions of this Agreement; provided, however, that the Co-Tenancy Manager, its officers, directors and employees shall not be entitled to indemnification hereunder (x) to the extent any action, claim, demand, cost or liability results from breach of this Agreement or from the Co-Tenancy Manager's gross negligence, bad faith, recklessness or willful misconduct, or (y) to the extent such indemnification relates to Separate Facilities, by the Co-Tenants not owning any share of such Separate Facilities.
      9.3 Indemnification by the Co-Tenancy Manager.  Subject to the other terms and conditions of this Agreement, to the fullest extent permitted by law, the Co-Tenancy Manager shall indemnify, defend and hold harmless each Co-Tenant and the Affiliates of each Co-Tenant, and all of their respective officers, directors, employees, agents, partners, shareholders and representatives, from and against any and all suits, actions, liabilities, investigations, legal proceedings, claims, demands, losses, and reasonable costs and expenses of whatsoever kind or character (including reasonable attorneys' fees and expenses) arising out of the Co-Tenancy Manager's gross negligence, bad faith, recklessness or willful misconduct.  In addition, the Co-Tenancy Manager shall indemnify and protect each Co-Tenant from any and all Liens filed in connection with the performance of the Co-Tenancy Manager's services under this Agreement unless such Lien results from the non-payment for services or equipment by a Co-Tenant or is otherwise permitted hereunder.
      9.4 Indemnification Notices; Limitation on Liability.
            (a) Whenever a Party entitled to indemnification under Section 9.2 or 9.3 of this Agreement (an "Indemnitee"), shall learn of a claim which, if allowed (whether voluntarily or by a judicial or quasi-judicial tribunal or agency), would entitle such Indemnitee to indemnification under Section 9.2 or 9.3 of this Agreement, before paying the same or agreeing thereto, the Indemnitee shall promptly send a notice to the Party required to pay such indemnification (the "Indemnitor") in writing of all material facts within the Indemnitee's knowledge with respect to such claim and the amount thereof; provided, however, that the Indemnitee's right to indemnification shall be diminished by the failure to give prompt notice only to the extent that the Indemnitee's failure to give such notice was prejudicial to the right of the Indemnitor.  If, prior to the expiration of [REDACTED] days from the giving of such notice, the Indemnitor shall request, in writing, that such claim not be paid, the Indemnitee shall not pay the same, provided that the Indemnitor promptly initiate and diligently prosecute in good faith the settlement or litigation of such claim.  The Indemnitor shall have charge and direction of the defense and settlement of such claim, provided, however, that without relieving the Indemnitor of its obligations hereunder or impairing the Indemnitor's right to control the defense or settlement thereof, the Indemnitee may elect to participate through separate counsel in the defense of any such claim, but the fees and expenses of such counsel shall be at the expense of such Indemnitee unless (i) the employment of counsel by such Indemnitee has been authorized in writing by the Indemnitor, (ii) the Indemnitee shall have reasonably concluded that there exists a material conflict of interest between the Indemnitor and such Indemnitee in the conduct of the defense of such claim (in which case the Indemnitor shall not have the right to control the defense or settlement of such claim on behalf of such Indemnitee) or (iii) the Indemnitor shall not have employed counsel to assume the defense of such claim within a reasonable time after notice of the commencement thereof.  In each of such case set forth in clauses (i), (ii), and (iii) of the preceding sentence of this Section 9.4(a), the reasonable fees and expenses of counsel shall be at the expense of the Indemnitor except where the Indemnitor is ultimately deemed not to have been required to provide the indemnity sought by the Indemnitee.  The Indemnitee shall not be required to refrain from paying any claim which has matured by a court judgment or decree, unless an appeal is duly taken therefrom and execution thereof has been stayed, nor shall it be required to refrain from paying any claim where the delay to pay such claim would result in the foreclosure of a lien upon any of the property or assets then held by the Indemnitee, or where any delay in payment would cause the Indemnitee a material economic loss.
            (b) The Co-Tenancy Manager shall not be liable or responsible hereunder, or accountable in damages to the Co-Tenants, for any act or omission performed or omitted by it in good faith pursuant to authority granted to it by this Agreement and in a manner reasonably believed by it to be within the scope of authority granted to it by this Agreement and in the best interests of the Co-Tenants; provided, however, that the Co-Tenancy Manager was not guilty of gross negligence, bad faith, recklessness or willful misconduct.  Nothing in this Section 9.4 shall be construed as a limitation or restriction on the amount or applicability of any insurance policies or coverages held by or otherwise required to be procured and obtained by the Party under the terms of this Agreement.
      9.5 Standards of Performance.  In performing its duties hereunder, the Co-Tenancy Manager shall comply with all Applicable Laws and Prudent Industry Practices.  In no event shall the liability of the Co-Tenancy Manager to the Co-Tenants under this Agreement exceed the cumulative Management Fee paid to the Co-Tenancy Manager hereunder during [REDACTED] period; provided, however, that the foregoing limitation of liability shall not apply to, and no credit shall be issued against such liability for, any liabilities resulting from the gross negligence, bad faith, recklessness, or willful misconduct of the Co-Tenancy Manager arising hereunder.  The duties to be performed by the Co-Tenancy Manager as set forth herein shall not constitute the Co-Tenancy Manager as an architect, engineer, or construction contractor, nor impose upon the Co-Tenancy Manager any obligation to assume, render to, or perform on behalf of any of the Co-Tenants any responsibilities, duties, services, or activities assumed or rendered by any architect, engineer, or construction contractor employed on any Project nor impose upon the Co-Tenant any liability with respect thereto.
      9.6 Removal of the Co-Tenancy Manager.
            (a) Removal for Cause.  The Co-Tenancy Manager may be removed for cause by any of the Operational Co-Tenants for any of the reasons set forth below in the manner set forth below:
                  (i) if the Co-Tenancy Manager is also a Facility Manager of any of the Projects and has been terminated by any of the Operational Co-Tenants as Facility Manager as a result of a default by the Co-Tenancy Manager in its capacity as Facility Manager under a Facility Management Agreement; or
                  (ii) if a Co-Tenancy Manager Event of Default has occurred, subject to the following procedure:
                        (A) The Operational Co-Tenant(s) seeking removal of the Co-Tenancy Manager for cause has provided written notice (the "Removal Notice") to the Co-Tenancy Manager and the other Co-Tenants of the Co-Tenancy Manager Event of Default, including the facts and circumstances giving rise to the default, and of such Operational Co-Tenant's intent to remove Co-Tenancy Manager pursuant to this Section 9.6;
                        (B) If any Co-Tenant delivers a Removal Notice pursuant to Section 9.6(a)(ii)(A), upon receipt of the Removal Notice the Co-Tenancy Manager may elect to (1) cure such Event of Default within the time frames set forth in Section 13.2 plus an additional [REDACTED] days from the receipt of the Removal Notice and, upon curing such breach, will promptly deliver notice that such Event of Default has been cured or that the Co-Tenancy Manger is diligently attempting to cure such breach or (2) dispute the Co-Tenancy Manager Event of Default described therein pursuant to Section 9.6(a)(ii)(D);
                        (C) If the Co-Tenancy Manager has failed to cure the Co-Tenancy Manager Event of Default within the time frames set forth in Section 9.6(a)(ii)(B) or has failed to deliver notice pursuant to Section 9.6(a)(ii)(B) that such item has been cured or that it is diligently working to cure, the Operational Co-Tenant that delivered the Removal Notice may deliver a notice to the Co-Tenancy Manager and the other Co-Tenants of the Co-Tenancy Manager's failure to cure such Event of Default (a "Notice of Failure to Cure");
                        (D) If any Operational Co-Tenant delivers (1) a Removal Notice pursuant to Section 9.6(a)(ii)(A) and the Co-Tenancy Manager elects to dispute the Co-Tenancy Manager Event of Default described therein pursuant to Section 9.6(a)(ii)(B) or (2) a Notice of Failure to Cure pursuant to Section 9.6(a)(ii)(C), then within [REDACTED] days after delivery from such Operational Co-Tenant of such Removal Notice or Notice of Failure to Cure, the Co-Tenancy Manager shall deliver to the Co-Tenants a notice with a detailed description of the reasons why the Co-Tenancy Manager disputes such Co-Tenancy Manager Event of Default or that such Event of Default was not cured, and within [REDACTED] days after delivery of such notice by the Co-Tenancy Manager, the Operational Co-Tenants and the Co-Tenancy Manager shall meet and confer in good faith with respect to such Co-Tenancy Manager Event of Default.  Such meeting and conference may be done either telephonically or in person.  If, after such meeting and conference, the Co-Tenancy Manager and the Operational Co-Tenant(s) seeking removal of the Co-Tenancy Manager are not able to agree whether such Co-Tenancy Manager Event of Default occurred or was cured, such dispute shall be submitted to dispute resolution pursuant to Section 16.7.  Pending resolution of such dispute either by agreement of the Parties or by a final, non-appealable adjudication of a court of appropriate jurisdiction pursuant to Section 16.8, the Co-Tenancy Manager shall continue performing its duties and obligations pursuant to this Agreement; and
                        (E) If the resolution of dispute pursuant to Section 9.6(a)(ii)(D)  determines conclusively (either by agreement of the Parties or by a final, non-appealable adjudication of a court of appropriate jurisdiction pursuant to Section 16.8) that a Co-Tenancy Manager Event of Default has occurred, the Co-Tenancy Manager shall be removed, and the Operational Co-Tenants shall promptly commence the process of appointing a successor Co-Tenancy Manager.  In the event the Co-Tenancy Manager fails to cure, attempt to cure or dispute an event of default within the time frames set forth in Section 9.6(a)(ii)(B) after receipt of a Removal Notice pursuant to Section 9.6(a)(ii)(A), the Co-Tenancy Manager shall be removed, and the Operational Co-Tenants shall promptly commence the process of appointing a successor Co-Tenancy Manager.
            (b) Successor Co-Tenancy Manager.  No removal of the Co-Tenancy Manager by the Co-Tenants shall be effective unless and until a successor Co-Tenancy Manager is appointed.  If the Co-Tenancy Manager is removed pursuant to this Section 9.6, a successor Co-Tenancy Manager shall be selected pursuant to the agreement of the Required Majority of the Operational Co-Tenants.  Any Co-Tenancy Manager which is removed shall, in good faith, continue to undertake its duties and obligations as the Co-Tenancy Manager until such time as a successor Co-Tenancy Manager is appointed hereunder.  If the Co-Tenants fail to select a replacement Co-Tenancy Manager within sixty (60) days of the decision to remove the Co-Tenancy Manager, the Co-Tenants shall avail themselves of the dispute resolution procedures set forth in Section 16.7.  In addition, and provided that the removed Co-Tenancy Manager shall continue to be reimbursed for its services by the Co-Tenants as provided hereunder, the removed Co-Tenancy Manager shall cooperate with and assist the new Co-Tenancy Manager during any such transition period, including execution of all necessary documents and provision of all information and documentation that the new Co-Tenancy Manager may reasonably require to fulfill its duties and obligations hereunder.
            (c) Resignation.  The Co-Tenancy Manager shall have the right to resign as Co-Tenancy Manager for convenience and without any liability to any of the Co-Tenants upon [REDACTED] days prior written notice to the Co-Tenants.  The Co-Tenants shall appoint a successor Co-Tenancy Manager within this [REDACTED] day period, during which period the Co-Tenancy Manager shall, in good faith, continue to undertake its duties and obligations as the Co-Tenancy Manager until such time as a successor Co-Tenancy Manager is appointed hereunder.  If the Co-Tenants fail to select a replacement Co-Tenancy Manager within [REDACTED] days of the Co-Tenancy Manager's notice of its intent to resign, the Co-Tenants shall avail themselves of the dispute resolution procedures set forth in Section 16.7. The Co-Tenancy Manager shall cooperate with the Co-Tenants in the transition of the performance of the Co-Tenancy Manager's obligations to the Co-Tenants or a successor Co-Tenancy Manager until the conclusion of such [REDACTED] day period; provided, however, that if the Co-Tenants are unable to select or agree upon a replacement Co-Tenancy Manager during such [REDACTED] day period, the Co-Tenants may extend such [REDACTED] day period for up to an additional [REDACTED] days by providing the Co-Tenancy Manager written notice of their intention to extend such period at least [REDACTED] days prior to the end of the initial [REDACTED] day period.  During any such time that the Co-Tenancy Manager is obligated pursuant to this Section 9.6 to perform its obligations hereunder, the Co-Tenancy Manager shall remain liable for the performance of such obligations in accordance with this Agreement as if no resignation notice had been delivered.
            (d) Co-Tenancy Manager Assignment.  Subject to the receipt of any necessary authorizations from Governmental Authorities, the Co-Tenancy Manager may assign this Agreement to an affiliate, without any consent requirements, provided that such affiliate assumes all of the Co-Tenancy Manager's obligations hereunder whether accruing prior, on or after the date of such assignment or to a third party upon written consent of a Required Majority, which consent shall not be conditioned, withheld or delayed.
            (e) Liability.  Co-Tenancy Manager shall be discharged and released from all liability arising from acts, actions or omissions first occurring on or after the day Co-Tenancy Manager ceases to perform services hereunder.
            (f) FERC Amendment Filing Related to Co-Tenancy Manager Replacements.  If the Co-Tenancy Manager is replaced or resigns under Sections 9.6(b), 9.6(c) or 9.6(d), this Agreement shall be amended to reflect the identity of the new Co-Tenancy Manager and, pursuant to Section 16.4(a) of this Agreement, such amended Agreement shall be filed at FERC under FPA Section 205.
      9.7 Books and Records; Reporting Requirements.
            (a) Maintenance of Records.  The Co-Tenancy Manager shall maintain books and records in sufficient detail to verify amounts due and payable hereunder for a period of not less than three (3) years after the end of the calendar month to which they relate, and all such books and records shall be available for inspection and/or copying by each Co-Tenant and its Secured Parties or its authorized representative at the cost and expense of such Co-Tenant and at reasonable times during regular business hours, upon reasonable notice to the Co-Tenancy Manager.
            (b) Provision of Reports.  The Co-Tenancy Manager shall, from time to time, provide reports to the Co-Tenants sufficient to keep the Co-Tenants reasonably apprised as to significant matters concerning the maintenance and repair of the Shared Facilities, including such matters related thereto which may have a material impact on the operation, maintenance or repair of each Co-Tenant's Project.  The Co-Tenancy Manager's reporting obligations shall include all of the following:
                  (i) Collecting and providing any information, to the extent such information is in Co-Tenancy Manager's possession or is reasonably available to Co-Tenancy Manager, regarding the Shared Premises and Facilities, Additional Facilities, Additional Premises and Easements required for any reports to any Governmental Authorities.
                  (ii) Reporting promptly (and in any event within [REDACTED] of becoming aware of an Emergency) to the Co-Tenants and to any other Persons entitled to receive such notice any incident of explosion, fire, storm, or other Emergency on the Shared Premises and Facilities or any Separate Project, or otherwise affecting any of the Shared Premises and Facilities, of which it becomes aware.
                  (iii) Providing prompt written notice to the Co-Tenants, all in commercially reasonable detail upon learning of the event requiring notice, of (x) any actual violation of any Applicable Law, including a requirement of any Governmental Authority, or any violation or breach of any Interconnection Agreement provided to the Co-Tenancy Manager or any of the agreements relating to the Shared Facilities and (y) all events, occurrences, conditions, and issues that the Co-Tenancy Manager reasonably considers are material to, or are reasonably likely to have a material adverse effect on, the operation, maintenance, or results of operations of the Shared Facilities, including notices of Liens and claims of Liens.
      9.8 Co-Tenancy Manager Fees and Expenses.  The Co-Tenancy Manager shall be paid or reimbursed, to the extent consistent with the Approved Co-Tenancy O&amp;M Budget or as approved in advance by Co-Tenants, for any unscheduled maintenance and repairs to and replacements of the Shared Facilities performed by the Co-Tenancy Manager on behalf of the Co-Tenants in accordance with Section 6.7.  Except in the event of an Emergency, the Co-Tenancy Manager shall have the right to pre-invoice the Co-Tenants for any materials and components required to be provided hereunder, and not to proceed with the acquisition of such materials and components unless payment has been received by the Co-Tenancy Manager for such materials and components.
      9.9 Facility Management Agreements.  Each Co-Tenant that has entered into a Facility Management Agreement on or prior to the Contract Date or at any time during the Term of this Agreement agrees that if and to the extent any land or equipment that is subject to the Facility Management Agreement constitutes Shared Premises and Facilities or Easements, (i) to the extent of any overlap or inconsistency between an Facility Management Agreement and this Agreement with respect to Shared Premises and Facilities, this Agreement shall control so long as more than one Co-Tenant is a Co-Tenant hereunder, and (ii) if the Facility Manager of a Co-Tenant is not the Co-Tenancy Manager, the Facility Manager shall not have the right to operate, maintain, repair, or replace the Shared Premises and Facilities, but such Facility Manager shall have the right to access the Shared Premises and Facilities and the Easements upon reasonable notice to Co-Tenancy Manager on a temporary basis as is reasonably necessary to ensure such Facility Manager will have all hardware and software connections necessary for the Facility Manager to operate the Separate Facilities that such Facility Manager is responsible for, and shall also have the right to access data (solely with respect to the Shared Facilities) from the O&amp;M Facilities, to the extent necessary to operate such Co-Tenant's Separate Facilities.  The provisions of this Agreement regarding such Shared Premises and Facilities or Easements and Co-Tenancy Manager's right and obligations with respect thereto shall not relieve the Facility Manager of its obligations and duties contained in a Facility Management Agreement, and Facility Manager shall remain fully liable for all services to be performed by Facility Manager under such Facility Management Agreement.
Article 10 
INSURANCE
      10.1 Insurance.  With the exception of workers compensation insurance and automobile insurance and unless the Co-Tenants otherwise agree, at the request of the Co-Tenants that own an Undivided Interest in the Shared Premises and Facilities, the Additional Premises or Additional Facilities, the Co-Tenancy Manager shall, on behalf of the Co-Tenants, arrange to procure or cause to be procured the coverages of insurance outlined below to be put in place for the Shared Premises and Facilities, the Additional Premises and Additional Facilities, but, for the avoidance of doubt, not any Separate Projects or Separate Facilities.  The cost of construction phase insurances in the case of construction of a Subsequent Project shall be paid by the constructing Co-Tenant.  Regardless of who shall arrange for the coverage of insurances, all insurances for the Shared Premises and Facilities, the Additional Premises and Additional Facilities shall be maintained in accordance with this Article 10.  Notwithstanding the foregoing, Co-Tenancy Manager may self-insure to meet the requirements of this Article 10.  
      10.2 Construction Phase Insurances. 
            (a) Builder's All-Risk Insurance.  During any construction each Co-Tenant (in the case of construction of a Subsequent Project) and the Co-Tenancy Manager as the case may be (in the case of construction on an Implemented Project), shall procure or cause to be procured, and maintain or cause to be maintained, at its sole cost and expense builder's all-risk insurance in an amount (i) sufficient to replace any new or existing Shared Facilities or Additional Facilities which are subject to such construction, and (ii) that is reasonably acceptable to the Co-Tenant performing construction.  Such policies shall name the Co-Tenancy Manager and each of the other Co-Tenants (and, upon the written request of a Co-Tenant, such Co-Tenants members or Secured Parties) as additional named insureds.  If the Co-Tenants do not request Co-Tenancy Manager to procure or cause to be procured the insurance described in this Section 10.2(a), each Co-Tenant shall be responsible for and shall pay its (A) Operational Pro-Rata Share of any property damage to the Shared Facilities that is not the responsibility of the Co-Tenant that caused the damage pursuant to this Agreement or (B) Additional Premises and Facilities Pro-Rata Share of any property damage to the Additional Facilities that is not the responsibility of the Co-Tenant that caused the damage pursuant to this Agreement.  
            (b) General Liability Insurance.  The Co-Tenancy Manager shall procure or cause to be procured, and maintain or cause to be maintained commercial general liability insurance covering the respective activities of the Co-Tenancy Manager on the site of the owned Projects, the Shared Premises or Additional Premises.  Each Co-Tenant shall procure or cause to be procured, and maintain or cause to be maintained commercial general liability insurance covering such Co-Tenant's owned Project and such Co-Tenant's activities on the site of any other Co-Tenant's Project, the Shared Premises or Additional Premises.  Such coverage shall (i) have a minimum limitation of [REDACTED], provided that such amount may be provided as part of a blanket policy covering other properties owned by Affiliates of the Co-Tenancy Manager, (ii) contain a blanket broad form contractual endorsement and severability of interest clause, and (iii) upon the written request of a Co-Tenant, designate the Secured Parties, and their respective officers, directors, employees and agents as additional insureds.  Furthermore, if a policy is on a "claims made" basis, such coverage shall survive the termination of this Agreement until the expiration of the maximum statutory period of limitations in the State of Delaware for actions based on contract or in tort.  If coverage is on an "occurrence" basis, insurance on an occurrence basis shall be maintained for the term of this Agreement.
            (c) Workers Compensation Insurance.  To the extent there are employees, each Co-Tenant or the Co-Tenancy Manager as the case may be shall independently obtain and maintain appropriate workers compensation insurance to provide minimum coverage to comply with any statutory obligation imposed by workers compensation or occupational disease laws.
            (d) Employers Liability Insurance.  To the extent there are employees, each Co-Tenant or the Co-Tenancy Manager as the case may be, shall independently obtain and maintain appropriate employer's liability insurance.  Such coverage shall have (i) a minimum limitation [REDACTED] per employee for bodily injury by disease.
            (e) Automobile Liability Insurance.  Each Co-Tenant or Co-Tenancy Manager as the case may be, shall procure or cause to be procured, and maintain or cause to be maintained automobile liability insurance against claims for personal injury (including bodily injury and death) and property damage covering all owned, leased non-owned and hired motor vehicles, including loading and unloading.  Such coverage shall have a minimum limitation of [REDACTED] per occurrence for combined bodily injury and property damage and shall contain appropriate no-fault insurance, wherever applicable.
            (f) Pollution Liability Insurance.  Each Co-Tenant or Co-Tenancy Manager, as the case may be, shall procure or cause to be procured, and maintain or cause to be maintained pollution liability insurance.  Such coverage shall have a minimum limitation of [REDACTED] in the annual aggregate.  Such insurance will cover sudden and accidental pollution losses arising from the services performed under this Agreement and include completed operations coverage, or if written on a claims made basis, the policy shall be maintained for at least three (3) years following completion of any construction.  Such coverage may be included in the Commercial General Liability policy or provided under a separate Pollution Liability policy.
            (g) Excess Liability Insurance.  Each Co-Tenant or Co-Tenancy Manager, as the case may be, shall procure or cause to be procured, and maintain or cause to be maintained excess liability insurance covering claims in excess of the underlying insurance described in Sections 10.2(b), 10.2(d) and 10.2(e) with a minimum limitation of [REDACTED].
      10.3 Operational Phase Insurances.
            (a) Property Damage Insurance.  At the request of the Co-Tenants, during operations the Co-Tenancy Manager shall, on behalf of the Co-Tenants, procure or cause to be procured, and maintain or cause to be maintained property damage insurance in an amount (i) sufficient to replace any existing Shared Facilities or Additional Facilities that may be affected by a loss, and (ii) that is reasonably acceptable to the Co-Tenants.  Such policies shall name the Co-Tenancy Manager and each of the other Co-Tenants as named insureds, and upon the written request of a Co-Tenant its Secured Parties, as additional insureds.  If the Co-Tenants do not request Co-Tenancy Manager to procure or cause to be procured the insurance described in this Section 10.3(a), each Co-Tenant shall be responsible for and shall pay its (A) Operational Pro-Rata Share of any property damage to the Shared Facilities that is not the responsibility of the Co-Tenant that caused the damage pursuant to this Agreement or (B) Additional Premises and Facilities Pro-Rata Share of any property damage to the Additional Facilities that is not the responsibility of the Co-Tenant that caused the damage pursuant to this Agreement. 
            (b) General Liability Insurance.  The Co-Tenancy Manager shall procure or cause to be procured, and maintain or cause to be maintained commercial general liability insurance covering the respective activities of the Co-Tenancy Manager on the site of the owned Projects, the Shared Premises or Additional Premises.  Each of the Co-Tenants shall procure or cause to be procured, and maintain or cause to be maintained commercial general liability insurance covering such Co-Tenant's owned Project and such Co-Tenant's activities on the site of any other Co-Tenant's Project, the Shared Premises or Additional Premises.  Such coverage shall (i) have a minimum limitation of [REDACTED], provided that such amount may be provided as part of a blanket policy covering other properties owned by Affiliates of the Co-Tenancy Manager, (ii) contain a blanket broad form contractual endorsement and severability of interest clause, and (iii) upon the written request of a Co-Tenant, its Secured Parties, and their respective officers, directors, employees and agents as additional insureds. 
            (c) Workers Compensation Insurance.  To the extent there are employees, the Co-Tenancy Manager and each of the Co-Tenants shall independently obtain and maintain appropriate workers compensation insurance to provide minimum coverage to comply with any statutory obligation imposed by workers compensation or occupational disease laws.
            (d) Employers Liability Insurance.  To the extent there are employees, each Co-Tenant or the Co-Tenancy Manager as the case may be, shall independently obtain and maintain appropriate employers liability insurance.  Such coverage shall have (i) a minimum limitation of at least [REDACTED] per accident for any bodily injury by accident and (ii) a minimum limitation of [REDACTED] per employee for bodily injury by disease. 
            (e) Automobile Liability Insurance.  Each Co-Tenant or Co-Tenancy Manager as the case may be, shall procure or cause to be procured, and maintain or cause to be maintained automobile liability insurance against claims for personal injury (including bodily injury and death) and property damage covering all owned, leased non-owned and hired motor vehicles, including loading and unloading.  Such coverage shall have a minimum limitation of [REDACTED] per occurrence for combined bodily injury and property damage and shall contain appropriate no-fault insurance, wherever applicable.
            (f) Pollution Liability Insurance.  Each Co-Tenant or Co-Tenancy Manager, as the case may be, shall procure or cause to be procured, and maintain or cause to be maintained pollution liability insurance.  Such coverage shall have a minimum limitation of [REDACTED].  Such insurance will cover sudden and accidental pollution losses arising from the services performed under this Agreement and include completed operations coverage, or if written on a claims made basis, the policy shall be maintained for at least three (3) years following the termination of this Agreement.  Such coverage may be included in the Commercial General Liability policy or provided under a separate Pollution Liability policy.
            (g) Excess Liability Insurance.  Each Co-Tenant or Co-Tenancy Manager, as the case may be, shall procure or cause to be procured, and maintain or cause to be maintained excess liability insurance covering claims in excess of the underlying insurance described in Sections 10.3(b), 10.3(d) and 10.3(e) with a minimum limitation of [REDACTED].
      10.4 Waiver of Claims For Insured Events.
            (a) Notwithstanding anything to the contrary contained in this Agreement, each Co-Tenant waives any and every claim that arises or may arise in its favor against Co-Tenancy Manager and any other Co-Tenant during the term of the Agreement for any and all loss of, or damage to any Shared Facilities or Additional Premises, to the extent such loss or damage is an insured event covered by the insurance to be maintained in accordance with this Agreement; provided, however, the foregoing waiver shall not apply to any uninsured deductible or self-insured retention or to instances where the relevant insurer disputes that the relevant event of loss was an insured event covered by the applicable insurance policy.
            (b) In the event of an insured event, all insurance proceeds (other than those applicable to third party or workers compensation losses) with respect to the Shared Facilities or Additional Facilities shall be pooled and Co-Tenancy Manager shall apply the proceeds to reconstruction.  If there is uninsured loss or insurance proceeds are inadequate, if such uninsured loss is not subject to an action for which a Co-Tenant is obligated to indemnify other Co-Tenants pursuant to the terms of this Agreement, the Co-Tenants shall contribute additional amounts based on (A) the Operational Pro-Rata Share of each of the Shared Facilities damaged for all costs and expenses of repair or replacement of such damaged Shared Facilities or (B) the Additional Premises and Facilities Pro-Rata Share of each of the Additional Facilities damaged for all costs and expenses of repair or replacement of such damaged Additional Facilities. 
      10.5 Form and Content of Insurance.  All policies and binders with respect to insurance provided pursuant to this Article 10 shall be as follows:
            (a) Form of Policies.  All insurance provided for hereunder shall be placed on forms reasonably acceptable to Co-Tenants.
            (b) Insurance Companies.  All insurance required hereunder shall be with insurers with an A.M. Best rating of A- or better or with insurers otherwise deemed acceptable to Co-Tenancy Manager and the Co-Tenants.
            (c) Severability.  All liability insurance shall contain a severability of interest provision providing that, except with respect to the total limits of liability, the insurance shall apply to each insured or additional insured in the same manner as if separate policies had been issued to each.
            (d) Non-Recourse.  All insurance shall provide that there will be no recourse against the additional insureds for the payment of premiums or commissions or (if such policies provide for the payment thereof) additional premiums or assessments.
      10.6 Additional Requirements.  
            (a) Waiver of Subrogation.  All insurance maintained by the Co-Tenants and Co-Tenancy Manager shall provide for the waiver of any right of subrogation by the insurers thereunder against the Co-Tenancy Manager, the Co-Tenants (and their members) and, upon the written request of a Co-Tenant, it Secured Parties and their officers, directors, employees, agents and representatives, and any right of the insurers to any setoff or counterclaim or any other deduction, whether by attachment or otherwise, in respect of any liability of any such person insured under such policy.
            (b) Notice of Cancellation.  All insurance shall provide that it may not be canceled without giving all of the Co-Tenants (and their members or Secured Parties if such Co-Tenant has provided a written request to the Co-Tenancy Manager for their inclusion along with notice information for such members or Secured Parties), the Co-Tenancy Manager, endeavor to provide at least [REDACTED] days prior written notification thereof, except in cases of non-payment of premium for which [REDACTED] days prior written notice shall be provided (unless a longer notice period for non-payment is agreed to by the relevant insurer).
            (c) Certificates; Proof of Loss.  Prior to any entry on the site of a Project or the Shared Premises by a Co-Tenant, the Co-Tenancy Manager and the Co-Tenants shall furnish certificates of insurance to the Co-Tenancy Manager and, upon request, to the other Co-Tenants (and their members or Secured Parties if such Co-Tenant has provided a written request to the Co-Tenancy Manager for their inclusion along with notice information for such members or Secured Parties), evidencing the insurance required of such Co-Tenancy Manager or Co-Tenant pursuant to this Agreement.  Each of the Co-Tenants (and upon written request of a Co-Tenant, its Secured Parties) and the Co-Tenancy Manager shall be listed as additional insureds on the policies of the other Co-Tenants.  The Co-Tenancy Manager or the Co-Tenant maintaining each policy hereunder shall make all proofs of loss under each such policy, and shall take all other action reasonably required to ensure collection from insurers for any loss under any such policy, except that each of the Co-Tenants and the Co-Tenancy Manager shall cooperate and assist in the preparation of such proofs of loss and take such other actions on behalf of the Co-Tenants as may be requested by the Co-Tenants or the Co-Tenancy Manager.
            (d) Payment of Deductibles and Self-Insured Retention Amounts.  Each Co-Tenant shall be responsible for deductibles or self-insured retention on a pro-rata basis in proportion to such Co-Tenant's ownership of the applicable Shared Premises, Shared Facility, Additional Premises or Additional Facility, and in proportion to the amount of each Co-Tenant's insurance recovery; provided, however, with respect to any claim under any policy provided by a Co-Tenant that results from the negligence of Co-Tenancy Manager, Co-Tenancy Manager shall be responsible for the payment of such deductible, subject to Co-Tenancy Manager's limitations of liability as set forth in Article 9 hereof; provided, however, proceeds payable under any policy shall not apply against the limitations of liability amount in Article 9.
            (e) Subcontractor Insurance.  Co-Tenancy Manager shall require all subcontractors to carry adequate coverage in accordance with Co-Tenancy Manager's normal practice, prior to entry on the Shared Premises or Additional Premises and during the time in which they are engaged in performing services to be furnished by Co-Tenancy Manager, and for such subcontractors to provide written evidence of such insurance and additional insured status prior to entry on the Shared Premises or Additional Premises.  Co-Tenancy Manager shall provide the Co-Tenants, upon request, with current certificates of insurance evidencing such coverage as may be reasonably requested.  All such insurance policies shall name Co-Tenancy Manager, the Co-Tenants, and, upon the written request of a Co-Tenant, its Secured Parties, as additional named insureds, and the requested Secured Parties named as loss payees.
            (f) Notification.  The Co-Tenants and the Co-Tenancy Manager agree to advise the other Co-Tenants and the Co-Tenancy Manager as soon as practicable in writing of any notice of claim to which insurance pursuant to this Article 10 applies.
            (g) Co-Tenant's Rights.  Should the Co-Tenancy Manager or any Co-Tenant fail to provide or maintain any of the insurance policies required of it and such failure continues for more than [REDACTED] days after notice of cancellation is provided pursuant to Section 10.6(b), the other Co-Tenants shall have the right to provide and/or maintain such coverage at such defaulting Co-Tenancy Manager or Co-Tenant's expense.
            (h) Additional Insured.  As applicable, coverage provided by the policies described in this Agreement shall include as their interests may appear, the Co-Tenants, the Co-Tenancy Manager, and, upon the written request of a Co-Tenant, its Secured Parties, as "additional insured".
            (i) Loss Payable.  The Co-Tenants, the Co-Tenancy Manager, and, if appliable, the Secured Parties or their agent shall be "loss payees" as their interests may appear under construction phase builders all-risk and operational phase property all-risk insurance.
      10.7 Amount of Insurance.	
  The amounts of insurance required in this Article 10 may be satisfied by purchasing coverage in the amounts specified or by any combination of primary and excess insurance, so long as the total amount of insurance meets the requirements specified above.
Article 11 
ASSIGNMENTS AND RIGHT TO ENCUMBER
      11.1 Assignment by Co-Tenants.  Except as permitted by Sections 11.2 [REDACTED], no Co-Tenant shall assign, sell, dispose of, give or otherwise transfer (collectively, for the purposes of this Article 11, referred to as "Assign" or an "Assignment") all or any portion of its interests or its rights under this Agreement, whether voluntarily, by operation of law, at judicial sale or otherwise, to any person.
      11.2 Procedures.  Notwithstanding the foregoing, a Co-Tenant may Assign all or any portion of its interests or its rights under this Agreement provided that all of the following conditions are satisfied:
            (a) the assignee will, as of the effective date of such assignment, own the Project of the assigning Co-Tenant;
            (b) a counterpart of the instrument of Assignment, executed by the Co-Tenants thereto, is delivered to the other Co-Tenants;
            (c) the assignee assumes and consents in writing to be bound by all of the terms and obligations of this Agreement in the place and stead of the assigning Co-Tenant accruing before and after the date of such assignment;
            (d) all necessary prior approvals have been obtained from the Transmitting Utility and from FERC and any other Governmental Authority with jurisdiction over the Shared Facilities or the Separate Facilities;
            (e) the assignee cures any curable Co-Tenant defaults hereunder and Co-Tenant Events of Default of the assigning Co-Tenant;
            (f) the assigning Co-Tenant agrees to remain liable for any unpaid amounts due pursuant to this Agreement that accrued prior to the effective date of such Assignment; and
      Upon an Assignment that satisfies all of the foregoing conditions, the assigning Co-Tenant shall be released from any further obligations accruing pursuant to this Agreement from and after the effective date of such Assignment, except for those described in Section 11.2(f) above.  Any purported Assignment that does not satisfy all of the foregoing conditions shall be null and void and of no effect and the Co-Tenant making such an Assignment shall remain liable for all of its rights and obligations under this Agreement.
      11.3 [REDACTED]
      11.4 Expenses and Other Matters.  All reasonable expenses, including reasonable attorneys' fees, incurred by the Co-Tenancy Manager or any Co-Tenant in connection with (a) the Assignment or proposed Assignment of another Co-Tenant's interests and its rights under this Agreement, or (b) the actual or proposed pledge, collateral assignment, encumbrance, or grant of a security interest in a Co-Tenant's interests and its rights under this Agreement to a Secured Party, shall be reimbursed by such Co-Tenant making the Assignment or granting the security interest.  Notwithstanding anything in this Article 11 to the contrary, in responding to any request by any Secured Party for certificates, consents or other documents or agreements, the Co-Tenancy Manager and the other Co-Tenants shall have no obligation to provide any such certificates, consents or other documents or agreements (i) unless specifically required in this Agreement or (ii) if providing such items could reasonably be expected to adversely affects any of the rights, benefits, risks or obligations of the Co-Tenancy Manager or other Co-Tenants under this Agreement or with respect to the Projects.
Article 12 
TERM AND TERMINATION
      12.1 Term and Termination.  The term (the "Term") of this Agreement shall begin on the Contract Date and shall terminate, subject to obtaining any necessary prior FERC approvals for such termination, upon the first occurrence of one of the following: (a) a single Co-Tenant or Secured Party becoming the owner of the entire ownership interest in all of the Easements and the Shared Premises and Facilities (after a second Co-Tenant becomes a Co-Tenant hereto), or (b) the mutual agreement of all the Co-Tenants.  If the Regulatory Approval Date for a Co-Tenant has not occurred on or before the date that is ten (10) years from the Contract Date, then such Co-Tenant's interest in this Agreement shall immediately terminate and be of no further force or effect, subject to obtaining any necessary prior FERC approvals for such termination. If the Regulatory Approval Date has not occurred with respect to both the Hardin Solar II Project and the Hardin Solar III Project on or before the date that is ten (10) years from the Contract Date, then this Agreement shall immediately terminate and be of no further force or effect, subject to obtaining any necessary prior FERC approvals for such termination.
      12.2 Surrender and Assignment of Undivided Interest.  Any Co-Tenant who wishes to abandon and decommission its Project may elect, or non-defaulting Co-Tenants may require a defaulting Co-Tenant, pursuant to Section 13.3(a)(v) hereof, to convey its interests and assign its rights hereunder to the other Co-Tenants in accordance with their respective proportionate share of the Shared Premises and Facilities, Additional Premises, Additional Facilities or Easements (in each case calculated without reference to the interest of the Surrendering Co-Tenant) and, thereupon, to cease to have any right, title or interest in the Shared Premises and Facilities, Additional Premises, Additional Facilities or Easements (such Co-Tenant a "Surrendering Co-Tenant").  The Surrendering Co-Tenant must (a) deliver all instruments of transfer as may be necessary or appropriate to effect the conveyance of its interests and assignment of its rights hereunder to, and which are reasonably satisfactory to, the remaining Co-Tenant(s), (b) assign and convey to the remaining Co-Tenant(s) all its rights under this Agreement, provided, however, that (x) any such surrender of an encumbered interest may only be surrendered with the written consent of each Secured Party that holds a security interest in such interest and a release of such Secured Party's security interest being provided by such Secured Party, which the Surrendering Co-Tenant shall be obligated to obtain from the Secured Party, provided, however, that in the case of a surrender pursuant to Section 13.3(a)(v), [REDACTED], and (y) all necessary prior FERC approvals must be obtained and all Co-Tenants including the Surrendering Co-Tenant must take all reasonable steps to obtain such FERC approval at the Surrendering Co-Tenant's sole cost and expense, and (c) cure all Co-Tenant Events of Default then existing.  The Surrendering Co-Tenant shall remain fully responsible for, and shall pay its applicable share pursuant to Section 6.3 of, all Shared O&amp;M Expenses of such Surrendering Co-Tenant through the effective date of its surrender of its interests and shall at all times continue to pay any Separate O&amp;M Expenses and all reasonable costs, including reasonable attorneys' fees, incurred by any of the Co-Tenants in obtaining FERC approval of such surrender.  No surrender of a Co-Tenant's interests shall relieve the Surrendering Co-Tenant of any of its obligations under this Agreement, the Easements, the Interconnection Agreements or Power Purchase Agreements or any other agreement entered into pursuant to this Agreement, or its obligations hereunder with respect to its Separate Project, unless expressly provided for in this Agreement, or in a writing among the Co-Tenants.
      12.3 Decommissioning of a Project.  Any Surrendering Co-Tenant shall provide [REDACTED] days written notice of its intent to decommission and abandon its Project to the other Co-Tenants and the Co-Tenancy Manager (the "Withdrawal Notice").  The Surrendering Co-Tenant shall be responsible for the decommissioning and removal of its Separate Facilities and for all related actions taken and costs incurred by the other Co-Tenants as a result of such Co-Tenant's abandonment of its Project.  If the Surrendering Co-Tenant fails to properly decommission and remove its Separate Facilities, if any such failure could reasonably create a liability for the remaining Co-Tenants, the Co-Tenancy Manager may, subject to the direction and control of the remaining Co-Tenants, decommission and remove same on behalf of such Surrendering Co-Tenant, but only to the extent necessary to avoid the aforementioned liability, and shall charge the Surrendering Co-Tenant all reasonable and necessary costs incurred to accomplish such decommissioning and removal and any additional expenses of the removal of any of the Shared Facilities, including costs incurred in the restoration of interests in land as required by the Easements and any permits for any such decommissioning Project (collectively, the "Withdrawal Costs").  The Co-Tenancy Manager shall administer the calculation, collection, and distribution of the Withdrawal Costs, as follows:
            (a) The Co-Tenancy Manager shall estimate the Withdrawal Costs and shall provide written notice of such costs to the Surrendering Co-Tenant within [REDACTED] days after Co-Tenancy Manager has received the Withdrawal Notice.  The Co-Tenancy Manager may engage a third party consultant to assist in the calculation of the Withdrawal Costs, in which case, such consulting fees shall be paid by the Surrendering Co-Tenant.
            (b) The Surrendering Co-Tenant shall, within [REDACTED] days of the receipt of the written notice of the Withdrawal Costs, pay the Withdrawal Costs to the Co-Tenancy Manager.  The Withdrawal Costs shall be maintained by the Co-Tenancy Manager in a reserve account and used by the Co-Tenancy Manager for the payment of Shared O&amp;M Expenses (to the extent such amounts were collected from the Surrendering Co-Tenant as provided above) to be applied for the benefit of the remaining Co-Tenants in accordance with their its applicable shares of such expenses pursuant to Section 6.3 and for removal of Shared Facilities and Additional Facilities and the restoration of the relevant land, as necessary.
            (c) Any dispute in regard to the amount of the Withdrawal Costs shall be submitted to dispute resolution pursuant to the terms of Section 16.7.
            (d) A Surrendering Co-Tenant who fails to pay the Withdrawal Costs shall immediately file for all FERC approvals necessary to cease and desist from the use of the Shared Facilities and, if applicable, Additional Facilities, and upon obtaining the necessary prior FERC approvals, forfeit all of its interests hereunder to the other Co-Tenants, and cease and desist from such use; provided that the Co-Tenants shall also have obtained any necessary FERC approvals with respect to such forfeit and transfer of the interests.  Any interests of the Surrendering Co-Tenant transferred or surrendered to the other Co-Tenants shall be allocated to the other Co-Tenants in accordance with their respective proportionate share of the applicable Shared Premises and Facilities, Additional Premises, Additional Facilities or Easements (in each case calculated without reference to the interest of the Surrendering Co-Tenant). 
      12.4 Distribution on Termination of this Agreement.  Upon termination of this Agreement or in the event that the Co-Tenants decide to decommission all of the Projects and to proceed with the removal of the Shared Facilities, Additional Facilities and the Separate Facilities, the Co-Tenancy Manager shall take account of all of the Co-Tenants' joint assets purchased pursuant to the Approved Co-Tenancy O&amp;M Budget, including the Shared Facilities, Additional Facilities, joint liabilities, and existing third party agreements and, subject to the direction and control of the Co-Tenants and obtaining any necessary FERC approvals to dispose of the Shared Facilities and, if applicable, Additional Facilities, shall proceed with the liquidation thereof.  The Co-Tenants' joint assets purchased pursuant to the Approved Co-Tenancy O&amp;M Budget shall be liquidated under the supervision of the Co-Tenancy Manager as promptly as is consistent with obtaining a reasonable value therefor, and the proceeds therefrom, together with any assets distributed in-kind, shall be applied and distributed as follows:
            (a) To the payment of debts and liabilities of the Co-Tenants to third parties in connection with (i) the Shared Facilities which are then due and the expenses of liquidation on a pro-rata and pari passu basis, based upon each Co-Tenant's Operational Pro-Rata Shares in the Shared Facilities as of the date of liquidation, and (ii) the Additional Facilities which are then due and the expenses of liquidation on a pro-rata and pari passu basis, based upon each Co-Tenant's Additional Premises or Facilities Pro-Rata Shares in the Additional Facilities as of the date of liquidation.
            (b) To the setting up of any reserves which are reasonably necessary for any contingent or unforeseen liabilities or obligations or debts not yet payable by the Co-Tenants in connection with the Shared Facilities or Additional Facilities, including any reserves to pay costs associated with the decommissioning and removal of the Shared Facilities, Additional Facilities or any Separate Facilities not yet removed by a Co-Tenant.
            (c) Any sum remaining after the payment of amounts in Section 12.3(a) and 12.3(b) above shall be distributed, on a pro-rata basis, based upon each Co-Tenant's (i) Operational Pro-Rata Share in the Shared Facilities and (ii) Additional Premises or Facilities Pro-Rata Shares in the Additional Facilities.
            (d) At the request of and subject to the direction and control of the Co-Tenants and obtaining any necessary FERC approval for such disconnection, the Co-Tenancy Manager may, in order to effectuate the liquidation of the Co-Tenants' joint assets purchased pursuant to the Approved Co-Tenancy O&amp;M Budget, disconnect the Shared Facilities and Additional Facilities from the Interconnection Facilities and the Projects.
      12.5 Valuation and Distribution of Non-Cash Distributions.  To the extent that non-cash consideration is distributed in kind as permitted herein, the fair value of such assets shall first be determined by an independent valuation expert selected by the Co-Tenants, including separate valuations for each of the Shared Facilities, Additional Facilities, and the distribution of assets shall be made in accordance with such valuation.
      12.6 Rights of Reverter. 
            (a) The Quitclaim Deed and any Bill of Sale or Partial Assignment of Easements from Hardin Solar to Hardin Solar II shall contain a right of reverter in favor of Hardin Solar (the "HSII Reverter") providing that Hardin Solar II's Undivided Interests in the Shared Premises, Shared Facilities, Additional Premises, Additional Facilities and Easements, as applicable, will (subject to any landowner, FERC or other regulatory approvals required for such transfer which Hardin Solar II will use commercially reasonable efforts to obtain) revert back to Hardin Solar in the event that (i) the Regulatory Approval Date as applicable to Hardin Solar II does not occur on or before the date that is ten (10) years from the Contract Date, or (ii) following commencement of operations of its Project, Hardin Solar II is deemed an Abandoned Project (defined below).  As used herein, an "Abandoned Project" is a Project that (a) fails to operate for a period in excess of two (2) years for reasons other than Force Majeure,  or abandons the use or operation of its Project without the intention to resume the use or operation, and (b) defaults on its obligations pursuant to this Agreement (including any payment obligations) and fails to cure such default within the applicable cure periods set forth herein.  
            (b) The Quitclaim Deed and any Bill of Sale or Partial Assignment of Easements from Hardin Solar to Hardin Solar III shall contain a right of reverter in favor of Hardin Solar (the "HSIII Reverter") providing that Hardin Solar III's Undivided Interests in the Shared Premises, Shared Facilities, Additional Premises, Additional Facilities and Easements, as applicable, will (subject to any landowner, FERC or other regulatory approvals required for such transfer which Hardin Solar III will use commercially reasonable efforts to obtain) revert back to Hardin Solar in the event that (i) the Regulatory Approval Date as applicable to Hardin Solar III does not occur on or before the date that is ten (10) years from the Contract Date, or (ii) following commencement of operations of its Project, Hardin Solar III is deemed an Abandoned Project.  
Article 13 
DEFAULT AND REMEDIES
      13.1 Co-Tenant Events of Default.
      The following shall each constitute a default by a Co-Tenant under this Agreement (a "Co-Tenant Event of Default"):
            (a) failure by a Co-Tenant to pay in full any amount due and payable hereunder when due, or any monetary judgment awarded by a court of competent jurisdiction which is not being appealed within [REDACTED] days of such judgment, where such failure is not cured within [REDACTED] days after written notice of such failure; provided, however, that such period shall be extended for so long as the defaulting Co-Tenant is disputing in good faith such amount pursuant to the procedures set forth in Section 16.7;
            (b) a Co-Tenant Bankruptcy Event;
            (c) a breach, or the cause of a breach, by such Co-Tenant of an Easement and a failure to cure such breach within the cure period permitted by such Easement less, in each instance, the following reduced time periods: (a) [REDACTED] days in the event of any monetary default; and (b) [REDACTED] days in the event of any non-monetary default; provided that promptly after receiving written notice of any breach of an Easement, the defaulting Co-Tenant shall provide a copy thereof to the other Co-Tenants and the Co-Tenancy Manager;
            (d) levy, seizure, assignment or sale of a substantial part of the property of a Co-Tenant for or by any creditor (other than the Secured Parties) or Governmental Authority that materially affects the rights of any other Co-Tenants under this Agreement or the Co-Tenancy Manager's ability to perform under this Agreement, but, for the avoidance of doubt, specifically excluding any assignment for, or foreclosures, sales, assignments or transfers in lieu of foreclosure, exercise of other remedies or any other actions undertaken by, a Co-Tenant's Secured Parties;
            (e) a breach of a representation or warranty provided by a Co-Tenant under this Agreement, where such breach is not cured within [REDACTED] days after written notice thereof from one or more non-defaulting Co-Tenants; provided, that if such breach cannot reasonably be cured within the [REDACTED] day period, and if such defaulting Co-Tenant has commenced and is diligently pursuing such cure and provides the other Co-Tenants with adequate assurance of due performance, the cure period shall be extended to not more [REDACTED] days after the written notice of default, as shall be necessary for such defaulting Co-Tenant to cure the breach with all due diligence and dispatch, or such lesser period of time as may be provided in any Financing Documents, Investment Documents or Project Agreements to which the defaulting Co-Tenant is a party [REDACTED];
            (f) a breach by a Co-Tenant in observing or performing any of its obligations set forth in this Agreement, other than those described in Section 13.1(a) through 13.1(e) above; provided such breach is not cured within [REDACTED] days after written notice thereof from one or more non-defaulting Co-Tenants; and provided further that if such breach cannot reasonably be cured within the [REDACTED] day period, and if such defaulting Co-Tenant has commenced and is diligently pursuing such cure and provides the other Co-Tenants with adequate assurance of due performance, the cure period shall be extended to not more than [REDACTED] days after the written notice of default, as shall be necessary for such defaulting Co-Tenant to cure the breach with all due diligence and dispatch, or such lesser period of time as may be provided in any Financing Documents, Investment Documents or Project Agreements to which the defaulting Co-Tenant is a party [REDACTED];
            (g) a breach of or default by a Co-Tenant of an obligation in an Interconnection Agreement (as applicable) or a Power Purchase Agreement to which such defaulting Co-Tenant is a party or by which it is bound that affects the rights of any of the other Co-Tenants under this Agreement or the Co-Tenancy Manager's ability to perform under this Agreement, and a failure by such defaulting Co-Tenant to cure such breach within the time period provided by such agreements, as applicable; or
            (h) a breach of or default by a Co-Tenant of an obligation in its Financing Document, Investment Document or Project Agreement (other than an Interconnection Agreement or a Power Purchase Agreement) to which such defaulting Co-Tenant is a party or by which it is bound that affects the rights of any of the other Co-Tenants under this Agreement or the Co-Tenancy Manager's ability to perform under this Agreement, and a failure by such defaulting Co-Tenant to cure such breach within the time period provided by such agreements, as applicable.
      13.2 Co-Tenancy Manager Events of Default.
      The following shall each constitute a default by the Co-Tenancy Manager under this Agreement (a "Co-Tenancy Manager Event of Default"):
            (a) failure to pay in full any amount due and payable hereunder when due, where such failure is not cured within [REDACTED] days after written notice of such failure; provided, however, that such period shall be extended for so long as the defaulting Co-Tenant is disputing in good faith such amount pursuant to the procedures set forth in Section 16.7;
            (b) a Co-Tenancy Manager Bankruptcy Event;
            (c) a breach, or the cause of a breach, of an Easement by a Co-Tenancy Manager and a failure to cure such breach within the cure period permitted by such Easement less, in each instance, the following reduced time periods: (a) [REDACTED] days in the event of any monetary default; and (b) [REDACTED] days in the event of any non-monetary default; provided that promptly after receiving written notice of any breach of an Easement, the Co-Tenancy Manager shall provide a copy thereof to the Co-Tenants;
            (d) levy, seizure, assignment or sale of a substantial part of the property of the Co-Tenancy Manager for or by any creditor or Governmental Authority that materially affects the rights of any of the Co-Tenants under this Agreement or the Co-Tenancy Manager's ability to perform under this Agreement;
            (e) a breach of a representation or warranty provided by the Co-Tenancy Manager under this Agreement, where such breach is not cured within [REDACTED] days after written notice thereof from one or more non-defaulting Co-Tenants; provided, that if such breach cannot reasonably be cured within the [REDACTED] day period, and if the Co-Tenancy Manager has commenced and is diligently pursuing such cure and provides the other Co-Tenants with adequate assurance of due performance, the cure period shall be extended to not more than [REDACTED] days after the written notice of default, as shall be necessary to cure the breach with all due diligence and dispatch [REDACTED]; or
            (f) a breach by the Co-Tenancy Manager in observing or performing any of its obligations set forth in this Agreement, other than those described in clause (a) through (e) above; provided such breach is not cured within [REDACTED] days after written notice thereof from one or more of the non-defaulting Co-Tenants; and provided further that if such breach cannot reasonably be cured within the [REDACTED] day period, and if such Co-Tenant has commenced and is diligently pursuing such cure and provides the other Co-Tenants with adequate assurance of due performance, the cure period shall be extended to not more than [REDACTED] days after the written notice of default, as shall be necessary for to cure the breach with all due diligence and dispatch [REDACTED].
      13.3 Remedies.
            (a) If a Co-Tenant Event of Default has occurred and is continuing, the non-defaulting Co-Tenants jointly and severally or the Co-Tenancy Manager, on behalf of the non-defaulting Co-Tenants (upon written direction from the non-defaulting Co-Tenants and subject to their direction and control), shall have the following remedies:
                  (i) To bring an action for an injunction or to specifically enforce the provisions of this Agreement (the Co-Tenants agree that if any Co-Tenant breaches this Agreement, the injury to the other Co-Tenants will be irreparable and money damages alone will not be an adequate remedy);
                  (ii) To receive amounts payable under the indemnities contained herein;
                  (iii) In its sole and absolute discretion, to cure the Co-Tenant Event of Default by making or tendering the required payment or performance; provided that the curing Co-Tenant shall provide at least [REDACTED] days prior written notice to the defaulting Co-Tenant that it is going to undertake such cure and any such reasonable amounts.  Any such amounts required to cure such Co-Tenant Event of Default that are paid by the non-defaulting Co-Tenant (or the Co-Tenancy Manager on behalf of the non-defaulting Co-Tenants), including all reasonable attorneys' fees and costs, shall be treated as a loan to the defaulting Co-Tenant, which loan shall accrue interest until repaid in full at the Default Interest Rate, and the non-defaulting Co-Tenant (or the Co-Tenancy Manager on behalf of the non-defaulting Co-Tenant) shall be entitled to set off such loan amounts against any amount owed to the defaulting Co-Tenant under this Agreement;
                  (iv) Each Co-Tenant (a "Defaulting Co-Tenant") will promptly reimburse Co-Tenancy Manager and the other Co-Tenants, as the case may be, if Co-Tenancy Manager or any other Co-Tenants make any payments on behalf of the Defaulting Co-Tenant arising out of, related to or in connection with any breach of any obligation of or other action or inaction by the Defaulting Co-Tenant, including to any Governmental Authority pursuant to any Applicable Law or under or with respect to any Interconnection Agreement or similar agreement.
                  (v) Solely in the case of a Co-Tenant Event of Default set forth in Sections 13.1(a), (d) or (g) (but in the case of (g) only if such Co-Tenant Event of Default is material in nature), disconnection of the defaulting Co-Tenant's Project from the Shared Facilities to the extent permitted under and in accordance with Section 8.5; and in the case of a Co-Tenant Event of Default set forth in Section 13.1(a), provided that the Co-Tenant is provided an additional [REDACTED] days to cure such Co-Tenant Event of Default prior to such disconnection; provided, however, that the defaulting Co-Tenant's Project shall be permitted to reconnect promptly, and the Co-Tenancy Manager shall promptly take all actions necessary for such reconnection, when and if (A) the Co-Tenant Event of Default is cured, and (B) any and all damages suffered and incurred by the non-defaulting Co-Tenants have been compensated or agreed to be compensated within [REDACTED] days with adequate assurances of payment satisfactory to the non-defaulting Co-Tenants, excluding, however, any revenue losses incurred or suffered by such non-defaulting Co-Tenants during the period of disconnection of the Shared Facilities, Additional Facilities or Separate Facilities (which such Co-Tenants shall nonetheless be entitled to pursuant to Section 8.5);
                  (vi) If a defaulting Co-Tenant's Project is disconnected from the Shared Facilities or Additional Facilities pursuant to Section 13.3(a)(v) and remains disconnected due to a failure by the defaulting Co-Tenant to cure the default that led the non-defaulting Co-Tenant to demand disconnection for a period of [REDACTED] days, the non-defaulting Co-Tenants may, but only by unanimous agreement, require that the defaulting Co-Tenant surrender all or any portion of the Shared Facilities or Additional Facilities pursuant to Section 12.2; and
                  (vii) To exercise any and all other rights and remedies which any one or more of the Co-Tenants might otherwise have at law or in equity.
            (b) If a Co-Tenancy Manager Event of Default has occurred and is continuing, any non-defaulting Co-Tenant shall have the following remedies:
                  (i) To remove the Co-Tenancy Manager for cause pursuant to the procedures set forth in Section 9.6;
                  (ii) In its sole and absolute discretion, to cure the Co-Tenancy Manager Event of Default by making or tendering the required payment or performance; provided that any such reasonable amounts paid by the non-defaulting Co-Tenant, including all reasonable attorneys' fees and costs, shall be treated as a loan to the Co-Tenancy Manager, which loan shall accrue interest until repaid in full at the Default Interest Rate;
                  (iii) To bring an action to specifically enforce the provisions of this Agreement; and
                  (iv) To exercise any and all other rights and remedies which any one or more of the Co-Tenants might otherwise have at law or in equity.
Article 14 
REPRESENTATIONS AND WARRANTIES
      14.1 Representations and Warranties of Co-Tenants and Co-Tenancy Manager.  As of the Contract Date, each Co-Tenant represents and warrants for the benefit of the other Co-Tenants and the Co-Tenancy Manager, and the Co-Tenancy Manager represents and warrants for the benefit of the Co-Tenants as follows:
            (a) It is a limited liability company or corporation, duly organized and existing in good standing under the laws of the state of its formation or incorporation, qualified to do business in the State of Ohio, and has the requisite power and authority to enter into this Agreement.
            (b) This Agreement has been duly authorized and constitutes the legal, valid and binding obligation of it, enforceable against it in accordance with its terms; and the execution and delivery of this Agreement and, except as otherwise set forth herein, performance of its obligations hereunder will not require the approval of any Governmental Authority and will not contravene, conflict with or result in the breach or violation of any document to which it is bound or in any law, rule or regulation.
            (c) Except as otherwise set forth herein, it possesses all requisite power and authority and required permits, consents and licenses (if any) to perform this Agreement and to carry out the transactions contemplated herein.
            (d) No suit, action or arbitration, or legal, administrative or other proceeding is pending or, to its knowledge, threatened against it that would affect the validity or enforceability of this Agreement or the ability of it to fulfill its obligations and commitments hereunder.
Article 15 
INDEMNITY; LIMITATIONS OF LIABILITY
      15.1 Cross Indemnity of Co-Tenants.
            (a) Except as otherwise provided herein, each Co-Tenant, for and on behalf of itself and its agents, successors and assigns, shall defend, indemnify and hold harmless each of the other Co-Tenants and their respective directors, officers, partners, members, Affiliates (except for the Co-Tenancy Manager), contractors, employees, agents, successors and assigns, from and against any and all losses, liabilities, claims and damages (the "Losses") suffered or incurred to the extent they (i) are a result of the negligent acts or omissions, bad faith, or recklessness or willful misconduct of the indemnifying Co-Tenant or its directors, officers, partners, members, Affiliates, employees, agents, successors and assigns, in connection with the performance of its duties and obligations hereunder, (ii) are a result of any breach of or default by the indemnifying Co-Tenant hereunder beyond applicable cure periods, or (iii) all Losses of any character or nature whatsoever, regardless of by whom asserted or imposed, and of every conceivable kind, character and nature whatsoever claimed by or on behalf of any Person, or any property damage incurred or suffered as a result of such Co-Tenant, or Co-Tenants as the case may be, operation, maintenance, construction, installation, use, repair or removal of, or entry on, the Shared Premises and Facilities, Replacement Components, Additional Premises, Additional Facilities, and Separate Projects (including the generality of the foregoing, liability for any Losses arising from the failure of the Separate Facilities to be operated, maintained, constructed, installed, used, repaired or removed in compliance with Applicable Law or Permits (including any Applicable Law and Permits protecting human health or the environment now in effect or which may hereafter come into effect)), except to the extent caused by the indemnified Co-Tenant's contributory, comparative or gross negligence or bad faith, or recklessness or willful misconduct in which case the indemnifying Co-Tenant's indemnity shall be limited to the extent of its contributory or comparative fault.
            (b) Notwithstanding the provisions of Section 15.1(a) above or any provisions in this Agreement to the contrary, a Co-Tenant's sole and exclusive remedy for losses in revenues and other Consequential Damages due to the inability to generate, transmit or sell electricity during a period of disconnection of any Shared Facilities or Additional Facilities that arises as a result of the connection, repair or replacement of any Shared Facilities, Additional Facilities or Separate Facilities including as a result of the negligence of a Co-Tenant, Co-Tenancy Manager, or agent or employee of a Co-Tenant, Co-Tenancy Manager or any contractor or subcontractor of any tier, shall be such Co-Tenant's Net Revenue Losses; provided, that for the avoidance of doubt, any direct damages including property damages shall be the obligation of the Co-Tenant causing such damage pursuant to Section 15.1(a).  The Co-Tenants agree the actual Consequential Damages arising due to such disconnection would be difficult to compute and the methodology for determining such damages is a good faith estimate of the calculations utilized to determine the actual Consequential Damages that would be suffered.
Article 16 
GENERAL PROVISIONS
      16.1 Notices.  Any notice required or authorized to be given hereunder or any other communications between the Parties shall be in writing (unless otherwise provided) and shall be served personally or by reputable express courier service or by email addressed to the relevant Party at the address stated below or at any other address notified by that Party to the others as its address for service.  Any notice so given personally shall be deemed to have been served on delivery, any notice so given by express courier service shall be deemed to have been served [REDACTED] days after the same shall have been delivered to the relevant courier, and any notice so given by email shall be deemed to have been served on dispatch; provided that such email is transmitted during "business hours" in the primary recipient's location (which, for purposes of this Section 16.1, shall mean any time before 5:00 p.m. on a day that is not a Saturday, Sunday or legal holiday in the state where such recipient is located) and otherwise shall be deemed to have been served upon the commencement of the next succeeding "business hours" in the recipient's location.  As proof of such service it shall be sufficient to produce a receipt showing personal service, the receipt of a reputable courier company showing the correct address of the addressee or a "delivery confirmed" of the sender's email showing the correct email address of the Party on whom notice is served.
      The Parties' addresses for service are as follows, although each Party may change its address for service by written notice to the other Parties given as provided in this Section 16.1:
If to Hardin Solar:		Hardin Solar Energy LLC
				c/o Dominion Solar Projects VII, Inc.
      120 Tredegar Street
      Richmond, VA 23219
      Attn:  	Emil Avram, Vice President - Business Development
      Email: 	emil.avram@dominionenergy.com
      
      and
      
      Hardin Solar Energy LLC
				c/o Dominion Solar Projects VII, Inc.
      600 East Canal Street, 15th Floor North
      Richmond, VA 23219
      Attn:  Director - Renewable Energy Operations 
      
      and
      
      Dominion Energy Services, Inc.
      Legal Department
      120 Tredegar Street
      Richmond, VA 23219
      Attn:  Noopur N. Garg - Senior Counsel - Securities, M&amp;A
      and Project Development
      Email: Noopur.n.garg@dominionenergy.com
      
      with a copy to:
      
      Troutman Pepper Hamilton Sanders LLP
      1001 Haxall Point
      Richmond, VA 23219
      Attn:  	R. Mason Bayler, Jr.
      Email: 	mason.bayler@troutman.com

If to Hardin Solar II:		Hardin Solar Energy II LLC
1 S. Wacker Drive, Suite 1800
Chicago, Illinois 60606
With cc to attention of: General Counsel
Email: generalcounsel@invenergyllc.com
If to Hardin Solar III:		Hardin Solar Energy III LLC
1 S. Wacker Drive, Suite 1800
Chicago, Illinois 60606
With cc to attention of: General Counsel
Email: generalcounsel@invenergyllc.com
 If to Co-Tenancy Manager:	See Hardin Solar Energy LLC contact information above

      16.2 Survival of Rights.  The Easements, the rights, interests and obligations thereunder and each Co-Tenant's interests, shall be held, conveyed, hypothecated, encumbered, transferred and used subject to the covenants, terms and provisions set forth in this Agreement, which shall be binding upon and inure to the benefit of the Co-Tenants and any other person and entity having any interest therein during their ownership thereof, and their respective permitted grantees, permitted transferees, heirs, legatees, executors, administrators, successors and permitted assigns, and all persons claiming under them.  To the maximum extent permitted by law, the covenants set forth in the exhibits to this Agreement shall be deemed to run with the Easements, the rights, interests and obligations thereunder, each Co-Tenant's interests and each portion thereof and interest therein, as equitable servitudes.
      16.3 Amendment.  Any changes to this Agreement shall require the written approval of all of the Parties and shall be subject to FERC approval pursuant to Section 16.4 below, and all other required approvals of any Governmental Authority.
      16.4 FERC Approval and Notice. 
            (a) The Parties acknowledge and agree that: (i) this Agreement will be publicly available through its filing with FERC for acceptance under Section 205 of the FPA; (ii) after this Agreement has been filed at FERC under Section 205 of the FPA, any subsequent amendments to this Agreement must be accepted by FERC, and the effectiveness of such amendments will be contingent on such FERC acceptance; (iii) changes in ownership contemplated by this Agreement may be subject to prior FERC approval or may require notice to FERC in accordance with FERC regulations;  (iv) disconnections or terminations contemplated by this Agreement may require prior FERC approval; (v) it is the obligation of each Co-Tenant to obtain any necessary FERC acceptances or approvals with respect to such Co-Tenant's rights or obligations under this Agreement; and (vi) each Operational Co-Tenant will reasonably cooperate (at Joining Co-Tenant's cost and expense) with any Joining Co-Tenant in connection with such Joining Co-Tenant obtaining the FERC approvals applicable to such Joining Co-Tenant's Regulatory Approval Date, and to the extent that such Operational Co-Tenant may need its own FERC approval so that a Joining Co-Tenant can achieve its Regulatory Approval Date, such Operational Co-Tenant shall make reasonable efforts to timely obtain such approval.  Subject to the terms and conditions set forth herein, the Parties agree to execute and deliver all documents reasonably necessary for this Agreement to comply with FERC requirements; provided, however, that for purposes of clarity no Party shall be obligated to execute any documents which have or could reasonably be expected to have a material adverse effect on such Party's or its rights and benefits under this Agreement.
            (b) [REDACTED], Hardin Solar shall file this Agreement with FERC requesting that FERC accept the Agreement as its rate schedule under Section 205 of the FPA (the "Hardin Solar Initial Filing Date").
            (c) After the Operative Date but at the appropriate time prior to the time that a Joining Co-Tenant acquires its Undivided Interests in Shared Facilities, such Joining Co-Tenant shall file this Agreement with FERC requesting that FERC accept the Agreement at its rate schedule under Section 205 of the FPA ("Joining Co-Tenant Initial Filing Date").
            (d) If a Joining Co-Tenant determines that the then-current FERC regulations require it to provide notice to FERC after such Joining Co-Tenant's acquisition of an Undivided Interest in the Shared Facilities in accordance with Section 2.1(a), such Joining Co-Tenant shall be responsible for the preparation and submission of such notice in accordance with FERC's requirements.  Each Operational Co-Tenant will reasonably cooperate (at Joining Co-Tenant's cost and expense) with any Joining Co-Tenant in connection with the preparation and submission.
      16.5 Construction.  
            (a) The language in all parts of this Agreement shall be in all cases construed simply according to its fair meaning and not strictly for or against any of the Parties hereto.
            (b) Any reference in this Agreement to another contract or document shall be construed as a reference to that other contract or document as the same may have been, or may from time to time be, varied, amended, supplemented, substituted, novated, assigned or otherwise transferred.
            (c) Any reference in this Agreement to "this Agreement," "herein," "hereof" or "hereunder" shall be deemed to be a reference to this Agreement as a whole and not limited to the particular Article, Section, Exhibit, Schedule or provision in which the relevant reference appears and to this Agreement as varied, amended, supplemented, substituted, novated, assigned or otherwise transferred from time to time.
            (d) References to any Party shall, where appropriate, include any successors and permitted assigns of such Party.
            (e) References to the term "includes" or "including" shall mean "includes, without limitation" or "including, without limitation."
            (f) Words importing the singular include the plural and vice versa and the masculine, feminine and neuter genders include all genders.
            (g) If the time for performing an obligation under this Agreement occurs or expires on a day that is not a business day, the time for performance of such obligation shall be extended until the next succeeding business day.
            (h) References to any statute, code or statutory provision are to be construed as a reference to the same as it may have been, or may from time to time be, amended, modified or reenacted, and include references to all bylaws, instruments, orders and regulations for the time being made thereunder or deriving validity therefrom unless the context otherwise requires.
            (i) References to any amount of money shall mean a reference to the amount in United States Dollars.
            (j) Whenever a Person is to determine that something is "satisfactory to," "acceptable to," or "to the satisfaction of" such Person, the determination may not be made in bad faith.  
      16.6 Agreement in Counterparts.  This Agreement may be executed in multiple counterparts, each and all of which shall be deemed an original Agreement, and all of which shall constitute one Agreement to be effective as of the day and year first above written.  For purposes of recording this Agreement, the signature page and the acknowledgement pages pertaining thereto may be detached from a counterpart, when executed, and attached to another counterpart, which other counterpart may thereafter be recorded as this Agreement.
      16.7 Disputes.  Except as otherwise provided in this Agreement, in the event a dispute arises between or among the Co-Tenants regarding the application or interpretation of any provision of this Agreement, the Co-Tenant alleging the dispute shall promptly notify the other Co-Tenant or Co-Tenants of the dispute in writing.  If the Co-Tenants shall have failed to resolve the dispute within [REDACTED] days after delivery of such written notice, each Co-Tenant shall, within [REDACTED] days of receipt of a written demand from the other Co-Tenant to do so, direct its Co-Tenant Representative or the Co-Tenancy Manager Representative to confer in good faith within [REDACTED] days with the other Co-Tenant Representatives or Co-Tenancy Manager Representative to resolve the dispute.  Should the Co-Tenants be unable to resolve the dispute to their mutual satisfaction within [REDACTED] days, each Co-Tenant shall have the right to pursue the resolution of such dispute in accordance with the provisions Agreement in a court of competent jurisdiction in accordance with Section 16.8.  Unless stated otherwise herein, all disputes shall be resolved in accordance with the dispute resolution procedures set forth in this Section 16.7. Notwithstanding the foregoing, (a) the parties may at any time seek injunctive relief from a court of competent jurisdiction in accordance with Section 16.8, and (b) nothing herein shall prevent a party from defending or pursuing any claim in a court or other proceeding against a third party that has been initiated by such third party.  
      16.8 Governing Law.  
            (a) THIS AGREEMENT SHALL BE GOVERNED IN ALL RESPECTS BY THE LAWS OF THE STATE OF DELAWARE WITHOUT GIVING EFFECT TO THE CONFLICTS OF LAWS PRINCIPLES THEREOF.  All judicial actions or proceedings brought against any Party with respect to this Agreement, the Buyer Ancillary Agreements and the Seller Ancillary Agreements, shall be brought in the Delaware Court of Chancery and any state appellate court therefrom within the State of Delaware (or, only if the Delaware Court of Chancery declines to accept jurisdiction over a particular matter, any state or federal court within the State of Delaware), and each Party hereby irrevocably and unconditionally agrees that any such legal action or proceeding may be heard and determined in such state court or such federal court.  Each Party agrees that a final judgment in any such legal action or proceeding may be enforced in any other jurisdiction by suit on the judgment or in any other manner provided by law.  Each Party irrevocably waives any objection (including any objection based upon the grounds of "forum non conveniens") that it now or hereafter may have to the bringing or prosecution of any such action or proceeding with respect to this Agreement or the documents and instruments contemplated hereby in the State of Delaware.  Each Party hereby irrevocably consents to the service of any and all process in any action or proceeding by mailing a copy of such process to such Party at the address for such Party set forth in Section 16.1.
            (b) EACH PARTY ACKNOWLEDGES AND AGREES THAT ANY CONTROVERSY WHICH MAY ARISE UNDER THIS AGREEMENT OR THE TRANSACTIONS IS LIKELY TO INVOLVE COMPLICATED AND DIFFICULT ISSUES, AND THEREFORE EACH PARTY HEREBY IRREVOCABLY AND UNCONDITIONALLY WAIVES ANY RIGHT A PARTY MAY HAVE TO A TRIAL BY JURY IN RESPECT OF ANY LITIGATION RESULTING FROM, ARISING OUT OF OR RELATING TO THIS AGREEMENT OR THE TRANSACTIONS.  EACH PARTY CERTIFIES AND ACKNOWLEDGES THAT (a) NO REPRESENTATIVE, AGENT OR ATTORNEY OF ANY OTHER PARTY HAS REPRESENTED, EXPRESSLY OR OTHERWISE, THAT SUCH OTHER PARTY WOULD NOT, IN THE EVENT OF LITIGATION, SEEK TO ENFORCE THE FOREGOING WAIVER, (b) EACH PARTY UNDERSTANDS AND HAS CONSIDERED THE IMPLICATIONS OF THIS WAIVER, (c) EACH PARTY MAKES THIS WAIVER KNOWINGLY, VOLUNTARILY AND UNCONDITIONALLY, AND (d) EACH PARTY HAS BEEN INDUCED TO ENTER INTO THIS AGREEMENT BY, AMONG OTHER THINGS, THE MUTUAL WAIVERS AND CERTIFICATIONS IN THIS SECTION 16.8(b).
      16.9 Time.  Time is of the essence with respect to this Agreement.
      16.10 Additional Documents; Cooperation.  Each Party, upon the request and at the expense of the Co-Tenancy Manager or another Party, agrees to perform any further acts and execute and deliver any documents which may be reasonably necessary to carry out the provisions of this Agreement, including providing acknowledgement before a notary public of any signature heretofore or hereafter made by a Party.  In addition, the Parties shall act in good faith and with due consideration to the operation of each Co-Tenant's Project to support and cooperate with each other in the conduct of their respective obligations hereunder, including the use, improvement, administration, maintenance and operation of the Shared Premises and Facilities, and Separate Facilities, and in otherwise giving effect to the purpose and intent of this Agreement, and including any Party's efforts to obtain from any Governmental Authority or any other person or entity any environmental impact review, permit entitlement, approval, authorization of other rights necessary or convenient in connection with the Shared Premises and Facilities; and the other Co-Tenants shall, without demanding additional consideration therefore other than reimbursement of reasonable engineering costs, administrative charges imposed by public entities, and by any relevant transmission provider, reasonable attorney's fees and consulting fees actually incurred, execute, and, if appropriate, cause to be acknowledged and recorded, any map, application, document or instrument that is reasonably requested by a Co-Tenant in connection therewith, and shall return the same (as executed) to the Co-Tenant within [REDACTED] days after the Co-Tenant's receipt thereof.
      16.11 Validity.  Should any portion of this Agreement be declared invalid and unenforceable, then such portion shall be deemed to be severable from this Agreement and shall not affect the remainder hereof; and the Parties shall negotiate in good faith to replace such invalid and unenforceable provision.
      16.12 Perpetuities Savings Clause.  If any right of Party provided for in this Agreement would, in the absence of the limitation imposed by this sentence, be invalid or unenforceable as being in violation of the rule against perpetuities or any other rule of law relating to the vesting of an interest in or the suspension of the power of alienation of property, then such right or option shall be exercisable only during the period which shall end twenty-one years less one day after the date of death of the last survivor of the descendants living on the date of this Agreement of Joseph P. Kennedy, father of President John F. Kennedy, but if any such rights, privileges and options shall be or become valid under Applicable Law for a period subsequent to the twenty-first anniversary of the death of the last such survivor (or, without limiting the generality of the foregoing, if legislation shall become effective providing for the validity or permitting the effective grant of such rights, privileges and options for a period in gross, exceeding the period for which such rights, privileges and options are hereinabove stated to extend and be valid), then such rights, privileges or options shall not terminate as aforesaid but shall extend to and continue in effect, but only if such non-termination and extension shall then be valid under Applicable Law until such time as the same shall under Applicable Law cease to be valid.
      16.13 No Third Party Beneficiaries.  This Agreement is entered into for the sole benefit of the Parties, and except as specifically provided herein, no other Person shall be a direct or indirect beneficiary of, or shall have any direct or indirect cause of action or claim in connection with, this Agreement.
      16.14 Attorneys' Fees.  If any Party brings any action or proceeding or initiates arbitration for the enforcement, protection or establishment of any right or remedy under this Agreement, or for the interpretation of this Agreement, the prevailing Party shall be entitled to recover from the non-prevailing Party its reasonable costs and expenses, including reasonable attorneys' fees and expenses, in connection with such action or proceeding.  To the extent this Agreement requires or another Co-Tenant requests the approval or review by the Co-Tenancy Manager or another Co-Tenant of actions proposed to be taken by another Co-Tenant, the requesting Co-Tenant shall pay for the reasonable fees and expenses (including reasonable attorneys' fees) of the Co-Tenancy Manager and the other Co-Tenants incurred in connection with review or approval.
      16.15 Waiver.  The failure of any Party at any time to require performance by any other Party of any provision hereof shall not affect in any way the full right to require such performance at any time thereafter, nor shall the waiver by any Party of any breach of any provision hereof be held or deemed to be a waiver of the provision itself.
      16.16 Titles.  The titles to the sections of this Agreement are for convenience only, are not a part of this Agreement, and shall have no effect upon the construction or interpretation of any provision of this Agreement.
      16.17 Exhibits.  All attached appendices, exhibits and schedules to which reference is made herein are hereby incorporated by this reference.
      16.18 Force Majeure.  Except for failure to pay monies required to be paid hereunder when due and payable, no Party shall be liable or deemed to be in default hereunder for when such Party's performance has been made delayed or made impossible due to an event of Force Majeure.
      16.19 Memorandum.  Concurrently with execution hereof, the applicable Parties hereto shall execute and deliver a Memorandum of Assignment, Co-Tenancy, and Shared Facilities Agreement attached hereto as Exhibit E, which Memorandum of Assignment, Co-Tenancy, and Shared Facilities Agreement shall promptly be recorded in the official records of Hardin County, Ohio.
      16.20 Condemnation.  If any of the Shared Premises, Shared Facilities, Additional Premises or Additional Facilities are condemned or taken by eminent domain, any costs incurred by the Co-Tenants in connection with such condemnation or eminent domain shall be paid for pursuant to such Co-Tenant's applicable ownership percentage of such Shared Premises, Shared Facilities, Additional Premises or Additional Facilities (provided that the Co-Tenants will have no obligation to restore any such Shared Premises, Shared Facilities, Additional Premises or Additional Facilities), the Co-Tenants shall seek an award jointly, and the proceeds shall be divided based on each Co-Tenant's ownership of the Shared Premises, Shared Facilities, Additional Premises or Additional Facilities so being taken, subject to reimbursement to in the manner described in Section 12.4(c).
      16.21 Confidential Information.
            (a) General.  During the Term, and for three (3) years after the termination of this Agreement, each Party shall hold in confidence any Confidential Information supplied by any other Party.  The term "Confidential Information" means with respect to each Party, all written or oral information of a proprietary, intellectual or similar nature, relating to such Party's business, projects, operations, activities or affairs, whether of a technical or financial nature or otherwise (including environmental assessment reports, financial information, business plans and proposals, ideas, concepts, trade secrets, know-how, processes, pricing of services or products, and other technical or business information, whether concerning this Agreement, such Party's respective businesses or otherwise) that has not been publicly disclosed and that the receiving Party acquires directly or indirectly from the disclosing Party.  The receiving Party may disclose Confidential Information to its Representatives for purposes of meeting its obligations and exercising its rights hereunder, provided that the Representatives shall be informed of the confidentiality obligations provided herein.  Each Party agrees to be responsible for any breach of the confidentiality obligations under this Agreement by its Representatives.  The term "Representatives" means with respect to a Party it and its Affiliates' equity owners, directors, managers, officers, employees, advisors, attorneys, and agents.  The receiving Party or its Affiliates may make necessary disclosures to its agents, Secured Parties and potential purchasers of a Project if such third parties are under an obligation to receive and hold such Confidential Information in confidence.
            (b) Exceptions.  The provisions of this Section 16.21 do not apply to information within one or more of the following categories:
                  (i) Public Domain.  Confidential Information that was in the public domain prior to the receiving Party's receipt or that subsequently becomes part of the public domain by publication or otherwise, except by the receiving Party's wrongful act, or
                  (ii) Prior Receipt.  Confidential Information that the receiving Party can demonstrate was in its possession prior to receipt thereof from the disclosing Party, or
                  (iii) Third Party Delivery.  Confidential Information received from a third party having no obligation of secrecy with respect thereto.
            (c) Required Disclosure.  Any receiving Party required by a Governmental Authority, law, rule, regulation, listing requirement, subpoena or order, or in the course of administrative or judicial proceedings, to disclose Confidential Information that is otherwise required to be maintained in confidence pursuant to this Section 16.21, may make disclosure notwithstanding the provisions of this Section 16.21.  Prior to doing so, the receiving Party immediately upon learning of the requirement, shall notify the disclosing Party of the requirement and cooperate to the maximum extent practicable to minimize the disclosure of Confidential Information.  Any receiving Party disclosing Confidential Information pursuant to this Section 16.21 shall use reasonable efforts, at the disclosing Party's cost, to obtain proprietary or confidential treatment of Confidential Information by the third party to whom the information will be disclosed, and to the extent such remedies are available, shall use reasonable efforts to seek protective orders limiting the dissemination and use of Confidential Information.  Nothing in this Agreement is intended to prevent the disclosing Party from appearing in any proceedings and objecting to the disclosure.
      16.22 Limitations of Liability.  THE PARTIES HEREBY AGREE THAT, EXCEPT FOR NET REVENUE LOSSES, LIQUIDATED DAMAGES OR INDEMNIFICATION OBLIGATION CONTAINED IN THIS AGREEMENT, INCLUDING PURSUANT TO ARTICLE 9 AND ARTICLE 15, AND AS OTHERWISE EXPRESSLY SET FORTH HEREIN, IN NO EVENT WILL ANY PARTY (NOR ITS MEMBERS OR AFFILIATES, NOR ANY OF THEIR PRINCIPALS, OFFICERS, DIRECTORS, EMPLOYEES, AGENTS, SHAREHOLDERS, PARTNERS OR REPRESENTATIVES) BE LIABLE TO ANY OTHER PARTY TO THIS AGREEMENT FOR EXEMPLARY DAMAGES ARISING OUT OF OR RELATING TO THIS AGREEMENT, EVEN IF A PARTY HAS BEEN NOTIFIED OF THE POSSIBILITY OF SUCH DAMAGES AND NOTWITHSTANDING THE FAILURE OF ESSENTIAL PURPOSE OF ANY LIMITED WARRANTY CONTAINED HEREIN.  THE PARTIES FURTHER AGREE THAT THE WAIVERS AND DISCLAIMERS OF LIABILITY, RELEASES FROM LIABILITY, AND LIMITATIONS ON LIABILITY EXPRESSED IN THIS AGREEMENT SHALL SURVIVE TERMINATION OR EXPIRATION OF THIS AGREEMENT, AND EXCEPT AS OTHERWISE EXPRESSLY SET FORTH IN THIS AGREEMENT SHALL APPLY WHETHER IN CONTRACT, EQUITY, TORT OR OTHERWISE, EVEN IN THE EVENT OF THE FAULT, NEGLIGENCE, INCLUDING GROSS NEGLIGENCE, STRICT LIABILITY, OR BREACH OF THE PARTY RELEASED OR WHOSE LIABILITIES ARE LIMITED, AND SHALL EXTEND TO THE MEMBERS, REPRESENTATIVES, PARTNERS, PRINCIPALS, SHAREHOLDERS, DIRECTORS, OFFICERS, EMPLOYEES AND AGENTS OF EACH PARTY AND ITS AFFILIATES.  
[SIGNATURES ON NEXT PAGE]

      IN WITNESS WHEREOF, the Parties have executed this Agreement effective as of the date first above written.
HARDIN SOLAR ENERGY LLC
By:/s/ Emil Avram								
Name: Emil Avram								
Title: Vice President - Business Development				

HARDIN SOLAR ENERGY II LLC
By: /s/ Bryan Schueler							
Name:	Bryan Schueler							
Title:	Vice President								


HARDIN SOLAR ENERGY III LLC
By: /s/ Bryan Schueler							
Name:	Bryan Schueler							
Title:	Vice President								


HARDIN SOLAR ENERGY LLC, as Co-Tenancy Manager
By: /s/ Emil Avram								
Name: Emil Avram								
Title: Vice President - Business Development				

APPENDIX A
Attached to and made a part of the Assignment,
Co-Tenancy, and Shared Facilities Agreement
Definitions
      "Abandoned Project" shall have the meaning set forth in Section 12.6(a).
      "Additional Facilities" shall have the meaning set forth in Section 2.5(c).
      "Additional Facilities Operative Date" shall mean the day after all of the following conditions have been satisfied with respect to the relevant Co-Tenants owning an interest in the Additional Facilities:  (i) FERC allows amendments to this Agreement reflecting the addition of the Additional Facilities to become effective under Section 205 of the FPA; (ii) the relevant Co-Tenants determine that the Additional Facilities do not impact their previous qualification for a blanket open access transmission waiver under 18 C.F.R. ?35.28(d)(2) of the Commission's regulations that grant an FPA public utility that owns, controls or operates only Interconnection Customer's Interconnection Facilities a waiver from FERC's open access requirements in 18 C.F.R. ?35.28,18 C.F.R. Part 37 Part 18 C.F.R. Part 358 of FERC's open transmission rules, or if FERC previously issued an order granting the relevant Co-Tenants waivers from such open access transmission requirements customary for entities that own limited and discrete interconnection transmission facilities, FERC issues a new order continuing such waiver with respect to the Additional Facilities; (iii) if not already obtained, the relevant Co-Tenants have obtained exempt wholesale generator status pursuant to the Public Utility Holding Company Act of 2005 and FERC's implementing regulations with respect to the ownership of its Project and the co-tenancy arrangements contemplated herein; (iv) an order from FERC granting Section 203 approval if one or all of the relevant Co-Tenants determine that the then-current FERC regulations require them to acquire, or another relevant Co-Tenant determines that it needs, prior approval under Section 203 of the FPA for closing on the transfer co-tenancy ownership interests contemplated by this Agreement in the Additional Facilities; (v) if not already obtained, the relevant Co-Tenants have been granted market based rate authority under Section 205 of the FPA for the sale of power at wholesale and a waiver from FERC's accounting and related reporting requirements under 18 C.F.R. Parts 41, 101 and 141 (not including 141.14 and 141.15 ) of FERC's regulations and blanket authorization to issue securities or assume liabilities under Section 204 of the FPA.
      "Additional Premises" shall have the meaning set forth in Section 1.3(b)."Additional Premises or Facilities Pro-Rata Share" shall have the meaning set forth in Exhibit G.
      "Additional Premises Rights" shall have the meaning set forth in Section 1.3(a).
      "Affiliate" shall mean, when used with reference to a specified Person, any other Person that directly, or indirectly through one or more intermediaries, Controls, is Controlled by or is under common Control with the specified Person.  For purposes of this Agreement, (i) a Secured Party shall not be considered as an Affiliate of a Co-Tenant solely as a result of any transactions described in its Security Documents, and (ii) an indemnified Co-Tenant and an indemnifying Co-Tenant shall not be considered as an Affiliate of the other.
      "Agreement" shall mean the Assignment, Co-Tenancy and Shared Facilities Agreement to which this Appendix is attached, together with all other appendices and exhibits attached hereto.
      "Alternative Proposal" shall have the meaning set forth in Section 2.3(b).
      "Applicable Law" shall mean any statute, regulation, ordinance, rule, government approval, agreement, directive, guideline, policy, requirement, or other governmental restriction or any similar form of decision of or determination by, or any interpretation or administration of any of the foregoing by, any Governmental Authority having jurisdiction over the matter or Person in question, whether now or hereafter in effect applicable to this Agreement or to any of the Co-Tenants to this Agreement.
      "Approved Co-Tenancy O&amp;M Budget" shall have the meaning set forth in Section 6.8.
      "Assign" or an "Assignment" shall have the meaning set forth in Section 11.1.
      "Bankruptcy Event" means, with respect to any entity, such entity: (i) voluntarily files a petition or otherwise commences, authorizes or acquiesces in the commencement of a proceeding or cause of action under any bankruptcy, insolvency, reorganization or similar law, or has any such petition filed or commenced against it by its creditors and such petition is not dismissed within [REDACTED] days of the filing or commencement or an order for relief is entered; (ii) makes an assignment or any general arrangement for the benefit of creditors; (iii) otherwise becomes insolvent, however evidenced; (iv) has a liquidator, administrator, receiver, trustee, conservator or similar official appointed with respect to it or any substantial portion of its property or assets; or (v) is generally unable to pay its debts as they fall due.
      "Base Pro-Rata Share" shall have the meaning set forth in Exhibit G.
      "Bill of Sale - Shared Facilities" shall have the meaning set forth in Section 2.1(a).
      "Capital Costs" shall mean all capital costs incurred by a Co-Tenant with respect to any Shared Premises and Facilities or Easements, as the case may be, determined in accordance with GAAP.
      "Code" shall have the meaning set forth in Section 5.7.
      "Commencement Date" shall mean the date upon which the first Operational Co-Tenant notifies the Co-Tenancy Manager, with a copy to the other Co-Tenants, that such Operational Co-Tenant desires the Co-Tenancy Manager to commence performing services under this Agreement.
      "Commercial Operation Date" with respect to each Project shall mean the date that such Project achieves commercial operation under the applicable Project Agreements of the Co-Tenant that owns the Project. 
      "Consequential Damages" shall mean special, incidental, consequential and indirect loss or damage, including lost profits, loss of revenues, cost of capital, loss of goodwill, increased operating costs, delay costs or any other special, indirect or consequential damages of whatever nature.
      "Consumables" shall mean, collectively, all items consumed or needing regular periodic replacement (at least once every two years) during operation and maintenance of the Shared Facilities, including lubricants, office supplies, air filters, gaskets, hand tools, and all other consumable materials and parts required for the normal operation of the Shared Facilities.
      "Contract Date" shall have the meaning set forth in the Preamble to this Agreement.
      "Control," "Controlled by," and "under common Control with," with respect to any Person shall mean the possession, directly or indirectly, of the power to direct or cause the direction of the management and policies of such Person, whether through the ownership of voting securities or member or partnership interests, by contract or otherwise.
      "Co-Tenancy" shall have the meaning set forth in the Preamble to this Agreement.
      "Co-Tenancy Manager" shall mean Hardin Solar, its successors and permitted assigns, and its replacements.
      "Co-Tenancy Manager Event of Default" shall have the meaning set forth in Section 13.2.
      "Co-Tenancy Manager Representative" shall have the meaning set forth in Section 8.7.
      "Co-Tenancy O&amp;M Budget" shall have the meaning given in Section 6.8.
      "Co-Tenant" or "Co-Tenants" shall have the meaning set forth in the opening paragraph of the Agreement.
      "Co-Tenant Event of Default" shall have the meaning set forth in Section 13.1.
      "Co-Tenant Representative" shall have the meaning set forth in Section 7.4.
      "Damages" shall have the meaning set forth in Section 9.2. 
      "Default Interest Rate" shall mean the lesser of (i) Prime Rate plus 200 basis points, or (ii) the maximum rate allowed by law.
      "Easements" shall have the meaning set forth in the Recitals.
      "Easement Pro-Rata Share" shall have the meaning set forth in Exhibit G.
      "Emergency" shall mean any occurrence, in the reasonable judgment of Co-Tenancy Manager that requires action and (i) which constitutes a serious actual or potential hazard to the safety of Persons or property, (ii) may immediately and materially interfere with the safe, economical or environmentally sound operation of the Shared Facilities, (iii) would violate Applicable Law, in each case if not immediately rectified or (iv) would result in an unplanned outage due to mechanical failure or otherwise.
      "Exemplary Damages" shall mean any Consequential Damages or punitive damages.
      "Facility Management Agreements" shall mean the separate facility management agreements that each Co-Tenant enters into with respect to the operation, maintenance, repair and replacement of a Co-Tenant's Project including, with limitation such Co-Tenant's Separate Facilities.
      "Facility Manager" shall mean the entity acting in its capacity as manager of such Co-Tenant's Separate Facilities under any of the Facility Management Agreements.
      "FERC" shall mean the Federal Energy Regulatory Commission or any successor entity.
      "Financing Document" or "Financing Documents" shall mean those documents governing a Co-Tenant's relationship with a Secured Party.
      "Force Majeure" shall mean any act, casualty or occurrence, condition, event or circumstance of any kind or nature not reasonably within the excused Co-Tenant's control and which could not have been avoided by reasonable measures, including: (i) acts of God or the elements (including fire, earthquake, explosion, flood, epidemic or any other casualty or accident) or condemnation; (ii) strikes, lock outs or other labor disputes; (iii) the inability to secure labor or materials in the open market; and (iv) war, terrorism, sabotage, civil strife or other violence.  Force Majeure expressly does not include late delivery or breakage of equipment or materials or economic hardship except to the extent caused by a Force Majeure event.
      "FPA" shall mean the Federal Power Act.
      "GDPIPD" shall mean the implicit price deflator for the gross domestic product as computed and published by the U.S. Department of Commerce.  The figures to be used in this adjustment shall be those presented in the "Gross Domestic Product: Third Quarter 'Final' Press Release" typically released in December of each calendar year by the United States Department of Commerce, Bureau of Economic Analysis.  No subsequent revisions released by the United States Department of Commerce to those figures will be considered to affect or adjust the Inflation Adjustment Factor.
      "Governmental Authority" shall mean the government of any federal, state, municipal, or other political subdivision in which the Shared Facilities are located, and any other government or political subdivision thereof exercising jurisdiction over (i) the Shared Facilities, or (ii) with respect to their rights and obligations hereunder or under the Easements, any Co-Tenant; in each case including all agencies and instrumentalities of such governments and political subdivisions.
      "Hardin Solar" shall have the meaning set forth in the Preamble to this Agreement.
      "Hardin Solar II" shall have the meaning set forth in Preamble to this Agreement.
      "Hardin Solar III" shall have the meaning set forth in the Preamble to this Agreement.
      "Hardin Solar Interconnection Agreement" shall mean that certain Interconnection Service Agreement, dated as of April 22, 2020, by and among PJM Interconnection, L.L.C., Hardin Solar and AEP, and any amendments or successor agreements thereto.
      "Hardin Solar Initial Filing Date" has the meaning set forth in Section 16.4(b).
      "Hardin Solar II Interconnection Agreement" shall mean that certain Interconnection Service Agreement to be entered into by and among Hardin Solar II, PJM, and the Transmitting Utility, and any amendments or successor agreements thereto. 
      "Hardin Solar III Interconnection Agreement" shall mean that certain Interconnection Service Agreement to be entered into by and among Hardin Solar III, PJM, and the Transmitting Utility, and any amendments or successor agreements thereto.
      "Hardin Solar Permitted Capacity" shall have the meaning set forth in the Recitals.
      "Hardin Solar II Permitted Capacity" shall have the meaning set forth in the Recitals.
      "Hardin Solar III Permitted Capacity" shall have the meaning set forth in the Recitals.
      "Hardin Solar III PPA" shall mean that certain Power Purchase Agreement or other agreement for the sale of electricity generated by Hardin Solar III to be executed by and between Hardin Solar III and a third party power purchaser after the date hereof.
      "Implemented Project" shall mean Project that has achieved its Commercial Operation Date.
      "Indemnitee" shall have the meaning set forth in Section 9.4(a).
      "Indemnitor" shall have the meaning set forth in Section 9.4(a).
      "Hardin III Initial Payment" shall have the meaning set forth in Section 6.2(b). 
      "HSII Reverter" shall have the meaning set forth in Section 12.6(a).
      "HSIII Reverter" shall have the meaning set forth in Section 12.6(b).
      "Inflation Adjustment Factor" shall mean a fraction, the numerator of which is the GDPIPD for the prior calendar year and the denominator of which is the GDPIPD for the next prior calendar year; provided that such fraction shall be converted to decimal format to be carried to five (5) decimal places.
      "Interconnection Agreements" shall mean the Hardin Solar Interconnection Agreement, the Hardin Solar II Interconnection Agreement and the Hardin Solar III Interconnection Agreement.
      "Interconnection Facilities" shall mean those facilities of a Transmitting Utility at the Interconnection Points.
      "Interconnection Points" shall mean any of the points designated in the Interconnection Agreements for the interconnection of the applicable Transmitting Utility with the Shared Facilities used for delivering electricity to such Transmitting Utility.
       "Investment Document" or "Investment Documents" shall mean those documents governing a Co-Tenant's relationship with its investors.
      "Joining Co-Tenant" shall mean Hardin II and/or Hardin III as the context may require. 
      "Joining Co-Tenant Initial Filing Date" shall have the meaning set forth in Section 16.4(c).
      "Lien" shall mean any lien (statutory or otherwise), mortgage, deed of trust, claim, option, right to purchase, right to obtain, lease, easement, charge, pledge, security interest, hypothecation, assignment, use restriction or other encumbrance of any kind or nature whatsoever, whether voluntary or involuntary, choate or inchoate (including any agreement to give any of the foregoing, any conditional sale or other title retention agreement).
      "Losses" shall have the meaning set forth in Section 15.1(a).
      "Management Fee" shall have the meaning set forth in Section 6.3.
      "NERC" shall mean the North American Electric Reliability Corporation.
      "Net Revenue Losses" shall mean the reduction in net revenue calculated in accordance with methodology set forth on Exhibit F.
      "New Facilities" shall have the meaning set forth in Section 2.5(a).
      "Non-Extending Co-Tenant" shall have the meaning set forth in Section 7.2.
      "Non-Paying Co-Tenant" shall have the meaning set forth in Section 6.10.
      "Notice of Failure to Cure" shall have the meaning set forth in Section 9.6(a)(ii)(C).
      "O&amp;M Facilities" shall mean an operations and maintenance building, parking area, shop, storage area and related appurtenances including all mechanical, electrical and plumbing.
      "Offtaker" shall mean each Project's counterparty to the Interconnection Agreements.
      "Operational Co-Tenant" shall mean Hardin Solar and any Joining Co-Tenant that has achieved its Regulatory Approval Date and owns Undivided Interests in both Shared Premises and Shared Facilities.
      "Operational Pro-Rata Share" shall have the meaning set forth in Exhibit G. 
      "Operative Date" shall mean the day after all of the following conditions have been satisfied with respect to Hardin Solar:  (i) FERC allows this Agreement to become effective as a rate schedule, under Section 205 of the FPA, of Hardin Solar; (ii) if Hardin Solar determines that it will not qualify for a blanket open access transmission waiver under 18 C.F.R. ?35.28(d)(2) of the Commission's regulations that grant an FPA public utility that owns, controls or operates only Interconnection Customer's Interconnection Facilities a waiver from FERC's open access requirements in 18 C.F.R. ?35.28,18 C.F.R. Part 37 Part 18 C.F.R. Part 358 of FERC's open transmission rules, FERC has issued an order granting Hardin Solar waivers from such open access transmission requirements customary for entities that own limited and discrete interconnection transmission facilities, provided, however, that if Hardin Solar does not submit to FERC by the Hardin Solar Initial Filing Date a request for such open access transmission waiver order, then this item (ii) condition shall be deemed satisfied; and (iii) Hardin Solar has obtained exempt wholesale generator status pursuant to the Public Utility Holding Company Act of 2005 and FERC's implementing regulations with respect to the ownership of its Project and the co-tenancy arrangements contemplated herein, provided, however, that because Hardin Solar has already obtained exempt wholesale generator status, if Hardin Solar does not submit to FERC by the Hardin Solar Initial Filing Date a notice of self-recertification for exempt wholesale generator status, then this item (iii) condition shall be deemed satisfied.
      "OPSB Permit" shall mean, with respect to any Project, a Certificate of Environmental Compatibility and Public Need issued by the Ohio Power Siting Board which permits the Co-Tenant owner of such Project to build the Project (i) up to such Co-Tenant's Permitted Capacity, and (ii) upon the real property set forth in the application for such Certificate of Environmental Compatibility and Public Need.
      "Partial Assignment of Easements" shall have the meaning set forth in Section 1.1(a).
      "Parties" shall mean collectively the Co-Tenancy Manager and each Co-Tenant.
      "Permit" shall mean any action, certificate, certificate of authorization, registration, recording, notice, decree, declaration, filing, approval, consent, waiver, exemption, variance, franchise, order, permit, right, license or other authorization of or from a Governmental Authority or the giving of notice to any Governmental Authority.
      "Permitted Capacity" shall mean the Hardin Solar Permitted Capacity, the Hardin Solar II Permitted Capacity and/or the Hardin Solar III Permitted Capacity, as the context may require.
      "Person" shall mean an individual, corporation, limited liability company, voluntary association, joint stock company, business trust, partnership, agency, Governmental Authority or other entity.
      "PJM" shall mean PJM Interconnection, L.L.C.
      "Power Purchase Agreement" or "Power Purchase Agreements" shall mean the Hardin Solar Power Purchase Agreement, the Hardin Solar II Power Purchase Agreement and/or the Hardin Solar III Power Purchase Agreement.
      "Prime Rate" shall mean the rate published in The Wall Street Journal as the "Prime Rate" from time to time (or, if more than one such rate is published, the arithmetic mean of such rates), in either case determined as of the date the obligation to pay interest arises, but in no event more than the maximum rate permitted by Applicable Law.
      "Project" or "Projects" shall have the meaning set forth in the Recitals.
      "Project Agreement" or "Project Agreements" with respect to each Project shall have the meaning set forth in the applicable Facility Management Agreement for such Project.
      "Proposed Replacement Component" shall have the meaning set forth in Section 2.3(b).
      "Prudent Industry Practice" shall mean those practices, methods and acts that would be implemented and followed by a prudent operator providing services similar to those being provided hereunder for renewable generating facilities similar to the Projects in the geographic area of the Projects and PJM during the relevant time period, which practices, methods and acts, in the exercise of reasonable judgment in the light of the facts known at the time the decision was made, could reasonably have been expected to accomplish the desired result consistent with the requirements of Applicable Law.  In determining which practices, methods and acts constitute Prudent Industry Practice, due regard shall be given to, among other things, manufacturers' warranties, contractual obligations, the requirements or guidance of Governmental Authorities, Transmitting Utility, Applicable Laws, and the requirements of insurers, but in no event shall Prudent Industry Practice be interpreted to require any practice, method or act that violates Applicable Laws.  With respect to Co-Tenancy Manager, Prudent Industry Practice is not limited to the optimum practices, methods or acts to the exclusion of all others, but rather include a spectrum of possible practices, methods or acts commonly employed in the renewable power generation industry.
      "Qualified Replacement Component" shall mean a replacement component that is (i) new or (ii) (a) is refurbished for the purpose for which it is intended and in good condition, and (b) such replacement component and the installation thereof would comply with Prudent Industry Practice.
      "Quitclaim Deed" shall have the meaning set forth in Section 1.1(a).
      "RECs" shall have the meaning set forth in Exhibit F.
      "Regulatory Approval Date" shall mean the day after all of the following conditions have been satisfied with respect to the relevant Joining Co-Tenant:  (i) the Operative Date has occurred, (ii) such Joining Co-Tenant has obtained an OPSB Permit, (iii) FERC has accepted this Agreement for filing by such Joining Co-Tenant as its rate schedule under Section 205 of the FPA with the effective date requested by such Joining Co-Tenant; (iv) if such Joining Co-Tenant determines that it will not qualify for a blanket open access transmission waiver under 18 C.F.R. ?35.28(d)(2) of the Commission's regulations that grant an FPA public utility that owns, controls or operates only Interconnection Customer's Interconnection Facilities a waiver from FERC's open access requirements in 18 C.F.R. ?35.28,18 C.F.R. Part 37 Part 18 C.F.R. Part 358 of FERC's open transmission rules, FERC has issued an order granting such Joining Co-Tenant waivers from such open access transmission requirements customary for entities that own limited and discrete interconnection transmission facilities, provided, however, that if such Joining Co-Tenant does not submit to FERC by the Joining Co-Tenant Initial Filing Date a request for such open access transmission waiver order, then this item (iv) condition shall be deemed satisfied as of the [REDACTED] day following the Joining Co-Tenant Initial Filing Date; (v) such Joining Co-Tenant has obtained exempt wholesale generator status pursuant to the Public Utility Holding Company Act of 2005 and FERC's implementing regulations with respect to the ownership of its Project and the co-tenancy arrangements contemplated herein; (vi) an order from FERC granting Section 203 approval if the Joining Co-Tenant determines that the then-current FERC regulations require it to acquire, or an Operational Co-Tenant determines that it needs, prior approval under Section 203 of the FPA for closing on the transfer by an Operational Co-Tenant to a Joining Co-Tenant of such Joining Co-Tenant's initial co-tenancy ownership interests contemplated by this Agreement in the Shared Facilities described in Exhibit D hereto, provided, however, that if neither such Joining Co-Tenant nor an Operational Co-Tenant has submitted to FERC by the Joining Co-Tenant Initial Filing Date an application for such Section 203 approval, then this item (vi) condition shall be deemed satisfied as of the [REDACTED] day following the Joining Co-Tenant Initial Filing Date; and (vii) such Joining Co-Tenant has been granted market based rate authority under Section 205 of the FPA for the sale of power at wholesale and a waiver from FERC's accounting and related reporting requirements under 18 C.F.R. Parts 41, 101 and 141 (not including 141.14 and 141.15 ) of FERC's regulations and blanket authorization to issue securities or assume liabilities under Section 204 of the FPA.
      [REDACTED]
      "Reliability and Security Requirements" shall have the meaning set forth in Section 7.8.
      "Removal Notice" shall have the meaning set forth in Section 9.6(a)(ii)(A).
      "Replacement Component" shall mean any replacement component of the Shared Facilities, other than Consumables.
      "Replacement Notice" shall have the meaning set forth in Section 2.3(b).
      "Required Majority" shall mean with respect to a decision impacting (a) Shared Premises and Facilities, the affirmative approval of the Operational Co-Tenants holding at least a majority of the Operational Pro-Rata Shares in the respective Shared Premises and Facilities, (b) Additional Premises or Additional Facilities, the affirmative approval of the Operational Co-Tenants holding at least a majority of the Additional Premises or Facilities Pro-Rata Shares in the respective Easements and (c) Easements, the affirmative approval of the Operational Co-Tenants holding at least a majority of the Easement Pro-Rata Shares in the respective Easements, in each case, for the avoidance of doubt, taking into account only the ownership interest of the Operational Co-Tenants. 
      "Resolution" shall have the meaning of such term in Section 7.6.
      "Secured Party" shall mean, with respect to any Co-Tenant, the agent or lead bank, lending institution(s) or other financial institution under a loan agreement, hedge agreement or other financing instrument with such Co-Tenant secured by any of the Shared Facilities, Additional Facilities, the Separate Facilities, or all or a portion of Co-Tenant's Undivided Interests; provided, however, that any such agent, lead bank, lending institution or other financial institution shall not be deemed a "Secured Party" entitled to the rights accruing to a Secured Party until such Co-Tenant gives written notice to every other Co-Tenant and Co-Tenancy Manager along with an address for receipt of notices.
      "Security Documents" shall mean, with respect to any Co-Tenant, the security documents executed between such Co-Tenant and its Secured Party or other entities in which the Shared Facilities, or all or a portion of Co-Tenant's Undivided Interests secure the payment of any indebtedness owed by such Co-Tenant to such Secured Party.
      "Separate Collection Facilities" shall have the meaning set forth in Section 3.1.
      "Separate Easements" shall mean any easements, leases, licenses or other rights of a Co-Tenant that are not Easements.
      "Separate Facilities" shall have the meaning set forth in Section 4.1.
      "Separate Facilities Emergency" shall mean any Emergency involving the Separate Facilities of the other Co-Tenant.
      "Separate O&amp;M Expenses" shall have the meaning set forth in Section 6.4.
      "Separate Project" shall mean any and all separate Project facilities, premises, real property and easements of a Co-Tenant, including all Separate Easements, Separate Facilities and Separate Collection Facilities, that are not shared with any other Co-Tenant.
      "Shared Facilities" shall have the meaning set forth in the Recitals.
      "Shared Maintenance" shall have the meaning set forth in Section 2.2.
      "Shared O&amp;M Expenses" shall have the meaning set forth in Section 6.3.
      "Shared Premises" shall have the meaning set forth in the Recitals.
      "Shared Premises and Facilities" shall have the meaning set forth in the Recitals.
      "SOLAR Farm Management System" shall mean a communication and electronic control system consisting of hardware, instrumentation and software used to monitor, communicate, regulate and coordinate the real and reactive energy output of Hardin Solar Project, Hardin Solar II Project and Hardin Solar III Project.
      "Subsequent Project" shall have the meaning set forth in the Recitals.
      "Surrendering Co-Tenant" shall have the meaning set forth in Section 12.2.
      "Temporary Construction Easement" shall have the meaning set forth in Section 5.1.
      "Term" shall have the meaning set forth in Section 12.1.
      "Transmitting Utility" shall mean AEP Ohio Transmission Company, Inc.
      "Transmitting Utility Protocols" shall mean the documents adopted by Transmitting Utility, including any exhibits or attachments referenced therein, that contain the scheduling, operating, planning, reliability and settlement policies, rules, guidelines (including the Transmitting Utility operating guides), procedures, standards and criteria of Transmitting Utility.
      "Undivided Interests" shall mean, with respect to any Co-Tenant, such Co-Tenant's undivided tenants-in-common rights and interests in the Shared Premises, Shared Facilities, Additional Premises and/or Additional Facilities.
      "Withdrawal Costs" shall have the meaning set forth in Section 12.3.
      "Withdrawal Notice" shall have the meaning set forth in Section 12.3.


EXHIBIT A-1
SHARED PREMISES
TRACT 17

Situated in the Township of McDonald, County of Hardin and State of Ohio, known as being part of Virginia Military Survey Nos. 13248, 13279, 13359, 13449 and 15063 and also being part of Parcel Nos. 31250003.0000 and 31250004.0000 now or formerly owned by the Wyss Farms Holding Company, LLC as Recorded in O.R. Volume 462, Page 1254 of the Hardin County Deed Records and being further bounded and described as follows;

Beginning at the intersection of a bend in the centerline of Township Road 65 (Dodds Road) (40 feet wide) and the easterly line of said Wyss Farms Holding Company, LLC Parcel No. 31250004.0000 at a mag nail set;

Course No. 1: Thence South 06?37'49" East, along the centerline of said Township Road 65, an easterly line of said Wyss Farms Holding Company, LLC Parcel No. 31250004.0000 and a new division line, a distance of 382.59 feet to a mag nail set;

Course No. 2: Thence South 83?22'11" West, along a new division line, a distance of 20.00 feet to a point on the westerly line of said Township Road 65 and an iron pin set;

Course No. 3: Thence North 38?50'53" West, along a new division line, a distance of 87.97 feet to an iron pin set; 

Course No. 4: Thence South 85?20'05" West, along a new division line, a distance of 250.57 feet to an iron pin set; 

Course No. 5: Thence South 41?18'56" West, along a new division line, a distance of 902.73 feet to an iron pin set; 

Course No. 6: Thence North 52?47'57" West, along a new division line, a distance of 494.21 feet to an iron pin set; 

Course No. 7: Thence North 45?52'27" West, along a new division line, a distance of 422.51 feet to an iron pin set;

Course No. 8: Thence North 41?10'14" East, along a new division line, a distance of 881.72 feet to an iron pin set; 

Course No. 9: Thence South 46?34'36" East, along a new division line, a distance of 379.90 feet to an iron pin set; 

Course No. 10: Thence North 84?32'42" East, along a new division line, a distance of 714.45 feet to an iron pin set;

Course No. 11: Thence South 06?37'49" East, along a new division line, a distance of 51.58 feet to the Place of Beginning of the parcel of land herein described, containing 23.0736 acres of land, more or less, but subject to all legal highways and easements of record.
2.3650 Acres (more or less) from Parcel No. 31250003.0000
20.7086 Acres (more or less ) from Parcel No. 31250004.0000
Prior Deed, O.R. Volume 462, Page 1254 of Hardin County Deed Records.
Basis of bearing for this description is State Plane Ohio North Coordinate System NAD 83 based on GPS observations in November 2011, with the centerline bearing of Township Road 65 (Dodds Road) being North 84?00'00" East.
This description prepared and surveyed by Atwell, LLC under the supervision of Alex E. Marks, Ohio Professional Land Surveyor No. 8616 in November 2017. All iron pins set are 5/8 inch diameter rebar, 30 inches long with a plastic "Atwell" cap.

EXCEPTING THEREFROM THE FOLLOWING:

Situated in the Township of McDonald, County of Hardin and State of Ohio, known as being part of Virginia Military Survey Nos. 13248, 13279, 13359, 13449 and 15063 and also being part of Parcel Numbers 31250016.0000 and 31250017.0000 now or formerly owned by Hardin Wind Energy LLC as Recorded in O.R. Volume 548, Page 5934 of the Hardin County Deed Records and being further bounded and described as follows;

Commencing at a mag nail found at the intersection of a bend in the centerline of Township Road 65 (Dodds Road) (40 feet wide) and the Westerly line of parcel now or formerly owned by Wyss Farms Holding Company, LLC Parcel No. 31250007.0000 as recorded in O.R. Volume 462, Page 1254 of the Hardin County Deeds Records, thence South 06?37'49" East, along the centerline of said Township Road 65, the westerly line of said Wyss Farms Holding Company, LLC, a distance of 382.59 feet to a mag nail found at an easterly corner of parcel now or formerly owned by Wyss Farms Holding Company, LLC Parcel No. 31250004.0000 as recorded in O.R. Volume 462, Page 1254 of the Hardin County Deeds Record, thence South 83?22'11" West, along a northerly line of Wyss Farms Holding Company, LLC, a distance of 20.00 feet to a 5/8 inch iron pin with cap "Atwell" found at a northerly line of said Wyss Farms Holding Company, LLC parcel said point also being at the westerly line of said Township Road 65, Thence North 38?50'53" West, along a northerly line of Wyss Farms Holding Company, LLC, a distance of 87.97 feet to a 5/8 inch iron pin with cap "Atwell" found at a northerly line of said Wyss Farms Holding Company, LLC parcel, Thence South 85?20'05" West, along a northerly line of Wyss Farms Holding Company, LLC, a distance of 250.57 feet to a 5/8 inch iron pin with cap "Atwell" found at a northerly corner of said Wyss Farms Holding Company, LLC parcel Thence South 41?18'56" West, along a northerly line of Wyss Farms Holding Company, LLC, a distance of 902.73 feet to a 5/8 inch iron pin with cap "Atwell" found at a northerly corner of said Wyss Farms Holding Company, LLC parcel, Thence North 52?47'57" West, along a northerly line of Wyss Farms Holding Company, LLC, a distance of 214.52 feet to an iron pin set, said point also being the Place of Beginning of the parcel herein to be described;

Course No. 1: Thence North 52?47'57" West, continuing along said northerly line of Wyss Farms Holding Company, LLC parcel, a distance of 279.69 feet to a 5/8 inch iron pin with cap "Atwell" found at a northerly line of said parcel;

Course No. 2: Thence North 45?52'27" West, along said northerly line of Wyss Farms parcel, a distance of 307.87 feet to an iron pin set at an easterly line of said Wyss Farms Holding Company, LLC parcel;

Course No. 3: Thence North 41?30'37" East, along a new division line, a distance of 19.02 feet to an iron pin set;

Course No. 4: Thence North 45?52'27" West, along a new division line, a distance of 19.02 feet to an iron pin set;

Course No. 5: Thence North 41?30'37" East, along a new division line, a distance of 213.25 feet to an iron pin set;

Course No. 6: Thence South 48?29'23" East, along a new division line, a distance of 101.89 feet to an iron pin set;

Course No. 7: Thence North 41?31'48" East, along a new division line, a distance of 102.43 feet to an iron pin set;

Course No. 8: Thence South 48?29'17" East, along a new division line, a distance of 663.49 feet to an iron pin set;

Course No. 9: Thence South 67?28'08" West, along a new division line, a distance of 365.44 feet to the Place of Beginning of the parcel of land herein described, containing 5.0914 acres of land, more or less, but subject to all legal highways and easements of record.

Prior Deed, O.R. Volume 548, Page 5934 of Hardin County Deed Records

Basis of bearing for this description is State Plane Ohio North Coordinate System NAD 83 based on GPS observations in November 2011, with the centerline bearing of Township Road 65 (Dodds Road) being North 84?00'00" East. 

This description prepared and surveyed by Atwell, LLC, under the supervision of Alex E. Marks, Ohio Professional Land Surveyor No. 8616 in November 2017. All iron pins set are 5/8 inch diameter rebar, 30 inches long with a plastic "Atwell" cap.

Parcel Nos.:  31-250016.0000 and 31-250017.0000



EXHIBIT A-2
EASEMENTS
TRACT 1 (SOHHAR0001)
Lease and Easement Agreement dated December 1, 2016 by and between 33 A &amp; G LLC and Invenergy Solar Development LLC, as further evidenced by that Memorandum of Solar Lease and Easement Agreement as recorded March 8, 2017 in Volume 542, Page 1725 of the Official Records of Hardin County, Ohio, as amended by that First Amendment to Lease and Easement Agreement recorded June 27, 2019 in Book 553, Page 1501 of the Official Records of Hardin County, Ohio, and by that unrecorded First Amendment to Lease and Easement Agreement dated September 18, 2019, and as assigned to Hardin Solar Energy LLC, a Delaware limited liability company, by Assignment and Assumption Agreement dated April 29, 2020 and recorded May 5, 2020 in Book 556, Page 2105 of the Official Records of Hardin County, Ohio, over, under and across the following described property:

TRACT I:

Situated in the Township of Marion, County of Hardin and State of Ohio and being the South half (S 1/2) of Section 34 in Township 4 South, Range 9 East.

Containing in the above tract 320 acres, more or less.

Parcel Numbers 28-340003.0000 (combined with 28-340004.0000)

Property Address:
Township Road 120, Alger, Ohio.

TRACT II:

Situated in the Township of Roundhead, County of Hardin and State of Ohio, to-wit: The North half (N 1/2) of Section 3 in Township 5 South of Range 9 East, excepting that part thereof conveyed to Alex Dotson by deed dated September 1, 1920, and recorded in Vol. 134 at Page 530. This exception more particularly described as follows: A triangular piece of land beginning in the Southeast corner of said North 1/2 of Section 3, Roundhead Township; thence North 89 degrees 47 minutes West 801.9 feet to a point in State Highway 195; thence North 15 degrees East with said highway 2726.62 feet; thence South along the East line of Section 3, 2611.21 feet to the point of beginning containing 25.75 acres.

SAVE AND EXCEPT:

Also excepting a part thereof conveyed to the State of Ohio by deed dated November 14, 1929, and recorded in Volume 154 at Page 456 of the deed Records of Hardin County, Ohio.

Said exception more particularly described as follows: Land Situated in Hardin County, Ohio, Roundhead Township, Section 3, T5S, R9E, and bounded and described as follows: Beginning at a point in the West right of way line, same being the property line between W. P. and Mary Boecher and the Scioto Land Co. and at right angles to and 45 feet from Station 82 + 63.6 on the centerline of survey made by the Department of Highways; thence North 17 degrees 45 minutes East parallel to said centerline of survey 8469.4 feet to a point which is at right angles to and 45 feet from Station 167 + 33 on the centerline of survey; thence South 72 degrees 15 minutes East 45 feet to a point which Station 167 + 33 on the centerline of survey; thence South 17 degrees 45 minutes West along the centerline of survey 8455.4 feet to a point which is Station 82 + 77.6 on the centerline of survey; thence North 0 degrees 18 minutes East along the property line of W. P. and Mary Boecher and The Scioto Land Co. 47.88 feet to the point of beginning as shown by plans on file in the office of the Department of Highways, Columbus, Ohio. It is understood that the strip of land above described is not to be in excess of 15 feet in width, except as hereinafter stipulated on sheet and contains 8.744 acres, more or less, of which the present road occupies 5.578 acres, more or less.

SAVE AND EXCEPT:

Save and except the real estate described in Volume 66 of the Hardin County Recorder's Office at Page 181, being a part of the Northwest Quarter of Section No. 3, T.5 S., R. 9 E., Roundhead Township, Hardin County, State of Ohio and further described as follows:

Beginning at a point marked by a railroad spike set in pavement over the stone at the Southwest Corner of the said Northwest Quarter; thence North 0 degrees 18 minutes West on the West line of said Northwest Quarter a distance of 375.00 feet to a point marked by a steel rod; thence East a distance of 310.00 feet to a point marked by a steel rod; thence South 0 degrees 18 minutes East a distance of 375.00 feet to a point marked by a nail set in pavement on the South line of said Section No. 3; thence West a distance of 310.00 feet to the place of beginning, containing 2.668 acres of land more or less but subject to all legal highways.

John W. Deringer, Registered Surveyor No. 4863, Ohio.

Containing after said exceptions 282.842 acres more or less.

Parcel No. 37-020001.0000

Property Address:
County Road 130, Roundhead, Ohio. 

TRACT III:

Situated in the Township of Marion and McDonald, Hardin County, Ohio, to-wit:

Being the South half of Fractional Section 35, Township 4 South, Range 9 East, Marion Township and a part of Virginia Military Survey No. 15026, McDonald Township, all in Hardin County, Ohio, and more particularly described as follows: Beginning at an iron pipe at the Southwest corner of said Fractional Section 35 and in the West Bank of the new channel of the Scioto River thence North along the West line of said Section 35 a distance of 2,738.51 feet to a stake at the Northwest corner of said South half of Fractional Section 35; thence East along the half section line a distance of 700 feet to a stake; thence South a distance of 50 feet to a stake; thence East and parallel to the half section line a distance of 143.10 feet to an iron pin on the West Bank of the new channel of the Scioto river; thence Southerly with an interior angle of 73 degrees 26 minutes 30 seconds and along the West Bank of the new channel of the Scioto river a distance of 2,811.51 feet to the place of beginning containing in all 27.54 acres of land, subject to all legal highways and easements of record.

John W. Deringer, Registered Surveyor No. 4863, Ohio
 
Parcel No. 28-350002.0000

Property Address:
Township Road 120, Alger, Ohio.

TRACT IV:

Situated in the Township of Marion, County of Hardin and State of Ohio:

Being the West 1/2 of the North 1/2 of Section 34, Township 4 South, Range 9 East, Marion Township, Hardin County, Ohio.
 
Containing 160 acres, more or less.

Parcel Numbers 28-340001.0000

Property Address:
Township Road 120, Alger, Ohio.

TRACT VI:

Situated in the County of Hardin, in the State of Ohio and in the Township of Marion:

Being the North one-half of the Southeast quarter of Section Thirty-three in Township 4, South of Range Nine East, containing by resurvey, 83.61 acres, more or less.  Also, an easement for ingress and egress over the West ninety (90) feet off the entire West side of the Northwest quarter of Section 34, Township 4 South, Range 9 East and a parcel of land ninety (90) feet square situated in the Northwest corner of the South-west of Section 34, T4S, R9E.  Real estate located at T.R.120, Marion Township, Hardin County, Ohio.

Parcel No. 28-330007.0000 

Property Address:
Township Road 120, Alger, Ohio.

TRACT 3 (SOHHR20003)
Solar Lease and Easement Agreement dated February 27, 2018 by and between Gary A. Hall and Invenergy Solar Development North America LLC, as further evidenced by that Memorandum of Solar Lease and Easement Agreement recorded July 12, 2018 in Book 550, Page 2623 of the Official Records of Hardin County, Ohio, as amended by that First Amendment and Joinder to Solar Lease and Easement Agreement recorded July 8, 2019 in Book 553, Page 2067 of the Official Records of Hardin County, Ohio, and as assigned to Hardin Solar Energy LLC, a Delaware limited liability company, by Assignment and Assumption Agreement dated April 29, 2020 and recorded May 5, 2020 in Book 556, Page 2086 of the Official Records of Hardin County, Ohio, over, under and across the following described property:

Situated is the Township of Marion, Hardin County and State of Ohio containing 80 acres, to-wit:

The East half of the Northeast Quarter of Section Thirty-three (33), Township Four (4) South of Range Nine (9) East in said Marion Township, County and State aforesaid.

PPN: 28-330010.0000

TRACT 7 (SOHHR20004)
Solar Lease and Easement dated March 14, 2018 by and between Midwest Ohio Farms LLC and Invenergy Solar Development North America LLC, as further evidenced by that Memorandum of Solar Lease and Easement Agreement recorded July 12, 2018 in Book 550, Page 2613 of the Official Records of Hardin County, Ohio, as amended by that First Amendment to Solar Lease and Easement Agreement recorded July 8, 2019 in Book 553, Page 2072 of the Official Records of Hardin County, Ohio, and as assigned to Hardin Solar Energy LLC, a Delaware limited liability company, by Assignment and Assumption Agreement dated April 29, 2020 and recorded May 5, 2020 in Book 556, Page 2086_ of the Official Records of Hardin County, Ohio, over, under and across the following described property:

Situated in the Township of Marion, County of Hardin and State of Ohio:

Being all of Section 27, Township 4 South, Range 9 East, Marion Township, Hardin County, Ohio and more particularly described as follows:

Beginning at a 5/8 inch rebar set at the Northeast corner of said Section 27;

Thence South 00? 35' 41" East with the East line of said Section 27, 5407.19 feet to a 5/8 inch rebar found at the Southeast corner of said Section 27;

Thence North 89? 14' 19" West with the South line of the Southeast quarter of said Section 27, 2653.27 feet to a 5/8 inch rebar set at the South quarter post of said Section 27;

Thence North 89? 39' 41" West with the South line of the Southwest quarter of said Section 27, 2640.00 feet to a railroad spike found at the Southwest corner of said Section 27;

Thence North 00? 14' 19" East with the West line of the Southwest quarter of said Section 27, 2675.92 feet to a 5/8 inch rebar set at the West quarter post of said Section 27;

Thence North 00? 21' 36" East with the West line of the Northwest quarter of said Section 27, 2693.33 feet to a 5/8 inch rebar set at the Northwest corner of said Section 27;

Thence South 89? 50' 00" East with the North line of the Northwest quarter of said Section 27, 2599.97 feet to a 3/4 inch iron pin set at the North quarter post of said Section 27;

Thence South 89? 52' 39" East with the North line of the Northeast quarter of said Section 27, 2608.85 feet to the place of beginning, containing 649.007 acres more or less and subject to all highways and other easements of record.

The above description prepared by Richard D. Morrisey, Registered Surveyor No. 6470.

Parcel Nos: 
28-270001.0000 
28-270002.0000
28-270003.0000
28-270004.0000

TRACT 8 (SOHHR20006)
Solar Lease and Easement Agreement dated July 2, 2018 by and between Wyss Farms Holding Company, LLC and Invenergy Solar Development North America LLC, as further evidenced by that Memorandum of Solar Lease and Easement Agreement as recorded November 13, 2018 in the Official Records of Hardin County, Ohio as Instrument Number 2018003624, and as assigned to Hardin Solar Energy LLC, a Delaware limited liability company, by Assignment and Assumption Agreement dated April 29, 2020 and recorded May 5, 2020 in Book 556, Page 2086 of the Official Records of Hardin County, Ohio, and as amended by unrecorded First Amendment to Solar Lease and Easement Agreement dated May 21, 2020, over, under and across the following described property:

Situated in the Township of McDonald, County of Hardin and State of Ohio, known as being part of Virginia Military Survey Nos. 13248, 13279, 13359 and 13449 and also being part of a parcel of land now or formerly owned by Wyss Farms Holding Company, LLC as Recorded in O. R. Volume 462, Page 1254 of the Hardin County Records and being more fully bounded and described as follows;

Commencing at a mag nail found at the intersection of a bend in the centerline of Township Road 65 (Dodds Road) (40 feet wide) and the easterly line of parcel now or formerly owned by Hardin Wind Energy LLC as recorded in O.R. Volume 548, Page 5934 of the Hardin County Records, thence North 06?37'49" West along the easterly line of said Hardin Wind Energy land, a distance of 51.58 feet to a 5/8 inch iron pin found at the southeasterly line of a parcel now or formerly owned by Wyss Farms Holding Company, LLC parcel number 3125004.0000 as recorded in OR Volume 462, Page 1254 of the Hardin County Records, thence South 84?32'42" West along the southerly line of said Wyss Farms parcel 31250004.0000, a distance of 578.66 feet to the Place of Beginning of the easement herein described;

Course No. 1: Thence South 84?32'42" West along the southerly line of said Wyss Farms parcel 31250004.0000, a distance of 135.79 feet to a 5/8 inch iron pin found at a point thereon;

Course No. 2: Thence North 46?34'36" West along a southwesterly line of said Wyss Farms parcel 31250004.0000, a distance of 320.39 feet to a southeasterly corner of a second parcel of land now or formerly owned by Wyss Farms Holding Company, LLC parcel number 3125003.0000 as recorded in OR Volume 462, Page 1254 of the Hardin County Records;

Course No. 3: Thence North 33?49'09" East along a southeasterly line of said Wyss Farms parcel number 31250003.0000, a distance of 107.50 feet to a point thereon;

Course No. 4: Thence North 39?02'30" West across said Wyss Farms parcel number 31250003.0000, a distance of 1608.10 to a point;

Course No. 5: Thence North 20?46'28" West across said Wyss Farms parcel number 31250003.0000, a distance of 59.28 feet to a point on centerline of County Road 130 and the northerly line of said Wyss Farms parcel 31250003.0000;

Course No. 6: Thence North 70?08'20" East along the said centerline of County Road 130 and the northerly line of said Wyss Farms parcel 31250003.0000, a distance of 130.02 feet to a point thereon;

Course No. 7: Thence South 20?46'28" East across said Wyss Farms parcel number 31250003.0000, a distance of 36.31 feet to a point;

Course No. 8: Thence South 39?02'30" East across said Wyss Farms parcel numbers 31250003.0000 and 31250004.0000, a distance of 1900.98 feet to a point;

Course No. 9: Thence South 04?00'03" East across said Wyss Farms parcel number 31250004.0000, a distance of 135.14 feet to the Place of Beginning of the easement herein described, containing 6.719 acres of land based on a survey by Atwell, LLC under the supervision of Alex E. Marks, Ohio Professional Land Surveyor No. 8616 in November 2017, more or less.

Parcel Nos:  Part of 31-250003.0000 and 31-250004.0000

TRACT 10 (SOHHR20008)
Solar Lease and Easement Agreement dated July 20, 2018 by and between Rohrs Land Co. and Invenergy Solar Development North America LLC, as further evidenced by that Memorandum of Solar Lease and Easement Agreement recorded January 14, 2019 in Book 551, Page 5847 of the Official Records of Hardin County, Ohio, as amended by that certain First Amendment to Solar Lease and Easement Agreement dated December 3, 2019 and recorded April 6, 2020 in Book 555, Page 5668 of the Official Records of Hardin County, Ohio, and as assigned to Hardin Solar Energy LLC, a Delaware limited liability company, by Assignment and Assumption Agreement dated April 29, 2020 and recorded May 5, 2020 in Book 556, Page 2086 of the Official Records of Hardin County, Ohio, over, under and across the following described property: 

PARCEL B:

Situated in Marion Townships, County of Hardin and State of Ohio to wit:

Section Twenty-three (23), Township Four (4) South, Range Nine (9) East, except a tract of ten (10) acres in Northwest corner thereof conveyed to the State of Ohio by deed dated January 20, 1932, and recorded in the records of said County in Vo. 14 of Deeds at page 363 and except a tract of fifty (50) acres also in the northwest corner thereof conveyed to Carl Krummery by deed dated September 18, 1943, and recorded in the recorded in the records of the County in Vo. 175, page 456. 

Also, the following described real estate situate in Marion Township, Hardin County and State of Ohio, to-wit:

The Northwest Quarter (1/4) of Section Number Twenty six (26), township four (4) south, of range nine (9) East.

Parcel Nos.:
28-230002.0000
28-230003.0000
28-230004.0000
28-230009.0000
28-230001.0000
28-260001.0000


Tract 12 (SOHHR20015)
Collection System Easement Agreement dated July 12, 2019 by and between Stambaugh Family Investments, L.P., an Arizona limited partnership, and Hardin Solar Energy LLC, a Delaware limited liability company, and recorded July 26, 2020 in Book 553, Page 3134 of the Official Records of Hardin County, Ohio, as further evidenced by Memorandum of Collection System Easement Agreement recorded July 26, 2020 in Book 553, Page 3154 of the Official Records of Hardin County, Ohio, and as assigned to Hardin Solar Energy LLC, a Delaware limited liability company, by Quit claim Assignment and Assumption Agreement dated April 29, 2020 and recorded May 5, 2020 in Book 556, Page 2098 of the Official Records of Hardin County, Ohio, over, under and across the following described property:

Situated in the Township of McDonald, County of Hardin and State of Ohio and described as follows:

Situated in McDonald Township, Hardin County, Ohio:

And known as being a part of V. M. S. Nos. 15026 and 15063 and beginning in the center of the Sheldon Pike, South 70 deg. 15' West 19.62 rods from the Southwest corner of J. M. Stambaugh's and Son 300 acre Tract in said Survey No. 15026;

Thence with the center of side pike South 70 deg. 15' West 25.60 rods to the center of Cockley Ditch; and in the East line of the land of the Scioto Land Co. Sec. 2 Roundhead Township;

Thence with the East line of the Scioto Land Company and center of said Ditch, North 19 deg. 45' West 102.67 rods to the Southwest corner of a tract owned by C. E. Nash from which corner an iron pipe is set North 75 deg. 45' East 17 feet;

Thence with said South, line of said Nash Tract North 75 deg. 45' East 38.22 rods to an iron pipe;

Thence South 12 deg. 30' East 99.56 rods to the place of beginning, containing 20.15 acres.

Also a part of V. M. S. Nos. 15026 and 15063 and beginning in the center of the Sheldon Pike at the Southwest corner of J. B. Stambaugh &amp; Sons 300 acre tract in Survey No. 15026;

Thence with the center of said pike South 70 deg. 15' West 19.62 rods;

Thence North 12 deg. 30' West and parallel with the West line of said Stambaugh Tract 99.56 rods to an iron pipe in the South line of a 33.55 acre Tract owned by C. E. Nash;

Thence with said South line of said Nash Tract North 75 deg. 45' East 19.48 poles to an iron pipe in the West line of said Stambaugh Tract.

Thence South 12 deg. 30' East 97.68 rods to the place of beginning, containing 12 acres of land. Containing in all of Tract 4 the Amount of 32.15 acres, more or less.

Parcel No.: 31-250001.0000

Tract 13 (SOHHR20015)
Collection System Easement Agreement dated July 11, 2019 by and between Stambaugh Family Investments, L.P., an Arizona limited partnership, Roberta S. Lopresto, a married woman, and Lesley E. McKinstry, a married woman, and Hardin Solar Energy LLC, a Delaware limited liability company, and recorded March 17, 2020 in Book 555, Page 4482 of the Official Records of Hardin County, Ohio, and as assigned to Hardin Solar Energy LLC, a Delaware limited liability company, by Quit claim Assignment and Assumption Agreement dated April 29, 2020 and recorded May 5, 2020 in Book 556, Page 2098 of the Official Records of Hardin County, Ohio, over, under and across the following described property:

Parcel 1: 

Situated in the Townships of McDonald and Marion, County of Hardin and State of Ohio and bounded and described as follows:

And known as being a part of Virginia Military Survey No. 15026 on the waters of the Scioto River, and a part of Section No. 35 in Township Four (4) South of Range Nine (9) East and bounded and described as follows, to-wit:

Beginning at a point in the center of the New Channel of the Scioto River Ditch, where the line known as "The Lost Channel" of the Scioto River crosses the centerline of said new channel.  Said point being North 21 deg. West 1406 feet from a post in the line between the Congress and Military lands, which line is known as said "Lost Channel" and said post being the Eastern terminus of the Township line between the Townships of Marion and Roundhead, Hardin County, Ohio;

Thence North 17 deg. East 2616 feet to a point where the division line between Price and Carter and Joseph Timmons crosses said new channel, witness an iron pipe on the West bank of said new channel 326 feet South 14 deg. East from the extreme North corner of the One hundred acre tract of land formerly owned by Nelson Nash and wife, and which land was conveyed to him by deed from Joseph Timmons and wife, under date of September 26th, 1888, and recorded in Volume 67 at Page 307 of the Deed Records of Hardin County, Ohio, which division line is also the East line of said Nelson Nash tract of 100 acres,

Thence South 14 deg. East 4597 feet to a post, being the Southeast corner of said Nash tract of 100 acres,

Thence South 76 deg. West 947 feet to a post in said "Lost Channel";

Thence North 21 deg. West with said "Lost Channel" 2455 feet to the place of beginning, containing Ninety three and fifty hundredths (93.50) acres of land, more or less, of which Ninety one and forty hundredths is in Survey Number 15026 and Two and Ten hundredths acres is in Section Thirty five (35).

And being all that part of the land deeded by C. E. Nash and Alice C. Nash, his wife, to Walter S. Snyder and J. E. Dysert, by deed dated March 24th, A. D. 1920 and recorded in Deed record Number 129 at Page 502 of the Records of Hardin County, Ohio, lying East and South of the new channel of the Scioto River Ditch.

Parcel Nos.  283500030000; 312400060000 and 312400070000

TRACT 19 (SOHHR20021)
Access Easement Agreement dated November 1, 2019 by and between Paul Richardson Jr. &amp; Mary Jane Richardson, husband and wife, and Invenergy Solar Development North America LLC, and recorded April 24, 2020 in Book 556, Page 861 of the Official Records of Hardin County, Ohio, and as assigned to Hardin Solar Energy LLC, a Delaware limited liability company by Assignment and Assumption Agreement dated April 29, 2020 and recorded May 5, 2020 in Book 556, Page 2086 of the Official Records of Hardin County, Ohio, over, under and across the following described property:

A part of the Northwest Quarter of Section No. 3, T. 5 S., R. 9 E., Roundhead Township, Hardin County, State of Ohio and further described as follows:

Beginning at a point marked by a railroad spike set in pavement over the stone at the Southwest corner of the said Northwest Quarter; thence North 0 degrees 18 minutes West on the West line of said Northwest Quarter a distance of 375.00 feet to a point marked by a steel rod; thence East a distance of 310.00 feet to a point marked by a steel rod; thence South 0 degrees 18 minutes East a distance of 375.00 feet to a point marked by a nail set in pavement on the South line of said Section No. 3; thence West a distance of 310.00 feet to the place of beginning, containing 2.668 acres of land more or less but subject to all legal highways.

PPN: 37-020017.0000

"Lease 3" (SOHHR20030)

Collection System Easement Agreement dated June 25, 2020 by and between Stambaugh Family Investments, L.P., an Arizona limited partnership, and The Jennings M. Stambaugh Trust a/k/a the Jennings M. Stambaugh Trust created by Item 5 of the Last Will and Testament of Jennings M. Stambaugh dated July 17, 1980, and Hardin Solar Energy II LLC, a Delaware limited liability company, as evidenced by Memorandum of  Collection System Easement Agreement recorded August 7, 2020 in Book 557, Page 2571 of the Official Records of Hardin County, Ohio, over, under and across the following described property:

PARCEL 1:

Situated in the Township of Roundhead, County of Hardin and State of Ohio and described as follows:

And known as being fractional Southwest Quarter of Section Two (2), Township Five (5) South, Range Nine (9) East, beginning at a stone in the Northwest corner of said Southwest Quarter;

Thence North 90 deg. East with the North line of said Quarter One thousand eight hundred seventeen and five tenths (1817.5) feet to a stone in the lost channel line of the Scioto River;

Thence with lost channel line South 20 deg. 30' Four hundred eleven (411) feet to a stone at the Southerly end of said line and old channel of Scioto River;

Thence up said river with its meanderings South 34 deg. 30' West One thousand two hundred twenty-nine (1229) feet to a stone in center of said old channel;

Thence South 27 deg. 45' West One thousand two hundred eighteen and five tenths (1218.5) feet to a stone in center of said old channel;

Thence South 8 deg. 60' Two hundred nine (209) feet to a stone in center of said old channel and the South line of said fractional Section Two (2);

Thence with the South line thereof North 89 deg. 45' West Six Hundred seventy-seven (677) feet to a stone in the Southwest corner of said section;

Thence with the West line thereof North 0 deg. 00' West Two thousand six hundred seventy-three (2673) feet to the place of beginning, containing Eighty-one and eighty-five hundredths (81.85) acres of land, more or less.

PPN 370100020000

PARCEL 2:

Situated in the Township of Roundhead, County of Hardin and State of Ohio:

And known as being the Southeast part of the Southeast Quarter of Section 3, Township 5 South, Range 9 East, Roundhead Township, commencing at the Southeast corner of said Quarter Section;

Thence along the South line thereof North 89 deg. 45' West Ninety-eight (98) rods to the Southeast corner of the lands conveyed by William C. Myers et. al. to Frederick Loeffler and said Loeffler to H. Price herein;

Thence along the East line of said last mentioned lands North 17 deg. 30' East 75.75 rods to the Northeast corner of said last mentioned tract;

Thence North 89 deg. East 74.4 rods to the East line of said Quarter Section;

Thence along said line South 0 deg. 30' East 75.2 rods to the place of beginning containing 40.51 acres, and being the same premises conveyed by William C. Myers et al to H. Price by deed dated January 30, 1899, recorded in Volume 85, Page 462, Deed Records, Recorder's Office, Hardin County, Ohio.

PPN  370200040000




EXHIBIT B-1
BILL OF SALE - [SHARED FACILITIES/O&amp;M FACILITIES]
      THIS BILL OF SALE - [SHARED FACILITIES/O&amp;M FACILITIES] (this "Bill of Sale") is effective as of ____________, 202___ (the "Effective Date"), between _______________, a __________________________________ ("Assignor"), and __________________, a ____________________ ("Assignee").  Assignor and Assignee are sometimes referred to in this Bill of Sale as a "Co-Tenant" and collectively as the "Co-Tenants".
      WHEREAS, Assignor is the owner of that certain _______energy facility (the "_______________ Project"), and Assignee is the owner of that certain ______ energy facility (the "________ Project", together with the _______________ Project, the "Projects" and individually, a "Project"), each of which are located in Hardin County, OH.
      WHEREAS, Assignor and Assignee are parties to a certain Assignment, Co-Tenancy and Shared Facilities Agreement dated as of December 30, 2020 by and among Assignor, Assignee and certain other parties (the "Co-Tenancy Agreement") which agreement, among other things, governs the joint ownership of certain property and facilities utilized for the operation of the Projects and governs the relationship among the Co-Tenants with respect to the Projects.
      WHEREAS, on the terms set forth herein, Assignor desires to convey and quit-claim to Assignee, an undivided tenants-in-common interest in and to the [Shared Facilities/O&amp;M Facilities] (defined below) (the "Transferred TIC Interest"), retaining, for itself, an undivided tenants-in-common interest in and to the Shared Facilities (the "Retained TIC Interest").
      NOW THEREFORE, in consideration of the foregoing recitals, which are hereby incorporated herein, and the mutual obligations and covenants of the Co-Tenants herein contained, and for other good and valuable consideration, the receipt and sufficiency of which is hereby mutually acknowledged, the Co-Tenants hereto agree as follows:
      1.	[Shared Facilities/O&amp;M Facilities].  The term ["Shared Facilities"/"O&amp;M Facilities"] as used herein shall mean the facilities described on the attached Exhibit A.  The Co-Tenancy Agreement is incorporated herein by reference.
      2.	Conveyance of [Shared Facilities/O&amp;M Facilities] by Assignor.  Assignor hereby sells, conveys and quitclaims to Assignee the Transferred TIC Interest, retaining, for itself, the Retained TIC Interest, subject in each case to the terms, covenants and conditions contained in the Co-Tenancy Agreement.  The respective shares of each Co-Tenant after such conveyance shall be as follows:
Assignor: ___%
Assignee: ___%
THIS CONVEYANCE IS MADE "AS IS", "WITH ALL FAULTS" AND WITHOUT WARRANTY, EITHER EXPRESSED OR IMPLIED, INCLUDING, WITHOUT LIMITATION, ANY WARRANTIES OF QUALITY, MERCHANTABILITY, SUITABILITY AND FITNESS FOR A PARTICULAR PURPOSE, ANY WARRANTIES REGARDING THE EXISTENCE OF ANY SECURITY INTEREST, LIEN OR ENCUMBRANCE AND ANY WARRANTIES ARISING BY COMMON LAW, EXCEPT FOR THOSE WARRANTIES MADE BY GRANTOR UNDER THE CO-TENANCY AGREEMENT AND IS SUBJECT TO SECTION 5.3 OF THE CO-TENANCY AGREEMENT.  Any subsequent modifications to the [Shared Facilities/O&amp;M Facilities] or Assignor's tenants-in-common interest shall operate as a modification to this Bill of Sale without further action with respect to this Bill of Sale by either of the Co-Tenants.
      3.	Conflicts with Co-Tenancy Agreement.  This Bill of Sale is subject to the terms and conditions of the Co-Tenancy Agreement.  In the event of a conflict between this Bill of Sale and the Co-Tenancy Agreement, the Co-Tenancy Agreement shall control.
      4.	Miscellaneous.
      4.1	Notices.  Any notice required or authorized to be given hereunder or any other communications between the Co-Tenants shall be in writing (unless otherwise provided) and shall be served personally or by reputable express courier service or by facsimile transmission addressed to the relevant Co-Tenant at the address stated below or at any other address notified by that Co-Tenant to the other as its address for service.  Any notice so given personally shall be deemed to have been served on delivery, any notice so given by express courier service shall be deemed to have been served [REDACTED] days after the same shall have been delivered to the relevant courier.  As proof of such service it shall be sufficient to produce a receipt showing personal service or the receipt of a reputable courier company showing the correct address of the addressee.
      The Co-Tenants' addresses for service are as follows, although each Co-Tenant may change its address for service by written notice to the other Co-Tenants given as provided in this Section 4.1:
If to Assignor: 						If to Assignee:
				
				
				
      4.2	Entire Agreement.  Except as otherwise stated herein, this Bill of Sale and the Co-Tenancy Agreement and any documents or agreements referenced therein constitute the entire agreement between Assignor and Assignee respecting its subject matter.  Except as otherwise stated herein, any agreement, understanding or representation respecting the [Shared Facilities/O&amp;M Facilities], or any other matter referenced herein not expressly set forth or referenced in this Bill of Sale, the Co-Tenancy Agreement or a subsequent writing signed by both parties is null and void.  Except as otherwise provided herein, this Bill of Sale shall not be modified or amended except in a writing signed by both parties and no purported modifications or amendments, including any oral agreement (even if supported by new consideration), course of conduct or absence of a response to a unilateral communication, shall otherwise be binding on either Co-Tenant.
      4.3	Governing Law.  This Bill of Sale shall be governed by and interpreted in accordance with the laws of the State of Ohio.  If the parties are unable to resolve amicably any dispute arising out of or in connection with this Bill of Sale, they agree that such dispute shall be resolved in the manner provided in the Co-Tenancy Agreement.  The parties agree that any rule of construction to the effect that ambiguities are to be resolved in favor of either Co-Tenant shall not be employed in the interpretation of this Bill of Sale and is hereby waived.
      4.4	No Partnership or Joint Venture.  Nothing contained in this Bill of Sale shall be deemed to constitute any Co-Tenant a partner of, or joint venturer with, any other Co-Tenant.
      4.5	Partial Invalidity.  Should any portion of this Bill of Sale be declared invalid and unenforceable, then such portion shall be deemed to be severable from this Bill of Sale and shall not affect the remainder hereof; and the Co-Tenants shall negotiate in good faith to replace such invalid and unenforceable provision.
      4.6	Agreement in Counterparts.  This Bill of Sale may be executed in multiple counterparts, each and all of which shall be deemed an original agreement, and all of which shall constitute one agreement to be effective as of the Effective Date.  For purposes of recording this Bill of Sale, the signature page and the acknowledgement pages pertaining thereto may be detached from a counterpart, when executed, and attached to another counterpart, which other counterpart may thereafter be recorded as this Bill of Sale.
      5.	Reverter.  If at any time following the Effective Date, Assignee (i) fails to operate for a period in excess of two (2) years for reasons other than Force Majeure, or (ii) (a) abandons the use or operation of its Project without the intention to resume the use or operation, and (b) defaults on its obligations pursuant to the Co-Tenancy Agreement (including any payment obligations) and fails to cure such default within the applicable cure periods set forth herein, then all right, title and interest in and to the [Shared Facilities/O&amp;M Facilities] shall, immediately following the receipt of any FERC or other regulatory approvals required for such transfer (which Assignee will use commercially reasonable efforts to obtain), automatically (and without further action) revert to and revest in Assignor, as fully and completely as if this Bill of Sale had never been executed; provided, however, Assignee shall confirm such reversion by conveying the Transferred TIC Interest back to Assignor by Bill of Sale in form and substance substantially similar to this Bill of Sale.

[REMAINDER OF PAGE INTENTIONALLY LEFT BLANK;
SIGNATURE PAGE FOLLOWS]


      IN WITNESS WHEREOF, Assignor and Assignee, acting through their duly authorized representatives, have executed this Bill of Sale with the intent that it be effective as of the Effective Date, and certify that they have read, understand and agree to the terms and conditions of this Bill of Sale.
"Assignor"
						
By:						
Name:						
Title:						
STATE OF _____________	)
                        ) ss
COUNTY OF ___________	)
The foregoing instrument was acknowledged before me this ____ day of __________, 202___, by _______________________, as _________ of __________________ , a ________________ _________________.
My commission expires  _________________________
Witness my hand and official seal.
_____________________________
Name:
Notary Public



"Assignee"
___________________________
By:___________________________________
Name:________________________________
Title:_________________________________
STATE OF _____________	)
                        ) ss
COUNTY OF ___________	)
      The foregoing instrument was acknowledged before me this ____ day of __________, 202___, by ___________________, as ______________ of ____________, a _____________.
My commission expires  _________________________
Witness my hand and official seal.
_____________________________
Name:
Notary Public

Exhibit A to Bill of Sale - [Shared Facilities/O&amp;M Facilities]
[To Be Updated]

EXHIBIT B-2




SPACE ABOVE THIS LINE FOR RECORDER'S USE

QUITCLAIM DEED
FOR TEN DOLLARS ($10.00) and other good and valuable consideration in hand paid, _______________ LLC, a Delaware limited liability company ("Grantor") of c/o Invenergy LLC, 1 S. Wacker Dr., Suite 1800, Chicago, Il 60606, hereby sells and quitclaims to ____________________________ ("Grantee"), of ___________________________________, a ______% undivided tenant-in-common interest in and to whatever right, title and interest Grantor has in and to the real property described in Exhibit A (the "Premises") attached hereto and made a part hereof, retaining for itself, _____% undivided tenant-in-common interest in and to such real property.

THIS CONVEYANCE IS MADE "AS IS", "WITH ALL FAULTS" AND WITHOUT WARRANTY, EITHER EXPRESSED OR IMPLIED, INCLUDING, WITHOUT LIMITATION, ANY WARRANTIES OF QUALITY, MERCHANTABILITY, SUITABILITY AND FITNESS FOR A PARTICULAR PURPOSE, ANY WARRANTIES REGARDING THE EXISTENCE OF ANY SECURITY INTEREST, LIEN OR ENCUMBRANCE AND ANY WARRANTIES ARISING BY COMMON LAW, EXCEPT FOR THOSE WARRANTIES MADE BY GRANTOR UNDER THE CO-TENANCY AGREEMENT AND IS SUBJECT TO SECTION 5.3 OF THE CO-TENANCY AGREEMENT. 

This conveyance is made subject to and upon all of the terms, covenants and conditions of that certain Assignment, Co-Tenancy and Shared Facilities Agreement (the "Co-Tenancy Agreement"), dated as of December 30, 2020, by and among Grantor, Grantee and certain other parties, a copy of which was recorded on ____________________ as Document No. _____ in the office of the Clerk and Recorder of _________ County, ___________, and which Co-Tenancy Agreement, among other things, governs the joint ownership of the real property conveyed hereby and governs the relationship among Grantor, Grantee and such other parties with respect to the real property conveyed hereby.  In the event of a conflict between this Deed and the Co-Tenancy Agreement, the Co-Tenancy Agreement shall control.

If (i) Grantee has not commenced use of the Shared Facilities (as defined in the Co-Tenancy Agreement) located on the Premises on or before _________, or, (ii) if at any time following the effective date of this Deed, Grantee (a) fails to operate for a period in excess of two (2) years for reasons other than Force Majeure, or abandons the use or operation of its Project without the intention to resume the use or operation, and (b) defaults on its obligations pursuant to the Co-Tenancy Agreement, (including any payment obligations) and fails to cure such default within the applicable cure periods set forth herein, then all right, title and interest in and to the Premises shall automatically, without further action, revert to and revest in Grantor, as fully and completely as if this Deed had never been executed; provided, however, Grantee shall confirm such reversion by later conveying its interest in the Premises back to Grantor by quitclaim deed in form and substance substantially similar to this Deed.  




      IN WITNESS WHEREOF, Grantor has signed these presents this ____ day of ______, 202____. 
						

						_______________ LLC

						By:					
						Name:					
						Title:					


ACKNOWLEDGEMENT
STATE OF  	)
	)	ss.
COUNTY OF  	)
      The foregoing instrument was acknowledged before me this ____ day of __________, 202___, by _________________, as the Vice President of _______________ LLC, a Delaware limited liability company.
      My commission expires ___________________________
      Witness my hand and official seal.
	
Name:	
Notary Public

Prepared by and
after recordation, return to:
Invenergy LLC
Attn:  General Counsel
1 South Wacker Drive, Suite 1800
Chicago, IL 60606





	Exhibit A to Quitclaim Deed
	Description of Real Property
	




EXHIBIT B-3
PARTIAL ASSIGNMENT OF EASEMENTS
      THIS PARTIAL ASSIGNMENT OF EASEMENTS (this "Partial Assignment") is effective as of ____________, 202__ (the "Effective Date"), between ____________, a ______________________ ("Grantor") of c/o __________________________________________________________, and _______________________________, a _________________________________ ("Grantee") _________________________________.  Grantor and Grantee are sometimes referred to in this Partial Assignment as a "Co-Tenant" and collectively as the "Co-Tenants".
      WHEREAS, Grantor is a party to those certain agreements described in detail on Exhibit A attached hereto and made a part hereof (collectively, the "Easement Agreements") made by and between Grantor and the landowners specified in such descriptions (collectively, the "Landowners").
      WHEREAS, pursuant to the Easement Agreements, the Landowners granted easements to Grantor upon, over, across and under certain real property owned by the Landowners (as identified in "Exhibit A" of each Easement Agreement, the "Easement Property") for purposes of, among other things, the construction, laying down, installation, use, replacement, relocation, removal, operation and maintenance of underground electric collection facilities including electronic transmission and distribution lines, communication lines, interconnection, switching stations, access roads on, under, over and across the property described in the Easement Agreements (together with all of Grantor's other rights in and to the Easement Agreements, the "Grantor Easements").
      WHEREAS, pursuant to the terms and conditions of the Easement Agreements, Landowners granted to Grantor the right to assign or convey all or any portion of the Grantor Easements to any person on an exclusive or nonexclusive basis.
      WHEREAS, Grantor is the developer and/or operator of that certain _______ energy facility located in _________ County, ________ and known as _______________ Energy Project (the "Grantor Project"), and Grantee is the developer and/or operator of that certain ______energy facility to be located adjacent to the Grantor Project in ______ County, ________ known as ___________ (the "Grantee Project", together with the Grantor Project, the "Projects" and individually, a "Project").
      WHEREAS, Grantor and Grantee are parties to a certain Co-Tenancy and Shared Facilities Agreement (the "Co-Tenancy Agreement"), which was recorded on ________________, as Reception No. ________________ in the office of the Clerk and Recorder of ______ County, ________________, which agreement, among other things, governs the joint ownership of certain property and facilities to be utilized for the operation of the Projects, and governs the relationship among the Co-Tenants with respect to the Projects.
      WHEREAS, on the terms set forth herein, Grantor desires to assign to Grantee a portion of the Grantor Easements and certain rights related thereto for use with the Grantee Project, and Grantee desires to accept such portion of the Grantor Easements and certain rights related thereto for use with the Grantee Project, and to assume the responsibilities and duties related thereto.
      NOW THEREFORE, in consideration of the foregoing recitals and the mutual obligations and covenants of the Co-Tenants herein contained, and for other good and valuable consideration, the receipt and sufficiency of which is hereby mutually acknowledged, the Co-Tenants hereto agree as follows:
      1.	Assignment of Easements and Easement Agreements by Grantor.  Grantor hereby assigns, transfers and conveys to Grantee its right, title and interest in and to that portion of the Grantor Easements located upon, over, across and under the real property more particularly described in Exhibit B which is attached hereto and made a part hereof (the "Limited Facilities Easement Property") and all rights and obligations under the Easement Agreements as to the Limited Facilities Easement Property, solely and exclusively for: (a) the placement, operation, maintenance, repair and replacement of Grantee's electrical and communication cables and related equipment, for access roads and for access to and from the same, including, but not limited to, the construction, laying down, installation, use, replacement, relocation, removal, operation and maintenance of underground electric collection facilities including electronic transmission and distribution lines, communication lines, interconnection and switching stations, and access roads together with the right to access such improvements;  (such collective rights, the "Limited Facilities Easements"), subject, in each case, to the terms, covenants and conditions contained in the Co-Tenancy Agreement and the Easement Agreements.  All collection facilities, equipment, cables, electronic transmission and distribution lines, communication lines, interconnection and switching stations and access roads installed by or for the benefit of Grantee on the Limited Facilities Easement Property shall be referred to herein as the "Grantee Collection Facilities".  This assignment is made without covenant, representation or warranty, express or implied by Grantor, except for those covenants, representations and warranties made in the Co-Tenancy Agreement and such conveyance is subject to Section 5.3 of the Co-Tenancy Agreement.
      2.	Assumption of Easement and Easement Agreements by Grantee.  Grantee hereby accepts the foregoing conveyance and assignment and assumes and agrees to perform the obligations under the terms of the Easement Agreements with respect to the Limited Facilities Easements, subject to and in accordance with the Co-Tenancy Agreement.
      3.	Retention of Grantor Easements by Grantor.  Grantor hereby reserves and retains, subject to the terms, covenants and conditions contained in the Co-Tenancy Agreement, the Grantor Easements on the remainder of the Easement Property for the purposes described in the Easement Agreements, and this Partial Assignment shall not in any way affect or impair any rights and easements granted to Grantor not expressly assigned to Grantee hereunder.  All solar generating equipment, collection facilities, equipment, cables, electronic transmission and distribution lines, communication lines, interconnection and switching stations and access roads installed by or on behalf of Grantor pursuant to the Easement Agreements shall be referred to herein as the "Grantor Facilities."  Grantor hereby further reserves and retains the right to maintain, access, repair, replace, remove and utilize all Grantor Facilities located within, upon or under the Limited Facilities Easement Property existing as of the Effective Date, if any, in accordance with the Easement Agreements, and this Partial Assignment shall not in any way affect or impair any rights and easements granted to Grantor in, to and upon the Limited Facilities Easement Property with respect to Grantor's right to maintain, access, repair, replace and utilize any Grantor Facilities.
      4.	Crossing.
      4.1	Grantor grants and conveys to Grantee, subject to the terms, covenants and conditions contained in the Co-Tenancy Agreement and the Easement Agreements, a subeasement over, upon, across and under the Easement Property to access the Limited Facilities Easement Property, as reasonably necessary for the use and operation of the Grantee Project.
      4.2	Grantee grants and conveys to Grantor, subject to the terms, covenants and conditions contained in the Co-Tenancy Agreement and this Partial Assignment, a subeasement over, upon, across and under the Limited Facilities Easement Property to access the Grantor Facilities, if any, as reasonably necessary for the use and operation of the Grantor Project.
      4.3	The foregoing grants and conveyances are made without recourse to, and without covenant or warranty, express or implied by, the granting Co-Tenant in any case or event, or for any purpose whatsoever.
      5.	Assignment.  Each Co-Tenant shall have the right to sell, convey, lease, assign, mortgage, encumber or transfer their respective rights hereunder in accordance with the terms and conditions set forth in the Easement Agreements and the Co-Tenancy Agreement.  Any other assignment without the other Co-Tenant's consent shall be void ab initio.  References in this Partial Assignment to either Co-Tenant or to Landowner shall be deemed to refer to any permitted successors or assignees of such Co-Tenant or Landowner.
      6.	Co-Tenancy Agreement.  This Partial Assignment is subject to the terms and conditions of the Co-Tenancy Agreement.  In the event of a conflict between this Partial Assignment and the Co-Tenancy Agreement, the Co-Tenancy Agreement shall control.  Each Co-Tenant shall provide the other with a copy of any notices from, or other correspondence with, any Landowner regarding the Limited Facilities Easement or Limited Facilities Easement Property.  Grantor acknowledges that that the Limited Facilities Easement granted herein may be based on plans rather than as-built facilities, and Grantor shall reasonably cooperate with Grantee regarding any proposed modification to the Limited Facilities Easement to reflect as-built facilities.
      7.	Miscellaneous.
      7.1	Notices.  Any notice required or authorized to be given hereunder or any other communications between the Co-Tenants shall be in writing (unless otherwise provided) and shall be served personally or by reputable express courier service or by facsimile transmission addressed to the relevant Co-Tenant at the address stated below or at any other address notified by that Co-Tenant to the other as its address for service.  Any notice so given personally shall be deemed to have been served on delivery, any notice so given by express courier service shall be deemed to have been served [REDACTED] days after the same shall have been delivered to the relevant courier.  As proof of such service it shall be sufficient to produce a receipt showing personal service or the receipt of a reputable courier company showing the correct address of the addressee.
The Co-Tenants' addresses for service are as follows, although each Co-Tenant may change its address for service by written notice to the other Co-Tenants given as provided in this Section 7.1:
If to Grantor:									
				
				
If to Grantee:
      7.2	Governing Law.  This Partial Assignment shall be governed by and interpreted in accordance with the laws of the State of Ohio.  If the parties are unable to resolve amicably any dispute arising out of or in connection with this Partial Assignment, they agree that such dispute shall be resolved in the manner provided in the Co-Tenancy Agreement.  The parties agree that any rule of construction to the effect that ambiguities are to be resolved in favor of either Co-Tenant shall not be employed in the interpretation of this Partial Assignment and is hereby waived.
      7.3	No Partnership or Joint Venture.  Nothing contained in this Partial Assignment shall be deemed to constitute any Co-Tenant a partner of, or joint venturer with, any other Co-Tenant.
      7.4	Partial Invalidity.  Should any portion of this Partial Assignment be declared invalid and unenforceable, then such portion shall be deemed to be severable from this Partial Assignment and shall not affect the remainder hereof; and the Co-Tenants shall negotiate in good faith to replace such invalid and unenforceable provision.
      7.5	Agreement in Counterparts.  This Partial Assignment may be executed in multiple counterparts, each and all of which shall be deemed an original agreement, and all of which shall constitute one agreement to be effective as of the Effective Date.  For purposes of recording this Partial Assignment, the signature page and the acknowledgement pages pertaining thereto may be detached from a counterpart, when executed, and attached to another counterpart, which other counterpart may thereafter be recorded as this Partial Assignment.
      8.	Reverter.  If at any time following the Effective Date, Grantee (a) fails to operate for a period in excess of two (2) years for reasons other than Force Majeure, or abandons the use or operation of its Project without the intention to resume the use or operation, and (b) defaults on its obligations pursuant to the Co-Tenancy Agreement (including any payment obligations) and fails to cure such default within the applicable cure periods set forth herein, then all right, title and interest in and to the Easements shall immediately following any landowner or regulatory approvals required for such transfer (which Grantee will use commercially reasonable efforts to obtain), automatically (and without further action) revert to and revest in Grantor, as fully and completely as if this Partial Assignment had never been executed; provided, however, Grantee shall confirm such reversion by conveying its interest in the Easements back to Grantor by assignment in form and substance substantially similar to this Partial Assignment.
      
 [REMAINDER OF PAGE INTENTIONALLY LEFT BLANK;
SIGNATURE PAGE FOLLOWS]


      IN WITNESS WHEREOF, Grantor and Grantee, acting through their duly authorized representatives, have executed this Partial Assignment with the intent that it be effective as of the Effective Date, and certify that they have read, understand and agree to the terms and conditions of this Partial Assignment.
"Grantor"
_____________________________________
By:___________________________________
Name:________________________________
Title:_________________________________
STATE OF ______________	)
                        )	ss.
COUNTY OF ____________)
      The foregoing instrument was acknowledged before me this ____ day of ___________, 202____, by _________________, as ___________________ of ________________ , a __________________________________.
My commission expires __________________________
Witness my hand and official seal.
_____________________________
Name:
Notary Public


"Grantee"
_____________________________________
By:___________________________________
Name:________________________________
Title:_________________________________
STATE OF ______________	)
                        )	ss.
COUNTY OF ____________)
The foregoing instrument was acknowledged before me this ____ day of ___________, 202____, by _______________________, as ______________________ of ______________________, a ______________________.
My commission expires ______________________________
Witness my hand and official seal.
_____________________________
Name:
Notary Public
PREPARED BY AND
WHEN RECORDED RETURN TO:
________________
_______________
_______________


Exhibit A to Partial Assignment of Easements
List of Easement Agreements

[A-2  Shared Facilities TO BE CONFIRMED]


Exhibit B to Partial Assignment of Easements
Legal Descriptions for Limited Facilities Easement Agreement

Exhibit B-1 to Partial Assignment of Easements
Descriptions for Limited Facilities Easement Property

EXHIBIT C
SHARED MAINTENANCE
1. Shared Premises Maintenance:
a. Vegetative management and
b. Weed abatement Brush control to include clearing and maintenance of transmission rights of way, as applicable
c. Snow removal, as needed
d. Erosion control, including culverts, as needed

2. Shared Facilities Maintenance:
a. Periodic inspections and associated service to electrical connections, relays, communications and structures identified in Exhibit D
b. Adherence to manufacturer's recommended maintenance procedures
c. General inspection of gates, culverts, and lighting 
d. Torqueing of electrical connections and structures
e. Coordinate with other Co-Tenants for events or conditions that would affect the Projects
f. Periodic testing and maintenance of all relays, communication, and control systems required for plant operation 
g. Maintenance of communication and backup power
h. Providing the Co-Tenants with all necessary evidence regarding maintenance and testing activities conducted to demonstrate compliance with NERC Generator Owner (GO) and Generator Operator (GOP) requirements.
i. Maintain access roads necessary for the Shared Premises and accessing Shared Facilities
j. Dressing of roads
k. Snow removal, as needed
l. Erosion control, including culverts, as needed
m. Maintain stormwater control measures, including dry pond
n. Maintain all O&amp;M Facilities to include all associated mechanical, electrical, and plumbing (i.e. septic system and HVAC)




EXHIBIT D
DESCRIPTION OF SHARED FACILITIES
Shared Facilities to be owned and used by all Co-Tenants:
*	Substation dead-end structure where the AEP line terminates, as well as the other line equipment including the jumpers, OPGW splice enclosure, surge arresters, CVT's, motor operated disconnect switch, and circuit breaker.  This includes the conduit and cabling to this equipment.
*	The 345kV main overhead buswork, including the steel structures insulators and foundations, between the substation side terminals of the line circuit breaker PCB 345-A up to the line side terminals of the motor operated disconnect switches of each project, SW 345-1 through SW 345-5.  The motor operated disconnect switch 345-B and all its associated equipment, conduit and cabling is a shared piece of equipment. 
*	Substation common items such as the access roads, substation pad, ground grid, fences, gates, shield masts and wire, substation lighting, and the stormwater control measures including the dry pond surrounding the facility.
*	The primary station service transformer SS1 located on the 34.5kV bus of the Hardin Solar project and its associated fusing, cabling, and conduit. 
*	The substation cable trenches and the backup power and telecom demarcation area with its associated fence, gates, equipment, conduit and cabling. 
*	The substation control enclosures and all associated equipment, except for the project specific relay panels &amp; devices.  The panels and relaying &amp; communication devices for the 345kV line, PCB 345-A line breaker and 345kV main bus protection are to be shared.  This includes the associated cables, conduits, and trenches used to protect the line, line breaker, and main bus. 
* All equipment and cabling associated with the Solar Farm Management System.1  

* Subject to Section 2.6(a), the O&amp;M Facilities.

EXHIBIT E
MEMORANDUM OF
ASSIGNMENT, CO-TENANCY, AND SHARED FACILITIES AGREEMENT
      
      This MEMORANDUM OF ASSIGNMENT, CO-TENANCY, AND SHARED FACILITIES AGREEMENT (this "Memorandum") is made as of the ___ day of December, 2020, by and among HARDIN SOLAR ENERGY LLC, a Delaware limited liability company, with an address of c/o Dominion Solar Projects VII, Inc., 120 Tredegar Street, Richmond, VA 23219, Attn: Emil Avram, Vice President - Business Development ("Hardin Solar"), HARDIN SOLAR ENERGY II LLC, a Delaware limited liability company, with an address of 1 S. Wacker Drive, Suite 1800, Chicago, Illinois 60606 ("Hardin Solar II"), and HARDIN SOLAR ENERGY III LLC, a Delaware limited liability company, with an address of 1 S. Wacker Drive, Suite 1800, Chicago, Illinois 60606 ("Hardin Solar III", collectively with Hardin Solar, Hardin Solar II, and Hardin Solar III, the "Co-Tenants" and each individually, a "Co-Tenant"), and HARDIN SOLAR ENERGY LLC, a Delaware limited liability company, with an address of c/o Dominion Solar Projects VII, Inc., 120 Tredegar Street, Richmond, VA 23219, Attn: Emil Avram, Vice President - Business Development, as Co-Tenancy Manager (in such capacity, "Co-Tenancy Manager"), which parties hereby agree as follows:
1.	Co-Tenants and Co-Tenancy Manager have entered into that certain Assignment, Co-Tenancy, and Shared Facilities Agreement, dated as of December ___, 2020 (the "Agreement") (capitalized terms used in this Memorandum but not otherwise defined herein shall have the meanings set forth in the Agreement).
2.	Pursuant to the Agreement, the Co-Tenants, if and to the extent being the holders and owners of certain Shared Facilities (as defined in the Agreement), will assign to the other Co-Tenants, and the other Co-Tenants will accept and assume from such assigning Co-Tenant, certain interests in the Shared Facilities, in accordance with the terms and conditions contained in the Agreement.  The property owned and/or leased by each of the Co-Tenants as of the date hereof that is encumbered by the Agreement is legally described on Exhibit 1.
3.	Pursuant to the Agreement, Co-Tenants will engage Co-Tenancy Manager to operate and maintain the Shared Facilities, in accordance with the terms and conditions contained in the Agreement.
4.	The term of the Agreement commences on the Effective Date of the Agreement and continues until the earlier to occur of (i) a single Co-Tenant or Secured Party becoming the owner of the entire ownership interest in all of the Shared Facilities or (ii) the mutual agreement of all the Co-Tenants with the consent of the then existing Secured Parties, each in accordance with the terms and conditions contained in the Agreement.
5.	In the event of any conflict between the terms of this Memorandum and the Agreement, the terms of the Agreement shall prevail.
6.	This Memorandum may be executed in counterparts, and all counterparts together shall be construed as one document.
7.	The covenants of the Co-Tenants made in the Agreement shall be deemed to be covenants running with and binding upon the land pursuant to applicable law for the duration of the Term.
 [SIGNATURES ON NEXT PAGE]


      IN WITNESS WHEREOF, Co-Tenants and Co-Tenancy Manager have executed this Memorandum as of the day and year first above written.

"Hardin Solar"

HARDIN SOLAR ENERGY LLC, 
a Delaware limited liability company 


						By:						
						Name:						
						Title:						


ACKNOWLEDGEMENT
COMMONWEALTH OF VIRGINIA
CITY OF RICHMOND, to-wit:

	The foregoing instrument was acknowledged before me, in the above jurisdiction this _____ day of December, 2020, by _____________________, as _______________ of Hardin Solar Energy LLC, a Delaware limited liability company, for and on behalf of the company.

	
[AFFIX SEAL]			_______________________________________
					Notary Public


My Commission expires: __________________
Notary Registration No.  ___________________





"Hardin Solar II"


HARDIN SOLAR ENERGY II LLC, 
a Delaware limited liability company 


						By:						
						Name:						
						Title:						


ACKNOWLEDGEMENT
STATE OF ILLINOIS		)	

COUNTY OF COOK			) ss

	The foregoing instrument was acknowledged before me, the undersigned notary public, this _____ day of December, 2020, by ________________________, the ______________________ of Hardin Solar Energy II LLC, a Delaware limited liability company, on behalf of said limited liability company.

	[SEAL]					______________________________
							Notary Public
							My Commission Expires: 		




"Hardin Solar III"

HARDIN SOLAR ENERGY III LLC, 
a Delaware limited liability company


						By:						
						Name:						
						Title:						


ACKNOWLEDGEMENT
STATE OF ILLINOIS		)	

COUNTY OF COOK			) ss

	The foregoing instrument was acknowledged before me, the undersigned notary public, this _____ day of December, 2020, by ________________________, the ______________________ of Hardin Solar Energy III LLC, a Delaware limited liability company, on behalf of said limited liability company.

	[SEAL]					______________________________
							Notary Public
							My Commission Expires: 		



"Co-Tenancy Manager"

HARDIN SOLAR ENERGY LLC, 
a Delaware limited liability company 


						By:						
						Name:						
						Title:						


ACKNOWLEDGEMENT
COMMONWEALTH OF VIRGINIA
CITY OF RICHMOND, to-wit:

	The foregoing instrument was acknowledged before me, in the above jurisdiction this _____ day of December, 2020, by _____________________, as _______________ of Hardin Solar Energy LLC, a Delaware limited liability company, for and on behalf of the company.

	
[AFFIX SEAL]			_______________________________________
					Notary Public


My Commission expires: __________________
Notary Registration No.  ___________________




Prepared by and
after recordation, return to:

Invenergy LLC
Attn:  Tyrone H. Thomas, Jr.
1 South Wacker Drive, Suite 1800
Chicago, IL 60606	


Exhibit 1 to Memorandum of Amended and Restated Assignment, Co-Tenancy, and Shared Facilities Agreement
Legal Descriptions of each Co-Tenants' Property
 [DESCRIPTIONS TO BE COMPLETED WHEN MEMORANDUM IS EXECUTED]
EXHIBIT F
NET REVENUE LOSSES CALCULATION METHODOLOGY
Net Revenue Loss payments ("NRL Payments") during any period of time for which they are required hereunder (the "NRL Period") shall equal the product of (i) the MWh of electricity that would have been produced based on the actual renewable energy measurements during the NRL Period, and (ii) the price such electricity could have been sold and delivered in PJM by the Co-Tenant receiving such NRL Payment at the Commodity Reference Price for electricity during such NRL Period, grossed up on an after-tax basis assuming the highest marginal federal income tax rate and State of Ohio Commercial Activities Tax rate, in each case then in effect (and no local, foreign or other income taxes).  Further, if the Co-Tenant is eligible to receive renewable energy credits, including those granted pursuant to law, regulation, certification, markets, trading, off-set, private transaction, renewable portfolio standards, voluntary programs, ("RECs") and if such Co-Tenant is not otherwise compensated for RECs as part of subsection (a) above, the Co-Tenant causing the loss of such RECs shall transfer or cause to be transferred to the Co-Tenant losing such RECs replacement RECs of equal volume, technology type, state and vintage of the RECs being lost.  The term "Commodity Reference Price" means the average of the day-ahead PJM locational marginal price at PJM's pricing node for the Projects which will be established upon interconnection of the Projects during the NRL Period or any successor PJM pricing market that reports prices applicable during the NRL Period at the affected Co-Tenant's pricing node for all hours during such NRL Period.

EXHIBIT G
PRO-RATA SHARES
Additional Premises or Facilities Pro-Rata Share
For each Co-Tenant, its "Additional Premises or Facilities Pro-Rata Share" with respect to any Additional Shared Premises or Additional Shared Facilities in which such Co-Tenant owns an interest shall be a fraction (which fraction shall be reduced to a percentage), the numerator of which is the Permitted Capacity for such Co-Tenant's Project and the denominator of which shall be the aggregate Permitted Capacity of the Projects of all the Co-Tenants that own an interest in the respective Additional Shared Premises or Additional Shared Facilities, provided that in the event of (i) the surrender and assignment of Undivided Interests pursuant to Article 12, or (ii) the termination of a Co-Tenant pursuant to Article 12 or Article 13 (except to the extent that the ownership of a particular component of the applicable Additional Shared Premises or Additional Shared Facilities is unaffected by the transactions identified in subsections (i)-(ii)), each remaining Co-Tenant's Additional Premises or Facilities Pro-Rata Share will be recalculated in the same manner as set forth above.
Base Pro-Rata Share
For each Co-Tenant, its "Base Pro-Rata Share" shall be as follows:  25% for Hardin Solar, 25% for Hardin Solar II and 50% for Hardin Solar III, provided that in the event of (i) the surrender and assignment of Undivided Interests pursuant to Article 12, or (ii) the termination of a Co-Tenant pursuant to Article 12 or Article 13 (except to the extent that the ownership of a particular component is unaffected by the transactions identified in subsections (i)-(ii)), each remaining Co-Tenant's Base Pro-Rata Share will be adjusted to equal a fraction (which fraction shall be reduced to a percentage), the numerator of which is the Permitted Capacity for such Co-Tenant's Project or Projects that owns an interest or has rights in the Shared Premises or Shared Facilities and the denominator of which shall be the aggregate Permitted Capacity for all of the Co-Tenants' Projects that own an interest in the Shared Premises or Shared Facilities.
Easement Pro-Rata Share 
For each Co-Tenant, its "Easement Pro-Rata Share" with respect to an Easement shall be a fraction (which fraction shall be reduced to a percentage), the numerator of which is the acreage of the portion of the Easement being assigned (or retained as the case may be) and the denominator of which shall be the total acreage of the land encumbered by the Easement is being conveyed, provided that in the event of (i) the surrender and assignment of Undivided Interests pursuant to Article 12, or (ii) the termination of a Co-Tenant pursuant to Article 12 or Article 13 (except to the extent that the ownership of a particular component of the applicable Easement is unaffected by the transactions identified in subsections (i)-(ii)), each remaining Co-Tenant's Easement Pro-Rata Share will be recalculated in the same manner as set forth above.  
Operational Pro-Rata Share 
For each Operational Co-Tenant (or each Joining Co-Tenant that owns an Undivided Interest in the Shared Premises, has achieved its Regulatory Approval Date and seeks to own an Undivided Interest in the Shared Facilities pursuant to Section 2.1(a)), its "Operational Pro-Rata Share" shall be as follows:  (a) at all times when Hardin Solar, Hardin Solar II or Hardin Solar III is the sole Operational Co-Tenant, such Operational Co-Tenant's Operational Pro-Rata Share shall be 100%, (b) at all times when Hardin Solar and Hardin Solar II are the sole Operational Co-Tenants, Hardin Solar 50% and Hardin Solar II 50%, (c) at all times when all Co-Tenants are Operational Co-Tenants, Hardin Solar 25%, Hardin Solar II 25% and Hardin Solar III 50%, (d) at all times when Hardin Solar I and Hardin Solar III are the sole Operational Co-Tenants, Hardin Solar I 33.34% and Hardin Solar III 66.66% and (e) at all times when Hardin Solar II and Hardin Solar III are the sole Operational Co-Tenants, Hardin Solar II 33.34% and Hardin Solar III 66.66%.  Each Operational Co-Tenant's Operational Pro-Rata Share shall be reallocated from time to time following the occurrence of a Joining Co-Tenant becoming an Operational Co-Tenant or upon in the event of (i) the surrender and assignment of Undivided Interests pursuant to Article 12, or (ii) the termination of a Co-Tenant pursuant to Article 12 or Article 13 (except to the extent that the ownership of a particular component is unaffected by the transactions identified in subsections (i)-(ii)).  
1 Subject to further review and adjustment based on future site design.
---------------

------------------------------------------------------------

---------------

------------------------------------------------------------



1
KC01DOCS\1245654.12
42334119 

Execution Version

TABLE OF CONTENTS
(continued)
Page



-ii-



TABLE OF CONTENTS

Page


 

-i-





vi
42334119 



 



14




 

50
KC01DOCS\1245654.12
42334119 



 



Appendix A - 11
 



 

Exhibit A-1 - 4
 



Exhibit A-2 - 11
 

 





 



 









3</record_plain_text>
      <record_change_type>NEW</record_change_type>
      <filing_id>3</filing_id>
      <filing_title>Shared Facilities Agreement</filing_title>
      <filing_type>390</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2021-01-26</current_effective_date>
      <ferc_order_date>2021-03-12</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
  </ferc_filing_data>
</Document>