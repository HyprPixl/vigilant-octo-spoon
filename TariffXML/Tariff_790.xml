<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Document xmlns="http://ferc.gov/etariffExport.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ferc_filing_data>
    <schema_version>2</schema_version>
    <company_id>C001175</company_id>
    <lead_applicant_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
    <tariff_id>19</tariff_id>
    <tariff_title>FERC Market Based Rate Tariff</tariff_title>
    <tariff_export_date>2025-09-16T18:25Z</tariff_export_date>
    <export_schema_version>2</export_schema_version>
    <record_data>
      <record_id>1100</record_id>
      <option_code>A</option_code>
      <record_title>FERC Electric Tariff No. 1 Ver. 2.0.0 Withdraw</record_title>
      <record_content_desc>Market Based Rate Tariff</record_content_desc>
      <record_version_num>3.0.0</record_version_num>
      <record_narrative_name>FERC Electric Tariff No. 1 Ver. 2.0.0 Withdraw</record_narrative_name>
      <collation_value>2500</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2010-11-03</proposed_effective_date>
      <priority_order>600</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data>e1xydGYxXGZiaWRpc1xhbnNpXGFuc2ljcGcxMjUyXGRlZmYwXGRlZmxhbmcxMDMzXGRlZmxhbmdmZTIwNTJ7XGZvbnR0Ymx7XGYwXGZyb21hblxmcHJxMlxmY2hhcnNldDAgVGltZXMgTmV3IFJvbWFuO319DQpcdmlld2tpbmQ0XHVjMVxwYXJkXGx0cnBhclxmMFxmczI0IEJsYW5rIFBhZ2VccGFyDQp9DQo=</record_binary_data>
      <record_plain_text>Blank Page
	1</record_plain_text>
      <record_change_type>WITHDRAW</record_change_type>
      <filing_id>132</filing_id>
      <filing_title>Supplemental Category 1 Exemption Filing</filing_title>
      <filing_type>80</filing_type>
      <associated_filing_id>100</associated_filing_id>
      <associated_record_id>1100</associated_record_id>
      <associated_option_code>A</associated_option_code>
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2010-11-03</current_effective_date>
      <ferc_order_date>2011-01-25</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
    <record_data>
      <record_id>1200</record_id>
      <option_code>A</option_code>
      <record_title>FERC Electric Tariff No. 1</record_title>
      <record_content_desc>Market Based Rate Tariff</record_content_desc>
      <record_version_num>5.0.0</record_version_num>
      <record_narrative_name>FERC Electric Tariff No. 1</record_narrative_name>
      <collation_value>3000</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2016-08-02</proposed_effective_date>
      <priority_order>500</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>Invenergy Cannon Falls LLC
FERC Electric Tariff No. 1


1.	Availability.  Invenergy Cannon Falls LLC ("Invenergy CF" or ???Seller???) will make available at wholesale under this Tariff:  
	(a) electric energy; 
	(b) electric capacity; and 
	(c) the following ancillary services:
	(i)	PJM:  Seller offers regulation and frequency response service, energy imbalance service, and operating reserve service (which includes spinning, 10-minute, and 30-minute reserves) for sale into the market administered by PJM Interconnection, L.L.C. ("PJM") and, where the PJM Open Access Transmission Tariff permits, the self-supply of these services to purchasers for a bilateral sale that is used to satisfy the ancillary services requirements of the PJM Office of Interconnection.
	(ii)	New York:  Seller offers regulation and frequency response service, and operating reserve service (which include 10-minute non-synchronous, 30-minute operating reserves, 10-minute spinning reserves, and 10-minute non-spinning reserves) for sale to purchasers in the market administered by the New York Independent System Operator, Inc.
	(iii)	New England:  Seller offers regulation and frequency response service (automatic generator control), operating reserve service (which includes 10-minute spinning reserve, 10-minute non-spinning reserve, and 30-minute operating reserve service) to purchasers within the markets administered by the ISO New England, Inc.
	(iv)	California:  Seller offers regulation service, spinning reserve service, and non-spinning reserve service to the California Independent System Operator Corporation ("CAISO") and to others that are self-supplying ancillary services to the CAISO.
	(v) 	Midcontinent ISO:  Seller offers regulation service and operating reserve service (which include 10-minute spinning reserve and 10-minute supplemental reserve) for sale to the Midcontinent Independent System Operator, Inc. (???MISO???) and to others that are self-supplying ancillary services to MISO.
	(vi)	Third Party Ancillary Services:  Seller offers all of the following third-party ancillary services:  Regulation and Frequency Response Service, Reactive Supply and Voltage Control Service, Energy and Generator Imbalance Service, Operating Reserve-Spinning, and Operating Reserve-Supplemental.  Sales will not include the following:  (1) sales to an RTO or an ISO, i.e., where that entity has no ability to self-supply ancillary services but instead depends on third parties; and (2) sales to a traditional, franchised public utility affiliated with the third-party supplier, or sales where the underlying transmission service is on the system of the public utility affiliated with the third-party supplier.  Sales of Operating Reserve-Spinning and Operating Reserve-Supplemental will not include sales to a public utility that is purchasing ancillary services to satisfy its own open access transmission tariff requirements to offer ancillary services to its own customers, except where the Commission has granted authorization.?? Sales of Regulation and Frequency Response Service??and Reactive Supply and Voltage Control Service will not include sales to a public utility that is purchasing ancillary services to satisfy its own open access transmission tariff requirements to offer ancillary services to its own customers, except at rates not to exceed the buying public utility transmission provider???s OATT rate for the same service or where the Commission has granted authorization.
2.	Applicability.  This Tariff is applicable to all wholesale sales by Invenergy CF of electric energy, electric capacity, and ancillary services listed in Section 1 of this Tariff not otherwise subject to a tariff or rate schedule of Invenergy CF that is on file with Commission.
3.	Rates.  All sales shall be made at rates established by agreement between the purchaser and Invenergy CF.
4.	Other Terms and Conditions.  All other terms and conditions of sales shall be established by agreement between the purchaser and Invenergy CF.
5.	Revisions.  This Tariff may be revised by Invenergy CF by unilaterally making the appropriate filing with the Commission pursuant to the provisions of Section 205 of the Federal Power Act. 
6.	Duration.  This Tariff shall continue in effect until terminated or changed.  Such termination or change shall take effect in accordance with the applicable regulatory requirements.
7.	Compliance with Commission Regulations.  Seller shall comply with the provisions of 18 CFR Part 35, Subpart H, as applicable, and with any conditions the Commission imposes in its orders concerning Seller???s market-based rate authority, including orders in which the Commission authorizes Seller to engage in affiliate sales under this tariff or otherwise restricts or limits the Seller???s market-based rate authority.  Failure to comply with the applicable provisions of 18 CFR Part 35, Subpart H, and with any orders of the Commission concerning Seller???s market-based rate authority, will constitute a violation of this tariff.
8.	Limitations and Exemptions Regarding Market-Based Rate Authority.  In Invenergy Cannon Falls, LLC, Docket No. ER07-277-000 at 3 (Jan. 5, 2007) (unpublished letter order), the Commission granted Invenergy CF the following waivers and blanket authorization:
	(a)	Waiver of the accounting, reporting, and other requirements of 18 C.F.R. Parts 41 (accounts, records, and memorandum), 101 (uniform system of accounts) and 141 (statement and reports) with the exception of Sections 141.14 and 141.15;
	(b)	Waiver of the reporting requirements of Subparts B and C of Part 35 of the Commission???s regulations, except Sections 35.12(a), 35.13(b), 35.15 and 35.16; and
	(c)	Blanket authorization under 18 C.F.R. Part 34 of all future issuances of securities and assumptions of liability.
9.	Seller Category:  Seller is a Category 2 seller, as defined in 18 CFR ??35.36(a), in the Central Region.  Seller is a Category 1 Seller, as defined in 18 C.R. ?? 35.36(a), in each of the Northeast, Southeast, Southwest Power Pool, Northwest, and Southwest Regions.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>425</filing_id>
      <filing_title>Revised Market-Based Rate Tariff Filing</filing_title>
      <filing_type>10</filing_type>
      <associated_filing_id>424</associated_filing_id>
      <associated_record_id>1200</associated_record_id>
      <associated_option_code>A</associated_option_code>
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2016-08-02</current_effective_date>
      <ferc_order_date>2016-07-07</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
  </ferc_filing_data>
</Document>