<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Document xmlns="http://ferc.gov/etariffExport.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ferc_filing_data>
    <schema_version>2</schema_version>
    <company_id>C011550</company_id>
    <lead_applicant_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
    <tariff_id>1</tariff_id>
    <tariff_title>NGPA 311 SOC</tariff_title>
    <tariff_export_date>2025-09-16T20:51Z</tariff_export_date>
    <export_schema_version>2</export_schema_version>
    <record_data>
      <record_id>1</record_id>
      <option_code>A</option_code>
      <record_title>Statement of Operating Conditions</record_title>
      <record_content_desc>NGPA 311</record_content_desc>
      <record_version_num>1.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>100</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2022-05-01</proposed_effective_date>
      <priority_order>105</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>311 STATEMENT OF OPERATING CONDITIONS
FOR
WAHA GAS STORAGE LLC
VERSION 1.0.0
      
      EFFECTIVE MAY 1, 2022
      
      
      
eTariff Information: 
Tariff Submitter: Waha Gas Storage LLC
FERC Tariff Program Name: FERC NGPA Gas Tariff
Tariff Title: Waha Gas Storage LLC Statement of Operating Conditions Applicable to NGPA Section 311 Storage Service 
Tariff Record Proposed Effective Date: May 1, 2022
Tariff Record Title: Statement of Operating Conditions
Option Code: A
      


TABLE OF CONTENTS
1.	INTRODUCTORY STATEMENT	3
2.	DEFINITIONS	3
3.	INTERSTATE STORAGE SERVICES	9
4.	FEES FOR SERVICES	10
5.	PROCEDURES FOR REQUESTING SPECIFIC SERVICES	12
6.	NOMINATIONS	13
7.	INTERRUPTIONS	17
8.	RESTRICTIONS ON NOMINATIONS, EXCESS NOMINATIONS, INVENTORY MANAGEMENT, AND INVENTORY TRANSFERS	18
9.	FAILURE TO REDELIVER LOANED GAS ON SPECIFIED DATE	21
10.	CUSTOMER INVENTORY AT END OF TRANSACTION PERIOD	22
11.	FORCE MAJEURE	22
12.	WARRANTY OF TITLE AND INDEMNIFICATION	24
13.	POSSESSION, RISK OF LOSS AND USE OF GAS	24
14.	MEASUREMENT	25
15.	QUALITY	28
16.	MAINTENANCE WORK CURTAILMENTS	29
17.	ALLOCATION OF RECEIPT AND DELIVERY RIGHTS	30
18.	BALANCING OF QUANTITIES	30
19.	CREDIT REQUIREMENTS	31
20.	BILLINGS AND PAYMENT	32
21.	LAW AND VENUE	36
22.	LIMITATION ON DAMAGES	36
23.	NOTICES AND PAYMENTS	37
24.	MISCELLANEOUS PROVISIONS	37
25.	DEFAULT	39
STATEMENT OF RATES	40
SCHEDULE "A"	41
SCHEDULE "B"	43
SCHEDULE "C"	45



STATEMENT OF OPERATING CONDITIONS
1. INTRODUCTORY STATEMENT
1.1. This Statement of Operating Conditions describes how Waha Gas Storage, LLC ("Waha Gas Storage" or "WGS"), shall provide Firm and Interruptible Storage and related transportation Services, as well as Parking and Loaning services, pursuant to Section 311 of the Natural Gas Policy Act of 1978 ("NGPA") and the regulations thereunder. If by providing storage and parking and loaning services under NGPA Section 311, WGS's status as an intrastate pipeline that is exempt from Natural Gas Act jurisdiction is impacted, altered, or threatened in any way, by virtue of any change in statutes, regulations, or other applicable law of any kind, then WGS reserves the right to terminate all services rendered under Section 311 of the NGPA and all Service Agreements and applicable Service Orders related thereto, and to withdraw this Statement of Operating Conditions, all effective on the Day before any such change in statutes, regulations, or other applicable law. Similarly, WGS reserves the right not to offer or commence any Service, or to discontinue any Interruptible Service if, in WGS's discretion, any impairment of intrastate Firm Service could result. In light of the foregoing, WGS presents this Statement of Operating Conditions under which WGS will offer NGPA Section 311 Storage Services on its system.
1.2. WGS has elected to utilize the provisions of Section 284.123(b)(2)(i) of the Federal Energy Regulatory Commission's ("FERC") regulations to establish market-based rates which WGS may charge for Storage Services rendered pursuant to NGPA Section 311(a)(2).
1.3. From time to time it may become necessary to update or revise this Statement of Operating Conditions. At such time, WGS will serve to all Customers a copy of the proposed updates or revisions. WGS shall have the right to propose, file and make effective with the FERC, revisions to this Statement of Operating Conditions for the purpose of changing the provisions there of effective as to the Customer, except that WGS shall have no right to alter the rates or fees for Services rendered pursuant to a fully executed Service Agreement, except such alterations to the rates or fees that are specifically permitted pursuant to a specific Service Agreement. The filing of such applicable changes and revisions to this Operating Statement shall be without prejudice to the right of the Customer to contest or oppose the effectiveness of such filing.
2. DEFINITIONS
In this Agreement, any Service Agreement and in any Service Orders or Nominations made pursuant to a Service Agreement, the following terms shall have the meanings given below. Where appropriate, the plural shall be deemed to include the singular and the singular shall contain the plural.
2.1. "Agreement" means the terms of this Statement of Operating Conditions together with the applicable Service Agreement (including all Schedules) as such may be amended and supplemented from time to time.
2.2. "Btu" means one British thermal unit and is defined as the amount of heat required to raise the temperature of one (1) pound of water from fifty-nine degrees Fahrenheit (59o F) to sixty degrees Fahrenheit (60o F) at a constant pressure of fourteen and sixty-five hundredths pounds per square inch absolute (14.65 psia). Total Btus shall be determined by multiplying the total volume of natural gas delivered times the gas heating value expressed in Btus per cubic foot of natural gas adjusted on a dry basis.
2.3. "Business Day" means Monday through Friday, excluding Federal Banking Holidays.
2.4. "Commodity Charge" means the commodity fee for all Services, as agreed to by WGS and Customer and stated in the applicable Service Order, multiplied by the number of Btus of Gas, including Fuel, Delivered by Customer to WGS at the Receipt Point or Delivered by WGS to Customer at the Delivery Point.
2.5. "Completion Rate" means the fee per MMBtu payable by Customer for Gas paid back to WGS for completion of a Loan or on Gas withdrawn for a completion of a Park as stated in an applicable Service Order.
2.6. "Central Time" means Central Standard Time or Central Daylight Time, as applicable.
2.7. "Customer" means anyone who has executed a Service Agreement with WGS.
2.8. "Customer Inventory" means the sum of the quantities of Gas Delivered by Customer to WGS at the Receipt Point(s) and stored, transported or parked in the Facilities for Customer's account, less the sum of the quantities of Gas Delivered by WGS to Customer at the Delivery Point(s), and less any Fuel. There will be a separate Customer Inventory maintained for each Service Order.
2.9. "Daily Reference Price" means the lowest price of the range of prices reported as the daily "Absolute" price for "Waha" on the Platts ("Platts") Daily Gas Price Index. If this publication is not available, WGS will use, as a substitute, a daily, published price representative of Gas in the Waha Hub Area.
2.10. "Day" or "Daily" means a period of 24 consecutive Hours beginning and ending at 9 o'clock a.m. Central Time, or such other time period as NAESB may define as a "day" for the purposes of Nominations, measurement or for other operational reasons.
2.11. "Deliver," "Delivery" or "Delivered" means the physical transfer of custody of Gas (or of natural gas in limited circumstances as set forth in Section 15.3) to or from the Facilities and, when applicable to a Loaning Service, may include Redelivered Gas.
2.12. "Delivery Point(s)" means the point at which WGS Delivers Gas to Customer or for Customer's account. Unless otherwise stated in the applicable Service Order, the Delivery Point will be the Storage Withdrawal Point.
2.13. "Demand Charge" means the Monthly fee paid for Firm Storage, Parking and Loaning Services made available to Customer regardless of any quantities injected or withdrawn or associated with Initial or Completion Rates for a Transaction, as agreed to by WGS and Customer in the applicable Service Order, including a fee per MMBtu multiplied by the number of MMBtus of Firm Storage Services available to Customer.
2.14. "Excess Inventory Rate" means either the Daily or Monthly fee per MMBtu payable by Customer, as appropriate, for Customer Inventory that (1) remains in the Facilities beyond the termination date of a Service Order, or (2) exceeds at any time during the term of a Service Order, the Customer's Reserved Storage Capacity, Maximum Interruptible Inventory or Maximum Aggregate Parking Quantity pursuant to such Service Order.
2.15. "Extended Loaning Rate" means either the Daily or Monthly fee per MMBtu payable by Customer for Gas that Customer has failed to Redeliver to WGS for a Transaction for Loaning Services at the termination of the applicable Transaction Period, as stated in the applicable Loaning Service Order.
2.16. "Facilities" means the underground natural gas storage caverns, the storage wells, surface facilities, pipelines and appurtenances thereto owned and operated by WGS in Reeves County, Texas.
2.17. "Federal Banking Holiday" means a holiday observed by the Federal Reserve Bank in Dallas, Texas.
2.18. "FERC" means the Federal Energy Regulatory Commission.
2.19. "Firm" means a Service that is not subject to a prior claim by another Customer of WGS or another type of Service and receives the same priority as any other type of Firm Service as further described in Section 17 of this Statement of Operating Conditions, subject to the Force Majeure provisions and other terms and conditions of the Agreement.
2.20. "Force Majeure" has the meaning provided in Section 11 of this Statement of Operating Conditions.
2.21. "Fuel" means the quantity of Gas, expressed as a percentage of the MMBtus of Gas injected into the Facilities for any Transaction, that Customer provides to WGS as fuel in connection with the Services provided, as stated in the applicable Service Order.
2.22. "Gas" means natural gas meeting the most restrictive of the quality standards and specifications of this Statement of Operating Conditions and of the Interconnecting Pipelines connected to the Facilities.
2.23. "Hour" means a period of sixty (60) minutes.
2.24. "Imbalance" means the difference between the Gas volumes actually delivered and/or received by Customer and the Gas volumes nominated and confirmed for receipt and/or delivery at the Facilities.
2.25. "Initial Rate" means the fee per MMBtu payable by Customer for Gas tendered for Park or taken for Loan as stated in an applicable Service Order.
2.26. "Injection Overrun Rate" means the fee per MMBtu payable by Customer for gas injected as part of a Transaction for Storage Service above Customer's MDIQ.
2.27. "Injection Rate" means the fee per MMBtu payable by Customer for gas injected as part of a Transaction for Storage Service within Customer's MDIQ.
2.28. "Interconnecting Pipeline" means the transporting pipeline directly connected to one or more Storage Withdrawal Point(s) or Storage Receipt Point(s).
2.29. "Interruptible" means a Service that is interruptible at any time for any reason, as further set out in Section 7.1 of this Statement of Operating Conditions.
2.30. "Inventory/Balance Rate" means the fee per MMBtu payable by Customer for the volume of Customer Inventory or Loaned Quantities under a Transaction as stated in an applicable Service Order.
2.31. "Investment Credit Rating" means a credit rating of at least "BBB-", "Baa3", or better, rated by S&amp;P Global Inc. ("S&amp;P") and Moody's Investors Service respectively, or the equivalent. 
2.32. "Loaned Quantities" means the sum of the quantities of Gas Delivered by WGS to Customer for Customer's account less the quantities of Gas Redelivered to WGS by Customer at the Receipt Point, as stated in the applicable Service Order.
2.33. "Loaning Service" is a Service that allows Customer to receive Gas from WGS for Customer's short-term use and then return a thermally equivalent quantity of Gas at a specified time. Customer will receive a stated quantity of Gas at the Delivery Point and after the specified time Customer will Redeliver a thermally equivalent quantity of Gas to the Receipt Point, in accordance with the terms of the applicable Service Order. Loaning Service may be Firm or Interruptible.
2.34. "Market Price" means the highest price of the range of prices reported as the daily "Absolute" price for "Waha" on the Platts ("Platts") Daily Gas Price Index. If this publication is not available, WGS will use, as a substitute, a daily, published price representative of Gas in the Waha Area.
2.35. "Maximum Aggregate Loaning Quantity" means the maximum aggregate quantity of Gas that Customer is entitled to receive from WGS under a Transaction for Loaning Service, as stated in the applicable Service Order.
2.36. "Maximum Aggregate Parking Quantity" means the maximum aggregate quantity of Gas that Customer may maintain in the Facilities at any time under a Transaction for Parking Services, as stated in the applicable Service Order.
2.37. "Maximum Daily Injection Quantity" or "MDIQ" means the maximum quantity of Gas that Customer may inject into the Facilities on any Day as part of a Transaction for Storage Service, as stated in the applicable Service Order.
2.38. "Maximum Daily Loan Quantity" means the maximum quantity of Gas that Customer is entitled to receive from WGS on any Day for a Transaction for Loaning Services, as stated in the applicable Service Order.
2.39. "Maximum Daily Return Quantity" means the maximum quantity of Gas that Customer is entitled to Redeliver to WGS on any Day for a Transaction for Loaning Services, as stated in the applicable Service Order.
2.40. "Maximum Daily Withdrawal Quantity" or "MDWQ" means the maximum quantity of Gas that Customer may withdraw from the Facilities on any Day for a Transaction for Storage Services, as stated in the applicable Service Order.
2.41. "Maximum Interruptible Storage Inventory" means the maximum Customer Inventory that can be stored as stated in a Service Order for Interruptible Storage Services.
2.42. "Mcf" means the quantity of Gas occupying one thousand (1,000) cubic feet at a temperature of sixty degrees Fahrenheit (60oF) and at a pressure of fourteen and seventy-three hundredths pounds per square inch absolute (14.65 psia).
2.43. "MMBtu" means a quantity of Gas containing one million (1,000,000) Btus.
2.44. "Month" or "Monthly" means a period of time beginning on the first Day of the calendar month and ending immediately prior to the commencement of the first Day of the next calendar month.
2.45. "NAESB" means the North American Energy Standards Board.
2.46. "Net Present Value Calculation" or "NPV" means the calculated present value utilizing a standard net present value calculation using a discount factor equal to the then-current interest rate determined in accordance with Section 154.501(d) of the Commission's Rules and Regulations. 
2.47. "Nomination" means a request by Customer to WGS for Services constituting a Transaction under an executed Service Order.
2.48. "Overrun Rate" means the fee per MMBtu stated in the applicable Service Order for Storage Services that will apply to any Nomination accepted by WGS that exceeds the Daily maximum quantity of Service available to Customer for that Transaction. The Overrun Rate will be stated as a maximum amount that can be charged.
2.49. "Parking Service" is a Service that provides for the short-term custody of a Customer's Gas at the Facilities. It involves the Delivery of a specified quantity of Gas by Customer to WGS at the Receipt Point and the subsequent Delivery of an equivalent quantity of Gas by WGS to Customer at the Delivery Point, in accordance with the terms of the applicable Service Order(s). Parking Service may be Firm or Interruptible.
2.50. "Party" means either WGS or Customer.
2.51. "Receipt Point" means the point at which WGS receives Gas for Customer's account. Unless otherwise stated in the applicable Service Order, the Receipt Point will be the Storage Injection Point.
2.52. "Redeliver," "Redelivery" or "Redelivered" means Gas that is returned to WGS by Customer as part of a Loaning Services Transaction.
2.53. "Requesting Customer" means anyone who has requested Services or a Service Agreement from WGS, but has not executed a Service Agreement.
2.54. "Reserved Storage Capacity" means the maximum quantity of Gas that Customer may maintain in the Facilities at any time under a Transaction for Firm Storage or Firm Parking Services, as stated in the applicable Service Order.
2.55. "Risk Adjustment" means the multiplier applied to all fees applicable under the Customer's Service Agreement based upon the Customer's Risk of Default Factor.  The multiplier applied is one (1) plus the Risk of Default Factor.  The Risk Adjustment shall not be applied if the Customer provides sufficient Collateral to equal the difference between (i) the NPV of the revenue for the Service Agreement, adjusted by the Customer's Risk of Default Factor, and (ii) the NPV of the revenue from a Service Agreement with an Investment Credit Rating Customer with the same term.  For purposes of this Section 2.55, collateral shall mean sufficient security in a form as specified in Section 19.1.2(i) - (iii).  WGS will utilize a partial Risk Adjustment commensurate with the percentage of Collateral provided if the Collateral is insufficient to eliminate the Risk Adjustment. 
2.56. "Risk of Default Factor" means the differential between (i) the Customer's probability of default, which is calculated by using the most recent S&amp;P "Cumulative Global Corporate Default Rates" tables ("S&amp;P Table") from its most recent Annual Global Corporate Default and Rating Transition Study (subject to name changes by S&amp;P), and (ii) the indicated probability of default for a Customer with an Investment Credit Rating.  WGS will substitute the credit rating of a Customer's guarantor or parent company, whichever is higher, provided that such guarantor or parent company has provided a guarantee for all of the obligations under the specific service agreement at issue.  For any Customer that does not have, or whose parent company or guarantor does not have, a credit rating from one or more of S&amp;P, Moody's Investors Services, or an equivalent, WGS will assign an equivalent rating using a credit scoring methodology, applied on a nondiscriminatory basis, provided such parent company or guarantor has provided a guarantee for all of the obligations under the specific service agreement at issue.
2.57. "Service" or "Services" means the types of storage and transportation services described in Section 1.1 of this Agreement.
2.58. "Service Agreement" means a Storage Service Agreement between WGS and a Customer.
2.59. "Service Order" means a form setting forth the terms of a Transaction that is effective in accordance with this Statement of Operating Conditions and the applicable Service Agreement, substantially in the form attached as Schedules "A", "B", and "C" for the Service(s) to be provided for a Transaction.
2.60. "Storage Injection Point" and "Storage Withdrawal Point" means the point of interconnection of the Facilities and the meter station of the Interconnecting Pipeline(s), or another Receipt Point or Delivery Point, as designated in the Nomination.
2.61. "Storage Service" means a Service that allows Customer to inject, withdraw and/or store Gas at the Facilities during a stated period of time, subject to the rights, obligations and limitations stated in the applicable Service Agreement, and the applicable Service Order.
2.62. "Transaction" means a Service provided to Customer under the terms of a Service Order.
2.63. "Transaction Period" means the period of time during which a Transaction will be performed, as stated in the applicable Service Order.
2.64. "Week" means a period of seven (7) consecutive Days beginning at 9:00 a.m. Central Time on each Monday and ending at the same on the next succeeding Monday.
2.65. "Withdraw Overrun Rate" means the fee per MMBtu payable by Customer for gas withdrawn as part of a Transaction for Storage Service above Customer's MDWQ.
2.66. "Withdraw Rate" means the fee per MMBtu payable by Customer for gas withdrawn as part of a Transaction for Storage Service within Customer's MDWQ.
3. INTERSTATE STORAGE SERVICES
3.1. Requests for Storage Services
3.1.1. From time to time, subject to WGS having available capacity, Requesting Customers meeting the eligibility requirements set forth herein and the execution of a Service Agreement, WGS will offer Services to Requesting Customers on a non-discriminatory basis. A Service Agreement shall be for a term of at least one (1) Month.
3.1.2. A Service Agreement is required for all services hereunder and will be subject to all terms and provisions of this Statement of Operating Conditions, its applicable Service Agreement (including any applicable Service Order(s)).  Any potential Customer desiring to obtain services from WGS must request a Service Agreement from WGS.  The request may be in writing, by telephone or electronic medium.  Customer shall provide documentation to demonstrate its creditworthiness to the satisfaction of WGS in accordance with Section 19 hereof.
      Requests for Service Agreement may be sent to:
				100 Congress Ave.
      Suite 2200
      Austin, TX 78701
      United States of America
      Main Tel.: (512) 953-2100
      Email:  Marketing@wwm-llc.com
      
Each request shall include: (i) the exact legal name of the Requesting Customer requesting Storage Service; (ii) the type of Storage Service(s); (iii) the proposed Maximum Daily Injection/Withdrawal Quantities that it would initially request; (iv) the Reserved Storage Capacity, Maximum Interruptible Storage Inventory, Maximum Aggregate Parking Quantity or the Maximum Aggregate Loan Quantity, depending on the Storage Service(s) requested; and, (v) the proposed term to provide the Service.
3.1.3. Any and all Transactions under this Statement of Operating Conditions must be interstate Services eligible under, and shall be fully subject to, all the applicable requirements of the FERC, as set forth in Part 284, subpart C of the FERC regulations, as they may be revised from time to time. A Customer's request for Service shall constitute its warranty that it satisfies those requirements. WGS shall have the right to request information from its Customer, whether a Requesting Customer or a Customer which has executed a Service Agreement, to verify its eligibility for Service under the applicable regulations.
3.1.4. WGS shall consider the Storage Service request and contact the Requesting Customer regarding whether it can provide such Service and, if so, will provide the details (including fees, quantity, and other essential terms) according to which WGS is willing to provide such Service. If WGS can provide some, but not all, of the requested Service, WGS will advise the Requesting Customer of the maximum quantities that WGS will be able to accommodate. A Service request shall not be valid, and WGS shall not be required to provide any such Service, if: (i) WGS determines, based on a credit analysis, that the Requesting Customer does not have credit sufficient to WGS's satisfaction as described in Section 19 below; (ii) the Service requested would require the construction, modification, expansion or acquisition of either the Facilities or any additional facilities; (iii) the Service requested would not comply with this Statement of Operating Conditions; (iv) WGS lacks adequate capacity to provide the requested Service; or (v) the parties are unable to agree upon mutually acceptable fees for the Service.
3.1.5. Except as provided in paragraph 5.2 below, when the Requesting Customer and WGS have agreed upon the essential terms regarding a request for Service, WGS shall tender a Service Agreement to the Requesting Customer reflecting such agreed upon terms, and the Service Agreement shall be invalid unless executed by the Requesting Customer and returned to WGS within thirty (30) days after WGS tenders the Service Agreement for execution.
3.1.6. A Customer that has executed a Service Agreement with WGS shall have the right to request specific Services pursuant to the provisions of Section 5 below.
4. FEES FOR SERVICES
The fee(s) for Services provided under the terms of this Agreement will be agreed to by WGS and Customer. The agreed upon fees will be stated in the applicable Service Agreement and/or Service Order and in the case of a Park or Loan, may be stated as a lump sum rather than giving separate detail for each fee included.
4.1. Fees for Firm Storage or Firm Parking Services during a billing Month may include:
(a) The Demand Charge;
(b) The Commodity Charge(s);
(c) Fuel (% of Injection volume);
(d) Any applicable Overrun Rate;
(e) Any applicable Excess Inventory Rate;
(f) Any other fees agreed to by Customer and WGS that are applicable to the Firm Storage or Parking Service; and
(g) All applicable taxes, including any taxes on Fuel supplied by Customer.
4.2. Fees for Interruptible Storage or Interruptible Parking Services during a billing Month may include:
(a) The Inventory/Balance Rate;
(b) The Commodity Charge(s);
(c) Fuel (% of Injection volume);
(d) Any applicable Overrun Rate;
(e) Any applicable Excess Inventory Rate;
(f) Any other fees agreed to by Customer and WGS that are applicable to the Interruptible Storage or Parking Service; and
(g) Any applicable taxes, including any taxes on Fuel supplied by Customer.
4.3. Fees for Loaning Service, whether Firm or Interruptible, during a billing Month may include:
(a) The Demand Charge (for Firm Loaning only);
(b) The Commodity Charge(s);
(c) Fuel (% of Injection volume);
(d) Any applicable Overrun Rate,
(e) Any applicable Extended Loaning Rate;
(f) Any other fees agreed to by Customer and WGS that are applicable to Loaning Service; and
(g) Any applicable taxes, including any tax on Fuel supplied by Customer.
5. PROCEDURES FOR REQUESTING SPECIFIC SERVICES
5.1. WGS and a Customer that has executed a Service Agreement may from time to time, subject to the provisions of this Section 5, enter into a Transaction where the specific terms of any such Service shall be memorialized in a Service Order similar to the form attached to this Statement of Operating Conditions as Schedules "A", "B" and "C". Each executed Service Order shall be for only a single type of Service: Firm or Interruptible Storage, Firm or Interruptible Parking, Firm or Interruptible Loaning.
(a) For Firm Storage Service, the required terms include Reserved Storage Capacity, Transaction Period, MDIQ and MDWQ, applicable Service fees and fee structure.
(b) For Interruptible Storage Service, the required terms include the applicable Service fees and fee structure, injection, withdrawal and storage quantities and the Transaction Period.
(c) For Parking Service, the required terms include the Transaction Period, Maximum Aggregate Parking Quantity, MDIQ, MDWQ, applicable Service fees and fee structure, and whether the Service is Firm or Interruptible.
(d) For Loaning Service, the required terms include the Transaction Period, Maximum Aggregate Loaning Quantity, Maximum Daily Loan Quantity, Maximum Daily Return Quantity, applicable Service fees and fee structure, and whether the Service is Firm or Interruptible.
5.2. Once the terms of a Service Order have been agreed upon by Customer and WGS, WGS shall submit the Service Order to Customer for Customer's execution. WGS may submit the Service Order to Customer by electronic mail or other electronic means and Customer may execute the Service Order and send it back to WGS by electronic mail or other electronic means. During hours occurring outside of 7 A.M. Central Time through 5 P.M. Central Time on Business Days, WGS may offer the relevant and required terms to provide a Service using electronic mail and Customer may accept those terms using electronic mail and such an agreement shall be deemed to be a Service Order. Such an agreement shall be binding on both WGS and the Customer. For such agreements reached using electronic mail, WGS and the Customer shall execute the applicable Service Order similar in form to Schedule A, B, or C with its terms within two (2) Business Days. If a Customer nominates overrun quantities for a Service after receiving an offer by WGS via electronic mail to provide such overrun service at a specified rate and term, that Nomination shall constitute acceptance of the terms offered by WGS and constitute a binding agreement on WGS and Customer and shall not require any additional writings including without limitation a Service Order. Nothing herein shall be deemed to obligate WGS to render any Services to or enter into a Transaction with Customer until both Customer and WGS have executed a Service Order for that Service as described by this Section 5.2.
5.3. If WGS has executed a Service Order prior to sending it to Customer, that Service Order shall, at the election of WGS and without further notice to Customer, become null and void unless executed by Customer and returned to WGS within two (2) Business Days after the date on which WGS executed the Service Order or the date on which WGS faxed, emailed or transmitted by other electronic means the executed Service Order to Customer for Customer's signature, whichever is the later date.
6. NOMINATIONS
6.1. In order to receive the Services set forth in an executed Service Order, Customer must submit a Nomination in accordance with the procedures set forth in this Section 6.1.
(a) Upon a Service Order becoming effective, Customer shall be entitled to nominate the requested Service(s) in accordance with the terms of such Service Order. Customer's Nomination must be made to WGS by using WGS's or WGS's affiliate's Web-based online nomination system.  WGS will schedule and conform Customer's Nomination on the applicable Interconnecting Pipeline's EBB, in accordance with the provisions of this Statement of Operating Conditions, the Service Agreement and the applicable Service Order.  Customer must have a Service Order in place before a Nomination can be submitted.  WGS, to the extent it is utilizing for its own account any available unused capacity shall submit a Nomination for such service in accordance with the same provisions and shall be treated in the same manner, as all other Nominations pursuant to the Nomination procedures set forth herein and the scheduling and priority of service provisions of this Statement of Operating Conditions.  In the event WGS submits a nomination and is subject to the rules in Section 17, Allocation of Receipt and Delivery Rights, that WGS's Nomination will be scheduled at a rate equal to $0.00 so that in the event priorities of service are determined based upon greatest economic benefit, WGS's Nomination will receive a lower priority than paying Customers.
(b) WGS supports the following standard Nomination cycles (all times are Central Clock Time pursuant to NAESB WGQ Standard No. 0.3.17), as the same may be modified by NAESB:
(i) The Timely Nomination Cycle
      On the Day prior to Gas flow:
* 1:00 p.m. Nominations leave control of Customer;
* 1:15 p.m. Nominations are received by WGS (including from Title Transfer Tracking Service Providers (TTTSPs));
* 1:30 p.m. WGS sends the quick response to Customer;
* 4:30 p.m. WGS received completed confirmations from confirming parties;
* 5:00 p.m. Customer and point operator receive scheduled quantities from WGS.
Scheduled quantities resulting from Timely Nominations should be effective at the start of the next Day.
(ii) The Evening Nomination Cycle
      On the Day prior to Gas flow:
* 6:00 p.m. Nominations leave control of Customer;
* 6:15 p.m. Nominations are received by WGS (including from TTTSPs);
* 6:30 p.m. WGS sends quick response to Customer;
* 8:30 p.m. WGS receives completed confirmations from confirming parties;
* 9:00 p.m. Customer and point operator receive scheduled quantities from WGS, including bumped parties.
Scheduled quantities resulting from Evening Nominations should be effective at the start of the next Day.
(iii) The Intraday 1 Nomination Cycle
      On the current Day:
* 10:00 a.m. Nominations leave control of Customer;
* 10:15 a.m. Nominations are received by WGS (including from TTTSPs);
* 10:30 a.m. WGS sends quick response to Customer;
* 12:30 p.m. WGS receives completed confirmations from confirming parties;
* 1:00 p.m. Customer and point operator receive scheduled quantities from WGS, including bumped parties.
Scheduled quantities resulting from Intraday 1 Nominations should be effective at 2:00 p.m. on the current Day.
(iv) The Intraday 2 Nomination Cycle
      On the current Day:
* 2:30 p.m. Nominations leave control of Customer;
* 2:45 p.m. Nominations are received by WGS (including from TTTSPs);
* 3:00 p.m. WGS sends quick response to Customer;
* 5:00 p.m. WGS receives completed confirmations from confirming parties;
* 5:30 p.m. Customer and point operator receive scheduled quantities from WGS, including bumped parties.
Scheduled quantities resulting from Intraday 2 Nominations should be effective at 6:00 p.m. on the current Day.
(v) The Intraday 3 Nomination Cycle
      On the current Day:
* 7:00 p.m. Nominations leave control of Customer;
* 7:15 p.m. Nominations are received by WGS (including from TTTSPs);
* 7:30 p.m. WGS sends quick response to Customer;
* 9:30 p.m. WGS receives completed confirmations from confirming parties;
* 10:00 p.m. Customer and point operator receive scheduled quantities from WGS.
Scheduled quantities resulting from Intraday 3 Nominations should be effective at 10:00 p.m. on the current Day.
Bumping is not allowed during the Intraday 3 Nomination Cycle.  The Timely Nomination Cycle and all subsequent Nomination cycles follow the standard scheduling priority in which Firm Service has the highest scheduling priority, followed by Interruptible Service and authorized overrun service.  But different rules determine whether a Nomination, once scheduled, can be bumped or displaced in the Evening and Intraday Nomination cycles.  In those cycles, any firm service already scheduled cannot be bumped or displaced by another firm Nomination.  Already scheduled interruptible service can be bumped by a firm Nomination at the Evening Nomination Cycle and the Intraday 1 and Intraday 2 cycles, but cannot be bumped at the last Intraday 3 (or no-bump) cycle. 
6.2. A Nomination made in accordance with the foregoing shall be binding on WGS and Customer, subject to the terms of this Agreement and the applicable Service Order, and subject to acceptance by the Interconnecting Pipeline(s). Such Nomination shall remain in effect until (i) duly changed by the Customer, (ii) interrupted by WGS or the Interconnecting Pipeline for operational reasons, or, (iii) if the Transaction is for Interruptible Service, service is interrupted to serve customers with a higher Service priority, or, (iv) if the Nomination is for overrun quantities, service is interrupted to serve Firm Service or to serve Interruptible Service nominated before or at that same time as the overrun quantities, or (v) is otherwise interrupted in accordance with the terms of this Agreement or the applicable Service Order.
6.3. Customer's Nomination shall be in good faith and shall be based on Customer's reasonable efforts to estimate the quantity of Gas to be Delivered for the next Hour, Day, Week or Month. Customer shall not intentionally nominate more or less Gas than is needed by Customer, except as may be needed for balancing purposes. Customer may not inject and withdraw simultaneously without the approval of WGS; WGS will grant or deny requests to do so on a non-discriminatory basis.
6.4. Customer or WGS may, at any time, request prospective revisions to any Nomination, once executed or otherwise made. Any such requested revisions are subject to agreement by the other Party in writing, subject to the provisions of Section 6.1.
6.5. All Nominations, scheduling, storage and priorities for Service shall be subject to demands, priorities, requests and/or constraints made or imposed by Interconnecting Pipeline(s).
6.6. WGS reserves the right to reject any Nomination(s) or decline to provide all or a portion of the Services set forth in any Service Order(s) if the aggregate amounts payable by Customer for the requested Services, when added to all other amounts owed by Customer to WGS under this or any other Agreement, would exceed the credit limit established for Customer pursuant to Section 19 hereof.
6.7. WGS may change the foregoing Nomination procedures from time to time on thirty (30) Days prior written notice to Customer, as may be necessary to meet the operational requirements of the Interconnecting Pipeline(s) or WGS.
6.8. WGS reserves the right to pro-rate a Customer's MDIQ or MDWQ for a Nomination that takes effect after the beginning of the Day (9:00 a.m. Central Time). The Customer's partial Day MDIQ or MDWQ as applicable will be calculated by multiplying the original MDIQ or MDWQ by a fraction whose numerator is the number of Hours remaining in the Day as of the effective time of the confirmed nomination and whose denominator is twenty-four (24).
7. INTERRUPTIONS
7.1. Interruptible Services (whether Storage, Parking, or Loaning) hereunder are subject to interruption at any time and for any reason.
(a) To confirm and schedule Customer's Nomination for an Interruptible Service, WGS will consider the available capacity of the Facilities at that time, other Firm and Interruptible injection and withdrawal Nominations, and the aggregate quantity of Gas in storage or Nominated for Services at that time. If WGS is able to confirm Customer's Nomination, it will do so using the procedures outlined in Section 6.
(b) Customer's Interruptible Nominations for injection or withdrawal are subject to interruption at any time when Nominations for Services with a priority superior to Interruptible Service, or prior Nominations with an equal priority, exceed WGS's capacity to provide the Service(s) requested in Customer's Nomination.  WGS will not be liable for any loss or damage to any person or property caused, in whole or in part, by any interruption of Interruptible Service under any Service Agreement.  Customer will indemnify and hold harmless WGS, its officers, agents, employees, and contractors from and against any and all suits, claims, liability, loss, damages, costs (including attorneys' fees and court costs) or encumbrances whatsoever brought by any person or entity against WGS as a result of, or arising out of, any interruption of Interruptible Service under any Service Agreement.
(c) Subject to Section 7.3 below, Customer may be required to remove quantities of Gas previously provided to WGS under Interruptible Storage or Interruptible Parking Service, or return quantities of Gas previously loaned to the Customer under the Interruptible Lending Service. Unless otherwise agreed by Customer and WGS, any interruptible parked quantity not removed as required by Section 7 of the Statement of Operating Conditions shall become the property of WGS at no cost to WGS, free and clear of any adverse claims, and, any interruptible loaned quantity not returned as required by Section 7 of the Statement of Operating Conditions shall be sold to Customer as the price set forth in the notification issued by WGS described in Section 7.3 of this Statement of Operating Conditions.
7.2. Firm Services under this Agreement are subject to interruptions resulting from Force Majeure, maintenance pursuant to Section 16 of this Agreement, operational flow orders and/or curtailments, whether claimed by WGS or any Interconnecting Pipeline.
7.3. WGS shall provide Customer with notice of interruptions at a time and in a manner that is prudent under then-existing conditions or as otherwise provided in this Agreement, and shall be made pursuant to the notification procedures provided in Section 23 of this Statement of Operating Conditions. For notifications to a Customer to remove or return quantities of interruptible stored, parked or loaned Gas, the time period in which Customer must act will be determined based on the necessity to protect the operational integrity of WGS' system to allow WGS to fulfill higher priority commitments. However, absent a mutual agreement between WGS and such Customer, or the need to protect the operational integrity of WGS' system, in no event shall the specified time for the removal or return of interruptible stored, parked or loaned gas be less than three (3) Days from the date of WGS' initial notification. Customer shall comply with notices pursuant to this Section 7.3 in the time and manner specified in such notice. Customer shall inform its suppliers, Interconnecting Pipelines and all others whose actions are required to comply with the notice.
8. RESTRICTIONS ON NOMINATIONS, EXCESS NOMINATIONS, INVENTORY MANAGEMENT, AND INVENTORY TRANSFERS
8.1. WGS shall not be obligated to accept all or part of any Nomination that it determines meets the following conditions:
(a) An injection Nomination that would cause the Customer Inventory under the applicable Service Order to exceed Customer's Reserved Storage Capacity or Customer's Maximum Interruptible Storage Inventory; or
(b) A withdrawal Nomination that is greater than the Customer Inventory at the time of the Nomination; or
(c) A withdrawal or injection Nomination that would exceed the Maximum Daily Withdrawal Quantity or the Maximum Daily Injection Quantity or the maximum quantity of Gas for a Service under an applicable Service Order; or
(d) A Nomination under a Parking Transaction that would result in a receipt by WGS in excess of Customer's Maximum Aggregate Parking Quantity or Daily Maximum Injection Quantity, or a Delivery by WGS in excess of Customer Inventory or its Daily Maximum Withdrawal Quantity with respect to the Transaction; or
(e) A Nomination under a Loaning Transaction that would result in a Delivery by WGS of a quantity of Gas in excess of Customer's Maximum Aggregate Loaning Quantity or Maximum Daily Loan Quantity, or receipt by WGS in excess of Customer's Maximum Daily Return Quantity.
8.2. For Firm Storage or Parking Services, WGS may accept in its discretion, on a not unduly discriminatory basis:
(a) An injection or withdrawal Nomination from Customer that exceeds the MDIQ or MDWQ, subject to Customer paying WGS the applicable Overrun Rate; or
(b) An injection Nomination that would cause Customer Inventory to exceed the Reserved Storage Capacity or Maximum Aggregate Parking Quantity, whichever is applicable, subject to Customer paying the applicable Excess Inventory Rate.
8.3. WGS's acceptance of that part of a Nomination that exceeds the Maximum Daily Injection Quantity, the Maximum Daily Withdrawal Quantity, the Reserved Storage Capacity or the Maximum Aggregate Parking Quantity, as applicable, will be for Interruptible service and the provisions of this Agreement governing Interruptible Storage Service will apply.
8.4. Nothing in this Section 8 shall be construed as obligating WGS to accept any excess Nomination even if WGS's refusal to do so results in Customer breaching its obligations under this Agreement to reduce Customer Inventory to zero by the end of the Transaction Period of the applicable Service Order.
8.5. A Customer receiving Firm Storage or Parking Services shall be responsible for the following management obligations for all of its Customer Inventory:
(a) Customer shall nominate withdrawals from Customer Inventory in sufficient quantities to reduce its Customer Inventory to zero by the end of the Transaction Period, subject to Customer's MDWQ under the applicable Service Order.
(b) If on any Day in any Month during the Transaction Period of any Firm Storage or Parking Service Transaction, Customer Inventory exceeds the applicable Reserved Storage Capacity or Maximum Aggregate Parking Quantity, as applicable, Customer shall pay WGS an Excess Inventory Rate. The Excess Inventory Rate will be the product of (a) the applicable Excess Inventory Rate and (b) the quantity of Customer Inventory on any Day during the Month in excess of Reserved Storage Capacity or Maximum Aggregate Parking Quantity.
(c) Payment of the Excess Inventory Rate shall not entitle Customer to maintain excess Customer Inventory in the Facilities, nor shall WGS's acceptance of payment constitute a waiver of Customer's obligation to manage its Customer Inventory. For clarity, an "excess Customer Inventory" is that quantity of the Customer Inventory for a Customer under any existing Service Order that could be subject to an Excess Inventory Rate under the terms of the Agreement or any applicable Service Order.
8.6. Customer shall be permitted to transfer the Gas in its Customer Inventory to other storage customers of WGS provided such receiving Customer has entered into a Service Agreement with WGS and a Service Order providing for sufficient capacity to accommodate the Customer Inventory being transferred. Customer shall also be permitted to receive Gas in another Customer's Customer Inventory provided sufficient capacity to accommodate the quantity of Gas being transferred is provided for in the applicable Service Order with the Customer receiving the Gas. Customer shall be charged the applicable Commodity Charge associated with Gas injection/withdrawal under the applicable Service Order for the quantity of Gas in MMBtu's transferred plus an administrative fee not to exceed $0.005 per MMBtu, and the other transacting storage Customer shall be charged the applicable Commodity Charge per MMBtu of Gas transferred associated with Gas injection/withdrawal under its respective Service Order plus an administrative fee not to exceed $0.005 per MMBtu. No Fuel will be charged for an inventory transfer transaction.
(a) The provisions of Section 8.6 above notwithstanding, a Customer may not transfer any portion of its inventory to another Customer if such transfer will change the nature of the Service or the jurisdictional status of the Gas. In other words, Gas that is inventoried as Parking must stay Parking, Firm Storage Gas must stay Firm Storage Gas, Interruptible Storage Gas must stay Interruptible Storage Gas, interstate Gas must stay interstate, and intrastate Gas must stay intrastate.
8.7. Subject to WGS's approval, Customer may be permitted to transfer the Gas in its Customer Inventory under a Park Service Order in order to net that quantity against the outstanding quantities withdrawn under a Loan Service Order if, and only if, both the Park Service Order and Loan Service Order are of the same regulatory jurisdiction (i.e., interstate gas transactions must not be netted against intrastate transactions). As agreed to by Customer and WGS, Customer shall be charged the applicable Commodity Charge associated with Gas injection/withdrawal under the applicable Service Order for the quantity of Gas in MMBtu's. As agreed to by WGS and Customer, the injected quantities transferred for a Park may be assessed a Completion Rate and the withdrawn quantities transferred for a Loan may be assessed a Completion Rate. No Fuel will be charged for transfer transactions under paragraph 8.7.
9. FAILURE TO REDELIVER LOANED GAS ON SPECIFIED DATE
9.1. In the event Customer under a Loaning Transaction has not Redelivered all Loaned Quantities on or before the last Day of the Transaction Period, or on such other Day that this Agreement terminates, whichever is the later date, then within ten (10) Days of the termination date, WGS shall notify Customer of the price which Customer shall pay WGS in order to purchase the remaining Loaned Quantities. The Customer shall notify WGS within one (1) Business Day after the day it receives WGS's notice of the Customer's election to either:
(a) Accept WGS's offer to sell, in which case the remaining Loaned Quantities shall be sold by WGS and purchased by Customer at the price set out in WGS's notice and thereafter the Loaned Quantities shall be deemed to be equal to zero (0); or
(b) To extend the term of the Service Order for a period of thirty (30) Days from the end of the original Transaction Period and pay the Extended Loaning Rate set out in the Service Order during the extension to the term.
9.2. If the Customer fails to make an election as aforesaid, it shall be deemed to have elected the option set out in Paragraph 9.1(a). If the term of the Service Order is extended pursuant to Paragraph 9.1(b), then Customer shall Deliver to WGS volumes of Gas at such rates and times as are acceptable to both Parties during the thirty (30) Day period in order that the remaining Loaned Quantities may be reduced to zero. Customer will not be relieved of its obligation to pay WGS for any applicable Commodity Charges associated with reducing the Loaned Quantities to zero. In the event Customer has not Redelivered all Loaned Quantities at the end of the aforesaid thirty (30) Day period, then Customer shall pay WGS a price equal to the greater of:
(a) The Market Price of the Gas on the Day the Gas was Loaned to Customer; or
(b) The Market Price of the Gas on the Day the Gas was to be Redelivered to WGS pursuant to the Service Order; or
(c) The highest daily Market Price for the Gas during the aforesaid thirty (30) Day period.
10. CUSTOMER INVENTORY AT END OF TRANSACTION PERIOD
10.1. If a positive Customer Inventory exists at the end of a Transaction Period or on such other day that a Service Agreement terminates, then within ten (10) Days of the Service Agreement termination date, WGS shall notify Customer of the price which WGS is prepared to pay in order to purchase the remaining Customer Inventory. The Customer shall notify WGS within one (1) Business Day after the day it receives WGS's notice of the Customer's election to either:
(a) Accept WGS's offer to purchase the remaining Customer Inventory in which case the remaining Customer Inventory shall be sold by Customer to WGS at the price set out in WGS's notice and thereafter the Customer Inventory shall be deemed to be equal to zero; or
(b) To extend the term of the Service Order for a period of thirty (30) Days from the end of the original Transaction Period and pay the Excess Inventory Rate or Demand Charge set out in the Service Order during the extension to the term.
10.2. If the Customer fails to make an election as aforesaid, it shall be deemed to have elected the option set out in Paragraph 10.1(a). If the term of the Service Order is extended pursuant to Paragraph 10.1(b), Customer shall withdraw volumes of Gas on an Interruptible basis at such rates and times as are acceptable to both WGS and Customer during the thirty (30) Day period in order that the remaining Customer Inventory may be reduced to zero. Customer will not be relieved of its obligation to pay WGS for any applicable Commodity Charges associated with reducing the Customer Inventory to zero. If there is still positive Customer Inventory at the end of the aforesaid thirty (30) Day period, then Customer shall forfeit any remaining balance to WGS.
11. FORCE MAJEURE
11.1. If either Party is rendered unable, wholly or in part, by Force Majeure (defined below) or other causes herein specified, to carry out its obligations under this Agreement other than the obligation to make payment of amounts due hereunder, it is agreed that on such party's promptly giving notice and reasonably full particulars of such Force Majeure in writing or facsimile or by email to the other party within a reasonable time after the occurrence of the cause relied on, then the obligations of the party giving such notice, so far as such obligations are affected by such Force Majeure or other causes herein specified, shall be suspended during the continuance of any inability so caused, but for no longer period, and such cause shall so far as possible be remedied with all reasonable dispatch.
11.2. The term "Force Majeure" as employed herein means, to the extent not reasonably within the control of the party claiming suspension and which, by the exercise of reasonable diligence, such party is unable to prevent or overcome: acts of God; strikes, lockouts or other industrial disturbances; acts of the public enemy; sabotage; wars; blockades; insurrections; riots; acts of terror; epidemics; landslides; lightning; earthquakes; fires; storms; storm warnings; hurricanes; floods; washouts; arrests and restraints of the government and people, either federal or state, civil or military; civil disturbances; explosions; breakage; breakdown or accident to machinery, equipment or lines of pipe; freezing of wells or lines of pipe or other delivery facilities; electric power unavailability or shortages; and any other causes, whether of the kind herein enumerated or otherwise, not reasonably within the control of the party claiming suspension, and which by the exercise of due diligence such party is unable, wholly or in part, to prevent or overcome.  Such term likewise includes (1) in those instances where either party hereto is required to obtain servitudes, right-of-way grants, permits or licenses to enable such party to fulfill its obligations hereunder, the inability of such party to acquire, or the delays on the part of such party in acquiring, at reasonable cost and after the exercise of reasonable diligence, such servitudes, right-of-way grants or licenses, (2) in those instances where either party hereto is required to furnish materials and supplies for the purpose of constructing or maintaining facilities or is required to secure permits consents, authorizations or approvals from any governmental agency or authority (federal, state or municipal, international civil or military) to enable such party to fulfill its obligations hereunder, the inability of such party to acquire or the delays on the part of such party in acquiring, at reasonable cost and after the exercise of reasonable diligence, such materials and supplies, permits, consents, authorizations or approvals, and (3) curtailment or interruption of deliveries, receipts or services by third party purchasers, suppliers or customers as a result of an event of Force Majeure, or a breach by such third party purchasers, suppliers or customers, or any action by any third party pipelines connected to WGS's facilities that would prevent or delay WGS in obtaining with any third party pipeline a functional interconnection (capable of receiving Gas and available for commercial service).  It is understood and agreed that the settlement of strikes or lockouts shall be entirely within the discretion of the party having the difficulty and that the above requirement that any Force Majeure shall be remedied with all reasonable dispatch shall not require the settlement of strikes or lockouts by acceding to the demands of the opposing party when such course is inadvisable in the discretion of the party having the difficulty.  
11.3. Either Party may partially or entirely interrupt its performance hereunder for the purpose of making necessary or scheduled inspections, alterations and repairs which are described as a maintenance event, but only for such time as may be reasonable and unavoidable; and the party requiring such relief shall give to the other Party ten (10) Days' notice of its intention to suspend its performance hereunder, except in cases of emergency where such notice is impracticable and shall endeavor to arrange such interruption so as to inconvenience the other Party as little as possible.  
11.4. The occurrence of a Force Majeure event claimed by Customer or by WGS will not relieve Customer of its obligation to pay any rate, fee, toll or other amount payable to WGS hereunder.
12. WARRANTY OF TITLE AND INDEMNIFICATION
12.1. Customer represents and warrants to WGS that Customer has, and at all times shall have, good and merchantable title to all Gas or natural gas Delivered by or on behalf of Customer to WGS at the Receipt Point, free and clear of all liens, encumbrances and adverse claims whatsoever, including liens to secure payment of and any claims relating to the payment of royalties or other similar burdens thereon.
12.2. Customer agrees to be liable for, and defend, indemnify and hold harmless WGS, its parents, affiliates and contractors, and the directors, officers, employees, agents and shareholders of each, from, any and all costs, expenses (including any attorney fees and court costs), penalties, fines, claims, liabilities, royalties, damages or judgments arising prior to the Delivery of Gas or natural gas to WGS or after Delivery of the Gas by WGS to Customer, including any claim for property damage, personal injury or death or damage to the environment, or arising out of Customer's breach of any of Customer's representations or warranties, including where WGS may be alleged or proven to have been negligent, including, but not limited to active, passive, sole, joint, concurrent, comparative and contractual negligence, but excluding the direct and sole gross negligence and willful misconduct of WGS, its officers, employees, contractors or agents.
12.3. Subject to the provisions of Section 13.3 of this Statement of Operating Conditions, WGS shall not acquire the title to Gas Delivered to it as part of a Transaction, except as otherwise provided in Sections 4.1(c), 4.2(c), 4.3(c), 4.4(b), 10 and 20.12 or as specifically provided elsewhere in this Agreement. However, this shall not restrict WGS from entering into operating arrangements that allow for the movement of Gas via exchange or displacement.
13. POSSESSION, RISK OF LOSS AND USE OF GAS
13.1. Customer shall be deemed to be in control and possession of all Gas or natural gas (a) Delivered by Customer to WGS prior to and including its Delivery to WGS at the Receipt Point(s) and (b) Delivered by WGS to Customer from and after its receipt by Customer at the Delivery Point(s). While the Gas or natural gas is in the control and possession of Customer, an Interconnecting Pipeline or any other pipeline transporting Gas or natural gas for Customer, Customer shall bear the risk of loss of such Gas or natural gas and shall indemnify and hold WGS harmless for any claims, lawsuits, fines or penalties for any losses, injuries, claims, liabilities or damages resulting from such loss.
13.2. WGS shall be deemed to be in control and possession of all Gas (a) Delivered to WGS by Customer from and after its receipt by WGS at the Receipt Point(s) and (b) Delivered by WGS to Customer at the Delivery Point(s) prior to its receipt by Customer at the Delivery Point(s). While the Gas is in the control and possession of WGS, WGS shall bear the risk of loss of such Gas excluding when such loss arises out of the gross negligence or willful misconduct of Customer. WGS's liability for such loss of Gas shall not exceed the then current market value of the lost quantity of Gas, or WGS shall have the option, at its discretion, of replacing the Gas with an equivalent amount of MMBtus. Any provision in this Agreement, any Service Order or Nomination to the contrary notwithstanding, in no event shall WGS be liable for any special, incidental, indirect, punitive or consequential damages (including, but not limited to loss of profits, loss of opportunity or penalties under any obligation to a third party), even if contributed to or caused by the fault, negligence (including but not limited to active, passive, sole, joint, concurrent, comparative, contractual and gross negligence), or strict liability of WGS.
13.3. Customer and WGS both acknowledge and agree that Gas which is Delivered to the Facilities pursuant to this Agreement is a fungible good as that term is defined in Vernon's Texas Code Annotated ("V.T.C.A.") Business &amp; Commerce Code Section; 1.201, and that the unit of Gas is one (1) MMBtu in determining any quantity of natural gas. Customer understands and agrees that any Gas Delivered shall be commingled with the other Gas already or subsequently Delivered into the Facilities and "receipts" (as that term is used in V.T.C.A. Business &amp; Commerce Code Section; 7.207(b)) shall be based on confirmations of Delivery by the Interconnecting Pipeline receiving or Delivering Gas from the Facilities. Customer acknowledges that the Service Orders, Nominations, invoices or any other document issued pursuant to this Agreement are non-negotiable instruments under V.T.C.A. Business &amp; Commerce Code Section; 7.104(b).
14. MEASUREMENT
For the purposes of this Statement of Operating Conditions, the party metering the Gas, or whose designee meters the Gas, at a particular Receipt Point(s) or Delivery Point(s) is referred to as the "Metering Party" and the other party is referred to as the "Non-Metering Party."
14.1. The measuring facilities shall be designed, installed, operated, and maintained by WGS or its designee in accordance with the recommendations contained in the following standards:
14.1.1. Orifice Measurement - American Gas Association Report Number 3 (herein referred to as AGA 3).
14.1.2. Turbine Measurement - American Gas Association Report Number 7 (herein referred to as AGA 7).
14.1.3. Positive Measurement - American National Standards Institute B109.2 (herein referred to as ANSI B109.2).
14.1.4. Ultrasonic Measurement - American Gas Association Report Number 9 (herein referred to as AGA 9).
14.2. If adequate metering facilities are already in existence at the Receipt and Delivery Point(s), such existing metering facilities will be used for so long as, in WGS's reasonable judgment, the facilities remain adequate. If the metering facilities at any Receipt Point(s) or Delivery Point(s) are reasonably determined by WGS to be inadequate, then the parties will mutually agree with respect to the equipment that must be added at such point(s) and the responsibility for payment of such equipment. If the parties are unable to agree upon the equipment to be added at any such point, or which party will be responsible to pay for such equipment, then such point will be removed from the Service Order.
14.3. The Non-Metering Party may, at its option and expense, install and operate meters, instruments and equipment, in a manner that will not interfere with the Metering Party's equipment, to check the Metering Party's meters, instruments, and equipment, but the measurement for the custody transfer of Gas for the purpose of this Agreement will be by the Metering Party's meter only, except as hereinafter specifically provided. The meters, check meters, instruments, and equipment installed by each party will be subject at all reasonable times to inspection or examination by the other party (Non-Metering Party), but the calibration and adjustment thereof will be done only by the installing party.
14.4. All meters will be calibrated and/or proven on a schedule, but in no event will the calibration period be in excess of ninety (90) Days. Notification of scheduled calibrations shall be made to all interested parties and reasonable effort will be made to accommodate each party's schedule; however, calibration will proceed at the scheduled time regardless of attendees. Records from all measuring equipment are the property of the Metering Party who will keep all such records on file for a period of not less than two (2) years. Upon request, the Metering Party will make available to the Non-Metering Party volume records from the measuring equipment, together with calculations therefrom, for inspection and verification, subject to return within thirty (30) Days after receipt thereof.
14.5. Either Party shall have the right to conduct such pulsation tests as they deem prudent, at their sole risk and expense. If excessive pulsation is evident, mutually agreed modifications to operation or facility design will be made to reduce the effect of such pulsation. If pulsation issues cannot be resolved in a mutually agreeable manner, either party shall have the right to refuse delivery or receipt of Gas at the Receipt Point(s) or Delivery Point(s).
14.6. If the percentage of inaccuracy from the results of any test is greater than one percent (1%) volumetrically, the registration of such meter shall be corrected at the rate of such inaccuracy for any period which is definitely known or agreed upon. In the event the period is not definitely known or agreed upon, such correction shall be for a period extending back one-half (1/2) of the time elapsed since the date of the last calibration. Following any test, measurement equipment found inaccurate shall be immediately restored by WGS as closely as possible to a condition of accuracy. If any measurement equipment is out of service or out of repair for any reason so that the amount of Gas delivered cannot be estimated or computed from the reading thereof, the amount of Gas delivered through such meter during the period such meter is out of service or out of repair shall be estimated and agreed upon by WGS and Customer upon the basis of the best data available using the first of the following methods which is feasible:
14.6.1. by using the registration of any check meters if installed and accurately registering;
14.6.2. by correcting the error if the percentage of error is ascertainable by calibration, test or mathematical calculation; or
14.6.3. by estimating the quantity of deliveries by comparison with deliveries during preceding period under similar conditions when the meter was registering accurately.
14.7. Measurement Volume Computations
14.7.1. Units of measurement shall be determined in MMBtu derived from the calculation of gas volume (Mcf) and gas heating value (Btu/ft3), both at identical base conditions of temperature and pressure. The unit of volume of Gas shall be one (1) standard cubic foot at an absolute pressure of fourteen and sixty-five hundredths pounds per square inch absolute (14.65 Psia) and at a temperature of sixty degrees Fahrenheit (60oF).
14.7.2. Atmospheric pressure shall be assumed to be the pressure value as reasonably determined by WGS for the county in which each of the Receipt Point(s) and Delivery Point(s) is located pursuant to generally accepted industry practices, but not less than twelve and nine-tenths (12.9) Psia nor more than fourteen and seven-tenths (14.7) Psia irrespective of the actual atmospheric pressure at such points from time to time.
14.7.3. All metered volumes shall be computed in accordance with the standards set forth in Section 3.1 above.
14.8. Records of calibration and or proving and data associated with the volume calculation are the property of the Metering Party who will keep all such records and data on file for a period of not less than two (2) years. Upon request, the Metering Party will make available to the Non-Metering Party records of calibration and or testing and data associated with the volume calculation, subject to return within thirty (30) Days after receipt thereof.
14.9. WGS shall sample and determine the Gross Heating Value, Relative Density and Compressibility received at the Receipt Point(s) or Delivery Point(s) utilizing the following standards:
14.9.1. Gas Processors Association (GPA) 2166 - Obtaining Natural Gas Samples for Analysis by Gas.
14.9.2. Gas Processors Association (GPA) 2261 - Analysis for Natural Gas and Similar Gaseous Mixtures by Gas Chromatography.
14.9.3. Gas Processors Association (GPA) 2145 - Physical Constants for Paraffin Hydrocarbons and Other Components of Natural Gas.
14.9.4. Gas Processors Association (GPA) 2172 - Calculation of Gross Heating Value, Relative Density, and Compressibility of Natural Gas Mixtures from Compositional Analysis.
WGS shall sample the flowing gas stream utilizing one of the following methods:
14.9.5. On-line Chromatography
14.9.6. Accumulated Sample - If this method is utilized the application of gas quality in the volume calculation will be during the time period the gas sample was accumulated.
14.9.7. Spot Sample - If this method is utilized the application of gas quality in the volume calculation will be the time period beginning on the date the sample was obtained until the next sample is obtained.
15. QUALITY
15.1. Customer represents and warrants that all Gas tendered for transportation at the Receipt Point(s) shall meet the Quality Specifications. "Quality Specifications" means, for each constituent, the WGS's quality specifications set forth below:
15.1.1. Have a Heating Value of not less than nine hundred fifty (950) Btu per cubic foot nor more than one thousand one hundred (1,100) Btu per cubic foot.
15.1.2. Be commercially free of dust, gum, gum-forming constituents, gasoline, liquid hydrocarbons, water, and any other substance of any kind that may become separated from the Gas during the handling thereof or that may cause injury to or interference with proper operation of the lines, meters, regulators, or other appliances through which it flows;
15.1.3. Not contain more than one-half (0.5) grains of total sulfur nor more than one-fourth (1/4) grain of hydrogen sulfide per one hundred (100) standard cubic feet;
15.1.4. Not contain more than ten (10) parts per million of oxygen, and shall not contain more than two percent (2%) by volume of carbon dioxide, not contain more than three percent (3%) by volume of nitrogen or three percent (3%) by volume of total inert gases;
15.1.5. Have a temperature of not more than one hundred twenty degrees Fahrenheit (120oF) nor less than forty degrees Fahrenheit (40oF);
15.1.6. Not contain more than seven (7) pounds of water vapor per one million (1,000,000) standard cubic feet; and
15.1.7. Have a hydrocarbon dew point below forty degrees Fahrenheit (40oF).
15.2. In the event that the Gas being received does not conform to the standards outlined above, WGS may, in its discretion and on a non-discriminatory basis, accept such Gas or restrict or refuse any volumes that are non-conforming or deficient.
15.3. Customer shall be responsible for odorizing any part of the Gas delivered hereunder at the Delivery Point(s) which is diverted and/or used for any purpose for which odorization is required pursuant to regulations of the Texas Railroad Commission.
15.4. In the event that Customer's Gas fails to conform to any of the Quality Specifications set forth above, including, but not limited to the hydrocarbon dew point or the gross heating value or any other specification set forth above or to a more restrictive specification imposed by a downstream pipeline to which Customer has nominated Gas, WGS, in its discretion and on a non-discriminatory basis, may accept such off-specification Gas for transportation and delivery to such downstream pipeline provided that Customer has made arrangements to ensure that such off-specification Gas conforms to the applicable specification, including but not limited to any arrangements to treat, condition, or blend with other Gas (prior to it reaching such downstream pipeline). Upon request from WGS, Customer shall provide documentation acceptable to WGS demonstrating that Customer has made such contractual arrangements for such off specification Gas on the path for which Customer has nominated Gas. This provision shall not be construed as a general waiver to WGS's specification and is only available where physical blending, treatment and conditioning of Gas is contracted for and will take place prior to reaching the downstream pipeline whose specifications are to be met and such acceptance and service by WGS shall not adversely impact markets on WGS's system. WGS shall deliver to downstream pipelines Gas meeting the quality specifications set forth above.
16. MAINTENANCE WORK CURTAILMENTS
16.1. WGS shall have the right to curtail Delivery of Gas as reasonably required from time to time in order to perform scheduled or unscheduled maintenance, repairs, additions or modifications to the storage wells and the pipelines, plant and equipment comprising the Facilities or for testing of the Facilities in accordance with applicable regulations ("Maintenance Work").
16.2. WGS shall use reasonable efforts to provide Customer with advance notice of any scheduled Maintenance Work reasonably expected to curtail the Delivery of Gas by the 15th Day of the Month prior to the Month in which that Maintenance Work is to occur. Such notice will include advice to Customer as to the percentage of Delivery rights under a Firm Transaction that will be curtailed and how many Days the curtailment will be effective. WGS will notify Customer of any unscheduled Maintenance Work expected to curtail the Delivery for a period in excess of eight (8) Hours, in a time and manner that is reasonable under the circumstances.
16.3. Should curtailments become necessary, the allocation of available Delivery rights will be made in accordance with the provisions of Section 17 of this Agreement.
17. ALLOCATION OF RECEIPT AND DELIVERY RIGHTS
Without limiting its obligations to provide Services as otherwise stated herein, if WGS is restrained for any reason, including Force Majeure and the provisions of Section 6.8, from offering service to all of the Customer's requesting service for a given day or term, WGS shall allocate available capacity in the following order of increasing priority:
* Nominations for Customers requesting Firm Services shall receive the highest priority and shall be allocated on a pro rata basis among Customers with Firm Service rights based on their Firm entitlements as stated in their respective Service Orders.
* Customers requesting Interruptible Services shall receive the next highest priority and be prioritized by economic value to WGS, in WGS's reasonable discretion. As such, WGS shall accord service paying a higher rate per MMBtu a higher priority than service paying a lower rate. If two or more Customers are paying the same rate per MMBtu, WGS shall allocate capacity on a pro rata basis.
18. BALANCING OF QUANTITIES
18.1. The Parties hereto agree to cooperate to avoid Imbalances on Interconnecting Pipelines with respect to the Services rendered under this Agreement. Therefore, if either Party is unable to Deliver Gas as contemplated under the terms of a Service Order or a Nomination, such Party shall notify the other Party as soon as practicable and make nomination changes with all affected pipelines or other persons responsible for Delivery of Gas.
18.2. It is recognized that it may be physically impracticable, due to measurement, gas control limitations and other operating conditions, for WGS and Customer to stay in balance each Hour, Day, Week or Month. If the quantities Delivered hereunder should create an Imbalance at the end of any Hour, Day, Week or Month, then WGS and Customer shall adjust the quantities Delivered such that quantities so Delivered shall be kept as near to zero Imbalance as practicable.
18.3. To the extent that Customer's acts or omissions cause WGS to incur, directly or indirectly, fees, charges, expenses or penalties from an Interconnecting Pipeline for failure to satisfy that Interconnecting Pipeline's balancing or nomination requirements, then Customer agrees to reimburse WGS for such fees, charges, expenses or penalties, and defend, indemnify, and hold WGS harmless with respect thereto.
18.4. To the extent that WGS's acts or omissions cause Customer to incur, directly or indirectly, fees, charges, expenses or penalties from an Interconnecting Pipeline for failure to satisfy such Interconnecting Pipeline's balancing or nomination requirements, then WGS agrees to reimburse Customer for such fees, charges, expenses or penalties, and defend, indemnify, and hold Customer harmless with respect thereto.
19. CREDIT REQUIREMENTS
19.1. WGS's agreement to execute a Service Agreement or to engage in a specific transaction (i.e., a Service Order) under a Service Agreement is contingent upon a satisfactory appraisal of Customer's credit by WGS.
19.1.1. A Customer or potential Customer must provide a copy of its last two (2) fiscal years of audited financial statements, including balance sheet, income statement, cash flow statement and accompanying footnotes.  If such Customer or potential Customer cannot provide the above information on itself, then such Customer or potential Customer must, if applicable, provide that information for its parent company.  WGS may, acting in a prudent, non-discriminatory, and reasonable manner, elect to waive the requirement to provide the information set forth in this Section 19.1.1 and, in lieu thereof, WGS may request, in its discretion, other forms of evidence of creditworthiness consistent with the Service(s) to be provided. 
19.1.2. In the event WGS determines Customer's credit to be unsatisfactory in WGS's opinion, as tested in a commercially reasonable and in a not unduly discriminatory manner, at any time during the term of any Service Agreement, including any Service Order(s), WGS may demand "Adequate Assurance of Performance" which shall mean sufficient security in a form, an amount and for the term reasonably specified by WGS.   Customer may support its credit by providing one of the following forms of security:
(i) post an irrevocable standby letter of credit in a form, substance and from a bank satisfactory to WGS for services equal to or up to three (3) Months of all fees and charges that would be due from Customer if WGS were performing such service plus an amount for projected imbalances, unless a lesser amount is reasonable to and agreed upon by WGS based on Customer's financial condition; or  
(ii) provide a prepayment or a deposit for services equal to or up to three (3) Months of all fees and charges that would be due from Customer if WGS were performing such service plus an amount for projected imbalances, unless a lesser amount is reasonable to and agreed upon by WGS based on Customer's financial condition; or
(iii) provide a guaranty from a guarantor acceptable to WGS.  The demand for Adequate Assurance of Performance can be satisfied with a guaranty issued on behalf of Customer in a format, amount and term acceptable to WGS, but only for as long as the credit of Customer's guarantor continues to be acceptable to WGS, after which time only Adequate Assurance of Performance in the form of (a) and (b) will be acceptable to WGS.   
19.1.3. WGS will not be required to perform or continue to perform service under any Service Agreement in the event: (i) Customer has voluntarily filed for bankruptcy protection under any chapter of the Bankruptcy Code; (ii) Customer is the subject of an involuntary petition of bankruptcy under any chapter of the Bankruptcy Code, and such involuntary petition has not been settled or otherwise dismissed within ninety (90) Days of such filing; or (iii) Customer otherwise becomes insolvent, whether by an inability to meet its debts as they come due in the ordinary course of business or because its liabilities exceed its assets on a balance sheet test and/or however such insolvency may otherwise be evidenced.
19.1.4. Should Customer fail to provide Adequate Assurance of Performance within two (2) business Days after receipt of written demand for such assurance, then WGS shall have the right to suspend performance under any Service Agreement until such time as Customer furnishes Adequate Assurance of Performance and/or terminates any Service Agreement in addition to all other remedies available at law or in equity.
19.2. WGS shall have the right to reject any request for Service Agreement that does not contain the required information set forth herein and WGS will have no liability to Customer or any other entity in connection with such rejection.
19.3. In addition to requiring Adequate Assurance of Performance to secure the Service Agreement and/or transactions thereunder, WGS may require additional or alternate security from Customer consistent with Customer's Risk Adjustment and/or if the Service Agreement is associated with underwriting of capital investments or infrastructure development by WGS or WGS's service to Customer is contingent upon WGS's construction of facilities.  This provision shall also apply to any assignment of a Service Agreement that was initially subject to this provision. 
19.4. WGS shall be entitled to suspend the performance of Services for any Transaction in the event of a failure by Customer to provide financial statements or such other information specified in Section 19.1 and/or additional security as stipulated therein until such information and/or security is received, without waiving any other right or remedy it may have.
Service Agreements.  After Customer has requested a Service Agreement and after WGS has determined that Customer is creditworthy, WGS and Customer may enter into a Service Agreement, which will incorporate by reference the provisions of this Statement of Operating Conditions.  Neither WGS nor Customer will have any obligations to one another until authorized representatives of both WGS and Customer have executed a Service Agreement.  Any applicable Service Agreement(s) (including any Service Order(s)) will contain specific details agreed to by WGS and Customer for a particular service arrangement.  
20. BILLINGS AND PAYMENT
20.1. On or before the fifteenth (15th) Day of the Month following the provision of Services to Customer, WGS shall submit to Customer an invoice evidencing the bill for Services rendered to Customer under a Service Order during the preceding month. When the Interconnecting Pipeline(s) is in control of information required by WGS to prepare invoices, Customer shall cause such information to be received by WGS on or before the tenth (10th) day of the month immediately following the month to which the information applies. With the exception of Demand Charges, which shall be billed in accordance with the applicable Service Order, all other applicable charges and fees shall be billed based upon confirmed nominations between WGS and the Interconnecting Pipeline(s).
20.2. Paying party agrees to pay the non-paying party by wire transfer (identifying the invoice number) the total of the amounts payable according to such statement on or before the later of the twenty-fifth (25th) Day of the Month in which the statement is provided or ten (10) Days following the date in which the statement was delivered. Subject to the provision of Paragraph 20.3 below, Customer shall make such payment to WGS by wire transfer in immediately available funds to a depository designated by WGS. When the due date falls on a day that the designated depository is not open in the normal course of business to receive Customer's payment, Customer shall cause such payment to be actually received by WGS on or before the first Business Day on which the designated depository is open after such due date.
20.3. In the event that WGS is willing to accept payment by other than wire transfer, the payment to WGS for Services rendered during the preceding month shall be due on the tenth (10th) day following the date of the invoice. Customer shall cause payment for such bill to be actually received by WGS at a lock box designation by WGS, on or before such due date.
20.4. Failure to Pay Bills
(a) Should Customer fail to pay any amount when the same becomes due, Customer shall pay interest on  outstanding balances accruing thereon at a rate equal to the prime rate from time to time in effect and charged by Citibank, N.A., New York, New York or its successor, plus two percent (2%) per annum, (but in no event greater than the maximum rate of interest permitted by law) with adjustments in such rate to be made on the same Day as any change in such prime rate, for any period during which the same shall be overdue, such interest to be paid when the amount past due is paid. If either principal or interest is due, any payments thereafter received shall first be applied to the interest due, then to the previously outstanding principal due, and lastly, to the most current principal due. 
(b) If any bill remains unpaid after the due date thereof:
(i) WGS shall have the right (in addition to any other rights hereunder or at law) upon giving Customer written notice, to suspend or terminate Services and Customer, by its nonpayment of amounts due within three (3) days of receiving notice pursuant to this Section 20.4(b)(i), shall be deemed to have consented to such suspension or termination of Services; provided, that suspension will not relieve Customer of liability for any fees which accrue after the suspension.
(ii) WGS hereby reserves a lien on Gas Customer may have from time to time in the Facilities pursuant to V.T.C.A. Business and Commerce Code Section; 7.209. If Customer fails to pay an amount invoiced pursuant to Section 20.1 and the failure to pay continues for thirty (30) days after payment is due, WGS, in addition to any other remedy it has at law, in equity and under this Agreement shall also have the right to sell an amount of Gas held in Customer Inventory to enable WGS to recover the monies owing to it by Customer. WGS shall set off the sum of money it receives for the Gas sold, plus any and all related costs and expenses that WGS incurs in effecting the sale, against any and all monies owed to it by the Customer, including interest.
(iii) If Customer in good faith disputes the amount of any bill or part thereof, Customer shall pay to WGS such amount, if any, that Customer concedes to be correct. Customer and WGS shall seek to resolve disputed amounts in a timely manner. Payment of any disputed amount shall include interest calculated under Section 20.4(a) based on the original due date of such amount.
20.5. In the event that incorrect information is communicated to the Customer in any invoice that WGS renders, such error shall be adjusted within thirty (30) days of the determination thereof; provided, however, that any claim for adjustment must be made within twelve (12) Months from the date of such invoice.
20.6. Customer shall reimburse WGS within thirty (30) days of invoice thereof for all filing and other fees which are due pursuant to regulations of authorities having jurisdiction which are attributable to the execution of this Agreement.
20.7.  Each party hereto or its representative shall have the right at all reasonable times to examine the books and records of the other party to the extent necessary to confirm the performance of any obligation made under or pursuant to this Agreement or verify the accuracy of any statement, charge, computation or demand made under or pursuant to this Agreement.  Any statement shall be final as to all parties unless questioned within two (2) years after payment thereof has been made.
20.8. If any overcharge or undercharge has been determined and the billing therefore has been paid, the Party that has underpaid or that has been overpaid shall pay such amount to the other Party within thirty (30) days after the final determination of that under or overpayment by the Parties together with interest thereon at the rate specified in Section 20.4(a) calculated from the date such amount was originally due to the date of payment.
20.9. Any taxes, fees, charges or any other exactions, now or hereafter enacted, levied or assessed by any federal, state, local or other governmental authority upon  Customer's Gas,  or the services provided by WGS hereunder, including the gas utility tax as defined in the Texas Utility Code Section;122.051, shall be borne and paid for by Customer, except to the extent any such taxes are, by law, required to be paid directly by WGS, in which event, such taxes (including penalty and interest if imposed by the taxing authority) shall be paid by WGS and reimbursed by Customer upon receipt of invoice and supporting documentation reasonably requested by Customer.
20.10. Neither Party shall be liable to the other Party for any taxes that are statutorily imposed on the first Party that are measured by or imposed upon net income, capital, or property, including without limitation, income, capital, franchise, and margin based taxes and taxes measured by the value of owned or leased real, tangible or intangible property.  In addition, a Party shall not be liable to the other Party for business license taxes on a particular occupation or similar taxes required for the maintenance of business existence.  There shall be no reimbursement for taxes or fees that are a factor in determining the rate Customer pays under this Statement of Operating Conditions, the Service Agreement, or its applicable Service Order.  
20.11. Notwithstanding and in addition to but not in limitation of any other provision hereof, in the event Customer shall (i) become insolvent as evidenced in accordance with Section 19.1, (ii) fail to pay or perform, when due, any obligation under this Agreement or in connection with credit support obligations or otherwise (which, in the case of a payment default, is not remedied within thirty (30) days of the due date) or (iii) fails to provide adequate credit assurances in accordance with Section 19, then WGS shall have the right, upon written notice to Customer, to terminate all existing Transactions with Customer.
20.12. In the event WGS elects to terminate Customer's Transactions pursuant to 20.11, the following shall apply:
(a) All of Customers rights for Storage Service shall immediately be terminated, as will any future payment obligations for Services under the terminated Transactions. WGS shall have no further obligation to provide Services to Customer thereafter, and shall be free to sell those Services to third parties as of the termination date in WGS's notice to Customer.
(b) Customer shall remain liable for all obligations under those terminated Transactions up to the termination date as stated in WGS's termination notice, including, but not limited to, any unbilled Demand Charges, Commodity Charges, Fuel, applicable taxes, Excess Inventory Rates or Overrun Rates for the most recent monthly period, as well as any outstanding payments due WGS hereunder.
(c) To the extent that any Customer Inventory exists at the date of termination, WGS, pursuant to Section 20.4(b)(ii) hereof, shall have the right to sell all or a portion of the Customer Inventory to offset amounts due and payable to WGS outstanding from the terminated Transactions. In such instance, WGS shall be deemed for all purposes to have acquired the Customer Inventory and to hold title thereto free and clear of all liens, encumbrances, and adverse claims whatsoever. The value of the Customer Inventory shall be the Daily Reference Price for such Gas on the Day or Days that WGS sells the Gas. Any remaining proceeds from the sale of the Customer Inventory by WGS after paying off all of Customer's outstanding obligations shall be distributed to Customer.  In the event that the Daily Reference Price is negative, Customer shall be responsible for any costs incurred by WGS in connection with the sale of Customer Inventory under this Section 20.12(c). 
(d) In the event the liquidation of Customer Inventory, if any, is insufficient to satisfy all outstanding payments due WGS under the terminated Transactions, Customer shall remain liable for all outstanding obligations under the terminated Transactions, including interest thereon, and WGS shall be entitled to pursue any legal remedies available to it to secure payment.
20.13. Each Party's rights under this Section 20 are in addition to, and not in limitation or exclusion of, any other rights which a Party may have (whether by agreement, operation of law, or otherwise).
21. LAW AND VENUE
21.1. THIS STATEMENT OF OPERATING CONDITIONS, THE SERVICE AGREEMENT, AND THE RIGHTS OF WGS AND CUSTOMER HEREUNDER AND THEREUNDER MUST BE INTERPRETED AND ENFORCED IN ACCORDANCE WITH THE LAWS OF THE STATE OF TEXAS WITHOUT GIVING EFFECT TO ANY CHOICE OR CONFLICT OF LAW PROVISION OR RULE (WHETHER OF THE STATE OF TEXAS OR ANY OTHER JURISDICTION) THAT WOULD CAUSE THE APPLICATION OF THE LAWS OF ANY JURISDICTION OTHER THAN THE STATE OF TEXAS. UNLESS PROVIDED OTHERWISE IN A SERVICE AGREEMENT OR AGENCY AGREEMENT WGS AND CUSTOMER AGREE TO THE JURISDICTION OF THE FEDERAL AND STATE COURTS IN DALLAS COUNTY OR HARRIS COUNTY, TEXAS AND AGREE THAT ANY ACTION, SUIT, OR PROCEEDING CONCERNING, RELATED TO, OR ARISING OUT OF THIS STATEMENT OF OPERATING CONDITIONS OR THE SERVICE AGREEMENT WILL BE BROUGHT ONLY IN A FEDERAL OR STATE COURT IN DALLAS COUNTY OR HARRIS COUNTY, TEXAS AND NEITHER WGS NOR CUSTOMER MAY RAISE ANY DEFENSE OR OBJECTION OR FILE ANY MOTION BASED ON LACK OF PERSONAL JURISDICTION, IMPROPER VENUE, INCONVENIENCE OF THE FORUM, OR THE LIKE IN ANY CASE FILED IN A FEDERAL OR STATE COURT IN DALLAS COUNTY OR HARRIS COUNTY, TEXAS.
22. LIMITATION ON DAMAGES
22.1. EXCEPT AS OTHER SPECIFICALLY PROVIDED TO THE CONTRARY IN THIS AGREEMENT, IN NO EVENT WILL EITHER PARTY BE LIABLE TO THE OTHER FOR PUNITIVE, SPECIAL, EXEMPLARY, INCIDENTAL, INDIRECT, CONSEQUENTIAL OR OTHER SIMILAR DAMAGES, INCLUDING LOST PROFITS, WHETHER SUCH DAMAGES ARE CLAIMED UNDER BREACH OF CONTRACT, BREACH OF WARRANTY, TORT, OR ANY OTHER THEORY OR CAUSE OF ACTION AT LAW OR IN EQUITY.
23. NOTICES AND PAYMENTS
23.1. Unless otherwise provided in this Agreement, any notice, request, demand or other communication under this Agreement (including notice given pursuant to Section 11.2) must be in writing and will be deemed to have been duly given as such (a) when delivered by hand, (b) when sent by facsimile (with receipt confirmed), (c) when sent by electronic mail (d) posted on WGS' customer activities system or (e) when received by the addressee, if sent by Express Mail, Federal Express, or other express delivery service (receipt requested), or by first class postage prepaid, registered or certified mail, return receipt requested, in each case to the appropriate addresses and facsimile numbers set forth below (or to such other addresses and facsimile numbers as a Party may designate as to itself by ten (10) days prior written notice to the other Party). For payments, the address of the designated depository shall be set forth in each invoice presented to Customer.
(a) To WGS: 
NOTICES
Waha Gas Storage, LLC:
100 Congress Ave., Suite 2200,
Austin, TX 78701
Attention: Contract Administration
WGS@wwm-llc.com
(b) To Customer: As set forth in the Service Agreement.
23.2. Notices and payments will be effective when they are delivered at the appropriate address specified in the Service Agreement, during normal business hours on a Business Day.  Notices delivered after business hours or on a weekend or holiday will be effective on the next Business Day. 
23.3. The Parties hereto agree that Service Orders, Nominations and any other notice may be transmitted by facsimile or other similar technology, including electronic mail or WGS's customer activities system, and hereby waive any objection to the validity of signatures transmitted by such means.

24. MISCELLANEOUS PROVISIONS
24.1. Waiver. No waiver by any Party of any one or more defaults by the other in the performance of any provisions hereunder will operate or be construed as a waiver of any other default or defaults, whether of a like or of a different character.
24.2. Assignment. This Agreement and the rights and obligations hereunder shall not be assignable by the Customer except with the prior written consent of WGS, which consent may not be unreasonably withheld. It shall be reasonable for WGS to withhold consent if (a) the Customer requests consent to assign less than its entire interest in this Agreement, or (b) if the proposed assignee does not meet the credit requirements set out in Section 19 of this Agreement. However, WGS or Customer may assign, without such consent, any of its rights hereunder to its respective parent, subsidiary or affiliate, provided that the Party so assigning shall not be released from its obligations hereunder.
24.3. Compliance with Laws. The respective obligations of the Parties to this Agreement are subject to all present and future valid laws, orders, rules and regulations of duly constituted authorities having jurisdiction over the Parties, the Facilities or Services, or this Agreement or any of its provisions. Neither Party will be held in default for failure to perform under this Agreement if such failure is due to compliance with valid laws, orders, rules or regulations of any such duly constituted authorities.
24.4. Severance. Any provision of this Agreement that is prohibited or unenforceable shall be ineffective only to the extent of that prohibition or unenforceability without invalidating the remaining provisions of this Agreement. In such event, the Parties will agree to a reasonable substitute provision that would cause the relative benefits originally agreed to by the Parties to be maintained.
24.5. Headings. The titles and headings of this Operating Statement are for reference purposes only and shall not be treated as a part of or as giving meaning to any of the provisions of this  Statement of Operating Conditions.
24.6. Conflicts. Although terms of a Service Agreement or Service Order should not conflict with this Statement of Operating Conditions, in the event of a conflict between (i) this Statement of Operating Conditions; (ii) the Service Agreement; or (iii) the Service Order, the terms of the documents shall govern in the priority listed in this sentence.
24.7. Confidentiality. WGS and Customer shall each keep the terms of a particular Service Agreement and Service Order and all documents and communications provided pursuant to the Service Agreement and Service Order confidential, except as necessary for the rendering of services hereunder, including communications with Interconnecting Pipelines, or such other disclosures as may be required by applicable law.
24.8. Entirety. This Statement of Operating Conditions and the Service Agreement, Service Order(s) and Nominations constitute the entire Agreement among the Parties covering the subject matter hereof, and there are no agreements, modifications, conditions, or understandings, written or oral, express or implied, pertaining to the subject matter hereof that are not contained herein or therein.
25. DEFAULT
25.1. Termination for Default. Except as otherwise specifically provided herein, and subject to any Service Agreement, if either Party fails to perform any of the material covenants or obligations imposed upon it in this Statement of Operating Conditions or a Service Agreement (except where such failure is excused under the Force Majeure or other provisions hereof or thereof), then the other Party may, at its option (without waiving any other remedy for breach hereof), by notice in writing specifying the default that has occurred, indicate such party's intention to terminate the Service Agreement by reason thereof. The Party in default will have thirty (30) Days from receipt of such notice to remedy such material default, and upon failure to do so, the non-defaulting Party may elect to immediately terminate the Service Agreement.  Notwithstanding the foregoing, Customer's failure to pay WGS within a period of ten (10) Days following Customer's receipt of written notice from WGS advising of such failure to make payment in full within the time specified previously herein, will be a default that gives Customer the right to immediately terminate the Service Agreement, unless such failure to pay such amounts is the result of a bona fide dispute between the parties regarding such amounts and Customer timely pays all amounts not in dispute, or unless such payment failure is specifically addressed in a Service Agreement.  Subject to remedy provisions in any applicable Service Agreement, such termination will be an additional remedy and will not prejudice the right of the Party not in default: (i) to collect any amounts due it for any damage or loss suffered by it, and (ii) will not waive any other remedy to which the Party not in default may be entitled for breach of this Statement of Operating Conditions and the Service Agreement.  
25.2. Other Rights Preserved. The availability or exercise of the right to terminate this Agreement pursuant to this Section shall not serve to diminish or affect the right of the Parties to seek damages or specific performance, for breach of this Agreement, as provided in this Agreement.


STATEMENT OF RATES
Effective Rates Applicable to Storage and Transportation Services 
Described in this Statement of Operating Conditions
WGS is authorized to charge market-based rates for the following services:
Firm Storage
Firm Parking
Firm Loaning
Interruptible Storage Interruptible Parking Interruptible Loaning


SCHEDULE "A"
Service Order for Gas Storage Services
Waha Gas Storage Facilities 
Reeves County, Texas
Agreement Number:  	
Customer Name:  	
Service Order Number: 	
Type of Service (check which is applicable):	? Intrastate Services  ? Interstate Services
Customer hereby elects the following Services at the following fees under the terms of the Gas Storage Service Agreement ("Agreement") with Waha Gas Storage, LLC ("WGS"). The terms used in this Service Order shall have the same meaning as defined in the Agreement.
1. TYPE AND PRIORITY OF SERVICE
Priority:  ? Firm  ? Interruptible
Type:  Storage
2. TRANSACTION PERIOD
Start Date of Service  	
End Date of Service  	
3. INTERCONNECTING PIPELINE(S)
RECEIPT POINT(S)  	  (Indicate Primary Point(s) as applicable)
DELIVERY POINT(S)  	  (Indicate Primary Point(s), as applicable)
4. QUANTITIES
FACILITIES CAPACITY
Maximum Interruptible Storage Inventory, up to but not to exceed (if applicable) 	 MMBtu
Reserved Storage Capacity, up to but not to exceed  	  MMBtu
Month through Month (if applicable)  	  MMBtu
TWENTY-FOUR (24) HOUR RATES
Maximum Daily Injection Quantity (MDIQ)  	  MMBtu
Month through Month (if applicable)  	  MMBtu
Maximum Daily Withdrawal Quantity (MDWQ)  	  MMBtu
Month through Month (if applicable)  	  MMBtu
5. SERVICE FEES
DEMAND CHARGE:	$	 per Month
COMMODITY CHARGES:
Inventory/Balance Rate  	 per MMBtu
Fuel  	 % of the Daily Injection Quantity (MMBtu)
Overrun Rate  	 per MMBtu*
(*WGS and Customer may agree to a different Overrun Rate at the time Customer requests overrun rights. The Overrun Rates are in addition to the applicable Commodity Charges.)
Excess Inventory Rate  	 per MMBtu per Day or Month (as applicable)
Any Other Charges/Fees  	
6. SPECIAL TERMS AND CONDITIONS

7. PROCEDURES
If the foregoing accurately reflects Customer's understanding of the terms of the Transaction agreed to by WGS and Customer, Customer shall sign and return this Service Order by email to:
Waha Gas Storage, LLC 
Attention: Contract Administration
WGS@wwm-llc.com
ACCEPTED AND AGREED TO THIS _____ DAY OF 	, 	:

Waha Gas Storage, LLC

"CUSTOMER"
By:

By:
Name:

Name:
Title:

Title:



SCHEDULE "B"
Service Order for Gas Storage Services 
Loaning Service 
Waha Gas Storage Facilities
Reeves County, Texas
Agreement Number:  	
Customer Name:  	
Service Order Number: 	
Type of Service (check which is applicable):	? Intrastate Services  ? Interstate Services
Customer hereby elects the following Services at the following fees under the terms of the Gas Storage Service Agreement ("Agreement") with Waha Gas Storage, LLC ("WGS"). The terms used in this Service Order shall have the same meaning as defined in the Agreement.
1. TYPE AND PRIORITY OF SERVICE
Priority:  ? Firm  ? Interruptible
Type:  Loaning
2. TRANSACTION PERIOD
Start Date of Service  	
End Date of Service  	
3. INTERCONNECTING PIPELINE(S)
RECEIPT POINT(S)  	  (Indicate Primary Point(s) as applicable)
DELIVERY POINT(S)  	  (Indicate Primary Point(s), as applicable)
4. QUANTITIES
FACILITIES CAPACITY
Maximum Aggregate Loan Quantity, up to but not to exceed 	 MMBtu
OTHER QUANTITIES

MMBtu/d
Start Date
End Date
Point
Maximum Daily Withdrawal Quantity* 
Maximum Daily Injection Quantity




* Cumulative Daily Withdrawal Quantities may not exceed the total Maximum Aggregate Loan Quantity. (as applicable)

5. SERVICE FEES
DEMAND CHARGE:	$	 per Month
COMMODITY CHARGES:
Initial Rate  	 per MMBtu
Inventory Rate/Balance Rate  	 per MMBtu
Completion Rate  	 per MMBtu
Fuel  	 % of the Daily Injection Quantity (MMBtu)
Overrun Rate  	 per MMBtu*
(*WGS and Customer may agree to a different Overrun Rate at the time Customer requests overrun rights. The Overrun Rates are in addition to the applicable Commodity Charges.)
Extended Loaning Rate  	 per MMBtu per Day or Month (as applicable)
Any Other Charges/Fees  	
6. PROCEDURES
If the foregoing accurately reflects Customer's understanding of the terms of the Transaction agreed to by WGS and Customer, Customer shall sign and return this Service Order by email to:
Waha Gas Storage, LLC 
Attention: Contract Administration
WGS@wwm-llc.com
ACCEPTED AND AGREED TO THIS _____ DAY OF 	, 	:
Waha Gas Storage, LLC

"CUSTOMER"
By:

By:
Name:

Name:
Title:

Title:



SCHEDULE "C"
Service Order for Gas Storage Services 
Parking Services 
Waha Gas Storage Facilities
Reeves County, Texas
Agreement Number:  	
Customer Name:  	
Service Order Number: 	
Type of Service (check which is applicable):	? Intrastate Services  ? Interstate Services
Customer hereby elects the following Services at the following fees under the terms of the Gas Storage Service Agreement ("Agreement") with Waha Gas Storage, LLC ("WGS"). The terms used in this Service Order shall have the same meaning as defined in the Agreement.
1. TYPE AND PRIORITY OF SERVICE
Priority:  ? Firm  ? Interruptible
Type:  Parking
2. TRANSACTION PERIOD
Start Date of Service  	
End Date of Service  	
3. INTERCONNECTING PIPELINE(S)
RECEIPT POINT(S)  	  (Indicate Primary Point(s) as applicable)
DELIVERY POINT(S)  	  (Indicate Primary Point(s), as applicable)
4. QUANTITIES
FACILITIES CAPACITY
Maximum Aggregate Parking Quantity, up to but not to exceed (if applicable) 	 MMBtu
OTHER QUANTITIES

MMBtu/d
Start Date
End Date
Point
Maximum Daily Injection Quantity* 
Maximum Daily Withdrawal Quantity




* Cumulative Daily Injection Quantities net of Fuel may not exceed the total Maximum Aggregate Park Quantity. (as applicable)

5. SERVICE FEES
DEMAND CHARGE:	$	 per Month
COMMODITY CHARGES:
Initial Rate  	 per MMBtu
Inventory Rate/Balance Rate  	 per MMBtu
Completion Rate  	 per MMBtu
Fuel  	 % of the Daily Injection Quantity (MMBtu)
Overrun Rate  	 per MMBtu*
(*WGS and Customer may agree to a different Overrun Rate at the time Customer requests overrun rights. The Overrun Rates are in addition to the applicable Commodity Charges.)
Excess Inventory Rate  	 per MMBtu per Day or Month (as applicable)
Any Other Charges/Fees  	
6. PROCEDURES
If the foregoing accurately reflects Customer's understanding of the terms of the Transaction agreed to by WGS and Customer, Customer shall sign and return this Service Order by email to:
Waha Gas Storage, LLC 
Attention: Contract Administration
WGS@wwm-llc.com
ACCEPTED AND AGREED TO THIS _____ DAY OF 	, 	:
Waha Gas Storage, LLC

"CUSTOMER"
By:

By:
Name:

Name:
Title:

Title:





Waha Gas Storage Statement of Operating Conditions
Page 1</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>8122022</filing_id>
      <filing_title>Waha Gas Storage Amended SOC Filing</filing_title>
      <filing_type>1000</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2022-05-01</current_effective_date>
      <ferc_order_date>2022-09-29</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
  </ferc_filing_data>
</Document>