<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Document xmlns="http://ferc.gov/etariffExport.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ferc_filing_data>
    <schema_version>2</schema_version>
    <company_id>C003313</company_id>
    <lead_applicant_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
    <tariff_id>61</tariff_id>
    <tariff_title>Middletown Cogeneration MBR Tariff</tariff_title>
    <tariff_export_date>2025-09-16T19:55Z</tariff_export_date>
    <export_schema_version>2</export_schema_version>
    <record_data>
      <record_id>942</record_id>
      <option_code>A</option_code>
      <record_title>MBR Tariff</record_title>
      <record_content_desc>Section 1</record_content_desc>
      <record_version_num>2.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>1000</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-01-01</proposed_effective_date>
      <priority_order>800</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data>e1xydGYxXGRlZmYwe1xmb250dGJse1xmMCBUaW1lcyBOZXcgUm9tYW47fXtcZjEgU3ltYm9sO317XGYyIEFyaWFsO319e1xjb2xvcnRibFxyZWQwXGdyZWVuMFxibHVlMCA7XHJlZDBcZ3JlZW4wXGJsdWUyNTUgO1xyZWQyNTVcZ3JlZW4yNTVcYmx1ZTI1NSA7fXtcKlxkZWZwYXAgXHNhMjQwfXtcKlxsaXN0dGFibGUge1xsaXN0XGxpc3R0ZW1wbGF0ZWlkLTFcbGlzdGh5YnJpZHtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMFxmaS0zNjBcbGkxODAwXGxpbjE4MDB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkOTk0MTk2MzU5IFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ5OTQxOTYzNTkgXCcwMlwnMDAuO317XGxldmVsbnVtYmVyc1wnMDE7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcY2YwfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDk5NDE5NjM1OSBcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkOTk0MTk2MzU5IFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ5OTQxOTYzNTkgXCcwMlwnMDAuO317XGxldmVsbnVtYmVyc1wnMDE7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcY2YwfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDk5NDE5NjM1OSBcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkOTk0MTk2MzU5IFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ5OTQxOTYzNTkgXCcwMlwnMDAuO317XGxldmVsbnVtYmVyc1wnMDE7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcY2YwfXtcbGlzdG5hbWUgO31cbGlzdGlkLTEzMn17XGxpc3RcbGlzdHRlbXBsYXRlaWQtMVxsaXN0aHlicmlke1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMlwnMDAuO317XGxldmVsbnVtYmVyc1wnMDE7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcY2YwXGZpLTM2MFxsaTE0NDBcbGluMTQ0MH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ5OTQxOTYzNTkgXCcwMlwnMDAuO317XGxldmVsbnVtYmVyc1wnMDE7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcY2YwfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDk5NDE5NjM1OSBcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkOTk0MTk2MzU5IFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ5OTQxOTYzNTkgXCcwMlwnMDAuO317XGxldmVsbnVtYmVyc1wnMDE7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcY2YwfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDk5NDE5NjM1OSBcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkOTk0MTk2MzU5IFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ5OTQxOTYzNTkgXCcwMlwnMDAuO317XGxldmVsbnVtYmVyc1wnMDE7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcY2YwfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDk5NDE5NjM1OSBcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjB9e1xsaXN0bmFtZSA7fVxsaXN0aWQtMTMxfXtcbGlzdFxsaXN0dGVtcGxhdGVpZC0xXGxpc3RoeWJyaWR7XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjBcZmktMzYwXGxpMTA4MFxsaW4xMDgwfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDk5NDE5NjM1OSBcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkOTk0MTk2MzU5IFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ5OTQxOTYzNTkgXCcwMlwnMDAuO317XGxldmVsbnVtYmVyc1wnMDE7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcY2YwfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDk5NDE5NjM1OSBcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkOTk0MTk2MzU5IFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ5OTQxOTYzNTkgXCcwMlwnMDAuO317XGxldmVsbnVtYmVyc1wnMDE7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcY2YwfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDk5NDE5NjM1OSBcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkOTk0MTk2MzU5IFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMH17XGxpc3RuYW1lIDt9XGxpc3RpZC0xMzB9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkLTFcbGlzdGh5YnJpZHtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMFxmaS0zNjBcbGk3MjBcbGluNzIwfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDk5NDE5NjM1OSBcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkOTk0MTk2MzU5IFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ5OTQxOTYzNTkgXCcwMlwnMDAuO317XGxldmVsbnVtYmVyc1wnMDE7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcY2YwfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDk5NDE5NjM1OSBcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkOTk0MTk2MzU5IFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ5OTQxOTYzNTkgXCcwMlwnMDAuO317XGxldmVsbnVtYmVyc1wnMDE7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcY2YwfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDk5NDE5NjM1OSBcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkOTk0MTk2MzU5IFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMH17XGxpc3RuYW1lIDt9XGxpc3RpZC0xMjl9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkLTFcbGlzdGh5YnJpZHtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1LTM5MTNcJzNmO317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmMVxjZjBcZmktMzYwXGxpMTgwMFxsaW4xODAwfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDk5NDE5NjM1OSBcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkOTk0MTk2MzU5IFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ5OTQxOTYzNTkgXCcwMlwnMDAuO317XGxldmVsbnVtYmVyc1wnMDE7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcY2YwfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDk5NDE5NjM1OSBcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkOTk0MTk2MzU5IFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ5OTQxOTYzNTkgXCcwMlwnMDAuO317XGxldmVsbnVtYmVyc1wnMDE7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcY2YwfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDk5NDE5NjM1OSBcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkOTk0MTk2MzU5IFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMH17XGxpc3RuYW1lIDt9XGxpc3RpZC0xMjh9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkLTFcbGlzdGh5YnJpZHtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1LTM5MTNcJzNmO317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmMVxjZjBcZmktMzYwXGxpMTQ0MFxsaW4xNDQwfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDk5NDE5NjM1OSBcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkOTk0MTk2MzU5IFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ5OTQxOTYzNTkgXCcwMlwnMDAuO317XGxldmVsbnVtYmVyc1wnMDE7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcY2YwfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDk5NDE5NjM1OSBcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkOTk0MTk2MzU5IFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ5OTQxOTYzNTkgXCcwMlwnMDAuO317XGxldmVsbnVtYmVyc1wnMDE7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcY2YwfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDk5NDE5NjM1OSBcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkOTk0MTk2MzU5IFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMH17XGxpc3RuYW1lIDt9XGxpc3RpZC0xMjd9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkLTFcbGlzdGh5YnJpZHtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1LTM5MTNcJzNmO317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmMVxjZjBcZmktMzYwXGxpMTA4MFxsaW4xMDgwfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDk5NDE5NjM1OSBcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkOTk0MTk2MzU5IFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ5OTQxOTYzNTkgXCcwMlwnMDAuO317XGxldmVsbnVtYmVyc1wnMDE7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcY2YwfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDk5NDE5NjM1OSBcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkOTk0MTk2MzU5IFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ5OTQxOTYzNTkgXCcwMlwnMDAuO317XGxldmVsbnVtYmVyc1wnMDE7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcY2YwfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDk5NDE5NjM1OSBcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkOTk0MTk2MzU5IFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMH17XGxpc3RuYW1lIDt9XGxpc3RpZC0xMjZ9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkLTFcbGlzdGh5YnJpZHtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMVx1LTM5MTNcJzNmO317XGxldmVsbnVtYmVyczt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxmMVxjZjBcZmktMzYwXGxpNzIwXGxpbjcyMH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ5OTQxOTYzNTkgXCcwMlwnMDAuO317XGxldmVsbnVtYmVyc1wnMDE7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcY2YwfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDk5NDE5NjM1OSBcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkOTk0MTk2MzU5IFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ5OTQxOTYzNTkgXCcwMlwnMDAuO317XGxldmVsbnVtYmVyc1wnMDE7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcY2YwfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDk5NDE5NjM1OSBcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkOTk0MTk2MzU5IFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ5OTQxOTYzNTkgXCcwMlwnMDAuO317XGxldmVsbnVtYmVyc1wnMDE7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcY2YwfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDk5NDE5NjM1OSBcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjB9e1xsaXN0bmFtZSA7fVxsaXN0aWQtMTI1fXtcbGlzdFxsaXN0dGVtcGxhdGVpZC0xXGxpc3RoeWJyaWR7XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjBcZmktMzYwXGxpMzYwXGxpbjM2MH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ5OTQxOTYzNTkgXCcwMlwnMDAuO317XGxldmVsbnVtYmVyc1wnMDE7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcY2YwfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDk5NDE5NjM1OSBcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkOTk0MTk2MzU5IFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ5OTQxOTYzNTkgXCcwMlwnMDAuO317XGxldmVsbnVtYmVyc1wnMDE7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcY2YwfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDk5NDE5NjM1OSBcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkOTk0MTk2MzU5IFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ5OTQxOTYzNTkgXCcwMlwnMDAuO317XGxldmVsbnVtYmVyc1wnMDE7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcY2YwfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDk5NDE5NjM1OSBcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjB9e1xsaXN0bmFtZSA7fVxsaXN0aWQtMTIwfXtcbGlzdFxsaXN0dGVtcGxhdGVpZC0xXGxpc3RoeWJyaWR7XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDFcdS0zOTEzXCczZjt9e1xsZXZlbG51bWJlcnM7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcZjFcY2YwXGZpLTM2MFxsaTM2MFxsaW4zNjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkOTk0MTk2MzU5IFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ5OTQxOTYzNTkgXCcwMlwnMDAuO317XGxldmVsbnVtYmVyc1wnMDE7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcY2YwfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDk5NDE5NjM1OSBcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkOTk0MTk2MzU5IFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ5OTQxOTYzNTkgXCcwMlwnMDAuO317XGxldmVsbnVtYmVyc1wnMDE7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcY2YwfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDk5NDE5NjM1OSBcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkOTk0MTk2MzU5IFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ5OTQxOTYzNTkgXCcwMlwnMDAuO317XGxldmVsbnVtYmVyc1wnMDE7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcY2YwfXtcbGlzdG5hbWUgO31cbGlzdGlkLTExOX17XGxpc3RcbGlzdHRlbXBsYXRlaWQtMXtcbGlzdGxldmVsXGxldmVsbmZjM1xsZXZlbG5mY24zXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMFxmaS0zNjBcbGkyMTYwXGxpbjIxNjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMlwnMDEuO317XGxldmVsbnVtYmVyc1wnMDE7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcY2YwXGZpLTM2MFxsaTI4ODBcbGluMjg4MH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAyXCcwMi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjBcZmktMTgwXGxpMzYwMFxsaW4zNjAwfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDJcJzAzLjt9e1xsZXZlbG51bWJlcnNcJzAxO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMFxmaS0zNjBcbGk0MzIwXGxpbjQzMjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMlwnMDQuO317XGxldmVsbnVtYmVyc1wnMDE7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcY2YwXGZpLTM2MFxsaTUwNDBcbGluNTA0MH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAyXCcwNS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjBcZmktMTgwXGxpNTc2MFxsaW41NzYwfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDJcJzA2Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMFxmaS0zNjBcbGk2NDgwXGxpbjY0ODB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMlwnMDcuO317XGxldmVsbnVtYmVyc1wnMDE7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcY2YwXGZpLTM2MFxsaTcyMDBcbGluNzIwMH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAyXCcwOC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjBcZmktMTgwXGxpNzkyMFxsaW43OTIwfXtcbGlzdG5hbWUgO31cbGlzdGlkNTQ3MjU3MjEwfXtcbGlzdFxsaXN0dGVtcGxhdGVpZC0xe1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMlwnMDApO317XGxldmVsbnVtYmVyc1wnMDE7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcY2YwXGZpLTM2MFxsaTM2MFxsaW4zNjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMlwnMDEpO317XGxldmVsbnVtYmVyc1wnMDE7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcY2YwXGZpLTM2MFxsaTcyMFxsaW43MjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMlwnMDIpO317XGxldmVsbnVtYmVyc1wnMDE7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcY2YwXGZpLTM2MFxsaTEwODBcbGluMTA4MH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAzKFwnMDMpO317XGxldmVsbnVtYmVyc1wnMDI7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcY2YwXGZpLTM2MFxsaTE0NDBcbGluMTQ0MH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAzKFwnMDQpO317XGxldmVsbnVtYmVyc1wnMDI7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcY2YwXGZpLTM2MFxsaTE4MDBcbGluMTgwMH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAzKFwnMDUpO317XGxldmVsbnVtYmVyc1wnMDI7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcY2YwXGZpLTM2MFxsaTIxNjBcbGluMjE2MH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAyXCcwNi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjBcZmktMzYwXGxpMjUyMFxsaW4yNTIwfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDJcJzA3Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMFxmaS0zNjBcbGkyODgwXGxpbjI4ODB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMlwnMDguO317XGxldmVsbnVtYmVyc1wnMDE7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcY2YwXGZpLTM2MFxsaTMyNDBcbGluMzI0MH17XGxpc3RuYW1lIDt9XGxpc3RpZDU2ODA3NzUxNX17XGxpc3RcbGlzdHRlbXBsYXRlaWQtMXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMFxmaTcyMH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAyXCcwMS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjBcZmk3MjBcbGk3MjBcbGluNzIwfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDJcJzAyLjt9e1xsZXZlbG51bWJlcnNcJzAxO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMFxmaTcyMFxsaTE0NDBcbGluMTQ0MH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAzKFwnMDMpO317XGxldmVsbnVtYmVyc1wnMDI7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcY2YwXGZpNzIwXGxpMjE2MFxsaW4yMTYwfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDMoXCcwNCk7fXtcbGV2ZWxudW1iZXJzXCcwMjt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjBcZmk3MjBcbGkyODgwXGxpbjI4ODB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMyhcJzA1KTt9e1xsZXZlbG51bWJlcnNcJzAyO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMFxmaTcyMFxsaTM2MDBcbGluMzYwMH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAyXCcwNik7fXtcbGV2ZWxudW1iZXJzXCcwMTt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjBcZmk3MjBcbGk0MzIwXGxpbjQzMjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMlwnMDcpO317XGxldmVsbnVtYmVyc1wnMDE7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcY2YwXGZpNzIwXGxpNTA0MFxsaW41MDQwfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDJcJzA4KTt9e1xsZXZlbG51bWJlcnNcJzAxO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMFxmaTcyMFxsaTU3NjBcbGluNTc2MH17XGxpc3RuYW1lIDt9XGxpc3RpZDg1MjY5MDkwNH17XGxpc3RcbGlzdHRlbXBsYXRlaWQtMXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnNcJzAxO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMFxmaTcyMH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAyXCcwMS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjBcZmk3MjBcbGk3MjBcbGluNzIwfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDJcJzAyLjt9e1xsZXZlbG51bWJlcnNcJzAxO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMFxmaTcyMFxsaTE0NDBcbGluMTQ0MH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAzKFwnMDMpO317XGxldmVsbnVtYmVyc1wnMDI7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcY2YwXGZpNzIwXGxpMjE2MFxsaW4yMTYwfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDMoXCcwNCk7fXtcbGV2ZWxudW1iZXJzXCcwMjt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjBcZmk3MjBcbGkyODgwXGxpbjI4ODB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMyhcJzA1KTt9e1xsZXZlbG51bWJlcnNcJzAyO31cbGV2ZWxsZWdhbDBcbGV2ZWxub3Jlc3RhcnQwXGNmMFxmaTcyMFxsaTM2MDBcbGluMzYwMH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAyXCcwNik7fXtcbGV2ZWxudW1iZXJzXCcwMTt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjBcZmk3MjBcbGk0MzIwXGxpbjQzMjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMlwnMDcpO317XGxldmVsbnVtYmVyc1wnMDE7fVxsZXZlbGxlZ2FsMFxsZXZlbG5vcmVzdGFydDBcY2YwXGZpNzIwXGxpNTA0MFxsaW41MDQwfXtcbGlzdGxldmVsXGxldmVsbmZjM1xsZXZlbG5mY24zXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzJcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDlFeGhpYml0IFwnMDg7fXtcbGV2ZWxudW1iZXJzXCcwOTt9XGxldmVsbGVnYWwwXGxldmVsbm9yZXN0YXJ0MFxjZjB9e1xsaXN0bmFtZSA7fVxsaXN0aWQ5NDEzODExOTB9fXtcKlxsaXN0b3ZlcnJpZGV0YWJsZSB7XGxpc3RvdmVycmlkZVxsaXN0aWQ5NDEzODExOTBcbGlzdG92ZXJyaWRlY291bnQwXGxzMX17XGxpc3RvdmVycmlkZVxsaXN0aWQ4NTI2OTA5MDRcbGlzdG92ZXJyaWRlY291bnQwXGxzMn17XGxpc3RvdmVycmlkZVxsaXN0aWQtMTE5XGxpc3RvdmVycmlkZWNvdW50MFxsczN9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkLTEyNVxsaXN0b3ZlcnJpZGVjb3VudDBcbHM0fXtcbGlzdG92ZXJyaWRlXGxpc3RpZC0xMjZcbGlzdG92ZXJyaWRlY291bnQwXGxzNX17XGxpc3RvdmVycmlkZVxsaXN0aWQtMTI3XGxpc3RvdmVycmlkZWNvdW50MFxsczZ9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkLTEyOFxsaXN0b3ZlcnJpZGVjb3VudDBcbHM3fXtcbGlzdG92ZXJyaWRlXGxpc3RpZC0xMjBcbGlzdG92ZXJyaWRlY291bnQwXGxzOH17XGxpc3RvdmVycmlkZVxsaXN0aWQtMTI5XGxpc3RvdmVycmlkZWNvdW50MFxsczl9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkLTEzMFxsaXN0b3ZlcnJpZGVjb3VudDBcbHMxMH17XGxpc3RvdmVycmlkZVxsaXN0aWQtMTMxXGxpc3RvdmVycmlkZWNvdW50MFxsczExfXtcbGlzdG92ZXJyaWRlXGxpc3RpZC0xMzJcbGlzdG92ZXJyaWRlY291bnQwXGxzMTJ9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkNTQ3MjU3MjEwXGxpc3RvdmVycmlkZWNvdW50MFxsczEzfXtcbGlzdG92ZXJyaWRlXGxpc3RpZDU2ODA3NzUxNVxsaXN0b3ZlcnJpZGVjb3VudDBcbHMxNH19e1xzdHlsZXNoZWV0IHtccWxcY2YwIE5vcm1hbDt9e1xzMVxzYmFzZWRvbjBccWxcZmkxNDQwXGNmMFxsczEyIExpc3QgTnVtYmVyIDU7fXtcczJcc2Jhc2Vkb24wXHFsXGZpNzIwXGNmMFxsczExIExpc3QgTnVtYmVyIDQ7fXtcczNcc2Jhc2Vkb24wXHFsXGZpLTcyMFxsaTIxNjBcbGluMjE2MFxjZjBcbHMxMCBMaXN0IE51bWJlciAzO317XHM0XHNiYXNlZG9uMFxxbFxmaS03MjBcbGkxNDQwXGxpbjE0NDBcY2YwXGxzOSBMaXN0IE51bWJlciAyO317XHM1XHNiYXNlZG9uMFxxbFxmaS03MjBcbGk3MjBcbGluNzIwXGNmMFxsczggTGlzdCBOdW1iZXI7fXtcczZcc2Jhc2Vkb24wXHFsXGZpMjE2MFxzYTEyMFxjZjAgTGlzdCBDb250aW51ZSA1O317XHM3XHNiYXNlZG9uMFxxbFxmaTE0NDBcc2ExMjBcY2YwIExpc3QgQ29udGludWUgNDt9e1xzOFxzYmFzZWRvbjBccWxcbGkyMTYwXGxpbjIxNjBcc2ExMjBcY2YwIExpc3QgQ29udGludWUgMzt9e1xzOVxzYmFzZWRvbjBccWxcbGkxNDQwXGxpbjE0NDBcc2ExMjBcY2YwIExpc3QgQ29udGludWUgMjt9e1xzMTBcc2Jhc2Vkb24wXHFsXGxpNzIwXGxpbjcyMFxzYTEyMFxjZjAgTGlzdCBDb250aW51ZTt9e1xzMTFcc2Jhc2Vkb24wXHFsXGxpMzYwMFxsaW4zNjAwXGNmMCBMaXN0IDU7fXtcczEyXHNiYXNlZG9uMFxxbFxsaTI4ODBcbGluMjg4MFxjZjAgTGlzdCA0O317XHMxM1xzYmFzZWRvbjBccWxcbGkyMTYwXGxpbjIxNjBcY2YwIExpc3QgMzt9e1xzMTRcc2Jhc2Vkb24wXHFsXGxpMTQ0MFxsaW4xNDQwXGNmMCBMaXN0IDI7fXtcczE1XHNiYXNlZG9uMFxxbFxsaTcyMFxsaW43MjBcY2YwIExpc3Q7fXtcczE2XHNiYXNlZG9uMFxxbFxmaS03MjBcbGkzNjAwXGxpbjM2MDBcY2YwXGxzNyBMaXN0IEJ1bGxldCA1O317XHMxN1xzYmFzZWRvbjBccWxcZmktNzIwXGxpMjg4MFxsaW4yODgwXGNmMFxsczYgTGlzdCBCdWxsZXQgNDt9e1xzMThcc2Jhc2Vkb24wXHFsXGZpLTcyMFxsaTIxNjBcbGluMjE2MFxjZjBcbHM1IExpc3QgQnVsbGV0IDM7fXtcczE5XHNiYXNlZG9uMFxxbFxmaS03MjBcbGkxNDQwXGxpbjE0NDBcY2YwXGxzNCBMaXN0IEJ1bGxldCAyO317XHMyMFxzYmFzZWRvbjBccWxcZmktNzIwXGxpNzIwXGxpbjcyMFxjZjBcbHMzIExpc3QgQnVsbGV0O317XHMyMVxzYmFzZWRvbjBccWxcY2YwIGhlYWRlcjt9e1xzMjJcc2Jhc2Vkb24wXHNuZXh0MFxxbFx2XGNmMCBISURERU47fXtcczIzXHNiYXNlZG9uMFxxbFxzbDQ4MFxzbG11bHQxXGNmMCBOb3JtYWwgRG91YmxlO317XHMyNFxzYmFzZWRvbjBccWNcY2Fwc1xiXGNmMCBUT0MgSGVhZGluZzt9e1xzMjVcc2Jhc2Vkb24wXHFsXGZpLTcyMFxsaTcyMFxsaW43MjBccmk3MjBccmluNzIwXGNmMCBUT0MgQmFzZTt9e1xzMjZcc2Jhc2Vkb24wXHNuZXh0NDZccWNcb3V0bGluZWxldmVsMVxzYjEyMFxiXGNmMCBTdWJ0aXRsZTt9e1xzMjdcc2Jhc2Vkb24wXHFsXGxpNDY4MFxsaW40NjgwXGNmMCBTaWduYXR1cmU7fXtcczI4XHNiYXNlZG9uMFxzbmV4dDBccWxcdWxcY2YwIFNjaGVkdWxlIEhlYWRpbmc7fXtcczI5XHNiYXNlZG9uMFxzbmV4dDBccWxcdWxcY2YwIFJpZGVyIEhlYWRpbmc7fXtcczMwXHNiYXNlZG9uMFxxbFxmaTE0NDBcbGk1NzYwXGxpbjU3NjBcY2YwIFBhcmE5O317XHMzMVxzYmFzZWRvbjBccWxcY2YwIEhlYWRpbmcgQmFzZTt9e1xzMzJcc2Jhc2Vkb24wXHFsXGNmMCBIZWFkaW5nO317XHMzM1xzYmFzZWRvbjBccWxcY2YwIGZvb3Rlcjt9e1xzMzRcc2Jhc2Vkb24wXHNuZXh0MFxxbFxsaS03MjBcbGluLTcyMFxmMlxmczE2XGNmMCBEb2NJRDt9e1xzMzVcc2Jhc2Vkb24wXHFsXGxpNzIwXGxpbjcyMFxyaTcyMFxyaW43MjBcc2w0ODBcc2xtdWx0MVxjZjAgQm9keSBUZXh0IEluZGVudCA0O317XHMzNlxzYmFzZWRvbjBccWxcbGk3MjBcbGluNzIwXHJpNzIwXHJpbjcyMFxjZjAgQm9keSBUZXh0IEluZGVudCAzO317XHMzN1xzYmFzZWRvbjBccWxcZmk3MjBcbGkxNDQwXGxpbjE0NDBcc2w0ODBcc2xtdWx0MVxjZjAgQm9keSBUZXh0IEluZGVudCAyO317XHMzOFxzYmFzZWRvbjBccWxcZmktMjE2MFxsaTIxNjBcbGluMjE2MFxjZjAgQm9keSBUZXh0IEhhbmdpbmc7fXtcczM5XHNiYXNlZG9uMFxxbFxmaTcyMFxzbDM2MFxzbG11bHQxXGNmMCBCb2R5IFRleHQgRmlyc3QgSW5kZW50IDM7fXtcczQwXHNiYXNlZG9uMFxxbFxmaTcyMFxzbDQ4MFxzbG11bHQxXGNmMCBCb2R5IFRleHQgRmlyc3QgSW5kZW50IDI7fXtcczQxXHNiYXNlZG9uMFxxbFxmaTcyMFxsaTE0NDBcbGluMTQ0MFxjZjAgQm9keSBUZXh0IEluZGVudDt9e1xzNDJcc2Jhc2Vkb24wXHFsXGZpNzIwXGNmMCBCb2R5IFRleHQgRmlyc3QgSW5kZW50O317XHM0M1xzYmFzZWRvbjBccWxcc2w0ODBcc2xtdWx0MVxjZjAgQm9keSBUZXh0IDQ7fXtcczQ0XHNiYXNlZG9uMFxxbFxjZjAgQm9keSBUZXh0IDM7fXtcczQ1XHNiYXNlZG9uMFxxbFxmaTE0NDBcc2w0ODBcc2xtdWx0MVxjZjAgQm9keSBUZXh0IDI7fXtcczQ2XHNiYXNlZG9uMFxxbFxmaTE0NDBcY2YwIEJvZHkgVGV4dDt9e1xzNDdcc2Jhc2Vkb24wXHFsXGZpNzIwXGxpMTQ0MFxsaW4xNDQwXHJpMTQ0MFxyaW4xNDQwXHNsNDgwXHNsbXVsdDFcY2YwIEJsb2NrIFRleHQgNDt9e1xzNDhcc2Jhc2Vkb24wXHFsXGZpNzIwXGxpMTQ0MFxsaW4xNDQwXHJpMTQ0MFxyaW4xNDQwXGNmMCBCbG9jayBUZXh0IDM7fXtcczQ5XHNiYXNlZG9uMFxxbFxsaTE0NDBcbGluMTQ0MFxyaTE0NDBccmluMTQ0MFxzbDQ4MFxzbG11bHQxXGNmMCBCbG9jayBUZXh0IDI7fXtcczUwXHNiYXNlZG9uMFxxbFxsaTE0NDBcbGluMTQ0MFxyaTE0NDBccmluMTQ0MFxjZjAgQmxvY2sgVGV4dDt9e1xzNTFcc2Jhc2Vkb24wXHNuZXh0MFxxbFx1bFxjZjAgQWRkZW5kdW0gSGVhZGluZzt9e1xzNTJcc2Jhc2Vkb24wXHNuZXh0NDZccWNcb3V0bGluZWxldmVsMFxzYjEyMFxjYXBzXGJcY2YwIFRpdGxlO317XHM1M1xzYmFzZWRvbjBcc25leHQwXHFjXG91dGxpbmVsZXZlbDhcY2Fwc1xiXGNmMFxsczFcaWx2bDggaGVhZGluZyA5O317XHM1NFxzYmFzZWRvbjBccWxcb3V0bGluZWxldmVsN1xjZjBcbHMxXGlsdmw3IGhlYWRpbmcgODt9e1xzNTVcc2Jhc2Vkb24wXHFsXG91dGxpbmVsZXZlbDZcY2YwXGxzMVxpbHZsNiBoZWFkaW5nIDc7fXtcczU2XHNiYXNlZG9uMFxxbFxvdXRsaW5lbGV2ZWw1XGNmMFxsczFcaWx2bDUgaGVhZGluZyA2O317XHM1N1xzYmFzZWRvbjBccWxcb3V0bGluZWxldmVsNFxjZjBcbHMxXGlsdmw0IGhlYWRpbmcgNTt9e1xzNThcc2Jhc2Vkb24wXHFsXG91dGxpbmVsZXZlbDNcY2YwXGxzMVxpbHZsMyBoZWFkaW5nIDQ7fXtcczU5XHNiYXNlZG9uMFxxbFxvdXRsaW5lbGV2ZWwyXGNmMFxsczFcaWx2bDIgaGVhZGluZyAzO317XHM2MFxzYmFzZWRvbjBccWxcb3V0bGluZWxldmVsMVxjZjBcbHMxXGlsdmwxIGhlYWRpbmcgMjt9e1xzNjFcc2Jhc2Vkb24wXHFsXG91dGxpbmVsZXZlbDBcY2YwXGxzMSBoZWFkaW5nIDE7fXtcczYyXHNiYXNlZG9uMjVcc25leHQwXHFsXGZpLTcyMFxsaTcyMFxsaW43MjBccmk3MjBccmluNzIwXGNmMCB0b2MgOTt9e1xzNjNcc2Jhc2Vkb24yNVxzbmV4dDBccWxcZmktNzIwXGxpNTc2MFxsaW41NzYwXHJpNzIwXHJpbjcyMFxjZjAgdG9jIDg7fXtcczY0XHNiYXNlZG9uMjVcc25leHQwXHFsXGZpLTcyMFxsaTUwNDBcbGluNTA0MFxyaTcyMFxyaW43MjBcY2YwIHRvYyA3O317XHM2NVxzYmFzZWRvbjI1XHNuZXh0MFxxbFxmaS03MjBcbGk0MzIwXGxpbjQzMjBccmk3MjBccmluNzIwXGNmMCB0b2MgNjt9e1xzNjZcc2Jhc2Vkb24yNVxzbmV4dDBccWxcZmktNzIwXGxpMzYwMFxsaW4zNjAwXHJpNzIwXHJpbjcyMFxjZjAgdG9jIDU7fXtcczY3XHNiYXNlZG9uMjVcc25leHQwXHFsXGZpLTcyMFxsaTI4ODBcbGluMjg4MFxyaTcyMFxyaW43MjBcY2YwIHRvYyA0O317XHM2OFxzYmFzZWRvbjI1XHNuZXh0MFxxbFxmaS03MjBcbGkyMTYwXGxpbjIxNjBccmk3MjBccmluNzIwXGNmMCB0b2MgMzt9e1xzNjlcc2Jhc2Vkb24yNVxzbmV4dDBccWxcZmktNzIwXGxpMTQ0MFxsaW4xNDQwXHJpNzIwXHJpbjcyMFxjZjAgdG9jIDI7fXtcczcwXHNiYXNlZG9uMjVcc25leHQwXHFsXGZpLTcyMFxsaTcyMFxsaW43MjBccmk3MjBccmluNzIwXHNiMjQwXGNmMCB0b2MgMTt9e1xzNzFcc2Jhc2Vkb24yNlxzbmV4dDQ2XHFsXHVsXGNmMCBTdWJ0aXRsZSBVbmRlcmxpbmU7fXtcczcyXHNiYXNlZG9uMzFccWxcY2YwXGxzMlxpbHZsOCBMZXZlbCA5O317XHM3M1xzYmFzZWRvbjMxXHFsXGNmMFxsczJcaWx2bDcgTGV2ZWwgODt9e1xzNzRcc2Jhc2Vkb24zMVxxbFxjZjBcbHMyXGlsdmw2IExldmVsIDc7fXtcczc1XHNiYXNlZG9uMzFccWxcY2YwXGxzMlxpbHZsNSBMZXZlbCA2O317XHM3NlxzYmFzZWRvbjMxXHFsXGNmMFxsczJcaWx2bDQgTGV2ZWwgNTt9e1xzNzdcc2Jhc2Vkb24zMVxxbFxjZjBcbHMyXGlsdmwzIExldmVsIDQ7fXtcczc4XHNiYXNlZG9uMzFccWxcY2YwXGxzMlxpbHZsMiBMZXZlbCAzO317XHM3OVxzYmFzZWRvbjMxXHFsXGNmMFxsczJcaWx2bDEgTGV2ZWwgMjt9e1xzODBcc2Jhc2Vkb24zMVxxbFxjZjBcbHMyIExldmVsIDE7fXtcczgxXHNiYXNlZG9uMzFccWxcZmkxNDQwXGxpNTA0MFxsaW41MDQwXGNmMCBQYXJhODt9e1xzODJcc2Jhc2Vkb24zMVxxbFxmaTE0NDBcbGk0MzIwXGxpbjQzMjBcY2YwIFBhcmE3O317XHM4M1xzYmFzZWRvbjMxXHFsXGZpMTQ0MFxsaTM2MDBcbGluMzYwMFxjZjAgUGFyYTY7fXtcczg0XHNiYXNlZG9uMzFccWxcZmkxNDQwXGxpMjg4MFxsaW4yODgwXGNmMCBQYXJhNTt9e1xzODVcc2Jhc2Vkb24zMVxxbFxmaTE0NDBcbGkyMTYwXGxpbjIxNjBcY2YwIFBhcmE0O317XHM4NlxzYmFzZWRvbjMxXHFsXGZpMTQ0MFxsaTE0NDBcbGluMTQ0MFxjZjAgUGFyYTM7fXtcczg3XHNiYXNlZG9uMzFccWxcZmkxNDQwXGxpNzIwXGxpbjcyMFxjZjAgUGFyYTI7fXtcczg4XHNiYXNlZG9uMzFccWxcZmkxNDQwXGNmMCBQYXJhMTt9e1xzODlcc2Jhc2Vkb24zM1xxbFxzYTI0MFxjZjAgRnJhbWUgUGFnZSBOdW1iZXI7fXtcczkwXHNiYXNlZG9uMzNccWxcc2EyNDBcZjJcZnMxNlxjZjAgRnJhbWUgRGF0ZSBhbmQgVGltZTt9e1xzOTFcc2Jhc2Vkb240NlxxbFxmaTE0NDBcY2YwXGxzMTMgTGlzdCBOdW1iZXIgQTt9e1xzOTJcc2Jhc2Vkb241MlxzbmV4dDQ2XHFsXHVsXGNmMCBUaXRsZSBVbmRlcmxpbmU7fXtcczkzXHNiYXNlZG9uNTJcc25leHQwXHFsXGNmMCBTY2hlZHVsZTt9e1xzOTRcc2Jhc2Vkb241MlxzbmV4dDBccWxcY2YwIFJpZGVyO317XHM5NVxzYmFzZWRvbjUyXHNuZXh0MFxxbFxjZjAgRXhoaWJpdDt9e1xzOTZcc2Jhc2Vkb241MlxzbmV4dDBccWxcY2YwIEFkZGVuZHVtO317XCpcY3M5N1xjZjAgRGVmYXVsdCBQYXJhZ3JhcGggRm9udDt9e1wqXGNzOThcc2Jhc2Vkb245N1xjZjAgTGluZSBOdW1iZXI7fXtcKlxjczk5XHVsXGNmMSBIeXBlcmxpbms7fXtcKlxjczEwMFxzYmFzZWRvbjk3XHNsaW5rNTJcY2Fwc1xiXGNmMCBUaXRsZSBDaGFyO317XCpcY3MxMDFcc2Jhc2Vkb245N1xjYXBzXHVsXGNmMCBBbGxDYXBzO317XCpcY3MxMDJcc2Jhc2Vkb245N1xzbGluazQ2XGNmMCBCb2R5IFRleHQgQ2hhcjt9e1wqXGNzMTAzXHNiYXNlZG9uOTdcc2xpbms0NVxjZjAgQm9keSBUZXh0IDIgQ2hhcjt9e1wqXGNzMTA0XHNiYXNlZG9uOTdcc2xpbms0NFxjZjAgQm9keSBUZXh0IDMgQ2hhcjt9e1wqXGNzMTA1XHNiYXNlZG9uMTAyXHNsaW5rNDJcY2YwIEJvZHkgVGV4dCBGaXJzdCBJbmRlbnQgQ2hhcjt9e1wqXGNzMTA2XHNiYXNlZG9uOTdcc2xpbms0MVxjZjAgQm9keSBUZXh0IEluZGVudCBDaGFyO317XCpcY3MxMDdcc2Jhc2Vkb24xMDZcc2xpbms0MFxjZjAgQm9keSBUZXh0IEZpcnN0IEluZGVudCAyIENoYXI7fXtcKlxjczEwOFxzYmFzZWRvbjk3XHNsaW5rMzdcY2YwIEJvZHkgVGV4dCBJbmRlbnQgMiBDaGFyO317XCpcY3MxMDlcc2Jhc2Vkb245N1xzbGluazM2XGNmMCBCb2R5IFRleHQgSW5kZW50IDMgQ2hhcjt9e1wqXGNzMTEwXHNiYXNlZG9uOTdcc2xpbmszM1xjZjAgRm9vdGVyIENoYXI7fXtcKlxjczExMVxzYmFzZWRvbjk3XHNsaW5rMjdcY2YwIFNpZ25hdHVyZSBDaGFyO317XCpcY3MxMTJcc2Jhc2Vkb245N1xzbGluazI2XGJcY2YwIFN1YnRpdGxlIENoYXI7fXtcKlxjczExM1xzYmFzZWRvbjk3XHNsaW5rNjFcY2YwIEhlYWRpbmcgMSBDaGFyO317XCpcY3MxMTRcc2Jhc2Vkb245N1xzbGluazYwXGNmMCBIZWFkaW5nIDIgQ2hhcjt9e1wqXGNzMTE1XHNiYXNlZG9uOTdcc2xpbms1OVxjZjAgSGVhZGluZyAzIENoYXI7fXtcKlxjczExNlxzYmFzZWRvbjk3XHNsaW5rNThcY2YwIEhlYWRpbmcgNCBDaGFyO317XCpcY3MxMTdcc2Jhc2Vkb245N1xzbGluazU3XGNmMCBIZWFkaW5nIDUgQ2hhcjt9e1wqXGNzMTE4XHNiYXNlZG9uOTdcc2xpbms1NlxjZjAgSGVhZGluZyA2IENoYXI7fXtcKlxjczExOVxzYmFzZWRvbjk3XHNsaW5rNTVcY2YwIEhlYWRpbmcgNyBDaGFyO317XCpcY3MxMjBcc2Jhc2Vkb245N1xzbGluazU0XGNmMCBIZWFkaW5nIDggQ2hhcjt9e1wqXGNzMTIxXHNiYXNlZG9uOTdcc2xpbms1M1xjYXBzXGJcY2YwIEhlYWRpbmcgOSBDaGFyO317XCpcY3MxMjJcc2Jhc2Vkb245N1xzbGluazIxXGNmMCBIZWFkZXIgQ2hhcjt9fVxzZWN0ZFxtYXJnbHN4bjE0NDBcbWFyZ3JzeG4xNDQwXG1hcmd0c3huMTQ0MFxtYXJnYnN4bjE0NDBcaGVhZGVyeTcyMFxmb290ZXJ5NzIwXGNvbHN4NzIwe1xsaXN0dGV4dFxwYXJkIDEuXHRhYiB9XHBhcmRccGxhaW5caWx2bDZcbHMxNFxxbFxmaS02MzBcbGk3MjBcbGluNzIwXHNsMjc1XHNsbXVsdDFcc2EyNDB7XHVsXGNmMFxjaGNicGF0MiBBdmFpbGFiaWxpdHl9e1xjZjBcY2hjYnBhdDIgLiAgfXtcY2YwIFNlbGxlciBtYWtlcyBlbGVjdHJpYyBlbmVyZ3kgYW5kL29yIGNhcGFjaXR5IGF2YWlsYWJsZSB1bmRlciB0aGlzIFJhdGUgU2NoZWR1bGUgZm9yIHdob2xlc2FsZSBzYWxlcyB0byBhbnkgcHVyY2hhc2VyIGZvciByZXNhbGUuIFNlbGxlciBhbHNvIG1ha2VzIGF2YWlsYWJsZSB0byBhbnkgcHVyY2hhc2VyLCB0aGUgYW5jaWxsYXJ5IHNlcnZpY2VzIGxpc3RlZCBpbiB0aGlzIFNlY3Rpb24gMSBiZWxvdzp9e1xjZjBcY2hjYnBhdDIgIH1cY2YwXHBhclxwYXJkXHBsYWluXHFqXGxpNzIwXGxpbjcyMFxub3dpZGN0bHBhclxzYTI0MHtcdWxcY2YwIE5ldyBFbmdsYW5kfXtcY2YwIDpcdGFiIFNlbGxlciBvZmZlcnMgcmVndWxhdGlvbiBhbmQgZnJlcXVlbmN5IHJlc3BvbnNlIHNlcnZpY2UgKGF1dG9tYXRpYyBnZW5lcmF0b3IgY29udHJvbCksIG9wZXJhdGluZyByZXNlcnZlIHNlcnZpY2UgKHdoaWNoIGluY2x1ZGVzIDEwLW1pbnV0ZSBzcGlubmluZyByZXNlcnZlLCAxMC1taW51dGUgbm9uLXNwaW5uaW5nIHJlc2VydmUsIGFuZCAzMC1taW51dGUgb3BlcmF0aW5nIHJlc2VydmUgc2VydmljZSkgdG8gcHVyY2hhc2VycyB3aXRoaW4gdGhlIG1hcmtldHMgYWRtaW5pc3RlcmVkIGJ5IHRoZSBJU08gTmV3IEVuZ2xhbmQgSW5jLn1ccGFyXHBhcmRccGxhaW5ccWpcbGk3MjBcbGluNzIwXG5vd2lkY3RscGFyXHNhMjQwe1x1bFxjZjAgTmV3IFlvcmt9e1xjZjAgOiBTZWxsZXIgb2ZmZXJzIHJlZ3VsYXRpb24gYW5kIGZyZXF1ZW5jeSByZXNwb25zZSBzZXJ2aWNlLCBhbmQgb3BlcmF0aW5nIHJlc2VydmUgc2VydmljZSAod2hpY2ggaW5jbHVkZSAxMC1taW51dGUgbm9uLXN5bmNocm9ub3VzLCAzMC1taW51dGUgb3BlcmF0aW5nIHJlc2VydmVzLCAxMC1taW51dGUgc3Bpbm5pbmcgcmVzZXJ2ZXMsIGFuZCAxMC1taW51dGUgbm9uLXNwaW5uaW5nIHJlc2VydmVzKSBmb3Igc2FsZSB0byBwdXJjaGFzZXJzIGluIHRoZSBtYXJrZXQgYWRtaW5pc3RlcmVkIGJ5IHRoZSBOZXcgWW9yayBJbmRlcGVuZGVudCBTeXN0ZW0gT3BlcmF0b3IsIEluYy59XHBhclxwYXJkXHBsYWluXHFqXGxpNzIwXGxpbjcyMFxub3dpZGN0bHBhclxzYTI0MHtcdWxcY2YwIFBKTX17XGNmMCA6IFNlbGxlciBvZmZlcnMgcmVndWxhdGlvbiBhbmQgZnJlcXVlbmN5IHJlc3BvbnNlIHNlcnZpY2UsIGVuZXJneSBpbWJhbGFuY2Ugc2VydmljZSwgYW5kIG9wZXJhdGluZyByZXNlcnZlIHNlcnZpY2UgKHdoaWNoIGluY2x1ZGVzIHNwaW5uaW5nLCAxMC1taW51dGUsIGFuZCAzMC1taW51dGUgcmVzZXJ2ZXMpIGZvciBzYWxlIGludG8gdGhlIG1hcmtldCBhZG1pbmlzdGVyZWQgYnkgUEpNIEludGVyY29ubmVjdGlvbiwgTC5MLkMuIChcdTgyMjBcJzkzUEpNXHU4MjIxXCc5NCkgYW5kLCB3aGVyZSB0aGUgUEpNIE9wZW4gQWNjZXNzIFRyYW5zbWlzc2lvbiBUYXJpZmYgcGVybWl0cywgdGhlIHNlbGYtc3VwcGx5IG9mIHRoZXNlIHNlcnZpY2VzIHRvIHB1cmNoYXNlcnMgZm9yIGEgYmlsYXRlcmFsIHNhbGUgdGhhdCBpcyB1c2VkIHRvIHNhdGlzZnkgdGhlIGFuY2lsbGFyeSBzZXJ2aWNlcyByZXF1aXJlbWVudHMgb2YgdGhlIFBKTSBPZmZpY2Ugb2YgSW50ZXJjb25uZWN0aW9uLn1ccGFyXHBhcmRccGxhaW5ccWpcbGk3MjBcbGluNzIwXG5vd2lkY3RscGFyXHNhMjQwe1x1bFxjZjAgQ2FsaWZvcm5pYX17XGNmMCA6IFNlbGxlciBvZmZlcnMgcmVndWxhdGlvbiBzZXJ2aWNlLCBzcGlubmluZyByZXNlcnZlIHNlcnZpY2UsIGFuZCBub24tc3Bpbm5pbmcgcmVzZXJ2ZSBzZXJ2aWNlIHRvIHRoZSBDYWxpZm9ybmlhIEluZGVwZW5kZW50IFN5c3RlbSBPcGVyYXRvciBDb3Jwb3JhdGlvbiAoXHU4MjIwXCc5M0NBSVNPXHU4MjIxXCc5NCkgYW5kIHRvIG90aGVycyB0aGF0IGFyZSBzZWxmLXN1cHBseWluZyBhbmNpbGxhcnkgc2VydmljZXMgdG8gdGhlIENBSVNPLn1ccGFyXHBhcmRccGxhaW5ccWpcbGk3MjBcbGluNzIwXG5vd2lkY3RscGFyXHNhMjQwe1x1bFxjZjAgTUlTT317XGNmMCA6IFNlbGxlciBvZmZlcnMgcmVndWxhdGlvbiBzZXJ2aWNlIGFuZCBvcGVyYXRpbmcgcmVzZXJ2ZSBzZXJ2aWNlICh3aGljaCBpbmNsdWRlIDEwLW1pbnV0ZSBzcGlubmluZyByZXNlcnZlIGFuZCAxMC1taW51dGUgc3VwcGxlbWVudGFsIHJlc2VydmUpIGZvciBzYWxlIHRvIHRoZSBNaWR3ZXN0IEluZGVwZW5kZW50IFRyYW5zbWlzc2lvbiBTeXN0ZW0gT3BlcmF0b3IsIEluYy4gKE1JU08pIGFuZCB0byBvdGhlcnMgdGhhdCBhcmUgc2VsZi1zdXBwbHlpbmcgYW5jaWxsYXJ5IHNlcnZpY2VzIHRvIE1JU08ufVxwYXJccGFyZFxwbGFpblxxalxsaTcyMFxsaW43MjBcbm93aWRjdGxwYXJcc2EyNDB7XHVsXGNmMCBUaGlyZC1QYXJ0eSBBbmNpbGxhcnkgU2VydmljZXN9e1xjZjAgOiBTZWxsZXIgb2ZmZXJzIFJlZ3VsYXRpb24gU2VydmljZSwgRW5lcmd5IEltYmFsYW5jZSBTZXJ2aWNlLCBTcGlubmluZyBSZXNlcnZlcywgYW5kIFN1cHBsZW1lbnRhbCBSZXNlcnZlcy4gU2FsZXMgd2lsbCBub3QgaW5jbHVkZSB0aGUgZm9sbG93aW5nOiAoMSkgc2FsZXMgdG8gYW4gUlRPIG9yIGFuIElTTywgaS5lLiwgd2hlcmUgdGhhdCBlbnRpdHkgaGFzIG5vIGFiaWxpdHkgdG8gc2VsZi1zdXBwbHkgYW5jaWxsYXJ5IHNlcnZpY2VzIGJ1dCBpbnN0ZWFkIGRlcGVuZHMgb24gdGhpcmQgcGFydGllczsgKDIpIHNhbGVzIHRvIGEgdHJhZGl0aW9uYWwsIGZyYW5jaGlzZWQgcHVibGljIHV0aWxpdHkgYWZmaWxpYXRlZCB3aXRoIHRoZSB0aGlyZC1wYXJ0eSBzdXBwbGllciwgb3Igc2FsZXMgd2hlcmUgdGhlIHVuZGVybHlpbmcgdHJhbnNtaXNzaW9uIHNlcnZpY2UgaXMgb24gdGhlIHN5c3RlbSBvZiB0aGUgcHVibGljIHV0aWxpdHkgYWZmaWxpYXRlZCB3aXRoIHRoZSB0aGlyZC1wYXJ0eSBzdXBwbGllcjsgYW5kICgzKSBzYWxlcyB0byBhIHB1YmxpYyB1dGlsaXR5IHRoYXQgaXMgcHVyY2hhc2luZyBhbmNpbGxhcnkgc2VydmljZXMgdG8gc2F0aXNmeSBpdHMgb3duIG9wZW4gYWNjZXNzIHRyYW5zbWlzc2lvbiB0YXJpZmYgcmVxdWlyZW1lbnRzIHRvIG9mZmVyIGFuY2lsbGFyeSBzZXJ2aWNlcyB0byBpdHMgb3duIGN1c3RvbWVycy59XHBhcntcbGlzdHRleHRccGFyZCAyLlx0YWIgfVxwYXJkXHBsYWluXGlsdmw2XGxzMTRccWxcZmktNzIwXGxpNzIwXGxpbjcyMFxzbDI3NVxzbG11bHQxXHNhMjQwe1x1bFxjZjBcY2hjYnBhdDIgQXBwbGljYWJpbGl0eX17XGNmMFxjaGNicGF0MiAuICB9e1xjZjAgVGhpcyBSYXRlIFNjaGVkdWxlIGlzIGFwcGxpY2FibGUgdG8gYWxsIHdob2xlc2FsZSBzYWxlcyBvZiBlbGVjdHJpYyBlbmVyZ3ksIGNhcGFjaXR5IGFuZC9vciBhbmNpbGxhcnkgc2VydmljZXMgYnkgU2VsbGVyIHRoYXQgYXJlIG5vdCBvdGhlcndpc2UgZXhwcmVzc2x5IHN1YmplY3QgdG8gYW5vdGhlciByYXRlIHNjaGVkdWxlIG9mIFNlbGxlci59XGNmMFxwYXJ7XGxpc3R0ZXh0XHBhcmQgMy5cdGFiIH1ccGFyZFxwbGFpblxpbHZsNlxsczE0XHFsXGZpLTcyMFxsaTcyMFxsaW43MjBcc2wyNzVcc2xtdWx0MVxzYTI0MHtcdWxcY2YwXGNoY2JwYXQyIFJhdGVzfXtcY2YwXGNoY2JwYXQyIC4gIEFsbCBzYWxlcyB1bmRlciB0aGlzIFJhdGUgU2NoZWR1bGUgc2hhbGwgYmUgbWFkZSBhdCByYXRlcyBlc3RhYmxpc2hlZCBieSBhZ3JlZW1lbnQgYmV0d2VlbiB0aGUgcHVyY2hhc2VyIGFuZCBTZWxsZXIuIH1cY2YwXHBhcntcbGlzdHRleHRccGFyZCA0Llx0YWIgfVxwYXJkXHBsYWluXGlsdmw2XGxzMTRccWxcZmktNzIwXGxpNzIwXGxpbjcyMFxzbDI3NVxzbG11bHQxXHNhMjQwe1x1bFxjZjBcY2hjYnBhdDIgT3RoZXIgVGVybXMgYW5kIENvbmRpdGlvbnN9e1xjZjBcY2hjYnBhdDIgLiAgQWxsIG90aGVyIHRlcm1zIGFuZCBjb25kaXRpb25zIGZvciBhbnkgc2FsZXMgdW5kZXIgdGhpcyBSYXRlIFNjaGVkdWxlIHNoYWxsIGJlIGVzdGFibGlzaGVkIGJ5IGFncmVlbWVudCBiZXR3ZWVuIHRoZSBwdXJjaGFzZXIgYW5kIFNlbGxlci4gfVxjZjBccGFye1xsaXN0dGV4dFxwYXJkIDUuXHRhYiB9XHBhcmRccGxhaW5caWx2bDZcbHMxNFxxbFxmaS03MjBcbGk3MjBcbGluNzIwXHNsMjc1XHNsbXVsdDFcc2EyNDB7XHVsXGNmMFxjaGNicGF0MiBDb21wbGlhbmNlIHdpdGggQ29tbWlzc2lvbiBSZWd1bGF0aW9uc317XGNmMFxjaGNicGF0MiAuICB9e1xjZjAgU2VsbGVyIHNoYWxsIGNvbXBseSB3aXRoIHRoZSBwcm92aXNpb25zIG9mIDE4IEMuRi5SLiBQYXJ0IDM1LCBTdWJwYXJ0IEgsIGFzIGFwcGxpY2FibGUsIGFuZCB3aXRoIGFueSBjb25kaXRpb25zIHRoZSBDb21taXNzaW9uIGltcG9zZXMgaW4gaXRzIG9yZGVycyBjb25jZXJuaW5nIFNlbGxlclx1ODIxN1wnOTJzIG1hcmtldC1iYXNlZCByYXRlIGF1dGhvcml0eSwgaW5jbHVkaW5nIG9yZGVycyBpbiB3aGljaCB0aGUgQ29tbWlzc2lvbiBhdXRob3JpemVzIFNlbGxlciB0byBlbmdhZ2UgaW4gYWZmaWxpYXRlIHNhbGVzIHVuZGVyIHRoaXMgdGFyaWZmIG9yIG90aGVyd2lzZSByZXN0cmljdHMgb3IgbGltaXRzIHRoZSBTZWxsZXJcdTgyMTdcJzkycyBtYXJrZXQtYmFzZWQgcmF0ZSBhdXRob3JpdHkuIEZhaWx1cmUgdG8gY29tcGx5IHdpdGggdGhlIGFwcGxpY2FibGUgcHJvdmlzaW9ucyBvZiAxOCBDLkYuUi4gUGFydCAzNSwgU3VicGFydCBILCBhbmQgd2l0aCBhbnkgb3JkZXIgb2YgdGhlIENvbW1pc3Npb24gY29uY2VybmluZyBTZWxsZXJcdTgyMTdcJzkycyBtYXJrZXQtYmFzZWQgcmF0ZSBhdXRob3JpdHksIHdpbGwgY29uc3RpdHV0ZSBhIHZpb2xhdGlvbiBvZiB0aGlzIHRhcmlmZi59XGNmMFxwYXJ7XGxpc3R0ZXh0XHBhcmQgNi5cdGFiIH1ccGFyZFxwbGFpblxpbHZsNlxsczE0XHFsXGZpLTcyMFxsaTcyMFxsaW43MjBcc2wyNzVcc2xtdWx0MVxzYTI0MHtcdWxcY2YwXGNoY2JwYXQyIExpbWl0YXRpb25zIGFuZCBFeGVtcHRpb25zIFJlZ2FyZGluZyBNYXJrZXQtQmFzZWQgUmF0ZSBBdXRob3JpdHl9e1xjZjBcY2hjYnBhdDIgLiAgfXtcY2YwIFRoZSBDb21taXNzaW9uIGdyYW50ZWQgU2VsbGVyIGluIERvY2tldCBOby4gRVIxMy0yMTQtMDAyIHRoZSBmb2xsb3dpbmcgd2FpdmVycyBhbmQgYmxhbmtldCBhdXRob3JpemF0aW9uczogIChhKSB3YWl2ZXIgb2YgdGhlIENvbW1pc3Npb25cdTgyMTdcJzkycyBhY2NvdW50aW5nIGFuZCByZXBvcnRpbmcgcmVxdWlyZW1lbnRzIGNvbnRhaW5lZCBpbiAxOCBDLkYuUi4gUGFydHMgNDEsIDEwMSBhbmQgMTQxLCB3aXRoIHRoZSBleGNlcHRpb24gb2YgMTggQy5GLlIuIFx1MTY3XCdhN1x1MTY3XCdhNyAxNDEuMTQgYW5kIDE0MS4xNTsgKGIpIHdhaXZlciBvZiB0aGUgQ29tbWlzc2lvblx1ODIxN1wnOTJzIHJlZ3VsYXRpb25zIHJlZ2FyZGluZyB0aGUgZmlsaW5nIG9mIGluZm9ybWF0aW9uIGluIFN1YnBhcnRzIEIgYW5kIEMgb2YgMTggQy5GLlIuIFBhcnQgMzUsIGV4Y2VwdCBmb3IgMTggQy5GLlIuIFx1MTY3XCdhN1x1MTY3XCdhNyAzNS4xMihhKSwgMzUuMTMoYiksIDM1LjE1LCBhbmQgMzUuMTY7IGFuZCAoYykgYmxhbmtldCBhdXRob3JpemF0aW9uIHVuZGVyIFNlY3Rpb24gMjA0IG9mIHRoZSBGZWRlcmFsIFBvd2VyIEFjdCwgMTYgVS5TLkMuIDgyNGMsIGFuZCAxOCBDLkYuUi4gUGFydCAzNCBmb3IgYWxsIGZ1dHVyZSBpc3N1YW5jZXMgb2Ygc2VjdXJpdGllcyBhbmQgYXNzdW1wdGlvbnMgb2YgbGlhYmlsaXR5LiAgU2VsbGVyIGhhcyBubyBhZGRpdGlvbmFsIGxpbWl0YXRpb25zIG9uIGl0cyBtYXJrZXQtYmFzZWQgcmF0ZSBhdXRob3JpdHkufVxjZjBccGFye1xsaXN0dGV4dFxwYXJkIDcuXHRhYiB9XHBhcmRccGxhaW5caWx2bDZcbHMxNFxxbFxmaS03MjBcbGk3MjBcbGluNzIwXHNsMjc1XHNsbXVsdDFcc2EyNDB7XHVsXGNmMFxjaGNicGF0MiBTZWxsZXIgQ2F0ZWdvcnl9e1xjZjBcY2hjYnBhdDIgLiBTZWxsZXIgaXMgYSBDYXRlZ29yeSAxIFNlbGxlciBpbiBhbGwgcmVnaW9ucywgYXMgZGVmaW5lZCBpbiAxOCBDLkYuUi4gXHUxNjdcJ2E3IDM1LjM2KGEpLiAgfVxjZjBccGFye1xsaXN0dGV4dFxwYXJkIDguXHRhYiB9XHBhcmRccGxhaW5caWx2bDZcbHMxNFxxbFxmaS03MjBcbGk3MjBcbGluNzIwXHNsMjc1XHNsbXVsdDFcc2EyNDB7XHVsXGNmMFxjaGNicGF0MiBFZmZlY3RpdmUgRGF0ZX17XGNmMFxjaGNicGF0MiAuICBUaGlzIFJhdGUgU2NoZWR1bGUgc2hhbGwgYmUgZWZmZWN0aXZlIHVwb24gdGhlIGRhdGUgYXV0aG9yaXplZCBieSB0aGUgRmVkZXJhbCBFbmVyZ3kgUmVndWxhdG9yeSBDb21taXNzaW9uLn1cY2YwXHBhclxwYXJkXHBsYWluXHFse1wqXGJrbWtzdGFydCBfR29CYWNrfXtcKlxia21rZW5kIF9Hb0JhY2t9XHBhcn0=</record_binary_data>
      <record_plain_text>1.	Availability.  Seller makes electric energy and/or capacity available under this Rate Schedule for wholesale sales to any purchaser for resale. Seller also makes available to any purchaser, the ancillary services listed in this Section 1 below: 
New England:	Seller offers regulation and frequency response service (automatic generator control), operating reserve service (which includes 10-minute spinning reserve, 10-minute non-spinning reserve, and 30-minute operating reserve service) to purchasers within the markets administered by the ISO New England Inc.
New York: Seller offers regulation and frequency response service, and operating reserve service (which include 10-minute non-synchronous, 30-minute operating reserves, 10-minute spinning reserves, and 10-minute non-spinning reserves) for sale to purchasers in the market administered by the New York Independent System Operator, Inc.
PJM: Seller offers regulation and frequency response service, energy imbalance service, and operating reserve service (which includes spinning, 10-minute, and 30-minute reserves) for sale into the market administered by PJM Interconnection, L.L.C. (“PJM”) and, where the PJM Open Access Transmission Tariff permits, the self-supply of these services to purchasers for a bilateral sale that is used to satisfy the ancillary services requirements of the PJM Office of Interconnection.
California: Seller offers regulation service, spinning reserve service, and non-spinning reserve service to the California Independent System Operator Corporation (“CAISO”) and to others that are self-supplying ancillary services to the CAISO.
MISO: Seller offers regulation service and operating reserve service (which include 10-minute spinning reserve and 10-minute supplemental reserve) for sale to the Midwest Independent Transmission System Operator, Inc. (MISO) and to others that are self-supplying ancillary services to MISO.
Third-Party Ancillary Services: Seller offers Regulation Service, Energy Imbalance Service, Spinning Reserves, and Supplemental Reserves. Sales will not include the following: (1) sales to an RTO or an ISO, i.e., where that entity has no ability to self-supply ancillary services but instead depends on third parties; (2) sales to a traditional, franchised public utility affiliated with the third-party supplier, or sales where the underlying transmission service is on the system of the public utility affiliated with the third-party supplier; and (3) sales to a public utility that is purchasing ancillary services to satisfy its own open access transmission tariff requirements to offer ancillary services to its own customers.
2.	Applicability.  This Rate Schedule is applicable to all wholesale sales of electric energy, capacity and/or ancillary services by Seller that are not otherwise expressly subject to another rate schedule of Seller.
3.	Rates.  All sales under this Rate Schedule shall be made at rates established by agreement between the purchaser and Seller. 
4.	Other Terms and Conditions.  All other terms and conditions for any sales under this Rate Schedule shall be established by agreement between the purchaser and Seller. 
5.	Compliance with Commission Regulations.  Seller shall comply with the provisions of 18 C.F.R. Part 35, Subpart H, as applicable, and with any conditions the Commission imposes in its orders concerning Seller’s market-based rate authority, including orders in which the Commission authorizes Seller to engage in affiliate sales under this tariff or otherwise restricts or limits the Seller’s market-based rate authority. Failure to comply with the applicable provisions of 18 C.F.R. Part 35, Subpart H, and with any order of the Commission concerning Seller’s market-based rate authority, will constitute a violation of this tariff.
6.	Limitations and Exemptions Regarding Market-Based Rate Authority.  The Commission granted Seller in Docket No. ER13-214-002 the following waivers and blanket authorizations:  (a) waiver of the Commission’s accounting and reporting requirements contained in 18 C.F.R. Parts 41, 101 and 141, with the exception of 18 C.F.R. §§ 141.14 and 141.15; (b) waiver of the Commission’s regulations regarding the filing of information in Subparts B and C of 18 C.F.R. Part 35, except for 18 C.F.R. §§ 35.12(a), 35.13(b), 35.15, and 35.16; and (c) blanket authorization under Section 204 of the Federal Power Act, 16 U.S.C. 824c, and 18 C.F.R. Part 34 for all future issuances of securities and assumptions of liability.  Seller has no additional limitations on its market-based rate authority.
7.	Seller Category. Seller is a Category 1 Seller in all regions, as defined in 18 C.F.R. § 35.36(a).  
8.	Effective Date.  This Rate Schedule shall be effective upon the date authorized by the Federal Energy Regulatory Commission.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>185</filing_id>
      <filing_title>Notice of Succession</filing_title>
      <filing_type>30</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-01-01</current_effective_date>
      <ferc_order_date>2020-04-13</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
  </ferc_filing_data>
</Document>