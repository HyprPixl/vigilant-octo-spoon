<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Document xmlns="http://ferc.gov/etariffExport.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ferc_filing_data>
    <schema_version>2</schema_version>
    <company_id>C002528</company_id>
    <lead_applicant_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
    <tariff_id>14</tariff_id>
    <tariff_title>TPW Petersburg, LLC Rate Schedule FERC No. 1</tariff_title>
    <tariff_export_date>2025-09-16T19:45Z</tariff_export_date>
    <export_schema_version>2</export_schema_version>
    <record_data>
      <record_id>1000</record_id>
      <option_code>A</option_code>
      <record_title>TPW Petersburg Rate Schedule FERC No. 1</record_title>
      <record_content_desc>Market-based Tariff</record_content_desc>
      <record_version_num>1.0.0</record_version_num>
      <record_narrative_name>TPW Petersburg Rate Schedule FERC No. 1</record_narrative_name>
      <collation_value>1000</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2011-09-30</proposed_effective_date>
      <priority_order>500</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data>e1xydGYxXGFuc2lcYW5zaWNwZzEyNTJcdWMwXHN0c2hmZGJjaDBcc3RzaGZsb2NoMFxzdHNoZmhpY2gwXHN0c2hmYmkwXGRlZmYwXGFkZWZmMHtcZm9udHRibHtcZjBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwMjA2MDMwNTA0MDUwMjAzMDR9VGltZXMgTmV3IFJvbWFuO317XGYxXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNjA0MDIwMjAyMDIwMjA0fUFyaWFsO317XGYyXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDA1MDUwMTAyMDEwNzA2MDIwNTA3fVN5bWJvbDt9e1xmM1xmcm9tYW5cZmNoYXJzZXQwXGZwcnExe1wqXHBhbm9zZSAwMjAyMDYwOTA0MDIwNTA4MDMwNH17XCpcZmFsdCBBcmlhbCBVbmljb2RlIE1TfU1TIE1pbmNobzt9e1xmNFxmcm9tYW5cZmNoYXJzZXQwXGZwcnExe1wqXHBhbm9zZSAwMDAwMDAwMDAwMDAwMDAwMDAwMH1ATVMgTWluY2hvO317XGY1XGZyb21hblxmY2hhcnNldDBcZnBycTIgVGltZXMgTmV3IFJvbWFuIENFO317XGY2XGZyb21hblxmY2hhcnNldDBcZnBycTIgVGltZXMgTmV3IFJvbWFuIEN5cjt9e1xmN1xmcm9tYW5cZmNoYXJzZXQwXGZwcnEyIFRpbWVzIE5ldyBSb21hbiBHcmVlazt9e1xmOFxmcm9tYW5cZmNoYXJzZXQwXGZwcnEyIFRpbWVzIE5ldyBSb21hbiBUdXI7fXtcZjlcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKEhlYnJldyk7fXtcZjEwXGZyb21hblxmY2hhcnNldDBcZnBycTIgVGltZXMgTmV3IFJvbWFuIChBcmFiaWMpO317XGYxMVxmcm9tYW5cZmNoYXJzZXQwXGZwcnEyIFRpbWVzIE5ldyBSb21hbiBCYWx0aWM7fXtcZjEyXGZyb21hblxmY2hhcnNldDBcZnBycTIgVGltZXMgTmV3IFJvbWFuIChWaWV0bmFtZXNlKTt9e1xmMTNcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMiBBcmlhbCBDRTt9e1xmMTRcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMiBBcmlhbCBDeXI7fXtcZjE1XGZzd2lzc1xmY2hhcnNldDBcZnBycTIgQXJpYWwgR3JlZWs7fXtcZjE2XGZzd2lzc1xmY2hhcnNldDBcZnBycTIgQXJpYWwgVHVyO317XGYxN1xmc3dpc3NcZmNoYXJzZXQwXGZwcnEyIEFyaWFsIChIZWJyZXcpO317XGYxOFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEyIEFyaWFsIChBcmFiaWMpO317XGYxOVxmc3dpc3NcZmNoYXJzZXQwXGZwcnEyIEFyaWFsIEJhbHRpYzt9e1xmMjBcZnN3aXNzXGZjaGFyc2V0MFxmcHJxMiBBcmlhbCAoVmlldG5hbWVzZSk7fX17XGNvbG9ydGJsO317XHN0eWxlc2hlZXR7XHMwXHNuZXh0MFxhc3BhbHBoYVxhc3BudW1cbHRycGFyXGxpMFxsaW4wXHJpMFxyaW4wXHFsXGZhYXV0b1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzIE5vcm1hbDt9e1xzMVxzYmFzZWRvbjBcc25leHQxXGxzMVx0eDcyMFxmaS0zNjBcc2IyNDBcYXNwYWxwaGFcYXNwbnVtXG91dGxpbmVsZXZlbDBcbHRycGFyXGxpNzIwXGxpbjcyMFxyaTBccmluMFxxalxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzMyBoZWFkaW5nIDEsSDE7fXtcczJcc2Jhc2Vkb24wXHNuZXh0MlxpbHZsMVxsczFcdHgxNDQwXGZpLTcyMFxzYjI0MFxhc3BhbHBoYVxhc3BudW1cb3V0bGluZWxldmVsMVxsdHJwYXJcbGkxNDQwXGxpbjE0NDBccmkwXHJpbjBccWpcZmFhdXRvXHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzMgaGVhZGluZyAyLEgyO317XHMzXHNiYXNlZG9uMFxzbmV4dDNcaWx2bDJcbHMxXHR4MjE2MFxmaS03MjBcc2IyNDBcYXNwYWxwaGFcYXNwbnVtXG91dGxpbmVsZXZlbDJcbHRycGFyXGxpMjE2MFxsaW4yMTYwXHJpMFxyaW4wXHFqXGZhYXV0b1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzIGhlYWRpbmcgMyxIMzt9e1xzNFxzYmFzZWRvbjBcc25leHQ0XGlsdmwzXGxzMVx0eDI4ODBcZmktNzIwXHNiMjQwXGFzcGFscGhhXGFzcG51bVxvdXRsaW5lbGV2ZWwzXGx0cnBhclxsaTI4ODBcbGluMjg4MFxyaTBccmluMFxxalxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzMyBoZWFkaW5nIDQsSDQ7fXtcczVcc2Jhc2Vkb24wXHNuZXh0NVxpbHZsNFxsczFcdHgzNjAwXGZpLTM2MFxzYjI0MFxhc3BhbHBoYVxhc3BudW1cb3V0bGluZWxldmVsNFxsdHJwYXJcbGkzNjAwXGxpbjM2MDBccmkwXHJpbjBccWpcZmFhdXRvXHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzMgaGVhZGluZyA1LEg1O317XHM2XHNiYXNlZG9uMFxzbmV4dDZcaWx2bDVcbHMxXHR4NDMyMFxmaS03MjBcc2IyNDBcYXNwYWxwaGFcYXNwbnVtXG91dGxpbmVsZXZlbDVcbHRycGFyXGxpNDMyMFxsaW40MzIwXHJpMFxyaW4wXHFqXGZhYXV0b1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzIGhlYWRpbmcgNixINjt9e1xzN1xzYmFzZWRvbjBcc25leHQ3XGlsdmw2XGxzMVx0eDUwNDBcZmktNzIwXHNiMjQwXGFzcGFscGhhXGFzcG51bVxvdXRsaW5lbGV2ZWw2XGx0cnBhclxsaTUwNDBcbGluNTA0MFxyaTBccmluMFxxalxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzMyBoZWFkaW5nIDcsSDc7fXtcczhcc2Jhc2Vkb24wXHNuZXh0OFxpbHZsN1xsczFcdHg1NzYwXGZpLTM2MFxzYjI0MFxhc3BhbHBoYVxhc3BudW1cb3V0bGluZWxldmVsN1xsdHJwYXJcbGk1NzYwXGxpbjU3NjBccmkwXHJpbjBccWpcZmFhdXRvXHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzMgaGVhZGluZyA4LEg4O317XHM5XHNiYXNlZG9uMFxzbmV4dDlcaWx2bDhcbHMxXHR4NjQ4MFxmaS03MjBcc2IyNDBcYXNwYWxwaGFcYXNwbnVtXG91dGxpbmVsZXZlbDhcbHRycGFyXGxpNjQ4MFxsaW42NDgwXHJpMFxyaW4wXHFqXGZhYXV0b1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzIGhlYWRpbmcgOSxIOTt9e1wqXGNzMTBcYWRkaXRpdmVcc3NlbWloaWRkZW4gRGVmYXVsdCBQYXJhZ3JhcGggRm9udDt9e1xzMTVcc2Jhc2Vkb24wXHNuZXh0MTVcc2IyNDBcYXNwYWxwaGFcYXNwbnVtXGx0cnBhclxsaTBcbGluMFxyaTBccmluMFxxalxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzMyBCb2R5IE1haW4sQk07fXtcKlxjczE2XGFkZGl0aXZlXHNiYXNlZG9uMTBccnRsY2hcbHRyY2hcZjBcdWwgRW1waGFzaXM7fXtcczE3XHNiYXNlZG9uMFxzbmV4dDE3XHRxY1x0eDQ2ODBcdHFyXHR4OTM2MFxhc3BhbHBoYVxhc3BudW1cbHRycGFyXGxpMFxsaW4wXHJpMFxyaW4wXHFsXGZhYXV0b1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzIGZvb3Rlcjt9e1xzMThcc2Jhc2Vkb24wXHNuZXh0MzdcdHgzNjBcc2IxMjBcYXNwYWxwaGFcYXNwbnVtXGx0cnBhclxsaTBcbGluMFxyaTBccmluMFxxalxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjJcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzMyBmb290bm90ZSB0ZXh0LEZUO317XHMxOVxzYmFzZWRvbjBcc25leHQxOVx0cWNcdHg0NjgwXHRxclx0eDkzNjBcYXNwYWxwaGFcYXNwbnVtXGx0cnBhclxsaTBcbGluMFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzMyBoZWFkZXI7fXtcczIwXHNiYXNlZG9uMFxzbmV4dDIwXGtlZXBca2VlcG5cc2IyNDBcYXNwYWxwaGFcYXNwbnVtXGx0cnBhclxsaTBcbGluMFxyaTBccmluMFxxY1xmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzMyBIZWFkaW5nIEN0cixIQzt9e1xzMjFcc2Jhc2Vkb24wXHNuZXh0MjFca2VlcFxrZWVwblxzYjI0MFxhc3BhbHBoYVxhc3BudW1cbHRycGFyXGxpMFxsaW4wXHJpMFxyaW4wXHFsXGZhYXV0b1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzIEhlYWRpbmcgTGVmdCxITDt9e1xzMjJcc2Jhc2Vkb24wXHNuZXh0MjJca2VlcFxrZWVwblxzYjI0MFxhc3BhbHBoYVxhc3BudW1cbHRycGFyXGxpMFxsaW4wXHJpMFxyaW4wXHFyXGZhYXV0b1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzIEhlYWRpbmcgUmd0LEhSO317XCpcY3MyM1xhZGRpdGl2ZVxzYmFzZWRvbjEwXHJ0bGNoXGx0cmNoXGlcZjAgbGF0aW47fXtcczI0XHNiYXNlZG9uMFxzbmV4dDI0XGtlZXBca2VlcG5cZmktMzYwXHNiNDgwXGFzcGFscGhhXGFzcG51bVxsdHJwYXJcbGk1MDQwXGxpbjUwNDBccmkwXHJpbjBccWxcZmFhdXRvXHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzMgU2lnIEVudGl0eSxTRTt9e1xzMjVcc2Jhc2Vkb24wXHNuZXh0MjVca2VlcFx0bHVsXHR4NDY4MFxzYjcyMFxhc3BhbHBoYVxhc3BudW1cbHRycGFyXGxpMFxsaW4wXHJpNDY4MFxyaW40NjgwXHFjXGZhYXV0b1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzIFNpZyBJbmRpdmlkIEwsU0k7fXtcczI2XHNiYXNlZG9uMjRcc25leHQyNlxrZWVwXHRsdWxcdHg5MzYwXGZpMFxzYjcyMFxhc3BhbHBoYVxhc3BudW1cbHRycGFyXGxpNDY4MFxsaW40NjgwXHJpMFxyaW4wXHFjXGZhYXV0b1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzIFNpZyBJbmRpdmlkIFIsU1I7fXtcczI3XHNiYXNlZG9uMjRcc25leHQyN1xrZWVwXHRsdWxcdHg0NjgwXHRsdWxcdHg5MzYwXGZpLTM2MFxzYjcyMFxhc3BhbHBoYVxhc3BudW1cbHRycGFyXGxpNTA0MFxsaW41MDQwXHJpMFxyaW4wXHFsXGZhYXV0b1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzIFNpZyBMaW5lLFNMO317XHMyOFxzYmFzZWRvbjE1XHNuZXh0MTVcc2IyNDBcYXNwYWxwaGFcYXNwbnVtXGx0cnBhclxsaTBcbGluMFxyaTBccmluMFxxalxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzMyBCb2R5IENvbnQnZCxCQzt9e1wqXGNzMjlcYWRkaXRpdmVcc2Jhc2Vkb24xMFxydGxjaFxsdHJjaFxmMCBwYWdlIG51bWJlcjt9e1xzMzBcc2Jhc2Vkb24wXHNuZXh0MzBca2VlcG5cc2IyNDBcc2ExMjBcYXNwYWxwaGFcYXNwbnVtXGx0cnBhclxsaTBcbGluMFxyaTBccmluMFxxY1xmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGJcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzIFRhYmxlIENhcHRpb24sVEM7fXtcczMxXHNiYXNlZG9uMFxzbmV4dDMxXHRxZGVjXHR4NjEyXGFzcGFscGhhXGFzcG51bVxsdHJwYXJcbGkwXGxpbjBccmkwXHJpbjBccWxcZmFhdXRvXHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzMgVGFibGUgRGF0YSxURDt9e1xzMzJcc2Jhc2Vkb24wXHNuZXh0MzJcc2IyNDBcYXNwYWxwaGFcYXNwbnVtXGJyZHJiXGJyZHJzXGJyZHJ3MTBcYnJkcmNmMFxicnNwMjBcbHRycGFyXGxpMFxsaW4wXHJpMFxyaW4wXHFjXGZhYXV0b1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcYlxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzMgVGFibGUgSGVhZGluZyxUSDt9e1xzMzNcc2Jhc2Vkb24wXHNuZXh0MzNcdGxkb3RcdHgyODgwXGZpLTE4MFxhc3BhbHBoYVxhc3BudW1cbHRycGFyXGxpMTgwXGxpbjE4MFxyaTQzMlxyaW40MzJccWxcZmFhdXRvXHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzMgVGFibGUgSXRlbSxUSTt9e1wqXGNzMzRcYWRkaXRpdmVcc2Jhc2Vkb24xMFxzc2VtaWhpZGRlblxydGxjaFxsdHJjaFxmMFxzdXBlciBmb290bm90ZSByZWZlcmVuY2U7fXtcczM1XHNiYXNlZG9uMFxzbmV4dDM1XGxzMTJcdHgxNDQwXHR4MjE2MFxmaS03MjBcc2IyNDBcYXNwYWxwaGFcYXNwbnVtXGx0cnBhclxsaTE0NDBcbGluMTQ0MFxyaTBccmluMFxxalxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzMyBCdWxsZXQgUG9pbnQsQlA7fXtcczM2XHNiYXNlZG9uMFxzbmV4dDM2XGxzMTFcdHg3MjBcZmktNzIwXHNiMjQwXGFzcGFscGhhXGFzcG51bVxsdHJwYXJcbGk3MjBcbGluNzIwXHJpMFxyaW4wXHFqXGZhYXV0b1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzIExpc3QgSXRlbSxMSTt9e1xzMzdcc2Jhc2Vkb24xOFxzbmV4dDM3XHR4MzYwXGZpMzYwXHNiMTIwXGFzcGFscGhhXGFzcG51bVxsdHJwYXJcbGkwXGxpbjBccmkwXHJpbjBccWpcZmFhdXRvXHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczIyXGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzMgRm9vdG5vdGUgQ29udCdkLEZDO317XCpcY3MzOFxhZGRpdGl2ZVxzYmFzZWRvbjEwXHJ0bGNoXGx0cmNoXGlcZjBcbGFuZzEwMjRcbGFuZ25wMTAyNFxsYW5nZmUxMDI0XGxhbmdmZW5wMTAyNFxub3Byb29mIGZvcmVpZ24gbGFuZ3VhZ2UsRkw7fXtcczM5XHNiYXNlZG9uMFxzbmV4dDM5XHNhMTYwXGFzcGFscGhhXGFzcG51bVxsdHJwYXJcbGkwXGxpbjBccmkwXHJpbjBccWxcZmFhdXRvXHNsLTI0MFxzbG11bHQwXHJ0bGNoXGFsYW5nMTAyNVxhZnMyMFxsdHJjaFxmczIwXGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzMgQ2hhcjt9e1xzNDBcc2Jhc2Vkb24wXHNuZXh0NDBcc2IyNDBcYXNwYWxwaGFcYXNwbnVtXGx0cnBhclxsaTE0NDBcbGluMTQ0MFxyaTE0NDBccmluMTQ0MFxxalxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzMyBCbG9jayBRdW90ZSxCUTt9e1xzNDFcc2Jhc2Vkb24wXHNuZXh0NDFcYXNwYWxwaGFcYXNwbnVtXGx0cnBhclxsaTBcbGluMFxyaTBccmluMFxxclxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGJcZnMyMFxmMFxsYW5nMjA1N1xsYW5nbnAyMDU3XGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGNhcHMgQ1dUIERyYWZ0LENEO317XCpcY3M0MlxhZGRpdGl2ZVxzYmFzZWRvbjEwXHJ0bGNoXGx0cmNoXGZzMTZcZjFcbGFuZzEwMjRcbGFuZ25wMTAyNFxsYW5nZmUxMDI0XGxhbmdmZW5wMTAyNFxub3Byb29mIERvY2lkO319e1wqXGxpc3R0YWJsZXtcbGlzdFxsaXN0dGVtcGxhdGVpZDE3Nzg4MzU2MDRcbGlzdHNpbXBsZXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMlwnMDAuO317XGxldmVsbnVtYmVycyBcJzAxO31cbGV2ZWxmb2xsb3cwXHJ0bGNoXGx0cmNoXGYwXHMzNlxqY2xpc3R0YWJcdHg3MjBcZmktNzIwXGxpNzIwXGxpbjcyMH1cbGlzdGlkMzQ3MjIxNjI0fXtcbGlzdFxsaXN0dGVtcGxhdGVpZC0zMTI3MDY4NzhcbGlzdGh5YnJpZHtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMCBcJzAyXCcwMC47fXtcbGV2ZWxudW1iZXJzIFwnMDE7fVxsZXZlbGZvbGxvdzBccnRsY2hcbHRyY2hcYlxmMFxqY2xpc3R0YWJcdHgzNjBcZmktMzYwXGxpMzYwXGxpbjM2MH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDEgXCcwMlwnMDEuO317XGxldmVsbnVtYmVycyBcJzAxO31cbGV2ZWxmb2xsb3cwXHJ0bGNoXGx0cmNoXGYwXGpjbGlzdHRhYlx0eDEwODBcZmktMzYwXGxpMTA4MFxsaW4xMDgwfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMiBcJzAyXCcwMi47fXtcbGV2ZWxudW1iZXJzIFwnMDE7fVxsZXZlbGZvbGxvdzBccnRsY2hcbHRyY2hcZjBcamNsaXN0dGFiXHR4MTgwMFxmaS0xODBcbGkxODAwXGxpbjE4MDB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQzIFwnMDJcJzAzLjt9e1xsZXZlbG51bWJlcnMgXCcwMTt9XGxldmVsZm9sbG93MFxydGxjaFxsdHJjaFxmMFxqY2xpc3R0YWJcdHgyNTIwXGZpLTM2MFxsaTI1MjBcbGluMjUyMH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDQgXCcwMlwnMDQuO317XGxldmVsbnVtYmVycyBcJzAxO31cbGV2ZWxmb2xsb3cwXHJ0bGNoXGx0cmNoXGYwXGpjbGlzdHRhYlx0eDMyNDBcZmktMzYwXGxpMzI0MFxsaW4zMjQwfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNSBcJzAyXCcwNS47fXtcbGV2ZWxudW1iZXJzIFwnMDE7fVxsZXZlbGZvbGxvdzBccnRsY2hcbHRyY2hcZjBcamNsaXN0dGFiXHR4Mzk2MFxmaS0xODBcbGkzOTYwXGxpbjM5NjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2IFwnMDJcJzA2Ljt9e1xsZXZlbG51bWJlcnMgXCcwMTt9XGxldmVsZm9sbG93MFxydGxjaFxsdHJjaFxmMFxqY2xpc3R0YWJcdHg0NjgwXGZpLTM2MFxsaTQ2ODBcbGluNDY4MH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDcgXCcwMlwnMDcuO317XGxldmVsbnVtYmVycyBcJzAxO31cbGV2ZWxmb2xsb3cwXHJ0bGNoXGx0cmNoXGYwXGpjbGlzdHRhYlx0eDU0MDBcZmktMzYwXGxpNTQwMFxsaW41NDAwfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMyXGxldmVsamNuMlxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkOCBcJzAyXCcwOC47fXtcbGV2ZWxudW1iZXJzIFwnMDE7fVxsZXZlbGZvbGxvdzBccnRsY2hcbHRyY2hcZjBcamNsaXN0dGFiXHR4NjEyMFxmaS0xODBcbGk2MTIwXGxpbjYxMjB9XGxpc3RpZDQxMzAxNzc0MX17XGxpc3RcbGlzdHRlbXBsYXRlaWQxODcyMDMyMjh7XGxpc3RsZXZlbFxsZXZlbG5mYzFcbGV2ZWxuZmNuMVxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDJcJzAwLjt9e1xsZXZlbG51bWJlcnMgXCcwMTt9XGxldmVsZm9sbG93MFxydGxjaFxsdHJjaFxiMFxpMFxmczI0XGYwXHMxXGpjbGlzdHRhYlx0eDcyMFxmaS0zNjBcbGk3MjBcbGluNzIwfXtcbGlzdGxldmVsXGxldmVsbmZjM1xsZXZlbG5mY24zXGxldmVsamMwXGxldmVsamNuMFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMlwnMDEuO317XGxldmVsbnVtYmVycyBcJzAxO31cbGV2ZWxmb2xsb3cwXHJ0bGNoXGx0cmNoXGIwXGkwXGZzMjRcZjBcdWxub25lXHMyXGpjbGlzdHRhYlx0eDE0NDBcZmktNzIwXGxpMTQ0MFxsaW4xNDQwfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMlwnMDIuO317XGxldmVsbnVtYmVycyBcJzAxO31cbGV2ZWxmb2xsb3cwXHJ0bGNoXGx0cmNoXGIwXGkwXGZzMjRcZjBcczNcamNsaXN0dGFiXHR4MjE2MFxmaS03MjBcbGkyMTYwXGxpbjIxNjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAyXCcwMy47fXtcbGV2ZWxudW1iZXJzIFwnMDE7fVxsZXZlbGZvbGxvdzBccnRsY2hcbHRyY2hcYjBcaTBcZnMyNFxmMFxzNFxqY2xpc3R0YWJcdHgyODgwXGZpLTcyMFxsaTI4ODBcbGluMjg4MH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDJcJzA0Ljt9e1xsZXZlbG51bWJlcnMgXCcwMTt9XGxldmVsZm9sbG93MFxydGxjaFxsdHJjaFxiMFxpMFxmczI0XGYwXHM1XGpjbGlzdHRhYlx0eDM2MDBcZmktMzYwXGxpMzYwMFxsaW4zNjAwfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMlwnMDUpO317XGxldmVsbnVtYmVycyBcJzAxO31cbGV2ZWxmb2xsb3cwXHJ0bGNoXGx0cmNoXGIwXGkwXGZzMjRcZjBcczZcamNsaXN0dGFiXHR4NDMyMFxmaS03MjBcbGk0MzIwXGxpbjQzMjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAyXCcwNik7fXtcbGV2ZWxudW1iZXJzIFwnMDE7fVxsZXZlbGZvbGxvdzBccnRsY2hcbHRyY2hcYjBcaTBcZnMyNFxmMFxzN1xqY2xpc3R0YWJcdHg1MDQwXGZpLTcyMFxsaTUwNDBcbGluNTA0MH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDJcJzA3KTt9e1xsZXZlbG51bWJlcnMgXCcwMTt9XGxldmVsZm9sbG93MFxydGxjaFxsdHJjaFxiMFxpMFxmczI0XGYwXHM4XGpjbGlzdHRhYlx0eDU3NjBcZmktMzYwXGxpNTc2MFxsaW41NzYwfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMyhcJzA4KTt9e1xsZXZlbG51bWJlcnMgXCcwMjt9XGxldmVsZm9sbG93MFxydGxjaFxsdHJjaFxiMFxpMFxmczI0XGYwXHM5XGpjbGlzdHRhYlx0eDY0ODBcZmktNzIwXGxpNjQ4MFxsaW42NDgwfVxsaXN0aWQxMzM1MTA3NDE2fXtcbGlzdFxsaXN0dGVtcGxhdGVpZC04NTM3ODMwNTRcbGlzdHNpbXBsZXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAxXHUtMzkxMyA7fXtcbGV2ZWxudW1iZXJzO31cbGV2ZWxmb2xsb3cwXHJ0bGNoXGx0cmNoXGYyXHMzNVxqY2xpc3R0YWJcdHgyMTYwXGZpLTcyMFxsaTIxNjBcbGluMjE2MH1cbGlzdGlkMTYwODk5NzY1MX17XGxpc3RcbGlzdHRlbXBsYXRlaWQ2NzY5ODcxN3tcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMlwnMDApO317XGxldmVsbnVtYmVycyBcJzAxO31cbGV2ZWxmb2xsb3cwXHJ0bGNoXGx0cmNoXGYwXGpjbGlzdHRhYlx0eDM2MFxmaS0zNjBcbGkzNjBcbGluMzYwfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMlwnMDEpO317XGxldmVsbnVtYmVycyBcJzAxO31cbGV2ZWxmb2xsb3cwXHJ0bGNoXGx0cmNoXGYwXGpjbGlzdHRhYlx0eDcyMFxmaS0zNjBcbGk3MjBcbGluNzIwfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMwXGxldmVsamNuMFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMlwnMDIpO317XGxldmVsbnVtYmVycyBcJzAxO31cbGV2ZWxmb2xsb3cwXHJ0bGNoXGx0cmNoXGYwXGpjbGlzdHRhYlx0eDEwODBcZmktMzYwXGxpMTA4MFxsaW4xMDgwfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMyhcJzAzKTt9e1xsZXZlbG51bWJlcnMgXCcwMjt9XGxldmVsZm9sbG93MFxydGxjaFxsdHJjaFxmMFxqY2xpc3R0YWJcdHgxNDQwXGZpLTM2MFxsaTE0NDBcbGluMTQ0MH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDMoXCcwNCk7fXtcbGV2ZWxudW1iZXJzIFwnMDI7fVxsZXZlbGZvbGxvdzBccnRsY2hcbHRyY2hcZjBcamNsaXN0dGFiXHR4MTgwMFxmaS0zNjBcbGkxODAwXGxpbjE4MDB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAzKFwnMDUpO317XGxldmVsbnVtYmVycyBcJzAyO31cbGV2ZWxmb2xsb3cwXHJ0bGNoXGx0cmNoXGYwXGpjbGlzdHRhYlx0eDIxNjBcZmktMzYwXGxpMjE2MFxsaW4yMTYwfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMlwnMDYuO317XGxldmVsbnVtYmVycyBcJzAxO31cbGV2ZWxmb2xsb3cwXHJ0bGNoXGx0cmNoXGYwXGpjbGlzdHRhYlx0eDI1MjBcZmktMzYwXGxpMjUyMFxsaW4yNTIwfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMlwnMDcuO317XGxldmVsbnVtYmVycyBcJzAxO31cbGV2ZWxmb2xsb3cwXHJ0bGNoXGx0cmNoXGYwXGpjbGlzdHRhYlx0eDI4ODBcZmktMzYwXGxpMjg4MFxsaW4yODgwfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMwXGxldmVsamNuMFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMlwnMDguO317XGxldmVsbnVtYmVycyBcJzAxO31cbGV2ZWxmb2xsb3cwXHJ0bGNoXGx0cmNoXGYwXGpjbGlzdHRhYlx0eDMyNDBcZmktMzYwXGxpMzI0MFxsaW4zMjQwfVxsaXN0aWQxNzkxODIzMDA2fXtcbGlzdFxsaXN0dGVtcGxhdGVpZDY3Njk4NzE3e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAyXCcwMCk7fXtcbGV2ZWxudW1iZXJzIFwnMDE7fVxsZXZlbGZvbGxvdzBccnRsY2hcbHRyY2hcZjBcamNsaXN0dGFiXHR4MzYwXGZpLTM2MFxsaTM2MFxsaW4zNjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAyXCcwMSk7fXtcbGV2ZWxudW1iZXJzIFwnMDE7fVxsZXZlbGZvbGxvdzBccnRsY2hcbHRyY2hcZjBcamNsaXN0dGFiXHR4NzIwXGZpLTM2MFxsaTcyMFxsaW43MjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAyXCcwMik7fXtcbGV2ZWxudW1iZXJzIFwnMDE7fVxsZXZlbGZvbGxvdzBccnRsY2hcbHRyY2hcZjBcamNsaXN0dGFiXHR4MTA4MFxmaS0zNjBcbGkxMDgwXGxpbjEwODB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAzKFwnMDMpO317XGxldmVsbnVtYmVycyBcJzAyO31cbGV2ZWxmb2xsb3cwXHJ0bGNoXGx0cmNoXGYwXGpjbGlzdHRhYlx0eDE0NDBcZmktMzYwXGxpMTQ0MFxsaW4xNDQwfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbHN0YXJ0YXQxe1xsZXZlbHRleHQgXCcwMyhcJzA0KTt9e1xsZXZlbG51bWJlcnMgXCcwMjt9XGxldmVsZm9sbG93MFxydGxjaFxsdHJjaFxmMFxqY2xpc3R0YWJcdHgxODAwXGZpLTM2MFxsaTE4MDBcbGluMTgwMH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxzdGFydGF0MXtcbGV2ZWx0ZXh0IFwnMDMoXCcwNSk7fXtcbGV2ZWxudW1iZXJzIFwnMDI7fVxsZXZlbGZvbGxvdzBccnRsY2hcbHRyY2hcZjBcamNsaXN0dGFiXHR4MjE2MFxmaS0zNjBcbGkyMTYwXGxpbjIxNjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAyXCcwNi47fXtcbGV2ZWxudW1iZXJzIFwnMDE7fVxsZXZlbGZvbGxvdzBccnRsY2hcbHRyY2hcZjBcamNsaXN0dGFiXHR4MjUyMFxmaS0zNjBcbGkyNTIwXGxpbjI1MjB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAyXCcwNy47fXtcbGV2ZWxudW1iZXJzIFwnMDE7fVxsZXZlbGZvbGxvdzBccnRsY2hcbHRyY2hcZjBcamNsaXN0dGFiXHR4Mjg4MFxmaS0zNjBcbGkyODgwXGxpbjI4ODB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsc3RhcnRhdDF7XGxldmVsdGV4dCBcJzAyXCcwOC47fXtcbGV2ZWxudW1iZXJzIFwnMDE7fVxsZXZlbGZvbGxvdzBccnRsY2hcbHRyY2hcZjBcamNsaXN0dGFiXHR4MzI0MFxmaS0zNjBcbGkzMjQwXGxpbjMyNDB9XGxpc3RpZDIxMDQ1NzA3NDl9fXtcKlxsaXN0b3ZlcnJpZGV0YWJsZXtcbGlzdG92ZXJyaWRlXGxpc3RpZDEzMzUxMDc0MTZcbGlzdG92ZXJyaWRlY291bnQwXGxzMX17XGxpc3RvdmVycmlkZVxsaXN0aWQxMzM1MTA3NDE2XGxpc3RvdmVycmlkZWNvdW50MFxsczJ9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkMTMzNTEwNzQxNlxsaXN0b3ZlcnJpZGVjb3VudDBcbHMzfXtcbGlzdG92ZXJyaWRlXGxpc3RpZDEzMzUxMDc0MTZcbGlzdG92ZXJyaWRlY291bnQwXGxzNH17XGxpc3RvdmVycmlkZVxsaXN0aWQxMzM1MTA3NDE2XGxpc3RvdmVycmlkZWNvdW50MFxsczV9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkMTMzNTEwNzQxNlxsaXN0b3ZlcnJpZGVjb3VudDBcbHM2fXtcbGlzdG92ZXJyaWRlXGxpc3RpZDEzMzUxMDc0MTZcbGlzdG92ZXJyaWRlY291bnQwXGxzN317XGxpc3RvdmVycmlkZVxsaXN0aWQxMzM1MTA3NDE2XGxpc3RvdmVycmlkZWNvdW50MFxsczh9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkMTMzNTEwNzQxNlxsaXN0b3ZlcnJpZGVjb3VudDBcbHM5fXtcbGlzdG92ZXJyaWRlXGxpc3RpZDE2MDg5OTc2NTFcbGlzdG92ZXJyaWRlY291bnQwXGxzMTB9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkMzQ3MjIxNjI0XGxpc3RvdmVycmlkZWNvdW50MFxsczExfXtcbGlzdG92ZXJyaWRlXGxpc3RpZDE2MDg5OTc2NTFcbGlzdG92ZXJyaWRlY291bnQwXGxzMTJ9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkMTc5MTgyMzAwNlxsaXN0b3ZlcnJpZGVjb3VudDBcbHMxM317XGxpc3RvdmVycmlkZVxsaXN0aWQyMTA0NTcwNzQ5XGxpc3RvdmVycmlkZWNvdW50MFxsczE0fXtcbGlzdG92ZXJyaWRlXGxpc3RpZDQxMzAxNzc0MVxsaXN0b3ZlcnJpZGVjb3VudDBcbHMxNX19e1wqXGdlbmVyYXRvciBBc3Bvc2UuV29yZHMgZm9yIC5ORVQgNi40LjAuMDt9e1xpbmZve1x0aXRsZSBDV1QgQmxhbmsgRG9jdW1lbnR9e1xhdXRob3IgbGhhbWVyfXtcY29tcGFueSBDYWR3YWxhZGVyLCBXaWNrZXJzaGFtICYgVGFmdCBMTFB9e1xvcGVyYXRvciBsaGFtZXJ9e1xjYXRlZ29yeSBHZW5lcmFsfXtcZG9jY29tbSBGb3JtYXR0ZWQgZm9yIFdvcmQgMjAwMy4gIFZlcnNpb24gRGF0ZTogOC8yOC8yMDA3IDEyOjM4IEFNfVx2ZXJzaW9uMVxlZG1pbnMxXG5vZnBhZ2VzM1xub2Z3b3Jkczc5MFxub2ZjaGFyczQ1MDdcbm9mY2hhcnN3czUyODd7XGNyZWF0aW1ceXIyMDExXG1vOFxkeTE5XGhyMTZcbWluMzdcc2VjMH17XHByaW50aW1ceXIyMDAzXG1vNFxkeTlcaHIxMlxtaW41XHNlYzB9e1xyZXZ0aW1ceXIyMDExXG1vOFxkeTE5XGhyMTZcbWluMzhcc2VjMH19e1wqXHVzZXJwcm9wc3tccHJvcG5hbWUgQ1dUMjAwM0RvY3VtZW50fVxwcm9wdHlwZTMwe1xzdGF0aWN2YWwgQ1dUMjAwM0RvY3VtZW50fXtccHJvcG5hbWUgRG9jSUR9XHByb3B0eXBlMzB9e1wqXHRlbXBsYXRlIEM6XFxQcm9ncmFtIEZpbGVzXFxNaWNyb3NvZnQgT2ZmaWNlXFxUZW1wbGF0ZXNcXENXVCBCbGFuayBEb2N1bWVudC5kb3R9XGRlZmxhbmcxMDMzXGRlZmxhbmdmZTIwNTJcYWRlZmxhbmcxMDI1XGpleHBhbmRcc2hvd3htbGVycm9yczF7XCpcd2dyZmZtdGZpbHRlciAwMTNmfVx2aWV3a2luZDFcdmlld3NjYWxlMTAwXHZpZXdub2JvdW5kMVxmZXQwe1wqXGZ0bnNlcFxwYXJkXHBsYWluXGl0YXAwXHMxN1x0cWNcdHg0NjgwXHRxclx0eDkzNjBcYXNwYWxwaGFcYXNwbnVtXGx0cnBhclxsaTBcbGluMFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xjczEwIFxjaGZ0bnNlcCB9e1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGNzMTBccGFyfX17XCpcZnRuc2VwY1xwYXJkXHBsYWluXGl0YXAwXHMxN1x0cWNcdHg0NjgwXHRxclx0eDkzNjBcYXNwYWxwaGFcYXNwbnVtXGx0cnBhclxsaTBcbGluMFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xjczEwIFxjaGZ0bnNlcGMgfXtccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xjczEwXHBhcn19e1wqXGZ0bmNuXHBhcmRccGxhaW5caXRhcDBcczBcYXNwYWxwaGFcYXNwbnVtXGx0cnBhclxsaTBcbGluMFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xjczEwXHBhcn19e1wqXGFmdG5zZXBccGFyZFxwbGFpblxpdGFwMFxzMFxhc3BhbHBoYVxhc3BudW1cbHRycGFyXGxpMFxsaW4wXHJpMFxyaW4wXHFsXGZhYXV0b1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMze1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGNzMTAgXGNoZnRuc2VwIH17XHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcY3MxMFxwYXJ9fXtcKlxhZnRuc2VwY1xwYXJkXHBsYWluXGl0YXAwXHMwXGFzcGFscGhhXGFzcG51bVxsdHJwYXJcbGkwXGxpbjBccmkwXHJpbjBccWxcZmFhdXRvXHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzN7XHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcY3MxMCBcY2hmdG5zZXBjIH17XHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcY3MxMFxwYXJ9fVxmdG5ialxhZW5kZG9jXHdpZG93Y3RybFxub3NwYWNlZm9ydWxcbm9sbmh0YWRqdGJsXGFsbnRibGluZFxseXR0YmxydGdyXG5vZ3Jvd2F1dG9maXRcZG50Ymxuc2JkYlxub3hsYXR0b3llblx3cnBwdW5jdFxub2Jya3dycHRibFxleHBzaHJ0blxzbmFwdG9ncmlkaW5jZWxsXGFzaWFuYnJrcnVsZVxodG1hdXRzcFxub3VsdHJsc3BjXHVzZWx0YmFsblxzcGx5dHduaW5lXGZ0bmx5dHduaW5lXGx5dGNhbGN0Ymx3ZFxhbGxvd2ZpZWxkZW5kc2VsXG5ld3RibHN0eXJ1bHNcbG5icmtydWxlXGZvcm1zaGFkZVxub2prZXJucHVuY3RcZGdoc3BhY2UxODBcZGd2c3BhY2UxODBcZGdoc2hvdzBcZGdtYXJnaW5ccGdicmRyaGVhZFxwZ2JyZHJmb290XHNlY3RkXHBzejFcZW5kbmhlcmVccGd3c3huMTIyNDBccGdoc3huMTU4NDBcbWFyZ2xzeG4xNDQwXG1hcmdyc3huMTQ0MFxtYXJndHN4bjE0NDBcbWFyZ2JzeG4xNDQwXGxpbmV4MFxzZnRuYmpcbHRyc2VjdFxzZWN0ZGVmYXVsdGNse1xmb290ZXJccGFyZFxwbGFpblxpdGFwMFxzMTdcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXGFzcGFscGhhXGFzcG51bVxsdHJwYXJcbGkwXGxpbjBccmkwXHJpbjBccWxcZmFhdXRvXHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzN7XGZpZWxke1wqXGZsZGluc3R7XHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczE2XGYxXGxhbmcxMDI0XGxhbmducDEwMjRcbGFuZ2ZlMTAyNFxsYW5nZmVucDEwMjRcY3M0Mlxub3Byb29mICBET0NQUk9QRVJUWSAgRG9jSUQgIFxcKiBNRVJHRUZPUk1BVCB9fXtcZmxkcnNsdHtccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMTZcZjFcbGFuZzEwMjRcbGFuZ25wMTAyNFxsYW5nZmUxMDI0XGxhbmdmZW5wMTAyNFxjczQyXG5vcHJvb2YgIH19fVxzMTdcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXGFzcGFscGhhXGFzcG51bVxsdHJwYXJcbGkwXGxpbjBccmkwXHJpbjBccWxcZmFhdXRve1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGNzMTAgXHRhYiAtfXtcZmllbGR7XCpcZmxkaW5zdHtccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xjczI5ICBQQUdFIH19e1xmbGRyc2x0e1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAyNFxsYW5nbnAxMDI0XGxhbmdmZTEwMjRcbGFuZ2ZlbnAxMDI0XGNzMjlcbm9wcm9vZiAzfX19XHMxN1x0cWNcdHg0NjgwXHRxclx0eDkzNjBcYXNwYWxwaGFcYXNwbnVtXGx0cnBhclxsaTBcbGluMFxyaTBccmluMFxxbFxmYWF1dG97XHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzNcY3MyOSAtfXtccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xjczEwXHBhcn19e1xmb290ZXJmXHBhcmRccGxhaW5caXRhcDBcczE3XHRxY1x0eDQ2ODBcdHFyXHR4OTM2MFxhc3BhbHBoYVxhc3BudW1cbHRycGFyXGxpMFxsaW4wXHJpMFxyaW4wXHFsXGZhYXV0b1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMze1xmaWVsZHtcKlxmbGRpbnN0e1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMxNlxmMVxsYW5nMTAyNFxsYW5nbnAxMDI0XGxhbmdmZTEwMjRcbGFuZ2ZlbnAxMDI0XGNzNDJcbm9wcm9vZiAgRE9DUFJPUEVSVFkgIERvY0lEICBcXCogTUVSR0VGT1JNQVQgfX17XGZsZHJzbHR7XHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczE2XGYxXGxhbmcxMDI0XGxhbmducDEwMjRcbGFuZ2ZlMTAyNFxsYW5nZmVucDEwMjRcY3M0Mlxub3Byb29mICB9fX1cczE3XHRxY1x0eDQ2ODBcdHFyXHR4OTM2MFxhc3BhbHBoYVxhc3BudW1cbHRycGFyXGxpMFxsaW4wXHJpMFxyaW4wXHFsXGZhYXV0b3tccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xjczEwXHBhcn19XHBhcmRccGxhaW5caXRhcDBcczBcYXNwYWxwaGFcYXNwbnVtXGx0cnBhclxsaTBcbGluMFxyaTBccmluMFxxY1xmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxiXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDQxXGxhbmdmZW5wMTA0MVxjczEwIFRQVyBQZXRlcnNidXJnLCBMTEN9e1xydGxjaFxhZjNcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGJcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwNDFcbGFuZ2ZlbnAxMDQxXGNzMTBccGFyfVxwYXJkXHBsYWluXGl0YXAwXHMwXGFzcGFscGhhXGFzcG51bVxsdHJwYXJcbGkwXGxpbjBccmkwXHJpbjBccWNcZmFhdXRvXHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzN7XHJ0bGNoXGFmM1xhbGFuZzEwMjVcYWZzMjRcbHRyY2hcYlxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMCBSYXRlIFNjaGVkdWxlIEZFUkMgTm8uIDF9e1xydGxjaFxhZjNcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGJcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwNDFcbGFuZ2ZlbnAxMDQxXGNzMTBccGFyfVxwYXJkXHBsYWluXGl0YXAwXHMwXGFzcGFscGhhXGFzcG51bVxsdHJwYXJcbGkwXGxpbjBccmkwXHJpbjBccWNcZmFhdXRvXHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzN7XHJ0bGNoXGFmM1xhbGFuZzEwMjVcYWZzMjRcbHRyY2hcYlxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMFxwYXJ9XHBhcmRccGxhaW5caXRhcDBcczBcYXNwYWxwaGFcYXNwbnVtXGx0cnBhclxsaTBcbGluMFxyaTBccmluMFxxY1xmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxiXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDQxXGxhbmdmZW5wMTA0MVxjczEwXHBhcn1ccGFyZFxwbGFpblxpdGFwMFxzMFxsczE1XHR4MzYwXHR4NzQxXGZpLTc0MVxhc3BhbHBoYVxhc3BudW1cbHRycGFyXGxpNzQxXGxpbjc0MVxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tcbGlzdHRleHRccGFyZFxwbGFpblx0eDM2MFxmaS0zNjBcbHRycGFyXGxpMzYwXGxpbjM2MFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcbHRyY2hcYlxmMCAxLlx0YWIgfXtccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxiXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDQxXGxhbmdmZW5wMTA0MVxjczEwIEF2YWlsYWJpbGl0eX17XHJ0bGNoXGFmM1xhbGFuZzEwMjVcYWZzMjRcbHRyY2hcYlxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMFxwYXJ9XHBhcmRccGxhaW5caXRhcDBcczBcYXNwYWxwaGFcYXNwbnVtXGx0cnBhclxsaTBcbGluMFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxiXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDQxXGxhbmdmZW5wMTA0MVxjczEwXHBhcn1ccGFyZFxwbGFpblxpdGFwMFxzMFxhc3BhbHBoYVxhc3BudW1cbHRycGFyXGxpNjg0XGxpbjY4NFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMCBUUFcgUGV0ZXJzYnVyZyBMTEMgKFx1ODIyMCB9e1xydGxjaFxhZjNcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDQxXGxhbmdmZW5wMTA0MVxjczEwIFRQVyBQZXRlcnNidXJnXHU4MjIxIH17XHJ0bGNoXGFmM1xhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwNDFcbGFuZ2ZlbnAxMDQxXGNzMTAgKSBtYWtlcyBlbGVjdHJpYyBlbmVyZ3ksIGNhcGFjaXR5IGFuZCBhbmNpbGxhcnkgc2VydmljZXMgYXZhaWxhYmxlIHVuZGVyIHRoaXMgUmF0ZSBTY2hlZHVsZSB0byBhbnkgcHVyY2hhc2VyIGZvciByZXNhbGV9e1xydGxjaFxhZjNcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDQxXGxhbmdmZW5wMTA0MVxjczEwIC59e1xydGxjaFxhZjNcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDQxXGxhbmdmZW5wMTA0MVxjczEwXHBhcn1ccGFyZFxwbGFpblxpdGFwMFxzMFxhc3BhbHBoYVxhc3BudW1cbHRycGFyXGxpNjg0XGxpbjY4NFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMFxwYXJ9XHBhcmRccGxhaW5caXRhcDBcczBcbHMxNVx0eDM2MFxmaS02ODRcYXNwYWxwaGFcYXNwbnVtXGx0cnBhclxsaTY4NFxsaW42ODRccmkwXHJpbjBccWxcZmFhdXRvXHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzN7XGxpc3R0ZXh0XHBhcmRccGxhaW5cdHgzNjBcZmktMzYwXGx0cnBhclxsaTM2MFxsaW4zNjBccmkwXHJpbjBccWxcZmFhdXRvXHJ0bGNoXGx0cmNoXGJcZjAgMi5cdGFiIH17XHJ0bGNoXGFmM1xhbGFuZzEwMjVcYWZzMjRcbHRyY2hcYlxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMCBBcHBsaWNhYmlsaXR5fXtccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMFxwYXJ9XHBhcmRccGxhaW5caXRhcDBcczBcYXNwYWxwaGFcYXNwbnVtXGx0cnBhclxsaTBcbGluMFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMFxwYXJ9XHBhcmRccGxhaW5caXRhcDBcczBcYXNwYWxwaGFcYXNwbnVtXGx0cnBhclxsaTc0MVxsaW43NDFccmkwXHJpbjBccWxcZmFhdXRvXHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzN7XHJ0bGNoXGFmM1xhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwNDFcbGFuZ2ZlbnAxMDQxXGNzMTAgVGhpcyBSYXRlIFNjaGVkdWxlIGlzIGFwcGxpY2FibGUgdG8gYWxsIHNhbGVzIG9mIGVuZXJneSBhbmQgY2FwYWNpdHkgYnkgVFBXIFBldGVyc2J1cmcgbm90IG90aGVyd2lzZSBzdWJqZWN0IHRvIGEgcGFydGljdWxhciByYXRlIHNjaGVkdWxlIG9mIFRQVyBQZXRlcnNidXJnLn17XHJ0bGNoXGFmM1xhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwNDFcbGFuZ2ZlbnAxMDQxXGNzMTBccGFyfVxwYXJkXHBsYWluXGl0YXAwXHMwXGFzcGFscGhhXGFzcG51bVxsdHJwYXJcbGk3NDFcbGluNzQxXHJpMFxyaW4wXHFsXGZhYXV0b1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMze1xydGxjaFxhZjNcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDQxXGxhbmdmZW5wMTA0MVxjczEwXHBhcn1ccGFyZFxwbGFpblxpdGFwMFxzMFxsczE1XHR4MzYwXGZpLTc0MVxhc3BhbHBoYVxhc3BudW1cbHRycGFyXGxpNzQxXGxpbjc0MVxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tcbGlzdHRleHRccGFyZFxwbGFpblx0eDM2MFxmaS0zNjBcbHRycGFyXGxpMzYwXGxpbjM2MFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcbHRyY2hcYlxmMCAzLlx0YWIgfXtccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxiXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDQxXGxhbmdmZW5wMTA0MVxjczEwIFJhdGVzfXtccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMFxwYXJ9XHBhcmRccGxhaW5caXRhcDBcczBcZmk3MjBcYXNwYWxwaGFcYXNwbnVtXGx0cnBhclxsaTBcbGluMFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxiXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDQxXGxhbmdmZW5wMTA0MVxjczEwXHBhcn1ccGFyZFxwbGFpblxpdGFwMFxzMFxmaS0yMVxhc3BhbHBoYVxhc3BudW1cbHRycGFyXGxpNzQxXGxpbjc0MVxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMCBBbGwgc2FsZXMgc2hhbGwgYmUgbWFkZSBhdCByYXRlcyBlc3RhYmxpc2hlZCBieSBhZ3JlZW1lbnQgYmV0d2VlbiB0aGUgcHV9e1xydGxjaFxhZjNcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDQxXGxhbmdmZW5wMTA0MVxjczEwIHJjaGFzZXIgYW5kIFRQVyBQZXRlcnNidXJnLn17XHJ0bGNoXGFmM1xhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwNDFcbGFuZ2ZlbnAxMDQxXGNzMTBccGFyfVxwYXJkXHBsYWluXGl0YXAwXHMwXGZpLTIxXGFzcGFscGhhXGFzcG51bVxsdHJwYXJcbGk3NDFcbGluNzQxXHJpMFxyaW4wXHFsXGZhYXV0b1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMze1xydGxjaFxhZjNcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDQxXGxhbmdmZW5wMTA0MVxjczEwXHBhcn1ccGFyZFxwbGFpblxpdGFwMFxzMFxsczE1XHR4MzYwXGZpLTY4NFxhc3BhbHBoYVxhc3BudW1cbHRycGFyXGxpNjg0XGxpbjY4NFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tcbGlzdHRleHRccGFyZFxwbGFpblx0eDM2MFxmaS0zNjBcbHRycGFyXGxpMzYwXGxpbjM2MFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcbHRyY2hcYlxmMCA0Llx0YWIgfXtccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxiXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDQxXGxhbmdmZW5wMTA0MVxjczEwIE90aGVyIFRlcm1zIGFuZCBDb25kaXRpb25zfXtccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMFxwYXJ9XHBhcmRccGxhaW5caXRhcDBcczBcZmk3MjBcYXNwYWxwaGFcYXNwbnVtXGx0cnBhclxsaTBcbGluMFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxiXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDQxXGxhbmdmZW5wMTA0MVxjczEwXHBhcn1ccGFyZFxwbGFpblxpdGFwMFxzMFxmaS0yMVxhc3BhbHBoYVxhc3BudW1cbHRycGFyXGxpNzQxXGxpbjc0MVxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMCBBbGwgb3RoZXIgdGVybXMgYW5kIGNvbmRpdGlvbnMgc2hhbGwgYmUgZXN0YWJsaXNoZWQgYnkgYWdyZWVtZW50IGJldHdlZW4gdGhlIHB1cmNoYXNlciBhbmQgVFBXIFBldGVyc2J1cmcufXtccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMFxwYXJ9XHBhcmRccGxhaW5caXRhcDBcczBcZmk3MjBcYXNwYWxwaGFcYXNwbnVtXGx0cnBhclxsaTBcbGluMFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMFxwYXJ9XHBhcmRccGxhaW5caXRhcDBcczBcbHMxNVx0eC0yODVcdHgzNjBcZmktNzQxXGFzcGFscGhhXGFzcG51bVxsdHJwYXJcbGk3NDFcbGluNzQxXHJpMFxyaW4wXHFsXGZhYXV0b1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMze1xsaXN0dGV4dFxwYXJkXHBsYWluXHR4MzYwXGZpLTM2MFxsdHJwYXJcbGkzNjBcbGluMzYwXHJpMFxyaW4wXHFsXGZhYXV0b1xydGxjaFxsdHJjaFxiXGYwIDUuXHRhYiB9e1xydGxjaFxhZjNcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGJcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwNDFcbGFuZ2ZlbnAxMDQxXGNzMTAgQW5jaWxsYXJ5IFNlcnZpY2VzfXtccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMFxwYXJ9XHBhcmRccGxhaW5caXRhcDBcczBcZmk3MjBcYXNwYWxwaGFcYXNwbnVtXGx0cnBhclxsaTBcbGluMFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxiXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDQxXGxhbmdmZW5wMTA0MVxjczEwXHBhcn1ccGFyZFxwbGFpblxpdGFwMFxzMFxhc3BhbHBoYVxhc3BudW1cbHRycGFyXGxpNzQxXGxpbjc0MVxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMCBUUFcgUGV0ZXJzYnVyZyBtYXkgb2ZmZXIgZm9yIHNhbGUgdGhvc2UgYW5jaWxsYXJ5IHNlcnZpY2VzIGluIHRob3NlIG1hcn17XHJ0bGNoXGFmM1xhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwNDFcbGFuZ2ZlbnAxMDQxXGNzMTAga2V0cyBzcGVjaWZpZWQgYW5kIGF1dGhvcml6ZWQgYnkgdGhlIENvbW1pc3Npb24gZnJvbSB0aW1lIHRvIHRpbWUgaW4gb3JkZXJzIGV4dGVuZGluZyBzdWNoIGF1dGhvcml0eSB0byBhbGwgc2VsbGVycyBhdXRob3JpemVkIHRvIHNlbGwgZWxlY3RyaWMgZW5lcmd5IGFuZCBjYXBhY2l0eSBhdCBtYXJrZXQtYmFzZWQgcmF0ZXMsIGluY2x1ZGluZzp9e1xydGxjaFxhZjNcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDQxXGxhbmdmZW5wMTA0MVxjczEwXHBhcn1ccGFyZFxwbGFpblxpdGFwMFxzMFxhc3BhbHBoYVxhc3BudW1cbHRycGFyXGxpNzQxXGxpbjc0MVxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMFxwYXJ9XHBhcmRccGxhaW5caXRhcDBcczBcaWx2bDFcbHMxNVx0eDEwODBcdHgxNDI1XGZpLTcwNVxhc3BhbHBoYVxhc3BudW1cbHRycGFyXGxpMTQyNVxsaW4xNDI1XHJpMFxyaW4wXHFsXGZhYXV0b1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMze1xsaXN0dGV4dFxwYXJkXHBsYWluXHR4MTA4MFxmaS0zNjBcbHRycGFyXGxpMTA4MFxsaW4xMDgwXHJpMFxyaW4wXHFsXGZhYXV0b1xydGxjaFxsdHJjaFxmMCBhLlx0YWIgfXtccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMFx1bCBQSk19e1xydGxjaFxhZjNcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDQxXGxhbmdmZW5wMTA0MVxjczEwIDogIFRQVyBQZXRlcnNidXJnIG9mZmVycyByZWd1bGF0aW9uIGFuZCBmcmVxdWVuY3kgcmVzcH17XHJ0bGNoXGFmM1xhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwNDFcbGFuZ2ZlbnAxMDQxXGNzMTAgb25zZSBzZXJ2aWNlLCBlbmVyZ3kgaW1iYWxhbmNlIHNlcnZpY2UgYW5kIG9wZXJhdGluZyByZXNlcnZlIHNlcnZpY2UgKHdoaWNoIGluY2x1ZGVzIHNwaW5uaW5nLCAxMC1taW51dGUgcmVzZXJ2ZXMsIGFuZCAzMC1taW51dGUgcmVzZXJ2ZXMpIGZvciBzYWxlIGludG8gdGhlIG1hcmtldCBhZG1pbmlzdHJhdGVkIGJ5IFBKTSBJbnRlcmNvbm5lY3Rpb24sIEwuTC5DLiAoUEpNKSBhbmQsIHdoZXJlIHRoZSBQSk0gT3BlbiBBY2Nlc3MgVHJhbnNtaXNzfXtccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMCBpfXtccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMCBvbiBUYXJpZmYgcGVybWl0cywgdGhlIHNlbGYtc3VwcGx5IG9mIHRoZXNlIHNlcnZpY2VzLCB0byBhbnkgcHVyY2hhc2UgZm9yIGEgYmlsYXRlcmFsIHNhbGUgdGhhdCBpcyB1c2VkIHRvIHNhdGlzZnkgdGhlIGFuY2lsbGFyeSBzZXJ2aWNlcyByZXF1aXJlbWVudHMgb2YgdGhlIFBKTSBPZmZpY2Ugb2YgSW50ZXJjb25uZWN0aW9uO317XHJ0bGNoXGFmM1xhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwNDFcbGFuZ2ZlbnAxMDQxXGNzMTBccGFyfVxwYXJkXHBsYWluXGl0YXAwXHMwXHR4MTQyNVxhc3BhbHBoYVxhc3BudW1cbHRycGFyXGxpNzIwXGxpbjcyMFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMFxwYXJ9XHBhcmRccGxhaW5caXRhcDBcczBcaWx2bDFcbHMxNVx0eDEwODBcdHgxNDI1XGZpLTcwNVxhc3BhbHBoYVxhc3BudW1cbHRycGFyXGxpMTQyNVxsaW4xNDI1XHJpMFxyaW4wXHFsXGZhYXV0b1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMze1xsaXN0dGV4dFxwYXJkXHBsYWluXHR4MTA4MFxmaS0zNjBcbHRycGFyXGxpMTA4MFxsaW4xMDgwXHJpMFxyaW4wXHFsXGZhYXV0b1xydGxjaFxsdHJjaFxmMCBiLlx0YWIgfXtccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMFx1bCBOZXcgWW9ya317XHJ0bGNoXGFmM1xhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwNDFcbGFuZ2ZlbnAxMDQxXGNzMTAgOiAgVFBXIFBldGVyc2J1cmcgb2ZmZXJzIHJlZ3VsYXRpb24gYW5kIGZyZXF1ZW5jeSByZXNwb25zZX17XHJ0bGNoXGFmM1xhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwNDFcbGFuZ2ZlbnAxMDQxXGNzMTAgIHNlcnZpY2UsIGFuZCBvcGVyYXRpbmcgcmVzZXJ2ZSBzZXJ2aWNlICh3aGljaCBpbmNsdWRlcyAxMC1taW51dGUgbm9uLXN5bmNocm9ub3VzLCAzMC1taW51dGUgb3BlcmF0aW5nIHJlc2VydmVzLCAxMC1taW51dGUgc3Bpbm5pbmcgcmVzZXJ2ZXMsIGFuZCAxMC1taW51dGUgbm9uLXNwaW5uaW5nIHJlc2VydmVzKSBmb3Igc2FsZSB0byBhbnkgcHVyY2hhc2VyIGluIHRoZSBtYXJrZXQgYWRtaW5pc3RyYXRlZCBieSB0aGUgTmV3IFlvcmsgSW5kZXBlfXtccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMCBufXtccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMCBkZW50IFN5c3RlbSBPcGVyYXRvcjsgfXtccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMFxwYXJ9XHBhcmRccGxhaW5caXRhcDBcczBcZmk3MjBcYXNwYWxwaGFcYXNwbnVtXGx0cnBhclxsaTBcbGluMFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMFxwYXJ9XHBhcmRccGxhaW5caXRhcDBcczBcZmk3MjBcYXNwYWxwaGFcYXNwbnVtXGx0cnBhclxsaTBcbGluMFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMFxwYXJ9XHBhcmRccGxhaW5caXRhcDBcczBcaWx2bDFcbHMxNVx0eDEwODBcdHgxNDI1XGZpLTcwNVxhc3BhbHBoYVxhc3BudW1cbHRycGFyXGxpMTQyNVxsaW4xNDI1XHJpMFxyaW4wXHFsXGZhYXV0b1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMze1xsaXN0dGV4dFxwYXJkXHBsYWluXHR4MTA4MFxmaS0zNjBcbHRycGFyXGxpMTA4MFxsaW4xMDgwXHJpMFxyaW4wXHFsXGZhYXV0b1xydGxjaFxsdHJjaFxmMCBjLlx0YWIgfXtccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMFx1bCBOZXcgRW5nbGFuZH17XHJ0bGNoXGFmM1xhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwNDFcbGFuZ2ZlbnAxMDQxXGNzMTAgOiAgVFBXIFBldGVyc2J1cmcgb2ZmZXJzIHJlZ3VsYXRpb24gYW5kIGZyZXF1ZW5jeSByZXNwb25zZSBzZXJ2aWNlIChhdXRvbWF0aWMgZ2VuZXJhdGlvbiBjb250cm9sKSwgb3BlcmF0aW5nIHJlc2VydmUgc2VydmljZSAod2hpY2ggaW5jbHVkZXMgMTAtbWludXRlIHNwaW5uaW5nIHJlc2VydmVzLCAxMC1taW51dGUgbm9uLXNwaW5uaW5nIHJlc2VydmVzLCBhbmQgMzAtbWludXRlIG9wZX17XHJ0bGNoXGFmM1xhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwNDFcbGFuZ2ZlbnAxMDQxXGNzMTAgcmF0aW5nIHJlc2VydmVzKSBmb3Igc2FsZSB0byBhbnkgcHVyY2hhc2VyIHdpdGhpbiB0aGUgbWFya2V0cyBhZG1pbmlzdGVyZWQgYnkgSVNPIE5ldyBFbmdsYW5kLCBJbmMuO317XHJ0bGNoXGFmM1xhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwNDFcbGFuZ2ZlbnAxMDQxXGNzMTBccGFyfVxwYXJkXHBsYWluXGl0YXAwXHMwXGZpNzIwXGFzcGFscGhhXGFzcG51bVxsdHJwYXJcbGkwXGxpbjBccmkwXHJpbjBccWxcZmFhdXRvXHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzN7XHJ0bGNoXGFmM1xhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwNDFcbGFuZ2ZlbnAxMDQxXGNzMTBccGFyfVxwYXJkXHBsYWluXGl0YXAwXHMwXGlsdmwxXGxzMTVcdHgxMDgwXHR4MTQyNVxmaS03MDVcYXNwYWxwaGFcYXNwbnVtXGx0cnBhclxsaTE0MjVcbGluMTQyNVxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tcbGlzdHRleHRccGFyZFxwbGFpblx0eDEwODBcZmktMzYwXGx0cnBhclxsaTEwODBcbGluMTA4MFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcbHRyY2hcZjAgZC5cdGFiIH17XHJ0bGNoXGFmM1xhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwNDFcbGFuZ2ZlbnAxMDQxXGNzMTBcdWwgQ2FsaWZvcm5pYX17XHJ0bGNoXGFmM1xhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwNDFcbGFuZ2ZlbnAxMDQxXGNzMTAgOiAgVFBXIFBldGVyc2J1cmcgb2ZmZXJzIHJlZ3VsYXRpb24gc2VydmljZSwgc3Bpbm5pbmcgcmVzZXJ2ZSBzZXJ2aWNlLCBhbmQgbm9uLXNwaW5uaW5nIHJlc2VydmUgc2VydmljZSB0byB0aGUgQ2FsaWZvcm5pYSBJbmRlcGVuZGVudCBTeXN0ZW0gT3BlfXtccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMCByYXRvciAoQ0FJU08pIGFuZCB0byBvdGhlcnMgdGhhdCBhcmUgc2VsZi1zdXBwbHlpbmcgYW5jaWxsYXJ5IHNlcnZpY2VzIHRvIHRoZSBDQUlTTzt9e1xydGxjaFxhZjNcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDQxXGxhbmdmZW5wMTA0MVxjczEwXHBhcn1ccGFyZFxwbGFpblxpdGFwMFxzMFxhc3BhbHBoYVxhc3BudW1cbHRycGFyXGxpNzIwXGxpbjcyMFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMFxwYXJ9XHBhcmRccGxhaW5caXRhcDBcczBcaWx2bDFcbHMxNVx0eDEwODBcdHgxNDI1XGZpLTcwNVxhc3BhbHBoYVxhc3BudW1cbHRycGFyXGxpMTQyNVxsaW4xNDI1XHJpMFxyaW4wXHFsXGZhYXV0b1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMze1xsaXN0dGV4dFxwYXJkXHBsYWluXHR4MTA4MFxmaS0zNjBcbHRycGFyXGxpMTA4MFxsaW4xMDgwXHJpMFxyaW4wXHFsXGZhYXV0b1xydGxjaFxsdHJjaFxmMCBlLlx0YWIgfXtccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMFx1bCBNaWR3ZXN0IElTT317XHJ0bGNoXGFmM1xhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwNDFcbGFuZ2ZlbnAxMDQxXGNzMTAgOiAgVFBXIFBldGVyc2J1cmcgb2ZmZXJzIHJlZ3VsYXRpb24gc2VydmljZSBhbmQgb3BlcmF0aW5nIHJlc2VydmUgc2VydmljZSAod2hpY2ggaW5jbHVkZSAxMC1taW51dGUgc3Bpbm5pbmcgcmVzZXJ2ZSBhbmQgMTAtbWludXRlIHN1cHBsZW1lbnRhbCByZXNlcnZlKSBmb3Igc2FsfXtccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMCBlIHRvIHRoZSBNaWR3ZXN0IEluZGVwZW5kZW50IFRyYW5zbWlzc2lvbiBTeXN0ZW0gT3BlcmF0b3IsIEluYy4gKE1pZHdlc3QgSVNPKSBhbmQgdG8gb3RoZXJzIHRoYXQgYXJlIHNlbGYtc3VwcGx5aW5nIGFuY2lsbGFyeSBzZXJ2aWNlcyB0byB0aGUgTWlkd2VzdCBJU08ufXtccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMFxwYXJ9XHBhcmRccGxhaW5caXRhcDBcczBcZmk3MjBcYXNwYWxwaGFcYXNwbnVtXGx0cnBhclxsaTBcbGluMFxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMFxwYXJ9XHBhcmRccGxhaW5caXRhcDBcczBcaWx2bDFcbHMxNVx0eDEwODBcdHgxNDI1XGZpLTcwNVxhc3BhbHBoYVxhc3BudW1cbHRycGFyXGxpMTQyNVxsaW4xNDI1XHJpMFxyaW4wXHFsXGZhYXV0b1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMze1xsaXN0dGV4dFxwYXJkXHBsYWluXHR4MTA4MFxmaS0zNjBcbHRycGFyXGxpMTA4MFxsaW4xMDgwXHJpMFxyaW4wXHFsXGZhYXV0b1xydGxjaFxsdHJjaFxmMCBmLlx0YWIgfXtccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMFx1bCBUaGlyZC1QYXJ0eSBQcm92aWRlcn17XHJ0bGNoXGFmM1xhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwNDFcbGFuZ2ZlbnAxMDQxXGNzMTAgOiAgVGhpcmQtcGFydHkgYW5jaWxsYXJ5IHNlcnZpY2VzIG1heSBpbmNsdWRlIFJlZ3VsYXRpb24gU2VydmljZSwgRW5lcmd5IEltYmFsYW59e1xydGxjaFxhZjNcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDQxXGxhbmdmZW5wMTA0MVxjczEwIGNlIFNlcnZpY2UsIFNwaW5uaW5nIFJlc2VydmVzLCBhbmQgU3VwcGxlbWVudGFsIFJlc2VydmVzLiAgU2FsZXMgd2lsbCBub3QgaW5jbHVkZSB0aGUgZm9sbG93aW5nOiAgKDEpIHNhbGVzIHRvIGFuIFJUTyBvciBhbiBJU08sIH17XHJ0bGNoXGFmM1xhbGFuZzEwMjVcYWZzMjRcbHRyY2hcaVxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMCBpLmUufXtccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMCAsIHdoZXJlIHRoYXQgZW50aXR5IGhhcyBubyBhYmlsaXR5IHRvIHNlbGYtc3VwcGx5IGFuY2lsbGFyeSBzZXJ2aWNlcyBidXQgaW5zdGVhZCBkZXBlbmRzIG9uIHRoaXJkIHBhcnRpZXM7ICgyKSBzYWxlcyB0byBhIHR9e1xydGxjaFxhZjNcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDQxXGxhbmdmZW5wMTA0MVxjczEwIHJhZGl0aW9uYWwsIGZyYW5jaGlzZWQgcHVibGljIHV0aWxpdHkgYWZmaWxpYXRlZCB3aXRoIHRoZSB0aGlyZC1wYXJ0eSBzdXBwbGllciwgb3Igc2FsZXMgd2hlcmUgdGhlIHVuZGVybHlpbmcgdHJhbnNtaXNzaW9uIHNlcnZpY2UgaXMgb24gdGhlIHN5c3RlbSBvZiBpcyB0aGUgcHVibGljIHV0aWxpdHkgYWZmaWxpYXRlZCB3aXRoIHRoZSB0aGlyZC1wYXJ0eSBzdXBwbGllcnM7IGFuZCAoMykgc2FsZXMgdG8gYSBwdWJsaWMgdXRpbGl0eSB0aGF0IH17XHJ0bGNoXGFmM1xhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwNDFcbGFuZ2ZlbnAxMDQxXGNzMTAgaX17XHJ0bGNoXGFmM1xhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwNDFcbGFuZ2ZlbnAxMDQxXGNzMTAgcyBwdXJjaGFzaW5nIGFuY2lsbGFyeSBzZXJ2aWNlcyB0byBzYXRpc2Z5IHRoZSBwdXJjaGFzZXJ9e1xydGxjaFxhZjNcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDQxXGxhbmdmZW5wMTA0MVxjczEwIFx1ODIxNyB9e1xydGxjaFxhZjNcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDQxXGxhbmdmZW5wMTA0MVxjczEwIHMgb2JsaWdhdGlvbiB1bmRlciBpdHMgb3BlbiBhY2Nlc3MgdHJhbnNtaXNzaW9uIHRhcmlmZiB0byBvZmZlciBhbmNpbGxhcnkgc2VydmljZXMgdG8gaXRzIG93biB0cmFuc21pc3Npb24gY3VzdG9tZXJzLn17XHJ0bGNoXGFmM1xhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwNDFcbGFuZ2ZlbnAxMDQxXGNzMTBccGFyfVxwYXJkXHBsYWluXGl0YXAwXHMwXGFzcGFscGhhXGFzcG51bVxsdHJwYXJcbGk3MjBcbGluNzIwXHJpMFxyaW4wXHFsXGZhYXV0b1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMze1xydGxjaFxhZjNcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDQxXGxhbmdmZW5wMTA0MVxjczEwXHBhcn1ccGFyZFxwbGFpblxpdGFwMFxzMFxzYTI0MFxhc3BhbHBoYVxhc3BudW1cbHRycGFyXGxpMFxsaW4wXHJpMFxyaW4wXHFsXGZhYXV0b1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMze1xydGxjaFxhZjNcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGJcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwNDFcbGFuZ2ZlbnAxMDQxXGNzMTAgNi5cdGFiIENvbXBsaWFuY2Ugd2l0aCBDb21taXNzaW9uIFJlZ3VsYXRpb25zfXtccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxiXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDQxXGxhbmdmZW5wMTA0MVxjczEwXHBhcn1ccGFyZFxwbGFpblxpdGFwMFxzMFxzYTI0MFxhc3BhbHBoYVxhc3BudW1cbHRycGFyXGxpNzQxXGxpbjc0MVxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMCBUUFcgUGV0ZXJzYnVyZyBzaGFsbCBjb21wbHkgd2l0aCB0aGUgcH17XHJ0bGNoXGFmM1xhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwNDFcbGFuZ2ZlbnAxMDQxXGNzMTAgcm92aXNpb25zIG9mIDE4IEMuRi5SLiBQYXJ0IDM1LCBzdWJwYXJ0IEgsIGFzIGFwcGxpY2FibGUsIHdpdGggYW55IGNvbmRpdGlvbnMgdGhlIENvbW1pc3Npb24gaW1wb3NlcyBpbiBpdHMgb3JkZXIgY29uY2VybmluZyB9e1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMzXGNzMTAgVFBXIFBldGVyc2J1cmd9e1xydGxjaFxhZjNcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDQxXGxhbmdmZW5wMTA0MVxjczEwIFx1ODIxNyB9e1xydGxjaFxhZjNcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDQxXGxhbmdmZW5wMTA0MVxjczEwIHMgbWFya2V0LWJhc2VkIHJhdGUgYXV0aG9yaXR5LCBpbmNsdWRpbmcgb3JkZXJzIGluIHdoaWNoIHRoZSBDb21taXNzaW9uIGF1dGhvcml6ZXMgVFBXIFBldGVyc2J1cmcgdG8gZW5nYWdlIGluIGFmZmlsfXtccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMCBpYXRlIHNhbGVzIHVuZGVyIHRoaXMgUmF0ZSBTY2hlZHVsZSBvciBvdGhlcndpc2UgcmVzdHJpY3RzIG9yIGxpbWl0cyB0aGUgVFBXIFBldGVyc2J1cmd9e1xydGxjaFxhZjNcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDQxXGxhbmdmZW5wMTA0MVxjczEwIFx1ODIxNyB9e1xydGxjaFxhZjNcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDQxXGxhbmdmZW5wMTA0MVxjczEwIHMgbWFya2V0LWJhc2VkIHJhdGUgYXV0aG9yaXR5LiAgRmFpbHVyZSB0byBjb21wbHkgd2l0aCB0aGUgYXBwbGljYWJsZSBwcm92aXNpb25zIG9mIDE4IEMuRi5SLiBQYXJ0IDM1LCBTdWJwYXJ0IEgsIGFuZCB3aXRoIGFueSBvcmRlcnMgb2YgdGhlIENvbW1pc3Npb24gY29uY2VybmluZyBUUFcgfXtccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMCBQfXtccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMCBldGVyc2J1cmd9e1xydGxjaFxhZjNcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDQxXGxhbmdmZW5wMTA0MVxjczEwIFx1ODIxNyB9e1xydGxjaFxhZjNcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDQxXGxhbmdmZW5wMTA0MVxjczEwIHMgbWFya2V0LWJhc2VkIHJhdGUgYXV0aG9yaXR5LCB3aWxsIGNvbnN0aXR1dGUgYSB2aW9sYXRpb24gb2YgdGhpcyBSYXRlIFNjaGVkdWxlLn17XHJ0bGNoXGFmM1xhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwNDFcbGFuZ2ZlbnAxMDQxXGNzMTBccGFyfVxwYXJkXHBsYWluXGl0YXAwXHMwXHNhMjQwXGFzcGFscGhhXGFzcG51bVxsdHJwYXJcbGkwXGxpbjBccmkwXHJpbjBccWxcZmFhdXRvXHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzN7XHJ0bGNoXGFmM1xhbGFuZzEwMjVcYWZzMjRcbHRyY2hcYlxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMCA3Llx0YWIgTGltaXRhdGlvbnMgYW5kIEV4ZW1wdGlvbnMgUmVnYXJkaW5nIE1hcmtldC1CYXNlZCBSYXRlIEF1dGhvcml0eX17XHJ0bGNoXGFmM1xhbGFuZzEwMjVcYWZzMjRcbHRyY2hcYlxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMFxwYXJ9XHBhcmRccGxhaW5caXRhcDBcczBcc2EyNDBcYXNwYWxwaGFcYXNwbnVtXGx0cnBhclxsaTc0MVxsaW43NDFccmkwXHJpbjBccWxcZmFhdXRvXHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzN7XHJ0bGNoXGFmM1xhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwNDFcbGFuZ2ZlbnAxMDQxXGNzMTAgVFBXIFBldGVyc2J1cmcgZG9lcyBub3QgaGF2ZSBhbnkgbGltaXRhdGlvbnMgb24gaXRzIG1hcmtldC1iYXNlZCByYXRlIGF1dGhvcml0eSwgZXhjZXB0IGFzIG1heSBvfXtccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMCB0aGVyd2lzZSBiZSBwcm92aWRlZCBpbiB0aGlzIFJhdGUgU2NoZWR1bGUuICBUUFcgUGV0ZXJzYnVyZyBoYXMgb2J0YWluZWQgd2FpdmVycyBmcm9tIFN1YnBhcnRzIEIgYW5kIEMgb2YgUGFydCAzNSwgcmVnYXJkaW5nIHRoZSBmaWxpbmcgb2YgdGFyaWZmcywgZXhjZXB0IHNlY3Rpb25zIDM1LjEyKGEpLCAzNS4xMyhiKSwgMzUuMTUsIGFuZCAzNS4xNjsgUGFydCA0MSwgcmVnYXJkaW5nIGFjY291bnRzLCByZWNvcmRzLCBhbmQgbWVtb3JhbmRhOyB9e1xydGxjaFxhZjNcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDQxXGxhbmdmZW5wMTA0MVxjczEwIFB9e1xydGxjaFxhZjNcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDQxXGxhbmdmZW5wMTA0MVxjczEwIGFydCAxMDEsIHJlZ2FyZGluZyB0aGUgdW5pZm9ybSBzeXN0ZW0gb2YgYWNjb3VudHM7IGFuZCBQYXJ0IDE0MSwgcmVnYXJkaW5nIHN0YXRlbWVudHMgYW5kIHJlcG9ydHMsIHdpdGggdGhlIGV4Y2VwdGlvbiBvZiBTZWN0aW9ucyAxNDEuMTQgYW5kIDE0MS4xNS4gIFRQVyBQZXRlcnNidXJnIGFsc28gaGFzIGJsYW5rZXQgYXBwcm92YWwgdW5kZXIgUGFydCAzNCBvZiB0aGUgQ29tbWlzc2lvbn17XHJ0bGNoXGFmM1xhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwNDFcbGFuZ2ZlbnAxMDQxXGNzMTAgXHU4MjE3IH17XHJ0bGNoXGFmM1xhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwNDFcbGFuZ2ZlbnAxMDQxXGNzMTAgcyByZWd1bGF0aW9ucyBvZiBmdXR1cmUgaXNzdWFuY2V9e1xydGxjaFxhZjNcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDQxXGxhbmdmZW5wMTA0MVxjczEwIHN9e1xydGxjaFxhZjNcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDQxXGxhbmdmZW5wMTA0MVxjczEwICByZWdhcmRpbmcgc2VjdXJpdGllcyBhbmQgYXNzdW1wdGlvbnMgb2YgbGlhYmlsaXRpZXMsIHN1YmplY3QgdG8gb2JqZWN0aW9uIGJ5IGFuIGludGVyZXN0ZWQgcGFydHkuICBUaGVzZSB3YWl2ZXJzIGFuZCBibGFua2V0IGFwcHJvdmFscyBhcmUgY29uc2lzdGVudCB3aXRoIHRoZSB3YWl2ZXJzIGFuZCBhcHByb3ZhbHMgcHJldmlvdXNseSBncmFudGVkIHRvIFRQVyBQZXRlcnNidXJnLiAgfXtccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxpXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDQxXGxhbmdmZW5wMTA0MVxjczEwIFNlZSBUUFcgUGV0ZXJzYnVyZywgTExDfXtccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMCAsIERvY2tldCBOby59e1xydGxjaFxhZjNcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDQxXGxhbmdmZW5wMTA0MVxjczEwICBFUjExLV9fXy0wMDAufXtccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMFxwYXJ9XHBhcmRccGxhaW5caXRhcDBcczBcZmktNzQxXHNhMjQwXGFzcGFscGhhXGFzcG51bVxsdHJwYXJcbGk3NDFcbGluNzQxXHJpMFxyaW4wXHFsXGZhYXV0b1xydGxjaFxhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwMzNcbGFuZ2ZlbnAxMDMze1xydGxjaFxhZjNcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGJcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwNDFcbGFuZ2ZlbnAxMDQxXGNzMTAgOC5cdGFiIFNlbGxlciBDYXRlZ29yeX17XHJ0bGNoXGFmM1xhbGFuZzEwMjVcYWZzMjRcbHRyY2hcYlxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMFxwYXJ9XHBhcmRccGxhaW5caXRhcDBcczBcc2EyNDBcYXNwYWxwaGFcYXNwbnVtXGx0cnBhclxsaTc0MVxsaW43NDFccmkwXHJpbjBccWxcZmFhdXRvXHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzN7XHJ0bGNoXGFmM1xhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwNDFcbGFuZ2ZlbnAxMDQxXGNzMTAgVFBXIFBldGVyc2J1cmcgaXMgYSBDYXRlZ29yeSAxIHNlbGxlciwgYXMgZGVmaW5lZCBpbiAxOCBDLkYuUi4gXCdhN317XHJ0bGNoXGFmM1xhbGFuZzEwMjVcYWZzMjRcbHRyY2hcZnMyNFxmMFxsYW5nMTAzM1xsYW5nbnAxMDMzXGxhbmdmZTEwNDFcbGFuZ2ZlbnAxMDQxXGNzMTAgIDM1LjM2KGEpLCBpbiBhbGwgcmVnaW9ucy59e1xydGxjaFxhZjNcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDQxXGxhbmdmZW5wMTA0MVxjczEwXHBhcn1ccGFyZFxwbGFpblxpdGFwMFxzMFxmaS03NDFcc2EyNDBcYXNwYWxwaGFcYXNwbnVtXGx0cnBhclxsaTc0MVxsaW43NDFccmkwXHJpbjBccWxcZmFhdXRvXHJ0bGNoXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTAzM1xsYW5nZmVucDEwMzN7XHJ0bGNoXGFmM1xhbGFuZzEwMjVcYWZzMjRcbHRyY2hcYlxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMCA5Llx0YWIgRWZmZWN0aXZlIERhdGV9e1xydGxjaFxhZjNcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDQxXGxhbmdmZW5wMTA0MVxjczEwXHBhcn1ccGFyZFxwbGFpblxpdGFwMFxzMFxzYTI0MFxhc3BhbHBoYVxhc3BudW1cbHRycGFyXGxpNzQxXGxpbjc0MVxyaTBccmluMFxxbFxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tccnRsY2hcYWYzXGFsYW5nMTAyNVxhZnMyNFxsdHJjaFxmczI0XGYwXGxhbmcxMDMzXGxhbmducDEwMzNcbGFuZ2ZlMTA0MVxsYW5nZmVucDEwNDFcY3MxMCBUaGlzIFJhdGUgU2NoZWR1bGUgaXMgZWZmZWN0aXZlIG9uIHRoZSBkYXRlIHNwZWNpZmllZCBieSB0aGUgQ29tbWlzc2lvbi59e1xydGxjaFxhZjNcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDQxXGxhbmdmZW5wMTA0MVxjczEwXHBhcn1ccGFyZFxwbGFpblxpdGFwMFxzMTVcc2IyNDBcYXNwYWxwaGFcYXNwbnVtXGx0cnBhclxsaTBcbGluMFxyaTBccmluMFxxalxmYWF1dG9ccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM3tccnRsY2hcYWxhbmcxMDI1XGFmczI0XGx0cmNoXGZzMjRcZjBcbGFuZzEwMzNcbGFuZ25wMTAzM1xsYW5nZmUxMDMzXGxhbmdmZW5wMTAzM1xjczEwXHBhcn17XCpcbGF0ZW50c3R5bGVzXGxzZHN0aW1heDE1Nlxsc2Rsb2NrZWRkZWYwXGxzZHNlbWloaWRkZW5kZWYxXGxzZHVuaGlkZXVzZWRkZWYxXGxzZHFmb3JtYXRkZWYwXGxzZHByaW9yaXR5ZGVmOTl7XGxzZGxvY2tlZGV4Y2VwdH19fQ==</record_binary_data>
      <record_plain_text>TPW Petersburg, LLC
Rate Schedule FERC No. 1


Availability

TPW Petersburg LLC (???TPW Petersburg???) makes electric energy, capacity and ancillary services available under this Rate Schedule to any purchaser for resale.

Applicability

This Rate Schedule is applicable to all sales of energy and capacity by TPW Petersburg not otherwise subject to a particular rate schedule of TPW Petersburg.

Rates

All sales shall be made at rates established by agreement between the purchaser and TPW Petersburg.

Other Terms and Conditions

All other terms and conditions shall be established by agreement between the purchaser and TPW Petersburg.

Ancillary Services

TPW Petersburg may offer for sale those ancillary services in those markets specified and authorized by the Commission from time to time in orders extending such authority to all sellers authorized to sell electric energy and capacity at market-based rates, including:

PJM:  TPW Petersburg offers regulation and frequency response service, energy imbalance service and operating reserve service (which includes spinning, 10-minute reserves, and 30-minute reserves) for sale into the market administrated by PJM Interconnection, L.L.C. (PJM) and, where the PJM Open Access Transmission Tariff permits, the self-supply of these services, to any purchase for a bilateral sale that is used to satisfy the ancillary services requirements of the PJM Office of Interconnection;

New York:  TPW Petersburg offers regulation and frequency response service, and operating reserve service (which includes 10-minute non-synchronous, 30-minute operating reserves, 10-minute spinning reserves, and 10-minute non-spinning reserves) for sale to any purchaser in the market administrated by the New York Independent System Operator; 


New England:  TPW Petersburg offers regulation and frequency response service (automatic generation control), operating reserve service (which includes 10-minute spinning reserves, 10-minute non-spinning reserves, and 30-minute operating reserves) for sale to any purchaser within the markets administered by ISO New England, Inc.;

California:  TPW Petersburg offers regulation service, spinning reserve service, and non-spinning reserve service to the California Independent System Operator (CAISO) and to others that are self-supplying ancillary services to the CAISO;

Midwest ISO:  TPW Petersburg offers regulation service and operating reserve service (which include 10-minute spinning reserve and 10-minute supplemental reserve) for sale to the Midwest Independent Transmission System Operator, Inc. (Midwest ISO) and to others that are self-supplying ancillary services to the Midwest ISO.

Third-Party Provider:  Third-party ancillary services may include Regulation Service, Energy Imbalance Service, Spinning Reserves, and Supplemental Reserves.  Sales will not include the following:  (1) sales to an RTO or an ISO, i.e., where that entity has no ability to self-supply ancillary services but instead depends on third parties; (2) sales to a traditional, franchised public utility affiliated with the third-party supplier, or sales where the underlying transmission service is on the system of is the public utility affiliated with the third-party suppliers; and (3) sales to a public utility that is purchasing ancillary services to satisfy the purchaser???s obligation under its open access transmission tariff to offer ancillary services to its own transmission customers.

6.	Compliance with Commission Regulations
TPW Petersburg shall comply with the provisions of 18 C.F.R. Part 35, subpart H, as applicable, with any conditions the Commission imposes in its order concerning TPW Petersburg???s market-based rate authority, including orders in which the Commission authorizes TPW Petersburg to engage in affiliate sales under this Rate Schedule or otherwise restricts or limits the TPW Petersburg???s market-based rate authority.  Failure to comply with the applicable provisions of 18 C.F.R. Part 35, Subpart H, and with any orders of the Commission concerning TPW Petersburg???s market-based rate authority, will constitute a violation of this Rate Schedule.
7.	Limitations and Exemptions Regarding Market-Based Rate Authority
TPW Petersburg does not have any limitations on its market-based rate authority, except as may otherwise be provided in this Rate Schedule.  TPW Petersburg has obtained waivers from Subparts B and C of Part 35, regarding the filing of tariffs, except sections 35.12(a), 35.13(b), 35.15, and 35.16; Part 41, regarding accounts, records, and memoranda; Part 101, regarding the uniform system of accounts; and Part 141, regarding statements and reports, with the exception of Sections 141.14 and 141.15.  TPW Petersburg also has blanket approval under Part 34 of the Commission???s regulations of future issuances regarding securities and assumptions of liabilities, subject to objection by an interested party.  These waivers and blanket approvals are consistent with the waivers and approvals previously granted to TPW Petersburg.  See TPW Petersburg, LLC, Docket No. ER11-___-000.
8.	Seller Category
TPW Petersburg is a Category 1 seller, as defined in 18 C.F.R. ?? 35.36(a), in all regions.
9.	Effective Date
This Rate Schedule is effective on the date specified by the Commission.

 	-3-</record_plain_text>
      <record_change_type>NEW</record_change_type>
      <filing_id>20</filing_id>
      <filing_title>TPW Petersburg, LLC Rate Schedule FERC No. 1</filing_title>
      <filing_type>400</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2011-09-30</current_effective_date>
      <ferc_order_date>2011-09-28</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
  </ferc_filing_data>
</Document>