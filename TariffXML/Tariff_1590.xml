<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Document xmlns="http://ferc.gov/etariffExport.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ferc_filing_data>
    <schema_version>2</schema_version>
    <company_id>C001615</company_id>
    <lead_applicant_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
    <tariff_id>12</tariff_id>
    <tariff_title>Katy Operating Statement</tariff_title>
    <tariff_export_date>2025-09-16T19:02Z</tariff_export_date>
    <export_schema_version>2</export_schema_version>
    <record_data>
      <record_id>21</record_id>
      <option_code>A</option_code>
      <record_title>Statement of Operating Conditions</record_title>
      <record_content_desc>Katy Storage SOC</record_content_desc>
      <record_version_num>7.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>500</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2020-05-04</proposed_effective_date>
      <priority_order>510</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data>e1xydGYxXGFkZWZsYW5nMTAyNVxhbnNpXGFuc2ljcGcxMjUyXHVjMVxhZGVmZjBcZGVmZjBcc3RzaGZkYmNoMzE1MDZcc3RzaGZsb2NoMVxzdHNoZmhpY2gxXHN0c2hmYmkwXGRlZmxhbmcxMDMzXGRlZmxhbmdmZTEwMzNcdGhlbWVsYW5nMTAzM1x0aGVtZWxhbmdmZTBcdGhlbWVsYW5nY3Mwe1xmb250dGJse1xmMFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwMjA2MDMwNTA0MDUwMjAzMDR9VGltZXMgTmV3IFJvbWFuO317XGYxXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDYwNDAyMDIwMjAyMDIwNH1BcmlhbDt9DQp7XGYyXGZiaWRpIFxmbW9kZXJuXGZjaGFyc2V0MFxmcHJxMXtcKlxwYW5vc2UgMDIwNzAzMDkwMjAyMDUwMjA0MDR9Q291cmllciBOZXc7fXtcZjNcZmJpZGkgXGZyb21hblxmY2hhcnNldDJcZnBycTJ7XCpccGFub3NlIDA1MDUwMTAyMDEwNzA2MDIwNTA3fVN5bWJvbDt9e1xmMTBcZmJpZGkgXGZuaWxcZmNoYXJzZXQyXGZwcnEye1wqXHBhbm9zZSAwNTAwMDAwMDAwMDAwMDAwMDAwMH1XaW5nZGluZ3M7fQ0Ke1xmMzRcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDQwNTAzMDUwNDA2MDMwMjA0fUNhbWJyaWEgTWF0aDt9e1xmNDNcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNjA0MDMwNTA0MDQwMjA0fVRhaG9tYTt9e1xmNDRcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMGIwNjA2MDIwMjAyMDMwMjA0fUFyaWFsIE5hcnJvdzt9DQp7XGZsb21ham9yXGYzMTUwMFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwMjA2MDMwNTA0MDUwMjAzMDR9VGltZXMgTmV3IFJvbWFuO317XGZkYm1ham9yXGYzMTUwMVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwMjA2MDMwNTA0MDUwMjAzMDR9VGltZXMgTmV3IFJvbWFuO30NCntcZmhpbWFqb3JcZjMxNTAyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDYwNDAyMDIwMjAyMDIwNH1BcmlhbDt9e1xmYmltYWpvclxmMzE1MDNcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDIwNjAzMDUwNDA1MDIwMzA0fVRpbWVzIE5ldyBSb21hbjt9DQp7XGZsb21pbm9yXGYzMTUwNFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwMjA2MDMwNTA0MDUwMjAzMDR9VGltZXMgTmV3IFJvbWFuO317XGZkYm1pbm9yXGYzMTUwNVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MFxmcHJxMntcKlxwYW5vc2UgMDIwMjA2MDMwNTA0MDUwMjAzMDR9VGltZXMgTmV3IFJvbWFuO30NCntcZmhpbWlub3JcZjMxNTA2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQwXGZwcnEye1wqXHBhbm9zZSAwMjBiMDYwNDAyMDIwMjAyMDIwNH1BcmlhbDt9e1xmYmltaW5vclxmMzE1MDdcZmJpZGkgXGZyb21hblxmY2hhcnNldDBcZnBycTJ7XCpccGFub3NlIDAyMDIwNjAzMDUwNDA1MDIwMzA0fVRpbWVzIE5ldyBSb21hbjt9e1xmNDVcZmJpZGkgXGZyb21hblxmY2hhcnNldDIzOFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQ0U7fQ0Ke1xmNDZcZmJpZGkgXGZyb21hblxmY2hhcnNldDIwNFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQ3lyO317XGY0OFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYxXGZwcnEyIFRpbWVzIE5ldyBSb21hbiBHcmVlazt9e1xmNDlcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MlxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gVHVyO317XGY1MFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc3XGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoSGVicmV3KTt9DQp7XGY1MVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc4XGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoQXJhYmljKTt9e1xmNTJcZmJpZGkgXGZyb21hblxmY2hhcnNldDE4NlxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQmFsdGljO317XGY1M1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYzXGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoVmlldG5hbWVzZSk7fXtcZjU1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgQXJpYWwgQ0U7fQ0Ke1xmNTZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBBcmlhbCBDeXI7fXtcZjU4XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgQXJpYWwgR3JlZWs7fXtcZjU5XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgQXJpYWwgVHVyO317XGY2MFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTc3XGZwcnEyIEFyaWFsIChIZWJyZXcpO30NCntcZjYxXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNzhcZnBycTIgQXJpYWwgKEFyYWJpYyk7fXtcZjYyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgQXJpYWwgQmFsdGljO317XGY2M1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYzXGZwcnEyIEFyaWFsIChWaWV0bmFtZXNlKTt9e1xmNjVcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQyMzhcZnBycTEgQ291cmllciBOZXcgQ0U7fQ0Ke1xmNjZcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQyMDRcZnBycTEgQ291cmllciBOZXcgQ3lyO317XGY2OFxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDE2MVxmcHJxMSBDb3VyaWVyIE5ldyBHcmVlazt9e1xmNjlcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxNjJcZnBycTEgQ291cmllciBOZXcgVHVyO317XGY3MFxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDE3N1xmcHJxMSBDb3VyaWVyIE5ldyAoSGVicmV3KTt9DQp7XGY3MVxmYmlkaSBcZm1vZGVyblxmY2hhcnNldDE3OFxmcHJxMSBDb3VyaWVyIE5ldyAoQXJhYmljKTt9e1xmNzJcZmJpZGkgXGZtb2Rlcm5cZmNoYXJzZXQxODZcZnBycTEgQ291cmllciBOZXcgQmFsdGljO317XGY3M1xmYmlkaSBcZm1vZGVyblxmY2hhcnNldDE2M1xmcHJxMSBDb3VyaWVyIE5ldyAoVmlldG5hbWVzZSk7fXtcZjQ3NVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjM4XGZwcnEyIFRhaG9tYSBDRTt9DQp7XGY0NzZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBUYWhvbWEgQ3lyO317XGY0NzhcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBUYWhvbWEgR3JlZWs7fXtcZjQ3OVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIFRhaG9tYSBUdXI7fXtcZjQ4MFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTc3XGZwcnEyIFRhaG9tYSAoSGVicmV3KTt9DQp7XGY0ODFcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE3OFxmcHJxMiBUYWhvbWEgKEFyYWJpYyk7fXtcZjQ4MlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTg2XGZwcnEyIFRhaG9tYSBCYWx0aWM7fXtcZjQ4M1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYzXGZwcnEyIFRhaG9tYSAoVmlldG5hbWVzZSk7fXtcZjQ4NFxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MjIyXGZwcnEyIFRhaG9tYSAoVGhhaSk7fQ0Ke1xmNDg1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgQXJpYWwgTmFycm93IENFO317XGY0ODZcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBBcmlhbCBOYXJyb3cgQ3lyO317XGY0ODhcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDE2MVxmcHJxMiBBcmlhbCBOYXJyb3cgR3JlZWs7fXtcZjQ4OVxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYyXGZwcnEyIEFyaWFsIE5hcnJvdyBUdXI7fQ0Ke1xmNDkyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgQXJpYWwgTmFycm93IEJhbHRpYzt9e1xmbG9tYWpvclxmMzE1MDhcZmJpZGkgXGZyb21hblxmY2hhcnNldDIzOFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQ0U7fXtcZmxvbWFqb3JcZjMxNTA5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgVGltZXMgTmV3IFJvbWFuIEN5cjt9DQp7XGZsb21ham9yXGYzMTUxMVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYxXGZwcnEyIFRpbWVzIE5ldyBSb21hbiBHcmVlazt9e1xmbG9tYWpvclxmMzE1MTJcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MlxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gVHVyO317XGZsb21ham9yXGYzMTUxM1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc3XGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoSGVicmV3KTt9DQp7XGZsb21ham9yXGYzMTUxNFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc4XGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoQXJhYmljKTt9e1xmbG9tYWpvclxmMzE1MTVcZmJpZGkgXGZyb21hblxmY2hhcnNldDE4NlxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQmFsdGljO317XGZsb21ham9yXGYzMTUxNlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYzXGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoVmlldG5hbWVzZSk7fQ0Ke1xmZGJtYWpvclxmMzE1MThcZmJpZGkgXGZyb21hblxmY2hhcnNldDIzOFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQ0U7fXtcZmRibWFqb3JcZjMxNTE5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgVGltZXMgTmV3IFJvbWFuIEN5cjt9e1xmZGJtYWpvclxmMzE1MjFcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MVxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gR3JlZWs7fQ0Ke1xmZGJtYWpvclxmMzE1MjJcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MlxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gVHVyO317XGZkYm1ham9yXGYzMTUyM1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc3XGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoSGVicmV3KTt9e1xmZGJtYWpvclxmMzE1MjRcZmJpZGkgXGZyb21hblxmY2hhcnNldDE3OFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gKEFyYWJpYyk7fQ0Ke1xmZGJtYWpvclxmMzE1MjVcZmJpZGkgXGZyb21hblxmY2hhcnNldDE4NlxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQmFsdGljO317XGZkYm1ham9yXGYzMTUyNlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYzXGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoVmlldG5hbWVzZSk7fXtcZmhpbWFqb3JcZjMxNTI4XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQyMzhcZnBycTIgQXJpYWwgQ0U7fQ0Ke1xmaGltYWpvclxmMzE1MjlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBBcmlhbCBDeXI7fXtcZmhpbWFqb3JcZjMxNTMxXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgQXJpYWwgR3JlZWs7fXtcZmhpbWFqb3JcZjMxNTMyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgQXJpYWwgVHVyO317XGZoaW1ham9yXGYzMTUzM1xmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTc3XGZwcnEyIEFyaWFsIChIZWJyZXcpO30NCntcZmhpbWFqb3JcZjMxNTM0XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNzhcZnBycTIgQXJpYWwgKEFyYWJpYyk7fXtcZmhpbWFqb3JcZjMxNTM1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgQXJpYWwgQmFsdGljO317XGZoaW1ham9yXGYzMTUzNlxmYmlkaSBcZnN3aXNzXGZjaGFyc2V0MTYzXGZwcnEyIEFyaWFsIChWaWV0bmFtZXNlKTt9DQp7XGZiaW1ham9yXGYzMTUzOFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjM4XGZwcnEyIFRpbWVzIE5ldyBSb21hbiBDRTt9e1xmYmltYWpvclxmMzE1MzlcZmJpZGkgXGZyb21hblxmY2hhcnNldDIwNFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQ3lyO317XGZiaW1ham9yXGYzMTU0MVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYxXGZwcnEyIFRpbWVzIE5ldyBSb21hbiBHcmVlazt9DQp7XGZiaW1ham9yXGYzMTU0MlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYyXGZwcnEyIFRpbWVzIE5ldyBSb21hbiBUdXI7fXtcZmJpbWFqb3JcZjMxNTQzXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNzdcZnBycTIgVGltZXMgTmV3IFJvbWFuIChIZWJyZXcpO317XGZiaW1ham9yXGYzMTU0NFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc4XGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoQXJhYmljKTt9DQp7XGZiaW1ham9yXGYzMTU0NVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTg2XGZwcnEyIFRpbWVzIE5ldyBSb21hbiBCYWx0aWM7fXtcZmJpbWFqb3JcZjMxNTQ2XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjNcZnBycTIgVGltZXMgTmV3IFJvbWFuIChWaWV0bmFtZXNlKTt9e1xmbG9taW5vclxmMzE1NDhcZmJpZGkgXGZyb21hblxmY2hhcnNldDIzOFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQ0U7fQ0Ke1xmbG9taW5vclxmMzE1NDlcZmJpZGkgXGZyb21hblxmY2hhcnNldDIwNFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQ3lyO317XGZsb21pbm9yXGYzMTU1MVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYxXGZwcnEyIFRpbWVzIE5ldyBSb21hbiBHcmVlazt9e1xmbG9taW5vclxmMzE1NTJcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MlxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gVHVyO30NCntcZmxvbWlub3JcZjMxNTUzXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNzdcZnBycTIgVGltZXMgTmV3IFJvbWFuIChIZWJyZXcpO317XGZsb21pbm9yXGYzMTU1NFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc4XGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoQXJhYmljKTt9e1xmbG9taW5vclxmMzE1NTVcZmJpZGkgXGZyb21hblxmY2hhcnNldDE4NlxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQmFsdGljO30NCntcZmxvbWlub3JcZjMxNTU2XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjNcZnBycTIgVGltZXMgTmV3IFJvbWFuIChWaWV0bmFtZXNlKTt9e1xmZGJtaW5vclxmMzE1NThcZmJpZGkgXGZyb21hblxmY2hhcnNldDIzOFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQ0U7fXtcZmRibWlub3JcZjMxNTU5XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQyMDRcZnBycTIgVGltZXMgTmV3IFJvbWFuIEN5cjt9DQp7XGZkYm1pbm9yXGYzMTU2MVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYxXGZwcnEyIFRpbWVzIE5ldyBSb21hbiBHcmVlazt9e1xmZGJtaW5vclxmMzE1NjJcZmJpZGkgXGZyb21hblxmY2hhcnNldDE2MlxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gVHVyO317XGZkYm1pbm9yXGYzMTU2M1xmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc3XGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoSGVicmV3KTt9DQp7XGZkYm1pbm9yXGYzMTU2NFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTc4XGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoQXJhYmljKTt9e1xmZGJtaW5vclxmMzE1NjVcZmJpZGkgXGZyb21hblxmY2hhcnNldDE4NlxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQmFsdGljO317XGZkYm1pbm9yXGYzMTU2NlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYzXGZwcnEyIFRpbWVzIE5ldyBSb21hbiAoVmlldG5hbWVzZSk7fQ0Ke1xmaGltaW5vclxmMzE1NjhcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIzOFxmcHJxMiBBcmlhbCBDRTt9e1xmaGltaW5vclxmMzE1NjlcZmJpZGkgXGZzd2lzc1xmY2hhcnNldDIwNFxmcHJxMiBBcmlhbCBDeXI7fXtcZmhpbWlub3JcZjMxNTcxXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjFcZnBycTIgQXJpYWwgR3JlZWs7fXtcZmhpbWlub3JcZjMxNTcyXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjJcZnBycTIgQXJpYWwgVHVyO30NCntcZmhpbWlub3JcZjMxNTczXGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNzdcZnBycTIgQXJpYWwgKEhlYnJldyk7fXtcZmhpbWlub3JcZjMxNTc0XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNzhcZnBycTIgQXJpYWwgKEFyYWJpYyk7fXtcZmhpbWlub3JcZjMxNTc1XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxODZcZnBycTIgQXJpYWwgQmFsdGljO30NCntcZmhpbWlub3JcZjMxNTc2XGZiaWRpIFxmc3dpc3NcZmNoYXJzZXQxNjNcZnBycTIgQXJpYWwgKFZpZXRuYW1lc2UpO317XGZiaW1pbm9yXGYzMTU3OFxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MjM4XGZwcnEyIFRpbWVzIE5ldyBSb21hbiBDRTt9e1xmYmltaW5vclxmMzE1NzlcZmJpZGkgXGZyb21hblxmY2hhcnNldDIwNFxmcHJxMiBUaW1lcyBOZXcgUm9tYW4gQ3lyO30NCntcZmJpbWlub3JcZjMxNTgxXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjFcZnBycTIgVGltZXMgTmV3IFJvbWFuIEdyZWVrO317XGZiaW1pbm9yXGYzMTU4MlxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTYyXGZwcnEyIFRpbWVzIE5ldyBSb21hbiBUdXI7fXtcZmJpbWlub3JcZjMxNTgzXGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNzdcZnBycTIgVGltZXMgTmV3IFJvbWFuIChIZWJyZXcpO30NCntcZmJpbWlub3JcZjMxNTg0XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNzhcZnBycTIgVGltZXMgTmV3IFJvbWFuIChBcmFiaWMpO317XGZiaW1pbm9yXGYzMTU4NVxmYmlkaSBcZnJvbWFuXGZjaGFyc2V0MTg2XGZwcnEyIFRpbWVzIE5ldyBSb21hbiBCYWx0aWM7fXtcZmJpbWlub3JcZjMxNTg2XGZiaWRpIFxmcm9tYW5cZmNoYXJzZXQxNjNcZnBycTIgVGltZXMgTmV3IFJvbWFuIChWaWV0bmFtZXNlKTt9fQ0Ke1xjb2xvcnRibDtccmVkMFxncmVlbjBcYmx1ZTA7XHJlZDBcZ3JlZW4wXGJsdWUyNTU7XHJlZDBcZ3JlZW4yNTVcYmx1ZTI1NTtccmVkMFxncmVlbjI1NVxibHVlMDtccmVkMjU1XGdyZWVuMFxibHVlMjU1O1xyZWQyNTVcZ3JlZW4wXGJsdWUwO1xyZWQyNTVcZ3JlZW4yNTVcYmx1ZTA7XHJlZDI1NVxncmVlbjI1NVxibHVlMjU1O1xyZWQwXGdyZWVuMFxibHVlMTI4O1xyZWQwXGdyZWVuMTI4XGJsdWUxMjg7XHJlZDBcZ3JlZW4xMjhcYmx1ZTA7DQpccmVkMTI4XGdyZWVuMFxibHVlMTI4O1xyZWQxMjhcZ3JlZW4wXGJsdWUwO1xyZWQxMjhcZ3JlZW4xMjhcYmx1ZTA7XHJlZDEyOFxncmVlbjEyOFxibHVlMTI4O1xyZWQxOTJcZ3JlZW4xOTJcYmx1ZTE5MjtccmVkMFxncmVlbjBcYmx1ZTA7XHJlZDBcZ3JlZW4wXGJsdWUwO1xjYWNjZW50b25lXGN0aW50MjU1XGNzaGFkZTE5MVxyZWQzOFxncmVlbjQ2XGJsdWU1MzsNClxjYWNjZW50b25lXGN0aW50MjU1XGNzaGFkZTEyN1xyZWQyNVxncmVlbjMwXGJsdWUzNTtcY3RleHRvbmVcY3RpbnQyNTVcY3NoYWRlMjU1XHJlZDBcZ3JlZW4wXGJsdWUwO1xjYWNjZW50b25lXGN0aW50MjU1XGNzaGFkZTI1NVxyZWQ1MVxncmVlbjYyXGJsdWU3MjtcY2JhY2tncm91bmRvbmVcY3RpbnQyNTVcY3NoYWRlMjU1XHJlZDI1NVxncmVlbjI1NVxibHVlMjU1Ow0KXGNoeXBlcmxpbmtcY3RpbnQyNTVcY3NoYWRlMjU1XHJlZDVcZ3JlZW45OVxibHVlMTkzO1xyZWQxMTZcZ3JlZW4xNDhcYmx1ZTE2Njt9e1wqXGRlZmNocCBcZjEgfXtcKlxkZWZwYXAgXHFsIFxsaTBccmkwXHNhMjQwXHNsMjg4XHNsbXVsdDFcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIH1cbm9xZnByb21vdGUge1xzdHlsZXNoZWV0ew0KXHFsIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzbmV4dDAgXHNwcmlvcml0eTQ3IFxzdHlyc2lkMTU4NzE1NDEgTm9ybWFsO317DQpcczFccWMgXGxpMFxyaTBcc2EyNDBca2VlcFxrZWVwblx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYzMTUwM1xhZnMzMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcYlxjYXBzXGZzMjRcY2YxOVxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjMxNTAyXGhpY2hcYWYzMTUwMlxkYmNoXGFmMzE1MDFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQxNSBcc2xpbmsxNiBcc3Fmb3JtYXQgXHN0eXJzaWQxMjgwNTU3NCBoZWFkaW5nIDE7fXsNClxzMlxxbCBcbGkwXHJpMFxzYTI0MFxrZWVwXGtlZXBuXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjMxNTAzXGFmczI2XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxiXGZzMjRcY2YxOVxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjMxNTAyXGhpY2hcYWYzMTUwMlxkYmNoXGFmMzE1MDFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQxNSBcc2xpbmsxNyBcc3Fmb3JtYXQgXHN0eXJzaWQxMjgwNTU3NCBoZWFkaW5nIDI7fXsNClxzM1xxbCBcbGkwXHJpMFxzYTI0MFxrZWVwXGtlZXBuXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDJcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjMxNTAzXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxpXGZzMjRcY2YyMFxsYW5nMTAzM1xsYW5nZmUxMDMzXGxvY2hcZjMxNTAyXGhpY2hcYWYzMTUwMlxkYmNoXGFmMzE1MDFcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQxNSBcc2xpbmsxOCBcc3Fmb3JtYXQgXHN0eXJzaWQxMjgwNTU3NCBoZWFkaW5nIDM7fXtcKlxjczEwIFxhZGRpdGl2ZSBcc3NlbWloaWRkZW4gXHN1bmhpZGV1c2VkIFxzcHJpb3JpdHkxIERlZmF1bHQgUGFyYWdyYXBoIEZvbnQ7fXtcKg0KXHRzMTFcdHNyb3dkXHRyZnRzV2lkdGhCM1x0cnBhZGRsMTA4XHRycGFkZHIxMDhcdHJwYWRkZmwzXHRycGFkZGZ0M1x0cnBhZGRmYjNcdHJwYWRkZnIzXHRibGluZDBcdGJsaW5kdHlwZTNcdHN2ZXJ0YWx0XHRzYnJkcnRcdHNicmRybFx0c2JyZHJiXHRzYnJkcnJcdHNicmRyZGdsXHRzYnJkcmRnclx0c2JyZHJoXHRzYnJkcnYgXHFsIFxsaTBccmkwXHNhMjQwXHNsMjg4XHNsbXVsdDENClx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGYxXGZzMjBcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc25leHQxMSBcc3NlbWloaWRkZW4gXHN1bmhpZGV1c2VkIE5vcm1hbCBUYWJsZTt9ew0KXHMxNVxxbCBcZmk3MjBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MTUgXHNxZm9ybWF0IFxzcHJpb3JpdHkxIFxzdHlyc2lkMTI0NzkxOTYgTy1Cb2R5IFRleHQgLjUiLDFIYWxmLHMyO317XCpcY3MxNiBcYWRkaXRpdmUgXHJ0bGNoXGZjczEgXGFmMzE1MDNcYWZzMzIgXGx0cmNoXGZjczAgXGJcY2Fwc1xmczMyXGNmMTlcbG9jaFxmMzE1MDJcaGljaFxhZjMxNTAyXGRiY2hcYWYzMTUwMSBcc2Jhc2Vkb24xMCBcc2xpbmsxIFxzbG9ja2VkIFxzdHlyc2lkMTI4MDU1NzQgDQpIZWFkaW5nIDEgQ2hhcjt9e1wqXGNzMTcgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhZjMxNTAzXGFmczI2IFxsdHJjaFxmY3MwIFxiXGZzMjZcY2YxOVxsb2NoXGYzMTUwMlxoaWNoXGFmMzE1MDJcZGJjaFxhZjMxNTAxIFxzYmFzZWRvbjEwIFxzbGluazIgXHNsb2NrZWQgXHN0eXJzaWQxMjgwNTU3NCBIZWFkaW5nIDIgQ2hhcjt9e1wqXGNzMTggXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhZjMxNTAzXGFmczI0IFxsdHJjaFxmY3MwIA0KXGlcZnMyNFxjZjIwXGxvY2hcZjMxNTAyXGhpY2hcYWYzMTUwMlxkYmNoXGFmMzE1MDEgXHNiYXNlZG9uMTAgXHNsaW5rMyBcc2xvY2tlZCBcc3R5cnNpZDEyODA1NTc0IEhlYWRpbmcgMyBDaGFyO317XHMxOVxxbCBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MTkgXHNsaW5rMjAgXHNxZm9ybWF0IFxzcHJpb3JpdHkwIFxzdHlyc2lkMTI0NzkxOTYgTy1Cb2R5IFRleHQgKCksMUJvZHksczE7fXtcKlxjczIwIFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMCANClxzYmFzZWRvbjEwIFxzbGluazE5IFxzbG9ja2VkIFxzcHJpb3JpdHkwIFxzdHlyc2lkMTI0NzkxOTYgTy1Cb2R5IFRleHQgKCkgQ2hhciwxQm9keSBDaGFyLHMxIENoYXI7fXtcczIxXHFsIFxsaTBccmkwXHNhMjQwXHNsNTc2XHNsbXVsdDFcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDIxIFxzcWZvcm1hdCBcc3ByaW9yaXR5NCBcc3R5cnNpZDExNDkxMjE3IE8tQm9keSBUZXh0IChEUyksMkJvZHksczI4O317XHMyMlxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgDQpcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MjIgXHNxZm9ybWF0IFxzcHJpb3JpdHk3IFxzdHlyc2lkODYwOTQ0NCBPLUJvZHkgVGV4dCAoSiksM0JvZHksczEzO317XHMyM1xxbCBcZmk3MjBcbGkwXHJpMFxzYTI0MFxzbDU3NlxzbG11bHQxDQpcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQyMyBcc3Fmb3JtYXQgXHNwcmlvcml0eTUgXHN0eXJzaWQxMjQ3OTE5NiANCk8tQm9keSBUZXh0IC41XCc5NCAoRFMpLDJIYWxmLHMyOTt9e1xzMjRccWogXGZpNzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24wIFxzbmV4dDI0IFxzcWZvcm1hdCBcc3ByaW9yaXR5NyBcc3R5cnNpZDg2MDk0NDQgTy1Cb2R5IFRleHQgLjVcJzk0IChKKSwzSGFsZixzMTQ7fXtcczI1XHFsIFxmaTE0NDBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MjUgXHNxZm9ybWF0IFxzcHJpb3JpdHkyIFxzdHlyc2lkMTI0NzkxOTYgTy1Cb2R5IFRleHQgMSIsMUZ1bGwsczM7fXtcczI2XHFsIFxmaTE0NDBcbGkwXHJpMFxzYTI0MFxzbDU3NlxzbG11bHQxDQpcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQyNiBcc3Fmb3JtYXQgXHNwcmlvcml0eTYgXHN0eXJzaWQxMjQ3OTE5NiANCk8tQm9keSBUZXh0IDFcJzk0IChEUyksMkZ1bGwsczMwO317XHMyN1xxaiBcZmkxNDQwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24wIFxzbmV4dDI3IFxzcWZvcm1hdCBcc3ByaW9yaXR5NyBcc3R5cnNpZDg2MDk0NDQgTy1Cb2R5IFRleHQgMVwnOTQgKEopLDNGdWxsLHMxNTt9e1xzMjhccWwgXGZpLTM2MFxsaTM2MFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDM2MFx3cmFwZGVmYXVsdHtcKlxwbiBccG5sdmxib2R5XGlsdmwwXGxzMTlccG5ybm90MFxwbmRlYyB9DQpcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczE5XGFkanVzdHJpZ2h0XHJpbjBcbGluMzYwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQyOCBcc3Fmb3JtYXQgXHNwcmlvcml0eTMyIFxzdHlyc2lkMTI0NzkxOTYgTy1CdWxsZXQgKCksMUJ1bGxldCxzNDt9ew0KXHMyOVxxbCBcZmktMzYwXGxpMTA4MFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDEwODBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczIwXGFkanVzdHJpZ2h0XHJpbjBcbGluMTA4MFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMCBcc25leHQyOSBcc3Fmb3JtYXQgXHNwcmlvcml0eTMyIFxzdHlyc2lkMTI0NzkxOTYgTy1CdWxsZXQgLjUiLDJCdWxsZXQsczI2O317XHMzMFxxbCBcZmktMzYwXGxpMTgwMFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDE4MDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczIxXGFkanVzdHJpZ2h0XHJpbjBcbGluMTgwMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSANClxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQzMCBcc3ByaW9yaXR5MzIgXHN0eXJzaWQxMjQ3OTE5NiBPLUJ1bGxldCAxIiwzQnVsbGV0LHMyNzt9e1xzMzFccWogXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMCANClxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQzMSBcc3Fmb3JtYXQgXHNwcmlvcml0eTEwIFxzdHlyc2lkODU5NzQzNSBPLUluZGVudCAuNSIsSGFsZiBJbmRlbnQsczU7fXsNClxzMzJccWwgXGxpMTQ0MFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQzMiBcc3ByaW9yaXR5MTEgXHN0eXJzaWQxMjQ3OTE5NiANCk8tSW5kZW50IDEiLEZ1bGwgSW5kZW50LHM2O317XHMzM1xxbCBcbGkxNDQwXHJpMTQ0MFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4xNDQwXGxpbjE0NDBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MzMgXHNwcmlvcml0eTMzIFxzdHlyc2lkMTI0NzkxOTYgTy1RdW90ZSAoKSwxUXVvdGUsczc7fXtcczM0XHFsIFxsaTE0NDBccmkxNDQwXHNhMjQwXHNsNTc2XHNsbXVsdDFcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMTQ0MFxsaW4xNDQwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDM0IFxzcHJpb3JpdHkzMyBcc3R5cnNpZDEyNDc5MTk2IE8tUXVvdGUgKERTKSwyUXVvdGUsczE3O317XHMzNVxxaiBcbGkxNDQwXHJpMTQ0MFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4xNDQwXGxpbjE0NDBcaXRhcDAgXHJ0bGNoXGZjczEgDQpcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MzUgXHNwcmlvcml0eTMzIFxzdHlyc2lkODYwOTQ0NCBPLVF1b3RlIChKKSwzUXVvdGUsczE2O317XHMzNlxxbCBcZmktNTQ3XGxpNTQ3XHJpMFxzYjcyMFxzYTI0MFxrZWVwXHdpZGN0bHBhcg0KXHRxclx0eDI4ODBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjU0N1xpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0MzYgXHNwcmlvcml0eTQ1IFxzdHlyc2lkMTI0NzkxOTYgDQpPLVNpZ25hdHVyZSAoTEEpLFNpZyAoTEEpLHMxODt9e1xzMzdccWwgXGxpNDMyMFxyaTBcc2EyNDBca2VlcFxrZWVwblx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjQzMjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MCBcc3ByaW9yaXR5NDUgXHN0eXJzaWQxMjQ3OTE5NiBPLVNpZ25hdHVyZSxTaWdzLHMxMjt9e1xzMzhccWMgXGxpMFxyaTBcc2EyNDBca2VlcFxrZWVwblx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcYlxmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQxOSBcc3Fmb3JtYXQgXHNwcmlvcml0eTM3IFxzdHlyc2lkMTI0NzkxOTYgTy1UaXRsZSAzLDNUaXRsZSxzMjI7fXtcczM5XHFjIFxsaTBccmkwXHNhMjQwXGtlZXBca2VlcG5cd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIA0KXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcY2Fwc1xmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQxOSBcc3Fmb3JtYXQgXHNwcmlvcml0eTM1IFxzdHlyc2lkMTI0NzkxOTYgTy1USVRMRSwxVGl0bGUsczEwO317DQpcczQwXHFsIFxsaTBccmkwXHNhMjQwXGtlZXBca2VlcG5cd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MTkgXHNxZm9ybWF0IFxzcHJpb3JpdHk0MCBcc3R5cnNpZDEyNDc5MTk2IE8tVGl0bGUgNiw2VGl0bGUsczExO317XHM0MVxxbCBcbGkwXHJpMFxzYTI0MFxrZWVwXGtlZXBuXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxiXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDE5IFxzcWZvcm1hdCBcc3ByaW9yaXR5NDEgXHN0eXJzaWQxMjQ3OTE5NiBPLVRpdGxlIDcsN1RpdGxlLHMxOTt9e1xzNDJccWMgXGxpMFxyaTBcc2EyNDBca2VlcFxrZWVwblx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgDQpccnRsY2hcZmNzMSBcYWJcYWlcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxjYXBzXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDE5IFxzcWZvcm1hdCBcc3ByaW9yaXR5MzkgXHN0eXJzaWQxMjQ3OTE5NiBPLVRpdGxlIDUsNVRpdGxlLHM4O317DQpcczQzXHFjIFxsaTBccmkwXHNhMjQwXGtlZXBca2VlcG5cd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjAgXHNuZXh0MTkgXHNxZm9ybWF0IFxzcHJpb3JpdHkzNiBcc3R5cnNpZDEyNDc5MTk2IE8tVGl0bGUgMiwyVGl0bGUsczIwO317XHM0NFxxbCBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0NDQgXHNsaW5rNDUgXHN1bmhpZGV1c2VkIFxzcHJpb3JpdHk5NCBcc3R5cnNpZDI1MDA2MzcgZm9vdG5vdGUgdGV4dDt9e1wqXGNzNDUgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZzMTYgXHNiYXNlZG9uMTAgXHNsaW5rNDQgXHNsb2NrZWQgXHNwcmlvcml0eTk0IFxzdHlyc2lkNTI2Njc4MyANCkZvb3Rub3RlIFRleHQgQ2hhcjt9e1wqXGNzNDYgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDMzXGxhbmdmZTBcc3VwZXJcbGFuZ25wMTAzMyBcc2Jhc2Vkb24xMCBcc3NlbWloaWRkZW4gXHN1bmhpZGV1c2VkIGZvb3Rub3RlIHJlZmVyZW5jZTt9ew0KXHM0N1xxbCBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmNDNcYWZzMTZcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmNDNcZnMxNlxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMCBcc25leHQ0NyBcc2xpbms0OCBcc3NlbWloaWRkZW4gXHN1bmhpZGV1c2VkIEJhbGxvb24gVGV4dDt9e1wqXGNzNDggXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhZjQzXGFmczE2IFxsdHJjaFxmY3MwIFxmNDNcZnMxNlxsYW5nMTAzM1xsYW5nZmUwXGxhbmducDEwMzMgXHNiYXNlZG9uMTAgXHNsaW5rNDcgXHNsb2NrZWQgXHNzZW1paGlkZGVuIEJhbGxvb24gVGV4dCBDaGFyO317DQpcczQ5XHFqIFxmaS03MjBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzNFxhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMCBcc25leHQ0OSBcc3ByaW9yaXR5MzQgXHN0eXJzaWQxMjQ3OTE5NiBQYXJ0aWVzO317XHM1MFxxaiBcZmktNzIwXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczVcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzYmFzZWRvbjAgXHNuZXh0NTAgXHNwcmlvcml0eTM0IFxzdHlyc2lkMTI0NzkxOTYgQmFja2dyb3VuZDt9e1xzNTFccXIgXGxpMFxyaTBcc2wtMzAwXHNsbXVsdDBcd2lkY3RscGFyXHRxclx0eDcyMDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgDQpcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZjQ0XGZzMThcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc25leHQ1MSBcc3VuaGlkZXVzZWQgXHNwcmlvcml0eTQ2IFxzdHlyc2lkNTI2Njc4MyBPIFBEIEZvb3Rlcjt9e1xzNTJccWwgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIA0KXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDE5IFxzcWZvcm1hdCBcc3ByaW9yaXR5MzggXHN0eXJzaWQxMjQ3OTE5NiBPLVRpdGxlIDQsNFRpdGxlLHM5O317DQpcczUzXHFsIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcaVxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24wIFxzbmV4dDE5IFxzcWZvcm1hdCBcc3ByaW9yaXR5NDIgXHN0eXJzaWQxMjQ3OTE5NiBPLVRpdGxlIDgsOFRpdGxlLHMyMzt9e1xzNTRccWwgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHRxY1x0eDQ2ODBcdHFyXHR4OTM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQ1NCBcc2xpbms1NSBcc3VuaGlkZXVzZWQgaGVhZGVyO317XCpcY3M1NSBcYWRkaXRpdmUgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcc2Jhc2Vkb24xMCBcc2xpbms1NCBcc2xvY2tlZCBIZWFkZXIgQ2hhcjt9e1xzNTZccWwgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQ1NiBcc2xpbms1NyBcc3VuaGlkZXVzZWQgZm9vdGVyO317XCpcY3M1NyANClxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxzYmFzZWRvbjEwIFxzbGluazU2IFxzbG9ja2VkIEZvb3RlciBDaGFyO317XHM1OFxxYyBcbGkwXHJpMFxzYTI0MFxrZWVwXGtlZXBuXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQxOSBcc3Fmb3JtYXQgXHNwcmlvcml0eTM1IFxzdHlyc2lkMTI0NzkxOTYgTy1DZW50ZXIsQ2VudGVyLHMyMTt9e1xzNTlccWwgXGxpMFxyaTBcc2IxNjBcc2ExNjBcc2wtMjQwXHNsbXVsdDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIA0KXHJ0bGNoXGZjczEgXGFmMzE1MDJcYWZzMThcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGYzMTUwMlxmczE4XGNmMjFcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc25leHQ1OSBcc3NlbWloaWRkZW4gXHNwcmlvcml0eTQ3IFxzdHlyc2lkMTU4ODMzNzAgRlMgQWNjb2xhZGUgVGV4dDt9e1xzNjBccWwgXGxpMFxyaTBcc2EyNDBcc2wtMjMwXHNsbXVsdDANClx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMzE1MDJcYWZzMTdcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmMzE1MDJcZnMxN1xjZjIxXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNuZXh0NjAgXHNzZW1paGlkZGVuIFxzcHJpb3JpdHk0NyBcc3R5cnNpZDE1ODgzMzcwIA0KRlMgQm9keSBUZXh0O317XHM2MVxxbCBcZmktMzYwXGxpNzIwXHJpLTI3MFxzYTEyMFxzbC0yMzBcc2xtdWx0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczZcYWRqdXN0cmlnaHRccmluLTI3MFxsaW43MjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMzE1MDJcYWZzMTdcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGYzMTUwMlxmczE3XGNmMjFcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc25leHQ2MSBcc3NlbWloaWRkZW4gXHNwcmlvcml0eTQ3IFxzdHlyc2lkODU4NzAwIEZTIEJvZHkgVGV4dCBCdWxsZXQ7fXtcczYyXHFsIFxsaTBccmkwXHNiMTIwXHNsLTI0MFxzbG11bHQwDQpcd2lkY3RscGFyXHB2cGFyYVxwaHBnXHBvc3g2MzM2XHBvc3kwXGR4ZnJ0ZXh0MzYwXGRmcm10eHR4MzYwXGRmcm10eHR5MFx3cmFwYXJvdW5kXGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXGFic25vb3ZybHAxIFxydGxjaFxmY3MxIFxhZjMxNTAyXGFmczE3XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmMzE1MDJcZnMxN1xjZjIxXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNuZXh0NjIgXHNzZW1paGlkZGVuIFxzcHJpb3JpdHk0NyBcc3R5cnNpZDE1ODgzMzcwIEZTIEJvZHkgVGV4dCBEaWZmZXJlbnRpYXRvcnM7fXtcczYzXHFsIFxsaTBccmkwXHNiMTIwXHNhMTIwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCANClxydGxjaFxmY3MxIFxhZjMxNTAyXGFmczE4XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxmMzE1MDJcZnMxOFxjZjIxXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQ2MyBcc3NlbWloaWRkZW4gXHNwcmlvcml0eTQ3IFxzdHlyc2lkMTU4ODMzNzAgRlMgQm9sZCBIZWFkaW5nO317XHM2NFxxbCBcbGkwXHJpMFxzYTEyMFxzbDI4OFxzbG11bHQxDQpcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjMxNTAyXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxmMzE1MDJcZnMyMFxjZjIyXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNuZXh0NjQgXHNzZW1paGlkZGVuIFxzcHJpb3JpdHk0NyBcc3R5cnNpZDE1ODgzMzcwIA0KRlMgQm9sZCBIZWFkaW5nIChDb2xvcik7fXtcczY1XHFsIFxmaS0zNjBcbGk3MjBccmkwXHNhNjBcc2wyODhcc2xtdWx0MVx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczE4XGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjFcYWZzMTZcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGYzMTUwMlxmczE2XGNmMjFcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc25leHQ2NSBcc3NlbWloaWRkZW4gXHNwcmlvcml0eTQ3IFxzdHlyc2lkMTU4ODMzNzAgRlMgQ2FsbCBPdXQgQm94IEJ1bGxldDt9e1xzNjZccWwgXGxpMFxyaTBcc2I2MFxzYTYwXHNsMjg4XHNsbXVsdDENClx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMzE1MDJcYWZzMTdcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGYzMTUwMlxmczE3XGNmMjNcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc25leHQ2NiBcc3NlbWloaWRkZW4gXHNwcmlvcml0eTQ3IFxzdHlyc2lkMTU4ODMzNzAgDQpGUyBDYWxsIE91dCBCb3ggSGVhZGluZzt9e1xzNjdccWwgXGxpMFxyaTUyMlxzYjEyMFxzYTEyMFxzbDI4OFxzbG11bHQxXHdpZGN0bHBhclxwdnBhcmFccGhwZ1xwb3N4NjMzNlxwb3N5MFxkeGZydGV4dDM2MFxkZnJtdHh0eDM2MFxkZnJtdHh0eTBcd3JhcGFyb3VuZFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjUyMlxsaW4wXGl0YXAwXGFic25vb3ZybHAxIFxydGxjaFxmY3MxIFxhZjMxNTAyXGFmczIyXGFsYW5nMTAyNSANClxsdHJjaFxmY3MwIFxiXGYzMTUwMlxmczIyXGNmMjFcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc25leHQ2NyBcc3NlbWloaWRkZW4gXHNwcmlvcml0eTQ3IFxzdHlyc2lkMTU4ODMzNzAgRlMgRGlmZmVyZW50aWF0b3JzIEhlYWRpbmc7fXtcczY4XHFsIFxsaTBccmkwXHNiMTIwXHNsMjg4XHNsbXVsdDENClx3aWRjdGxwYXJccHZwYXJhXHBocGdccG9zeDYzMzZccG9zeTBcZHhmcnRleHQzNjBcZGZybXR4dHgzNjBcZGZybXR4dHkwXHdyYXBhcm91bmRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBcYWJzbm9vdnJscDEgXHJ0bGNoXGZjczEgXGFmMzE1MDJcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGJcZjMxNTAyXGZzMjBcY2YyMlxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIFxzbmV4dDY4IFxzc2VtaWhpZGRlbiBcc3ByaW9yaXR5NDcgXHN0eXJzaWQxNTg4MzM3MCBGUyBEaWZmZXJlbnRpYXRvcnMgU3RhdGVtZW50O317XHM2OVxxbCBcbGkwXHJpMFxzbDI4OFxzbG11bHQxDQpcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjMxNTAyXGFmczI4XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxmMzE1MDJcZnMyOFxjZjIzXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNuZXh0NjkgXHNzZW1paGlkZGVuIFxzcHJpb3JpdHk0NyBcc3R5cnNpZDE1ODgzMzcwIA0KRlMgSGVhZGVyIFRpdGxlO317XHM3MFxxbCBcbGkwXHJpMzYwXHNsLTM2MFxzbG11bHQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjM2MFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjMxNTAyXGFmczI0XGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZjMxNTAyXGZzMjRcY2YyMlxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNuZXh0NzAgXHNzZW1paGlkZGVuIFxzcHJpb3JpdHk0NyBcc3R5cnNpZDE1ODgzMzcwIEZTIEludHJvIFBhcmFncmFwaCBUZXh0O317XHM3MVxxbCBcbGkwXHJpMFxzYTE4MFxzbDI4OFxzbG11bHQxXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYzMTUwMlxhZnMyMlxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcYlxmMzE1MDJcZnMyMlxjZjIyXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNuZXh0NzEgXHNzZW1paGlkZGVuIFxzcHJpb3JpdHk0NyBcc3R5cnNpZDE1ODgzMzcwIEZTIE92ZXJ2aWV3IEhlYWRpbmc7fXtcczcyXHFsIFxsaTBccmkwXHNhMjQwXGtlZXBca2VlcG5cd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIA0KXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGJcY2Fwc1xmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQxOSBcc3Fmb3JtYXQgXHNwcmlvcml0eTQzIFxzdHlyc2lkMTI0NzkxOTYgTy1UaXRsZSA5LDlUaXRsZSxzMzE7fXtcKlxjczczIFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMCBcbHRyY2hcZmNzMCANClxmMzE1MDZcZnMyMCBcc2Jhc2Vkb24xMCBcc3NlbWloaWRkZW4gXHN0eXJzaWQxNTg2MDY4NSBDb21tZW50IFRleHQgQ2hhcjt9e1wqXGNzNzQgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhZjBcYWZzMTYgXGx0cmNoXGZjczAgXGZzMTYgXHNiYXNlZG9uMTAgXHNzZW1paGlkZGVuIFxzdW5oaWRldXNlZCBcc3R5cnNpZDE1ODYwNjg1IGFubm90YXRpb24gcmVmZXJlbmNlO317DQpcczc1XHFsIFxsaTBccmkwXHNhMjQwXG5vd2lkY3RscGFyXHdyYXBkZWZhdWx0XGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjAgXGx0cmNoXGZjczAgXGYzMTUwNlxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24wIFxzbmV4dDc1IFxzbGluazc2IFxzc2VtaWhpZGRlbiBcc3VuaGlkZXVzZWQgXHN0eXJzaWQxNTg2MDY4NSBhbm5vdGF0aW9uIHRleHQ7fXtcKlxjczc2IFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYzMTUwNyBcbHRyY2hcZmNzMCBcZjMxNTA2IFxzYmFzZWRvbjEwIFxzbGluazc1IFxzbG9ja2VkIFxzc2VtaWhpZGRlbiBcc3R5cnNpZDE1ODYwNjg1IENvbW1lbnQgVGV4dCBDaGFyMTt9ew0KXHM3N1xxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb24wIFxzbmV4dDc3IFxzbGluazc4IFxzcHJpb3JpdHkwIFxzdHlyc2lkMTQ0NDI2NzkgDQpTdGFuZGFyZCBDb250IDE7fXtcKlxjczc4IFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmMFxmczI0IFxzYmFzZWRvbjEwIFxzbGluazc3IFxzbG9ja2VkIFxzcHJpb3JpdHkwIFxzdHlyc2lkMTQ0NDI2NzkgU3RhbmRhcmQgQ29udCAxIENoYXI7fXtcczc5XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCANClxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uNzcgXHNuZXh0NzkgXHNsaW5rODAgXHNwcmlvcml0eTAgXHN0eXJzaWQxNDQ0MjY3OSBTdGFuZGFyZCBDb250IDI7fXtcKlxjczgwIFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmMFxmczI0IA0KXHNiYXNlZG9uMTAgXHNsaW5rNzkgXHNsb2NrZWQgXHNwcmlvcml0eTAgXHN0eXJzaWQxNDQ0MjY3OSBTdGFuZGFyZCBDb250IDIgQ2hhcjt9e1xzODFccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2Jhc2Vkb243OSBcc25leHQ4MSBcc2xpbms4MiBcc3ByaW9yaXR5MCBcc3R5cnNpZDE0NDQyNjc5IFN0YW5kYXJkIENvbnQgMzt9e1wqXGNzODIgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGYwXGZzMjQgXHNiYXNlZG9uMTAgXHNsaW5rODEgXHNsb2NrZWQgXHNwcmlvcml0eTAgXHN0eXJzaWQxNDQ0MjY3OSANClN0YW5kYXJkIENvbnQgMyBDaGFyO317XHM4M1xxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjgxIFxzbmV4dDgzIFxzbGluazg0IFxzcHJpb3JpdHkwIFxzdHlyc2lkMTQ0NDI2NzkgU3RhbmRhcmQgQ29udCA0O317XCpcY3M4NCBcYWRkaXRpdmUgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZjBcZnMyNCBcc2Jhc2Vkb24xMCBcc2xpbms4MyBcc2xvY2tlZCBcc3ByaW9yaXR5MCBcc3R5cnNpZDE0NDQyNjc5IFN0YW5kYXJkIENvbnQgNCBDaGFyO317DQpcczg1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uODMgXHNuZXh0ODUgXHNsaW5rODYgXHNwcmlvcml0eTAgXHN0eXJzaWQxNDQ0MjY3OSBTdGFuZGFyZCBDb250IDU7fXtcKlxjczg2IFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmMFxmczI0IFxzYmFzZWRvbjEwIFxzbGluazg1IFxzbG9ja2VkIFxzcHJpb3JpdHkwIFxzdHlyc2lkMTQ0NDI2NzkgU3RhbmRhcmQgQ29udCA1IENoYXI7fXsNClxzODdccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb244NSBcc25leHQ4NyBcc2xpbms4OCBcc3ByaW9yaXR5MCBcc3R5cnNpZDE0NDQyNjc5IFN0YW5kYXJkIENvbnQgNjt9e1wqXGNzODggXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGYwXGZzMjQgXHNiYXNlZG9uMTAgXHNsaW5rODcgXHNsb2NrZWQgXHNwcmlvcml0eTAgXHN0eXJzaWQxNDQ0MjY3OSBTdGFuZGFyZCBDb250IDYgQ2hhcjt9ew0KXHM4OVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjg3IFxzbmV4dDg5IFxzbGluazkwIFxzcHJpb3JpdHkwIFxzdHlyc2lkMTQ0NDI2NzkgU3RhbmRhcmQgQ29udCA3O317XCpcY3M5MCBcYWRkaXRpdmUgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZjBcZnMyNCBcc2Jhc2Vkb24xMCBcc2xpbms4OSBcc2xvY2tlZCBcc3ByaW9yaXR5MCBcc3R5cnNpZDE0NDQyNjc5IFN0YW5kYXJkIENvbnQgNyBDaGFyO317DQpcczkxXHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uODkgXHNuZXh0OTEgXHNsaW5rOTIgXHNwcmlvcml0eTAgXHN0eXJzaWQxNDQ0MjY3OSBTdGFuZGFyZCBDb250IDg7fXtcKlxjczkyIFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmMFxmczI0IFxzYmFzZWRvbjEwIFxzbGluazkxIFxzbG9ja2VkIFxzcHJpb3JpdHkwIFxzdHlyc2lkMTQ0NDI2NzkgU3RhbmRhcmQgQ29udCA4IENoYXI7fXsNClxzOTNccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb245MSBcc25leHQ5MyBcc2xpbms5NCBcc3ByaW9yaXR5MCBcc3R5cnNpZDE0NDQyNjc5IFN0YW5kYXJkIENvbnQgOTt9e1wqXGNzOTQgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGYwXGZzMjQgXHNiYXNlZG9uMTAgXHNsaW5rOTMgXHNsb2NrZWQgXHNwcmlvcml0eTAgXHN0eXJzaWQxNDQ0MjY3OSBTdGFuZGFyZCBDb250IDkgQ2hhcjt9e1xzOTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4NzIwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOVxvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMCBcc25leHQwIFxzbGluazk2IFxzcHJpb3JpdHkwIFxzdHlyc2lkMTQ0NDI2NzkgU3RhbmRhcmRfTDE7fXtcKlxjczk2IFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmMFxmczI0IFxzYmFzZWRvbjEwIFxzbGluazk1IFxzbG9ja2VkIFxzcHJpb3JpdHkwIFxzdHlyc2lkMTQ0NDI2NzkgU3RhbmRhcmRfTDEgQ2hhcjt9e1xzOTdccWogXGZpLTcyMFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4NzIwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb245NSBcc25leHQwIFxzbGluazk4IFxzcHJpb3JpdHkwIFxzdHlyc2lkMTQ0NDI2NzkgU3RhbmRhcmRfTDI7fXtcKlxjczk4IFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmMFxmczI0IFxzYmFzZWRvbjEwIFxzbGluazk3IFxzbG9ja2VkIFxzcHJpb3JpdHkwIFxzdHlyc2lkMTQ0NDI2NzkgU3RhbmRhcmRfTDIgQ2hhcjt9e1xzOTlccWogXGZpLTcyMFxsaTE0NDBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczM5XGlsdmwyXG91dGxpbmVsZXZlbDJcYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb245NyBcc25leHQwIFxzbGluazEwMCBcc3ByaW9yaXR5MCBcc3R5cnNpZDE0NDQyNjc5IFN0YW5kYXJkX0wzO317XCpcY3MxMDAgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGYwXGZzMjQgXHNiYXNlZG9uMTAgXHNsaW5rOTkgXHNsb2NrZWQgXHNwcmlvcml0eTAgXHN0eXJzaWQxNDQ0MjY3OSBTdGFuZGFyZF9MMyBDaGFyO317XHMxMDFccWogXGZpLTcyMFxsaTIxNjBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDIxNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczM5XGlsdmwzXG91dGxpbmVsZXZlbDNcYWRqdXN0cmlnaHRccmluMFxsaW4yMTYwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb245OSBcc25leHQwIFxzbGluazEwMiBcc3ByaW9yaXR5MCBcc3R5cnNpZDE0NDQyNjc5IFN0YW5kYXJkX0w0O317XCpcY3MxMDIgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGYwXGZzMjQgXHNiYXNlZG9uMTAgXHNsaW5rMTAxIFxzbG9ja2VkIFxzcHJpb3JpdHkwIFxzdHlyc2lkMTQ0NDI2NzkgU3RhbmRhcmRfTDQgQ2hhcjt9e1xzMTAzXHFqIFxmaS03MjBcbGkyODgwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgyODgwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOVxpbHZsNFxvdXRsaW5lbGV2ZWw0XGFkanVzdHJpZ2h0XHJpbjBcbGluMjg4MFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMTAxIFxzbmV4dDAgXHNsaW5rMTA0IFxzcHJpb3JpdHkwIFxzdHlyc2lkMTQ0NDI2NzkgU3RhbmRhcmRfTDU7fXtcKlxjczEwNCBcYWRkaXRpdmUgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZjBcZnMyNCBcc2Jhc2Vkb24xMCBcc2xpbmsxMDMgXHNsb2NrZWQgXHNwcmlvcml0eTAgXHN0eXJzaWQxNDQ0MjY3OSBTdGFuZGFyZF9MNSBDaGFyO317XHMxMDVccWogXGZpMzYwMFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDQzMjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczM5XGlsdmw1XG91dGxpbmVsZXZlbDVcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24xMDMgXHNuZXh0MCBcc2xpbmsxMDYgXHNwcmlvcml0eTAgXHN0eXJzaWQxNDQ0MjY3OSBTdGFuZGFyZF9MNjt9e1wqXGNzMTA2IFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmMFxmczI0IFxzYmFzZWRvbjEwIFxzbGluazEwNSBcc2xvY2tlZCBcc3ByaW9yaXR5MCBcc3R5cnNpZDE0NDQyNjc5IFN0YW5kYXJkX0w2IENoYXI7fXtcczEwN1xxaiBcZmk0MzIwXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4NTA0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMzlcaWx2bDZcb3V0bGluZWxldmVsNlxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyANClxzYmFzZWRvbjEwNSBcc25leHQwIFxzbGluazEwOCBcc3ByaW9yaXR5MCBcc3R5cnNpZDE0NDQyNjc5IFN0YW5kYXJkX0w3O317XCpcY3MxMDggXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGYwXGZzMjQgXHNiYXNlZG9uMTAgXHNsaW5rMTA3IFxzbG9ja2VkIFxzcHJpb3JpdHkwIFxzdHlyc2lkMTQ0NDI2NzkgU3RhbmRhcmRfTDcgQ2hhcjt9e1xzMTA5XHFqIFxmaTUwNDBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHg1NzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOVxpbHZsN1xvdXRsaW5lbGV2ZWw3XGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0KXHNiYXNlZG9uMTA3IFxzbmV4dDAgXHNsaW5rMTEwIFxzcHJpb3JpdHkwIFxzdHlyc2lkMTQ0NDI2NzkgU3RhbmRhcmRfTDg7fXtcKlxjczExMCBcYWRkaXRpdmUgXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZjBcZnMyNCBcc2Jhc2Vkb24xMCBcc2xpbmsxMDkgXHNsb2NrZWQgXHNwcmlvcml0eTAgXHN0eXJzaWQxNDQ0MjY3OSBTdGFuZGFyZF9MOCBDaGFyO317XHMxMTFccWogXGZpNTc2MFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDY0ODBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczM5XGlsdmw4XG91dGxpbmVsZXZlbDhcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24xMDkgXHNuZXh0MCBcc2xpbmsxMTIgXHNwcmlvcml0eTAgXHN0eXJzaWQxNDQ0MjY3OSBTdGFuZGFyZF9MOTt9e1wqXGNzMTEyIFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmMFxmczI0IFxzYmFzZWRvbjEwIFxzbGluazExMSBcc2xvY2tlZCBcc3ByaW9yaXR5MCBcc3R5cnNpZDE0NDQyNjc5IFN0YW5kYXJkX0w5IENoYXI7fXtcKlx0czExM1x0c3Jvd2RcdHJicmRydFxicmRyc1xicmRydzEwIA0KXHRyYnJkcmxcYnJkcnNcYnJkcncxMCBcdHJicmRyYlxicmRyc1xicmRydzEwIFx0cmJyZHJyXGJyZHJzXGJyZHJ3MTAgXHRyYnJkcmhcYnJkcnNcYnJkcncxMCBcdHJicmRydlxicmRyc1xicmRydzEwIA0KXHRyZnRzV2lkdGhCM1x0cnBhZGRsMTA4XHRycGFkZHIxMDhcdHJwYWRkZmwzXHRycGFkZGZ0M1x0cnBhZGRmYjNcdHJwYWRkZnIzXHRibGluZDBcdGJsaW5kdHlwZTNcdHN2ZXJ0YWx0XHRzYnJkcnRcdHNicmRybFx0c2JyZHJiXHRzYnJkcnJcdHNicmRyZGdsXHRzYnJkcmRnclx0c2JyZHJoXHRzYnJkcnYgDQpccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmMVxmczIwXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMTEgXHNuZXh0MTEzIFxzcHJpb3JpdHk1OSBcc3R5cnNpZDE0NDQyNjc5IFRhYmxlIEdyaWQ7fXsNClxzMTE0XHFsIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxmczIwXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb243NSBcc25leHQ3NSBcc2xpbmsxMTUgXHNzZW1paGlkZGVuIFxzdW5oaWRldXNlZCBcc3R5cnNpZDMyODAzNzUgYW5ub3RhdGlvbiBzdWJqZWN0O317XCpcY3MxMTUgXGFkZGl0aXZlIFxydGxjaFxmY3MxIFxhYlxhZjMxNTA3IFxsdHJjaFxmY3MwIFxiXGYwIFxzYmFzZWRvbjc2IFxzbGluazExNCBcc2xvY2tlZCBcc3NlbWloaWRkZW4gXHN0eXJzaWQzMjgwMzc1IENvbW1lbnQgU3ViamVjdCBDaGFyO317DQpcczExNlxxbCBcZmktNzIwXGxpNzIwXHJpMFxzYTEwMFx3aWRjdGxwYXJcdHFyXHRsZG90XHR4OTM1MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgDQpcc2Jhc2Vkb24wIFxzbmV4dDAgXHNhdXRvdXBkIFxzdW5oaWRldXNlZCBcc3ByaW9yaXR5MzkgXHN0eXJzaWQxNzI4NjEwIHRvYyAxO317XHMxMTdccWwgXGxpMjQwXHJpMFxzYTEwMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjI0MFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgXHNiYXNlZG9uMCBcc25leHQwIFxzYXV0b3VwZCBcc3VuaGlkZXVzZWQgXHNwcmlvcml0eTM5IFxzdHlyc2lkODU5NTYxMSB0b2MgMjt9e1wqXGNzMTE4IFxhZGRpdGl2ZSBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxjZjI0IFxzYmFzZWRvbjEwIFxzdW5oaWRldXNlZCBcc3R5cnNpZDg1OTU2MTEgSHlwZXJsaW5rO319DQp7XCpcbGlzdHRhYmxle1xsaXN0XGxpc3R0ZW1wbGF0ZWlkMTk4ODM4MDE0MlxsaXN0aHlicmlke1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMzI5NDI5MjQ2XCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fVxmM1xjZjI1XGZiaWFzMCBcczYxDQpcZmktMzYwXGxpNzIwXGxpbjcyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NjkxXCcwMW87fXtcbGV2ZWxudW1iZXJzO31cZjJcZmJpYXMwIFxmaS0zNjBcbGkxNDQwXGxpbjE0NDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjMNClxsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NjkzXCcwMVx1LTM5MjkgPzt9e1xsZXZlbG51bWJlcnM7fVxmMTBcZmJpYXMwIFxmaS0zNjBcbGkyMTYwXGxpbjIxNjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wDQpcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4Njg5XCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fVxmM1xmYmlhczAgXGZpLTM2MFxsaTI4ODBcbGluMjg4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDENClxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg2OTFcJzAxbzt9e1xsZXZlbG51bWJlcnM7fVxmMlxmYmlhczAgXGZpLTM2MFxsaTM2MDBcbGluMzYwMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MA0Ke1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg2OTNcJzAxXHUtMzkyOSA/O317XGxldmVsbnVtYmVyczt9XGYxMFxmYmlhczAgXGZpLTM2MFxsaTQzMjBcbGluNDMyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4Njg5DQpcJzAxXHUtMzkxMyA/O317XGxldmVsbnVtYmVyczt9XGYzXGZiaWFzMCBcZmktMzYwXGxpNTA0MFxsaW41MDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg2OTFcJzAxbzt9e1xsZXZlbG51bWJlcnM7fVxmMlxmYmlhczAgDQpcZmktMzYwXGxpNTc2MFxsaW41NzYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg2OTNcJzAxXHUtMzkyOSA/O317XGxldmVsbnVtYmVyczt9XGYxMFxmYmlhczAgXGZpLTM2MFxsaTY0ODBcbGluNjQ4MCB9e1xsaXN0bmFtZSANCkZTIEJvZHkgVGV4dCBCdWxsZXQ7fVxsaXN0aWQzNjg2NTIxNDN9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkLTQ5NjMwNzRcbGlzdHNpbXBsZXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fVxmM1xmYmlhczAgXHMyOFxmaS0zNjBcbGkzNjANClxqY2xpc3R0YWJcdHgzNjBcbGluMzYwIH17XGxpc3RuYW1lIDt9XGxpc3RpZDQ4Nzg2ODMzM317XGxpc3RcbGlzdHRlbXBsYXRlaWQtMTA2MDcwODk2MlxsaXN0aHlicmlke1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkLTIwOTE5ODU1ODgNClwnMDFcdS0zOTEzID87fXtcbGV2ZWxudW1iZXJzO31cZjNcZmJpYXMwIFxzMzBcZmktMzYwXGxpMTgwMFxqY2xpc3R0YWJcdHgxODAwXGxpbjE4MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY5MQ0KXCcwMW87fXtcbGV2ZWxudW1iZXJzO31cZjJcZmJpYXMwIFxmaS0zNjBcbGkxNDQwXGpjbGlzdHRhYlx0eDE0NDBcbGluMTQ0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NjkzDQpcJzAxXHUtMzkyOSA/O317XGxldmVsbnVtYmVyczt9XGYxMFxmYmlhczAgXGZpLTM2MFxsaTIxNjBcamNsaXN0dGFiXHR4MjE2MFxsaW4yMTYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg2ODkNClwnMDFcdS0zOTEzID87fXtcbGV2ZWxudW1iZXJzO31cZjNcZmJpYXMwIFxmaS0zNjBcbGkyODgwXGpjbGlzdHRhYlx0eDI4ODBcbGluMjg4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NjkxDQpcJzAxbzt9e1xsZXZlbG51bWJlcnM7fVxmMlxmYmlhczAgXGZpLTM2MFxsaTM2MDBcamNsaXN0dGFiXHR4MzYwMFxsaW4zNjAwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg2OTMNClwnMDFcdS0zOTI5ID87fXtcbGV2ZWxudW1iZXJzO31cZjEwXGZiaWFzMCBcZmktMzYwXGxpNDMyMFxqY2xpc3R0YWJcdHg0MzIwXGxpbjQzMjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY4OQ0KXCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fVxmM1xmYmlhczAgXGZpLTM2MFxsaTUwNDBcamNsaXN0dGFiXHR4NTA0MFxsaW41MDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg2OTENClwnMDFvO317XGxldmVsbnVtYmVyczt9XGYyXGZiaWFzMCBcZmktMzYwXGxpNTc2MFxqY2xpc3R0YWJcdHg1NzYwXGxpbjU3NjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY5Mw0KXCcwMVx1LTM5MjkgPzt9e1xsZXZlbG51bWJlcnM7fVxmMTBcZmJpYXMwIFxmaS0zNjBcbGk2NDgwXGpjbGlzdHRhYlx0eDY0ODBcbGluNjQ4MCB9e1xsaXN0bmFtZSA7fVxsaXN0aWQ2MjM3ODAyOTR9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkNjQyMDA3NDgwXGxpc3RoeWJyaWR7XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMA0KXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4Njg5XCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fVxmM1xmYmlhczAgXGZpLTM2MFxsaTcyMFxsaW43MjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZDY3Njk4NjkxXCcwMW87fXtcbGV2ZWxudW1iZXJzO31cZjJcZmJpYXMwIFxmaS0zNjBcbGkxNDQwXGxpbjE0NDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY5Mw0KXCcwMVx1LTM5MjkgPzt9e1xsZXZlbG51bWJlcnM7fVxmMTBcZmJpYXMwIFxmaS0zNjBcbGkyMTYwXGxpbjIxNjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY4OVwnMDFcdS0zOTEzID87fXtcbGV2ZWxudW1iZXJzO30NClxmM1xmYmlhczAgXGZpLTM2MFxsaTI4ODBcbGluMjg4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NjkxXCcwMW87fXtcbGV2ZWxudW1iZXJzO31cZjJcZmJpYXMwIFxmaS0zNjBcbGkzNjAwXGxpbjM2MDAgfQ0Ke1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NjkzXCcwMVx1LTM5MjkgPzt9e1xsZXZlbG51bWJlcnM7fVxmMTBcZmJpYXMwIFxmaS0zNjBcbGk0MzIwXGxpbjQzMjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjMNClxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4Njg5XCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fVxmM1xmYmlhczAgXGZpLTM2MFxsaTUwNDBcbGluNTA0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwDQpcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg2OTFcJzAxbzt9e1xsZXZlbG51bWJlcnM7fVxmMlxmYmlhczAgXGZpLTM2MFxsaTU3NjBcbGluNTc2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwDQpcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg2OTNcJzAxXHUtMzkyOSA/O317XGxldmVsbnVtYmVyczt9XGYxMFxmYmlhczAgXGZpLTM2MFxsaTY0ODBcbGluNjQ4MCB9e1xsaXN0bmFtZSA7fVxsaXN0aWQ3ODM2MjMzNzd9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkLTE3ODEyNDA4MTZcbGlzdGh5YnJpZHtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MA0KXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMjAxNDM0MzI1NlwnMDFcdS0zOTEzID87fXtcbGV2ZWxudW1iZXJzO31cZjNcZmJpYXMwIFxmaS0zNjBcbGk3MjBcbGluNzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTANClxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtMzk3NzQ1OTU2XCcwMW87fXtcbGV2ZWxudW1iZXJzO31cZjJcZmJpYXMwIFxmaS0zNjBcbGkxNDQwXGxpbjE0NDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZC0xMDQ1MTIwOTA4XCcwMVx1LTM5MjkgPzt9e1xsZXZlbG51bWJlcnM7fVxmMTBcZmJpYXMwIFxmaS0zNjBcbGkyMTYwXGxpbjIxNjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ1MTQ3NTI0NTQNClwnMDFcdS0zOTEzID87fXtcbGV2ZWxudW1iZXJzO31cZjNcZmJpYXMwIFxmaS0zNjBcbGkyODgwXGxpbjI4ODAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtMTEzOTkyOTYxOFwnMDFvO317XGxldmVsbnVtYmVyczt9DQpcZjJcZmJpYXMwIFxmaS0zNjBcbGkzNjAwXGxpbjM2MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtODQ5ODQ2Mzk2XCcwMVx1LTM5MjkgPzt9e1xsZXZlbG51bWJlcnM7fVxmMTBcZmJpYXMwIA0KXGZpLTM2MFxsaTQzMjBcbGluNDMyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDE1Mzk4NTg3MjBcJzAxXHUtMzkxMyA/O317XGxldmVsbnVtYmVyczt9XGYzXGZiaWFzMCBcZmktMzYwXGxpNTA0MFxsaW41MDQwIH0NCntcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQzMzE0MTAwNTRcJzAxbzt9e1xsZXZlbG51bWJlcnM7fVxmMlxmYmlhczAgXGZpLTM2MFxsaTU3NjBcbGluNTc2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMA0KXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTEwODQ4MDQ2MFwnMDFcdS0zOTI5ID87fXtcbGV2ZWxudW1iZXJzO31cZjEwXGZiaWFzMCBcZmktMzYwXGxpNjQ4MFxsaW42NDgwIH17XGxpc3RuYW1lIDt9XGxpc3RpZDgxNzMwODYxNn17XGxpc3RcbGlzdHRlbXBsYXRlaWQxNDIzODU3MjA2XGxpc3RoeWJyaWQNCntcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC04MzkwNjQ4MzZcJzAxXHUtMzkxMyA/O317XGxldmVsbnVtYmVyczt9XGYzXGZiaWFzMCBcczI5XGZpLTM2MFxsaTEwODBcamNsaXN0dGFiXHR4MTA4MFxsaW4xMDgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzDQpcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NjkxXCcwMW87fXtcbGV2ZWxudW1iZXJzO31cZjJcZmJpYXMwIFxmaS0zNjBcbGkxNDQwXGpjbGlzdHRhYlx0eDE0NDBcbGluMTQ0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjANClxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg2OTNcJzAxXHUtMzkyOSA/O317XGxldmVsbnVtYmVyczt9XGYxMFxmYmlhczAgXGZpLTM2MFxsaTIxNjBcamNsaXN0dGFiXHR4MjE2MFxsaW4yMTYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzANClxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY4OVwnMDFcdS0zOTEzID87fXtcbGV2ZWxudW1iZXJzO31cZjNcZmJpYXMwIFxmaS0zNjBcbGkyODgwXGpjbGlzdHRhYlx0eDI4ODBcbGluMjg4MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyM1xsZXZlbG5mY24yM1xsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDENClxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg2OTFcJzAxbzt9e1xsZXZlbG51bWJlcnM7fVxmMlxmYmlhczAgXGZpLTM2MFxsaTM2MDBcamNsaXN0dGFiXHR4MzYwMFxsaW4zNjAwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTANClxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY5M1wnMDFcdS0zOTI5ID87fXtcbGV2ZWxudW1iZXJzO31cZjEwXGZiaWFzMCBcZmktMzYwXGxpNDMyMFxqY2xpc3R0YWJcdHg0MzIwXGxpbjQzMjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDANCntcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4Njg5XCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fVxmM1xmYmlhczAgXGZpLTM2MFxsaTUwNDBcamNsaXN0dGFiXHR4NTA0MFxsaW41MDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY5MVwnMDFvO317XGxldmVsbnVtYmVyczt9XGYyXGZiaWFzMCBcZmktMzYwXGxpNTc2MFxqY2xpc3R0YWJcdHg1NzYwXGxpbjU3NjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY5Mw0KXCcwMVx1LTM5MjkgPzt9e1xsZXZlbG51bWJlcnM7fVxmMTBcZmJpYXMwIFxmaS0zNjBcbGk2NDgwXGpjbGlzdHRhYlx0eDY0ODBcbGluNjQ4MCB9e1xsaXN0bmFtZSA7fVxsaXN0aWQ4NTM3NjQxODN9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkNDY0OTUxMTc0e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MlxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MA0Ke1xsZXZlbHRleHRcJzA5QXJ0aWNsZSBcJzAwO317XGxldmVsbnVtYmVyc1wnMDk7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGkwXHN0cmlrZTBcb3V0bDBcc2hhZDBcZW1ibzBcaW1wcjBcc2NhcHMwXGNhcHNcdjBcdWxub25lXGNmMFxub3N1cGVyc3ViXGFuaW10ZXh0MFxzdHJpa2VkMCBcZmkwXGxpMFxqY2xpc3R0YWJcdHg3MjBcbGluMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wDQpcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAzXCcwMC5cJzAxO317XGxldmVsbnVtYmVyc1wnMDFcJzAzO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpMFxzdHJpa2UwXG91dGwwXHNoYWQwXGVtYm8wXGltcHIwXGNhcHMwXHYwXHVsbm9uZVxjZjBcbm9zdXBlcnN1YlxhbmltdGV4dDBcc3RyaWtlZDAgXGZpNzIwXGxpMFxqY2xpc3R0YWJcdHgxNDQwXGxpbjAgfQ0Ke1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwNVwnMDAuXCcwMS5cJzAyO317XGxldmVsbnVtYmVyc1wnMDFcJzAzXCcwNTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxiMFxpMFxzdHJpa2UwXG91dGwwXHNoYWQwXGVtYm8wXGltcHIwXGNhcHMwXHYwXHVsbm9uZVxjZjBcbm9zdXBlcnN1YlxhbmltdGV4dDBcc3RyaWtlZDAgXGZpMTQ0MFxsaTBcamNsaXN0dGFiXHR4MjE2MFxsaW4wIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClwnMDMoXCcwMyk7fXtcbGV2ZWxudW1iZXJzXCcwMjt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaTBcc3RyaWtlMFxvdXRsMFxzaGFkMFxlbWJvMFxpbXByMFxjYXBzMFx2MFx1bG5vbmVcY2YwXG5vc3VwZXJzdWJcYW5pbXRleHQwXHN0cmlrZWQwIFxmaTIxNjBcbGkwXGpjbGlzdHRhYlx0eDI4ODBcbGluMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MA0KXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAzKFwnMDQpO317XGxldmVsbnVtYmVyc1wnMDI7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGkwXHN0cmlrZTBcb3V0bDBcc2hhZDBcZW1ibzBcaW1wcjBcY2FwczBcdjBcdWxub25lXGNmMFxub3N1cGVyc3ViXGFuaW10ZXh0MFxzdHJpa2VkMCBcZmkyODgwXGxpMFxqY2xpc3R0YWJcdHgzNjAwXGxpbjAgfXtcbGlzdGxldmVsDQpcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMyhcJzA1KTt9e1xsZXZlbG51bWJlcnNcJzAyO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpMFxzdHJpa2UwXG91dGwwXHNoYWQwXGVtYm8wXGltcHIwXGNhcHMwXHYwXHVsbm9uZVxjZjBcbm9zdXBlcnN1YlxhbmltdGV4dDBcc3RyaWtlZDAgDQpcZmkzNjAwXGxpMFxqY2xpc3R0YWJcdHg0MzIwXGxpbjAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDMoXCcwNik7fXtcbGV2ZWxudW1iZXJzXCcwMjt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxiMFxpMFxzdHJpa2UwXG91dGwwXHNoYWQwXGVtYm8wXGltcHIwXGNhcHMwXHYwXHVsbm9uZVxjZjBcbm9zdXBlcnN1YlxhbmltdGV4dDBcc3RyaWtlZDAgXGZpMTQ0MFxsaTBcamNsaXN0dGFiXHR4MjE2MFxsaW4wIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClwnMDMoXCcwNyk7fXtcbGV2ZWxudW1iZXJzXCcwMjt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaTBcc3RyaWtlMFxvdXRsMFxzaGFkMFxlbWJvMFxpbXByMFxjYXBzMFx2MFx1bG5vbmVcY2YwXG5vc3VwZXJzdWJcYW5pbXRleHQwXHN0cmlrZWQwIFxmaTIxNjBcbGkwXGpjbGlzdHRhYlx0eDI4ODBcbGluMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MA0KXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAzKFwnMDgpO317XGxldmVsbnVtYmVyc1wnMDI7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGkwXHN0cmlrZTBcb3V0bDBcc2hhZDBcZW1ibzBcaW1wcjBcY2FwczBcdjBcdWxub25lXGNmMFxub3N1cGVyc3ViXGFuaW10ZXh0MFxzdHJpa2VkMCBcZmkyODgwXGxpMFxqY2xpc3R0YWJcdHgzNjAwXGxpbjAgfXtcbGlzdG5hbWUgDQo7fVxsaXN0aWQ4OTY3NDc5Mzd9e1xsaXN0XGxpc3R0ZW1wbGF0ZWlkMTg1MTIwMTAye1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwM1wnMDAuMDt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGJcaTBcc3RyaWtlMFxvdXRsMFxzaGFkMFxlbWJvMFxpbXByMFxzY2FwczBcY2Fwc1x2MFx1bG5vbmVcY2YwXG5vc3VwZXJzdWJcYW5pbXRleHQwXHN0cmlrZWQwXGZiaWFzMCBcczk1XGZpMFxsaTBcamNsaXN0dGFiXHR4NzIwXGxpbjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXCcwM1wnMDAuXCcwMTt9e1xsZXZlbG51bWJlcnNcJzAxXCcwMzt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaTBcc3RyaWtlMFxvdXRsMFxzaGFkMFxlbWJvMFxpbXByMFxjYXBzMFx2MFx1bG5vbmVcY2YwXG5vc3VwZXJzdWJcYW5pbXRleHQwXHN0cmlrZWQwXGZiaWFzMCBcczk3XGZpLTcyMFxsaTcyMFxqY2xpc3R0YWJcdHg3MjBcbGluNzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMA0KXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFwnMDVcJzAwLlwnMDEuXCcwMjt9e1xsZXZlbG51bWJlcnNcJzAxXCcwM1wnMDU7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGkwXHN0cmlrZTBcb3V0bDBcc2hhZDBcZW1ibzBcaW1wcjBcY2FwczBcdjBcdWxub25lXGNmMFxub3N1cGVyc3ViXGFuaW10ZXh0MFxzdHJpa2VkMFxmYmlhczAgXHM5OQ0KXGZpLTcyMFxsaTIxNjBcamNsaXN0dGFiXHR4MjE2MFxsaW4yMTYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAzKFwnMDMpO317XGxldmVsbnVtYmVyc1wnMDI7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcYjBcaTBcc3RyaWtlMFxvdXRsMFxzaGFkMFxlbWJvMFxpbXByMFxjYXBzMFx2MFx1bG5vbmVcY2YwXG5vc3VwZXJzdWJcYW5pbXRleHQwXHN0cmlrZWQwXGZiaWFzMCBcczEwMVxmaS03MjBcbGkyMTYwXGpjbGlzdHRhYlx0eDIxNjBcbGluMjE2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MA0Ke1xsZXZlbHRleHRcJzAzKFwnMDQpO317XGxldmVsbnVtYmVyc1wnMDI7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGkwXHN0cmlrZTBcb3V0bDBcc2hhZDBcZW1ibzBcaW1wcjBcY2FwczBcdjBcdWxub25lXGNmMFxub3N1cGVyc3ViXGFuaW10ZXh0MFxzdHJpa2VkMFxmYmlhczAgXHMxMDNcZmktNzIwXGxpMjg4MFxqY2xpc3R0YWJcdHgyODgwXGxpbjI4ODAgfXtcbGlzdGxldmVsXGxldmVsbmZjMlxsZXZlbG5mY24yXGxldmVsamMwDQpcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMlwnMDUuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGIwXGkwXHN0cmlrZTBcb3V0bDBcc2hhZDBcZW1ibzBcaW1wcjBcY2FwczBcdjBcdWxub25lXGNmMFxub3N1cGVyc3ViXGFuaW10ZXh0MFxzdHJpa2VkMFxmYmlhczAgXHMxMDVcZmkzNjAwXGxpMA0KXGpjbGlzdHRhYlx0eDQzMjBcbGluMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XCcwMlwnMDYpO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcYjBcaTBcc3RyaWtlMFxvdXRsMFxzaGFkMFxlbWJvMFxpbXByMFxjYXBzMFx2MFx1bG5vbmVcY2YwXG5vc3VwZXJzdWJcYW5pbXRleHQwXHN0cmlrZWQwXGZiaWFzMCBcczEwN1xmaTQzMjBcbGkwXGpjbGlzdHRhYlx0eDUwNDBcbGluMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmM0XGxldmVsbmZjbjRcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcJzAyXCcwNyk7fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaTBcc3RyaWtlMFxvdXRsMFxzaGFkMFxlbWJvMFxpbXByMFxjYXBzMFx2MFx1bG5vbmVcY2YwXG5vc3VwZXJzdWJcYW5pbXRleHQwXHN0cmlrZWQwXGZiaWFzMCBcczEwOVxmaTUwNDBcbGkwXGpjbGlzdHRhYlx0eDU3NjBcbGluMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzBcbGV2ZWxqY24wDQpcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcJzAyXCcwOCk7fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYjBcaTBcc3RyaWtlMFxvdXRsMFxzaGFkMFxlbWJvMFxpbXByMFxjYXBzMFx2MFx1bG5vbmVcY2YwXG5vc3VwZXJzdWJcYW5pbXRleHQwXHN0cmlrZWQwXGZiaWFzMCBcczExMVxmaTU3NjBcbGkwDQpcamNsaXN0dGFiXHR4NjQ4MFxsaW4wIH17XGxpc3RuYW1lIHp6bXBTdGFuZGFyZHx8U3RhbmRhcmR8MnwxfDF8MXwyfDl8fDF8MnwwfHwxfDJ8MHx8MXwyfDB8fDF8MnwwfHwxfDJ8MHx8MXwyfDB8fDF8MnwwfHwxfDJ8MHx8O31cbGlzdGlkMTIxNjYyMDE0Mn17XGxpc3RcbGlzdHRlbXBsYXRlaWQtODkxMTA3MDUyXGxpc3RoeWJyaWR7XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzANClxsZXZlbHN0YXJ0YXQxXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZC0yOTYxNTMyXCcwMVx1LTM5MTMgPzt9e1xsZXZlbG51bWJlcnM7fVxmM1xmYmlhczAgXHM2NVxmaS0zNjBcbGk3MjBcbGluNzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTANClxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY5MVwnMDFvO317XGxldmVsbnVtYmVyczt9XGYyXGZiaWFzMCBcZmktMzYwXGxpMTQ0MFxsaW4xNDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY5M1wnMDFcdS0zOTI5ID87fXtcbGV2ZWxudW1iZXJzO31cZjEwXGZiaWFzMCBcZmktMzYwXGxpMjE2MFxsaW4yMTYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzIzXGxldmVsbmZjbjIzXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkNjc2OTg2ODkNClwnMDFcdS0zOTEzID87fXtcbGV2ZWxudW1iZXJzO31cZjNcZmJpYXMwIFxmaS0zNjBcbGkyODgwXGxpbjI4ODAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY5MVwnMDFvO317XGxldmVsbnVtYmVyczt9XGYyXGZiaWFzMCANClxmaS0zNjBcbGkzNjAwXGxpbjM2MDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY5M1wnMDFcdS0zOTI5ID87fXtcbGV2ZWxudW1iZXJzO31cZjEwXGZiaWFzMCBcZmktMzYwXGxpNDMyMFxsaW40MzIwIH17XGxpc3RsZXZlbA0KXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQ2NzY5ODY4OVwnMDFcdS0zOTEzID87fXtcbGV2ZWxudW1iZXJzO31cZjNcZmJpYXMwIFxmaS0zNjBcbGk1MDQwXGxpbjUwNDAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzANClxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NjkxXCcwMW87fXtcbGV2ZWxudW1iZXJzO31cZjJcZmJpYXMwIFxmaS0zNjBcbGk1NzYwXGxpbjU3NjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMjNcbGV2ZWxuZmNuMjNcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxDQpcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDY3Njk4NjkzXCcwMVx1LTM5MjkgPzt9e1xsZXZlbG51bWJlcnM7fVxmMTBcZmJpYXMwIFxmaS0zNjBcbGk2NDgwXGxpbjY0ODAgfXtcbGlzdG5hbWUgO31cbGlzdGlkMTU3MzE1MzQ3MX17XGxpc3RcbGlzdHRlbXBsYXRlaWQtMTg5NTk4NzU2XGxpc3RoeWJyaWR7XGxpc3RsZXZlbFxsZXZlbG5mYzNcbGV2ZWxuZmNuM1xsZXZlbGpjMA0KXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQtMTk0MjI0OTA0XCcwMyhcJzAwKTt9e1xsZXZlbG51bWJlcnNcJzAyO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmYmlhczAgXHM1MFxmaS03MjBcbGk3MjBcbGluNzIwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjANClxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTM0ODA3NTc3XCcwMlwnMDEuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTE0NDBcbGluMTQ0MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MA0KXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDEzNDgwNzU3OVwnMDJcJzAyLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0xODBcbGkyMTYwXGxpbjIxNjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MQ0KXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQxMzQ4MDc1NjdcJzAyXCcwMy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMjg4MFxsaW4yODgwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlDQpcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTM0ODA3NTc3XCcwMlwnMDQuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTM2MDBcbGluMzYwMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMA0KXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDEzNDgwNzU3OVwnMDJcJzA1Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0xODBcbGk0MzIwXGxpbjQzMjAgfXtcbGlzdGxldmVsXGxldmVsbmZjMFxsZXZlbG5mY24wXGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwDQp7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQxMzQ4MDc1NjdcJzAyXCcwNi47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpNTA0MFxsaW41MDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzRcbGV2ZWxuZmNuNFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkMTM0ODA3NTc3XCcwMlwnMDcuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTM2MFxsaTU3NjBcbGluNTc2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMyXGxldmVsbmZjbjJcbGV2ZWxqYzJcbGV2ZWxqY24yXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZDEzNDgwNzU3OVwnMDJcJzA4Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0xODBcbGk2NDgwXGxpbjY0ODAgfXtcbGlzdG5hbWUgO31cbGlzdGlkMTU4MTc4NzYwM317XGxpc3RcbGlzdHRlbXBsYXRlaWQtODIzMzM3NDc4XGxpc3RoeWJyaWR7XGxpc3RsZXZlbFxsZXZlbG5mYzBcbGV2ZWxuZmNuMFxsZXZlbGpjMFxsZXZlbGpjbjBcbGV2ZWxmb2xsb3cwDQpcbGV2ZWxzdGFydGF0MVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQxMDY0NzcxMjRcJzAzKFwnMDApO317XGxldmVsbnVtYmVyc1wnMDI7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZiaWFzMCBcczQ5XGZpLTcyMFxsaTcyMFxsaW43MjAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MQ0KXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQxMzQ4MDc1NzdcJzAyXCcwMS47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMTQ0MFxsaW4xNDQwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlDQpcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHRcbGV2ZWx0ZW1wbGF0ZWlkMTM0ODA3NTc5XCcwMlwnMDIuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTE4MFxsaTIxNjBcbGluMjE2MCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMA0KXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0XGxldmVsdGVtcGxhdGVpZDEzNDgwNzU2N1wnMDJcJzAzLjt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGkyODgwXGxpbjI4ODAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwDQp7XGxldmVsdGV4dFxsZXZlbHRlbXBsYXRlaWQxMzQ4MDc1NzdcJzAyXCcwNC47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpMzYwMFxsaW4zNjAwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkMTM0ODA3NTc5XCcwMlwnMDUuO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTE4MFxsaTQzMjBcbGluNDMyMCB9e1xsaXN0bGV2ZWxcbGV2ZWxuZmMwXGxldmVsbmZjbjBcbGV2ZWxqYzBcbGV2ZWxqY24wXGxldmVsZm9sbG93MFxsZXZlbHN0YXJ0YXQxXGx2bHRlbnRhdGl2ZVxsZXZlbHNwYWNlMFxsZXZlbGluZGVudDB7XGxldmVsdGV4dA0KXGxldmVsdGVtcGxhdGVpZDEzNDgwNzU2N1wnMDJcJzA2Ljt9e1xsZXZlbG51bWJlcnNcJzAxO31ccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxmaS0zNjBcbGk1MDQwXGxpbjUwNDAgfXtcbGlzdGxldmVsXGxldmVsbmZjNFxsZXZlbG5mY240XGxldmVsamMwXGxldmVsamNuMFxsZXZlbGZvbGxvdzBcbGV2ZWxzdGFydGF0MVxsdmx0ZW50YXRpdmVcbGV2ZWxzcGFjZTBcbGV2ZWxpbmRlbnQwe1xsZXZlbHRleHQNClxsZXZlbHRlbXBsYXRlaWQxMzQ4MDc1NzdcJzAyXCcwNy47fXtcbGV2ZWxudW1iZXJzXCcwMTt9XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcZmktMzYwXGxpNTc2MFxsaW41NzYwIH17XGxpc3RsZXZlbFxsZXZlbG5mYzJcbGV2ZWxuZmNuMlxsZXZlbGpjMlxsZXZlbGpjbjJcbGV2ZWxmb2xsb3cwXGxldmVsc3RhcnRhdDFcbHZsdGVudGF0aXZlXGxldmVsc3BhY2UwXGxldmVsaW5kZW50MHtcbGV2ZWx0ZXh0DQpcbGV2ZWx0ZW1wbGF0ZWlkMTM0ODA3NTc5XCcwMlwnMDguO317XGxldmVsbnVtYmVyc1wnMDE7fVxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGZpLTE4MFxsaTY0ODBcbGluNjQ4MCB9e1xsaXN0bmFtZSA7fVxsaXN0aWQxOTM1Mjg2NDYzfX17XCpcbGlzdG92ZXJyaWRldGFibGV7XGxpc3RvdmVycmlkZVxsaXN0aWQ0ODc4NjgzMzNcbGlzdG92ZXJyaWRlY291bnQwXGxzMX17XGxpc3RvdmVycmlkZVxsaXN0aWQ4NTM3NjQxODMNClxsaXN0b3ZlcnJpZGVjb3VudDBcbHMyfXtcbGlzdG92ZXJyaWRlXGxpc3RpZDYyMzc4MDI5NFxsaXN0b3ZlcnJpZGVjb3VudDBcbHMzfXtcbGlzdG92ZXJyaWRlXGxpc3RpZDE5MzUyODY0NjNcbGlzdG92ZXJyaWRlY291bnQwXGxzNH17XGxpc3RvdmVycmlkZVxsaXN0aWQxNTgxNzg3NjAzXGxpc3RvdmVycmlkZWNvdW50MFxsczV9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkMzY4NjUyMTQzXGxpc3RvdmVycmlkZWNvdW50MFxsczZ9DQp7XGxpc3RvdmVycmlkZVxsaXN0aWQ4MTczMDg2MTZcbGlzdG92ZXJyaWRlY291bnQwXGxzN317XGxpc3RvdmVycmlkZVxsaXN0aWQ4OTY3NDc5MzdcbGlzdG92ZXJyaWRlY291bnQwXGxzOH17XGxpc3RvdmVycmlkZVxsaXN0aWQ4OTY3NDc5MzdcbGlzdG92ZXJyaWRlY291bnQwXGxzOX17XGxpc3RvdmVycmlkZVxsaXN0aWQ4OTY3NDc5MzdcbGlzdG92ZXJyaWRlY291bnQwXGxzMTB9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkODk2NzQ3OTM3DQpcbGlzdG92ZXJyaWRlY291bnQwXGxzMTF9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkODk2NzQ3OTM3XGxpc3RvdmVycmlkZWNvdW50MFxsczEyfXtcbGlzdG92ZXJyaWRlXGxpc3RpZDg5Njc0NzkzN1xsaXN0b3ZlcnJpZGVjb3VudDBcbHMxM317XGxpc3RvdmVycmlkZVxsaXN0aWQ4OTY3NDc5MzdcbGlzdG92ZXJyaWRlY291bnQwXGxzMTR9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkODk2NzQ3OTM3XGxpc3RvdmVycmlkZWNvdW50MFxsczE1fQ0Ke1xsaXN0b3ZlcnJpZGVcbGlzdGlkODk2NzQ3OTM3XGxpc3RvdmVycmlkZWNvdW50MFxsczE2fXtcbGlzdG92ZXJyaWRlXGxpc3RpZDc4MzYyMzM3N1xsaXN0b3ZlcnJpZGVjb3VudDBcbHMxN317XGxpc3RvdmVycmlkZVxsaXN0aWQxNTczMTUzNDcxXGxpc3RvdmVycmlkZWNvdW50MFxsczE4fXtcbGlzdG92ZXJyaWRlXGxpc3RpZDQ4Nzg2ODMzM1xsaXN0b3ZlcnJpZGVjb3VudDBcbHMxOX17XGxpc3RvdmVycmlkZVxsaXN0aWQ4NTM3NjQxODMNClxsaXN0b3ZlcnJpZGVjb3VudDBcbHMyMH17XGxpc3RvdmVycmlkZVxsaXN0aWQ2MjM3ODAyOTRcbGlzdG92ZXJyaWRlY291bnQwXGxzMjF9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkMTIxNjYyMDE0MlxsaXN0b3ZlcnJpZGVjb3VudDBcbHMyMn17XGxpc3RvdmVycmlkZVxsaXN0aWQxMjE2NjIwMTQyXGxpc3RvdmVycmlkZWNvdW50MFxsczIzfXtcbGlzdG92ZXJyaWRlXGxpc3RpZDEyMTY2MjAxNDJcbGlzdG92ZXJyaWRlY291bnQwXGxzMjR9DQp7XGxpc3RvdmVycmlkZVxsaXN0aWQxMjE2NjIwMTQyXGxpc3RvdmVycmlkZWNvdW50MFxsczI1fXtcbGlzdG92ZXJyaWRlXGxpc3RpZDEyMTY2MjAxNDJcbGlzdG92ZXJyaWRlY291bnQwXGxzMjZ9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkMTIxNjYyMDE0MlxsaXN0b3ZlcnJpZGVjb3VudDBcbHMyN317XGxpc3RvdmVycmlkZVxsaXN0aWQxMjE2NjIwMTQyXGxpc3RvdmVycmlkZWNvdW50MFxsczI4fXtcbGlzdG92ZXJyaWRlXGxpc3RpZDEyMTY2MjAxNDINClxsaXN0b3ZlcnJpZGVjb3VudDBcbHMyOX17XGxpc3RvdmVycmlkZVxsaXN0aWQxMjE2NjIwMTQyXGxpc3RvdmVycmlkZWNvdW50MFxsczMwfXtcbGlzdG92ZXJyaWRlXGxpc3RpZDEyMTY2MjAxNDJcbGlzdG92ZXJyaWRlY291bnQwXGxzMzF9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkMTIxNjYyMDE0MlxsaXN0b3ZlcnJpZGVjb3VudDBcbHMzMn17XGxpc3RvdmVycmlkZVxsaXN0aWQxMjE2NjIwMTQyXGxpc3RvdmVycmlkZWNvdW50OXtcbGZvbGV2ZWwNClxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDl9e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDN9e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDJ9e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDJ9e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDF9e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0DQpcbGV2ZWxzdGFydGF0MX17XGxmb2xldmVsXGxpc3RvdmVycmlkZXN0YXJ0YXRcbGV2ZWxzdGFydGF0MX17XGxmb2xldmVsXGxpc3RvdmVycmlkZXN0YXJ0YXRcbGV2ZWxzdGFydGF0MX17XGxmb2xldmVsXGxpc3RvdmVycmlkZXN0YXJ0YXRcbGV2ZWxzdGFydGF0MX1cbHMzM317XGxpc3RvdmVycmlkZVxsaXN0aWQxMjE2NjIwMTQyXGxpc3RvdmVycmlkZWNvdW50MFxsczM0fXtcbGlzdG92ZXJyaWRlXGxpc3RpZDEyMTY2MjAxNDINClxsaXN0b3ZlcnJpZGVjb3VudDBcbHMzNX17XGxpc3RvdmVycmlkZVxsaXN0aWQxMjE2NjIwMTQyXGxpc3RvdmVycmlkZWNvdW50OXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlc3RhcnRhdFxsZXZlbHN0YXJ0YXQ5fXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlc3RhcnRhdFxsZXZlbHN0YXJ0YXQzfXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlc3RhcnRhdFxsZXZlbHN0YXJ0YXQyfXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlc3RhcnRhdFxsZXZlbHN0YXJ0YXQyfQ0Ke1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDF9e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDF9e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDF9e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDF9e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDF9XGxzMzZ9DQp7XGxpc3RvdmVycmlkZVxsaXN0aWQxMjE2NjIwMTQyXGxpc3RvdmVycmlkZWNvdW50OXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlc3RhcnRhdFxsZXZlbHN0YXJ0YXQ5fXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlc3RhcnRhdFxsZXZlbHN0YXJ0YXQzfXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlc3RhcnRhdFxsZXZlbHN0YXJ0YXQyfXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlc3RhcnRhdFxsZXZlbHN0YXJ0YXQyfXtcbGZvbGV2ZWwNClxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDF9e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDF9e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDF9e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDF9e1xsZm9sZXZlbFxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDF9XGxzMzd9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkMTIxNjYyMDE0Mg0KXGxpc3RvdmVycmlkZWNvdW50MFxsczM4fXtcbGlzdG92ZXJyaWRlXGxpc3RpZDEyMTY2MjAxNDJcbGlzdG92ZXJyaWRlY291bnQwXGxzMzl9e1xsaXN0b3ZlcnJpZGVcbGlzdGlkMTIxNjYyMDE0MlxsaXN0b3ZlcnJpZGVjb3VudDl7XGxmb2xldmVsXGxpc3RvdmVycmlkZXN0YXJ0YXRcbGV2ZWxzdGFydGF0OX17XGxmb2xldmVsXGxpc3RvdmVycmlkZXN0YXJ0YXRcbGV2ZWxzdGFydGF0M317XGxmb2xldmVsXGxpc3RvdmVycmlkZXN0YXJ0YXQNClxsZXZlbHN0YXJ0YXQyfXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlc3RhcnRhdFxsZXZlbHN0YXJ0YXQyfXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlc3RhcnRhdFxsZXZlbHN0YXJ0YXQxfXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlc3RhcnRhdFxsZXZlbHN0YXJ0YXQxfXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlc3RhcnRhdFxsZXZlbHN0YXJ0YXQxfXtcbGZvbGV2ZWxcbGlzdG92ZXJyaWRlc3RhcnRhdFxsZXZlbHN0YXJ0YXQxfXtcbGZvbGV2ZWwNClxsaXN0b3ZlcnJpZGVzdGFydGF0XGxldmVsc3RhcnRhdDF9XGxzNDB9fXtcKlxyZXZ0Ymwge1Vua25vd247fX17XCpccnNpZHRibCBccnNpZDIyMzI0MFxyc2lkMjc5Mjg1XHJzaWQyOTE5MDZccnNpZDM5ODczMFxyc2lkNDAwMjM4XHJzaWQ0MDI1OTdccnNpZDQyMjcyM1xyc2lkNTUyNzU3XHJzaWQ2MTI5MThccnNpZDYxNjU4M1xyc2lkNjczMzY4XHJzaWQ3MjE5MzNccnNpZDc0MjE2OVxyc2lkNzQzNjA4XHJzaWQ3NTIyMjVccnNpZDg1NzcwNFxyc2lkODU4NzAwXHJzaWQ5NDI0MDkNClxyc2lkMTAwMjE2NVxyc2lkMTE5Njc0Mlxyc2lkMTI2MDM4Nlxyc2lkMTQ1NzI4N1xyc2lkMTUzNjc0NFxyc2lkMTY2NzgyOFxyc2lkMTcyODYxMFxyc2lkMTcyOTQxOFxyc2lkMTc5NTE1OFxyc2lkMTg2MzgyNVxyc2lkMjA0MDEyN1xyc2lkMjI0ODg3M1xyc2lkMjQ0NTkyNVxyc2lkMjUwMDYzN1xyc2lkMjY0NDc1Nlxyc2lkMjc3ODcwOVxyc2lkMjgzMjAwMFxyc2lkMjg5MTc4MVxyc2lkMjg5MjIwM1xyc2lkMjkwOTE3N1xyc2lkMjkxMTA2MQ0KXHJzaWQyOTExNTA0XHJzaWQzMDg0MjM0XHJzaWQzMjgwMzc1XHJzaWQzMjgzMjI0XHJzaWQzNDkyMTg0XHJzaWQzNDk4MDI2XHJzaWQzNTAzMTk2XHJzaWQzNjkwNDQ2XHJzaWQzNzQxMjIwXHJzaWQ0MDA5NTUwXHJzaWQ0MjA4NDgyXHJzaWQ0Mjg0Nzc1XHJzaWQ0NDA1OTk4XHJzaWQ0NTIyMjQwXHJzaWQ0NzI1NjMyXHJzaWQ0NzM1Njk0XHJzaWQ0OTkyODQ0XHJzaWQ1MDU4Mzk3XHJzaWQ1MTkzOTA1XHJzaWQ1MjAxMjAxXHJzaWQ1MjY0NTIzDQpccnNpZDUyNjY3ODNccnNpZDUyNzM0MDRccnNpZDUzMjA4OTVccnNpZDU1ODI3MjVccnNpZDU2NjY4MTNccnNpZDU5MTE0NjNccnNpZDU5MTMwNDNccnNpZDU5MTQ3ODVccnNpZDU5OTY0NTdccnNpZDYwMzczMDdccnNpZDYwNTY3MTNccnNpZDYxNzMyNDNccnNpZDYyNTcwMDlccnNpZDYzNTk0MThccnNpZDYzNzQxNjRccnNpZDY1NzM0ODZccnNpZDY3NzQ2MDdccnNpZDY3NzcxOTZccnNpZDY3Nzc5MzJccnNpZDY4NDg0ODZccnNpZDcyMTE5NDUNClxyc2lkNzIyMjg4Mlxyc2lkNzI4NzY3N1xyc2lkNzI5NDU1OVxyc2lkNzQ4MTYwOVxyc2lkNzQ4OTk0OVxyc2lkNzU1NDg0M1xyc2lkNzYyOTMyNlxyc2lkNzY3Nzg2NVxyc2lkNzc0OTc4OFxyc2lkNzc1MzAwN1xyc2lkODAyMTU0Nlxyc2lkODA3OTY1MVxyc2lkODM5ODgxMVxyc2lkODU4NTk4NFxyc2lkODU5NTYxMVxyc2lkODU5NzQzNVxyc2lkODYwOTQ0NFxyc2lkODY1NjUxN1xyc2lkODczMzQzOVxyc2lkODgwMTIyM1xyc2lkODgwNDQ2MQ0KXHJzaWQ5MTg2MzExXHJzaWQ5MjQzNzAxXHJzaWQ5MzEyMzA2XHJzaWQ5Mzc0ODY3XHJzaWQ5NTE3OTMxXHJzaWQ5NTc5MjQ5XHJzaWQ5NjQyMjk3XHJzaWQ5NjU5NjQ2XHJzaWQ5NzE4MTc1XHJzaWQ5ODQ4NTcyXHJzaWQ5ODYyNTI4XHJzaWQ5OTE3OTY0XHJzaWQxMDEwMDQ2NVxyc2lkMTAxNjk3MjhccnNpZDEwMTc5NDI0XHJzaWQxMDI1MjU2OVxyc2lkMTAyOTE2MTBccnNpZDEwNDM1MTMyXHJzaWQxMDUwNDkzN1xyc2lkMTA2OTA1MzMNClxyc2lkMTA2OTI1MjdccnNpZDEwNzA3NjU0XHJzaWQxMDg4MDQ4NVxyc2lkMTA5MDA5NTVccnNpZDEwOTY0MzIxXHJzaWQxMTAyMTQxM1xyc2lkMTEwMzkxNDlccnNpZDExMTUwOTkwXHJzaWQxMTI3MjY5OFxyc2lkMTE0NzU3MzBccnNpZDExNDkxMjE3XHJzaWQxMTY4NjYxNFxyc2lkMTE4Mjg1NTdccnNpZDExODgwMzYyXHJzaWQxMTk5MzU0N1xyc2lkMTE5OTgyNzdccnNpZDEyMzM1NzgxXHJzaWQxMjQ1NDAxNFxyc2lkMTI0NzQ4MDYNClxyc2lkMTI0Nzc3ODFccnNpZDEyNDc5MTk2XHJzaWQxMjUxODQ5MFxyc2lkMTI1MzE3NzlccnNpZDEyNzMyOTY1XHJzaWQxMjgwNTU3NFxyc2lkMTMwNTY2MzlccnNpZDEzMjQ2NDA2XHJzaWQxMzMyMTAzOVxyc2lkMTM0NDg3MDZccnNpZDEzNTc5OTExXHJzaWQxMzY1ODI4OFxyc2lkMTM3Nzk4MDdccnNpZDEzODQ1MjcwXHJzaWQxNDExMjU2MVxyc2lkMTQzODI1OTdccnNpZDE0NDQyNjc5XHJzaWQxNDU1NTkxNFxyc2lkMTQ3NjUwNjQNClxyc2lkMTUwMjM3MDdccnNpZDE1MDg2MzE0XHJzaWQxNTE0NzA3MFxyc2lkMTUxNjEyMTBccnNpZDE1Mjg1MjIxXHJzaWQxNTI5NTIyMFxyc2lkMTU2ODI4MzZccnNpZDE1Njg5MjUxXHJzaWQxNTg2MDY4NVxyc2lkMTU4Njc2NDhccnNpZDE1ODcxNTQxXHJzaWQxNTg4MzM3MFxyc2lkMTYwNzg1NzJccnNpZDE2MjYwMDY3XHJzaWQxNjMzNzExNVxyc2lkMTY0MTU5NjRccnNpZDE2NTE4NDgxXHJzaWQxNjcxMzg4N317XG1tYXRoUHINClxtbWF0aEZvbnQzNFxtYnJrQmluMFxtYnJrQmluU3ViMFxtc21hbGxGcmFjMFxtZGlzcERlZjFcbWxNYXJnaW4wXG1yTWFyZ2luMFxtZGVmSmMxXG13cmFwSW5kZW50MTQ0MFxtaW50TGltMFxtbmFyeUxpbTF9e1xpbmZve1xhdXRob3IgUkFZIERPVUdMQVN9e1xvcGVyYXRvciBSQVkgRE9VR0xBU317XGNyZWF0aW1ceXIyMDIwXG1vNVxkeTRcaHIxMlxtaW41OX17XHJldnRpbVx5cjIwMjBcbW81XGR5NFxocjEyXG1pbjU5fXtcdmVyc2lvbjJ9DQp7XGVkbWluczF9e1xub2ZwYWdlczU0fXtcbm9md29yZHMyMDk2OX17XG5vZmNoYXJzMTE5NTI1fXtcbm9mY2hhcnN3czE0MDIxNH17XHZlcm4xMjd9fXtcKlx4bWxuc3RibCB7XHhtbG5zMSBodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL29mZmljZS93b3JkLzIwMDMvd29yZG1sfX1ccGFwZXJ3MTIyNDBccGFwZXJoMTU4NDBcbWFyZ2wxNDQwXG1hcmdyMTQ0MFxtYXJndDE0NDBcbWFyZ2IxNDQwXGd1dHRlcjBcbHRyc2VjdCANClx3aWRvd2N0cmxcZnRuYmpcYWVuZGRvY1x0cmFja21vdmVzMFx0cmFja2Zvcm1hdHRpbmcxXGRvbm90ZW1iZWRzeXNmb250MVxyZWx5b252bWwwXGRvbm90ZW1iZWRsaW5nZGF0YTBcZ3JmZG9jZXZlbnRzMFx2YWxpZGF0ZXhtbDFcc2hvd3BsYWNlaG9sZHRleHQwXGlnbm9yZW1peGVkY29udGVudDBcc2F2ZWludmFsaWR4bWwwXHNob3d4bWxlcnJvcnMxXG5veGxhdHRveWVuDQpcZXhwc2hydG5cbm91bHRybHNwY1xkbnRibG5zYmRiXG5vc3BhY2Vmb3J1bFxmb3Jtc2hhZGVcaG9yemRvY1xkZ21hcmdpblxkZ2hzcGFjZTE4MFxkZ3ZzcGFjZTE4MFxkZ2hvcmlnaW4xNDQwXGRndm9yaWdpbjE0NDBcZGdoc2hvdzFcZGd2c2hvdzENClxqZXhwYW5kXHZpZXdraW5kMVx2aWV3c2NhbGUxMDBccGdicmRyaGVhZFxwZ2JyZHJmb290XHNwbHl0d25pbmVcZnRubHl0d25pbmVcaHRtYXV0c3Bcbm9sbmh0YWRqdGJsXHVzZWx0YmFsblxhbG50YmxpbmRcbHl0Y2FsY3RibHdkXGx5dHRibHJ0Z3JcbG5icmtydWxlXG5vYnJrd3JwdGJsXHNuYXB0b2dyaWRpbmNlbGxcYWxsb3dmaWVsZGVuZHNlbFx3cnBwdW5jdA0KXGFzaWFuYnJrcnVsZVxyc2lkcm9vdDE1ODYwNjg1XG5ld3RibHN0eXJ1bHNcbm9ncm93YXV0b2ZpdFx2aWV3YmtzcDFcdXNlbm9ybXN0eWZvcmxpc3Rcbm9pbmRubWJydHNcZmVsbmJyZWxldlxub2N4c3B0YWJsZVxpbmRybHN3ZWxldmVuXG5vYWZjbnN0dGJsXGFmZWxldlx1dGlubFxod2VsZXZcc3BsdHBncGFyXG5vdGN2YXNwXG5vdGJya2Nuc3RmcmN0Ymxcbm90dmF0eGJ4XGtybnByc25ldFxjYWNoZWRjb2xiYWwgXG5vdWljb21wYXQgXGZldDANCntcKlx3Z3JmZm10ZmlsdGVyIDI0NTB9XG5vZmVhdHVyZXRocm90dGxlMVxpbGZvbWFjYXRjbG51cDBcc3R5bGVzb3J0bWV0aG9kMHtcKlxmdG5zZXAgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDEwMDIxNjUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgDQpcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTAxMDA0NjUgXGNoZnRuc2VwIA0KXHBhciB9fXtcKlxmdG5zZXBjIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkwXHJpMFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxMDAyMTY1IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwMTAwNDY1IFxjaGZ0bnNlcGMgDQpccGFyIH19e1wqXGFmdG5zZXAgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDEwMDIxNjUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTAxMDA0NjUgXGNoZnRuc2VwIA0KXHBhciB9fXtcKlxhZnRuc2VwYyBcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMFxyaTBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTAwMjE2NSBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDEwMDQ2NSBcY2hmdG5zZXBjIA0KXHBhciB9fVxsdHJwYXIgXHNlY3RkIFxsdHJzZWN0XHBzejFcbGluZXgwXHZlcnRhbGNcZW5kbmhlcmVcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2VjdHJzaWQxNDQ0MjY3OVxzZnRuYmoge1xoZWFkZXJsIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxzNTRccWwgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ3MjIyODgyIA0KXHBhciB9fXtcaGVhZGVyciBcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJcczU0XHFsIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNzIyMjg4MiANClxwYXIgfX17XGZvb3RlcmwgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHM1NlxxbCBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDcyMjI4ODIgDQpccGFyIH19e1xmb290ZXJyIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxzNTZccWwgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHRxY1x0eDQ2ODBcdHFyXHR4OTM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ3MjIyODgyIA0KXHBhciB9fXtcaGVhZGVyZiBcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJcczU0XHFsIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx0cWNcdHg0NjgwXHRxclx0eDkzNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDAgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNzIyMjg4MiANClxwYXIgfX17XGZvb3RlcmYgXGx0cnBhciBccGFyZFxwbGFpbiBcbHRycGFyXHM1NlxxbCBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDcyMjI4ODIgDQpccGFyIH19e1wqXHBuc2VjbHZsMVxwbnVjcm1ccG5zdGFydDFccG5pbmRlbnQ3MjBccG5oYW5nIHtccG50eHRhIC59fXtcKlxwbnNlY2x2bDJccG51Y2x0clxwbnN0YXJ0MVxwbmluZGVudDcyMFxwbmhhbmcge1xwbnR4dGEgLn19e1wqXHBuc2VjbHZsM1xwbmRlY1xwbnN0YXJ0MVxwbmluZGVudDcyMFxwbmhhbmcge1xwbnR4dGEgLn19e1wqXHBuc2VjbHZsNFxwbmxjbHRyXHBuc3RhcnQxXHBuaW5kZW50NzIwXHBuaGFuZyB7XHBudHh0YSApfX0NCntcKlxwbnNlY2x2bDVccG5kZWNccG5zdGFydDFccG5pbmRlbnQ3MjBccG5oYW5nIHtccG50eHRiICh9e1xwbnR4dGEgKX19e1wqXHBuc2VjbHZsNlxwbmxjbHRyXHBuc3RhcnQxXHBuaW5kZW50NzIwXHBuaGFuZyB7XHBudHh0YiAofXtccG50eHRhICl9fXtcKlxwbnNlY2x2bDdccG5sY3JtXHBuc3RhcnQxXHBuaW5kZW50NzIwXHBuaGFuZyB7XHBudHh0YiAofXtccG50eHRhICl9fXtcKlxwbnNlY2x2bDgNClxwbmxjbHRyXHBuc3RhcnQxXHBuaW5kZW50NzIwXHBuaGFuZyB7XHBudHh0YiAofXtccG50eHRhICl9fXtcKlxwbnNlY2x2bDlccG5sY3JtXHBuc3RhcnQxXHBuaW5kZW50NzIwXHBuaGFuZyB7XHBudHh0YiAofXtccG50eHRhICl9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzMzlccWMgXGxpMFxyaTBcc2EyNDBca2VlcFxrZWVwblx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDQ0MjY3OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcYlxjYXBzXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxNDk2MDIxMSBTVEFURU1FTlQgT0YgT1BFUkFUSU5HIENPTkRJVElPTlMgT0YNClxwYXIgRU5TVE9SIEtBVFkgU1RPUkFHRSBBTkQgVFJBTlNQT1JUQVRJT04sIEwuUC4NClxwYXIgRklMRUQgV0lUSCBUSEUNClxwYXIgVEhFIEZFREVSQUwgRU5FUkdZIFJFR1VMQVRPUlkgQ09NTUlTU0lPTg0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzNzJccWwgXGxpMzYwMFxyaTBcc2EyNTIwXGtlZXBca2VlcG5cd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4zNjAwXGl0YXAwXHBhcmFyc2lkMTAxNzk0MjQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcYlxjYXBzXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk4NjI1MjggTUFZIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwNjkwNTMzIDR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5ODYyNTI4ICwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDE0OTYwMjExIDIwMjB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDU3Mjg3XGNoYXJyc2lkMTQ1NzI4NyANClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczIyXHFqIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0NDQyNjc5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkMTQ5NjAyMTEgZVRhcmlmZiBJbmZvcm1hdGlvbg0KXHBhciBUYXJpZmYgU3VibWl0dGVyOiBFbnN0b3IgS2F0eSBTdG9yYWdlIGFuZCBUcmFuc3BvcnRhdGlvbiwgTC5QLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NDQyNjc5IA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDE0OTYwMjExIEZFUkMgVGFyaWZmIFByb2dyYW0gTmFtZTogRkVSQyBOR1BBIEdhcyBUYXJpZmYNClxwYXIgVGFyaWZmIFRpdGxlOiBLYXR5IE9wZXJhdGluZyBTdGF0ZW1lbnQgVGFyaWZmIFJlY29yZCBFZmZlY3RpdmUgRGF0ZTogfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTc5NTE1OCBNYXkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTA2OTA1MzMgNH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkMTQ5NjAyMTEgLCAyMDIwDQpccGFyIFRhcmlmZiBSZWNvcmQgVGl0bGU6IEVuc3RvciBLYXR5IFNPQyBCYXNlbGluZSBTdWJtaXNzaW9uIE9wdGlvbiBDb2RlOiBBDQpccGFyIH1ccGFyZCBcbHRycGFyXHMyMlxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDQ0MjY3OSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkMTQ5NjAyMTEgT3RoZXIgSW5mb3JtYXRpb246IEJhc2VsaW5lIEZpbGluZ317XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0NDQyNjc5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NDQyNjc5XGNoYXJyc2lkMTQ5NjAyMTEgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFjIFxsaTExMDNccmkxMDQ5XHNiNjJcc2EyNDBcc2wyNzFcc2xtdWx0MVx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjEwNDlcbGluMTEwM1xpdGFwMFxwYXJhcnNpZDE1ODYwNjg1IHtccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDQ0MjY3OSBcc2VjdCB9XHNlY3RkIFxsdHJzZWN0DQpcbGluZXgwXGVuZG5oZXJlXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiBccGFyZFxwbGFpbiBcbHRycGFyXHMzOVxxYyBcbGkwXHJpMFxzYTI0MFxrZWVwXGtlZXBuXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDEwMDIxNjUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcYlxjYXBzXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkMTQ5NjAyMTEgRU5TVE9SIEtBVFkgU1RPUkFHRSBBTkQgVFJBTlNQT1JUQVRJT04sIEwuUC4gU1RBVEVNRU5UIE9GIE9QRVJBVElORyBDT05ESVRJT05TfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgDQoNClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczE5XHFjIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDEzNjU4Mjg4IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhYlxhZjAgDQpcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTA3MDc2NTRcY2hhcnJzaWQxMzY1ODI4OCBUfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxMzY1ODI4OFxjaGFycnNpZDEzNjU4Mjg4IEFCTEUgT0YgQ09OVEVOVFN9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDEwNzA3NjU0XGNoYXJyc2lkMTM2NTgyODggDQpccGFyIH1ccGFyZCBcbHRycGFyXHMxOVxxciBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxMzY1ODI4OCB7XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTM2NTgyODhcY2hhcnJzaWQxMzY1ODI4OCBQYWdlDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMxMTZccWwgXGZpLTcyMFxsaTcyMFxyaTBcc2ExMDBcd2lkY3RscGFyXHRxclx0bGRvdFx0eDkzNTBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIA0Ke1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkODU5NTYxMSAgVE9DIFxcaCBcXHogXFx0ICJTdGFuZGFyZF9MMSwxIiB9fXtcZmxkcnNsdCB7XGZpZWxkXGZsZGVkaXR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwMTAwNDY1ICBIWVBFUkxJTksgXFxsICJfVG9jMzkyMzk1MTciIH19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWJcYWYwIA0KXGx0cmNoXGZjczAgXGNzMTE4XGJcY2Fwc1x1bFxjZjI0XGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkNDcyNTYzMlxjaGFycnNpZDY4NzQ1MCAxLjB9e1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkNDcyNTYzMiBcdGFiIH17XHJ0bGNoXGZjczEgXGFiXGFmMCANClxsdHJjaFxmY3MwIFxjczExOFxiXHVsXGNmMjRcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ0NzI1NjMyXGNoYXJyc2lkNjg3NDUwIFNUQVRFTUVOVCBPRiBSQVRFU317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNDcyNTYzMiBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNDcyNTYzMiAgUEFHRVJFRiBfVG9jMzkyMzk1MTcgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNDcyNTYzMiB7XCpcZGF0YWZpZWxkIA0KMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzMzAwMzkwMDMyMDAzMzAwMzkwMDM1MDAzMTAwMzcwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDE1MDIzNzA3IDF9fX1cc2VjdGQgXGx0cnNlY3QNClxsaW5leDBcZW5kbmhlcmVcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIH19XHNlY3RkIFxsdHJzZWN0XGxpbmV4MFxlbmRuaGVyZVxzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkNDcyNTYzMiANCg0KXHBhciB9e1xmaWVsZFxmbGRlZGl0e1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDEwMDQ2NSAgSFlQRVJMSU5LIFxcbCAiX1RvYzM5MjM5NTE4IiB9fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcY3MxMThcYlxjYXBzXHVsXGNmMjRcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ0NzI1NjMyXGNoYXJyc2lkNjg3NDUwIDIuMH17XHJ0bGNoXGZjczEgDQpcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDQ3MjU2MzIgXHRhYiB9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGNzMTE4XGJcdWxcY2YyNFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDQ3MjU2MzJcY2hhcnJzaWQ2ODc0NTAgT1BFUkFUSU5HIFNUQVRFTUVOVH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ0NzI1NjMyIFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNDcyNTYzMiAgUEFHRVJFRiBfVG9jMzkyMzk1MTggXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ0NzI1NjMyIHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzMzAwMzkwMDMyMDAzMzAwMzkwMDM1MDAzMTAwMzgwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTUwMjM3MDcgMn19fVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIH19XHNlY3RkIFxsdHJzZWN0XGxpbmV4MFxlbmRuaGVyZVxzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ0NzI1NjMyIA0KXHBhciB9e1xmaWVsZFxmbGRlZGl0e1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDEwMDQ2NSAgSFlQRVJMSU5LIFxcbCAiX1RvYzM5MjM5NTE5IiB9fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcY3MxMThcYlxjYXBzXHVsXGNmMjRcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ0NzI1NjMyXGNoYXJyc2lkNjg3NDUwIDMuMH17XHJ0bGNoXGZjczEgDQpcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDQ3MjU2MzIgXHRhYiB9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGNzMTE4XGJcdWxcY2YyNFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDQ3MjU2MzJcY2hhcnJzaWQ2ODc0NTAgREVGSU5JVElPTlN9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNDcyNTYzMiBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDQ3MjU2MzIgIFBBR0VSRUYgX1RvYzM5MjM5NTE5IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNDcyNTYzMiB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzMwMDM5MDAzMjAwMzMwMDM5MDAzNTAwMzEwMDM5MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDE1MDIzNzA3IDJ9fX1cc2VjdGQgXGx0cnNlY3RcbGluZXgwXGVuZG5oZXJlXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB9fVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkNDcyNTYzMiANClxwYXIgfXtcZmllbGRcZmxkZWRpdHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTAxMDA0NjUgIEhZUEVSTElOSyBcXGwgIl9Ub2MzOTIzOTUyMCIgfX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGNzMTE4XGJcY2Fwc1x1bFxjZjI0XGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkNDcyNTYzMlxjaGFycnNpZDY4NzQ1MCA0LjB9e1xydGxjaFxmY3MxIA0KXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ0NzI1NjMyIFx0YWIgfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxjczExOFxiXHVsXGNmMjRcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ0NzI1NjMyXGNoYXJyc2lkNjg3NDUwIFNFUlZJQ0VTfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDQ3MjU2MzIgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ0NzI1NjMyICBQQUdFUkVGIF9Ub2MzOTIzOTUyMCBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDQ3MjU2MzIge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDMzMDAzOTAwMzIwMDMzMDAzOTAwMzUwMDMyMDAzMDAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNTAyMzcwNyAxMn19fVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIH19XHNlY3RkIFxsdHJzZWN0XGxpbmV4MFxlbmRuaGVyZVxzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ0NzI1NjMyIA0KXHBhciB9e1xmaWVsZFxmbGRlZGl0e1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDEwMDQ2NSAgSFlQRVJMSU5LIFxcbCAiX1RvYzM5MjM5NTIxIiB9fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcY3MxMThcYlxjYXBzXHVsXGNmMjRcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ0NzI1NjMyXGNoYXJyc2lkNjg3NDUwIDUuMH17XHJ0bGNoXGZjczEgDQpcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDQ3MjU2MzIgXHRhYiB9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGNzMTE4XGJcdWxcY2YyNFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDQ3MjU2MzJcY2hhcnJzaWQ2ODc0NTAgQ09ORklSTUFUSU9OU317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ0NzI1NjMyIFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNDcyNTYzMiAgUEFHRVJFRiBfVG9jMzkyMzk1MjEgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ0NzI1NjMyIHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzMzAwMzkwMDMyMDAzMzAwMzkwMDM1MDAzMjAwMzEwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTUwMjM3MDcgMTR9fX1cc2VjdGQgXGx0cnNlY3RcbGluZXgwXGVuZG5oZXJlXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB9fVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkNDcyNTYzMiANClxwYXIgfXtcZmllbGRcZmxkZWRpdHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTAxMDA0NjUgIEhZUEVSTElOSyBcXGwgIl9Ub2MzOTIzOTUyMiIgfX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGNzMTE4XGJcY2Fwc1x1bFxjZjI0XGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkNDcyNTYzMlxjaGFycnNpZDY4NzQ1MCA2LjB9e1xydGxjaFxmY3MxIA0KXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ0NzI1NjMyIFx0YWIgfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxjczExOFxiXHVsXGNmMjRcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ0NzI1NjMyXGNoYXJyc2lkNjg3NDUwIE5PTUlOQVRJT05TfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDQ3MjU2MzIgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ0NzI1NjMyICBQQUdFUkVGIF9Ub2MzOTIzOTUyMiBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDQ3MjU2MzIge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDMzMDAzOTAwMzIwMDMzMDAzOTAwMzUwMDMyMDAzMjAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNTAyMzcwNyAxN319fVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIH19XHNlY3RkIFxsdHJzZWN0XGxpbmV4MFxlbmRuaGVyZVxzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ0NzI1NjMyIA0KXHBhciB9e1xmaWVsZFxmbGRlZGl0e1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDEwMDQ2NSAgSFlQRVJMSU5LIFxcbCAiX1RvYzM5MjM5NTIzIiB9fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcY3MxMThcYlxjYXBzXHVsXGNmMjRcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ0NzI1NjMyXGNoYXJyc2lkNjg3NDUwIDcuMH17XHJ0bGNoXGZjczEgDQpcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDQ3MjU2MzIgXHRhYiB9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGNzMTE4XGJcdWxcY2YyNFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDQ3MjU2MzJcY2hhcnJzaWQ2ODc0NTAgUFJJT1JJVFkgT0YgU0VSVklDRX17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ0NzI1NjMyIFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNDcyNTYzMiAgUEFHRVJFRiBfVG9jMzkyMzk1MjMgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ0NzI1NjMyIHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzMzAwMzkwMDMyMDAzMzAwMzkwMDM1MDAzMjAwMzMwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTUwMjM3MDcgMTl9fX1cc2VjdGQgXGx0cnNlY3RcbGluZXgwXGVuZG5oZXJlXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB9fVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkNDcyNTYzMiANClxwYXIgfXtcZmllbGRcZmxkZWRpdHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTAxMDA0NjUgIEhZUEVSTElOSyBcXGwgIl9Ub2MzOTIzOTUyNCIgfX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGNzMTE4XGJcY2Fwc1x1bFxjZjI0XGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkNDcyNTYzMlxjaGFycnNpZDY4NzQ1MCA4LjB9e1xydGxjaFxmY3MxIA0KXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ0NzI1NjMyIFx0YWIgfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxjczExOFxiXHVsXGNmMjRcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ0NzI1NjMyXGNoYXJyc2lkNjg3NDUwIElOVEVSUlVQVElPTiBPRiBTRVJWSUNFfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDQ3MjU2MzIgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ0NzI1NjMyICBQQUdFUkVGIF9Ub2MzOTIzOTUyNCBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDQ3MjU2MzIge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDMzMDAzOTAwMzIwMDMzMDAzOTAwMzUwMDMyMDAzNDAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNTAyMzcwNyAyMH19fVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIH19XHNlY3RkIFxsdHJzZWN0XGxpbmV4MFxlbmRuaGVyZVxzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ0NzI1NjMyIA0KXHBhciB9e1xmaWVsZFxmbGRlZGl0e1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDEwMDQ2NSAgSFlQRVJMSU5LIFxcbCAiX1RvYzM5MjM5NTI1IiB9fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcY3MxMThcYlxjYXBzXHVsXGNmMjRcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ0NzI1NjMyXGNoYXJyc2lkNjg3NDUwIDkuMH17XHJ0bGNoXGZjczEgDQpcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDQ3MjU2MzIgXHRhYiB9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGNzMTE4XGJcdWxcY2YyNFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDQ3MjU2MzJcY2hhcnJzaWQ2ODc0NTAgDQpURU5ERVIgT0YgUkVDRUlQVFMgQU5EIERFTElWRVJJRVN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDQ3MjU2MzIgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ0NzI1NjMyICBQQUdFUkVGIF9Ub2MzOTIzOTUyNSBcXGggfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDQ3MjU2MzIge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDMzMDAzOTAwMzIwMDMzMDAzOTAwMzUwMDMyMDAzNTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNTAyMzcwNyAyMn19fVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIH19XHNlY3RkIFxsdHJzZWN0XGxpbmV4MFxlbmRuaGVyZVxzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ0NzI1NjMyIA0KXHBhciB9e1xmaWVsZFxmbGRlZGl0e1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDEwMDQ2NSAgSFlQRVJMSU5LIFxcbCAiX1RvYzM5MjM5NTI2IiB9fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcY3MxMThcYlxjYXBzXHVsXGNmMjRcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ0NzI1NjMyXGNoYXJyc2lkNjg3NDUwIDEwLjB9e1xydGxjaFxmY3MxIA0KXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ0NzI1NjMyIFx0YWIgfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxjczExOFxiXHVsXGNmMjRcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ0NzI1NjMyXGNoYXJyc2lkNjg3NDUwIFFVQUxJVFl9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNDcyNTYzMiBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDQ3MjU2MzIgIFBBR0VSRUYgX1RvYzM5MjM5NTI2IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNDcyNTYzMiB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzMwMDM5MDAzMjAwMzMwMDM5MDAzNTAwMzIwMDM2MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDE1MDIzNzA3IDI0fX19XHNlY3RkIFxsdHJzZWN0XGxpbmV4MFxlbmRuaGVyZVxzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmogfX1cc2VjdGQgXGx0cnNlY3RcbGluZXgwXGVuZG5oZXJlXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDQ3MjU2MzIgDQpccGFyIH17XGZpZWxkXGZsZGVkaXR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwMTAwNDY1ICBIWVBFUkxJTksgXFxsICJfVG9jMzkyMzk1MjciIH19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxjczExOFxiXGNhcHNcdWxcY2YyNFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDQ3MjU2MzJcY2hhcnJzaWQ2ODc0NTAgMTEuMH17XHJ0bGNoXGZjczEgDQpcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDQ3MjU2MzIgXHRhYiB9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGNzMTE4XGJcdWxcY2YyNFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDQ3MjU2MzJcY2hhcnJzaWQ2ODc0NTAgT0RPUklaQVRJT059e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNDcyNTYzMiBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDQ3MjU2MzIgIFBBR0VSRUYgX1RvYzM5MjM5NTI3IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNDcyNTYzMiB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzMwMDM5MDAzMjAwMzMwMDM5MDAzNTAwMzIwMDM3MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDE1MDIzNzA3IDI1fX19XHNlY3RkIFxsdHJzZWN0XGxpbmV4MFxlbmRuaGVyZVxzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmogfX1cc2VjdGQgXGx0cnNlY3RcbGluZXgwXGVuZG5oZXJlXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDQ3MjU2MzIgDQpccGFyIH17XGZpZWxkXGZsZGVkaXR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwMTAwNDY1ICBIWVBFUkxJTksgXFxsICJfVG9jMzkyMzk1MjgiIH19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxjczExOFxiXGNhcHNcdWxcY2YyNFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDQ3MjU2MzJcY2hhcnJzaWQ2ODc0NTAgMTIuMH17XHJ0bGNoXGZjczEgDQpcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDQ3MjU2MzIgXHRhYiB9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGNzMTE4XGJcdWxcY2YyNFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDQ3MjU2MzJcY2hhcnJzaWQ2ODc0NTAgTUVUSE9EIE9GIE1FQVNVUkVNRU5UfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDQ3MjU2MzIgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ0NzI1NjMyICBQQUdFUkVGIF9Ub2MzOTIzOTUyOCBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDQ3MjU2MzIge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDMzMDAzOTAwMzIwMDMzMDAzOTAwMzUwMDMyMDAzODAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNTAyMzcwNyAyNX19fVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIH19XHNlY3RkIFxsdHJzZWN0XGxpbmV4MFxlbmRuaGVyZVxzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ0NzI1NjMyIA0KXHBhciB9e1xmaWVsZFxmbGRlZGl0e1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDEwMDQ2NSAgSFlQRVJMSU5LIFxcbCAiX1RvYzM5MjM5NTI5IiB9fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcY3MxMThcYlxjYXBzXHVsXGNmMjRcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ0NzI1NjMyXGNoYXJyc2lkNjg3NDUwIDEzLjB9e1xydGxjaFxmY3MxIA0KXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ0NzI1NjMyIFx0YWIgfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxjczExOFxiXHVsXGNmMjRcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ0NzI1NjMyXGNoYXJyc2lkNjg3NDUwIEJBTEFOQ0lORyBPRiBRVUFOVElUSUVTfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDQ3MjU2MzIgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ0NzI1NjMyICBQQUdFUkVGIF9Ub2MzOTIzOTUyOSBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDQ3MjU2MzIge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDMzMDAzOTAwMzIwMDMzMDAzOTAwMzUwMDMyMDAzOTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNTAyMzcwNyAyNX19fVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIH19XHNlY3RkIFxsdHJzZWN0XGxpbmV4MFxlbmRuaGVyZVxzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ0NzI1NjMyIA0KXHBhciB9e1xmaWVsZFxmbGRlZGl0e1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDEwMDQ2NSAgSFlQRVJMSU5LIFxcbCAiX1RvYzM5MjM5NTMwIiB9fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcY3MxMThcYlxjYXBzXHVsXGNmMjRcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ0NzI1NjMyXGNoYXJyc2lkNjg3NDUwIDE0LjB9e1xydGxjaFxmY3MxIA0KXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ0NzI1NjMyIFx0YWIgfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxjczExOFxiXHVsXGNmMjRcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ0NzI1NjMyXGNoYXJyc2lkNjg3NDUwIElOVkVOVE9SWSBNQU5BR0VNRU5UfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDQ3MjU2MzIgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ0NzI1NjMyICBQQUdFUkVGIF9Ub2MzOTIzOTUzMCBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDQ3MjU2MzIge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDMzMDAzOTAwMzIwMDMzMDAzOTAwMzUwMDMzMDAzMDAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNTAyMzcwNyAyNX19fVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIH19XHNlY3RkIFxsdHJzZWN0XGxpbmV4MFxlbmRuaGVyZVxzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ0NzI1NjMyIA0KXHBhciB9e1xmaWVsZFxmbGRlZGl0e1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDEwMDQ2NSAgSFlQRVJMSU5LIFxcbCAiX1RvYzM5MjM5NTMxIiB9fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcY3MxMThcYlxjYXBzXHVsXGNmMjRcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ0NzI1NjMyXGNoYXJyc2lkNjg3NDUwIDE1LjB9e1xydGxjaFxmY3MxIA0KXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ0NzI1NjMyIFx0YWIgfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxjczExOFxiXHVsXGNmMjRcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ0NzI1NjMyXGNoYXJyc2lkNjg3NDUwIEZFRVMgRk9SIFNFUlZJQ0VTfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDQ3MjU2MzIgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ0NzI1NjMyICBQQUdFUkVGIF9Ub2MzOTIzOTUzMSBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDQ3MjU2MzIge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDMzMDAzOTAwMzIwMDMzMDAzOTAwMzUwMDMzMDAzMTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNTAyMzcwNyAyOH19fVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIH19XHNlY3RkIFxsdHJzZWN0XGxpbmV4MFxlbmRuaGVyZVxzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ0NzI1NjMyIA0KXHBhciB9e1xmaWVsZFxmbGRlZGl0e1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDEwMDQ2NSAgSFlQRVJMSU5LIFxcbCAiX1RvYzM5MjM5NTMyIiB9fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcY3MxMThcYlxjYXBzXHVsXGNmMjRcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ0NzI1NjMyXGNoYXJyc2lkNjg3NDUwIDE2LjB9e1xydGxjaFxmY3MxIA0KXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ0NzI1NjMyIFx0YWIgfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxjczExOFxiXHVsXGNmMjRcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ0NzI1NjMyXGNoYXJyc2lkNjg3NDUwIEZVRUwgUkVJTUJVUlNFTUVOVH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ0NzI1NjMyIFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNDcyNTYzMiAgUEFHRVJFRiBfVG9jMzkyMzk1MzIgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ0NzI1NjMyIHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzMzAwMzkwMDMyMDAzMzAwMzkwMDM1MDAzMzAwMzIwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTUwMjM3MDcgMjh9fX1cc2VjdGQgXGx0cnNlY3RcbGluZXgwXGVuZG5oZXJlXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB9fVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkNDcyNTYzMiANClxwYXIgfXtcZmllbGRcZmxkZWRpdHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTAxMDA0NjUgIEhZUEVSTElOSyBcXGwgIl9Ub2MzOTIzOTUzMyIgfX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGNzMTE4XGJcY2Fwc1x1bFxjZjI0XGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkNDcyNTYzMlxjaGFycnNpZDY4NzQ1MCAxNy4wfXtccnRsY2hcZmNzMSANClxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkNDcyNTYzMiBcdGFiIH17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcY3MxMThcYlx1bFxjZjI0XGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkNDcyNTYzMlxjaGFycnNpZDY4NzQ1MCBUQVhFU317XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ0NzI1NjMyIFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNDcyNTYzMiAgUEFHRVJFRiBfVG9jMzkyMzk1MzMgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ0NzI1NjMyIHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzMzAwMzkwMDMyMDAzMzAwMzkwMDM1MDAzMzAwMzMwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTUwMjM3MDcgMjh9fX1cc2VjdGQgXGx0cnNlY3RcbGluZXgwXGVuZG5oZXJlXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB9fVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkNDcyNTYzMiANClxwYXIgfXtcZmllbGRcZmxkZWRpdHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTAxMDA0NjUgIEhZUEVSTElOSyBcXGwgIl9Ub2MzOTIzOTUzNCIgfX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGNzMTE4XGJcY2Fwc1x1bFxjZjI0XGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkNDcyNTYzMlxjaGFycnNpZDY4NzQ1MCAxOC4wfXtccnRsY2hcZmNzMSANClxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkNDcyNTYzMiBcdGFiIH17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcY3MxMThcYlx1bFxjZjI0XGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkNDcyNTYzMlxjaGFycnNpZDY4NzQ1MCBCSUxMSU5HIEFORCBQQVlNRU5UfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDQ3MjU2MzIgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ0NzI1NjMyICBQQUdFUkVGIF9Ub2MzOTIzOTUzNCBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDQ3MjU2MzIge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDMzMDAzOTAwMzIwMDMzMDAzOTAwMzUwMDMzMDAzNDAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNTAyMzcwNyAyOX19fVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIH19XHNlY3RkIFxsdHJzZWN0XGxpbmV4MFxlbmRuaGVyZVxzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ0NzI1NjMyIA0KXHBhciB9e1xmaWVsZFxmbGRlZGl0e1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDEwMDQ2NSAgSFlQRVJMSU5LIFxcbCAiX1RvYzM5MjM5NTM1IiB9fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcY3MxMThcYlxjYXBzXHVsXGNmMjRcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ0NzI1NjMyXGNoYXJyc2lkNjg3NDUwIDE5LjB9e1xydGxjaFxmY3MxIA0KXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ0NzI1NjMyIFx0YWIgfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxjczExOFxiXHVsXGNmMjRcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ0NzI1NjMyXGNoYXJyc2lkNjg3NDUwIEVWSQ0KREVOQ0UgT0YgQ1JFRElUV09SVEhJTkVTUyBBTkQgU0VDVVJJVFk7IFJJR0hUIE9GIFNFVC1PRkZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDQ3MjU2MzIgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ0NzI1NjMyIA0KIFBBR0VSRUYgX1RvYzM5MjM5NTM1IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDQ3MjU2MzIge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDMzMDAzOTAwMzIwMDMzMDAzOTAwMzUwMDMzMDAzNTAwMDAwMH19fXtcZmxkcnNsdCB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNTAyMzcwNyAzMX19fVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIH19XHNlY3RkIFxsdHJzZWN0XGxpbmV4MFxlbmRuaGVyZVxzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIA0KXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ0NzI1NjMyIA0KXHBhciB9e1xmaWVsZFxmbGRlZGl0e1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDEwMDQ2NSAgSFlQRVJMSU5LIFxcbCAiX1RvYzM5MjM5NTM2IiB9fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcY3MxMThcYlxjYXBzXHVsXGNmMjRcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ0NzI1NjMyXGNoYXJyc2lkNjg3NDUwIDIwLjB9e1xydGxjaFxmY3MxIA0KXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ0NzI1NjMyIFx0YWIgfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxjczExOFxiXHVsXGNmMjRcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ0NzI1NjMyXGNoYXJyc2lkNjg3NDUwIFRFUk1JTkFUSU9OIEZPUiBERUZBVUxUfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDQ3MjU2MzIgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ0NzI1NjMyICBQQUdFUkVGIF9Ub2MzOTIzOTUzNiBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDQ3MjU2MzIge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDMzMDAzOTAwMzIwMDMzMDAzOTAwMzUwMDMzMDAzNjAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNTAyMzcwNyAzNX19fVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIH19XHNlY3RkIFxsdHJzZWN0XGxpbmV4MFxlbmRuaGVyZVxzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ0NzI1NjMyIA0KXHBhciB9e1xmaWVsZFxmbGRlZGl0e1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDEwMDQ2NSAgSFlQRVJMSU5LIFxcbCAiX1RvYzM5MjM5NTM3IiB9fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcY3MxMThcYlxjYXBzXHVsXGNmMjRcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ0NzI1NjMyXGNoYXJyc2lkNjg3NDUwIDIxLjB9e1xydGxjaFxmY3MxIA0KXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ0NzI1NjMyIFx0YWIgfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxjczExOFxiXHVsXGNmMjRcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ0NzI1NjMyXGNoYXJyc2lkNjg3NDUwIEZPUkNFIE1BSkVVUkV9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNDcyNTYzMiBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDQ3MjU2MzIgIFBBR0VSRUYgX1RvYzM5MjM5NTM3IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNDcyNTYzMiB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzMwMDM5MDAzMjAwMzMwMDM5MDAzNTAwMzMwMDM3MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDE1MDIzNzA3IDQwfX19XHNlY3RkIFxsdHJzZWN0XGxpbmV4MFxlbmRuaGVyZVxzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmogfX1cc2VjdGQgXGx0cnNlY3RcbGluZXgwXGVuZG5oZXJlXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDQ3MjU2MzIgDQpccGFyIH17XGZpZWxkXGZsZGVkaXR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwMTAwNDY1ICBIWVBFUkxJTksgXFxsICJfVG9jMzkyMzk1MzgiIH19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxjczExOFxiXGNhcHNcdWxcY2YyNFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDQ3MjU2MzJcY2hhcnJzaWQ2ODc0NTAgMjIuMH17XHJ0bGNoXGZjczEgDQpcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDQ3MjU2MzIgXHRhYiB9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGNzMTE4XGJcdWxcY2YyNFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDQ3MjU2MzJcY2hhcnJzaWQ2ODc0NTAgU0VSVklDRSBDT05ESVRJT05TfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDQ3MjU2MzIgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ0NzI1NjMyICBQQUdFUkVGIF9Ub2MzOTIzOTUzOCBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDQ3MjU2MzIge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDMzMDAzOTAwMzIwMDMzMDAzOTAwMzUwMDMzMDAzODAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNTAyMzcwNyA0Mn19fVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIH19XHNlY3RkIFxsdHJzZWN0XGxpbmV4MFxlbmRuaGVyZVxzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ0NzI1NjMyIA0KXHBhciB9e1xmaWVsZFxmbGRlZGl0e1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDEwMDQ2NSAgSFlQRVJMSU5LIFxcbCAiX1RvYzM5MjM5NTM5IiB9fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcY3MxMThcYlxjYXBzXHVsXGNmMjRcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ0NzI1NjMyXGNoYXJyc2lkNjg3NDUwIDIzLjB9e1xydGxjaFxmY3MxIA0KXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ0NzI1NjMyIFx0YWIgfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxjczExOFxiXHVsXGNmMjRcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ0NzI1NjMyXGNoYXJyc2lkNjg3NDUwIFRJVExFIEFORCBSSVNLIE9GIExPU1N9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNDcyNTYzMiBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDQ3MjU2MzIgIFBBR0VSRUYgX1RvYzM5MjM5NTM5IFxcaCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNDcyNTYzMiB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzMwMDM5MDAzMjAwMzMwMDM5MDAzNTAwMzMwMDM5MDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDE1MDIzNzA3IDQyfX19XHNlY3RkIFxsdHJzZWN0XGxpbmV4MFxlbmRuaGVyZVxzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmogfX1cc2VjdGQgXGx0cnNlY3RcbGluZXgwXGVuZG5oZXJlXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDQ3MjU2MzIgDQpccGFyIH17XGZpZWxkXGZsZGVkaXR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwMTAwNDY1ICBIWVBFUkxJTksgXFxsICJfVG9jMzkyMzk1NDAiIH19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxjczExOFxiXGNhcHNcdWxcY2YyNFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDQ3MjU2MzJcY2hhcnJzaWQ2ODc0NTAgMjQuMH17XHJ0bGNoXGZjczEgDQpcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDQ3MjU2MzIgXHRhYiB9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGNzMTE4XGJcdWxcY2YyNFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDQ3MjU2MzJcY2hhcnJzaWQ2ODc0NTAgDQpBRFZFUlNFIENMQUlNUyBUTyBOQVRVUkFMIEdBU317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNDcyNTYzMiBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDQ3MjU2MzIgIFBBR0VSRUYgX1RvYzM5MjM5NTQwIFxcaCB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNDcyNTYzMiB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzMwMDM5MDAzMjAwMzMwMDM5MDAzNTAwMzQwMDMwMDAwMDAwfX19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDE1MDIzNzA3IDQzfX19XHNlY3RkIFxsdHJzZWN0XGxpbmV4MFxlbmRuaGVyZVxzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmogfX1cc2VjdGQgXGx0cnNlY3RcbGluZXgwXGVuZG5oZXJlXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgDQpcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDQ3MjU2MzIgDQpccGFyIH17XGZpZWxkXGZsZGVkaXR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwMTAwNDY1ICBIWVBFUkxJTksgXFxsICJfVG9jMzkyMzk1NDEiIH19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxjczExOFxiXGNhcHNcdWxcY2YyNFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDQ3MjU2MzJcY2hhcnJzaWQ2ODc0NTAgMjUuMH17XHJ0bGNoXGZjczEgDQpcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDQ3MjU2MzIgXHRhYiB9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGNzMTE4XGJcdWxcY2YyNFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDQ3MjU2MzJcY2hhcnJzaWQ2ODc0NTAgSU5ERU1OSUZJQ0FUSU9OfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDQ3MjU2MzIgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ0NzI1NjMyICBQQUdFUkVGIF9Ub2MzOTIzOTU0MSBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDQ3MjU2MzIge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDMzMDAzOTAwMzIwMDMzMDAzOTAwMzUwMDM0MDAzMTAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNTAyMzcwNyA0NH19fVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIH19XHNlY3RkIFxsdHJzZWN0XGxpbmV4MFxlbmRuaGVyZVxzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ0NzI1NjMyIA0KXHBhciB9e1xmaWVsZFxmbGRlZGl0e1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDEwMDQ2NSAgSFlQRVJMSU5LIFxcbCAiX1RvYzM5MjM5NTQyIiB9fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcY3MxMThcYlxjYXBzXHVsXGNmMjRcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ0NzI1NjMyXGNoYXJyc2lkNjg3NDUwIDI2LjB9e1xydGxjaFxmY3MxIA0KXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ0NzI1NjMyIFx0YWIgfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxjczExOFxiXHVsXGNmMjRcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ0NzI1NjMyXGNoYXJyc2lkNjg3NDUwIExJTUlUQVRJT04gT0YgTElBQklMSVRZfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDQ3MjU2MzIgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ0NzI1NjMyICBQQUdFUkVGIF9Ub2MzOTIzOTU0MiBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDQ3MjU2MzIge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDMzMDAzOTAwMzIwMDMzMDAzOTAwMzUwMDM0MDAzMjAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNTAyMzcwNyA0NH19fVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIH19XHNlY3RkIFxsdHJzZWN0XGxpbmV4MFxlbmRuaGVyZVxzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ0NzI1NjMyIA0KXHBhciB9e1xmaWVsZFxmbGRlZGl0e1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDEwMDQ2NSAgSFlQRVJMSU5LIFxcbCAiX1RvYzM5MjM5NTQzIiB9fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcY3MxMThcYlxjYXBzXHVsXGNmMjRcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ0NzI1NjMyXGNoYXJyc2lkNjg3NDUwIDI3LjB9e1xydGxjaFxmY3MxIA0KXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ0NzI1NjMyIFx0YWIgfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxjczExOFxiXHVsXGNmMjRcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ0NzI1NjMyXGNoYXJyc2lkNjg3NDUwIA0KV0FJVkVSUyBBTkQgTk9OLVdBSVZFUiBPRiBGVVRVUkUgREVGQVVMVH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNDcyNTYzMiBcdGFiIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDQ3MjU2MzIgDQogUEFHRVJFRiBfVG9jMzkyMzk1NDMgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNDcyNTYzMiB7XCpcZGF0YWZpZWxkIDA4ZDBjOWVhNzlmOWJhY2UxMThjODIwMGFhMDA0YmE5MGIwMjAwMDAwMDA4MDAwMDAwMGQwMDAwMDA1ZjAwNTQwMDZmMDA2MzAwMzMwMDM5MDAzMjAwMzMwMDM5MDAzNTAwMzQwMDMzMDAwMDAwfX19e1xmbGRyc2x0IHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDE1MDIzNzA3IDQ0fX19XHNlY3RkIFxsdHJzZWN0XGxpbmV4MFxlbmRuaGVyZVxzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmogfX1cc2VjdGQgXGx0cnNlY3RcbGluZXgwXGVuZG5oZXJlXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgDQpcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDQ3MjU2MzIgDQpccGFyIH17XGZpZWxkXGZsZGVkaXR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwMTAwNDY1ICBIWVBFUkxJTksgXFxsICJfVG9jMzkyMzk1NDQiIH19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxjczExOFxiXGNhcHNcdWxcY2YyNFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDQ3MjU2MzJcY2hhcnJzaWQ2ODc0NTAgMjguMH17XHJ0bGNoXGZjczEgDQpcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCBcZnMyMlxsYW5nMTAyNFxsYW5nZmUxMDI0XGxvY2hcYWYzMTUwNlxoaWNoXGFmMzE1MDZcZGJjaFxhZjMxNTA1XG5vcHJvb2ZcaW5zcnNpZDQ3MjU2MzIgXHRhYiB9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGNzMTE4XGJcdWxcY2YyNFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDQ3MjU2MzJcY2hhcnJzaWQ2ODc0NTAgQ0hPSUNFIE9GIExBV317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ0NzI1NjMyIFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNDcyNTYzMiAgUEFHRVJFRiBfVG9jMzkyMzk1NDQgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ0NzI1NjMyIHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzMzAwMzkwMDMyMDAzMzAwMzkwMDM1MDAzNDAwMzQwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTUwMjM3MDcgNDV9fX1cc2VjdGQgXGx0cnNlY3RcbGluZXgwXGVuZG5oZXJlXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB9fVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkNDcyNTYzMiANClxwYXIgfXtcZmllbGRcZmxkZWRpdHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTAxMDA0NjUgIEhZUEVSTElOSyBcXGwgIl9Ub2MzOTIzOTU0NSIgfX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGNzMTE4XGJcY2Fwc1x1bFxjZjI0XGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkNDcyNTYzMlxjaGFycnNpZDY4NzQ1MCAyOS4wfXtccnRsY2hcZmNzMSANClxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkNDcyNTYzMiBcdGFiIH17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcY3MxMThcYlx1bFxjZjI0XGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkNDcyNTYzMlxjaGFycnNpZDY4NzQ1MCBMQVdTIEFORCBSRUdVTEFUSU9OU317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ0NzI1NjMyIFx0YWIgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkNDcyNTYzMiAgUEFHRVJFRiBfVG9jMzkyMzk1NDUgXFxoIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ0NzI1NjMyIHtcKlxkYXRhZmllbGQgMDhkMGM5ZWE3OWY5YmFjZTExOGM4MjAwYWEwMDRiYTkwYjAyMDAwMDAwMDgwMDAwMDAwZDAwMDAwMDVmMDA1NDAwNmYwMDYzMDAzMzAwMzkwMDMyMDAzMzAwMzkwMDM1MDAzNDAwMzUwMDAwMDB9fX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXHdlYmhpZGRlblxpbnNyc2lkMTUwMjM3MDcgNDV9fX1cc2VjdGQgXGx0cnNlY3RcbGluZXgwXGVuZG5oZXJlXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB9fVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYzMTUwN1xhZnMyMiBcbHRyY2hcZmNzMCANClxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkNDcyNTYzMiANClxwYXIgfXtcZmllbGRcZmxkZWRpdHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTAxMDA0NjUgIEhZUEVSTElOSyBcXGwgIl9Ub2MzOTIzOTU0NiIgfX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGNzMTE4XGJcY2Fwc1x1bFxjZjI0XGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkNDcyNTYzMlxjaGFycnNpZDY4NzQ1MCAzMC4wfXtccnRsY2hcZmNzMSANClxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIFxmczIyXGxhbmcxMDI0XGxhbmdmZTEwMjRcbG9jaFxhZjMxNTA2XGhpY2hcYWYzMTUwNlxkYmNoXGFmMzE1MDVcbm9wcm9vZlxpbnNyc2lkNDcyNTYzMiBcdGFiIH17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcY3MxMThcYlx1bFxjZjI0XGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkNDcyNTYzMlxjaGFycnNpZDY4NzQ1MCBBU1NJR05NRU5UfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDQ3MjU2MzIgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ0NzI1NjMyICBQQUdFUkVGIF9Ub2MzOTIzOTU0NiBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDQ3MjU2MzIge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDMzMDAzOTAwMzIwMDMzMDAzOTAwMzUwMDM0MDAzNjAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNTAyMzcwNyA0NX19fVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIH19XHNlY3RkIFxsdHJzZWN0XGxpbmV4MFxlbmRuaGVyZVxzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ0NzI1NjMyIA0KXHBhciB9e1xmaWVsZFxmbGRlZGl0e1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDEwMDQ2NSAgSFlQRVJMSU5LIFxcbCAiX1RvYzM5MjM5NTQ3IiB9fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcY3MxMThcYlxjYXBzXHVsXGNmMjRcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ0NzI1NjMyXGNoYXJyc2lkNjg3NDUwIDMxLjB9e1xydGxjaFxmY3MxIA0KXGFmMzE1MDdcYWZzMjIgXGx0cmNoXGZjczAgXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ0NzI1NjMyIFx0YWIgfXtccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxjczExOFxiXHVsXGNmMjRcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQ0NzI1NjMyXGNoYXJyc2lkNjg3NDUwIERFU0NSSVBUSVZFIEhFQURJTkdTfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDQ3MjU2MzIgXHRhYiB9e1xmaWVsZHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQ0NzI1NjMyICBQQUdFUkVGIF9Ub2MzOTIzOTU0NyBcXGggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlx3ZWJoaWRkZW5caW5zcnNpZDQ3MjU2MzIge1wqXGRhdGFmaWVsZCAwOGQwYzllYTc5ZjliYWNlMTE4YzgyMDBhYTAwNGJhOTBiMDIwMDAwMDAwODAwMDAwMDBkMDAwMDAwNWYwMDU0MDA2ZjAwNjMwMDMzMDAzOTAwMzIwMDMzMDAzOTAwMzUwMDM0MDAzNzAwMDAwMH19fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2Zcd2ViaGlkZGVuXGluc3JzaWQxNTAyMzcwNyA0NX19fVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIH19XHNlY3RkIFxsdHJzZWN0XGxpbmV4MFxlbmRuaGVyZVxzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjMxNTA3XGFmczIyIFxsdHJjaFxmY3MwIA0KXGZzMjJcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxsb2NoXGFmMzE1MDZcaGljaFxhZjMxNTA2XGRiY2hcYWYzMTUwNVxub3Byb29mXGluc3JzaWQ0NzI1NjMyIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ2MTI5MTggXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB9fVxwYXJkXHBsYWluIFxsdHJwYXINClxxbCBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ2MTI5MTggXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyBcc2VjdGQgXGx0cnNlY3QNClxsaW5leDBcZW5kbmhlcmVcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTA5NjQzMjEgDQpccGFyIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkMTQ5NjAyMTEgQXBwZW5kaXggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkMTQ5NjAyMTEgQX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkMTQ5NjAyMTEgIE1FVEhPRCBPRiBNRUFTVVJFTUVOVCAvIE1FQVNVUkVNRU5UIEVRVUlQTUVOVH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwMDIxNjUgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMyMlxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxMDAyMTY1IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkMTQ5NjAyMTEgQXBwZW5kaXggfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkMTQ5NjAyMTEgQn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkMTQ5NjAyMTEgIFFVQUxJVFkgUkVRVUlSRU1FTlRTfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDEwMDIxNjUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ0NDI2NzlcY2hhcnJzaWQxNDk2MDIxMSANClxwYXIgfXtccnRsY2hcZmNzMSBcYWJcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNDQ0MjY3OSBcc2VjdCB9XHNlY3RkIFxsdHJzZWN0XHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTAwMjE2NVxzZnRuYmoge1xmb290ZXJyIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxzNTZccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcdHFjXHR4NDY4MFx0cXJcdHg5MzYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTAwMjE2NSBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTA0MzUxMzIgUGFnZSANCn17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDQzNTEzMiAgUEFHRSAgIFxcKiBNRVJHRUZPUk1BVCB9fXtcZmxkcnNsdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQxMDQzNTEzMiA0Nn19fVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQxMDQzNTEzMiAgb2YgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDMwODQyMzQgNDZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDQzNTEzMiANClxwYXIgfX1ccGFyZFxwbGFpbiBcbHRycGFyXHMzOVxxYyBcbGkwXHJpMFxzYTI0MFxrZWVwXGtlZXBuXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0NDQyNjc5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxiXGNhcHNcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDE0OTYwMjExIEVOU1RPUiBLQVRZIFNUT1JBR0UgQU5EIFRSQU5TUE9SVEFUSU9OLCBMLlAuDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzM4ODc4MDQ0fXtcKlxia21rc3RhcnQgX1RvYzM5MjM5NTE3fXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NSBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxiXGNhcHNcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkMTQ0NDI2NzkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMS4wXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhcg0KXHM5NVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4NzIwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOVxvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0NDQyNjc5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxNDQ0MjY3OSBTVEFURU1FTlQgT0YgUkFURVN9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE1ODYwNjg1IHtcKlxia21rZW5kIF9Ub2MzODg3ODA0NH17XCpcYmtta2VuZCBfVG9jMzkyMzk1MTd9DQpccGFyIFxsdHJyb3d9XHRyb3dkIFxpcm93MFxpcm93YmFuZDBcbHRycm93XHRzMTEzXHRycWNcdHJnYXBoMTA4XHRybGVmdDBcdHJmdHNXaWR0aDFcdHJmdHNXaWR0aEIzXHRyYXV0b2ZpdDFcdHJwYWRkbDEwOFx0cnBhZGRyMTA4XHRycGFkZGZsM1x0cnBhZGRmdDNcdHJwYWRkZmIzXHRycGFkZGZyM1x0Ymxyc2lkMTQ0NDI2NzlcdGJsbGtoZHJyb3dzXHRibGxraGRyY29sc1x0Ymxsa25vY29sYmFuZFx0YmxpbmQwXHRibGluZHR5cGUzIFxjbHZlcnRhbHQNClxjbGJyZHJ0XGJyZHJ0YmwgXGNsYnJkcmxcYnJkcnRibCBcY2xicmRyYlxicmRydGJsIFxjbGJyZHJyXGJyZHJ0YmwgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoNDY3NVxjbHNoZHJhd25pbCBcY2VsbHg0Njc1XGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJ0YmwgXGNsYnJkcmxcYnJkcnRibCBcY2xicmRyYlxicmRydGJsIFxjbGJyZHJyXGJyZHJ0YmwgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoNDY3NVxjbHNoZHJhd25pbCANClxjZWxseDkzNTBccGFyZFxwbGFpbiBcbHRycGFyXHFjIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxwYXJhcnNpZDE0NDQyNjc5XHl0czExMyBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDQ0MjY3OVxjaGFycnNpZDE0OTYwMjExIFNlcnZpY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDQ0MjY3OSBcY2VsbCB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNDQ0MjY3OVxjaGFycnNpZDE0OTYwMjExIFJhdGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0NDQyNjc5IFxjZWxsIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHNhMjQwXHNsMjg4XHNsbXVsdDFcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NDQyNjc5IFx0cm93ZCBcaXJvdzBcaXJvd2JhbmQwXGx0cnJvdw0KXHRzMTEzXHRycWNcdHJnYXBoMTA4XHRybGVmdDBcdHJmdHNXaWR0aDFcdHJmdHNXaWR0aEIzXHRyYXV0b2ZpdDFcdHJwYWRkbDEwOFx0cnBhZGRyMTA4XHRycGFkZGZsM1x0cnBhZGRmdDNcdHJwYWRkZmIzXHRycGFkZGZyM1x0Ymxyc2lkMTQ0NDI2NzlcdGJsbGtoZHJyb3dzXHRibGxraGRyY29sc1x0Ymxsa25vY29sYmFuZFx0YmxpbmQwXHRibGluZHR5cGUzIFxjbHZlcnRhbHRcY2xicmRydFxicmRydGJsIFxjbGJyZHJsXGJyZHJ0YmwgDQpcY2xicmRyYlxicmRydGJsIFxjbGJyZHJyXGJyZHJ0YmwgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoNDY3NVxjbHNoZHJhd25pbCBcY2VsbHg0Njc1XGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJ0YmwgXGNsYnJkcmxcYnJkcnRibCBcY2xicmRyYlxicmRydGJsIFxjbGJyZHJyXGJyZHJ0YmwgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoNDY3NVxjbHNoZHJhd25pbCBcY2VsbHg5MzUwXHJvdyBcbHRycm93DQp9XHBhcmRccGxhaW4gXGx0cnBhclxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBccGFyYXJzaWQxNDQ0MjY3OVx5dHMxMTMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ0NDI2NzlcY2hhcnJzaWQxNDk2MDIxMSBGaXJtIFN0b3JhZ2UgU2VydmljZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NDQyNjc5IFxjZWxsIH17XHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NDQyNjc5XGNoYXJyc2lkMTQ5NjAyMTEgTWFya2V0IEJhc2VkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNDQ0MjY3OSBcY2VsbCB9XHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkwXHJpMFxzYTI0MFxzbDI4OFxzbG11bHQxXHdpZGN0bHBhclxpbnRibFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDQ0MjY3OSBcdHJvd2QgXGlyb3cxXGlyb3diYW5kMVxsdHJyb3cNClx0czExM1x0cnFjXHRyZ2FwaDEwOFx0cmxlZnQwXHRyZnRzV2lkdGgxXHRyZnRzV2lkdGhCM1x0cmF1dG9maXQxXHRycGFkZGwxMDhcdHJwYWRkcjEwOFx0cnBhZGRmbDNcdHJwYWRkZnQzXHRycGFkZGZiM1x0cnBhZGRmcjNcdGJscnNpZDE0NDQyNjc5XHRibGxraGRycm93c1x0Ymxsa2hkcmNvbHNcdGJsbGtub2NvbGJhbmRcdGJsaW5kMFx0YmxpbmR0eXBlMyBcY2x2ZXJ0YWx0XGNsYnJkcnRcYnJkcnRibCBcY2xicmRybFxicmRydGJsIA0KXGNsYnJkcmJcYnJkcnRibCBcY2xicmRyclxicmRydGJsIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDQ2NzVcY2xzaGRyYXduaWwgXGNlbGx4NDY3NVxjbHZlcnRhbHRcY2xicmRydFxicmRydGJsIFxjbGJyZHJsXGJyZHJ0YmwgXGNsYnJkcmJcYnJkcnRibCBcY2xicmRyclxicmRydGJsIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDQ2NzVcY2xzaGRyYXduaWwgXGNlbGx4OTM1MFxyb3cgXGx0cnJvdw0KfVxwYXJkXHBsYWluIFxsdHJwYXJccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXHBhcmFyc2lkMTQ0NDI2NzlceXRzMTEzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIA0KXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NDQyNjc5XGNoYXJyc2lkMTQ5NjAyMTEgRmlybSBXaGVlbGluZyBTZXJ2aWNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ0NDI2NzkgXGNlbGwgfXtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ0NDI2NzlcY2hhcnJzaWQxNDk2MDIxMSBNYXJrZXQtQmFzZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0NDQyNjc5IFxjZWxsIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHNhMjQwXHNsMjg4XHNsbXVsdDFcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NDQyNjc5IFx0cm93ZCBcaXJvdzJcaXJvd2JhbmQyXGx0cnJvdw0KXHRzMTEzXHRycWNcdHJnYXBoMTA4XHRybGVmdDBcdHJmdHNXaWR0aDFcdHJmdHNXaWR0aEIzXHRyYXV0b2ZpdDFcdHJwYWRkbDEwOFx0cnBhZGRyMTA4XHRycGFkZGZsM1x0cnBhZGRmdDNcdHJwYWRkZmIzXHRycGFkZGZyM1x0Ymxyc2lkMTQ0NDI2NzlcdGJsbGtoZHJyb3dzXHRibGxraGRyY29sc1x0Ymxsa25vY29sYmFuZFx0YmxpbmQwXHRibGluZHR5cGUzIFxjbHZlcnRhbHRcY2xicmRydFxicmRydGJsIFxjbGJyZHJsXGJyZHJ0YmwgDQpcY2xicmRyYlxicmRydGJsIFxjbGJyZHJyXGJyZHJ0YmwgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoNDY3NVxjbHNoZHJhd25pbCBcY2VsbHg0Njc1XGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJ0YmwgXGNsYnJkcmxcYnJkcnRibCBcY2xicmRyYlxicmRydGJsIFxjbGJyZHJyXGJyZHJ0YmwgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoNDY3NVxjbHNoZHJhd25pbCBcY2VsbHg5MzUwXHJvdyBcbHRycm93DQp9XHBhcmRccGxhaW4gXGx0cnBhclxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBccGFyYXJzaWQxNDQ0MjY3OVx5dHMxMTMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ0NDI2NzkgTm8tTm90aWNlIFNlcnZpY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDQ0MjY3OSBcY2VsbCB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGluc3JzaWQxNDQ0MjY3OSBNYXJrZXQtQmFzZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDQ0MjY3OSBcY2VsbCB9XHBhcmRccGxhaW4gXGx0cnBhcg0KXHFsIFxsaTBccmkwXHNhMjQwXHNsMjg4XHNsbXVsdDFcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDQ0MjY3OSANClx0cm93ZCBcaXJvdzNcaXJvd2JhbmQzXGx0cnJvd1x0czExM1x0cnFjXHRyZ2FwaDEwOFx0cmxlZnQwXHRyZnRzV2lkdGgxXHRyZnRzV2lkdGhCM1x0cmF1dG9maXQxXHRycGFkZGwxMDhcdHJwYWRkcjEwOFx0cnBhZGRmbDNcdHJwYWRkZnQzXHRycGFkZGZiM1x0cnBhZGRmcjNcdGJscnNpZDE0NDQyNjc5XHRibGxraGRycm93c1x0Ymxsa2hkcmNvbHNcdGJsbGtub2NvbGJhbmRcdGJsaW5kMFx0YmxpbmR0eXBlMyBcY2x2ZXJ0YWx0XGNsYnJkcnQNClxicmRydGJsIFxjbGJyZHJsXGJyZHJ0YmwgXGNsYnJkcmJcYnJkcnRibCBcY2xicmRyclxicmRydGJsIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDQ2NzVcY2xzaGRyYXduaWwgXGNlbGx4NDY3NVxjbHZlcnRhbHRcY2xicmRydFxicmRydGJsIFxjbGJyZHJsXGJyZHJ0YmwgXGNsYnJkcmJcYnJkcnRibCBcY2xicmRyclxicmRydGJsIFxjbHR4bHJ0YlxjbGZ0c1dpZHRoM1xjbHdXaWR0aDQ2NzVcY2xzaGRyYXduaWwgXGNlbGx4OTM1MA0KXHJvdyBcbHRycm93fVxwYXJkXHBsYWluIFxsdHJwYXJccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXHBhcmFyc2lkMTQ0NDI2NzlceXRzMTEzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NDQyNjc5XGNoYXJyc2lkMTQ5NjAyMTEgSW50ZXJydXB0aWJsZSBTdG9yYWdlIFNlcnZpY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDQ0MjY3OSBcY2VsbCB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGluc3JzaWQxNDQ0MjY3OSBNYXJrZXQtQmFzZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE0NDQyNjc5IFxjZWxsIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHNhMjQwXHNsMjg4XHNsbXVsdDFcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NDQyNjc5IFx0cm93ZCBcaXJvdzRcaXJvd2JhbmQ0XGx0cnJvdw0KXHRzMTEzXHRycWNcdHJnYXBoMTA4XHRybGVmdDBcdHJmdHNXaWR0aDFcdHJmdHNXaWR0aEIzXHRyYXV0b2ZpdDFcdHJwYWRkbDEwOFx0cnBhZGRyMTA4XHRycGFkZGZsM1x0cnBhZGRmdDNcdHJwYWRkZmIzXHRycGFkZGZyM1x0Ymxyc2lkMTQ0NDI2NzlcdGJsbGtoZHJyb3dzXHRibGxraGRyY29sc1x0Ymxsa25vY29sYmFuZFx0YmxpbmQwXHRibGluZHR5cGUzIFxjbHZlcnRhbHRcY2xicmRydFxicmRydGJsIFxjbGJyZHJsXGJyZHJ0YmwgDQpcY2xicmRyYlxicmRydGJsIFxjbGJyZHJyXGJyZHJ0YmwgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoNDY3NVxjbHNoZHJhd25pbCBcY2VsbHg0Njc1XGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJ0YmwgXGNsYnJkcmxcYnJkcnRibCBcY2xicmRyYlxicmRydGJsIFxjbGJyZHJyXGJyZHJ0YmwgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoNDY3NVxjbHNoZHJhd25pbCBcY2VsbHg5MzUwXHJvdyBcbHRycm93DQp9XHBhcmRccGxhaW4gXGx0cnBhclxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBccGFyYXJzaWQxNDQ0MjY3OVx5dHMxMTMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ0NDI2NzlcY2hhcnJzaWQxNDk2MDIxMSBJbnRlcnJ1cHRpYmxlIFdoZWVsaW5nIFNlcnZpY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDQ0MjY3OSBcY2VsbCB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGluc3JzaWQxNDQ0MjY3OSBNYXJrZXQtQmFzZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDQ0MjY3OSANClxjZWxsIH1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHNhMjQwXHNsMjg4XHNsbXVsdDFcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NDQyNjc5IFx0cm93ZCBcaXJvdzVcaXJvd2JhbmQ1XGx0cnJvdw0KXHRzMTEzXHRycWNcdHJnYXBoMTA4XHRybGVmdDBcdHJmdHNXaWR0aDFcdHJmdHNXaWR0aEIzXHRyYXV0b2ZpdDFcdHJwYWRkbDEwOFx0cnBhZGRyMTA4XHRycGFkZGZsM1x0cnBhZGRmdDNcdHJwYWRkZmIzXHRycGFkZGZyM1x0Ymxyc2lkMTQ0NDI2NzlcdGJsbGtoZHJyb3dzXHRibGxraGRyY29sc1x0Ymxsa25vY29sYmFuZFx0YmxpbmQwXHRibGluZHR5cGUzIFxjbHZlcnRhbHRcY2xicmRydFxicmRydGJsIFxjbGJyZHJsXGJyZHJ0YmwgDQpcY2xicmRyYlxicmRydGJsIFxjbGJyZHJyXGJyZHJ0YmwgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoNDY3NVxjbHNoZHJhd25pbCBcY2VsbHg0Njc1XGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJ0YmwgXGNsYnJkcmxcYnJkcnRibCBcY2xicmRyYlxicmRydGJsIFxjbGJyZHJyXGJyZHJ0YmwgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoNDY3NVxjbHNoZHJhd25pbCBcY2VsbHg5MzUwXHJvdyBcbHRycm93DQp9XHBhcmRccGxhaW4gXGx0cnBhclxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBccGFyYXJzaWQxNDQ0MjY3OVx5dHMxMTMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ0NDI2NzlcY2hhcnJzaWQxNDk2MDIxMSBQYXJraW5nIFNlcnZpY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDQ0MjY3OSBcY2VsbCB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGluc3JzaWQxNDQ0MjY3OSBNYXJrZXQtQmFzZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDQ0MjY3OSBcY2VsbCANCn1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHNhMjQwXHNsMjg4XHNsbXVsdDFcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NDQyNjc5IFx0cm93ZCBcaXJvdzZcaXJvd2JhbmQ2XGx0cnJvdw0KXHRzMTEzXHRycWNcdHJnYXBoMTA4XHRybGVmdDBcdHJmdHNXaWR0aDFcdHJmdHNXaWR0aEIzXHRyYXV0b2ZpdDFcdHJwYWRkbDEwOFx0cnBhZGRyMTA4XHRycGFkZGZsM1x0cnBhZGRmdDNcdHJwYWRkZmIzXHRycGFkZGZyM1x0Ymxyc2lkMTQ0NDI2NzlcdGJsbGtoZHJyb3dzXHRibGxraGRyY29sc1x0Ymxsa25vY29sYmFuZFx0YmxpbmQwXHRibGluZHR5cGUzIFxjbHZlcnRhbHRcY2xicmRydFxicmRydGJsIFxjbGJyZHJsXGJyZHJ0YmwgDQpcY2xicmRyYlxicmRydGJsIFxjbGJyZHJyXGJyZHJ0YmwgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoNDY3NVxjbHNoZHJhd25pbCBcY2VsbHg0Njc1XGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJ0YmwgXGNsYnJkcmxcYnJkcnRibCBcY2xicmRyYlxicmRydGJsIFxjbGJyZHJyXGJyZHJ0YmwgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoNDY3NVxjbHNoZHJhd25pbCBcY2VsbHg5MzUwXHJvdyBcbHRycm93DQp9XHBhcmRccGxhaW4gXGx0cnBhclxxYyBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcaW50Ymxcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBccGFyYXJzaWQxNDQ0MjY3OVx5dHMxMTMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgDQpcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ0NDI2NzlcY2hhcnJzaWQxNDk2MDIxMSBMb2FuaW5nIFNlcnZpY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDQ0MjY3OSBcY2VsbCB9e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGluc3JzaWQxNDQ0MjY3OSBNYXJrZXQtQmFzZWR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNDQ0MjY3OSBcY2VsbCANCn1ccGFyZFxwbGFpbiBcbHRycGFyXHFsIFxsaTBccmkwXHNhMjQwXHNsMjg4XHNsbXVsdDFcd2lkY3RscGFyXGludGJsXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wIFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE0NDQyNjc5IFx0cm93ZCBcaXJvdzdcaXJvd2JhbmQ3XGxhc3Ryb3cgXGx0cnJvdw0KXHRzMTEzXHRycWNcdHJnYXBoMTA4XHRybGVmdDBcdHJmdHNXaWR0aDFcdHJmdHNXaWR0aEIzXHRyYXV0b2ZpdDFcdHJwYWRkbDEwOFx0cnBhZGRyMTA4XHRycGFkZGZsM1x0cnBhZGRmdDNcdHJwYWRkZmIzXHRycGFkZGZyM1x0Ymxyc2lkMTQ0NDI2NzlcdGJsbGtoZHJyb3dzXHRibGxraGRyY29sc1x0Ymxsa25vY29sYmFuZFx0YmxpbmQwXHRibGluZHR5cGUzIFxjbHZlcnRhbHRcY2xicmRydFxicmRydGJsIFxjbGJyZHJsXGJyZHJ0YmwgDQpcY2xicmRyYlxicmRydGJsIFxjbGJyZHJyXGJyZHJ0YmwgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoNDY3NVxjbHNoZHJhd25pbCBcY2VsbHg0Njc1XGNsdmVydGFsdFxjbGJyZHJ0XGJyZHJ0YmwgXGNsYnJkcmxcYnJkcnRibCBcY2xicmRyYlxicmRydGJsIFxjbGJyZHJyXGJyZHJ0YmwgXGNsdHhscnRiXGNsZnRzV2lkdGgzXGNsd1dpZHRoNDY3NVxjbHNoZHJhd25pbCBcY2VsbHg5MzUwXHJvdyB9XHBhcmQgXGx0cnBhcg0KXHFsIFxsaTBccmkwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0NDQyNjc5IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ0NDI2NzkgDQpccGFyIH1ccGFyZCBcbHRycGFyXHFsIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0NDQyNjc5IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ0NDI2NzlcY2hhcnJzaWQxNDQ0MjY3OSANClxwYXIgfVxwYXJkIFxsdHJwYXJccWwgXGZpLTcwNlxsaTIzNzFccmkyMDZcc2I3OVxzYTQ4MFxzbDIzN1xzbG11bHQxXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMjA2XGxpbjIzNzFcaXRhcDBccGFyYXJzaWQxNTg2MDY4NSB7XHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyNCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTQ0NDI2NzkgXHNlY3QgfVxzZWN0ZCBcbHRyc2VjdA0KXGxpbmV4MFxlbmRuaGVyZVxzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZnRuYmogXHBhcmRccGxhaW4gXGx0cnBhclxzMzlccWMgXGxpMFxyaTBcc2EyNDBca2VlcFxrZWVwblx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDQ0MjY3OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCANClxiXGNhcHNcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxNDk2MDIxMSBFTlNUT1IgS0FUWSBTVE9SQUdFIEFORCBUUkFOU1BPUlRBVElPTiwgTC5QLiBTVEFURU1FTlQgT0YgT1BFUkFUSU5HIENPTkRJVElPTlMNClxwYXIge1wqXGJrbWtzdGFydCBfVG9jMzg4NzgwNDV9e1wqXGJrbWtzdGFydCBfVG9jMzkyMzk1MTh9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk1IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGJcY2Fwc1xkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxNDQ0MjY3OSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAyLjBcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczk1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHg3MjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczM5XG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQ0NDI2NzkgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDE0NDQyNjc5IE9QRVJBVElORyBTVEFURU1FTlR7XCpcYmtta2VuZCBfVG9jMzg4NzgwNDV9e1wqXGJrbWtlbmQgX1RvYzM5MjM5NTE4fQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkMTQ5NjAyMTEgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMi4xXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzOTdccWogXGZpLTcyMFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4NzIwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMTQ0NDI2NzkgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxNDk2MDIxMSBUaGlzIFN0YXRlbWVudCBvZiBPcGVyYXRpbmcgQ29uZGl0aW9ucyAofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkMTQ5NjAyMTEgT3BlcmF0aW5nIFN0YXRlbWVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkMTQ5NjAyMTEgKSBkZXNjcmliZXMgaG93IEVOU1RPUiBLYXR5IFN0b3JhZ2UgYW5kIFRyYW5zcG9ydGF0aW9uLCBMLlAuICh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDE0OTYwMjExIEthdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxNDk2MDIxMSANCikgc2hhbGwgcHJvdmlkZSB0aGUgc3RvcmFnZSBhbmQgcmVsYXRlZCBodWIgc2VydmljZXMgcmVmZXJlbmNlZCBpbiBTZWN0aW9uIDQuMCBiZWxvdyBwdXJzdWFudCB0byBTZWN0aW9uIDI4NC4xMjMgb2YgdGhlIHJlZ3VsYXRpb25zIG9mIHRoZSBGZWRlcmFsIEVuZXJneSBSZWd1bGF0b3J5IENvbW1pc3Npb24sIDE4IEMuRi5SLiBcJ2E3DQogMjg0LjEyMy4gS2F0eSByZXNlcnZlcyB0aGUgcmlnaHQgdG8gbm90IG9mZmVyIG9yIGNvbW1lbmNlIGFueSBTZXJ2aWNlLCBvciB0byBkaXNjb250aW51ZSBhbnkgSW50ZXJydXB0aWJsZSBTZXJ2aWNlIGlmLCBpbiBLYXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDE0OTYwMjExIHMgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSByZWFzb25hYmxlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxNDk2MDIxMSAgZGlzY3JldGlvbiwgYW55IGltcGFpcm1lbnQgb2YgRmlybSBTZXJ2aWNlIGNvdWxkIHJlc3VsdC4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMi4yXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgRnJvbSB0aW1lIHRvIHRpbWUgaXQgbWF5IA0KYmVjb21lIG5lY2Vzc2FyeSB0byB1cGRhdGUgb3IgcmV2aXNlIHRoaXMgT3BlcmF0aW5nIFN0YXRlbWVudC4gS2F0eSBzaGFsbCBoYXZlIHRoZSByaWdodCB0byBwcm9wb3NlLCBmaWxlLCBhbmQgbWFrZSBlZmZlY3RpdmUgd2l0aCB0aGUgRkVSQyByZXZpc2lvbnMgdG8gdGhpcyBPcGVyYXRpbmcgU3RhdGVtZW50IGZvciB0aGUgcHVycG9zZSBvZiBjaGFuZ2luZyB0aGUgcHJvdmlzaW9ucyBoZXJlb2YgZWZmZWN0aXZlIGFzIHRvIGFsbCBDdXN0b21lDQpycywgZXhjZXB0IHRoYXQgS2F0eSBzaGFsbCBoYXZlIG5vIHJpZ2h0IHRvIGFsdGVyIHRoZSByYXRlcyBvciBjaGFyZ2VzIGZvciBTZXJ2aWNlcyByZW5kZXJlZCBwdXJzdWFudCB0byBhbiBleGlzdGluZyBUcmFuc2FjdGlvbiwgZXhjZXB0IHN1Y2ggYWx0ZXJhdGlvbnMgdG8gdGhlIHJhdGVzIG9yIGNoYXJnZXMgdGhhdCBhcmUgc3BlY2lmaWNhbGx5IHBlcm1pdHRlZCBwdXJzdWFudCB0byBzdWNoIFRyYW5zYWN0aW9uLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAyLjNcdGFifUFueSBjYXBpdGFsaXplZCB0DQplcm0gdXNlZCBoZXJlaW4gb3IgaW4gYW55IGFwcGVuZGl4IGF0dGFjaGVkIGhlcmV0byBidXQgbm90IG90aGVyd2lzZSBkZWZpbmVkIHNoYWxsIGhhdmUgdGhlIG1lYW5pbmcgZ2l2ZW4gc3VjaCB0ZXJtIGluIFNlY3Rpb24gMy4wIGhlcmVpbi4NClxwYXIge1wqXGJrbWtzdGFydCBfVG9jMzg4NzgwNDZ9e1wqXGJrbWtzdGFydCBfVG9jMzkyMzk1MTl9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk1IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGJcY2Fwc1xkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxNDQ0MjY3OSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAzLjBcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczk1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHg3MjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczM5XG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQ0NDI2NzkgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDE0NDQyNjc5IERFRklOSVRJT05TfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxNDk2MDIxMSB7XCpcYmtta2VuZCBfVG9jMzg4NzgwNDZ9e1wqXGJrbWtlbmQgX1RvYzM5MjM5NTE5fQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuMVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczk3XHFqIFxmaS03MjBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDcyMFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMzlcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDE0NDQyNjc5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgQWZmaWxpYXRlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCiB3aGVuIHVzZWQgaW4gcmVsYXRpb24gdG8gYSBwYXJ0aWN1bGFyIGNvcnBvcmF0aW9uLCBsaW1pdGVkIGxpYWJpbGl0eSBjb21wYW55LCBwYXJ0bmVyc2hpcCwgcHINCm9wcmlldG9yc2hpcCBvciBvdGhlciBidXNpbmVzcyBlbnRpdHksIG1lYW5zIGEgY29ycG9yYXRpb24sIGxpbWl0ZWQgbGlhYmlsaXR5IGNvbXBhbnksIHBhcnRuZXJzaGlwLCBwcm9wcmlldG9yc2hpcCBvciBvdGhlciBidXNpbmVzcyBlbnRpdHkgd2hpY2ggZGlyZWN0bHkgb3IgaW5kaXJlY3RseSBjb250cm9scywgaXMgY29udHJvbGxlZCBieSBvciBpcyB1bmRlciBhIGNvbW1vbiBjb250cm9sIHdpdGggdGhhdCBwYXJ0aWN1bGFyIGNvcnBvcmF0aQ0Kb24sIGxpYWJpbGl0eSBjb21wYW55LCBwYXJ0bmVyc2hpcCwgcHJvcHJpZXRvcnNoaXAgb3Igb3RoZXIgYnVzaW5lc3MgZW50aXR5LiBGb3IgdGhlIHB1cnBvc2VzIG9mIHRoaXMgZGVmaW5pdGlvbiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IGNvbnRyb2x9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIG1lYW5zIHRoZSBkaXJlY3Qgb3IgaW5kaXJlY3QgcmlnaHQgdG8gZWxlY3Qgb3IgY2F1c2UgdG8gYmUgZWxlY3RlZCBhIG1ham9yaXR5IG9mIHRoZSBkaXJlY3RvcnMgb2YgYSBjb3Jwb3JhdGlvbiwgb3IgY29ycmVzcG9uZGluZyBtYW5hDQpnaW5nIGJvZHkgZm9yIG90aGVyIGZvcm1zIG9mIGJ1c2luZXNzIGVudGl0eSwgdGhyb3VnaCB0aGUgb3duZXJzaGlwIG9mIHNoYXJlcyBvciBvdGhlciBlcXVpdHkgaW50ZXJlc3RzIHdoaWNoIGNhcnJ5IGZ1bGwgdm90aW5nIG9yIG9wZXJhdGlvbmFsIGNvbnRyb2wgcmlnaHRzLCBhcyBhcHBsaWNhYmxlLCBpbiBhbGwgY2lyY3Vtc3RhbmNlcy4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAzLjJcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpBY2NlcHRhYmxlIENyZWRpdCBSYXRpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBtZWFucyBhIENyZWRpdCBSYXRpbmcgb2YgYXQgbGVhc3QgXGVuZGFzaCBCQkIgYnkgUyZQIGFuZCBCYWEzIGJ5IE1vb2R5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBzLiBJZiBhIEN1c3RvbWVyIGlzIG9ubHkgcmF0ZWQgYnkgUyZQIG9yIE1vb2R5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpzLCB0aGVuIEthdHkgbWF5LCBpbiBpdHMgcmVhc29uYWJsZSBkaXNjcmV0aW9uLCB3YWl2ZSBpdHMgcmVxdWlyZW1lbnQgZm9yIGEgcmF0aW5nIGZyb20gYm90aCBTJlAgYW5kIE1vb2R5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcy4gSWYgYSBDdXN0b21lcn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyByYXRpbmcgaXMgYSBCQkItIG9yIEJhYTMgYW5kIHRoZSBvdXRsb29rIGlzIE5lZ2F0aXZlLCBLYXR5IG1heSByZXF1aXJlIGZ1cnRoZXIgYW5hbHlzaXMuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy4zXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IEJ0dX17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCiBtZWFucyBvbmUgQnJpdGlzaCBUaGVybWFsIFVuaXQgYW5kIGlzIGRlZmluZWQgYXMgdGhlIGFtb3VudCBvZiBoZWF0IHJlcXVpcmVkIHRvIHJhaXNlIHRoZSB0ZW1wZXJhdHVyZSBvZiBvbmUgKDEpIGF2b2lyZHVwb2lzIHBvdW5kIG9mIHB1cmUgd2F0ZXIgZnJvbSBmaWZ0eS1uaW5lIGRlZ3JlZXMgRmFocmVuaGVpdCAoNTl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHN1cGVyXGluc3JzaWQxMjUzMTc3OSBvfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIEYpIHRvIHNpeHR5IGRlZ3JlZXMgRmFocmVuaGVpdCAoNjB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHN1cGVyXGluc3JzaWQxMjUzMTc3OSBvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KIEYpIGF0IGEgY29uc3RhbnQgcHJlc3N1cmUgb2YgZm91cnRlZW4gYW5kIHNpeHR5LWZpdmUgaHVuZHJlZHRocyBwb3VuZHMgcGVyIHNxdWFyZSBpbmNoIGFic29sdXRlICgxNC42NSBwc2lhKS4gVG90YWwgQnR1cyBzaGFsbCBiZSBkZXRlcm1pbmVkIGJ5IG11bHRpcGx5aW5nIHRoZSB0b3RhbCB2b2x1bWUgb2YgR2FzIERlbGl2ZXJlZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaVxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IHRpbWVzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCB0aGUgR2FzIEhlYXRpbmcgVmFsdWUgZXhwcmVzc2VkIGluIEJ0dXMgcGVyIGN1YmljIGZvb3Qgb2YgR2FzIGFkanVzdGVkIG9uIGEgZHJ5IGJhc2lzLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuNFx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCkJ1c2luZXNzIERheX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQogbWVhbnMgTW9uZGF5IHRocm91Z2ggRnJpZGF5LCBleGNsdWRpbmcgRmVkZXJhbCBCYW5raW5nIEhvbGlkYXlzIChhcyBkZXRlcm1pbmVkIGJ5IHRoZSBGZWRlcmFsIFJlc2VydmUgQm9hcmQpIGluIHRoZSBVbml0ZWQgU3RhdGVzLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuNVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCkNhcGFjaXR5IERlbWFuZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIG9yIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpDRH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQogbWVhbnMgdGhlIG1heGltdW0gUXVhbnRpdHkgb2YgR2FzLCBhcyBzZXQgZm9ydGggaW4gdGhlIHJlbGV2YW50IENvbmZpcm1hdGlvbiwgdGhhdCBDdXN0b21lciBpcyBwZXJtaXR0ZWQgdG8gaGF2ZSBpbiBzdG9yYWdlIGF0IGFueSB0aW1lIGF0IHRoZSBLYXR5IFN0b3JhZ2UgRmFjaWxpdHkuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy42XHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KQ2VudHJhbCBDbG9jayBUaW1lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAgb3IgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IENDVH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIG1lYW5zIGNlbnRyYWwgZGF5bGlnaHQgdGltZSB3aGVuIGRheWxpZ2h0IHNhdmluZ3MgdGltZSBpcyBpDQpuIGVmZmVjdCBhbmQgY2VudHJhbCBzdGFuZGFyZCB0aW1lIHdoZW4gZGF5bGlnaHQgc2F2aW5ncyB0aW1lIGlzIG5vdCBpbiBlZmZlY3QuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy43XHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IENsYWltfQ0Ke1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBvciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IENsYWltc317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCiBtZWFucyBhbGwgY2xhaW1zIChpbmNsdWRpbmcsIGJ1dCBub3QgbGltaXRlZCB0bywgdGhvc2UgZm9yIG9yIHJlbGF0ZWQgdG8gcGVyc29uYWwgaW5qdXJ5LCBkZWF0aCwgb3IgcHJvcGVydHkgZGFtYWdlIG9mIGFueSBzb3J0KSwgZGFtYWdlcywgbGlhYmlsaXRpZXMsIGxvc3MNCmVzLCBmaW5lcywgcGVuYWx0aWVzLCBjYXVzZXMgb2YgYWN0aW9uIG9mIGFueSBraW5kLCBvYmxpZ2F0aW9ucyAoaW5jbHVkaW5nLCBidXQgbm90IGxpbWl0ZWQgdG8sIGNvbnRyYWN0dWFsIGxpYWJpbGl0aWVzKSwgY29zdHMsIGp1ZGdtZW50cywgaW50ZXJlc3QgYW5kIGF3YXJkcyAoaW5jbHVkaW5nIHBheW1lbnQgb2YgcmVhc29uYWJsZSBhdHRvcm5leXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSANClxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBmZWVzIGFuZCBjb3N0cyBvZiBsaXRpZ2F0aW9uKSwgb2YgYW55IGtpbmQgb3IgY2hhcmFjdGVyIChleGNlcHQgcHVuaXRpdmUgb3IgZXhlbXBsYXJ5IGRhbWFnZXMpLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuOFx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCkNvbW1vZGl0eSBDaGFyZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KIG1lYW5zIHRoZSBmZWUgd2hpY2ggaXMgdG8gYmUgcGFpZCBvbiBhIE1vbnRobHkgYmFzaXMgYW5kIHdoaWNoIGlzIHRoZSBwcm9kdWN0IG9mIChhKSB0aGUgYXBwbGljYWJsZSBDb21tb2RpdHkgUmF0ZSBmb3IgYSBTZXJ2aWNlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaVxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IHRpbWVzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IChiKSB0aGUgbnVtYmVyIG9mIE1NQnR1cyBvZiBHYXMgKGluY2x1ZGluZyBhbnkgRnVlbCkgRGVsaXZlcmVkIGJ5IHRoZSBDdXN0b21lciB0byBLYXR5IGF0IHRoZSBSZWNlaXB0IFBvaW50IG9yIERlbGl2ZXJlZCBieSBLYXR5IHRvIEN1c3RvbWVyIGF0IHRoZSBEZWxpdmVyeSBQb2ludCBkdXJpbmcgdGhlIHJlbGV2YW50IE1vbnRoLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuOVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCkNvbW1vZGl0eSBSYXRlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAgbWVhbnMgdGhlIE1vbnRobHkgcmF0ZSBwZXIgTU1CdHUgZm9yIFNlcnZpY2UgYWN0dWFsbHkgdXRpbGl6ZWQgYnkgQ3VzdG9tZXIgaW4gcmVzcGVjdCBvZiBhIFRyYW5zYWN0aW9uIGFzIGENCmdyZWVkIHRvIGJ5IEthdHkgYW5kIEN1c3RvbWVyLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuMTBcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpDb25maXJtYXRpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KIG1lYW5zIGFuIGFncmVlbWVudCBieSBhbmQgYmV0d2VlbiB0aGUgQ3VzdG9tZXIgYW5kIEthdHkgc2V0dGluZyBmb3J0aCB0aGUgdGVybXMgb2YgYSBUcmFuc2FjdGlvbiB0aGF0IGlzIHByb3ZpZGVkIGJ5IEthdHksIGFzIGFsbG93ZWQgKG9yIHVucmVzdHJpY3RlZCkgdW5kZXIgZWl0aGVyIChpKSBSUkMgYXBwcm92YWwgb3IgKGlpKSBTZWN0aW9uIDMxMSBvZiB0aGUgTg0KR1BBIGFuZCB0aGF0IGlzIGVmZmVjdGl2ZSBpbiBhY2NvcmRhbmNlIHdpdGggdGhlIE1hc3RlciBTZXJ2aWNlIEFncmVlbWVudCBhbmQgdGhpcyBPcGVyYXRpbmcgU3RhdGVtZW50Lg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuMTFcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpDb3JyZXNwb25kaW5nIFRyYW5zYWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAgc2hhbGwgaGF2ZSB0aGUgbWVhbmluZyBzZXQgZm9ydGggaW4gU2VjdGlvbiA5Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDU5OTY0NTcgMy4xfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ4NTg1OTg0IC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy4xMlx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCkNyZWRpdCBTdXBwb3J0IFByb3ZpZGVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAgbWVhbnMgdGhhdCBQYXJ0eSwgaWYgYW55LCBwcm92aWRpbmcgYSBndWFyYW50ZWUNCiBvZiB0aGUgb2JsaWdhdGlvbnMgb2YgQ3VzdG9tZXIgdW5kZXIgYSBNYXN0ZXIgU2VydmljZSBBZ3JlZW1lbnQgaW4gZmF2b3Igb2YgS2F0eSwgYXMgdGhlIGJlbmVmaWNpYXJ5IHRoZXJlb2YsIGluIGEgZm9ybSBhY2NlcHRhYmxlIHRvIEthdHkgaW4gaXRzIHJlYXNvbmFibGUganVkZ21lbnQuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy4xM1x0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCkNyZWRpdHdvcnRoeX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIG9yIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpDcmVkaXR3b3J0aGluZXNzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAgc2hhbGwgaGF2ZSBtZWFuaW5nIGFzIGFzY3JpYmVkIGluIFNlY3Rpb24gMTkuMy4xLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuMTRcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpDdXJyZW50IFZhbHVlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAgc2hhbGwgaGF2ZSB0aGUgbWVhbmluZyBhc2NyaWJlZCB0byBzdWNoIHRlcm0gaW4gU2VjdGlvbiAyMC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNzI5NDE4IDd9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE3Mjk0MThcY2hhcnJzaWQ2NzA5Mzg0ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgb2YgdGhlIE9wZXJhdGluZyBTdGF0ZW1lbnQuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy4xNVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCkN1c3RvbWVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCiBtZWFucyBhbiBpbmRpdmlkdWFsIG9yIGVudGl0eSBleGVjdXRpbmcgYSBNYXN0ZXIgU2VydmljZSBBZ3JlZW1lbnQgd2l0aCBLYXR5IGFuZCB0aGF0IGhvbGRzIGxhd2Z1bCByaWdodHMgaW4gYW5kL29yIGxlZ2FsIHRpdGxlIHRvIHRoZSBHYXMgdGgNCmF0IGlzIHRoZSBzdWJqZWN0IG9mIFNlcnZpY2VzIHJlbmRlcmVkIHVuZGVyIGEgQ29uZmlybWF0aW9uIGVudGVyZWQgaW50byBwdXJzdWFudCB0byBzdWNoIE1hc3RlciBTZXJ2aWNlIEFncmVlbWVudC4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAzLjE2XHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KQ3VzdG9tZXIgR3Jvc3MgSW52ZW50b3J5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAgbWVhbnMgdGhlIHN1bSBvZiBhbGwgQ3VzdG9tZXIgSW52ZW50b3JpZXMsIHRha2luZyBpbnRvIGFjY291bnQgYWxsIFRyYW5zYWN0aW9ucyBvZiBDdXN0b21lci4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAzLjE3XHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KQ3VzdG9tZXIgR3JvdXB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBtZWENCm5zIEN1c3RvbWVyLCBpdHMgcGFydG5lcnMgYW5kIEFmZmlsaWF0ZXMsIGFuZCB0aGUgb2ZmaWNlcnMsIGRpcmVjdG9ycywgcGFydG5lcnMsIHNoYXJlaG9sZGVycywgbWVtYmVycywgbWFuYWdlcnMsIGVtcGxveWVycywgYWdlbnRzLCByZXByZXNlbnRhdGl2ZXMsIGFuZCBjb250cmFjdG9ycyBhbmQgc3ViY29udHJhY3RvcnMgKG9mIGV2ZXJ5IHRpZXIpIG9mIGVhY2ggb2YgdGhlIGZvcmVnb2luZy4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAzLjE4XHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KQ3VzdG9tZXIgSW52ZW50b3J5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAgbWVhbnMsIGluIHJlc3BlY3Qgb2YgZWFjaCBzZXBhcmF0ZSBUcmFuc2FjdGlvbiwgdGhlIFF1YW50aXRpZXMgb2YgR2FzIGhlbGQgYXQgdGhlIEthdHkgU3RvcmFnZSBGYWNpbGl0eSBmb3IgQ3VzdG9tZXJ9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KcyBhY2NvdW50LCB3aGljaCBLYXR5IHNoYWxsIGFjY291bnQgZm9yIHVzaW5nIHJlY29nbml6ZWQgaW5kdXN0cnkgc3RhbmRhcmRzLCB3aGljaCBhY2NvdW50aW5nIHNoYWxsIGJlIGRlZW1lZCBjb25jbHVzaXZlbHkgY29ycmVjdCBhYnNlbnQgbWFuaWZlc3QgZXJyb3IuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy4xOVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCkN1c3RvbWVyIFRheGVkIEludmVudG9yeX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIHNoYWxsIGhhdmUgdGhlIG1lYW5pbmcgc2V0IGZvcnRoIGluIFNlY3Rpb24gMTcuMS4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAzLjIwXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KRGFpbHkgUmVmZXJlbmNlIFByaWNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAgbWVhbnMgdGhlIG1pZHBvaW50IHByaWNlIGZvciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgRWFzdC1Ib3VzdG9uLUthdHkgXGVuZGFzaCAgS2F0eSBSZWZlcmVuY2UgUHJpY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KIGFzIHJlcG9ydGVkIGluIFBsYXR0cyBHYXMgRGFpbHkgKG9yIGFueSBzdWNjZXNzb3IgcHVibGljYXRpb24pLiBJZiBhdCBhbnkgdGltZSB0aGUgZGFpbHkgbWlkcG9pbnQgcHJpY2VzIGZvciB0aGUgYXBwbGljYWJsZSByZWZlcmVuY2UgcG9pbnRzIGFyZSBub3QgcHVibGlzaGVkIGluIHRoZSBtYW5uZXIgcHJldmlvdXNseSBkZXNjcmliZWQsIHRoZW4gS2F0eSBzaGFsbCBwcm92aWRlIG5vdGljZSAofXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFN1YnN0aXR1dGUgUmVmZXJlbmNlIFByaWNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCikgdGhlcmVvZiB0byBDdXN0b21lciwgaW4gd2hpY2ggZXZlbnQgdGhlIFBhcnRpZXMgc2hhbGwgYXR0ZW1wdCB0byBhZ3JlZSB1cG9uIGEgU3Vic3RpdHV0ZSBSZWZlcmVuY2UgUHJpY2UuIFRoZSBTdWJzdGl0dXRlIFJlZmVyZW5jZSBQcmljZSBzaGFsbCB0aGVuIGJlY29tZSB0aGUgRGFpbHkgUmVmZXJlbmNlIFByaWNlLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuMjFcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpEZWZhdWx0IFF1YW50aXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgRGVmYXVsdGVkIFRyYW5zYWN0aW9uLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIGFuZCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgRGVmYXVsdCBOb3RpY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBzaGFsbCANCmVhY2ggaGF2ZSB0aGUgbWVhbmluZyBhcyBhc2NyaWJlZCB0byBlYWNoIHN1Y2ggdGVybSBpbiBTZWN0aW9uIDkuMy4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAzLjIyXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KRGVsaXZlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IERlbGl2ZXJlZCx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBvciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgRGVsaXZlcnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBtZWFucyB0aGUgcGh5c2ljYWwgdHJhbnNmZXIgb2YgR2FzIHRvIG9yIGZyb20gdGhlIEthdHkgU3RvcmFnZSBGYWNpbGl0eS4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAzLjIzXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KRGVsaXZlcnkgRGVmYXVsdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIG1lYW5zIGEgUGFydHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IHMgdW5leGN1c2VkIGZhaWx1cmUgZHVyaW5nIGFueSBHYXMgRGF5IG9yIA0KTW9udGggb2YgdGhlIFRyYW5zYWN0aW9uIFBlcmlvZCB0byBkaXNjaGFyZ2UgaXRzIG9ibGlnYXRpb25zLCBhcyBzcGVjaWZpZWQgaW4gYSBDb25maXJtYXRpb24sIHRvIERlbGl2ZXIgR2FzIHRvIHRoZSBvdGhlciBQYXJ0eSBhdCB0aGUgUmVjZWlwdCBQb2ludCBvciB0aGUgRGVsaXZlcnkgUG9pbnQsIGFzIGFwcGxpY2FibGUuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy4yNFx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCkRlbGl2ZXJ5IFBvaW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAgbWVhbnMgdGhlIHBvaW50IGF0IHdoaWNoIEthdHkgRGVsaXZlcnMgR2FzIHRvIEN1c3RvbWVyIGZvciBDdXN0b21lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfQ0Ke1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyBhY2NvdW50LiBVbmxlc3Mgb3RoZXJ3aXNlIHN0YXRlZCBpbiB0aGUgYXBwbGljYWJsZSBDb25maXJtYXRpb24sIHRoZSBEZWxpdmVyeSBQb2ludCB3aWxsIGJlIHRoZSBTdG9yYWdlIFdpdGhkcmF3YWwgUG9pbnQuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy4yNVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCkRlbWFuZCBDaGFyZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBtZWFucyB0aGUgZmVlIHdoaWNoIGlzIHRvIGJlIHBhaWQgb24gYSBNb250aGx5IGJhc2lzIGFuZCB3aGljaCBpcyB0aGUgcHJvZHVjdCBvZiAoYSkgdGhlIGFwcGxpY2FibGUgRGVtYW5kIFJhdGUgZm9yIHNlcnZpY2UgfQ0Ke1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGlcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCB0aW1lcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgKGIpIHRoZSBudW1iZXIgb2YgTU1CdHVzIG9mIHN1Y2ggU2VydmljZSBhdmFpbGFibGUgdG8gdGhlIEN1c3RvbWVyIGZvciB0aGUgcmVsZXZhbnQgTW9udGguDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy4yNlx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCkRlbWFuZCBSYXRlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAgbWVhbnMgdGhlIE1vbnRobHkgcmF0ZSBwZXIgTU1CdHUgZm9yIGEgU2VydmljZSBhdmFpbGFibGUgdG8gQ3VzdG9tZXIgaW4gcmVzcGVjdCBvZiBhIFRyYW5zYWN0aW9uIGFzIGFncmVlZCB0byBieSBLYXR5IGFuZA0KIEN1c3RvbWVyIGFuZCBzdGF0ZWQgaW4gdGhlIGFwcGxpY2FibGUgQ29uZmlybWF0aW9uLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuMjdcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpEZXNpZ25hdGVkIFBpcGVsaW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCiBtZWFucyB0aGUgZGVzaWduYXRlZCBwaXBlbGluZSBpbiBhIENvbmZpcm1hdGlvbiBvciBOb21pbmF0aW9uIHVzZWQgYnkgdGhlIEN1c3RvbWVyIHRvIChhKSBEZWxpdmVyIEdhcyB0byB0aGUgS2F0eSBTdG9yYWdlIEZhY2lsaXR5IGF0IHRoZSBSZWNlaXB0IFBvaW50OyBvciAoYikgUmVjZWl2ZSBHYXMgZnJvbSB0aGUgS2F0eSBTdG9yYWdlIEZhY2lsaXR5IGF0IHRoZSBEZWxpdmVyeSBQb2ludC4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAzLjI4XHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KRWFybHkgVGVybWluYXRpb24gRGF0ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIG1lYW5zIHRoZSBkYXRlIGRldGVybWluZWQgaW4gYWNjb3JkYW5jZSB3aXRoIFNlY3Rpb24gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDE0OTYwMjExIDIwLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1Mjg1MjIxIDQuMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1Mjg1MjIxXGNoYXJyc2lkMTQ5NjAyMTEgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkMTQ5NjAyMTEgb2YgdGhlIE9wZXJhdGluZyBTdGF0ZW1lbnQuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy4yOVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCkV2ZW50IG9mIERlZmF1bHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBtZWFucyB0aGUgb2NjdXJyZW5jZSBhdCBhbnkgdGltZSB3aXRoIHJlc3BlY3QgdG8gYSBQYXJ0eSBvZiBhbnkgb2YgdGhlIGV2ZW50cyBkZXRhaWxlZCBpbiBTZWN0aW9uIDIwLn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkNzQzNjA4IDJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIGJlbG93Lg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuMzBcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpFeGNlc3MgTm9taW5hdGlvbnMgQ2hhcmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCiBtZWFucyB0aGUgZmVlIHdoaWNoIGlzIHRvIGJlIHBhaWQgb24gYSBNb250aGx5IGJhc2lzIGFuZCB3aGljaCBpcyB0aGUgcHJvZHVjdCBvZiAoYSkgdGhlIGFwcGxpY2FibGUgRXhjZXNzIE5vbWluYXRpb24gUmF0ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGlcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCB0aW1lcw0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkMTQ5NjAyMTEgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy4zMVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxNDk2MDIxMSANCihiKSB0aGUgbnVtYmVyIG9mIE1NQnR1cyBhY2NlcHRlZCBieSBLYXR5IHRoYXQgZXhjZWVkIHRoZSBNRElRIG9yIE1EV1F9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSAsIG9yIE1ERFEgb3IgTURSUSx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDE0OTYwMjExICBhdmFpbGFibGUgdG8gQ3VzdG9tZXIgdW5kZXIgdGhlIHJlbGV2DQphbnQgQ29uZmlybWF0aW9uLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuMzJcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpFeGNlc3MgTm9taW5hdGlvbnMgUmF0ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQogbWVhbnMgdGhlIGZlZSBwZXIgTU1CdHUgc3RhdGVkIGluIHRoZSBhcHBsaWNhYmxlIENvbmZpcm1hdGlvbiB0aGF0IHdpbGwgYXBwbHkgdG8gYWxsIE5vbWluYXRpb25zIGFjY2VwdGVkIGJ5IEthdHkgdGhhdCBleGNlZWQgdGhlIE1ESVEgb3IgTURXUX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1ICwgb3IgTUREUSBvciBNRFJRLH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBhdmFpbGFibGUgdG8gQ3VzdG9tZXIgdW5kZXIgdGhhdCBDb25maXJtYXRpb24uDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy4zM1x0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBFeHQNCmVuZGVkIExvYW5pbmcgQ2hhcmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCiBtZWFucyB0aGUgZmVlIHdoaWNoIGlzIHRvIGJlIHBhaWQgb24gYSBNb250aGx5IGJhc2lzIGJ1dCB3aGljaCBpcyB0byBjb25zaXN0IG9mIHRoZSBhZ2dyZWdhdGUgc3VtIG9mIHRoZSBkYWlseSBjaGFyZ2VzIGR1cmluZyBzdWNoIE1vbnRoLCB3aXRoIGVhY2ggc3VjaCBkYWlseSBjaGFyZ2UgY2FsY3VsYXRlZCBhcyB0aGUgcHJvZHVjdCBvZiAoYSkgdGhlIGFwcGxpY2FibGUgZGFpbHkgcmF0ZSAoYikgdGhlIG4NCnVtYmVyIG9mIE1NQnR1cyB0aGF0IEN1c3RvbWVyIGhhcyBmYWlsZWQgdG8gcmUtRGVsaXZlciB0byBLYXR5IHB1cnN1YW50IHRvIGEgVHJhbnNhY3Rpb24gZm9yIExvYW5pbmcgU2VydmljZSBUcmFuc2FjdGlvbi4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAzLjM0XHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KRXh0ZW5kZWQgU3RvcmFnZSBDaGFyZ2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBtZWFucyB0aGUgZmVlIHdoaWNoIGlzIHRvIGJlIHBhaWQgb24gYSBNb250aGx5IGJhc2lzIGJ1dCB3aGljaCBpcyB0byBjb25zaXN0IG9mIHRoZSBhZ2dyZWdhdGUgc3VtIG9mIGRhaWx5IGMNCmhhcmdlcyBkdXJpbmcgc3VjaCBNb250aCwgd2l0aCBlYWNoIHN1Y2ggZGFpbHkgY2hhcmdlIGNhbGN1bGF0ZWQgYXMgdGhlIHByb2R1Y3Qgb2YgKGEpIHRoZSBhcHBsaWNhYmxlIGRhaWx5IHJhdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgdGltZXMgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KKGIpIHRoZSBudW1iZXIgb2YgTU1CdHVzIHJlbWFpbmluZyBpbiB0aGUgS2F0eSBTdG9yYWdlIEZhY2lsaXR5IG9uIGVhY2ggc3VjaCBHYXMgRGF5IGFmdGVyIHRoZSB0ZXJtaW5hdGlvbiBvZiB0aGUgYXBwbGljYWJsZSBUcmFuc2FjdGlvbiBQZXJpb2QgKGluY2x1ZGluZyB0aGUgR2FzIERheSBvbiB3aGljaCBzdWNoIEdhcyBpcyBmaW5hbGx5IHdpdGhkcmF3bikuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy4zNVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBGRVJDfQ0Ke1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBtZWFucyB0aGUgRmVkZXJhbCBFbmVyZ3kgUmVndWxhdG9yeSBDb21taXNzaW9uIG9yIGFueSBzdWNjZXNzb3IgYWdlbmN5Lg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuMzZcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpGaW5hbmNpYWwgQXNzdXJhbmNlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIG1lYW5zIGVpdGhlciAoYSkgcHJlcGF5bWVudCBpbiBjYXNoIChVLlMuIGRvbGxhcnMpIGZvciBTZXJ2aWNlcyBvbiB0ZXJtcyBzYXRpc2ZhY3RvDQpyeSB0byBLYXR5LCB3aXRoIHN1Y2ggY2FzaCBiZWluZyBwbGFjZWQgaW4gYSBzZWdyZWdhdGVkLCBpbnRlcmVzdC1iZWFyaW5nIGVzY3JvdyBhY2NvdW50IGF0IGEgUXVhbGlmaWVkIEluc3RpdHV0aW9uIGluIHRoZSBuYW1lIG9mIEN1c3RvbWVyIGFuZCBwbGVkZ2VkIHRvIEthdHkgcHVyc3VhbnQgdG8gYW4gYWNjb3VudCBjb250cm9sIGFncmVlbWVudCwgd2l0aCBpbnRlcmVzdCBhbmQgZXhwZW5zZXMgb24gc3VjaCBhY2NvdW50IGFjY3J1aW5nIHQNCm8NCiB0aGUgYWNjb3VudCBvZiBDdXN0b21lcjsgKGIpIGEgc3RhbmRieSBpcnJldm9jYWJsZSBsZXR0ZXIgb2YgY3JlZGl0IGlzc3VlZCBieSBhIFF1YWxpZmllZCBJbnN0aXR1dGlvbjsgKGMpIGEgZ3VhcmFudGVlIGJ5IENyZWRpdCBTdXBwb3J0IFByb3ZpZGVyIHRoYXQgc2F0aXNmaWVzIHRoZSBjcmVkaXQgcmVxdWlyZW1lbnRzIG9mIEthdHkgaW4gYSBmb3JtIGFjY2VwdGFibGUgdG8gS2F0eSBpbiBpdHMgcmVhc29uYWJsZSBkaXNjcmV0aW9uOyAoZA0KKSBncmFudCBvZiBhIGZpcnN0IHByaW9yaXR5IHNlY3VyaXR5IGludGVyZXN0IGluIGNvbGxhdGVyYWwgc2F0aXNmYWN0b3J5IHRvIEthdHk7IG9yIChlKSBhbm90aGVyIGZvcm0gb2YgYXNzdXJhbmNlIHNhdGlzZmFjdG9yeSB0byBLYXR5IGluIGl0cyByZWFzb25hYmxlIGRpc2NyZXRpb24uDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy4zN1x0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCkZpcm0gQ3VzdG9tZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBtZWFucyBhIEN1c3RvbWVyIHdobyB1dGlsaXplcyBTZXJ2aWNlcyB1bmRlciBhIENvbmZpcm1hdGlvbiBmb3IgRmlybSBTdG9yYWcNCmUgU2VydmljZSwgTm8tTm90aWNlIFNlcnZpY2Ugb3IgRmlybSBXaGVlbGluZyBTZXJ2aWNlLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuMzhcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDE1ODcxNTQxIEZpcm0NCn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIG9yIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDE1ODcxNTQxIEZpcm0gU2VydmljZX17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAgcmVmZXJzIHRvIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpGaXJtIFN0b3JhZ2UgU2VydmljZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KTm8tTm90aWNlIFNlcnZpY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBvciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KRmlybSBXaGVlbGluZyBTZXJ2aWNlLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy4zOVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCkZpcm0gU3RvcmFnZSBTZXJ2aWNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAgb3IgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IEZTU317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIGlzIGEgU2VydmljZSAob2YgdGhlIGhpZ2hlc3QgcHJpb3JpdHkpIHRoYXQgYWxsb3dzIGEgQ3VzdG9tZXIgDQp0byBpbmplY3QsIHdpdGhkcmF3LCBhbmQvb3Igc3RvcmUgR2FzIGF0IHRoZSBLYXR5IFN0b3JhZ2UgRmFjaWxpdHkgZHVyaW5nIGEgc3RhdGVkIHBlcmlvZCBvZiB0aW1lLCBzdWJqZWN0IHRvIHRoZSByaWdodHMsIG9ibGlnYXRpb25zLCBhbmQgbGltaXRhdGlvbnMgc3RhdGVkIGluIHRoZSBhcHBsaWNhYmxlIFRyYW5zYWN0aW9uIERvY3VtZW50KHMpLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuNDBcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpGaXJtIFdoZWVsaW5nIFNlcnZpY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBpcyBhIFNlcnZpY2UgKG9mIHRoZSBoaWdoZXN0IHByDQppb3JpdHkpIHdoZXJlYnkgS2F0eSB1c2VzIGl0cyBpbnRlcmNvbm5lY3Rpb24gZmFjaWxpdGllcyBiZXR3ZWVuIG11bHRpcGxlIHBpcGVsaW5lcyB0byBmYWNpbGl0YXRlIHRyYW5zZmVycyBvZiBHYXMgYnkgQ3VzdG9tZXIgZnJvbSBvbmUgcGlwZWxpbmUgdG8gYW5vdGhlci4gSXQgaW52b2x2ZXMgdGhlIERlbGl2ZXJ5IG9mIGEgc3BlY2lmaWVkIFF1YW50aXR5IG9mIEdhcyBieSBDdXN0b21lciB0byBLYXR5IGF0IGEgUmVjZWlwdCBQb2ludCwgYW4NCmQgS2F0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IHMgc3Vic2VxdWVudCBEZWxpdmVyeSBvZiBhIHRoZXJtYWxseSBlcXVpdmFsZW50IFF1YW50aXR5IG9mIEdhcywgbGVzcyBmdWVsLCBpZiBhbnksIHRvIEN1c3RvbWVyIGF0IGEgRGVsaXZlcnkgUG9pbnQuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy40MVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCkZvcmNlIE1hamV1cmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBoYXMgdGhlIG1lYW5pbmcgcHJvdmlkZWQgaW4gU2VjdGlvbiAyMS4wIG9mIHRoaXMgT3BlcmF0aW5nIFN0YXRlbWVudC4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAzLjQyXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IEZ1ZWx9DQp7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIG1lYW5zIGEgUXVhbnRpdHkgb2YgR2FzLCBleHByZXNzZWQgYXMgYSANCnBlcmNlbnRhZ2Ugb2YgTU1CdHVzIG9mIEdhcyBpbmplY3RlZCwgd2l0aGRyYXduIG9yIHRyYW5zcG9ydGVkIGludG8gdGhlIEthdHkgU3RvcmFnZSBGYWNpbGl0eSB0aGF0IEN1c3RvbWVyIGFncmVlcyB0byBwcm92aWRlIHRvIEthdHksIGluIHJlc3BlY3Qgb2YgU2VydmljZXMgdG8gYmUgcHJvdmlkZWQgdW5kZXIgYSBUcmFuc2FjdGlvbiwgdG8gYmUgdXRpbGl6ZWQgYXMgZnVlbCBpbiBjb25uZWN0aW9uIHdpdGggdGhvc2UgU2VydmljZXMuDQoNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAzLjQzXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IEdhc317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAgbWVhbnMgbmF0dXJhbCBHYXMgb2YgYSBxdWFsaXR5IGF0IGxlYXN0IGVxdWFsIHRvIHRoZSBxdWFsaXR5IHNwZWNpZmllZCBpbiBTZWN0aW9uIDF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ3NDM2MDggMH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IC4wIG9mIHRoaXMgT3BlcmF0aW5nIFN0YXRlbWVudC4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAzLjQ0XHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KR2FzIERheX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIG1lYW5zIGEgcGVyaW9kIG9mIHR3ZW50eS1mb3VyICgyNCkgY29uc2VjdXRpdmUgaG91cnMsIGJlZ2lubmluZyBhbmQgZW5kaW5nIGF0IDk6MDAgQS5NLiBDQ1QgaW5jbHVkaW5nIFNhdHVyZGF5cywgU3VuZGF5cywgYW5kDQogRmVkZXJhbCBCYW5raW5nIEhvbGlkYXlzLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuNDVcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpIZWF0aW5nIFZhbHVlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCiBtZWFucyB0aGUgZ3Jvc3MgaGVhdGluZyB2YWx1ZSBvbiBhIGRyeSBiYXNpcywgbWVhc3VyZWQgaW4gQnR1LCBwcm9kdWNlZCBieSBjb21idXN0aW9uIGluIGFpciBvZiBvbmUgKDEpIGN1YmljIGZvb3Qgb2YgYW5oeWRyb3VzIGdhcyBhdCBhIHRlbXBlcmF0dXJlIG9mIHNpeHR5IGRlZ3JlZXMgRmFocmVuaGVpdCAoNjB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHN1cGVyXGluc3JzaWQxMjUzMTc3OSBvfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIEYpIGFuZCBhIGNvbnN0YW50IHByZXNzdXJlIG9mIGYNCm91cnRlZW4gYW5kIHNpeHR5LWZpdmUgaHVuZHJlZHRocyBwb3VuZHMgcGVyIHNxdWFyZSBpbmNoIGFic29sdXRlICgxNC42NSBwc2lhKSwgdGhlIGFpciBiZWluZyBhdCB0aGUgc2FtZSB0ZW1wZXJhdHVyZSBhbmQgcHJlc3N1cmUgYXMgdGhlIEdhcywgYWZ0ZXIgdGhlIHByb2R1Y3RzIG9mIGNvbWJ1c3Rpb24gYXJlIGNvb2xlZCB0byB0aGUgaW5pdGlhbCB0ZW1wZXJhdHVyZSBvZiB0aGUgR2FzIGFuZCBhaXIsIGFuZCBhZnRlciBjb25kZW5zYXRpbw0KbiBvZiB0aGUgd2F0ZXIgZm9ybWVkIGJ5IGNvbWJ1c3Rpb24uDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy40Nlx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCkludGVycnVwdGlibGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBtZWFucyB0aGF0IHRoZSBpbmplY3Rpb24sIHdpdGhkcmF3YWwsIHBhcmtpbmcsIGxvYW5pbmcgYW5kIHN0b3JhZ2Ugb2YgQ3VzdG9tZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IHMgR2FzLCB3aGljaCBpcyBzdWJqZWN0IHRvIGludGVycnVwdGlvbiBhdCBhbnkgdGltZSBieSBLYXR5LCB3aXRob3V0IGFueSBsaWFiaWxpdHkgd2hhdHNvZXZlci4gQW55IFNlcnZpY2UgZGVzaWduYXRlZCBhcyBJbnRlDQpycnVwdGlibGUgc2hhbGwgaGF2ZSB0aGUgcHJpb3JpdHkgc3BlY2lmaWVkIGluIFNlY3Rpb24gNy4wIG9mIHRoaXMgT3BlcmF0aW5nIFN0YXRlbWVudC4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAzLjQ3XHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KSW50ZXJydXB0aWJsZSBDdXN0b21lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIG1lYW5zIGEgQ3VzdG9tZXIgd2hvIHV0aWxpemVzIFNlcnZpY2VzIHVuZGVyIGEgQ29uZmlybWF0aW9uIGZvciBJbnRlcnJ1cHRpYmxlIFNlcnZpY2UocykuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy40OFx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCkludGVycnVwdGlibGUgU3RvcmFnZSBTZXJ2aWNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAgb3IgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IElTU317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIGlzIGEgU2VydmljZQ0KIChzdWJqZWN0IHRvIGludGVycnVwdGlvbiBhdCBhbnkgdGltZSkgdGhhdCBhbGxvd3MgQ3VzdG9tZXIgdG8gaW5qZWN0LCB3aXRoZHJhdywgYW5kL29yIHN0b3JlIEdhcyBhdCB0aGUgS2F0eSBTdG9yYWdlIEZhY2lsaXR5IGZvciBhIHN0YXRlZCBwZXJpb2Qgb2YgdGltZSwgc3ViamVjdCB0byB0aGUgb2JsaWdhdGlvbnMgYW5kIGxpbWl0YXRpb25zIHN0YXRlZCBpbiB0aGUgYXBwbGljYWJsZSBUcmFuc2FjdGlvbiBEb2N1bWVudChzKS4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAzLjQ5XHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KSW50ZXJydXB0aWJsZSBXaGVlbGluZyBTZXJ2aWNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCiBpcyBhbiBJbnRlcnJ1cHRpYmxlIFNlcnZpY2Ugd2hlcmVieSBLYXR5IHVzZXMgaXRzIGludGVyY29ubmVjdGlvbiBmYWNpbGl0aWVzIGJldHdlZW4gbXVsdGlwbGUgcGlwZWxpbmVzIHRvIGZhY2lsaXRhdGUgdHJhbnNmZXJzIG9mIEdhcyBieSBDdXN0b21lciBmcm9tIG9uZSBwaXBlbGluZSB0byBhbm90aGVyLiBJdCBpbnZvbHZlcyB0aGUgRGVsaXZlcnkgb2YgYSBzcGVjaWZpZWQgUXVhbnRpdHkgb2YgRw0KYXMgYnkgQ3VzdG9tZXIgdG8gS2F0eSBhdCBhIFJlY2VpcHQgUG9pbnQsIGFuZCBLYXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpzIHN1YnNlcXVlbnQgRGVsaXZlcnkgb2YgYSB0aGVybWFsbHkgZXF1aXZhbGVudCBRdWFudGl0eSBvZiBHYXMsIGxlc3MgZnVlbCwgaWYgYW55LCB0byBDdXN0b21lciBhdCBhIERlbGl2ZXJ5IFBvaW50Lg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuNTBcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpJbnZlbnRvcnkgQ2hhcmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAgbWVhbnMgdGhlIGZlZSB3aGljaCBpcyB0byBiZSBwYWlkIG9uIGEgTW9udGhseSBiYXNpcyBhbmQgd2hpY2ggaXMgdGgNCmUgcHJvZHVjdCBvZiAoYSkgdGhlIGFwcGxpY2FibGUgSW52ZW50b3J5IFJhdGUgZm9yIEludGVycnVwdGlibGUgU3RvcmFnZSBTZXJ2aWNlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaVxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IHRpbWVzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCihiKSB0aGUgbnVtYmVyIG9mIE1NQnR1cyBvZiBzdWNoIEludGVycnVwdGlibGUgU3RvcmFnZSBTZXJ2aWNlIGF2YWlsYWJsZSB0byB0aGUgQ3VzdG9tZXIgZm9yIHRoZSByZWxldmFudCBHYXMgRGF5IG9yIE1vbnRoIChhcyBhcHBsaWNhYmxlKSB0aW1lcyAoYykgdGhlIG51bWJlciBvZiBHYXMgRGENCnlzIGR1cmluZyB3aGljaCBzdWNoIE1NQnR1cyByZW1haW5zIGluIHRoZSBLYXR5IFN0b3JhZ2UgRmFjaWxpdHkgZm9yIHRoZSByZWxldmFudCBNb250aCwgaWYgc3VjaCBmZWUgaXMgc3RhdGVkIG9uIGEgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBwZXIgR2FzIERheX17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAgYmFzaXMsIG9yIG9uZSAoMSksIG9yIGlmIHN1Y2ggZmVlIGlzIHN0YXRlZCBvbiBhIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBwZXIgTW9udGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBiYXNpcy4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAzLjUxXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KSW52ZW50b3J5IFJhdGV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBtZWFucyB0aGUgRGFpbHkgb3IgTW9udGhseSByYXRlIHBlciBNTUJ0dQ0KIGZvciBJbnRlcnJ1cHRpYmxlIFN0b3JhZ2UgU2VydmljZSBhdmFpbGFibGUgdG8gQ3VzdG9tZXIgaW4gcmVzcGVjdCBvZiBhIFRyYW5zYWN0aW9uIGFzIGFncmVlZCB0byBieSBLYXR5IGFuZCBDdXN0b21lciBhcyBzdGF0ZWQgaW4gdGhlIGFwcGxpY2FibGUgQ29uZmlybWF0aW9uLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuNTJcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpLYXR5IEdyb3VwfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCiBtZWFucyBLYXR5LCBpdHMgcGFydG5lcnMgYW5kIEFmZmlsaWF0ZXMsIGFuZCB0aGUgb2ZmaWNlcnMsIGRpcmVjdG9ycywgcGFydG5lcnMsIHNoYXJlaG9sZGVycywgc3RvY2tob2xkZXJzLCBtZW1iZXJzLCBtYW5hZ2VycywgZW1wbG95ZWVzLCBhZ2VudHMsIHJlcHJlc2VudGF0aXZlcyBhbmQgY29udHJhY3RvcnMgYW5kIHN1YmNvbnRyYWN0b3JzIChvZiBldmVyeSB0aWVyKSBvZiBlYWNoIG9mIHRoZSBmb3JlZ29pbmcuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy41M1x0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCkthdHkgU3RvcmFnZSBGYWNpbGl0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIG9yIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBTdG9yYWdlIEZhY2lsaXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCiBtZWFucyB0aGUgdW5kZXJncm91bmQgR2FzIHN0b3JhZ2UgcmVzZXJ2b2lyIGtub3duIGFzIHRoZSBLYXR5IEh1YiBhbmQgR2FzIFN0b3JhZ2UgRmFjaWxpdHkgb3duZWQgYnkgS2F0eSwgdG9nZXRoZXIgd2l0aCBjZXJ0YWluIGFzc29jaWF0ZWQgbGFuZHMsIGluamVjdGlvbiB3ZWxscywgd2l0aGRyYXdhbCB3ZWxscywgYW5kIG90aGVyIHN0b3JhZ2UgYW5kIHBpcGVsaW5lIGZhY2lsaXRpZXMsIGxvDQpjYXRlZCBuZWFyIEthdHksIEZvcnQgQmVuZCBDb3VudHksIFRleGFzIGhhdmluZyBhIHBoeXNpY2FsIGFkZHJlc3Mgb2Z9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMzg0NTI3MFxjaGFycnNpZDEzODQ1MjcwICAyNTk1OSBXZXN0aGVpbWVyIFBrd3ksIEthdHksIFRYIDc3NDk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IC4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAzLjU0XHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KTG9hbmVkIFF1YW50aXRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KIG1lYW5zLCBpbiByZXNwZWN0IG9mIGVhY2ggVHJhbnNhY3Rpb24gZm9yIExvYW5pbmcgU2VydmljZSwgdGhlIFF1YW50aXRpZXMgb2YgR2FzIGxvYW5lZCB0byBDdXN0b21lciBieSBLYXR5IHVuZGVyIGVhY2ggc3VjaCBMb2ENCm5pbmcgU2VydmljZSBUcmFuc2FjdGlvbiwgd2hpY2ggS2F0eSBzaGFsbCBhY2NvdW50IGZvciB1c2luZyByZWNvZ25pemVkIGluZHVzdHJ5IHN0YW5kYXJkcywgd2hpY2ggYWNjb3VudGluZyBzaGFsbCBiZSBkZWVtZWQgY29uY2x1c2l2ZWx5IGNvcnJlY3QgYWJzZW50IG1hbmlmZXN0IGVycm9yLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuNTVcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpMb2FuaW5nIFNlcnZpY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBpcyBhbiBJbnRlcnJ1cHRpYmxlIFNlcnZpY2UgdGhhdCBhbGxvd3MgQ3VzdG9tZXIgdG8gcmVjZWl2ZSBhIFF1YW50aXR5IG9mIEdhcyBmcm9tIEthdHkgZm9yIEN1c3RvbWVyfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBzIHNob3J0LXRlcm0gdXNlIGFuZCB0aGVuIHJldHVybiBhIHRoZXJtYWxseSBlcXVpdmFsZW50IFF1YW50aXR5IG9mIEdhcyBhdCBhIHNwZWNpZmllZCB0aW1lIGFuZCBkYXRlLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuNTZcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpNYXN0ZXIgU2VydmljZSBBZ3JlZW1lbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBtZWFucyB0aGUgTWFzdGVyIFNlcnZpY2UgQWdyZWVtZW50IGV4ZWN1dGVkIGJ5IEN1c3RvbWVyIGFuZCBLYXR5ICh0b2dldGhlciB3aXRoIGFsbCBhdHRhY2htZW50cw0KIHRoZXJldG8pIHdoaWNoIHNoYWxsIGdvdmVybiBhbGwgQ29uZmlybWF0aW9ucyBhbmQgVHJhbnNhY3Rpb25zIGFuZCB3aGljaCBpcyBoZXJlYnkgZGVlbWVkIHRvIGluY29ycG9yYXRlIGJ5IHJlZmVyZW5jZSwgdGhpcyBPcGVyYXRpbmcgU3RhdGVtZW50Lg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuNTdcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpNYXRlcmlhbCBBZHZlcnNlIENoYW5nZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQogbWVhbnMgdGhlIG9jY3VycmVuY2Ugb2YgYW55IGNoYW5nZSBpbiBidXNpbmVzcyBjb25kaXRpb25zIGRlc2NyaWJlZCBpbiBTZWN0aW9uIDE5LjUsIG9yIHRoZSBmYWlsdXJlIG9mIEN1c3RvbWVyIGF0IGFueSB0aW1lIHRvOiBzYXRpc2Z5IHRoZSByZXF1aXJlbWVudHMgcGVydGFpbmluZyB0byBDcmVkaXR3b3J0aGluZXNzIGFzIHNldCBmb3J0aCBpbiBTZWN0aW9uIDE5LjM7IHRvIG1haW50YWluIGFuIEFjY2VwdGFibGUgQ3JlZGl0IFJhdGluZzsNCiBvciB0byBtYWludGFpbiBvciByZWluc3RhdGUgRmluYW5jaWFsIEFzc3VyYW5jZXMuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy41OFx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCk1heGltdW0gQWdncmVnYXRlIExvYW5pbmcgUXVhbnRpdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBvciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgTUFMUX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQogbWVhbnMgdGhlIG1heGltdW0gYWdncmVnYXRlIFF1YW50aXR5IG9mIEdhcyB0aGF0IEN1c3RvbWVyIGlzIGVudGl0bGVkIHRvIFJlY2VpdmUgZnJvbSBLYXR5IHVuZGVyIGEgVHJhbnNhY3Rpb24gZm9yIExvYW5pbmcgU2VydmljZSwgYXMgc3RhdGVkIGluIHRoZSBhcHBsaWNhYmxlIENvbmZpcm1hdGlvbi4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAzLjU5XHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KTWF4aW11bSBBZ2dyZWdhdGUgUGFya2luZyBRdWFudGl0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIG9yIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBNQVBRfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCiBtZWFucyB0aGUgbWF4aW11bSBhZ2dyZWdhdGUgUXVhbnRpdHkgb2YgR2FzIHRoYXQgQ3VzdG9tZXIgbWF5IG1haW50YWluIGluIHRoZSBLYXR5IFN0b3JhZ2UgRmFjaWxpdHkgYXQgYW55IHRpbWUgdW5kZXIgYSBUcmFuc2FjdGlvbiBmb3IgUGFya2luZyBTZXJ2aWNlLCBhcyBzdGF0ZWQgaW4gdGhlIGFwcGxpY2FibGUgQ29uZmlybWF0aW9uLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuNjBcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpNYXhpbXVtIEFnZ3JlZ2F0ZSBTdG9yYWdlIFF1YW50aXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAgb3IgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IE1BU1F9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KIG1lYW5zIHRoZSBtYXhpbXVtIGFnZ3JlZ2F0ZSBRdWFudGl0eSBvZiBHYXMgdGhhdCBDdXN0b21lciBpcyBwZXJtaXR0ZWQgdG8gaGF2ZSBpbiBzdG9yYWdlIGluIHRoZSBLYXR5IFN0b3JhZ2UgRmFjaWxpdHkgYXQgYW55IHRpbWUgdW5kZXIgYSBUcmFuc2FjdGlvbiBmb3IgU3RvcmFnZSBTZXJ2aWNlIGFzIHN0YXRlZCBpbiB0aGUgYXBwbGljYWJsZSBDb25maXJtYXRpb24uDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy42MVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCk1heGltdW0gQWdncmVnYXRlIFdoZWVsaW5nIFF1YW50aXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAgb3IgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IE1BV1F9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KIG1lYW5zIHRoZSBtYXhpbXVtIGFnZ3JlZ2F0ZSBRdWFudGl0eSBvZiBHYXMgd2hpY2ggS2F0eSBpcyBvYmxpZ2F0ZWQgdG8gd2hlZWwgYXQgYW55IG9uZSB0aW1lIGZvciB0aGUgYWNjb3VudCBvZiBDdXN0b21lciBhcyBzcGVjaWZpZWQgaW4gdGhlIGFwcGxpY2FibGUgQ29uZmlybWF0aW9uLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuNjJcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpNYXhpbXVtIERhaWx5IERlbGl2ZXJ5IFF1YW50aXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAgb3IgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IE1ERFF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KIG1lYW5zIHRoZSBtYXhpbXVtIHF1YW50aXR5IG9mIEdhcyB3aGljaCBLYXR5IGlzIG9ibGlnYXRlZCB0byBkZWxpdmVyIHRvIGEgQ3VzdG9tZXIgZnJvbSB0aGUgS2F0eSBTdG9yYWdlIEZhY2lsaXR5IGZvciB0aGUgYWNjb3VudCBvZiBDdXN0b21lciBkdXJpbmcgb25lIERheSB1bmRlciBhIEZpcm0gb3IgSW50ZXJydXB0aWJsZSBXaGVlbGluZyBTZXJ2aWNlIENvbmZpcm1hdGlvbi4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAzLjYzXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KTWF4aW11bSBEYWlseSBJbmplY3Rpb24gUXVhbnRpdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBvciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgTURJUX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQogbWVhbnMgdGhlIG1heGltdW0gUXVhbnRpdHkgb2YgR2FzIHdoaWNoIEN1c3RvbWVyIG1heSByZXF1ZXN0IEthdHkgdG8gaW5qZWN0IGludG8gc3RvcmFnZSBmb3IgdGhlIGFjY291bnQgb2YgQ3VzdG9tZXIgdW5kZXIgYSBTdG9yYWdlIFNlcnZpY2UgQ29uZmlybWF0aW9uLCBvbiBhbnkgZ2l2ZW4gR2FzIERheSBhcyBzZXQgZm9ydGggaW4gc3VjaCBDb25maXJtYXRpb247IHVubGVzcyBvdGhlcndpc2UgcHJvdmlkZWQgaW4gYSANCkNvbmZpcm1hdGlvbiwgQ3VzdG9tZXIgd2lsbCBiZSBvYmxpZ2F0ZWQgdG8gaW5qZWN0IGFsbCBEYWlseSBxdWFudGl0aWVzIHJhdGFibHkgb3ZlciBhIDI0LWhvdXIgcGVyaW9kLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkMTA4ODA0ODUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy42NFx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxMDg4MDQ4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDEwODgwNDg1IE1heGltdW0gRGFpbHkgUmVjZWlwdCBRdWFudGl0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkMTA4ODA0ODUgXCc5NCBvciBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxMDg4MDQ4NSBNRFJRfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDEwODgwNDg1IFwnOTQgbWVhbnMgdGhlIG1heGltdW0gcXVhbnRpdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIG9mIEdhcyB3aGljaCBLYXR5IGlzIG9ibGlnYXRlZCB0byByZWNlaXZlIGZvciB0aGUgYWNjb3VudCBvZiBhIEN1c3RvbWVyIGR1cmluZyBvbmUgDQpEYXkgdW5kZXIgYSBGaXJtIG9yIEludGVycnVwdGlibGUgV2hlZWxpbmcgU2VydmljZSBDb25maXJtYXRpb24uIFRvdGFsIE1EUlEgc2hhbGwgaW5jbHVkZSBmdWVsLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuNjVcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpNYXhpbXVtIERhaWx5IFdpdGhkcmF3YWwgUXVhbnRpdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBvciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgTURXUX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQogbWVhbnMgdGhlIG1heGltdW0gUXVhbnRpdHkgb2YgR2FzIHdoaWNoIEN1c3RvbWVyIG1heSByZXF1ZXN0IEthdHkgdG8gd2l0aGRyYXcgZnJvbSBzdG9yYWdlIGZvciB0aGUgYWNjb3VudCBvZiB0aGUgDQpDdXN0b21lciB1bmRlciBhIFN0b3JhZ2UgU2VydmljZSBDb25maXJtYXRpb24gb24gYW55IGdpdmVuIEdhcyBEYXkgYXMgc2V0IGZvcnRoIGluIHN1Y2ggQ29uZmlybWF0aW9uOyB1bmxlc3Mgb3RoZXJ3aXNlIHByb3ZpZGVkIGluIGEgQ29uZmlybWF0aW9uLCBDdXN0b21lciB3aWxsIGJlIG9ibGlnYXRlZCB0byB3aXRoZHJhdyBhbGwgRGFpbHkgcXVhbnRpdGllcyByYXRhYmx5IG92ZXIgYSAyNC1ob3VyIHBlcmlvZC4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAzLjY2XHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IE1NQnR1DQp9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBtZWFucyBvbmUgbWlsbGlvbiBCdHVzLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuNjdcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgTWNmfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBtZWFucyB0aGUgcXVhbnRpdHkgb2YgbmF0dXJhbCBHYXMgb2NjdXB5aW5nIGEgdm9sdW1lIG9mIG9uZSB0aG91c2FuZCAoMSwwMDApIGN1YmljIGZlZXQgYXQgYSB0ZW1wZXJhdHVyZSBvZiBzaXh0eSBkZWdyZWVzIEZhaHJlbmhlaXQgKDYwfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHN1cGVyXGluc3JzaWQxMjUzMTc3OSBvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBGKSBhbmQgYSBwcmVzc3VyZSBvZiBmb3VydGVlbiBhbmQgc2l4dHktZml2ZSBodW5kcmVkdGhzIHBvdW5kcyBwZXIgc3F1YXJlIGluY2ggYWJzb2x1dGUgKDE0LjY1IHBzaWEpLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuNjhcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgTW9udGgNCn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQogbWVhbnMgYSBwZXJpb2QgYmVnaW5uaW5nIGF0IDk6MDAgQS5NLiBDZW50cmFsIENsb2NrIFRpbWUgb24gdGhlIGZpcnN0IEdhcyBEYXkgb2YgYSBjYWxlbmRhciBtb250aCBhbmQgZW5kaW5nIGF0IDk6MDAgQS5NLiBDZW50cmFsIENsb2NrIFRpbWUgb24gdGhlIGZpcnN0IEdhcyBEYXkgb2YgdGhlIG5leHQgc3VjY2VlZGluZyBjYWxlbmRhciBtb250aC4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAzLjY5XHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KTW9udGhseSBSZWZlcmVuY2UgUHJpY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBtZWFucyB0aGUgYXJpdGhtZQ0KdGljIGF2ZXJhZ2Ugb2YgdGhlIGFwcGxpY2FibGUgRGFpbHkgUmVmZXJlbmNlIFByaWNlIG9yIHN1YnN0aXR1dGUgdGhlcmVvZiwgZm9yIGVhY2ggR2FzIERheSBvZiB0aGUgcmVsZXZhbnQgTW9udGgsIGluY2x1ZGluZyB3ZWVrZW5kIGRlYWxzLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuNzBcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgTW9vZHkNCn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBtZWFucyBNb29keQ0KfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyBJbnZlc3RvciBTZXJ2aWNlcywgSW5jLiBhbmQgYW55IHN1Y2Nlc3NvciBlbnRpdHkuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy43MVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCk5ldCBUZXJtaW5hdGlvbiBBbW91bnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBzaGFsbCBoYXZlIHRoZSBtZWFuaW5nIGFzY3JpYmVkIHRvIHN1Y2ggdGVybSBpbiBTZWN0aW9uIDIwLjZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ4ODA0NDYxIC40fXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIG9mIHRoZSBPcGVyYXRpbmcgU3RhdGVtZW50Lg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuNzJcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpOZXQgVGVybWluYXRpb24gQmFsYW5jZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIHNoYWxsIGhhdmUgdGhlIG1lYW5pbmcgYXNjcmliZWQgdG8gc3VjaCB0ZXJtIGluIFNlY3Rpb24gMjAuNn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDg4MDQ0NjEgLjJ9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAgb2YgdGhlIE9wZXJhdGluZyBTdGF0ZW1lbnQuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy43M1x0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBOR1BBfQ0Ke1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBtZWFucyB0aGUgTmF0dXJhbCBHYXMgUG9saWN5IEFjdCBvZiAxOTc4Lg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuNzRcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgTllNRVgNCn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIG1lYW5zIHRoZSBOZXcgWW9yayBNZXJjYW50aWxlIEV4Y2hhbmdlLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuNzVcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpOb21pbmF0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAgc2hhbGwgaGF2ZSB0aGUgbWVhbmluZyBhc2NyaWJlZCB0byBzdWNoIHRlcm0gaW4gU2VjdGlvbiA2LjEgb2YgdGhlIE9wZXJhdGluZyBTdGF0ZW1lbnQuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy43Nlx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkMTU4NzE1NDEgDQpOby1Ob3RpY2UgU2VydmljZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIG9yIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkMTU4NzE1NDEgTk5TU317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIGlzIGEgRmlybSBTZXJ2aWNlIHdoZXJlYnkgdGhlIEN1c3RvbWVyIG1heSBkZXZpYXRlIGZyb20gaXRzIG5vbWluYXRpb25zIHB1cg0Kc3VhbnQgdG8gaXRzIEZTUyBNYXN0ZXIgU2VydmljZSBBZ3JlZW1lbnQsIGFzIHNldCBmb3J0aCBpbiBDdXN0b21lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KcyBOTlNTIE1hc3RlciBTZXJ2aWNlIEFncmVlbWVudCwgcHJvdmlkZWQ6IChpKSBLYXR5IGhhcyBkZXRlcm1pbmVkIHRoYXQgaXQgaGFzIHN1ZmZpY2llbnQgb3BlcmF0aW9uYWxseSBhdmFpbGFibGUgYW5kIHVuY29tbWl0dGVkIGZpcm0gc3RvcmFnZSBjYXBhY2l0eSBhbmQgaW5qZWN0aW9uIGFuZCB3aXRoZHJhd2FsIGNhcGFjaXR5IHRvIHBlcmZvcm0gdGhlIG5vLW5vdGljZSBzZXJ2aWNlIEN1c3RvbWVyIGhhcyByZXF1ZXN0ZWQ7IChpaX17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzI4MDM3NVxjaGFycnNpZDY3MDkzODQgKX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMyODAzNzUgXH59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpDdXN0b21lciBhbmQgS2F0eSBoYXZlIGV4ZWN1dGVkIGEgRlNTIE1hc3RlciBTZXJ2aWNlIEFncmVlbWVudCBhbmQgYSBOTlNTIE1hc3RlciBTZXJ2aWNlIEFncmVlbWVudDsgKGlpaSkgQ3VzdG9tZXIgYWNjZXB0cyByZXNwb25zaWJpbGl0eSBmb3IgYXJyYW5naW5nIGFueSB0cmFuc3BvcnRhdGlvbiBzZXJ2aWNlIHJlcXVpcmVkIChhbnkNCiBzdWNoIGFycmFuZ2VtZW50cyBmb3IgdXRpbGl6YXRpb24gb2Ygbm8tbm90aWNlIHNlcnZpY2UgbXVzdCBiZSBhY2NlcHRhYmxlIHRvIEthdHksIGluIGl0cyByZWFzb25hYmxlIGp1ZGdtZW50KTsgYW5kIChpdikgQ3VzdG9tZXJzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQogcmlnaHRzIHNoYWxsIGF0IGFsbCB0aW1lcyBiZSBzdWJqZWN0IHRvIGl0cyBGU1MgTWFzdGVyIFNlcnZpY2UgQWdyZWVtZW50LCBpbmNsdWRpbmcgd2l0aCByZXNwZWN0IHRvIGl0cyBNRERRLCBNRFJRLCBNRElRLCBhDQpuZCBNRFdROyBhbmQgKHYpIGF2YWlsYWJpbGl0eSBvZiBuby1ub3RpY2Ugc2VydmljZSBzaGFsbCBiZSBzdWJqZWN0IHRvIGEgZGV0ZXJtaW5hdGlvbiBieSBLYXR5IHRoYXQgaXRzIHBlcmZvcm1hbmNlIG9mIHRoZSBzZXJ2aWNlIHJlcXVlc3RlZCBzaGFsbCBub3QgY2F1c2UgYSByZWR1Y3Rpb24gaW4gS2F0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyBhYmlsaXR5IHRvIHByb3ZpZGUgRmlybSBTdG9yYWdlIFNlcnZpY2VzIHVuZGVyIGN1cnJlbnRseSBlZmZlY3RpdmUgTWFzdGVyIFNlcnZpY2UgQWdyZWVtZW50cy59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGNmMVxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuNzdcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpOb24tU3BlYyBHYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBzaGFsbCBoYXZlIHRoZSBtZWFuaW5nIGFzY3JpYmVkIHRvIHN1Y2ggdGVybSBpbiBTZWN0aW9uIDEwLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDg4MDQ0NjEgMn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkODgwNDQ2MVxjaGFycnNpZDY3MDkzODQgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBvZiB0aGUgT3BlcmF0aW5nIFN0YXRlbWVudC4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAzLjc4XHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KTm9ybWFsIE9wZXJhdGluZyBQcmVzc3VyZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIG1lYW5zIHRoZSByb2xsaW5nIG9uZSBodW5kcmVkIGVpZ2h0eSAoMTgwKSBHYXMgRGF5IGF2ZXJhZ2Ugb3BlcmF0aW5nIHByZXNzdXJlIGF0IHRoZSBwb2ludCBvZiBpbnRlcmNvbm5lY3RpDQpvbiB3aXRoIHRoZSBLYXR5IFN0b3JhZ2UgRmFjaWxpdHkuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy43OVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCk92ZXJydW4gQ2hhcmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAgbWVhbnMgdGhlIGZlZSB3aGljaCBpcyB0byBiZSBwYWlkIG9uIGEgTW9udGhseSBiYXNpcyBhbmQgd2hpY2ggaXMgdGhlIHByb2R1Y3Qgb2YgKGEpIHRoZSBhcHBsaWNhYmxlIE92ZXJydW4gUmF0ZSB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaVxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IHRpbWVzIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAoYikgdGhlIHBlYWsgcXVhbnRpdHkgb2YgQ3VzdG9tZXIgSW52ZW50b3J5IGF0IGFueSB0aW1lIGR1cmluZyBhIE1vbnRoIGluIGV4Y2VzcyBvZiBDdXN0b21lcn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyBDYXBhY2l0eSBEZW1hbmQuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy44MFx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCk92ZXJydW4gUmF0ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIG1lYW5zIHRoZSBNb250aGx5IGNoYXJnZSBwZXIgTU1CdHUgcGF5YWJsZSBieSBDdXN0b21lciBmb3IgQ3VzdG9tZXIgSW52ZW50b3J5IGluIGV4Y2VzcyBvZiBDdXN0b21lcn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyBDYXBhY2l0eSBEZW1hbmQsIGFzIGRldGVybWluZWQgYnkgS2F0eSBpbiBpdHMgcmVhc29uYWJsZSBkaXNjcmV0aW9uLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuODFcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpQYXJrIEJhbGFuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBtZWFucyB0aGUgcXVhbnRpdHkgb2YgR2FzIHRoYXQgQ3VzdG9tZXIgaGFzIGF0IHRoZSBLYXR5IFN0b3JhZ2UgRmFjaWxpdHkgZm9yIEN1c3RvbWVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBzIGFjY291bnQgdW5kZXIgYSBNYXN0ZXIgU2VydmljZSBBZ3JlZW1lbnQgZm9yIFBhcmtpbmcgU2VydmljZSwgcHJvdmlkZWQgdGhhdCB0aGUgUGFyayBCYWxhbmNlIHNoYWxsIG5ldmVyIGV4Y2VlZCBDdXN0b21lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyBNYXhpbXVtIEFnZ3JlZ2F0ZSBQYXJraW5nIFF1YW50aXR5IHNwZWNpZmllZCBpbiBDdXN0b21lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyBNYXN0ZXIgU2VydmljZSBBZ3JlZW1lbnQuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy44Mlx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANClBhcmtpbmcgU2VydmljZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIGlzIGFuIEludGVycnVwdGlibGUgU2VydmljZSBwcm92aWRpbmcgZm9yIHRoZSBzaG9ydC10ZXJtIGN1c3RvZHkgb2YgYSBDdXN0b21lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyBHYXMuIEl0IGludm9sdmVzIHRoZSBEZWxpdmVyeSBvZiBhIHNwZWNpZmllZCBRdWFudGl0eSBvZiBHYXMgYnkgQ3VzdG9tZXIgdG8gS2F0eSBhdCB0aGUgUmVjZWlwdCBQb2ludCwgYW5kIA0KdGhlIHN1YnNlcXVlbnQgRGVsaXZlcnkgb2YgYSB0aGVybWFsbHkgZXF1aXZhbGVudCBRdWFudGl0eSBvZiBHYXMgYnkgS2F0eSB0byBDdXN0b21lciBhdCB0aGUgRGVsaXZlcnkgUG9pbnQsIGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgdGVybXMgb2YgdGhlIGFwcGxpY2FibGUgQ29uZmlybWF0aW9uLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuODNcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgUGFydHkNCn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIG1lYW5zIGVpdGhlciBLYXR5IG9yIEN1c3RvbWVyOyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgUGFydGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIG1lYW5zIEthdHkgYW5kIEN1c3RvbWVyLCBjb2xsZWN0aXZlbHkuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy44NFx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANClBlcnNvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIG1lYW5zIGFueSBuYXR1cmFsIHBlcnNvbiBvciBhbnkgY29ycG9yYXRpb24sIHBhcnRuZXJzaGlwLCBsaW1pdGVkIGxpYWJpbGl0eSBjb21wYW55IG9yIG90aGVyIGVudGl0eSBvZiBhbnkgdHlwZSwgcHVibGljIG9yIHByaXZhdGUuDQoNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAzLjg1XHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KUHJvbXB0IE1vbnRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAgbWVhbnMgdGhlIG5lYXJlc3QgbW9udGggb2YgRGVsaXZlcnkgZm9yIHdoaWNoIE5ZTUVYIGZ1dHVyZXMgcHJpY2VzIGFyZSBwdWJsaXNoZWQgZHVyaW5nIHRoZSBjdXJyZW50IHRyYWRpbmcgbW9udGguDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy44Nlx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANClF1YWxpZmllZCBJbnN0aXR1dGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQogbWVhbnMgdGhlIGRvbWVzdGljIG9mZmljZSBvZiBhIGNvbW1lcmNpYWwgYmFuayBvciB0cnVzdCBjb21wYW55IHRoYXQgaXMgbm90IGFuIEFmZmlsaWF0ZSBvZiBDdXN0b21lciBhbmQgdGhhdCBoYXMgYXNzZXRzIG9mIGF0IGxlYXN0ICQxMCBiaWxsaW9uIGFuZCBjcmVkaXQgcmF0aW5ncyBvZiBhdCBsZWFzdCBBLSBieSBTJlAgYW5kIGF0IGxlYXN0IEEzIGJ5IE1vb2R5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBzLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuODdcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpRdWFudGl0eSBvZiBHYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBtZWFucyB0aGUgcXVhbnRpdHkgb2YgR2FzIGV4cHJlc3NlZCBpbiBNTUJ0dXMsIHVubGVzcyBvdGhlcndpc2Ugc3BlY2lmaWVkLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuODhcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpSYXRhYmxlIERhaWx5IExvYW4gUXVhbnRpdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBvciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgUkRMUX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQogbWVhbnMgdGhlIHJhdGFibGUgUXVhbnRpdHkgb2YgR2FzIHRoYXQgQ3VzdG9tZXIgaXMgcmVxdWlyZWQgdG8gUmVjZWl2ZSBmcm9tIEthdHkgb24gYW55IGdpdmVuIEdhcyBEYXkgdW5kZXIgYSBUcmFuc2FjdGlvbiBmbw0KciBMb2FuaW5nIFNlcnZpY2UsIGFzIHNldCBmb3J0aCBpbiB0aGUgYXBwbGljYWJsZSBDb25maXJtYXRpb247IEN1c3RvbWVyIHdpbGwgYmUgb2JsaWdhdGVkIHRvIFJlY2VpdmUgc3VjaCBSRExRIHJhdGFibHkgb3ZlciBhIDI0LWhvdXIgcGVyaW9kLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuODlcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpSYXRhYmxlIERhaWx5IExvYW4gUGF5YmFjayBRdWFudGl0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIG9yIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBSRExQUX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIG1lYW5zIHRoZSByYXRhYmxlIFF1YW50aXR5IG9mIEdhcyB0aGF0IEN1c3RvbWVyIGlzIHJlcXVpcmVkIHRvIHINCmUtRGVsaXZlciB0byBLYXR5IG9uIGFueSBnaXZlbiBHYXMgRGF5IHVuZGVyIGEgVHJhbnNhY3Rpb24gZm9yIExvYW5pbmcgU2VydmljZSwgYXMgc2V0IGZvcnRoIGluIHRoZSBhcHBsaWNhYmxlIENvbmZpcm1hdGlvbjsgQ3VzdG9tZXIgd2lsbCBiZSBvYmxpZ2F0ZWQgdG8gcmUtRGVsaXZlciBzdWNoIFJETFBRIHJhdGFibHkgb3ZlciBhIDI0LWhvdXIgcGVyaW9kLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuOTBcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpSYXRhYmxlIERhaWx5IFBhcmtpbmcgUXVhbnRpdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBvciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgUkRQUX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIG1lYW5zDQogdGhlIHJhdGFibGUgUXVhbnRpdHkgb2YgR2FzIHRoYXQgQ3VzdG9tZXIgaXMgcmVxdWlyZWQgdG8gaW5qZWN0IGludG8gc3RvcmFnZSBvbiBhbnkgZ2l2ZW4gR2FzIERheSB1bmRlciBhIFRyYW5zYWN0aW9uIGZvciBhIFBhcmtpbmcgU2VydmljZSwgYXMgc2V0IGZvcnRoIGluIHRoZSBhcHBsaWNhYmxlIENvbmZpcm1hdGlvbjsgQ3VzdG9tZXIgd2lsbCBiZSBvYmxpZ2F0ZWQgdG8gaW5qZWN0IHN1Y2ggUkRQUSByYXRhYmx5IG92ZXIgYSAyNC1ob3UNCnIgcGVyaW9kLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuOTFcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpSYXRhYmxlIERhaWx5IFVucGFya2luZyBRdWFudGl0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIG9yIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBSRFVRfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCiBtZWFucyB0aGUgcmF0YWJsZSBRdWFudGl0eSBvZiBHYXMgdGhhdCBDdXN0b21lciBpcyByZXF1aXJlZCB0byB3aXRoZHJhdyBmcm9tIHN0b3JhZ2Ugb24gYW55IGdpdmVuIEdhcyBEYXkgdW5kZXIgYSBUcmFuc2FjdGlvbiBmb3IgUGFya2luZyBTZXJ2aWNlLCBhcyBzZXQgZm9ydGggaW4gdGhlIGFwcGxpY2FibGUgQ29uZmlybWF0aW9uOyBDdXN0b21lciB3DQppbGwgYmUgb2JsaWdhdGVkIHRvIHdpdGhkcmF3IHN1Y2ggUkRVUSByYXRhYmx5IG92ZXIgYSAyNC1ob3VyIHBlcmlvZC4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAzLjkyXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KUmVjZWlwdH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIG9yIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgUmVjZWl2ZX17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAgbWVhbnMgdGhlIHBoeXNpY2FsIFJlY2VpcHQsIG9yIGl0cyBlcXVpdmFsZW50LCBvZiBHYXMgYnkgS2F0eSBhdCBhIFJlY2VpcHQgUG9pbnQgZnJvbSBvciBmb3IgdGhlIGFjY291bnQgb2YgdGhlIEN1c3RvbWVyLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuOTNcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpSZWNlaXB0IERlZmF1bHR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBtZWFucyBhIFBhcnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBzIHVuZXhjdXMNCmVkIGZhaWx1cmUgZHVyaW5nIGFueSBHYXMgRGF5IG9yIE1vbnRoIG9mIHRoZSBUcmFuc2FjdGlvbiBQZXJpb2QgdG8gZGlzY2hhcmdlIGl0cyBvYmxpZ2F0aW9ucywgYXMgc3BlY2lmaWVkIGluIGEgQ29uZmlybWF0aW9uLCB0byByZWNlaXZlIEdhcyBtYWRlIGF2YWlsYWJsZSBieSB0aGUgb3RoZXIgUGFydHkgYXQgdGhlIFJlY2VpcHQgUG9pbnQgb3IgdGhlIERlbGl2ZXJ5IFBvaW50LCBhcyBhcHBsaWNhYmxlLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuOTRcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpSZWNlaXB0IFBvaW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAgbWVhbnMgdGhlIHBvaW50IGF0IHdoaWNoIEthdHkgcmVjZWl2ZXMgR2FzIGZvciBDdXN0b21lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyBhY2NvdW50Lg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuOTVcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpSZWZlcmVuY2UgUHJpY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBtZWFucyBhcyBhcHBsaWNhYmxlLCB0aGUgRGFpbHkgb3IgTW9udGhseSBHYXMgcHJpY2UgcmVwb3J0ZWQgaW4gUGxhdHRzIEdhcyBEYWlseSBvciBhbnkgc3VjY2Vzc29yIHB1YmxpY2F0aW9uLiBUaGUgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IERhaWx5IFJlZmVyZW5jZSBQcmljZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQogZm9yIHRoZSBLYXR5IFN0b3JhZ2UgRmFjaWxpdHkgd2lsbCBiZSB0aGUgbWlkcG9pbnQgZm9yIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgRWFzdC1Ib3VzdG9uLUthdHkgXGVuZGFzaCAgS2F0eSBSZWZlcmVuY2UgUHJpY2UufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBJZiBhdCBhbnkgdGltZSB0aGUgUmVmZXJlbmNlIFByaWNlIGlzIG5vdCBwdWJsaXNoZWQgaW4gdGhlIG1hbm5lciBwcmV2aW91c2x5IGRlc2NyaWJlZCwgdGhlIFN1YnN0aXR1dGUgUmVmZXJlbmNlIFByaWNlIHNoYWxsIHRoZW4gYmVjb21lIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgUmVmZXJlbmNlIFByaWNlLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy45Nlx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxiXGlcdWx0aFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFJFR0FSRExFU1MgT0YgQ0FVU0V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KIG1lYW5zIHdpdGhvdXQgcmVnYXJkIHRvIHRoZSBuZWdsaWdlbmNlIG9mIGFueSBwZXJzb24gb3IgcGFydHksIGluY2x1ZGluZyB0aGUgaW5kZW1uaWZpZWQgcGFydHkgb3IgcGFydGllcywgd2hldGhlciBzdWNoIG5lZ2xpZ2VuY2UgYmUgc29sZSwgam9pbnQsIGNvbmN1cnJlbnQsIGFjdGl2ZSwgb3IgcGFzc2l2ZSwgYW5kIGFkZGl0aW9uYWxseSwgd2l0aG91dCByZWdhcmQgdG8gcHJlLSBleGlzdGluZyBjDQpvbmRpdGlvbnMsIHdoZXRoZXIgc3VjaCBjb25kaXRpb25zIHRvIGJlIHBhdGVudCBvciBsYXRlbnQsIGltcGVyZmVjdGlvbiBvZiBtYXRlcmlhbCwgZGVmZWN0IG9yIGZhaWx1cmUgb2YgZXF1aXBtZW50LCB1bHRyYWhhemFyZG91cyBhY3Rpdml0eSwgc3RyaWN0IGxpYWJpbGl0eSBvciBhbnkgb3RoZXIgdG9ydC4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAzLjk3XHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFJSQ317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAgbWVhbnMgdGhlIFRleGFzIFJhaWxyb2FkIENvbW1pc3Npb24gb3IgYW55IHN1Y2Nlc3NvciBhZ2VuY3kuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy45OFx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANClNlY3Rpb24gMzExIFdhcnJhbnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAgbWVhbnMsIGlmIGFueSBHYXMgc3ViamVjdCB0byBhbnkgQ29uZmlybWF0aW9uIGhlcmV1bmRlciBpcyBpbiBpbnRlcnN0YXRlIGNvbW1lcmNlLCBDdXN0b21lcn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyB3YXJyYW50eSB0aGF0IChhKSBzdWNoIEdhcyBpcyBlbGlnaWJsZSBmb3IgdHJhbnNwb3J0YXRpb24gYW5kIHN0b3JhZ2UgYXQgdGhlIEthdHkgU3RvcmFnZSBGYWNpbGl0eSBwdXJzdWFudCB0byBTZWN0aW9uIDMxMSBvZiB0aGUgTkdQQSAoYW5kIHdpbGwgY29udGkNCm51ZSB0byBiZSBlbGlnaWJsZSBmb3IgdGhlIGVudGlyZSBwZXJpb2QgY292ZXJlZCBieSB0aGUgcmVsZXZhbnQgQ29uZmlybWF0aW9uKSBhbmQgKGIpIEN1c3RvbWVyIGlzIGluIGNvbXBsaWFuY2Ugd2l0aCBhbGwgcnVsZXMgYW5kIHJlZ3VsYXRpb25zIGFwcGxpY2FibGUgdG8gc3VjaCBlbGlnaWJsZSB0cmFuc3BvcnRhdGlvbiBhbmQgU3RvcmFnZSBTZXJ2aWNlcywgaW5jbHVkaW5nLCB3aXRob3V0IGxpbWl0YXRpb24sIGNvbXBsaWFuY2Ugd2l0aA0KIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IG9uIGJlaGFsZiBvZn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQogc3RhbmRhcmQsIGFzIHRoYXQgc3RhbmRhcmQgb3IgYW55IHN1Y2ggcnVsZXMgYW5kL29yIHJlZ3VsYXRpb25zIG1heSBiZSBhbWVuZGVkIGZyb20gdGltZSB0byB0aW1lLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuOTlcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpTZXJ2aWNlKHMpfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAgbWVhbnMgdGhlIGluamVjdGlvbiwgc3RvcmFnZSwgd2l0aGRyYXdhbCwgcGFya2luZywgbG9hbmluZywgb3Igd2hlZWxpbmcgb2YgR2FzLCBhbmQgYW55IGFuY2lsbGFyeSBzZXJ2aWNlcyB0byBiZSBwZXJmb3JtZWQgYnkgDQpLYXR5IGZvciBDdXN0b21lciBwdXJzdWFudCB0byBhIE1hc3RlciBTZXJ2aWNlIEFncmVlbWVudCBhbmQgcmVsZXZhbnQgQ29uZmlybWF0aW9uLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuMTAwXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFMmUH0NCntccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAgbWVhbnMgU3RhbmRhcmQgJiBQb29yIFJhdGluZyBHcm91cCAoYSBkaXZpc2lvbiBvZiBNY0dyYXctSGlsbCwgSW5jLikgYW5kIGFueSBzdWNjZXNzb3IgZW50aXR5Lg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuMTAxXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KU3RvcmFnZSBJbmplY3Rpb24gUG9pbnR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBhbmQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFN0b3JhZ2UgV2l0aGRyYXdhbCBQb2ludH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIG1lYW5zIHRoZSBwb2luDQp0IG9mIGludGVyY29ubmVjdGlvbiBvZiB0aGUgS2F0eSBTdG9yYWdlIEZhY2lsaXR5IGFuZCB0aGUgRGVzaWduYXRlZCBQaXBlbGluZS4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAzLjEwMlx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANClN0b3JhZ2UgU2VydmljZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIG1lYW5zIGVpdGhlciBGaXJtIFN0b3JhZ2UgU2VydmljZSBvciBJbnRlcnJ1cHRpYmxlIFN0b3JhZ2UgU2VydmljZSBvciBOby1Ob3RpY2UgU3RvcmFnZSBTZXJ2aWNlLCBhcyB0aGUgY2FzZSBtYXkgYmUuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy4xMDNcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpTdG9yYWdlIEludmVudG9yeX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIG1lYW5zIHRoZSBxdWFudGl0eSBvZiBXb3JraW5nIEdhcyB0aGF0IGEgQ3VzdG9tZXIgaGFzIGluIHBsYWNlIGF0IHRoZSBLYXR5IFN0b3JhZ2UgRmFjaWxpdHkgZm9yIEN1c3RvbWVyfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBzIGFjY291bnQsIHByb3ZpZGVkIHRoYXQgdGhlIFN0b3JhZ2UgSW52ZW50b3J5IHNoYWxsIG5ldmVyIGV4Y2VlZCBDdXN0b21lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyBNYXhpbXVtIEFnZ3JlZ2F0ZSBTdG9yYWdlIFF1YW50aXR5Lg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuMTA0XHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KU3Vic3RpdHV0ZSBSZWZlcmVuY2UgUHJpY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBtZWFucyB0aGUgc3Vic3RpdHV0ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgUmVmZXJlbmNlIFByaWNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCiBhcyBkZXRlcm1pbmVkIGJ5IHRoZSBmb2xsb3dpbmcgcHJvY2VkdXJlczogSWYgYXQgYW55IHRpbWUgdGhlIFJlZmVyZW5jZSBQcmljZSBpcyBubyBsb25nZXIgcHVibGlzaGVkIGluIHRoZSBtYW5uZXIgZGVzY3JpYmVkIGluIHRoZSBkZWZpbml0aW9uIGZvciBSZWZlcmVuY2UgUHJpY2UsIEthdHkgc2hhbGwgcHJvdmlkZSBub3RpY2UgKH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBTdWJzdGl0dXRlIFJlZmVyZW5jZSBQcmljZSBOb3RpY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICkgdGhlcmVvZiB0byBDdXN0b21lciANCmluIHdoaWNoIGV2ZW50IHRoZSBQYXJ0aWVzIHNoYWxsIGF0dGVtcHQgdG8gYWdyZWUgb24gYSBTdWJzdGl0dXRlIFJlZmVyZW5jZSBQcmljZS4gSWYgdGhlIFBhcnRpZXMgYXJlIHVuYWJsZSB0byByZWFjaCBhbiBhZ3JlZW1lbnQgb24gYSBTdWJzdGl0dXRlIFJlZmVyZW5jZSBQcmljZSB3aXRoaW4gZmlmdGVlbiAoMTUpIEJ1c2luZXNzIERheXMgZm9sbG93aW5nIGRlbGl2ZXJ5IG9mIHRoZSBTdWJzdGl0dXRlIFJlZmVyZW5jZSBQcmljZSBOb3RpYw0KZQ0KLCBlaXRoZXIgUGFydHkgd2lsbCBiZSBlbnRpdGxlZCB0byByZXF1aXJlIHRoYXQgdGhlIGRldGVybWluYXRpb24gdGhlcmVvZiBiZSBzdWJtaXR0ZWQgZm9yIHJlc29sdXRpb24gdG8gYW4gaW5kZXBlbmRlbnQgY29uc3VsdGFudCBoYXZpbmcgdGhlIHJlcXVpc2l0ZSBleHBlcmllbmNlLCBzZWxlY3RlZCBieSBLYXR5IGluIGl0cyByZWFzb25hYmxlIGRpc2NyZXRpb24uIFRoZSBpbmRlcGVuZGVudCBjb25zdWx0YW50IHdpbGwgYmUgaW5zdHJ1Y3RlDQpkDQogdG8gc2VsZWN0IGEgcHJpY2UgcmVmZXJlbmNlIG9yIGluZGV4IHRoYXQsIGluIHRoZSByZWFzb25hYmxlIGFuZCBmYWlyIG9waW5pb24gb2YgdGhlIGluZGVwZW5kZW50IGNvbnN1bHRhbnQsIG1vc3QgYWNjdXJhdGVseSByZWZsZWN0cywgdGhlIGFwcGxpY2FibGUgRGFpbHkgb3IgTW9udGhseSBzcG90LW1hcmtldCBwcmljZSBmb3IgR2FzIERlbGl2ZXJlZCBvbiB0aGUgRGVzaWduYXRlZCBQaXBlbGluZSBieSB3YXkgb2YgYW4gaW52ZW50b3J5IHQNCnJhbnNmZXIuIFRoZSBpbmRlcGVuZGVudCBjb25zdWx0YW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyBkZXRlcm1pbmF0aW9uIHNoYWxsIGJlIGZpbmFsIGFuZCBiaW5kaW5nIG9uIHRoZSBQYXJ0aWVzLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuMTA1XHRhYn19XHBhcmQgXGx0cnBhclxzOTdccWogXGZpLTcyMFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4NzIwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMTU4NzE1NDEge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxNTg3MTU0MSANClRlcm1pbmF0aW9uIEFtb3VudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIHNoYWxsIGhhdmUgdGhlIG1lYW5pbmcgYXNjcmliZWQgdG8gc3VjaCB0ZXJtIGluIFNlY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg3MTU0MSBcfn17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxNDk2MDIxMSAyMC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ4ODA0NDYxIDYuNH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDg4MDQ0NjFcY2hhcnJzaWQxNDk2MDIxMSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxNDk2MDIxMSANCm9mIHRoZSBPcGVyYXRpbmcgU3RhdGVtZW50Lg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuMTA2XHRhYn19XHBhcmQgXGx0cnBhclxzOTdccWogXGZpLTcyMFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4NzIwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMTQ0NDI2Nzkge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KVGVybWluYXRpb24gQW1vdW50IE5vdGljZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIHNoYWxsIGhhdmUgdGhlIG1lYW5pbmcgYXNjcmliZWQgdG8gc3VjaCB0ZXJtIGluIFNlY3Rpb24gMjAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkODgwNDQ2MSA2LjR9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDg4MDQ0NjFcY2hhcnJzaWQ2NzA5Mzg0ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgb2YgdGhlIE9wZXJhdGluZyBTdGF0ZW1lbnQuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy4xMDdcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpUaXRsZSBUcmFuc2Zlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIG1lYW5zIHRpdGxlIGNoYW5nZXMgZnJvbSBwYXJ0eSB0byBwYXJ0eSB0aGF0IGRvIG5vdCBhZmZlY3QgYSBwaHlzaWNhbCB0cmFuc2ZlciBvZiB0aGUgR2FzLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuMTA4XHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KVHJhbnNhY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBoYXMgdGhlIG1lYW5pbmcgYXMgc2V0IGZvcnRoIGluIFNlY3Rpb24gNS59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ4ODA0NDYxIDJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy4xMDlcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpUcmFuc2FjdGlvbiBEb2N1bWVudChzKX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQogbWVhbnMgdGhlIE9wZXJhdGluZyBTdGF0ZW1lbnQsIHRoZSBNYXN0ZXIgU2VydmljZSBBZ3JlZW1lbnQsIGFuZCBhbGwgQ29uZmlybWF0aW9ucyBhbmQgTm9taW5hdGlvbnMgZW50ZXJlZCBpbnRvIHB1cnN1YW50IHRvIHRoZSBNYXN0ZXIgU2VydmljZSBBZ3JlZW1lbnQuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy4xMTBcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpUcmFuc2FjdGlvbiBQZXJpb2R9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBtZWFucyB0aGUgcGVyaW9kIG9mIHRpbWUgZHVyaW5nIHdoaWNoIGEgVHJhbnNhY3Rpb24gd2lsbCBiZSBwZXJmb3JtZWQsIGFzIHN0YXRlZCBpbiB0aGUgYXBwbGljYWJsZSBDb25maXJtYXRpb24uDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMy4xMTFcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgV2Vlaw0KfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCiBtZWFucyBhIHBlcmlvZCBvZiBzZXZlbiAoNykgY29uc2VjdXRpdmUgR2FzIERheXMgYmVnaW5uaW5nIGF0IDk6MDBhLm0uIENlbnRyYWwgQ2xvY2sgVGltZSwgb24gZWFjaCBNb25kYXkgYW5kIGVuZGluZyBhdCB0aGUgc2FtZSB0aW1lIG9uIHRoZSBuZXh0IHN1Y2NlZWRpbmcgTW9uZGF5Lg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuMTEyXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KV2hlZWxpbmcgQ2hhcmdlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAgbWVhbnMgdGhlIGZlZSB3aGljaCBpcyB0byBiZSBwYWlkIG9uIGEgTW9udGhseSBiYXNpcyBhbmQgd2hpY2ggaXMgdGhlIHByb2R1Y3Qgb2YgKGEpIHRoZSBhcHBsaWNhYmxlIFdoZWVsaW5nIFJhdGUgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGlcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCB0aW1lcyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgKGIpIHRoZSBudW1iZXIgb2YgTU1CdHVzIG9mIEdhcyBmb3Igd2hpY2ggdGhlIFdoZWVsaW5nIFNlcnZpY2Ugd2FzIHJlbmRlcmVkLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuMTEzXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KV2hlZWxpbmcgUXVhbnRpdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBtZWFucyB0aGUgYW1vdW50IG9mIEdhcyBzdGF0ZWQgaW4gdGhlIGFwcGxpY2FibGUgQ29uZmlybWF0aW9uIHRoYXQgQ3VzdG8NCm1lciBhbmQgS2F0eSBlYWNoIGFncmVlIHRvIERlbGl2ZXJ5IHRvIGFuZCB0byBSZWNlaXZlIGZyb20gdGhlIG90aGVyIG9uIGVhY2ggR2FzIERheSBkdXJpbmcgdGhlIFRyYW5zYWN0aW9uIFBlcmlvZC4gVGhlIFdoZWVsaW5nIFF1YW50aXR5IERlbGl2ZXJlZCB0byB0aGUgRGVsaXZlcnkgUG9pbnQgYnkgS2F0eSBtdXN0IGNvbnRhaW4gZXF1YWwgSGVhdGluZyBWYWx1ZSwgbWVhc3VyZWQgaW4gTU1CdHVzLCBsZXNzIEZ1ZWwsIHRvIHRoZSBRdWFudA0KaQ0KdHkgb2YgR2FzIHJlY2VpdmVkIGZyb20gQ3VzdG9tZXIgYXQgdGhlIFJlY2VpcHQgUG9pbnQuIEthdHkgd2lsbCBiZSByZXNwb25zaWJsZSBmb3IgbWFraW5nIHRoZSBtZWFzdXJlbWVudCBjb252ZXJzaW9ucyBmcm9tIEhlYXRpbmcgVmFsdWUgdG8gdm9sdW1lIG9yIHZvbHVtZSB0byBIZWF0aW5nIFZhbHVlIGluIGFsbCBXaGVlbGluZyBTZXJ2aWNlIGFycmFuZ2VtZW50cywgaW4gYWNjb3JkYW5jZSB3aXRoIGNvbnZlcnNpb24gcHJvY2VkdXJlcyBzDQpldCBmb3J0aCBpbiB0aGUgYXBwbGljYWJsZSBwaXBlbGluZSB0YXJpZmZzLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuMTE0XHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KV2hlZWxpbmcgUmF0ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIG1lYW5zIHRoZSByYXRlIHBlciBNTUJ0dSBmb3IgYSBXaGVlbGluZyBTZXJ2aWNlIGFzIGFncmVlZCB0byBieSBLYXR5IGFuZCBDdXN0b21lciBhbmQgc3RhdGVkIGluIHRoZSBhcHBsaWNhYmxlIENvbmZpcm1hdGlvbi4NCg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMuMTE1XHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KV2hlZWxpbmcgU2VydmljZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIG1lYW5zIEZpcm0gV2hlZWxpbmcgU2VydmljZSBvciBJbnRlcnJ1cHRpYmxlIFdoZWVsaW5nIFNlcnZpY2UuDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzM4ODc4MDQ3fXtcKlxia21rc3RhcnQgX1RvYzM5MjM5NTIwfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NSBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxiXGNhcHNcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkMTQ0NDI2NzkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNC4wXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhcg0KXHM5NVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4NzIwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOVxvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0NDQyNjc5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxNDQ0MjY3OSBTRVJWSUNFU317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkMTQ5NjAyMTEge1wqXGJrbWtlbmQgX1RvYzM4ODc4MDQ3fXtcKlxia21rZW5kIF9Ub2MzOTIzOTUyMH0NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNC4xXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzOTdccWogXGZpLTcyMFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4NzIwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkMTQ0NDI2NzkgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IEVsaWdpYmlsaXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IC4gRnJvbSB0aW1lIHRvIHRpbWUsIHN1YmplY3QgdG8gKGkpIEN1c3RvbWVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBzIHByaW9yIGV4ZWN1dGlvbiBvZiBhIE1hc3RlciBTZXJ2aWNlIEFncmVlbWVudCBhbmQgaGF2aW5nIG1ldCB0aGUgZWxpZ2liaWxpdHkgcmVxdWlyZW1lbnRzIHN0YXRlZCBoZXJlaW4gYW5kIHRoZXJlaW4gYW5kIChpaSkgdGhlIGF2YWlsYWJpbGl0eSBvZiBzdG9yYWdlIGNhcGFjaXR5LCBpbmplY3Rpb24gY2FwYWMNCml0eSwgYW5kIGRlbGl2ZXJhYmlsaXR5LCBLYXR5IHdpbGwgb2ZmZXIgc3RvcmFnZSBhbmQgb3RoZXIgcmVsYXRlZCBTZXJ2aWNlcyAod2hpY2ggaW5jbHVkZXMgaW50ZXJzdGF0ZSBuYXR1cmFsIEdhcyBzdG9yYWdlIGFuZCByZWxhdGVkIHRyYW5zcG9ydGF0aW9uIHNlcnZpY2VzKSB0byBDdXN0b21lciBvbiBhIG5vbi1kaXNjcmltaW5hdG9yeSBiYXNpcy4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNC4yXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgU2VydmljZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAuIFRoZSBmb2xsb3dpbmcgU2VydmljZXMgc2hhbGwgYmUgb2ZmZXJlZCB1bmQNCmVyIHRoaXMgT3BlcmF0aW5nIFN0YXRlbWVudCwgY29uZGl0aW9uZWQgdXBvbiB0aGUgZXhlY3V0aW9uIG9mIGEgTWFzdGVyIFNlcnZpY2UgQWdyZWVtZW50IGFuZCB0aGUgQ29uZmlybWF0aW9uIG9yIGRlZW1lZCBDb25maXJtYXRpb24sIGJ5IEN1c3RvbWVyIG9mIHRoZSBUcmFuc2FjdGlvbi1zcGVjaWZpYyB0ZXJtcyBjb250YWluZWQgaW4gdGhlIGFwcGxpY2FibGUgVHJhbnNhY3Rpb24gaW4gYWNjb3JkYW5jZSB3aXRoIFNlY3Rpb24gNS4wfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ4ODA0NDYxXGNoYXJyc2lkNjcwOTM4NCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IGJlbG93Og0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTkgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA0LjIuMVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczk5XHFqIFxmaS03MjBcbGkxNDQwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOVxpbHZsMlxvdXRsaW5lbGV2ZWwyXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDE0NDQyNjc5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBGaXJtIFN0b3JhZ2UgU2VydmljZTsNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNC4yLjJcdGFifUludGVycnVwdGlibGUgU3RvcmFnZSBTZXJ2aWNlOw0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTkgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA0LjIuM1x0YWJ9Tm8tTm90aWNlIFN0b3JhZ2UgU2VydmljZQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTkgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA0LjIuNFx0YWJ9RmlybSBXaGVlbGluZyBTZXJ2aWNlDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDQuMi41XHRhYn1JbnRlcnJ1cHRpYmxlIFdoZWVsaW5nIFNlcnZpY2U7DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDQuMi42XHRhYn1QYXJraW5nIFNlcnZpY2U7IGFuZA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTkgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA0LjIuN1x0YWJ9TG9hbmluZyBTZXJ2aWNlLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA0LjNcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHM5N1xxaiBcZmktNzIwXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHg3MjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczM5XGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQxNDQ0MjY3OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgQWRkaXRpb25hbCBTZXJ2aWNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IC4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjkxMTUwNCBTfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMjkxMTUwNFxjaGFycnNpZDgxMzY3NSB1YmplY3QgdG8gcmVmdW5kfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyOTExNTA0ICx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyOTExNTA0XGNoYXJyc2lkNjcwOTM4NCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IEthdHkgc2hhbGwgYmUgZW50aXRsZWQgdG8gb2ZmZXIgYW55IGFkZGl0aW8NCm5hbCBTZXJ2aWNlIG5vdCBsaXN0ZWQgYWJvdmUsIGJ1dCBjcmVhdGVkIHN1YnNlcXVlbnQgdG8gdGhlIGZpbGluZyBvZiB0aGlzIE9wZXJhdGluZyBTdGF0ZW1lbnQgd2l0aCBGRVJDLCBzbyBsb25nIGFzIHN1Y2ggU2VydmljZXMgYXJlIG9mZmVyZWQgdG8gYWxsIEN1c3RvbWVycyBvbiBhIG5vbi1kaXNjcmltaW5hdG9yeSBiYXNpc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQyMjcyMyAgYW5kIH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTMyMDg5NSBhbnkgYXBwbGljYWJsZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1MzIwODk1XGNoYXJyc2lkNTMyMDg5NSBmaWxpbmd9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1MzIwODk1IHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1MzIwODk1XGNoYXJyc2lkNTMyMDg5NSAgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQ1MzIwODk1IGFyZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDUzMjA4OTVcY2hhcnJzaWQ1MzIwODk1ICBtYWRlIHdpdGggRkVSfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTMyMDg5NSBDfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IC4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDE0NDQyNjc5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDQuNFx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxNDQ0MjY3OSBUaXRsZSBUcmFuc2Zlcn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxNDQ0MjY3OSAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTkgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA0LjQuMVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczk5XHFqIFxmaS03MjBcbGkxNDQwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOVxpbHZsMlxvdXRsaW5lbGV2ZWwyXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDE0NDQyNjc5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBBIEN1c3RvbWVyIHRoYXQgaGFzIGV4ZWN1dGVkIGEgTWFzdGVyIFNlcnZpY2UgQWdyZWVtZW50IGZvciBGaXJtIFN0b3JhZ2UgU2VydmljZSwgSW50ZXJydXB0aWJsZSBTdG9yYWdlIFNlcnZpY2UsIFBhcmtpbmcgU2VydmljZSBvciBXaGVlbGluZyBTZXJ2aWNlIG1heSBzZWxsIGl0cyBTdG9yYWdlIEludmVudG9yeSBvciBQYXJrIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkNDAwOTU1MFxjaGFycnNpZDY3MDkzODQgQmFsYW5jZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgb3IgV2hlZWxpbmcgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDAwOTU1MCBRdWFudGl0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCiwgYXMgYXBwbGljYWJsZSwgdG8gYW55IG90aGVyIEN1c3RvbWVyIHRoYXQgaGFzIGV4ZWN1dGVkIGEgTWFzdGVyIFNlcnZpY2UgQWdyZWVtZW50IGZvciBGaXJtIFN0b3JhZ2UgU2VydmljZSwgSW50ZXJydXB0aWJsZSBTdG9yYWdlIFNlcnZpY2UsIFBhcmtpbmcgU2VydmljZSBvciBXaGVlbGluZyBTZXJ2aWNlIGlmOg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMTAxIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDE2NzEzMTYxIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChhKVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczEwMVxxaiBcZmktNzIwXGxpMjE2MFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MjE2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMzlcaWx2bDNcb3V0bGluZWxldmVsM1xhZGp1c3RyaWdodFxyaW4wXGxpbjIxNjBcaXRhcDBccGFyYXJzaWQxNDQ0MjY3OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDE2NzEzMTYxIEN1c3RvbWVyIHNlbGxpbmcgU3RvcmFnZSBJbnZlbnRvcnl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0MDA5NTUwICx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDE2NzEzMTYxICBQYXJrIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNDAwOTU1MFxjaGFycnNpZDY3MDkzODQgQmFsYW5jZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBvciBXaGVlbGluZyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0MDA5NTUwIFF1YW50aXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxNjcxMzE2MSANCiwgYXMgYXBwbGljYWJsZSwgcHJvdmlkZXMgbm90aWZpY2F0aW9uIHRvIEthdHkgcHJpb3IgdG8gdGhlIG5vbWluYXRpb24gZGVhZGxpbmUgYW5kIHByb3ZpZGVzIHByaW9yIHdyaXR0ZW4gYXBwcm92YWwgZnJvbSBLYXR5IHdpdGggd3JpdHRlbiB2ZXJpZmljYXRpb24gKHZpYSBlLW1haWwgb3IgaW5zdGFudCBtZXNzYWdpbmcpIG9mIHRoZSB0cmFuc2ZlciB3aXRoaW4gZml2ZSAoNSkgQnVzaW5lc3MgRGF5czsgYW5kDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMxMDEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkMTY3MTMxNjEgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGIpXHRhYn1UaGUgcHVyY2hhc2UgZG9lcyBub3QgY2F1c2UgZWl0aGVyIEN1c3RvbWVyIHRvIGV4Y2VlZCBpDQp0cyBNYXhpbXVtIEFnZ3JlZ2F0ZSBTdG9yYWdlIFF1YW50aXR5IG9yIE1heGltdW0gQWdncmVnYXRlIFBhcmtpbmcgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgb3IgV2hlZWxpbmcgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxNjcxMzE2MSBRdWFudGl0eSwgYXMgYXBwbGljYWJsZSwgYW5kIGFzIHNwZWNpZmllZCBpbiBDdXN0b21lcn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDE2NzEzMTYxIHMgTWFzdGVyIFNlcnZpY2UgQWdyZWVtZW50IG9yIGNhdXNlIGVpdGhlciBDdXN0b21lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDE2NzEzMTYxIHMgYmFsYW5jZSB0byBnbyBiZWxvdyB6ZXJvLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTkgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA0LjQuMlx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczk5XHFqIFxmaS03MjBcbGkxNDQwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOVxpbHZsMlxvdXRsaW5lbGV2ZWwyXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDk3MTgxNzUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IEthdHkgd2lsbCByZWNvZ25pemUgdGhlIHRyYW5zZmVyIGZvciBwdXJwb3NlcyBvZiBjb21wdXRpbmcgYXZhaWxhYmxlIFN0b3JhZ2UgSW52ZW50b3J5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDAwOTU1MCAsfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBQYXJrIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDAwOTU1MFxjaGFycnNpZDY3MDkzODQgQmFsYW5jZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgb3IgV2hlZWxpbmcgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDAwOTU1MCBRdWFudGl0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICwgYXMgYXBwbGljYWJsZSwgb24gYSBwcm9zcGVjdGl2ZSBiYXNpcyB3aXRoaW4gdHdvICgyKSBCdXNpbmVzcyBEYXlzIGFmdGVyIHJlY2VpdmluZyB0aGUgbm90aWZpY2F0aW9uLiBJbiB0aGUgZXZlbnQgdGhlIHJlcXVpcmVkIHdyaXR0ZW4gdmVyaWZpY2F0aW9uICh2aWEgZS1tYWlsIG9yIGluc3RhbnQgbWVzc2ENCmdpbmcpIGlzIG5vdCByZWNlaXZlZCwgdGhlIHRyYW5zZmVyIHdpbGwgbm8gbG9uZ2VyIGJlIHJlY29nbml6ZWQgYW5kIHRoZSBTdG9yYWdlIEludmVudG9yeSwgUGFyayB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0MDA5NTUwXGNoYXJyc2lkNjcwOTM4NCBCYWxhbmNlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBvciBXaGVlbGluZyB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQwMDk1NTAgUXVhbnRpdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIGZvciBlYWNoIEN1c3RvbWVyIHdpbGwgYmUgcmVzdGF0ZWQgdG8gcmVmbGVjdCB0aGUgcmV2ZXJzYWwgb2YgdGhlIHRyYW5zZmVyLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTkgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA0LjQuM1x0YWJ9Rm9yIGVhY2ggdGl0bGUgdHJhbnNmZXIgb2YgR2FzIHBlcmZvcm1lZCBieSBDdXN0b21lciB1bmRlciB0aGlzIFNlY3Rpb24gNC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDU1Mjc1NyA0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICwgdGhlIHRyYW5zZmVycmluZyBDdXN0b21lciBzaGFsbCBwYXkgdGhlIG1hcmtldC1iYXNlZCBmZWUgZm9yIHRpdGxlIHRyYW5zZmVyIHNldCBmb3J0aCBieSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDEwODgwNDg1IA0KS2F0eS4gVGhpcyBTZWN0aW9uIGRvZXMgbm90IHByb2hpYml0IG9yIGxpbWl0IHRoZSBudW1iZXIgb2YgdGl0bGUgdHJhbnNmZXIgc2VydmljZXMgcHJvdmlkZWQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ4NzMzNDM5IGJ5IHRoaXJkIHBhcnR5IHByb3ZpZGVycy4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDg3MzM0MzkgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNC40LjRcdGFifUthdHkgbWF5IHJlc3RyaWN0IHRyYW5zZmUNCnJzIHdoZW4gc3VjaCB0cmFuc2ZlcnMgd291bGQgcmVzdWx0IGluIGFuIGluY3JlYXNlIGluIHRoZSBzZXJ2aWNlIG9ibGlnYXRpb25zIG9mIEthdHkgb3IgY2F1c2Ugb3BlcmF0aW9uYWx9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQogZGlmZmljdWx0aWVzIGFuZCBzdWNoIGluY3JlYXNlIG9yIG9wZXJhdGlvbmFsIGRpZmZpY3VsdGllcyB3b3VsZCwgaW4gdGhlIHJlYXNvbmFibGUganVkZ21lbnQgb2YgS2F0eSwgaW1wYWlyIHRoZSBhYmlsaXR5IG9mIEthdHkgdG8gbWVldCBhbGwgb2YgaXRzIG8NCnRoZXIgc2VydmljZSBvYmxpZ2F0aW9ucyBvZiBlcXVhbCBvciBoaWdoZXIgcHJpb3JpdHkuIFRyYW5zZmVycyBtYXkgb25seSBvY2N1ciBiZXR3ZWVuIEN1c3RvbWVycyB1bmRlciBhIE1hc3RlciBTZXJ2aWNlIEFncmVlbWVudCBwZXJ0YWluaW5nIHRvIHRoZSBzYW1lIHNlcnZpY2UgYW5kIHByaW9yaXR5Ln17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkODczMzQzOSANClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNC41XHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzOTdccWogXGZpLTcyMFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4NzIwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkOTcxODE3NSBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgUmVndWxhdGlvbnMufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBBbnkgYW5kIGFsbCBpbnRlcnN0YXRlIFNlcnZpY2VzIG9mZmVyZWQgdW5kZXIgdGhpcyBPcGVyYXRpbmcgU3RhdGVtZQ0KbnQgYW5kIHJlbmRlcmVkIHB1cnN1YW50IHRvIGEgTWFzdGVyIFNlcnZpY2UgQWdyZWVtZW50IG11c3QgYmUgZWxpZ2libGUgdW5kZXIsIGFuZCBzaGFsbCBiZSBmdWxseSBzdWJqZWN0IHRvIGFsbCBhcHBsaWNhYmxlIHJlcXVpcmVtZW50cyBvZiBTZWN0aW9uIDI4NC4xMjMgb2YgdGhlIHJlZ3VsYXRpb25zIG9mIHRoZSBGRVJDIGFzIHN1Y2ggcmVndWxhdGlvbnMgbWF5IGJlIHJldmlzZWQgZnJvbSB0aW1lIHRvIHRpbWUuIEN1c3RvbWVyfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBzIHJlcXUNCmVzdCBmb3IgU2VydmljZSBzaGFsbCBjb25zdGl0dXRlIGl0cyB3YXJyYW50eSB0aGF0IGl0IHNhdGlzZmllcyBzdWNoIHJlcXVpcmVtZW50cy4gSWYgQ3VzdG9tZXIgc2Vla3MgdG8gZW50ZXIgaW50byBhIENvbmZpcm1hdGlvbiBmb3Igc3RvcmFnZSBhbmQvb3IgcmVsYXRlZCBTZXJ2aWNlcyBmb3IgR2FzIHRoYXQgaXMgaW4gaW50ZXJzdGF0ZSBjb21tZXJjZSwgQ3VzdG9tZXIgaGVyZWJ5IGdpdmVzIEthdHkgQ3VzdG9tZXJ9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IHMgU2VjdGlvbiAzMTEgDQpXYXJyYW50eSBhbmQgQ3VzdG9tZXIgaXMgaGVyZWJ5IGRlZW1lZCB0byByZS1jb25maXJtIHN1Y2ggU2VjdGlvbiAzMTEgV2FycmFudHkgZWFjaCB0aW1lIEN1c3RvbWVyIHN1Ym1pdHMgYSBOb21pbmF0aW9uIGludm9sdmluZyBHYXMgdGhhdCBpcyBpbiBpbnRlcnN0YXRlIGNvbW1lcmNlLiBDdXN0b21lciBzaGFsbCByZS1jb25maXJtIHN1Y2ggU2VjdGlvbiAzMTEgV2FycmFudHkgb24gYW55IENvbmZpcm1hdGlvbiBvciBOb21pbmF0aW9uIGFzIHINCmVxdWVzdGVkIGJ5IEthdHkuIEthdHkgc2hhbGwgaGF2ZSB0aGUgcmlnaHQgdG8gcmVxdWVzdCBpbmZvcm1hdGlvbiBmcm9tIEN1c3RvbWVyIHRvIHZlcmlmeSBpdHMgZWxpZ2liaWxpdHkgZm9yIFNlcnZpY2UgdW5kZXIgdGhlIGFwcGxpY2FibGUgcmVndWxhdGlvbnMuDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzM4ODc4MDQ4fXtcKlxia21rc3RhcnQgX1RvYzM5MjM5NTIxfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NSBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxiXGNhcHNcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkOTcxODE3NSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA1LjBcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczk1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHg3MjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczM5XG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkOTcxODE3NSBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkOTcxODE3NSBDT05GSVJNQVRJT05Te1wqXGJrbWtlbmQgX1RvYzM4ODc4MDQ4fXtcKlxia21rZW5kIF9Ub2MzOTIzOTUyMX0NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNS4xXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzOTdccWogXGZpLTcyMFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4NzIwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkOTcxODE3NSBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgQ29uZmlybWF0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IC4gQSBDdXN0b21lciBkZXNpcmluZyBhbnkgU2VydmljZSB1bmRlciBhIE1hc3RlciBTZXJ2aWNlIEFncmVlbWVudCBzaGFsbCANCm1ha2UgYW4gb3JhbCBvciB3cml0dGVuIHJlcXVlc3QgdG8gS2F0eSB0aGF0IGluY2x1ZGVzLCBidXQgaXMgbm90IGxpbWl0ZWQgdG8sIGluZm9ybWF0aW9uIHN1Y2ggYXMgdGhlIGV4YWN0IGxlZ2FsIG5hbWUgb2YgdGhlIEN1c3RvbWVyIHJlcXVlc3RpbmcgU2VydmljZSwgdGhlIHR5cGUgb2YgU2VydmljZSByZXF1ZXN0ZWQsIHRoZSBwcm9wb3NlZCBpbml0aWFsIG1heGltdW0gRGFpbHkgcXVhbnRpdGllcywgYW5kIHRoZSBwcm9wb3NlZCB0ZXJtIA0Kbw0KZiBTZXJ2aWNlLiBLYXR5IHNoYWxsIGR1bHkgY29uc2lkZXIgYWxsIFNlcnZpY2UgcmVxdWVzdHMgYW5kIHdpbGwgY29udGFjdCBDdXN0b21lciByZWdhcmRpbmcgd2hldGhlciBLYXR5IGNhbiBwcm92aWRlIHN1Y2ggU2VydmljZS4gSWYgS2F0eSBjYW4gcHJvdmlkZSBzb21lLCBidXQgbm90IGFsbCwgb2YgdGhlIHJlcXVlc3RlZCBTZXJ2aWNlLCBLYXR5IHdpbGwgYWR2aXNlIHRoZSByZXF1ZXN0aW5nIHBhcnR5IG9mIHRoZSBtYXhpbXVtIHF1YW50DQppdGllcyB0aGF0IEthdHkgd2lsbCBiZSBhYmxlIHRvIGFjY29tbW9kYXRlLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA1LjJcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBFeGVjdXRpb24gb2YgdGhlIENvbmZpcm1hdGlvbn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IC4gVGhlIFBhcnRpZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCiBhZ3JlZW1lbnQgcmVnYXJkaW5nIHRoZSBwcm92aXNpb24gb2YgYSBTZXJ2aWNlIHVuZGVyIGEgTWFzdGVyIFNlcnZpY2UgQWdyZWVtZW50IChhIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgVHJhbnNhY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgKSBzaGFsbCBiZSBtYWRlIGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgcHJvdmlzaW9ucyBvZiB0aGlzIFNlY3Rpb24gNS59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDQzNTEzMiAyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQouIFRoZSBUcmFuc2FjdGlvbi1zcGVjaWZpYyB0ZXJtcyBtYXkgYmUgYWdyZWVkIHVwb24gZWl0aGVyIHZlcmJhbGx5IG9yIGVsZWN0cm9uaWNhbGx5LCB3aXRoIHRoZSBjb21tdW5pY2F0aW9uIG9mIGFuIG9mZmVyIGFuZCB0aGUgY29tbXVuaWNhdGlvbiBvZiBhbiBhY2NlcHRhbmNlIG9mIHN1Y2ggdGVybXMgY29uc3RpdHV0aW5nIGEgdmFsaWQsIGJpbmRpbmcgYW5kIGVuZm9yY2VhYmxlIGFncmVlbWVudCBiZXR3ZWVuIHRoZSBQYXJ0aWVzLCBzdWINCmoNCmVjdCB0byB0aGUgdGVybXMgb2YgdGhlIE9wZXJhdGluZyBTdGF0ZW1lbnQgdGhlbiBpbiBlZmZlY3QgYW5kIHRoZSBNYXN0ZXIgU2VydmljZSBBZ3JlZW1lbnQuIE5vdHdpdGhzdGFuZGluZyB0aGF0IHRoZSBQYXJ0aWVzIHNoYWxsIGJlIGxlZ2FsbHkgYm91bmQgZnJvbSB0aGUgdGltZSB0aGV5IGFncmVlIHRvIHRoZSB0ZXJtcyBvZiBhIFRyYW5zYWN0aW9uLCBLYXR5IHByb21wdGx5IHNoYWxsIG1lbW9yaWFsaXplIHRoZSB0ZXJtcyBvZiBlYWNoIA0KVHJhbnNhY3Rpb24gaW4gd3JpdGluZyBpbiBLYXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyBzdGFuZGFyZCBjb25maXJtYXRpb24gZm9ybSBvciB2aWEgZWxlY3Ryb25pYyBOb21pbmF0aW9uIHBsYXRmb3JtIChhIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBDb25maXJtYXRpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KKS4gKEZvciBwdXJwb3NlcyBvZiB0aGUgaW1tZWRpYXRlbHkgZm9yZWdvaW5nIHNlbnRlbmNlLCB0aGUgdGVybSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IHByb21wdGx5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBzaGFsbCBtZWFuLCB3aXRoIHJlZ2FyZCB0byBhbiBhZ3JlZW1lbnQgcmVhY2hlZCBvbiBhIFRyYW5zYWN0aW9uIG8NCm4gYSBwYXJ0aWN1bGFyIEdhcyBEYXksIChpKSBpZiBzdWNoIGFncmVlbWVudCBpcyByZWFjaGVkIGJlZm9yZSB0aGUgY2xvc2Ugb2YgTllNRVggdHJhZGluZyBmb3IgdGhhdCBHYXMgRGF5LCB0aGUgQ29uZmlybWF0aW9uIGZvciB0aGF0IFRyYW5zYWN0aW9uIHdpbGwgYmUgc2VudCB0byBDdXN0b21lciBieSA1OjAwIHAubS4gQ0NUIG9uIHRoYXQgR2FzIERheSBvciAoaWkpIGlmIHN1Y2ggYWdyZWVtZW50IGlzIHJlYWNoZWQgYWZ0ZXIgdGhlIGNsbw0Kcw0KZSBvZiB0aGUgTllNRVggdHJhZGluZyBmb3IgdGhhdCBHYXMgRGF5LCB0aGUgQ29uZmlybWF0aW9uIGZvciB0aGF0IFRyYW5zYWN0aW9uIHdpbGwgYmUgc2VudCB0byBDdXN0b21lciBieSA1OjAwIHAubS4gQ0NUIG9mIHRoZSBuZXh0IGZvbGxvd2luZyBHYXMgRGF5KS4gVGhlIFBhcnRpZXMgbWF5IGVsZWN0cm9uaWNhbGx5IHJlY29yZCBjb252ZXJzYXRpb25zIHZpYSB0ZWxlcGhvbmUsIGVtYWlsIG9yIGluc3RhbnQgbWVzc2FnaW5nIGJldHdlZW4gDQp0aGVpciByZXNwZWN0aXZlIGVtcGxveWVlcyByZWxhdGluZyB0byBhbnkgVHJhbnNhY3Rpb24sIHdpdGhvdXQgZnVydGhlciBub3RpY2UgdG8gdGhlIG90aGVyIFBhcnR5LCB0byBiZSB1c2VkIHNvbGVseSBmb3IgcmVmZXJlbmNlIHdoZW4gbWVtb3JpYWxpemluZyB0aGUgdGVybXMgb2YgYSBUcmFuc2FjdGlvbiBpbiBhIENvbmZpcm1hdGlvbjsgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGlcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBwcm92aWRlZCwgaG93ZXZlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAsIHRoYXQgYW55IHN1Y2ggcmVjb3JkaW5nIHNoYWxsIGJlIHN1YmplY3QgdA0KbyB2ZXJpZmljYXRpb24gb2YgYXV0aGVudGljaXR5LiBFYWNoIENvbmZpcm1hdGlvbiBzaGFsbCBiZSBzaWduZWQgYnkgS2F0eSBhbmQgZmF4ZWQgb3IgdHJhbnNtaXR0ZWQgZWxlY3Ryb25pY2FsbHkgdG8gQ3VzdG9tZXIgZm9yIGV4ZWN1dGlvbiBhbmQgZGVsaXZlcnkgdG8gS2F0eS4gVGhlIHJlcXVpcmVkIHRlcm1zIGZvciBlYWNoIFRyYW5zYWN0aW9uIHNoYWxsIGluY2x1ZGUgdGhlIFNlcnZpY2UgZmVlcywgZmVlIHN0cnVjdHVyZSwgdGhlIFRyDQphbnNhY3Rpb24gUGVyaW9kLCBhbmQgdGhlIGZvbGxvd2luZzoNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNS4yLjFcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHM5OVxxaiBcZmktNzIwXGxpMTQ0MFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMzlcaWx2bDJcb3V0bGluZWxldmVsMlxhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQ5NzE4MTc1IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBGaXJtIFN0b3JhZ2UgU2VydmljZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCjogQ2FwYWNpdHkgRGVtYW5kLCBNYXhpbXVtIERhaWx5IEluamVjdGlvbiBRdWFudGl0eSwgYW5kIE1heGltdW0gRGFpbHkgV2l0aGRyYXdhbCBRdWFudGl0eSwgYW5kIHRoZSBzcGVjaWZpYyBEZWxpdmVyeSBQb2ludChzKSBhbmQgUmVjZWlwdCBQb2ludChzKTsNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNS4yLjJcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBJbnRlcnJ1cHRpYmxlIFN0b3JhZ2UgU2VydmljZX17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxMzMyMTAzOSA6fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCB0aGUgaW5qZWN0aW9uLCB3aXRoZHJhd2FsLCBhbmQgc3RvcmFnZSBxdWFudGl0aWVzOw0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTkgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA1LjIuM1x0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IEZpcm0gV2hlZWxpbmcgU2VydmljZX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IDogV2hlZWxpbmcgUXVhbnRpdHkgYW5kIHRoZSBzcGVjaWZpYyBEZWxpdmVyeSBQb2ludChzKSBhbmQgUmVjZWlwdCBQb2ludChzKSB3aGVyZSBDdXN0b21lciB3aWxsIERlbGl2ZXIgYW5kIHJlY2VpdmUgdGhlIFdoZWVsaW5nIFF1YW50aXRpZXMuIFRoZSB0ZXJtcyBvZiB0aGlzIFNlcnZpY2UgYXJlIHN1YmplY3QgdG8gY29uZmlybWF0aW9uIHZpYSBlbGVjdA0Kcm9uaWMgTm9taW5hdGlvbiBwbGF0Zm9ybTsNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNS4yLjRcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBJbnRlcnJ1cHRpYmxlIFdoZWVsaW5nIFNlcnZpY2V9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCjogV2hlZWxpbmcgUXVhbnRpdHkgYW5kIHRoZSBzcGVjaWZpYyBEZWxpdmVyeSBQb2ludChzKSBhbmQgUmVjZWlwdCBQb2ludChzKSB3aGVyZSBDdXN0b21lciB3aWxsIERlbGl2ZXIgYW5kIHJlY2VpdmUgdGhlIFdoZWVsaW5nIFF1YW50aXRpZXMuIFRoZSB0ZXJtcyBvZiB0aGlzIFNlcnZpY2UgYXJlIHN1YmplY3QgdG8gY29uZmlybWF0aW9uIHZpYSBlbGVjdHJvbmljIE5vbWluYXRpb24gcGxhdGZvcm07DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDUuMi41XHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgUGFya2luZyBTZXJ2aWNlfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgOiBNYXhpbXVtIEFnZ3JlZ2F0ZSBQYXJraW5nIFF1YW50aXR5LCBSYXRhYmxlIERhaWx5IFBhcmtpbmcgUXVhbnRpdHksIGFuZCBSYXRhYmxlIERhaWx5IFVucGFya2luZyBRdWFudGl0eTsgYW5kDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDUuMi42XHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgTG9hbmluZyBTZXJ2aWNlfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgOiBNYXhpbXVtIEFnZ3JlZ2F0ZSBMb2FuaW5nIFF1YW50aXR5LCBSYXRhYmxlIERhaWx5IExvYW4gUXVhbnRpdHksIGFuZCBSYXRhYmxlIERhaWx5IExvYW4gUGF5YmFjayBRdWFudGl0eS4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDk3MTgxNzUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNS4yLjdcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkOTcxODE3NSBOby1Ob3RpY2UgU2VydmljZX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IDogTm8tbm90aWNlIHF1YW50aXR5IGFuZCB0aGUgc3BlY2lmaWMgRGVsaXZlcnkgUG9pbnQocykgYW5kIFJlY2VpcHQgUG9pbnQocykgd2hlcmUgQ3VzdG9tZXIgd2lzaGVzIHRvIGFsdGVyIGl0cyBpbmplY3Rpb25zIGFuZC9vciB3aXRoZHJhd2Fscy4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNS4zXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzOTdccWogXGZpLTcyMFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4NzIwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkOTcxODE3NSBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgQ29uZmlybWF0aW9uIFByb2Nlc3N9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgLiBVcG9uIHJlY2VpcHQgb2YgYSBzcGVjaWZpYyBDb25maXJtYXRpb24sIEN1c3RvbWVyIHNoYWxsIGVpdGhlcjoNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNS4zLjFcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHM5OVxxaiBcZmktNzIwXGxpMTQ0MFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMzlcaWx2bDJcb3V0bGluZWxldmVsMlxhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQ5NzE4MTc1IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBFeGVjdXRlIGFuZCBmYXggb3IgdHJhbnNtaXQgZWxlY3Ryb25pY2FsbHkgYmFjayB0byBLYXR5IHN1Y2ggc2lnbmVkIENvbmZpcm1hdGlvbiBjb25maXJtaW5nIHRoZSB0ZXJtcyBvZiB0aGUgVHJhbnNhY3Rpb247IG9yDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDUuMy4yXHRhYn1Ob3RpZnkgS2F0eSBpbiB3cml0aW5nIG9mIGFueSBjaGFuZ2VzIHJlcXVpcmVkIHRvIHJlZmxlY3QgQ3VzdG9tZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IHMgdW5kZXJzdGFuZGluZyBvZiB0aGUgdGVybXMgYWdyZWVkIHRvIGJ5IEthdHkgYQ0KbmQgQ3VzdG9tZXIsIHdpdGhpbiB0aGUgZWFybGllciB0byBvY2N1ciBvZiAoYSkgdGhyZWUgKDMpIEJ1c2luZXNzIEdhcyBEYXlzIGZyb20gZGVsaXZlcnkgb2YgdGhlIENvbmZpcm1hdGlvbiBieSBLYXR5OyBhbmQgKGIpIHRoZSBwZXJpb2Qgb2YgdGltZSBzcGVjaWZpZWQgaW4gc3VjaCBDb25maXJtYXRpb24uDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDUuNFx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczk3XHFqIFxmaS03MjBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDcyMFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMzlcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDk3MTgxNzUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IENoYW5nZXMgdG8gQ29uZmlybWF0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IC4gSWYgQ3VzdG9tZXIgZmFpbHMgdG8gbm90aWZ5IEthdHkgb2YgYW55IGNoYW5nZXMgaW4gYWMNCmNvcmRhbmNlIHdpdGggU2VjdGlvbiA1LjMuMiBhYm92ZSwgQ3VzdG9tZXIgc2hhbGwgYmUgZGVlbWVkIGZvciBhbGwgcHVycG9zZXMgdG8gaGF2ZSBjb25maXJtZWQgdGhlIHRlcm1zIHNldCBmb3J0aCBpbiBzdWNoIENvbmZpcm1hdGlvbiBhcyBhY2N1cmF0ZWx5IHJlZmxlY3RpbmcgdGhlIHRlcm1zIG9mIHRoZSBUcmFuc2FjdGlvbiBhcyBhZ3JlZWQgdG8gYnkgS2F0eSBhbmQgQ3VzdG9tZXIsIHJlZ2FyZGxlc3Mgb2Ygd2hldGhlciBDdXN0b21lcg0KIGV4ZWN1dGVzIGFuZCByZXR1cm5zIHN1Y2ggQ29uZmlybWF0aW9uIHRvIEthdHkuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDUuNVx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IEVycm9yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgLiBJZiBDdXN0b21lciBub3RpZmllcyBLYXR5IG9mIGFuIGFsbGVnZWQgZXJyb3IgaW4gYSBDb25maXJtYXRpb24gaW4gYWNjb3JkYW5jZSB3aXRoIFNlY3Rpb24gNS4zLjIsIHRoZSBQYXJ0aWVzIHNoYWxsIGF0dGVtcHQgdG8gcmVhY2ggYWdyZWVtZW50IG9uIHJldmlzaW9ucyB0byB0aGUgYXBwbGljYWJsZSBDb25maXJtYXRpb24gcmVxdWlyZWQgdG8gcHINCm9wZXJseSByZWZsZWN0IHRoZSBUcmFuc2FjdGlvbi1zcGVjaWZpYyB0ZXJtcyBhZ3JlZWQgdG8gYnkgdGhlIFBhcnRpZXMuIFRoZSBwcm9jZXNzIG9mIHZlcmlmeWluZyB0aGUgVHJhbnNhY3Rpb24gdGVybXMgYXMgbWVtb3JpYWxpemVkIGluIGEgQ29uZmlybWF0aW9uIGFzIHNldCBmb3J0aCBpbiB0aGlzIFNlY3Rpb24gNS4wIGlzIGZvciB0aGUgc29sZSBwdXJwb3NlIG9mIGNvcnJlY3RpbmcgYW55IGVycm9ycyBpbiB0cmFuc2NyaWJpbmcgdGhlIA0Kdg0KZXJiYWwgb3IgZWxlY3Ryb25pYyBhZ3JlZW1lbnQgbWFkZSBieSB0aGUgUGFydGllcyBhbmQgaXMgbm90IGludGVuZGVkIHRvIGJlIGEgbWVhbnMgZm9yIHJlLSBuZWdvdGlhdGluZyBhbnkgdGVybXMgb2Ygc3VjaCBhZ3JlZW1lbnQuIE9uY2Ugc3VjaCBhZ3JlZW1lbnQgaXMgcmVhY2hlZCwgS2F0eSBzaGFsbCBmYXggb3IgdHJhbnNtaXQgZWxlY3Ryb25pY2FsbHkgdG8gQ3VzdG9tZXIgdGhlIGFwcGxpY2FibGUgcmV2aXNlZCBDb25maXJtYXRpb24gDQpyZWZsZWN0aW5nIHRob3NlIHJldmlzaW9ucy4gU2VjdGlvbiA1LjMgc2hhbGwgYXBwbHkgdG8gQ3VzdG9tZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBzIHJlY2VpcHQgb2YgYW55IHN1Y2ggcmV2aXNlZCBDb25maXJtYXRpb24uDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDUuNlx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IEJpbmRpbmcgQ29uZmlybWF0aW9ufXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgLiBVcG9uIGNvbmZpcm1hdGlvbiwgb3IgZGVlbWVkIGNvbmZpcm1hdGlvbiwgb2YgdGhlIFRyYW5zYWN0aW9uLXNwZWNpZmljIHRlcm1zIGluIHRoZSBDb25maXJtYXRpb24gYnkgdGhlIEN1c3RvbWVyLCB0aGUgQ29uZmlybWF0DQppb24gc2hhbGwgYmVjb21lLCBmb3IgYWxsIHB1cnBvc2VzLCB0aGUgZmluYWwgYW5kIGNvbXBsZXRlIGV2aWRlbmNlIHdpdGggcmVzcGVjdCB0byB0aGUgVHJhbnNhY3Rpb24gdG8gd2hpY2ggaXQgYXBwbGllcy4gSW4gdGhlIGV2ZW50IChpKSBLYXR5IGZhaWxzLCBmb3IgYW55IHJlYXNvbiwgdG8gZGVsaXZlciB0byBDdXN0b21lciBhIGZvcm0gb2YgQ29uZmlybWF0aW9uIGluIHJlc3BlY3Qgb2YgYSBUcmFuc2FjdGlvbiBhcyByZXF1aXJlZCBieSANCnQNCmhpcyBTZWN0aW9uIDUuMCwgb3IgKGlpKSBDdXN0b21lciBub3RpZmllcyBLYXR5IGluIGFjY29yZGFuY2Ugd2l0aCBTZWN0aW9uIDUuMyBhbmQgdGhlIFBhcnRpZXMgdGhlcmVhZnRlciBmYWlsIHRvIHJlc29sdmUgYW55IGRpc3B1dGUgd2l0aCByZXNwZWN0IHRvIHRoZSB0ZXJtcyBzcGVjaWZpZWQgaW4gYSBDb25maXJtYXRpb24gZm9yd2FyZGVkIGJ5IEthdHksIHRoZSBUcmFuc2FjdGlvbiBhcyBvcmlnaW5hbGx5IGFncmVlZCB0byBieSB0aGUgUA0KYXJ0aWVzIChhcyBldmlkZW5jZWQgYnkgYSByZWNvcmQgb2YgdGhlIGluaXRpYWwgY29tbXVuaWNhdGlvbiBvZiBhbiBvZmZlciBhbmQgYW4gYWNjZXB0YW5jZSwgd2hldGhlciB2ZXJiYWwsIGVsZWN0cm9uaWMgb3Igb3RoZXJ3aXNlKSBzaGFsbCBuZXZlcnRoZWxlc3MgYmUgYmluZGluZy4gQWxsIHJlZmVyZW5jZXMgdG8gYSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgQ29uZmlybWF0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAgaW4gdGhpcyBPcGVyYXRpbmcgU3RhdGVtZW50IG9yIGluIGFueSBvdGhlciBUcmFuc2FjdGlvbiBEDQpvY3VtZW50IGFyZSBpbnRlbmRlZCAodW5sZXNzIGEgcHJvdmlzaW9uIGNvbnRlbXBsYXRlcyBhIHdyaXR0ZW4gZG9jdW1lbnQpIHRvIHJlZmVyIHRvIGJvdGggYSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFRyYW5zYWN0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICB0aGF0IGhhcyBiZWVuIG1lbW9yaWFsaXplZCBpbiBhIHdyaXR0ZW4gQ29uZmlybWF0aW9uLCBhcyB3ZWxsIGFzIGFueSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgVHJhbnNhY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBmb3Igd2hpY2ggYSB3cml0dGVuIENvbmZpcm1hdGlvbiB3YXMgbm90IGRvbmUgb3IgYWdyZWVkIHVwb24sIGJ1dCANCndoaWNoIGlzIG5vbmV0aGVsZXNzIGJpbmRpbmcgYmV0d2VlbiB0aGUgUGFydGllcyBwdXJzdWFudCB0byB0aGUgdGVybXMgb2YgdGhpcyBPcGVyYXRpbmcgU3RhdGVtZW50Lg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA1LjdcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBUZXJtcyBvZiBTZXJ2aWNlfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgLiBUaGUgdGVybXMgb2YgYSBUcmFuc2FjdGlvbiBzaGFsbCByZW1haW4gaW4gZWZmZWN0IHVudGlsIGR1bHkgY2hhbmdlZCBieSB0aGUgYWdyZWVtZW50IG9mIHRoZSBQYXJ0aWVzIG9yIHVudGlsIGludGVycnVwdGVkIGJ5IEthdHkgZm9yIG9wZXINCmF0aW9uYWwgcmVhc29ucywgdG8gc2VydmUgQ3VzdG9tZXJzIHdpdGggYSBzdXBlcmlvciBTZXJ2aWNlIHByaW9yaXR5IG9yIGFzIG90aGVyd2lzZSBhbGxvd2VkIGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgdGVybXMgb2YgdGhlIE1hc3RlciBTZXJ2aWNlIEFncmVlbWVudCBvciB0aGUgYXBwbGljYWJsZSBUcmFuc2FjdGlvbi4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNS44XHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgQ3JlZGl0d29ydGhpbmVzc317XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IC4gTm90aGluZyBpbiB0aGlzIE9wZXJhdGluZyBTdGF0ZW1lbnQgb3IgdGhlIE1hc3RlciBTZXINCnZpY2UgQWdyZWVtZW50IHNoYWxsIGJlIGRlZW1lZCB0byBvYmxpZ2F0ZSBLYXR5IHRvIHJlbmRlciBhbnkgU2VydmljZSB1bnRpbCBib3RoIEN1c3RvbWVyIGFuZCBLYXR5IGhhdmUgZW50ZXJlZCBpbnRvIGEgVHJhbnNhY3Rpb24gZm9yIHRoYXQgU2VydmljZS4gS2F0eSBzaGFsbCBub3QgYmUgcmVxdWlyZWQgdG8gcHJvdmlkZSBhbnkgU2VydmljZSBpZjogKGkpIEthdHkgZGV0ZXJtaW5lcywgYmFzZWQgb24gaXRzIGNyZWRpdCBhbmFseXNpcywgdA0KaGF0IHRoZSByZXF1ZXN0aW5nIHBhcnR5IGRvZXMgbm90IHNhdGlzZnkgS2F0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KcyBjcmVkaXQgcmVxdWlyZW1lbnRzIGFzIGRlc2NyaWJlZCBpbiBTZWN0aW9uIDE5LjAgYmVsb3c7IChpaSkgdGhlIFNlcnZpY2UgcmVxdWVzdGVkIHdvdWxkIHJlcXVpcmUgdGhlIGNvbnN0cnVjdGlvbiwgbW9kaWZpY2F0aW9uLCBleHBhbnNpb24gb3IgYWNxdWlzaXRpb24gb2YgYW55IGZhY2lsaXR5OyAoaWlpKSB0aGUgU2VydmljZSByZXF1ZXN0ZWQgd291bGQgbm90DQogY29tcGx5IHdpdGggdGhlIE9wZXJhdGluZyBTdGF0ZW1lbnQgdGhlbiBpbiBlZmZlY3Qgb3IgdGhlIE1hc3RlciBTZXJ2aWNlIEFncmVlbWVudDsgKGl2KSBLYXR5IGxhY2tzIGFkZXF1YXRlIGNhcGFjaXR5IG9yIGRlbGl2ZXJhYmlsaXR5IHRvIHByb3ZpZGUgdGhlIHJlcXVlc3RlZCBTZXJ2aWNlOyBvciAodikgdGhlIFBhcnRpZXMgYXJlIHVuYWJsZSB0byBhZ3JlZSB1cG9uIG11dHVhbGx5IGFjY2VwdGFibGUgdGVybXMgZm9yIHRoZSBTZXJ2aWMNCmUuDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzM4ODc4MDQ5fXtcKlxia21rc3RhcnQgX1RvYzM5MjM5NTIyfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NSBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxiXGNhcHNcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkOTcxODE3NSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA2LjBcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczk1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHg3MjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczM5XG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkOTcxODE3NSBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkOTcxODE3NSBOT01JTkFUSU9OU317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkMTQ5NjAyMTEge1wqXGJrbWtlbmQgX1RvYzM4ODc4MDQ5fXtcKlxia21rZW5kIF9Ub2MzOTIzOTUyMn0NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNi4xXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzOTdccWogXGZpLTcyMFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4NzIwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkOTcxODE3NSBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgTm9taW5hdGlvbiBSZXF1aXJlbWVudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQouIEZvciBhbnkgR2FzIERheSB0aGF0IEN1c3RvbWVyIGRlc2lyZXMgRGVsaXZlcmllcyBvciBSZWNlaXB0cyBvZiBHYXMgb3Igb3RoZXIgU2VydmljZXMgYXQgdGhlIEthdHkgU3RvcmFnZSBGYWNpbGl0eSwgQ3VzdG9tZXIgbXVzdCBzdWJtaXQgYSByZXF1ZXN0IGZvciBzdWNoIERlbGl2ZXJ5IG9yIFJlY2VpcHQgb3Igb3RoZXIgU2VydmljZSAoYSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgTm9taW5hdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgKSBpbiANCmFjY29yZGFuY2Ugd2l0aCB0aGUgcmVxdWlyZW1lbnRzIG9mIHRoaXMgU2VjdGlvbiA2LjAuIE5vbWluYXRpb25zIHdpbGwgYmUgYWNjZXB0ZWQgb25seSBmb3IgVHJhbnNhY3Rpb25zIHRoYXQgYXJlIGN1cnJlbnRseSBpbiBlZmZlY3QgYW5kIG9ubHkgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZSBwcm92aXNpb25zIG9mIHRoaXMgU2VjdGlvbiA2LjAuIFN1YmplY3QgdG8gU2VjdGlvbnMgOC4wLCAyMC4wLCAyMS4wLCBhbmQgMjIuMCBiZWxvdywgS2F0eQ0KIHNoYWxsIHNjaGVkdWxlIHN1Y2ggU2VydmljZXMgYXMgYXJlIG5vbWluYXRlZCBhbmQgdGVuZGVyZWQgdG8gS2F0eSBpbiBhY2NvcmRhbmNlIHdpdGggdGhlIHRlcm1zIHNldCBmb3J0aCBoZXJlaW4gYW5kIGluIHRoZSBhcHBsaWNhYmxlIENvbmZpcm1hdGlvbi4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDE0OTYwMjExIFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDYuMS4xXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzOTlccWogXGZpLTcyMFxsaTE0NDBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczM5XGlsdmwyXG91dGxpbmVsZXZlbDJcYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkOTcxODE3NSBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDE0OTYwMjExIEN1c3RvbWVyIHNoYWxsIG1ha2UgYWxsIE5vbWluYXRpb25zIGVsZWN0cm9uaWNhbGx5IGF0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxjZjJcdWxjMlxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxNDk2MDIxMSAgfXtcZmllbGRcZmxkZWRpdHtcKlxmbGRpbnN0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTAxMDA0NjUgDQogSFlQRVJMSU5LICJodHRwOi8vd3d3Lmdhc3N0b3JhZ2UubmV0L2thdHkiIH19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxjZjJcdWxjMlxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxNDk2MDIxMSB3d3cuZ2Fzc3RvcmFnZS5uZXQva2F0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcY2YyXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDE0OTYwMjExICB9fX1cc2VjdGQgXGx0cnNlY3QNClxsaW5leDBcZW5kbmhlcmVcc2VjdGxpbmVncmlkMzYwXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxNDk2MDIxMSAodGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDE0OTYwMjExIEthdHkgV2Vic2l0ZQ0KfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkMTQ5NjAyMTEgDQopLiBLYXR5IHNoYWxsIHRha2Ugc3VjaCBjb21tZXJjaWFsbHkgcmVhc29uYWJsZSBzdGVwcyBhcyBpdCBkZWVtcyBuZWNlc3NhcnkgdG8gZW5zdXJlIHRoZSBzZWN1cml0eSBhbmQgYWRlcXVhdGUgZnVuY3Rpb25pbmcgb2Ygc3VjaCB3ZWJzaXRlLCBidXQgc2hhbGwgaGF2ZSBubyBsaWFiaWxpdHkgZm9yIHRoZSBpbmFjY3VyYWN5IG9yIGluY29tcGxldGVuZXNzIG9mIGFueSBjb21tdW5pY2F0aW9uIHJlbGF0ZWQgdGhlcmV0by4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNi4yXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzOTdccWogXGZpLTcyMFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4NzIwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkOTcxODE3NSBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgTm9taW5hdGlvbnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgLiBLYXR5IHdpbGwgYWNjZXB0IE5vbWluYXRpb25zIGZvciBTZXJ2aWNlIGFzIGZvbGxvd3M6DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDYuMi4xXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzOTlccWogXGZpLTcyMFxsaTE0NDBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczM5XGlsdmwyXG91dGxpbmVsZXZlbDJcYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkOTcxODE3NSBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgTW9udGhseSBOb21pbmF0aW9uczogTm8gbGF0ZXIgdGhhbiAxOjAwIHAubS4sIENlbnRyYWwgQ2xvY2sgVGltZSwgb24gdGhlIHNlY29uZCBCdXNpbmVzcyBEYXkgcHJpb3IgdG8gdGhlIGZpcnN0IEdhcyBEYXkgb2YgZWFjaCBNb250aCBvciwgaWYgdGhlIGluaXRpYWwgRGVsaXZlcnkgb2YgDQpHYXMgdW5kZXIgYSBDb25maXJtYXRpb24gaXMgbm90IHRvIG9jY3VyIGF0IHRoZSBiZWdpbm5pbmcgb2YgdGhlIE1vbnRoLCBvbiB0aGUgQnVzaW5lc3MgRGF5IHByaW9yIHRvIHRoZSBkYXRlIG9mIHRoZSBpbml0aWFsIERlbGl2ZXJpZXMsIEN1c3RvbWVyIHNoYWxsIHByb3ZpZGUgS2F0eSB3aXRoIGEgTm9taW5hdGlvbiBzaG93aW5nIChpKSBDdXN0b21lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IA0KXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyBEYWlseSB2b2x1bWVzIHRvIGJlIERlbGl2ZXJlZCB0byBLYXR5IGF0IGVhY2ggUmVjZQ0KaXB0IFBvaW50IGR1cmluZyB0aGUgc3VjY2VlZGluZyBNb250aCBvciAoaWkpIGFuIGFsbG9jYXRpb24gb2Ygdm9sdW1lcyB0byBiZSBEZWxpdmVyZWQgYnkgS2F0eSBhdCBlYWNoIERlbGl2ZXJ5IFBvaW50LCBhcyBhcHBsaWNhYmxlLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTkgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA2LjIuMlx0YWJ9DQpEYWlseSBOb21pbmF0aW9uczogSWYgQ3VzdG9tZXIgd2lzaGVzIHRvIG1ha2UgYSBjaGFuZ2UgdG8gYSBOb21pbmF0aW9uIGZvciBhIHBhcnRpY3VsYXIgR2FzIERheSwgQ3VzdG9tZXIgc2hhbGwgYWR2aXNlIEthdA0KeSBvZiBzdWNoIGNoYW5nZSwgaW5jbHVkaW5nLCBidXQgbm90IGxpbWl0ZWQgdG8sIHRoZSBRdWFudGl0eSBvZiBHYXMgc2NoZWR1bGVkIHRvIGJlIHRlbmRlcmVkIGF0IGVhY2ggb2YgdGhlIFJlY2VpcHQgUG9pbnQgYW5kIERlbGl2ZXJ5IFBvaW50IHZpYSB0aGUgS2F0eSBXZWJzaXRlIGFzIHNvb24gYXMgcG9zc2libGUsIGJ1dCBpbiBubyBldmVudCBsYXRlciB0aGFuIDE6MDAgcC5tLiwgQ2VudHJhbCBDbG9jayBUaW1lLCBvbiB0aGUgZmlyc3QgDQpCdXNpbmVzcyBEYXkgaW1tZWRpYXRlbHkgcHJlY2VkaW5nIHRoZSBHYXMgRGF5IG9uIHdoaWNoIHN1Y2ggY2hhbmdlIGlzIHRvIHRha2UgcGxhY2UuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5OSBccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDYuMi4zXHRhYn19e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgTm8tTm90aWNlIFNlcnZpY2UgTm9taW5hdGlvbnM6IH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IElmIEN1c3RvbWVyIGRlc2lyZXMgTm8tTm90aWNlIFNlcnZpY2UgdW5kZXIgYSBOTlNTIE1hc3RlciBTZXJ2aWNlIEFncmVlbWVudCwgQ3VzdG9tZXIgbWF5IHN1Ym1pdCBhIG5vbWluYXRpb24gdG8gS2F0eSB0byBzY2hlZHVsZSBzdWNoIE5vLU5vDQp0aWNlIFNlcnZpY2UgYXQgYW55IHRpbWUgcHJpb3IgdG8gdGhlIGRhdGUgYW5kIHRpbWUgYXQgd2hpY2ggQ3VzdG9tZXIgZGVzaXJlcyBzdWNoIE5vLU5vdGljZSBTZXJ2aWNlIHRvIGNvbW1lbmNlLiBLYXR5IHdpbGwgc2NoZWR1bGUgc3VjaCBzZXJ2aWNlIG9ubHkgaWYgdGhlIGFwcGxpY2FibGUgaW50ZXJjb25uZWN0ZWQgcGFydGllcyBhZ3JlZSBvbiB0aGUgaG91cmx5IGZsb3dzIG9mIHRoZSBub21pbmF0aW9uIGFuZCB0aGUgbm9taW5hdGlvbiANCm8NCnRoZXJ3aXNlIHNhdGlzZmllcyB0aGUgbGltaXRhdGlvbnMgdW5kZXIgdGhlIE5OU1MgTWFzdGVyIFNlcnZpY2UgQWdyZWVtZW50LiBUbyB0aGUgZXh0ZW50IHRoYXQgdGhlIG5vbWluYXRpb24gaW52b2x2ZXMgc2NoZWR1bGluZyBzZXJ2aWNlIGZvciB0aGUgZm9sbG93aW5nIGRheSwgS2F0eSB3aWxsIHNjaGVkdWxlIHN1Y2ggc2VydmljZSBvbmx5IGlmIEthdHkgaXMgYWJsZSB0byBjb25maXJtIHRoZSByZWNlaXB0IGFuZCBkZWxpdmVyeSBvZiBzdQ0KY2ggR2FzIGF0IHRoZSBhcHBsaWNhYmxlIFBvaW50KHMpIG9mIFJlY2VpcHQgYW5kIFBvaW50KHMpIG9mIERlbGl2ZXJ5LiBBbGwgbm9taW5hdGlvbnMgc2hhbGwgYmUgYmFzZWQgb24gYSBkYWlseSBxdWFudGl0eS59e1xydGxjaFxmY3MxIFxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDYuMi40XHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpOb21pbmF0aW9uczogQWRkaXRpb25hbCBOb21pbmF0aW9uIGN5Y2xlcyBzaGFsbCBiZSBhdmFpbGFibGUgZm9yIEN1c3RvbWVyIHVwb24gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTIwMTIwMSBkaXJlY3QgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IHJlcXVlc3QgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTIwMTIwMSANCnRvIEthdHksIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBmb3IgYW4gYWRkaXRpb25hbCBjaGFyZ2UgYXMgYWdyDQplZWQgdXBvbiBieSBLYXR5IGFuZCBDdXN0b21lciBpbiB0aGUgYXBwbGljYWJsZSBDb25maXJtYXRpb24uIElmIEthdHksIGluIGl0cyByZWFzb25hYmxlIGRpc2NyZXRpb24sIGFjY2VwdHMgYSBOb21pbmF0aW9uIGZyb20gQ3VzdG9tZXIgZm9yIERlbGl2ZXJ5IG9mIEdhcyBkdXJpbmcgYSBwZXJpb2Qgb2YgbGVzcyB0aGFuIHR3ZW50eS1mb3VyICgyNCkgaG91cnMsIGluIG5vIGV2ZW50IHNoYWxsIEN1c3RvbWVyIGJlIGVudGl0bGVkIHRvIGEgRGUNCmxpdmVyeSBncmVhdGVyIHRoYW4gb25lIHR3ZW50eS1mb3VydGggKDEvMjR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHN1cGVyXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgdGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgKSBvZiB0aGUgQ3VzdG9tZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KcyBNRElRIG9yIE1EV1EsIG9yIE1EUlEgb3IgTUREUSBmb3IgdGhlIGNvbnRyYWN0IG11bHRpcGxpZWQgYnkgdGhlIG51bWJlciBvZiBob3VycyBiZXR3ZWVuIHRoZSBlZmZlY3RpdmUgdGltZSBvZiB0aGUgRGVsaXZlcnkgYW5kIHRoZSBlbmQgb2YgdGhlIEdhcyBEYXkuICBQcm92aWRlZCBob3dldmVyLCB0aGF0IGEgQ3VzdG9tZXIgdW5kZXINCiBhIE5OU1MgTWFzdGVyIFNlcnZpY2UgQWdyZWVtZW50IGhhcyB0aGUgb3B0aW9uLCBwdXJzdWFudCB0byB0aGUgcmlnaHRzIGFuZCBsaW1pdGF0aW9ucyBkZXNjcmliZWQgaW4gU2VjdGlvbiA2LjIuMywgZm9yIEN1c3RvbWVyIHRvIGluY3JlYXNlIG9yIGRlY3JlYXNlIGl0cyBpbmplY3Rpb25zIG9yIHdpdGhkcmF3YWxzIG9mIEdhcyBhdCBwcmltYXJ5IHBvaW50cyBzcGVjaWZpZWQgaW4gQ3VzdG9tZXJ9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IHMgTm8tTm90aWNlIFN0b3JhZ2UgU2VydmljZSBBZ3JlZW1lbnQgZnJvbSBleGlzdGluZyBzY2hlZHVsZWQgcXVhbnRpdGllcywgaW5jbHVkaW5nIGEgbm9taW5hdGlvbiBvZiB6ZXJvLCB1cCB0byBDdXN0b21lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyBNRElRIG9yIE1EV1EsIGFzIGFwcGxpY2FibGUsIHdpdGhvdXQgY29tcGx5aW5nIHdpdGggdGhlIGRlYWRsaW5lcyBmb3IgcmV2aXNlZCBub21pbmF0aW9ucyB1bmRlciB0aGlzIFNlY3Rpb24gNi59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5MjQzNzAxIDB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAuIEZ1cnRoZXIsIHRoZSBuby1ub3RpY2Ugb3B0aW9uIGlzIGFsc28gbGltaXRlZCBieSB0aGUgTURSUSBhbmQgTUREUSBhdCBzdWNoIHBvaW50cy4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNi4zXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzOTdccWogXGZpLTcyMFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4NzIwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkOTcxODE3NSBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgVGltZWx5IE5vbWluYXRpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgLiBJZiBDdXN0b21lciBmYWlscyB0byBwcm92aWRlIGEgdGltZWx5IE5vbWluYXRpb24sIEN1c3RvbWVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBzIE5vbWluYXRpb24gc2hhbGwgYmUgcmVqZWN0ZWQgdW5sZXNzIEthdHksIGluIGl0cyByZWFzb25hYmxlIGRpc2NyZXRpb24sIGFncmVlcyB0byBhY2NlcHQgdGhlIGxhdGUgTm9taW5hdGlvbi4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNi40XHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgU2NoZWR1bGluZyBvZiBOb21pbmF0aW9ufXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgLiBUbyBjb25maXJtIGFuZCBzY2hlZHVsZSBDdXN0b21lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KcyBOb21pbmF0aW9uLCBLYXR5IHdpbGwgY29uc2lkZXIgdGhlIGF2YWlsYWJsZSBjYXBhY2l0eSBvZiB0aGUgS2F0eSBTdG9yYWdlIEZhY2lsaXR5LCBvdGhlciBGaXJtIGFuZCBJbnRlcnJ1cHRpYmxlIE5vbWluYXRpb25zLCBhbmQgdGhlIGFnZ3JlZ2F0ZSBvZiBTdG9yYWdlIEludmVudG9yeSBhdCB0aGUgcmVsZXZhbnQgdGltZS4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNi41XHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgUmVqZWN0aW9uIG9mIE5vbWluYXRpb259e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAuIEthdHkgc2hhbGwgYWx3YXlzIGhhdmUgdGhlIHJpZ2h0IHRvIHJlamVjdCBhIE5vbWluYXRpb24sIGFuZCBzaGFsbCBoYXZlIG5vIGxpYWJpbGl0eSB0byBDdXN0b21lciBvciBhbnkgb3RoZXIgUGVyc29uIGluIGNvbm5lY3Rpb24gd2l0aCBzdWNoIHJlamVjdGlvbiBvZiBTZXJ2aWNlLCBpZiB1bmRlciBzdWNoIE5vbWluYXRpb246DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDYuNS4xXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzOTlccWogXGZpLTcyMFxsaTE0NDBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczM5XGlsdmwyXG91dGxpbmVsZXZlbDJcYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkOTcxODE3NSBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgdGhlIGFnZ3JlZ2F0ZSBjaGFyZ2VzIHBheWFibGUgYnkgQ3VzdG9tZXIgZm9yIHRoZSByZXF1ZXN0ZWQgU2VydmljZXMsIHRvDQpnZXRoZXIgd2l0aCB0aGUgdG90YWwgYWdncmVnYXRlIGNoYXJnZXMgcGF5YWJsZSBieSBDdXN0b21lciB1bmRlciBhbGwgb3RoZXIgQ29uZmlybWF0aW9ucyBhbmQgYWxsIG90aGVyIGFtb3VudHMgb3dlZCBieSBDdXN0b21lciB0byBLYXR5LCB3b3VsZCBleGNlZWQgdGhlIGNyZWRpdCBsaW1pdCBlc3RhYmxpc2hlZCBmb3IgQ3VzdG9tZXIgcHVyc3VhbnQgdG8gU2VjdGlvbiAxOS4wOw0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTkgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA2LjUuMlx0YWJ9dGhlIFF1YW50aXR5IG9mIEdhcyB0byBiZSBpbmplY3RlZCB1bg0KZGVyIGFuIGluamVjdGlvbiBOb21pbmF0aW9uIHdvdWxkIGNhdXNlIEN1c3RvbWVyIEludmVudG9yeSB0byBleGNlZWQgQ3VzdG9tZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBzIENhcGFjaXR5IERlbWFuZDsNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNi41LjNcdGFifQ0KdGhlIFF1YW50aXR5IG9mIEdhcyB0byBiZSB3aXRoZHJhd24gdW5kZXIgYSB3aXRoZHJhd2FsIE5vbWluYXRpb24gaXMgZ3JlYXRlciB0aGFuIHRoZSBDdXN0b21lciBJbnZlbnRvcnkgYXQgdGhlIHRpbWUgb2YgdGhlIE5vbWluYXRpb247DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDYuNS40XHRhYn10aGUgUXVhbnRpdHkgb2YgR2FzIHRvIGJlIERlbGl2ZXJlZCBieSBLYXR5IHVuZGVyIGEgTG9hbmluZyBTZXJ2aWNlIENvbmZpcm1hdGlvbiB3b3VsZCBleGNlZWQgQ3VzdG9tZXJ9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IHMgTWF4aW11bSBBZ2dyZWdhdGUgTG9hbmluZyBRdWFudGl0eSBvciBSYXRhYmxlIERhaWx5IExvYW4gUXVhbnRpdHk7DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDYuNS41XHRhYn10aGUgUXVhbnRpdHkgb2YgR2FzIHRvIGJlIHJlY2VpdmVkIGJ5IEthdHkgdW5kZXIgYSBMb2FuaW5nIFNlcnZpY2UgQ29uZmlybWF0aW9uIHdvdWxkIGV4Y2VlZCBDdXN0b21lcn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyBSYXRhYmxlIERhaWx5IExvYW4gUGF5YmFjayBRdWFudGl0eTsNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNi41LjZcdGFifXRoZSBRdWFudGl0eSBvZiBHYXMgdG8gYmUgcmVjZWl2ZWQgdW5kZXIgYSBQYXJraW5nIFNlcnZpY2UgQ29uZmlybWF0aW9uIHdvdWxkIGJlIGluIGV4Y2VzcyBvZiBDdXN0b21lcn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyBNYXhpbXVtIEFnZ3JlZ2F0ZSBQYXJraW5nIFF1YW50aXR5IG9yIEN1c3RvbWVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBzIFJhdGFibGUgRGFpbHkgUGFya2luZyBRdWFudGl0eSBpbiByZXNwZWN0IG9mIHN1Y2ggVHJhbnNhY3Rpb247DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDYuNS43XHRhYn10aGUgUQ0KdWFudGl0eSBvZiBHYXMgdG8gYmUgRGVsaXZlcmVkIGJ5IEthdHkgdW5kZXIgYSBQYXJraW5nIFNlcnZpY2UgQ29uZmlybWF0aW9uIHdvdWxkIGJlIGluIGV4Y2VzcyBvZiBDdXN0b21lciBJbnZlbnRvcnkgb3IgQ3VzdG9tZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCnMgUmF0YWJsZSBEYWlseSBVbnBhcmtpbmcgUXVhbnRpdHkgaW4gcmVzcGVjdCBvZiBzdWNoIFRyYW5zYWN0aW9uOw0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTkgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA2LjUuOFx0YWJ9dGhlIFF1YW50aXR5IG9mIEdhcyB1bmRlciBhbnkgd2l0aGRyYXdhbCBvciBpbmplY3Rpb24gTm9taW5hdGlvbiB3b3VsZCBleGNlZWQgdGhlIEN1c3RvbWVyfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBzIHJhdGFibGUgTWF4aW11bSBEYWlseSBXaXRoZHJhd2FsIFF1YW50aXR5IG9yIHJhdGFibGUgTWF4aW11bSBEYWlseSBJbmplY3Rpb24gUXVhbnRpdHksIHJlc3BlY3RpdmVseTsNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNi41LjlcdGFifXRoZSBRdWFudGl0eSBvZiBHYXMgdG8gYmUgcmVjZWl2ZWQgdW5kZXIgYSBGaXJtIFdoZWVsaW5nIENvbmZpcm1hdGlvbiB3b3VsZCBleGNlZWQgdGhlIEN1c3RvbWVyfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBzIE1heGltdW0gQWdncmVnYXRlIFdoZWVsaW5nIFF1YW50aXR5Ow0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTkgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA2LjUuMTBcdGFifXRoZSBRdWFudGl0eSBvZiBHYXMgdG8gYmUgRGVsaXZlcmVkIHVuZGVyIGEgRmlybSBXaGVlbGluZyBDb25maXJtYXRpb24gd291bGQgZXhjZWVkIHRoZSBDdXN0b21lcn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyBNYXhpbXVtIEFnZ3JlZ2F0ZSBXaGVlbGluZyBRdWFudGl0eS4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgNi42XHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzOTdccWogXGZpLTcyMFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4NzIwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkOTcxODE3NSBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgQWNjZXB0YW5jZSBvZiBOb21pbmF0aW9ufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IC4gS2F0eSBtYXksIGluIGl0cyByZWFzb25hYmxlIGRpc2NyZXRpb24gYnV0IG5vdCBvbiBhbiB1bmR1bHkgDQpkaXNjcmltaW5hdG9yeSBiYXNpcywgYWNjZXB0IGFueSBzdWNoIE5vbWluYXRpb24gdGhhdCBtYXkgb3RoZXJ3aXNlIGJlIHJlamVjdGVkIHVuZGVyIFNlY3Rpb25zIDYuMi4xIC0gNi4yLjMgYWJvdmUuIElmIEthdHkgYWNjZXB0cyBhbnkgc3VjaCBOb21pbmF0aW9uLCBhbnkgU2VydmljZSB1bmRlciBzdWNoIE5vbWluYXRpb24gc2hhbGwgYmUgSW50ZXJydXB0aWJsZSBhbmQgc3ViamVjdCB0byBhbnkgYXBwbGljYWJsZSBPdmVycnVuIENoYXJnZSANCmFuZC9vciBvdGhlciBhcHBsaWNhYmxlIGZlZXMuIE5vdGhpbmcgaW4gdGhpcyBTZWN0aW9uIHNoYWxsIGJlIGNvbnN0cnVlZCBhcyBvYmxpZ2F0aW5nIEthdHkgdG8gYWNjZXB0IGFueSBleGNlc3MgTm9taW5hdGlvbiBldmVuIGlmIEthdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IHMgcmVmdXNhbCB0byBkbyBzbyByZXN1bHRzIGluIEN1c3RvbWVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpzIGJyZWFjaCBvZiBpdHMgb2JsaWdhdGlvbiB0byByZWR1Y2UgQ3VzdG9tZXIgSW52ZW50b3J5IHRvIHplcm8gYnkgdGhlIGVuZCBvZiB0aGUgVHJhbnNhY3Rpb24gUGVyaW9kIGFzIHNldCBmb3J0aCBpbiB0aGUgYXBwbGljYWJsZSBDb25maXJtYXRpb24uDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDYuN1x0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IE5vbWluYXRpb24gUHJvY2VkdXJlc317XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IC4gS2F0eSBtYXkgY2hhbmdlIHRoZSBmb3JlZ29pbmcgTm9taW5hdGlvbiBwcm9jZWR1cmVzIGZyb20gdGltZSB0byB0aW1lIG9uIG9uZSAoMSkgY2FsZW5kYXIgTW9udGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IHMgcHJpb3Igd3JpdHRlbiBub3RpY2UgdG8gQ3VzdG9tZXIgb3IgYXMgbWF5IGJlIG5lY2Vzc2FyeSB0byBtZWV0IHRoZSBEZXNpZ25hdGVkIFBpcGVsaW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpzIHJlcXVpcmVtZW50cyBvciBLYXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyBvcGVyYXRpb25hbCBuZWVkcy4NClxwYXIge1wqXGJrbWtzdGFydCBfVG9jMzg4NzgwNTB9e1wqXGJrbWtzdGFydCBfVG9jMzkyMzk1MjN9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk1IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGJcY2Fwc1xkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ5NzE4MTc1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDcuMFx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzOTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDcyMFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMzlcb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ5NzE4MTc1IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ5NzE4MTc1IFBSSU9SSVRZIE9GIFNFUlZJQ0V7XCpcYmtta2VuZCBfVG9jMzg4NzgwNTB9e1wqXGJrbWtlbmQgX1RvYzM5MjM5NTIzfQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA3LjFcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHM5N1xxaiBcZmktNzIwXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHg3MjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczM5XGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQ5NzE4MTc1IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBTY2hlZHVsaW5nIG9mIFByaW9yaXR5IG9mIFNlcnZpY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgLiBTdG9yYWdlIGNhcGFjaXR5LCBpbmplY3Rpb24sIGFuZCBkZWxpdmVyYWJpbGl0eSB3aWxsIGJlIGF2YWlsYWJsZSBpbiB0aGUgZm9sbG93aW5nIG9yZGVyIG9mIGRlY2xpbmluZyBwcmlvcml0eToNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczEwMSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChhKVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczEwMVxxaiBcZmktNzIwXGxpMjE2MFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MjE2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMzlcaWx2bDNcb3V0bGluZWxldmVsM1xhZGp1c3RyaWdodFxyaW4wXGxpbjIxNjBcaXRhcDBccGFyYXJzaWQxMDg4MDQ4NSBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgRmlybSBTdG9yYWdlIFNlcnZpY2UsIEZpcm0gV2hlZWxpbmcgU2VydmljZSwgYW5kIE5vLU5vdGljZSBTZXJ2aWNlIChlcXVhbGx5KTsNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczEwMSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChiKVx0YWJ9QXV0aG9yaXplZCBPdmVycnVuIGluamVjdGlvbnMgb3Igd2l0aGRyYXdhbHMgcmVxdWVzdGVkIHB1cnN1YW50IHRvIEZpcm0gU3RvcmFnZSBTZXJ2aWNlIHJpZ2h0czsNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczEwMSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChjKVx0YWJ9UGFya2luZyBTZXJ2aWNlIGFuZCBMb2FuaW5nIFNlcnZpY2UgKGVxdWFsbHkpOw0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMTAxIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGQpXHRhYn1JbnRlcnJ1cHRpYmxlIFN0b3JhZ2UgU2VydmljZTsNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczEwMSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChlKVx0YWJ9QXV0aG9yaXplZCBPdmVycnVuIGluamVjdGlvbnMgb3Igd2l0aGRyYXdhbHMgcmVxdWVzdGVkIHB1cnN1YW50IHRvIEludGVycnVwdGlibGUgU3RvcmFnZSBTZXJ2aWNlIHJpZ2h0czsNCg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMTAxIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGYpXHRhYn1JbnRlcnJ1cHRpYmxlIFdoZWVsaW5nIFNlcnZpY2U7IGFuZA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMTAxIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGcpXHRhYn0NCk1ha2UtdXAgdm9sdW1lcyB0byBjb3JyZWN0IHByaW9yIHZhcmlhbmNlcyBiZXR3ZWVuIChpKSBEZXNpZ25hdGVkIFBpcGVsaW5lIGFuZCBLYXR5LCAoaWkpIEN1c3RvbWVyIGFuZCBLYXR5LCBhbmQgKGlpaSkgQ3VzdG9tZXIgYW5kIERlc2lnbmF0ZWQgUGlwZWxpbmUgaWYgdGhlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDk3MTgxNzVcY2hhcnJzaWQ5NzE4MTc1IHZhcmlhbmNlfXtccnRsY2hcZmNzMSBcYWJcYWYwIA0KXGx0cmNoXGZjczAgXGNhcHNcaW5zcnNpZDk3MTgxNzVcY2hhcnJzaWQ5NzE4MTc1ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NzE4MTc1XGNoYXJyc2lkOTcxODE3NSB3YXMgZHVlIHRvIEthdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ5NzE4MTc1ICdzIGZhaWx1cmUgdG8gcmVjZWl2ZSBvciBEZWxpdmVyIEN1c3RvbWVyJ3Mgc2NoZWR1bGVkIHZvbHVtZXMufXtccnRsY2hcZmNzMSANClxhYlxhZjBcYWZzMjQgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDk3MTgxNzVcY2hhcnJzaWQxNDk2MDIxMSANClxwYXIge1wqXGJrbWtzdGFydCBfVG9jMzg4NzgwNTF9e1wqXGJrbWtzdGFydCBfVG9jMzkyMzk1MjR9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk1IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGJcY2Fwc1xkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ5NzE4MTc1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDguMFx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzOTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDcyMFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMzlcb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ5NzE4MTc1IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ5NzE4MTc1IElOVEVSUlVQVElPTiBPRiBTRVJWSUNFe1wqXGJrbWtlbmQgX1RvYzM4ODc4MDUxfXtcKlxia21rZW5kIF9Ub2MzOTIzOTUyNH0NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgOC4xXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzOTdccWogXGZpLTcyMFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4NzIwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkOTcxODE3NSBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgRmlybSBTZXJ2aWNlIGFuZCBJbnRlcnJ1cHRpYmxlIFNlcnZpY2VzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IC4gSW50ZXJydXB0aWJsZSBTZXJ2aWNlcyBhcmUgc3ViamVjdCB0byBpbnRlcnJ1cHRpb24gYnkgS2F0eSBhdCBhbnkgdGltZSBhbmQgZm9yIGFueSByZWFzb24uIA0KRmlybSBTZXJ2aWNlIGlzIHN1YmplY3QgdG8gaW50ZXJydXB0aW9ucyByZXN1bHRpbmcgZnJvbSBGb3JjZSBNYWpldXJlLCBtYWludGVuYW5jZSwgb3BlcmF0aW9uYWwgZmxvdyBvcmRlcnMsIGN1cnRhaWxtZW50cyAod2hldGhlciBjbGFpbWVkIGJ5IEthdHksIHRoZSBEZXNpZ25hdGVkIFBpcGVsaW5lIG9yIGFueSBvdGhlciB0cmFuc3BvcnRpbmcgcGlwZWxpbmUpIGFuZC9vciBhcyBvdGhlcndpc2Ugc2V0IGZvcnRoIGluIHRoaXMgU2VjdGlvbiA4DQouMC4gSW4gdGhlIGV2ZW50IFNlcnZpY2UgaXMgaW50ZXJydXB0ZWQsIEthdHkgd2lsbCBub3RpZnkgQ3VzdG9tZXIgYW5kIEN1c3RvbWVyIHNoYWxsIG5vbWluYXRlIGZvciB3aXRoZHJhd2FsIG9mIGl0cyBzdG9yZWQgb3IgcGFya2VkIEdhcywgaW5qZWN0aW9uIG9mIEdhcyBsb2FuZWQgdG8gaXQgYW5kL29yIHdoZWVsaW5nIGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgcmVxdWlyZW1lbnRzIHNldCBmb3J0aCBoZXJlaW4uDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ5NzE4MTc1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDguMlx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ5NzE4MTc1IEludGVycnVwdGlibGUgV2hlZWxpbmcgU2VydmljZX17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KLiBJbnRlcnJ1cHRpYmxlIFdoZWVsaW5nIFNlcnZpY2VzIGFyZSBzdWJqZWN0IHRvIGludGVycnVwdGlvbiBieSBlaXRoZXIgUGFydHkgYXQgYW55IHRpbWUgYW5kIGZvciBhbnkgcmVhc29uLCBwcm92aWRlZCB0aGF0IChpKSBDdXN0b21lciBtdXN0IHByb3ZpZGUgbm90aWNlIHRvIEthdHkgYnkgdGVsZXBob25lIGF0IGxlYXN0IHR3ZWx2ZSAoMTIpIGhvdXJzIGJlZm9yZSB0aGUgdGltZSB0aGF0IHRoZSBSZWNlaXB0IGFuZC9vcg0KIERlbGl2ZXJ5IG9mIEdhcyB3aWxsIGJlIGludGVycnVwdGVkIGFuZCAoaWkpIEthdHkgc2hhbGwgcHJvdmlkZSBub3RpY2UgdG8gQ3VzdG9tZXIgb2YgaW50ZXJydXB0aW9ucyBpbiBhIHRpbWVseSBhbmQgcmVhc29uYWJseSBwcnVkZW50IG1hbm5lci4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgOC4zXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpOb3JtYWwgT3BlcmF0aW5nIFByZXNzdXJlIGFuZCBJbnRlcnJ1cHRpb24gb2YgU2VydmljZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAuIFRoZSBLYXR5IFN0b3JhZ2UgRmFjaWxpdHkgaXMgZGVzaWduZWQgdG8gc3RvcmUsIGluamVjdCBhbg0KZCB3aXRoZHJhdyBHYXMgYmFzZWQgb24gdGhlIE5vcm1hbCBPcGVyYXRpbmcgUHJlc3N1cmUgbWFpbnRhaW5lZCBieSB0aGUgRGVzaWduYXRlZCBQaXBlbGluZSBhdCB0aGUgUmVjZWlwdCBQb2ludChzKSBhbmQgRGVsaXZlcnkgUG9pbnQocyksIGFzIGFwcGxpY2FibGUsIHdpdGggYWxsb3dhbmNlcyBmb3IgcmVhc29uYWJsZSBmbHVjdHVhdGlvbnMuIEthdHkgc2hhbGwgbm90IGJlIG9ibGlnYXRlZCB0byByZWNlaXZlIG9yIERlbGl2ZXIgbW9yZSBHDQphcyB0aGFuIHRoZSBLYXR5IFN0b3JhZ2UgRmFjaWxpdHkgaXMgY2FwYWJsZSBvZiByZWNlaXZpbmcgb3IgRGVsaXZlcmluZyB1bmRlciBwcmV2YWlsaW5nIHByZXNzdXJlcyBhbmQgQ3VzdG9tZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCnMgUmVjZWlwdCBhbmQgRGVsaXZlcnkgcmlnaHRzIG1heSBiZSBjdXJ0YWlsZWQgYnkgcmVhc29uIG9mIGFibm9ybWFsbHkgaGlnaCBvciBsb3cgcHJlc3N1cmUgaW4gdGhlIERlc2lnbmF0ZWQgUGlwZWxpbmUgc3lzdGVtLiBJbiB0aGUgZXZlbnQgdGhhdCBjb25kaXRpb25zIG9uIHRoZSBEZXNpZ25hdGVkIFBpcGVsaW5lfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCnMgc3lzdGVtIHZhcnkgc3Vic3RhbnRpYWxseSBmcm9tIHRoZSBOb3JtYWwgT3BlcmF0aW5nIFByZXNzdXJlLCBLYXR5IG1heSBpbnRlcnJ1cHQgU2VydmljZSB0byB0aGUgZXh0ZW50IG5lY2Vzc2FyeSBhbmQgY2FwYWNpdHkgd2lsbCBiZSBhbGxvY2F0ZWQgY29uc2lzdGVudCB3aXRoIHRoZSBhbGxvY2F0aW9uIHByb3Zpc2lvbnMgb2YgdGhpcyBPcGVyYXRpbmcgU3RhdGVtZW50Lg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA4LjRcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBDdXJ0YWlsbWVudHN9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCi4gS2F0eSBzaGFsbCBoYXZlIHRoZSByaWdodCB0byBjdXJ0YWlsIFJlY2VpcHRzIGFuZCBEZWxpdmVyaWVzIG9mIEdhcyBhcyByZWFzb25hYmx5IHJlcXVpcmVkIGZyb20gdGltZSB0byB0aW1lIHRvIHBlcmZvcm0gcm91dGluZSBvciBlbWVyZ2VuY3ksIHNjaGVkdWxlZCBvciB1bnNjaGVkdWxlZCBtYWludGVuYW5jZSwgcmVwYWlycywgYWRkaXRpb25zLCBvciBtb2RpZmljYXRpb25zIHRvIHRoZSBLYXR5IFN0b3JhZ2UgRmFjaWxpDQp0eSwgb3IgdGhlIHRlc3Rpbmcgb2YgdGhlIHNhbWUgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZSBhcHBsaWNhYmxlIHJlZ3VsYXRpb25zIGluIG9yZGVyIHRvIG1vbml0b3IgcHJlc3N1cmUgaW4gdGhlIEthdHkgU3RvcmFnZSBGYWNpbGl0eSB1bmRlciBzdGF0aWMgY29uZGl0aW9ucy4gSWYgYSBjYXBhY2l0eSBjb25zdHJhaW50IGlzIGFudGljaXBhdGVkIG9yIHBsYW5uZWQgKGZvciBleGFtcGxlLCBkdWUgdG8gc3lzdGVtIG1haW50ZW5hbmNlKSBLYXQNCnkgc2hhbGwgcG9zdCBhIG5vdGljZSBvZiB0aGUgYW50aWNpcGF0ZWQgY29uc3RyYWludCBvbiBpdHMgS2F0eSBXZWIgU2l0ZSBhdCBsZWFzdCB0d28gKDIpIEJ1c2luZXNzIERheXMgaW4gYWR2YW5jZSBvZiB0aGUgc3RhcnQgb2YgdGhlIGNvbnN0cmFpbnQgcGVyaW9kLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA4LjVcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBJbnRlcnJ1cHRpb24gb2YgU2VydmljZXN9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAuIEluIHRoZSBldmVudCBLYXR5IGlzIHVuYWJsZSB0byByZWNlaXZlIG9yIERlbGl2ZXIgYW55IFF1YW50aXR5IG9mIEdhcyBmb3IgDQphbnkgcmVhc29uIGFuZCBkZXRlcm1pbmVzLCBpbiBpdHMgcmVhc29uYWJsZSBkaXNjcmV0aW9uLCB0aGF0IGl0IGlzIHVuYWJsZSB0byBtZWV0IGFsbCBzY2hlZHVsZWQgb2JsaWdhdGlvbnMgdG8gYWxsIEN1c3RvbWVycywgS2F0eSBtYXkgaW50ZXJydXB0IFNlcnZpY2VzIHRvIEN1c3RvbWVycyBpbiB0aGUgcmV2ZXJzZSBvcmRlciBvZiBwcmlvcml0eSBzZXQgZm9ydGggaW4gU2VjdGlvbiA3LjAuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDguNS4xXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzOTlccWogXGZpLTcyMFxsaTE0NDBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczM5XGlsdmwyXG91dGxpbmVsZXZlbDJcYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkOTcxODE3NSBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgSW50ZXJydXB0aW9uIG9mIEludGVycnVwdGlibGUgU2VydmljZXMgc2hhbGwgYmUgYmFzZWQgb24gdGhlIFNlcnZpY2UgY2hhcmdlcyBwYWlkIGJ5IGVhY2ggSW50ZXJydXB0aWJsZSBDdXN0b21lciwgd2l0aCB0aGUgbG93ZXN0IHJhdGUgU2VydmljZSBiZWluZyBpbnRlcnJ1cHRlZCBmaXJzdC4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgOC41LjJcdGFifQ0KSW4gdGhlIGV2ZW50IHRoYXQgdHdvIG9yIG1vcmUgSW50ZXJydXB0aWJsZSBDdXN0b21lcnMgdGllIGZvciBwcmlvcml0eSBhcyBkZXRlcm1pbmVkIGluIHRoZSBtYW5uZXIgc2V0IGZvcnRoIGluIHRoZSBwcmVjZWRpbmcgc2VudGVuY2UsIFNlcnZpY2UgdG8gc3VjaCBDdXN0b21lcnMgc2hhbGwgYmUgaW50ZXJydXB0ZWQgb24gYSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGlcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCnBybyByYXRhIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBiYXNpc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDIyNDg4NzNcY2hhcnJzaWQyMjQ4ODczICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMjQ4ODczIGJhc2VkIG9uIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDc2MjkzMjYgDQp0aGUgdG90YWwgbm9taW5hdGVkIHF1YW50aXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQyMjQ4ODczICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDguNS4zXHRhYn1JZiBGaXJtIFN0b3JhZ2UgU2VydmljZSBtdXN0IGJlIGludGVycnVwdGVkIGludGVycnVwdGlvbiBvZiBzdWNoIFNlcnZpY2Ugc2hhbGwgYmUgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGlcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBwcm8gcmF0YSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgYmFzaXMgYmFzZWQgb24gTURJUSwgYW5kL29yIE1EV1EsIGFzIGFwDQpwbGljYWJsZS4gS2F0eSBzaGFsbCBwcm92aWRlIHRvIEZpcm0gU3RvcmFnZSBTZXJ2aWNlIEN1c3RvbWVycyBhcyBtdWNoIGFkdmFuY2Ugbm90aWNlIG9mIGFueSBpbnRlcnJ1cHRpb24gYXMgaXMgcHJhY3RpY2FibGUgdW5kZXIgdGhlc2UgY2lyY3Vtc3RhbmNlcy4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgOC41LjRcdGFifUlmIEZpcm0gV2hlZWxpbmcgU2VydmljZSBtdXN0IGJlIGludGVycnVwdGVkIGludGVycnVwdGlvbiBvZiBzdWNoIFNlcnZpY2Ugc2hhbGwgYmUgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGlcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBwcm8gcmF0YSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgYmFzaXMgYmFzZWQgbw0KbiBNRERRLCBhbmQvb3IgTURSUSwgYXMgYXBwbGljYWJsZS4gS2F0eSBzaGFsbCBwcm92aWRlIHRvIEZpcm0gV2hlZWxpbmcgU2VydmljZSBDdXN0b21lcnMgYXMgbXVjaCBhZHZhbmNlIG5vdGljZSBvZiBhbnkgaW50ZXJydXB0aW9uIGFzIGlzIHByYWN0aWNhYmxlIHVuZGVyIHRoZXNlIGNpcmN1bXN0YW5jZXMuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDguNlx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczk3XHFqIFxmaS03MjBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDcyMFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMzlcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDk3MTgxNzUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFJlcXVpcmVkIFdpdGhkcmF3YWxzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IC4gVG8gdGhlIGV4dGVudCBJbnRlcnJ1cHRpYmxlIEN1c3RvbWVyKHMpIHV0aWxpemUgc3RvcmFnZSBjYXBhY2l0eSB0aGF0IGlzIG5lZWRlZCBieSBLYXR5IHRvIHNhdGlzZnkgS2F0eX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpzIG9ibGlnYXRpb25zIHRvIEZpcm0gQ3VzdG9tZXIocyksIEthdHkgbWF5IHJlcXVlc3QgdGhhdCBzdWNoIEludGVycnVwdGlibGUgQ3VzdG9tZXIocykgd2l0aGRyYXcgYWxsLCBvciBhbnkgcG9ydGlvbiBvZiwgdGhlIEdhcyBxdWFudGl0aWVzIGJlaW5nIGhlbGQgaW4gc3RvcmFnZSB1bmRlciBzdWNoIEludGVycnVwdGlibGUgU2VydmljZShzKSwgYWNjb3JkaW5nDQogdG8gdGhlIHByaW9yaXRpZXMgc2V0IGZvcnRoIGluIFNlY3Rpb24gNy4wIGFuZCBTZWN0aW9uIDguNS4gVXBvbiBzdWNoIHJlcXVlc3QsIEludGVycnVwdGlibGUgQ3VzdG9tZXIocykgc28gcmVxdWVzdGVkIHNoYWxsIG5vbWluYXRlIGZvciB3aXRoZHJhd2FsIHRoZSBtYXhpbXVtIGFtb3VudCBwb3NzaWJsZSBldmVyeSBHYXMgRGF5IHVudGlsIHRoZSByZXF1ZXN0ZWQgY2FwYWNpdHkgaXMgbWFkZSBhdmFpbGFibGUuIElmIGFueSBJbnRlcnJ1cHQNCmlibGUgQ3VzdG9tZXIgZmFpbHMgdG8gd2l0aGRyYXcgaXRzIHN0b3JlZCBHYXMgYXMgcmVxdWVzdGVkLCBLYXR5IG1heSB0YWtlIHRpdGxlIHRvIHRoZSBDdXN0b21lciBJbnZlbnRvcnkgdW5kZXIgZWFjaCBvZiBDdXN0b21lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KcyBJbnRlcnJ1cHRpYmxlIFRyYW5zYWN0aW9ucyAodG8gdGhlIGV4dGVudCBvZiBhbGwgb3IgYW55IHBvcnRpb24gdGhlcmVvZiwgYXMgYXBwbGljYWJsZSB3aXRoIHJlZ2FyZCB0byB0aGUgYW1vdW50IHRoYXQgd2FzIHJlcXVlc3RlZCB0byBiZSB3aXRoZHJhd24pIGZyZWUgYW5kIGNsZWFyIG9mIGFueSBhZHZlcnNlIGNsYWltOyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGlcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCnByb3ZpZGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgaG93ZXZlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCiwgdGhhdCBpZiBhIEN1c3RvbWVyIHdhcyB1bmFibGUgdG8gd2l0aGRyYXcgYWxsIG9yIGFueSBwb3J0aW9uIG9mIHN1Y2ggQ3VzdG9tZXIgSW52ZW50b3J5IGJlY2F1c2Ugb2YgYW4gaW50ZXJydXB0aW9uIG9mIEN1c3RvbWVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpzIHdpdGhkcmF3YWwgU2VydmljZSwgQ3VzdG9tZXIgc2hhbGwgYmUgYWxsb3dlZCB0byB3aXRoZHJhdyBzdWNoIEN1c3RvbWVyIEludmVudG9yeSB3aXRoaW4gYSByZWFzb25hYmxlIHRpbWUgcGVyaW9kIGZvbGxvd2luZyB0aGUgZXhwaXJ5IG9mIHN1Y2ggaW50ZXJydXB0aW9uLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkOTcxODE3NSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA4LjdcdGFifX17XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ5NzE4MTc1IA0KS0FUWSBTSEFMTCBOT1QgQkUgTElBQkxFIEZPUiBBTlkgTE9TUyBPUiBEQU1BR0UgVE8gQU5ZIFBFUlNPTiBPUiBQUk9QRVJUWSBDQVVTRUQsIElOIFdIT0xFIE9SIElOIFBBUlQsIEJZIEFOWSBJTlRFUlJVUFRJT04gT0YgU0VSVklDRSwgRVhDRVBUIFRPIFRIRSBFWFRFTlQgQ0FVU0VEIEJZIEtBVFlccnF1b3RlIA0KUyBHUk9TUyBORUdMSUdFTkNFIE9SIFdJTExGVUwgTUlTQ09ORFVDVC4gQ1VTVE9NRVIgQUdSRUVTIFRPIElOREVNTklGWSBLQVRZIEdST1VQIEZST00gQU5EIEFHQUlOU1QgQU5ZIEFORCBBTEwgQ0xBSU1TIEFORC9PUiBFTkNVTUJSQU5DRVMgV0hBVFNPRVZFUiBSRVNVTFRJTkcgRlJPTSwgQVJJU0lORyBPVVQgT0YgT1IgSU4gQU5ZIFdBWSBSRUxBVEVEIFRPIEFOIElOVEVSUlVQVElPTiBPRiBDVVNUT01FUlxycXVvdGUgUyBTRVJWSUNFLCB9ew0KXHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDk3MTgxNzUgUkVHQVJETEVTUyBPRiBDQVVTRSB9e1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkOTcxODE3NSAoQlVUIE5PVCBUTyBUSEUgRVhURU5UIENBVVNFRCBCWSBLQVRZXHJxdW90ZSBTIEdST1NTIE5FR0xJR0VOQ0UgT1IgV0lMTEZVTCBNSVNDT05EVUNUKS4NClxwYXIge1wqXGJrbWtzdGFydCBfVG9jMzg4NzgwNTJ9e1wqXGJrbWtzdGFydCBfVG9jMzkyMzk1MjV9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk1IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGJcY2Fwc1xkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ5NzE4MTc1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDkuMFx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzOTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDcyMFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMzlcb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ5NzE4MTc1IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ5NzE4MTc1IFRFTkRFUiBPRiBSRUNFSVBUUyBBTkQgREVMSVZFUklFU3tcKlxia21rZW5kIF9Ub2MzODg3ODA1Mn17XCpcYmtta2VuZCBfVG9jMzkyMzk1MjV9DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDkuMVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczk3XHFqIFxmaS03MjBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDcyMFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMzlcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDk3MTgxNzUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IERlbGl2ZXJ5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IC4gQ3VzdG9tZXIgc2hhbGwgRGVsaXZlciBvciBjYXVzZSB0byBiZSBEZWxpdmVyZWQgdG8gS2F0eSBhdCB0aGUgUmVjZWlwdCBQb2ludCBHYXMgdGhhdCBDdXMNCnRvbWVyIGhhcyBub21pbmF0ZWQgdG8gaGF2ZSBpbmplY3RlZCBpbnRvIHRoZSBLYXR5IFN0b3JhZ2UgRmFjaWxpdHksIHBsdXMgYXBwbGljYWJsZSBGdWVsLCBpZiBhbnkuIEN1c3RvbWVyIHNoYWxsIGFsc28gcmVjZWl2ZSBvciBjYXVzZSB0byBiZSByZWNlaXZlZCBhdCB0aGUgRGVsaXZlcnkgUG9pbnQsIHVwb24gdGVuZGVyIGJ5IEthdHksIEdhcyB0aGF0IEN1c3RvbWVyIGhhcyBub21pbmF0ZWQgdG8gYmUgd2l0aGRyYXduIGZyb20gdGhlIFN0bw0KcmFnZSBGYWNpbGl0eS4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgOS4yXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgVHJhbnNwb3J0YXRpb259e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAuIEN1c3RvbWVyIHNoYWxsIGJlIHJlc3BvbnNpYmxlIGZvciBub21pbmF0aW5nIHRyYW5zcG9ydGF0aW9uIG9uIHRoZSBEZXNpZ25hdGVkIFBpcGVsaW5lIHVuZGVyIEN1c3RvbWVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBzIHRyYW5zcG9ydGF0aW9uIGNvbnRyYWN0IHdpdGggdGhlIERlc2lnbmF0ZWQgUGlwZWxpbmUgYW5kIGZvciBwYXlpbmcgYWxsIHRyYW5zcG9ydGF0aW9uIGNoYXJnZXMgcmVsYXRlZCB0aGVyZXRvLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCA5LjNcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBSZWNlaXB0IGFuZCBEZWxpdmVyeSBEZWZhdWx0c317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IC4gSW4gdGhlIGV2ZW50IG9mIGVpdGhlciBQYXJ0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KcyB1bmV4Y3VzZWQgZmFpbHVyZSAoYW5kIGZvciBwdXJwb3NlcyBvZiB0aGlzIE9wZXJhdGluZyBTdGF0ZW1lbnQsIGFuIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgdW5leGN1c2VkIGZhaWx1cmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0DQp9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIHNoYWxsIG5vdCBpbmNsdWRlIGFueSBmYWlsdXJlIGNhdXNlZCBieSBhIEZvcmNlIE1hamV1cmUgb3IgYW55IG90aGVyIGludGVycnVwdGlvbiBvZiBTZXJ2aWNlIHBlcm1pdHRlZCB1bmRlciB0aGlzIE9wDQplcmF0aW5nIFN0YXRlbWVudCkgdG8gRGVsaXZlciBvciByZWNlaXZlIGEgUXVhbnRpdHkgb2YgR2FzIChmb3IgcHVycG9zZXMgb2YgdGhpcyBTZWN0aW9uLCB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBEZWZhdWx0IFF1YW50aXR5fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICkgdG8gb3IgZnJvbSB0aGUgb3RoZXIgUGFydHkgKG9yIHRvIG9yIGZyb20gYSB0aGlyZCBwYXJ0eSBmb3IgdGhlIGFjY291bnQgb2YgdGhlIG90aGVyIFBhcnR5KSBpbiBhY2NvcmRhbmNlIHdpdGggdGhlIHByb3BlciBOb21pbmF0aW9uIHVuZGVyIGEgcA0KYXJ0aWN1bGFyIFRyYW5zYWN0aW9uIChmb3IgcHVycG9zZXMgb2YgdGhpcyBTZWN0aW9uLCB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBEZWZhdWx0ZWQgVHJhbnNhY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgKSwgc3VjaCBkZWZhdWx0aW5nIFBhcnR5IHNoYWxsIHVzZSBpdHMgYmVzdCBlZmZvcnRzIHRvIG5vdGlmeSB0aGUgbm9uLWRlZmF1bHRpbmcgUGFydHkgYmVmb3JlIHRoZSBzY2hlZHVsZWQgRGVsaXZlcnkgb3IgUmVjZWlwdCBkYXRlLCBhcyBhcHBsaWNhYmxlLCBmb3Igc3VjaCBEZWZhdWx0IFF1YW50aXR5LiANCkluIGFueSBldmVudCwgdGhlIG5vbi1kZWZhdWx0aW5nIFBhcnR5IHNoYWxsIHByb3ZpZGUgd3JpdHRlbiBub3RpY2Ugb2YgdGhlIFJlY2VpcHQgRGVmYXVsdCBvciBEZWxpdmVyeSBEZWZhdWx0LCBhcyB0aGUgY2FzZSBtYXkgYmUsIHRvIHRoZSBkZWZhdWx0aW5nIFBhcnR5IHdpdGhpbiB0aHJlZSAoMykgR2FzIERheXMgYWZ0ZXIgdGhlIGRhdGUgb2Ygc3VjaCBEZWxpdmVyeSBEZWZhdWx0IG9yIFJlY2VpcHQgRGVmYXVsdCAoZm9yIHB1cnBvc2VzIA0Kb2YgdGhpcyBTZWN0aW9uLCBhIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgRGVmYXVsdCBOb3RpY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgKSwgYW5kIGluZGljYXRlIGluIHN1Y2ggRGVmYXVsdCBOb3RpY2Ugd2hldGhlciB0aGUgbm9uLWRlZmF1bHRpbmcgUGFydHkgZGVzaXJlcyB0byBwdXJzdWUgYSByZW1lZHkuIFVwb24gcmVxdWVzdCBvZiB0aGUgZGVmYXVsdGluZyBQYXJ0eSwgdGhlIG5vbi0gZGVmYXVsdGluZyBQYXJ0eSBzaGFsbCBwcm92aWRlIHdyaXR0ZW4gZG9jdW1lbnRhdGlvbiBvZiBzdWNoIFJlY2VpcHQgRGVmYXVsDQp0IG9yIERlbGl2ZXJ5IERlZmF1bHQgaW4gdGhlIGZvcm0gb2YgYWxsb2NhdGlvbiBzdGF0ZW1lbnRzIGZyb20gdGhlIGFwcGxpY2FibGUgVHJhbnNwb3J0ZXIocykuIFN1YmplY3QgdG8gU2VjdGlvbnMgMjAuMCwgMjUuMCwgYW5kIDI2LjAgb2YgdGhpcyBPcGVyYXRpbmcgU3RhdGVtZW50LCBidXQgbm90d2l0aHN0YW5kaW5nIGFueSBvdGhlciBwcm92aXNpb24gaW4gYW55IFRyYW5zYWN0aW9uIERvY3VtZW50IHRvIHRoZSBjb250cmFyeSwgdGhlIHINCmVtZWRpZXMgb2YgYSBub24tZGVmYXVsdGluZyBQYXJ0eSBmb3IgYSBEZWxpdmVyeSBEZWZhdWx0IG9yIFJlY2VpcHQgRGVmYXVsdCB3aWxsIGJlIGV4cHJlc3NseSBsaW1pdGVkIGFzIHNldCBmb3J0aCBiZWxvdzoNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgOS4zLjFcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHM5OVxxaiBcZmktNzIwXGxpMTQ0MFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMzlcaWx2bDJcb3V0bGluZWxldmVsMlxhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQ5NzE4MTc1IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBVbmxlc3MgdGhlIHRlcm1zIG9mIFNlY3Rpb25zIDkuMy4zIG9yIDkuMy40IGFyZSBhcHBsaWNhYmxlLCB0aGUgUGFydGllcyBzaGFsbCBhY3QgaW4gYWNjb3JkYW5jZSB3aXRoIFNlY3Rpb24gOS4zLjIsIHdoaWNoIG1heSBpbmNsdWRlLCANCmFtb25nIG90aGVyIHRoaW5ncywgdGhlIHVzZSBvZiBjb21tZXJjaWFsbHkgcmVhc29uYWJsZSBlZmZvcnRzIHRvIGVudGVyIGludG8gYSBjb3JyZXNwb25kaW5nIFRyYW5zYWN0aW9uIChmb3IgcHVycG9zZXMgb2YgdGhpcyBTZWN0aW9uLCB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IENvcnJlc3BvbmRpbmcgVHJhbnNhY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KKS4gQSBDb3JyZXNwb25kaW5nIFRyYW5zYWN0aW9uIHdoaWNoIG1heSBpbmNsdWRlLCBhbW9uZyBvdGhlciB0aGluZ3MsIHRvIHRoZSBleHRlbnQgcG9zc2kNCmJsZSBnaXZlbiB0aGUgbmF0dXJlIG9mIHRoZSByZWxldmFudCBEZWZhdWx0ZWQgVHJhbnNhY3Rpb246IChhKSBlbnRlcmluZyBpbnRvIGFuIG9mZnNldHRpbmcgVHJhbnNhY3Rpb24sIGUuZy4sIGlmIHRoZSBEZWZhdWx0ZWQgVHJhbnNhY3Rpb24gaXMgYSBMb2FuaW5nIFNlcnZpY2UgVHJhbnNhY3Rpb24sIGVudGVyaW5nIGludG8gYSBQYXJraW5nIFNlcnZpY2UgVHJhbnNhY3Rpb24sIG9yIGlmIHRoZSBEZWZhdWx0ZWQgVHJhbnNhY3Rpb24gaXMgYQ0KIFBhcmtpbmcgU2VydmljZSBUcmFuc2FjdGlvbiBlbnRlcmluZyBpbnRvIGEgTG9hbmluZyBTZXJ2aWNlIFRyYW5zYWN0aW9uLCBvciAoYn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDUxOTM5MDVcY2hhcnJzaWQ2NzA5Mzg0ICl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1MTkzOTA1IFx+fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgZW50ZXJpbmcgaW50byBzdWNoIG90aGVyIFRyYW5zYWN0aW9uIGFzIHRvIHdoaWNoIHRoZSBQYXJ0aWVzIG1heSBhZ3JlZSwgdG8gYXR0ZW1wdCB0byBtaXRpZ2F0ZSBkYW1hZ2VzIHRvIHRoZSBleHRlbnQgcG9zc2libGUgd2hpbGUgcHJlc2VydmluZyB0aGUgZWNvbm9taWMgc3Vic3RhbmNlIG9mIHRoZSBpbmkNCnRpYWwgYWdyZWVtZW50IGJldHdlZW4gdGhlIFBhcnRpZXMgYXMgZXZpZGVuY2VkIGJ5IHRoZSBvcmlnaW5hbCB0ZXJtcyBvZiB0aGUgRGVmYXVsdGVkIFRyYW5zYWN0aW9uLiBVcG9uIHJlcXVlc3QsIHRoZSBQYXJ0eSBjbGFpbWluZyBhIFJlY2VpcHQgRGVmYXVsdCBvciBEZWxpdmVyeSBEZWZhdWx0IGJ5IHRoZSBvdGhlciBQYXJ0eSBzaGFsbCBwcm92aWRlIHdyaXR0ZW4gZG9jdW1lbnRhdGlvbiBvZiBzdWNoIFJlY2VpcHQgRGVmYXVsdCBvciBEZQ0KbGl2ZXJ5IERlZmF1bHQgaW4gdGhlIGZvcm0gb2YgYWxsb2NhdGlvbiBzdGF0ZW1lbnRzIGZyb20gdGhlIGFwcGxpY2FibGUgRGVzaWduYXRlZCBQaXBlbGluZShzKS4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgOS4zLjJcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCkZpcm0gU3RvcmFnZTsgRmlybSBXaGVlbGluZzsgTm8tTm90aWNlOyBQYXJraW5nOyBMb2FuaW5nfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IC4gRXhjZXB0IGFzIHByb3ZpZGVkIGluIFNlY3Rpb25zIDkuMy4zIGFuZCA5LjMuNCBiZWxvdywgaW4gdGhlIGV2ZW50IG9mIGEgRGVmYXVsdGVkIFRyYW5zYWN0aW9uLCB0aGUgUGFydA0KaWVzIHNoYWxsIGVudGVyIGludG8gYSBDb3JyZXNwb25kaW5nIFRyYW5zYWN0aW9uLiBJZiB0aGUgUGFydGllcyBjYW5ub3QgYWdyZWUgdG8gdGhlIHRlcm1zIG9mIGEgQ29ycmVzcG9uZGluZyBUcmFuc2FjdGlvbiAoYWZ0ZXIgYXR0ZW1wdGluZyBpbiBnb29kIGZhaXRoIHRvIGRvIHNvKSwgdGhlIG5vbi1kZWZhdWx0aW5nIFBhcnR5IG1heSBjb2xsZWN0IGRhbWFnZXMgZnJvbSB0aGUgZGVmYXVsdGluZyBQYXJ0eSBlcXVhbCB0byB0aGUgZ3JlYXRlDQpyIG9mOg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMTAxIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDEzMzIxMDM5IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChhKVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczEwMVxxaiBcZmktNzIwXGxpMjE2MFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MjE2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMzlcaWx2bDNcb3V0bGluZWxldmVsM1xhZGp1c3RyaWdodFxyaW4wXGxpbjIxNjBcaXRhcDBccGFyYXJzaWQxMzMyMTAzOSBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDEzMzIxMDM5IHRoZSBhYnNvbHV0ZSB2YWx1ZSBvZiB0aGUgcHJvZHVjdCBvZiAoeCkgdGhlIERlZmF1bHQgUXVhbnRpdHkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDEzMzIxMDM5IHRpbWVzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpXGluc3JzaWQxMjQ3NDgwNiAgfXtccnRsY2hcZmNzMSBcYWlcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxMjQ3NDgwNlxjaGFycnNpZDEyNDc0ODA2ICh5KX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaVxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxMzMyMTAzOSAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxMzMyMTAzOSANCnRoZSBzcHJlYWQgYmV0d2VlbiB0aGUgRGFpbHkgUmVmZXJlbmNlIFByaWNlIGFuZCB0aGUgTllNRVggUHJvbXB0IE1vbnRoIHNldHRsZW1lbnQgcHJpY2UgZm9yIHRoZSBHYXMgRGF5IG9uIHdoaWNoIHRoZSByZWxldmFudCBOb21pbmF0aW9uIHdhcyBtYWRlLCBhcyBhZGp1c3RlZCBmb3IgdGhlIGFwcGxpY2FibGUgYmFzaXMgZGlmZmVyZW50aWFsIHBsdXMgYXBwbGljYWJsZSB0cmFuc3BvcnRhdGlvbjsgYW5kDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMxMDEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoYilcdGFifX1ccGFyZCBcbHRycGFyXHMxMDFccWogXGZpLTcyMFxsaTIxNjBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDIxNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczMzXGlsdmwzXG91dGxpbmVsZXZlbDNcYWRqdXN0cmlnaHRccmluMFxsaW4yMTYwXGl0YXAwXHBhcmFyc2lkOTcxODE3NSB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCB0aGUgYWJzb2x1dGUgdmFsdWUgb2YgdGhlIHByb2R1Y3Qgb2YgKHgpIHRoZSBEZWZhdWx0IFF1YW50aXR5IH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDk3MTgxNzUgdGltZXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGlcaW5zcnNpZDk3MTgxNzVcY2hhcnJzaWQ5NzE4MTc1ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGNoYXJzY2FsZXg5OVxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ5NzE4MTc1ICh5KX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxjaGFyc2NhbGV4OTlcaW5zcnNpZDk3MTgxNzVcY2hhcnJzaWQ5NzE4MTc1ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgdGhlIHNwcmVhZCBiZXR3ZWVuIHRoZSBEYWlseSBSZWZlcmVuY2UgUHJpY2UgYW5kIHRoZSBOWU1FWCBQcm9tcHQgTW9udGggc2V0dGxlbWVudCBwcmljZSBmb3IgdGhlIEdhcyBEYXkgb24gd2hpY2ggdGhlIA0KcGh5c2ljYWwgR2FzIG9mIHdoaWNoIHdhcyBhY3R1YWxseSBzdXBwb3NlZCB0byBmbG93IHB1cnN1YW50IHRvIHN1Y2ggTm9taW5hdGlvbi4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczEwMSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChjKVx0YWJ9fVxwYXJkIFxsdHJwYXJcczEwMVxxaiBcZmktNzIwXGxpMjE2MFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MjE2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMzlcaWx2bDNcb3V0bGluZWxldmVsM1xhZGp1c3RyaWdodFxyaW4wXGxpbjIxNjBcaXRhcDBccGFyYXJzaWQ5NzE4MTc1IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KSW4gYWRkaXRpb24gdG8gdGhlIGZvcmVnb2luZyBhbmQgbm90d2l0aHN0YW5kaW5nIGFueXRoaW5nIGVsc2UgaW4gYW55IFRyYW5zYWN0aW9uIERvY3VtZW50IHRvIHRoZSBjb250cmFyeSwgQ3VzdG9tZXIgc2hhbGwgYXQgYWxsIHRpbWVzIHJlbWFpbiBvYmxpZ2F0ZWQgZm9yIHRoZSBEZW1hbmQgQ2hhcmdlIGFzc29jaWF0ZWQgd2l0aCBDdXN0b21lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgDQp9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyBGaXJtIFN0b3JhZ2UgU2VydmljZSBUcmFuc2FjdGlvbihzKS4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgOS4zLjNcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHM5OVxxaiBcZmktNzIwXGxpMTQ0MFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMzlcaWx2bDJcb3V0bGluZWxldmVsMlxhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQ5NzE4MTc1IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBJbnRlcnJ1cHRpYmxlIFN0b3JhZ2UgU2VydmljZSBUcmFuc2FjdGlvbnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQouIElmIHRoZSBEZWZhdWx0ZWQgVHJhbnNhY3Rpb24gaXMgYW4gSW50ZXJydXB0aWJsZSBTdG9yYWdlIFNlcnZpY2UgVHJhbnNhY3Rpb24sIHRoZSBQYXJ0aWVzIHNoYWxsIHVzZSBjb21tZXJjaWFsbHkgcmVhc29uYWJsZSBlZmZvcnRzIHRvIHJlLW5vbWluYXRlIGFuZCBEZWxpdmVyIG9yIHJlY2VpdmUgdGhlIG5vbWluYXRlZCBHYXMsIGFzIHRoZSBjYXNlIG1heSBiZSwgYXQgZWFjaCBQYXJ0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyBlYXJsaWVzdCBwb3NzaWJsZSBjb252ZW5pZW5jZS4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgOS4zLjRcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCkludGVycnVwdGlibGUgV2hlZWxpbmcgU2VydmljZSBUcmFuc2FjdGlvbnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgLiBJZiB0aGUgRGVmYXVsdGVkIFRyYW5zYWN0aW9uIGlzIGFuIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBJbnRlcnJ1cHRpYmxlIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFdoZWVsaW5nIFNlcnZpY2UgVHJhbnNhY3Rpb24sIHRoZSB0ZXJtcyBvZiB0aGlzIFNlY3Rpb24gOS4zLjQgc2hhbGwgYXBwbHkuIEN1c3RvbWVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpzIE5vbWluYXRpb25zIGludG8gYW5kIG91dCBvZiB0aGUgS2F0eSBTdG9yYWdlIEZhY2lsaXR5IHdpbGwgYmUgYWRqdXN0ZWQgc28gdGhhdCBOb21pbmF0aW9ucyBhcmUgaW4gYmFsYW5jZSB3aXRoIHJlc3BlY3QgdG8gc3VjaCBDdXN0b21lciBhdCB0aGUgZW5kIG9mIGVhY2ggR2FzIERheS4gSWYgYW55IEN1c3RvbWVyIE5vbWluYXRpb24gaXMgY3V0IGJlY2F1c2Ugb2Ygc3VjaCBkZWZhdWx0LCBpdCB3aWxsIGJlIEN1c3RvbWVyfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBzIHJlc3BvbnNpYmlsaXR5IHRvIHdvcmsgd2l0aCBDdXN0b21lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyBEZXNpZ25hdGVkIFBpcGVsaW5lIHRvIHJlc29sdmUgYW55IGltYmFsYW5jZSB0aGF0IHJlc3VsdHMgb24gdGhlIERlc2lnbmF0ZWQgUGlwZWxpbmUgYW5kIEN1c3RvbWVyIHNoYWxsIEluZGVtbmlmeSBLYXR5IGZyb20gYW5kIGFnYWluc3QgYW55IGFuZCBhbGwgRGVzaWduYXRlZCBQaXBlbGluZSBwZW5hbHRpZXMgcmVsYXRlZCB0byB0aGUgc2FtZS4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgOS4zLjVcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBSZW1lZGllc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KLiBXaXRoIHJlc3BlY3QgdG8gYW55IHJlbWVkeSBmb3IgYW55IFJlY2VpcHQgRGVmYXVsdCBvciBEZWxpdmVyeSBEZWZhdWx0LCBub3R3aXRoc3RhbmRpbmcgYW55IHByb3Zpc2lvbiBpbiB0aGUgU2VydmljZSBBZ3JlZW1lbnQgdG8gdGhlIGNvbnRyYXJ5LCBhbmQgaW4gYWRkaXRpb24gdG8gYWxsIG90aGVyIHJlbWVkaWVzIGF2YWlsYWJsZSB0byBLYXR5LCBDdXN0b21lciB3aWxsIGJlIHJlc3BvbnNpYmxlIGZvciBhbGwgY2hhcmcNCmVzIHRoYXQgYWNjcnVlZCBiZWZvcmUgdGhlIGRhdGUgb2YgdGhlIFJlY2VpcHQgRGVmYXVsdCBvciBEZWxpdmVyeSBEZWZhdWx0IGFzIHdlbGwgYXMgYWxsIGluamVjdGlvbiBvciB3aXRoZHJhd2FsIGNoYXJnZXMgdGhhdCB3b3VsZCBvdGhlcndpc2UgYmUgYXBwbGljYWJsZSB0byB0aGUgRGVmYXVsdCBRdWFudGl0aWVzIHVuZGVyIHRoZSBEZWZhdWx0ZWQgVHJhbnNhY3Rpb24gaGFkIHN1Y2ggUmVjZWlwdCBEZWZhdWx0IG9yIERlbGl2ZXJ5IERlZg0KYXVsdCBub3Qgb2NjdXJyZWQuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDkuMy42XHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgU2VjdGlvbiAxNCBSZW1lZGllc317XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KLiBJZiB0aGUgRGVmYXVsdGVkIFRyYW5zYWN0aW9uIGlzIGEgZGVmYXVsdCBieSBDdXN0b21lciBhbmQgcmVzdWx0cyBpbjogKGkpIEN1c3RvbWVyIEludmVudG9yeSByZW1haW5pbmcgaW4gdGhlIEthdHkgU3RvcmFnZSBGYWNpbGl0eSBhZnRlciB0aGUgZW5kIG9mIGEgVHJhbnNhY3Rpb24gUGVyaW9kIChpZiB0aGUgcmVsZXZhbnQgVHJhbnNhY3Rpb24gaXMgZm9yIGVpdGhlciBTdG9yDQphZ2UgU2VydmljZSBvciBQYXJraW5nIFNlcnZpY2UpIG9yIChpaSkgQ3VzdG9tZXIgZmFpbGluZyB0byByZS1EZWxpdmVyIGFsbCBMb2FuZWQgUXVhbnRpdGllcyBvbiBvciBiZWZvcmUgdGhlIGxhc3QgR2FzIERheSBvZiB0aGUgVHJhbnNhY3Rpb24gUGVyaW9kIChpZiB0aGUgcmVsZXZhbnQgVHJhbnNhY3Rpb24gaXMgZm9yIExvYW5pbmcgU2VydmljZSksIEthdHkgc2hhbGwgaGF2ZSB0aGUgY29udGludWluZyBvcHRpb24gdG8gYXNzZXJ0IGl0cyANCnJlbWVkaWVzIHVuZGVyIFNlY3Rpb24gMTQuMC4NClxwYXIge1wqXGJrbWtzdGFydCBfVG9jMzg4NzgwNTN9e1wqXGJrbWtzdGFydCBfVG9jMzkyMzk1MjZ9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk1IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGJcY2Fwc1xkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ5NzE4MTc1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDEwLjBcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczk1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHg3MjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczM5XG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkOTcxODE3NSBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkOTcxODE3NSBRVUFMSVRZe1wqXGJrbWtlbmQgX1RvYzM4ODc4MDUzfXtcKlxia21rZW5kIF9Ub2MzOTIzOTUyNn0NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTAuMVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczk3XHFqIFxmaS03MjBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDcyMFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMzlcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDk3MTgxNzUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFF1YWxpdHkgU3RhbmRhcmRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KLiBFeGNlcHQgYXMgb3RoZXJ3aXNlIHByb3ZpZGVkIGJlbG93LCBHYXMgRGVsaXZlcmVkIHRvIEthdHkgYXQgdGhlIFJlY2VpcHQgUG9pbnQocykgYW5kIGFsbCBHYXMgRGVsaXZlcmVkIGF0IHRoZSBEZWxpdmVyeSBQb2ludHMocykgc2hhbGwgY29uZm9ybSB0byB0aGUgcmVxdWlyZWQgc3BlY2lmaWNhdGlvbnMgc2V0IGZvcnRoIGluIEFwcGVuZGl4IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDc0ODk5NDkgQn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgLCBhdHRhY2hlZCBoZXJldG8gKH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBSZXF1aXJlZCBTcGVjaWZpY2F0aW9uc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgKS4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTAuMlx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KSW5kZW1uaWZpY2F0aW9uIGZvciBEZWxpdmVyeSBvZiBOb24tQ29uZm9ybWluZyBHYXN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQouIEN1c3RvbWVyIHNoYWxsIEluZGVtbmlmeSBLYXR5IGFnYWluc3QgYWxsIENsYWltcyAoaW5jbHVkaW5nLCB3aXRob3V0IGxpbWl0YXRpb24sIGNvbnNlcXVlbnRpYWwgZGFtYWdlcywgbm90d2l0aHN0YW5kaW5nIGFueXRoaW5nIGluIGFueSBUcmFuc2FjdGlvbiBEb2N1bWVudCB0DQpvIHRoZSBjb250cmFyeSkgc3VmZmVyZWQgYnkgS2F0eSB0byB0aGUgZXh0ZW50IHN1Y2ggQ2xhaW1zLCBkYW1hZ2VzLCBhbmQvb3IgZXhwZW5zZXMgYXJpc2UgZnJvbSBDdXN0b21lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KcyBEZWxpdmVyeSBvZiBHYXMgbm90IGluIGNvbmZvcm1hbmNlIHdpdGggdGhlIFJlcXVpcmVkIFNwZWNpZmljYXRpb25zIChmb3IgcHVycG9zZXMgb2YgdGhpcyBTZWN0aW9uLCB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBOb24tU3BlYyBHYXN9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgKSwgd2hldGhlciBvciBub3QgS2F0eSBhZ3JlZWQgdG8gYWNjZXB0IHN1Y2ggTm9uLVNwZWMgR2FzIHVuZGVyIFNlY3Rpb24gMTAuMy4xIGJlbG93Lg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxMC4zXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgUmVqZWN0aW9uIG9mIEdhc317XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IC4gS2F0eSBtYXksIGJ1dCBzaGFsbCBuZXZlciBiZSBvYmxpZ2F0ZWQgdG8sIGFjY2VwdCBOb24tU3BlYyBHYXMgc28gbG9uZyBhcyBvbiBhIGJhc2lzIHRoYXQgaXMgbm90IHVuZHVseSBkaXNjcmltaW5hdG9yeS4gVGhlIGFjY2VwdGFuY2Ugb2Ygc3VjaCBHYXMgZG9lcyBub3QgY29uc3RpdHV0ZSBhbnkgd2FpdmVyIG9mIEthdHl9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KcyByaWdodCB0byByZWZ1c2UgdG8gYWNjZXB0IHNpbWlsYXJseSBub24tY29uZm9ybWluZyBHYXMsIG5vciByZXF1aXJlIEthdHkgdG8gcmVjZWl2ZSBOb24tU3BlYyBHYXMgaW4gdGhlIGZ1dHVyZS4gSWYgS2F0eSBhZ3JlZXMgdG8gYWNjZXB0IE5vbi1TcGVjIEdhcyB1bmRlciBhIENvbmZpcm1hdGlvbiwgQ3VzdG9tZXIgc2hhbGwgYmUgYWxsb3dlZCB0byBEZWxpdmVyIE5vbi1TcGVjIEdhcyB1bmRlciB0aGF0IENvbmZpcm1hdGlvbiwgYnV0IG4NCm8gb3RoZXIsIGFuZCBLYXR5IHdpbGwgaGF2ZSB0aGUgY29udGludWluZyByaWdodCB0byByZXF1aXJlIEN1c3RvbWVyIHRvIGJyaW5nIGl0cyBwcm9zcGVjdGl2ZSBEZWxpdmVyaWVzIHVuZGVyIHRoYXQgQ29uZmlybWF0aW9uIGludG8gY29tcGxpYW5jZSB3aXRoIHRoZSBSZXF1aXJlZCBTcGVjaWZpY2F0aW9ucyB3aXRoaW4gYSBzcGVjaWZpZWQgcGVyaW9kIG9mIHRpbWUsIGFzIGRldGVybWluZWQgaW4gS2F0eX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyByZWFzb25hYmxlIGRpc2NyZXRpb24uDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDEwLjMuMVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczk5XHFqIFxmaS03MjBcbGkxNDQwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOVxpbHZsMlxvdXRsaW5lbGV2ZWwyXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDk3MTgxNzUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KVXBvbiB0aGUgRGVsaXZlcnkgb2YgTm9uLVNwZWMgR2FzIHdoaWNoIEthdHkgaGFzIG5vdCBleHByZXNzbHkgYWxsb3dlZCBvciB3aGljaCBDdXN0b21lciBkb2VzIG5vdCBicmluZyBpbnRvIGNvbXBsaWFuY2UgaW4gdGhlIHRpbWUgcGVyaW9kIHNwZWNpZmllZCBieSBLYXR5LCB0aGUgUmVjZWlwdCBvZiBzdWNoIE5vbi1TcGVjIEdhcyBtYXkgYmUgdGVybWluYXRlZCBpbW1lZGlhdGVseSBhbmQgbm90aWZpY2F0aW9uIG9mIHN1Y2ggdGVybWluDQphdGlvbiBtYXkgb2NjdXIgYWZ0ZXIgdGhlIGZhY3QuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDEwLjMuMlx0YWJ9DQpGYWlsdXJlIGJ5IGVpdGhlciBLYXR5IG9yIEN1c3RvbWVyIHRvIHRlbmRlciBEZWxpdmVyaWVzIHRoYXQgY29uZm9ybSB0byB0aGUgUmVxdWlyZWQgU3BlY2lmaWNhdGlvbnMgc2hhbGwgbm90IGJlIGNvbnN0cnVlZCB0byBlbGltaW5hdGUsIG9yIGxpbWl0IGluIGFueSBtYW5uZXIsIEthdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IHMgb3IgQ3VzdG9tZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBzIHJpZ2h0cyBhbmQgb2JsaWdhdGlvbnMgZXhpc3RpbmcgdW5kZXIgYW55IG90aGVyIHByb3Zpc2lvbiBvZiBhbnkgVHJhbnNhY3Rpb24gRG9jdW1lbnQuDQoNClxwYXIge1wqXGJrbWtzdGFydCBfVG9jMzg4NzgwNTR9e1wqXGJrbWtzdGFydCBfVG9jMzkyMzk1Mjd9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk1IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGJcY2Fwc1xkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ5NzE4MTc1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDExLjBcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczk1XHFqIFxsaTBccmkwXHNhMjQwXGtlZXBca2VlcG5cd2lkY3RscGFyXGpjbGlzdHRhYlx0eDcyMFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMzlcb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ5NzE4MTc1IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ5NzE4MTc1IE9ET1JJWkFUSU9OfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxNDk2MDIxMSB7XCpcYmtta2VuZCBfVG9jMzg4NzgwNTR9e1wqXGJrbWtlbmQgX1RvYzM5MjM5NTI3fQ0KDQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMzMVxxaiBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkODU5NzQzNSBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgS2F0eSBzaGFsbCBoYXZlIG5vIG9ibGlnYXRpb24gd2hhdHNvZXZlciB0byBvZG9yaXplLCBvciBtYWludGFpbiBvZG9yYW50IGxldmVscyBpbiwgdGhlIEdhcyBEZWxpdmVyZWQgZWl0aGVyIGJ5IEN1c3RvbWVyIHRvIEthdHkgb3IgYnkgS2F0eSB0byBDdXN0b21lciwgdW5sZXNzIHByZXNjcmliZWQgYnkgcmVndWxhdGlvbi4gTm90d2l0aHN0DQphbmRpbmcgYW55dGhpbmcgdG8gdGhlIGNvbnRyYXJ5IGluIHRoZSBUcmFuc2FjdGlvbiBEb2N1bWVudHMsIEN1c3RvbWVyIHNoYWxsIGluZGVtbmlmeSBLYXR5IEdyb3VwIGFnYWluc3QgYW55IGFuZCBhbGwgQ2xhaW1zLCBpbmNsdWRpbmcgY29uc2VxdWVudGlhbCBkYW1hZ2VzLCB3aGV0aGVyIG9yIG5vdCBhbnkgc3VjaCBDbGFpbSBhcmlzZXMgb3V0IG9mIGEgQ2xhaW0gYnJvdWdodCBieSBDdXN0b21lciwgS2F0eSBhbmQvb3IgYW55IG90aGVyIFANCmUNCnJzb24sIHdoZXJlIGxpYWJpbGl0eSwgbG9zcywgYW5kL29yIGRhbWFnZSBpcyBzdWZmZXJlZCBieSBhbnkgbWVtYmVyIG9mIEthdHkgR3JvdXAgYXMgYSBkaXJlY3Qgb3IgaW5kaXJlY3QgcmVzdWx0IG9mIGFueSBhY3R1YWwgb3IgYWxsZWdlZCBmYWlsdXJlIGJ5IEN1c3RvbWVyLCBLYXR5IGFuZC9vciBhbnkgb3RoZXIgUGVyc29uIHRvIG9kb3JpemUsIG5vdCBvZG9yaXplIG9yIG1haW50YWluIHRoZSBvZG9yYW50IGxldmVscyBvZiBzdWNoIEdhcw0KLg0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2MzODg3ODA1NX17XCpcYmtta3N0YXJ0IF9Ub2MzOTIzOTUyOH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTUgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcYlxjYXBzXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDk3MTgxNzUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTIuMFx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzOTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDcyMFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMzlcb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ5NzE4MTc1IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ5NzE4MTc1IE1FVEhPRCBPRiBNRUFTVVJFTUVOVHtcKlxia21rZW5kIF9Ub2MzODg3ODA1NX17XCpcYmtta2VuZCBfVG9jMzkyMzk1Mjh9DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDEyLjFcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHM5N1xxaiBcZmktNzIwXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHg3MjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczM5XGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQ5NzE4MTc1IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBNZWFzdXJlbWVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAuIEV4Y2VwdCBhcyBwcm92aWRlZCBpbiBTZWN0aW9ucyAxMi4yIFxlbmRhc2ggDQogMTIuMyBiZWxvdywgdGhlIG1lYXN1cmVtZW50IG9mIHRoZSBxdWFudGl0eSBhbmQgcXVhbGl0eSBvZiBhbGwgR2FzIERlbGl2ZXJlZCBzaGFsbCBiZSBjb25kdWN0ZWQgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZSBwcm9jZWR1cmVzIHNldCBmb3J0aCBpbiBBcHBlbmRpeCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgQX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgLCBhdHRhY2hlZCBoZXJldG8gYW5kIG1hZGUgYSBwYXJ0IGhlcmVvZiBmb3IgYWxsIHB1cnBvc2VzLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxMi4yXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgTWV0aG9kL1RlY2huaXF1ZX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IC4gSWYsIGF0IGFueSB0aW1lIGR1cmluZyB0aGUgZWZmZWN0aXZlIHRlcm0gb2YgdGhlIE1hc3RlciBTZXJ2aWNlIEFncmVlbWVudCB0byB3aGljaCB0aGlzIE9wZXJhdGluZyBTdGF0ZW1lbnQgYXBwbGllcywgYSBuZXcgbWV0aG9kIG9yIHRlY2huaXF1ZSBpcyBkZXZlbG9wZWQgd2l0aCByZXNwZWN0IHRvIEdhcyBtZWFzdXJlbWVudCwgc3VjaCBuZXcgbWV0aG9kIG8NCnIgdGVjaG5pcXVlIG1heSBiZSBzdWJzdGl0dXRlZCBieSBLYXR5IGluIHRoZSBleGVyY2lzZSBvZiBpdHMgcmVhc29uYWJsZSBqdWRnbWVudC4gS2F0eSBzaGFsbCBwcm9tcHRseSBpbmZvcm0gQ3VzdG9tZXIgb2YgYW55IG5ldyBtZXRob2Qgb3IgdGVjaG5pcXVlIGFkb3B0ZWQuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDEyLjNcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBNZXRob2Qgb2YgTWVhc3VyZW1lbnR9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAuIFdoZXJlIG1lYXN1cmluZyBmYWNpbGl0aWVzIGFyZSBpbnN0YWxsZWQsIG93bmVkLCBtYWludGFpbmVkIGFuZCBvcGVyYXRlZCBiDQp5IHRoZSBEZXNpZ25hdGVkIFBpcGVsaW5lIGF0IG9yIG5lYXIgdGhlIFJlY2VpcHQgUG9pbnQocykgYW5kL29yIERlbGl2ZXJ5IFBvaW50KHMpLCB0aGUgbWV0aG9kIG9mIG1lYXN1cmVtZW50IHNoYWxsIGJlIGFzIHNldCBmb3J0aCBpbiBzdWNoIERlc2lnbmF0ZWQgUGlwZWxpbmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IHMgdGFyaWZmfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkOTcxODE3NSAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2MzODg3ODA1Nn17XCpcYmtta3N0YXJ0IF9Ub2MzOTIzOTUyOX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTUgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcYlxjYXBzXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDk3MTgxNzUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTMuMFx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzOTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDcyMFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMzlcb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ5NzE4MTc1IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ5NzE4MTc1IEJBTEFOQ0lORyBPRiBRVUFOVElUSUVTe1wqXGJrbWtlbmQgX1RvYzM4ODc4MDU2fXtcKlxia21rZW5kIF9Ub2MzOTIzOTUyOX0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczMxXHFqIFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQ4NTk3NDM1IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBDdXN0b21lciBzaGFsbCBJbmRlbW5pZnkgS2F0eSBmcm9tIGFsbCBmZWVzLCBjaGFyZ2VzLCBjb3N0cywgYW5kIHBlbmFsdGllcyB0aGF0IG1heSBiZSBhc3Nlc3NlZCBwdXJzdWFudCB0byBDdXN0b21lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyB0cmFuc3BvcnRhdGlvbiBhZ3JlZW1lbnQgd2l0aCBEZXNpZ25hdGVkIFBpcGVsaW5lIGZvciBmYWlsdXJlIHRvIHNhdGlzZnkgdGhhdCBwaXBlbGluZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KcyBiYWxhbmNpbmcgYW5kL29yIE5vbWluYXRpb24gcmVxdWlyZW1lbnRzLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFJFR0FSRExFU1MgT0YgQ0FVU0UgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IChidXQgbm90IHRvIHRoZSBleHRlbnQgY2F1c2VkIGJ5IEthdHl9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IHMgZ3Jvc3MgbmVnbGlnZW5jZSBvciB3aWxsZnVsIG1pc2NvbmR1Y3QpLiBDdXN0b21lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyBwYXltZW50cyB0byBLYXR5IGZvciB0aGUgcmVjb3Zlcnkgb2Ygc3VjaCBmZWVzLCBjaGFyZ2VzLCBjb3N0cywgYW5kIHBlbmFsdGllcyBzaGFsbCBiZSBvbiBhbiBhcy1iaWxsZWQgYmFzaXMuDQpccGFyIHtcKlxia21rc3RhcnQgX1RvYzM4ODc4MDU3fXtcKlxia21rc3RhcnQgX1RvYzM5MjM5NTMwfXtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NSBccnRsY2hcZmNzMSBcYWJcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxiXGNhcHNcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkOTcxODE3NSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNC4wXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhcg0KXHM5NVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4NzIwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOVxvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDk3MTgxNzUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDk3MTgxNzUgSU5WRU5UT1JZIE1BTkFHRU1FTlR7XCpcYmtta2VuZCBfVG9jMzg4NzgwNTd9e1wqXGJrbWtlbmQgX1RvYzM5MjM5NTMwfQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNC4xXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzOTdccWogXGZpLTcyMFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4NzIwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkOTcxODE3NSBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgTm9taW5hdGlvbiBSZXF1aXJlbWVudHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgLiBDdXN0b21lciBzaGFsbCBub21pbmF0ZSwgYXMgbmVjZXNzYXJ5IHVuZGVyIGEgQ28NCm5maXJtYXRpb24sIChpKSB3aXRoZHJhd2FscyBmcm9tIEN1c3RvbWVyIEludmVudG9yeSBpbiBzdWZmaWNpZW50IHF1YW50aXRpZXMgdG8gcmVkdWNlIEN1c3RvbWVyIEludmVudG9yeSB0byB6ZXJvIGJ5IHRoZSBlbmQgb2YgdGhlIFRyYW5zYWN0aW9uIFBlcmlvZCwgc3ViamVjdCB0byBDdXN0b21lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyBNRFdRIGFuZCBSRFVRIHVuZGVyIHRoZSBhcHBsaWNhYmxlIENvbmZpcm1hdGlvbiwgYW5kIChpaSkgaW5qZWN0aW9ucyBpbnRvIHRoZSBLYXR5DQogU3RvcmFnZSBGYWNpbGl0eSBpbiBzdWZmaWNpZW50IHF1YW50aXRpZXMgdG8gRGVsaXZlciB0byBLYXR5IGF0IHRoZSBlbmQgb2YgdGhlIFRyYW5zYWN0aW9uIFBlcmlvZCB0aGUgUXVhbnRpdHkgb2YgR2FzIGJvcnJvd2VkIGZyb20gS2F0eSB1bmRlciBhIExvYW5pbmcgU2VydmljZSBUcmFuc2FjdGlvbiwgc3ViamVjdCB0byBDdXN0b21lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyBSRExQUSB1bmRlciB0aGUgYXBwbGljYWJsZSBDb25maXJtYXRpb24uDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE0LjEuMVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczk5XHFqIFxmaS03MjBcbGkxNDQwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOVxpbHZsMlxvdXRsaW5lbGV2ZWwyXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDk3MTgxNzUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IElmLCBvbiBhbnkgR2FzIERheSwgaW4gYW55IE1vbnRoIGR1cmluZyB0aGUgVHJhbnNhY3Rpb24gUGVyaW9kIG9mIGFueSBUcmFuc2FjdGlvbiwgQ3VzdG9tZXIgSW52ZW50b3J5IGV4Y2VlZHMgQ3VzdG9tZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IHMgQ2FwYWNpdHkgRGVtYW5kLCBDdXN0b21lciBzaGFsbCBwYXkgS2F0eSB0aGUgT3ZlcnJ1biBDaGFyZ2UuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE0LjEuMlx0YWJ9UGF5bWVudCBvZiB0aGUgT3ZlcnJ1biBDaGFyZ2Ugc2hhbGwgbm90IGVudGl0bGUgQ3VzdG9tZXIgdG8gbWFpbnRhaW4gZXhjZXNzIEN1c3RvbWVyIEludmVudG8NCnJ5IGluIHRoZSBLYXR5IFN0b3JhZ2UgRmFjaWxpdHksIG5vciBzaGFsbCBLYXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyBhY2NlcHRhbmNlIG9mIHN1Y2ggcGF5bWVudCBjb25zdGl0dXRlIGEgd2FpdmVyIG9mIEN1c3RvbWVyfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBzIG9ibGlnYXRpb24gdG8gbWFuYWdlIGl0cyBDdXN0b21lciBJbnZlbnRvcnkgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZSByZXF1aXJlbWVudHMgc2V0IGZvcnRoIGhlcmVpbi4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDk3MTgxNzUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTQuMlx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczk3XHFqIFxmaS03MjBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDcyMFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMzlcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDk3MTgxNzUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ5NzE4MTc1IEdhcyBSZW1haW5pbmcgaW4gU3RvcmFnZSBhZnRlciBFeHBpcmF0aW9uIG9mIFRyYW5zYWN0aW9uIFBlcmlvZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE0LjIuMVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczk5XHFqIFxmaS03MjBcbGkxNDQwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOVxpbHZsMlxvdXRsaW5lbGV2ZWwyXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDk3MTgxNzUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFdpdGhkcmF3YWwgT24gb3IgQmVmb3JlIHRoZSBFbmQgb2YgdGhlIFRyYW5zYWN0aW9uIFBlcmlvZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCi4gSWYgQ3VzdG9tZXIgSW52ZW50b3J5IHdpdGggcmVzcGVjdCB0byBhIHNwZWNpZmljIFRyYW5zYWN0aW9uIHJlbWFpbnMgaW4gdGhlIEthdHkgU3RvcmFnZSBGYWNpbGl0eSBvbiBhbnkgR2FzIERheSBhZnRlciB0aGUgZW5kIG9mIHRoZSBhcHBsaWNhYmxlIFRyYW5zYWN0aW9uIFBlcmlvZCwgS2F0eSBzaGFsbCBoYXYNCmUgdGhlIHJpZ2h0LCBhdCBpdHMgc29sZSBvcHRpb24sIHRvIGVpdGhlciAoaSkgY2hhcmdlIEN1c3RvbWVyIGF0IHRoZSByYXRlIHN0YXRlZCBpbiBTZWN0aW9uIDE0LjJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjUxODQ5MCAuMn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCiBiZWxvdyB1bnRpbCBzdWNoIEN1c3RvbWVyIEludmVudG9yeSBpcyB6ZXJvLCAoaWkpIHRvIHRha2UgdGl0bGUgdG8gdGhlIEN1c3RvbWVyIEludmVudG9yeSB1bmRlciB0aGUgcHJvdmlzaW9ucyBvZiBTZWN0aW9uIDE0LjJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjUxODQ5MCAuM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDc0ODE2MDkgIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IGJlbG93LCBhbmQvb3IgKGlpaSkgdG8gcmVzb3J0IHRvIGEgY29tYmluYXRpb24gb2YgYm90aCBzdWNoIHJlbWVkaWVzLiBLYXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpzIGVsZWN0aW9uIHRvIGNoYXJnZSBDdXN0b21lciB1bmRlciB0aGUgcHJvdmlzaW9ucyBvZiBTZWN0aW9uIDE0LjJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjUxODQ5MCAuMn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCiB3aWxsIG5vdCBwcmV2ZW50IGl0IGZyb20gc3Vic2VxdWVudGx5IGV4ZXJjaXNpbmcgaXRzIHJpZ2h0cyBwdXJzdWFudCB0byAxNC4yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI1MTg0OTAgLjN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIGF0IGFueSB0aW1lIHN1Y2ggQ3VzdG9tZXIgSW52ZW50b3J5IHJlbWFpbnMgaW4gdGhlIEthdHkgU3Rvcg0KYWdlIEZhY2lsaXR5IGFmdGVyIHRoZSBlbmQgb2YgdGhlIFRyYW5zYWN0aW9uIFBlcmlvZC4gQ3VzdG9tZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCnMgd2l0aGRyYXdhbCByaWdodHMgcmVzcGVjdGluZyBhbnkgQ3VzdG9tZXIgSW52ZW50b3J5IHJlbWFpbmluZyBpbiB0aGUgS2F0eSBTdG9yYWdlIEZhY2lsaXR5IGFmdGVyIHRoZSBlbmQgb2YgdGhlIFRyYW5zYWN0aW9uIFBlcmlvZCBzaGFsbCBiZSBvbiBhbiBJbnRlcnJ1cHRpYmxlIGJhc2lzLiBQYXltZW50IG9mIHRoZSBjaGFyZ2VzIHN0YXRlZCBpbiBTZWN0aW9uIDE0LjJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDEyNTE4NDkwIC4yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBiZWxvdyB3aWxsIG5vdCByZWxpZXZlIEN1c3RvbWVyIG9mIGl0cyBvYmxpZ2F0aW9uIHRvIHBheSBLYXR5IGZvciBhbnkgYXBwbGljYWJsZSB3aXRoZHJhd2FsIGNoYXJnZXMgYXNzb2NpYXRlZCB3aXRoIHJlZHVjaW5nIEN1c3RvbWVyIEludmVudG9yeSB0byB6ZXJvLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTkgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNC4yLjJcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBBZGRpdGlvbmFsIENoYXJnZXN9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAuIFB1cnN1YW50IHRvIHRoZSBhYm92ZS1zdGF0ZWQgcHJvdmlzaW9ucyBvZiB0aGlzIFNlY3Rpb24gMTQuDQoyLCBDdXN0b21lciBzaGFsbCBwYXkgdG8gS2F0eSBhbiBhbW91bnQgZXF1YWwgdG8gdGhlIEV4dGVuZGVkIFN0b3JhZ2UgQ2hhcmdlIHJlbGF0ZWQgdG8gdGhlIFF1YW50aXR5IG9mIEdhcyByZW1haW5pbmcgaW4gdGhlIEN1c3RvbWVyIEludmVudG9yeSBhZnRlciB0aGUgZW5kIG9mIHRoZSBUcmFuc2FjdGlvbiBQZXJpb2QuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE0LjIuM1x0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFRpdGxlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgLiBQdXJzdWFudCB0byB0aGUgYWJvdmUtc3RhdGVkIHByb3Zpc2lvbnMgb2YgdGhpcyBTZWN0aW9uIDE0LjIsIGF0IEthdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCnMgc29sZSBvcHRpb24sIEN1c3RvbWVyIHNoYWxsIHRyYW5zZmVyIHRpdGxlIHRvIEN1c3RvbWVyIEludmVudG9yeSB0byBLYXR5LCBmcmVlIGFuZCBjbGVhciBvZiBhbGwgbGllbnMsIGVuY3VtYnJhbmNlcywgYW5kIGFkdmVyc2UgY2xhaW1zIG9mIGFueSBraW5kLCBhdCBhIHByaWNlIHBlciBNTUJ0dSBlcXVhbCB0byBzZXZlbnR5LWZpdmUgcGVyY2VudCAoNzUlKSBvZiB0aGUgTW9udGhseSBSZWZlcmVuY2UgUHJpY2UgZm9yIHRoZSBjdXINCnJlbnQgTW9udGggZHVyaW5nIHdoaWNoIHN1Y2ggdHJhbnNhY3Rpb24gKGkuZS4sIHRyYW5zZmVyIG9mIHRpdGxlKSB0YWtlcyBwbGFjZS4gVGhlIHRyYW5zZmVyIG9mIEN1c3RvbWVyIEludmVudG9yeSB0byBLYXR5IHVuZGVyIHRoaXMgU2VjdGlvbiAxNC4yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI1MTg0OTAgLjN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAgd2lsbCBub3QgcmVsaWV2ZSBDdXN0b21lciBvZiBpdHMgb2JsaWdhdGlvbiB0byBwYXkgS2F0eSBmb3IgYWxsIGFwcGxpY2FibGUgY2hhcmdlcywgaW5jbHVkaW5nIGNoYXJnZXMgdW5kZXIgU2VjdGlvbiAxNC4yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI1MTg0OTAgLjJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAgdGhhdCBhY2NydWVkIGJlZm9yZSBzdWNoIHRyYW5zZmVyLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTkgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNC4yLjRcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBGb3JjZSBNYWpldXJlfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgLiBJZiBDdXN0b21lciBpcyB1bmFibGUgdG8gd2l0aGRyYXcgYWxsIEN1c3RvbWVyIEludmVudG9yeSB3aXRoIHJlc3BlY3QgdG8gYSBUcmFuc2FjdGlvbiBiZWZvcmUgdGhlIGVuZCBvZiB0aGUgYXBwbGljYWJsZSBUcmFuc2FjdGlvbiBQZXJpb2QgYnkgcmVhc29uIG9mIHN1c3BlbnNpb24gb2Ygd2l0aGRyYXdhbCByaWdodHMgZHVyaW5nDQogdGhlIFRyYW5zYWN0aW9uIFBlcmlvZCBjYXVzZWQgYnkgRm9yY2UgTWFqZXVyZSBvciBvdGhlciBjdXJ0YWlsbWVudCBvZiBzdWNoIHJpZ2h0cyBkZWNsYXJlZCBieSBLYXR5LCBDdXN0b21lciBzaGFsbCBub3QgYmUgcmVxdWlyZWQgdG8gcGF5IGFuIEV4dGVuZGVkIFN0b3JhZ2UgQ2hhcmdlIGJ1dCBzaGFsbCwgYXMgc29vbiBhcyBwb3NzaWJsZSBhZnRlciB0aGUgZXhwaXJ5IG9mIHN1Y2ggRm9yY2UgTWFqZXVyZSBvciBjdXJ0YWlsbWVudCBwZXINCmlvZCwgbm9taW5hdGUgdG8gcmVtb3ZlIGFsbCByZW1haW5pbmcgaW52ZW50b3JpZXMgdW5kZXIgc3VjaCBUcmFuc2FjdGlvbiwgaW4gYWNjb3JkYW5jZSB3aXRoIEN1c3RvbWVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpzIE1EV1EgYW5kL29yIFJEVVEsIGFzIGFwcGxpY2FibGUuIFRoZSBwcm92aXNpb25zIG9mIFNlY3Rpb25zIDE0LjJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjUxODQ5MCAuMS0xNC4yLjN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIGFyZSBzdWJqZWN0IHRvIHRoaXMgU2VjdGlvbiAxNC4yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxMjUxODQ5MCAuNH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAgcmVnYXJkaW5nIEZvcmNlIE1hamV1cmUgYW5kIGN1cnRhaWxtZW50IHBlcmlvZHMsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaVxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IHByb3ZpZGVkLCBob3dldmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgLCB0aGF0IG9uY2UgYW55IHN1Y2ggRm9yY2UgTWFqZXVyZSBhbmQvb3IgY3VydGFpbG1lbnQgcGVyaW9kIGlzIG92ZXIsIEN1c3RvbWVyIHNoYWxsIGJlIGdpdmVuIGEgcmVhc29uYWJsZSB0aW1lIChpLmUuLCB0aGUgc2FtZSBudW1iZXIgb2YgZGF5cyBhcyBDdXN0b21lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyB3aXRoZHJhd2FsIHJpZ2h0cyBzdWJqZWN0IHRvIHN1Y2ggRm9yY2UgTWFqZXVyZSBhbmQvb3IgY3VydGFpbG1lbnQgcGVyaW9kKSB0byB3aXRoZHJhdyBhbGwgQ3VzdG9tZXIgSW52ZW50b3J5IHJlbWFpbmluZyBpbiB0aGUgS2F0eSBTdG9yYWdlIEZhY2lsaXR5LCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaVxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IHByb3ZpZGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgaG93ZXZlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCiwgdGhhdCBhZnRlciBzdWNoIHJlYXNvbmFibGUgdGltZSB0aGUgdGVybXMgb2YgU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDkyNDM3MDEgc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAgMTQuMn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNTE4NDkwIC4xLTE0LjIuMyB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBzaGFsbCBvbmNlIGFnYWluIGFwcGx5Lg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkOTcxODE3NSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNC4zXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzOTdccWogXGZpLTcyMFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4NzIwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkOTcxODE3NSBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDk3MTgxNzUgRXhwaXJhdGlvbiBvZiBUZXJtIGZvciBJbnRlcnJ1cHRpYmxlIExvYW4gU2VydmljZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE0LjMuMVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczk5XHFqIFxmaS03MjBcbGkxNDQwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOVxpbHZsMlxvdXRsaW5lbGV2ZWwyXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDk3MTgxNzUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IEZhaWx1cmUgdG8gUmV0dXJuIEdhc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCi4gSWYgS2F0eSBlbnRlcnMgaW50byBhIExvYW5pbmcgU2VydmljZSBUcmFuc2FjdGlvbiB3aXRoIEN1c3RvbWVyIGFuZCBDdXN0b21lciBmYWlscyB0byByZS1EZWxpdmVyIGFsbCBMb2FuZWQgUXVhbnRpdGllcyB3aXRoIHJlc3BlY3QgdG8gc3VjaCBUcmFuc2FjdGlvbiBvbiBvciBiZWZvcmUgdGhlIGxhc3QgRw0KYXMgRGF5IG9mIHRoZSBUcmFuc2FjdGlvbiBQZXJpb2QsIEthdHkgd2lsbCBoYXZlIHRoZSByaWdodCwgYXQgaXRzIHNvbGUgb3B0aW9uLCB0byBlaXRoZXIgKGkpIGNoYXJnZSBDdXN0b21lciBhdCB0aGUgcmF0ZSBzdGF0ZWQgaW4gU2VjdGlvbiAxNC4zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI1MTg0OTAgLjJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAgdW50aWwgYWxsIHN1Y2ggTG9hbmVkIFF1YW50aXRpZXMgaGF2ZSBiZWVuIHJlLURlbGl2ZXJlZCB0byBLYXR5IG9yIChpaSkgdHJlYXQgc3VjaCBMb2FuZWQgUXVhbnRpdGllcyB0aGF0IGhhdg0KZSBub3QgYmVlbiByZS1EZWxpdmVyZWQgYXMgYSBzYWxlIG9mIHN1Y2ggTG9hbmVkIFF1YW50aXRpZXMgdG8gQ3VzdG9tZXIgdW5kZXIgdGhlIHRlcm1zIHNldCBmb3J0aCBpbiBTZWN0aW9uIDE0LjN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjUxODQ5MCAuMn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDc0ODE2MDkgIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IG9yIChpaWl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1MTkzOTA1XGNoYXJyc2lkNjcwOTM4NCApfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTE5MzkwNSBcfn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCnJlc29ydCB0byBhIGNvbWJpbmF0aW9uIG9mIHN1Y2ggcmVtZWRpZXMuIEthdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBzIGVsZWN0aW9uIHRvIGNoYXJnZSBDdXN0b21lciB1bmRlciB0aGUgdGVybXMgc2V0IGZvcnRoIGluIFNlY3Rpb24gMTQuM317XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI1MTg0OTAgLjJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIHdpbGwgbm90IHByZXZlbnQgS2F0eSBmcm9tIHN1YnNlcXVlbnRseSBleGVyY2lzaW5nIGl0cyByaWdodHMgcHVyc3VhbnQgdG8gU2VjdGlvbiAxNC4zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI1MTg0OTAgLjN9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAgYXQgYW55IHRpbWUgc3VjaCBMb2FuZWQgUXVhbnRpdGllcyBoYXZlIG5vdCBiZWVuIHJlLURlbGl2ZXJlZCB0byBLYXR5IGFmdGVyIHRoZSBlbmQgb2YgdGhlIFRyYW5zYWN0aW9uIFBlcmlvZCBzaGFsbCBiZSBvbiBhbiBJbnRlcnJ1cHRpYmxlIGJhc2lzLiBDdXN0b21lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IA0KXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyBpbmplY3Rpb24gcmlnaHRzIHJlcw0KcGVjdGluZyBhbnkgc3VjaCBMb2FuZWQgUXVhbnRpdGllcyB3aGljaCBDdXN0b21lciBhdHRlbXB0cyB0byByZS1EZWxpdmVyIHRvIHRoZSBLYXR5IFN0b3JhZ2UgRmFjaWxpdHkgYWZ0ZXIgdGhlIGVuZCBvZiB0aGUgYXBwbGljYWJsZSBUcmFuc2FjdGlvbiBwZXJpb2Qgc2hhbGwgYmUgb24gYW4gSW50ZXJydXB0aWJsZSBiYXNpcy4gUGF5bWVudCBvZiBjaGFyZ2VzIHN0YXRlZCBpbiBTZWN0aW9uIDE0LjN9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNTE4NDkwIC4yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBzaGFsbCBub3QgcmVsaWV2ZSBDdXN0b21lciBvZiBpdHMgb2JsaWdhdGlvbiB0byBwYXkgS2F0eSBmb3IgYW55IGluamVjdGlvbiBjaGFyZ2VzIGFzc29jaWF0ZWQgd2l0aCByZS0gRGVsaXZlcmluZyBHYXMgdG8gS2F0eS4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTQuMy4yXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgQWRkaXRpb25hbCBDaGFyZ2VzfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgLiBQdXJzdWFudCB0byB0aGUgYWJvdmUtc3RhdGVkIHByb3Zpc2lvbnMgb2YgdGhpcyBTZWN0aW9uIDE0LjMsIEN1c3RvbWVyIHNoYWxsIHBheSB0byBLYXR5IGFuIGFtb3VudCBlcXVhbCB0byB0aGUgRXh0ZW5kZWQgTG9hbmluZyBDaGENCnJnZSByZWxhdGVkIHRvIHRoZSBMb2FuZWQgUXVhbnRpdGllcyB0aGF0IEN1c3RvbWVyIGhhcyBmYWlsZWQgdG8gcmV0dXJuIHRvIEthdHkgYWZ0ZXIgdGhlIGVuZCBvZiB0aGUgVHJhbnNhY3Rpb24gUGVyaW9kLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTkgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNC4zLjNcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBTYWxlIFJlbWVkeX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IC4gUHVyc3VhbnQgdG8gdGhlIGFib3ZlLXN0YXRlZCBwcm92aXNpb25zIG9mIHRoaXMgU2VjdGlvbiAxNC4zLCBhdCBLYXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpzIHNvbGUgb3B0aW9uLCBLYXR5IHNoYWxsIGNoYXJnZSBDdXN0b21lciBmb3IgYSBRdWFuDQp0aXR5IG9mIEdhcyB0aGVybWFsbHkgZXF1aXZhbGVudCB0byB0aGUgTG9hbmVkIFF1YW50aXRpZXMgYXQgYSBwcmljZSBwZXIgTU1CdHUgZXF1YWwgdG8gb25lIGh1bmRyZWQgdHdlbnR5LWZpdmUgcGVyY2VudCAoMTI1JSkgb2YgdGhlIE1vbnRobHkgUmVmZXJlbmNlIFByaWNlIGZvciB0aGUgY3VycmVudCBNb250aCBkdXJpbmcgd2hpY2ggc3VjaCB0cmFuc2FjdGlvbiAoaS5lLiwgYXNzZXNzbWVudCBvZiBjaGFyZ2VzKSB0YWtlcyBwbGFjZS4gS2ENCnR5IHdpbGwgcmVmbGVjdCBzdWNoIGNoYXJnZXMgdG8gQ3VzdG9tZXIgb24gQ3VzdG9tZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBzIG5leHQgTW9udGhseSBiaWxsIGFuZCBDdXN0b21lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IA0KXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyBMb2FuZWQgUXVhbnRpdGllcyB3aXRoIHJlc3BlY3QgdG8gdGhlIHJlbGV2YW50IFRyYW5zYWN0aW9uIHdpbGwgYmUgZGVjcmVhc2VkIGFjY29yZGluZ2x5LiBUaGUgc2FsZSBvZiBHYXMgdG8gQ3VzdG9tZXIgdW5kZXIgdGhpcyBTZWN0aW9uIHdpbGwgbm90IHJlbGlldmUgQ3VzdG9tZXIgb2YgaXRzDQogb2JsaWdhdGlvbiB0byBwYXkgS2F0eSBhbGwgYXBwbGljYWJsZSBjaGFyZ2VzLCBpbmNsdWRpbmcgY2hhcmdlcyB1bmRlciBTZWN0aW9uIDE0LjJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjUxODQ5MCAuMn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAgdGhhdCBhY2NydWVkIGJlZm9yZSBzdWNoIHNhbGUuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE0LjMuNFx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IEZvcmNlIE1hamV1cmV9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAuIElmIEN1c3RvbWVyIGlzIHVuYWJsZSB0byByZS1EZWxpdmVyIGFsbCBMb2FuZWQgUXVhbnRpdGllcyBiZWZvcmUgdGhlIGVuZCBvZiB0aGUgYXBwbGljYWJsZSBUcmFuc2FjdGlvbiBQZXJpb2QgYnkgcmVhc29uIG9mIA0Kc3VzcGVuc2lvbiBvZiBpbmplY3Rpb24gcmlnaHRzIGR1cmluZyB0aGUgVHJhbnNhY3Rpb24gUGVyaW9kIGNhdXNlZCBieSBGb3JjZSBNYWpldXJlIG9yIG90aGVyIGN1cnRhaWxtZW50IG9mIHN1Y2ggcmlnaHRzIGRlY2xhcmVkIGJ5IEthdHksIEN1c3RvbWVyIHdpbGwgbm90IGJlIHJlcXVpcmVkIHRvIHBheSBhbiBFeHRlbmRlZCBMb2FuaW5nIENoYXJnZSBidXQgc2hhbGwsIGFzIHNvb24gYXMgcG9zc2libGUgYWZ0ZXIgdGhlIGV4cGlyeSBvZiBzDQp1Y2ggRm9yY2UgTWFqZXVyZSBvciBjdXJ0YWlsbWVudCBwZXJpb2QsIG5vbWluYXRlIHRvIHJldHVybiB0aGUgTG9hbmVkIFF1YW50aXRpZXMgdW5kZXIgdGhlIFRyYW5zYWN0aW9uLCBpbiBhY2NvcmRhbmNlIHdpdGggQ3VzdG9tZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCnMgUkRMUFEuIFRoZSBwcm92aXNpb25zIG9mIFNlY3Rpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NDA1OTk4IHN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIDE0LjN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjUxODQ5MCAuMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ0MDU5OTggIHRvIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI1MTg0OTAgMTQuMy4zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBhcmUgc3ViamVjdCB0byB0aGUgcHJvdmlzaW9ucyBvZiB0aGlzIFNlY3Rpb24gMTQuM317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEyNTE4NDkwIC40fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIHJlZ2FyZGluZyBGb3JjZSBNYWpldXJlIGFuZCBjdXJ0YWlsbWVudCBwZXJpb2RzLCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGlcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBwcm92aWRlZCwgaG93ZXZlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCiwgdGhhdCBvbmNlIGFueSBzdWNoIEZvcmNlIE1hamV1cmUgYW5kL29yIGN1cnRhaWxtZW50IHBlcmlvZCBpcyBvdmVyLCBDdXN0b21lciBzaGFsbCBiZSBnaXZlbiBhIHJlYXNvbmFibGUgdGltZSAoaS5lLiwgdGhlIHNhbWUgbnVtYmVyIG9mIGRheXMgYXMgQ3VzdG9tZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IHMgaW5qZWN0aW9uIHJpZ2h0cyB3ZXJlIHN1YmplY3QgdG8gc3VjaCBGb3JjZSBNYWpldXJlIGFuZC9vciBjdXJ0YWlsbWVudCBwZXJpb2QpIHRvIHJlLURlbGl2ZXIgYWxsIHJlbWFpbmluZyBMb2FuZWQgUXVhbnRpdGllcywgYW5kIGFmdGVyIHN1Y2ggcmVhc29uYWJsZSB0aW1lIHRoZSB0ZXJtcyBmb3IgU2VjdGlvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNDQwNTk5OCBzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICAxNC4zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTI1MTg0OTAgLjF9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NDA1OTk4ICB0byB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMjUxODQ5MCAxNC4zLjN9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAgc2hhbGwgb25jZSBhZ2FpbiBhcHBseS4NClxwYXIge1wqXGJrbWtzdGFydCBfVG9jMzg4NzgwNTh9e1wqXGJrbWtzdGFydCBfVG9jMzkyMzk1MzF9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk1IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGJcY2Fwc1xkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ5NzE4MTc1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE1LjBcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczk1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHg3MjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczM5XG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkOTcxODE3NSBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkOTcxODE3NSBGRUVTIEZPUiBTRVJWSUNFU3tcKlxia21rZW5kIF9Ub2MzODg3ODA1OH17XCpcYmtta2VuZCBfVG9jMzkyMzk1MzF9DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE1LjFcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHM5N1xxaiBcZmktNzIwXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHg3MjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczM5XGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQ5NzE4MTc1IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBTZXJ2aWNlc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAuIEN1c3RvbWVyIHdpbGwgYmUgcmVzcG9uc2libGUgZm9yIHBheWluZyBhbGwgY2hhcmdlcyANCnJlbGF0ZWQgdG8gU2VydmljZXMgcHJvdmlkZWQgdW5kZXIgdGhlIHRlcm1zIG9mIGEgTWFzdGVyIFNlcnZpY2UgQWdyZWVtZW50LCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uLCB0aGUgZm9sbG93aW5nIChhcyBhcHBsaWNhYmxlIHRvIHRoZSBTZXJ2aWNlIHByb3ZpZGVkKTogRGVtYW5kIENoYXJnZXMsIENvbW1vZGl0eSBDaGFyZ2VzLCBFeGNlc3MgTm9taW5hdGlvbiBDaGFyZ2VzLCBFeHRlbmRlZCBMb2FuaW5nIENoYXJnZXMsIEV4dGVuZA0KZWQgU3RvcmFnZSBDaGFyZ2VzLCBJbnZlbnRvcnkgQ2hhcmdlcywgT3ZlcnJ1biBDaGFyZ2VzLCBhbmQgV2hlZWxpbmcgQ2hhcmdlcywgZWFjaCBvZiB3aGljaCB3aWxsIGJlIGNhbGN1bGF0ZWQgYmFzZWQgb24gdGhlIGFwcGxpY2FibGUgcmF0ZXMgYXMgc2V0IGZvcnRoIGluIHRoZSBhcHBsaWNhYmxlIENvbmZpcm1hdGlvbi4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTUuMlx0YWJ9U3VjaCBjaGFyZ2VzIHdpbGwgYmUgc3ViamVjdCB0byB0aGUgbWF4aW11bSByYXRlcyBhbGxvd2VkIGJ5IHRoZSBGRVJDLCANCmFzIGFwcGxpY2FibGUsIHBsdXMgdGF4ZXMsIGlmIGFueSwgcGF5YWJsZSBvbiB0aGUgU2VydmljZXMgcHJvdmlkZWQgYnkgS2F0eSwgaW5jbHVkaW5nLCB3aXRob3V0IGxpbWl0YXRpb24sIHRheCBvbiBhbnkgRnVlbCBwcm92aWRlZCBieSBDdXN0b21lciwgYW5kIGFueSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGlcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBhZCB2YWxvcmVtIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IG9yIHNpbWlsYXIgdGF4IGFzc2Vzc2VkIG9uIEN1c3RvbWVyIEludmVudG9yeSwgZm9yIHdoaWNoIEN1c3RvbWVyIHNoYWxsIGF0IGFsbCB0aW1lcyBiZSByZXMNCnBvbnNpYmxlLiBBbGwgcmVmZXJlbmNlcyB0byBwcmljZXMsIGZlZXMsIGNoYXJnZXMsIG9yIG90aGVyIG1vbmV0YXJ5IGFtb3VudHMgd2lsbCBiZSBpbiBVLlMuIGRvbGxhcnMgKFVTRCkgdW5sZXNzIG90aGVyd2lzZSBleHByZXNzbHkgcHJvdmlkZWQgaW4gdGhlIGFwcGxpY2FibGUgQ29uZmlybWF0aW9uLg0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2MzODg3ODA1OX17XCpcYmtta3N0YXJ0IF9Ub2MzOTIzOTUzMn17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTUgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcYlxjYXBzXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDk3MTgxNzUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTYuMFx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzOTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDcyMFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMzlcb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ5NzE4MTc1IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ5NzE4MTc1IEZVRUwgUkVJTUJVUlNFTUVOVHtcKlxia21rZW5kIF9Ub2MzODg3ODA1OX17XCpcYmtta2VuZCBfVG9jMzkyMzk1MzJ9DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE2LjFcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHM5N1xxaiBcZmktNzIwXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHg3MjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczM5XGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQ5NzE4MTc1IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBDb21wZW5zYXRpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgLiBUaGUgdHdvIGdlbmVyYWwgY2F0ZWdvcmllcyBvZiBGdWVsIHVzYWdlIA0KYXJlOiAoMSkgZGlyZWN0IEZ1ZWwgdXNhZ2UsIGNvbnNpc3Rpbmcgb2YgKGEpIGNvbXByZXNzaW9uIEZ1ZWwsIChiKSBkZWh5ZHJhdGlvbiBGdWVsLCBhbmQgKGMpIGxpbmUgaGVhdGluZyBGdWVsLCBhbmQgKDJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ1MTkzOTA1XGNoYXJyc2lkNjcwOTM4NCApfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNTE5MzkwNSBcfn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IGluZGlyZWN0IEZ1ZWwgdXNhZ2UsIGNvbnNpc3Rpbmcgb2YgRnVlbCB0aGF0IGlzIGNvbnN1bWVkIG9uIHNpdGUgdG8gKGEpIGdlbmVyYXRlIGVsZWN0cmljaXR5IChiKSBoZWF0IHRoZSBmYWNpbGl0eSAoaWYgYW55KSwgYW5kIChjKSBsbw0Kc3QgYW5kIHVuYWNjb3VudGVkIGZvciB2b2x1bWVzLCB0byB0aGUgZXh0ZW50IHJlcXVpcmVkIGZvciB0aGUgb3BlcmF0aW9uIGFuZCBtYWludGVuYW5jZSBvZiB0aGUgS2F0eSBTdG9yYWdlIEZhY2lsaXR5Lg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNi4yXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgU2V0dGxlbWVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IC4gQ3VzdG9tZXIgc2hhbGwgcmVpbWJ1cnNlIEthdHkgZm9yIEZ1ZWwgdXNhZ2UgYW5kIGVhY2ggRnVlbCByZWltYnVyc2VtZW50IGNoYXJnZSBzaGFsbCBiZSBhcyBhZ3JlZWQgdXBvbiBieSBLYXR5IGFuZCBDdXN0b21lciANCnN1Y2ggdGhhdCByZWltYnVyc2VtZW50IG9mIEZ1ZWwgbWF5IGJlIHBhaWQgaW4ga2luZCBvciBpbiBkb2xsYXJzIHBlciBNTUJ0dSwgYXMgc2V0IGZvcnRoIGluIHRoZSBhcHBsaWNhYmxlIENvbmZpcm1hdGlvbi4NClxwYXIge1wqXGJrbWtzdGFydCBfVG9jMzg4NzgwNjB9e1wqXGJrbWtzdGFydCBfVG9jMzkyMzk1MzN9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk1IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGJcY2Fwc1xkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ5NzE4MTc1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE3LjBcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczk1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHg3MjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczM5XG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkOTcxODE3NSBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkOTcxODE3NSBUQVhFU3tcKlxia21rZW5kIF9Ub2MzODg3ODA2MH17XCpcYmtta2VuZCBfVG9jMzkyMzk1MzN9DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE3LjFcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHM5N1xxaiBcZmktNzIwXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHg3MjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczM5XGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQ5NzE4MTc1IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBDdXN0b21lciBzaGFsbCAoaSkgYmUgcmVzcG9uc2libGUgZm9yIGFsbCB0YXhlcyBhbmQgYXNzZXNzbWVudHMsIG9mIGFueSBuYXR1cmUsIGFzc29jaWF0ZWQgd2l0aCBvciBhc3Nlc3NlZCBieSBhbnkgZ292ZXJubWVudGFsIA0KYXV0aG9yaXR5IGluIHJlc3BlY3Qgb2YgR2FzIHRvIHdoaWNoIEN1c3RvbWVyIGhvbGRzIHRpdGxlLCBub3R3aXRoc3RhbmRpbmcgdGhhdCBzdWNoIEdhcyBtYXkgYmUgaGVsZCBpbiB0aGUgS2F0eSBTdG9yYWdlIEZhY2lsaXR5IGFzIG9mIHN1Y2ggZ292ZXJubWVudGFsIGF1dGhvcml0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyB0YXggYXNzZXNzbWVudC9wcm9wZXJ0eSByZXBvcnRpbmcgZGF0ZSwgKGlpKSBwYXkgdG8gS2F0eSBhbGwgdGF4ZXMsIGxldmllcywgb3IgY2hhcmdlcyB0aGENCnQgS2F0eSBtYXkgYmUgcmVxdWlyZWQgYnkgbGF3IHRvIGNvbGxlY3QgZnJvbSBDdXN0b21lciBieSByZWFzb24gb2YgdGhlIFNlcnZpY2VzIHBlcmZvcm1lZCBmb3IgQ3VzdG9tZXIgYW5kIGZvciB3aGljaCBLYXR5IGhhcyBub3QgYWxyZWFkeSBwcm92aWRlZCBmb3IgY29sbGVjdGlvbiB0aHJvdWdoIHRoZSByYXRlcyBzZXQgZm9ydGggaW4gdGhlIGFwcGxpY2FibGUgQ29uZmlybWF0aW9uLCBpbmNsdWRpbmcsIHdpdGhvdXQgbGltaXRhdGlvbiwgYQ0KbnkgYW5kIGFsbCBzYWxlcyBvciB1c2UgdGF4IG9yIHNpbWlsYXIgYXNzZXNzbWVudCBmb3IgZ29vZHMgYW5kIHNlcnZpY2VzLCBhbmQgKGlpaSkgcmVpbWJ1cnNlIEthdHkgZm9yIGFsbCBmaWxpbmcgYW5kIG90aGVyIGZlZXMgd2hpY2ggYXJlIHBheWFibGUgcHVyc3VhbnQgdG8gRkVSQyBvciBSUkMgcmVndWxhdGlvbnMgYW5kIHdoaWNoIGFyZSBhdHRyaWJ1dGFibGUgdG8gS2F0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyBTZXJ2aWNlcyBmb3IgQ3VzdG9tZXIuIE5vdHdpdGhzdGFuZGluDQpnIGFueXRoaW5nIHRvIHRoZSBjb250cmFyeSBjb250YWluZWQgaW4gYW55IFRyYW5zYWN0aW9uIERvY3VtZW50LCBDdXN0b21lciBzaGFsbCBiZSByZXNwb25zaWJsZSBmb3IsIGFuZCBzaGFsbCBwYXkgZGlyZWN0bHksIGFsbCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGlcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBhZCB2YWxvcmVtIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IHRheGVzIHBheWFibGUgaW4gcmVzcGVjdCBvZiBhbGwgb3IgYW55IHBvcnRpb24gb2YgQ3VzdG9tZXIgR3Jvc3MgSW52ZW50b3J5LiBUbyB0aGUgZXh0ZW50IHBlcm1pdHRlZCBvciByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdywgS2F0eSB3aWxsIHJlcG9ydCBDdXN0b21lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyBJbnZlbnRvcnkgYXMgb2YgdGhlIHByb3BlcnR5IHJlcG9ydGluZyBkYXRlIGFzIEN1c3RvbWVyIEdyb3NzIEludmVudG9yeSBsZXNzIGFueSBMb2FuZWQgUXVhbnRpdGllcyBvdXQgb24gbG9hbiB0byBzdWNoIEN1c3RvbWVyIG9uIHRoYXQgZGF0ZSAofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgDQpcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IEN1c3RvbWVyIFRheGVkfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgSW52ZW50b3J5fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICksIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaVxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IHByb3ZpZGVkLCBob3dldmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KLCB0aGF0IHN1Y2ggQ3VzdG9tZXIgVGF4ZWQgSW52ZW50b3J5IHNoYWxsIG5ldmVyIGJlIGxlc3MgdGhhbiB6ZXJvLiBLYXR5IHdpbGwgcmVwb3J0IEN1c3RvbWVyIFRheGVkIEludmVudG9yeSB0byBhbGwgdGF4aW5nIGF1dGhvcml0aWVzIGhhdmluZyBqdXJpc2RpY3Rpb24gaW4gYWNjb3JkYW5jZSB3aXRoIGluc3RydWN0aW9ucyBmcm9tIHN1Y2ggdGF4aW5nIGF1dGhvcml0aWVzLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNy4yXHRhYn1OZWl0aGVyIFBhcnR5IHNoYWxsIGJlIHJlc3BvbnNpYmxlIG9yIGxpYWJsZSBmb3IgYW55IHRheGVzIG9yIGENCm55IG90aGVyIHN0YXR1dG9yeSBjaGFyZ2VzIGxldmllZCBvciBhc3Nlc3NlZCBhZ2FpbnN0IGFueSBvZiB0aGUgZmFjaWxpdGllcyBvZiB0aGUgb3RoZXIgUGFydHkgdXNlZCBmb3IgdGhlIHB1cnBvc2Ugb2YgY2Fycnlpbmcgb3V0IHRoZSBwcm92aXNpb25zIG9mIGEgQ29uZmlybWF0aW9uLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxNy4zXHRhYn1JZiBhbnkgdGF4ZXMgb3IgYXNzZXNzbWVudHMgZHVlIGFuZCBwYXlhYmxlIGJ5IEN1c3RvbWVyIGFyZSBsZXZpZWQgb24gS2F0eSwgQ3VzdG9tZXIgYWdyZWUNCnMgdG8gcHJvbXB0bHkgcmVpbWJ1cnNlIEthdHkgZm9yIHN1Y2ggdGF4ZXMgYW5kIGFzc2Vzc21lbnRzLg0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2MzODg3ODA2MX17XCpcYmtta3N0YXJ0IF9Ub2MzOTIzOTUzNH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTUgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcYlxjYXBzXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDk3MTgxNzUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTguMFx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzOTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDcyMFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMzlcb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ5NzE4MTc1IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ5NzE4MTc1IEJJTExJTkcgQU5EIFBBWU1FTlR7XCpcYmtta2VuZCBfVG9jMzg4NzgwNjF9e1wqXGJrbWtlbmQgX1RvYzM5MjM5NTM0fQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxOC4xXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzOTdccWogXGZpLTcyMFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4NzIwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkOTcxODE3NSBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgSW52b2ljZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAuIE5vIGxhdGVyIHRoYW4gdGhlIHRlbnRoICgxMH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcc3VwZXJcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCB0aH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICkgR2FzIERheSBvZiBlYWNoIE1vbnRoIChlYWNoLCBhbiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IEludm9pY2UgTW9udGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgKSBkdXJpbmcgdGhlIHRlcm0gb2YgYSBUcmFuc2FjdGlvbiB1bmRlciBhIENvbmZpcm1hdGlvbiwgS2F0eSBzaGFsbCBwcm92aWRlIEN1c3RvbWVyIGFuIA0KaW52b2ljZSBldmlkZW5jaW5nIHRoZSBhbW91bnQgZHVlIHRvIEthdHkgZm9yIFNlcnZpY2VzIHJlbmRlcmVkIHRvIEN1c3RvbWVyIGR1cmluZyB0aGUgcHJlY2VkaW5nIE1vbnRoLCBwbHVzIGFsbCBvdGhlciBhbW91bnRzIHByb3Blcmx5IGNoYXJnZWFibGUgdG8gQ3VzdG9tZXIgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBUcmFuc2FjdGlvbiBEb2N1bWVudHMuIEFsbCBwYXltZW50cyBzaGFsbCBiZSBtYWRlIHdpdGhvdXQgYW55IGRlZHVjdGlvbiBvDQpyIHdpdGhob2xkaW5nIGZvciBvciBvbiBhY2NvdW50IG9mIGFueSB0YXguDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE4LjJcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBQYXltZW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgLiBTdWJqZWN0IHRvIHRoZSBwcm92aXNpb24gb2YgU2VjdGlvbiAxOC4yLjEgYmVsb3csIEN1c3RvbWVyIHNoYWxsIG1ha2UgYWxsIGludm9pY2UgcGF5bWVudHMgdG8gS2F0eSBieSB3aXJlIHRyYW5zZmVyIGluIGltbWVkaWF0ZWx5IGF2YWlsYWJsZSBmdW5kcyB0byBhIGRlcG9zaXRvcnkgZGVzaWduYXRlZCBieSBLYXR5Lg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTkgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkMTQ5NjAyMTEgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTguMi4xXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzOTlccWogXGZpLTcyMFxsaTE0NDBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczM5XGlsdmwyXG91dGxpbmVsZXZlbDJcYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkOTcxODE3NSBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDE0OTYwMjExIEN1c3RvbWVyIHNoYWxsIHBheSBpbiBmdWxsIHRoZSBhbW91bnQgc3RhdGVkIGluIHRoZSBpbnZvaWNlIG9uIG5vIGxhdGVyIHRoYW4gdGhlIHR3ZW50eS1maWZ0aCAoMjV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHN1cGVyXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDE0OTYwMjExIHRofXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDE0OTYwMjExICkgR2FzIERheSBvZiB0aGUgSW52b2ljZSBNb250aDsgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDE0OTYwMjExIHByb3ZpZGVkLCBob3dldmVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxNDk2MDIxMSANCiwgdGhhdCBpZiBhbiBpbnZvaWNlIGlzIHNlbnQgdG8gQ3VzdG9tZXIgYWZ0ZXIgdGhlIHRlbnRoICgxMH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcc3VwZXJcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkMTQ5NjAyMTEgdGh9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDE0OTYwMjExIA0KKSBHYXMgRGF5IG9mIGEgTW9udGgsIHRoZSBkdWUgZGF0ZSBmb3IgcGF5bWVudCBvbiBzdWNoIGludm9pY2Ugc2hhbGwgYmUgZmlmdGVlbiAoMTUpIEdhcyBEYXlzIGFmdGVyIHRoZSBkYXRlIEthdHkgcGxhY2VzIHN1Y2ggaW52b2ljZSBpbiB0aGUgVS5TLiBtYWlsIG9yIG90aGVyIGRlbGl2ZXJ5IHNlcnZpY2UgZm9yIGRlbGl2ZXJ5IHRvIEN1c3RvbWVyLiBJZiBhIHBheW1lbnQgZHVlIGRhdGUgZmFsbHMgb24gYSBHYXMgRGF5IHRoYXQgS2F0eX17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDE0OTYwMjExIHMgZGVzaWduYXRlZCBkZXBvc2l0b3J5IGlzIG5vdCBvcGVuIGluIHRoZSBub3JtYWwgY291cnNlIG9mIGJ1c2luZXNzLA0KIEN1c3RvbWVyIHNoYWxsIGNhdXNlIHN1Y2ggcGF5bWVudCB0byBiZSBhY3R1YWxseSByZWNlaXZlZCBieSBLYXR5IG9uIG9yIGJlZm9yZSB0aGUgZmlyc3QgQnVzaW5lc3MgRGF5IGJlZm9yZSBzdWNoIGR1ZSBkYXRlIG9uIHdoaWNoIHRoZSBkZXNpZ25hdGVkIGRlcG9zaXRvcnkgaXMgb3Blbi4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTguM1x0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczk3XHFqIFxmaS03MjBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDcyMFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMzlcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDk3MTgxNzUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IEJpbGxpbmcgRXJyb3J9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgLiBJZiBhbiBlcnJvciBpcyBkaXNjb3ZlcmVkIGluIGFueSBiaWxsaW5nLCBLYXR5IHdpbGwgdXNlIGl0cyBiZXN0IGVmZm9ydHMgdG8gYWRqdXN0IHN1Y2ggZXJyb3IuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE4LjRcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBCaWxsaW5nIERpc3B1dGVzfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgLiBJZiBDdXN0b21lciBpbiBnb29kIGZhaXRoIGRpc3B1dGVzIGFueSBwb3J0aW9uIG9mIGFuIGludm9pY2VkIGFtb3VudCwgQ3VzdG9tZXIgc2hhbGwgcHJvbXB0bHkgc3VibWl0IHRvIEthdHkgYSB3cml0dGVuIGV4cGxhbmF0aW9uIG9mIHRoZSBiYXNpcyBmb3IgQ3VzdG9tZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSANClxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IHMgZGlzcHV0ZSBhbmQgYW55IGF2YWlsYWJsZSBzdXBwb3J0aW5nIGRvY3VtZW50YXRpb24uIEN1c3RvbWVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpzIG5vdGljZSBvZiBpdHMgZGlzcHV0ZSBzaGFsbCBiZSBkZXRhaWxlZCBzdWZmaWNpZW50bHkgdG8gYWxsb3cgS2F0eSB0byBhZGVxdWF0ZWx5IGludmVzdGlnYXRlIHN1Y2ggY2xhaW1lZCBkaXNwdXRlLiBOZXZlcnRoZWxlc3MsIEN1c3RvbWVyIHNoYWxsIHBheSBhbGwgYW1vdW50cyB0aGF0IGFyZSBub3QgZGlzcHV0ZWQgaW4gZ29vZCBmYWl0aC4gQ3VzdG9tZXIgc2hhbGwgd29yayBkaWxpZ2VudGx5IHdpdGggS2F0eSB0byByZXNvbHZlIGENCm5kIHBheSBhbGwgZGlzcHV0ZWQgaW52b2ljZSBhbW91bnRzIGFzIHNvb24gYXMgcG9zc2libGUuIEN1c3RvbWVyIHNoYWxsIG5vdCBiZSByZXF1aXJlZCB0byBwYXkgaW50ZXJlc3Qgb24gYW55IGludm9pY2VkIGFtb3VudCB3aGljaCBpcyBpbiBnb29kIGZhaXRoIGRpc3B1dGVkIGluIHdyaXRpbmcgYnkgQ3VzdG9tZXIgYW5kIGlzIHVsdGltYXRlbHkgZGV0ZXJtaW5lZCB0byBiZSBpbiBlcnJvcjsgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGlcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBwcm92aWRlZCwgaG93ZXZlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAsIGludGVyZXN0IHNoYWxsIGJlIGR1ZSBpZiBzdWNoIGFtb3VudCBiaWxsZWQgaXMgZm91bmQgbm90IHRvIGJlIGluIGVycm9yLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkOTcxODE3NSBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxOC41XHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDk3MTgxNzUgRmFpbHVyZSB0byBQYXkgQmlsbHN9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDEwMjUyNTY5IC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDk3MTgxNzUgDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE4LjUuMVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczk5XHFqIFxmaS03MjBcbGkxNDQwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOVxpbHZsMlxvdXRsaW5lbGV2ZWwyXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDk3MTgxNzUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFNob3VsZCBDdXN0b21lciBmYWlsIHRvIHBheSBLYXR5IGFsbCBvZiB0aGUgYW1vdW50IG9mIGFueSBiaWxsIHdoZW4gdGhlIHNhbWUgYmVjb21lcyBkdWUsIEN1c3RvbWVyIHNoYWxsIHBheSBLYXR5IGludGVyZXN0IG9uIHRoZSB1bnBhaWQgYmFsYW5jZS4gSW50ZXJlc3Qgc2hhbGwgDQphY2NydWUgb24gYWxsIHVucGFpZCwgdmFsaWQgaW52b2ljZSBhbW91bnRzIGF0IGEgcmF0ZSBlcXVhbCB0byB0aGUgbGVzc2VyIG9mIChpKSB0aGUgcHJpbWUgaW50ZXJlc3QgcmF0ZSBwdWJsaXNoZWQgYnkgdGhlIFdhbGwgU3RyZWV0IEpvdXJuYWwgcGx1cyB0d28gcGVyY2VudCAoMiUpIHBlciBhbm51bSwgb3IgKGlpKSB0aGUgbWF4aW11bSBsYXdmdWwgcmF0ZSwgY29tcG91bmRlZCBEYWlseSBmcm9tIHRoZSBkYXRlIGR1ZSB1bnRpbCB0aGUgZGENCnQNCmUgcGF5bWVudCBpcyBhY3R1YWxseSByZWNlaXZlZCBieSBLYXR5IGF0IGl0cyBkZXNpZ25hdGVkIGRlcG9zaXRvcnkuIElmIGF0IGFueSB0aW1lIHBheW1lbnRzIGZvciBTZXJ2aWNlcyBhbmQgcGF5bWVudHMgZm9yIGludGVyZXN0IGFyZSBib3RoIGR1ZSwgYW55IHBheW1lbnRzIHRoZXJlYWZ0ZXIgcmVjZWl2ZWQgc2hhbGwgYmUgYXBwbGllZCBmaXJzdCB0byBhbGwgaW50ZXJlc3QgcGF5bWVudHMgZHVlLCB0aGVuIHRvIHRoZSBTZXJ2aWNlIHBheQ0KbWVudHMgZHVlIGluIG9yZGVyIGZyb20gdGhlIG9sZGVzdCB0byB0aGUgbW9zdCBjdXJyZW50IHBheW1lbnRzIGR1ZS4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTguNS4yXHRhYn1JZiBhbnkgYmlsbCByZW1haW5zIHVucGFpZCBhZnRlciB0aGUgZHVlIGRhdGUgdGhlcmVvZjoNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczEwMSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChhKVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczEwMVxxaiBcZmktNzIwXGxpMjE2MFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MjE2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMzlcaWx2bDNcb3V0bGluZWxldmVsM1xhZGp1c3RyaWdodFxyaW4wXGxpbjIxNjBcaXRhcDBccGFyYXJzaWQ5NzE4MTc1IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBJbiBhZGRpdGlvbiB0byBhbnkgb3RoZXIgcmlnaHRzIHRoYXQgS2F0eSBtYXkgaGF2ZSB1bmRlciB0aGUgVHJhbnNhY3Rpb24gRG9jdW1lbnRzIG9yIGF0IGxhdyBvciBpbiBlcXVpdHksIEthdHkgc2hhbGwgaGF2ZSB0aGUgcmlnaHQsDQogdXBvbiBnaXZpbmcgQ3VzdG9tZXIgd3JpdHRlbiBub3RpY2UsIHRvIHN1c3BlbmQgaW5qZWN0aW9ucyBhbmQvb3Igd2l0aGRyYXdhbHMgdW5kZXIgYW55IG9yIGFsbCBUcmFuc2FjdGlvbnMgYW5kL29yIHRlcm1pbmF0ZSBhbGwgVHJhbnNhY3Rpb25zLiBDdXN0b21lciwgYnkgaXRzIG5vbnBheW1lbnQgaW4gZnVsbCBvZiBhbGwgYW1vdW50cyB0aGVuIGR1ZSB3aXRoaW4gdHdvICgyKSBHYXMgRGF5cyBhZnRlciBzdWNoIG5vdGljZSwgc2hhbGwgYmUNCiANCmRlZW1lZCB0byBoYXZlIGNvbnNlbnRlZCB0byBhbnkgYW5kIGFsbCBzdWNoIHN1c3BlbnNpb25zIGFuZC9vciBzdWNoIHRlcm1pbmF0aW9ucy4gU3VzcGVuc2lvbiBvZiBpbmplY3Rpb25zIGFuZC9vciB3aXRoZHJhd2FscyB1bmRlciBhIFRyYW5zYWN0aW9uIHdpbGwgbm90IHJlbGlldmUgQ3VzdG9tZXIgb2YgbGlhYmlsaXR5IGZvciBjYXBhY2l0eSBjaGFyZ2VzIGFuZCBkZWxpdmVyYWJpbGl0eSBjaGFyZ2VzIHdoaWNoIGFjY3J1ZSBhZnRlciBhbg0KeSBzdWNoIHN1c3BlbnNpb24uDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMxMDEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoYilcdGFifQ0KS2F0eSB3aWxsIG5vdCBzdXNwZW5kIGluamVjdGlvbnMgYW5kL29yIHdpdGhkcmF3YWxzIG9yIHRlcm1pbmF0ZSBUcmFuc2FjdGlvbnMgYXMgcHJvdmlkZWQgaW4gU2VjdGlvbiAxOC41LjIoYSkgYWJvdmUgaWYgQ3VzdG9tZXIgZGlzcHV0ZXMgYW4gaW52b2ljZWQgYW1vdW50IGluIGdvb2QgZmFpdGggYW5kIGZ1cm5pc2hlcyB0byBLYXR5LCB3aXRoaW4gdHdvICgyKSBHYXMgRGF5cyBhZnRlciBLYXR5fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBzIHRlcm1pbmF0aW9uL3N1c3BlbnNpb24gbm90aWNlLCAoaSkgcHJvbXB0IG5vdGljZSBvZiB0aGUgYmFzaXMgZm9yIEN1c3RvbWVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBzIGRpc3B1dGUgYXMgc2V0IGZvcnRoIGluIFNlY3Rpb24gMTguNCBhYm92ZSBhbmQgKGlpKSBhIHN1cmV0eSBib25kIG9yIG90aGVyIGZvcm0gb2Ygc2VjdXJpdHkgaW4gYW4gYW1vdW50IGFuZCB3aXRoIGEgc3VyZXR5IHNhdGlzZmFjdG9yeSB0byBLYXR5LCBpbiBLYXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSANCn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBzIHJlYXNvbmFibGUgZGlzY3JldGlvbiwgZ3VhcmFudGVlaW5nIHBheW1lbnQgb2YgdGhlIGRpc3B1dGVkIGFtb3VudCB1bHRpbWF0ZWx5IGZvdW5kIHByb3Blcmx5IGR1ZSB0byBLYXR5Lg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxOC42XHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzOTdccWogXGZpLTcyMFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4NzIwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkOTcxODE3NSBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgUmlnaHQgdG8gQXVkaXR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQouIEJvdGggS2F0eSBhbmQgQ3VzdG9tZXIgc2hhbGwgaGF2ZSB0aGUgcmlnaHQgYXQgdGhlaXIgb3duIGV4cGVuc2UgdG8gZXhhbWluZSBhbmQgYXVkaXQgYXQgYW55IHJlYXNvbmFibGUgdGltZSAoZHVyaW5nIG5vcm1hbCBidXNpbmVzcyBob3VycykgdGhlIGJvb2tzIGFuZCByZWNvcmRzIChpbg0KY2x1ZGluZyBtZWFzdXJlbWVudCwgYmlsbGluZywgYW5kIHBheW1lbnQpIHRvIHRoZSBleHRlbnQgbmVjZXNzYXJ5IHRvIHZlcmlmeSB0aGUgYWNjdXJhY3kgb2YgYW55IHN0YXRlbWVudHMgb3IgY2hhcmdlcyBtYWRlIHVuZGVyIG9yIHB1cnN1YW50IHRvIGFueSBvZiB0aGUgcHJvdmlzaW9ucyBvZiB0aGUgVHJhbnNhY3Rpb24gRG9jdW1lbnQocykuIFN1Y2ggcmlnaHQgc2hhbGwgbm90IGV4dGVuZCB0byBhY2NvdW50cyBhbmQgcmVjb3JkcyBwZXJ0DQphaW5pbmcgdG8gYW55IFRyYW5zYWN0aW9uIG9yIG90aGVyIGFncmVlbWVudCBmb3IgU2VydmljZXMgYmV0d2VlbiBLYXR5IGFuZCBhbnkgdGhpcmQgcGFydHkgb3IgdG8gYW55IGFjY291bnQgYW5kIHJlY29yZHMgcGVydGFpbmluZyB0byBLYXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBzIGNvc3Qgb2YgcHJvdmlkaW5nIFNlcnZpY2VzIG9yIHRoZSBwcm9maXRzIHRoZXJlb24uIFN1Y2ggcmlnaHQgdG8gYXVkaXQgbWF5IGJlIGV4ZXJjaXNlZCB3aXRoaW4gdHdlbHZlICgxMikgTW9udGhzIGYNCm9sbG93aW5nIHRoZSBiaWxsaW5nIGRhdGUgY292ZXJpbmcgdGhlIGF1ZGl0ZWQgcXVhbnRpdGllcyBhbmQgY2hhcmdlcy4gSW4gdGhlIGV2ZW50IHRoYXQgYW55IGludm9pY2UgY29udGFpbnMgaW5jb3JyZWN0IGluZm9ybWF0aW9uLCBzdWNoIGVycm9yIHNoYWxsIGJlIGFkanVzdGVkIHdpdGhpbiB0aGlydHkgKDMwKSBHYXMgRGF5cyBhZnRlciBLYXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgDQpccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBzIHZlcmlmaWNhdGlvbiBvZiB0aGUgaW5jb3JyZWN0bmVzcyBvZiBzdWNoIGluZm9ybWF0aW9uOyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGlcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBwcm92aWRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICwgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgaG93ZXZlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCiwgdGhhdCBhbnkgY2xhaW0gYnkgQ3VzdG9tZXIgZm9yIGFkanVzdG1lbnQgb2YgYW4gaW52b2ljZSBtdXN0IGJlIG1hZGUgd2l0aGluIHR3ZWx2ZSAoMTIpIE1vbnRocyBmcm9tIHRoZSBkYXRlIG9mIHN1Y2ggaW52b2ljZS4NClxwYXIge1wqXGJrbWtzdGFydCBfVG9jMzg4NzgwNjJ9e1wqXGJrbWtzdGFydCBfVG9jMzkyMzk1MzV9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk1IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGJcY2Fwc1xkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ5NzE4MTc1IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE5LjBcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczk1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHg3MjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczM5XG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkOTcxODE3NSBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkOTcxODE3NSBFVklERU5DRSBPRiBDUkVESVRXT1JUSElORVNTIEFORCBTRUNVUklUWTsgUklHSFQgT0YgU0VULU9GRntcKlxia21rZW5kIF9Ub2MzODg3ODA2Mn17XCpcYmtta2VuZCBfVG9jMzkyMzk1MzV9DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE5LjFcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHM5N1xxaiBcZmktNzIwXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHg3MjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczM5XGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQxMjczMjk2NSBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgTGllbnN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgLiBLYXR5IHNoYWxsIGhhdmUgdGhlIHJpZ2h0IHRvIHNhdGlzZnkgYW55IGENCm5kIGFsbCBhbW91bnRzIGR1ZSBhbmQgcGF5YWJsZSB0byBLYXR5IGluIGEgbWFubmVyIGNvbnNpc3RlbnQgd2l0aCBhcHBsaWNhYmxlIGxhdywgaW5jbHVkaW5nLCB3aXRob3V0IGxpbWl0YXRpb24sIGJ5IGFzc2VydGluZyBhbmQgZW5mb3JjaW5nIGl0cyByaWdodHMgdW5kZXIgYWxsIGFwcGxpY2FibGUgbGllbnMgYW5kIHNlY3VyaXR5IGludGVyZXN0cyBoZWxkIGJ5IEthdHkgaW4gQ3VzdG9tZXIgR3Jvc3MgSW52ZW50b3J5Lg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxOS4yXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgUG9saWN5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgLiBLYXR5IHdpbGwgbm90IGJlIG9ibGlnYXRlZCB0byBwcm92aWRlIFNlcnZpY2UgYW5kIG1heSBzdXNwZW5kIGFuZC9vciB0ZXJtaW5hdGUgb25nb2luZyBTZXJ2aWNlIHRvIGFueSBDdXN0b21lciBvciBwb3RlbnRpYWwgQ3VzdG9tZXIgdGhhdCBmYWlscywgaW4gS2F0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyByZWFzb25hYmxlIGp1ZGdtZW50LCB0byBkZW1vbnN0cmF0ZSBDcmVkaXR3b3J0aGluZXNzLiBDdXN0b21lciBvciBwb3RlbnRpYWwgQ3VzdG9tZXIgaXMgYXdhcmUgdGhhdDoNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTkuMi4xXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzOTlccWogXGZpLTcyMFxsaTE0NDBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczM5XGlsdmwyXG91dGxpbmVsZXZlbDJcYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMTI3MzI5NjUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IEthdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBzIGNyZWRpdCBwb2xpY3kgbWF5IGJlIGFtZW5kZWQgZnJvbSB0aW1lIHRvIHRpbWUgd2l0aG91dCBwcmlvciBub3RpY2UgdG8gQ3VzdG9tZXI7DQoNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTkuMi4yXHRhYn1LYXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBzIGNyZWRpdCByZXF1aXJlbWVudHMgbWF5IHZhcnkgZGVwZW5kaW5nIG9uIHRoZSBTZXJ2aWNlcyBwcm92aWRlZDsNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTkuMi4zXHRhYn1LYXR5IHJlc2VydmVzIHRoZSByaWdodCB0byBzZXQgY3JlZGl0IGxpbWl0cyBhbmQgdG8gdmFyeSB0aG9zZSBsaW1pdHMgZnJvbSB0aW1lIHRvIHRpbWUgYXQgS2F0eX17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyByZWFzb25hYmxlIGRpc2NyZXRpb247IGFuZA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTkgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxOS4yLjRcdGFifQ0KS2F0eSBtYXkgcmVxdWVzdCBhZGRpdGlvbmFsIGNyZWRpdCBpbmZvcm1hdGlvbiBvciBhbiB1cGRhdGUgb2YgZXhpc3RpbmcgY3JlZGl0IGluZm9ybWF0aW9uIG9uIGFuIG9uLWdvaW5nIGJhc2lzIGR1cmluZyB0aGUgdGVybSBvZiB0aGUgTWFzdGVyIFNlcnZpY2UgQWdyZWVtZW50IGJldHdlZW4gS2F0eSBhbmQgQ3VzdG9tZXIsIGluY2x1ZGluZywgd2l0aG91dCBsaW1pdGF0aW9uLCBlYWNoIHRpbWUgQ3VzdA0Kb21lciBlbnRlcnMgaW50byBhIENvbmZpcm1hdGlvbiBmb3IgU2VydmljZXMuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE5LjNcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHM5N1xxaiBcZmktNzIwXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHg3MjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczM5XGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQxMjczMjk2NSBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgRXZpZGVuY2Ugb2YgQ3JlZGl0d29ydGhpbmVzc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAuIEFjY2VwdGFuY2Ugb2YgYSBTZXJ2aWNlIHJlcXVlc3QgYW5kL29yIGNvbnRpbnVhdGlvbiBvZiBTZXJ2aWNlIGlzIGNvbnRpbmdlbnQgdXBvbiBLYXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBzIGNvbXBsZXRpb24gb2YgYSBjcmVkaXQgZXZhbHVhdGlvbiBpdCBkZWVtcyBzYXRpc2ZhY3RvcnkgaW4gYWNjb3JkYW5jZSB3aXRoIGNyaXRlcmlhIHNldCANCmZvcnRoIGluIHRoaXMgU2VjdGlvbiAxOS4zLiBUbyBlbmFibGUgS2F0eSB0byBjb25kdWN0IHN1Y2ggY3JlZGl0IGV2YWx1YXRpb24sIEN1c3RvbWVyIHNoYWxsIHN1Ym1pdCB0aGUgaW5mb3JtYXRpb24gc2V0IGZvcnRoIGluIFNlY3Rpb24gMTkuNCBiZWxvdzsgdG8gdGhlIGV4dGVudCBzdWNoIGluZm9ybWF0aW9uIGlzIGFwcGxpY2FibGUgdG8gc3VjaCBDdXN0b21lci4gQSBDdXN0b21lciBtYXkgYmUgZGVlbWVkIGNyZWRpdHdvcnRoeSBpZiAoaQ0KKSBpdCBoYXMgYW4gQWNjZXB0YWJsZSBDcmVkaXQgUmF0aW5nOyAoaWkpIGFuIEV2ZW50IG9mIERlZmF1bHQgaGFzIG5vdCBvY2N1cnJlZDsgYW5kIChpaWkpIEthdHkgYmVsaWV2ZXMsIGluIGl0cyByZWFzb25hYmxlIGFuZCBub24tZGlzY3JpbWluYXRvcnkganVkZ21lbnQsIGFmdGVyIHJldmlldyBvZiBDdXN0b21lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyBmaW5hbmNpYWwgc2l0dWF0aW9uIGJhc2VkIG9uIGFsbCBpbmZvcm1hdGlvbiBhdmFpbGFibGUsIHRoYXQgQ3VzdG9tZXIgd2lsbCBmdWxseSwgdGltZWx5IGFuZCBmYWl0aGZ1bGx5IHBlcmZvcm0gYWxsIG9ibGlnYXRpb25zIHVuZGVyIGFsbCBUcmFuc2FjdGlvbiBEb2N1bWVudChzKSBhbmQsIGlmIGFwcGxpY2FibGUsIHRoZSBDdXN0b21lcn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyBDcmVkaXQgU3VwcG9ydCBQcm92aWRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyBndWFyYW50ZWUgZnVsbHkgc2VjdXJlcyBzdWNoIG9ibGlnYXRpb25zIGFuZCBpcyBlbmZvcmNlYWJsZSBieSBLYXR5IGFnYWluc3Qgc3VjaCBDcmVkaXQgU3VwcG9ydCBQcm92aWRlci4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxMDI1MjU2OVxjaGFycnNpZDg1OTc0MzUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTkuMy4xXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzOTlccWogXGZpLTcyMFxsaTE0NDBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczM5XGlsdmwyXG91dGxpbmVsZXZlbDJcYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMTI3MzI5NjUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTAyNTI1NjlcY2hhcnJzaWQ4NTk3NDM1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgQ3JlZGl0d29ydGh5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTAyNTI1NjlcY2hhcnJzaWQ4NTk3NDM1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAgb3IgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTAyNTI1NjlcY2hhcnJzaWQ4NTk3NDM1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgQ3JlZGl0d29ydGhpbmVzc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwMjUyNTY5XGNoYXJyc2lkODU5NzQzNSANClwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgIHNoYWxsIG1lYW4gdGhlIGZvbGxvd2luZzoNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczEwMSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChhKVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczEwMVxxaiBcZmktNzIwXGxpMjE2MFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MjE2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMzlcaWx2bDNcb3V0bGluZWxldmVsM1xhZGp1c3RyaWdodFxyaW4wXGxpbjIxNjBcaXRhcDBccGFyYXJzaWQxMjczMjk2NSBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgTm8gRXZlbnQgb2YgRGVmYXVsdCBoYXMgb2NjdXJyZWQgb3IgaXMgY29udGludWluZzsgYW5kDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMxMDEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoYilcdGFifVRoZSBsb3dlc3QgY3JlZGl0IHJhdGluZ3MgYXNzaWduZWQsIGlmIGFueSwgYXJlIGFzc2lnbmVkIGJ5IG9uZSBvciBtb3JlIFMmUCBvciBNb29keX17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcywgYXMgYXBwbGljYWJsZSwgKGkpIHRvIEN1c3RvbWVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpzIGxvbmctdGVybSwgdW5zZWN1cmVkLCB1bnN1Ym9yZGluYXRlZCBkZWJ0IGlzIGF0IGxlYXN0IEJCQi0gYnkgUyZQIG9yIEJhYTMgYnkgTW9vZHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBzLCBhbmQgaWYgYXBwbGljYWJsZSwgKGlpKSB0byBDdXN0b21lcn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyBDcmVkaXQgU3VwcG9ydCBQcm92aWRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyBndWFyYW50ZWUgZnVsbHkgc2VjdXJlcyBzdWNoIG9ibGlnYXRpb25zIGFuZCBpcyBlbmZvcmNlYWJsZSBieSBLYXR5IGFnYWluc3Qgc3VjaCBDcmVkaXQgU3VwcG9ydCBQcm92aWRlciBhbmQgdGhhdCBzdWNoIENyZWRpdCBTdXBwb3J0IFByb3ZpZGVyIHdpbGwgZnVsbHksIHRpbWVseSwgYW5kIGZhaXRoZnVsbHkgcGVyZm9ybSB1bmRlciB0aGUgZ3VhcmFudGVlLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkMTI3MzI5NjUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTkuNFx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczk3XHFqIFxmaS03MjBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDcyMFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMzlcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDEyNzMyOTY1IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkMTI3MzI5NjUgQ3JlZGl0IEV2YWx1YXRpb259e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTkgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxOS40LjFcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHM5OVxxaiBcZmktNzIwXGxpMTQ0MFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMzlcaWx2bDJcb3V0bGluZWxldmVsMlxhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxMjczMjk2NSBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgQ3VzdG9tZXIgb3IgQ3VzdG9tZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCnMgQ3JlZGl0IFN1cHBvcnQgUHJvdmlkZXIsIGlmIGFwcGxpY2FibGUsIHdpbGwgYmUgcmVxdWlyZWQgdG8gcHJvdmlkZSB0aGUgZm9sbG93aW5nIGluZm9ybWF0aW9uIHRvIEthdHkgaW4gb3JkZXIgdG8gcGVyZm9ybSBpdHMgY3JlZGl0IGV2YWx1YXRpb246DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMxMDEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoYSlcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMxMDFccWogXGZpLTcyMFxsaTIxNjBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDIxNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczM5XGlsdmwzXG91dGxpbmVsZXZlbDNcYWRqdXN0cmlnaHRccmluMFxsaW4yMTYwXGl0YXAwXHBhcmFyc2lkMTI3MzI5NjUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IEN1c3RvbWVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyBGaW5hbmNpYWwgU3RhdGVtZW50cy4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczEwMyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChpKVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczEwM1xxaiBcZmktNzIwXGxpMjg4MFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4Mjg4MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMzlcaWx2bDRcb3V0bGluZWxldmVsNFxhZGp1c3RyaWdodFxyaW4wXGxpbjI4ODBcaXRhcDBccGFyYXJzaWQxMjczMjk2NSBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgQ3VzdG9tZXIgc2hhbGwgcHJvdmlkZSBLYXR5IHdpdGggY29waWVzIG9mIGl0cyBtb3N0IHJlY2VudCBmaW5hbmNpYWwgc3RhdGVtZW50cyAoaSkgd2l0aGluIG9uZSBodW5kcmVkIHRoaXJ0eSAoMTMwKSBkYXlzIG9mIGl0cyBmaXNjYWwgeWVhciBlbmQgZm9yIGVhY2ggeWVhciBkdXJpbmcgdGhlIHRlcm0sIGFuZCAoaWkpIHdpdGhpbiBuaW5ldHkgKDkwKSBkYXlzIA0KYWZ0ZXIgdGhlIGVuZCBvZiBlYWNoIG9mIHRoZSBDdXN0b21lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KcyBmaXJzdCB0aHJlZSBmaXNjYWwgcXVhcnRlcnMgZm9yIGVhY2ggZmlzY2FsIHllYXIuIEN1c3RvbWVyIHNoYWxsIGhhdmUgdGhlIHJpZ2h0IHRvIGRlbGl2ZXIgdW5hdWRpdGVkIGZpbmFuY2lhbCBzdGF0ZW1lbnRzIGluIHNhdGlzZmFjdGlvbiBvZiB0aGlzIHJlcXVpcmVtZW50LCBhcyBsb25nIGFzIGF1ZGl0ZWQgZmluYW5jaWFsIHN0YXRlbWVudHMgYXJlIHByb2R1Y2VkIGluIHQNCmhlIG9yZGluYXJ5IGNvdXJzZSBvZiBidXNpbmVzcyBhbmQgcHJvbXB0bHkgZGVsaXZlcmVkIGFzIHNvb24gYXMgdGhleSBhcmUgYXZhaWxhYmxlLiBJbiBhZGRpdGlvbiwgQ3VzdG9tZXIgc2hhbGwgcHJvbXB0bHkgcHJvdmlkZSB0byBLYXR5IG90aGVyIGZpbmFuY2lhbCBpbmZvcm1hdGlvbiByZWFzb25hYmx5IHJlcXVlc3RlZCBieSBLYXR5IGZvciBwdXJwb3NlcyBvZiB0aGUgVHJhbnNhY3Rpb24gRG9jdW1lbnQocykuIElmIHRoZSBmaW5hbmNpYQ0KbCBpbmZvcm1hdGlvbiBpcyBwdWJsaWNseSBwcm92aWRlZCwgdGhlbiB0aGUgQ3VzdG9tZXIgbXVzdCBpZGVudGlmeSB3aGVyZSBhbmQgaG93IHN1Y2ggaW5mb3JtYXRpb24gbWF5IGJlIG9idGFpbmVkIGFuZCBwcm92aWRlIGFueSBmdXJ0aGVyIGFzc2lzdGFuY2UgS2F0eSBtYXkgcmVhc29uYWJseSBuZWVkIHRvIGxvY2F0ZSBhbmQgb2J0YWluIHN1Y2ggZmluYW5jaWFsIGluZm9ybWF0aW9uLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMTAzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGlpKVx0YWJ9fVxwYXJkIFxsdHJwYXJcczEwM1xxaiBcZmktNzIwXGxpMjg4MFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4Mjg4MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMzlcaWx2bDRcb3V0bGluZWxldmVsNFxhZGp1c3RyaWdodFxyaW4wXGxpbjI4ODBcaXRhcDBccGFyYXJzaWQ0OTkyODQ0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IElmIEN1c3RvbWVyIGRvZXMgbm90IG1ha2UgYXZhaWxhYg0KbGUgc3VjaCBpbmZvcm1hdGlvbiBhcyByZXF1aXJlZCB0byBiZSBtYWRlIGF2YWlsYWJsZSB1bmRlciBTZWN0aW9uIDE5LjQuMSwgd2l0aGluIHRlbiAoMTApIEJ1c2luZXNzIERheXMgYWZ0ZXIgYSByZXF1ZXN0IGJ5IEthdHksIEthdHkgc2hhbGwgaGF2ZSB0aGUgcmlnaHQgdG8gc2VuZCBhIHdyaXR0ZW4gbm90aWNlIGRlbWFuZGluZyB0aGF0IHN1Y2ggaW5mb3JtYXRpb24gdG8gYmUgbWFkZSBhdmFpbGFibGUuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMxMDMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoaWlpKVx0YWJ9QWxsIGZpbmFuY2lhbCBpbmZvcm1hDQp0aW9uIG1hZGUgYXZhaWxhYmxlIHVuZGVyIHRoaXMgU2VjdGlvbiAxOS40LjEsIGlmIG5vdCBwdWJsaWNseSBhdmFpbGFibGUsIHNoYWxsIGJlIHRyZWF0ZWQgYXMgY29uZmlkZW50aWFsIGluZm9ybWF0aW9uLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMTAxIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGIpXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMTAxXHFqIFxmaS03MjBcbGkyMTYwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgyMTYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOVxpbHZsM1xvdXRsaW5lbGV2ZWwzXGFkanVzdHJpZ2h0XHJpbjBcbGluMjE2MFxpdGFwMFxwYXJhcnNpZDQ5OTI4NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFN1Y2ggb3RoZXIgaW5mb3JtYXRpb24gYXMgbWF5IGJlIHJlYXNvbmFibHkgcmVxdWlyZWQgdG8gYnkgS2F0eS4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTkuNC4yXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzOTlccWogXGZpLTcyMFxsaTE0NDBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczM5XGlsdmwyXG91dGxpbmVsZXZlbDJcYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkNDk5Mjg0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgSW4gdGhlIGV2ZW50IHRoYXQgQ3VzdG9tZXIgY2Fubm90IHByb3ZpZGUgdGhlIGluZm9ybWF0aW9uIGluIFNlY3Rpb24gMTkuNC4xLCBpdCBzaGFsbCwgaWYgYXBwbGljYWJsZSwgY2F1c2UgaXRzIHBhcmVudCBjb21wYW55IHRvIHByb3ZpZGUgc3VjaCBpbmZvcm1hdGlvbi4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTkuNC4zXHRhYn0NCkthdHkgc2hhbGwgYmUgZW50aXRsZWQsIHdpdGhvdXQgd2FpdmluZyBhbnkgb3RoZXIgcmlnaHQgb3IgcmVtZWR5IGl0IG1heSBoYXZlLCB0byByZWZ1c2Ugb3Igc3VzcGVuZCBTZXJ2aWNlcyB1bmRlciBhbnkgQ29uZmlybWF0aW9uIGlmIEN1c3RvbWVyIG9yIEN1c3RvbWVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBzIENyZWRpdCBTdXBwb3J0IFByb3ZpZGVyIGZhaWxzIHRvIHByb3ZpZGUgaW5mb3JtYXRpb24gYXMgcmVxdWlyZWQgaW4gU2VjdGlvbiAxOS40LjEgdW50aWwgc3VjaCBpbmZvcm1hdGlvbiBpcyBwcm92aWRlZC4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTkuNVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczk3XHFqIFxmaS03MjBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDcyMFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMzlcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDQ5OTI4NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IE5vdGljZSBvZiBNYXRlcmlhbCBBZHZlcnNlIENoYW5nZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAuIEN1c3RvbWVyIG9yIENyZWRpdCBTdXBwb3J0IFByb3ZpZGVyLCBpZiBhcHBsaWNhYmxlLCBzaGFsbCBwcm9tcHRseSBub3RpZnkgS2F0eSBpbiB3cml0aW5nIG9mIHRoZSBvY2N1cnJlbmNlIG8NCmYgYW55IGV2ZW50IHRoYXQgd291bGQgY29uc3RpdHV0ZSBhIE1hdGVyaWFsIEFkdmVyc2UgQ2hhbmdlLCB3aXRoaW4gZml2ZSAoNSkgQnVzaW5lc3MgRGF5cyBvZiB0aGUgb2NjdXJyZW5jZSBvZiBzdWNoIGV2ZW50LiBBIE1hdGVyaWFsIEFkdmVyc2UgQ2hhbmdlIG1heSBpbmNsdWRlIGFueSBjaGFuZ2UgaW4gYnVzaW5lc3MgY29uZGl0aW9ucyB3aGljaCB3b3VsZCBjYXVzZSAoaSkgYSBzdWJzdGFudGlhbCBkZXRlcmlvcmF0aW9uIG9mIGl0cyBmaQ0Kbg0KYW5jaWFsIGNvbmRpdGlvbnM7IChpaSkgYSBjb25kaXRpb24gb2YgaXRzIGluc29sdmVuY3k7IG9mIChpaWkpIHRoZSBpbmFiaWxpdHkgdG8gZXhpc3QgYXMgYW4gb25nb2luZyBidXNpbmVzcyBlbnRpdHkuIFN1Y2ggY29uZGl0aW9ucyB3b3VsZCBpbmNsdWRlIGFueSBjaGFwdGVyIG9mIHRoZSBiYW5rcnVwdGN5IGxhd3Mgb2YgdGhlIFUuUy4sIGxpcXVpZGF0aW9uIG9yIGRlYnQgcmVkdWN0aW9uIHByb2NlZHVyZXMgdW5kZXIgc3RhdGUgbGF3cywgDQphbmQgc2lnbmlmaWNhbnQgb3V0c3RhbmRpbmcgY29sbGVjdGlvbiBsYXdzdWl0cyBvciBqdWRnbWVudHMgdGhhdCB3b3VsZCBhZmZlY3QgdGhlIGJ1c2luZXNzIGVudGl0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IHMgYWJpbGl0eSB0byByZW1haW4gc29sdmVudC4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDQ5OTI4NDQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTkuNlx0YWJ9fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ0OTkyODQ0IEZpbmFuY2lhbCBBc3N1cmFuY2VzfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTkgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxOS42LjFcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHM5OVxxaiBcZmktNzIwXGxpMTQ0MFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMzlcaWx2bDJcb3V0bGluZWxldmVsMlxhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQ0OTkyODQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBLYXR5IHNoYWxsIG5vdCBiZSByZXF1aXJlZCB0byBwZXJmb3JtIG9yIHRvIGNvbnRpbnVlIFNlcnZpY2UgdW5kZXIgYW55IFRyYW5zYWN0aW9uIERvY3VtZW50IG9uIGJlaGFsZiBvZiBhbnkgQ3VzdG9tZXIgd2hpY2ggaXMgb3IgaGFzIGJlY29tZSBpbnNvbHZlbnQsIG9yIHdoaWNoLCBhdCBLYXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBzIHJlcXVlc3QsIGZhaWxzIHdpdGhpbiBhIHJlYXNvbmFibGUgdGltZSBwZXJpb2QgdG8gZGVtb25zdHJhdGUgQ3JlZGl0d29ydGhpbmVzcyBpbiBhY2NvcmRhbmNlIHdpdGggdGhpcyBTZWN0aW9uIDE5LjY7IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcHJvdmlkZWQsIGhvd2V2ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgOyB0aGF0IHN1Y2ggQ3VzdG9tZXIgbWF5IHJlY2VpdmUgU2VydmljZSB1bmRlciBhbnkgVHJhbnNhY3Rpb24gRG9jdW1lbnQgaWYgc3VjaCBQYXJ0eSBwcm92aWRlcyBGaW5hbmNpYWwgQXNzdXJhbmNlcyBhcyBmb2xsb3dzOg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMTAxIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGEpXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMTAxXHFqIFxmaS03MjBcbGkyMTYwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgyMTYwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOVxpbHZsM1xvdXRsaW5lbGV2ZWwzXGFkanVzdHJpZ2h0XHJpbjBcbGluMjE2MFxpdGFwMFxwYXJhcnNpZDQ5OTI4NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFdpdGhpbiBmaXZlICg1KSBkYXlzIG9mIEthdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCnMgd3JpdHRlbiByZXF1ZXN0IGZvciBGaW5hbmNpYWwgQXNzdXJhbmNlcywgYW4gYW1vdW50IGVxdWl2YWxlbnQgdG8gdGhyZWUgKDMpIE1vbnRoIChvciB0aGUgZHVyYXRpb24gb2YgdGhlIGFwcGxpY2FibGUgVHJhbnNhY3Rpb24sIHdoaWNoZXZlciBpcyBzaG9ydGVyKSBvZiBlc3RpbWF0ZWQgZmVlcyBhbmQgU2VydmljZSBjaGFyZ2VzOyBhbmQvb3INClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczEwMSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChiKVx0YWJ9DQpXaXRoaW4gdGhpcnR5ICgzMCkgZGF5cyBvZiBzdWNoIHJlcXVlc3QsIGFuIGFtb3VudCBlcXVhbCB0byAoMSkgaW4gdGhlIGNhc2Ugb2YgRmlybSBTdG9yYWdlIFNlcnZpY2UsIHRocmVlICgzKSBtb250aHMgKG9yIHRoZSBkdXJhdGlvbiBvZiB0aGUgYXBwbGljYWJsZSBUcmFuc2FjdGlvbiwgd2hpY2hldmVyIGlzIHNob3J0ZXIpIG9mIERlbWFuZCBDaGFyZ2UocykgYXQgdA0KaGUgcmF0ZSBzcGVjaWZpZWQgaW4gdGhlIGFwcGxpY2FibGUgVHJhbnNhY3Rpb247IG9yICgyKSBpbiB0aGUgY2FzZSBvZiBJbnRlcnJ1cHRpYmxlIFNlcnZpY2VzLCB0aHJlZSAoMykgTW9udGhzIChvciB0aGUgZHVyYXRpb24gb2YgdGhlIGFwcGxpY2FibGUgVHJhbnNhY3Rpb24sIHdoaWNoZXZlciBpcyBzaG9ydGVyKSBvZiB0aGUgSW52ZW50b3J5IENoYXJnZShzKSBjYWxjdWxhdGVkIG9uIGEgb25lIGh1bmRyZWQgcGVyY2VudCAoMTAwJSkgbG9hDQpkDQogZmFjdG9yIGJhc2lzLCBwbHVzIHRoZSBtYXJrZXQgdmFsdWUgKGF0IHRoZSB0aW1lIG9mIHRoZSByZXF1ZXN0IGZvciBzdWNoIEZpbmFuY2lhbCBBc3N1cmFuY2VzKSBvZiBhbnkgcXVhbnRpdGllcyBvZiBHYXMgbG9hbmVkIHVwIHRvIHRoZSBDdXN0b21lciBwdXJzdWFudCB0byB0aGUgcmVsZXZhbnQgQ29uZmlybWF0aW9uLiBSZWdhcmRpbmcgQ3VzdG9tZXJzIHdobyBoYXZlIHByZXZpb3VzbHkgcG9zdGVkIHNlY3VyaXR5IGZvciBHYXMgbG9hbmUNCmQgdG8gc3VjaCBDdXN0b21lciwgaWYgdGhlIG1hcmtldCB2YWx1ZSBvZiBzdWNoIEdhcyBpbmNyZWFzZXMgYnkgdGVuIHBlcmNlbnQgKDEwJSkgb3IgbW9yZSwgc3VjaCBDdXN0b21lciBzaGFsbCBkZWxpdmVyIGFkZGl0aW9uYWwgRmluYW5jaWFsIEFzc3VyYW5jZXMgdG8gY292ZXIgc3VjaCBpbmNyZWFzZSBpbiBtYXJrZXQgdmFsdWUgd2l0aGluIHR3byAoMikgQnVzaW5lc3MgRGF5cyBvZiBLYXR5fXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBzIHJlcXVlc3QgZm9yIHNhbWUuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE5LjYuMlx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczk5XHFqIFxmaS03MjBcbGkxNDQwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOVxpbHZsMlxvdXRsaW5lbGV2ZWwyXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDQ5OTI4NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IElmIEN1c3RvbWVyIGNob29zZXMgdG8gcHJvdmlkZSBGaW5hbmNpYWwgQXNzdXJhbmNlcyBpbiB0aGUgZm9ybSBvZiBjYXNoIChmb3IgcHVycG9zZXMgb2YgdGhpcyBTZWN0aW9uLCB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IENhc2ggQ29sbGF0ZXJhbH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQopIGluIHRoZSBhbW91bnQgc2V0IGZvcnRoIGFib3ZlLCBDdXN0b21lciBtYXkgZWFybiBpbnRlcmVzdCBvbiBzdWNoIENhc2ggQ29sbGF0ZXJhbCBieSAoaSkgZGVsaXZlcmluZyBDYXNoIENvbGxhdGVyYWwgdG8gYSBjdXN0b2RpYW4gaW4gdGhlIG4NCmFtZSBvZiB0aGUgQ3VzdG9tZXIgYW5kIHBsZWRnZWQgdG8gS2F0eSBwdXJzdWFudCB0byBjYXNoIGVzY3Jvdywgb3IgYWNjb3VudCBjb250cm9sIGFncmVlbWVudCB0aGF0IGlzIHJlYXNvbmFibHkgc2F0aXNmYWN0b3J5IHRvIEthdHk7IG9yIChpaSkgYnkgZGlyZWN0aW5nIEthdHkgdG8gaG9sZCBzdWNoIENhc2ggQ29sbGF0ZXJhbCwgaW4gd2hpY2ggY2FzZSwgS2F0eSBtdXN0IHBheSBDdXN0b21lciBpbnRlcmVzdCBvbiBzdWNoIENhc2ggQ29sbA0KYXRlcmFsIGNhbGN1bGF0ZWQgaW4gYWNjb3JkYW5jZSB3aXRoIFNlY3Rpb24gMTU0LjUwMShkKSBvZiB0aGUgQ29tbWlzc2lvbn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IHMgcmVndWxhdGlvbnMuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE5LjYuM1x0YWJ9DQpDYXNoIENvbGxhdGVyYWwgaXMgc2VjdXJpdHkgb25seSBhbmQgc2hhbGwgbm90IGJlIHRyZWF0ZWQgYXMgYSBwcmVwYXltZW50IG9mIGNvc3RzLCBmZWVzLCBvciBvdGhlciBvYmxpZ2F0aW9ucyB0aGF0IEN1c3RvbWVyIG1heSBvd2UgdG8gS2F0eS4gQ3VzdG9tZXIgaGVyZWJ5IGFja25vd2xlZGcNCmVzIGFuZCBhZ3JlZXMgdGhhdCBwYXltZW50IG9mIENhc2ggQ29sbGF0ZXJhbCBzaGFsbCBub3QgcmVsaWV2ZSBDdXN0b21lciBvZiBpdHMgZHV0eSB0byBwYXkgYWxsIGludm9pY2VzIGluIGZ1bGwgd2hlbiBkdWUuIFN1YmplY3QgdG8gS2F0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyByaWdodCwgaW4gaXRzIHJlYXNvbmFibGUgZGlzY3JldGlvbiwgdG8gYXBwbHkgdGhlIENhc2ggQ29sbGF0ZXJhbCBhZ2FpbnN0IGFueSBvdXRzdGFuZGluZyBjb3N0cywgZmVlcywgb3Igb3RoZXIgb2JsDQppZ2F0aW9ucyB0aGF0IEN1c3RvbWVyIG93ZXMgdG8gS2F0eSwgS2F0eSB3aWxsIHJldHVybiB0aGUgQ2FzaCBDb2xsYXRlcmFsIHRvIEN1c3RvbWVyIHdpdGhpbiB0aGlydHkgKDMwKSBkYXlzIGZvbGxvd2luZyB0aGUgY29tcGxldGlvbiBvciB0ZXJtaW5hdGlvbiBvZiB0aGUgcmVsZXZhbnQgVHJhbnNhY3Rpb24uDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ0OTkyODQ0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE5LjdcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHM5N1xxaiBcZmktNzIwXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHg3MjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczM5XGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQ0OTkyODQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNDk5Mjg0NCBMYWNrIG9mIENyZWRpdHdvcnRoaW5lc3N9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTkgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAxOS43LjFcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHM5OVxxaiBcZmktNzIwXGxpMTQ0MFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMzlcaWx2bDJcb3V0bGluZWxldmVsMlxhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQ0OTkyODQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBJZiBDdXN0b21lciBmYWlscyB0byBtYWludGFpbiBhbiBBY2NlcHRhYmxlIENyZWRpdCANClJhdGluZyBvciBGaW5hbmNpYWwgQXNzdXJhbmNlcyBpbiBhY2NvcmRhbmNlIHdpdGggU2VjdGlvbiAzLjIgYW5kIFNlY3Rpb24gMTkuNiBhbmQgc3VjaCBmYWlsdXJlIGlzIG5vdCBjdXJlZCB3aXRoaW4gZml2ZSAoNSkgQnVzaW5lc3MgRGF5cyBmb2xsb3dpbmcgd3JpdHRlbiBub3RpY2UsIHN1Y2ggZmFpbHVyZSBtYXkgYmUgdHJlYXRlZCBhcyBhbiBFdmVudCBvZiBEZWZhdWx0IHVuZGVyIFNlY3Rpb24gMjAuMiBhbmQgbWF5IHJlc3VsdCBpbiB0aA0KZSB0ZXJtaW5hdGlvbiBvZiBhbnkgYW5kIGFsbCBUcmFuc2FjdGlvbnMuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE5LjcuMlx0YWJ9DQpJZiBhdCBhbnkgdGltZSBLYXR5IHJlYXNvbmFibHkgZGV0ZXJtaW5lcyB0aGF0IEN1c3RvbWVyIGlzIG5vdCBDcmVkaXR3b3J0aHkgdW5kZXIgdGhpcyBTZWN0aW9uIDE5LjcsIEthdHkgc2hhbGwgbm90aWZ5IHN1Y2ggQ3VzdG9tZXIgaW4gd3JpdGluZyB2aWEgZS1tYWlsLCBpbnN0YW50IG1lc3NhZ2luZywgZmFjc2ltaWxlIG9yIHNvbWUgb3RoZXIgd2F5IGFncmVlZCB1cG9uDQogYnkgYm90aCBQYXJ0aWVzIHdpdGhpbiB0ZW4gKDEwKSBCdXNpbmVzcyBEYXlzIGZvbGxvd2luZyBpdHMgZGVjaXNpb24gYW5kIHRoZSByZWFzb25zIGZvciBzdWNoIGRldGVybWluYXRpb24uDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE5LjcuM1x0YWJ9DQpJZiBhIEN1c3RvbWVyIGRvZXMgbm90IG1lZXQgdGhlIGNyaXRlcmlhIGRlc2NyaWJlZCBpbiB0aGlzIFNlY3Rpb24gMTkuNywgdGhlbiB0aGUgQ3VzdG9tZXIgbWF5IHJlcXVlc3QgdGhhdCBLYXR5IGV2YWx1YXRlIGl0cyBDcmVkaXR3b3J0aGluZXNzIGJhc2VkIHVwb24gdGhlIGxldmVsIG9mIFNlcnZpY2UgcmVxdWVzdGVkIHJlbGF0aXZlIHRvIHRoZSBDdXN0b21lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyBjdXJyZW50IGFuZCBmdXR1cmUgYWJpbGl0eSB0byBtZWV0IGl0cyBvYmxpZ2F0aW9ucyBvciB0aGUgQ3VzdG9tZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IHMgQ3JlZGl0IFN1cHBvcnQgUHJvdmlkZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBzIGN1cnJlbnQgYW5kIGZ1dHVyZSBhYmlsaXR5IHRvIHNlY3VyZSB0aGUgQ3VzdG9tZXJ9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IHMgb2JsaWdhdGlvbnMuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDE5LjcuNFx0YWJ9QWZ0ZXIgS2F0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyByZWNlaXB0IG9mIEN1c3RvbWVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyByZXF1ZXN0IGZvciByZS1ldmFsdWF0aW9uLCB3aXRoaW4gZml2ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNDk5Mjg0NCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxNDk2MDIxMSAoNSkgQnVzaW5lc3MgRGF5cywgS2F0eSBzaGFsbCBwcm92aWRlIGEgd3JpdHRlbiByZXNwb25zZSB0byB0aGUgQ3VzdG9tZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxNDk2MDIxMSBzIHJlcXVlc3QuIFN1Y2ggd3JpdHRlbiByZXNwb25zZSBzaGFsbCBpbmNsdWRlIGVpdGhlciBhIGRldGVybWluYXRpb24gb2YgQ3JlZGl0d29ydGhpbmVzcyBzdGF0dXMsIGNsZWFybHkgc3RhdGluZyB0aGUgcmVhc29uKHMpIGZvciBLYXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkMTQ5NjAyMTEgcyANCmRlY2lzaW9uLCBvciBhbiBleHBsYW5hdGlvbiBzdXBwb3J0aW5nIGEgZnV0dXJlIGRhdGUgYnkgd2hpY2ggYSByZS0gZXZhbHVhdGlvbiB3aWxsIGJlIG1hZGUuIEluIG5vIGV2ZW50IHNoYWxsIHN1Y2ggcmUtZXZhbHVhdGlvbiBkZXRlcm1pbmF0aW9uIGV4Y2VlZCB0d2VudHkgKDIwKSBCdXNpbmVzcyBEYXlzIGZyb20gdGhlIGRhdGUgb2YgdGhlIHJlY2VpcHQgb2YgdGhlIEN1c3RvbWVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkMTQ5NjAyMTEgcyBSZXF1ZXN0IHVubGVzcyBzcGVjaWZpZWQgaW4gdGhlIFRyYW5zYWN0aW9uIERvY3VtZW50KHMpIG9yIGlmIHRoZSBQYXJ0aWVzIG11dHVhbGx5IGFncmVlIHRvIHNvbWUgbGF0ZXIgZGF0ZS4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMTkuOFx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczk3XHFqIFxmaS03MjBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDcyMFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMzlcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDQ5OTI4NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFJpZ2h0IG9mIFNldC1PZmZ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgLiBJZiBhIFBhcnR5IChmb3IgcHVycG9zZXMgb2YgdGhpcyBTZWN0aW9uIDE5LjgsIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgTm9uLVBlcmZvcm1pbmcgUGFydHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KKSBmYWlscyB0byBwYXkgaW4gZnVsbCBhbnkgYW1vdW50IG93aW5nIHRvIHRoZSBvdGhlciBQYXJ0eSAoZm9yIHB1cnBvc2VzIG9mIHRoaXMgU2VjdGlvbiAxOS44LCB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBOb24tUmVjZWl2aW5nIFBhcnR5fXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICkgdW5kZXIgYW55IFRyYW5zYWN0aW9uIHVuZGVyIHRoZSBNYXN0ZXIgU2VydmljZSBBZ3JlZW1lbnQgd2l0aGluIGZpdmUgKDUpIEJ1c2luZXNzIERheXMgYWZ0ZXIgc3VjaCBhbW91bnQgYmVjYW1lIGR1ZSwgdGhlbiwgaW4gYWRkaXRpb24NCiB0byBhbGwgb3RoZXIgcmVtZWRpZXMgYXZhaWxhYmxlIHRvIGl0IHVuZGVyIHRoaXMgT3BlcmF0aW5nIFN0YXRlbWVudCwgdGhlIE1hc3RlciBTZXJ2aWNlIEFncmVlbWVudCwgYXQgbGF3LCBpbiBlcXVpdHkgb3Igb3RoZXJ3aXNlLCB0aGUgTm9uLVJlY2VpdmluZyBQYXJ0eSBtYXkgc2V0IG9mZiB0aGUgb3ZlcmR1ZSBhbW91bnQgYWdhaW5zdCBhbW91bnRzIG90aGVyd2lzZSBvd2luZyBieSB0aGUgTm9uLVJlY2VpdmluZyBQYXJ0eSB0byB0aGUgRA0KZWxpbnF1ZW50IFBhcnR5IHVuZGVyIHRoZSBNYXN0ZXIgU2VydmljZSBBZ3JlZW1lbnQgb3IgYW55IG90aGVyIGFncmVlbWVudCBiZXR3ZWVuIHRoZSBQYXJ0aWVzLg0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2MzODg3ODA2M317XCpcYmtta3N0YXJ0IF9Ub2MzOTIzOTUzNn17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTUgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcYlxjYXBzXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDQ5OTI4NDQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMjAuMFx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzOTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDcyMFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMzlcb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ0OTkyODQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ0OTkyODQ0IFRFUk1JTkFUSU9OIEZPUiBERUZBVUxUe1wqXGJrbWtlbmQgX1RvYzM4ODc4MDYzfXtcKlxia21rZW5kIF9Ub2MzOTIzOTUzNn0NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMjAuMVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczk3XHFqIFxmaS03MjBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDcyMFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMzlcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDQ5OTI4NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IERlbGl2ZXJ5IGFuZCBSZWNlaXB0IERlZmF1bHRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IC4gRXhjZXB0IGFzIHNldCBmb3J0aCBpbiBTZWN0aW9uIDIwLjIgYmVsb3csIERlbGl2ZXJ5IERlZmF1bHRzIGFuZCBSZWNlaXB0IERlZmF1bHRzIGJ5IGVpdGhlciBQYXJ0eSBzaGFsbCBiZSANCmFkZHJlc3NlZCBpbiB0aGUgbWFubmVyIHNldCBmb3J0aCBpbiBTZWN0aW9uIDIwLjAgb2YgdGhpcyBPcGVyYXRpbmcgU3RhdGVtZW50Lg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAyMC4yXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgRXZlbnQgb2YgRGVmYXVsdH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IC4gVGhlIG9jY3VycmVuY2UgYXQgYW55IHRpbWUgd2l0aCByZXNwZWN0IHRvIGEgUGFydHkgb2YgYW55IG9mIHRoZSBmb2xsb3dpbmcgZXZlbnRzIHNoYWxsIGNvbnN0aXR1dGUgYW4gRXZlbnQgb2YgRGVmYXVsdCB3aXRoIHJlc3BlY3QgdG8gdGhlIFBhcnR5IG9yIGl0cyBDcmVkaXQgU3VwcG9ydCBQcm92aWRlciwgc3VjaCBQYXJ0eToNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMjAuMi4xXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzOTlccWogXGZpLTcyMFxsaTE0NDBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczM5XGlsdmwyXG91dGxpbmVsZXZlbDJcYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkNDk5Mjg0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpmaWxlcywgb3IgaGFzIGZpbGVkIGFnYWluc3QgaXQsIGEgcGV0aXRpb24gZm9yIGJhbmtydXB0Y3kgb3IgaW5zb2x2ZW5jeSBvciBmb3IgcmVvcmdhbml6YXRpb24gb3IgYXJyYW5nZW1lbnQgdW5kZXIgYmFua3J1cHRjeSBsYXdzIG9mIHRoZSBVbml0ZWQgU3RhdGVzIG9yIHVuZGVyIGFueSBpbnNvbHZlbmN5IGFjdCBvZiBhbnkgc3RhdGUsIG9yIGEgUGFydHkgdm9sdW50YXJpbHkgdGFrZXMgYWR2DQphbnRhZ2Ugb2YgYW55IHN1Y2ggbGF3IG9yIGFjdCBieSBhbnN3ZXIgb3Igb3RoZXJ3aXNlOw0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTkgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAyMC4yLjJcdGFifWJlY29tZXMgaW5zb2x2ZW50IChob3dldmVyIGV2aWRlbmNlZCkgb3IgaXMgdW5hYmxlIHRvIHBheSBpdHMgZGVidHMgYXMgdGhleSBiZWNvbWUgZHVlOw0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTkgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAyMC4yLjNcdGFifW1ha2VzIGEgZ2VuZXJhbCBhc3NpZ25tZW50IGZvciB0aGUgYmVuZWZpdCBvZiBpdHMgY3JlZGl0b3JzOw0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTkgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAyMC4yLjRcdGFifXNlZWtzIG9yIGJlY29tZXMgc3ViamVjdCB0byB0aGUgYXBwb2ludG1lbnQgb2YgYW4gYWRtDQppbmlzdHJhdG9yLCBjb25zZXJ2YXRvciwgcmVjZWl2ZXIsIHRydXN0ZWUsIGN1c3RvZGlhbiwgb3Igb3RoZXIgc2ltaWxhciBvZmZpY2lhbCBmb3IgaXQgb3IgZm9yIHN1YnN0YW50aWFsbHkgYWxsIG9mIGl0cyBhc3NldHM7DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDIwLjIuNVx0YWJ9DQpjYXVzZXMgb3IgaXMgc3ViamVjdCB0byBhbnkgZXZlbnQgd2l0aCByZXNwZWN0IHRvIGl0IHdoaWNoLCB1bmRlciB0aGUgYXBwbGljYWJsZSBsYXdzIG9mIGFueSBqdXJpc2RpY3Rpb24sIGhhcyBhbiBhbmFsb2dvdXMgZWZmZWN0IHRvIGFueSBvZiB0aGUgZXZlbnRzIHNwZWNpZmllZCBpbiBjbGF1c2VzIChhKSB0byAoZCkgYWJvdmU7DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDIwLjIuNlx0YWJ9Y29tbWl0cyBhY3R1YWwgZnJhdWQgb3Igd2lsbGZ1bCBtaXNjb25kdWN0IGluIGNvbm5lY3Rpb24gd2l0aCBhIE1hc3RlciBTZXJ2aWNlIEFncmVlbWVudDsNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMjAuMi43XHRhYn1mYWlscyB0byBtYWtlIGFueSBwYXltZW50IHdoZW4gZHVlIHVuZGVyIGEgTWFzdGVyIFNlcnZpY2UgQWdyZWVtZW50IHdoZXJlIHN1Y2ggZmFpbHVyZSBpcyBub3QgY3VyZWQgd2l0DQpoaW4gdHdvICgyKSBCdXNpbmVzcyBEYXlzIGFmdGVyIHdyaXR0ZW4gbm90aWNlIGJ5IEthdHk7DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDIwLjIuOFx0YWJ9DQpmYWlscyB0byBwZXJmb3JtIGFueSBtYXRlcmlhbCBjb3ZlbmFudCBvciBvYmxpZ2F0aW9uIGltcG9zZWQgdXBvbiBpdCB1bmRlciBhIFRyYW5zYWN0aW9uIERvY3VtZW50IChvciBpbiB0aGUgY2FzZSBvZiBEZWxpdmVyeSBEZWZhdWx0cyBvciBSZWNlaXB0IERlZmF1bHRzLCB0aGUgRGVmYXVsdGluZyBQYXJ0eSBjb21taXRzIHNldmVyYWwgc3VjaCBkZQ0KZmF1bHRzIG9mIGEgcmVwZXRpdGl2ZSwgY29uc2lzdGVudCBhbmQgb24tZ29pbmcgYmFzaXMsIGFuZCwgYXMgYSByZXN1bHQgb2Ygc3VjaCBkZWZhdWx0cywgdGhlIG90aGVyIFBhcnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpzIGJlbmVmaXQgb2YgdGhlIGJhcmdhaW4gdW5kZXIgYSBUcmFuc2FjdGlvbiBpcyBtYXRlcmlhbGx5IGRpbWluaXNoZWQgaW4gdGhlIE5vbi1EZWZhdWx0aW5nIFBhcnR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyByZWFzb25hYmxlIGp1ZGdtZW50KTsNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMjAuMi45XHRhYn1mYWlscyB0byBtYWludGFpbiBhbiBBY2NlcHRhDQpibGUgQ3JlZGl0IFJhdGluZyBvciBGaW5hbmNpYWwgQXNzdXJhbmNlcyBpbiBhY2NvcmRhbmNlIHdpdGggU2VjdGlvbiAzLjIgYW5kIFNlY3Rpb24gMTkuNiBhbmQgc3VjaCBmYWlsdXJlIGlzIG5vdCBjdXJlZCB3aXRoaW4gZml2ZSAoNSkgZGF5cyBhZnRlciB3cml0dGVuIG5vdGljZSBieSB0aGUgb3RoZXIgUGFydHkgb3INClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMjAuMi4xMFx0YWJ9aW4gcmVzcGVjdCBvZiB0aGUgUGFydHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IHMgQ3JlZGl0IFN1cHBvcnQgUHJvdmlkZXIsIHN1Y2ggQ3JlZGl0IFN1cHBvcnQgUHJvdmlkZXIgZmFpbHMgdG8gcGVyZm9ybSBhbnkgbWF0ZXJpYWwgY292ZW5hbnQgb3Igb2JsaWdhdGlvbiBpbXBvc2VkIHVwb24gYW55IGNyZWRpdCBzdXBwb3J0IGFncmVlbWVudCBwcm92aWRlZCBwdXJzdWFudCB0byBhIFRyYW5zYWN0aW9uLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAyMC4zXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzOTdccWogXGZpLTcyMFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4NzIwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkNDk5Mjg0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgRGVmYXVsdCBBY3Rpb25zfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IC4gTm90d2l0aHN0YW5kaW5nLCBhbmQgaW4gYWRkaXRpb24gdG8gYnV0IG5vdCBpbiBsaW1pdGF0aW9uIG9mLCBhbnkgb3RoZXIgcHJvdmlzaW9uIGluIGFueSBUcmFuc2FjdGlvbg0KIERvY3VtZW50LCBpZiBhdCBhbnkgdGltZSBhbiBFdmVudCBvZiBEZWZhdWx0IGhhcyBvY2N1cnJlZCBhbmQgaXMgY29udGludWluZyBLYXR5IHNoYWxsIGhhdmUgdGhlIHJpZ2h0IHRvIHRha2UgYW55IG9uZSBvciBtb3JlIG9mIHRoZSBmb2xsb3dpbmcgYWN0aW9uczoNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMjAuMy4xXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzOTlccWogXGZpLTcyMFxsaTE0NDBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczM5XGlsdmwyXG91dGxpbmVsZXZlbDJcYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkNDk5Mjg0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcmVmdXNlIHRvIGFjY2VwdCBhbnkgZnVydGhlciBEZWxpdmVyaWVzIG9mIEdhcyBmcm9tIEN1c3RvbWVyIG9yIG1ha2UgYW55IERlbGl2ZXJpZXMgdG8gQ3VzdG9tZXIgYW5kL29yIG90aGVyd2lzZSBzdXNwZW5kIGFsbCBTZXJ2aWNlcyB1bmRlciB0aGUgTWFzdGVyIFNlcnZpY2UgQWdyZWVtZW50Ow0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTkgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAyMC4zLjJcdGFifQ0KYnkgd3JpdHRlbiBub3RpY2UgdG8gQ3VzdG9tZXIsIGRlc2lnbmF0ZSBhIEdhcyBEYXkgbm90IGVhcmxpZXIgdGhhbiB0aGUgR2FzIERheSBzdWNoIG5vdGljZSBpcyBlZmZlY3RpdmUgYW5kIG5vdCBsYXRlciB0aGFuIHRoaXJ0eSAoMzApIEdhcyBEYXlzIHRoZXJlYWZ0ZXIsIGFzIHRoZSBFYXJseSBUZXJtaW5hdGlvbiBEYXRlIGluDQogcmVzcGVjdCBvZiBhbGwgVHJhbnNhY3Rpb25zLCB0aGVuIG91dHN0YW5kaW5nLCBpbiB3aGljaCBldmVudCB0aGUgcHJvdmlzaW9ucyBvZiBTZWN0aW9uIDIwLjMgc2hhbGwgYXBwbHkgYW5kIEN1c3RvbWVyLCBieSBpdHMgZmFpbHVyZSB0byByZW1lZHkgdGhlIEV2ZW50IG9mIERlZmF1bHQsIHNoYWxsIGJlIGRlZW1lZCB0byBoYXZlIGNvbnNlbnRlZCB0byBzdWNoIHRlcm1pbmF0aW9uIG9mIFNlcnZpY2U7DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDIwLjMuM1x0YWJ9ZHJhdyBvbiwgYXBwbHkgb3Igb3RoZXINCndpc2UgZXhlcmNpc2UgaXRzIHJpZ2h0cyBvZiByZWFsaXphdGlvbiBhbmQgZW5mb3JjZW1lbnQgaW4gcmVzcGVjdCBvZiBhbnkgRmluYW5jaWFsIEFzc3VyYW5jZXMgcHJvdmlkZWQgYnkgQ3VzdG9tZXIgcHVyc3VhbnQgdG8gU2VjdGlvbiAxOS42Ow0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTkgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAyMC4zLjRcdGFifWV4ZXJjaXNlIGl0cyByaWdodHMgdW5kZXIgYW55IGxpZW4gaGVsZCBieSBLYXR5ICh3aGV0aGVyIHVuZGVyIFRleC4gQnVzLiAmIENvbS4gQ29kZSBBbm4uIFwnYTc3LjIwOSwgfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGlcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBldC4gc2VxfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IC4sIG9yIG90aGVyd2lzZSBieSBsYXcpIG9uIEdhcyBzdG9yZWQgaW4gdGhlIEthdHkgU3RvcmFnZSBGYWNpbGl0eSBmb3IgQ3VzdG9tZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IHMgYWNjb3VudCBhbmQgYXBwbHkgdGhlIHByb2NlZWRzIG9mIHRoZSBwcml2YXRlIHNhbGUgb2Ygc3VjaCBHYXMgdG8gc2F0aXNmeSBhbnkgYW1vdW50cyBvd2luZyBieSBDdXN0b21lciB0byBLYXR5IHVuZGVyIHRoZSBNYXN0ZXIgU2VydmljZSBBZ3JlZW1lbnQ7DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDIwLjMuNVx0YWJ9ZXhlcmNpc2UgYW55IGFuZCBhbGwgcmlnaHRzIGFuZCByZW1lZGllcyBpbiByZXNwZWN0IG9mIGFueSBzZWN1cml0eSBpbnRlcmVzdCBncmFudGVkIGJ5IEN1c3RvbWVyIHRvIEthdHk7DQoNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMjAuMy42XHRhYn0NCnNldC1vZmYgYWdhaW5zdCBhbnkgYW1vdW50IG93aW5nIGJ5IEN1c3RvbWVyIHRvIEthdHkgYW55IGFtb3VudCBvd2VkIGJ5IEthdHkgdG8gdGhlIEN1c3RvbWVyIHVuZGVyIHRoZSBNYXN0ZXIgU2VydmljZSBBZ3JlZW1lbnQgb3IgdW5kZXIgYW55IG90aGVyIGFncmVlbWVudDsgYW5kDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDIwLjMuN1x0YWJ9ZXhlcmNpc2UgYW55IG90aGVyIHINCmVtZWRpZXMgYXZhaWxhYmxlIHRvIEthdHkgdW5kZXIgdGhlIE9wZXJhdGluZyBTdGF0ZW1lbnQsIHRoZSBNYXN0ZXIgU2VydmljZSBBZ3JlZW1lbnQsIGF0IGxhdywgaW4gZXF1aXR5IG9yIG90aGVyd2lzZS4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMjAuNFx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczk3XHFqIFxmaS03MjBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDcyMFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMzlcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDQ5OTI4NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFRlcm1pbmF0aW9uIG9mIFNlcnZpY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgLiBJZiBhdCBhbnkgdGltZSBhbiBFdmVudCBvZiBEZWZhdWx0IHdpdGggcmVzcGVjdCB0byBhIFBhcnR5ICh0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IERlZmF1bHRpbmcgUGFydHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICkgaGFzIG9jY3VycmVkIGFuZCBpcyBjb250aW51aW5nLCB0aGUgb3RoZXIgUGFydHkgKHRoZSB9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgTm9uLURlZmF1bHRpbmcgUGFydHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KKSBtYXksIGF0IGl0cyBvcHRpb24sIHRlcm1pbmF0ZSBhbnkgb3IgYWxsIFRyYW5zYWN0aW9ucyBieSBwcm9jZWVkaW5nIGFzIGZvbGxvd3M6DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDIwLjQuMVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczk5XHFqIFxmaS03MjBcbGkxNDQwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOVxpbHZsMlxvdXRsaW5lbGV2ZWwyXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDQ5OTI4NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IHRoZSBOb24tRGVmYXVsdGluZyBQYXJ0eSBzaGFsbCBwcm92aWRlIHdyaXR0ZW4gTm90aWNlIG9mIERlZmF1bHQgKGJ5IGUtbWFpbCBhbmQvb3IgZmFjc2ltaWxlLCBwcm9tcHRseSBmb2xsb3dlZCBieSBjb3VyaWVyIG9yIG92DQplcm5pZ2h0IG1haWwpIHRvIHRoZSBEZWZhdWx0aW5nIFBhcnR5LiBUaGUgTm90aWNlIG9mIERlZmF1bHQgc2hhbGwgc3BlY2lmaWNhbGx5IGlkZW50aWZ5IHRoZSBFdmVudCBvZiBEZWZhdWx0IGFuZCBzaGFsbCBwcm92aWRlIG5vdGljZSBvZiB0aGUgTm9uLURlZmF1bHRpbmcgUGFydHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IHMgaW50ZW50IHRvIHRlcm1pbmF0ZSB0aGUgc2FtZSBvbiBhIGRlc2lnbmF0ZWQgZGF0ZSBub3QgZWFybGllciB0aGFuIHRoaXJ0eSAoMzApIEdhcyBEYXlzIHRoZXJlYWZ0ZXIgKGZvciBwdXJwb3NlcyBvZiB0aGlzIFNlY3Rpb24sIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgRWFybHkgVGVybWluYXRpb24gRGF0ZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQopOyB0aGVyZXVwb24gdGhlIERlZmF1bHRpbmcgUGFydHkgc2hhbGwgaGF2ZSBmaXZlICg1KSBHYXMgRGF5cyB0byBwcm92aWRlIGFkdmFuY2UgcGF5bWVudCBmb3IgdHdvICgyKSBtb250aHMgb2YgU2VydmljZSAob3IgdGhlIGR1cmF0aW9uIG9mIHRoZSBNYXN0ZXIgU2VydmljZSBBZ3JlZW1lbnQgYW5kIGFwcGxpY2FibGUgQ29uZmkNCnJtYXRpb24gd2hpY2hldmVyIGlzIHNob3J0ZXIpLiBUaGUgRGVmYXVsdGluZyBQYXJ0eSB3aWxsIHRoZW4gaGF2ZSB0aGlydHkgKDMwKSBHYXMgRGF5cyBhZnRlciByZWNlaXB0IG9mIHN1Y2ggbm90aWNlIHRvIHJlbWVkeSBvciByZW1vdmUgdGhlIGNhdXNlIG9yIGNhdXNlcyBzdGF0ZWQgaW4gdGhlIG5vdGljZS4gSWYgd2l0aGluIHRoZSB0aGlydHktZGF5ICgzMCkgcGVyaW9kIHRoZSBEZWZhdWx0aW5nIFBhcnR5IGRvZXMgc28gcmVtb3ZlIGFuZA0KIA0KcmVtZWR5IHNhaWQgY2F1c2Ugb3IgY2F1c2VzIG9mIHN1Y2ggRXZlbnQgb2YgRGVmYXVsdCwgYnkgZ29vZCBhbmQgc3VmZmljaWVudCBtZWFucyBhY2NlcHRhYmxlIHRvIHRoZSBOb24tRGVmYXVsdGluZyBQYXJ0eSwgb24gb3IgYmVmb3JlIHRoZSBFYXJseSBUZXJtaW5hdGlvbiBEYXRlLCB0aGVuIHN1Y2ggbm90aWNlIHNoYWxsIGJlIHdpdGhkcmF3biBhbmQgdGhlIFRyYW5zYWN0aW9uIHNoYWxsIGNvbnRpbnVlIGluIGZ1bGwgZm9yY2UgYW5kIGVmDQpmZWN0Ow0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTkgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAyMC40LjJcdGFifQ0KSWYgdGhlIERlZmF1bHRpbmcgUGFydHkgZG9lcyBub3QgcmVtZWR5IGFuZCByZW1vdmUgdGhlIGNhdXNlIG9yIGNhdXNlcyBvZiBzdWNoIEV2ZW50IG9mIERlZmF1bHQgd2l0aGluIHRoZSB0aGlydHktZGF5ICgzMCkgcGVyaW9kLCB0aGVuLCBhZnRlciBhbnkgbmVjZXNzYXJ5IG5vdGljZSB0byByZWd1bGF0b3J5IGJvZGllcyBoYXZpbmcganVyaXNkaWN0aW9uICh3aGljaCBub3RpY2UgbWF5IGJlIGdpdmVuIGF0IHRoZSBzYW1lIHRpbWUgYXMNCiB0aGUgdGVybWluYXRpb24gbm90aWNlIHRvIERlZmF1bHRpbmcgUGFydHkpLCB0aGUgQ29uZmlybWF0aW9uKHMpIGFuZCBUcmFuc2FjdGlvbihzKSBzaGFsbCBiZSB0ZXJtaW5hdGVkIGFzIG9mIHRoZSBFYXJseSBUZXJtaW5hdGlvbiBEYXRlLCBwcm92aWRlZCB0aGF0IG5vdGljZSBvZiB0ZXJtaW5hdGlvbiBoYXMgbm90IGJlZW4gd2l0aGRyYXduIHByaW9yIHRoZXJldG8sIHdpdGggc3VjaCB0ZXJtaW5hdGlvbiBiZWluZyBlZmZlY3R1YXRlZCBwdQ0KcnN1YW50IHRvIHRoZSBmdXJ0aGVyIHRlcm1zIGFzIHByb3ZpZGVkIGhlcmVpbjsNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMjAuNC4zXHRhYn1JZiB0ZXJtaW5hdGlvbiBvY2N1cnMgcHVyc3VhbnQgdG8gU2VjdGlvbiAyMC40fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDczNTY5NCAuMn17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBhYm92ZSwgYW55IG9yIGFsbCBDb25maXJtYXRpb24ocykgYW5kIFRyYW5zYWN0aW9uKHMpIGJldHdlZW4gQ3VzdG9tZXIgYW5kIEthdHkgdGhlbiBvdXRzdGFuZGluZyBtYXkgYmUgc3ViamVjdCB0byB0ZXJtaW5hdGlvbiBhcyBvZiB0aGUgRWFybHkgVGVybWluYXRpb24gRGF0ZSBpDQpuIGFjY29yZGFuY2Ugd2l0aCB0aGUgZnVydGhlciBwcm92aXNpb25zIG9mIHRoaXMgU2VjdGlvbiAyMC59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NzM1Njk0IDR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQo7IGFuZCBhbnkgdGVybWluYXRpb24gb2Ygc3VjaCBDb25maXJtYXRpb24ocykgYW5kIFRyYW5zYWN0aW9uKHMpIHB1cnN1YW50IHRvIHRoZSBwcm92aXNpb25zIG9mIHRoaXMgU2VjdGlvbiBzaGFsbCBiZSB3aXRob3V0IHByZWp1ZGljZSB0byB0aGUgcmlnaHQgb2YgS2F0eSB0byBjb2xsZWN0IGFueSBhbW91bnRzIHRoZW4gZHVlIHRvIGl0IGYNCm9yIFNlcnZpY2VzIHJlbmRlcmVkIHByaW9yIHRvIHRoZSB0aW1lIG9mIHRlcm1pbmF0aW9uLCBhbmQgd2l0aG91dCB3YWl2ZXIgb2YgYW55IHJlbWVkeSwgYXQgbGF3IG9yIGluIGVxdWl0eSwgdG8gd2hpY2ggdGhlIE5vbi1EZWZhdWx0aW5nIFBhcnR5IG1heSBiZSBvdGhlcndpc2UgZW50aXRsZWQsIGluY2x1ZGluZywgd2l0aG91dCBsaW1pdGF0aW9uLCB0aGUgcmlnaHQgdG8gb2ZmLXNldCBhbnkgYW1vdW50IG93aW5nIGJ5IHRoZSBEZWZhdWx0aQ0KbmcgUGFydHkgdG8gdGhlIE5vbi1EZWZhdWx0aW5nIFBhcnR5IHVuZGVyIHRoZSBUcmFuc2FjdGlvbiBEb2N1bWVudChzKSBhZ2FpbnN0IGFueSBhbW91bnQgb3dpbmcgYnkgdGhlIE5vbi1EZWZhdWx0aW5nIFBhcnR5IHRvIHRoZSBEZWZhdWx0aW5nIFBhcnR5IHVuZGVyIHRoZSBUcmFuc2FjdGlvbiBEb2N1bWVudChzKSBvciB1bmRlciBhbnkgb3RoZXIgYWdyZWVtZW50Lg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAyMC41XHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzOTdccWogXGZpLTcyMFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4NzIwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkNDk5Mjg0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgU3VzcGVuc2lvbiBvZiBTZXJ2aWNlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IC4gTm90d2l0aHN0YW5kaW5nLCBpbiBhZA0KZGl0aW9uIHRvIGJ1dCBub3QgaW4gbGltaXRhdGlvbiBvZiBhbnkgb3RoZXIgcHJvdmlzaW9uIGluIHRoaXMgT3BlcmF0aW5nIFN0YXRlbWVudCBvciBUcmFuc2FjdGlvbiBEb2N1bWVudChzKSBwcmlvciB0byBhIHRlcm1pbmF0aW9uIGZvciBhbiBFdmVudCBvZiBEZWZhdWx0LCB1cG9uIHdyaXR0ZW4gbm90aWNlIGRldGFpbGluZyBLYXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBzIHJlYXNvbnMgZm9yIHN1c3BlbnNpb24sIEthdHkgbWF5IHN1c3BlbmQgU2VydmljZSB0byBhbnkgQ3VzdG9tZXIgd2hvIGZhaWxzIHRvIGNvbXBseSB3aXRoIHRoZSB0ZXJtcyBvZiBhIE1hc3RlciBTZXJ2aWNlIEFncmVlbWVudC4gS2F0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgDQp9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyBmYWlsdXJlIHRvIGludm9rZSBpdHMgcmlnaHRzIHRvIHN1c3BlbmQgb3IgdGVybWluYXRlIFNlcnZpY2UgYXQgYW55IHRpbWUgc2hhbGwgYmUgY29uc3RydWVkIGFzIGEgd2FpdmVyIG9mIEthdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IHMgcmlnaHQgdG8gc3VzcGVuZCBvciB0ZXJtaW5hdGUgU2VydmljZSBhdCBhbnkgb3RoZXIgdGltZSBDdXN0b21lciANCmlzIGluIGJyZWFjaCBvZiB0aGUgdGVybXMgb2YgdGhlIFRyYW5zYWN0aW9uIERvY3VtZW50KHMpLiBEdXJpbmcgYW55IHBlcmlvZCBvZiBzdXNwZW5zaW9uIGFuZCBmb2xsb3dpbmcgYW55IHRlcm1pbmF0aW9uIG9mIFNlcnZpY2UsIEthdHkgc2hhbGwgbm90IGNoYXJnZSBhbnkgRGVtYW5kIENoYXJnZS4gQXQgS2F0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyBvcHRpb24sIGEgdGVybWluYXRpb24gbm90aWNlIGdpdmVuIHB1cnN1YW50IHRvIFNlY3Rpb24gMjAuNCBhYm92ZSBtYXkgYWxzbyBzZXJ2ZSBhcyBhIG5vdGljZSBvZiBpbW1lZGlhdGUgc3VzcGVuc2lvbiB1bmRlciB0aGlzIFNlY3Rpb24uDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDIwLjZcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBFYXJseSBUZXJtaW5hdGlvbn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IC4gSW4gdGhlIGV2ZW50IEthdHkgZWxlY3RzIHRvIHRlcm1pbmF0ZSBDdXN0b21lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KcyBDb25maXJtYXRpb25zIGFuZCBUcmFuc2FjdGlvbnMgcHVyc3VhbnQgdG8gU2VjdGlvbiAyMC4zIGFib3ZlLCBhbmQgaWYgdGhlIEN1c3RvbWVyIGlzIHRoZSBEZWZhdWx0aW5nIFBhcnR5LCBhbGwgb2YgQ3VzdG9tZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCnMgU2VydmljZSByaWdodHMgbWF5IGJlIHRlcm1pbmF0ZWQgaW1tZWRpYXRlbHkgb3Igb24gc3VjaCBkYXRlIGFzIEthdHkgc2hhbGwgZGV0ZXJtaW5lIGluIGl0cyByZWFzb25hYmxlIGRpc2NyZXRpb24gYW5kIGFueSBwYXltZW50IG9ibGlnYXRpb25zIHJlbGF0aW5nIHRvIHRoZSBwcm92aXNpb24gb2YgU2VydmljZXMgbm90IHJlbmRlcmVkIGFmdGVyIHRoZSBFYXJseSBUZXJtaW5hdGlvbiBEYXRlIHdpbGwgbGlrZXdpc2UgYmUgdGVybWluYXRlZA0KOyB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGlcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBwcm92aWRlZCwgaG93ZXZlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCiwgdGhhdCBhIEZpcm0gU3RvcmFnZSBTZXJ2aWNlIEN1c3RvbWVyIHNoYWxsIHJlbWFpbiBsaWFibGUgZm9yIGFsbCBEZW1hbmQgQ2hhcmdlcywgd2hldGhlciBhY2NydWluZyBiZWZvcmUgb3IgdG8gYmUgYWNjcnVlZCBhZnRlciB0aGUgRWFybHkgVGVybWluYXRpb24gRGF0ZS4gSWYgS2F0eSBpcyB0aGUgTm9uLURlZmF1bHRpbmcgUGFydHksIGl0IHdpbGwgaGF2ZSB0aGUgcmlnaHQgdG8gc2VsbCBhbnkgdGVybWluYXQNCmVkIEZpcm0gU3RvcmFnZSBTZXJ2aWNlIHRvIGEgdGhpcmQgcGFydHkgYXMgb2YgdGhlIEVhcmx5IFRlcm1pbmF0aW9uIERhdGUuIElmIHBvc3NpYmxlLCBLYXR5IHNoYWxsIGF0dGVtcHQgdG8gbGVzc2VuIHRoZSB0ZXJtaW5hdGVkIEN1c3RvbWVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBzIERlbWFuZCBDaGFyZ2VzIGJ5IHVzaW5nIGNvbW1lcmNpYWxseSByZWFzb25hYmxlIGVmZm9ydHMgdG8gZW50ZXIgaW50byBhIHJlcGxhY2VtZW50IFRyYW5zYWN0aW9uIGZvciBGaXJtIFN0b3JhZ2UgU2VydmljZSB3aXRoIGEgdGhpcmQgcGFydHk7IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaVxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KcHJvdmlkZWQsIGhvd2V2ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQosIGFuZCBub3R3aXRoc3RhbmRpbmcgYW55dGhpbmcgaW4gYW55IFRyYW5zYWN0aW9uIERvY3VtZW50IHRvIHRoZSBjb250cmFyeSBpZiBLYXR5IGlzIHVuYWJsZSB0byBlbnRlciBpbnRvIGEgdGhpcmQtcGFydHkgcmVwbGFjZW1lbnQgVHJhbnNhY3Rpb24gb24gdGVybXMgc2F0aXNmYWN0b3J5IHRvIEthdHkgaW4gaXRzIHJlYXNvbmFibGUgZGlzY3JldGlvbiwgS2F0eSBzDQpoYWxsIGJlIGVudGl0bGVkIHRvIGFjY2VsZXJhdGUgYWxsIEZpcm0gU3RvcmFnZSBTZXJ2aWNlIERlbWFuZCBDaGFyZ2VzIHdoaWNoIGFyZSBzY2hlZHVsZWQgdG8gYmVjb21lIGR1ZSBhZnRlciB0aGUgRWFybHkgVGVybWluYXRpb24gRGF0ZSBhbmQgc3VjaCBEZW1hbmQgQ2hhcmdlcyBiZWNvbWUgc28gYWNjZWxlcmF0ZWQgc2hhbGwgYmVjb21lIGR1ZSBhbmQgcGF5YWJsZSBpbW1lZGlhdGVseSB1cG9uIEthdHl9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IHMgbm90aWNlIG9mIHN1Y2ggYWNjZQ0KbGVyYXRpb24gdG8gQ3VzdG9tZXIuIFdpdGggcmVnYXJkIHRvIG9ibGlnYXRpb25zIGFjY3J1aW5nIGJlZm9yZSB0aGUgRWFybHkgVGVybWluYXRpb24gRGF0ZSwgQ3VzdG9tZXIgd2lsbCByZW1haW4gbGlhYmxlIGZvciBhbGwgb2JsaWdhdGlvbnMgYWNjcnVpbmcgdW5kZXIgZWFjaCB0ZXJtaW5hdGVkIFRyYW5zYWN0aW9uIHVwIHRvIGFuZCBpbmNsdWRpbmcgdGhlIEVhcmx5IFRlcm1pbmF0aW9uIERhdGUsIGluY2x1ZGluZyBidXQgbm90IGxpbWl0DQplDQpkIHRvLCBhbGwgdW5iaWxsZWQgKG9yIGJpbGxlZCBidXQgdW5wYWlkKSBEZW1hbmQgQ2hhcmdlcywgQ29tbW9kaXR5IENoYXJnZXMsIEZ1ZWwsIEV4Y2VzcyBOb21pbmF0aW9uIENoYXJnZXMsIE92ZXJydW4gQ2hhcmdlcyBhbmQgYWxsIGFwcGxpY2FibGUgdGF4ZXMgZm9yIGFsbCBTZXJ2aWNlcyByZW5kZXJlZCB1cCB0byBhbmQgb24gdGhlIEVhcmx5IFRlcm1pbmF0aW9uIERhdGUuIFRlcm1pbmF0aW9uIG9mIENvbmZpcm1hdGlvbnMgYW5kIHRoZSANClRyYW5zYWN0aW9uIHRoZXJldW5kZXIgc2hhbGwgYmUgZWZmZWN0ZWQgYXMgZm9sbG93czoNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMjAuNi4xXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzOTlccWogXGZpLTcyMFxsaTE0NDBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczM5XGlsdmwyXG91dGxpbmVsZXZlbDJcYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkNDk5Mjg0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgVGhlIHRlcm1pbmF0aW9uIHdpbGwgb2NjdXIgb24gdGhlIEVhcmx5IFRlcm1pbmF0aW9uIERhdGUuIEFsbCBUcmFuc2FjdGlvbnMgdGhlbiBvdXRzdGFuZGluZyB3aWxsIGJlIHRlcm1pbmF0ZWQgYXMgb2YgdGhlIEVhcmx5IFRlcm1pbmF0aW9uIERhdGUgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZXNlIHRlcm1pbmF0aW9uIHByb3Zpc2lvbnMgYW5kLCBubyANCmZ1cnRoZXIgaW5qZWN0aW9ucyBvciB3aXRoZHJhd2FscyBvZiBHYXMgc2hhbGwgdGhlcmVhZnRlciBiZSBtYWRlIHVuZGVyIHN1Y2ggdGVybWluYXRlZCBUcmFuc2FjdGlvbnMuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDIwLjYuMlx0YWJ9V2l0aCByZWdhcmQgdG8gQ3VzdG9tZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IHMgTmV0IFRlcm1pbmF0aW9uIEJhbGFuY2UgaW4gdGhlIEthdHkgU3RvcmFnZSBGYWNpbGl0eSBvbiB0aGUgRWFybHkgVGVybWluYXRpb24gRGF0ZSAod2l0aCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KTmV0IFRlcm1pbmF0aW9uIEJhbGFuY2V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICkgZGVmaW5lZCBhcyBDdXN0b21lciBHcm9zcyBJbnZlbnRvcnkgbGVzcyBhbnkgTG9hbmVkIFF1YW50aXRpZXMgdGhlbiBvdXQgb24gbG9hbiB0byBDdXN0b21lcik6DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMxMDEgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoYSlcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHMxMDFccWogXGZpLTcyMFxsaTIxNjBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDIxNjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczM5XGlsdmwzXG91dGxpbmVsZXZlbDNcYWRqdXN0cmlnaHRccmluMFxsaW4yMTYwXGl0YXAwXHBhcmFyc2lkNDk5Mjg0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgQ3VzdG9tZXIgc2hhbGwgbm90IGhhdmUgYW55IE5vbWluYXRpb24gcmlnaHRzIGZvciB0aGUgd2l0aGRyYXdhbCBvZiB0aGUgTmV0IFRlcm1pbmF0aW9uIEJhbGFuY2UgZnJvbSB0aGUgS2F0eSBTdG9yYWdlIEZhY2lsaXR5Ow0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMTAxIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGIpXHRhYn1LYXR5IHNoYWxsLCBzdWJqZWN0IHRvIFNlY3Rpb24gMjAuNn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDQ3MzU2OTQgLjQoYyl9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAgYmVsb3csIERlbGl2ZXIgdG8gQ3VzdG9tZXIgdGhlIE5ldCBUZXJtaW5hdGlvbiBCYWxhbmNlIG9uIHN1Y2ggR2FzIERheXMgYW5kIGluIHN1Y2ggcXVhbnRpdGllcyBhcywgaW4gS2F0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyByZWFzb25hYmxlIGRldGVybWluYXRpb24sIHRoZXJlIGV4aXN0cyBJbnRlcnJ1cHRpYmxlIHdpdGhkcmF3YWwgY2FwYWNpdHkgdG8gYWNjb21tb2RhdGUgc3VjaCBEZWxpdmVyaWVzOyBhbmQNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczEwMSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChjKVx0YWJ9S2F0eSBzaGFsbCBub3QgYmUgb2JsaWdhdGVkIHRvIERlbGl2ZXIgYW55IA0KcG9ydGlvbiBvZiB0aGUgTmV0IFRlcm1pbmF0aW9uIEJhbGFuY2UgdW5sZXNzIGFuZCB1bnRpbCBDdXN0b21lciBoYXMgcGFpZCB0byBLYXR5Og0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMTAzIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGkpXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzMTAzXHFqIFxmaS03MjBcbGkyODgwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgyODgwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOVxpbHZsNFxvdXRsaW5lbGV2ZWw0XGFkanVzdHJpZ2h0XHJpbjBcbGluMjg4MFxpdGFwMFxwYXJhcnNpZDQ5OTI4NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IEFuIGFtb3VudCBlcXVhbCB0byBLYXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpzIHRoZW4gYXBwbGljYWJsZSBDb21tb2RpdHkgUmF0ZSBmb3Igd2l0aGRyYXdhbCBtdWx0aXBsaWVkIGJ5IHRoZSBOZXQgVGVybWluYXRpb24gQmFsYW5jZTsgYW5kDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHMxMDMgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAoaWkpXHRhYn10aGUgTmV0IFRlcm1pbmF0aW9uIEFtb3VudCBkZXRlcm1pbmVkIHB1cnN1YW50IHRvIFNlY3Rpb24gMjAuNn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNDczNTY5NCAuNH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAgYmVsb3csIGlmIHBheWFibGUgYnkgQ3VzdG9tZXIuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDIwLjYuM1x0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczk5XHFqIFxmaS03MjBcbGkxNDQwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOVxpbHZsMlxvdXRsaW5lbGV2ZWwyXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDQ5OTI4NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KQWxsIFRyYW5zYWN0aW9ucyBzaGFsbCBiZSBjYW5jZWxsZWQgYW5kIGNsb3NlZCBvdXQsIGVhY2ggYXQgaXRzIEN1cnJlbnQgVmFsdWUgKGFzIGRlZmluZWQgYmVsb3cpIGFzIG9mIHRoZSBFYXJseSBUZXJtaW5hdGlvbiBEYXRlLCBhbmQgYSBzZXR0bGVtZW50IHBheW1lbnQgaW4gYW4gYW1vdW50IGVxdWFsIHRvIHRoZSBDdXJyZW50IFZhbHVlIG9mIGVhY2ggc3VjaCBUcmFucw0KYWN0aW9uIHNoYWxsIGJlIHBheWFibGUgKGkpIGJ5IEthdHkgdG8gQ3VzdG9tZXIgaWYgdGhlIEN1cnJlbnQgVmFsdWUgaXMgbmVnYXRpdmUgKGV4Y2VwdCBpZiBzdWNoIG5lZ2F0aXZlIEN1cnJlbnQgVmFsdWUgaXMgYSByZXN1bHQgb2YgS2F0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcyB0ZXJtaW5hdGluZywgbGlxdWlkYXRpbmcsIG9idGFpbmluZywgb3IgcmUtZXN0YWJsaXNoaW5nIGEgaGVkZ2UpIG9yIChpaSkgYnkgQ3VzdG9tZXIgdG8gS2F0eSBpZiB0aGUgQ3VycmVudCBWYWx1ZSBpcyBwb3NpdGl2ZSwgYXMgYXBwbGljYWJsZS4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMjAuNi40XHRhYn0NClRoZSBDdXJyZW50IFZhbHVlcyBvZiBhbGwgdGVybWluYXRlZCBUcmFuc2FjdGlvbnMgc2hhbGwgYmUgc2V0IG9mZiBvciBhZ2dyZWdhdGVkLCBhcyBhcHByb3ByaWF0ZSwgc28gdGhhdCBhbGwgc3VjaCBhbW91bnRzIGFyZSBhZ2dyZWdhdGVkIGFuZC9vciBuZXR0ZWQgdG8gYSBzaW5nbGUgbGlxdWlkYXRlZCBhbW91bnQgKGZvciBwdXJwb3NlcyBvZiB0aGlzIFNlY3Rpb24sIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgVGVybWluYXRpb24gQW1vdW50fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCikgcGF5YWJsZSBieSBvbmUgUGFydHkgdG8gdGhlIG90aGVyLiBLYXR5IHNoYWxsIGdpdmUgQ3VzdG9tZXIgbm90aWNlIChmb3IgcHVycG9zZXMgb2YgdGhpcyBTZWN0aW9uLCB0aGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBUZXJtaW5hdGlvbiBBbW91bnQgTm90aWNlfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICkgb2YgdGhlIGFtb3VudCBvZiB0aGUgVGVybWluYXRpb24gQW1vdW50LCBpbmNsdWRpbmcgYSBzdGF0ZW1lbnQgc2hvd2luZyBpdHMgY2FsY3VsYXRpb24sIHRvZ2V0aGVyIHdpdGggdGhlIGZvbGxvd2luDQpnIGFkZGl0aW9uYWwgYW1vdW50cywgaWYgYW55LCBidXQgd2l0aG91dCBkdXBsaWNhdGlvbiAoc3VjaCBUZXJtaW5hdGlvbiBBbW91bnQsIHRvZ2V0aGVyIHdpdGggdGhlIGZvbGxvd2luZyBhZGRpdGlvbmFsIGFtb3VudHMsIHRoZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KTmV0IFRlcm1pbmF0aW9uIEFtb3VudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgKToNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczEwMSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChhKVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczEwMVxxaiBcZmktNzIwXGxpMjE2MFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MjE2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMzlcaWx2bDNcb3V0bGluZWxldmVsM1xhZGp1c3RyaWdodFxyaW4wXGxpbjIxNjBcaXRhcDBccGFyYXJzaWQ0OTkyODQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCB0aGUgYWdncmVnYXRlIGNoYXJnZXMgKHdoZXRoZXIgb3Igbm90IGludm9pY2VkIG9yIHlldCBvdmVyZHVlKSBvd2luZyBieSBDdXN0b21lciBmb3IgU2VydmljZXMgcHJvDQp2aWRlZCBieSBLYXR5IHRvIEN1c3RvbWVyIHVuZGVyIGFsbCBUcmFuc2FjdGlvbnMgaGVyZXVuZGVyIGFuZCB1bmRlciBhbnkgb3RoZXIgYWdyZWVtZW50cyBwcmlvciB0byB0aGUgRWFybHkgVGVybWluYXRpb24gRGF0ZTsNClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczEwMSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIChiKVx0YWJ9YW55IG90aGVyIGFtb3VudHMgb3V0c3RhbmRpbmcgdW5kZXIgYW55IG90aGVyIGFncmVlbWVudHM7IGFuZA0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzMTAxIFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgKGMpXHRhYn1hbGwgcmVhc29uYWJsZSBvdXQtb2YtcG9ja2V0IGV4cGVuc2VzIGluY2x1ZGluZywgd2l0aG91dCBsaW1pdGF0aW9uDQosIGxlZ2FsIGZlZXMgaW5jdXJyaW5nIGJ5IHRoZSBOb24tRGVmYXVsdGluZyBQYXJ0eSBieSByZWFzb24gb2YgdGhlIGVuZm9yY2VtZW50IGFuZCBwcm90ZWN0aW9uIG9mIGl0cyByaWdodHMgdW5kZXIgdGhlIHRlcm1pbmF0ZWQgTWFzdGVyIFNlcnZpY2UgQWdyZWVtZW50IGFuZCBhcHBsaWNhYmxlIENvbmZpcm1hdGlvbi4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMjAuNi41XHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzOTlccWogXGZpLTcyMFxsaTE0NDBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczM5XGlsdmwyXG91dGxpbmVsZXZlbDJcYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkNDk5Mjg0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgTm8gZnVydGhlciBwYXltZW50cywgRGVsaXZlcmllcywgb3IgU2VydmljZXMgdW5kZXIgdGhlIHRlcm1pbmF0ZWQgQ29uZmlyDQptYXRpb25zIHdpbGwgdGhlcmVhZnRlciBiZSByZXF1aXJlZCwgZXhjZXB0IHdpdGggcmVnYXJkIHRvIG9ibGlnYXRpb25zIGFjY3J1aW5nIGJlZm9yZSB0aGUgRWFybHkgVGVybWluYXRpb24gRGF0ZSBpZiBub3QgYWxyZWFkeSBpbmNsdWRlZCBpbiBOZXQgVGVybWluYXRpb24gQW1vdW50LCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uLCBhIEN1c3RvbWVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgDQpccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBzIG9ibGlnYXRpb24gdG8gcmV0dXJuIExvYW5lZCBRdWFudGl0aWVzIHVuZGVyIGEgTG9hbmVkIFNlcnZpY2UgVHJhbnNhY3Rpb24gaWYgdGhlIFRyYW5zYWN0aW9uIFBlcmlvZCBoYXMgZW5kZWQgYnV0IHRoZSBDdXN0b21lciBoYXMgbm90IHlldCByZS1EZWxpdmVyZWQgdGhlIEdhcyBhbmQgfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGlcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBwcm92aWRlZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAsIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaVxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IGhvd2V2ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAsIHRoYXQgdGhlIGNhbmNlbGxhdGlvbiBvZiB0aGUgQ29uZmlybWF0aW9ucyBhbmQgVHJhbnNhY3Rpb25zIHRoZXJldW5kZXIgc2hhbGwgbm90IHByZWp1ZGljZSBhbnkgb3RoZXIgcmlnaHQgb3Igb2JsaWdhdGlvbiB1bmRlciB0aGUgVHJhbnNhY3Rpb24gRG9jdW1lbnQocykuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDIwLjYuNlx0YWJ9DQpUaGUgTmV0IFRlcm1pbmF0aW9uIEFtb3VudCAoYW5kLCBpZiBhcHBsaWNhYmxlLCBhbGwgb3RoZXIgYW1vdW50cyBzZXQgb2ZmIGFnYWluc3Qgb3IgYWdncmVnYXRlZCB0aGVyZXdpdGgpIHNoYWxsIGJlIHBhaWQgYnkgdGhlIGNsb3NlIG9mIGJ1c2luZXNzIG9uIHRoZSBzZWNvbmQgKDJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHN1cGVyXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgbmR9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCApIEJ1c2luZXNzIERheSBmb2xsb3dpbmcgdGhlIEVhcmx5IFRlcm1pbmF0aW9uIERhdGUuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODUgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMjAuN1x0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczk3XHFqIFxmaS03MjBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDcyMFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMzlcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDQ5OTI4NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBDdXJyZW50IFZhbHVlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCiBtZWFucywgd2l0aCByZXNwZWN0IHRvIG9uZSBvciBtb3JlIGNhbmNlbGxlZCBDb25maXJtYXRpb25zLCB0aGUgYW1vdW50IG9mIEthdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCnMgdG90YWwgbG9zc2VzIGFuZCBjb3N0cyAob3IgZ2Fpbiwgd2hpY2ggc2hhbGwgYmUgZXhwcmVzc2VkIGFzIGEgbmVnYXRpdmUgbnVtYmVyKSBpbiBjb25uZWN0aW9uIHdpdGggdGhlIGNhbmNlbGxhdGlvbiBvZiB0aGUgVHJhbnNhY3Rpb25zIHRoZXJldW5kZXIsIA0KaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiwgYW55IGxvc3Mgb2YgYmFyZ2FpbiwgY29zdCBvZiBmdW5kaW5nIGFuZC9vciwgYXQgdGhlIGVsZWN0aW9uIG9mIEthdHkgYnV0IHdpdGhvdXQgZHVwbGljYXRpb24sIGxvc3Mgb3IgY29zdCBpbmN1cnJlZCBhcyBhIHJlc3VsdCBvZiB0ZXJtaW5hdGluZywgbGlxdWlkYXRpbmcsIG9idGFpbmluZywgb3IgcmUtZXN0YWJsaXNoaW5nIGFueSBoZWRnZSAob3IgYW55IGdhaW4gcmVzdWx0aW5nIGZyb20gDQphbnkgb2YgdGhlbSwgd2hpY2ggc2hhbGwgYmUgZXhwcmVzc2VkIGFzIGEgbmVnYXRpdmUgbnVtYmVyKSwgYXMgZGV0ZXJtaW5lZCBieSBLYXR5IGFjdGluZyByZWFzb25hYmx5IGFuZCBpbiBnb29kIGZhaXRoLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAyMC44XHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgRmluYW5jaWFsIEFzc3VyYW5jZXN9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAuIE5vdHdpdGhzdGFuZGluZywgYW5kIGluIGFkZGl0aW9uIHRvIGJ1dCBub3QgaW4gbGltaXRhdGlvbiBvZiwgYW55IG90aGVyIHByb3Zpc2lvbiBpbiB0aGlzIE9wZXJhdGluZyBTdGF0ZW1lbnQgb3IgYW4NCnkgb3RoZXIgVHJhbnNhY3Rpb24gRG9jdW1lbnQsIGlmIGF0IGFueSB0aW1lIGFuIEV2ZW50IG9mIERlZmF1bHQgYnkgQ3VzdG9tZXIgaGFzIG9jY3VycmVkIGFuZCBpcyBjb250aW51aW5nLCBLYXR5IHNoYWxsIGhhdmUgdGhlIHJpZ2h0IHRvIGV4ZXJjaXNlIGl0cyByaWdodHMgYW5kIHJlbWVkaWVzIGluIHJlc3BlY3Qgb2YgYW55IEZpbmFuY2lhbCBBc3N1cmFuY2VzIHByb3ZpZGVkIGJ5IEN1c3RvbWVyIGFuZCB0byBleGVyY2lzZSBpdHMgcmlnaA0KdHMgYW5kIHJlbWVkaWVzIGluIHJlc3BlY3Qgb2YgYW55IGxpZW4gb3Igc2VjdXJpdHkgaW50ZXJlc3QgaGVsZCBieSBLYXR5IG9uIEdhcyBzdG9yZWQgaW4gdGhlIEthdHkgU3RvcmFnZSBGYWNpbGl0eSBmb3IgQ3VzdG9tZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCnMgYWNjb3VudCwgYW5kIHRvIGFwcGx5IHRoZSBwcm9jZWVkcyBvZiB0aGUgcHJpdmF0ZSBzYWxlIG9mIHN1Y2ggR2FzIHRvIHNhdGlzZnkgYW55IGFuZCBhbGwgYW1vdW50cyBvd2luZyBieSBDdXN0b21lciB0byBLYXR5IHVuZGVyIGFueSBUcmFuc2FjdGlvbiBEb2N1bWVudC4gVG8gdGhlIGV4dGVudCB0aGF0IGFueSBDdXN0b21lciBJbnZlbnRvcnkgZXhpc3RzIG9uIHRoZSBFYXJseSBUZXJtaW5hdGlvbiBEYXRlLCBLYXR5fXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCnMgdGVybWluYXRpb24gbm90aWNlIHJlbmRlcmVkIGluIGFjY29yZGFuY2Ugd2l0aGluIHRoaXMgU2VjdGlvbiAyMC4wIHNoYWxsIGJlIGRlZW1lZCBzdWZmaWNpZW50IG5vdGljZSBmb3IgYWxsIHB1cnBvc2VzLCBpbmNsdWRpbmcsIHdpdGhvdXQgbA0KaW1pdGF0aW9uLCBmb3IgQ2hhcHRlcnMgNyBhbmQgOSBvZiB0aGUgVGV4YXMgQnVzaW5lc3MgYW5kIENvbW1lcmNlIENvZGUgb3IgYW55IG90aGVyIHZlcnNpb24gb2YgdGhlIFVuaWZvcm0gQ29tbWVyY2lhbCBDb2RlIChvciBzaW1pbGFyIGxhdykgYXMgYWRvcHRlZCBpbiBhbnkgcmVsZXZhbnQganVyaXNkaWN0aW9uLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAyMC45XHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgSW5zdWZmaWNpZW50IFByb2NlZWRzfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgLiBJbiB0aGUgZXZlbnQgdGhhdCB0aGUgQ3VzdG9tZXIgSW52ZW50b3J5IGluIHRoZSBLYXQNCnkgU3RvcmFnZSBGYWNpbGl0eSBpcyBsaXF1aWRhdGVkIGFuZCB0aGUgcHJvY2VlZHMgdGhlcmVmcm9tIGFyZSBpbnN1ZmZpY2llbnQgdG8gc2F0aXNmeSBhbGwgb3V0c3RhbmRpbmcgcGF5bWVudCBvYmxpZ2F0aW9ucyBkdWUgdG8gS2F0eSB1bmRlciB0aGUgdGVybWluYXRlZCBDb25maXJtYXRpb24gKGFuZC9vciBhbnkgb3RoZXIgVHJhbnNhY3Rpb24gRG9jdW1lbnQpLCBDdXN0b21lciB3aWxsIHJlbWFpbiBsaWFibGUgZm9yIGFsbCBzdWNoIG91dA0Kc3RhbmRpbmcgYW5kIHVuc2F0aXNmaWVkIG9ibGlnYXRpb25zIHRoYXQgZXhjZWVkIHRoZSBwcm9jZWVkcyBvZiBzdWNoIGxpcXVpZGF0aW9uLCBpbmNsdWRpbmcgaW50ZXJlc3QgdGhlcmVvbiwgYW5kIEthdHkgc2hhbGwgYmUgZW50aXRsZWQgdG8gcHVyc3VlIGFsbCBvdGhlciByZW1lZGllcyBhdmFpbGFibGUgdG8gaXQgYXQgbGF3IG9yIGluIGVxdWl0eSB0byBzZWN1cmUgdGhlIHNhdGlzZmFjdGlvbiBvZiBzdWNoIG9ibGlnYXRpb25zLg0KDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDIwLjEwXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgTm8gV2FpdmVyIG9mIE90aGVyIFJpZ2h0c317XHJ0bGNoXGZjczEgDQpcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IC4gRWFjaCBQYXJ0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KcyByaWdodHMgdW5kZXIgdGhpcyBTZWN0aW9uIDIwLjAgYXJlIGluIGFkZGl0aW9uIHRvLCBhbmQgbm90IGluIGxpbWl0YXRpb24gb3IgZXhjbHVzaW9uIG9mLCBhbnkgYW5kIGFsbCBvdGhlciByaWdodHMgdGhhdCBhIFBhcnR5IG1heSBoYXZlICh3aGV0aGVyIGJ5IGFncmVlbWVudCwgb3BlcmF0aW9uIG9mIGxhdywgb3Igb3RoZXJ3aXNlKS4NClxwYXIge1wqXGJrbWtzdGFydCBfVG9jMzg4NzgwNjR9e1wqXGJrbWtzdGFydCBfVG9jMzkyMzk1Mzd9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk1IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGJcY2Fwc1xkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ0OTkyODQ0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDIxLjBcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczk1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHg3MjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczM5XG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkNDk5Mjg0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNDk5Mjg0NCBGT1JDRSBNQUpFVVJFe1wqXGJrbWtlbmQgX1RvYzM4ODc4MDY0fXtcKlxia21rZW5kIF9Ub2MzOTIzOTUzN30NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMjEuMVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczk3XHFqIFxmaS03MjBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDcyMFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMzlcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDQ5OTI4NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IEVmZmVjdCBvZiBGb3JjZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkMTA0MzUxMzIgIE1hamV1cmUufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KIEluIHRoZSBldmVudCB0aGF0IGVpdGhlciBQYXJ0eSBpcyByZW5kZXJlZCB1bmFibGUsIHdob2xseSBvciBpbiBwYXJ0LCBieSByZWFzb24gb2YgRm9yY2UgTWFqZXVyZSwgYXMgZGVmaW5lZCBoZXJlaW4sIHRvIHBlcmZvcm0gYW55IG9ibGlnYXRpb24gdW5kZXIgYW55IFRyYW5zYWN0aW9uIERvY3VtZW50LCB0aGF0IFBhcnR5IHNoYWxsIGJlIGVudGl0bGVkLCB1bmxlc3Mgb3RoZXJ3aXNlIHByb3ZpZGVkIHRvIHRoZSBjb250cmFyeQ0KIGluIHN1Y2ggVHJhbnNhY3Rpb24gRG9jdW1lbnQocyksIHRvIGNsYWltIHN1c3BlbnNpb24gb2YgdGhhdCBvYmxpZ2F0aW9uIGZvciB0aGUgZHVyYXRpb24gb2YgdGhlIEZvcmNlIE1hamV1cmUuIE5vdGhpbmcgaW4gYW55IFRyYW5zYWN0aW9uIERvY3VtZW50IHNoYWxsIG9ibGlnYXRlIEthdHkgdG8gYWRkIGNvbXByZXNzaW9uIGF0IHRoZSBLYXR5IFN0b3JhZ2UgRmFjaWxpdHkgaW4gb3JkZXIgdG8gcmVtZWR5IGEgRm9yY2UgTWFqZXVyZS4NCg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAyMS4yXHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgTm90aWNlIG9mIEZvcmNlIE1hamV1cmV9e1xydGxjaFxmY3MxIA0KXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCi4gV2hlbiBhIFBhcnR5IGhhcyBwcm9wZXJseSBjbGFpbWVkIHN1c3BlbnNpb24gb2YgYW4gb2JsaWdhdGlvbiBwdXJzdWFudCB0byBTZWN0aW9uIDIxLjEgYWJvdmUsIHRoYXQgUGFydHkgc2hhbGwgYmUgcmVsaWV2ZWQgb2YgaXRzIGNvbW1pdG1lbnQgdG8gcGVyZm9ybSB0aGF0IG9ibGlnYXRpb24gdG8gdGhlIGV4dGVudCBhbmQgZm9yIHRoZSBwZXJpb2Qgb2YgdGltZSB0aGF0IHRoZSBGb3JjZSBNYWpldXJlIHJlc3RyYWlucyBzdWNoIFBhcnR5fQ0Ke1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBzIHBlcmZvcm1hbmNlIG9mIHN1Y2ggb2JsaWdhdGlvbiwgcHJvdmlkZWQgdGhhdCBzdWNoIFBhcnR5Og0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTkgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAyMS4yLjFcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHM5OVxxaiBcZmktNzIwXGxpMTQ0MFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4MTQ0MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMzlcaWx2bDJcb3V0bGluZWxldmVsMlxhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQ0OTkyODQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBwcm92aWRlcyB3cml0dGVuIG5vdGljZSB0byB0aGUgb3RoZXIgUGFydHkgc2V0dGluZyBvdXQgdGhlIGRldGFpbHMgb2YgdGhlIEZvcmNlIE1hamV1cmUgYXMgc29vbiBhcyByZWFzb25hYmx5IHBvc3NpYmxlIGFmdGVyIHRoZSBjb21tZW5jZW1lbnQgb2Ygc3VjaCBGb3JjZSBNYWpldXJlOw0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTkgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAyMS4yLjJcdGFifXRha2VzIHJlYXNvbmENCmJsZSBtZWFzdXJlcyB0aGF0IGFyZSBjb21tZXJjaWFsbHkgZmVhc2libGUgdW5kZXIgdGhlIGNpcmN1bXN0YW5jZXMgdG8gbWl0aWdhdGUgdGhlIGNhdXNlIGFuZCBlZmZlY3Qgb2YgdGhlIEZvcmNlIE1hamV1cmU7DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDIxLjIuM1x0YWJ9DQphcyBzb29uIGFzIHJlYXNvbmFibHkgcG9zc2libGUsIGdpdmVzIG5vdGljZSB0byB0aGUgb3RoZXIgUGFydHkgb2YgdGhlIGRhdGUgdXBvbiB3aGljaCB0aGUgRm9yY2UgTWFqZXVyZSBpcyBleHBlY3RlZCB0byBjb25jbHVkZTsgYW5kDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDIxLjIuNFx0YWJ9DQpyZWNvbW1lbmNlcyBwZXJmb3JtYW5jZSBvZiBpdHMgb2JsaWdhdGlvbiB0byB0aGUgZXh0ZW50IHJlYXNvbmFibHkgcG9zc2libGUgZHVyaW5nIGFuZCBvbiB0aGUgY29uY2x1c2lvbiBvZiB0aGUgRm9yY2UgTWFqZXVyZS4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMjEuM1x0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczk3XHFqIFxmaS03MjBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDcyMFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMzlcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDQ5OTI4NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFBheS9DcmVkaXQgRGVtYW5kIENoYXJnZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAuIElmIEZvcmNlIE1hamV1cmUgY2xhaW1lZCBieSBLYXR5IChvdGhlciB0aGFuIHB1cnN1YW50IHRvIFNlY3Rpb24gMjEuNCkgcHJldmVudHMgS2F0eSBmcm9tIGZ1bGx5IHBlcmZvcg0KbWluZyBpdHMgb2JsaWdhdGlvbnMgaW4gcmVzcG9uc2UgdG8gYSBOb21pbmF0aW9uIGZvciBpbmplY3Rpb24gb3Igd2l0aGRyYXdhbCBvZiBHYXMsIHRoZW4gZm9yIHNvIGxvbmcgYXMgYW5kIHRvIHRoZSBleHRlbnQgdGhhdCBLYXR5IGlzIHNvIHJlc3RyYWluZWQsIHRoZSBEZW1hbmQgQ2hhcmdlcyBwYXlhYmxlIGJ5IEN1c3RvbWVyIGZvciBGaXJtIFN0b3JhZ2UgU2VydmljZSB3aWxsIGJlIHJlZHVjZWQgcHJvcG9ydGlvbmF0ZWx5Lg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAyMS40XHRhYn19e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgTmF0dXJlIG9mIEZvcmNlfXtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDg1OTc0MzUgIE1hamV1cmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgLiBUaGUgdGVybSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KRm9yY2UgTWFqZXVyZX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQogYXMgZW1wbG95ZWQgaGVyZWluIHNoYWxsIG1lYW4gYW55IGNhdXNlIHdoZXRoZXIgb2YgdGhlIGtpbmQgZW51bWVyYXRlZCBoZXJlaW4gb3Igb3RoZXJ3aXNlLCBub3QgcmVhc29uYWJseSB3aXRoaW4gdGhlIGNvbnRyb2wgb2YgS2F0eSwgc3VjaCBhcyBhY3RzIG9mIEdvZDsgc3RyaWtlcywgbG9ja291dHMsIGFuZCBpbmR1c3RyaWFsIGRpc3B1dGVzIG9yIGRpc3QNCnVyYmFuY2VzOyBpbmFiaWxpdHkgdG8gc2VjdXJlIG9yIGRlbGF5cyBvYnRhaW5pbmcgbGFib3IsIG1hdGVyaWFscywgc3VwcGxpZXMsIHBlcm1pdHMsIGVhc2VtZW50cyBvciByaWdodHMtb2Ytd2F5LCBpbmNsdWRpbmcgaW5hYmlsaXR5IHRvIHNlY3VyZSBtYXRlcmlhbHMgYnkgcmVhc29uIG9mIGFsbG9jYXRpb25zIHByb211bGdhdGVkIGJ5IGF1dGhvcml6ZWQgZ292ZXJubWVudGFsIGFnZW5jaWVzOyBhcnJlc3RzIGFuZCByZXN0cmFpbnRzIG9mIA0KZw0Kb3Zlcm5tZW50IGFuZCBwZW9wbGU7IGludGVycnVwdGlvbnMgYnkgZ292ZXJubWVudCBvciBjb3VydCBvcmRlcnM7IHByZXNlbnQgYW5kIGZ1dHVyZSB2YWxpZCBvcmRlcnMsIGRlY2lzaW9ucyBvciBydWxpbmdzIG9mIGFueSBnb3Zlcm5tZW50IG9yIHJlZ3VsYXRvcnkgZW50aXR5IGhhdmluZyBwcm9wZXIganVyaXNkaWN0aW9uOyBhY3RzIG9mIHRoZSBwdWJsaWMgZW5lbXk7IHZhbmRhbGlzbTsgd2FyczsgcmlvdHM7IGNpdmlsIGRpc3R1cmJhbmNlDQpzDQo7IGJsb2NrYWRlczsgaW5zdXJyZWN0aW9uczsgZXBpZGVtaWNzOyBsYW5kc2xpZGVzOyBsaWdodG5pbmc7IHRvcm5hZG9lczsgaHVycmljYW5lczsgZWFydGhxdWFrZXM7IGZpcmVzOyBzdG9ybXM7IGZsb29kczsgd2FzaG91dHM7IGluY2xlbWVudCB3ZWF0aGVyIHdoaWNoIG5lY2Vzc2l0YXRlcyBleHRyYW9yZGluYXJ5IG1lYXN1cmVzIGFuZCBleHBlbnNlIHRvIG1haW50YWluIG9wZXJhdGlvbnM7IGV4cGxvc2lvbnM7IGJyZWFrYWdlOyBhY2NpZGUNCm4NCnRzIGFuZC9vciBtYWludGVuYW5jZSB0byBwbGFudCBmYWNpbGl0aWVzIGluY2x1ZGluZyBtYWNoaW5lcnksIGxpbmVzIG9mIHBpcGUsIGFjY2lkZW50cywgYW5kL29yIHVuc2NoZWR1bGVkIG1haW50ZW5hbmNlIG9mIHdlbGxzIG9yIHN1YnN1cmZhY2Ugc3RvcmFnZSBjYXZlcm5zIG9yIHJlc2Vydm9pcnM7IHRlc3RpbmcgKGFzIHJlcXVpcmVkIGJ5IGdvdmVybm1lbnRhbCBhdXRob3JpdHkgb3IgYXMgZGVlbWVkIG5lY2Vzc2FyeSBieSBLYXR5IGZvcg0KIA0KdGhlIHNhZmUgb3BlcmF0aW9uIG9mIHRoZSBmYWNpbGl0aWVzIHJlcXVpcmVkIHRvIHBlcmZvcm0gdGhlIFNlcnZpY2VzIGhlcmV1bmRlcik7IGFueSBjbGFpbSBvZiBGb3JjZSBNYWpldXJlIG9yIGFjdCBvciBmYWlsdXJlIHRvIGFjdCBjb25zdGl0dXRpbmcgRm9yY2UgTWFqZXVyZSBieSBhbnkgRGVzaWduYXRlZCBQaXBlbGluZSB0aGF0IGRpc3J1cHRzIHRoZSB0cmFuc3BvcnRhdGlvbiBvZiBnYXMgdG8sIGZyb20gb3IgZm9yIEthdHkgb3IgQ3VzDQp0b21lcjsgYW5kIHRoZSBtYWtpbmcgb2YgcmVwYWlycyBvciBhbHRlcmF0aW9ucyB0byBwaXBlbGluZXMsIHN0b3JhZ2UsIGFuZCBwbGFudCBmYWNpbGl0aWVzIGluY2x1ZGluZyBUcmFuc3BvcnRlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KcyBwaXBlbGluZSByZXBhaXJzLiBJdCBpcyB1bmRlcnN0b29kIGFuZCBhZ3JlZWQgdGhhdCB0aGUgc2V0dGxlbWVudCBvZiBzdHJpa2VzIG9yIGxvY2tvdXRzIHNoYWxsIGJlIGVudGlyZWx5IHdpdGhpbiB0aGUgZGlzY3JldGlvbiBvZiBLYXR5LCBhbmQNCiB0aGF0IHRoZSBhYm92ZSByZXF1aXJlbWVudHMgdGhhdCBhbnkgRm9yY2UgTWFqZXVyZSBzaGFsbCBiZSByZW1lZGllZCB3aXRoIGFsbCByZWFzb25hYmxlIGRpc3BhdGNoIHNoYWxsIG5vdCByZXF1aXJlIHRoZSBzZXR0bGVtZW50IG9mIHN0cmlrZXMgb3IgbG9ja291dHMgYnkgYWNjZWRpbmcgdG8gdGhlIGRlbWFuZHMgb2YgdGhlIG9wcG9zaW5nIHBhcnR5IHdoZW4gc3VjaCBjb3Vyc2UgaXMgaW5hZHZpc2FibGUgaW4gdGhlIGRpc2NyZXRpb24gbw0KZiBLYXR5LiBUaGUgdGVybSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IEZvcmNlIE1hamV1cmV9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBcJzk0fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQogc2hhbGwgbm90IGluY2x1ZGUgZmluYW5jaWFsIGRpc3RyZXNzLCBpbmFiaWxpdHkgdG8gcGF5IGRlYnRzIHdoZW4gZHVlLCBpbnNvbHZlbmN5IG9yIGJhbmtydXB0Y3kuIFRoZSBvY2N1cnJlbmNlIG9mIEZvcmNlIE1hamV1cmUgd2lsbCBub3QgcmVsaWV2ZSBlaXRoZXIgUGFydHkgb2YgaXRzIG9ibGlnYXRpb25zIHRvIG1ha2UgcGF5bWVudHMgd2hlbiBkdWUgdW5kZXIgYW55IFRyYW5zYWN0aW9uIERvY3VtZW50Lg0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2MzODg3ODA2NX17XCpcYmtta3N0YXJ0IF9Ub2MzOTIzOTUzOH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTUgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcYlxjYXBzXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDQ5OTI4NDQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMjIuMFx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzOTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDcyMFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMzlcb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ0OTkyODQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ0OTkyODQ0IFNFUlZJQ0UgQ09ORElUSU9OU3tcKlxia21rZW5kIF9Ub2MzODg3ODA2NX17XCpcYmtta2VuZCBfVG9jMzkyMzk1Mzh9DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDIyLjFcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHM5N1xxaiBcZmktNzIwXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHg3MjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczM5XGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQ0OTkyODQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANClVubGVzcyBvdGhlcndpc2Ugc3BlY2lmaWNhbGx5IGFncmVlZCB0byBpbiB3cml0aW5nLCBLYXR5IHNoYWxsIGJlIHJlc3BvbnNpYmxlIGZvciBvbmx5IHRoZSBtYWludGVuYW5jZSBhbmQgb3BlcmF0aW9uIG9mIGl0cyBvd24gcHJvcGVydGllcyBhbmQgZmFjaWxpdGllcyBhbmQgc2hhbGwgbm90IGJlIHJlc3BvbnNpYmxlIGZvciB0aGUgbWFpbnRlbmFuY2Ugb3Igb3BlcmF0aW9uIG9mIGFueSBwcg0Kb3BlcnRpZXMgb3IgZmFjaWxpdGllcyBjb25uZWN0ZWQgaW4gYW55IHdheSB3aXRoIHRoZSB0cmFuc3BvcnRhdGlvbiBvciBzdG9yYWdlIG9mIEdhcy4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMjIuMlx0YWJ9DQpLYXR5IHNoYWxsIGhhdmUgdGhlIHJpZ2h0IHRvIGludGVycnVwdCB0aGUgZmxvdyBvZiBHYXMgd2hlbiBuZWNlc3NhcnksIGluY2x1ZGluZywgYnV0IG5vdCBsaW1pdGVkIHRvLCBhdCBsZWFzdCBvbmNlIGFubnVhbGx5LCB0byB0ZXN0LCBhbHRlciwgbW9kaWZ5LCBlbmxhcmdlIG9yIHJlcGFpciBhDQpueSBmYWNpbGl0eSBvciBwcm9wZXJ0eSBjb21wcmlzaW5nIGEgcGFydCBvZiwgb3IgYXBwdXJ0ZW5hbnQgdG8sIHRoZSBLYXR5IFN0b3JhZ2UgRmFjaWxpdHksIG9yIG90aGVyd2lzZSByZWxhdGVkIHRvIHRoZSBvcGVyYXRpb24gdGhlcmVvZi4gS2F0eSBzaGFsbCBlbmRlYXZvciB0byBjYXVzZSBhIG1pbmltdW0gb2YgaW5jb252ZW5pZW5jZSB0byBDdXN0b21lciwgYW5kIGV4Y2VwdCBpbiBjYXNlcyBvZiBlbWVyZ2VuY3ksIHNoYWxsIGdpdmUgQ3UNCnN0b21lciBhZHZhbmNlIG5vdGljZSBvZiBpdHMgaW50ZW50aW9uIHRvIHNvIGludGVycnVwdCB0aGUgZmxvdyBvZiBHYXMgYW5kIG9mIHRoZSBleHBlY3RlZCBtYWduaXR1ZGUgb2Ygc3VjaCBpbnRlcnJ1cHRpb25zLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAyMi4zXHRhYn0NCkthdHkgc2hhbGwgaGF2ZSB0aGUgcmlnaHQgdG8gaW50ZXJydXB0IFNlcnZpY2Ugd2l0aG91dCBwcmlvciBub3RpY2UgdG8gQ3VzdG9tZXIgaW4gdGhlIGV2ZW50IGFjdGlvbnMgYnkgYW55IEN1c3RvbWVyIHRocmVhdGVuIHRoZSBpbnRlZ3JpdHkgb2YgdGhlIEthdHkgU3RvcmFnZSBGYWNpbGl0eSBvciBpbiB0aGUgZXZlbnQgdGhhdCBpbW1lZGlhdGUgb3IgaXJyZXBhcmFibGUgaGFybSBtYXkgYmUgY2F1c2VkIGJ5IEN1c3RvbWVyfXsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCnMgZmFpbHVyZSB0byBjb21wbHkgd2l0aCB0aGUgdGVybXMgb2YgYW55IFRyYW5zYWN0aW9uIERvY3VtZW50LiBLYXR5IG1heSBmcm9tIHRpbWUgdG8gdGltZSBwdXJjaGFzZSBvciBzZWxsIEdhcyBvbiBhbiBJbnRlcnJ1cHRpYmxlIGJhc2lzIGFzIG5lDQpjZXNzYXJ5IHRvIG1hbmFnZSBwcmVzc3VyZSBhbmQgbWFpbnRhaW4gdGhlIGludGVncml0eSBvZiB0aGUgS2F0eSBTdG9yYWdlIEZhY2lsaXR5LiBUaGUgcHVyY2hhc2Ugb3Igc2FsZSBvZiBHYXMgc2hhbGwgYmUgbWFkZSBvbiBhIG5vbmRpc2NyaW1pbmF0b3J5IGJhc2lzLg0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2MzODg3ODA2Nn17XCpcYmtta3N0YXJ0IF9Ub2MzOTIzOTUzOX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTUgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcYlxjYXBzXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDQ5OTI4NDQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMjMuMFx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXINClxzOTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXGpjbGlzdHRhYlx0eDcyMFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMzlcb3V0bGluZWxldmVsMFxhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQ0OTkyODQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ0OTkyODQ0IFRJVExFIEFORCBSSVNLIE9GIExPU1N7XCpcYmtta2VuZCBfVG9jMzg4NzgwNjZ9e1wqXGJrbWtlbmQgX1RvYzM5MjM5NTM5fQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNDk5Mjg0NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAyMy4xXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzOTdccWogXGZpLTcyMFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4NzIwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkNDk5Mjg0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXHVsXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDQ5OTI4NDQgQ3VzdG9tZXJccnF1b3RlIHMgUG9zc2Vzc2lvbiBhbmQgUmlzayBvZiBMb3NzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IC4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk5IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMjMuMS4xXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzOTlccWogXGZpLTcyMFxsaTE0NDBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDE0NDBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczM5XGlsdmwyXG91dGxpbmVsZXZlbDJcYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkNDk5Mjg0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgQ3VzdG9tZXIgc2hhbGwgYmUgZGVlbWVkIHRvIGJlIGluIGNvbg0KdHJvbCBhbmQgcG9zc2Vzc2lvbiBvZiwgYW5kIHNoYWxsIGhhdmUgdGl0bGUgdG8sIGFsbCBHYXMgKGkpIERlbGl2ZXJlZCBieSBDdXN0b21lciB0byBLYXR5IHByaW9yIHRvIGFuZCBpbmNsdWRpbmcgdGhlIHRpbWUgb2YgaXRzIERlbGl2ZXJ5IHRvIEthdHkgYXQgdGhlIFJlY2VpcHQgUG9pbnQocykgYW5kIChpaSkgRGVsaXZlcmVkIGJ5IEthdHkgdG8gQ3VzdG9tZXIgZnJvbSBhbmQgYWZ0ZXIgaXRzIFJlY2VpcHQgYnkgQ3VzdG9tZXIgYXQgdGhlDQogRGVsaXZlcnkgUG9pbnQocykuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDIzLjEuMlx0YWJ9DQpDdXN0b21lciBzaGFsbCBiZWFyIHRoZSByaXNrIG9mIGxvc3Mgb3IgY29udGFtaW5hdGlvbiBvZiBzdWNoIEdhcyAoaSkgd2hpbGUgdGhlIEdhcyBpcyBpbiB0aGUgY29udHJvbCBhbmQgcG9zc2Vzc2lvbiBvZiBDdXN0b21lciBvciBpdHMgRGVzaWduYXRlZCBQaXBlbGluZSwgKGlpKSByZXN1bHRpbmcgZnJvbSBhbnkgRm9yY2UgTWFqZXVyZSBldmVudCBkZXNjcmliZWQgaW4gU2VjdGlvbiAyMS40LCBhbmQgYW55IGYNCmFpbHVyZSBvZiBlcXVpcG1lbnQgcmVzdWx0aW5nIHRoZXJlZnJvbSwgYW5kIChpaWkpIHJlc3VsdGluZyBmcm9tIGFueSB0aGlyZCBwYXJ0eSBhY3Rpb24gb3IgaW5hY3Rpb24sIGFuZCBDdXN0b21lciBzaGFsbCBJbmRlbW5pZnkgS2F0eSBmcm9tIGFuZCBhZ2FpbnN0IGFueSBDbGFpbXMgcmVsYXRpbmcgdG8gb3IgcmVzdWx0aW5nIGZyb20gYW55IGFuZCBhbGwgc3VjaCBsb3NzIG9yIGNvbnRhbWluYXRpb24uDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ0OTkyODQ0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDIzLjJcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHM5N1xxaiBcZmktNzIwXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHg3MjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczM5XGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQ0OTkyODQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNDk5Mjg0NCBLYXR5XHJxdW90ZSBzIFBvc3Nlc3Npb24gYW5kIFJpc2sgb2YgTG9zc317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5OSBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDIzLjIuMVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczk5XHFqIFxmaS03MjBcbGkxNDQwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHgxNDQwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOVxpbHZsMlxvdXRsaW5lbGV2ZWwyXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDQ5OTI4NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KS2F0eSBzaGFsbCBiZSBkZWVtZWQgdG8gYmUgaW4gY29udHJvbCBhbmQgcG9zc2Vzc2lvbiBvZiBhbGwgR2FzIChpKSBEZWxpdmVyZWQgdG8gS2F0eSBieSBDdXN0b21lciBhZnRlciBSZWNlaXB0IGJ5IEthdHkgYXQgdGhlIFJlY2VpcHQgUG9pbnQocykgYW5kIChpaSkgRGVsaXZlcmVkIGJ5IEthdHkgdG8gQ3VzdG9tZXIgYXQgdGhlIERlbGl2ZXJ5IFBvaW50KHMpIHByaW9yIHRvIGl0cyBSZWNlaXB0IGJ5IEN1c3RvbWVyIGENCnQgdGhlIERlbGl2ZXJ5IFBvaW50KHMpLg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTkgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAyMy4yLjJcdGFifQ0KS2F0eSBzaGFsbCBiZWFyIHRoZSByaXNrIG9mIGxvc3Mgb3IgY29udGFtaW5hdGlvbiBvZiBzdWNoIEdhcyB3aGlsZSBLYXR5IGlzIGluIGNvbnRyb2wgYW5kIHBvc3Nlc3Npb24gb2Ygc3VjaCBHYXMsIGV4Y2VwdCB3aGVuIEN1c3RvbWVyIGJlYXJzIHN1Y2ggcmlzayBhcyBzZXQgZm9ydGggaW4gU2VjdGlvbiAyMy4xfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkNDczNTY5NCAuMn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0ICBhYm92ZTsgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgcHJvdmlkZWQsIGhvd2V2ZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgLCB0aGF0IEthdHkgc2hhbGwgYmUgcmVzDQpwb25zaWJsZSBmb3IgYW55IGxvc3Mgb3IgY29udGFtaW5hdGlvbiBvZiBDdXN0b21lcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IHMgR2FzIHJlc3VsdGluZyBmcm9tIG1hdHRlcnMgZGVzY3JpYmVkIGluIFNlY3Rpb24gMjMuMX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClxpbnNyc2lkNDczNTY5NCAufXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTIzMzU3ODEgMn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAoaWl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NzM1Njk0ICkgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KYW5kIChpaWkpIGluIHRoZSBldmVudCwgYW5kIHRoZW4gb25seSB0byB0aGUgZXh0ZW50LCB0aGF0IEthdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCnMgbmVnbGlnZW5jZSBjb250cmlidXRlcyB0byBzdWNoIGxvc3Mgb3IgY29udGFtaW5hdGlvbi4gSW4gdGhlIGV2ZW50IG9mIGxvc3Mgb3IgY29udGFtaW5hdGlvbiBvZiBHYXMgZm9yIHdoaWNoIEthdHkgaXMgcmVzcG9uc2libGUgdW5kZXIgdGhpcyBTZWN0aW9uIDIzLjJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQ0NzM1Njk0IC4yfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgLCBLYXR5IHNoYWxsIGhhdmUgdGhlIG9wdGlvbiwgaW4gaXRzIHJlYXNvbmFibGUgZGlzY3JldGlvbiwgdG8gZWl0aGVyIChpKSBwYXkgQ3VzdG9tZXIgZm9yIHN1Y2ggR2FzIChhdCB0aGUgdGhlbiBjdXJyZW50IG1hcmtldCB2YWx1ZSBhcyBkZXRlcm1pbmVkIGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgYXBwbGljYWJsZQ0KIFJlZmVyZW5jZSBQcmljZSkgb3IgKGlpKSByZXBsYWNlIHN1Y2ggR2FzIHdpdGggYW4gZXF1aXZhbGVudCBRdWFudGl0eSBvZiBHYXMuIEluIG5vIGV2ZW50IHdpbGwgS2F0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFxycXVvdGUgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IA0KcyBsaWFiaWxpdHkgZm9yIGFueSBsb3NzIG9yIGNvbnRhbWluYXRpb24gb2YgR2FzIGV4Y2VlZCB0aGUgY3VycmVudCBtYXJrZXQgdmFsdWUgb2YgdGhlIEdhcyBhdCB0aGUgdGltZSBvZiBzdWNoIGxvc3Mgb3IgY29udGFtaW5hdGlvbi4NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMjMuM1x0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczk3XHFqIFxmaS03MjBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDcyMFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMzlcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDQ5OTI4NDQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCANClx1bFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFRpdGxlfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IC4gRXhjZXB0IGluIHRob3NlIGluc3RhbmNlcyB3aGVuIEthdHkgZXhwcmVzc2x5IHRha2VzIHRpdGxlIHRvIEN1c3RvbWVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBzIEdhcyBwdXJzdWFudCB0byBpdHMgcmlnaHRzIHVuZGVyIHRoZSBUcmFuc2FjdGlvbiBEb2N1bWVudHMgb3IgYXMgb3RoZXJ3aXNlIGFsbG93ZWQgYnkgbGF3LCBDdXN0b21lciBzaGFsbCBhdCBhbGwgdGltZXMgcmV0YWluIHRpdGxlIHRvIGFsbCBHYXMgRGVsaXZlcmVkIGJ5IEN1c3RvbWVyIHRvIHRoZSBLYXR5IFN0b3JhZ2UgRmFjaWxpdHkgDQpvciBvdGhlcndpc2UgaW5jbHVkZWQgaW4gQ3VzdG9tZXIgR3Jvc3MgSW52ZW50b3J5LCBub3R3aXRoc3RhbmRpbmcgdGhhdCBzdWNoIEdhcyBtYXkgYmUgY29tbWluZ2xlZCB3aXRoIG90aGVyIEdhcyBpbiB0aGUgS2F0eSBTdG9yYWdlIEZhY2lsaXR5IChzdWJqZWN0IHRvIFNlY3Rpb24gMjMuNCBiZWxvdykuDQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDIzLjRcdGFifX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcdWxcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCkZ1bmdpYmxlIEdvb2QsIFJlY2VpcHRzLCBhbmQgTmVnb3RpYWJsZSBJbnN0cnVtZW50c317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAuIFRoZSBQYXJ0aWVzIGFja25vd2xlZGdlIGFuZCBhZ3JlZSB0aGF0IEdhcyB3aGljaCBpcyBEZWxpdmVyZWQgdG8gdGhlIEthdHkgU3RvcmFnZSBGYWNpbGl0eSBwdXJzdWFudCB0byBhbnkgVHJhbnNhY3Rpb24gRG9jdW1lbnQgaXMgYSB9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgZnVuZ2libGUgZ29vZH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IFwnOTR9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQogKGFzIHRoYXQgdGVybSBpcyBkZWZpbmVkIGluIFRleC4gQnVzLiAmIENvbS4gQ29kZSBBbm4uIFwnYTcgMS4yMDEoMTcpKSwgYW5kIHRoYXQgdGhlIHVuaXQgb2YgR2FzIGlzIG9uZSAoMSkgTU1CdHUuIEN1c3RvbWVyIHVuZGVyc3RhbmRzIGENCm5kIGFncmVlcyB0aGF0IGFueSBHYXMgRGVsaXZlcmVkIHNoYWxsIGJlIGNvbW1pbmdsZWQgd2l0aCBhbGwgb3RoZXIgR2FzIGFscmVhZHkgb3Igc3Vic2VxdWVudGx5IERlbGl2ZXJlZCBhbmQgc3RvcmVkIGF0IHRoZSBmYWNpbGl0eS4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5M317XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANClJlY2VpcHRzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAgKGFzIHRoYXQgdGVybSBpcyB1c2VkIGluIFRleC4gQnVzLiAmIENvbS4gQ29kZSBBbm4uIFwnYTcgNy4yMDcoYikpIHNoYWxsIGJlIGJhc2VkIG9uIGNvbmZpcm1hdGlvbnMgb2YgRGVsaXZlcnkgYnkgDQp0aGUgRGVzaWduYXRlZCBQaXBlbGluZSBEZWxpdmVyaW5nIEdhcyB0byB0aGUgZmFjaWxpdHkuIEthdHkgd2lsbCBub3QgYmUgb2JsaWdhdGVkIHRvIERlbGl2ZXIgdG8gQ3VzdG9tZXIgdGhlIHNhbWUgR2FzIHRoYXQgd2FzIERlbGl2ZXJlZCB0byBLYXR5IGJ5IG9yIG9uIGJlaGFsZiBvZiBDdXN0b21lciwgYnV0IHNoYWxsIGJlIG9ibGlnYXRlZCB0byBEZWxpdmVyIG9ubHkgc3VjaCBRdWFudGl0eSBvZiBHYXMgYXMgdGhlIEN1c3RvbWVyIGlzIGUNCm50aXRsZWQgdG8gcmVjZWl2ZSBmcm9tIEthdHkgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZSBUcmFuc2FjdGlvbiBEb2N1bWVudChzKS4gV2l0aG91dCBsaW1pdGluZyBLYXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpzIG9ibGlnYXRpb24gc2V0IGZvcnRoIGluIHRoZSBpbW1lZGlhdGVseSBwcmVjZWRpbmcgc2VudGVuY2UsIEthdHkgc2hhbGwgYmUgZW50aXRsZWQgdG8gdXNlIGFsbCBRdWFudGl0aWVzIG9mIEdhcyBEZWxpdmVyZWQgdG8gdGhlIEthdHkgU3RvcmFnZSBGYWNpbGl0eSBmb3IgYQ0KbnkgYW5kIGFsbCBwdXJwb3NlcywgaW5jbHVkaW5nLCB3aXRob3V0IGxpbWl0YXRpb24sIGZvciBEZWxpdmVyeSBvciB0cmFuc2ZlciB0aGVyZW9mIHRvIG90aGVyIEN1c3RvbWVycyB0byBzYXRpc2Z5IEthdHl9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCnMgb2JsaWdhdGlvbnMgdW5kZXIgVHJhbnNhY3Rpb25zIHdpdGggc3VjaCBvdGhlciBDdXN0b21lcnMuIEN1c3RvbWVyIGFja25vd2xlZGdlcyB0aGF0IHRoZSBDb25maXJtYXRpb25zLCBOb21pbmF0aW9ucywgaW52b2ljZXMgb3IgYW55IG8NCnRoZXIgZG9jdW1lbnQgaXNzdWVkIHB1cnN1YW50IHRvIHRoZSBUcmFuc2FjdGlvbiBEb2N1bWVudHMgYXJlIG5vbi1uZWdvdGlhYmxlIGluc3RydW1lbnRzIHVuZGVyIFRleC4gQnVzLiAmIENvbS4gQ29kZSBBbm4uXCdhNyA3LjEwNChiKS4NClxwYXIge1wqXGJrbWtzdGFydCBfVG9jMzg4NzgwNjd9e1wqXGJrbWtzdGFydCBfVG9jMzkyMzk1NDB9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk1IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGJcY2Fwc1xkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ0OTkyODQ0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDI0LjBcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczk1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHg3MjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczM5XG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkNDk5Mjg0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNDk5Mjg0NCBBRFZFUlNFIENMQUlNUyBUTyBOQVRVUkFMIEdBU3tcKlxia21rZW5kIF9Ub2MzODg3ODA2N317XCpcYmtta2VuZCBfVG9jMzkyMzk1NDB9DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDI0LjFcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHM5N1xxaiBcZmktNzIwXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHg3MjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczM5XGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQ0OTkyODQ0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBOb3R3aXRoc3RhbmRpbmcgYW55dGhpbmcgdG8gdGhlIGNvbnRyYXJ5IGluIHRoZSBDb25maXJtYXRpb24sIEN1c3RvbWVyIHNoYWxsIEluZGVtbmlmeSBLYXR5IA0KR3JvdXAgYWdhaW5zdCBhbnkgQ2xhaW0gd2hhdHNvZXZlciBzdWZmZXJlZCBieSBvciBicm91Z2h0IGFnYWluc3QgS2F0eSBHcm91cCwgd2hlcmUgc3VjaCBDbGFpbSBhcmlzZXMgZGlyZWN0bHkgb3IgaW5kaXJlY3RseSBvdXQgb2YgYW55IENsYWltIGJyb3VnaHQgYnkgYW55IFBlcnNvbiwgcHVibGljIG9yIHByaXZhdGUsIGFzc2VydGluZyBvd25lcnNoaXAgb2YsIGEgQ2xhaW0gdG8gb3IgYW4gaW50ZXJlc3QgaW4gdGhlIG5hdHVyYWwgR2FzIHRlDQpuZGVyZWQgYnkgQ3VzdG9tZXIgZm9yIHRyYW5zcG9ydGF0aW9uIG9yIHN0b3JhZ2UgYXQsIG9yIHJlcGF5bWVudCBvZiBMb2FuZWQgUXVhbnRpdGllcyB0bywgdGhlIEthdHkgU3RvcmFnZSBGYWNpbGl0eS4NClxwYXIge1wqXGJrbWtzdGFydCBfVG9jMzg4NzgwNjh9e1wqXGJrbWtzdGFydCBfVG9jMzkyMzk1NDF9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk1IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGJcY2Fwc1xkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ0OTkyODQ0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDI1LjBcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczk1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHg3MjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczM5XG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkNDk5Mjg0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNDk5Mjg0NCBJTkRFTU5JRklDQVRJT057XCpcYmtta2VuZCBfVG9jMzg4NzgwNjh9e1wqXGJrbWtlbmQgX1RvYzM5MjM5NTQxfQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAyNS4xXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzOTdccWogXGZpLTcyMFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4NzIwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOVxpbHZsMVxvdXRsaW5lbGV2ZWwxXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkNDk5Mjg0NCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgQ3VzdG9tZXIgc2hhbGwgaW5kZW1uaWZ5IEthdHkgR3JvdXAgYWdhaW5zdCBhbnkgQ2xhaW0gd2hhdHNvZXZlciBvY2N1cnJpbmcgaW4gY29ubmVjdGlvbiB3aXRoIG9yIHJlbGF0aW5nIGluIGFueSB3YXkgdG8gYW55DQogYnJlYWNoIG9mIGFueSBUcmFuc2FjdGlvbiBEb2N1bWVudCwgdGhhdCByZXN1bHRzIGZyb20gb3IgaXMgcmVsYXRlZCB0byBhbnkgQ2xhaW0gYXNzZXJ0ZWQgYnkgYW55IHRoaXJkIHBhcnR5LCBwdWJsaWMgb3IgcHJpdmF0ZSwgdGhhdCBpcyBub3QgYSBwYXJ0eSB0byB0aGUgQ29uZmlybWF0aW9uLCB3aGVyZSBzdWNoIENsYWltIGlzIHN1ZmZlcmVkIGJ5IHRoZSBjbGFpbWluZyBQZXJzb24sIGl0cyBwYXJ0bmVycyBhbmQvb3IgQWZmaWxpYXRlcywNCiANCmFuZC9vciB0aGUgb2ZmaWNlcnMsIGRpcmVjdG9ycywgcGFydG5lcnMsIHNoYXJlaG9sZGVycywgc3RvY2tob2xkZXJzLCBtZW1iZXJzLCBtYW5hZ2VycywgZW1wbG95ZWVzLCBhZ2VudHMsIHJlcHJlc2VudGF0aXZlcywgYW5kL29yIGNvbnRyYWN0b3JzLCBzdWJjb250cmFjdG9ycyAob2YgZXZlcnkgdGllcikgb2YgYW55IG9mIHRoZSBmb3JlZ29pbmcsIGFzIGEgcmVzdWx0LCBkaXJlY3RseSBvciBpbmRpcmVjdGx5LCBvZiBhbnkgYnJlYWNoIG9mIA0KYW55IFRyYW5zYWN0aW9uIERvY3VtZW50IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgUkVHQVJETEVTUyBPRiBDQVVTRX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCANCiwgcHJvdmlkZWQsIGhvd2V2ZXIgdGhhdCBLYXR5IEdyb3VwIHdpbGwgbm90IGJlIGluZGVtbmlmaWVkIHRvIHRoZSBleHRlbnQgb2YgdGhlIGdyb3NzIG5lZ2xpZ2VuY2UsIHdpbGxmdWwgbWlzY29uZHVjdCwgb3IgZnJhdWQgb2YgYW55IG1lbWJlciBvZiBLYXR5IEdyb3VwIGluIGNhdXNpbmcgc3VjaCBkYW1hZ2Ugb3IgbGlhYmlsaXR5Lg0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAyNS4yXHRhYn1LYXR5IHNoYWxsIGluZGVtbmlmeQ0KIEN1c3RvbWVyIEdyb3VwIGFnYWluc3QgYW55IENsYWltIHdoYXRzb2V2ZXIgb2NjdXJyaW5nIGluIGNvbm5lY3Rpb24gd2l0aCBvciByZWxhdGluZyBpbiBhbnkgd2F5IHRvIGFueSBicmVhY2ggb2YgYW55IFRyYW5zYWN0aW9uIERvY3VtZW50LCB0aGF0IHJlc3VsdHMgZnJvbSBvciBpcyByZWxhdGVkIHRvIGFueSBDbGFpbSBhc3NlcnRlZCBieSBhbiB0aGlyZCBwYXJ0eSwgcHVibGljIG9yIHByaXZhdGUsIHRoYXQgaXMgbm90IGEgcGFydHkgdG8gDQp0DQpoZSBDb25maXJtYXRpb24sIHdoZXJlIHN1Y2ggQ2xhaW0gaXMgc3VmZmVyZWQgYnkgdGhlIGNsYWltaW5nIFBlcnNvbiwgaXRzIHBhcnRuZXJzIGFuZC9vciBBZmZpbGlhdGVzLCBhbmQvb3IgdGhlIG9mZmljZXJzLCBkaXJlY3RvcnMsIHBhcnRuZXJzLCBzaGFyZWhvbGRlcnMsIHN0b2NraG9sZGVycywgbWVtYmVycywgbWFuYWdlcnMsIGVtcGxveWVlcywgYWdlbnRzLCByZXByZXNlbnRhdGl2ZXMsIGFuZC9vciBjb250cmFjdG9ycywgc3ViY29udHINCmFjdG9ycyAob2YgZXZlcnkgdGllcikgb2YgYW55IG9mIHRoZSBmb3JlZ29pbmcsIGFzIGEgcmVzdWx0LCBkaXJlY3RseSBvciBpbmRpcmVjdGx5LCBvZiBhbnkgYnJlYWNoIG9mIGFueSBUcmFuc2FjdGlvbiBEb2N1bWVudCB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGJcaVxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFJFR0FSRExFU1MgT0YgQ0FVU0V9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCAsIHByb3ZpZGVkLCBob3dldmVyLCB0aGF0IEN1c3RvbWVyIEdyb3VwIHdpbGwgbm90IGJlIGluZGVtbmlmaWVkIHRvIHRoZSBleHRlbnQgb2YgdGhlIGdyb3NzIG5lZ2xpZ2VuY2UsIHdpbGxmdWwgbWlzY29uZHVjdCwgb3IgZnJhdWQgb2YgYW55IG1lbWJlciBvZiBDdXN0b21lciBHcm91cCBpbiBjYXVzaW5nIHN1Y2ggZGFtYWdlIG9yIGxpYWJpbGl0eS4NClxwYXIge1wqXGJrbWtzdGFydCBfVG9jMzg4NzgwNjl9e1wqXGJrbWtzdGFydCBfVG9jMzkyMzk1NDJ9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk1IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGJcY2Fwc1xkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxNDU1NTkxNCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAyNi4wXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhcg0KXHM5NVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4NzIwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOVxvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0NTU1OTE0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxNDU1NTkxNCBMSU1JVEFUSU9OIE9GIExJQUJJTElUWXtcKlxia21rZW5kIF9Ub2MzODg3ODA2OX17XCpcYmtta2VuZCBfVG9jMzkyMzk1NDJ9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMzMVxxaiBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkODU5NzQzNSBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSANClxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkODU5NzQzNSBBTlkgUFJPVklTSU9OIE9GIEFOWSBUUkFOU0FDVElPTiBET0NVTUVOVCBUTyBUSEUgQ09OVFJBUlkgTk9UV0lUSFNUQU5ESU5HLCBJTiBOTyBFVkVOVCBXSUxMIEVJVEhFUiBQQVJUWSBFVkVSIEJFIExJQUJMRSBVTkRFUiBBTlkgVFJBTlNBQ1RJT04NCiBET0NVTUVOVCBGT1IgQ09OU0VRVUVOVElBTCwgSU5DSURFTlRBTCwgSU5ESVJFQ1QsIFBST1NQRUNUSVZFLCBQVU5JVElWRSwgU1BFQ0lBTCwgRVhFTVBMQVJZLCBPUiBPVEhFUiBTSU1JTEFSIERBTUFHRVMsIElOQ0xVRElORywgV0lUSE9VVCBMSU1JVEFUSU9OLCBMT1NUIFBST0ZJVFMsIExPU1MgT0YgT1BQT1JUVU5JVFkgT1IgUEVOQUxUSUVTIFVOREVSIEFOWSBPQkxJR0FUSU9OIFRPIEEgVEhJUkQgUEFSVFksIFdIRVRIRVIgU1VDSCBEQU1BRw0KRVMgQVJFIENMQUlNRUQgVU5ERVIgQSBCUkVBQ0ggT0YgQ09OVFJBQ1QsIEJSRUFDSCBPRiBXQVJSQU5UWSwgTkVHTElHRU5DRSwgR1JPU1MgTkVHTElHRU5DRSwgV0lMTEZVTCBNSVNDT05EVUNULCBTVFJJQ1QgTElBQklMSVRZLCBPUiBBTlkgT1RIRVIgVEhFT1JZIE9SIENBVVNFIE9GIEFDVElPTiBBVCBMQVcgT1IgSU4gRVFVSVRZLg0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2MzODg3ODA3MH17XCpcYmtta3N0YXJ0IF9Ub2MzOTIzOTU0M317XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTUgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcYlxjYXBzXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDE0NTU1OTE0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDI3LjBcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczk1XHFqIFxsaTBccmkwXHNhMjQwXGtlZXBuXHdpZGN0bHBhclxqY2xpc3R0YWJcdHg3MjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczM5XG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkODU5NzQzNSBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgXGJcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkMTQ1NTU5MTQgV0FJVkVSUyBBTkQgTk9OLVdBSVZFUiBPRiBGVVRVUkUgREVGQVVMVHtcKlxia21rZW5kIF9Ub2MzODg3ODA3MH17XCpcYmtta2VuZCBfVG9jMzkyMzk1NDN9DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMzMVxxaiBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluNzIwXGl0YXAwXHBhcmFyc2lkODU5NzQzNSBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgS2F0eSBzaGFsbCBoYXZlIHRoZSByaWdodCB0byB3YWl2ZSBhbnkgb25lIG9yIG1vcmUgc3BlY2lmaWMgZGVmYXVsdHMgYnkgQ3VzdG9tZXIgb2YgYW55IHByb3Zpc2lvbiBvZiBhbnkgVHJhbnNhY3Rpb24gRG9jdW1lbnQ7IH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaVxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IHByb3ZpZGVkLCBob3dldmVyDQp9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgLCB0aGF0IG5vIHN1Y2ggd2FpdmVyIHNoYWxsIG9wZXJhdGUgb3IgYmUgY29uc3RydWVkIGFzIGEgd2FpdmVyIG9mIGFueSBvdGhlciBleGlzdGluZyBvciBmdXR1cmUgZGVmYXVsdCBvciBkZWZhdWx0cywgd2hldGhlciBvZiBhIGxpa2Ugb3INCiBkaWZmZXJlbnQgY2hhcmFjdGVyLiBJbiBubyBldmVudCB3aWxsIHdhaXZlcnMgYmUgZ3JhbnRlZCBvciBkZW5pZWQgaW4gYW4gdW5kdWx5IGRpc2NyaW1pbmF0b3J5IG1hbm5lci4NClxwYXIge1wqXGJrbWtzdGFydCBfVG9jMzg4NzgwNzF9e1wqXGJrbWtzdGFydCBfVG9jMzkyMzk1NDR9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk1IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGJcY2Fwc1xkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxNDU1NTkxNCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAyOC4wXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhcg0KXHM5NVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4NzIwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOVxvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0NTU1OTE0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxNDU1NTkxNCBDSE9JQ0UgT0YgTEFXe1wqXGJrbWtlbmQgX1RvYzM4ODc4MDcxfXtcKlxia21rZW5kIF9Ub2MzOTIzOTU0NH0NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczMxXHFqIFxsaTcyMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQ4NTk3NDM1IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIA0KXGFiXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ4NTk3NDM1IFRIRSBUUkFOU0FDVElPTiBET0NVTUVOVFMgV0lMTCBCRSBHT1ZFUk5FRCBCWSBBTkQgQ09OU1RSVUVEIElOIEFDQ09SREFOQ0UgV0lUSCBUSEUgTEFXUyBPRiBUSEUgU1RBVEUgT0YgVEVYQVMgRVhDTFVESU5HIEFOWSBDT05GTElDVFMgT0YgTA0KQVcgUlVMRSBPUiBQUklOQ0lQTEUgV0hJQ0ggTUlHSFQgUkVGRVIgQ09OU1RSVUNUSU9OIFRPIFRIRSBMQVdTIE9GIEFOT1RIRVIgSlVSSVNESUNUSU9OLg0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2MzODg3ODA3Mn17XCpcYmtta3N0YXJ0IF9Ub2MzOTIzOTU0NX17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTUgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcYlxjYXBzXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDE0NTU1OTE0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDI5LjBcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyDQpcczk1XHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclxqY2xpc3R0YWJcdHg3MjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczM5XG91dGxpbmVsZXZlbDBcYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQ1NTU5MTQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDE0NTU1OTE0IExBV1MgQU5EIFJFR1VMQVRJT05Te1wqXGJrbWtlbmQgX1RvYzM4ODc4MDcyfXtcKlxia21rZW5kIF9Ub2MzOTIzOTU0NX0NClxwYXIge1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk3IFxydGxjaFxmY3MxIFxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGRiY2hcYWYwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgXGhpY2hcYWYwXGRiY2hcYWYwXGxvY2hcZjAgMjkuMVx0YWJ9fVxwYXJkXHBsYWluIFxsdHJwYXJcczk3XHFqIFxmaS03MjBcbGk3MjBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXGpjbGlzdHRhYlx0eDcyMFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGxzMzlcaWx2bDFcb3V0bGluZWxldmVsMVxhZGp1c3RyaWdodFxyaW4wXGxpbjcyMFxpdGFwMFxwYXJhcnNpZDE0NTU1OTE0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBLYXR5fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgDQpzIFNlcnZpY2VzIGFyZSBzdWJqZWN0IHRvIGFsbCBwcmVzZW50IGFuZCBmdXR1cmUgdmFsaWQgbGF3cywgcmVndWxhdGlvbnMsIGFuZCBsYXdmdWwgb3JkZXJzIG9mIGFsbCBnb3Zlcm5tZW50YWwgZW50aXRpZXMgbm93IG9yIA0KaGVyZWFmdGVyIGhhdmluZyBwcm9wZXIganVyaXNkaWN0aW9uIG92ZXIgc3VjaCBTZXJ2aWNlcyBhbmQvb3IgZmFjaWxpdGllcyB1c2VkIHRvIHByb3ZpZGUgc3VjaCBTZXJ2aWNlcywgaW5jbHVkaW5nLCB3aXRob3V0IGxpbWl0YXRpb24sIGFsbCBGRVJDIHJlZ3VsYXRpb25zIGltcGxlbWVudGluZyBTZWN0aW9uIDMxMSBvZiB0aGUgTkdQQS4gSW4gdGhlIGV2ZW50IEthdHkgb3IgQ3VzdG9tZXIsIGJ5IGZvcmNlIG9mIGFueSBzdWNoIGxhdywgcmVnDQp1DQpsYXRpb24gb3IgbGF3ZnVsIG9yZGVyIHdoaWNoIGJlY29tZXMgZWZmZWN0aXZlIGF0IGFueSB0aW1lIGR1cmluZyB0aGUgdGVybSBvZiB0aGUgVHJhbnNhY3Rpb24gRG9jdW1lbnQocyksIGJlIHJlbmRlcmVkIHVuYWJsZSwgd2hvbGx5IG9yIGluIHBhcnQsIHRvIGZ1bGZpbGwgaXRzIG9ibGlnYXRpb25zIHVuZGVyIGEgVHJhbnNhY3Rpb24gRG9jdW1lbnQgKG90aGVyIHRoYW4gdG8gbWFrZSBwYXltZW50cyB3aGVuIGR1ZSksIHN1Y2ggVHJhbnNhY3QNCmkNCm9uIERvY3VtZW50KHMpIG5ldmVydGhlbGVzcyBzaGFsbCBjb250aW51ZSBhbmQgc2hhbGwgYmUgZGVlbWVkIHRvIGJlIGF1dG9tYXRpY2FsbHkgbW9kaWZpZWQgdG8gY29uZm9ybSB3aXRoIHRoZSByZXF1aXJlbWVudHMgb2Ygc3VjaCBsYXcsIHJlZ3VsYXRpb24gYW5kL29yIG9yZGVyLCBzdWJqZWN0IHRvIHRoZSByZW1haW5pbmcgcG9ydGlvbiBvZiB0aGlzIFNlY3Rpb24uIFRoZSBpbnRlbnQgb2YgYW55IG1vZGlmaWNhdGlvbiB3aWxsIGJlIHRvIA0Kcg0KZXRhaW4sIHRvIHRoZSBncmVhdGVzdCBleHRlbnQgcG9zc2libGUsIHRoZSBiYXJnYWluIG9yaWdpbmFsbHkgc3RydWNrIGJldHdlZW4gS2F0eSBhbmQgQ3VzdG9tZXIgYW5kLCB0aGVyZWZvcmUsIHRoZSBUcmFuc2FjdGlvbiBEb2N1bWVudChzKSBzaGFsbCBiZSBtb2RpZmllZCB0byB0aGUgbGVhc3QgZXh0ZW50IG5lY2Vzc2FyeSB0byBjb25mb3JtIHRvIHRoZSByZWxldmFudCBsYXdzLCByZWd1bGF0aW9ucywgYW5kL29yIG9yZGVycy4gVGhlIE1hDQpzDQp0ZXIgU2VydmljZSBBZ3JlZW1lbnQgaXMgZXhwcmVzc2x5IG1hZGUgc3ViamVjdCB0byBhbnkgYW5kIGFsbCB0YXJpZmZzLCByYXRlIGZpbGluZ3MsIGFuZCBvdGhlciByZWd1bGF0b3J5IGFwcGxpY2F0aW9ucyBtYWRlIGJ5IEthdHkgYW5kIGFwcHJvdmVkIGJ5IGFueSBmZWRlcmFsIG9yIHN0YXRlIHJlZ3VsYXRvcnkgYm9keSwgYXMgc3VjaCBtYXkgYmUgYW1lbmRlZCwgbW9kaWZpZWQgb3IgcmVzdGF0ZWQgZnJvbSB0aW1lIHRvIHRpbWUuIEthdHkNCiBzaGFsbCBoYXZlIHRoZSByaWdodCB0byBwcm9wb3NlIHRvIEZFUkMgb3IgYW55IG90aGVyIHJlZ3VsYXRvcnkgYWdlbmN5IGFueSBjaGFuZ2UgaW4gdGVybXMgb2YgU2VydmljZSBhcyBLYXR5IGRlZW1zIG5lY2Vzc2FyeSBhdCBhbnkgdGltZSwgYW5kIEN1c3RvbWVyfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODUgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNjcwOTM4NCBzIFNlcnZpY2Ugc2hhbGwgYmUgZGVlbWVkIHRvIGluY2x1ZGUgYW55IHN1Y2ggY2hhbmdlIHRoYXQgaXMgbWFkZSBlZmZlY3RpdmUgcHVyc3VhbnQgdG8gbGF3LCByZWd1bGF0aW9uIGFuZC9vciBvcmRlciwgd2l0aG91dCBwcmVqdWRpY2UgdG8gQ3VzdG9tZXJ9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NSBccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IHMgcmlnaHQgdG8gcHJvdGVzdCBzdWNoIGNoYW5nZS4gSWYgdGhlIE9wZXJhdGluZyBTdGF0ZW1lbnQgaXMgZXZlciByZXZpc2VkLCBhIGNvcHkgb2Ygc3VjaCBGRVJDLWFwcHJvdmVkLCByZXZpc2VkIE9wZXJhdGluZyBTdGF0ZW1lbnQgd2lsbCBiZSBwcm92aWRlZCB0byBhbGwgQ3VzdG9tZXJzLg0KXHBhciB7XCpcYmtta3N0YXJ0IF9Ub2MzOTIzOTU0Nn17XCpcYmtta3N0YXJ0IF9Ub2MzODg3ODA3NH17XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTUgXHJ0bGNoXGZjczEgXGFiXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcYlxjYXBzXGRiY2hcYWYwXGluc3JzaWQzMDg0MjM0XGNoYXJyc2lkNDk5Mjg0NCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAzMC4wXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhcg0KXHM5NVxxaiBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcamNsaXN0dGFiXHR4NzIwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOVxvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDMwODQyMzQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWJcYWYwIFxsdHJjaFxmY3MwIFxiXGluc3JzaWQzMDg0MjM0XGNoYXJyc2lkNDk5Mjg0NCBBU1NJR05NRU5Ue1wqXGJrbWtlbmQgX1RvYzM5MjM5NTQ2fQ0KXHBhciB7XGxpc3R0ZXh0XHBhcmRccGxhaW5cbHRycGFyIFxzOTcgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMCBcbHRyY2hcZmNzMCBcZGJjaFxhZjBcaW5zcnNpZDMwODQyMzRcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMwLjFcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHM5N1xxaiBcZmktNzIwXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHg3MjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczM5XGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQzMDg0MjM0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgDQpcaW5zcnNpZDMwODQyMzRcY2hhcnJzaWQ2NzA5Mzg0IE5laXRoZXIgS2F0eSBub3IgQ3VzdG9tZXIgc2hhbGwgYXNzaWduIGFueSBUcmFuc2FjdGlvbiBEb2N1bWVudCB3aXRob3V0IHRoZSBvdGhlciBQYXJ0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMwODQyMzQgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzMDg0MjM0XGNoYXJyc2lkNjcwOTM4NCANCnMgcHJpb3Igd3JpdHRlbiBjb25zZW50LCB3aGljaCBzaGFsbCBub3QgYmUgdW5yZWFzb25hYmx5IHdpdGhoZWxkLiBJdCBzaGFsbCBiZSByZWFzb25hYmxlIGZvciBLYXR5IHRvIHdpdGhob2xkIGNvbnNlbnQgaWYgKGEpIHRoZSBDdXN0b21lciByZXF1ZXN0cyBjb25zZW50IHRvIGFzc2lnbiBsZXNzIHRoYW4gaXRzIGVudGlyZSANCmludGVyZXN0IGluIGEgQ29uZmlybWF0aW9uLCBvciAoYikgaWYgdGhlIHByb3Bvc2VkIGFzc2lnbmVlIGRvZXMgbm90IG1lZXQgS2F0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMwODQyMzQgXHJxdW90ZSB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzMDg0MjM0XGNoYXJyc2lkNjcwOTM4NCANCnMgY3JlZGl0IHJlcXVpcmVtZW50cyBhcyBkZXNjcmliZWQgaW4gdGhpcyBPcGVyYXRpbmcgU3RhdGVtZW50LiBOb3R3aXRoc3RhbmRpbmcgYW55dGhpbmcgaW4gdGhpcyBTZWN0aW9uIG9yIGluIGFueSBUcmFuc2FjdGlvbiBEb2N1bWVudCB0byB0aGUgY29udHJhcnksIGVpdGhlciBQYXJ0eSBtYXkgYXNzaWduLCB3aXRob3V0IHRoZSBvdGhlciBQYXJ0eX17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMwODQyMzQgDQpccnF1b3RlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMwODQyMzRcY2hhcnJzaWQ2NzA5Mzg0IHMgY29uc2VudCwgYW55IG9mIGl0cyByaWdodHMgdW5kZXIgdGhlIFRyYW5zYWN0aW9uIERvY3VtZW50KHMpIHRvIGFuIEFmZmlsaWF0ZTsgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpXGluc3JzaWQzMDg0MjM0XGNoYXJyc2lkNjcwOTM4NCBwcm92aWRlZCwgaG93ZXZlcn17XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMzA4NDIzNFxjaGFycnNpZDY3MDkzODQgLCB0aGF0IHRoZSBQYXJ0eSBzbyBhc3NpZ25pbmcgaXRzIHJpZ2h0cyBzaGFsbCBub3QgYmUgcmVsZWFzZWQgZnJvbSBpdHMgb2JsaWdhdGlvbnMgdW5kZXIgc3VjaCBUcmFuc2FjdGlvbiBEb2N1bWVudChzKS4gQW55IGFzc2lnbm1lbnQgb2YgYW55IFRyYW5zYWN0aW9uIERvY3VtZW50IHNoYWxsIGJlIGFjY29tcGxpc2hlZCBpbiBhY2NvcmRhbmNlIHdpdGggdGhlIH17DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzA4NDIzNCBcJzkzfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMzA4NDIzNFxjaGFycnNpZDY3MDkzODQgQXNzaWdubWVudH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMwODQyMzQgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMwODQyMzRcY2hhcnJzaWQ2NzA5Mzg0ICBhbmQgfXtccnRsY2hcZmNzMSANClxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzMDg0MjM0IFwnOTN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQzMDg0MjM0XGNoYXJyc2lkNjcwOTM4NCBUcmFuc2Zlcn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMwODQyMzQgXCc5NH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDMwODQyMzRcY2hhcnJzaWQ2NzA5Mzg0IA0KIHByb3Zpc2lvbnMgb2YgdGhlIHJlbGV2YW50IE1hc3RlciBTZXJ2aWNlIEFncmVlbWVudC4NClxwYXIge1wqXGJrbWtzdGFydCBfVG9jMzkyMzk1NDd9e1xsaXN0dGV4dFxwYXJkXHBsYWluXGx0cnBhciBcczk1IFxydGxjaFxmY3MxIFxhYlxhZjBcYWZzMjAgXGx0cmNoXGZjczAgXGJcY2Fwc1xkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxNDU1NTkxNCBcaGljaFxhZjBcZGJjaFxhZjBcbG9jaFxmMCAzMS4wXHRhYn19XHBhcmRccGxhaW4gXGx0cnBhclxzOTVccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyDQpcamNsaXN0dGFiXHR4NzIwXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cbHMzOVxvdXRsaW5lbGV2ZWwwXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0NTU1OTE0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhYlxhZjAgXGx0cmNoXGZjczAgDQpcYlxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxNDU1NTkxNCBERVNDUklQVElWRSBIRUFESU5HU3tcKlxia21rZW5kIF9Ub2MzODg3ODA3NH17XCpcYmtta2VuZCBfVG9jMzkyMzk1NDd9DQpccGFyIHtcbGlzdHRleHRccGFyZFxwbGFpblxsdHJwYXIgXHM5NyBccnRsY2hcZmNzMSBcYWYwXGFmczIwIFxsdHJjaFxmY3MwIFxkYmNoXGFmMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQ2NzA5Mzg0IFxoaWNoXGFmMFxkYmNoXGFmMFxsb2NoXGYwIDMxLjFcdGFifX1ccGFyZFxwbGFpbiBcbHRycGFyXHM5N1xxaiBcZmktNzIwXGxpNzIwXHJpMFxzYTI0MFx3aWRjdGxwYXINClxqY2xpc3R0YWJcdHg3MjBcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xsczM5XGlsdmwxXG91dGxpbmVsZXZlbDFcYWRqdXN0cmlnaHRccmluMFxsaW43MjBcaXRhcDBccGFyYXJzaWQxNDU1NTkxNCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIA0KXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgVGhlIGRlc2NyaXB0aXZlIGhlYWRpbmdzIG9mIHRoZSBwcm92aXNpb25zIG9mIHRoZSBUcmFuc2FjdGlvbiBEb2N1bWVudChzKSBhcmUgZm9ybXVsYXRlZCBhbmQgdXNlZCBmb3IgY29udmVuaWVuY2Ugb25seSBhbmQgc2hhbGwgbm90IGJlIGRlZW1lZCB0byBhZmZlY3QgdGhlIG1lYW5pbmcgb3IgY29uc3RydWN0aW9uIG9mIGFueSBzdWNoIHByb3Zpc2lvbi59e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1IA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxxbCBcbGkwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjBcaXRhcDBccGFyYXJzaWQxNDU1NTkxNCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGluc3JzaWQxNDU1NTkxNCANClxwYXIgXHNlY3QgfVxzZWN0ZCBcbHRyc2VjdFxwZ25yZXN0YXJ0XGxpbmV4MFxlbmRuaGVyZVxzZWN0bGluZWdyaWQzNjBcc2VjdGRlZmF1bHRjbFxzZWN0cnNpZDEwMDIxNjVcc2Z0bmJqIHtcZm9vdGVyciBcbHRycGFyIFxwYXJkXHBsYWluIFxsdHJwYXJcczU2XHFjIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhcg0KXHRxY1x0eDQ2ODBcdHFyXHR4OTM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDEwMDIxNjUgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwNDM1MTMyIA0KQXBwZW5kaXggQSAtIFBhZ2UgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwNDM1MTMyICBQQUdFICAgXFwqIE1FUkdFRk9STUFUIH19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxsYW5nMTAyNFxsYW5nZmUxMDI0XG5vcHJvb2ZcaW5zcnNpZDEwNDM1MTMyIDN9fX1cc2VjdGQgXGx0cnNlY3RcbGluZXgwXGVuZG5oZXJlXHNlY3RkZWZhdWx0Y2xcc2Z0bmJqIHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkMTA0MzUxMzIgIG9mIH17XGZpZWxke1wqXGZsZGluc3Qge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkMTA0MzUxMzIgIFNFQ1RJT05QQUdFUyAgXFwqIEFyYWJpYyAgXFwqIE1FUkdFRk9STUFUIH19e1xmbGRyc2x0IHtccnRsY2hcZmNzMSBcYWYwIA0KXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkMTI1MzE3NzkgM319fVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxMDQzNTEzMiANClxwYXIgfX1ccGFyZFxwbGFpbiBcbHRycGFyXHM0MlxxYyBcbGkwXHJpMFxzYTI0MFxrZWVwXGtlZXBuXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0NTU1OTE0IFxydGxjaFxmY3MxIFxhYlxhaVxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIA0KXGJcY2Fwc1xmczI0XHVsXGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhYjBcYWYwIFxsdHJjaFxmY3MwIFxiMFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxNDU1NTkxNCBBUFBFTkRJWCBcJzkzQVwnOTQNClxwYXIgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxNDk2MDIxMSBNRVRIT0QgT0YgTUVBU1VSRU1FTlQgLyBNRUFTVVJFTUVOVCBFUVVJUE1FTlQNClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczIyXHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0NTU1OTE0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcYlxjaGFyc2NhbGV4OTlcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkMTQ1NTU5MTQgQS5cdGFiIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcYlxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxNDU1NTkxNCBNRVRIT0QgT0YgTUVBU1VSRU1FTlQNClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczI0XHFqIFxmaS03MjBcbGkxNDQwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxNDU1NTkxNCBccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHsNClxydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDE0NTU1OTE0IDEuXHRhYiB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDY3MDkzODQgVW5pdCBvZiBNZWFzdXJlbWVudA0KXHBhciB9XHBhcmQgXGx0cnBhclxzMjRccWogXGZpLTcyMFxsaTIxNjBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMjE2MFxpdGFwMFxwYXJhcnNpZDE0NTU1OTE0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxNDU1NTkxNCAoYSlcdGFiIFRoZSB1bml0IG9mIG1lYXMNCnVyZW1lbnQgZm9yIHRoZSBwdXJwb3NlIG9mIFJlY2VpcHQgYW5kIERlbGl2ZXJ5IG9mIG5hdHVyYWwgR2FzIGZvciB0cmFuc3BvcnRhdGlvbiBvciBzdG9yYWdlIHNoYWxsIGJlIG9uZSAoMSkgTU1CdHUuDQpccGFyIChiKVx0YWIgVGhlIHVuaXQgb2Ygdm9sdW1lIGZvciB0aGUgcHVycG9zZSBvZiBtZWFzdXJlbWVudCBzaGFsbCBiZSBvbmUgKDEpIE1jZiBhdCBhIHByZXNzdXJlIG9mIGZvdXJ0ZWVuIGFuZCBzaXh0eS1maXZlIGh1bmRyZWR0aHMgcG91bmRzIHBlciBzcXVhcmUgaW5jaCBhYnNvbHV0ZSAoMTQuNjUgcHNpYSkgYW5kIGF0IGEgdGVtcGVyYXR1cmUgb2Ygc2l4dHkgZGVncmVlcyBGYWhyZW5oZWl0ICh9e1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcaW5zcnNpZDEwMjUyNTY5XGNoYXJyc2lkMTQ1NTU5MTQgNjB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHN1cGVyXGluc3JzaWQxMjUzMTc3OSBvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTAyNTI1NjkgXH59e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDE0NTU1OTE0IA0KRikgYW5kIHRoZSByZWFkaW5ncyBhbmQgcmVnaXN0cmF0aW9ucyBvZiB0aGUgbWV0ZXJpbmcgZXF1aXBtZW50IHNoYWxsIGJlIGNvbXB1dGVkIGludG8gc3VjaCB1bml0IG9mIHZvbHVtZXMgYXMgd2VsbCBhcyBNTUJ0dXMuDQpccGFyIH1ccGFyZCBcbHRycGFyXHMyNFxxaiBcZmktNzIwXGxpMTQ0MFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMTQ1NTU5MTQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDE0NTU1OTE0IDIuXHRhYiBCYXNpcw0KXHBhciB9XHBhcmQgXGx0cnBhclxzMjRccWogXGZpLTcyMFxsaTIxNjBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMjE2MFxpdGFwMFxwYXJhcnNpZDE0NTU1OTE0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxNDU1NTkxNCAoYSlcdGFiIEFsbCBvcmlmaWNlIG1ldGVyIHZvbHVtZXMgc2hhDQpsbCBiZSBjb21wdXRlZCBpbiBhY2NvcmRhbmNlIHdpdGggdGhlIEdhcyBNZWFzdXJlbWVudCBDb21taXR0ZWUgUmVwb3J0IE5vLiAzIG9mIHRoZSBBbWVyaWNhbiBOYXRpb25hbCBTdGFuZGFyZHMgSW5zdGl0dXRlIC8gQW1lcmljYW4gUGV0cm9sZXVtIEluc3RpdHV0ZSAoQU5TSS9BUEkpIDI1MzAgZGF0ZWQgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTAyNTI1NjlcY2hhcnJzaWQxNDU1NTkxNCBBdWd1c3R9ew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwMjUyNTY5IFx+fXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxNDU1NTkxNCAxOTkyIChoZXJlYWZ0ZXIgcmVmZXJyZWQgdG8gYXMgXCc5M0FHQSBSZXBvcnQgTm8uIDNcJzk0KSBhcyByZXByaW50ZWQgYW5kIHJldmlzZQ0KZCBmcm9tIHRpbWUgdG8gdGltZS4gSWYgcG9zaXRpdmUgZGlzcGxhY2VtZW50LCB1bHRyYSBzb25pYyBmbG93IG9yIHR1cmJpbmUgbWV0ZXJzIGFyZSB1c2VkLCBtZWFzdXJlbWVudCBzaGFsbCBiZSBwZXJmb3JtZWQgaW4gYWNjb3JkYW5jZSB3aXRoIEFHQSA3IGFzIGN1cnJlbnRseSBhdmFpbGFibGUgYW5kIHdpdGggYW55IHN1YnNlcXVlbnQgYW1lbmRtZW50cyB0aGVyZW9mIGFjY2VwdGVkIGFuZCBhZ3JlZWQgdXBvbiBiZXR3ZWVuIHRoZSBwYXJ0DQppZXMuDQpccGFyIChiKVx0YWIgDQpBbGwgb3JpZmljZSBtZXRlciB2b2x1bWVzIHNoYWxsIGJlIGNvcnJlY3RlZCBmb3IgZGV2aWF0aW9ucyBmcm9tIHRoZSBpZGVhbCBHYXMgbGF3cyAoc3VwZXJjb21wcmVzc2liaWxpdHkpIGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgQW1lcmljYW4gR2FzIEFzc29jaWF0aW9uIFBhciBSZXNlYXJjaCBQcm9qZWN0IE5YLTE5IENvbW1pdHRlZSBSZXBvcnQgb3IgQUdBIDgsIDIwMDMgb3IgQUdBIDksIDIwMDcsIG9yIEFHQSAxMSwgMjAwMyBkZQ0KdGFpbGVkIG9yIGdyb3NzIG9yIHRoZSBjdXJyZW50IGFjY2VwdGVkIHN0YW5kYXJkIGlmIG11dHVhbGx5IGFncmVlZCB1cG9uLiBXaGVyZSBkaXNwbGFjZW1lbnQgbWV0ZXJzIGFyZSB1c2VkLCB0aGUgc3F1YXJlIG9mIHRoZSBvcmlmaWNlIG1ldGVyIHN1cGVyY29tcHJlc3NpYmlsaXR5IGZhY3RvciBzaGFsbCBiZSBhcHBsaWVkLg0KXHBhciAoYylcdGFiIEZvciB0aGUgcHVycG9zZSBvZiBtZWFzdXJlbWVudCwgdGhlIGF2ZXJhZ2UgYWJzb2x1dGUgYXRtb3NwaGVyaWMgcHJlc3N1cmUgc2hhbGwgYmUgYXNzdW1lZCB0byBiZSAxNC42NSBwb3VuZHMgcGVyIHNxdWFyZSBpbmNoLg0KXHBhciB9XHBhcmQgXGx0cnBhclxzMjRccWogXGZpLTcyMFxsaTE0NDBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDE0NTU1OTE0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxNDU1NTkxNCAzLlx0YWIgRGV0ZXJtaW5hdGlvbiBvZiBGbG93aW5nIFRlbXBlcmF0dXJlIA0KXGVuZGFzaCAgVGhlIHRlbXBlcmF0dXJlIG9mIHRoZSBHYXMgZmxvd2luZyB0aHJvdWdoIGEgbWV0ZXIgc3RhdGlvbiBzaGFsbCBiZSBvYnRhaW5lZCBieSB0aGUgdXNlIG9mIGEgcmVjb3JkaW5nIHRoZXJtb21ldGVyLiBUaGUgdGVtcGVyYXR1cmUgb2YgdGhlIEdhcyBkdXJpbmcgdA0KaGUgbWVhc3VyZW1lbnQgcGVyaW9kIHNoYWxsIGJlIHVzZWQgaW4gY29tcHV0aW5nIHRoZSBRdWFudGl0aWVzIG9mIEdhcyBEZWxpdmVyZWQgZHVyaW5nIHN1Y2ggcGVyaW9kLg0KXHBhciA0Llx0YWIgQ2hyb21hdG9ncmFwaGljIEFuYWx5c2lzIFxlbmRhc2ggIFRoZSBIZWF0aW5nIFZhbHVlIGFuZCB0aGUgc3BlY2lmaWMgZ3Jhdml0eSBzaGFsbCBiZSBkZXRlcm1pbmVkIGJ5IG9uLWxpbmUgY2hyb21hdG9ncmFwaGljIGFuYWx5c2lzIG9mIHRoZSBHYXMgc3RyZWFtLiBUaGUgdmFsdWVzIG9mIHRoZSBwaHlzaWNhbCBjb25zdGFudHMgZm9yIHRoZSBHYXMgY29tcG91bmRzIGFuZCB0aGUgcHJvY2VkdXJlIGZvciBkZXRlcm1pbmluZ317DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ1NTU5MTRcY2hhcnJzaWQxNDU1NTkxNCAgfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxNDU1NTkxNCANCnRoZSBncm9zcyBIZWF0aW5nIFZhbHVlIGFuZC9vciB0aGUgc3BlY2lmaWMgZ3Jhdml0eSBvZiB0aGUgR2FzIGZyb20gdGhlbSBzaGFsbCBiZSBhcyBzZXQgZm9ydGggaW4gdGhlIHJlZmVyZW5jZWQgQUdBIFJlcG9ydCBOby4gMy4NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJcczIyXHFqIFxsaTBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDE0NTU1OTE0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMge1xydGxjaFxmY3MxIFxhZjAgDQpcbHRyY2hcZmNzMCBcYlxjaGFyc2NhbGV4OTlcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkMTQ1NTU5MTQgQi5cdGFiIE1FQVNVUkVNRU5UIE9GIEVRVUlQTUVOVA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMjRccWogXGZpLTcyMFxsaTE0NDBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMTQ0MFxpdGFwMFxwYXJhcnNpZDE0NTU1OTE0IFxydGxjaFxmY3MxIFxhZjBcYWZzMjBcYWxhbmcxMDI1IFxsdHJjaFxmY3MwIFxmczI0XGxhbmcxMDMzXGxhbmdmZTEwMzNcY2dyaWRcbGFuZ25wMTAzM1xsYW5nZmVucDEwMzMgew0KXHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkMTQ1NTU5MTQgMS5cdGFiIEluc3RhbGxhdGlvbiBhbmQgT3BlcmF0aW9uIG9mIE1lYXN1cmluZyBGYWNpbGl0aWVzIFxlbmRhc2ggDQogQWxsIG1lYXN1cmluZyBmYWNpbGl0aWVzIHNoYWxsIGJlIGluc3RhbGxlZCAoaWYgbmVjZXNzYXJ5KSwgb3duZWQsIG1haW50YWluZWQsIGFuZCBvcGVyYXRlZCwgYXQgb3IgbmVhciB0aGUgUmVjZWlwdCBQb2ludChzKSBhbmQgRGVsaXZlcnkgUG9pbnQocyksIGJ5IEthdHkuIFdoZXJlIHVzZWQsIG9yaWZpY2UgbWV0ZXJzIHNoYWxsIGVtcGxveSBmbGFuZ2UgdGFwcyBhbg0KZCBzaGFsbCBiZSBpbnN0YWxsZWQgYW5kIG9wZXJhdGVkIGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgcmVmZXJlbmNlZCBBR0EgUmVwb3J0IE5vLiAzLg0KXHBhciAyLlx0YWIgTm9uLWludGVyZmVyZW5jZSBcZW5kYXNoICBNZWFzdXJpbmcgZXF1aXBtZW50IGFwcGx5aW5nIHRvIG9yIGFmZmVjdGluZyBEZWxpdmVyaWVzIHNoYWxsIGJlIGluc3RhbGxlZCB3aXRoIHJlYXNvbmFibGUgY2FyZSBzbyBhcyB0byBwZXJtaXQgYW4gYWNjdXJhdGUgZGV0ZXJtaW5hdGlvbiBvZiB0aGUgUXVhDQpudGl0eSBvZiBHYXMgRGVsaXZlcmVkIGFuZCByZWFkeSB2ZXJpZmljYXRpb24gb2YgdGhlIGFjY3VyYWN5IG9mIG1lYXN1cmVtZW50LiBLYXR5IChhbmQsIGlmIGFwcGxpY2FibGUsIEN1c3RvbWVyKSBzaGFsbCBleGVyY2lzZSByZWFzb25hYmxlIGNhcmUgaW4gdGhlIGluc3RhbGxhdGlvbiwgbWFpbnRlbmFuY2UgYW5kIG9wZXJhdGlvbiBvZiBjaGVjayBtZWFzdXJpbmcgb3IgcHJlc3N1cmUgcmVndWxhdGluZyBlcXVpcG1lbnQgc28gYXMgdG8gcHINCmV2ZW50LCB0byB0aGUgZXh0ZW50IHByYWN0aWNhYmxlLCBhbnkgaW5hY2N1cmFjeSBpbiB0aGUgZGV0ZXJtaW5hdGlvbiBvZiB0aGUgUXVhbnRpdHkgb2YgR2FzIGJlaW5nIG1lYXN1cmVkLg0KXHBhciAzLlx0YWIgQ2FsaWJyYXRpb24gYW5kIFRlc3Qgb2YgTWVhc3VyZW1lbnQgRXF1aXBtZW50IFxlbmRhc2ggIFRoZSBhY2N1cmFjeSBvZiB0aGUgbWVhc3VyaW5nIGVxdWlwbWVudCwgc2hhbGwgYmUgdmVyaWZpZWQgYXQgcmVhc29uYWJsZSBpbnRlcnZhbHMgYnV0IG5vdCANCm1vcmUgb2Z0ZW4gdGhhbiBpcyBmb3VuZCBuZWNlc3NhcnkgaW4gcHJhY3RpY2UuIFRoZSBhY2N1cmFjeSBvZiBjaHJvbWF0b2dyYXBocyBzaGFsbCBiZSB2ZXJpZmllZCBhdCBsZWFzdCBvbmNlIGV2ZXJ5IHRoaXJ0eSAoMzApIEdhcyBEYXlzLg0KXHBhciA0Llx0YWIgQ29ycmVjdGlvbiBvZiBNZXRlciBFcnJvcnMgXGVuZGFzaCAgSWYsIHVwb24gdGVzdGluZywgdGhlIG1lYXN1cmluZyBlcXVpcG1lbnQgaXMgZm91bmQgdG8gYmUgaW4gZXJyb3IgYnkgbm90IG1vcmUgdGhhbiB0dw0KbyBwZXJjZW50ICgyJSksIHByZXZpb3VzIHJlY29yZGluZ3Mgb2Ygc3VjaCBlcXVpcG1lbnQgc2hhbGwgYmUgY29uc2lkZXJlZCBhY2N1cmF0ZSBpbiBjb21wdXRpbmcgRGVsaXZlcmllcywgYnV0IHN1Y2ggZXF1aXBtZW50IHNoYWxsIGJlIGFkanVzdGVkIGF0IG9uY2UgdG8gcmVjb3JkIGFjY3VyYXRlbHkuIElmLCB1cG9uIHRlc3RpbmcsIHRoZSBtZWFzdXJpbmcgZXF1aXBtZW50IHNoYWxsIGJlIGZvdW5kIHRvIGJlIGluYWNjdXJhdGUgYnkgYW4gDQphDQptb3VudCBleGNlZWRpbmcgdHdvIHBlcmNlbnQgKDIlKSwgYXQgYSByZWNvcmRpbmcgY29ycmVzcG9uZGluZyB0byB0aGUgYXZlcmFnZSBob3VybHkgcmF0ZSBvZiBmbG93IGZvciB0aGUgcGVyaW9kIHNpbmNlIHRoZSBsYXN0IHByZWNlZGluZyB0ZXN0LCB0aGVuIGFueSBwcmV2aW91cyByZWNvcmRpbmdzIG9mIHN1Y2ggZXF1aXBtZW50IHNoYWxsIGJlIGNvcnJlY3RlZCB0byB6ZXJvIGVycm9yIGZvciBhbnkgcGVyaW9kIHdoaWNoIGlzIGtub3duIGQNCmVmaW5pdGVseSBvciBhZ3JlZWQgdXBvbiwgYnV0IGluIHRoZSBjYXNlIG9mIHRoZSBwZXJpb2QgaXMgbm90IGtub3duIG9yIGFncmVlZCB1cG9uLCBzdWNoIGNvcnJlY3Rpb24gc2hhbGwgYmUgZm9yIGEgcGVyaW9kIGV4dGVuZGluZyBvdmVyIG9uZS1oYWxmIG9mIHRoZSB0aW1lIGVsYXBzZWQgc2luY2UgdGhlIGxhc3QgdGVzdCwgbm90IGV4Y2VlZGluZyBhIGNvcnJlY3Rpb24gcGVyaW9kIG9mIHNpeHRlZW4gKDE2KSBHYXMgRGF5cy4NClxwYXIgNS5cdGFiIEZhaWx1cmUgb2YgTWV0ZXIgXGVuZGFzaCAgSW4gdGhlIGV2ZW50IGEgbWV0ZXIgaXMgb3V0IG9mIHNlcnZpY2Ugb3IgcmVnaXN0ZXJpbmcgaW5hY2N1cmF0ZWx5LCB0aGUgUXVhbnRpdHkgb2YgR2FzIERlbGl2ZXJlZCBzaGFsbCBiZSBkZXRlcm1pbmVkOg0KXHBhciB9XHBhcmQgXGx0cnBhclxzMjRccWogXGZpLTcyMFxsaTIxNjBccmkwXHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMjE2MFxpdGFwMFxwYXJhcnNpZDE0NTU1OTE0IHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxNDU1NTkxNCAoYSlcdGFiIA0KQnkgY29ycmVjdGluZyB0aGUgZXJyb3IgaWYgdGhlIHBlcmNlbnRhZ2Ugb2YgZXJyb3IgaXMgYXNjZXJ0YWluYWJsZSBieSBjYWxpYnJhdGlvbiwgdGVzdHMgb3IgbWF0aGVtYXRpY2FsIGNhbGN1bGF0aW9uLCBvciBpbiB0aGUgYWJzZW5jZSBvZiBzdWNoIHBvc3NpYmxlIG1ldGhvZCBvZiBkZXRlcm1pbmluZyBEZWxpdmVyaWVzIGFzIHNldCBmb3J0aCBpbiBTZWN0aW9uIDUoYSk7IHRoZW4NClxwYXIgKGIpXHRhYiBCeSB1c2luZyB0aGUgcmVnaXN0cmF0aW9uIG9mIGFueSBjaGVjayBtZXRlciBvciBtZXRlcnMsIGlmIGluc3RhbGxlZCwgYW5kIGFjY3VyYXRlbHkgbWVhc3VyaW5nOyBvciBpbiB0aGUgYWJzZW5jZSBvZiBib3RoIHBvc3NpYmxlIG1ldGhvZHMgb2YgZGV0ZXJtaW5pbmcgRGVsaXZlcmllcyBhcyBzZXQgZm9ydGggaW4gU2VjdGlvbiA1KGEpIGFuZCA1KGIpOyB0aGVuDQpccGFyIChjKVx0YWIgQnkgZXN0aW1hdGluZyB0aGUgUXVhbnRpdHkgb2YgR2FzIERlbGl2ZXJlZCBhcyB0aGUgc2FtZSBRdWFudGl0eSBvZiBHYXMgRGVsaXZlcmVkIGR1cmluZyBwcmV2aW91cyBwZXJpb2RzIHVuZGVyIHNpbWlsYXIgY29uZGl0aW9ucyB3aGVuIHRoZSBtZXRlciB3YXMgcmVnaXN0ZXJpbmcgYWNjdXJhdGVseS4NClxwYXIgfVxwYXJkIFxsdHJwYXJcczI0XHFqIFxmaS03MjBcbGkxNDQwXHJpMFxzYTI0MFx3aWRjdGxwYXJcd3JhcGRlZmF1bHRcYXNwYWxwaGFcYXNwbnVtXGZhYXV0b1xhZGp1c3RyaWdodFxyaW4wXGxpbjE0NDBcaXRhcDBccGFyYXJzaWQxNDU1NTkxNCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkMTQ1NTU5MTQgNi5cdGFiIEVsZWN0cm9uaWMgRmxvdyBDb21wdXRlcnMgXGVuZGFzaCANCiBBIGNvbXB1dGVyLCB0cmFuc2R1Y2VyIGFuZCBvdGhlciBhc3NvY2lhdGVkIHNlbnNpbmcgZXF1aXBtZW50IHRoYXQgbWVldHMgZ2VuZXJhbGx5IGFjY2VwdGVkIGluZHVzdHJ5IHN0YW5kYXJkcyBhbmQgcHJhY3RpY2VzIHdpbGwgYmUgaW5zdGFsbGVkIGJ5IEthdHkgYW5kIHVzZWQgZm9yIHB1cnBvc2VzIG9mIG1lYXN1cmVtZW50IGluIGxpZXUgb2YgbWVjaGFuaWNhbCBtZWFzdXJpbmcgZXF1aXBtZW50IHdpdGggY2hhcnRzLiBUDQpoZSB2YWx1ZXMgZm9yIGdyb3NzIEhlYXRpbmcgVmFsdWUgYW5kIHNwZWNpZmljIGdyYXZpdHkgc2hhbGwgYmUgZW50ZXJlZCBhcyByZWFsLXRpbWUgZGF0YSBpZiB0aGF0IGRhdGEgaXMgYXZhaWxhYmxlLiBUaGUgdmFsdWVzIGZvciBjYXJib24gZGlveGlkZSBhbmQgbml0cm9nZW4gdXNlZCBpbiBzdXBlcmNvbXByZXNzaWJpbGl0eSBjb3JyZWN0aW9uIGRldGVybWluYXRpb25zIHNoYWxsIGJlIGVudGVyZWQgYXMgcmVhbC10aW1lIGRhdGEgaWYgdGgNCmF0IGRhdGEgaXMgYXZhaWxhYmxlIG9yIHNoYWxsIGJlIGVudGVyZWQgbWFudWFsbHksIGJ1dCBhdCBsZWFzdCBvbmNlIGVhY2ggc2l4ICg2KSBNb250aHMuDQpccGFyIDcuXHRhYiBXaGVyZSBtZWFzdXJpbmcgZmFjaWxpdGllcyBhcmUgaW5zdGFsbGVkLCBvd25lZCwgbWFpbnRhaW5lZCBhbmQgb3BlcmF0ZWQgYnkgdGhpcmQgcGFydHkgcGlwZWxpbmVzLCBhdCBvciBuZWFyIHRoZSBSZWNlaXB0IFBvaW50KHMpIGFuZCBEZWxpdmVyeSBQb2ludChzKSB0aGVuIHJlZmVyZW5jZSBpcyBtYWRlIHRvIHRoZSBhcHBsaWNhYmxlIHRoaXJkIHBhcnR5IHBpcGVsaW5lXHJxdW90ZSANCnMgdGFyaWZmIHdpdGggcmVnYXJkIHRvIG1lYXN1cmVtZW50IGVxdWlwbWVudC4NClxwYXIgfVxwYXJkXHBsYWluIFxsdHJwYXJccWwgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQ1NTU5MTQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTQ1NTU5MTRcY2hhcnJzaWQ2NzA5Mzg0IA0KXHBhciB9XHBhcmQgXGx0cnBhclxxYyBcbGkxOTM3XHJpMTM5N1xzYjY3XHNhMjQwXHdpZGN0bHBhclx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjEzOTdcbGluMTkzN1xpdGFwMFxwYXJhcnNpZDE1ODYwNjg1IHtccnRsY2hcZmNzMSBcYWYwXGFmczI0IFxsdHJjaFxmY3MwIFx1bFxpbnNyc2lkMTQ1NTU5MTQgXHNlY3QgfVxzZWN0ZCBcbHRyc2VjdA0KXHBnbnJlc3RhcnRcbGluZXgwXGVuZG5oZXJlXHNlY3RsaW5lZ3JpZDM2MFxzZWN0ZGVmYXVsdGNsXHNlY3Ryc2lkMTAwMjE2NVxzZnRuYmoge1xmb290ZXJyIFxsdHJwYXIgXHBhcmRccGxhaW4gXGx0cnBhclxzNTZccWMgXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHRxY1x0eDQ2ODBcdHFyXHR4OTM2MFx3cmFwZGVmYXVsdFxhc3BhbHBoYVxhc3BudW1cZmFhdXRvXGFkanVzdHJpZ2h0XHJpbjBcbGluMFxpdGFwMFxwYXJhcnNpZDEwMDIxNjUgDQpccnRsY2hcZmNzMSBcYWYwXGFmczIwXGFsYW5nMTAyNSBcbHRyY2hcZmNzMCBcZnMyNFxsYW5nMTAzM1xsYW5nZmUxMDMzXGNncmlkXGxhbmducDEwMzNcbGFuZ2ZlbnAxMDMzIHtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTA0MzUxMzIgQXBwZW5kaXggQiAtIFBhZ2UgfXtcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwNDM1MTMyICBQQUdFICAgXFwNCiogTUVSR0VGT1JNQVQgfX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkMTA0MzUxMzIgMn19fVxzZWN0ZCBcbHRyc2VjdFxsaW5leDBcZW5kbmhlcmVcc2VjdGRlZmF1bHRjbFxzZnRuYmoge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkMTA0MzUxMzIgIG9mIH0NCntcZmllbGR7XCpcZmxkaW5zdCB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcbGFuZzEwMjRcbGFuZ2ZlMTAyNFxub3Byb29mXGluc3JzaWQxMDQzNTEzMiAgU0VDVElPTlBBR0VTICBcXCogQXJhYmljICBcXCogTUVSR0VGT1JNQVQgfX17XGZsZHJzbHQge1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGxhbmcxMDI0XGxhbmdmZTEwMjRcbm9wcm9vZlxpbnNyc2lkMTI1MzE3NzkgMn19fVxzZWN0ZCBcbHRyc2VjdA0KXGxpbmV4MFxlbmRuaGVyZVxzZWN0ZGVmYXVsdGNsXHNmdG5iaiB7XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDEwNDM1MTMyIA0KXHBhciB9fVxwYXJkXHBsYWluIFxsdHJwYXJcczQyXHFjIFxsaTBccmkwXHNhMjQwXGtlZXBca2VlcG5cd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQ1NTU5MTQgXHJ0bGNoXGZjczEgXGFiXGFpXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgDQpcYlxjYXBzXGZzMjRcdWxcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFiMFxhZjAgXGx0cmNoXGZjczAgXGIwXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDE0NTU1OTE0IEFQUEVORElYIFwnOTNCXCc5NA0KXHBhciB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHVsdGhcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkMTQ5NjAyMTEgUVVBTElUWSBSRVFVSVJFTUVOVFN9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDE0OTYwMjExIA0KXHBhciB9XHBhcmRccGxhaW4gXGx0cnBhclxzMjJccWogXGxpMFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4wXGl0YXAwXHBhcmFyc2lkMTQ1NTU5MTQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7XHJ0bGNoXGZjczEgXGFmMCANClxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxNDk2MDIxMSBFeGNlcHQgYXMgb3RoZXJ3aXNlIHByb3ZpZGVkIGJlbG93LCBhbGwgbmF0dXJhbCBHYXMgRGVsaXZlcmVkIHRvIEthdHkgYXQgUmVjZWlwdCBQb2ludChzKSBhbmQgYWxsIG5hdHVyYWwgR2FzIERlbGl2ZXJlZCBieSBLYXR5IGF0IHRoZSBEZWxpdmVyeSBQb2ludChzKSBzaGFsbCBjb25mb3JtIHRvIHRoZSBmb2xsb3dpbmcgc3BlY2lmaWNhdGlvbnM6DQpccGFyIH1ccGFyZFxwbGFpbiBcbHRycGFyXHMyNFxxaiBcZmktNzIwXGxpMTQ0MFxyaTBcc2EyNDBcd2lkY3RscGFyXHdyYXBkZWZhdWx0XGFzcGFscGhhXGFzcG51bVxmYWF1dG9cYWRqdXN0cmlnaHRccmluMFxsaW4xNDQwXGl0YXAwXHBhcmFyc2lkMTQ1NTU5MTQgXHJ0bGNoXGZjczEgXGFmMFxhZnMyMFxhbGFuZzEwMjUgXGx0cmNoXGZjczAgXGZzMjRcbGFuZzEwMzNcbGFuZ2ZlMTAzM1xjZ3JpZFxsYW5nbnAxMDMzXGxhbmdmZW5wMTAzMyB7DQpccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxNDU1NTkxNCAxLlx0YWIgT3h5Z2VuIFxlbmRhc2ggIFRoZSBveHlnZW4gY29udGVudCBzaGFsbCBub3QgZXhjZWVkIHRlbiBwYXJ0DQpzIHBlciBtaWxsaW9uICgxMCBwcG0pIGJ5IHZvbHVtZSBvZiB1bmNvbWJpbmVkIG94eWdlbiBhbmQgZXZlcnkgcmVhc29uYWJsZSBlZmZvcnQgc2hhbGwgYmUgbWFkZSB0byBrZWVwIHRoZSBHYXMgRGVsaXZlcmVkIGZyZWUgb2Ygb3h5Z2VuOw0KXHBhciAyLlx0YWIgTGlxdWlkcyBcZW5kYXNoICBUaGUgR2FzIHNoYWxsIGJlIGZyZWUgb2Ygd2F0ZXIgYW5kIGh5ZHJvY2FyYm9ucyBpbiBsaXF1aWQgZm9ybSBhdCB0aGUgdGVtcGVyYXR1cmUgYW5kIHByZXNzdXJlIGF0IHdoaWNoIHQNCmhlIEdhcyBpcyBEZWxpdmVyZWQuIFRoZSBHYXMgc2hhbGwgaW4gbm8gZXZlbnQgY29udGFpbiB3YXRlciB2YXBvciBpbiBleGNlc3Mgb2Ygc2V2ZW4gKDcpIHBvdW5kcyBwZXIgbWlsbGlvbiBzdGFuZGFyZCBjdWJpYyBmZWV0Ow0KXHBhciAzLlx0YWIgSHlkcm9nZW4gfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTM4NDUyNzBcY2hhcnJzaWQxMzg0NTI3MCBTdWxmaWRlIH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkMTQ1NTU5MTQgXGVuZGFzaCANCiBUaGUgR2FzIHNoYWxsIG5vdCBjb250YWluIG1vcmUgdGhhbiB0d28gKDIpIGdyYWlucyBvZiB0b3RhbCBzdWxwaHVyIHBlciBvbmUgaHVuZHJlZCAoMTAwKSBjdWJpYyBmZWV0Lg0KXHBhciA0Llx0YWIgVG90YWwgU3VscGh1ciBcZW5kYXNoICBUaGUgR2FzIHNoYWxsIG5vdCBjb250YWluIG1vcmUgdGhhbiB0d28gKDIpIGdyYWlucyBvZiB0b3RhbCBzdWxwaHVyIHBlciBvbmUgaHVuZHJlZCAoMTAwIGN1YmljIGZlZXQ7DQpccGFyIDUuXHRhYiBDYXJib24gRGlveGlkZSBcZW5kYXNoICBUaGUgR2FzIHNoYWxsIG5vdCBoYXZlIGEgY2FyYm9uIGRpb3hpZGUgY29udGVudCBpbiBleGNlc3Mgb2YgdHdvIHBlcmNlbnQgKDIlKSBieSB2b2x1bWU7DQpccGFyIDYuXHRhYiBEdXN0LCBHdW1zLCBhbmQgU29saWQgTWF0dGVyIFxlbmRhc2ggDQogVGhlIEdhcyBzaGFsbCBiZSBjb21tZXJjaWFsbHkgZnJlZSBvZiBvYmplY3Rpb25hYmxlIG9kb3JzLCBkdXN0LCBndW1zLCBhbmQgZ3VtIGZvcm1pbmcgY29uc3RpdHVlbnRzLCBzb2xpZCBtYXR0ZXIsIGFuZCBhbnkgb3RoZXIgc3Vic3RhbmNlIHdoaWNoIGludGVyZmVyZXMgd2l0aCB0aGUgbWVyY2hhbnRhYmlsaXR5IG9mIHRoZSBHYXMsIG9yIGNhdXNlcyBpbnRlcmZlcmVuY2Ugd2l0aCB0aGUgcHJvcGVyIGFuZCBzYWZlIG9wZXJhdGlvbiANCm9mIHRoZSBwaXBlbGluZXMsIG1ldGVycywgcmVndWxhdG9ycyBhbmQgb3RoZXIgZmFjaWxpdGllcyB0aHJvdWdoIHdoaWNoIGl0IHdpbGwgZmxvdzsNClxwYXIgNy5cdGFiIEhlYXRpbmcgVmFsdWUgXGVuZGFzaCAgVGhlIEdhcyBzaGFsbCBjb250YWluIGFuIGF2ZXJhZ2UgaGVhdGluZyBjb250ZW50IG9mIG5vdCBsZXNzIHRoYW4gbmluZSBodW5kcmVkIGZpZnR5ICg5NTApIEJ0dXMgcGVyIGN1YmljIGZvb3Qgb3IgbW9yZSB0aGFuIGVsZXZlbiBodW5kcmVkICgxLDEwMCkgQnR1cyBwZXIgY3ViaWMgZm9vdDsNClxwYXIgOC5cdGFiIFRlbXBlcmF0dXJlIFxlbmRhc2ggIFRoZSBHYXMgc2hhbGwgYmUgRGVsaXZlcmVkIGF0IHRlbXBlcmF0dXJlcyBub3QgaW4gZXhjZXNzIG9mIG9uZSBodW5kcmVkIHR3ZW50eSBkZWdyZWVzIEZhaHJlbmhlaXQgKDEyMH17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcc3VwZXJcaW5zcnNpZDEyNTMxNzc5IG99e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXGluc3JzaWQxNTg2MDY4NVxjaGFycnNpZDE0NTU1OTE0IA0KIEYpLCBub3IgbGVzcyB0aGFuIGZvcnR5IGRlZ3JlZXMgRmFocmVuaGVpdCAoNDB9e1xydGxjaFxmY3MxIFxhZjAgXGx0cmNoXGZjczAgXHN1cGVyXGluc3JzaWQxMjUzMTc3OSBvfXtccnRsY2hcZmNzMSBcYWYwIFxsdHJjaFxmY3MwIFxpbnNyc2lkMTU4NjA2ODVcY2hhcnJzaWQxNDU1NTkxNCAgRik7DQpccGFyIDkuXHRhYiBOaXRyb2dlbiBcZW5kYXNoICBUaGUgbml0cm9nZW4gY29udGVudCBvZiB0aGUgR2FzIHNoYWxsIG5vdCBleGNlZWQgdGhyZWUgcGVyY2VudCAoMyUpIGJ5IHZvbHVtZS4gVG90YWwgaW5lcnRzIChOMiArQ08yICsgZXRjLikgc2hhbGwgbm90IGV4Y2VlZCBmb3VyIHBlcmNlbnQgKDQlKSBieSB2b2x1bWU7DQpccGFyIDEwLlx0YWIgSHlkcm9nZW4gXGVuZGFzaCAgVGhlIEdhcyBzaGFsbCBjb250YWluIG5vIGNhcmJvbiBtb25veGlkZSwgaGFsb2dlbnMsIG9yIHVuc2F0dXJhdGVkIGh5ZHJvY2FyYm9ucywgYW5kIG5vIG1vcmUgdGhhbiBmb3VyIGh1bmRyZWQgcGFydHMgcGVyIG1pbGxpb24gKDQwMCBwcG0pIGJ5IHZvbHVtZSBvZiBoeWRyb2dlbjsgYW5kDQpccGFyIDExLlx0YWIgTmVvcGVudGFuZSBcZW5kYXNoICBUaGUgR2FzIHNoYWxsIGNvbnRhaW4gbm90IG1vcmUgdGhhbiB0d28tdGVudGhzICgwLjIpIGdhbGxvbnMgb2YgbmVvcGVudGFuZSBvciBoZWF2aWVyIGxpcXVlZmlhYmxlIGh5ZHJvY2FyYm9ucyBwZXIgTWNmLn17XHJ0bGNoXGZjczEgXGFmMCBcbHRyY2hcZmNzMCBcaW5zcnNpZDE1ODYwNjg1XGNoYXJyc2lkNTI2Njc4MyANClxwYXIgfXtcKlx0aGVtZWRhdGEgNTA0YjAzMDQxNDAwMDYwMDA4MDAwMDAwMjEwMGU5ZGUwZmJmZmYwMDAwMDAxYzAyMDAwMDEzMDAwMDAwNWI0MzZmNmU3NDY1NmU3NDVmNTQ3OTcwNjU3MzVkMmU3ODZkNmNhYzkxY2I0ZWMzMzAxMDQ1Zjc0OGZjODNlNTJkNGENCjljYjI0MDA4MjVlOTgyYzc4ZWM3YTI3Y2MwYzg5OTI0MTZjOWQ4YjJhNzU1ZmJmNzRjZDI1NDQyYTgyMDE2NmMyY2Q5MzNmNzllM2JlMzcyYmQxZjA3YjVjMzk4OWNhNzRhYWZmMjQyMmIyNGViMWI0NzVkYTVkZjM3NGZkOWFkDQo1Njg5ODExYTE4M2M2MWE1MGY5OGY0YmFiZWJjMjgzNzg3ODA0OTg5OWE1MmE1N2JlNjcwNjc0Y2IyM2Q4ZTkwNzIxZjkwYTRkMmZhMzgwMmNiMzU3NjI2ODBmZDgwMGVjZDc1NTFkYzE4ZWI4OTkxMzhlM2M5NDNkN2U1MDNiNg0KYjAxZDU4M2RlZWU1Zjk5ODI0ZTI5MGI0YmEzZjM2NGVhYzRhNDMwODgzYjNjMDkyZDRlY2E4Zjk0NmM5MTY0MjJlY2FiOTI3ZjUyZWE0MmI4OWExY2Q1OWMyNTRmOTE5YjBlODVlNjUzNWQxMzVhOGRlMjBmMjBiOGMxMmMzYjANCjBjODk1ZmNmNjcyMDE5MmRlNmJmM2I5ZTg5ZWNkYmQ2NTk2Y2JjZGQ4ZWIyOGU3YzM2NWVjYzRlYzFmZjE0NjBmNTNmZTgxM2QzY2M3ZjViN2YwMjAwMDBmZmZmMDMwMDUwNGIwMzA0MTQwMDA2MDAwODAwMDAwMDIxMDBhNWQ2DQphN2U3YzAwMDAwMDAzNjAxMDAwMDBiMDAwMDAwNWY3MjY1NmM3MzJmMmU3MjY1NmM3Mzg0OGZjZjZhYzMzMDBjODdlZjg1YmQ4M2QxN2Q1MWQyYzMxODI1NzYyZmE1OTA0MzJmYTM3ZDAwZTEyODdmNjgyMjFiZGIxYmViZGI0Zg0KYzcwNjBhYmIwODg0YTRlZmY3YTkzZGZlYWU4YmY5ZTE5NGU3MjAxNjlhYWEwNmMzZTI0MzNmY2I2OGUxNzYzZGJmN2Y4MmM5ODVhNGE3MjUwODViNzg3MDg2YTM3YmRiYjU1ZmJjNTBkMWEzM2NjZDMxMWJhNTQ4YjYzMDk1MTINCjBmODhkOTRmYmM1MmFlNDI2NGQxYzkxMGQyNGE0NWRiMzQ2MjI0N2ZhNzkxNzE1ZmQ3MWY5ODllMTllMDM2NGNkM2Y1MTY1MmQ3Mzc2MGFlOGZhOGM5ZmZiM2MzMzBjYzllNGZjMTdmYWYyY2U1NDUwNDZlMzc5NDRjNjllNDYyDQphMWE4MmZlMzUzYmQ5MGE4NjVhYWQ0MWVkMGI1YjhmOWQ2ZmQwMTAwMDBmZmZmMDMwMDUwNGIwMzA0MTQwMDA2MDAwODAwMDAwMDIxMDA2Yjc5OTYxNjgzMDAwMDAwOGEwMDAwMDAxYzAwMDAwMDc0Njg2NTZkNjUyZjc0Njg2NQ0KNmQ2NTJmNzQ2ODY1NmQ2NTRkNjE2ZTYxNjc2NTcyMmU3ODZkNmMwY2NjNGQwYWMzMjAxMDQwZTE3ZGExNzc5MGQ5Mzc2M2JiMjg0NTYyYjJjYmFlYmJmNjAwNDM5YzFhNDFjN2EwZDI5ZmRiZDdlNWUzODMzN2NlZGYxNGQ1OWINCjRiMGQ1OTJjOWMwNzBkOGE2NWNkMmU4OGI3ZjA3YzJjYTcxYmE4ZGE0ODFjYzUyYzZjZTFjNzE1ZTZlOTc4MThjOWI0OGQxM2RmNDljODczNTE3ZDIzZDU5MDg1YWRiNWRkMjBkNmI1MmJkNTIxZWYyY2RkNWViOTI0NmEzZDhiDQo0NzU3ZThkM2Y3MjllMjQ1ZWIyYjI2MGEwMjM4ZmQwMTAwMDBmZmZmMDMwMDUwNGIwMzA0MTQwMDA2MDAwODAwMDAwMDIxMDA5YTZjNDY4YTlhMDQwMDAwYWIwZjAwMDAxNjAwMDAwMDc0Njg2NTZkNjUyZjc0Njg2NTZkNjUyZg0KNzQ2ODY1NmQ2NTMxMmU3ODZkNmNjYzU3Y2I2ZWViMzYxMGRkMTdlODNmMDhkYzJiZDZmYjYxYzRiOTUwNjQxOTVkZGNhMjQwOWRhMjZiNDZlZjFiNGEzMjQ0M2E4OTcxOTE3ZmVmOTA5NDY0Y2E3NjlhMDdiMmI4NWU0OWUzMzMNCmMzYzM5OWUxMTllYWZhZGI3MzQzYjRjN2JjYTc3NWQ3YWU5MDc5NjUyMDJkNmZkMzJlYWJkYjcyODVmZWI5ZGJlODAxZDIyOGMzNmQ4NjQ5ZDdlNjJiNzRjODI5ZmE3NmYzZmI2ZmQ3NzhjOWFhYmNjOTM1ZjA2ZmU5MTJhZjUwDQpjNWQ4NmViOTU4ZDAxNGNjOTg1ZTc1YmJiYzg1ZmY4YWFlNmYzMDgzZDdiZTVjNjQzZDdlODJiODBkNTk1ODg2ZTEyZDFhNWNiNzQ4NmI3MTAzNjFiNzA0YjMxY2RkOGM1MTEzMDJhMTViNDZiOTIxMjVmZDk2YzdjY2NmYTBkOQ0KODNjOTAxZjQ0MDYzZDI2YjhmOThhYzEwYzRjZmJhYTdiYmZjOTkyMThkNjBjYWUwOGYxNTMyYzQwZjJkNmVhZTE3NzgzOTM4MTFmNjhhYWZlMmI3MTFiZmMxNmY3MGM4MWUyY2IxNjY1ZmRlNGY4YjNhOGVlYjc4ZDExNDVmMDANCjA4M2JjNzI1N2VlMjI1ZGUxNDRmMDA3MDlhYzI0NjI1MTczNWE2NmRkYjg5MTMwYzU4MDUyNDFmY2Y2M2FmODNiNTE5OGYxYzE0OTA3Y2I0Y2YzODFiODY2MzRlOWMxNTkwN2M3NGNlZjBiZWU5NWJiZTM5ZTMyMzQwMTJlZjllDQplMTM3ZGUzYTcyOGMxOTVlODAyNGRlM2JjM2ZiNzExODQ0YjczM2JjMDA1NWE0NmUxZmNlZDA4NmViZDlmMWM4NjY4MjE0MWRmOWUzMjIzYzc0OWQ4ZDZmMGRjMThmMjhlODg2YTliOWY4MTI0NWQ3YjI1OWFiZmRkNWY3NzVmYQ0KYTA2ZGMwOGUzOGEwYzEzZmJhOWViZmYxMTdlOGQ4YmFkNWQ4NjE5NzE3Mzg4NTE2OGVmYTFhMTNiZTA2NWVlNjU4YjE0YjUzNGE0ZjRjYjBmODJjNWM1M2I3NWYxYWZiMTgwZTU2M2FlZTRjZWNiMzM5ZDk2NjUxZDRhOTNjN2QNCjQ1NGRjODk2MWQ0OGZlOWQ4YTRkZDI4ZWQ0ZDkwNjhjZGM0ZjFjZWQ3YzZhZmI1ZDA1OGY0MzUyNjdiOGIyYzdjMjQ3ZWIzYmY2NmZjZGFhNmQ4NTc3OTAyMDUzZTRiMGE0NDNlODkyNmFiYjhlYzJlOTE0ZTY4YmIxNDU5YWY3DQpjZDlmNWQyNjRmYjc2OWYyOTMyYzEzNGEzMTNiZGEwZDc3YjI0MzUxOTg0NDdiZmU2MDg0MDQ0Y2UxODUwNjk0NDI1ODQ2MDJkY2Y3MjMyNDk0YzVlNjI0ZWMwYjI0ZmNkMWY4MDYwOWIxYjMyZjYxMTE1ZTYwMTFmMGYwNjNhOQ0KODQ5ODQyZTlhNjU0MDBiNWE5MmE3MDdlMzRjY2I1ZGY3NWMwMDU5YzM0OWE2MjkyNjdiYzRlNTI0MGM3ZWFmMmUyOGNjZjVmNTJlOWQ3OTI0OWQ0MGUzMDYwNzQwYzFkNzBhYzc0YzhiOWJlYmEzZGJlM2JkOTZhZWZhOGY0OGMNCjg0ZDI2ZTczMTIyMjMzZTJhOGQzMGE2N2Y5ZDA5ZGRjZmExZTFhMWZhZDc1NzgyY2U5OGMxZTRmYzU5MDBiODU4NjFmZmMxZjhiY2ZkNjFhZmM0ZWI1ODFiNGFhNTI5MDU2N2I1YTIxY2Y3NmExNjU1MmJjNWJhMTAyMDQxMjFlDQo5YjFkZjQwZTZkNGJhNDYxNTJjMjE1MjM2NWJkM2NmMDlmNTE5NjVkNGZkOTFhZDM0YTI2NWM4ODhlNTQ4M2E2NjY3OWFmOTFiYTU5MjFiZWZkYTkwY2E0MTUxYTIyYjg5OTE2MDhjMjJmNGIyZTA0NTlmOWQ1Yzg0MWQxZTc0NQ0KY2U4YjIyNGY5OTVhNzZjNWMyMzMyZDVmNDFlMWE1NTY1Y2ZjNTdiODdmMWVjYzNkYmIzZDk0N2I1YjY1NGZkYTNkZDlmNzdmNjM2ODMxZDczNzc5MDJiMzlhMzIxODM1MzI5YjU5MGRiN2JmNDljODhlZmQ3NzIyNTc4M2VjYWENCmQ3MmZkMTQzZDI4ZWM5YWVjMmMzNDQ1MWM1NWNjMjg1ODg0ZTc0YzRkYjk0MDNlNTZkZDgzMzI0NTQ0OWM5MzAwOGVmNGIzZTYwZDVhNGNlYTZlOTM0YmEyNDg3NTdhN2VlZGI0ZTNjNzM4YTY4MWU2N2U2NGM1NWY4ZDRiY2FjDQo2MmIzMTViZTU0ZmExNTU2NjM4YTYxNjZhYjEzNWU0YWY3YTllNDg2YTNkNjQxYTM1ZTljMTI5MGYwMjk3ZmQzYmNmYmQwNDA1MGE4MWQxNzliNTFlMzhjY2Y2NTk4NmJmNjYwOWQ1MzFiMzdmODA2YjVmNzBjMDk0NWY1YmQzMQ0KZWM0OWRlYTYxOTcxNzEzOTMwN2U2YWYyODNkZjY5ZDc4MmE5MThlZjk1MjJkM2UyZjM1MGZkOTBlYmVlN2Y4MDc4YWNlMWJhYmMyNzhjOGE1MmMyNzc1YThmZTEyYWIyMTU3NzEyMjkxYjcwNDQ5ZWQ5NzAzNGUwNDlkYmY3ZjUNCjBhZmQzNGRjYzg4OTJkMzdkNjhkYzA0ZDc0Yzc3NjBjM2Q3MDIzNWI4ZjVjZDczNjEzZDczNGQ2YjdkNjBiMGMxNjU2MzVhNjJiM2Y0ZDM3YjhhOWM5NjFmODQwMTVmNmIzOGZkNGE2NGVmYjhlNzYwNWJiNGFiYjY2ZDE4OTdiDQpmMDQyMTAxNzFmYTlhNjM1ZmY0OGZkMWVkZDI1NDhhYjQxNmQ3ZTVhNzBhNTcyNDMyMDEwYmJkZTQ2NzdiYzIwZDAyM2RmNThlYmExMTNkYTUxMTg5YjQ5OTBjNDJmNDg3YjE0NjBkYmJkOGQ2MjMzYjY3NDYzNzMxYjAyZjkzNQ0KZjA0ZWQ2ODk5ZTA0YjY2NTE5ZDFjNjM3YWRmNWNiNzA3ZjgxMmQ0YmRkMTg5MjAwNzkxNTg0NmVmZTAzMDAwMGZmZmYwMzAwNTA0YjAzMDQxNDAwMDYwMDA4MDAwMDAwMjEwMDBkZDE5MDlmYjYwMDAwMDAxYjAxMDAwMDI3MDANCjAwMDA3NDY4NjU2ZDY1MmY3NDY4NjU2ZDY1MmY1ZjcyNjU2YzczMmY3NDY4NjU2ZDY1NGQ2MTZlNjE2NzY1NzIyZTc4NmQ2YzJlNzI2NTZjNzM4NDhmNGQwYWMyMzAxNDg0Zjc4Mjc3MDg2ZjZmZDNiYTEwOTEyNmRkODhkMGFkDQpkNDAzODRlNDM1MGQzNjNmMjQ1MWVjZWQwZGFlMmMwODJlODc2MWJlOTk2OWJiOTc5ZGM5MTM2MzMyZGUzMTY4YWExYTA4M2FlOTk1NzE5YWMxNmRiOGVjOGU0MDUyMTY0ZTg5ZDkzYjY0YjA2MDgyOGU2ZjM3ZWQxNTY3OTE0Yg0KMjg0ZDI2MjQ1MjI4MmUzMTk4NzIwZTI3NGE5MzljZDA4YTU0Zjk4MGFlMzhhMzhmNTZlNDIyYTNhNjQxYzhiYmQwNDhmNzc1N2RhMGYxOWIwMTdjYzUyNGJkNjIxMDdiZDUwMDE5OTY1MDlhZmZiM2ZkMzgxYTg5NjcyZjFmMTYNCjVkZmU1MTQxNzNkOTg1MDUyOGEyYzZjY2UwMjM5YmFhNGMwNGNhNWJiYWJhYzRkZjAwMDAwMGZmZmYwMzAwNTA0YjAxMDIyZDAwMTQwMDA2MDAwODAwMDAwMDIxMDBlOWRlMGZiZmZmMDAwMDAwMWMwMjAwMDAxMzAwMDAwMDAwDQowMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDViNDM2ZjZlNzQ2NTZlNzQ1ZjU0Nzk3MDY1NzM1ZDJlNzg2ZDZjNTA0YjAxMDIyZDAwMTQwMDA2MDAwODAwMDAwMDIxMDBhNWQ2YTdlN2MwMDAwMDAwMzYwMTAwMDAwYjAwMDAwMA0KMDAwMDAwMDAwMDAwMDAwMDAwMDAzMDAxMDAwMDVmNzI2NTZjNzMyZjJlNzI2NTZjNzM1MDRiMDEwMjJkMDAxNDAwMDYwMDA4MDAwMDAwMjEwMDZiNzk5NjE2ODMwMDAwMDA4YTAwMDAwMDFjMDAwMDAwMDAwMDAwMDAwMDAwMDANCjAwMDAwMDE5MDIwMDAwNzQ2ODY1NmQ2NTJmNzQ2ODY1NmQ2NTJmNzQ2ODY1NmQ2NTRkNjE2ZTYxNjc2NTcyMmU3ODZkNmM1MDRiMDEwMjJkMDAxNDAwMDYwMDA4MDAwMDAwMjEwMDlhNmM0NjhhOWEwNDAwMDBhYjBmMDAwMDE2DQowMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGQ2MDIwMDAwNzQ2ODY1NmQ2NTJmNzQ2ODY1NmQ2NTJmNzQ2ODY1NmQ2NTMxMmU3ODZkNmM1MDRiMDEwMjJkMDAxNDAwMDYwMDA4MDAwMDAwMjEwMDBkZDE5MDlmYjYwMDAwMDAxYg0KMDEwMDAwMjcwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGE0MDcwMDAwNzQ2ODY1NmQ2NTJmNzQ2ODY1NmQ2NTJmNWY3MjY1NmM3MzJmNzQ2ODY1NmQ2NTRkNjE2ZTYxNjc2NTcyMmU3ODZkNmMyZTcyNjU2YzczNTA0YjA1MDYwMDAwMDAwMDA1MDAwNTAwNWQwMTAwMDA5ZjA4MDAwMDAwMDB9DQp7XCpcY29sb3JzY2hlbWVtYXBwaW5nIDNjM2Y3ODZkNmMyMDc2NjU3MjczNjk2ZjZlM2QyMjMxMmUzMDIyMjA2NTZlNjM2ZjY0Njk2ZTY3M2QyMjU1NTQ0NjJkMzgyMjIwNzM3NDYxNmU2NDYxNmM2ZjZlNjUzZDIyNzk2NTczMjIzZjNlMGQwYTNjNjEzYTYzNmM3MjRkDQo2MTcwMjA3ODZkNmM2ZTczM2E2MTNkMjI2ODc0NzQ3MDNhMmYyZjczNjM2ODY1NmQ2MTczMmU2ZjcwNjU2ZTc4NmQ2YzY2NmY3MjZkNjE3NDczMmU2ZjcyNjcyZjY0NzI2MTc3Njk2ZTY3NmQ2YzJmMzIzMDMwMzYyZjZkNjE2OQ0KNmUyMjIwNjI2NzMxM2QyMjZjNzQzMTIyMjA3NDc4MzEzZDIyNjQ2YjMxMjIyMDYyNjczMjNkMjI2Yzc0MzIyMjIwNzQ3ODMyM2QyMjY0NmIzMjIyMjA2MTYzNjM2NTZlNzQzMTNkMjI2MTYzNjM2NTZlNzQzMTIyMjA2MTYzNjMNCjY1NmU3NDMyM2QyMjYxNjM2MzY1NmU3NDMyMjIyMDYxNjM2MzY1NmU3NDMzM2QyMjYxNjM2MzY1NmU3NDMzMjIyMDYxNjM2MzY1NmU3NDM0M2QyMjYxNjM2MzY1NmU3NDM0MjIyMDYxNjM2MzY1NmU3NDM1M2QyMjYxNjM2MzY1NmU3NDM1MjIyMDYxNjM2MzY1NmU3NDM2M2QyMjYxNjM2MzY1NmU3NDM2MjIyMDY4NmM2OTZlNmIzZDIyNjg2YzY5NmU2YjIyMjA2NjZmNmM0ODZjNjk2ZTZiM2QyMjY2NmY2YzQ4NmM2OTZlNmIyMjJmM2V9DQp7XCpcbGF0ZW50c3R5bGVzXGxzZHN0aW1heDM3Nlxsc2Rsb2NrZWRkZWYwXGxzZHNlbWloaWRkZW5kZWYwXGxzZHVuaGlkZXVzZWRkZWYwXGxzZHFmb3JtYXRkZWYwXGxzZHByaW9yaXR5ZGVmOTl7XGxzZGxvY2tlZGV4Y2VwdCBcbHNkcHJpb3JpdHkwIFxsc2Rsb2NrZWQwIE5vcm1hbDtcbHNkcWZvcm1hdDEgXGxzZGxvY2tlZDAgaGVhZGluZyAxO1xsc2RxZm9ybWF0MSBcbHNkbG9ja2VkMCBoZWFkaW5nIDI7DQpcbHNkcWZvcm1hdDEgXGxzZGxvY2tlZDAgaGVhZGluZyAzO1xsc2RzZW1paGlkZGVuMSBcbHNkcWZvcm1hdDEgXGxzZGxvY2tlZDAgaGVhZGluZyA0O1xsc2RzZW1paGlkZGVuMSBcbHNkcWZvcm1hdDEgXGxzZGxvY2tlZDAgaGVhZGluZyA1O1xsc2RzZW1paGlkZGVuMSBcbHNkcWZvcm1hdDEgXGxzZGxvY2tlZDAgaGVhZGluZyA2O1xsc2RzZW1paGlkZGVuMSBcbHNkcWZvcm1hdDEgXGxzZGxvY2tlZDAgaGVhZGluZyA3Ow0KXGxzZHNlbWloaWRkZW4xIFxsc2RxZm9ybWF0MSBcbHNkbG9ja2VkMCBoZWFkaW5nIDg7XGxzZHNlbWloaWRkZW4xIFxsc2RxZm9ybWF0MSBcbHNkbG9ja2VkMCBoZWFkaW5nIDk7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBpbmRleCAxO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgaW5kZXggMjsNClxsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgaW5kZXggMztcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIGluZGV4IDQ7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBpbmRleCA1O1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgaW5kZXggNjsNClxsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgaW5kZXggNztcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIGluZGV4IDg7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBpbmRleCA5O1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZHByaW9yaXR5MzkgXGxzZGxvY2tlZDAgdG9jIDE7DQpcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rwcmlvcml0eTM5IFxsc2Rsb2NrZWQwIHRvYyAyO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZHByaW9yaXR5MzkgXGxzZGxvY2tlZDAgdG9jIDM7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkcHJpb3JpdHkzOSBcbHNkbG9ja2VkMCB0b2MgNDsNClxsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZHByaW9yaXR5MzkgXGxzZGxvY2tlZDAgdG9jIDU7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkcHJpb3JpdHkzOSBcbHNkbG9ja2VkMCB0b2MgNjtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rwcmlvcml0eTM5IFxsc2Rsb2NrZWQwIHRvYyA3Ow0KXGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkcHJpb3JpdHkzOSBcbHNkbG9ja2VkMCB0b2MgODtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rwcmlvcml0eTM5IFxsc2Rsb2NrZWQwIHRvYyA5O1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgTm9ybWFsIEluZGVudDtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIGZvb3Rub3RlIHRleHQ7DQpcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIGFubm90YXRpb24gdGV4dDtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIGhlYWRlcjtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIGZvb3RlcjtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIGluZGV4IGhlYWRpbmc7DQpcbHNkc2VtaWhpZGRlbjEgXGxzZHFmb3JtYXQxIFxsc2Rsb2NrZWQwIGNhcHRpb247XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCB0YWJsZSBvZiBmaWd1cmVzO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgZW52ZWxvcGUgYWRkcmVzcztcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIGVudmVsb3BlIHJldHVybjsNClxsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgZm9vdG5vdGUgcmVmZXJlbmNlO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgYW5ub3RhdGlvbiByZWZlcmVuY2U7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBsaW5lIG51bWJlcjtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIHBhZ2UgbnVtYmVyOw0KXGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBlbmRub3RlIHJlZmVyZW5jZTtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rwcmlvcml0eTk0IFxsc2Rsb2NrZWQwIGVuZG5vdGUgdGV4dDtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIHRhYmxlIG9mIGF1dGhvcml0aWVzO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgbWFjcm87DQpcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIHRvYSBoZWFkaW5nO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgTGlzdDtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIExpc3QgQnVsbGV0O1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgTGlzdCBOdW1iZXI7DQpcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIExpc3QgMjtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIExpc3QgMztcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIExpc3QgNDtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIExpc3QgNTsNClxsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgTGlzdCBCdWxsZXQgMjtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIExpc3QgQnVsbGV0IDM7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBMaXN0IEJ1bGxldCA0O1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgTGlzdCBCdWxsZXQgNTsNClxsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgTGlzdCBOdW1iZXIgMjtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIExpc3QgTnVtYmVyIDM7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBMaXN0IE51bWJlciA0O1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgTGlzdCBOdW1iZXIgNTsNClxsc2RzZW1paGlkZGVuMSBcbHNkcWZvcm1hdDEgXGxzZGxvY2tlZDAgVGl0bGU7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBDbG9zaW5nO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgU2lnbmF0dXJlO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgRGVmYXVsdCBQYXJhZ3JhcGggRm9udDsNClxsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgQm9keSBUZXh0O1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgQm9keSBUZXh0IEluZGVudDtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIExpc3QgQ29udGludWU7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBMaXN0IENvbnRpbnVlIDI7DQpcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIExpc3QgQ29udGludWUgMztcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIExpc3QgQ29udGludWUgNDtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIExpc3QgQ29udGludWUgNTtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIE1lc3NhZ2UgSGVhZGVyOw0KXGxzZHNlbWloaWRkZW4xIFxsc2RxZm9ybWF0MSBcbHNkbG9ja2VkMCBTdWJ0aXRsZTtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIFNhbHV0YXRpb247XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBEYXRlO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgQm9keSBUZXh0IEZpcnN0IEluZGVudDsNClxsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgQm9keSBUZXh0IEZpcnN0IEluZGVudCAyO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgTm90ZSBIZWFkaW5nO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgQm9keSBUZXh0IDI7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBCb2R5IFRleHQgMzsNClxsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgQm9keSBUZXh0IEluZGVudCAyO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgQm9keSBUZXh0IEluZGVudCAzO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgQmxvY2sgVGV4dDtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIEh5cGVybGluazsNClxsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgRm9sbG93ZWRIeXBlcmxpbms7XGxzZHNlbWloaWRkZW4xIFxsc2RxZm9ybWF0MSBcbHNkbG9ja2VkMCBTdHJvbmc7XGxzZHNlbWloaWRkZW4xIFxsc2RxZm9ybWF0MSBcbHNkbG9ja2VkMCBFbXBoYXNpcztcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIERvY3VtZW50IE1hcDsNClxsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgUGxhaW4gVGV4dDtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIEUtbWFpbCBTaWduYXR1cmU7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBIVE1MIFRvcCBvZiBGb3JtO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgSFRNTCBCb3R0b20gb2YgRm9ybTsNClxsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgTm9ybWFsIChXZWIpO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgSFRNTCBBY3JvbnltO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgSFRNTCBBZGRyZXNzO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgSFRNTCBDaXRlOw0KXGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBIVE1MIENvZGU7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBIVE1MIERlZmluaXRpb247XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBIVE1MIEtleWJvYXJkO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgSFRNTCBQcmVmb3JtYXR0ZWQ7DQpcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIEhUTUwgU2FtcGxlO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgSFRNTCBUeXBld3JpdGVyO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgSFRNTCBWYXJpYWJsZTtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIGFubm90YXRpb24gc3ViamVjdDsNClxsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgTm8gTGlzdDtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIE91dGxpbmUgTGlzdCAxO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgT3V0bGluZSBMaXN0IDI7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBPdXRsaW5lIExpc3QgMzsNClxsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgVGFibGUgU2ltcGxlIDE7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBUYWJsZSBTaW1wbGUgMjtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIFRhYmxlIFNpbXBsZSAzO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgVGFibGUgQ2xhc3NpYyAxOw0KXGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBUYWJsZSBDbGFzc2ljIDI7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBUYWJsZSBDbGFzc2ljIDM7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBUYWJsZSBDbGFzc2ljIDQ7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBUYWJsZSBDb2xvcmZ1bCAxOw0KXGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBUYWJsZSBDb2xvcmZ1bCAyO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgVGFibGUgQ29sb3JmdWwgMztcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIFRhYmxlIENvbHVtbnMgMTtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIFRhYmxlIENvbHVtbnMgMjsNClxsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgVGFibGUgQ29sdW1ucyAzO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgVGFibGUgQ29sdW1ucyA0O1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgVGFibGUgQ29sdW1ucyA1O1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgVGFibGUgR3JpZCAxOw0KXGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBUYWJsZSBHcmlkIDI7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBUYWJsZSBHcmlkIDM7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBUYWJsZSBHcmlkIDQ7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBUYWJsZSBHcmlkIDU7DQpcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIFRhYmxlIEdyaWQgNjtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIFRhYmxlIEdyaWQgNztcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIFRhYmxlIEdyaWQgODtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIFRhYmxlIExpc3QgMTsNClxsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgVGFibGUgTGlzdCAyO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgVGFibGUgTGlzdCAzO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgVGFibGUgTGlzdCA0O1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgVGFibGUgTGlzdCA1Ow0KXGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBUYWJsZSBMaXN0IDY7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBUYWJsZSBMaXN0IDc7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBUYWJsZSBMaXN0IDg7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBUYWJsZSAzRCBlZmZlY3RzIDE7DQpcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIFRhYmxlIDNEIGVmZmVjdHMgMjtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIFRhYmxlIDNEIGVmZmVjdHMgMztcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIFRhYmxlIENvbnRlbXBvcmFyeTtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIFRhYmxlIEVsZWdhbnQ7DQpcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIFRhYmxlIFByb2Zlc3Npb25hbDtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIFRhYmxlIFN1YnRsZSAxO1xsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgVGFibGUgU3VidGxlIDI7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBUYWJsZSBXZWIgMTsNClxsc2RzZW1paGlkZGVuMSBcbHNkdW5oaWRldXNlZDEgXGxzZGxvY2tlZDAgVGFibGUgV2ViIDI7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBCYWxsb29uIFRleHQ7XGxzZHByaW9yaXR5NTkgXGxzZGxvY2tlZDAgVGFibGUgR3JpZDtcbHNkc2VtaWhpZGRlbjEgXGxzZGxvY2tlZDAgUGxhY2Vob2xkZXIgVGV4dDtcbHNkc2VtaWhpZGRlbjEgXGxzZGxvY2tlZDAgTm8gU3BhY2luZzsNClxsc2Rwcmlvcml0eTYwIFxsc2Rsb2NrZWQwIExpZ2h0IFNoYWRpbmc7XGxzZHByaW9yaXR5NjEgXGxzZGxvY2tlZDAgTGlnaHQgTGlzdDtcbHNkcHJpb3JpdHk2MiBcbHNkbG9ja2VkMCBMaWdodCBHcmlkO1xsc2Rwcmlvcml0eTYzIFxsc2Rsb2NrZWQwIE1lZGl1bSBTaGFkaW5nIDE7XGxzZHByaW9yaXR5NjQgXGxzZGxvY2tlZDAgTWVkaXVtIFNoYWRpbmcgMjtcbHNkcHJpb3JpdHk2NSBcbHNkbG9ja2VkMCBNZWRpdW0gTGlzdCAxOw0KXGxzZHByaW9yaXR5NjYgXGxzZGxvY2tlZDAgTWVkaXVtIExpc3QgMjtcbHNkcHJpb3JpdHk2NyBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAxO1xsc2Rwcmlvcml0eTY4IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDI7XGxzZHByaW9yaXR5NjkgXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMztcbHNkcHJpb3JpdHk3MCBcbHNkbG9ja2VkMCBEYXJrIExpc3Q7XGxzZHByaW9yaXR5NzEgXGxzZGxvY2tlZDAgQ29sb3JmdWwgU2hhZGluZzsNClxsc2Rwcmlvcml0eTcyIFxsc2Rsb2NrZWQwIENvbG9yZnVsIExpc3Q7XGxzZHByaW9yaXR5NzMgXGxzZGxvY2tlZDAgQ29sb3JmdWwgR3JpZDtcbHNkcHJpb3JpdHk2MCBcbHNkbG9ja2VkMCBMaWdodCBTaGFkaW5nIEFjY2VudCAxO1xsc2Rwcmlvcml0eTYxIFxsc2Rsb2NrZWQwIExpZ2h0IExpc3QgQWNjZW50IDE7XGxzZHByaW9yaXR5NjIgXGxzZGxvY2tlZDAgTGlnaHQgR3JpZCBBY2NlbnQgMTsNClxsc2Rwcmlvcml0eTYzIFxsc2Rsb2NrZWQwIE1lZGl1bSBTaGFkaW5nIDEgQWNjZW50IDE7XGxzZHByaW9yaXR5NjQgXGxzZGxvY2tlZDAgTWVkaXVtIFNoYWRpbmcgMiBBY2NlbnQgMTtcbHNkcHJpb3JpdHk2NSBcbHNkbG9ja2VkMCBNZWRpdW0gTGlzdCAxIEFjY2VudCAxO1xsc2RzZW1paGlkZGVuMSBcbHNkbG9ja2VkMCBSZXZpc2lvbjtcbHNkc2VtaWhpZGRlbjEgXGxzZHFmb3JtYXQxIFxsc2Rsb2NrZWQwIExpc3QgUGFyYWdyYXBoOw0KXGxzZHNlbWloaWRkZW4xIFxsc2RxZm9ybWF0MSBcbHNkbG9ja2VkMCBRdW90ZTtcbHNkc2VtaWhpZGRlbjEgXGxzZHFmb3JtYXQxIFxsc2Rsb2NrZWQwIEludGVuc2UgUXVvdGU7XGxzZHByaW9yaXR5NjYgXGxzZGxvY2tlZDAgTWVkaXVtIExpc3QgMiBBY2NlbnQgMTtcbHNkcHJpb3JpdHk2NyBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAxIEFjY2VudCAxO1xsc2Rwcmlvcml0eTY4IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDIgQWNjZW50IDE7DQpcbHNkcHJpb3JpdHk2OSBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAzIEFjY2VudCAxO1xsc2Rwcmlvcml0eTcwIFxsc2Rsb2NrZWQwIERhcmsgTGlzdCBBY2NlbnQgMTtcbHNkcHJpb3JpdHk3MSBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBTaGFkaW5nIEFjY2VudCAxO1xsc2Rwcmlvcml0eTcyIFxsc2Rsb2NrZWQwIENvbG9yZnVsIExpc3QgQWNjZW50IDE7XGxzZHByaW9yaXR5NzMgXGxzZGxvY2tlZDAgQ29sb3JmdWwgR3JpZCBBY2NlbnQgMTsNClxsc2Rwcmlvcml0eTYwIFxsc2Rsb2NrZWQwIExpZ2h0IFNoYWRpbmcgQWNjZW50IDI7XGxzZHByaW9yaXR5NjEgXGxzZGxvY2tlZDAgTGlnaHQgTGlzdCBBY2NlbnQgMjtcbHNkcHJpb3JpdHk2MiBcbHNkbG9ja2VkMCBMaWdodCBHcmlkIEFjY2VudCAyO1xsc2Rwcmlvcml0eTYzIFxsc2Rsb2NrZWQwIE1lZGl1bSBTaGFkaW5nIDEgQWNjZW50IDI7XGxzZHByaW9yaXR5NjQgXGxzZGxvY2tlZDAgTWVkaXVtIFNoYWRpbmcgMiBBY2NlbnQgMjsNClxsc2Rwcmlvcml0eTY1IFxsc2Rsb2NrZWQwIE1lZGl1bSBMaXN0IDEgQWNjZW50IDI7XGxzZHByaW9yaXR5NjYgXGxzZGxvY2tlZDAgTWVkaXVtIExpc3QgMiBBY2NlbnQgMjtcbHNkcHJpb3JpdHk2NyBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAxIEFjY2VudCAyO1xsc2Rwcmlvcml0eTY4IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDIgQWNjZW50IDI7XGxzZHByaW9yaXR5NjkgXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMyBBY2NlbnQgMjsNClxsc2Rwcmlvcml0eTcwIFxsc2Rsb2NrZWQwIERhcmsgTGlzdCBBY2NlbnQgMjtcbHNkcHJpb3JpdHk3MSBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBTaGFkaW5nIEFjY2VudCAyO1xsc2Rwcmlvcml0eTcyIFxsc2Rsb2NrZWQwIENvbG9yZnVsIExpc3QgQWNjZW50IDI7XGxzZHByaW9yaXR5NzMgXGxzZGxvY2tlZDAgQ29sb3JmdWwgR3JpZCBBY2NlbnQgMjtcbHNkcHJpb3JpdHk2MCBcbHNkbG9ja2VkMCBMaWdodCBTaGFkaW5nIEFjY2VudCAzOw0KXGxzZHByaW9yaXR5NjEgXGxzZGxvY2tlZDAgTGlnaHQgTGlzdCBBY2NlbnQgMztcbHNkcHJpb3JpdHk2MiBcbHNkbG9ja2VkMCBMaWdodCBHcmlkIEFjY2VudCAzO1xsc2Rwcmlvcml0eTYzIFxsc2Rsb2NrZWQwIE1lZGl1bSBTaGFkaW5nIDEgQWNjZW50IDM7XGxzZHByaW9yaXR5NjQgXGxzZGxvY2tlZDAgTWVkaXVtIFNoYWRpbmcgMiBBY2NlbnQgMztcbHNkcHJpb3JpdHk2NSBcbHNkbG9ja2VkMCBNZWRpdW0gTGlzdCAxIEFjY2VudCAzOw0KXGxzZHByaW9yaXR5NjYgXGxzZGxvY2tlZDAgTWVkaXVtIExpc3QgMiBBY2NlbnQgMztcbHNkcHJpb3JpdHk2NyBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAxIEFjY2VudCAzO1xsc2Rwcmlvcml0eTY4IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDIgQWNjZW50IDM7XGxzZHByaW9yaXR5NjkgXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMyBBY2NlbnQgMztcbHNkcHJpb3JpdHk3MCBcbHNkbG9ja2VkMCBEYXJrIExpc3QgQWNjZW50IDM7DQpcbHNkcHJpb3JpdHk3MSBcbHNkbG9ja2VkMCBDb2xvcmZ1bCBTaGFkaW5nIEFjY2VudCAzO1xsc2Rwcmlvcml0eTcyIFxsc2Rsb2NrZWQwIENvbG9yZnVsIExpc3QgQWNjZW50IDM7XGxzZHByaW9yaXR5NzMgXGxzZGxvY2tlZDAgQ29sb3JmdWwgR3JpZCBBY2NlbnQgMztcbHNkcHJpb3JpdHk2MCBcbHNkbG9ja2VkMCBMaWdodCBTaGFkaW5nIEFjY2VudCA0O1xsc2Rwcmlvcml0eTYxIFxsc2Rsb2NrZWQwIExpZ2h0IExpc3QgQWNjZW50IDQ7DQpcbHNkcHJpb3JpdHk2MiBcbHNkbG9ja2VkMCBMaWdodCBHcmlkIEFjY2VudCA0O1xsc2Rwcmlvcml0eTYzIFxsc2Rsb2NrZWQwIE1lZGl1bSBTaGFkaW5nIDEgQWNjZW50IDQ7XGxzZHByaW9yaXR5NjQgXGxzZGxvY2tlZDAgTWVkaXVtIFNoYWRpbmcgMiBBY2NlbnQgNDtcbHNkcHJpb3JpdHk2NSBcbHNkbG9ja2VkMCBNZWRpdW0gTGlzdCAxIEFjY2VudCA0O1xsc2Rwcmlvcml0eTY2IFxsc2Rsb2NrZWQwIE1lZGl1bSBMaXN0IDIgQWNjZW50IDQ7DQpcbHNkcHJpb3JpdHk2NyBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAxIEFjY2VudCA0O1xsc2Rwcmlvcml0eTY4IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDIgQWNjZW50IDQ7XGxzZHByaW9yaXR5NjkgXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMyBBY2NlbnQgNDtcbHNkcHJpb3JpdHk3MCBcbHNkbG9ja2VkMCBEYXJrIExpc3QgQWNjZW50IDQ7XGxzZHByaW9yaXR5NzEgXGxzZGxvY2tlZDAgQ29sb3JmdWwgU2hhZGluZyBBY2NlbnQgNDsNClxsc2Rwcmlvcml0eTcyIFxsc2Rsb2NrZWQwIENvbG9yZnVsIExpc3QgQWNjZW50IDQ7XGxzZHByaW9yaXR5NzMgXGxzZGxvY2tlZDAgQ29sb3JmdWwgR3JpZCBBY2NlbnQgNDtcbHNkcHJpb3JpdHk2MCBcbHNkbG9ja2VkMCBMaWdodCBTaGFkaW5nIEFjY2VudCA1O1xsc2Rwcmlvcml0eTYxIFxsc2Rsb2NrZWQwIExpZ2h0IExpc3QgQWNjZW50IDU7XGxzZHByaW9yaXR5NjIgXGxzZGxvY2tlZDAgTGlnaHQgR3JpZCBBY2NlbnQgNTsNClxsc2Rwcmlvcml0eTYzIFxsc2Rsb2NrZWQwIE1lZGl1bSBTaGFkaW5nIDEgQWNjZW50IDU7XGxzZHByaW9yaXR5NjQgXGxzZGxvY2tlZDAgTWVkaXVtIFNoYWRpbmcgMiBBY2NlbnQgNTtcbHNkcHJpb3JpdHk2NSBcbHNkbG9ja2VkMCBNZWRpdW0gTGlzdCAxIEFjY2VudCA1O1xsc2Rwcmlvcml0eTY2IFxsc2Rsb2NrZWQwIE1lZGl1bSBMaXN0IDIgQWNjZW50IDU7DQpcbHNkcHJpb3JpdHk2NyBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAxIEFjY2VudCA1O1xsc2Rwcmlvcml0eTY4IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDIgQWNjZW50IDU7XGxzZHByaW9yaXR5NjkgXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMyBBY2NlbnQgNTtcbHNkcHJpb3JpdHk3MCBcbHNkbG9ja2VkMCBEYXJrIExpc3QgQWNjZW50IDU7XGxzZHByaW9yaXR5NzEgXGxzZGxvY2tlZDAgQ29sb3JmdWwgU2hhZGluZyBBY2NlbnQgNTsNClxsc2Rwcmlvcml0eTcyIFxsc2Rsb2NrZWQwIENvbG9yZnVsIExpc3QgQWNjZW50IDU7XGxzZHByaW9yaXR5NzMgXGxzZGxvY2tlZDAgQ29sb3JmdWwgR3JpZCBBY2NlbnQgNTtcbHNkcHJpb3JpdHk2MCBcbHNkbG9ja2VkMCBMaWdodCBTaGFkaW5nIEFjY2VudCA2O1xsc2Rwcmlvcml0eTYxIFxsc2Rsb2NrZWQwIExpZ2h0IExpc3QgQWNjZW50IDY7XGxzZHByaW9yaXR5NjIgXGxzZGxvY2tlZDAgTGlnaHQgR3JpZCBBY2NlbnQgNjsNClxsc2Rwcmlvcml0eTYzIFxsc2Rsb2NrZWQwIE1lZGl1bSBTaGFkaW5nIDEgQWNjZW50IDY7XGxzZHByaW9yaXR5NjQgXGxzZGxvY2tlZDAgTWVkaXVtIFNoYWRpbmcgMiBBY2NlbnQgNjtcbHNkcHJpb3JpdHk2NSBcbHNkbG9ja2VkMCBNZWRpdW0gTGlzdCAxIEFjY2VudCA2O1xsc2Rwcmlvcml0eTY2IFxsc2Rsb2NrZWQwIE1lZGl1bSBMaXN0IDIgQWNjZW50IDY7DQpcbHNkcHJpb3JpdHk2NyBcbHNkbG9ja2VkMCBNZWRpdW0gR3JpZCAxIEFjY2VudCA2O1xsc2Rwcmlvcml0eTY4IFxsc2Rsb2NrZWQwIE1lZGl1bSBHcmlkIDIgQWNjZW50IDY7XGxzZHByaW9yaXR5NjkgXGxzZGxvY2tlZDAgTWVkaXVtIEdyaWQgMyBBY2NlbnQgNjtcbHNkcHJpb3JpdHk3MCBcbHNkbG9ja2VkMCBEYXJrIExpc3QgQWNjZW50IDY7XGxzZHByaW9yaXR5NzEgXGxzZGxvY2tlZDAgQ29sb3JmdWwgU2hhZGluZyBBY2NlbnQgNjsNClxsc2Rwcmlvcml0eTcyIFxsc2Rsb2NrZWQwIENvbG9yZnVsIExpc3QgQWNjZW50IDY7XGxzZHByaW9yaXR5NzMgXGxzZGxvY2tlZDAgQ29sb3JmdWwgR3JpZCBBY2NlbnQgNjtcbHNkc2VtaWhpZGRlbjEgXGxzZHFmb3JtYXQxIFxsc2Rsb2NrZWQwIFN1YnRsZSBFbXBoYXNpcztcbHNkc2VtaWhpZGRlbjEgXGxzZHFmb3JtYXQxIFxsc2Rsb2NrZWQwIEludGVuc2UgRW1waGFzaXM7DQpcbHNkc2VtaWhpZGRlbjEgXGxzZHFmb3JtYXQxIFxsc2Rsb2NrZWQwIFN1YnRsZSBSZWZlcmVuY2U7XGxzZHNlbWloaWRkZW4xIFxsc2RxZm9ybWF0MSBcbHNkbG9ja2VkMCBJbnRlbnNlIFJlZmVyZW5jZTtcbHNkc2VtaWhpZGRlbjEgXGxzZHFmb3JtYXQxIFxsc2Rsb2NrZWQwIEJvb2sgVGl0bGU7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBCaWJsaW9ncmFwaHk7DQpcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2RxZm9ybWF0MSBcbHNkcHJpb3JpdHk0OSBcbHNkbG9ja2VkMCBUT0MgSGVhZGluZztcbHNkcHJpb3JpdHk0MSBcbHNkbG9ja2VkMCBQbGFpbiBUYWJsZSAxO1xsc2Rwcmlvcml0eTQyIFxsc2Rsb2NrZWQwIFBsYWluIFRhYmxlIDI7XGxzZHByaW9yaXR5NDMgXGxzZGxvY2tlZDAgUGxhaW4gVGFibGUgMztcbHNkcHJpb3JpdHk0NCBcbHNkbG9ja2VkMCBQbGFpbiBUYWJsZSA0Ow0KXGxzZHByaW9yaXR5NDUgXGxzZGxvY2tlZDAgUGxhaW4gVGFibGUgNTtcbHNkcHJpb3JpdHk0MCBcbHNkbG9ja2VkMCBHcmlkIFRhYmxlIExpZ2h0O1xsc2Rwcmlvcml0eTQ2IFxsc2Rsb2NrZWQwIEdyaWQgVGFibGUgMSBMaWdodDtcbHNkcHJpb3JpdHk0NyBcbHNkbG9ja2VkMCBHcmlkIFRhYmxlIDI7XGxzZHByaW9yaXR5NDggXGxzZGxvY2tlZDAgR3JpZCBUYWJsZSAzO1xsc2Rwcmlvcml0eTQ5IFxsc2Rsb2NrZWQwIEdyaWQgVGFibGUgNDsNClxsc2Rwcmlvcml0eTUwIFxsc2Rsb2NrZWQwIEdyaWQgVGFibGUgNSBEYXJrO1xsc2Rwcmlvcml0eTUxIFxsc2Rsb2NrZWQwIEdyaWQgVGFibGUgNiBDb2xvcmZ1bDtcbHNkcHJpb3JpdHk1MiBcbHNkbG9ja2VkMCBHcmlkIFRhYmxlIDcgQ29sb3JmdWw7XGxzZHByaW9yaXR5NDYgXGxzZGxvY2tlZDAgR3JpZCBUYWJsZSAxIExpZ2h0IEFjY2VudCAxO1xsc2Rwcmlvcml0eTQ3IFxsc2Rsb2NrZWQwIEdyaWQgVGFibGUgMiBBY2NlbnQgMTsNClxsc2Rwcmlvcml0eTQ4IFxsc2Rsb2NrZWQwIEdyaWQgVGFibGUgMyBBY2NlbnQgMTtcbHNkcHJpb3JpdHk0OSBcbHNkbG9ja2VkMCBHcmlkIFRhYmxlIDQgQWNjZW50IDE7XGxzZHByaW9yaXR5NTAgXGxzZGxvY2tlZDAgR3JpZCBUYWJsZSA1IERhcmsgQWNjZW50IDE7XGxzZHByaW9yaXR5NTEgXGxzZGxvY2tlZDAgR3JpZCBUYWJsZSA2IENvbG9yZnVsIEFjY2VudCAxOw0KXGxzZHByaW9yaXR5NTIgXGxzZGxvY2tlZDAgR3JpZCBUYWJsZSA3IENvbG9yZnVsIEFjY2VudCAxO1xsc2Rwcmlvcml0eTQ2IFxsc2Rsb2NrZWQwIEdyaWQgVGFibGUgMSBMaWdodCBBY2NlbnQgMjtcbHNkcHJpb3JpdHk0NyBcbHNkbG9ja2VkMCBHcmlkIFRhYmxlIDIgQWNjZW50IDI7XGxzZHByaW9yaXR5NDggXGxzZGxvY2tlZDAgR3JpZCBUYWJsZSAzIEFjY2VudCAyOw0KXGxzZHByaW9yaXR5NDkgXGxzZGxvY2tlZDAgR3JpZCBUYWJsZSA0IEFjY2VudCAyO1xsc2Rwcmlvcml0eTUwIFxsc2Rsb2NrZWQwIEdyaWQgVGFibGUgNSBEYXJrIEFjY2VudCAyO1xsc2Rwcmlvcml0eTUxIFxsc2Rsb2NrZWQwIEdyaWQgVGFibGUgNiBDb2xvcmZ1bCBBY2NlbnQgMjtcbHNkcHJpb3JpdHk1MiBcbHNkbG9ja2VkMCBHcmlkIFRhYmxlIDcgQ29sb3JmdWwgQWNjZW50IDI7DQpcbHNkcHJpb3JpdHk0NiBcbHNkbG9ja2VkMCBHcmlkIFRhYmxlIDEgTGlnaHQgQWNjZW50IDM7XGxzZHByaW9yaXR5NDcgXGxzZGxvY2tlZDAgR3JpZCBUYWJsZSAyIEFjY2VudCAzO1xsc2Rwcmlvcml0eTQ4IFxsc2Rsb2NrZWQwIEdyaWQgVGFibGUgMyBBY2NlbnQgMztcbHNkcHJpb3JpdHk0OSBcbHNkbG9ja2VkMCBHcmlkIFRhYmxlIDQgQWNjZW50IDM7DQpcbHNkcHJpb3JpdHk1MCBcbHNkbG9ja2VkMCBHcmlkIFRhYmxlIDUgRGFyayBBY2NlbnQgMztcbHNkcHJpb3JpdHk1MSBcbHNkbG9ja2VkMCBHcmlkIFRhYmxlIDYgQ29sb3JmdWwgQWNjZW50IDM7XGxzZHByaW9yaXR5NTIgXGxzZGxvY2tlZDAgR3JpZCBUYWJsZSA3IENvbG9yZnVsIEFjY2VudCAzO1xsc2Rwcmlvcml0eTQ2IFxsc2Rsb2NrZWQwIEdyaWQgVGFibGUgMSBMaWdodCBBY2NlbnQgNDsNClxsc2Rwcmlvcml0eTQ3IFxsc2Rsb2NrZWQwIEdyaWQgVGFibGUgMiBBY2NlbnQgNDtcbHNkcHJpb3JpdHk0OCBcbHNkbG9ja2VkMCBHcmlkIFRhYmxlIDMgQWNjZW50IDQ7XGxzZHByaW9yaXR5NDkgXGxzZGxvY2tlZDAgR3JpZCBUYWJsZSA0IEFjY2VudCA0O1xsc2Rwcmlvcml0eTUwIFxsc2Rsb2NrZWQwIEdyaWQgVGFibGUgNSBEYXJrIEFjY2VudCA0Ow0KXGxzZHByaW9yaXR5NTEgXGxzZGxvY2tlZDAgR3JpZCBUYWJsZSA2IENvbG9yZnVsIEFjY2VudCA0O1xsc2Rwcmlvcml0eTUyIFxsc2Rsb2NrZWQwIEdyaWQgVGFibGUgNyBDb2xvcmZ1bCBBY2NlbnQgNDtcbHNkcHJpb3JpdHk0NiBcbHNkbG9ja2VkMCBHcmlkIFRhYmxlIDEgTGlnaHQgQWNjZW50IDU7XGxzZHByaW9yaXR5NDcgXGxzZGxvY2tlZDAgR3JpZCBUYWJsZSAyIEFjY2VudCA1Ow0KXGxzZHByaW9yaXR5NDggXGxzZGxvY2tlZDAgR3JpZCBUYWJsZSAzIEFjY2VudCA1O1xsc2Rwcmlvcml0eTQ5IFxsc2Rsb2NrZWQwIEdyaWQgVGFibGUgNCBBY2NlbnQgNTtcbHNkcHJpb3JpdHk1MCBcbHNkbG9ja2VkMCBHcmlkIFRhYmxlIDUgRGFyayBBY2NlbnQgNTtcbHNkcHJpb3JpdHk1MSBcbHNkbG9ja2VkMCBHcmlkIFRhYmxlIDYgQ29sb3JmdWwgQWNjZW50IDU7DQpcbHNkcHJpb3JpdHk1MiBcbHNkbG9ja2VkMCBHcmlkIFRhYmxlIDcgQ29sb3JmdWwgQWNjZW50IDU7XGxzZHByaW9yaXR5NDYgXGxzZGxvY2tlZDAgR3JpZCBUYWJsZSAxIExpZ2h0IEFjY2VudCA2O1xsc2Rwcmlvcml0eTQ3IFxsc2Rsb2NrZWQwIEdyaWQgVGFibGUgMiBBY2NlbnQgNjtcbHNkcHJpb3JpdHk0OCBcbHNkbG9ja2VkMCBHcmlkIFRhYmxlIDMgQWNjZW50IDY7DQpcbHNkcHJpb3JpdHk0OSBcbHNkbG9ja2VkMCBHcmlkIFRhYmxlIDQgQWNjZW50IDY7XGxzZHByaW9yaXR5NTAgXGxzZGxvY2tlZDAgR3JpZCBUYWJsZSA1IERhcmsgQWNjZW50IDY7XGxzZHByaW9yaXR5NTEgXGxzZGxvY2tlZDAgR3JpZCBUYWJsZSA2IENvbG9yZnVsIEFjY2VudCA2O1xsc2Rwcmlvcml0eTUyIFxsc2Rsb2NrZWQwIEdyaWQgVGFibGUgNyBDb2xvcmZ1bCBBY2NlbnQgNjsNClxsc2Rwcmlvcml0eTQ2IFxsc2Rsb2NrZWQwIExpc3QgVGFibGUgMSBMaWdodDtcbHNkcHJpb3JpdHk0NyBcbHNkbG9ja2VkMCBMaXN0IFRhYmxlIDI7XGxzZHByaW9yaXR5NDggXGxzZGxvY2tlZDAgTGlzdCBUYWJsZSAzO1xsc2Rwcmlvcml0eTQ5IFxsc2Rsb2NrZWQwIExpc3QgVGFibGUgNDtcbHNkcHJpb3JpdHk1MCBcbHNkbG9ja2VkMCBMaXN0IFRhYmxlIDUgRGFyazsNClxsc2Rwcmlvcml0eTUxIFxsc2Rsb2NrZWQwIExpc3QgVGFibGUgNiBDb2xvcmZ1bDtcbHNkcHJpb3JpdHk1MiBcbHNkbG9ja2VkMCBMaXN0IFRhYmxlIDcgQ29sb3JmdWw7XGxzZHByaW9yaXR5NDYgXGxzZGxvY2tlZDAgTGlzdCBUYWJsZSAxIExpZ2h0IEFjY2VudCAxO1xsc2Rwcmlvcml0eTQ3IFxsc2Rsb2NrZWQwIExpc3QgVGFibGUgMiBBY2NlbnQgMTtcbHNkcHJpb3JpdHk0OCBcbHNkbG9ja2VkMCBMaXN0IFRhYmxlIDMgQWNjZW50IDE7DQpcbHNkcHJpb3JpdHk0OSBcbHNkbG9ja2VkMCBMaXN0IFRhYmxlIDQgQWNjZW50IDE7XGxzZHByaW9yaXR5NTAgXGxzZGxvY2tlZDAgTGlzdCBUYWJsZSA1IERhcmsgQWNjZW50IDE7XGxzZHByaW9yaXR5NTEgXGxzZGxvY2tlZDAgTGlzdCBUYWJsZSA2IENvbG9yZnVsIEFjY2VudCAxO1xsc2Rwcmlvcml0eTUyIFxsc2Rsb2NrZWQwIExpc3QgVGFibGUgNyBDb2xvcmZ1bCBBY2NlbnQgMTsNClxsc2Rwcmlvcml0eTQ2IFxsc2Rsb2NrZWQwIExpc3QgVGFibGUgMSBMaWdodCBBY2NlbnQgMjtcbHNkcHJpb3JpdHk0NyBcbHNkbG9ja2VkMCBMaXN0IFRhYmxlIDIgQWNjZW50IDI7XGxzZHByaW9yaXR5NDggXGxzZGxvY2tlZDAgTGlzdCBUYWJsZSAzIEFjY2VudCAyO1xsc2Rwcmlvcml0eTQ5IFxsc2Rsb2NrZWQwIExpc3QgVGFibGUgNCBBY2NlbnQgMjsNClxsc2Rwcmlvcml0eTUwIFxsc2Rsb2NrZWQwIExpc3QgVGFibGUgNSBEYXJrIEFjY2VudCAyO1xsc2Rwcmlvcml0eTUxIFxsc2Rsb2NrZWQwIExpc3QgVGFibGUgNiBDb2xvcmZ1bCBBY2NlbnQgMjtcbHNkcHJpb3JpdHk1MiBcbHNkbG9ja2VkMCBMaXN0IFRhYmxlIDcgQ29sb3JmdWwgQWNjZW50IDI7XGxzZHByaW9yaXR5NDYgXGxzZGxvY2tlZDAgTGlzdCBUYWJsZSAxIExpZ2h0IEFjY2VudCAzOw0KXGxzZHByaW9yaXR5NDcgXGxzZGxvY2tlZDAgTGlzdCBUYWJsZSAyIEFjY2VudCAzO1xsc2Rwcmlvcml0eTQ4IFxsc2Rsb2NrZWQwIExpc3QgVGFibGUgMyBBY2NlbnQgMztcbHNkcHJpb3JpdHk0OSBcbHNkbG9ja2VkMCBMaXN0IFRhYmxlIDQgQWNjZW50IDM7XGxzZHByaW9yaXR5NTAgXGxzZGxvY2tlZDAgTGlzdCBUYWJsZSA1IERhcmsgQWNjZW50IDM7DQpcbHNkcHJpb3JpdHk1MSBcbHNkbG9ja2VkMCBMaXN0IFRhYmxlIDYgQ29sb3JmdWwgQWNjZW50IDM7XGxzZHByaW9yaXR5NTIgXGxzZGxvY2tlZDAgTGlzdCBUYWJsZSA3IENvbG9yZnVsIEFjY2VudCAzO1xsc2Rwcmlvcml0eTQ2IFxsc2Rsb2NrZWQwIExpc3QgVGFibGUgMSBMaWdodCBBY2NlbnQgNDtcbHNkcHJpb3JpdHk0NyBcbHNkbG9ja2VkMCBMaXN0IFRhYmxlIDIgQWNjZW50IDQ7DQpcbHNkcHJpb3JpdHk0OCBcbHNkbG9ja2VkMCBMaXN0IFRhYmxlIDMgQWNjZW50IDQ7XGxzZHByaW9yaXR5NDkgXGxzZGxvY2tlZDAgTGlzdCBUYWJsZSA0IEFjY2VudCA0O1xsc2Rwcmlvcml0eTUwIFxsc2Rsb2NrZWQwIExpc3QgVGFibGUgNSBEYXJrIEFjY2VudCA0O1xsc2Rwcmlvcml0eTUxIFxsc2Rsb2NrZWQwIExpc3QgVGFibGUgNiBDb2xvcmZ1bCBBY2NlbnQgNDsNClxsc2Rwcmlvcml0eTUyIFxsc2Rsb2NrZWQwIExpc3QgVGFibGUgNyBDb2xvcmZ1bCBBY2NlbnQgNDtcbHNkcHJpb3JpdHk0NiBcbHNkbG9ja2VkMCBMaXN0IFRhYmxlIDEgTGlnaHQgQWNjZW50IDU7XGxzZHByaW9yaXR5NDcgXGxzZGxvY2tlZDAgTGlzdCBUYWJsZSAyIEFjY2VudCA1O1xsc2Rwcmlvcml0eTQ4IFxsc2Rsb2NrZWQwIExpc3QgVGFibGUgMyBBY2NlbnQgNTsNClxsc2Rwcmlvcml0eTQ5IFxsc2Rsb2NrZWQwIExpc3QgVGFibGUgNCBBY2NlbnQgNTtcbHNkcHJpb3JpdHk1MCBcbHNkbG9ja2VkMCBMaXN0IFRhYmxlIDUgRGFyayBBY2NlbnQgNTtcbHNkcHJpb3JpdHk1MSBcbHNkbG9ja2VkMCBMaXN0IFRhYmxlIDYgQ29sb3JmdWwgQWNjZW50IDU7XGxzZHByaW9yaXR5NTIgXGxzZGxvY2tlZDAgTGlzdCBUYWJsZSA3IENvbG9yZnVsIEFjY2VudCA1Ow0KXGxzZHByaW9yaXR5NDYgXGxzZGxvY2tlZDAgTGlzdCBUYWJsZSAxIExpZ2h0IEFjY2VudCA2O1xsc2Rwcmlvcml0eTQ3IFxsc2Rsb2NrZWQwIExpc3QgVGFibGUgMiBBY2NlbnQgNjtcbHNkcHJpb3JpdHk0OCBcbHNkbG9ja2VkMCBMaXN0IFRhYmxlIDMgQWNjZW50IDY7XGxzZHByaW9yaXR5NDkgXGxzZGxvY2tlZDAgTGlzdCBUYWJsZSA0IEFjY2VudCA2Ow0KXGxzZHByaW9yaXR5NTAgXGxzZGxvY2tlZDAgTGlzdCBUYWJsZSA1IERhcmsgQWNjZW50IDY7XGxzZHByaW9yaXR5NTEgXGxzZGxvY2tlZDAgTGlzdCBUYWJsZSA2IENvbG9yZnVsIEFjY2VudCA2O1xsc2Rwcmlvcml0eTUyIFxsc2Rsb2NrZWQwIExpc3QgVGFibGUgNyBDb2xvcmZ1bCBBY2NlbnQgNjtcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIE1lbnRpb247DQpcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIFNtYXJ0IEh5cGVybGluaztcbHNkc2VtaWhpZGRlbjEgXGxzZHVuaGlkZXVzZWQxIFxsc2Rsb2NrZWQwIEhhc2h0YWc7XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBVbnJlc29sdmVkIE1lbnRpb247XGxzZHNlbWloaWRkZW4xIFxsc2R1bmhpZGV1c2VkMSBcbHNkbG9ja2VkMCBTbWFydCBMaW5rO319e1wqXGRhdGFzdG9yZSAwMTA1MDAwMA0KMDIwMDAwMDAxODAwMDAwMDRkNzM3ODZkNmMzMjJlNTM0MTU4NTg0ZDRjNTI2NTYxNjQ2NTcyMmUzNjJlMzAwMDAwMDAwMDAwMDAwMDAwMDAwMDA2MDAwMA0KZDBjZjExZTBhMWIxMWFlMTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM2UwMDAzMDBmZWZmMDkwMDA2MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAxMDAwMDAwMDEwMDAwMDAwMDAwMDAwMDAwMTAwMDAwZmVmZmZmZmYwMDAwMDAwMGZlZmZmZmZmMDAwMDAwMDAwMDAwMDAwMGZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmDQpmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYNCmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZg0KZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmDQpmZmZmZmZmZmZmZmZmZmZmZmRmZmZmZmZmZWZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYNCmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZg0KZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmDQpmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmYNCmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmNTIwMDZmMDA2ZjAwNzQwMDIwMDA0NTAwNmUwMDc0MDA3MjAwNzkwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAxNjAwMDUwMGZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZjBjNmFkOTg4OTJmMWQ0MTFhNjVmMDA0MDk2MzI1MWU1MDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwNDBmNA0KN2Y1ODM1MjJkNjAxZmVmZmZmZmYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwDQowMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDANCjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMGZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMA0KMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDEwNTAwMDAwMDAwMDAwMH19</record_binary_data>
      <record_plain_text>STATEMENT OF OPERATING CONDITIONS OF
ENSTOR KATY STORAGE AND TRANSPORTATION, L.P.
FILED WITH THE
THE FEDERAL ENERGY REGULATORY COMMISSION
MAY 4, 2020
eTariff Information
Tariff Submitter: Enstor Katy Storage and Transportation, L.P.
FERC Tariff Program Name: FERC NGPA Gas Tariff
Tariff Title: Katy Operating Statement Tariff Record Effective Date: May 4, 2020
Tariff Record Title: Enstor Katy SOC Baseline Submission Option Code: A
Other Information: Baseline Filing


ENSTOR KATY STORAGE AND TRANSPORTATION, L.P. STATEMENT OF OPERATING CONDITIONS
TABLE OF CONTENTS
Page
1.0	STATEMENT OF RATES	1
2.0	OPERATING STATEMENT	2
3.0	DEFINITIONS	2
4.0	SERVICES	12
5.0	CONFIRMATIONS	14
6.0	NOMINATIONS	17
7.0	PRIORITY OF SERVICE	19
8.0	INTERRUPTION OF SERVICE	20
9.0	TENDER OF RECEIPTS AND DELIVERIES	22
10.0	QUALITY	24
11.0	ODORIZATION	25
12.0	METHOD OF MEASUREMENT	25
13.0	BALANCING OF QUANTITIES	25
14.0	INVENTORY MANAGEMENT	25
15.0	FEES FOR SERVICES	28
16.0	FUEL REIMBURSEMENT	28
17.0	TAXES	28
18.0	BILLING AND PAYMENT	29
19.0	EVIDENCE OF CREDITWORTHINESS AND SECURITY; RIGHT OF SET-OFF	31
20.0	TERMINATION FOR DEFAULT	35
21.0	FORCE MAJEURE	40
22.0	SERVICE CONDITIONS	42
23.0	TITLE AND RISK OF LOSS	42
24.0	ADVERSE CLAIMS TO NATURAL GAS	43
25.0	INDEMNIFICATION	44
26.0	LIMITATION OF LIABILITY	44
27.0	WAIVERS AND NON-WAIVER OF FUTURE DEFAULT	44
28.0	CHOICE OF LAW	45
29.0	LAWS AND REGULATIONS	45
30.0	ASSIGNMENT	45
31.0	DESCRIPTIVE HEADINGS	45

Appendix "A" METHOD OF MEASUREMENT / MEASUREMENT EQUIPMENT
Appendix "B" QUALITY REQUIREMENTS


ENSTOR KATY STORAGE AND TRANSPORTATION, L.P.
1.0 STATEMENT OF RATES
Service
Rate
Firm Storage Service
Market Based
Firm Wheeling Service
Market-Based
No-Notice Service
Market-Based
Interruptible Storage Service
Market-Based
Interruptible Wheeling Service
Market-Based
Parking Service
Market-Based
Loaning Service
Market-Based



ENSTOR KATY STORAGE AND TRANSPORTATION, L.P. STATEMENT OF OPERATING CONDITIONS
2.0 OPERATING STATEMENT
2.1 This Statement of Operating Conditions ("Operating Statement") describes how ENSTOR Katy Storage and Transportation, L.P. ("Katy") shall provide the storage and related hub services referenced in Section 4.0 below pursuant to Section 284.123 of the regulations of the Federal Energy Regulatory Commission, 18 C.F.R. Section; 284.123. Katy reserves the right to not offer or commence any Service, or to discontinue any Interruptible Service if, in Katy's reasonable discretion, any impairment of Firm Service could result.
2.2 From time to time it may become necessary to update or revise this Operating Statement. Katy shall have the right to propose, file, and make effective with the FERC revisions to this Operating Statement for the purpose of changing the provisions hereof effective as to all Customers, except that Katy shall have no right to alter the rates or charges for Services rendered pursuant to an existing Transaction, except such alterations to the rates or charges that are specifically permitted pursuant to such Transaction.
2.3 Any capitalized term used herein or in any appendix attached hereto but not otherwise defined shall have the meaning given such term in Section 3.0 herein.
3.0 DEFINITIONS
3.1 "Affiliate" when used in relation to a particular corporation, limited liability company, partnership, proprietorship or other business entity, means a corporation, limited liability company, partnership, proprietorship or other business entity which directly or indirectly controls, is controlled by or is under a common control with that particular corporation, liability company, partnership, proprietorship or other business entity. For the purposes of this definition "control" means the direct or indirect right to elect or cause to be elected a majority of the directors of a corporation, or corresponding managing body for other forms of business entity, through the ownership of shares or other equity interests which carry full voting or operational control rights, as applicable, in all circumstances.
3.2 "Acceptable Credit Rating" means a Credit Rating of at least -BBB by S&amp;P and Baa3 by Moody's. If a Customer is only rated by S&amp;P or Moody's, then Katy may, in its reasonable discretion, waive its requirement for a rating from both S&amp;P and Moody's. If a Customer's rating is a BBB- or Baa3 and the outlook is Negative, Katy may require further analysis.
3.3 "Btu" means one British Thermal Unit and is defined as the amount of heat required to raise the temperature of one (1) avoirdupois pound of pure water from fifty-nine degrees Fahrenheit (59o F) to sixty degrees Fahrenheit (60o F) at a constant pressure of fourteen and sixty-five hundredths pounds per square inch absolute (14.65 psia). Total Btus shall be determined by multiplying the total volume of Gas Delivered times the Gas Heating Value expressed in Btus per cubic foot of Gas adjusted on a dry basis.
3.4 "Business Day" means Monday through Friday, excluding Federal Banking Holidays (as determined by the Federal Reserve Board) in the United States.
3.5 "Capacity Demand" or "CD" means the maximum Quantity of Gas, as set forth in the relevant Confirmation, that Customer is permitted to have in storage at any time at the Katy Storage Facility.
3.6 "Central Clock Time" or "CCT" means central daylight time when daylight savings time is in effect and central standard time when daylight savings time is not in effect.
3.7 "Claim" or "Claims" means all claims (including, but not limited to, those for or related to personal injury, death, or property damage of any sort), damages, liabilities, losses, fines, penalties, causes of action of any kind, obligations (including, but not limited to, contractual liabilities), costs, judgments, interest and awards (including payment of reasonable attorneys' fees and costs of litigation), of any kind or character (except punitive or exemplary damages).
3.8 "Commodity Charge" means the fee which is to be paid on a Monthly basis and which is the product of (a) the applicable Commodity Rate for a Service times (b) the number of MMBtus of Gas (including any Fuel) Delivered by the Customer to Katy at the Receipt Point or Delivered by Katy to Customer at the Delivery Point during the relevant Month.
3.9 "Commodity Rate" means the Monthly rate per MMBtu for Service actually utilized by Customer in respect of a Transaction as agreed to by Katy and Customer.
3.10 "Confirmation" means an agreement by and between the Customer and Katy setting forth the terms of a Transaction that is provided by Katy, as allowed (or unrestricted) under either (i) RRC approval or (ii) Section 311 of the NGPA and that is effective in accordance with the Master Service Agreement and this Operating Statement.
3.11 "Corresponding Transaction" shall have the meaning set forth in Section 9.3.1.
3.12 "Credit Support Provider" means that Party, if any, providing a guarantee of the obligations of Customer under a Master Service Agreement in favor of Katy, as the beneficiary thereof, in a form acceptable to Katy in its reasonable judgment.
3.13 "Creditworthy" or "Creditworthiness" shall have meaning as ascribed in Section 19.3.1.
3.14 "Current Value" shall have the meaning ascribed to such term in Section 20.7 of the Operating Statement.
3.15 "Customer" means an individual or entity executing a Master Service Agreement with Katy and that holds lawful rights in and/or legal title to the Gas that is the subject of Services rendered under a Confirmation entered into pursuant to such Master Service Agreement.
3.16 "Customer Gross Inventory" means the sum of all Customer Inventories, taking into account all Transactions of Customer.
3.17 "Customer Group" means Customer, its partners and Affiliates, and the officers, directors, partners, shareholders, members, managers, employers, agents, representatives, and contractors and subcontractors (of every tier) of each of the foregoing.
3.18 "Customer Inventory" means, in respect of each separate Transaction, the Quantities of Gas held at the Katy Storage Facility for Customer's account, which Katy shall account for using recognized industry standards, which accounting shall be deemed conclusively correct absent manifest error.
3.19 "Customer Taxed Inventory" shall have the meaning set forth in Section 17.1.
3.20 "Daily Reference Price" means the midpoint price for "East-Houston-Katy - Katy Reference Price" as reported in Platts Gas Daily (or any successor publication). If at any time the daily midpoint prices for the applicable reference points are not published in the manner previously described, then Katy shall provide notice ("Substitute Reference Price") thereof to Customer, in which event the Parties shall attempt to agree upon a Substitute Reference Price. The Substitute Reference Price shall then become the Daily Reference Price.
3.21 "Default Quantity," "Defaulted Transaction," and "Default Notice" shall each have the meaning as ascribed to each such term in Section 9.3.
3.22 "Deliver," "Delivered," or "Delivery" means the physical transfer of Gas to or from the Katy Storage Facility.
3.23 "Delivery Default" means a Party's unexcused failure during any Gas Day or Month of the Transaction Period to discharge its obligations, as specified in a Confirmation, to Deliver Gas to the other Party at the Receipt Point or the Delivery Point, as applicable.
3.24 "Delivery Point" means the point at which Katy Delivers Gas to Customer for Customer's account. Unless otherwise stated in the applicable Confirmation, the Delivery Point will be the Storage Withdrawal Point.
3.25 "Demand Charge" means the fee which is to be paid on a Monthly basis and which is the product of (a) the applicable Demand Rate for service times (b) the number of MMBtus of such Service available to the Customer for the relevant Month.
3.26 "Demand Rate" means the Monthly rate per MMBtu for a Service available to Customer in respect of a Transaction as agreed to by Katy and Customer and stated in the applicable Confirmation.
3.27 "Designated Pipeline" means the designated pipeline in a Confirmation or Nomination used by the Customer to (a) Deliver Gas to the Katy Storage Facility at the Receipt Point; or (b) Receive Gas from the Katy Storage Facility at the Delivery Point.
3.28 "Early Termination Date" means the date determined in accordance with Section 20.4.1 of the Operating Statement.
3.29 "Event of Default" means the occurrence at any time with respect to a Party of any of the events detailed in Section 20.2 below.
3.30 "Excess Nominations Charge" means the fee which is to be paid on a Monthly basis and which is the product of (a) the applicable Excess Nomination Rate times
3.31 (b) the number of MMBtus accepted by Katy that exceed the MDIQ or MDWQ, or MDDQ or MDRQ, available to Customer under the relevant Confirmation.
3.32 "Excess Nominations Rate" means the fee per MMBtu stated in the applicable Confirmation that will apply to all Nominations accepted by Katy that exceed the MDIQ or MDWQ, or MDDQ or MDRQ, available to Customer under that Confirmation.
3.33 "Extended Loaning Charge" means the fee which is to be paid on a Monthly basis but which is to consist of the aggregate sum of the daily charges during such Month, with each such daily charge calculated as the product of (a) the applicable daily rate (b) the number of MMBtus that Customer has failed to re-Deliver to Katy pursuant to a Transaction for Loaning Service Transaction.
3.34 "Extended Storage Charge" means the fee which is to be paid on a Monthly basis but which is to consist of the aggregate sum of daily charges during such Month, with each such daily charge calculated as the product of (a) the applicable daily rate times (b) the number of MMBtus remaining in the Katy Storage Facility on each such Gas Day after the termination of the applicable Transaction Period (including the Gas Day on which such Gas is finally withdrawn).
3.35 "FERC" means the Federal Energy Regulatory Commission or any successor agency.
3.36 "Financial Assurances" means either (a) prepayment in cash (U.S. dollars) for Services on terms satisfactory to Katy, with such cash being placed in a segregated, interest-bearing escrow account at a Qualified Institution in the name of Customer and pledged to Katy pursuant to an account control agreement, with interest and expenses on such account accruing to the account of Customer; (b) a standby irrevocable letter of credit issued by a Qualified Institution; (c) a guarantee by Credit Support Provider that satisfies the credit requirements of Katy in a form acceptable to Katy in its reasonable discretion; (d) grant of a first priority security interest in collateral satisfactory to Katy; or (e) another form of assurance satisfactory to Katy in its reasonable discretion.
3.37 "Firm Customer" means a Customer who utilizes Services under a Confirmation for Firm Storage Service, No-Notice Service or Firm Wheeling Service.
3.38 "Firm" or "Firm Service" refers to "Firm Storage Service", "No-Notice Service" or "Firm Wheeling Service."
3.39 "Firm Storage Service" or "FSS" is a Service (of the highest priority) that allows a Customer to inject, withdraw, and/or store Gas at the Katy Storage Facility during a stated period of time, subject to the rights, obligations, and limitations stated in the applicable Transaction Document(s).
3.40 "Firm Wheeling Service" is a Service (of the highest priority) whereby Katy uses its interconnection facilities between multiple pipelines to facilitate transfers of Gas by Customer from one pipeline to another. It involves the Delivery of a specified Quantity of Gas by Customer to Katy at a Receipt Point, and Katy's subsequent Delivery of a thermally equivalent Quantity of Gas, less fuel, if any, to Customer at a Delivery Point.
3.41 "Force Majeure" has the meaning provided in Section 21.0 of this Operating Statement.
3.42 "Fuel" means a Quantity of Gas, expressed as a percentage of MMBtus of Gas injected, withdrawn or transported into the Katy Storage Facility that Customer agrees to provide to Katy, in respect of Services to be provided under a Transaction, to be utilized as fuel in connection with those Services.
3.43 "Gas" means natural Gas of a quality at least equal to the quality specified in Section 10.0 of this Operating Statement.
3.44 "Gas Day" means a period of twenty-four (24) consecutive hours, beginning and ending at 9:00 A.M. CCT including Saturdays, Sundays, and Federal Banking Holidays.
3.45 "Heating Value" means the gross heating value on a dry basis, measured in Btu, produced by combustion in air of one (1) cubic foot of anhydrous gas at a temperature of sixty degrees Fahrenheit (60o F) and a constant pressure of fourteen and sixty-five hundredths pounds per square inch absolute (14.65 psia), the air being at the same temperature and pressure as the Gas, after the products of combustion are cooled to the initial temperature of the Gas and air, and after condensation of the water formed by combustion.
3.46 "Interruptible" means that the injection, withdrawal, parking, loaning and storage of Customer's Gas, which is subject to interruption at any time by Katy, without any liability whatsoever. Any Service designated as Interruptible shall have the priority specified in Section 7.0 of this Operating Statement.
3.47 "Interruptible Customer" means a Customer who utilizes Services under a Confirmation for Interruptible Service(s).
3.48 "Interruptible Storage Service" or "ISS" is a Service (subject to interruption at any time) that allows Customer to inject, withdraw, and/or store Gas at the Katy Storage Facility for a stated period of time, subject to the obligations and limitations stated in the applicable Transaction Document(s).
3.49 "Interruptible Wheeling Service" is an Interruptible Service whereby Katy uses its interconnection facilities between multiple pipelines to facilitate transfers of Gas by Customer from one pipeline to another. It involves the Delivery of a specified Quantity of Gas by Customer to Katy at a Receipt Point, and Katy's subsequent Delivery of a thermally equivalent Quantity of Gas, less fuel, if any, to Customer at a Delivery Point.
3.50 "Inventory Charge" means the fee which is to be paid on a Monthly basis and which is the product of (a) the applicable Inventory Rate for Interruptible Storage Service times (b) the number of MMBtus of such Interruptible Storage Service available to the Customer for the relevant Gas Day or Month (as applicable) times (c) the number of Gas Days during which such MMBtus remains in the Katy Storage Facility for the relevant Month, if such fee is stated on a "per Gas Day" basis, or one (1), or if such fee is stated on a "per Month" basis.
3.51 "Inventory Rate" means the Daily or Monthly rate per MMBtu for Interruptible Storage Service available to Customer in respect of a Transaction as agreed to by Katy and Customer as stated in the applicable Confirmation.
3.52 "Katy Group" means Katy, its partners and Affiliates, and the officers, directors, partners, shareholders, stockholders, members, managers, employees, agents, representatives and contractors and subcontractors (of every tier) of each of the foregoing.
3.53 "Katy Storage Facility" or "Storage Facility" means the underground Gas storage reservoir known as the Katy Hub and Gas Storage Facility owned by Katy, together with certain associated lands, injection wells, withdrawal wells, and other storage and pipeline facilities, located near Katy, Fort Bend County, Texas having a physical address of 25959 Westheimer Pkwy, Katy, TX 77494.
3.54 "Loaned Quantities" means, in respect of each Transaction for Loaning Service, the Quantities of Gas loaned to Customer by Katy under each such Loaning Service Transaction, which Katy shall account for using recognized industry standards, which accounting shall be deemed conclusively correct absent manifest error.
3.55 "Loaning Service" is an Interruptible Service that allows Customer to receive a Quantity of Gas from Katy for Customer's short-term use and then return a thermally equivalent Quantity of Gas at a specified time and date.
3.56 "Master Service Agreement" means the Master Service Agreement executed by Customer and Katy (together with all attachments thereto) which shall govern all Confirmations and Transactions and which is hereby deemed to incorporate by reference, this Operating Statement.
3.57 "Material Adverse Change" means the occurrence of any change in business conditions described in Section 19.5, or the failure of Customer at any time to: satisfy the requirements pertaining to Creditworthiness as set forth in Section 19.3; to maintain an Acceptable Credit Rating; or to maintain or reinstate Financial Assurances.
3.58 "Maximum Aggregate Loaning Quantity" or "MALQ" means the maximum aggregate Quantity of Gas that Customer is entitled to Receive from Katy under a Transaction for Loaning Service, as stated in the applicable Confirmation.
3.59 "Maximum Aggregate Parking Quantity" or "MAPQ" means the maximum aggregate Quantity of Gas that Customer may maintain in the Katy Storage Facility at any time under a Transaction for Parking Service, as stated in the applicable Confirmation.
3.60 "Maximum Aggregate Storage Quantity" or "MASQ" means the maximum aggregate Quantity of Gas that Customer is permitted to have in storage in the Katy Storage Facility at any time under a Transaction for Storage Service as stated in the applicable Confirmation.
3.61 "Maximum Aggregate Wheeling Quantity" or "MAWQ" means the maximum aggregate Quantity of Gas which Katy is obligated to wheel at any one time for the account of Customer as specified in the applicable Confirmation.
3.62 "Maximum Daily Delivery Quantity" or "MDDQ" means the maximum quantity of Gas which Katy is obligated to deliver to a Customer from the Katy Storage Facility for the account of Customer during one Day under a Firm or Interruptible Wheeling Service Confirmation.
3.63 "Maximum Daily Injection Quantity" or "MDIQ" means the maximum Quantity of Gas which Customer may request Katy to inject into storage for the account of Customer under a Storage Service Confirmation, on any given Gas Day as set forth in such Confirmation; unless otherwise provided in a Confirmation, Customer will be obligated to inject all Daily quantities ratably over a 24-hour period.
3.64 "Maximum Daily Receipt Quantity" or "MDRQ" means the maximum quantity of Gas which Katy is obligated to receive for the account of a Customer during one Day under a Firm or Interruptible Wheeling Service Confirmation. Total MDRQ shall include fuel.
3.65 "Maximum Daily Withdrawal Quantity" or "MDWQ" means the maximum Quantity of Gas which Customer may request Katy to withdraw from storage for the account of the Customer under a Storage Service Confirmation on any given Gas Day as set forth in such Confirmation; unless otherwise provided in a Confirmation, Customer will be obligated to withdraw all Daily quantities ratably over a 24-hour period.
3.66 "MMBtu" means one million Btus.
3.67 "Mcf" means the quantity of natural Gas occupying a volume of one thousand (1,000) cubic feet at a temperature of sixty degrees Fahrenheit (60o F) and a pressure of fourteen and sixty-five hundredths pounds per square inch absolute (14.65 psia).
3.68 "Month" means a period beginning at 9:00 A.M. Central Clock Time on the first Gas Day of a calendar month and ending at 9:00 A.M. Central Clock Time on the first Gas Day of the next succeeding calendar month.
3.69 "Monthly Reference Price" means the arithmetic average of the applicable Daily Reference Price or substitute thereof, for each Gas Day of the relevant Month, including weekend deals.
3.70 "Moody's" means Moody's Investor Services, Inc. and any successor entity.
3.71 "Net Termination Amount" shall have the meaning ascribed to such term in Section 20.6.4 of the Operating Statement.
3.72 "Net Termination Balance" shall have the meaning ascribed to such term in Section 20.6.2 of the Operating Statement.
3.73 "NGPA" means the Natural Gas Policy Act of 1978.
3.74 "NYMEX" means the New York Mercantile Exchange.
3.75 "Nomination" shall have the meaning ascribed to such term in Section 6.1 of the Operating Statement.
3.76 "No-Notice Service" or "NNSS" is a Firm Service whereby the Customer may deviate from its nominations pursuant to its FSS Master Service Agreement, as set forth in Customer's NNSS Master Service Agreement, provided: (i) Katy has determined that it has sufficient operationally available and uncommitted firm storage capacity and injection and withdrawal capacity to perform the no-notice service Customer has requested; (ii) Customer and Katy have executed a FSS Master Service Agreement and a NNSS Master Service Agreement; (iii) Customer accepts responsibility for arranging any transportation service required (any such arrangements for utilization of no-notice service must be acceptable to Katy, in its reasonable judgment); and (iv) Customers' rights shall at all times be subject to its FSS Master Service Agreement, including with respect to its MDDQ, MDRQ, MDIQ, and MDWQ; and (v) availability of no-notice service shall be subject to a determination by Katy that its performance of the service requested shall not cause a reduction in Katy's ability to provide Firm Storage Services under currently effective Master Service Agreements.
3.77 "Non-Spec Gas" shall have the meaning ascribed to such term in Section 10.2 of the Operating Statement.
3.78 "Normal Operating Pressure" means the rolling one hundred eighty (180) Gas Day average operating pressure at the point of interconnection with the Katy Storage Facility.
3.79 "Overrun Charge" means the fee which is to be paid on a Monthly basis and which is the product of (a) the applicable Overrun Rate times (b) the peak quantity of Customer Inventory at any time during a Month in excess of Customer's Capacity Demand.
3.80 "Overrun Rate" means the Monthly charge per MMBtu payable by Customer for Customer Inventory in excess of Customer's Capacity Demand, as determined by Katy in its reasonable discretion.
3.81 "Park Balance" means the quantity of Gas that Customer has at the Katy Storage Facility for Customer's account under a Master Service Agreement for Parking Service, provided that the Park Balance shall never exceed Customer's Maximum Aggregate Parking Quantity specified in Customer's Master Service Agreement.
3.82 "Parking Service" is an Interruptible Service providing for the short-term custody of a Customer's Gas. It involves the Delivery of a specified Quantity of Gas by Customer to Katy at the Receipt Point, and the subsequent Delivery of a thermally equivalent Quantity of Gas by Katy to Customer at the Delivery Point, in accordance with the terms of the applicable Confirmation.
3.83 "Party" means either Katy or Customer; "Parties" means Katy and Customer, collectively.
3.84 "Person" means any natural person or any corporation, partnership, limited liability company or other entity of any type, public or private.
3.85 "Prompt Month" means the nearest month of Delivery for which NYMEX futures prices are published during the current trading month.
3.86 "Qualified Institution" means the domestic office of a commercial bank or trust company that is not an Affiliate of Customer and that has assets of at least $10 billion and credit ratings of at least A- by S&amp;P and at least A3 by Moody's.
3.87 "Quantity of Gas" means the quantity of Gas expressed in MMBtus, unless otherwise specified.
3.88 "Ratable Daily Loan Quantity" or "RDLQ" means the ratable Quantity of Gas that Customer is required to Receive from Katy on any given Gas Day under a Transaction for Loaning Service, as set forth in the applicable Confirmation; Customer will be obligated to Receive such RDLQ ratably over a 24-hour period.
3.89 "Ratable Daily Loan Payback Quantity" or "RDLPQ" means the ratable Quantity of Gas that Customer is required to re-Deliver to Katy on any given Gas Day under a Transaction for Loaning Service, as set forth in the applicable Confirmation; Customer will be obligated to re-Deliver such RDLPQ ratably over a 24-hour period.
3.90 "Ratable Daily Parking Quantity" or "RDPQ" means the ratable Quantity of Gas that Customer is required to inject into storage on any given Gas Day under a Transaction for a Parking Service, as set forth in the applicable Confirmation; Customer will be obligated to inject such RDPQ ratably over a 24-hour period.
3.91 "Ratable Daily Unparking Quantity" or "RDUQ" means the ratable Quantity of Gas that Customer is required to withdraw from storage on any given Gas Day under a Transaction for Parking Service, as set forth in the applicable Confirmation; Customer will be obligated to withdraw such RDUQ ratably over a 24-hour period.
3.92 "Receipt" or "Receive" means the physical Receipt, or its equivalent, of Gas by Katy at a Receipt Point from or for the account of the Customer.
3.93 "Receipt Default" means a Party's unexcused failure during any Gas Day or Month of the Transaction Period to discharge its obligations, as specified in a Confirmation, to receive Gas made available by the other Party at the Receipt Point or the Delivery Point, as applicable.
3.94 "Receipt Point" means the point at which Katy receives Gas for Customer's account.
3.95 "Reference Price" means as applicable, the Daily or Monthly Gas price reported in Platts Gas Daily or any successor publication. The "Daily Reference Price" for the Katy Storage Facility will be the midpoint for "East-Houston-Katy - Katy Reference Price." If at any time the Reference Price is not published in the manner previously described, the Substitute Reference Price shall then become the "Reference Price."
3.96 "REGARDLESS OF CAUSE" means without regard to the negligence of any person or party, including the indemnified party or parties, whether such negligence be sole, joint, concurrent, active, or passive, and additionally, without regard to pre- existing conditions, whether such conditions to be patent or latent, imperfection of material, defect or failure of equipment, ultrahazardous activity, strict liability or any other tort.
3.97 "RRC" means the Texas Railroad Commission or any successor agency.
3.98 "Section 311 Warranty" means, if any Gas subject to any Confirmation hereunder is in interstate commerce, Customer's warranty that (a) such Gas is eligible for transportation and storage at the Katy Storage Facility pursuant to Section 311 of the NGPA (and will continue to be eligible for the entire period covered by the relevant Confirmation) and (b) Customer is in compliance with all rules and regulations applicable to such eligible transportation and Storage Services, including, without limitation, compliance with the "on behalf of" standard, as that standard or any such rules and/or regulations may be amended from time to time.
3.99 "Service(s)" means the injection, storage, withdrawal, parking, loaning, or wheeling of Gas, and any ancillary services to be performed by Katy for Customer pursuant to a Master Service Agreement and relevant Confirmation.
3.100 "S&amp;P" means Standard &amp; Poor Rating Group (a division of McGraw-Hill, Inc.) and any successor entity.
3.101 "Storage Injection Point" and "Storage Withdrawal Point" means the point of interconnection of the Katy Storage Facility and the Designated Pipeline.
3.102 "Storage Service" means either Firm Storage Service or Interruptible Storage Service or No-Notice Storage Service, as the case may be.
3.103 "Storage Inventory" means the quantity of Working Gas that a Customer has in place at the Katy Storage Facility for Customer's account, provided that the Storage Inventory shall never exceed Customer's Maximum Aggregate Storage Quantity.
3.104 "Substitute Reference Price" means the substitute "Reference Price" as determined by the following procedures: If at any time the Reference Price is no longer published in the manner described in the definition for Reference Price, Katy shall provide notice ("Substitute Reference Price Notice") thereof to Customer in which event the Parties shall attempt to agree on a Substitute Reference Price. If the Parties are unable to reach an agreement on a Substitute Reference Price within fifteen (15) Business Days following delivery of the Substitute Reference Price Notice, either Party will be entitled to require that the determination thereof be submitted for resolution to an independent consultant having the requisite experience, selected by Katy in its reasonable discretion. The independent consultant will be instructed to select a price reference or index that, in the reasonable and fair opinion of the independent consultant, most accurately reflects, the applicable Daily or Monthly spot-market price for Gas Delivered on the Designated Pipeline by way of an inventory transfer. The independent consultant's determination shall be final and binding on the Parties.
3.105 "Termination Amount" shall have the meaning ascribed to such term in Section 20.6.4 of the Operating Statement.
3.106 "Termination Amount Notice" shall have the meaning ascribed to such term in Section 20.6.4 of the Operating Statement.
3.107 "Title Transfer" means title changes from party to party that do not affect a physical transfer of the Gas.
3.108 "Transaction" has the meaning as set forth in Section 5.2.
3.109 "Transaction Document(s)" means the Operating Statement, the Master Service Agreement, and all Confirmations and Nominations entered into pursuant to the Master Service Agreement.
3.110 "Transaction Period" means the period of time during which a Transaction will be performed, as stated in the applicable Confirmation.
3.111 "Week" means a period of seven (7) consecutive Gas Days beginning at 9:00a.m. Central Clock Time, on each Monday and ending at the same time on the next succeeding Monday.
3.112 "Wheeling Charge" means the fee which is to be paid on a Monthly basis and which is the product of (a) the applicable Wheeling Rate times (b) the number of MMBtus of Gas for which the Wheeling Service was rendered.
3.113 "Wheeling Quantity" means the amount of Gas stated in the applicable Confirmation that Customer and Katy each agree to Delivery to and to Receive from the other on each Gas Day during the Transaction Period. The Wheeling Quantity Delivered to the Delivery Point by Katy must contain equal Heating Value, measured in MMBtus, less Fuel, to the Quantity of Gas received from Customer at the Receipt Point. Katy will be responsible for making the measurement conversions from Heating Value to volume or volume to Heating Value in all Wheeling Service arrangements, in accordance with conversion procedures set forth in the applicable pipeline tariffs.
3.114 "Wheeling Rate" means the rate per MMBtu for a Wheeling Service as agreed to by Katy and Customer and stated in the applicable Confirmation.
3.115 "Wheeling Service" means Firm Wheeling Service or Interruptible Wheeling Service.
4.0 SERVICES
4.1 Eligibility. From time to time, subject to (i) Customer's prior execution of a Master Service Agreement and having met the eligibility requirements stated herein and therein and (ii) the availability of storage capacity, injection capacity, and deliverability, Katy will offer storage and other related Services (which includes interstate natural Gas storage and related transportation services) to Customer on a non-discriminatory basis.
4.2 Services. The following Services shall be offered under this Operating Statement, conditioned upon the execution of a Master Service Agreement and the Confirmation or deemed Confirmation, by Customer of the Transaction-specific terms contained in the applicable Transaction in accordance with Section 5.0 below:
4.2.1 Firm Storage Service;
4.2.2 Interruptible Storage Service;
4.2.3 No-Notice Storage Service
4.2.4 Firm Wheeling Service
4.2.5 Interruptible Wheeling Service;
4.2.6 Parking Service; and
4.2.7 Loaning Service.
4.3 Additional Service. Subject to refund, Katy shall be entitled to offer any additional Service not listed above, but created subsequent to the filing of this Operating Statement with FERC, so long as such Services are offered to all Customers on a non-discriminatory basis and any applicable filings are made with FERC.
4.4 Title Transfer.
4.4.1 A Customer that has executed a Master Service Agreement for Firm Storage Service, Interruptible Storage Service, Parking Service or Wheeling Service may sell its Storage Inventory or Park Balance or Wheeling Quantity, as applicable, to any other Customer that has executed a Master Service Agreement for Firm Storage Service, Interruptible Storage Service, Parking Service or Wheeling Service if:
(a) Customer selling Storage Inventory, Park Balance or Wheeling Quantity, as applicable, provides notification to Katy prior to the nomination deadline and provides prior written approval from Katy with written verification (via e-mail or instant messaging) of the transfer within five (5) Business Days; and
(b) The purchase does not cause either Customer to exceed its Maximum Aggregate Storage Quantity or Maximum Aggregate Parking or Wheeling Quantity, as applicable, and as specified in Customer's Master Service Agreement or cause either Customer's balance to go below zero.
4.4.2 Katy will recognize the transfer for purposes of computing available Storage Inventory, Park Balance or Wheeling Quantity, as applicable, on a prospective basis within two (2) Business Days after receiving the notification. In the event the required written verification (via e-mail or instant messaging) is not received, the transfer will no longer be recognized and the Storage Inventory, Park Balance or Wheeling Quantity for each Customer will be restated to reflect the reversal of the transfer.
4.4.3 For each title transfer of Gas performed by Customer under this Section 4.4, the transferring Customer shall pay the market-based fee for title transfer set forth by Katy. This Section does not prohibit or limit the number of title transfer services provided by third party providers.
4.4.4 Katy may restrict transfers when such transfers would result in an increase in the service obligations of Katy or cause operational difficulties and such increase or operational difficulties would, in the reasonable judgment of Katy, impair the ability of Katy to meet all of its other service obligations of equal or higher priority. Transfers may only occur between Customers under a Master Service Agreement pertaining to the same service and priority.
4.5 Regulations. Any and all interstate Services offered under this Operating Statement and rendered pursuant to a Master Service Agreement must be eligible under, and shall be fully subject to all applicable requirements of Section 284.123 of the regulations of the FERC as such regulations may be revised from time to time. Customer's request for Service shall constitute its warranty that it satisfies such requirements. If Customer seeks to enter into a Confirmation for storage and/or related Services for Gas that is in interstate commerce, Customer hereby gives Katy Customer's Section 311 Warranty and Customer is hereby deemed to re-confirm such Section 311 Warranty each time Customer submits a Nomination involving Gas that is in interstate commerce. Customer shall re-confirm such Section 311 Warranty on any Confirmation or Nomination as requested by Katy. Katy shall have the right to request information from Customer to verify its eligibility for Service under the applicable regulations.
5.0 CONFIRMATIONS
5.1 Confirmation. A Customer desiring any Service under a Master Service Agreement shall make an oral or written request to Katy that includes, but is not limited to, information such as the exact legal name of the Customer requesting Service, the type of Service requested, the proposed initial maximum Daily quantities, and the proposed term of Service. Katy shall duly consider all Service requests and will contact Customer regarding whether Katy can provide such Service. If Katy can provide some, but not all, of the requested Service, Katy will advise the requesting party of the maximum quantities that Katy will be able to accommodate.
5.2 Execution of the Confirmation. The Parties' agreement regarding the provision of a Service under a Master Service Agreement (a "Transaction") shall be made in accordance with the provisions of this Section 5.2. The Transaction-specific terms may be agreed upon either verbally or electronically, with the communication of an offer and the communication of an acceptance of such terms constituting a valid, binding and enforceable agreement between the Parties, subject to the terms of the Operating Statement then in effect and the Master Service Agreement. Notwithstanding that the Parties shall be legally bound from the time they agree to the terms of a Transaction, Katy promptly shall memorialize the terms of each Transaction in writing in Katy's standard confirmation form or via electronic Nomination platform (a "Confirmation"). (For purposes of the immediately foregoing sentence, the term "promptly" shall mean, with regard to an agreement reached on a Transaction on a particular Gas Day, (i) if such agreement is reached before the close of NYMEX trading for that Gas Day, the Confirmation for that Transaction will be sent to Customer by 5:00 p.m. CCT on that Gas Day or (ii) if such agreement is reached after the close of the NYMEX trading for that Gas Day, the Confirmation for that Transaction will be sent to Customer by 5:00 p.m. CCT of the next following Gas Day). The Parties may electronically record conversations via telephone, email or instant messaging between their respective employees relating to any Transaction, without further notice to the other Party, to be used solely for reference when memorializing the terms of a Transaction in a Confirmation; provided, however, that any such recording shall be subject to verification of authenticity. Each Confirmation shall be signed by Katy and faxed or transmitted electronically to Customer for execution and delivery to Katy. The required terms for each Transaction shall include the Service fees, fee structure, the Transaction Period, and the following:
5.2.1 Firm Storage Service: Capacity Demand, Maximum Daily Injection Quantity, and Maximum Daily Withdrawal Quantity, and the specific Delivery Point(s) and Receipt Point(s);
5.2.2 Interruptible Storage Service: the injection, withdrawal, and storage quantities;
5.2.3 Firm Wheeling Service: Wheeling Quantity and the specific Delivery Point(s) and Receipt Point(s) where Customer will Deliver and receive the Wheeling Quantities. The terms of this Service are subject to confirmation via electronic Nomination platform;
5.2.4 Interruptible Wheeling Service: Wheeling Quantity and the specific Delivery Point(s) and Receipt Point(s) where Customer will Deliver and receive the Wheeling Quantities. The terms of this Service are subject to confirmation via electronic Nomination platform;
5.2.5 Parking Service: Maximum Aggregate Parking Quantity, Ratable Daily Parking Quantity, and Ratable Daily Unparking Quantity; and
5.2.6 Loaning Service: Maximum Aggregate Loaning Quantity, Ratable Daily Loan Quantity, and Ratable Daily Loan Payback Quantity.
5.2.7 No-Notice Service: No-notice quantity and the specific Delivery Point(s) and Receipt Point(s) where Customer wishes to alter its injections and/or withdrawals.
5.3 Confirmation Process. Upon receipt of a specific Confirmation, Customer shall either:
5.3.1 Execute and fax or transmit electronically back to Katy such signed Confirmation confirming the terms of the Transaction; or
5.3.2 Notify Katy in writing of any changes required to reflect Customer's understanding of the terms agreed to by Katy and Customer, within the earlier to occur of (a) three (3) Business Gas Days from delivery of the Confirmation by Katy; and (b) the period of time specified in such Confirmation.
5.4 Changes to Confirmation. If Customer fails to notify Katy of any changes in accordance with Section 5.3.2 above, Customer shall be deemed for all purposes to have confirmed the terms set forth in such Confirmation as accurately reflecting the terms of the Transaction as agreed to by Katy and Customer, regardless of whether Customer executes and returns such Confirmation to Katy.
5.5 Error. If Customer notifies Katy of an alleged error in a Confirmation in accordance with Section 5.3.2, the Parties shall attempt to reach agreement on revisions to the applicable Confirmation required to properly reflect the Transaction-specific terms agreed to by the Parties. The process of verifying the Transaction terms as memorialized in a Confirmation as set forth in this Section 5.0 is for the sole purpose of correcting any errors in transcribing the verbal or electronic agreement made by the Parties and is not intended to be a means for re- negotiating any terms of such agreement. Once such agreement is reached, Katy shall fax or transmit electronically to Customer the applicable revised Confirmation reflecting those revisions. Section 5.3 shall apply to Customer's receipt of any such revised Confirmation.
5.6 Binding Confirmation. Upon confirmation, or deemed confirmation, of the Transaction-specific terms in the Confirmation by the Customer, the Confirmation shall become, for all purposes, the final and complete evidence with respect to the Transaction to which it applies. In the event (i) Katy fails, for any reason, to deliver to Customer a form of Confirmation in respect of a Transaction as required by this Section 5.0, or (ii) Customer notifies Katy in accordance with Section 5.3 and the Parties thereafter fail to resolve any dispute with respect to the terms specified in a Confirmation forwarded by Katy, the Transaction as originally agreed to by the Parties (as evidenced by a record of the initial communication of an offer and an acceptance, whether verbal, electronic or otherwise) shall nevertheless be binding. All references to a "Confirmation" in this Operating Statement or in any other Transaction Document are intended (unless a provision contemplates a written document) to refer to both a "Transaction" that has been memorialized in a written Confirmation, as well as any "Transaction" for which a written Confirmation was not done or agreed upon, but which is nonetheless binding between the Parties pursuant to the terms of this Operating Statement.
5.7 Terms of Service. The terms of a Transaction shall remain in effect until duly changed by the agreement of the Parties or until interrupted by Katy for operational reasons, to serve Customers with a superior Service priority or as otherwise allowed in accordance with the terms of the Master Service Agreement or the applicable Transaction.
5.8 Creditworthiness. Nothing in this Operating Statement or the Master Service Agreement shall be deemed to obligate Katy to render any Service until both Customer and Katy have entered into a Transaction for that Service. Katy shall not be required to provide any Service if: (i) Katy determines, based on its credit analysis, that the requesting party does not satisfy Katy's credit requirements as described in Section 19.0 below; (ii) the Service requested would require the construction, modification, expansion or acquisition of any facility; (iii) the Service requested would not comply with the Operating Statement then in effect or the Master Service Agreement; (iv) Katy lacks adequate capacity or deliverability to provide the requested Service; or (v) the Parties are unable to agree upon mutually acceptable terms for the Service.
6.0 NOMINATIONS
6.1 Nomination Requirements. For any Gas Day that Customer desires Deliveries or Receipts of Gas or other Services at the Katy Storage Facility, Customer must submit a request for such Delivery or Receipt or other Service (a "Nomination") in accordance with the requirements of this Section 6.0. Nominations will be accepted only for Transactions that are currently in effect and only in accordance with the provisions of this Section 6.0. Subject to Sections 8.0, 20.0, 21.0, and 22.0 below, Katy shall schedule such Services as are nominated and tendered to Katy in accordance with the terms set forth herein and in the applicable Confirmation.
6.1.1 Customer shall make all Nominations electronically at www.gasstorage.net/katy (the "Katy Website"). Katy shall take such commercially reasonable steps as it deems necessary to ensure the security and adequate functioning of such website, but shall have no liability for the inaccuracy or incompleteness of any communication related thereto.
6.2 Nominations. Katy will accept Nominations for Service as follows:
6.2.1 Monthly Nominations: No later than 1:00 p.m., Central Clock Time, on the second Business Day prior to the first Gas Day of each Month or, if the initial Delivery of Gas under a Confirmation is not to occur at the beginning of the Month, on the Business Day prior to the date of the initial Deliveries, Customer shall provide Katy with a Nomination showing (i) Customer's Daily volumes to be Delivered to Katy at each Receipt Point during the succeeding Month or (ii) an allocation of volumes to be Delivered by Katy at each Delivery Point, as applicable.
6.2.2 Daily Nominations: If Customer wishes to make a change to a Nomination for a particular Gas Day, Customer shall advise Katy of such change, including, but not limited to, the Quantity of Gas scheduled to be tendered at each of the Receipt Point and Delivery Point via the Katy Website as soon as possible, but in no event later than 1:00 p.m., Central Clock Time, on the first Business Day immediately preceding the Gas Day on which such change is to take place.
6.2.3 No-Notice Service Nominations: If Customer desires No-Notice Service under a NNSS Master Service Agreement, Customer may submit a nomination to Katy to schedule such No-Notice Service at any time prior to the date and time at which Customer desires such No-Notice Service to commence. Katy will schedule such service only if the applicable interconnected parties agree on the hourly flows of the nomination and the nomination otherwise satisfies the limitations under the NNSS Master Service Agreement. To the extent that the nomination involves scheduling service for the following day, Katy will schedule such service only if Katy is able to confirm the receipt and delivery of such Gas at the applicable Point(s) of Receipt and Point(s) of Delivery. All nominations shall be based on a daily quantity.
6.2.4 Nominations: Additional Nomination cycles shall be available for Customer upon direct request to Katy, for an additional charge as agreed upon by Katy and Customer in the applicable Confirmation. If Katy, in its reasonable discretion, accepts a Nomination from Customer for Delivery of Gas during a period of less than twenty-four (24) hours, in no event shall Customer be entitled to a Delivery greater than one twenty-fourth (1/24th) of the Customer's MDIQ or MDWQ, or MDRQ or MDDQ for the contract multiplied by the number of hours between the effective time of the Delivery and the end of the Gas Day.  Provided however, that a Customer under a NNSS Master Service Agreement has the option, pursuant to the rights and limitations described in Section 6.2.3, for Customer to increase or decrease its injections or withdrawals of Gas at primary points specified in Customer's No-Notice Storage Service Agreement from existing scheduled quantities, including a nomination of zero, up to Customer's MDIQ or MDWQ, as applicable, without complying with the deadlines for revised nominations under this Section 6.0. Further, the no-notice option is also limited by the MDRQ and MDDQ at such points.
6.3 Timely Nomination. If Customer fails to provide a timely Nomination, Customer's Nomination shall be rejected unless Katy, in its reasonable discretion, agrees to accept the late Nomination.
6.4 Scheduling of Nomination. To confirm and schedule Customer's Nomination, Katy will consider the available capacity of the Katy Storage Facility, other Firm and Interruptible Nominations, and the aggregate of Storage Inventory at the relevant time.
6.5 Rejection of Nomination. Katy shall always have the right to reject a Nomination, and shall have no liability to Customer or any other Person in connection with such rejection of Service, if under such Nomination:
6.5.1 the aggregate charges payable by Customer for the requested Services, together with the total aggregate charges payable by Customer under all other Confirmations and all other amounts owed by Customer to Katy, would exceed the credit limit established for Customer pursuant to Section 19.0;
6.5.2 the Quantity of Gas to be injected under an injection Nomination would cause Customer Inventory to exceed Customer's Capacity Demand;
6.5.3 the Quantity of Gas to be withdrawn under a withdrawal Nomination is greater than the Customer Inventory at the time of the Nomination;
6.5.4 the Quantity of Gas to be Delivered by Katy under a Loaning Service Confirmation would exceed Customer's Maximum Aggregate Loaning Quantity or Ratable Daily Loan Quantity;
6.5.5 the Quantity of Gas to be received by Katy under a Loaning Service Confirmation would exceed Customer's Ratable Daily Loan Payback Quantity;
6.5.6 the Quantity of Gas to be received under a Parking Service Confirmation would be in excess of Customer's Maximum Aggregate Parking Quantity or Customer's Ratable Daily Parking Quantity in respect of such Transaction;
6.5.7 the Quantity of Gas to be Delivered by Katy under a Parking Service Confirmation would be in excess of Customer Inventory or Customer's Ratable Daily Unparking Quantity in respect of such Transaction;
6.5.8 the Quantity of Gas under any withdrawal or injection Nomination would exceed the Customer's ratable Maximum Daily Withdrawal Quantity or ratable Maximum Daily Injection Quantity, respectively;
6.5.9 the Quantity of Gas to be received under a Firm Wheeling Confirmation would exceed the Customer's Maximum Aggregate Wheeling Quantity;
6.5.10 the Quantity of Gas to be Delivered under a Firm Wheeling Confirmation would exceed the Customer's Maximum Aggregate Wheeling Quantity.
6.6 Acceptance of Nomination. Katy may, in its reasonable discretion but not on an unduly discriminatory basis, accept any such Nomination that may otherwise be rejected under Sections 6.2.1 - 6.2.3 above. If Katy accepts any such Nomination, any Service under such Nomination shall be Interruptible and subject to any applicable Overrun Charge and/or other applicable fees. Nothing in this Section shall be construed as obligating Katy to accept any excess Nomination even if Katy's refusal to do so results in Customer's breach of its obligation to reduce Customer Inventory to zero by the end of the Transaction Period as set forth in the applicable Confirmation.
6.7 Nomination Procedures. Katy may change the foregoing Nomination procedures from time to time on one (1) calendar Month's prior written notice to Customer or as may be necessary to meet the Designated Pipeline's requirements or Katy's operational needs.
7.0 PRIORITY OF SERVICE
7.1 Scheduling of Priority of Service. Storage capacity, injection, and deliverability will be available in the following order of declining priority:
(a) Firm Storage Service, Firm Wheeling Service, and No-Notice Service (equally);
(b) Authorized Overrun injections or withdrawals requested pursuant to Firm Storage Service rights;
(c) Parking Service and Loaning Service (equally);
(d) Interruptible Storage Service;
(e) Authorized Overrun injections or withdrawals requested pursuant to Interruptible Storage Service rights;
(f) Interruptible Wheeling Service; and
(g) Make-up volumes to correct prior variances between (i) Designated Pipeline and Katy, (ii) Customer and Katy, and (iii) Customer and Designated Pipeline if the variance was due to Katy's failure to receive or Deliver Customer's scheduled volumes.
8.0 INTERRUPTION OF SERVICE
8.1 Firm Service and Interruptible Services. Interruptible Services are subject to interruption by Katy at any time and for any reason. Firm Service is subject to interruptions resulting from Force Majeure, maintenance, operational flow orders, curtailments (whether claimed by Katy, the Designated Pipeline or any other transporting pipeline) and/or as otherwise set forth in this Section 8.0. In the event Service is interrupted, Katy will notify Customer and Customer shall nominate for withdrawal of its stored or parked Gas, injection of Gas loaned to it and/or wheeling in accordance with the requirements set forth herein.
8.2 Interruptible Wheeling Service. Interruptible Wheeling Services are subject to interruption by either Party at any time and for any reason, provided that (i) Customer must provide notice to Katy by telephone at least twelve (12) hours before the time that the Receipt and/or Delivery of Gas will be interrupted and (ii) Katy shall provide notice to Customer of interruptions in a timely and reasonably prudent manner.
8.3 Normal Operating Pressure and Interruption of Service. The Katy Storage Facility is designed to store, inject and withdraw Gas based on the Normal Operating Pressure maintained by the Designated Pipeline at the Receipt Point(s) and Delivery Point(s), as applicable, with allowances for reasonable fluctuations. Katy shall not be obligated to receive or Deliver more Gas than the Katy Storage Facility is capable of receiving or Delivering under prevailing pressures and Customer's Receipt and Delivery rights may be curtailed by reason of abnormally high or low pressure in the Designated Pipeline system. In the event that conditions on the Designated Pipeline's system vary substantially from the Normal Operating Pressure, Katy may interrupt Service to the extent necessary and capacity will be allocated consistent with the allocation provisions of this Operating Statement.
8.4 Curtailments. Katy shall have the right to curtail Receipts and Deliveries of Gas as reasonably required from time to time to perform routine or emergency, scheduled or unscheduled maintenance, repairs, additions, or modifications to the Katy Storage Facility, or the testing of the same in accordance with the applicable regulations in order to monitor pressure in the Katy Storage Facility under static conditions. If a capacity constraint is anticipated or planned (for example, due to system maintenance) Katy shall post a notice of the anticipated constraint on its Katy Web Site at least two (2) Business Days in advance of the start of the constraint period.
8.5 Interruption of Services. In the event Katy is unable to receive or Deliver any Quantity of Gas for any reason and determines, in its reasonable discretion, that it is unable to meet all scheduled obligations to all Customers, Katy may interrupt Services to Customers in the reverse order of priority set forth in Section 7.0.
8.5.1 Interruption of Interruptible Services shall be based on the Service charges paid by each Interruptible Customer, with the lowest rate Service being interrupted first.
8.5.2 In the event that two or more Interruptible Customers tie for priority as determined in the manner set forth in the preceding sentence, Service to such Customers shall be interrupted on a pro rata basis based on the total nominated quantity. 
8.5.3 If Firm Storage Service must be interrupted interruption of such Service shall be pro rata basis based on MDIQ, and/or MDWQ, as applicable. Katy shall provide to Firm Storage Service Customers as much advance notice of any interruption as is practicable under these circumstances.
8.5.4 If Firm Wheeling Service must be interrupted interruption of such Service shall be pro rata basis based on MDDQ, and/or MDRQ, as applicable. Katy shall provide to Firm Wheeling Service Customers as much advance notice of any interruption as is practicable under these circumstances.
8.6 Required Withdrawals. To the extent Interruptible Customer(s) utilize storage capacity that is needed by Katy to satisfy Katy's obligations to Firm Customer(s), Katy may request that such Interruptible Customer(s) withdraw all, or any portion of, the Gas quantities being held in storage under such Interruptible Service(s), according to the priorities set forth in Section 7.0 and Section 8.5. Upon such request, Interruptible Customer(s) so requested shall nominate for withdrawal the maximum amount possible every Gas Day until the requested capacity is made available. If any Interruptible Customer fails to withdraw its stored Gas as requested, Katy may take title to the Customer Inventory under each of Customer's Interruptible Transactions (to the extent of all or any portion thereof, as applicable with regard to the amount that was requested to be withdrawn) free and clear of any adverse claim; provided, however, that if a Customer was unable to withdraw all or any portion of such Customer Inventory because of an interruption of Customer's withdrawal Service, Customer shall be allowed to withdraw such Customer Inventory within a reasonable time period following the expiry of such interruption.
8.7 KATY SHALL NOT BE LIABLE FOR ANY LOSS OR DAMAGE TO ANY PERSON OR PROPERTY CAUSED, IN WHOLE OR IN PART, BY ANY INTERRUPTION OF SERVICE, EXCEPT TO THE EXTENT CAUSED BY KATY'S GROSS NEGLIGENCE OR WILLFUL MISCONDUCT. CUSTOMER AGREES TO INDEMNIFY KATY GROUP FROM AND AGAINST ANY AND ALL CLAIMS AND/OR ENCUMBRANCES WHATSOEVER RESULTING FROM, ARISING OUT OF OR IN ANY WAY RELATED TO AN INTERRUPTION OF CUSTOMER'S SERVICE, REGARDLESS OF CAUSE (BUT NOT TO THE EXTENT CAUSED BY KATY'S GROSS NEGLIGENCE OR WILLFUL MISCONDUCT).
9.0 TENDER OF RECEIPTS AND DELIVERIES
9.1 Delivery. Customer shall Deliver or cause to be Delivered to Katy at the Receipt Point Gas that Customer has nominated to have injected into the Katy Storage Facility, plus applicable Fuel, if any. Customer shall also receive or cause to be received at the Delivery Point, upon tender by Katy, Gas that Customer has nominated to be withdrawn from the Storage Facility.
9.2 Transportation. Customer shall be responsible for nominating transportation on the Designated Pipeline under Customer's transportation contract with the Designated Pipeline and for paying all transportation charges related thereto.
9.3 Receipt and Delivery Defaults. In the event of either Party's unexcused failure (and for purposes of this Operating Statement, an "unexcused failure" shall not include any failure caused by a Force Majeure or any other interruption of Service permitted under this Operating Statement) to Deliver or receive a Quantity of Gas (for purposes of this Section, the "Default Quantity") to or from the other Party (or to or from a third party for the account of the other Party) in accordance with the proper Nomination under a particular Transaction (for purposes of this Section, the "Defaulted Transaction"), such defaulting Party shall use its best efforts to notify the non-defaulting Party before the scheduled Delivery or Receipt date, as applicable, for such Default Quantity. In any event, the non-defaulting Party shall provide written notice of the Receipt Default or Delivery Default, as the case may be, to the defaulting Party within three (3) Gas Days after the date of such Delivery Default or Receipt Default (for purposes of this Section, a "Default Notice"), and indicate in such Default Notice whether the non-defaulting Party desires to pursue a remedy. Upon request of the defaulting Party, the non- defaulting Party shall provide written documentation of such Receipt Default or Delivery Default in the form of allocation statements from the applicable Transporter(s). Subject to Sections 20.0, 25.0, and 26.0 of this Operating Statement, but notwithstanding any other provision in any Transaction Document to the contrary, the remedies of a non-defaulting Party for a Delivery Default or Receipt Default will be expressly limited as set forth below:
9.3.1 Unless the terms of Sections 9.3.3 or 9.3.4 are applicable, the Parties shall act in accordance with Section 9.3.2, which may include, among other things, the use of commercially reasonable efforts to enter into a corresponding Transaction (for purposes of this Section, the "Corresponding Transaction"). A Corresponding Transaction which may include, among other things, to the extent possible given the nature of the relevant Defaulted Transaction: (a) entering into an offsetting Transaction, e.g., if the Defaulted Transaction is a Loaning Service Transaction, entering into a Parking Service Transaction, or if the Defaulted Transaction is a Parking Service Transaction entering into a Loaning Service Transaction, or (b) entering into such other Transaction as to which the Parties may agree, to attempt to mitigate damages to the extent possible while preserving the economic substance of the initial agreement between the Parties as evidenced by the original terms of the Defaulted Transaction. Upon request, the Party claiming a Receipt Default or Delivery Default by the other Party shall provide written documentation of such Receipt Default or Delivery Default in the form of allocation statements from the applicable Designated Pipeline(s).
9.3.2 Firm Storage; Firm Wheeling; No-Notice; Parking; Loaning. Except as provided in Sections 9.3.3 and 9.3.4 below, in the event of a Defaulted Transaction, the Parties shall enter into a Corresponding Transaction. If the Parties cannot agree to the terms of a Corresponding Transaction (after attempting in good faith to do so), the non-defaulting Party may collect damages from the defaulting Party equal to the greater of:
(a) the absolute value of the product of (x) the Default Quantity times (y) the spread between the Daily Reference Price and the NYMEX Prompt Month settlement price for the Gas Day on which the relevant Nomination was made, as adjusted for the applicable basis differential plus applicable transportation; and
(b) the absolute value of the product of (x) the Default Quantity times (y) the spread between the Daily Reference Price and the NYMEX Prompt Month settlement price for the Gas Day on which the physical Gas of which was actually supposed to flow pursuant to such Nomination.
(c) In addition to the foregoing and notwithstanding anything else in any Transaction Document to the contrary, Customer shall at all times remain obligated for the Demand Charge associated with Customer's Firm Storage Service Transaction(s).
9.3.3 Interruptible Storage Service Transactions. If the Defaulted Transaction is an Interruptible Storage Service Transaction, the Parties shall use commercially reasonable efforts to re-nominate and Deliver or receive the nominated Gas, as the case may be, at each Party's earliest possible convenience.
9.3.4 Interruptible Wheeling Service Transactions. If the Defaulted Transaction is an Interruptible Wheeling Service Transaction, the terms of this Section 9.3.4 shall apply. Customer's Nominations into and out of the Katy Storage Facility will be adjusted so that Nominations are in balance with respect to such Customer at the end of each Gas Day. If any Customer Nomination is cut because of such default, it will be Customer's responsibility to work with Customer's Designated Pipeline to resolve any imbalance that results on the Designated Pipeline and Customer shall Indemnify Katy from and against any and all Designated Pipeline penalties related to the same.
9.3.5 Remedies. With respect to any remedy for any Receipt Default or Delivery Default, notwithstanding any provision in the Service Agreement to the contrary, and in addition to all other remedies available to Katy, Customer will be responsible for all charges that accrued before the date of the Receipt Default or Delivery Default as well as all injection or withdrawal charges that would otherwise be applicable to the Default Quantities under the Defaulted Transaction had such Receipt Default or Delivery Default not occurred.
9.3.6 Section 14 Remedies. If the Defaulted Transaction is a default by Customer and results in: (i) Customer Inventory remaining in the Katy Storage Facility after the end of a Transaction Period (if the relevant Transaction is for either Storage Service or Parking Service) or (ii) Customer failing to re-Deliver all Loaned Quantities on or before the last Gas Day of the Transaction Period (if the relevant Transaction is for Loaning Service), Katy shall have the continuing option to assert its remedies under Section 14.0.
10.0 QUALITY
10.1 Quality Standards. Except as otherwise provided below, Gas Delivered to Katy at the Receipt Point(s) and all Gas Delivered at the Delivery Points(s) shall conform to the required specifications set forth in Appendix "B", attached hereto ("Required Specifications").
10.2 Indemnification for Delivery of Non-Conforming Gas. Customer shall Indemnify Katy against all Claims (including, without limitation, consequential damages, notwithstanding anything in any Transaction Document to the contrary) suffered by Katy to the extent such Claims, damages, and/or expenses arise from Customer's Delivery of Gas not in conformance with the Required Specifications (for purposes of this Section, the "Non-Spec Gas"), whether or not Katy agreed to accept such Non-Spec Gas under Section 10.3.1 below.
10.3 Rejection of Gas. Katy may, but shall never be obligated to, accept Non-Spec Gas so long as on a basis that is not unduly discriminatory. The acceptance of such Gas does not constitute any waiver of Katy's right to refuse to accept similarly non-conforming Gas, nor require Katy to receive Non-Spec Gas in the future. If Katy agrees to accept Non-Spec Gas under a Confirmation, Customer shall be allowed to Deliver Non-Spec Gas under that Confirmation, but no other, and Katy will have the continuing right to require Customer to bring its prospective Deliveries under that Confirmation into compliance with the Required Specifications within a specified period of time, as determined in Katy's reasonable discretion.
10.3.1 Upon the Delivery of Non-Spec Gas which Katy has not expressly allowed or which Customer does not bring into compliance in the time period specified by Katy, the Receipt of such Non-Spec Gas may be terminated immediately and notification of such termination may occur after the fact.
10.3.2 Failure by either Katy or Customer to tender Deliveries that conform to the Required Specifications shall not be construed to eliminate, or limit in any manner, Katy's or Customer's rights and obligations existing under any other provision of any Transaction Document.
11.0 ODORIZATION
Katy shall have no obligation whatsoever to odorize, or maintain odorant levels in, the Gas Delivered either by Customer to Katy or by Katy to Customer, unless prescribed by regulation. Notwithstanding anything to the contrary in the Transaction Documents, Customer shall indemnify Katy Group against any and all Claims, including consequential damages, whether or not any such Claim arises out of a Claim brought by Customer, Katy and/or any other Person, where liability, loss, and/or damage is suffered by any member of Katy Group as a direct or indirect result of any actual or alleged failure by Customer, Katy and/or any other Person to odorize, not odorize or maintain the odorant levels of such Gas.
12.0 METHOD OF MEASUREMENT
12.1 Measurement. Except as provided in Sections 12.2 - 12.3 below, the measurement of the quantity and quality of all Gas Delivered shall be conducted in accordance with the procedures set forth in Appendix "A", attached hereto and made a part hereof for all purposes.
12.2 Method/Technique. If, at any time during the effective term of the Master Service Agreement to which this Operating Statement applies, a new method or technique is developed with respect to Gas measurement, such new method or technique may be substituted by Katy in the exercise of its reasonable judgment. Katy shall promptly inform Customer of any new method or technique adopted.
12.3 Method of Measurement. Where measuring facilities are installed, owned, maintained and operated by the Designated Pipeline at or near the Receipt Point(s) and/or Delivery Point(s), the method of measurement shall be as set forth in such Designated Pipeline's tariff.
13.0 BALANCING OF QUANTITIES
Customer shall Indemnify Katy from all fees, charges, costs, and penalties that may be assessed pursuant to Customer's transportation agreement with Designated Pipeline for failure to satisfy that pipeline's balancing and/or Nomination requirements, REGARDLESS OF CAUSE (but not to the extent caused by Katy's gross negligence or willful misconduct). Customer's payments to Katy for the recovery of such fees, charges, costs, and penalties shall be on an as-billed basis.
14.0 INVENTORY MANAGEMENT
14.1 Nomination Requirements. Customer shall nominate, as necessary under a Confirmation, (i) withdrawals from Customer Inventory in sufficient quantities to reduce Customer Inventory to zero by the end of the Transaction Period, subject to Customer's MDWQ and RDUQ under the applicable Confirmation, and (ii) injections into the Katy Storage Facility in sufficient quantities to Deliver to Katy at the end of the Transaction Period the Quantity of Gas borrowed from Katy under a Loaning Service Transaction, subject to Customer's RDLPQ under the applicable Confirmation.
14.1.1 If, on any Gas Day, in any Month during the Transaction Period of any Transaction, Customer Inventory exceeds Customer's Capacity Demand, Customer shall pay Katy the Overrun Charge.
14.1.2 Payment of the Overrun Charge shall not entitle Customer to maintain excess Customer Inventory in the Katy Storage Facility, nor shall Katy's acceptance of such payment constitute a waiver of Customer's obligation to manage its Customer Inventory in accordance with the requirements set forth herein.
14.2 Gas Remaining in Storage after Expiration of Transaction Period.
14.2.1 Withdrawal On or Before the End of the Transaction Period. If Customer Inventory with respect to a specific Transaction remains in the Katy Storage Facility on any Gas Day after the end of the applicable Transaction Period, Katy shall have the right, at its sole option, to either (i) charge Customer at the rate stated in Section 14.2.2 below until such Customer Inventory is zero, (ii) to take title to the Customer Inventory under the provisions of Section 14.2.3 below, and/or (iii) to resort to a combination of both such remedies. Katy's election to charge Customer under the provisions of Section 14.2.2 will not prevent it from subsequently exercising its rights pursuant to 14.2.3 at any time such Customer Inventory remains in the Katy Storage Facility after the end of the Transaction Period. Customer's withdrawal rights respecting any Customer Inventory remaining in the Katy Storage Facility after the end of the Transaction Period shall be on an Interruptible basis. Payment of the charges stated in Section 14.2.2 below will not relieve Customer of its obligation to pay Katy for any applicable withdrawal charges associated with reducing Customer Inventory to zero.
14.2.2 Additional Charges. Pursuant to the above-stated provisions of this Section 14.2, Customer shall pay to Katy an amount equal to the Extended Storage Charge related to the Quantity of Gas remaining in the Customer Inventory after the end of the Transaction Period.
14.2.3 Title. Pursuant to the above-stated provisions of this Section 14.2, at Katy's sole option, Customer shall transfer title to Customer Inventory to Katy, free and clear of all liens, encumbrances, and adverse claims of any kind, at a price per MMBtu equal to seventy-five percent (75%) of the Monthly Reference Price for the current Month during which such transaction (i.e., transfer of title) takes place. The transfer of Customer Inventory to Katy under this Section 14.2.3 will not relieve Customer of its obligation to pay Katy for all applicable charges, including charges under Section 14.2.2 that accrued before such transfer.
14.2.4 Force Majeure. If Customer is unable to withdraw all Customer Inventory with respect to a Transaction before the end of the applicable Transaction Period by reason of suspension of withdrawal rights during the Transaction Period caused by Force Majeure or other curtailment of such rights declared by Katy, Customer shall not be required to pay an Extended Storage Charge but shall, as soon as possible after the expiry of such Force Majeure or curtailment period, nominate to remove all remaining inventories under such Transaction, in accordance with Customer's MDWQ and/or RDUQ, as applicable. The provisions of Sections 14.2.1-14.2.3 are subject to this Section 14.2.4 regarding Force Majeure and curtailment periods, provided, however, that once any such Force Majeure and/or curtailment period is over, Customer shall be given a reasonable time (i.e., the same number of days as Customer's withdrawal rights subject to such Force Majeure and/or curtailment period) to withdraw all Customer Inventory remaining in the Katy Storage Facility, provided, however, that after such reasonable time the terms of Sections 14.2.1-14.2.3 shall once again apply.
14.3 Expiration of Term for Interruptible Loan Service.
14.3.1 Failure to Return Gas. If Katy enters into a Loaning Service Transaction with Customer and Customer fails to re-Deliver all Loaned Quantities with respect to such Transaction on or before the last Gas Day of the Transaction Period, Katy will have the right, at its sole option, to either (i) charge Customer at the rate stated in Section 14.3.2 until all such Loaned Quantities have been re-Delivered to Katy or (ii) treat such Loaned Quantities that have not been re-Delivered as a sale of such Loaned Quantities to Customer under the terms set forth in Section 14.3.2 or (iii) resort to a combination of such remedies. Katy's election to charge Customer under the terms set forth in Section 14.3.2 will not prevent Katy from subsequently exercising its rights pursuant to Section 14.3.3 at any time such Loaned Quantities have not been re-Delivered to Katy after the end of the Transaction Period shall be on an Interruptible basis. Customer's injection rights respecting any such Loaned Quantities which Customer attempts to re-Deliver to the Katy Storage Facility after the end of the applicable Transaction period shall be on an Interruptible basis. Payment of charges stated in Section 14.3.2 shall not relieve Customer of its obligation to pay Katy for any injection charges associated with re- Delivering Gas to Katy.
14.3.2 Additional Charges. Pursuant to the above-stated provisions of this Section 14.3, Customer shall pay to Katy an amount equal to the Extended Loaning Charge related to the Loaned Quantities that Customer has failed to return to Katy after the end of the Transaction Period.
14.3.3 Sale Remedy. Pursuant to the above-stated provisions of this Section 14.3, at Katy's sole option, Katy shall charge Customer for a Quantity of Gas thermally equivalent to the Loaned Quantities at a price per MMBtu equal to one hundred twenty-five percent (125%) of the Monthly Reference Price for the current Month during which such transaction (i.e., assessment of charges) takes place. Katy will reflect such charges to Customer on Customer's next Monthly bill and Customer's Loaned Quantities with respect to the relevant Transaction will be decreased accordingly. The sale of Gas to Customer under this Section will not relieve Customer of its obligation to pay Katy all applicable charges, including charges under Section 14.2.2 that accrued before such sale.
14.3.4 Force Majeure. If Customer is unable to re-Deliver all Loaned Quantities before the end of the applicable Transaction Period by reason of suspension of injection rights during the Transaction Period caused by Force Majeure or other curtailment of such rights declared by Katy, Customer will not be required to pay an Extended Loaning Charge but shall, as soon as possible after the expiry of such Force Majeure or curtailment period, nominate to return the Loaned Quantities under the Transaction, in accordance with Customer's RDLPQ. The provisions of Sections 14.3.1 to 14.3.3 are subject to the provisions of this Section 14.3.4 regarding Force Majeure and curtailment periods, provided, however, that once any such Force Majeure and/or curtailment period is over, Customer shall be given a reasonable time (i.e., the same number of days as Customer's injection rights were subject to such Force Majeure and/or curtailment period) to re-Deliver all remaining Loaned Quantities, and after such reasonable time the terms for Sections 14.3.1 to 14.3.3 shall once again apply.
15.0 FEES FOR SERVICES
15.1 Services. Customer will be responsible for paying all charges related to Services provided under the terms of a Master Service Agreement, including without limitation, the following (as applicable to the Service provided): Demand Charges, Commodity Charges, Excess Nomination Charges, Extended Loaning Charges, Extended Storage Charges, Inventory Charges, Overrun Charges, and Wheeling Charges, each of which will be calculated based on the applicable rates as set forth in the applicable Confirmation.
15.2 Such charges will be subject to the maximum rates allowed by the FERC, as applicable, plus taxes, if any, payable on the Services provided by Katy, including, without limitation, tax on any Fuel provided by Customer, and any ad valorem or similar tax assessed on Customer Inventory, for which Customer shall at all times be responsible. All references to prices, fees, charges, or other monetary amounts will be in U.S. dollars (USD) unless otherwise expressly provided in the applicable Confirmation.
16.0 FUEL REIMBURSEMENT
16.1 Compensation. The two general categories of Fuel usage are: (1) direct Fuel usage, consisting of (a) compression Fuel, (b) dehydration Fuel, and (c) line heating Fuel, and (2) indirect Fuel usage, consisting of Fuel that is consumed on site to (a) generate electricity (b) heat the facility (if any), and (c) lost and unaccounted for volumes, to the extent required for the operation and maintenance of the Katy Storage Facility.
16.2 Settlement. Customer shall reimburse Katy for Fuel usage and each Fuel reimbursement charge shall be as agreed upon by Katy and Customer such that reimbursement of Fuel may be paid in kind or in dollars per MMBtu, as set forth in the applicable Confirmation.
17.0 TAXES
17.1 Customer shall (i) be responsible for all taxes and assessments, of any nature, associated with or assessed by any governmental authority in respect of Gas to which Customer holds title, notwithstanding that such Gas may be held in the Katy Storage Facility as of such governmental authority's tax assessment/property reporting date, (ii) pay to Katy all taxes, levies, or charges that Katy may be required by law to collect from Customer by reason of the Services performed for Customer and for which Katy has not already provided for collection through the rates set forth in the applicable Confirmation, including, without limitation, any and all sales or use tax or similar assessment for goods and services, and (iii) reimburse Katy for all filing and other fees which are payable pursuant to FERC or RRC regulations and which are attributable to Katy's Services for Customer. Notwithstanding anything to the contrary contained in any Transaction Document, Customer shall be responsible for, and shall pay directly, all ad valorem taxes payable in respect of all or any portion of Customer Gross Inventory. To the extent permitted or required by applicable law, Katy will report Customer's Inventory as of the property reporting date as Customer Gross Inventory less any Loaned Quantities out on loan to such Customer on that date ("Customer Taxed Inventory"), provided, however, that such Customer Taxed Inventory shall never be less than zero. Katy will report Customer Taxed Inventory to all taxing authorities having jurisdiction in accordance with instructions from such taxing authorities.
17.2 Neither Party shall be responsible or liable for any taxes or any other statutory charges levied or assessed against any of the facilities of the other Party used for the purpose of carrying out the provisions of a Confirmation.
17.3 If any taxes or assessments due and payable by Customer are levied on Katy, Customer agrees to promptly reimburse Katy for such taxes and assessments.
18.0 BILLING AND PAYMENT
18.1 Invoice. No later than the tenth (10th) Gas Day of each Month (each, an "Invoice Month") during the term of a Transaction under a Confirmation, Katy shall provide Customer an invoice evidencing the amount due to Katy for Services rendered to Customer during the preceding Month, plus all other amounts properly chargeable to Customer under the terms of the Transaction Documents. All payments shall be made without any deduction or withholding for or on account of any tax.
18.2 Payment. Subject to the provision of Section 18.2.1 below, Customer shall make all invoice payments to Katy by wire transfer in immediately available funds to a depository designated by Katy.
18.2.1 Customer shall pay in full the amount stated in the invoice on no later than the twenty-fifth (25th) Gas Day of the Invoice Month; provided, however, that if an invoice is sent to Customer after the tenth (10th) Gas Day of a Month, the due date for payment on such invoice shall be fifteen (15) Gas Days after the date Katy places such invoice in the U.S. mail or other delivery service for delivery to Customer. If a payment due date falls on a Gas Day that Katy's designated depository is not open in the normal course of business, Customer shall cause such payment to be actually received by Katy on or before the first Business Day before such due date on which the designated depository is open.
18.3 Billing Error. If an error is discovered in any billing, Katy will use its best efforts to adjust such error.
18.4 Billing Disputes. If Customer in good faith disputes any portion of an invoiced amount, Customer shall promptly submit to Katy a written explanation of the basis for Customer's dispute and any available supporting documentation. Customer's notice of its dispute shall be detailed sufficiently to allow Katy to adequately investigate such claimed dispute. Nevertheless, Customer shall pay all amounts that are not disputed in good faith. Customer shall work diligently with Katy to resolve and pay all disputed invoice amounts as soon as possible. Customer shall not be required to pay interest on any invoiced amount which is in good faith disputed in writing by Customer and is ultimately determined to be in error; provided, however, interest shall be due if such amount billed is found not to be in error.
18.5 Failure to Pay Bills.
18.5.1 Should Customer fail to pay Katy all of the amount of any bill when the same becomes due, Customer shall pay Katy interest on the unpaid balance. Interest shall accrue on all unpaid, valid invoice amounts at a rate equal to the lesser of (i) the prime interest rate published by the Wall Street Journal plus two percent (2%) per annum, or (ii) the maximum lawful rate, compounded Daily from the date due until the date payment is actually received by Katy at its designated depository. If at any time payments for Services and payments for interest are both due, any payments thereafter received shall be applied first to all interest payments due, then to the Service payments due in order from the oldest to the most current payments due.
18.5.2 If any bill remains unpaid after the due date thereof:
(a) In addition to any other rights that Katy may have under the Transaction Documents or at law or in equity, Katy shall have the right, upon giving Customer written notice, to suspend injections and/or withdrawals under any or all Transactions and/or terminate all Transactions. Customer, by its nonpayment in full of all amounts then due within two (2) Gas Days after such notice, shall be deemed to have consented to any and all such suspensions and/or such terminations. Suspension of injections and/or withdrawals under a Transaction will not relieve Customer of liability for capacity charges and deliverability charges which accrue after any such suspension.
(b) Katy will not suspend injections and/or withdrawals or terminate Transactions as provided in Section 18.5.2(a) above if Customer disputes an invoiced amount in good faith and furnishes to Katy, within two (2) Gas Days after Katy's termination/suspension notice, (i) prompt notice of the basis for Customer's dispute as set forth in Section 18.4 above and (ii) a surety bond or other form of security in an amount and with a surety satisfactory to Katy, in Katy's reasonable discretion, guaranteeing payment of the disputed amount ultimately found properly due to Katy.
18.6 Right to Audit. Both Katy and Customer shall have the right at their own expense to examine and audit at any reasonable time (during normal business hours) the books and records (including measurement, billing, and payment) to the extent necessary to verify the accuracy of any statements or charges made under or pursuant to any of the provisions of the Transaction Document(s). Such right shall not extend to accounts and records pertaining to any Transaction or other agreement for Services between Katy and any third party or to any account and records pertaining to Katy's cost of providing Services or the profits thereon. Such right to audit may be exercised within twelve (12) Months following the billing date covering the audited quantities and charges. In the event that any invoice contains incorrect information, such error shall be adjusted within thirty (30) Gas Days after Katy's verification of the incorrectness of such information; provided, however, that any claim by Customer for adjustment of an invoice must be made within twelve (12) Months from the date of such invoice.
19.0 EVIDENCE OF CREDITWORTHINESS AND SECURITY; RIGHT OF SET-OFF
19.1 Liens. Katy shall have the right to satisfy any and all amounts due and payable to Katy in a manner consistent with applicable law, including, without limitation, by asserting and enforcing its rights under all applicable liens and security interests held by Katy in Customer Gross Inventory.
19.2 Policy. Katy will not be obligated to provide Service and may suspend and/or terminate ongoing Service to any Customer or potential Customer that fails, in Katy's reasonable judgment, to demonstrate Creditworthiness. Customer or potential Customer is aware that:
19.2.1 Katy's credit policy may be amended from time to time without prior notice to Customer;
19.2.2 Katy's credit requirements may vary depending on the Services provided;
19.2.3 Katy reserves the right to set credit limits and to vary those limits from time to time at Katy's reasonable discretion; and
19.2.4 Katy may request additional credit information or an update of existing credit information on an on-going basis during the term of the Master Service Agreement between Katy and Customer, including, without limitation, each time Customer enters into a Confirmation for Services.
19.3 Evidence of Creditworthiness. Acceptance of a Service request and/or continuation of Service is contingent upon Katy's completion of a credit evaluation it deems satisfactory in accordance with criteria set forth in this Section 19.3. To enable Katy to conduct such credit evaluation, Customer shall submit the information set forth in Section 19.4 below; to the extent such information is applicable to such Customer. A Customer may be deemed creditworthy if (i) it has an Acceptable Credit Rating; (ii) an Event of Default has not occurred; and (iii) Katy believes, in its reasonable and non-discriminatory judgment, after review of Customer's financial situation based on all information available, that Customer will fully, timely and faithfully perform all obligations under all Transaction Document(s) and, if applicable, the Customer's Credit Support Provider's guarantee fully secures such obligations and is enforceable by Katy against such Credit Support Provider.
19.3.1 "Creditworthy" or "Creditworthiness" shall mean the following:
(a) No Event of Default has occurred or is continuing; and
(b) The lowest credit ratings assigned, if any, are assigned by one or more S&amp;P or Moody's, as applicable, (i) to Customer's long-term, unsecured, unsubordinated debt is at least BBB- by S&amp;P or Baa3 by Moody's, and if applicable, (ii) to Customer's Credit Support Provider's guarantee fully secures such obligations and is enforceable by Katy against such Credit Support Provider and that such Credit Support Provider will fully, timely, and faithfully perform under the guarantee.
19.4 Credit Evaluation.
19.4.1 Customer or Customer's Credit Support Provider, if applicable, will be required to provide the following information to Katy in order to perform its credit evaluation:
(a) Customer's Financial Statements.
(i) Customer shall provide Katy with copies of its most recent financial statements (i) within one hundred thirty (130) days of its fiscal year end for each year during the term, and (ii) within ninety (90) days after the end of each of the Customer's first three fiscal quarters for each fiscal year. Customer shall have the right to deliver unaudited financial statements in satisfaction of this requirement, as long as audited financial statements are produced in the ordinary course of business and promptly delivered as soon as they are available. In addition, Customer shall promptly provide to Katy other financial information reasonably requested by Katy for purposes of the Transaction Document(s). If the financial information is publicly provided, then the Customer must identify where and how such information may be obtained and provide any further assistance Katy may reasonably need to locate and obtain such financial information.
(ii) If Customer does not make available such information as required to be made available under Section 19.4.1, within ten (10) Business Days after a request by Katy, Katy shall have the right to send a written notice demanding that such information to be made available.
(iii) All financial information made available under this Section 19.4.1, if not publicly available, shall be treated as confidential information.
(b) Such other information as may be reasonably required to by Katy.
19.4.2 In the event that Customer cannot provide the information in Section 19.4.1, it shall, if applicable, cause its parent company to provide such information.
19.4.3 Katy shall be entitled, without waiving any other right or remedy it may have, to refuse or suspend Services under any Confirmation if Customer or Customer's Credit Support Provider fails to provide information as required in Section 19.4.1 until such information is provided.
19.5 Notice of Material Adverse Change. Customer or Credit Support Provider, if applicable, shall promptly notify Katy in writing of the occurrence of any event that would constitute a Material Adverse Change, within five (5) Business Days of the occurrence of such event. A Material Adverse Change may include any change in business conditions which would cause (i) a substantial deterioration of its financial conditions; (ii) a condition of its insolvency; of (iii) the inability to exist as an ongoing business entity. Such conditions would include any chapter of the bankruptcy laws of the U.S., liquidation or debt reduction procedures under state laws, and significant outstanding collection lawsuits or judgments that would affect the business entity's ability to remain solvent.
19.6 Financial Assurances.
19.6.1 Katy shall not be required to perform or to continue Service under any Transaction Document on behalf of any Customer which is or has become insolvent, or which, at Katy's request, fails within a reasonable time period to demonstrate Creditworthiness in accordance with this Section 19.6; provided, however; that such Customer may receive Service under any Transaction Document if such Party provides Financial Assurances as follows:
(a) Within five (5) days of Katy's written request for Financial Assurances, an amount equivalent to three (3) Month (or the duration of the applicable Transaction, whichever is shorter) of estimated fees and Service charges; and/or
(b) Within thirty (30) days of such request, an amount equal to (1) in the case of Firm Storage Service, three (3) months (or the duration of the applicable Transaction, whichever is shorter) of Demand Charge(s) at the rate specified in the applicable Transaction; or (2) in the case of Interruptible Services, three (3) Months (or the duration of the applicable Transaction, whichever is shorter) of the Inventory Charge(s) calculated on a one hundred percent (100%) load factor basis, plus the market value (at the time of the request for such Financial Assurances) of any quantities of Gas loaned up to the Customer pursuant to the relevant Confirmation. Regarding Customers who have previously posted security for Gas loaned to such Customer, if the market value of such Gas increases by ten percent (10%) or more, such Customer shall deliver additional Financial Assurances to cover such increase in market value within two (2) Business Days of Katy's request for same.
19.6.2 If Customer chooses to provide Financial Assurances in the form of cash (for purposes of this Section, the "Cash Collateral") in the amount set forth above, Customer may earn interest on such Cash Collateral by (i) delivering Cash Collateral to a custodian in the name of the Customer and pledged to Katy pursuant to cash escrow, or account control agreement that is reasonably satisfactory to Katy; or (ii) by directing Katy to hold such Cash Collateral, in which case, Katy must pay Customer interest on such Cash Collateral calculated in accordance with Section 154.501(d) of the Commission's regulations.
19.6.3 Cash Collateral is security only and shall not be treated as a prepayment of costs, fees, or other obligations that Customer may owe to Katy. Customer hereby acknowledges and agrees that payment of Cash Collateral shall not relieve Customer of its duty to pay all invoices in full when due. Subject to Katy's right, in its reasonable discretion, to apply the Cash Collateral against any outstanding costs, fees, or other obligations that Customer owes to Katy, Katy will return the Cash Collateral to Customer within thirty (30) days following the completion or termination of the relevant Transaction.
19.7 Lack of Creditworthiness.
19.7.1 If Customer fails to maintain an Acceptable Credit Rating or Financial Assurances in accordance with Section 3.2 and Section 19.6 and such failure is not cured within five (5) Business Days following written notice, such failure may be treated as an Event of Default under Section 20.2 and may result in the termination of any and all Transactions.
19.7.2 If at any time Katy reasonably determines that Customer is not Creditworthy under this Section 19.7, Katy shall notify such Customer in writing via e-mail, instant messaging, facsimile or some other way agreed upon by both Parties within ten (10) Business Days following its decision and the reasons for such determination.
19.7.3 If a Customer does not meet the criteria described in this Section 19.7, then the Customer may request that Katy evaluate its Creditworthiness based upon the level of Service requested relative to the Customer's current and future ability to meet its obligations or the Customer's Credit Support Provider's current and future ability to secure the Customer's obligations.
19.7.4 After Katy's receipt of Customer's request for re-evaluation, within five (5) Business Days, Katy shall provide a written response to the Customer's request. Such written response shall include either a determination of Creditworthiness status, clearly stating the reason(s) for Katy's decision, or an explanation supporting a future date by which a re- evaluation will be made. In no event shall such re-evaluation determination exceed twenty (20) Business Days from the date of the receipt of the Customer's Request unless specified in the Transaction Document(s) or if the Parties mutually agree to some later date.
19.8 Right of Set-Off. If a Party (for purposes of this Section 19.8, the "Non-Performing Party") fails to pay in full any amount owing to the other Party (for purposes of this Section 19.8, the "Non-Receiving Party") under any Transaction under the Master Service Agreement within five (5) Business Days after such amount became due, then, in addition to all other remedies available to it under this Operating Statement, the Master Service Agreement, at law, in equity or otherwise, the Non-Receiving Party may set off the overdue amount against amounts otherwise owing by the Non-Receiving Party to the Delinquent Party under the Master Service Agreement or any other agreement between the Parties.
20.0 TERMINATION FOR DEFAULT
20.1 Delivery and Receipt Defaults. Except as set forth in Section 20.2 below, Delivery Defaults and Receipt Defaults by either Party shall be addressed in the manner set forth in Section 20.0 of this Operating Statement.
20.2 Event of Default. The occurrence at any time with respect to a Party of any of the following events shall constitute an Event of Default with respect to the Party or its Credit Support Provider, such Party:
20.2.1 files, or has filed against it, a petition for bankruptcy or insolvency or for reorganization or arrangement under bankruptcy laws of the United States or under any insolvency act of any state, or a Party voluntarily takes advantage of any such law or act by answer or otherwise;
20.2.2 becomes insolvent (however evidenced) or is unable to pay its debts as they become due;
20.2.3 makes a general assignment for the benefit of its creditors;
20.2.4 seeks or becomes subject to the appointment of an administrator, conservator, receiver, trustee, custodian, or other similar official for it or for substantially all of its assets;
20.2.5 causes or is subject to any event with respect to it which, under the applicable laws of any jurisdiction, has an analogous effect to any of the events specified in clauses (a) to (d) above;
20.2.6 commits actual fraud or willful misconduct in connection with a Master Service Agreement;
20.2.7 fails to make any payment when due under a Master Service Agreement where such failure is not cured within two (2) Business Days after written notice by Katy;
20.2.8 fails to perform any material covenant or obligation imposed upon it under a Transaction Document (or in the case of Delivery Defaults or Receipt Defaults, the Defaulting Party commits several such defaults of a repetitive, consistent and on-going basis, and, as a result of such defaults, the other Party's benefit of the bargain under a Transaction is materially diminished in the Non-Defaulting Party's reasonable judgment);
20.2.9 fails to maintain an Acceptable Credit Rating or Financial Assurances in accordance with Section 3.2 and Section 19.6 and such failure is not cured within five (5) days after written notice by the other Party or
20.2.10 in respect of the Party's Credit Support Provider, such Credit Support Provider fails to perform any material covenant or obligation imposed upon any credit support agreement provided pursuant to a Transaction.
20.3 Default Actions. Notwithstanding, and in addition to but not in limitation of, any other provision in any Transaction Document, if at any time an Event of Default has occurred and is continuing Katy shall have the right to take any one or more of the following actions:
20.3.1 refuse to accept any further Deliveries of Gas from Customer or make any Deliveries to Customer and/or otherwise suspend all Services under the Master Service Agreement;
20.3.2 by written notice to Customer, designate a Gas Day not earlier than the Gas Day such notice is effective and not later than thirty (30) Gas Days thereafter, as the Early Termination Date in respect of all Transactions, then outstanding, in which event the provisions of Section 20.3 shall apply and Customer, by its failure to remedy the Event of Default, shall be deemed to have consented to such termination of Service;
20.3.3 draw on, apply or otherwise exercise its rights of realization and enforcement in respect of any Financial Assurances provided by Customer pursuant to Section 19.6;
20.3.4 exercise its rights under any lien held by Katy (whether under Tex. Bus. &amp; Com. Code Ann. Section;7.209, et. seq., or otherwise by law) on Gas stored in the Katy Storage Facility for Customer's account and apply the proceeds of the private sale of such Gas to satisfy any amounts owing by Customer to Katy under the Master Service Agreement;
20.3.5 exercise any and all rights and remedies in respect of any security interest granted by Customer to Katy;
20.3.6 set-off against any amount owing by Customer to Katy any amount owed by Katy to the Customer under the Master Service Agreement or under any other agreement; and
20.3.7 exercise any other remedies available to Katy under the Operating Statement, the Master Service Agreement, at law, in equity or otherwise.
20.4 Termination of Service. If at any time an Event of Default with respect to a Party (the "Defaulting Party") has occurred and is continuing, the other Party (the "Non-Defaulting Party") may, at its option, terminate any or all Transactions by proceeding as follows:
20.4.1 the Non-Defaulting Party shall provide written Notice of Default (by e-mail and/or facsimile, promptly followed by courier or overnight mail) to the Defaulting Party. The Notice of Default shall specifically identify the Event of Default and shall provide notice of the Non-Defaulting Party's intent to terminate the same on a designated date not earlier than thirty (30) Gas Days thereafter (for purposes of this Section, the "Early Termination Date"); thereupon the Defaulting Party shall have five (5) Gas Days to provide advance payment for two (2) months of Service (or the duration of the Master Service Agreement and applicable Confirmation whichever is shorter). The Defaulting Party will then have thirty (30) Gas Days after receipt of such notice to remedy or remove the cause or causes stated in the notice. If within the thirty-day (30) period the Defaulting Party does so remove and remedy said cause or causes of such Event of Default, by good and sufficient means acceptable to the Non-Defaulting Party, on or before the Early Termination Date, then such notice shall be withdrawn and the Transaction shall continue in full force and effect;
20.4.2 If the Defaulting Party does not remedy and remove the cause or causes of such Event of Default within the thirty-day (30) period, then, after any necessary notice to regulatory bodies having jurisdiction (which notice may be given at the same time as the termination notice to Defaulting Party), the Confirmation(s) and Transaction(s) shall be terminated as of the Early Termination Date, provided that notice of termination has not been withdrawn prior thereto, with such termination being effectuated pursuant to the further terms as provided herein;
20.4.3 If termination occurs pursuant to Section 20.4.2 above, any or all Confirmation(s) and Transaction(s) between Customer and Katy then outstanding may be subject to termination as of the Early Termination Date in accordance with the further provisions of this Section 20.4; and any termination of such Confirmation(s) and Transaction(s) pursuant to the provisions of this Section shall be without prejudice to the right of Katy to collect any amounts then due to it for Services rendered prior to the time of termination, and without waiver of any remedy, at law or in equity, to which the Non-Defaulting Party may be otherwise entitled, including, without limitation, the right to off-set any amount owing by the Defaulting Party to the Non-Defaulting Party under the Transaction Document(s) against any amount owing by the Non-Defaulting Party to the Defaulting Party under the Transaction Document(s) or under any other agreement.
20.5 Suspension of Service. Notwithstanding, in addition to but not in limitation of any other provision in this Operating Statement or Transaction Document(s) prior to a termination for an Event of Default, upon written notice detailing Katy's reasons for suspension, Katy may suspend Service to any Customer who fails to comply with the terms of a Master Service Agreement. Katy's failure to invoke its rights to suspend or terminate Service at any time shall be construed as a waiver of Katy's right to suspend or terminate Service at any other time Customer is in breach of the terms of the Transaction Document(s). During any period of suspension and following any termination of Service, Katy shall not charge any Demand Charge. At Katy's option, a termination notice given pursuant to Section 20.4 above may also serve as a notice of immediate suspension under this Section.
20.6 Early Termination. In the event Katy elects to terminate Customer's Confirmations and Transactions pursuant to Section 20.3 above, and if the Customer is the Defaulting Party, all of Customer's Service rights may be terminated immediately or on such date as Katy shall determine in its reasonable discretion and any payment obligations relating to the provision of Services not rendered after the Early Termination Date will likewise be terminated; provided, however, that a Firm Storage Service Customer shall remain liable for all Demand Charges, whether accruing before or to be accrued after the Early Termination Date. If Katy is the Non-Defaulting Party, it will have the right to sell any terminated Firm Storage Service to a third party as of the Early Termination Date. If possible, Katy shall attempt to lessen the terminated Customer's Demand Charges by using commercially reasonable efforts to enter into a replacement Transaction for Firm Storage Service with a third party; provided, however, and notwithstanding anything in any Transaction Document to the contrary if Katy is unable to enter into a third-party replacement Transaction on terms satisfactory to Katy in its reasonable discretion, Katy shall be entitled to accelerate all Firm Storage Service Demand Charges which are scheduled to become due after the Early Termination Date and such Demand Charges become so accelerated shall become due and payable immediately upon Katy's notice of such acceleration to Customer. With regard to obligations accruing before the Early Termination Date, Customer will remain liable for all obligations accruing under each terminated Transaction up to and including the Early Termination Date, including but not limited to, all unbilled (or billed but unpaid) Demand Charges, Commodity Charges, Fuel, Excess Nomination Charges, Overrun Charges and all applicable taxes for all Services rendered up to and on the Early Termination Date. Termination of Confirmations and the Transaction thereunder shall be effected as follows:
20.6.1 The termination will occur on the Early Termination Date. All Transactions then outstanding will be terminated as of the Early Termination Date in accordance with these termination provisions and, no further injections or withdrawals of Gas shall thereafter be made under such terminated Transactions.
20.6.2 With regard to Customer's Net Termination Balance in the Katy Storage Facility on the Early Termination Date (with "Net Termination Balance") defined as Customer Gross Inventory less any Loaned Quantities then out on loan to Customer):
(a) Customer shall not have any Nomination rights for the withdrawal of the Net Termination Balance from the Katy Storage Facility;
(b) Katy shall, subject to Section 20.6.4(c) below, Deliver to Customer the Net Termination Balance on such Gas Days and in such quantities as, in Katy's reasonable determination, there exists Interruptible withdrawal capacity to accommodate such Deliveries; and
(c) Katy shall not be obligated to Deliver any portion of the Net Termination Balance unless and until Customer has paid to Katy:
(i) An amount equal to Katy's then applicable Commodity Rate for withdrawal multiplied by the Net Termination Balance; and
(ii) the Net Termination Amount determined pursuant to Section 20.6.4 below, if payable by Customer.
20.6.3 All Transactions shall be cancelled and closed out, each at its Current Value (as defined below) as of the Early Termination Date, and a settlement payment in an amount equal to the Current Value of each such Transaction shall be payable (i) by Katy to Customer if the Current Value is negative (except if such negative Current Value is a result of Katy's terminating, liquidating, obtaining, or re-establishing a hedge) or (ii) by Customer to Katy if the Current Value is positive, as applicable.
20.6.4 The Current Values of all terminated Transactions shall be set off or aggregated, as appropriate, so that all such amounts are aggregated and/or netted to a single liquidated amount (for purposes of this Section, the "Termination Amount") payable by one Party to the other. Katy shall give Customer notice (for purposes of this Section, the "Termination Amount Notice") of the amount of the Termination Amount, including a statement showing its calculation, together with the following additional amounts, if any, but without duplication (such Termination Amount, together with the following additional amounts, the "Net Termination Amount"):
(a) the aggregate charges (whether or not invoiced or yet overdue) owing by Customer for Services provided by Katy to Customer under all Transactions hereunder and under any other agreements prior to the Early Termination Date;
(b) any other amounts outstanding under any other agreements; and
(c) all reasonable out-of-pocket expenses including, without limitation, legal fees incurring by the Non-Defaulting Party by reason of the enforcement and protection of its rights under the terminated Master Service Agreement and applicable Confirmation.
20.6.5 No further payments, Deliveries, or Services under the terminated Confirmations will thereafter be required, except with regard to obligations accruing before the Early Termination Date if not already included in Net Termination Amount, including without limitation, a Customer's obligation to return Loaned Quantities under a Loaned Service Transaction if the Transaction Period has ended but the Customer has not yet re-Delivered the Gas and provided, however, that the cancellation of the Confirmations and Transactions thereunder shall not prejudice any other right or obligation under the Transaction Document(s).
20.6.6 The Net Termination Amount (and, if applicable, all other amounts set off against or aggregated therewith) shall be paid by the close of business on the second (2nd) Business Day following the Early Termination Date.
20.7 "Current Value" means, with respect to one or more cancelled Confirmations, the amount of Katy's total losses and costs (or gain, which shall be expressed as a negative number) in connection with the cancellation of the Transactions thereunder, including without limitation, any loss of bargain, cost of funding and/or, at the election of Katy but without duplication, loss or cost incurred as a result of terminating, liquidating, obtaining, or re-establishing any hedge (or any gain resulting from any of them, which shall be expressed as a negative number), as determined by Katy acting reasonably and in good faith.
20.8 Financial Assurances. Notwithstanding, and in addition to but not in limitation of, any other provision in this Operating Statement or any other Transaction Document, if at any time an Event of Default by Customer has occurred and is continuing, Katy shall have the right to exercise its rights and remedies in respect of any Financial Assurances provided by Customer and to exercise its rights and remedies in respect of any lien or security interest held by Katy on Gas stored in the Katy Storage Facility for Customer's account, and to apply the proceeds of the private sale of such Gas to satisfy any and all amounts owing by Customer to Katy under any Transaction Document. To the extent that any Customer Inventory exists on the Early Termination Date, Katy's termination notice rendered in accordance within this Section 20.0 shall be deemed sufficient notice for all purposes, including, without limitation, for Chapters 7 and 9 of the Texas Business and Commerce Code or any other version of the Uniform Commercial Code (or similar law) as adopted in any relevant jurisdiction.
20.9 Insufficient Proceeds. In the event that the Customer Inventory in the Katy Storage Facility is liquidated and the proceeds therefrom are insufficient to satisfy all outstanding payment obligations due to Katy under the terminated Confirmation (and/or any other Transaction Document), Customer will remain liable for all such outstanding and unsatisfied obligations that exceed the proceeds of such liquidation, including interest thereon, and Katy shall be entitled to pursue all other remedies available to it at law or in equity to secure the satisfaction of such obligations.
20.10 No Waiver of Other Rights. Each Party's rights under this Section 20.0 are in addition to, and not in limitation or exclusion of, any and all other rights that a Party may have (whether by agreement, operation of law, or otherwise).
21.0 FORCE MAJEURE
21.1 Effect of Force Majeure. In the event that either Party is rendered unable, wholly or in part, by reason of Force Majeure, as defined herein, to perform any obligation under any Transaction Document, that Party shall be entitled, unless otherwise provided to the contrary in such Transaction Document(s), to claim suspension of that obligation for the duration of the Force Majeure. Nothing in any Transaction Document shall obligate Katy to add compression at the Katy Storage Facility in order to remedy a Force Majeure.
21.2 Notice of Force Majeure. When a Party has properly claimed suspension of an obligation pursuant to Section 21.1 above, that Party shall be relieved of its commitment to perform that obligation to the extent and for the period of time that the Force Majeure restrains such Party's performance of such obligation, provided that such Party:
21.2.1 provides written notice to the other Party setting out the details of the Force Majeure as soon as reasonably possible after the commencement of such Force Majeure;
21.2.2 takes reasonable measures that are commercially feasible under the circumstances to mitigate the cause and effect of the Force Majeure;
21.2.3 as soon as reasonably possible, gives notice to the other Party of the date upon which the Force Majeure is expected to conclude; and
21.2.4 recommences performance of its obligation to the extent reasonably possible during and on the conclusion of the Force Majeure.
21.3 Pay/Credit Demand Charge. If Force Majeure claimed by Katy (other than pursuant to Section 21.4) prevents Katy from fully performing its obligations in response to a Nomination for injection or withdrawal of Gas, then for so long as and to the extent that Katy is so restrained, the Demand Charges payable by Customer for Firm Storage Service will be reduced proportionately.
21.4 Nature of Force Majeure. The term "Force Majeure" as employed herein shall mean any cause whether of the kind enumerated herein or otherwise, not reasonably within the control of Katy, such as acts of God; strikes, lockouts, and industrial disputes or disturbances; inability to secure or delays obtaining labor, materials, supplies, permits, easements or rights-of-way, including inability to secure materials by reason of allocations promulgated by authorized governmental agencies; arrests and restraints of government and people; interruptions by government or court orders; present and future valid orders, decisions or rulings of any government or regulatory entity having proper jurisdiction; acts of the public enemy; vandalism; wars; riots; civil disturbances; blockades; insurrections; epidemics; landslides; lightning; tornadoes; hurricanes; earthquakes; fires; storms; floods; washouts; inclement weather which necessitates extraordinary measures and expense to maintain operations; explosions; breakage; accidents and/or maintenance to plant facilities including machinery, lines of pipe, accidents, and/or unscheduled maintenance of wells or subsurface storage caverns or reservoirs; testing (as required by governmental authority or as deemed necessary by Katy for the safe operation of the facilities required to perform the Services hereunder); any claim of Force Majeure or act or failure to act constituting Force Majeure by any Designated Pipeline that disrupts the transportation of gas to, from or for Katy or Customer; and the making of repairs or alterations to pipelines, storage, and plant facilities including Transporter's pipeline repairs. It is understood and agreed that the settlement of strikes or lockouts shall be entirely within the discretion of Katy, and that the above requirements that any Force Majeure shall be remedied with all reasonable dispatch shall not require the settlement of strikes or lockouts by acceding to the demands of the opposing party when such course is inadvisable in the discretion of Katy. The term "Force Majeure" shall not include financial distress, inability to pay debts when due, insolvency or bankruptcy. The occurrence of Force Majeure will not relieve either Party of its obligations to make payments when due under any Transaction Document.
22.0 SERVICE CONDITIONS
22.1 Unless otherwise specifically agreed to in writing, Katy shall be responsible for only the maintenance and operation of its own properties and facilities and shall not be responsible for the maintenance or operation of any properties or facilities connected in any way with the transportation or storage of Gas.
22.2 Katy shall have the right to interrupt the flow of Gas when necessary, including, but not limited to, at least once annually, to test, alter, modify, enlarge or repair any facility or property comprising a part of, or appurtenant to, the Katy Storage Facility, or otherwise related to the operation thereof. Katy shall endeavor to cause a minimum of inconvenience to Customer, and except in cases of emergency, shall give Customer advance notice of its intention to so interrupt the flow of Gas and of the expected magnitude of such interruptions.
22.3 Katy shall have the right to interrupt Service without prior notice to Customer in the event actions by any Customer threaten the integrity of the Katy Storage Facility or in the event that immediate or irreparable harm may be caused by Customer's failure to comply with the terms of any Transaction Document. Katy may from time to time purchase or sell Gas on an Interruptible basis as necessary to manage pressure and maintain the integrity of the Katy Storage Facility. The purchase or sale of Gas shall be made on a nondiscriminatory basis.
23.0 TITLE AND RISK OF LOSS
23.1 Customer's Possession and Risk of Loss.
23.1.1 Customer shall be deemed to be in control and possession of, and shall have title to, all Gas (i) Delivered by Customer to Katy prior to and including the time of its Delivery to Katy at the Receipt Point(s) and (ii) Delivered by Katy to Customer from and after its Receipt by Customer at the Delivery Point(s).
23.1.2 Customer shall bear the risk of loss or contamination of such Gas (i) while the Gas is in the control and possession of Customer or its Designated Pipeline, (ii) resulting from any Force Majeure event described in Section 21.4, and any failure of equipment resulting therefrom, and (iii) resulting from any third party action or inaction, and Customer shall Indemnify Katy from and against any Claims relating to or resulting from any and all such loss or contamination.
23.2 Katy's Possession and Risk of Loss.
23.2.1 Katy shall be deemed to be in control and possession of all Gas (i) Delivered to Katy by Customer after Receipt by Katy at the Receipt Point(s) and (ii) Delivered by Katy to Customer at the Delivery Point(s) prior to its Receipt by Customer at the Delivery Point(s).
23.2.2 Katy shall bear the risk of loss or contamination of such Gas while Katy is in control and possession of such Gas, except when Customer bears such risk as set forth in Section 23.1.2 above; provided, however, that Katy shall be responsible for any loss or contamination of Customer's Gas resulting from matters described in Section 23.1.2(ii) and (iii) in the event, and then only to the extent, that Katy's negligence contributes to such loss or contamination. In the event of loss or contamination of Gas for which Katy is responsible under this Section 23.2.2, Katy shall have the option, in its reasonable discretion, to either (i) pay Customer for such Gas (at the then current market value as determined in accordance with the applicable Reference Price) or (ii) replace such Gas with an equivalent Quantity of Gas. In no event will Katy's liability for any loss or contamination of Gas exceed the current market value of the Gas at the time of such loss or contamination.
23.3 Title. Except in those instances when Katy expressly takes title to Customer's Gas pursuant to its rights under the Transaction Documents or as otherwise allowed by law, Customer shall at all times retain title to all Gas Delivered by Customer to the Katy Storage Facility or otherwise included in Customer Gross Inventory, notwithstanding that such Gas may be commingled with other Gas in the Katy Storage Facility (subject to Section 23.4 below).
23.4 Fungible Good, Receipts, and Negotiable Instruments. The Parties acknowledge and agree that Gas which is Delivered to the Katy Storage Facility pursuant to any Transaction Document is a "fungible good" (as that term is defined in Tex. Bus. &amp; Com. Code Ann. Section; 1.201(17)), and that the unit of Gas is one (1) MMBtu. Customer understands and agrees that any Gas Delivered shall be commingled with all other Gas already or subsequently Delivered and stored at the facility. "Receipts" (as that term is used in Tex. Bus. &amp; Com. Code Ann. Section; 7.207(b)) shall be based on confirmations of Delivery by the Designated Pipeline Delivering Gas to the facility. Katy will not be obligated to Deliver to Customer the same Gas that was Delivered to Katy by or on behalf of Customer, but shall be obligated to Deliver only such Quantity of Gas as the Customer is entitled to receive from Katy in accordance with the Transaction Document(s). Without limiting Katy's obligation set forth in the immediately preceding sentence, Katy shall be entitled to use all Quantities of Gas Delivered to the Katy Storage Facility for any and all purposes, including, without limitation, for Delivery or transfer thereof to other Customers to satisfy Katy's obligations under Transactions with such other Customers. Customer acknowledges that the Confirmations, Nominations, invoices or any other document issued pursuant to the Transaction Documents are non-negotiable instruments under Tex. Bus. &amp; Com. Code Ann.Section; 7.104(b).
24.0 ADVERSE CLAIMS TO NATURAL GAS
24.1 Notwithstanding anything to the contrary in the Confirmation, Customer shall Indemnify Katy Group against any Claim whatsoever suffered by or brought against Katy Group, where such Claim arises directly or indirectly out of any Claim brought by any Person, public or private, asserting ownership of, a Claim to or an interest in the natural Gas tendered by Customer for transportation or storage at, or repayment of Loaned Quantities to, the Katy Storage Facility.
25.0 INDEMNIFICATION
25.1 Customer shall indemnify Katy Group against any Claim whatsoever occurring in connection with or relating in any way to any breach of any Transaction Document, that results from or is related to any Claim asserted by any third party, public or private, that is not a party to the Confirmation, where such Claim is suffered by the claiming Person, its partners and/or Affiliates, and/or the officers, directors, partners, shareholders, stockholders, members, managers, employees, agents, representatives, and/or contractors, subcontractors (of every tier) of any of the foregoing, as a result, directly or indirectly, of any breach of any Transaction Document REGARDLESS OF CAUSE, provided, however that Katy Group will not be indemnified to the extent of the gross negligence, willful misconduct, or fraud of any member of Katy Group in causing such damage or liability.
25.2 Katy shall indemnify Customer Group against any Claim whatsoever occurring in connection with or relating in any way to any breach of any Transaction Document, that results from or is related to any Claim asserted by an third party, public or private, that is not a party to the Confirmation, where such Claim is suffered by the claiming Person, its partners and/or Affiliates, and/or the officers, directors, partners, shareholders, stockholders, members, managers, employees, agents, representatives, and/or contractors, subcontractors (of every tier) of any of the foregoing, as a result, directly or indirectly, of any breach of any Transaction Document REGARDLESS OF CAUSE, provided, however, that Customer Group will not be indemnified to the extent of the gross negligence, willful misconduct, or fraud of any member of Customer Group in causing such damage or liability.
26.0 LIMITATION OF LIABILITY
ANY PROVISION OF ANY TRANSACTION DOCUMENT TO THE CONTRARY NOTWITHSTANDING, IN NO EVENT WILL EITHER PARTY EVER BE LIABLE UNDER ANY TRANSACTION DOCUMENT FOR CONSEQUENTIAL, INCIDENTAL, INDIRECT, PROSPECTIVE, PUNITIVE, SPECIAL, EXEMPLARY, OR OTHER SIMILAR DAMAGES, INCLUDING, WITHOUT LIMITATION, LOST PROFITS, LOSS OF OPPORTUNITY OR PENALTIES UNDER ANY OBLIGATION TO A THIRD PARTY, WHETHER SUCH DAMAGES ARE CLAIMED UNDER A BREACH OF CONTRACT, BREACH OF WARRANTY, NEGLIGENCE, GROSS NEGLIGENCE, WILLFUL MISCONDUCT, STRICT LIABILITY, OR ANY OTHER THEORY OR CAUSE OF ACTION AT LAW OR IN EQUITY.
27.0 WAIVERS AND NON-WAIVER OF FUTURE DEFAULT
Katy shall have the right to waive any one or more specific defaults by Customer of any provision of any Transaction Document; provided, however, that no such waiver shall operate or be construed as a waiver of any other existing or future default or defaults, whether of a like or different character. In no event will waivers be granted or denied in an unduly discriminatory manner.
28.0 CHOICE OF LAW
THE TRANSACTION DOCUMENTS WILL BE GOVERNED BY AND CONSTRUED IN ACCORDANCE WITH THE LAWS OF THE STATE OF TEXAS EXCLUDING ANY CONFLICTS OF LAW RULE OR PRINCIPLE WHICH MIGHT REFER CONSTRUCTION TO THE LAWS OF ANOTHER JURISDICTION.
29.0 LAWS AND REGULATIONS
29.1 Katy's Services are subject to all present and future valid laws, regulations, and lawful orders of all governmental entities now or hereafter having proper jurisdiction over such Services and/or facilities used to provide such Services, including, without limitation, all FERC regulations implementing Section 311 of the NGPA. In the event Katy or Customer, by force of any such law, regulation or lawful order which becomes effective at any time during the term of the Transaction Document(s), be rendered unable, wholly or in part, to fulfill its obligations under a Transaction Document (other than to make payments when due), such Transaction Document(s) nevertheless shall continue and shall be deemed to be automatically modified to conform with the requirements of such law, regulation and/or order, subject to the remaining portion of this Section. The intent of any modification will be to retain, to the greatest extent possible, the bargain originally struck between Katy and Customer and, therefore, the Transaction Document(s) shall be modified to the least extent necessary to conform to the relevant laws, regulations, and/or orders. The Master Service Agreement is expressly made subject to any and all tariffs, rate filings, and other regulatory applications made by Katy and approved by any federal or state regulatory body, as such may be amended, modified or restated from time to time. Katy shall have the right to propose to FERC or any other regulatory agency any change in terms of Service as Katy deems necessary at any time, and Customer's Service shall be deemed to include any such change that is made effective pursuant to law, regulation and/or order, without prejudice to Customer's right to protest such change. If the Operating Statement is ever revised, a copy of such FERC-approved, revised Operating Statement will be provided to all Customers.
30.0 ASSIGNMENT
30.1 Neither Katy nor Customer shall assign any Transaction Document without the other Party's prior written consent, which shall not be unreasonably withheld. It shall be reasonable for Katy to withhold consent if (a) the Customer requests consent to assign less than its entire interest in a Confirmation, or (b) if the proposed assignee does not meet Katy's credit requirements as described in this Operating Statement. Notwithstanding anything in this Section or in any Transaction Document to the contrary, either Party may assign, without the other Party's consent, any of its rights under the Transaction Document(s) to an Affiliate; provided, however, that the Party so assigning its rights shall not be released from its obligations under such Transaction Document(s). Any assignment of any Transaction Document shall be accomplished in accordance with the "Assignment" and "Transfer" provisions of the relevant Master Service Agreement.
31.0 DESCRIPTIVE HEADINGS
31.1 The descriptive headings of the provisions of the Transaction Document(s) are formulated and used for convenience only and shall not be deemed to affect the meaning or construction of any such provision.


APPENDIX "A"
METHOD OF MEASUREMENT / MEASUREMENT EQUIPMENT
A.	METHOD OF MEASUREMENT
1.	Unit of Measurement
(a)	The unit of measurement for the purpose of Receipt and Delivery of natural Gas for transportation or storage shall be one (1) MMBtu.
(b)	The unit of volume for the purpose of measurement shall be one (1) Mcf at a pressure of fourteen and sixty-five hundredths pounds per square inch absolute (14.65 psia) and at a temperature of sixty degrees Fahrenheit (60o F) and the readings and registrations of the metering equipment shall be computed into such unit of volumes as well as MMBtus.
2.	Basis
(a)	All orifice meter volumes shall be computed in accordance with the Gas Measurement Committee Report No. 3 of the American National Standards Institute / American Petroleum Institute (ANSI/API) 2530 dated August 1992 (hereafter referred to as "AGA Report No. 3") as reprinted and revised from time to time. If positive displacement, ultra sonic flow or turbine meters are used, measurement shall be performed in accordance with AGA 7 as currently available and with any subsequent amendments thereof accepted and agreed upon between the parties.
(b)	All orifice meter volumes shall be corrected for deviations from the ideal Gas laws (supercompressibility) in accordance with the American Gas Association Par Research Project NX-19 Committee Report or AGA 8, 2003 or AGA 9, 2007, or AGA 11, 2003 detailed or gross or the current accepted standard if mutually agreed upon. Where displacement meters are used, the square of the orifice meter supercompressibility factor shall be applied.
(c)	For the purpose of measurement, the average absolute atmospheric pressure shall be assumed to be 14.65 pounds per square inch.
3.	Determination of Flowing Temperature - The temperature of the Gas flowing through a meter station shall be obtained by the use of a recording thermometer. The temperature of the Gas during the measurement period shall be used in computing the Quantities of Gas Delivered during such period.
4.	Chromatographic Analysis - The Heating Value and the specific gravity shall be determined by on-line chromatographic analysis of the Gas stream. The values of the physical constants for the Gas compounds and the procedure for determining the gross Heating Value and/or the specific gravity of the Gas from them shall be as set forth in the referenced AGA Report No. 3.
B.	MEASUREMENT OF EQUIPMENT
1.	Installation and Operation of Measuring Facilities - All measuring facilities shall be installed (if necessary), owned, maintained, and operated, at or near the Receipt Point(s) and Delivery Point(s), by Katy. Where used, orifice meters shall employ flange taps and shall be installed and operated in accordance with the referenced AGA Report No. 3.
2.	Non-interference - Measuring equipment applying to or affecting Deliveries shall be installed with reasonable care so as to permit an accurate determination of the Quantity of Gas Delivered and ready verification of the accuracy of measurement. Katy (and, if applicable, Customer) shall exercise reasonable care in the installation, maintenance and operation of check measuring or pressure regulating equipment so as to prevent, to the extent practicable, any inaccuracy in the determination of the Quantity of Gas being measured.
3.	Calibration and Test of Measurement Equipment - The accuracy of the measuring equipment, shall be verified at reasonable intervals but not more often than is found necessary in practice. The accuracy of chromatographs shall be verified at least once every thirty (30) Gas Days.
4.	Correction of Meter Errors - If, upon testing, the measuring equipment is found to be in error by not more than two percent (2%), previous recordings of such equipment shall be considered accurate in computing Deliveries, but such equipment shall be adjusted at once to record accurately. If, upon testing, the measuring equipment shall be found to be inaccurate by an amount exceeding two percent (2%), at a recording corresponding to the average hourly rate of flow for the period since the last preceding test, then any previous recordings of such equipment shall be corrected to zero error for any period which is known definitely or agreed upon, but in the case of the period is not known or agreed upon, such correction shall be for a period extending over one-half of the time elapsed since the last test, not exceeding a correction period of sixteen (16) Gas Days.
5.	Failure of Meter - In the event a meter is out of service or registering inaccurately, the Quantity of Gas Delivered shall be determined:
(a)	By correcting the error if the percentage of error is ascertainable by calibration, tests or mathematical calculation, or in the absence of such possible method of determining Deliveries as set forth in Section 5(a); then
(b)	By using the registration of any check meter or meters, if installed, and accurately measuring; or in the absence of both possible methods of determining Deliveries as set forth in Section 5(a) and 5(b); then
(c)	By estimating the Quantity of Gas Delivered as the same Quantity of Gas Delivered during previous periods under similar conditions when the meter was registering accurately.
6.	Electronic Flow Computers - A computer, transducer and other associated sensing equipment that meets generally accepted industry standards and practices will be installed by Katy and used for purposes of measurement in lieu of mechanical measuring equipment with charts. The values for gross Heating Value and specific gravity shall be entered as real-time data if that data is available. The values for carbon dioxide and nitrogen used in supercompressibility correction determinations shall be entered as real-time data if that data is available or shall be entered manually, but at least once each six (6) Months.
7.	Where measuring facilities are installed, owned, maintained and operated by third party pipelines, at or near the Receipt Point(s) and Delivery Point(s) then reference is made to the applicable third party pipeline's tariff with regard to measurement equipment.


APPENDIX "B"
QUALITY REQUIREMENTS
Except as otherwise provided below, all natural Gas Delivered to Katy at Receipt Point(s) and all natural Gas Delivered by Katy at the Delivery Point(s) shall conform to the following specifications:
1.	Oxygen - The oxygen content shall not exceed ten parts per million (10 ppm) by volume of uncombined oxygen and every reasonable effort shall be made to keep the Gas Delivered free of oxygen;
2.	Liquids - The Gas shall be free of water and hydrocarbons in liquid form at the temperature and pressure at which the Gas is Delivered. The Gas shall in no event contain water vapor in excess of seven (7) pounds per million standard cubic feet;
3.	Hydrogen Sulfide - The Gas shall not contain more than two (2) grains of total sulphur per one hundred (100) cubic feet.
4.	Total Sulphur - The Gas shall not contain more than two (2) grains of total sulphur per one hundred (100 cubic feet;
5.	Carbon Dioxide - The Gas shall not have a carbon dioxide content in excess of two percent (2%) by volume;
6.	Dust, Gums, and Solid Matter - The Gas shall be commercially free of objectionable odors, dust, gums, and gum forming constituents, solid matter, and any other substance which interferes with the merchantability of the Gas, or causes interference with the proper and safe operation of the pipelines, meters, regulators and other facilities through which it will flow;
7.	Heating Value - The Gas shall contain an average heating content of not less than nine hundred fifty (950) Btus per cubic foot or more than eleven hundred (1,100) Btus per cubic foot;
8.	Temperature - The Gas shall be Delivered at temperatures not in excess of one hundred twenty degrees Fahrenheit (120o F), nor less than forty degrees Fahrenheit (40o F);
9.	Nitrogen - The nitrogen content of the Gas shall not exceed three percent (3%) by volume. Total inerts (N2 +CO2 + etc.) shall not exceed four percent (4%) by volume;
10.	Hydrogen - The Gas shall contain no carbon monoxide, halogens, or unsaturated hydrocarbons, and no more than four hundred parts per million (400 ppm) by volume of hydrogen; and
11.	Neopentane - The Gas shall contain not more than two-tenths (0.2) gallons of neopentane or heavier liquefiable hydrocarbons per Mcf.












Page 46 of 46

Appendix A - Page 3 of 3

Appendix B - Page 2 of 2</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>6262020</filing_id>
      <filing_title>Enstor Katy Storage Amended SOC Filing</filing_title>
      <filing_type>1000</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2020-05-04</current_effective_date>
      <ferc_order_date>2020-09-17</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>Y</suspend_motion>
    </record_data>
  </ferc_filing_data>
</Document>