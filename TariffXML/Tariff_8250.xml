<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Document xmlns="http://ferc.gov/etariffExport.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ferc_filing_data>
    <schema_version>2</schema_version>
    <company_id>C012377</company_id>
    <lead_applicant_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
    <tariff_id>112</tariff_id>
    <tariff_title>Tariffs</tariff_title>
    <tariff_export_date>2025-09-16T21:05Z</tariff_export_date>
    <export_schema_version>2</export_schema_version>
    <record_data>
      <record_id>236</record_id>
      <option_code>A</option_code>
      <record_title>Statement of Operating Conditions</record_title>
      <record_content_desc xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_version_num>0.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>1000</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2024-10-01</proposed_effective_date>
      <priority_order>500</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>MATTERHORN EXPRESS PIPELINE, LLC  STATEMENT OF OPERATING CONDITIONS      VERSION 0.0.0    EFFECTIVE OCTOBER 1, 2024      eTariff Information  Tariff Submitter: Matterhorn Express Pipeline LLC  FERC Tariff Program Name: FERC NGPA Gas Tariff  Tariff Title: Matterhorn Express Pipeline LLC Statement of Operating Conditions Applicable to NGPA Section 311 Transportation Service  Tariff Record Proposed Effective Date: October 1, 2024  Tariff Record Title: Statement of Operating Conditions  Option Code: A        MATTERHORN EXPRESS PIPELINE, LLC  STATEMENT OF OPERATING CONDITIONS APPLICABLE TO NGPA SECTION 311 TRANSPORTATION SERVICE  TABLE OF CONTENTS  SECTION                 PAGE  1. INTRODUCTION         2  2. DEFINITIONS         2  3. REQUEST FOR SERVICE AGREEMENTS AND SERVICE ORDERS  5  4. TRANSPORTATION SERVICE       8  5. QUANTITY          12  6. DELIVERY POINTS AND RECEIPT POINTS     13  7. NOMINATIONS AND BALANCING      14  8. PARKING AND LOANING SERVICES      19  9. RATES          21  10. TERM          21  11. ADDRESSES          22  12. MISCELLANEOUS         22  EXHIBIT "A" - General Terms and Conditions  EXHIBIT "B" - Statement of Rates    MATTERHORN EXPRESS PIPELINE, LLC  NGPA SECTION 311 STATEMENT OF OPERATING CONDITIONS  1. INTRODUCTION.   Matterhorn Express Pipeline, LLC ("Transporter") is an intrastate pipeline, with facilities located wholly within the State of Texas, and is exempt from the jurisdiction of the Federal Energy Regulatory Commission ("FERC") under the Natural Gas Act of 1938 ("NGA").  This Statement of Operating Conditions shall apply to all service provided by Transporter under Section 311 of the Natural Gas Policy Act of 1978 ("NGPA"). If by providing transportation services under Section 311 of the NGPA and the regulations thereunder, Transporter's status as an intrastate pipeline that is exempt from NGA jurisdiction is impacted, altered, or threatened in any way, by virtue of any change in statutes, regulations, or other applicable law of any kind, then Transporter reserves the right to terminate all transportation services under Section 311 of the NGPA and all Service Agreements and applicable Service Orders related thereto, and to withdraw this Statement of Operating Conditions, all effective on the Day before any such change in statutes, regulations, or other applicable law. In light of the foregoing, Transporter presents this Statement of Operating Conditions under which Transporter will offer NGPA Section 311 transportation service on its system. The rates charged by Transporter for NGPA Section 311 transportation service shall be established pursuant to 18 C.F.R. 284.123(b)(1)(i)(A) and such current rates are summarized on Exhibit "B" hereto.    2. DEFINITIONS   The following terms as used herein, in a Service Agreement, or in a Service Order, will be construed to have the following scope and meaning:   a) "Adequate Assurance of Performance" is defined in Section 3.3.2 of this Statement of Operating Conditions.  b) "Agency Agreement" is defined in Section 4.6 of this Statement of Operating Conditions.  c) "Authorized Overrun Service" is defined in Section 5.3.1 of this Statement of Operating Conditions.  d) "Btu" means British thermal unit and, where appropriate, the plural thereof.  e) "Cash out" or "Cashed out" means a payment made by Transporter, or Shipper, to resolve an imbalance of Gas at a determined price or a price based on a published index.  f) "Day" means the period beginning at 9:00 a.m. central clock time ("CCT") on each calendar day and ending at 9:00 a.m. CCT on the following calendar day.  g) "Delivery Point(s)" is defined in Section 6.1 of this Statement of Operating Conditions.   h) "Effective Date" means the first Day of effectiveness of a Service Agreement or Service Order thereunder.  i) "FERC" or "Commission" means the Federal Energy Regulatory Commission.  j) "Firm" or "Firm Service" means that the Maximum Daily Contract Quantity or Shipper's Reserved Capacity is not subject to a prior claim by another customer or class of service and has not been committed to, or reserved by, another customer or class of service.   k) "Gas" means any mixture of hydrocarbons and noncombustible gases in a gaseous state consisting primarily of methane.  l) "Heating Value" means the total gross heating value, expressed in BTU per cubic foot, at a contract base temperature of sixty degrees Fahrenheit (60  F) and a contract base pressure of fourteen and sixty-five hundredths (14.65) psi, calculated as prescribed within GPA Standard 2172 "Calculation of Gross Heating Value, Relative Density, Compressibility and Theoretical Hydrocarbon Liquid Content for Natural Gas Mixtures for Custody Transfer", or such revision thereof in common use.  The Heating Value may be adjusted to reflect water content, at actual measured pressure and temperature.  m) "Interruptible" or "Interruptible Service" means that the capacity used to provide the service is subject to a prior claim by another Shipper or another class of service and receives a lower priority than such other classes of service.  n) "Investment Credit Rating" means a credit rating of at least "BBB-", "Baa3," or better, rated by S&amp;P Global Inc. ("S&amp;P") and Moody's Investors Service, respectively, or equivalent.  o) "Lost and Un-accounted for Gas" is defined in Section 9.2 of this Statement of Operating Conditions.  p) "Maximum Daily Contract Quantity" or "MDCQ" means the maximum quantity of Gas in MMBtu, exclusive of applicable Retention Volume, that Shipper may nominate and deliver to Transporter each Day for Firm or Interruptible Service at Receipt Point(s) or Delivery Point(s) or an aggregate of Receipt Points or Delivery Points as specified in a Service Order.   q) "Maximum Hourly Quantity" is defined in Section 5.1 of this Statement of Operating Conditions.  r) "Mcf" means one thousand cubic feet, and "MMBtu" means one million Btu.  s) "MDDO" means the maximum daily delivery obligation at any Primary Delivery Point or Secondary Delivery Point, as set forth in a Service Agreement.  t) "MDRO" means the maximum daily receipt obligation at any Primary Delivery Point or Secondary Delivery Point, as set forth in a Service Agreement.  u) "Metering Party" is defined in Section 3, Exhibit A of this Statement of Operating Conditions.  v) "Month" means that period of time beginning at 9:00 a.m. CCT on the first day of a calendar month and ending at 9:00 a.m. CCT on the first day of the following calendar month.  w) "NAESB" means the North American Energy Standards Board.  x) "Net Present Value Calculation" or "NPV" means the calculated present value utilizing a standard net present value calculation using a discount factor equal to the then-current interest rate determined in accordance with Section 154.501(d) of the Commission's Rules and Regulations.  y) "Nomination" is defined in Section 7.1 of the Statement of Operating Conditions.  z) "Non-Metering Party" is defined in Section 3, Exhibit A of this Statement of Operating Conditions.  aa) "Operational Balancing Agreement" or "OBA" means an agreement between two parties (Transporter and interconnecting third party), at an interconnection, which specifies the procedures to manage operating variances between those two parties.    bb) "Operational Flow Order" is defined in Section 7.3 of the Statement of Operating Conditions.  cc) "Pool" means the virtual Receipt Points and/or Delivery Points determined by Transporter at which Gas may be aggregated, disaggregated and transacted.  dd) "Primary Delivery Point" means those delivery point(s) on Transporter's system listed under Shipper's Service Order with a specified firm MDDO, as may be amended upon mutual agreement from time to time.  ee) "Primary Path" means the portion of pipeline capacity physically located between the designated Primary Point(s) of Receipt and Delivery.  ff) "Primary Receipt Point" means those receipt point(s) on Transporter's system listed under Shipper's Service Order with a specified firm MDRO, as may be amended upon mutual agreement from time to time.  gg) "Psia" means pounds per square inch absolute.  hh) "Psig" means pounds per square inch gauge.  ii) "Quality Specifications" is defined in Section 4, Exhibit A of this Statement of Operating Conditions.  jj) "Receipt Point(s)" is defined in Section 6.2 of the Statement of Operating Conditions.   kk) "Retention Volume" is defined in Section 9.2 of the Statement of Operating Conditions.   ll) "Scheduled Quantity" means the quantity of Gas, plus any applicable Retention Volume nominated by Shipper and scheduled and confirmed by Transporter with the upstream and the downstream pipeline facility operators designated by Shipper and subject to any limitations of the MDCQ and SRC set forth in a Service Order.   mm) "Secondary Delivery Point" means any delivery point on the system that is listed as a Secondary Delivery Point under a Service Order for use on an as-available basis with the priority of service listed under Section 4.4.  nn) "Secondary Receipt Point" means any receipt point on the system that is listed as a Secondary Receipt Point under a Service Order for use on an as-available basis with the priority of service listed under Section 4.4.   oo) "Service Agreement" means a transportation service agreement between Transporter and Shipper, under which Transporter will enter into one of more Service Orders to provide Firm or Interruptible transportation services or park and loan services for Shipper pursuant to the terms and provisions of this Statement of Operating Conditions.  A Service Agreement may include one or more "Service Orders" for various types of service.  pp) "Service Order" means a Service Order entered into between the Parties which evidences the agreement between the Parties as to the terms of a particular transaction for service(s) to be provided under a Service Agreement.    qq) "Shipper" means a party that holds all lawful rights and/or title to the Gas that is being transported and who has a fully executed Service Agreement with Transporter.  rr) "Shipper's Reserved Capacity" or "SRC" means the daily Firm transportation capacity (expressed in MMBtu) reserved for Shipper in Transporter's pipeline as specified in a Service Order.  ss) "Transportation Fees" is defined Section 9.1 of this Statement of Operating Conditions.  tt) "Transportation Imbalance" is defined in Section 7.2.2 of this Statement of Operating Conditions.  3. REQUEST FOR SERVICE AGREEMENTS AND SERVICE ORDERS.        3.1 Request for Service Agreement.  A Service Agreement is required for all services hereunder and will be subject to all terms and provisions of this Statement of Operating Conditions, its applicable Service Agreement (including any applicable Service Order(s)), and any applicable Agency Agreement.  Any potential Shipper desiring to obtain services from Transporter must request a Service Agreement from Transporter.  The request may be in writing, by telephone or electronic medium.  Shipper shall provide documentation to demonstrate its creditworthiness to the satisfaction of the Transporter in accordance with Section 3.3 hereof.    Requests for Service Agreement may be sent to:   100 Congress Avenue  Suite 2200  Austin, TX 78701  United States of America  Transporter Main Tel.: (512) 953-2100  Email:  MXP@wwm-llc.com          3.2 Requirements of Request for Service.  Each request for a specific transaction (i.e., a Service Order) under an executed Service Agreement should be made pursuant to the method described in 3.1 and must include the following information:        3.2.1 Shipper's name, and any applicable Service Agreement number;        3.2.2 Requested Receipt Point(s) or receipt point area and Delivery Point(s) or delivery point area, and a statement, containing information verifiable by Transporter, that the minimum transportation quantity of gas to be received or delivered at least equals 750 MMBtu per day at any and each Receipt Point or Delivery Point;        3.2.3 Shipper's requested Maximum Daily Contract Quantity and/or Shipper's Reserved Capacity;         3.2.4 The type and character of service requested; and  3.2.5 The term of the service requested.         3.3 Credit Approval.  Transporter's agreement to execute a Service Agreement or to engage in a specific transaction (i.e., a Service Order) under a Service Agreement is contingent upon a satisfactory appraisal of Shipper's credit by Transporter.          3.3.1 A Shipper or potential Shipper must provide a copy of its last two (2) fiscal years of audited financial statements, including balance sheet, income statement, cash flow statement and accompanying footnotes.  If such Shipper or potential Shipper cannot provide the above information on itself, then such Shipper or potential Shipper must, if applicable, provide that information for its parent company.  Transporter may, acting in a prudent, non-discriminatory, and reasonable manner, elect to waive the requirement to provide the information set forth in this Section 3.3.1 and, in lieu thereof, Transporter may request other forms of evidence of creditworthiness consistent with the Service(s) to be provided.         3.3.2 In the event Transporter determines Shipper's credit to be unsatisfactory, as tested in a commercially reasonable and in a not unduly discriminatory manner, at any time during the term of any Service Agreement, including any Service Order(s), Transporter may demand "Adequate Assurance of Performance" which shall mean sufficient security in a form, an amount and for the term reasonably specified by Transporter.  Shipper may support its credit by providing one of the following forms of security:        (a) post an irrevocable standby letter of credit in a form, substance and from a bank satisfactory to Transporter for services equal to or up to three (3) Months of all fees and charges that would be due from Shipper if Transporter were performing such service plus an amount for projected imbalances, unless a lesser amount is reasonable to and agreed upon by Transporter based on Shipper's financial condition; or        (b) provide a prepayment or a deposit for services equal to or up to three (3) Months of all fees and charges that would be due from Shipper if Transporter were performing such service plus an amount for projected imbalances, unless a lesser amount is reasonable to and agreed upon by Transporter based on Shipper's financial condition; or        (c) provide a guaranty from a guarantor acceptable to Transporter. The  demand for Adequate Assurance of Performance can be satisfied with a guaranty issued on behalf of Shipper in a format, amount and term acceptable to Transporter, but only for as long as the credit of Shipper's guarantor continues to be acceptable to Transporter, after which time only Adequate Assurance of Performance in the form of (a) and (b) will be acceptable to Transporter.                3.3.3 Transporter will not be required to perform or continue to perform service under any Service Agreement or Agency Agreement in the event: (i) Shipper has voluntarily filed for bankruptcy protection under any chapter of the Bankruptcy Code; (ii) Shipper is the subject of an involuntary petition of bankruptcy under any chapter of the Bankruptcy Code, and such involuntary petition has not been settled or otherwise dismissed within ninety (90) Days of such filing; or (iii) Shipper otherwise becomes insolvent, whether by an inability to meet its debts as they come due in the ordinary course of business or because its liabilities exceed its assets on a balance sheet test and/or however such insolvency may otherwise be evidenced.        3.3.4 Should Shipper fail to provide Adequate Assurance of Performance within two (2) business Days after receipt of written demand for such assurance, then Transporter shall have the right to suspend performance under any Service Agreement or Agency Agreement until such time as Shipper furnishes Adequate Assurance of Performance and/or terminate any Service Agreement or Agency Agreement in addition to all other remedies available at law or in equity.        3.4 Transporter shall have the right to reject any request for Service Agreement and Agency Agreement that does not contain the required information set forth herein and Transporter will have no liability to Shipper or any other entity in connection with such rejection.        3.5 In addition to requiring Adequate Assurance of Performance to secure the Service Agreement and/or transactions thereunder, Transporter may require additional or alternate security from Shipper if the Service Agreement is associated with underwriting of capital investments or infrastructure development by Transporter or Transporter's service to Shipper is contingent upon Transporter's construction of facilities.  This provision shall also apply to any assignment of a Service Agreement that was initially subject to this provision.         3.6  Service Agreements.  After Shipper has requested a Service Agreement and after Transporter has determined that Shipper is creditworthy, Transporter and Shipper may enter into a Service Agreement, which will incorporate by reference the provisions of this Statement of Operating Conditions.  Neither Transporter nor Shipper will have any obligations to one another until authorized representatives of both Transporter and Shipper have executed a Service Agreement.  Any applicable Service Agreement(s) (including any Service Order(s)) and, if applicable, any Agency Agreement will contain specific details agreed to by Transporter and Shipper for a particular service arrangement.    4. TRANSPORTATION SERVICE.        4.1 Transporter's Obligations.  Transporter will receive Gas up to the Scheduled Quantity at the Receipt Point(s) as nominated and tendered by Shipper under the terms of this Statement of Operating Conditions, the Service Agreement and the applicable Service Orders thereunder, and any Agency Agreement, transport and deliver an equivalent quantity of Gas, in MMBtu, to Shipper at the Delivery Point(s), less the Retention Volume as set forth in Section 9.2 of this Statement of Operating Conditions.  Transporter's obligations to receive, transport, and deliver Gas to the Delivery Point(s) shall be in accordance with the applicable character of service (i.e., Firm or Interruptible), and are subject to:  (i) an event of Force Majeure; (ii) Shipper's failure or refusal to deliver Gas to or receive Gas from Transporter as required under this Statement of Operating Conditions and the Service Agreement and the applicable Service Orders thereunder; (iii) any laws, rules, orders, or requirements of any governmental or regulatory authorities that limit, prevent, or interfere with Transporter's performance; and (iv) as otherwise provided under any other terms and conditions in this Statement of Operating Conditions, the Service Agreement and the applicable Service Orders thereunder, and any applicable Agency Agreement.  Shipper acknowledges that the quantity of Gas physically received or delivered by Transporter may be different than the Scheduled Quantity and, for those Receipt Point(s) and Delivery Point(s) at which Transporter has Operational Balancing Agreements, the Scheduled Quantity is deemed to have been received or delivered for the account of Shipper, subject to the remaining terms and conditions of this Statement of Operating Conditions, the applicable Service Agreement and applicable Service Orders thereunder, and any applicable Agency Agreement.  In the event of constraints on a downstream pipeline, Transporter will rely on the downstream party's allocation at the affected Delivery Point(s) and, to the extent Shipper's Nominations are reduced, Shipper will be deemed to have failed to receive Gas from Transporter as required hereunder.        4.2  Interruption of Service.  Transporter will advise (by telephone or electronic medium) Shipper's dispatcher or authorized representative of an interruption as soon as practicable, either before or after interruption of service, but Transporter will have no liability for any failure to give such notice provided Transporter has made a reasonable effort to provide such notice.  Transporter will not be liable for any loss or damage to any person or property caused, in whole or in part, by any interruption of Interruptible service under any Service Agreement.  Shipper will indemnify and hold harmless Transporter, its officers, agents, employees, and contractors from and against any and all suits, claims, liability, loss, damages, costs (including attorneys' fees and court costs) or encumbrances whatsoever brought by any person or entity against Transporter as a result of, or arising out of, any interruption of Interruptible service under any Service Agreement.  Should any third party with the right to control the Receipt Point(s), Delivery Point(s), or any other facilities needed for the receipt, transportation, parking, loaning, balancing or delivery of Gas hereunder limit or fail to authorize the use of any such facilities to perform services provided hereunder, Transporter will have no obligation hereunder to perform any such transportation services, or receive or deliver Gas hereunder.  Notwithstanding the foregoing, when Transporter contracts with a third party (which such third party could be affiliates of Transporter) to provide services hereunder, Transporter will contract for such third-party service with the same level of service as contracted by Shipper with Transporter.  The phrase, "services provided hereunder" shall include services to be provided under each applicable Service Agreement, Service Order, and/or any applicable Agency Agreement.        4.3 Shipper's Obligations.  Shipper will tender the Scheduled Quantity at the Receipt Point(s), and accept such Gas, less the Retention Volume, at the Delivery Point(s).  Shipper's obligations set forth in the preceding sentence are subject to: (i) an event of Force Majeure; (ii) Transporter's failure or refusal to receive Gas from or deliver Gas to Shipper as required under this Statement of Operating Conditions and the Service Agreement and the applicable Service Order(s) thereunder; (iii) any laws, rules, orders, or requirements of any governmental or regulatory authorities that limit, prevent, or interfere with Shipper's performance; and (iv) as otherwise provided under any other terms and conditions in this Statement of Operating Conditions, each applicable Service Agreement, Service Order and/or any applicable Agency Agreement.        4.4 Priority of Service for Purposes of Nominations and Scheduling.  From time to time, Transporter may not have sufficient capacity available to accommodate all nominations through specific Receipt Point(s), specific Delivery Point(s), specific compression stations, and/or specific segments of Transporter's pipeline system.  In such event, Transporter will schedule and perform service in the following order of priority based on the location of constraint as outlined below:  4.4.1 Scheduling of Receipt Point(s)   * Firm transportation services utilizing Primary Receipt Point(s) will be allocated pro-rata based on their confirmed transportation nominations for that day.  * Firm transportation services utilizing Secondary Receipt Point(s) within the Primary Path will be allocated pro-rata based on their confirmed transportation nominations for that day.    * Firm transportation services utilizing Secondary Receipt Point(s) outside the Primary Path will be allocated pro-rata based on their confirmed transportation nominations for that day.   * Authorized Overrun Service and Interruptible transportation services will be allocated in sequence starting with the service providing greatest economic benefit.  In the event one or more services provide the same economic benefit, then the allocation will be pro-rata.  The greatest economic benefit means the highest per unit transportation rate for the day of the allocation.    * Park and loan services will be allocated in sequence starting with the service providing greatest economic benefit.  In the event one or more park and loan services provide the same economic benefit, then the allocation will be pro-rata.  The greatest economic benefit means the highest per unit transportation rate for the term of the service.    4.4.2 Scheduling of Delivery Point(s)   * Firm transportation services utilizing Primary Delivery Point(s) will be allocated pro-rata based on their confirmed transportation nominations for that day.  * Firm transportation services utilizing Secondary Delivery Point(s) within the Primary Path will be allocated pro-rata based on their confirmed transportation nominations for that day.    * Firm transportation services utilizing Secondary Delivery Point(s) outside the Primary Path will be allocated pro-rata based on their confirmed transportation nominations for that day.   * Authorized Overrun Service, and Interruptible transportation services will be allocated in sequence starting with the service providing greatest economic benefit.  In the event one or more services provide the same economic benefit, then the allocation will be pro-rata.  The greatest economic benefit means the highest per unit transportation rate for the day of the allocation.    * Park and loan services will be allocated in sequence starting with the service providing greatest economic benefit.  In the event one or more park and loan services provide the same economic benefit, then the allocation will be pro-rata.  The greatest economic benefit means the highest per unit transportation rate for the term of the service.  4.4.3 Scheduling of compressor stations and/or specific segments of Transporter's pipeline system    * Firm transportation services utilizing their Primary Path at the location of the allocation will be allocated pro-rata based on their confirmed transportation nominations for that day.  * Firm transportation services not utilizing their Primary Path at the location of the allocation will be allocated pro-rata based on their confirmed transportation nominations for that day.    * Authorized Overrun Service and Interruptible transportation services will be allocated in sequence starting with the service providing greatest economic benefit.  In the event one or more services provide the same economic benefit, then the allocation will be pro-rata.  The greatest economic benefit means the highest per unit transportation rate for the day of the allocation.    Transporter shall not be liable for any loss or damage to any person or property caused, in whole or in part, by any interruption or curtailment of Interruptible service.  Shipper agrees to indemnify and hold harmless Transporter, its officers, agents, employees, and contractors, from and against any and all suits, claims, liability, loss, damages, costs (including attorneys' fees and court costs), or encumbrances whatsoever brought by any person or entity against Transporter as a result of, or arising out of, any interruption or curtailment of Interruptible service that is not caused by Transporter's willful misconduct or gross negligence.   Transporter is not required to schedule any Authorized Overrun Services or Interruptible transportation services which are causing capacity constraints or impair the Transporter's ability to provide efficient and reliable Firm Service to any other parties.  Transporter shall have the operational discretion to schedule on a non-discriminatory basis Authorized Overrun Services or Interruptible transportation services regardless of economic benefit, if Transporter using reasonable judgement, determines that such service is operationally beneficial to pipeline operations.          4.5 Multiple Service Orders.  If Shipper has multiple Service Orders, Shipper will not be permitted to combine services available under such Service Orders.  Specifically, Gas will be received under a particular Service Order and will be delivered under the same Service Order.          4.6 Agency Agreement.  In the event that Shipper has transportation arrangements on one or more pipeline systems owned or operated by Transporter or its affiliates or subject to an OBA (Operational Balancing Agreement) or interconnection agreement between Transporter and an interconnecting pipeline, Transporter may enter into an agency agreement for ease of operation and administration and Shipper's convenience ("Agency Agreement").  In the Agency Agreement, Transporter or one of its affiliates may, among other things, agree to give and receive all notices and statements, receive payments for all amounts due under the transportation arrangements, give and receive Nominations and schedule quantities to be received and delivered, administer imbalances as requested by Shipper and adjust any mechanical difference that may arise with respect to measurement, billing and payments made or to be made, the allowance of credits and any undercharge or overcharge, with respect to such difference.  Notwithstanding Section 7.1, Shipper will submit Nominations to the party designated to receive such Nominations in the Agency Agreement and will submit such Nominations in the form and substance identified in the Agency Agreement.        4.7 Interstate Service. In addition to the interstate services that Transporter may provide pursuant to FERC's rules and regulations and this NGPA Section 311 Statement of Operating Conditions, Transporter also provides intrastate transportation services that are subject to the exclusive jurisdiction of the Railroad Commission of Texas and that are exempt from FERC's regulation under the NGPA. In that event and to provide Shippers with flexibility to access intrastate and/or interstate markets, Shippers may contract for both intrastate and NGPA Section 311 service on mutually agreeable terms, including a limitation that Shipper's combined usage under the intrastate and NGPA Section 311 agreements cannot exceed the MDCQ or SRC, as applicable. Each Firm NGPA Section 311 Shipper shall execute, along with its Firm Section 311 Service Order, an Intrastate Service Order, to facilitate transportation under the appropriate jurisdiction. Intrastate and NGPA Section 311 service shall be curtailed identically for the purposes of this Section 4.   5. QUANTITY.        5.1 Maximum and Minimum Delivery and Receipt Quantities.  The maximum quantity of Gas that Transporter is obligated to receive hereunder at the Receipt Point(s) and deliver hereunder at the Delivery Point(s) during any given hour of any Day is 1/24 of the Shipper's Scheduled Quantity at an instantaneous standard volumetric flow rate at any point in time during the hour (the "Maximum Hourly Quantity").  If Shipper has entered into transportation arrangements with one or more of Transporter's affiliates that have pipelines interconnecting with Transporter's pipeline, then Shipper may agree to limit the quantity of Gas to an aggregate quantity across the pipelines of one or more of Transporter's affiliates.  Transporter has no obligation to receive, transport, and deliver quantities of Gas hereunder in excess of the Scheduled Quantity.  Transporter has no obligation to receive or deliver Gas in quantities exceeding the physical capacity of the Delivery Point(s) or Receipt Point(s).        5.2 All Quantities in MMBtu.  All quantities of Gas received and delivered under any Service Agreement or Agency Agreement will be expressed in terms of MMBtu, including, without limitation, calculation of payments, determination of imbalances, and determination of Retention Volume.   5.3 Authorized Overrun Service.          5.3.1 Upon request of Shipper at, or prior to, the time it nominates Firm or Interruptible Service, Transporter may approve and schedule for receipt or delivery a quantity of Gas greater than the MDCQ or the SRC, and Shipper's Retention Volume, specified in the Service Agreement ("Authorized Overrun Service").  Authorized Overrun Service will be available only if (i) Transporter determines in its reasonable discretion that it has sufficient capacity after first scheduling all Firm transportation service within the limits of all Shippers' MDCQs and SRCs, and (ii) Shipper and Transporter mutually agree to a rate for Authorized Overrun Service at the time the overrun is requested.  Authorized Overrun Service will be scheduled on a first-come, first-served basis, with the priorities established in Section 4.4.        5.3.2 Authorized Overrun Service is Interruptible and Transporter has absolutely no liability whatsoever in damages or otherwise for any interruption or cessation of Authorized Overrun Service.    6. DELIVERY POINT(S) AND RECEIPT POINT(S).         6.1 Delivery Point(s).  Transporter will deliver Gas to Shipper, or its agent, under this Statement of Operating Conditions, the Service Agreement, the applicable Service Order and/or any applicable Agency Agreement to the existing points of interconnection between Transporter's pipeline facilities and the pipeline or receipt facilities of other parties at the "Delivery Point(s)" or a Pool consisting of an aggregate collection of such points, as identified in the Service Order, which Delivery Points may include Primary Delivery Points and Secondary Delivery Points.  Delivery Point(s) may be modified, or additional Delivery Point(s) may be added to a Service Order, by mutual agreement of the parties.  Delivery Point(s) listed in a Service Order are considered Primary Delivery Points unless specifically identified as Secondary Delivery Points.        6.2 Receipt Point(s).  Shipper will tender Gas for delivery to Transporter under this Statement of Operating Conditions, the Service Agreement, its applicable Service Order and/or any applicable Agency Agreement from the existing points of interconnection between Transporter's pipeline facilities and the pipeline or delivery facilities of other parties at the "Receipt Point(s)" or a Pool consisting of an aggregate collection of such points, as identified in the Service Order, which Receipt Points may include Primary Receipt Points and Secondary Receipt Points.  Receipt Point(s) may be modified, or additional Receipt Point(s) may be added to a Service Order, by mutual agreement of the parties.   Receipt Point(s) listed in a Service Order are considered Primary Receipt Points unless specifically identified as Secondary Receipt Points.         6.3 Allocation at Receipt and Delivery Point(s).  It is recognized that quantities of Gas may be transported through the Receipt Point(s) and/or the Delivery Point(s) for one or more parties other than the Shipper.  If that occurs, the measurement of Gas under this Agreement may involve the allocation of Gas receipts or deliveries.  As between Transporter and Shipper, and subject to Section 4.1, Transporter will determine the allocation of all Gas deliveries hereunder.          6.4 Payment of Fees.  Shipper must pay any and all transportation, measurement, testing, compression, or other fees or charges imposed by any third party on deliveries at any Receipt Point(s) or Delivery Point(s). Transporter shall promptly reflect all such fees or charges on its Statement of Rates, in any event, within 30 days of the effectiveness of such rates or charges. Notwithstanding the foregoing, in the event Transporter pays any such fees and charges, Shipper must reimburse Transporter for any such fees or charges paid by Transporter with respect to Shipper's Gas provided that Transporter has given Shipper written notice of the amount of such fees and charges and Shipper has agreed in writing to reimburse Transporter for such fees and charges.  If Shipper has not given Transporter written notice of its agreement to reimburse Transporter for any such fees and charges, Transporter will have no obligation to receive Gas for Shipper at any such Receipt Point(s) or deliver Gas for Shipper at any such Delivery Point(s) that may be subject to such fees and charges.  7. NOMINATIONS AND BALANCING.        7.1 Nominations. Shipper or its agent shall submit the quantity of Gas in MMBtu Shipper expects to make available and deliver at each Receipt Point each Day, or portion thereof, and receive at each Delivery Point each Day, or portion thereof (the "Nomination") via Transporter's or Transporter's affiliate's Web-based online nomination system.  Transporter will schedule and confirm Shipper's Nomination with upstream and downstream operators in accordance with the provisions of this Statement of Operating Conditions, the Service Agreement and the applicable Service Order.  Shipper must have a Service Order in place before a Nomination can be submitted.  Transporter, to the extent it is utilizing for its own account any available unused capacity shall submit a Nomination for such service in accordance with the same provisions and shall be treated in the same manner, as all other Nominations pursuant to the Nomination procedures set forth herein and the scheduling and priority of service provisions of this Statement of Operating Conditions.  In the event Transporter submits a nomination and is subject to the rules in Section 4.4, Priority of Service and Scheduling, that Transporter's Nomination will be scheduled at a rate equal to $0.00 so that in the event priorities of service are determined based upon greatest economic benefit, Transporter's Nomination will receive a lower priority than paying Shippers.         Transporter supports the following standard Nomination cycles (all times are Central Clock Time pursuant to NAESB WGQ Standard No. 0.3.17), as the same may be modified by NAESB:        7.1.1 The Timely Nomination Cycle        On the Day prior to Gas flow:  * 1:00 p.m. Nominations leave control of Shipper;  * 1:15 p.m. Nominations are received by Transporter (including from Title Transfer Tracking Service Providers (TTTSPs));  * 1:30 p.m. Transporter sends the quick response to Shipper;  * 4:30 p.m. Transporter received completed confirmations from confirming parties;  * 5:00 p.m. Shipper and point operator receive scheduled quantities from Transporter.  Scheduled quantities resulting from Timely Nominations should be effective at the start of the next Day.        7.1.2 The Evening Nomination Cycle        On the Day prior to Gas flow:  * 6:00 p.m. Nominations leave control of Shipper;  * 6:15 p.m. Nominations are received by Transporter (including from TTTSPs);  * 6:30 p.m. Transporter sends quick response to Shipper;  * 8:30 p.m. Transporter receives completed confirmations from confirming parties;  * 9:00 p.m. Shipper and point operator receive scheduled quantities from Transporter, including bumped parties.  Scheduled quantities resulting from Evening Nominations should be effective at the start of the next Day.  7.1.3 The Intraday 1 Nomination Cycle  On the current Day:  * 10:00 a.m. Nominations leave control of Shipper;  * 10:15 a.m. Nominations are received by Transporter (including from TTTSPs);  * 10:30 a.m. Transporter sends quick response to Shipper;  * 12:30 p.m. Transporter receives completed confirmations from confirming parties;  * 1:00 p.m. Shipper and point operator receive scheduled quantities from Transporter, including bumped parties.  Scheduled quantities resulting from Intraday 1 Nominations should be effective at 2:00 p.m. on the current Day.  7.1.4 The Intraday 2 Nomination Cycle  On the current Day:  * 2:30 p.m. Nominations leave control of Shipper;  * 2:45 p.m. Nominations are received by Transporter (including from TTTSPs);  * 3:00 p.m. Transporter sends quick response to Shipper;  * 5:00 p.m. Transporter receives completed confirmations from confirming parties;  * 5:30 p.m. Shipper and point operator receive scheduled quantities from Transporter, including bumped parties.  Scheduled quantities resulting from Intraday 2 Nominations should be effective at 6:00 p.m. on the current Day.  7.1.5 The Intraday 3 Nomination Cycle  On the current Day:  * 7:00 p.m. Nominations leave control of Shipper;  * 7:15 p.m. Nominations are received by Transporter (including from TTTSPs);  * 7:30 p.m. Transporter sends quick response to Shipper;  * 9:30 p.m. Transporter receives completed confirmations from confirming parties;  * 10:00 p.m. Shipper and point operator receive scheduled quantities from Transporter.  Scheduled quantities resulting from Intraday 3 Nominations should be effective at 10:00 p.m. on the current Day.  Bumping is not allowed during the Intraday 3 Nomination Cycle.   The Timely Nomination Cycle and all subsequent Nomination cycles follow the standard scheduling priority in which firm service has the highest scheduling priority, followed by interruptible service and Authorized Overrun Service.  But different rules determine whether a Nomination, once scheduled, can be bumped or displaced in the Evening and Intraday Nomination cycles.  In those cycles, any firm service already scheduled cannot be bumped or displaced by another firm Nomination within the same Firm Priority of Service group specified in Section 4.4 for the applicable type of constrain.  Already scheduled interruptible service can be bumped by a firm Nomination at the Evening Nomination Cycle and the Intraday 1 and Intraday 2 cycles, but cannot be bumped at the last Intraday 3 (or no-bump) cycle.           7.2 Shipper's Balancing Obligations.   7.2.1 For each Service Order, the maximum quantity of Gas that Transporter is obligated to receive at the Receipt Point(s) and deliver at the Delivery Point(s) during any given hour of any Day is 1/24th of Shipper's Scheduled Quantity; provided that to the extent that, in Transporter's commercially reasonable judgment, it can do so without impairment to its other service obligations, Transporter will make available hourly receipts or deliveries for Shippers without regard to the foregoing limitation on a non-discriminatory basis.   7.2.2 In the event that Transporter or Shipper delivers or causes to be delivered at the Receipt Point(s) or Delivery Point(s) a quantity of Gas not equal to the quantity of Gas received or taken by Shipper or Transporter, a "Transportation Imbalance" may occur.  Such Transportation Imbalance shall not exceed 5% of the Scheduled Quantity on any Day. If Transporter has received or delivered the quantity of Gas nominated by Shipper and scheduled by Shipper's upstream and downstream connected parties, then Shipper shall be liable for all imbalances under its transportation agreements with Shipper's upstream and downstream connected parties and shall be required to reimburse Transporter for all charges, penalties, costs, fees and expenses which Transporter is required to pay to Shipper's upstream and downstream connected parties as a consequence of Shipper's actions.  The recovery of such charges, penalties, costs, fees and expenses shall be on an as-billed to Transporter pass-through basis.  Upon notification by Shipper or Shipper's upstream or downstream connected party that a Transportation Imbalance exists because Transporter failed to deliver or receive the quantity of Gas nominated by Shipper and scheduled by Shipper's upstream or downstream connected party, Transporter will endeavor to correct the Transportation Imbalance subject to any restrictions imposed by Shipper's upstream or downstream connected party but Transporter shall be solely liable for any charges, penalties, costs, fees  and expenses incurred or payable by either party as a result of the Transportation Imbalance.  Shipper agrees to use its best efforts to prevent or diminish any occurrences of imbalances.  7.2.3 If Transporter determines that a Transportation Imbalance exists under a Shipper's Service Order for any Day, and Transporter requests Shipper to submit a nomination to eliminate such imbalance, then Shipper agrees to use its best efforts to nominate service no later than the Timely Nomination Cycle that occurs on the next business day to eliminate such Transportation Imbalance.  If Shipper fails to eliminate within the timeframe above and after 24 hours notification from Transporter, Transporter shall have the unilateral right to exercise its reasonable operational discretion to cut Shipper's receipt volume or delivery volume until imbalance is eliminated. In the event Shipper submits a nomination, requested by Transporter, to eliminate a Transportation Imbalance and it is later determined by Transporter that Transporter is unable to accept such nomination, based on, but not limited to, operational concerns, then Transporter will waive its unilateral right to cut Shipper's nomination for balancing purposes for that day and allow Shipper to submit another nomination in a subsequent Timely Nomination Cycle, agreed to by both parties. All imbalances at the end of the month shall carry over into the subsequent month. If Shipper's cumulative imbalance exceeds more than 20% of its daily contract quantity, then Transporter reserves the right to Cash out Shipper's Transportation Imbalance at the average daily price of Gas.  For positive Transportation Imbalances (Shipper owes gas to the Transporter), the Transportation imbalance will be Cashed out at "Houston Ship Channel" as published in Gas Daily for such date(s) on which the imbalances were created plus 10% of the Cash out value to Transporter. For negative Transportation Imbalances (Transporter owes gas to the Shipper), the Transportation imbalance will be Cashed out at "Waha" as published in Gas Daily for such date(s) on which the imbalances were created minus 10% of the Cash out value to Shipper. Imbalances are managed daily with an effort to schedule balancing nominations intra month, but any balances on the imbalance account will be rolled unless a month end Cash out is elected by Transporter due to operational concerns.  7.2.4 If Transporter is unable to receive the Scheduled Quantity at any Receipt Point(s) or deliver the Scheduled Quantity at any Delivery Point(s), Transporter will notify Shipper as soon as practicable.  Transporter has no obligation to receive and deliver quantities of Gas that differ from the Scheduled Quantity.          7.3 Operational Flow Order.  To preserve the operational integrity of Transporter's system, Transporter may issue an "Operational Flow Order."        7.3.1 An Operational Flow Order may be issued if Transporter determines that changes in receipts or deliveries are necessary to enable Transporter to protect the operating integrity of Transporter's pipeline system and safely and prudently provide the services set forth in this Statement of Operating Conditions, and the effected Service Agreements, Service Orders and/or any applicable Agency Agreement.  The Operational Flow Order will identify with specificity the operational problem to be addressed, the action(s) Shipper must take, the time by which Shipper must take the specified action(s), and the period during which the Operational Flow Order will be in effect.  Transporter will provide as much prior notice as possible, but not less than three (3) hours, to Shipper of actions Shipper must take to comply with an Operational Flow Order; provided that action by Shipper can be required on less than three (3) hours' notice if the nature of the Operational Flow Order is due to safety concerns or to protect the integrity of Transporter's pipeline system.        7.3.2 An Operational Flow Order may require Shipper to take any of the following actions or similar actions:   (a) Commence or increase supply inputs into Transporter's pipeline system at specific Receipt Point(s), or, alternatively, cease or reduce deliveries from Transporter's pipeline system at specific Delivery Point(s), both as directed by Transporter to conform Shipper's gas transportation quantities to a 24-hour ratable flow or conform to specific curtailments and the applicable curtailment priorities.  (b) Cease or reduce supply inputs into Transporter's pipeline system at specific Receipt Point(s) or, alternatively, commence or increase deliveries of Gas from Transporter's pipeline system at specific Delivery Point(s), both as directed by Transporter to conform Shipper's gas transportation quantities to a 24-hour ratable flow or conform to specific curtailments and the applicable curtailment priorities.  (c) Eliminate any transportation imbalances, as directed by Transporter.  (d) Conform actual receipts and deliveries to nominated and scheduled receipts and deliveries.  (e) Delay changes in deliveries up to twenty-four (24) hours to account for the molecular movement of Gas.  (f) Such other actions that are within Shipper's reasonable control that would tend to alleviate the operational situation to be addressed.        7.3.3 No penalty or fee will apply to Shipper's actions taken in compliance with Operational Flow Orders.        7.3.4 Should Shipper fail to adjust its receipts and/or deliveries in compliance with an Operational Flow Order, then Shipper must pay Transporter a charge equal to the greater of ten dollars ($10.00) or the highest daily price of Gas as published in Gas Daily at "Waha" for Receipt Point(s) or "Houston Ship Channel" for Delivery Point(s) for such date(s) plus two dollars ($2.00)  for each MMBtu received or delivered under the Service Agreement at the Receipt Point(s) or Delivery Point(s) during each hour in which deliveries are greater than 110% or less than 90% of the Scheduled Quantities at the Receipt Point(s) for such hour, less Retention Volume, while the Operational Flow Order is in effect.         7.3.5 Should Shipper fail to abide by an Operational Flow Order issued pursuant to this Section 7.3, Shipper will also be responsible for any and all damages asserted by any third parties, and will indemnify Transporter against any claims by any third parties resulting from Shipper's failure to comply with the Operational Flow Order.         7.3.6  Transporter may adjust Shipper's Nominations to conform to Operational Flow Orders and will do so in coordination with Shipper.  8. PARKING AND LOANING SERVICES     Any park and loan service that Transporter agrees to provide to a Shipper will be on an Interruptible basis and will be performed in accordance with the applicable terms of this Statement of Operating Conditions, the Service Order, any Agency Agreement, and the following:        8.1 Parking Service        8.1.1 A Shipper electing to inject (park) Gas to its park account shall first obtain approval from the Transporter by requesting the quantity of Gas and Receipt Point(s) before nominating a quantity of Gas.  The minimum and maximum length of time the Gas may be left in the park account will be determined by the Transporter.  All such quantities of Gas that are approved for parking shall be credited to the Shipper's park account.        8.1.2 A Shipper electing to withdraw (unpark) Gas from its park account shall first obtain approval from the Transporter by requesting the quantity of Gas and Delivery Point(s), which shall be the same point(s) as the Receipt Point(s) nominated under Section 8.1.1 of this Statement of Operating Conditions, unless otherwise agreed in a Service Order before nominating a quantity of Gas.  All such quantities of Gas that are approved for withdrawal shall be deducted from the Shipper's park account.        8.1.3  In the event that the Service Agreement and applicable Service Order have terminated, Transporter may require Shipper to withdraw all, or any portion of the Gas quantities parked by the Transporter within thirty (30) Days of Transporter's notice to Shipper.  If Shipper fails to nominate for the withdrawal of the quantities specified by Transporter in its notice, Transporter shall take title to that portion of Shipper's parking account that Shipper was instructed to withdraw, free and clear of any adverse claims.  Transporter's notice to Shipper may be verbal and in such case shall be followed by a written notice within five (5) business Days.        8.1.4 To protect and/or maintain the operational integrity of its pipeline system, Transporter may require the withdrawal of Gas in Shipper's park account upon twenty-four (24) hours' notice.          8.2   Loaning Service          8.2.1 A Shipper electing to withdraw (borrow) Gas from its loan account shall first obtain approval from Transporter by requesting the quantity of Gas and Delivery Point(s) before nominating a quantity of Gas.  The minimum and maximum length of time the Gas may be withdrawn from the loan account will be determined by Transporter.  All such quantities of Gas that are approved for withdrawal shall be debited to the Shipper's loan account.        8.2.2 A Shipper electing to inject (re-pay) Gas to its loan account shall first obtain approval from the Transporter by requesting the quantity of Gas and Receipt Point(s), which shall be the same point(s) as the Delivery Point(s) nominated under Section 8.2.1 of this Statement of Operating Conditions before nominating a quantity of Gas.  All such quantities of Gas that are approved for park (store or re-pay) shall be credited to the Shipper's loan account.        8.2.3 In the event that the Service Agreement and applicable Service Order have terminated, Transporter may require Shipper to repay all, or any portion of the Gas quantities loaned by the Transporter within thirty (30) Days of Transporter's notice to Shipper.  If Shipper fails to deliver or cause to be delivered the quantities specified by Transporter in its notice, Transporter will invoice and the Shipper shall pay a fee equal to $10.00 per MMBtu per Month (or partial Month) plus an amount equal to the Waha FOM Index published in Inside FERC for the month following the month in which such quantities should have been delivered per MMBtu.  Transporter's notice to Shipper may be verbal and in such case shall be followed by a written notice within five (5) business Days.        8.2.4 To protect and/or maintain the operational integrity of its pipeline system, Transporter may require the repayment of quantities of Gas that have been loaned upon twenty-four (24) hours' notice.    9. RATES.        9.1 Transportation Fees.  Each Month Shipper will, where applicable, pay Transporter the fees as set forth in the Service Agreement or Service Order thereunder ("Transportation Fees").  Unless otherwise provided in a Service Agreement, (i) commodity charges will be charged on the quantity of Gas redelivered to Shipper at the Delivery Point(s), and (ii) demand charges will be applied to the applicable SRC or MDCQ as provided in a Service Order or Agency Agreement for each Day on which Shipper is entitled to use such SRC or MDCQ.  Transportation Fees and other charges due under this Statement of Operating Conditions, the Service Agreement, its applicable Service Order or any Agency Agreement Shipper may execute will be invoiced and payable under Section 5 of the General Terms and Conditions. Transporter and Shipper may agree to discount the rate(s) to be charged for transportation on a not unduly discriminatory basis; provided, however, that the rate may not exceed the maximum rate, or be discounted below the minimum rate set forth on the Statement of Rates.        9.2 Retention Volume.  In addition to the Transportation Fees and other charges payable under this Statement of Operating Conditions or the Service Agreement or Service Order thereunder, Transporter will retain the percentage designated in the Statement of Rates, unless mutually agreed otherwise, of the quantity of Gas received by Transporter at each Receipt Point(s) to compensate Transporter for fuel and Lost and Un-accounted for Gas (the "Retention Volume").  For the purposes herein, (the "Lost and Un-accounted for Gas") shall mean total receipts minus total deliveries corrected for changes in line pack quantities implemented by Transporter.  10. TERM.        The Service Agreement will be effective on the date listed in the Service Agreement as the "Effective Date", and will, subject to the terms and provisions of this Statement of Operating Conditions, remain in full force and effect from Month to Month until terminated by either party upon thirty (30) Days' prior written notice to the other party, or as set forth in the applicable Service Order.  Termination, cancellation, or expiration of the Service Agreement will not extinguish any obligation that accrued before or as a result of the termination, cancellation, or expiration.  11. ADDRESSES.        11.1 Addresses of Parties.  Except to the extent that oral notification is expressly permitted by this Statement of Operating Conditions, all notices, requests, demands, statements and payments provided for in this Statement of Operating Conditions must be given in writing at the email and or mailing addresses of the parties specified in the Service Agreement.        11.2 Change of Address.  A party may change its address under the Service Agreement by giving thirty (30) Days' prior written notice.  Notices and payments will be effective when they are delivered at the appropriate address specified in the Service Agreement, during normal business hours on a business Day.  Notices delivered after business hours or on a weekend or holiday will be effective on the next business Day.    12. MISCELLANEOUS.        12.1 Assignment and Transfer.  This Statement of Operating Conditions, the Service Agreement, and any Agency Agreement are binding upon and will inure to the benefit of the parties and their respective successors, assigns and legal representatives.  Shipper may not assign or transfer the Service Agreement or Agency Agreement, or any benefit or obligation arising thereunder, without first obtaining the Transporter's prior written consent, which consent will not be unreasonably withheld; provided, Shipper may transfer its interests, rights and obligations under the Service Agreement or Agency Agreement without Transporter's consent to (i) any parent, affiliate, or any successor in interest to substantially all of the assigning party's assets, provided the assignee has creditworthiness acceptable to Transporter, as determined in Transporter's reasonable commercial opinion and in a not unduly discriminatory manner, or (ii) any individual, bank, trustee, company, or corporation as security for any note, notes, bonds, or other obligations or securities of such assignor, unless provided otherwise in a Service Agreement or Agency Agreement.  Any purported transfer or assignment without required consent will be a breach of such Service Agreement and Agency Agreement.        12.2 Entirety.  This Statement of Operating Conditions, the Exhibits, each Service Agreement, and Agency Agreement (if applicable) constitute the entire agreement between the parties covering the subject matter hereof, and there are no agreements, modifications, conditions, or understandings, written or oral, express or implied, pertaining to the subject matter hereof that are not contained herein or therein.        12.3 Headings.  The captions or headings preceding the various parts of this Statement of Operating Conditions are inserted and included solely for convenience and will never be considered or given any effect in construing this Statement of Operating Conditions, or in connection with the intent, duties, obligations, or liabilities of Transporter and Shipper.         12.4 Third Parties.  Nothing contained in this Statement of Operating Conditions, the Service Agreement, or any Agency Agreement, either express or implied, confers any rights, remedies, or claims upon any person or entity not a party to the Service Agreement, other than the successors or permitted assigns of the parties.        12.5 Law and Venue.  THIS STATEMENT OF OPERATING CONDITIONS, THE SERVICE AGREEMENT, AND THE RIGHTS OF TRANSPORTER AND SHIPPER HEREUNDER AND THEREUNDER MUST BE INTERPRETED AND ENFORCED IN ACCORDANCE WITH THE LAWS OF THE STATE OF TEXAS WITHOUT GIVING EFFECT TO ANY CHOICE OR CONFLICT OF LAW PROVISION OR RULE (WHETHER OF THE STATE OF TEXAS OR ANY OTHER JURISDICTION) THAT WOULD CAUSE THE APPLICATION OF THE LAWS OF ANY JURISDICTION OTHER THAN THE STATE OF TEXAS.  TRANSPORTER AND SHIPPER AGREE TO THE JURISDICTION OF THE FEDERAL AND STATE COURTS IN DALLAS COUNTY OR HARRIS COUNTY, TEXAS AND AGREE THAT ANY ACTION, SUIT, OR PROCEEDING CONCERNING, RELATED TO, OR ARISING OUT OF THIS STATEMENT OF OPERATING CONDITIONS OR THE SERVICE AGREEMENT WILL BE BROUGHT ONLY IN A FEDERAL OR STATE COURT IN DALLAS COUNTY OR HARRIS COUNTY, TEXAS AND NEITHER TRANSPORTER NOR SHIPPER MAY RAISE ANY DEFENSE OR OBJECTION OR FILE ANY MOTION BASED ON LACK OF PERSONAL JURISDICTION, IMPROPER VENUE, INCONVENIENCE OF THE FORUM, OR THE LIKE IN ANY CASE FILED IN A FEDERAL OR STATE COURT IN DALLAS COUNTY OR HARRIS COUNTY, TEXAS.        12.6 Limitation on Damages.  EXCEPT FOR DAMAGES THAT ARISE OUT OF A BREACH OF THE WARRANTY CONTAINED IN SECTION 1.2 OF EXHIBIT "A," OR THE QUALITY PROVISIONS CONTAINED IN SECTION 4 OF EXHIBIT "A," IN NO EVENT WILL TRANSPORTER OR SHIPPER BE LIABLE TO THE OTHER FOR SPECIAL, INDIRECT, INCIDENTAL, PUNITIVE, EXEMPLARY, OR CONSEQUENTIAL DAMAGES, INCLUDING BUT NOT LIMITED TO THE LOSS OF USE, LOST PROFITS, IRRESPECTIVE OF WHETHER CLAIMS OR ACTIONS FOR SUCH DAMAGES ARE BASED ON CONTRACT, TORT, WARRANTY, NEGLIGENCE, STRICT LIABILITY OR OTHERWISE.  Notwithstanding the foregoing, neither Transporter nor Shipper will be liable for the gross negligence or willful misconduct of the other Party.        12.7 Counterparts.  The Service Agreement may be executed in any number of counterparts, each of which will be deemed to be an original and all of which will constitute one and the same agreement.        12.8 Exhibits.  The following exhibits are attached to this Statement of Operating Conditions and is incorporated by this reference:              Exhibit A General Terms and Conditions              Exhibit B Statement of Rates            [Remainder of page intentionally blank]  EXHIBIT "A"  TO  NGPA SECTION 311 STATEMENT OF OPERATING CONDITIONS    GENERAL TERMS AND CONDITIONS        These General Terms and Conditions ("General Terms") are attached to and constitute a part of Transporter's Statement of Operating Conditions.  Unless otherwise stated herein, all capitalized terms herein shall have the meaning ascribed to them in the Statement of Operating Conditions.    1. Laws and Regulations          1.1 Transporter's transportation services are subject to all present and future valid laws and lawful orders of all regulatory authorities now or hereafter having jurisdiction over the services or facilities used to provide such services.  The Service Agreement and any applicable Agency Agreement are expressly made subject to any and all tariff and other rate filings made by Transporter and approved by any state regulatory body as such may be amended from time to time.  Transporter will have the right to propose to the governing regulatory body such changes in its rates and terms of service at any time as it deems necessary, and Shipper's Service Agreement and any applicable Agency Agreement will be deemed to include any changes that are made effective pursuant to order or regulation or provisions of law, without prejudice to Shipper's right to protest the same.  Any pipeline jointly owned by Transporter may be subject to and operated in accordance with the statement of operating conditions of the operator of the joint venture pipeline as applicable in any Service Agreement and any Agency Agreement.  In the event of a conflict between (i) this Statement of Operating Conditions; (ii) the Service Agreement or Agency Agreement; or (iii) the Service Order, the terms of the documents shall govern in the priority listed in this sentence.  If any regulatory body having jurisdiction over the Service Agreement or Agency Agreement subjects Transporter or Transporter's facilities to any greater or different regulation or jurisdiction, by order or otherwise, than that existing on the Effective Date, then Shipper and Transporter shall negotiate in good faith to amend and restate the Service Agreement so as to conform to the applicable order or regulation; provided that Transporter shall have the right to terminate, with thirty (30) Days' written notice to Shipper, the applicable Service Agreement and any Agency Agreement if Shipper and Transporter are unable to mutually agree to amend and restate the Service Agreement and any Agency Agreement to accomplish the foregoing objectives.  If any order or regulation of a regulatory body having jurisdiction over the Service Agreement and/or Agency Agreement prohibits Transporter from charging or collecting rates specified in the Service Agreement or Agency Agreement, then Shipper and Transporter shall negotiate in good faith to amend and restate the Service Agreement so as to (i) conform to the applicable order or regulation affecting such rates and (ii) to maintain the total consideration initially agreed upon by Transporter and Shipper, to the maximum extent possible; provided that Transporter shall have the right to terminate, with thirty (30) Days' written notice to Shipper, the applicable Service Agreement and any Agency Agreement if Shipper and Transporter are unable to mutually agree to amend and restate the Service Agreement and any Agency Agreement to accomplish the foregoing objectives.        1.2 Shipper represents, covenants and warrants that at all times during the term of the Service Agreement Shipper will commit no action or omission that will cause the transportation service provided to Shipper to fail to comply with all applicable rules and regulations of the applicable regulatory agencies, including, without limitation, any intrastate warranty provisions set forth in a Service Order.  2. Pressures at Receipt and Delivery Point(s)        2.1 Shipper (or its designee) will deliver Gas to Transporter at the Receipt Point(s) at pressures sufficient to enter Transporter's pipeline system at such points; provided, however, that Shipper's delivery pressure into Transporter's system at the Receipt Point(s) may not exceed Transporter's maximum allowable operating pressure, as such may vary from time to time, at any such point or cause the pressure at any such point to exceed Transporter's maximum allowable operating pressure.  Transporter may, but shall not have any obligations to alter its pipeline pressures, provide compression, or modify its pipeline operations in order to effectuate the receipt or delivery of Gas.        2.2 Transporter will deliver Gas to Shipper or Shipper's designee at Transporter's operating pressure at the Delivery Point(s), as such may vary from time to time.  3. Measurement          For the purposes of this Statement of Operating Conditions, the party metering the Gas, or whose designee meters the Gas, at a particular Receipt Point(s) or Delivery Point(s) is referred to as the "Metering Party" and the other party is referred to as the "Non-Metering Party."          3.1 The measuring facilities shall be designed, installed, operated, and maintained by Transporter or its designee in accordance with the recommendations contained in the following standards:          3.1.1 Orifice Measurement - American Gas Association Report Number 3 (herein referred to as AGA 3).          3.1.2 Turbine Measurement - American Gas Association Report Number 7 (herein referred to as AGA 7).                3.1.3 Positive Measurement - American National Standards Institute B109.2 (herein referred to as ANSI B109.2).                3.1.4 Ultrasonic Measurement - American Gas Association Report Number 9 (herein referred to as AGA 9).                3.2 If adequate metering facilities are already in existence at the Receipt and Delivery Point(s), such existing metering facilities will be used for so long as, in Transporter's reasonable judgment, the facilities remain adequate.  If the metering facilities at any Receipt Point(s) or Delivery Point(s) are reasonably determined by Transporter to be inadequate, then the parties will mutually agree with respect to the equipment that must be added at such point(s) and the responsibility for payment of such equipment.  If the parties are unable to agree upon the equipment to be added at any such point, or which party will be responsible to pay for such equipment, then such point will be removed from the Service Order.                3.3 The Non-Metering Party may, at its option and expense, install and operate meters, instruments and equipment, in a manner that will not interfere with the Metering Party's equipment, to check the Metering Party's meters, instruments, and equipment, but the measurement for the custody transfer of Gas for the purpose of this Agreement will be by the Metering Party's meter only, except as hereinafter specifically provided.  The meters, check meters, instruments, and equipment installed by each party will be subject at all reasonable times to inspection or examination by the other party (Non-Metering Party), but the calibration and adjustment thereof will be done only by the installing party.                3.4 All meters will be calibrated and/or proven on a schedule, but in no event will the calibration period be in excess of ninety (90) Days.  Notification of scheduled calibrations shall be made to all interested parties and reasonable effort will be made to accommodate each party's schedule; however, calibration will proceed at the scheduled time regardless of attendees.  Records from all measuring equipment are the property of the Metering Party who will keep all such records on file for a period of not less than two (2) years.  Upon request, the Metering Party will make available to the Non-Metering Party volume records from the measuring equipment, together with calculations therefrom, for inspection and verification, subject to return within thirty (30) Days after receipt thereof.                3.5 Either Party shall have the right to conduct such pulsation tests as they deem prudent, at their sole risk and expense.  If excessive pulsation is evident, mutually agreed modifications to operation or facility design will be made to reduce the effect of such pulsation.  If pulsation issues cannot be resolved in a mutually agreeable manner, either party shall have the right to refuse delivery or receipt of Gas at the Receipt Point(s) or Delivery Point(s).                3.6 If the percentage of inaccuracy from the results of any test is greater than one percent (1%) volumetrically, the registration of such meter shall be corrected at the rate of such inaccuracy for any period which is definitely known or agreed upon.  In the event the period is not definitely known or agreed upon, such correction shall be for a period extending back one-half (1/2) of the time elapsed since the date of the last calibration.  Following any test, measurement equipment found inaccurate shall be immediately restored by Transporter as closely as possible to a condition of accuracy.  If any measurement equipment is out of service or out of repair for any reason so that the amount of Gas delivered cannot be estimated or computed from the reading thereof, the amount of Gas delivered through such meter during the period such meter is out of service or out of repair shall be estimated and agreed upon by Transporter and Shipper upon the basis of the best data available using the first of the following methods which is feasible:                3.6.1 by using the registration of any check meters if installed and accurately registering;                3.6.2 by correcting the error if the percentage of error is ascertainable by calibration, test or mathematical calculation; or                3.6.3 by estimating the quantity of deliveries by comparison with deliveries during preceding period under similar conditions when the meter was registering accurately.    3.7 Measurement Volume Computations          3.7.1 Units of measurement shall be determined in MMBtu derived from the calculation of gas volume (Mcf) and gas heating value (Btu/ft3), both at identical base conditions of temperature and pressure.  The unit of volume of Gas shall be one (1) standard cubic foot at an absolute pressure of fourteen and sixty-five hundredths pounds per square inch absolute (14.65 Psia) and at a temperature of sixty degrees Fahrenheit (60?F).                 3.7.2 Atmospheric pressure shall be assumed to be the pressure value as reasonably determined by Transporter for the county in which each of the Receipt Point(s) and Delivery Point(s) is located pursuant to generally accepted industry practices, but not less than twelve and nine-tenths (12.9) Psia nor more than fourteen and seven-tenths (14.7) Psia irrespective of the actual atmospheric pressure at such points from time to time.                3.7.3 All metered volumes shall be computed in accordance with the standards set forth in Section 3.1 above.          3.8 Records of calibration and or proving and data associated with the volume calculation are the property of the Metering Party who will keep all such records and data on file for a period of not less than two (2) years.  Upon request, the Metering Party will make available to the Non-Metering Party records of calibration and or testing and data associated with the volume calculation, subject to return within thirty (30) Days after receipt thereof.                3.9 Transporter shall sample and determine the Gross Heating Value, Relative Density and Compressibility received at the Receipt Point(s) or Delivery Point(s) utilizing the following standards:          3.9.1 Gas Processors Association (GPA) 2166 - Obtaining Natural Gas Samples for Analysis by Gas.                 3.9.2 Gas Processors Association (GPA) 2261 - Analysis for Natural Gas and Similar Gaseous Mixtures by Gas Chromatography.                3.9.3 Gas Processors Association (GPA) 2145 - Physical Constants for Paraffin Hydrocarbons and Other Components of Natural Gas.                3.9.4 Gas Processors Association (GPA) 2172 - Calculation of Gross Heating Value, Relative Density, and Compressibility of Natural Gas Mixtures from Compositional Analysis.                3.10 Transporter shall sample the flowing gas stream utilizing one of the following methods:          3.10.1 On-line Chromatography                 3.10.2 Accumulated Sample - If this method is utilized the application of gas quality in the volume calculation will be during the time period the gas sample was accumulated.                3.10.3 Spot Sample - If this method is utilized the application of gas quality in the volume calculation will be the time period beginning on the date the sample was obtained until the next sample is obtained.     4. Quality          4.1 Shipper represents and warrants that all Gas tendered for transportation at the Receipt Point(s) shall meet the Quality Specifications.  "Quality Specifications" means, for each constituent, the Transporter's quality specifications set forth below (as modified from time to time or as provided in any Service Agreement or Agency Agreement on a non-discriminatory basis):          4.1.1 Have a Heating Value of not less than nine hundred fifty (950) Btu per cubic foot nor more than one thousand one hundred (1,100) Btu per cubic foot.          4.1.2 Be commercially free of dust, gum, gum-forming constituents, gasoline, liquid hydrocarbons, water, and any other substance of any kind that may become separated from the Gas during the handling thereof or that may cause injury to or interference with proper operation of the lines, meters, regulators, or other appliances through which it flows;          4.1.3 Not contain more than one-half (0.5) grains of total sulfur nor more than one-fourth (1/4) grain of hydrogen sulfide per one hundred (100) standard cubic feet;          4.1.4 Not contain more than ten (10) parts per million of oxygen, and shall not contain more than two percent (2%) by volume of carbon dioxide, not contain more than three percent (3%) by volume of nitrogen or three percent (3%) by volume of total inert gases;           4.1.5 Have a temperature of not more than one hundred twenty degrees Fahrenheit (120 F) nor less than forty degrees Fahrenheit (40 F);           4.1.6 Not contain more than seven (7) pounds of water vapor per one million (1,000,000) standard cubic feet; and          4.1.7 Have a hydrocarbon dew point below forty degrees Fahrenheit (40 F).           4.2 In the event that the Gas being received does not conform to the standards outlined above, Transporter may  accept such Gas or restrict or refuse any volumes that are non-conforming or deficient on a non-discriminatory basis.        4.3 Shipper shall be responsible for odorizing any part of the Gas delivered hereunder at the Delivery Point(s) which is diverted and/or used for any purpose for which odorization is required pursuant to regulations of the Texas Railroad Commission.   4.4 In the event that Shipper's Gas fails to conform to any of the Quality Specifications set forth above, including, but not limited to the hydrocarbon dew point or the gross heating value or any other specification set forth above or to a more restrictive specification imposed by a downstream pipeline to which Shipper has nominated Gas, Transporter, in its discretion and on a non-discriminatory basis, may accept such off-specification Gas for transportation and delivery to such downstream pipeline provided that Shipper has made arrangements to ensure that such off-specification Gas conforms to the applicable specification, including but not limited to any arrangements to treat, condition, or blend with other Gas (prior to it reaching such downstream pipeline).  Upon request from Transporter, Shipper shall provide documentation acceptable to Transporter demonstrating that Shipper has made such contractual arrangements for such off specification Gas on the path for which Shipper has nominated Gas.  This provision shall not be construed as a general waiver to Transporter's specification and is only available where physical blending, treatment and conditioning of Gas is contracted for and will take place prior to reaching the downstream pipeline whose specifications are to be met and such acceptance and service by Transporter shall not adversely impact markets on Transporter's system.  Transporter shall deliver to downstream pipelines Gas meeting the quality specifications set forth above.    5. Billing, Accounting, and Reports                5.1  On or before the fifteenth (15th) Day of each Month, Transporter will provide a statement to Shipper for the services provided setting forth, in terms of MMBtu, the total volume of Gas received at the Receipt Point(s), the volume of Gas retained by Transporter, and the volume of Gas delivered at the Delivery Point(s) for all applicable Service Orders during the immediately preceding Month and the amount(s) payable.  Paying party agrees to pay the non-paying party by wire transfer (identifying the invoice number) the total of the amounts payable according to such statement on or before the later of the twenty-fifth (25th) Day of the Month in which the statement is provided or ten (10) Days following the date in which the statement was delivered.  In the event such volumes are estimated for any period, corrected statements shall be provided by Transporter to Shipper and paid by Shipper or credited by Transporter, as the case may be, in each instance in which the actual volumes received or delivered. If an error is discovered in the amount billed, then such error will be adjusted within thirty (30) Days of the discovery of the error.           5.2 If a bona fide dispute arises as to the amount payable in any statement provided, then Shipper will pay the good faith undisputed amount invoiced pending resolution of the dispute.  Upon resolution of such dispute, Shipper will pay any monies owed Transporter per the terms of this Section 5.                 5.3 In addition to all other remedies available to Transporter, should Shipper fail to pay any undisputed amount when the same becomes due, Shipper shall pay interest on outstanding balances accruing thereon at a rate equal to the prime rate from time to time in effect and charged by the Citibank, N.A., New York, New York or its successor, plus two percent (2%) per annum, (but in no event greater than the maximum rate of interest permitted by law) with adjustments in such rate to be made on the same Day as any change in such prime rate, for any period during which the same shall be overdue, such interest to be paid when the amount past due is paid.  Each party hereto or its representative shall have the right at all reasonable times to examine the books and records of the other party to the extent necessary to confirm the performance of any obligation made under or pursuant to this Agreement or verify the accuracy of any statement, charge, computation or demand made under or pursuant to this Agreement.  Any statement shall be final as to all parties unless questioned within two (2) years after payment thereof has been made.  6. Responsibility        6.1  Shipper shall be deemed to be in control and possession of the Gas prior to the receipt of the Gas by Transporter at the Receipt Point.  Transporter shall be deemed to be in control and possession of the Gas after its receipt by Transporter at the Receipt Point and prior to its delivery to Shipper or for Shipper's account at the Delivery Point(s).  The party in control and possession of the Gas will be responsible for and shall indemnify the other party, including the party's affiliates and their officers, directors, agents and employees, with respect to any losses, injuries, claims, liabilities, demands, damages, expenses, reasonable attorneys' fees and court costs caused thereby by accident, incident or otherwise or on account of royalties, payments, or other charges applicable and occurring while the Gas is deemed to be in its control or possession.  Such indemnification shall not extend to claims made that are attributable to the delivery by Shipper to Transporter of Gas that does not meet the Quality Specifications contained herein; provided however that in any instance where Shipper, without prior written consent of Transporter, delivers Gas that does not meet the Quality Specifications herein, Shipper shall indemnify Transporter for any claims, losses, or damages resulting from the delivery of such out of specification Gas.  Each party hereto covenants that with respect to the Gas delivered or redelivered by it hereunder, it will indemnify and save the other party harmless from and against any and all suits, actions, causes of action, claims and demands arising from or out of any adverse claims by third parties claiming ownership of or an interest in the Gas so delivered or redelivered.  Notwithstanding the foregoing, neither party shall be indemnified for its own negligence or willful misconduct, and the parties acknowledge and agree that Shipper shall at all times have all lawful rights and/or title to all Gas transported hereunder.  Subject to the other terms and conditions of this Statement of Operating Conditions, each party has the right to treat, process, and/or dehydrate the Gas prior to delivering said Gas to the other party.   6.2 Any taxes, fees, charges or any other exactions, now or hereafter enacted, levied or assessed by any federal, state, local or other governmental authority upon  Shipper's Gas,  or the services provided by Transporter hereunder, shall be borne and paid for by Shipper, except to the extent any such taxes are, by law, required to be paid directly by Transporter, in which event, such taxes (including penalty and interest if imposed by the taxing authority) shall be paid by Transporter and reimbursed by Shipper upon receipt of invoice and supporting documentation reasonably requested by Shipper.    Notwithstanding any other provision in this Statement of Operating Conditions, Parties further agree that, a Party shall not be liable to the other Party for any taxes that are statutorily imposed on the first Party that are measured by or imposed upon net income, capital, or property, including without limitation, income, capital, franchise, and margin based taxes and taxes measured by the value of owned or leased real, tangible or intangible property.  In addition, a Party shall not be liable to the other Party for business license taxes on a particular occupation or similar taxes required for the maintenance of business existence.      There shall be no reimbursement for taxes or fees that are a factor in determining the transportation rate Shipper pays under this Statement of Operating Conditions, the Service Agreement, its applicable Service Order or any Agency Agreement.     7. Force Majeure and Maintenance Events        7.1 If either party is rendered unable, wholly or in part, by Force Majeure (defined below) or other causes herein specified, to carry out its obligations under this Agreement other than the obligation to make payment of amounts due hereunder, it is agreed that on such party's promptly giving notice and reasonably full particulars of such Force Majeure in writing or facsimile or by email to the other party within a reasonable time after the occurrence of the cause relied on, then the obligations of the party giving such notice, so far as such obligations are affected by such Force Majeure or other causes herein specified, shall be suspended during the continuance of any inability so caused, but for no longer period, and such cause shall so far as possible be remedied with all reasonable dispatch.        7.2 The term Force Majeure as employed herein means, to the extent not reasonably within the control of the party claiming suspension and which, by the exercise of reasonable diligence, such party is unable to prevent or overcome: acts of God; strikes, lockouts or other industrial disturbances; acts of the public enemy; sabotage; wars; blockades; insurrections; riots; acts of terror; epidemics; landslides; lightning; earthquakes; fires; storms; storm warnings; hurricanes; floods; washouts; arrests and restraints of the government and people, either federal or state, civil or military; civil disturbances; explosions; breakage; breakdown or accident to machinery, equipment or lines of pipe; freezing of wells or lines of pipe or other delivery facilities; electric power unavailability or shortages; and any other causes, whether of the kind herein enumerated or otherwise, not reasonably within the control of the party claiming suspension, and which by the exercise of due diligence such party is unable, wholly or in part, to prevent or overcome.  Such term likewise includes (1) in those instances where either party hereto is required to obtain servitudes, right-of-way grants, permits or licenses to enable such party to fulfill its obligations hereunder, the inability of such party to acquire, or the delays on the part of such party in acquiring, at reasonable cost and after the exercise of reasonable diligence, such servitudes, right-of-way grants or licenses, (2) in those instances where either party hereto is required to furnish materials and supplies for the purpose of constructing or maintaining facilities or is required to secure permits consents, authorizations or approvals from any governmental agency or authority (federal, state or municipal, international civil or military) to enable such party to fulfill its obligations hereunder, the inability of such party to acquire or the delays on the part of such party in acquiring, at reasonable cost and after the exercise of reasonable diligence, such materials and supplies, permits, consents, authorizations or approvals, and (3) any action by any third party pipelines connected to Transporter's pipeline that would prevent or delay Transporter in crossing any third party pipeline or obtaining with any third party pipeline a functional interconnection (capable of receiving Gas and available for commercial service).  It is understood and agreed that the settlement of strikes or lockouts shall be entirely within the discretion of the party having the difficulty and that the above requirement that any Force Majeure shall be remedied with all reasonable dispatch shall not require the settlement of strikes or lockouts by acceding to the demands of the opposing party when such course is inadvisable in the discretion of the party having the difficulty.        7.3 Transporter shall waive any fees due to imbalances which result from errors made by Transporter or which result from Force Majeure invoked by Transporter.        7.4 Either party may partially or entirely interrupt its performance hereunder for the purpose of making necessary or scheduled inspections, alterations and repairs which are described as a non-Force Majeure maintenance event, but only for such time as may be reasonable and unavoidable; and the party requiring such relief shall give to the other party a minimum of ten business (10) Days' notice of its intention to suspend its performance hereunder, except in cases of emergency where such notice is impracticable and shall endeavor to arrange such interruption so as to inconvenience the other party as little as possible.  8. Waiver of Breaches, Defaults, or Rights        Transporter may waive any of its rights or any obligations to Shipper under this Statement of Operating Conditions from time to time on a non-discriminatory basis, and the parties agree that if it does so it will not be deemed to have waived its right subsequently to enforce the provisions of the Statement of Operating Conditions.  No waiver by either party of any one or more breaches, defaults, or rights under any provisions of the Statement of Operating Conditions or the Service Agreement will operate or be construed as a waiver of any other breaches, defaults, or rights, whether of a like or of a different character.  By providing written notice to the other party, either party may assert any right not previously asserted hereunder or thereunder or may assert its right to object to a default not previously protested.  Except as specifically provided herein, in the event of any dispute under this Statement of Operating Conditions, the Service Agreement, or Agency Agreement, the parties will, notwithstanding the pendency of such dispute, diligently proceed with the performance of the Service Agreement and Agency Agreement without prejudice to the rights of either party.  9. Remedy for Breach        Except as otherwise specifically provided herein, and subject to any Service Agreement, if either party fails to perform any of the material covenants or obligations imposed upon it in this Statement of Operating Conditions, the Service Agreement, or any Agency Agreement (except where such failure is excused under the Force Majeure or other provisions hereof or thereof), then the other party may, at its option (without waiving any other remedy for breach hereof), by notice in writing specifying the default that has occurred, indicate such party's intention to terminate the Service Agreement or Agency Agreement by reason thereof. The party in default will have thirty (30) Days from receipt of such notice to remedy such material default, and upon failure to do so, the non-defaulting party may elect to immediately terminate the Service Agreement or Agency Agreement.  Notwithstanding the foregoing, Shipper's failure to pay Transporter within a period of ten (10) Days following Shipper's receipt of written notice from Transporter advising of such failure to make payment in full within the time specified previously herein, will be a default that gives Transporter the right to immediately terminate the Service Agreement, unless such failure to pay such amounts is the result of a bona fide dispute between the parties regarding such amounts and Shipper timely pays all amounts not in dispute, or unless such payment failure is specifically addressed in a Service Agreement.  Subject to remedy provisions in any applicable Service Agreement, such termination will be an additional remedy and will not prejudice the right of the party not in default: (i) to collect any amounts due it for any damage or loss suffered by it, and (ii) will not waive any other remedy to which the party not in default may be entitled for breach of this Statement of Operating Conditions and the Service Agreement.    *** END OF GENERAL TERMS AND CONDITIONS ***    EXHIBIT "B"  TO  STATEMENT OF OPERATING CONDITIONS    Statement of Rates1     Minimum Maximum Firm $0.0000 per MMBtu $0.89 per MMBtu Interruptible $0.0000 per MMBtu $0.89 per MMBtu Authorized Overrun $0.0000 per MMBtu $0.89 per MMBtu Park and Loan $0.0000 per MMBtu per day $0.89 per MMBtu per day Fuel2  Actual   1 All stated rates remain subject to any additional governmental taxes, fees, charges or other exactions levied or assessed upon Shipper's Gas or the services provided by Transporter as set forth in Section 6.2 of Exhibit "A" to this Statement of Operating Conditions.  2 Shippers shall deliver to Transporter at the Shipper's Receipt Point(s) in-kind the actual fuel and lost and unaccounted for gas on the basis of a 6-month rolling average with a 3-month lag, updated monthly. Matterhorn shall provide its currently applicable retention percentage to its Shippers based on actual fuel for the applicable period.              2</record_plain_text>
      <record_change_type>NEW</record_change_type>
      <filing_id>483</filing_id>
      <filing_title>Petition for NGPA Sec. 311 Rate Approval</filing_title>
      <filing_type>990</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2024-10-01</current_effective_date>
      <ferc_order_date>2025-06-02</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
    <record_data>
      <record_id>236</record_id>
      <option_code>A</option_code>
      <record_title>Statement of Operating Conditions</record_title>
      <record_content_desc xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_version_num>0.1.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>1000</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2024-10-01</proposed_effective_date>
      <priority_order>600</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>MATTERHORN EXPRESS PIPELINE, LLC  STATEMENT OF OPERATING CONDITIONS      VERSION 0.1.0    EFFECTIVE OCTOBER 1, 2024      eTariff Information  Tariff Submitter: Matterhorn Express Pipeline LLC  FERC Tariff Program Name: FERC NGPA Gas Tariff  Tariff Title: Matterhorn Express Pipeline LLC Statement of Operating Conditions Applicable to NGPA Section 311 Transportation Service  Tariff Record Proposed Effective Date: October 1, 2024  Tariff Record Title: Statement of Operating Conditions  Option Code: A        MATTERHORN EXPRESS PIPELINE, LLC  STATEMENT OF OPERATING CONDITIONS APPLICABLE TO NGPA SECTION 311 TRANSPORTATION SERVICE  TABLE OF CONTENTS  SECTION                 PAGE  1. INTRODUCTION         2  2. DEFINITIONS         2  3. REQUEST FOR SERVICE AGREEMENTS AND SERVICE ORDERS  5  4. TRANSPORTATION SERVICE       8  5. QUANTITY          12  6. DELIVERY POINTS AND RECEIPT POINTS     13  7. NOMINATIONS AND BALANCING      14  8. PARKING AND LOANING SERVICES      19  9. RATES          21  10. TERM          21  11. ADDRESSES          22  12. MISCELLANEOUS         22  EXHIBIT "A" - General Terms and Conditions  EXHIBIT "B" - Statement of Rates    MATTERHORN EXPRESS PIPELINE, LLC  NGPA SECTION 311 STATEMENT OF OPERATING CONDITIONS  1. INTRODUCTION.   Matterhorn Express Pipeline, LLC ("Transporter") is an intrastate pipeline, with facilities located wholly within the State of Texas, and is exempt from the jurisdiction of the Federal Energy Regulatory Commission ("FERC") under the Natural Gas Act of 1938 ("NGA").  This Statement of Operating Conditions shall apply to all service provided by Transporter under Section 311 of the Natural Gas Policy Act of 1978 ("NGPA"). If by providing transportation services under Section 311 of the NGPA and the regulations thereunder, Transporter's status as an intrastate pipeline that is exempt from NGA jurisdiction is impacted, altered, or threatened in any way, by virtue of any change in statutes, regulations, or other applicable law of any kind, then Transporter reserves the right to terminate all transportation services under Section 311 of the NGPA and all Service Agreements and applicable Service Orders related thereto, and to withdraw this Statement of Operating Conditions, all effective on the Day before any such change in statutes, regulations, or other applicable law. In light of the foregoing, Transporter presents this Statement of Operating Conditions under which Transporter will offer NGPA Section 311 transportation service on its system. The rates charged by Transporter for NGPA Section 311 transportation service shall be established pursuant to 18 C.F.R. 284.123(b)(1)(ii) and such current rates are summarized on Exhibit "B" hereto.    2. DEFINITIONS   The following terms as used herein, in a Service Agreement, or in a Service Order, will be construed to have the following scope and meaning:   a) "Adequate Assurance of Performance" is defined in Section 3.3.2 of this Statement of Operating Conditions.  b) "Agency Agreement" is defined in Section 4.6 of this Statement of Operating Conditions.  c) "Authorized Overrun Service" is defined in Section 5.3.1 of this Statement of Operating Conditions.  d) "Btu" means British thermal unit and, where appropriate, the plural thereof.  e) "Cash out" or "Cashed out" means a payment made by Transporter, or Shipper, to resolve an imbalance of Gas at a determined price or a price based on a published index.  f) "Day" means the period beginning at 9:00 a.m. central clock time ("CCT") on each calendar day and ending at 9:00 a.m. CCT on the following calendar day.  g) "Delivery Point(s)" is defined in Section 6.1 of this Statement of Operating Conditions.   h) "Effective Date" means the first Day of effectiveness of a Service Agreement or Service Order thereunder.  i) "FERC" or "Commission" means the Federal Energy Regulatory Commission.  j) "Firm" or "Firm Service" means that the Maximum Daily Contract Quantity or Shipper's Reserved Capacity is not subject to a prior claim by another customer or class of service and has not been committed to, or reserved by, another customer or class of service.   k) "Gas" means any mixture of hydrocarbons and noncombustible gases in a gaseous state consisting primarily of methane.  l) "Heating Value" means the total gross heating value, expressed in BTU per cubic foot, at a contract base temperature of sixty degrees Fahrenheit (60  F) and a contract base pressure of fourteen and sixty-five hundredths (14.65) psi, calculated as prescribed within GPA Standard 2172 "Calculation of Gross Heating Value, Relative Density, Compressibility and Theoretical Hydrocarbon Liquid Content for Natural Gas Mixtures for Custody Transfer", or such revision thereof in common use.  The Heating Value may be adjusted to reflect water content, at actual measured pressure and temperature.  m) "Interruptible" or "Interruptible Service" means that the capacity used to provide the service is subject to a prior claim by another Shipper or another class of service and receives a lower priority than such other classes of service.  n) "Investment Credit Rating" means a credit rating of at least "BBB-", "Baa3," or better, rated by S&amp;P Global Inc. ("S&amp;P") and Moody's Investors Service, respectively, or equivalent.  o) "Lost and Un-accounted for Gas" is defined in Section 9.2 of this Statement of Operating Conditions.  p) "Maximum Daily Contract Quantity" or "MDCQ" means the maximum quantity of Gas in MMBtu, exclusive of applicable Retention Volume, that Shipper may nominate and deliver to Transporter each Day for Firm or Interruptible Service at Receipt Point(s) or Delivery Point(s) or an aggregate of Receipt Points or Delivery Points as specified in a Service Order.   q) "Maximum Hourly Quantity" is defined in Section 5.1 of this Statement of Operating Conditions.  r) "Mcf" means one thousand cubic feet, and "MMBtu" means one million Btu.  s) "MDDO" means the maximum daily delivery obligation at any Primary Delivery Point or Secondary Delivery Point, as set forth in a Service Agreement.  t) "MDRO" means the maximum daily receipt obligation at any Primary Delivery Point or Secondary Delivery Point, as set forth in a Service Agreement.  u) "Metering Party" is defined in Section 3, Exhibit A of this Statement of Operating Conditions.  v) "Month" means that period of time beginning at 9:00 a.m. CCT on the first day of a calendar month and ending at 9:00 a.m. CCT on the first day of the following calendar month.  w) "NAESB" means the North American Energy Standards Board.  x) "Net Present Value Calculation" or "NPV" means the calculated present value utilizing a standard net present value calculation using a discount factor equal to the then-current interest rate determined in accordance with Section 154.501(d) of the Commission's Rules and Regulations.  y) "Nomination" is defined in Section 7.1 of the Statement of Operating Conditions.  z) "Non-Metering Party" is defined in Section 3, Exhibit A of this Statement of Operating Conditions.  aa) "Operational Balancing Agreement" or "OBA" means an agreement between two parties (Transporter and interconnecting third party), at an interconnection, which specifies the procedures to manage operating variances between those two parties.    bb) "Operational Flow Order" is defined in Section 7.3 of the Statement of Operating Conditions.  cc) "Pool" means the virtual Receipt Points and/or Delivery Points determined by Transporter at which Gas may be aggregated, disaggregated and transacted.  dd) "Primary Delivery Point" means those delivery point(s) on Transporter's system listed under Shipper's Service Order with a specified firm MDDO, as may be amended upon mutual agreement from time to time.  ee) "Primary Path" means the portion of pipeline capacity physically located between the designated Primary Point(s) of Receipt and Delivery.  ff) "Primary Receipt Point" means those receipt point(s) on Transporter's system listed under Shipper's Service Order with a specified firm MDRO, as may be amended upon mutual agreement from time to time.  gg) "Psia" means pounds per square inch absolute.  hh) "Psig" means pounds per square inch gauge.  ii) "Quality Specifications" is defined in Section 4, Exhibit A of this Statement of Operating Conditions.  jj) "Receipt Point(s)" is defined in Section 6.2 of the Statement of Operating Conditions.   kk) "Retention Volume" is defined in Section 9.2 of the Statement of Operating Conditions.   ll) "Scheduled Quantity" means the quantity of Gas, plus any applicable Retention Volume nominated by Shipper and scheduled and confirmed by Transporter with the upstream and the downstream pipeline facility operators designated by Shipper and subject to any limitations of the MDCQ and SRC set forth in a Service Order.   mm) "Secondary Delivery Point" means any delivery point on the system that is listed as a Secondary Delivery Point under a Service Order for use on an as-available basis with the priority of service listed under Section 4.4.  nn) "Secondary Receipt Point" means any receipt point on the system that is listed as a Secondary Receipt Point under a Service Order for use on an as-available basis with the priority of service listed under Section 4.4.   oo) "Service Agreement" means a transportation service agreement between Transporter and Shipper, under which Transporter will enter into one of more Service Orders to provide Firm or Interruptible transportation services or park and loan services for Shipper pursuant to the terms and provisions of this Statement of Operating Conditions.  A Service Agreement may include one or more "Service Orders" for various types of service.  pp) "Service Order" means a Service Order entered into between the Parties which evidences the agreement between the Parties as to the terms of a particular transaction for service(s) to be provided under a Service Agreement.    qq) "Shipper" means a party that holds all lawful rights and/or title to the Gas that is being transported and who has a fully executed Service Agreement with Transporter.  rr) "Shipper's Reserved Capacity" or "SRC" means the daily Firm transportation capacity (expressed in MMBtu) reserved for Shipper in Transporter's pipeline as specified in a Service Order.  ss) "Transportation Fees" is defined Section 9.1 of this Statement of Operating Conditions.  tt) "Transportation Imbalance" is defined in Section 7.2.2 of this Statement of Operating Conditions.  3. REQUEST FOR SERVICE AGREEMENTS AND SERVICE ORDERS.        3.1 Request for Service Agreement.  A Service Agreement is required for all services hereunder and will be subject to all terms and provisions of this Statement of Operating Conditions, its applicable Service Agreement (including any applicable Service Order(s)), and any applicable Agency Agreement.  Any potential Shipper desiring to obtain services from Transporter must request a Service Agreement from Transporter.  The request may be in writing, by telephone or electronic medium.  Shipper shall provide documentation to demonstrate its creditworthiness to the satisfaction of the Transporter in accordance with Section 3.3 hereof.    Requests for Service Agreement may be sent to:   100 Congress Avenue  Suite 2200  Austin, TX 78701  United States of America  Transporter Main Tel.: (512) 953-2100  Email:  MXP@wwm-llc.com          3.2 Requirements of Request for Service.  Each request for a specific transaction (i.e., a Service Order) under an executed Service Agreement should be made pursuant to the method described in 3.1 and must include the following information:        3.2.1 Shipper's name, and any applicable Service Agreement number;        3.2.2 Requested Receipt Point(s) or receipt point area and Delivery Point(s) or delivery point area, and a statement, containing information verifiable by Transporter, that the minimum transportation quantity of gas to be received or delivered at least equals 750 MMBtu per day at any and each Receipt Point or Delivery Point;        3.2.3 Shipper's requested Maximum Daily Contract Quantity and/or Shipper's Reserved Capacity;         3.2.4 The type and character of service requested; and  3.2.5 The term of the service requested.         3.3 Credit Approval.  Transporter's agreement to execute a Service Agreement or to engage in a specific transaction (i.e., a Service Order) under a Service Agreement is contingent upon a satisfactory appraisal of Shipper's credit by Transporter.          3.3.1 A Shipper or potential Shipper must provide a copy of its last two (2) fiscal years of audited financial statements, including balance sheet, income statement, cash flow statement and accompanying footnotes.  If such Shipper or potential Shipper cannot provide the above information on itself, then such Shipper or potential Shipper must, if applicable, provide that information for its parent company.  Transporter may, acting in a prudent, non-discriminatory, and reasonable manner, elect to waive the requirement to provide the information set forth in this Section 3.3.1 and, in lieu thereof, Transporter may request other forms of evidence of creditworthiness consistent with the Service(s) to be provided.         3.3.2 In the event Transporter determines Shipper's credit to be unsatisfactory, as tested in a commercially reasonable and in a not unduly discriminatory manner, at any time during the term of any Service Agreement, including any Service Order(s), Transporter may demand "Adequate Assurance of Performance" which shall mean sufficient security in a form, an amount and for the term reasonably specified by Transporter.  Shipper may support its credit by providing one of the following forms of security:        (a) post an irrevocable standby letter of credit in a form, substance and from a bank satisfactory to Transporter for services equal to or up to three (3) Months of all fees and charges that would be due from Shipper if Transporter were performing such service plus an amount for projected imbalances, unless a lesser amount is reasonable to and agreed upon by Transporter based on Shipper's financial condition; or        (b) provide a prepayment or a deposit for services equal to or up to three (3) Months of all fees and charges that would be due from Shipper if Transporter were performing such service plus an amount for projected imbalances, unless a lesser amount is reasonable to and agreed upon by Transporter based on Shipper's financial condition; or        (c) provide a guaranty from a guarantor acceptable to Transporter. The  demand for Adequate Assurance of Performance can be satisfied with a guaranty issued on behalf of Shipper in a format, amount and term acceptable to Transporter, but only for as long as the credit of Shipper's guarantor continues to be acceptable to Transporter, after which time only Adequate Assurance of Performance in the form of (a) and (b) will be acceptable to Transporter.                3.3.3 Transporter will not be required to perform or continue to perform service under any Service Agreement or Agency Agreement in the event: (i) Shipper has voluntarily filed for bankruptcy protection under any chapter of the Bankruptcy Code; (ii) Shipper is the subject of an involuntary petition of bankruptcy under any chapter of the Bankruptcy Code, and such involuntary petition has not been settled or otherwise dismissed within ninety (90) Days of such filing; or (iii) Shipper otherwise becomes insolvent, whether by an inability to meet its debts as they come due in the ordinary course of business or because its liabilities exceed its assets on a balance sheet test and/or however such insolvency may otherwise be evidenced.        3.3.4 Should Shipper fail to provide Adequate Assurance of Performance within two (2) business Days after receipt of written demand for such assurance, then Transporter shall have the right to suspend performance under any Service Agreement or Agency Agreement until such time as Shipper furnishes Adequate Assurance of Performance and/or terminate any Service Agreement or Agency Agreement in addition to all other remedies available at law or in equity.        3.4 Transporter shall have the right to reject any request for Service Agreement and Agency Agreement that does not contain the required information set forth herein and Transporter will have no liability to Shipper or any other entity in connection with such rejection.        3.5 In addition to requiring Adequate Assurance of Performance to secure the Service Agreement and/or transactions thereunder, Transporter may require additional or alternate security from Shipper if the Service Agreement is associated with underwriting of capital investments or infrastructure development by Transporter or Transporter's service to Shipper is contingent upon Transporter's construction of facilities.  This provision shall also apply to any assignment of a Service Agreement that was initially subject to this provision.         3.6  Service Agreements.  After Shipper has requested a Service Agreement and after Transporter has determined that Shipper is creditworthy, Transporter and Shipper may enter into a Service Agreement, which will incorporate by reference the provisions of this Statement of Operating Conditions.  Neither Transporter nor Shipper will have any obligations to one another until authorized representatives of both Transporter and Shipper have executed a Service Agreement.  Any applicable Service Agreement(s) (including any Service Order(s)) and, if applicable, any Agency Agreement will contain specific details agreed to by Transporter and Shipper for a particular service arrangement.    4. TRANSPORTATION SERVICE.        4.1 Transporter's Obligations.  Transporter will receive Gas up to the Scheduled Quantity at the Receipt Point(s) as nominated and tendered by Shipper under the terms of this Statement of Operating Conditions, the Service Agreement and the applicable Service Orders thereunder, and any Agency Agreement, transport and deliver an equivalent quantity of Gas, in MMBtu, to Shipper at the Delivery Point(s), less the Retention Volume as set forth in Section 9.2 of this Statement of Operating Conditions.  Transporter's obligations to receive, transport, and deliver Gas to the Delivery Point(s) shall be in accordance with the applicable character of service (i.e., Firm or Interruptible), and are subject to:  (i) an event of Force Majeure; (ii) Shipper's failure or refusal to deliver Gas to or receive Gas from Transporter as required under this Statement of Operating Conditions and the Service Agreement and the applicable Service Orders thereunder; (iii) any laws, rules, orders, or requirements of any governmental or regulatory authorities that limit, prevent, or interfere with Transporter's performance; and (iv) as otherwise provided under any other terms and conditions in this Statement of Operating Conditions, the Service Agreement and the applicable Service Orders thereunder, and any applicable Agency Agreement.  Shipper acknowledges that the quantity of Gas physically received or delivered by Transporter may be different than the Scheduled Quantity and, for those Receipt Point(s) and Delivery Point(s) at which Transporter has Operational Balancing Agreements, the Scheduled Quantity is deemed to have been received or delivered for the account of Shipper, subject to the remaining terms and conditions of this Statement of Operating Conditions, the applicable Service Agreement and applicable Service Orders thereunder, and any applicable Agency Agreement.  In the event of constraints on a downstream pipeline, Transporter will rely on the downstream party's allocation at the affected Delivery Point(s) and, to the extent Shipper's Nominations are reduced, Shipper will be deemed to have failed to receive Gas from Transporter as required hereunder.        4.2  Interruption of Service.  Transporter will advise (by telephone or electronic medium) Shipper's dispatcher or authorized representative of an interruption as soon as practicable, either before or after interruption of service, but Transporter will have no liability for any failure to give such notice provided Transporter has made a reasonable effort to provide such notice.  Transporter will not be liable for any loss or damage to any person or property caused, in whole or in part, by any interruption of Interruptible service under any Service Agreement.  Shipper will indemnify and hold harmless Transporter, its officers, agents, employees, and contractors from and against any and all suits, claims, liability, loss, damages, costs (including attorneys' fees and court costs) or encumbrances whatsoever brought by any person or entity against Transporter as a result of, or arising out of, any interruption of Interruptible service under any Service Agreement.  Should any third party with the right to control the Receipt Point(s), Delivery Point(s), or any other facilities needed for the receipt, transportation, parking, loaning, balancing or delivery of Gas hereunder limit or fail to authorize the use of any such facilities to perform services provided hereunder, Transporter will have no obligation hereunder to perform any such transportation services, or receive or deliver Gas hereunder.  Notwithstanding the foregoing, when Transporter contracts with a third party (which such third party could be affiliates of Transporter) to provide services hereunder, Transporter will contract for such third-party service with the same level of service as contracted by Shipper with Transporter.  The phrase, "services provided hereunder" shall include services to be provided under each applicable Service Agreement, Service Order, and/or any applicable Agency Agreement.        4.3 Shipper's Obligations.  Shipper will tender the Scheduled Quantity at the Receipt Point(s), and accept such Gas, less the Retention Volume, at the Delivery Point(s).  Shipper's obligations set forth in the preceding sentence are subject to: (i) an event of Force Majeure; (ii) Transporter's failure or refusal to receive Gas from or deliver Gas to Shipper as required under this Statement of Operating Conditions and the Service Agreement and the applicable Service Order(s) thereunder; (iii) any laws, rules, orders, or requirements of any governmental or regulatory authorities that limit, prevent, or interfere with Shipper's performance; and (iv) as otherwise provided under any other terms and conditions in this Statement of Operating Conditions, each applicable Service Agreement, Service Order and/or any applicable Agency Agreement.        4.4 Priority of Service for Purposes of Nominations and Scheduling.  From time to time, Transporter may not have sufficient capacity available to accommodate all nominations through specific Receipt Point(s), specific Delivery Point(s), specific compression stations, and/or specific segments of Transporter's pipeline system.  In such event, Transporter will schedule and perform service in the following order of priority based on the location of constraint as outlined below:  4.4.1 Scheduling of Receipt Point(s)   * Firm transportation services utilizing Primary Receipt Point(s) will be allocated pro-rata based on their confirmed transportation nominations for that day.  * Firm transportation services utilizing Secondary Receipt Point(s) within the Primary Path will be allocated pro-rata based on their confirmed transportation nominations for that day.    * Firm transportation services utilizing Secondary Receipt Point(s) outside the Primary Path will be allocated pro-rata based on their confirmed transportation nominations for that day.   * Authorized Overrun Service and Interruptible transportation services will be allocated in sequence starting with the service providing greatest economic benefit.  In the event one or more services provide the same economic benefit, then the allocation will be pro-rata.  The greatest economic benefit means the highest per unit transportation rate for the day of the allocation.    * Park and loan services will be allocated in sequence starting with the service providing greatest economic benefit.  In the event one or more park and loan services provide the same economic benefit, then the allocation will be pro-rata.  The greatest economic benefit means the highest per unit transportation rate for the term of the service.    4.4.2 Scheduling of Delivery Point(s)   * Firm transportation services utilizing Primary Delivery Point(s) will be allocated pro-rata based on their confirmed transportation nominations for that day.  * Firm transportation services utilizing Secondary Delivery Point(s) within the Primary Path will be allocated pro-rata based on their confirmed transportation nominations for that day.    * Firm transportation services utilizing Secondary Delivery Point(s) outside the Primary Path will be allocated pro-rata based on their confirmed transportation nominations for that day.   * Authorized Overrun Service, and Interruptible transportation services will be allocated in sequence starting with the service providing greatest economic benefit.  In the event one or more services provide the same economic benefit, then the allocation will be pro-rata.  The greatest economic benefit means the highest per unit transportation rate for the day of the allocation.    * Park and loan services will be allocated in sequence starting with the service providing greatest economic benefit.  In the event one or more park and loan services provide the same economic benefit, then the allocation will be pro-rata.  The greatest economic benefit means the highest per unit transportation rate for the term of the service.  4.4.3 Scheduling of compressor stations and/or specific segments of Transporter's pipeline system    * Firm transportation services utilizing their Primary Path at the location of the allocation will be allocated pro-rata based on their confirmed transportation nominations for that day.  * Firm transportation services not utilizing their Primary Path at the location of the allocation will be allocated pro-rata based on their confirmed transportation nominations for that day.    * Authorized Overrun Service and Interruptible transportation services will be allocated in sequence starting with the service providing greatest economic benefit.  In the event one or more services provide the same economic benefit, then the allocation will be pro-rata.  The greatest economic benefit means the highest per unit transportation rate for the day of the allocation.    Transporter shall not be liable for any loss or damage to any person or property caused, in whole or in part, by any interruption or curtailment of Interruptible service.  Shipper agrees to indemnify and hold harmless Transporter, its officers, agents, employees, and contractors, from and against any and all suits, claims, liability, loss, damages, costs (including attorneys' fees and court costs), or encumbrances whatsoever brought by any person or entity against Transporter as a result of, or arising out of, any interruption or curtailment of Interruptible service that is not caused by Transporter's willful misconduct or gross negligence.   Transporter is not required to schedule any Authorized Overrun Services or Interruptible transportation services which are causing capacity constraints or impair the Transporter's ability to provide efficient and reliable Firm Service to any other parties.  Transporter shall have the operational discretion to schedule on a non-discriminatory basis Authorized Overrun Services or Interruptible transportation services regardless of economic benefit, if Transporter using reasonable judgement, determines that such service is operationally beneficial to pipeline operations.          4.5 Multiple Service Orders.  If Shipper has multiple Service Orders, Shipper will not be permitted to combine services available under such Service Orders.  Specifically, Gas will be received under a particular Service Order and will be delivered under the same Service Order.          4.6 Agency Agreement.  In the event that Shipper has transportation arrangements on one or more pipeline systems owned or operated by Transporter or its affiliates or subject to an OBA (Operational Balancing Agreement) or interconnection agreement between Transporter and an interconnecting pipeline, Transporter may enter into an agency agreement for ease of operation and administration and Shipper's convenience ("Agency Agreement").  In the Agency Agreement, Transporter or one of its affiliates may, among other things, agree to give and receive all notices and statements, receive payments for all amounts due under the transportation arrangements, give and receive Nominations and schedule quantities to be received and delivered, administer imbalances as requested by Shipper and adjust any mechanical difference that may arise with respect to measurement, billing and payments made or to be made, the allowance of credits and any undercharge or overcharge, with respect to such difference.  Notwithstanding Section 7.1, Shipper will submit Nominations to the party designated to receive such Nominations in the Agency Agreement and will submit such Nominations in the form and substance identified in the Agency Agreement.        4.7 Interstate Service. In addition to the interstate services that Transporter may provide pursuant to FERC's rules and regulations and this NGPA Section 311 Statement of Operating Conditions, Transporter also provides intrastate transportation services that are subject to the exclusive jurisdiction of the Railroad Commission of Texas and that are exempt from FERC's regulation under the NGPA. In that event and to provide Shippers with flexibility to access intrastate and/or interstate markets, Shippers may contract for both intrastate and NGPA Section 311 service on mutually agreeable terms, including a limitation that Shipper's combined usage under the intrastate and NGPA Section 311 agreements cannot exceed the MDCQ or SRC, as applicable. Each Firm NGPA Section 311 Shipper shall execute, along with its Firm Section 311 Service Order, an Intrastate Service Order, to facilitate transportation under the appropriate jurisdiction. Intrastate and NGPA Section 311 service shall be curtailed identically for the purposes of this Section 4.   5. QUANTITY.        5.1 Maximum and Minimum Delivery and Receipt Quantities.  The maximum quantity of Gas that Transporter is obligated to receive hereunder at the Receipt Point(s) and deliver hereunder at the Delivery Point(s) during any given hour of any Day is 1/24 of the Shipper's Scheduled Quantity at an instantaneous standard volumetric flow rate at any point in time during the hour (the "Maximum Hourly Quantity").  If Shipper has entered into transportation arrangements with one or more of Transporter's affiliates that have pipelines interconnecting with Transporter's pipeline, then Shipper may agree to limit the quantity of Gas to an aggregate quantity across the pipelines of one or more of Transporter's affiliates.  Transporter has no obligation to receive, transport, and deliver quantities of Gas hereunder in excess of the Scheduled Quantity.  Transporter has no obligation to receive or deliver Gas in quantities exceeding the physical capacity of the Delivery Point(s) or Receipt Point(s).        5.2 All Quantities in MMBtu.  All quantities of Gas received and delivered under any Service Agreement or Agency Agreement will be expressed in terms of MMBtu, including, without limitation, calculation of payments, determination of imbalances, and determination of Retention Volume.   5.3 Authorized Overrun Service.          5.3.1 Upon request of Shipper at, or prior to, the time it nominates Firm or Interruptible Service, Transporter may approve and schedule for receipt or delivery a quantity of Gas greater than the MDCQ or the SRC, and Shipper's Retention Volume, specified in the Service Agreement ("Authorized Overrun Service").  Authorized Overrun Service will be available only if (i) Transporter determines in its reasonable discretion that it has sufficient capacity after first scheduling all Firm transportation service within the limits of all Shippers' MDCQs and SRCs, and (ii) Shipper and Transporter mutually agree to a rate for Authorized Overrun Service at the time the overrun is requested.  Authorized Overrun Service will be scheduled on a first-come, first-served basis, with the priorities established in Section 4.4.        5.3.2 Authorized Overrun Service is Interruptible and Transporter has absolutely no liability whatsoever in damages or otherwise for any interruption or cessation of Authorized Overrun Service.    6. DELIVERY POINT(S) AND RECEIPT POINT(S).         6.1 Delivery Point(s).  Transporter will deliver Gas to Shipper, or its agent, under this Statement of Operating Conditions, the Service Agreement, the applicable Service Order and/or any applicable Agency Agreement to the existing points of interconnection between Transporter's pipeline facilities and the pipeline or receipt facilities of other parties at the "Delivery Point(s)" or a Pool consisting of an aggregate collection of such points, as identified in the Service Order, which Delivery Points may include Primary Delivery Points and Secondary Delivery Points.  Delivery Point(s) may be modified, or additional Delivery Point(s) may be added to a Service Order, by mutual agreement of the parties.  Delivery Point(s) listed in a Service Order are considered Primary Delivery Points unless specifically identified as Secondary Delivery Points.        6.2 Receipt Point(s).  Shipper will tender Gas for delivery to Transporter under this Statement of Operating Conditions, the Service Agreement, its applicable Service Order and/or any applicable Agency Agreement from the existing points of interconnection between Transporter's pipeline facilities and the pipeline or delivery facilities of other parties at the "Receipt Point(s)" or a Pool consisting of an aggregate collection of such points, as identified in the Service Order, which Receipt Points may include Primary Receipt Points and Secondary Receipt Points.  Receipt Point(s) may be modified, or additional Receipt Point(s) may be added to a Service Order, by mutual agreement of the parties.   Receipt Point(s) listed in a Service Order are considered Primary Receipt Points unless specifically identified as Secondary Receipt Points.         6.3 Allocation at Receipt and Delivery Point(s).  It is recognized that quantities of Gas may be transported through the Receipt Point(s) and/or the Delivery Point(s) for one or more parties other than the Shipper.  If that occurs, the measurement of Gas under this Agreement may involve the allocation of Gas receipts or deliveries.  As between Transporter and Shipper, and subject to Section 4.1, Transporter will determine the allocation of all Gas deliveries hereunder.          6.4 Payment of Fees.  Shipper must pay any and all transportation, measurement, testing, compression, or other fees or charges imposed by any third party on deliveries at any Receipt Point(s) or Delivery Point(s). Transporter shall promptly reflect all such fees or charges on its Statement of Rates, in any event, within 30 days of the effectiveness of such rates or charges. Notwithstanding the foregoing, in the event Transporter pays any such fees and charges, Shipper must reimburse Transporter for any such fees or charges paid by Transporter with respect to Shipper's Gas provided that Transporter has given Shipper written notice of the amount of such fees and charges and Shipper has agreed in writing to reimburse Transporter for such fees and charges.  If Shipper has not given Transporter written notice of its agreement to reimburse Transporter for any such fees and charges, Transporter will have no obligation to receive Gas for Shipper at any such Receipt Point(s) or deliver Gas for Shipper at any such Delivery Point(s) that may be subject to such fees and charges.  7. NOMINATIONS AND BALANCING.        7.1 Nominations. Shipper or its agent shall submit the quantity of Gas in MMBtu Shipper expects to make available and deliver at each Receipt Point each Day, or portion thereof, and receive at each Delivery Point each Day, or portion thereof (the "Nomination") via Transporter's or Transporter's affiliate's Web-based online nomination system.  Transporter will schedule and confirm Shipper's Nomination with upstream and downstream operators in accordance with the provisions of this Statement of Operating Conditions, the Service Agreement and the applicable Service Order.  Shipper must have a Service Order in place before a Nomination can be submitted.  Transporter, to the extent it is utilizing for its own account any available unused capacity shall submit a Nomination for such service in accordance with the same provisions and shall be treated in the same manner, as all other Nominations pursuant to the Nomination procedures set forth herein and the scheduling and priority of service provisions of this Statement of Operating Conditions.  In the event Transporter submits a nomination and is subject to the rules in Section 4.4, Priority of Service and Scheduling, that Transporter's Nomination will be scheduled at a rate equal to $0.00 so that in the event priorities of service are determined based upon greatest economic benefit, Transporter's Nomination will receive a lower priority than paying Shippers.         Transporter supports the following standard Nomination cycles (all times are Central Clock Time pursuant to NAESB WGQ Standard No. 0.3.17), as the same may be modified by NAESB:        7.1.1 The Timely Nomination Cycle        On the Day prior to Gas flow:  * 1:00 p.m. Nominations leave control of Shipper;  * 1:15 p.m. Nominations are received by Transporter (including from Title Transfer Tracking Service Providers (TTTSPs));  * 1:30 p.m. Transporter sends the quick response to Shipper;  * 4:30 p.m. Transporter received completed confirmations from confirming parties;  * 5:00 p.m. Shipper and point operator receive scheduled quantities from Transporter.  Scheduled quantities resulting from Timely Nominations should be effective at the start of the next Day.        7.1.2 The Evening Nomination Cycle        On the Day prior to Gas flow:  * 6:00 p.m. Nominations leave control of Shipper;  * 6:15 p.m. Nominations are received by Transporter (including from TTTSPs);  * 6:30 p.m. Transporter sends quick response to Shipper;  * 8:30 p.m. Transporter receives completed confirmations from confirming parties;  * 9:00 p.m. Shipper and point operator receive scheduled quantities from Transporter, including bumped parties.  Scheduled quantities resulting from Evening Nominations should be effective at the start of the next Day.  7.1.3 The Intraday 1 Nomination Cycle  On the current Day:  * 10:00 a.m. Nominations leave control of Shipper;  * 10:15 a.m. Nominations are received by Transporter (including from TTTSPs);  * 10:30 a.m. Transporter sends quick response to Shipper;  * 12:30 p.m. Transporter receives completed confirmations from confirming parties;  * 1:00 p.m. Shipper and point operator receive scheduled quantities from Transporter, including bumped parties.  Scheduled quantities resulting from Intraday 1 Nominations should be effective at 2:00 p.m. on the current Day.  7.1.4 The Intraday 2 Nomination Cycle  On the current Day:  * 2:30 p.m. Nominations leave control of Shipper;  * 2:45 p.m. Nominations are received by Transporter (including from TTTSPs);  * 3:00 p.m. Transporter sends quick response to Shipper;  * 5:00 p.m. Transporter receives completed confirmations from confirming parties;  * 5:30 p.m. Shipper and point operator receive scheduled quantities from Transporter, including bumped parties.  Scheduled quantities resulting from Intraday 2 Nominations should be effective at 6:00 p.m. on the current Day.  7.1.5 The Intraday 3 Nomination Cycle  On the current Day:  * 7:00 p.m. Nominations leave control of Shipper;  * 7:15 p.m. Nominations are received by Transporter (including from TTTSPs);  * 7:30 p.m. Transporter sends quick response to Shipper;  * 9:30 p.m. Transporter receives completed confirmations from confirming parties;  * 10:00 p.m. Shipper and point operator receive scheduled quantities from Transporter.  Scheduled quantities resulting from Intraday 3 Nominations should be effective at 10:00 p.m. on the current Day.  Bumping is not allowed during the Intraday 3 Nomination Cycle.   The Timely Nomination Cycle and all subsequent Nomination cycles follow the standard scheduling priority in which firm service has the highest scheduling priority, followed by interruptible service and Authorized Overrun Service.  But different rules determine whether a Nomination, once scheduled, can be bumped or displaced in the Evening and Intraday Nomination cycles.  In those cycles, any firm service already scheduled cannot be bumped or displaced by another firm Nomination within the same Firm Priority of Service group specified in Section 4.4 for the applicable type of constrain.  Already scheduled interruptible service can be bumped by a firm Nomination at the Evening Nomination Cycle and the Intraday 1 and Intraday 2 cycles, but cannot be bumped at the last Intraday 3 (or no-bump) cycle.           7.2 Shipper's Balancing Obligations.   7.2.1 For each Service Order, the maximum quantity of Gas that Transporter is obligated to receive at the Receipt Point(s) and deliver at the Delivery Point(s) during any given hour of any Day is 1/24th of Shipper's Scheduled Quantity; provided that to the extent that, in Transporter's commercially reasonable judgment, it can do so without impairment to its other service obligations, Transporter will make available hourly receipts or deliveries for Shippers without regard to the foregoing limitation on a non-discriminatory basis.   7.2.2 In the event that Transporter or Shipper delivers or causes to be delivered at the Receipt Point(s) or Delivery Point(s) a quantity of Gas not equal to the quantity of Gas received or taken by Shipper or Transporter, a "Transportation Imbalance" may occur.  Such Transportation Imbalance shall not exceed 5% of the Scheduled Quantity on any Day. If Transporter has received or delivered the quantity of Gas nominated by Shipper and scheduled by Shipper's upstream and downstream connected parties, then Shipper shall be liable for all imbalances under its transportation agreements with Shipper's upstream and downstream connected parties and shall be required to reimburse Transporter for all charges, penalties, costs, fees and expenses which Transporter is required to pay to Shipper's upstream and downstream connected parties as a consequence of Shipper's actions.  The recovery of such charges, penalties, costs, fees and expenses shall be on an as-billed to Transporter pass-through basis.  Upon notification by Shipper or Shipper's upstream or downstream connected party that a Transportation Imbalance exists because Transporter failed to deliver or receive the quantity of Gas nominated by Shipper and scheduled by Shipper's upstream or downstream connected party, Transporter will endeavor to correct the Transportation Imbalance subject to any restrictions imposed by Shipper's upstream or downstream connected party but Transporter shall be solely liable for any charges, penalties, costs, fees  and expenses incurred or payable by either party as a result of the Transportation Imbalance.  Shipper agrees to use its best efforts to prevent or diminish any occurrences of imbalances.  7.2.3 If Transporter determines that a Transportation Imbalance exists under a Shipper's Service Order for any Day, and Transporter requests Shipper to submit a nomination to eliminate such imbalance, then Shipper agrees to use its best efforts to nominate service no later than the Timely Nomination Cycle that occurs on the next business day to eliminate such Transportation Imbalance.  If Shipper fails to eliminate within the timeframe above and after 24 hours notification from Transporter, Transporter shall have the unilateral right to exercise its reasonable operational discretion to cut Shipper's receipt volume or delivery volume until imbalance is eliminated. In the event Shipper submits a nomination, requested by Transporter, to eliminate a Transportation Imbalance and it is later determined by Transporter that Transporter is unable to accept such nomination, based on, but not limited to, operational concerns, then Transporter will waive its unilateral right to cut Shipper's nomination for balancing purposes for that day and allow Shipper to submit another nomination in a subsequent Timely Nomination Cycle, agreed to by both parties. All imbalances at the end of the month shall carry over into the subsequent month. If Shipper's cumulative imbalance exceeds more than 20% of its daily contract quantity, then Transporter reserves the right to Cash out Shipper's Transportation Imbalance at the average daily price of Gas.  For positive Transportation Imbalances (Shipper owes gas to the Transporter), the Transportation imbalance will be Cashed out at "Houston Ship Channel" as published in Gas Daily for such date(s) on which the imbalances were created plus 10% of the Cash out value to Transporter. For negative Transportation Imbalances (Transporter owes gas to the Shipper), the Transportation imbalance will be Cashed out at "Waha" as published in Gas Daily for such date(s) on which the imbalances were created minus 10% of the Cash out value to Shipper. Imbalances are managed daily with an effort to schedule balancing nominations intra month, but any balances on the imbalance account will be rolled unless a month end Cash out is elected by Transporter due to operational concerns.  7.2.4 If Transporter is unable to receive the Scheduled Quantity at any Receipt Point(s) or deliver the Scheduled Quantity at any Delivery Point(s), Transporter will notify Shipper as soon as practicable.  Transporter has no obligation to receive and deliver quantities of Gas that differ from the Scheduled Quantity.          7.3 Operational Flow Order.  To preserve the operational integrity of Transporter's system, Transporter may issue an "Operational Flow Order."        7.3.1 An Operational Flow Order may be issued if Transporter determines that changes in receipts or deliveries are necessary to enable Transporter to protect the operating integrity of Transporter's pipeline system and safely and prudently provide the services set forth in this Statement of Operating Conditions, and the effected Service Agreements, Service Orders and/or any applicable Agency Agreement.  The Operational Flow Order will identify with specificity the operational problem to be addressed, the action(s) Shipper must take, the time by which Shipper must take the specified action(s), and the period during which the Operational Flow Order will be in effect.  Transporter will provide as much prior notice as possible, but not less than three (3) hours, to Shipper of actions Shipper must take to comply with an Operational Flow Order; provided that action by Shipper can be required on less than three (3) hours' notice if the nature of the Operational Flow Order is due to safety concerns or to protect the integrity of Transporter's pipeline system.        7.3.2 An Operational Flow Order may require Shipper to take any of the following actions or similar actions:   (a) Commence or increase supply inputs into Transporter's pipeline system at specific Receipt Point(s), or, alternatively, cease or reduce deliveries from Transporter's pipeline system at specific Delivery Point(s), both as directed by Transporter to conform Shipper's gas transportation quantities to a 24-hour ratable flow or conform to specific curtailments and the applicable curtailment priorities.  (b) Cease or reduce supply inputs into Transporter's pipeline system at specific Receipt Point(s) or, alternatively, commence or increase deliveries of Gas from Transporter's pipeline system at specific Delivery Point(s), both as directed by Transporter to conform Shipper's gas transportation quantities to a 24-hour ratable flow or conform to specific curtailments and the applicable curtailment priorities.  (c) Eliminate any transportation imbalances, as directed by Transporter.  (d) Conform actual receipts and deliveries to nominated and scheduled receipts and deliveries.  (e) Delay changes in deliveries up to twenty-four (24) hours to account for the molecular movement of Gas.  (f) Such other actions that are within Shipper's reasonable control that would tend to alleviate the operational situation to be addressed.        7.3.3 No penalty or fee will apply to Shipper's actions taken in compliance with Operational Flow Orders.        7.3.4 Should Shipper fail to adjust its receipts and/or deliveries in compliance with an Operational Flow Order, then Shipper must pay Transporter a charge equal to the greater of ten dollars ($10.00) or the highest daily price of Gas as published in Gas Daily at "Waha" for Receipt Point(s) or "Houston Ship Channel" for Delivery Point(s) for such date(s) plus two dollars ($2.00)  for each MMBtu received or delivered under the Service Agreement at the Receipt Point(s) or Delivery Point(s) during each hour in which deliveries are greater than 110% or less than 90% of the Scheduled Quantities at the Receipt Point(s) for such hour, less Retention Volume, while the Operational Flow Order is in effect.         7.3.5 Should Shipper fail to abide by an Operational Flow Order issued pursuant to this Section 7.3, Shipper will also be responsible for any and all damages asserted by any third parties, and will indemnify Transporter against any claims by any third parties resulting from Shipper's failure to comply with the Operational Flow Order.         7.3.6  Transporter may adjust Shipper's Nominations to conform to Operational Flow Orders and will do so in coordination with Shipper.  8. PARKING AND LOANING SERVICES     Any park and loan service that Transporter agrees to provide to a Shipper will be on an Interruptible basis and will be performed in accordance with the applicable terms of this Statement of Operating Conditions, the Service Order, any Agency Agreement, and the following:        8.1 Parking Service        8.1.1 A Shipper electing to inject (park) Gas to its park account shall first obtain approval from the Transporter by requesting the quantity of Gas and Receipt Point(s) before nominating a quantity of Gas.  The minimum and maximum length of time the Gas may be left in the park account will be determined by the Transporter.  All such quantities of Gas that are approved for parking shall be credited to the Shipper's park account.        8.1.2 A Shipper electing to withdraw (unpark) Gas from its park account shall first obtain approval from the Transporter by requesting the quantity of Gas and Delivery Point(s), which shall be the same point(s) as the Receipt Point(s) nominated under Section 8.1.1 of this Statement of Operating Conditions, unless otherwise agreed in a Service Order before nominating a quantity of Gas.  All such quantities of Gas that are approved for withdrawal shall be deducted from the Shipper's park account.        8.1.3  In the event that the Service Agreement and applicable Service Order have terminated, Transporter may require Shipper to withdraw all, or any portion of the Gas quantities parked by the Transporter within thirty (30) Days of Transporter's notice to Shipper.  If Shipper fails to nominate for the withdrawal of the quantities specified by Transporter in its notice, Transporter shall take title to that portion of Shipper's parking account that Shipper was instructed to withdraw, free and clear of any adverse claims.  Transporter's notice to Shipper may be verbal and in such case shall be followed by a written notice within five (5) business Days.        8.1.4 To protect and/or maintain the operational integrity of its pipeline system, Transporter may require the withdrawal of Gas in Shipper's park account upon twenty-four (24) hours' notice.          8.2   Loaning Service          8.2.1 A Shipper electing to withdraw (borrow) Gas from its loan account shall first obtain approval from Transporter by requesting the quantity of Gas and Delivery Point(s) before nominating a quantity of Gas.  The minimum and maximum length of time the Gas may be withdrawn from the loan account will be determined by Transporter.  All such quantities of Gas that are approved for withdrawal shall be debited to the Shipper's loan account.        8.2.2 A Shipper electing to inject (re-pay) Gas to its loan account shall first obtain approval from the Transporter by requesting the quantity of Gas and Receipt Point(s), which shall be the same point(s) as the Delivery Point(s) nominated under Section 8.2.1 of this Statement of Operating Conditions before nominating a quantity of Gas.  All such quantities of Gas that are approved for park (store or re-pay) shall be credited to the Shipper's loan account.        8.2.3 In the event that the Service Agreement and applicable Service Order have terminated, Transporter may require Shipper to repay all, or any portion of the Gas quantities loaned by the Transporter within thirty (30) Days of Transporter's notice to Shipper.  If Shipper fails to deliver or cause to be delivered the quantities specified by Transporter in its notice, Transporter will invoice and the Shipper shall pay a fee equal to $10.00 per MMBtu per Month (or partial Month) plus an amount equal to the Waha FOM Index published in Inside FERC for the month following the month in which such quantities should have been delivered per MMBtu.  Transporter's notice to Shipper may be verbal and in such case shall be followed by a written notice within five (5) business Days.        8.2.4 To protect and/or maintain the operational integrity of its pipeline system, Transporter may require the repayment of quantities of Gas that have been loaned upon twenty-four (24) hours' notice.    9. RATES.        9.1 Transportation Fees.  Each Month Shipper will, where applicable, pay Transporter the fees as set forth in the Service Agreement or Service Order thereunder ("Transportation Fees").  Unless otherwise provided in a Service Agreement, (i) commodity charges will be charged on the quantity of Gas redelivered to Shipper at the Delivery Point(s), and (ii) demand charges will be applied to the applicable SRC or MDCQ as provided in a Service Order or Agency Agreement for each Day on which Shipper is entitled to use such SRC or MDCQ.  Transportation Fees and other charges due under this Statement of Operating Conditions, the Service Agreement, its applicable Service Order or any Agency Agreement Shipper may execute will be invoiced and payable under Section 5 of the General Terms and Conditions. Transporter and Shipper may agree to discount the rate(s) to be charged for transportation on a not unduly discriminatory basis; provided, however, that the rate may not exceed the maximum rate, or be discounted below the minimum rate set forth on the Statement of Rates.        9.2 Retention Volume.  In addition to the Transportation Fees and other charges payable under this Statement of Operating Conditions or the Service Agreement or Service Order thereunder, Transporter will retain the percentage designated in the Statement of Rates, unless mutually agreed otherwise, of the quantity of Gas received by Transporter at each Receipt Point(s) to compensate Transporter for fuel and Lost and Un-accounted for Gas (the "Retention Volume").  For the purposes herein, (the "Lost and Un-accounted for Gas") shall mean total receipts minus total deliveries corrected for changes in line pack quantities implemented by Transporter.  10. TERM.        The Service Agreement will be effective on the date listed in the Service Agreement as the "Effective Date", and will, subject to the terms and provisions of this Statement of Operating Conditions, remain in full force and effect from Month to Month until terminated by either party upon thirty (30) Days' prior written notice to the other party, or as set forth in the applicable Service Order.  Termination, cancellation, or expiration of the Service Agreement will not extinguish any obligation that accrued before or as a result of the termination, cancellation, or expiration.  11. ADDRESSES.        11.1 Addresses of Parties.  Except to the extent that oral notification is expressly permitted by this Statement of Operating Conditions, all notices, requests, demands, statements and payments provided for in this Statement of Operating Conditions must be given in writing at the email and or mailing addresses of the parties specified in the Service Agreement.        11.2 Change of Address.  A party may change its address under the Service Agreement by giving thirty (30) Days' prior written notice.  Notices and payments will be effective when they are delivered at the appropriate address specified in the Service Agreement, during normal business hours on a business Day.  Notices delivered after business hours or on a weekend or holiday will be effective on the next business Day.    12. MISCELLANEOUS.        12.1 Assignment and Transfer.  This Statement of Operating Conditions, the Service Agreement, and any Agency Agreement are binding upon and will inure to the benefit of the parties and their respective successors, assigns and legal representatives.  Shipper may not assign or transfer the Service Agreement or Agency Agreement, or any benefit or obligation arising thereunder, without first obtaining the Transporter's prior written consent, which consent will not be unreasonably withheld; provided, Shipper may transfer its interests, rights and obligations under the Service Agreement or Agency Agreement without Transporter's consent to (i) any parent, affiliate, or any successor in interest to substantially all of the assigning party's assets, provided the assignee has creditworthiness acceptable to Transporter, as determined in Transporter's reasonable commercial opinion and in a not unduly discriminatory manner, or (ii) any individual, bank, trustee, company, or corporation as security for any note, notes, bonds, or other obligations or securities of such assignor, unless provided otherwise in a Service Agreement or Agency Agreement.  Any purported transfer or assignment without required consent will be a breach of such Service Agreement and Agency Agreement.        12.2 Entirety.  This Statement of Operating Conditions, the Exhibits, each Service Agreement, and Agency Agreement (if applicable) constitute the entire agreement between the parties covering the subject matter hereof, and there are no agreements, modifications, conditions, or understandings, written or oral, express or implied, pertaining to the subject matter hereof that are not contained herein or therein.        12.3 Headings.  The captions or headings preceding the various parts of this Statement of Operating Conditions are inserted and included solely for convenience and will never be considered or given any effect in construing this Statement of Operating Conditions, or in connection with the intent, duties, obligations, or liabilities of Transporter and Shipper.         12.4 Third Parties.  Nothing contained in this Statement of Operating Conditions, the Service Agreement, or any Agency Agreement, either express or implied, confers any rights, remedies, or claims upon any person or entity not a party to the Service Agreement, other than the successors or permitted assigns of the parties.        12.5 Law and Venue.  THIS STATEMENT OF OPERATING CONDITIONS, THE SERVICE AGREEMENT, AND THE RIGHTS OF TRANSPORTER AND SHIPPER HEREUNDER AND THEREUNDER MUST BE INTERPRETED AND ENFORCED IN ACCORDANCE WITH THE LAWS OF THE STATE OF TEXAS WITHOUT GIVING EFFECT TO ANY CHOICE OR CONFLICT OF LAW PROVISION OR RULE (WHETHER OF THE STATE OF TEXAS OR ANY OTHER JURISDICTION) THAT WOULD CAUSE THE APPLICATION OF THE LAWS OF ANY JURISDICTION OTHER THAN THE STATE OF TEXAS.  TRANSPORTER AND SHIPPER AGREE TO THE JURISDICTION OF THE FEDERAL AND STATE COURTS IN DALLAS COUNTY OR HARRIS COUNTY, TEXAS AND AGREE THAT ANY ACTION, SUIT, OR PROCEEDING CONCERNING, RELATED TO, OR ARISING OUT OF THIS STATEMENT OF OPERATING CONDITIONS OR THE SERVICE AGREEMENT WILL BE BROUGHT ONLY IN A FEDERAL OR STATE COURT IN DALLAS COUNTY OR HARRIS COUNTY, TEXAS AND NEITHER TRANSPORTER NOR SHIPPER MAY RAISE ANY DEFENSE OR OBJECTION OR FILE ANY MOTION BASED ON LACK OF PERSONAL JURISDICTION, IMPROPER VENUE, INCONVENIENCE OF THE FORUM, OR THE LIKE IN ANY CASE FILED IN A FEDERAL OR STATE COURT IN DALLAS COUNTY OR HARRIS COUNTY, TEXAS.        12.6 Limitation on Damages.  EXCEPT FOR DAMAGES THAT ARISE OUT OF A BREACH OF THE WARRANTY CONTAINED IN SECTION 1.2 OF EXHIBIT "A," OR THE QUALITY PROVISIONS CONTAINED IN SECTION 4 OF EXHIBIT "A," IN NO EVENT WILL TRANSPORTER OR SHIPPER BE LIABLE TO THE OTHER FOR SPECIAL, INDIRECT, INCIDENTAL, PUNITIVE, EXEMPLARY, OR CONSEQUENTIAL DAMAGES, INCLUDING BUT NOT LIMITED TO THE LOSS OF USE, LOST PROFITS, IRRESPECTIVE OF WHETHER CLAIMS OR ACTIONS FOR SUCH DAMAGES ARE BASED ON CONTRACT, TORT, WARRANTY, NEGLIGENCE, STRICT LIABILITY OR OTHERWISE.  Notwithstanding the foregoing, neither Transporter nor Shipper will be liable for the gross negligence or willful misconduct of the other Party.        12.7 Counterparts.  The Service Agreement may be executed in any number of counterparts, each of which will be deemed to be an original and all of which will constitute one and the same agreement.        12.8 Exhibits.  The following exhibits are attached to this Statement of Operating Conditions and is incorporated by this reference:              Exhibit A General Terms and Conditions              Exhibit B Statement of Rates            [Remainder of page intentionally blank]  EXHIBIT "A"  TO  NGPA SECTION 311 STATEMENT OF OPERATING CONDITIONS    GENERAL TERMS AND CONDITIONS        These General Terms and Conditions ("General Terms") are attached to and constitute a part of Transporter's Statement of Operating Conditions.  Unless otherwise stated herein, all capitalized terms herein shall have the meaning ascribed to them in the Statement of Operating Conditions.    1. Laws and Regulations          1.1 Transporter's transportation services are subject to all present and future valid laws and lawful orders of all regulatory authorities now or hereafter having jurisdiction over the services or facilities used to provide such services.  The Service Agreement and any applicable Agency Agreement are expressly made subject to any and all tariff and other rate filings made by Transporter and approved by any state regulatory body as such may be amended from time to time.  Transporter will have the right to propose to the governing regulatory body such changes in its rates and terms of service at any time as it deems necessary, and Shipper's Service Agreement and any applicable Agency Agreement will be deemed to include any changes that are made effective pursuant to order or regulation or provisions of law, without prejudice to Shipper's right to protest the same.  Any pipeline jointly owned by Transporter may be subject to and operated in accordance with the statement of operating conditions of the operator of the joint venture pipeline as applicable in any Service Agreement and any Agency Agreement.  In the event of a conflict between (i) this Statement of Operating Conditions; (ii) the Service Agreement or Agency Agreement; or (iii) the Service Order, the terms of the documents shall govern in the priority listed in this sentence.  If any regulatory body having jurisdiction over the Service Agreement or Agency Agreement subjects Transporter or Transporter's facilities to any greater or different regulation or jurisdiction, by order or otherwise, than that existing on the Effective Date, then Shipper and Transporter shall negotiate in good faith to amend and restate the Service Agreement so as to conform to the applicable order or regulation; provided that Transporter shall have the right to terminate, with thirty (30) Days' written notice to Shipper, the applicable Service Agreement and any Agency Agreement if Shipper and Transporter are unable to mutually agree to amend and restate the Service Agreement and any Agency Agreement to accomplish the foregoing objectives.  If any order or regulation of a regulatory body having jurisdiction over the Service Agreement and/or Agency Agreement prohibits Transporter from charging or collecting rates specified in the Service Agreement or Agency Agreement, then Shipper and Transporter shall negotiate in good faith to amend and restate the Service Agreement so as to (i) conform to the applicable order or regulation affecting such rates and (ii) to maintain the total consideration initially agreed upon by Transporter and Shipper, to the maximum extent possible; provided that Transporter shall have the right to terminate, with thirty (30) Days' written notice to Shipper, the applicable Service Agreement and any Agency Agreement if Shipper and Transporter are unable to mutually agree to amend and restate the Service Agreement and any Agency Agreement to accomplish the foregoing objectives.        1.2 Shipper represents, covenants and warrants that at all times during the term of the Service Agreement Shipper will commit no action or omission that will cause the transportation service provided to Shipper to fail to comply with all applicable rules and regulations of the applicable regulatory agencies, including, without limitation, any intrastate warranty provisions set forth in a Service Order.  2. Pressures at Receipt and Delivery Point(s)        2.1 Shipper (or its designee) will deliver Gas to Transporter at the Receipt Point(s) at pressures sufficient to enter Transporter's pipeline system at such points; provided, however, that Shipper's delivery pressure into Transporter's system at the Receipt Point(s) may not exceed Transporter's maximum allowable operating pressure, as such may vary from time to time, at any such point or cause the pressure at any such point to exceed Transporter's maximum allowable operating pressure.  Transporter may, but shall not have any obligations to alter its pipeline pressures, provide compression, or modify its pipeline operations in order to effectuate the receipt or delivery of Gas.        2.2 Transporter will deliver Gas to Shipper or Shipper's designee at Transporter's operating pressure at the Delivery Point(s), as such may vary from time to time.  3. Measurement          For the purposes of this Statement of Operating Conditions, the party metering the Gas, or whose designee meters the Gas, at a particular Receipt Point(s) or Delivery Point(s) is referred to as the "Metering Party" and the other party is referred to as the "Non-Metering Party."          3.1 The measuring facilities shall be designed, installed, operated, and maintained by Transporter or its designee in accordance with the recommendations contained in the following standards:          3.1.1 Orifice Measurement - American Gas Association Report Number 3 (herein referred to as AGA 3).          3.1.2 Turbine Measurement - American Gas Association Report Number 7 (herein referred to as AGA 7).                3.1.3 Positive Measurement - American National Standards Institute B109.2 (herein referred to as ANSI B109.2).                3.1.4 Ultrasonic Measurement - American Gas Association Report Number 9 (herein referred to as AGA 9).                3.2 If adequate metering facilities are already in existence at the Receipt and Delivery Point(s), such existing metering facilities will be used for so long as, in Transporter's reasonable judgment, the facilities remain adequate.  If the metering facilities at any Receipt Point(s) or Delivery Point(s) are reasonably determined by Transporter to be inadequate, then the parties will mutually agree with respect to the equipment that must be added at such point(s) and the responsibility for payment of such equipment.  If the parties are unable to agree upon the equipment to be added at any such point, or which party will be responsible to pay for such equipment, then such point will be removed from the Service Order.                3.3 The Non-Metering Party may, at its option and expense, install and operate meters, instruments and equipment, in a manner that will not interfere with the Metering Party's equipment, to check the Metering Party's meters, instruments, and equipment, but the measurement for the custody transfer of Gas for the purpose of this Agreement will be by the Metering Party's meter only, except as hereinafter specifically provided.  The meters, check meters, instruments, and equipment installed by each party will be subject at all reasonable times to inspection or examination by the other party (Non-Metering Party), but the calibration and adjustment thereof will be done only by the installing party.                3.4 All meters will be calibrated and/or proven on a schedule, but in no event will the calibration period be in excess of ninety (90) Days.  Notification of scheduled calibrations shall be made to all interested parties and reasonable effort will be made to accommodate each party's schedule; however, calibration will proceed at the scheduled time regardless of attendees.  Records from all measuring equipment are the property of the Metering Party who will keep all such records on file for a period of not less than two (2) years.  Upon request, the Metering Party will make available to the Non-Metering Party volume records from the measuring equipment, together with calculations therefrom, for inspection and verification, subject to return within thirty (30) Days after receipt thereof.                3.5 Either Party shall have the right to conduct such pulsation tests as they deem prudent, at their sole risk and expense.  If excessive pulsation is evident, mutually agreed modifications to operation or facility design will be made to reduce the effect of such pulsation.  If pulsation issues cannot be resolved in a mutually agreeable manner, either party shall have the right to refuse delivery or receipt of Gas at the Receipt Point(s) or Delivery Point(s).                3.6 If the percentage of inaccuracy from the results of any test is greater than one percent (1%) volumetrically, the registration of such meter shall be corrected at the rate of such inaccuracy for any period which is definitely known or agreed upon.  In the event the period is not definitely known or agreed upon, such correction shall be for a period extending back one-half (1/2) of the time elapsed since the date of the last calibration.  Following any test, measurement equipment found inaccurate shall be immediately restored by Transporter as closely as possible to a condition of accuracy.  If any measurement equipment is out of service or out of repair for any reason so that the amount of Gas delivered cannot be estimated or computed from the reading thereof, the amount of Gas delivered through such meter during the period such meter is out of service or out of repair shall be estimated and agreed upon by Transporter and Shipper upon the basis of the best data available using the first of the following methods which is feasible:                3.6.1 by using the registration of any check meters if installed and accurately registering;                3.6.2 by correcting the error if the percentage of error is ascertainable by calibration, test or mathematical calculation; or                3.6.3 by estimating the quantity of deliveries by comparison with deliveries during preceding period under similar conditions when the meter was registering accurately.    3.7 Measurement Volume Computations          3.7.1 Units of measurement shall be determined in MMBtu derived from the calculation of gas volume (Mcf) and gas heating value (Btu/ft3), both at identical base conditions of temperature and pressure.  The unit of volume of Gas shall be one (1) standard cubic foot at an absolute pressure of fourteen and sixty-five hundredths pounds per square inch absolute (14.65 Psia) and at a temperature of sixty degrees Fahrenheit (60?F).                 3.7.2 Atmospheric pressure shall be assumed to be the pressure value as reasonably determined by Transporter for the county in which each of the Receipt Point(s) and Delivery Point(s) is located pursuant to generally accepted industry practices, but not less than twelve and nine-tenths (12.9) Psia nor more than fourteen and seven-tenths (14.7) Psia irrespective of the actual atmospheric pressure at such points from time to time.                3.7.3 All metered volumes shall be computed in accordance with the standards set forth in Section 3.1 above.          3.8 Records of calibration and or proving and data associated with the volume calculation are the property of the Metering Party who will keep all such records and data on file for a period of not less than two (2) years.  Upon request, the Metering Party will make available to the Non-Metering Party records of calibration and or testing and data associated with the volume calculation, subject to return within thirty (30) Days after receipt thereof.                3.9 Transporter shall sample and determine the Gross Heating Value, Relative Density and Compressibility received at the Receipt Point(s) or Delivery Point(s) utilizing the following standards:          3.9.1 Gas Processors Association (GPA) 2166 - Obtaining Natural Gas Samples for Analysis by Gas.                 3.9.2 Gas Processors Association (GPA) 2261 - Analysis for Natural Gas and Similar Gaseous Mixtures by Gas Chromatography.                3.9.3 Gas Processors Association (GPA) 2145 - Physical Constants for Paraffin Hydrocarbons and Other Components of Natural Gas.                3.9.4 Gas Processors Association (GPA) 2172 - Calculation of Gross Heating Value, Relative Density, and Compressibility of Natural Gas Mixtures from Compositional Analysis.                3.10 Transporter shall sample the flowing gas stream utilizing one of the following methods:          3.10.1 On-line Chromatography                 3.10.2 Accumulated Sample - If this method is utilized the application of gas quality in the volume calculation will be during the time period the gas sample was accumulated.                3.10.3 Spot Sample - If this method is utilized the application of gas quality in the volume calculation will be the time period beginning on the date the sample was obtained until the next sample is obtained.     4. Quality          4.1 Shipper represents and warrants that all Gas tendered for transportation at the Receipt Point(s) shall meet the Quality Specifications.  "Quality Specifications" means, for each constituent, the Transporter's quality specifications set forth below (as modified from time to time or as provided in any Service Agreement or Agency Agreement on a non-discriminatory basis):          4.1.1 Have a Heating Value of not less than nine hundred fifty (950) Btu per cubic foot nor more than one thousand one hundred (1,100) Btu per cubic foot.          4.1.2 Be commercially free of dust, gum, gum-forming constituents, gasoline, liquid hydrocarbons, water, and any other substance of any kind that may become separated from the Gas during the handling thereof or that may cause injury to or interference with proper operation of the lines, meters, regulators, or other appliances through which it flows;          4.1.3 Not contain more than one-half (0.5) grains of total sulfur nor more than one-fourth (1/4) grain of hydrogen sulfide per one hundred (100) standard cubic feet;          4.1.4 Not contain more than ten (10) parts per million of oxygen, and shall not contain more than two percent (2%) by volume of carbon dioxide, not contain more than three percent (3%) by volume of nitrogen or three percent (3%) by volume of total inert gases;           4.1.5 Have a temperature of not more than one hundred twenty degrees Fahrenheit (120 F) nor less than forty degrees Fahrenheit (40 F);           4.1.6 Not contain more than seven (7) pounds of water vapor per one million (1,000,000) standard cubic feet; and          4.1.7 Have a hydrocarbon dew point below forty degrees Fahrenheit (40 F).           4.2 In the event that the Gas being received does not conform to the standards outlined above, Transporter may  accept such Gas or restrict or refuse any volumes that are non-conforming or deficient on a non-discriminatory basis.        4.3 Shipper shall be responsible for odorizing any part of the Gas delivered hereunder at the Delivery Point(s) which is diverted and/or used for any purpose for which odorization is required pursuant to regulations of the Texas Railroad Commission.   4.4 In the event that Shipper's Gas fails to conform to any of the Quality Specifications set forth above, including, but not limited to the hydrocarbon dew point or the gross heating value or any other specification set forth above or to a more restrictive specification imposed by a downstream pipeline to which Shipper has nominated Gas, Transporter, in its discretion and on a non-discriminatory basis, may accept such off-specification Gas for transportation and delivery to such downstream pipeline provided that Shipper has made arrangements to ensure that such off-specification Gas conforms to the applicable specification, including but not limited to any arrangements to treat, condition, or blend with other Gas (prior to it reaching such downstream pipeline).  Upon request from Transporter, Shipper shall provide documentation acceptable to Transporter demonstrating that Shipper has made such contractual arrangements for such off specification Gas on the path for which Shipper has nominated Gas.  This provision shall not be construed as a general waiver to Transporter's specification and is only available where physical blending, treatment and conditioning of Gas is contracted for and will take place prior to reaching the downstream pipeline whose specifications are to be met and such acceptance and service by Transporter shall not adversely impact markets on Transporter's system.  Transporter shall deliver to downstream pipelines Gas meeting the quality specifications set forth above.    5. Billing, Accounting, and Reports                5.1  On or before the fifteenth (15th) Day of each Month, Transporter will provide a statement to Shipper for the services provided setting forth, in terms of MMBtu, the total volume of Gas received at the Receipt Point(s), the volume of Gas retained by Transporter, and the volume of Gas delivered at the Delivery Point(s) for all applicable Service Orders during the immediately preceding Month and the amount(s) payable.  Paying party agrees to pay the non-paying party by wire transfer (identifying the invoice number) the total of the amounts payable according to such statement on or before the later of the twenty-fifth (25th) Day of the Month in which the statement is provided or ten (10) Days following the date in which the statement was delivered.  In the event such volumes are estimated for any period, corrected statements shall be provided by Transporter to Shipper and paid by Shipper or credited by Transporter, as the case may be, in each instance in which the actual volumes received or delivered. If an error is discovered in the amount billed, then such error will be adjusted within thirty (30) Days of the discovery of the error.           5.2 If a bona fide dispute arises as to the amount payable in any statement provided, then Shipper will pay the good faith undisputed amount invoiced pending resolution of the dispute.  Upon resolution of such dispute, Shipper will pay any monies owed Transporter per the terms of this Section 5.                 5.3 In addition to all other remedies available to Transporter, should Shipper fail to pay any undisputed amount when the same becomes due, Shipper shall pay interest on outstanding balances accruing thereon at a rate equal to the prime rate from time to time in effect and charged by the Citibank, N.A., New York, New York or its successor, plus two percent (2%) per annum, (but in no event greater than the maximum rate of interest permitted by law) with adjustments in such rate to be made on the same Day as any change in such prime rate, for any period during which the same shall be overdue, such interest to be paid when the amount past due is paid.  Each party hereto or its representative shall have the right at all reasonable times to examine the books and records of the other party to the extent necessary to confirm the performance of any obligation made under or pursuant to this Agreement or verify the accuracy of any statement, charge, computation or demand made under or pursuant to this Agreement.  Any statement shall be final as to all parties unless questioned within two (2) years after payment thereof has been made.  6. Responsibility        6.1  Shipper shall be deemed to be in control and possession of the Gas prior to the receipt of the Gas by Transporter at the Receipt Point.  Transporter shall be deemed to be in control and possession of the Gas after its receipt by Transporter at the Receipt Point and prior to its delivery to Shipper or for Shipper's account at the Delivery Point(s).  The party in control and possession of the Gas will be responsible for and shall indemnify the other party, including the party's affiliates and their officers, directors, agents and employees, with respect to any losses, injuries, claims, liabilities, demands, damages, expenses, reasonable attorneys' fees and court costs caused thereby by accident, incident or otherwise or on account of royalties, payments, or other charges applicable and occurring while the Gas is deemed to be in its control or possession.  Such indemnification shall not extend to claims made that are attributable to the delivery by Shipper to Transporter of Gas that does not meet the Quality Specifications contained herein; provided however that in any instance where Shipper, without prior written consent of Transporter, delivers Gas that does not meet the Quality Specifications herein, Shipper shall indemnify Transporter for any claims, losses, or damages resulting from the delivery of such out of specification Gas.  Each party hereto covenants that with respect to the Gas delivered or redelivered by it hereunder, it will indemnify and save the other party harmless from and against any and all suits, actions, causes of action, claims and demands arising from or out of any adverse claims by third parties claiming ownership of or an interest in the Gas so delivered or redelivered.  Notwithstanding the foregoing, neither party shall be indemnified for its own negligence or willful misconduct, and the parties acknowledge and agree that Shipper shall at all times have all lawful rights and/or title to all Gas transported hereunder.  Subject to the other terms and conditions of this Statement of Operating Conditions, each party has the right to treat, process, and/or dehydrate the Gas prior to delivering said Gas to the other party.   6.2 Any taxes, fees, charges or any other exactions, now or hereafter enacted, levied or assessed by any federal, state, local or other governmental authority upon  Shipper's Gas,  or the services provided by Transporter hereunder, shall be borne and paid for by Shipper, except to the extent any such taxes are, by law, required to be paid directly by Transporter, in which event, such taxes (including penalty and interest if imposed by the taxing authority) shall be paid by Transporter and reimbursed by Shipper upon receipt of invoice and supporting documentation reasonably requested by Shipper.    Notwithstanding any other provision in this Statement of Operating Conditions, Parties further agree that, a Party shall not be liable to the other Party for any taxes that are statutorily imposed on the first Party that are measured by or imposed upon net income, capital, or property, including without limitation, income, capital, franchise, and margin based taxes and taxes measured by the value of owned or leased real, tangible or intangible property.  In addition, a Party shall not be liable to the other Party for business license taxes on a particular occupation or similar taxes required for the maintenance of business existence.      There shall be no reimbursement for taxes or fees that are a factor in determining the transportation rate Shipper pays under this Statement of Operating Conditions, the Service Agreement, its applicable Service Order or any Agency Agreement.     7. Force Majeure and Maintenance Events        7.1 If either party is rendered unable, wholly or in part, by Force Majeure (defined below) or other causes herein specified, to carry out its obligations under this Agreement other than the obligation to make payment of amounts due hereunder, it is agreed that on such party's promptly giving notice and reasonably full particulars of such Force Majeure in writing or facsimile or by email to the other party within a reasonable time after the occurrence of the cause relied on, then the obligations of the party giving such notice, so far as such obligations are affected by such Force Majeure or other causes herein specified, shall be suspended during the continuance of any inability so caused, but for no longer period, and such cause shall so far as possible be remedied with all reasonable dispatch.        7.2 The term Force Majeure as employed herein means, to the extent not reasonably within the control of the party claiming suspension and which, by the exercise of reasonable diligence, such party is unable to prevent or overcome: acts of God; strikes, lockouts or other industrial disturbances; acts of the public enemy; sabotage; wars; blockades; insurrections; riots; acts of terror; epidemics; landslides; lightning; earthquakes; fires; storms; storm warnings; hurricanes; floods; washouts; arrests and restraints of the government and people, either federal or state, civil or military; civil disturbances; explosions; breakage; breakdown or accident to machinery, equipment or lines of pipe; freezing of wells or lines of pipe or other delivery facilities; electric power unavailability or shortages; and any other causes, whether of the kind herein enumerated or otherwise, not reasonably within the control of the party claiming suspension, and which by the exercise of due diligence such party is unable, wholly or in part, to prevent or overcome.  Such term likewise includes (1) in those instances where either party hereto is required to obtain servitudes, right-of-way grants, permits or licenses to enable such party to fulfill its obligations hereunder, the inability of such party to acquire, or the delays on the part of such party in acquiring, at reasonable cost and after the exercise of reasonable diligence, such servitudes, right-of-way grants or licenses, (2) in those instances where either party hereto is required to furnish materials and supplies for the purpose of constructing or maintaining facilities or is required to secure permits consents, authorizations or approvals from any governmental agency or authority (federal, state or municipal, international civil or military) to enable such party to fulfill its obligations hereunder, the inability of such party to acquire or the delays on the part of such party in acquiring, at reasonable cost and after the exercise of reasonable diligence, such materials and supplies, permits, consents, authorizations or approvals, and (3) any action by any third party pipelines connected to Transporter's pipeline that would prevent or delay Transporter in crossing any third party pipeline or obtaining with any third party pipeline a functional interconnection (capable of receiving Gas and available for commercial service).  It is understood and agreed that the settlement of strikes or lockouts shall be entirely within the discretion of the party having the difficulty and that the above requirement that any Force Majeure shall be remedied with all reasonable dispatch shall not require the settlement of strikes or lockouts by acceding to the demands of the opposing party when such course is inadvisable in the discretion of the party having the difficulty.        7.3 Transporter shall waive any fees due to imbalances which result from errors made by Transporter or which result from Force Majeure invoked by Transporter.        7.4 Either party may partially or entirely interrupt its performance hereunder for the purpose of making necessary or scheduled inspections, alterations and repairs which are described as a non-Force Majeure maintenance event, but only for such time as may be reasonable and unavoidable; and the party requiring such relief shall give to the other party a minimum of ten business (10) Days' notice of its intention to suspend its performance hereunder, except in cases of emergency where such notice is impracticable and shall endeavor to arrange such interruption so as to inconvenience the other party as little as possible.  8. Waiver of Breaches, Defaults, or Rights        Transporter may waive any of its rights or any obligations to Shipper under this Statement of Operating Conditions from time to time on a non-discriminatory basis, and the parties agree that if it does so it will not be deemed to have waived its right subsequently to enforce the provisions of the Statement of Operating Conditions.  No waiver by either party of any one or more breaches, defaults, or rights under any provisions of the Statement of Operating Conditions or the Service Agreement will operate or be construed as a waiver of any other breaches, defaults, or rights, whether of a like or of a different character.  By providing written notice to the other party, either party may assert any right not previously asserted hereunder or thereunder or may assert its right to object to a default not previously protested.  Except as specifically provided herein, in the event of any dispute under this Statement of Operating Conditions, the Service Agreement, or Agency Agreement, the parties will, notwithstanding the pendency of such dispute, diligently proceed with the performance of the Service Agreement and Agency Agreement without prejudice to the rights of either party.  9. Remedy for Breach        Except as otherwise specifically provided herein, and subject to any Service Agreement, if either party fails to perform any of the material covenants or obligations imposed upon it in this Statement of Operating Conditions, the Service Agreement, or any Agency Agreement (except where such failure is excused under the Force Majeure or other provisions hereof or thereof), then the other party may, at its option (without waiving any other remedy for breach hereof), by notice in writing specifying the default that has occurred, indicate such party's intention to terminate the Service Agreement or Agency Agreement by reason thereof. The party in default will have thirty (30) Days from receipt of such notice to remedy such material default, and upon failure to do so, the non-defaulting party may elect to immediately terminate the Service Agreement or Agency Agreement.  Notwithstanding the foregoing, Shipper's failure to pay Transporter within a period of ten (10) Days following Shipper's receipt of written notice from Transporter advising of such failure to make payment in full within the time specified previously herein, will be a default that gives Transporter the right to immediately terminate the Service Agreement, unless such failure to pay such amounts is the result of a bona fide dispute between the parties regarding such amounts and Shipper timely pays all amounts not in dispute, or unless such payment failure is specifically addressed in a Service Agreement.  Subject to remedy provisions in any applicable Service Agreement, such termination will be an additional remedy and will not prejudice the right of the party not in default: (i) to collect any amounts due it for any damage or loss suffered by it, and (ii) will not waive any other remedy to which the party not in default may be entitled for breach of this Statement of Operating Conditions and the Service Agreement.    *** END OF GENERAL TERMS AND CONDITIONS ***    EXHIBIT "B"  TO  STATEMENT OF OPERATING CONDITIONS    Statement of Rates1     Minimum3 Maximum Firm $0.0207 per MMBtu $0.8022 per MMBtu Interruptible $0.0207 per MMBtu $0.8022 per MMBtu Authorized Overrun $0.0207 per MMBtu $0.8022 per MMBtu Park and Loan $0.0207 per MMBtu per day $0.8022 per MMBtu per day Fuel2  Actual   1 All stated rates remain subject to any additional governmental taxes, fees, charges or other exactions levied or assessed upon Shipper's Gas or the services provided by Transporter as set forth in Section 6.2 of Exhibit "A" to this Statement of Operating Conditions.  2 Shippers shall deliver to Transporter at the Shipper's Receipt Point(s) in-kind the actual fuel and lost and unaccounted for gas on the basis of a 6-month rolling average with a 3-month lag, updated monthly. Matterhorn shall provide its currently applicable retention percentage to its Shippers based on actual fuel for the applicable period.  3 Applicable only to physical long-haul transactions that incur variable costs.                 2</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>511</filing_id>
      <filing_title>Revised Statement of Operating Conditions</filing_title>
      <filing_type>790</filing_type>
      <associated_filing_id>483</associated_filing_id>
      <associated_record_id>236</associated_record_id>
      <associated_option_code>A</associated_option_code>
      <record_current_status>Pending</record_current_status>
      <current_effective_date>2024-10-01</current_effective_date>
      <ferc_order_date xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <ferc_action_status>Pending</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
  </ferc_filing_data>
</Document>