<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Document xmlns="http://ferc.gov/etariffExport.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ferc_filing_data>
    <schema_version>2</schema_version>
    <company_id>C000196</company_id>
    <lead_applicant_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
    <tariff_id>27</tariff_id>
    <tariff_title>Wholesale Cost-Based Rate Tariff</tariff_title>
    <tariff_export_date>2025-09-16T20:01Z</tariff_export_date>
    <export_schema_version>2</export_schema_version>
    <record_data>
      <record_id>109</record_id>
      <option_code>A</option_code>
      <record_title>Wholesale Cost-Based Rate Tariff</record_title>
      <record_content_desc>Tariff</record_content_desc>
      <record_version_num>0.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>8388608</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2013-10-03</proposed_effective_date>
      <priority_order>1000000000</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>WHOLESALE COST-BASED RATE TARIFF

OF

VIRGINIA ELECTRIC AND POWER COMPANY

PROVIDING FOR

SALES OF ELECTRIC POWER

AND RESALE OF TRANSMISSION RIGHTS



I.	DEFINITIONS

The following words and terms used herein shall be understood to have the following meanings:

1.	Affiliate: In the case of any exempt wholesale generator defined under Section 32(a) of the Public Utility Holding Company Act of 1935, as amended, "Affiliate" is defined in accordance with Section 214 of the Federal Power Act. In the case of any other entity, "Affiliate' is defined in accordance with 18 C.F.R. ? 161.2(a).

2.	Buyer: "Buyer" means a purchaser of Electric Power for resale or a purchaser of resold transmission rights under this Tariff.

3.	Commission: "Commission" means the Federal Energy Regulatory Commission or such successor Federal regulatory agency as may have jurisdiction over this Tariff.

4.	Electric Power: "Electric Power" means electric capacity and/or energy.

5.	Parties: "Parties" mean Seller and Buyer that have entered into a Service Agreement for service pursuant to this Tariff.

6.	Seller: "Seller" means Virginia Electric and Power Company.

7.	Service Agreement: "Service Agreement" means the agreement entered into by Seller and Buyer for service under this Tariff.

8.	Tariff:  "Tariff" means this wholesale cost-based rate tariff, as amended from time to time.

9.	Transaction: "Transaction" means a particular transaction agreed to by the Parties pursuant to a Service Agreement under this Tariff.

10.	Transmission Tariff: "Transmission Tariff" means the Transmission Tariff filed by Virginia Electric and Power Company in compliance with Order No. 888, as it may be amended from time to time, or, as applicable, the Transmission Tariff of the regional transmission organization from which Virginia Electric and Power Company is a member.

II.	SALES OF ELECTRIC POWER

1.	Electric Power:  Seller may sell Electric Power for resale to affiliated and non-affiliated Buyers under this Tariff from time to time at rates, terms and conditions established by the agreement of the Parties. All such Transactions shall be voluntary.

2.	Provision of Unbundled Transmission Service:  Except as provided in Article III, this Tariff does not provide for the sale of transmission service or ancillary services. Either Seller or Buyer may arrange for transmission service and ancillary services in conjunction with the sale of Electric Power.

3.	Rates:  Except as provided in Article VI.2, all sales shall be made at rates established by agreement between Seller and Buyer, provided that the sum of all the charges with respect to each Transaction may be up to but shall not exceed:

(a)	for Electric Power that Seller purchases from a third party for resale to Buyer, the sum of:

      i.	the charges paid to the third party for such Electric Power; and

ii.	any associated transmission and ancillary services purchased by Seller and resold to Buyer.

      (b)	for Electric Power from Seller's generating resources, the sum of the following:

      i.	A demand charge of:

      $122.92/KW/year;

      $10.24/KW/month;

      $2.36/KW/week;

$.47/KW/day, provided that the total demand charge in any week, pursuant to a sale of daily Electric Power, shall not exceed the weekly rate times the highest amount in kilowatts of purchased Electric Power in any day during such week; or

$.0295/KW/hour, provided that the total demand charge in any day, pursuant to a sale of hourly Electric Power, shall not exceed the daily rate times the highest amount in kilowatts of purchased Electric Power in any hour during such day, and the total demand charge in any week, pursuant to a sale of hourly or daily Electric Power, shall not exceed the weekly rate times the highest amount in kilowatts of purchased Electric Power in any hour during such week; and

ii.	100% of the system incremental cost per kilowatt hour of Seller's generating resources; and

iii.	the cost of transmission service and any ancillary services purchased by Seller and resold to Buyer.
	
III. 	RESALE OF TRANSMISSION RIGHTS

1.	Character of Service: Seller may resell to a Buyer all or a portion of Seller's rights to the use of the transmission system of a transmission provider that Seller has reserved for its own use under a service agreement with the transmission provider, or has acquired from another customer of the transmission provider, including capacity that Seller has reserved or acquired for its own use on its own transmission system under its Transmission Tariff. In order to be eligible for this service, the Buyer must be an Eligible Customer under the transmission tariff of the transmission provider from whom the transmission service rights to be transferred were originally obtained. When Seller resells transmission capacity that Seller has reserved or acquired for its own use on its own transmission system, Seller will continue to comply with all of the non-rate terms and conditions of its Transmission Tariff. Notwithstanding the foregoing, the Seller may resell service that it has obtained from any transmission provider for a shorter duration than it has purchased, may resell smaller quantity than it has purchased and may resell as non-firm point-to-point service transmission that it has purchased as firm point-to-point service.

2.	Limitation on Sales Prices: The price at which Seller resells transmission rights to the Buyer shall not exceed the highest of (a) the original rate paid by Seller; (b) the applicable transmission provider's maximum rate on file at the time of the sale to the Buyer for service of the same duration: or (c) Seller's own opportunity costs, capped at the applicable transmission providers cost of expansion at the time of the Seller's sale to the Buyer. Seller shall not recover opportunity costs on an incremental basis in connection with such sale without first receiving Commission approval pursuant to a filing under Section 205 of the Federal Power Act.

3.	Records: Seller shall keep such records as may be needed to afford a clear history of all resales of transmission capacity that Seller has reserved or acquired for its own use on its own transmission system or on the transmission systems of other transmission providers under Section III of this Tariff. Seller shall retain the originals of all such records.

IV.	OTHER TERMS AND CONDITIONS

All other terms and conditions shall be established by agreement between Seller and Buyer.

V.	REVISIONS TO THE TARIFF

Seller may file revisions to this Tariff by notifying Buyer in writing and by unilaterally making the appropriate filing with the Commission pursuant to the provisions of Section 205 of the Federal Power Act; provided, however, that such revision shall not affect the rates, terms and
conditions of Transactions entered into prior to the date of such revision, unless otherwise agreed by the Parties.


VI.	AFFILIATE POWER SALES

1.	Offers:  When Seller offers to make any sale of Electric Power to an Affiliate, it shall make the same offer, at the same time, to all non-Affiliates by simultaneously posting such offer of sale on an electronic bulletin board.

2.	Charges:  The rates for sales under this Article VI shall be as negotiated by the parties but in no event will Seller sell Electric Power to an Affiliate under this Tariff at a rate lower than the rate at which Seller sells equivalent Electric Power to any non-Affiliate, even if that rate is higher than the cost ceiling set out In Article II.3.

3.	Sales:  When Seller makes a sale of Electric Power to an Affiliate it will simultaneously post the price charged to such Affiliate on an electronic bulletin board.


SERVICE AGREEMENT
UNDER THE WHOLESALE COST-BASED RATE TARIFF
OF
VIRGINIA ELECTRIC AND POWER COMPANY
PROVIDING FOR
SALES OF ELECTRIC POWER
AND RESALE OF TRANSMISSION RIGHTS

1.0	This Service Agreement, dated as of _____, is entered into by and between Virginia Electric and Power Company ("Seller") and _____________________________ ("Buyer").

2.0	All capitalized terms herein shall have the meaning set forth in Seller's Tariff.

3.0	Seller may provide and Buyer may purchase service under Seller's Tariff.

4.0	Terms and conditions for service shall be agreed to by Seller and Buyer.

5.0	Any notice or request made to or by a Party (Seller or Buyer) regarding this Service Agreement shall be made to the representative of the other Party as indicated below:

      Seller:						Buyer:
      
      
IN WITNESS WHEREOF, the Parties have caused this Service Agreement to be executed by their respective authorized officials.


VIRGINIA ELECTRIC AND POWER COMPANY


By: _____________________	Title: __________________ Date:  _________________
      Name


[INSERT BUYER COMPANY NAME]


By: _____________________	Title: __________________ Date:  _________________
      Name</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>21</filing_id>
      <filing_title>Compliance Filing - Rate Sched No. 122 Transfer from Old DB to New DB</filing_title>
      <filing_type>80</filing_type>
      <associated_filing_id>16</associated_filing_id>
      <associated_record_id>109</associated_record_id>
      <associated_option_code>A</associated_option_code>
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2010-06-01</current_effective_date>
      <ferc_order_date>2013-11-01</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
    <record_data>
      <record_id>111</record_id>
      <option_code>A</option_code>
      <record_title>VEPCO - Third Revised Rate Schedule FERC No. 122</record_title>
      <record_content_desc>Tariff</record_content_desc>
      <record_version_num>0.0.1</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>16777216</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2013-10-04</proposed_effective_date>
      <priority_order>1000000000</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>BORDERLINE INTERCHANGE AGREEMENT

BETWEEN

ALLEGHENY ENERGY SERVICE CORPORATION

AND

VIRGINIA ELECTRIC AND POWER COMPANY



	BORDERLINE INTERCHANGE AGREEMENT
       
       AGREEMENT dated July 15, 1968, as amended May 29, 1969, January 31, 1972, January 1, 1973, January 1, 1975, January 1, 1984, February 1, 1988, January 1, 1992,  April 29, 2005, and November 14, 2005 between ALLEGHENY ENERGY SERVICE CORPORATION ("AESC") acting as agent for The Potomac Edison Company ("Potomac"), Monongahela Power Company ("Mon Power") and West Penn Power Company ("West Penn"), all doing business as Allegheny Power, and VIRGINIA ELECTRIC AND POWER COMPANY ("VEPCO").

WITNESSETH:

       0.01	Each party is engaged in the supply and distribution of electric energy to the public in its chartered territory, and may, from time to time, as demands for service arise in certain parts of its territory, immediately adjacent to that of the other party, find it desirable to obtain from the other party energy to supply customers remote from its present facilities rather than to extend its own lines for such purpose.

ARTICLE 1
SERVICES TO BE RENDERED

1.01	During the term of this Agreement each party will, upon written request of the
other, supply energy to the other at an agreed upon point on or near the boundary line between their respective chartered territories, or at the nearest suitable and convenient point, as may be mutually agreed upon.
1.02	Said energy shall be supplied at sixty (60) cycle alternating current at such
potential and of such phase as may be mutually agreed upon.
	1.03	Said energy shall be measured at the point of supply, or at the nearest suitable and convenient point, by meters installed and maintained by the supplying party.
       1.04	The supplying party will exercise reasonable care to maintain the 
continuity of its service, but shall not be responsible for any damage or loss of revenue caused by any interruption of such service.

   1.05	It is the intent of the parties that the amount of energy received by a party under
this Agreement during any calendar month shall be approximately the same as the amount delivered by such party during such month.  If, however, during any calendar month there is a difference between the total number of kilowatthours received and delivered by a party under this Agreement, the difference shall be settled for by the delivery by or to such party during the succeeding month of a number of kilowatthours equal to such difference, or such other settlement method as may be agreed upon from time to time.

ARTICLE 2
FACILITIES

	2.01	Each party shall, at its own expense, maintain or cause to be maintained in good operating order, the facilities described under its name in Schedule 5, Schedule 6, and Schedule 7 and pay the financial obligations as may be stated in the Schedules.  
	2.02	Either party on whose property facilities of the other party are at any time located or to be located shall provide freedom of access to the other party for the purpose of constructing, reconstructing, maintaining, operating, or removing such facilities.
	2.03	The operation of any switch or circuit breaker on one party's system, which is so located as to be an integral part of the other party's system, will be coordinated between parties to minimize jeopardy to service to customers of either party.

ARTICLE 3
INDEMNITY

3.01	Each party will indemnify and save harmless each other party from all claims,
liability, and expense arising out of any bodily injury, death, or damage to property (other than those caused by such other party or its servants or employees) occurring in or about facilities 

owned or controlled by it, except that each party shall be responsible for all claims of its own employees, agents, and servants under any workmen's compensation or similar law.

ARTICLE 4
GENERAL

       4.01	Neither party shall be considered to be in default in respect of any obligation hereunder if prevented from fulfilling such obligation by reason of any cause beyond its reasonable control, including without limitation strikes and labor disputes.  A party unable to fulfill any obligation by reason of any cause beyond its control will use due diligence to remove such disability with reasonable dispatch.
	4.02	Any waiver at any time of any rights as to any default hereunder or any other matter arising hereunder shall not be deemed a waiver as to any default or other matter subsequently occurring.
	4.03	At any time after the date of this Agreement any party may from time to time call for a reconsideration of the terms and conditions of this Agreement.  If such reconsideration is called for, the authorized representatives of the parties shall meet as promptly as convenient and discuss any of the terms and conditions of this Agreement.  No party shall be under any obligation to agree to any modification or supplement not satisfactory to it.  Any agreement modifying or supplementing such terms and conditions shall specify the date such modification or supplement shall become effective.

ARTICLE 5
TERM
       
       5.01	This Agreement shall continue until  June 1, 2011 and thereafter until terminated as provided for in Section 5.02 below.
	5.02	Either party upon at least 3 years prior written notice to the other may terminate this Agreement.

ARTICLE 6
ARBITRATION

	6.01	Any controversy or claim arising out of or relating to this Agreement or any 
breach of it shall be settled by arbitration in the following manner, and such arbitration shall be 
a condition precedent to any right of action with respect thereto:
(a)  The party desiring an arbitration shall send a demand therefor 
	 by registered mail to each other party, and within fifteen days 
 thereafter each party shall appoint one arbitrator by registered    
 mail notice to the others.  If for any reason less than three   
 arbitrators are so appointed, the one or ones appointed shall 
 appoint enough others to make three.
(b)  The arbitrators shall be at liberty to examine the parties and their 
       witnesses, under oath or otherwise, and their books and 
       documents.
	(c)  The written decision of a majority of the arbitrators shall be final, 
	 binding and conclusive.
	(d)  The costs and expenses of the arbitration shall be borne by the 
	 parties in equal shares.  

ARTICLE 7
REGULATORY AUTHORITIES

7.01	This Agreement is made subject to the jurisdiction of any governmental authority 
or authorities having jurisdiction in the premises.

ARTICLE 8
SUCCESSORS AND ASSIGNS

       8.01	This Agreement shall inure to and bind the successors and assigns of the parties. This Agreement shall not be assigned by any party without the written consent of the others except to a corporation into which such party shall be merged or with which it shall be consolidated or to a corporation resulting from any merger or consolidation to which such party shall be a party or to a person or corporation to which substantially all the business and assets of such party shall be transferred.
ARTICLE 9
AGENCY RELATIONSHIP
  
  	9.01	For purposes of this Agreement, AESC is acting as agent for Potomac, Mon Power and West Penn, all doing business as Allegheny Power.  

IN WITNESS WHEREOF each of the parties has caused this amended Agreement to be
duly executed.						

ALLEGHENY ENERGY SERVICE CORPORATION, ACTING AS AGENT FOR THE POTOMAC EDISON COMPANY, MONONGAHELA POWER COMPANY AND WEST PENN POWER COMPANY, ALL DOING BUSINESS AS ALLEGHENY POWER

By:  ___________________________
                                                                                 James R. Haney, Vice President


VIRGINIA ELECTRIC AND POWER COMPANY

By:  ___________________________
Scot C. Hathaway
Vice President - Transmission



SCHEDULE 1
FACILITIES

[RESERVED]



SCHEDULE 2
FACILITIES

[RESERVED]




SCHEDULE 3
FACILITIES

[RESERVED]


SCHEDULE 4
FACILITIES

[RESERVED]




SCHEDULE 5
FACILITIES

Millville to Hillsboro

A.		Facilities to be Provided and Maintained by VEPCO:
a. From an existing 34.5 kV circuit at Hillsboro, Virginia, to the West Virginia State Line near Highway No. 9, a 34.5 kV circuit, approximately six miles in length with three phase conductors of 477 kcmil aluminum.
b. At Hillsboro, appropriate switching facilities to connect to the existing circuit. 
c. At the West Virginia State Line, a 34.5 kV airbreak switch to connect with the Potomac 34.5 kV circuit described in B-b below.
B.		Facilities to be Provided and Maintained by Potomac:
a. At Millville Substation, one 34.5 kV terminal consisting of one automatic oil circuit breaker with necessary disconnect switches and relaying; one automatic voltage regulator.
b. From Millville Substation to the Virginia State Line near Highway No. 9, a 34.5 kV circuit approximately two miles in length with three phase conductors of 556.5 kcmil aluminum.  
c. Appropriate metering at 34.5 kV at Millville Substation.



SCHEDULE 6
FACILITIES

Gordonsville to Pratts

I.		Facilities to be constructed and maintained by VEPCO:
a.	At Gordonsville Substation, a 115 kV bus and 115 kV terminals for VEPCO's internal 115 kV facilities.
       II.		Facilities to be constructed and maintained by Potomac:
a. At Gordonsville Substation one 115 kV line terminal and substation bay, connecting to VEPCO's 115 kV bus, including one automatic oil circuit breaker with necessary disconnect switches and relaying and other necessary appurtenances.
b. At Pratts Substation, one 115 kV terminal consisting of one motor operated air break switch, a 35 MVA, 115-34.5 kV transformer with a 115 kV circuit switcher and a 34.5 kV motor operated air break switch.
c. From Pratts Substation to VEPCO's Gordonsville Substation, approximately 17 miles of 115 kV line consisting of three phase 954 kcmil aluminum conductors, steel reinforced.
d. Appropriate metering at Pratts Substation, compensated to the 115 kV bus at Gordonsville.




SCHEDULE 7
FACILITIES

Lovettsville

I. Facilities to be constructed and maintained by Virginia Power:

a. A 138-34.5 kV substation near the Town of Lovettsville, Virginia which will include facilities necessary to connect to Potomac's Doubs-Millville 138 kV transmission line.

b. Install 34.5 kV metering structures.  A remote terminal unit (RTU) installed at Lovettsville Substation by Virginia Power will be used to report MWh information to Potomac Edison and Virginia Power through auxiliary ports. A solid state meter will be installed and can be accessible to both parties for interrogation.

II.	Facilities to be constructed and maintained by Potomac:

a. The necessary 138 kV in-line structures and extension of conductors to Virginia Power's Lovettsville Substation.

b. Appropriate metering at 34.5 kV at Lovettsville Substation.

III.	Financial Obligations:

a.	Virginia Power to reimburse Potomac Edison for the costs incurred to develop the new delivery point except metering cost.</record_plain_text>
      <record_change_type>NEW</record_change_type>
      <filing_id>22</filing_id>
      <filing_title>Compliance Filing - 2 Rate Sched 122 Transfer Amded Old DB to New DB</filing_title>
      <filing_type>80</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2010-06-01</current_effective_date>
      <ferc_order_date>2013-11-01</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
    <record_data>
      <record_id>118</record_id>
      <option_code>A</option_code>
      <record_title>Nominal Voltage</record_title>
      <record_content_desc>Schedule B</record_content_desc>
      <record_version_num>0.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>25231360</collation_value>
      <record_parent_id>115</record_parent_id>
      <proposed_effective_date>2014-02-19</proposed_effective_date>
      <priority_order>1000000000</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>Schedule B






Nominal Voltage

						  4.6   kV
						12.5  kV
						34.5  kV
						 115  kV
						 230  kV</record_plain_text>
      <record_change_type>NEW</record_change_type>
      <filing_id>29</filing_id>
      <filing_title>Rate Schedule No. 102 - NCEMPA</filing_title>
      <filing_type>10</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2014-02-19</current_effective_date>
      <ferc_order_date>2014-04-08</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
    <record_data>
      <record_id>115</record_id>
      <option_code>A</option_code>
      <record_title>Rate Schedule No. 102 - NCEMPA</record_title>
      <record_content_desc>Tariff</record_content_desc>
      <record_version_num>0.0.0</record_version_num>
      <record_narrative_name>Agreement for Transmission Use and Other Electric Service</record_narrative_name>
      <collation_value>25165824</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2014-02-19</proposed_effective_date>
      <priority_order>1000000000</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>AGREEMENT FOR TRANSMISSION USE AND
OTHER ELECTRIC SERVICE
BETWEEN
VIRGINIA ELECTRIC AND POWER COMPANY
AND
NORTH CAROLINA MUNICIPAL POWER AGENCY NUMBER 3






	





	This Agreement for Transmission Use and Other Electric Service, dated as of July 30, 1981, as revised, shall be utilized for Virginia Electric and Power Company to provide service to North Carolina Municipal Power Agency Number 3 and provides as follows:

ARTICLE I
Definitions
      The following definitions shall be included as part of the Agreement:
      1.1 Agreement.  This Agreement for Transmission Use and Other Electric Service, dated as of July 30, 1981, as revised, between Vepco and Power Agency.
      1.2 Delivery Points.  The points of connection between the Vepco System and the Power Agency System.  The Delivery Points shall be as shown on Schedule A.  For all Future Delivery Points whenever established, the points shall be at the high voltage side of the transformation facilities.
      1.3	FERC.  The Federal Energy Regulatory Commission including any successor governmental agency.
      1.4 Parties.  Vepco and Power Agency (including, where "Power Agency System" is used in this Agreement, Power Agency Participants).
      1.5 Power Agency.  North Carolina Municipal Power Agency Number 3, a body corporate and politic, its successors and assigns.
      1.6 Power Agency Participants.  Those members of Power Agency listed on Schedule A.  Such members are sometimes referred to herein as "Participants."
      1.7 Power Agency System.  Facilities owned by Power Agency or any of its Participants.
      1.8 Prudent Utility Practices.  The practices generally followed by the electric utility industry and as changed from time to time, which generally include, but may not be limited to, engineering, operating and economic feasibility considerations.
      1.9 Vepco.  Virginia Electric and Power Company, a Virginia public service corporation, its successors and assigns.
      1.10 Vepco System.  The generation, transmission, distribution and other facilities owned and operated by Vepco.
ARTICLE II
Availability
      2.1 Vepco will make available to Power Agency Vepco's transmission and distribution facilities as needed to transfer power for Power Agency.  Power Agency recognizes that it has the responsibility for delivery of power to be transferred by Vepco hereunder to the Vepco transmission system.  Where the transfer is to the Delivery Points, Vepco shall provide adequate transmission and distribution facilities as needed to transfer power for loads existing on the effective date of this Agreement and for normal load growth thereafter.  Power Agency will notify Vepco promptly when extraordinary loads are anticipated on that portion of Power Agency's System being provided transmission service by Vepco.  Where a load at a Delivery Point is in excess of that reasonably anticipated, Vepco shall make every reasonable effort to transfer power for such load in a timely fashion but shall not be responsible for delays in providing adequate service where such delays are beyond Vepco's reasonable control.  
      2.2 If Power Agency shall purchase power from, or sell power to, or exchange power with any entity other than Power Agency Participants, Power Agency may utilize Vepco's transmission and distribution facilities for such purpose, but shall compensate Vepco for the cost of modifications to the Vepco System to the extent such modifications are necessary to accommodate such sales, purchases or exchanges.  Vepco will utilize Prudent Utility Practices as the basis for developing the required modifications and for determining whether the costs of such modifications shall be shared by the Parties.  Similar compensation shall be provided for modifications to the Vepco System necessitated by Power Agency's installation of generating resources within the Vepco System.
      2.3  (a)	Vepco shall be under no obligation to transfer power to Power Agency or to make available power to Power Agency in excess of that delivered to Vepco for the account of Power Agency.  In the event Power Agency's resources shall be insufficient to supply Power Agency Participants' loads or other emergency shall impair or jeopardize Power Agency's ability to meet its Participants' loads, Vepco shall make every reasonable effort to supply emergency energy, provided, however, that Vepco is not obligated to deliver such energy when in its sole judgment such delivery is inconsistent with its other obligations or would unduly impair or jeopardize service on its system, the Power Agency System or on systems interconnected with Vepco.
            (b) If emergency service is provided, it shall be paid for by Power Agency at the following rate:
(i) For energy generated on the Vepco system, an energy charge per kWh based on the incremental cost of such energy.
(ii) For energy or capacity purchased from a third party on whatever basis it is sold to Vepco at a cost in excess of the Company's system incremental cost, Vepco's total cost including demand, capacity and any other charges which otherwise would not have been incurred by Vepco.
(iii)	For emergency service extending beyond 24 hours for a single emergency, an additional capacity charge of $0.12 per kilowatt per day shall be imposed.
(iv)	For all emergency service provided, a charge of one (1) mill per kWh shall be added to the charges described in (i), (ii), and (iii) above.

ARTICLE III
Delivery Points
      3.1 Delivery Points.  Vepco and Power Agency, during the term of this Agreement, will remain connected at Delivery Points.  Unless otherwise mutually agreed upon, Power Agency or its Participants shall be responsible for, operate and maintain all facilities, including transformation and metering equipment, on the Power Agency System side of the Delivery Points, and these facilities shall be operated and maintained in accordance with Prudent Utility Practices. Unless otherwise mutually agreed upon, Vepco shall own, operate and maintain all facilities on the Vepco side of the Delivery Points, and these facilities shall be operated and maintained in accordance with Prudent Utility Practices.
      3.2	Sale or Lease of Facilities.  (a)  As provided by Section 3.1, facilities beyond the Delivery Point are the responsibility of Power Agency or its Participants.  
            (b)	Whenever Power Agency or a Participant requests Vepco to supply electricity in a manner which will require facilities in excess of those Vepco is committed to provide under this Agreement and Vepco is agreeable to providing such facilities, Vepco will lease such facilities to Power Agency.
            (c) Where facilities are leased, Power Agency shall pay to Vepco monthly a facilities charge consisting of:
a. 1.67% of the estimated installed cost of all distribution equipment and facilities (rated below 69 kV).
b. 1.30% of the estimated installed cost of all transmission equipment and facilities (rated 69 kV and above).
("Estimated installed cost" shall be defined as 110% of the original cost as reflected on the Company's books at the time the charges are made.)  The total monthly leasing charges are set forth in Schedule A.
            (d) If the use of such facilities is terminated within fifteen (15) years from the initial connection or last change of such leased facilities, reimbursement of Vepco expenses by Power Agency will be made in accordance with Section 8.4 hereof.
      3.3 Existing Delivery Points.  Existing Delivery Points are defined as those points where electric power and energy are transferred from Vepco System facilities to facilities owned by Power Agency or one of its Participants as listed on Schedule A hereto. 
      3.4 Modifications to Delivery Points.  Modifications to existing Delivery Points shall be made consistent with Prudent Utility Practices and each Party shall bear its own costs incurred as a result of such change.  Where Vepco facilities are not adequate to provide for the modification, the modification shall be treated as a Future Delivery Point pursuant to Section 3.5.
	In the event that a Delivery Point leased by Power Agency is modified at the request of Power Agency, the costs incurred by Vepco in removing Vepco-owned equipment that is to be replaced or otherwise is no longer required shall be billed to and payable by Power Agency in the next regular monthly invoice rendered to Power Agency by Vepco pursuant to the Agreement.  The costs incurred by Vepco in providing mobile transformer facilities to provide temporary service during such modification to a leased Delivery Point, if such temporary service is requested by Power Agency, shall be billed to and payable by Power Agency in the same manner.
	Vepco's costs of providing and installing new equipment in connection with such a modification shall be paid by Power Agency through future monthly lease charges pursuant to Section 3.2. hereof. The estimated installed cost on which such charges are based shall be based on (i) the book original cost of the original, unmodified facilities, less (ii) the book original cost of equipment removed, plus (iii) the book original cost (including the costs of installation) of equipment added to the Delivery Point.  The resulting book original cost shall be multiplied by 110 percent to determine the estimated installed cost to which the monthly leased facility charge rates specified in Section 3.2(c) hereof are applied.
	The costs of modifications to leased Delivery Points when such modifications are not requested by Power Agency shall be borne by Vepco.  The monthly lease charges payable by Power Agency shall continue to be based on the book original costs (multiplied by 110 percent) of the original unmodified facilities, without regard to such modifications.
	A modification to the facilities leased to Power Agency at a Delivery Point required to accommodate increased load of Power Agency or a Power Agency Participant shall, for the purpose of applying the foregoing understandings, be deemed to have been requested by Power Agency.  Modifications to the facilities leased to Power Agency at a Delivery Point that are occasioned by the failure of equipment shall, for the same purpose, be deemed to have been requested by Vepco and not by Power Agency.
	Vepco shall continue to perform the normal repair and maintenance on leased Delivery Points, including ordinary replacements and increases in capacity. Vepco shall plan for and undertake such normal repair and maintenance in accordance with its usual practices, consistent with Prudent Utility Practice. Modifications made to a leased Delivery Point in connection with such normal repair and maintenance, including ordinary replacements and increases in capacity, shall not be treated as a Future Delivery Point. That is, the second sentence of this Section 3.4 is, with respect to leased Delivery Points, intended to refer to extraordinary modifications (i.e., modifications that are not associated with normal repair and maintenance, including ordinary replacements and increases in capacity) and to facilities on Vepco's side of a Delivery Point, not the Delivery Point itself.
      3.5 Future Delivery Points.  Future Delivery Point locations will be established consistent with Prudent Utility Practices.  In establishing Future Delivery Points, in all cases, Power Agency shall bear the costs of those facilities installed to provide the connection at the point where adequate Vepco facilities exist at the time of the connection, and Power Agency shall be responsible for constructing all facilities on the Power Agency System side of the Delivery Point.  Future Delivery Points shall be established at 230 kV or 115 kV at the option of Vepco, exercised consistent with Prudent Utility Practices, except in the case of small loads where Vepco may agree to provide service at lower voltage levels.
      3.6 Filing Fees.  Filing fees required in implementing this Agreement or arising from changes in this Agreement will be borne equally by the Parties.
      3.7 Characteristics of Electricity.  Vepco will deliver three phase, 60 Hertz alternating current electricity at one of Vepco's nominal voltages available at the point of connection as listed in Schedule B.  Vepco shall operate its system so that Power Agency's voltage at each Delivery Point is within the range Vepco would maintain for its own purposes under similar circumstances.
      3.8 Unusual Operating Conditions.  Power Agency and its Participants will develop load curtailment plans that provide schedules for voltage reductions, voluntary load curtailments and manual load shedding.  These plans will provide for sufficient load reduction in case the resources of Power Agency are insufficient to meet its loads.  In the event such load reductions become necessary, Vepco shall promptly notify Power Agency by telephone of the need to interrupt and Power Agency and its Participants will cooperate by interrupting load to the extent required.  When Power Agency's resources (including those made available by Vepco pursuant to Section 2.3 hereof) are insufficient to supply Power Agency's load and when Power Agency or a Participant has not interrupted load to the extent required, Vepco shall have the right to disconnect sufficient Power Agency load to maintain the balance between loads and resources.  To the extent feasible, Vepco shall consult with Power Agency and shall effectuate any disconnection as nearly as practical in the manner requested by Power Agency.
      3.9 Access at Delivery Points.  Power Agency and Vepco will have the right of access at all Delivery Points at all reasonable times for the purpose of isolating the Delivery Point from the Vepco System pursuant to Section 3.8 hereof and for any other proper purpose.
      3.10 Notification of System Changes.  Power Agency shall notify Vepco in advance, and Vepco shall notify Power Agency in advance, of any changes to be made in their respective systems which will affect the proper coordination of protective devices of the two systems.  Power Agency and Vepco shall each be responsible for selection, installation, adjustment and setting, and maintenance of their own control and protective equipment.  In no case shall operation of this equipment by either Vepco or Power Agency or its Participants place a burden upon or cause avoidable interruptions to the other's system.
      	3.11	Supply of Data.  On or about July 1 of each year, Power Agency shall supply to Vepco a twenty (20) year forecast of demand and energy values for each year for each Participant.  The demand values shall be reported as the estimated winter and summer loads of the Power Agency Participants.  For this purpose, the winter period shall be November and December of one year and January and February of the year next following; and the summer period shall be June, July, August and September.  On request, Power Agency shall also provide Vepco with the methodology underlying each forecast.  For the first forecast provided, Power Agency shall provide all historical data used in developing the forecast and indicate the types of measurements and locations thereof.  On or about July 1 of each year, VEPCO shall supply to Power Agency a ten (10) year forecast of system peak demand and energy values for each year and a generation and bulk power transmission expansion plan.  On request, Vepco shall also provide Power Agency with the methodology underlying each forecast. 
      3.12	Metering.  (a)  Suitable metering shall be installed to measure all power delivered to Vepco by or on behalf of Power Agency and to measure all deliveries by Vepco to Power Agency or its Participants.  Power Agency shall be responsible for all metering at the Delivery Points.
			(b)	All meters will be sealed and seals will be broken only by the owning Party and only when meters are to be tested or adjusted.  Meters will be tested at suitable intervals and the accuracy of registration shall be maintained in accordance with Prudent Utility Practices.  At the request of either Party a special test of any meter owned by a Party will be performed.  All costs of such a test will be paid by the Party requesting the test, unless meter inaccuracy as defined in Section 3.12(c) is discovered.  Costs then will be borne by the owning Party.  Representatives of Power Agency or its Participants and Vepco shall be afforded the opportunity to be present at all routine or special tests.  Power Agency or its Participants and Vepco shall have the right to install check metering for any Delivery Point without charge by the Party owning the metering equipment.
		(c)	Any metering equipment found to be inaccurate by more than two (2) percent will be promptly replaced, repaired or readjusted by the owner of such inaccurate metering equipment.  Adjustments made for metering inaccuracy will be made for the period the inaccuracy is known, or for a mutually agreed upon period, if not known, or lacking knowledge or agreement, a period of three months from the date of discovery of the inaccuracy.
		(d)	Delivery Point metering will be installed at the Delivery Point if practical as determined by the Party owning the metering.  Where metering is installed at some other place than the Delivery Point, adjustments will be made to permit readings to be determined as though they were at the Delivery Point.
ARTICLE IV
Protection of Systems
      4.1 Obligations for Adequate Facilities.  Vepco and Power Agency or its Participants are obligated to provide, or cause to be provided, on their own systems, facilities adequate to serve expected loads and to maintain these facilities in a suitable condition of repair so that they may be operated in accordance with Prudent Utility Practices and not impose a burden on any other system.
      4.2 Protection of Systems.  (a)  Vepco and Power Agency or its Participants will install, maintain and operate, or will cause to be installed, maintained and operated, such protective equipment and switching, voltage controls, load shedding and emergency facilities as required to assure continuity and adequacy of the Vepco System and the Power Agency System.  Such protective equipment shall specifically include an appropriate device to permit physical disconnection between the Power Agency System and the Vepco System.
            (b) Power Agency shall refrain from, and shall require its Participants to refrain from any acts, transactions, and uses of equipment, appliances or devices which may have a significant adverse effect upon the reliability or characteristics of the Vepco System.  Vepco shall refrain and shall require its customers to refrain from any acts, transaction, and uses of equipment, appliances or devices which may have a significant adverse effect upon the reliability or characteristics of the Power Agency System.




ARTICLE V
Rates, Billing and Payment
      5.1 Rates.  Power Agency will pay the Company monthly transmission service charges as provided in Schedule TS-A hereto.  Where Power Agency's generating resources are outside of the Vepco transmission service area, such monthly transmission service charges shall include appropriate compensation to Vepco for the reduction in transfer capability into the Vepco system that is attributable to Vepco's providing firm transmission service to Power Agency.  If Vepco's reduction in transfer capability into the Vepco System is reduced or eliminated because of changes in firm transmission service to Power Agency, appropriate recognition shall be made in establishing rates.
      5.2 Supply of Data.  Power Agency shall supply to Vepco, or cause to be supplied to Vepco, no later than the 10th day of each month, data to permit Vepco to compute the transmission service charges for the previous month pursuant to Section 5.1.  Such data shall be separately aggregated as between loads served at 69 kV and above and loads served below 69 kV and shall include, for each Delivery Point, (1) the kilowatthours delivered for each clock hour; (2) a continuous integrating record of kilowatthours delivered; and (3) an hourly record to indicate the kilovarhours.
      5.3 Billing and Payment.  (a) Vepco shall render Power Agency a monthly invoice. All payments to Vepco by Power Agency shall be made within fifteen (15) days from the day the invoice is mailed to Power Agency and considered past due thereafter. No challenge, disagreement or dispute relating to the reasonableness or correctness of any invoice rendered by Vepco shall permit Power Agency to delay or withhold any payment due hereunder. If payment is not received in full within fifteen (15) days from the date invoice is mailed (postage prepaid), a late payment charge shall accrue on the unpaid balance from the past due date and continue until settlement. A late payment charge shall accrue on the account balance at a variable annual percentage rate equal to 1.5 times the Prime Rate of Morgan Guaranty Bank as established by such bank from time-to-time as a reference for fixing the lending rate on commercial loans to its most favored customers. The rate shall be established as of the day the bill first becomes overdue and the late payment charge shall be accrued at that rate until the first business day of the following month. On the first business day of the following month and on the first business day of each subsequent month, the rate shall be adjusted to equal 1.5 times the Prime Rate of Morgan Guaranty Bank as of each such date. The rate so established shall remain fixed, and late payment charges shall be accrued at that rate, during the ensuing month.
            (b) Should it be determined that Vepco's invoice was rendered in error, either over or under the current amount due, the difference will be refunded or collected with simple interest on the difference between the amount paid and the amount actually due. Interest shall accrue from the date of payment of the original invoice through the date of payment of the adjustment. Interest shall be calculated by applying an effective interest rate equal to one (1) percentage point below the Prime Interest Rate (as charged by Morgan Guaranty Bank in New York) at the time the original invoice was paid by the Power Agency. Interest will not accrue on adjustments of less than $5,000.
            (c) Interest will not accrue on adjustments relating to metering equipment inaccuracies made in accordance with Section 3.12 (c).
            (d) Interest on refunds or additional charges resulting from implementation of rates in accordance with FERC orders will be paid in a manner prescribed by the Federal Energy Regulatory Commission.
	5.4	Billing Disagreement.  A billing disagreement will occur when Power Agency disputes a bill as rendered.  When resolution of disagreements is not achieved within fifteen (15) days after mailing or presentation, the bill must be paid as submitted or the late payment charge will accrue.
      5.5 Access to Vepco's Books and Records.  During normal business hours and subject to conditions consistent with the conduct by Vepco of its regular business affairs and responsibilities, Vepco will provide Power Agency or Power Agency's authorized representative(s) access to Vepco's books, records, and other documents and, upon request, copies thereof, which relate to the transactions described in this Agreement.  Power Agency will bear the cost of any copying, review or audit of such books and records.  Notwithstanding the foregoing, however, Vepco shall not be required to make available to Power Agency any reports and information relating to personnel practices, staffing or labor relations.
      5.6 Access to Power Agency's Books and Records.  During normal business hours and subject to conditions consistent with the conduct by Power Agency of its regular business affairs, Power Agency will provide Vepco or Vepco's authorized representative(s) access to Power Agency's books, records, and other documents and, upon request, copies thereof, which relate to the transactions described in this Agreement. Vepco will bear the cost of any copying, review or audit of such books and records. Notwithstanding the foregoing, however, Power Agency shall not be required to make available to Vepco any reports and information relating to personnel practices, staffing or labor relations.



ARTICLE VI
Maintenance of Power Factor
      6.1 Power Factor Limits.  Neither Power Agency nor Vepco shall be obligated to deliver or receive reactive volt-amperes for the benefit of the other.  At the time of Vepco's monthly peak, Power Agency shall require each Participant to maintain a power factor of 92% or higher at each of that Participant's Delivery Points.  During the daily off-peak period from 
10:00 p.m. to 7:00 a.m. (E.S.T.) on weekdays and on all Saturdays and Sundays, Power Agency shall not deliver reactive volt-amperes to the Vepco System.
      6.2 Payment for Deviations from Power Factor Limits.  Power Agency shall pay Vepco $0.20 per kilovar per month for the total number of kilovars required to improve to 92% lagging the power factor at each of Power Agency Participant's Delivery Points at the time of the monthly system peak.  Power Agency shall pay Vepco $0.40 per kilovar per month at each Delivery Point for the minimum number of kilovars supplied by Power Agency Participants to the Vepco system during any one hour in each month in the off-peak hours designated in Section 6.1.

ARTICLE VII
Liability, Service Interruptions and Force Majeure
      7.1 Liability.  (a)  In providing the services called for by this Agreement, Vepco shall use reasonable diligence at all times to provide reliable service.  Vepco, however, does not guarantee continuous service.  In addition to all other limitations on liability contained in this Agreement, neither Party hereto shall be liable to the other Party to this Agreement for any damage or loss resulting from the interruption, prevention, suspension or failure of service caused by:
(i) Force Majeure, as defined in Section 7.3 below; and/or
(ii) An emergency action due to an adverse condition or disturbance on a Party's system, or on any other system directly or indirectly interconnected with a Party's system, which requires automatic or manual interruption of the supply of electricity to some customers or areas in order to limit the extent of, or damage caused by, the adverse condition or disturbance, or to prevent damage to generating or transmission facilities, or to expedite restoration of service, or to effect a reduction in service to compensate for an emergency condition on an interconnected system; and/or
(iii) The making of necessary inspections of, adjustments to, changes in, or repairs to a Party's lines, substations or other facilities and in cases where the continuation of service would endanger persons or property.
      7.2 Responsibility on Either Side of Delivery Point.  Neither Party shall be responsible for the transmission, control, use or application of electric power provided under this Agreement on the other Party's System.  Electricity is transmitted by Vepco to Power Agency upon the express condition that after it passes the Delivery Point it becomes the property of Power Agency, and neither Party, unless and except to the extent that such results from the negligence or misuse of the property on the part of its own employees or agents, subject to the limitations of Section 7.1, will be liable for loss or damage to any person or property whatsoever, resulting directly or indirectly from the use, misuse, or presence of the said electricity, on the other Party's System or for any loss or damage resulting from the presence, character, or condition of the wires or equipment of the other Party, nor shall it be responsible for the inspection or repair of such wires or equipment.
      7.3 Force Majeure.  Vepco and Power Agency shall not be liable or responsible for any delay in the performance of, or the ability to perform, any duties or obligations required by this Agreement when such delay in performance or inability to perform results from a Force Majeure occurrence, except that the obligation to pay money in a timely manner is absolute and shall not be subject to the Force Majeure provisions.  Force Majeure as used herein shall mean without limitation, the following:  acts of God, strikes, lockouts or other industrial disturbances; acts of public enemies; orders, or absence of necessary orders and permits of any kind which have been properly applied for, from the Government of the United States or from any State or Territory, or any of their departments, agencies or officials, or from any civil or military authority; extraordinary delay in transportation; inability to transport, store or reprocess spent nuclear fuel; unforeseen geologic conditions; equipment, material, supplies, labor or machinery shortages; epidemics; landslides; lightning; earthquakes; fire; hurricanes; tornadoes; storms; floods; washouts; drought; war; civil disturbances; explosions; breakage or accident to machinery, generation, transmission and/or distribution facilities, pipes or canals; partial or entire failure of utilities; breach of contract by any supplier, contractor, subcontractor, laborer or materialman; sabotage; injunction; blight; famine; blockage; quarantine; or any other similar cause or event not reasonably within the control of Vepco and/or Power Agency.
      7.4 Remedy.  A Party suffering an occurrence of Force Majeure shall remedy with all reasonable dispatch the cause or causes preventing such Party from carrying out its duties and obligations as required in this Agreement; provided, that the settlement of strikes, lockouts and other industrial disturbances shall be entirely within the discretion of that Party, and it shall not be required to make settlement of strikes, lockouts, or other industrial disturbances by acceding to the demands of the opposing party or parties when such course is unfavorable in the judgment of such employer.

ARTICLE VIII
Term of Agreement
      8.1 Effective Date.  This Agreement shall become effective as of July 30, 1981.
      8.2 Termination of Agreement.  Unless earlier terminated pursuant to the provisions of Article X, this Agreement shall terminate upon the mutual agreement of the Parties or ten years after written notice is given by either Party of its intent to terminate service.  Between January 1, 2007 and December 31, 2035, Vepco will continue to provide transmission service, but this Agreement shall in no way limit the basis for such service.
      8.3 Termination of Delivery Point.  Unless otherwise mutually agreed upon in writing by the Parties, service at a Delivery Point shall not be terminated by Power Agency prior to the expiration of five years' written notice to Vepco, but such notice shall not be applicable to terminate all or substantially all service under this Agreement.
      8.4 Reimbursement of Vepco Expenses.  Where a change occurs in leased facilities provided by Vepco under Section 3.2 hereof or where a Delivery Point is terminated under Section 8.3 above, and such termination is not advantageous to Vepco, Power Agency shall reimburse Vepco for expenses as follows:
		(a)	Where rights of way utilized to provide service to Power Agency or Power Agency or Power Agency Participants are utilized for a period of less than 15 years, Vepco will require Power Agency to pay to Vepco the total cost of acquiring all rights-of-way which are abandoned within twelve months after any aforesaid event, and upon such payment the Power Agency shall have the right to have transferred to it or to its Participant, subject to the approval of Vepco's Board of Directors, whatever interests in said rights-of-way Vepco may legally convey; provided that, if Vepco's Board of Directors does not approve the transfer, Vepco shall not require such payment.
            (b) Where equipment is installed or transmission lines are modified or installed to provide service to Power Agency or its Participants, Power Agency shall reimburse Vepco if a Delivery Point is removed or rearranged, or if the request for service is cancelled prior to service having commenced and the removal, rearrangement or cancellation causes such equipment or line to no longer be in service.  Where such reimbursement is appropriate, Power Agency shall pay Vepco:
(i) For the original installed cost (for line facilities, being the year's average installed cost on units of property installed throughout Vepco's System in each calendar year), plus the estimated removal cost, less salvage, on all Vepco facilities installed to provide such service and removed as a result of such termination or modification,
plus, if applicable,
		(ii)	The original installed cost (defined as in (i) above), to rearrange and/or relocate such facilities to serve such Delivery Point plus the cost to return such facilities to their condition prior to serving such Delivery Point if such facilities are changed as a result of any such event;
less,
(iii)	A credit of 1/180th of such reimbursement for each full month Vepco's  facilities were utilized to serve Power Agency or its Participant, except that no credit will apply if such facilities were utilized for a period less than three years.
            (c) In computing the time a right-of-way or facility has been utilized, the date of first utilization shall be the first day of any service to either Power Agency or a Participant even if it occurred prior to the date of this Agreement.

ARTICLE IX
Regulatory Matters
      9.1 This Agreement shall be filed with FERC.  Power Agency will join in Vepco's request that this Agreement be accepted for filing without suspension and will support the provisions of this Agreement.
      9.2 Nothing contained herein or in any of the Appendices hereto shall be construed as affecting in any way the right of Vepco to unilaterally make application to FERC for a change in the level of any rate at any time under Section 205 of the Federal Power Act and pursuant to the Rules and Regulations promulgated thereunder.  Power Agency retains the right to contest any rate filings made pursuant to this section.


ARTICLE X
Termination for Non-Payment
      10.1 Termination.  If any amount due under this Agreement shall not be paid within thirty (30) days after the date on which such payment becomes dues and payable, Vepco shall have the right to give Power Agency written notice that it intends to terminate this Agreement.  If such non-payment shall not have been fully cured within thirty (30) days from the date of the notice, Vepco shall have right to terminate service under this Agreement.  Such termination may occur only after sixty (60) days notice duly given to FERC.
      10.2 No Remedy Exclusive.  No remedy conferred upon or reserved to Vepco in this Article X is intended to be exclusive of any other remedy or remedies available hereunder or now or hereafter existing at law, in equity, or by statute or otherwise, but each and every such remedy shall be cumulative and shall be in addition to every other such remedy.  The pursuit by any Party of any specific remedy shall not be deemed to be an election of that remedy to the exclusion of any other or others, whether provided hereunder or by law, equity or statue.

ARTICLE XI
Miscellaneous
      11.1 Actions Required by Participants.  Whenever in this Agreement a required action may be taken by Power Agency or one or more Participants, Vepco reserves the right to require Power Agency, after reasonable notice to Power Agency, to take such action or cause such action to be taken.
      11.2 No Delay.  No disagreement or dispute of any kind between the Parties to this Agreement or between a Party and any other entity, concerning any matter, including, without limitation, the amount of any payment due from said Party or the correctness of any billing made to the Party, shall permit either Party to delay or withhold any payment or the performance of any other obligation pursuant to this Agreement.  Each Party shall promptly and diligently undertake to resolve such disagreement or dispute without undue delay and in good faith.
      11.3 Notice.  Any notice or other communication permitted or required by this Agreement shall be in writing and shall be deemed given when delivered by hand or (unless otherwise required by the terms of this Agreement) when deposited in the United States mail, first class postage, prepaid and if to Vepco, addressed to:
		Senior Vice President - Power Operations
		Virginia Electric and Power Company
		P.O.  Box 26666
		Richmond, Virginia 23261

and if to Power Agency, addressed to:

			General Manager
			North Carolina Municipal Power Agency Number 3
			P.O. Box 95162
			Raleigh, North Carolina 27625

unless a different officer or address shall have been designated by the respective Party by notice in writing sent to the other Party hereto.
	11.4	Heading Not to Affect Meaning.  The descriptive headings of the various articles and sections of this Agreement have been inserted for convenience of reference only and shall in no way modify or restrict any of the terms and provisions hereof.
	11.5	No Association, Trust, Joint Venture or Partnership.  Notwithstanding any provision of this Agreement, the Parties do not intend to create hereby any association, trust, joint venture or partnership under the law of Virginia and, if it should appear that one or more changes to this Agreement would be required in order to avoid the creation or terminate the existence of any such entity, the Parties agree to negotiate promptly and in good faith with respect to such changes.
	11.6	Successors and Assigns.  This Agreement shall be binding upon, and shall inure to the benefit of, Vepco and Power Agency, and their respective successors and assigns.
	11.7	Counterparts.  This Agreement may be executed simultaneously in two or more counterparts, each of which shall be deemed an original but all of which together shall constitute one and the same instrument.
	11.8	Severability.  In the event any of the terms, covenants or conditions of this Agreement or amendments thereof or the application of any such term, covenant or condition or amendment thereof shall be held invalid as to a Party or circumstance by any court or government agency having jurisdiction, all of the other terms, covenants or conditions of this Agreement and amendment thereof shall not be affected thereby and shall remain in full force and effect.
	11.9	Applicable Law.  This Agreement is made under and shall be governed by the laws of the State of Virginia.
	11.10	No Waiver.  The failure of either Party to enforce at any time any of the provisions of this Agreement or to require at any time performance by the other Party of any of the provisions hereof, shall in no way be construed to be a waiver of such provisions, nor in any way to affect the validity of this Agreement or any party hereof or the right of such Party thereafter to enforce each and every such provision.
	11.11	Computation of Time.  In computing any period of time prescribed or allowed under this Agreement, the day on which the act or event occurs after which the designated period of time begins to run shall not be included.  The last day of the period so computed shall be included if it is a business day; if it is not a business day, the period shall run until the end of the next day which is a business day.  The term "business day" shall mean any day other than a day on which banking institutions in the City of Richmond, Virginia are authorized by law to close.
	11.12	Survivorship of Obligations.  The termination of this Agreement shall not discharge either Party hereto from any obligation it owes to the other Party under this Agreement by reason of any transaction, loss, cost, damage, expense or liability which shall occur or arise (or the circumstances, events or basis of which shall occur or arise) prior to such termination.  It is the intent of the Parties hereby that any such obligation owed (whether the same shall be known or unknown at the termination of this Agreement or whether the circumstances, events, or basis of the same shall be known or unknown at the termination of this Agreement) shall survive the termination of this Agreement.
	11.13	Non-Exclusive Agreement.  Subject to the limitations in this Agreement, Vepco shall have the right at all times to execute interconnection agreements with any other persons on the same or different terms and conditions as those stated herein, but no such other agreements shall diminish any rights of the other Party hereunder.
	11.14	Relationship of the Parties.  The duties, obligations, and liabilities of the Parties herein are intended to be several and not joint or collective, and nothing herein contained shall ever be construed to create an association, trust, joint venture or partnership or impose a trust or partnership duty, obligation or liability on or with regard to the Parties.  The Parties shall be individually responsible for their own obligations as provided herein.  Neither of the Parties shall have the right to bind the other Party.
	11.15	Singular and Plural.  Throughout this Agreement, whenever any word in the singular number is used, it should include the plural unless the context otherwise requires; and whenever the plural number is used, it shall include the singular, unless the context otherwise requires.
	11.16	Good Faith.  The Parties hereto expressly agree that every obligation undertaken in this Agreement will be performed in good faith.

	IN WITNESS WHEREOF, the Parties have caused this Agreement to be executed by their duly authorized officers as of the day and year first above written.
						VIRGINIA ELECTRIC AND POWER COMPANY

						By _______________________________________
							President


ATTEST:


_________________
Secretary

NORTH CAROLINA MUNICIPAL POWER AGENCY NUMBER 3


						By _______________________________________
							Chairman, Board of Commissioners


ATTEST:


_________________
Secretary



SCHEDULE TS-A
TRANSMISSION SERVICE
BETWEEN
VIRGINIA ELECTRIC AND POWER COMPANY
AND
NORTH CAROLINA MUNICIPAL POWER AGENCY NUMBER 3

Section I - Availability:  This Schedule TS-A is available for transmission service provided by Vepco to the Power Agency over Vepco's transmission facilities pursuant to this Agreement.
Section II - Definitions:  For the purposes of this Schedule TS-A, transmission facilities shall include all of Vepco's transmission plant in service operated at 69kV or higher, except step-up facilities from generating stations to Vepco's bulk transmission system.
Section III - Payment:
	(A)	Power Agency will pay Vepco a monthly transmission service charge of $1.417 per kilowatt based on the maximum hourly capacity transmitted during the month, whether the transmitted capacity originates from Power Agency generating resources, from Vepco's bulk power supply system, from a third party or from a combination of the three, but not including capacity delivered from Southeastern Power Administration (SEPA) for which a separate charge is provided in a contract between Vepco and SEPA.
	(B)	For capacity and energy transmitted by Vepco to Power Agency's Delivery Points that utilize Vepco facilities operated at voltages of less than 69kV, Power Agency will pay Vepco $2.266 per kilowatt of capacity transmitted in (A) above during the month.





Section IV - Losses:  Power Agency will supply all losses of capacity and energy attributable to Vepco's transmission and distribution system in providing service under this Schedule TS-A.
Section V - Rate Changes:  Nothing contained herein shall be construed as affecting in any way the right of Vepco to unilaterally make application to FERC for a change in the level of any rate at any time under Section 205 of the Federal Power Act and pursuant to the Rules and Regulations promulgated thereunder.  Power Agency retains the right to contest any rate filings made pursuant to this section.</record_plain_text>
      <record_change_type>NEW</record_change_type>
      <filing_id>29</filing_id>
      <filing_title>Rate Schedule No. 102 - NCEMPA</filing_title>
      <filing_type>10</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2014-02-19</current_effective_date>
      <ferc_order_date>2014-04-08</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
    <record_data>
      <record_id>117</record_id>
      <option_code>A</option_code>
      <record_title>Participants Connected to VEPCO's System</record_title>
      <record_content_desc>Schedule A</record_content_desc>
      <record_version_num>1.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>25198592</collation_value>
      <record_parent_id>115</record_parent_id>
      <proposed_effective_date>2015-06-07</proposed_effective_date>
      <priority_order>1000000000</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>Schedule A
Members of Power Agency (Participants)
Connected to Vepco's System


Name of			Delivery Point				Service		Monthly
Participant			Identification				Voltage	Leasing Chrg.

Belhaven, Town of		Town of Belhaven			    12.5   kV	  $  1,710.26
				   (a/k/a Pungo River)

Edenton, Town of		Town of Edenton			    13.2   kV	  $ 17,757.86

Elizabeth City, City of 	City of Elizabeth City No. 1 		    34.5   kV    	  $ 18,810.87
				City of Elizabeth City No. 2*		    230    kV
					(a/k/a Church Street)

Hamilton, Town of 		Town of Hamilton			    12.5   kV	  $     642.22

Hertford, Town of		Town of Hertford			    4.16   kV	  $  1,803.68

Hobgood, Town of 		Town of Hobgood			    12.5   kV	  $     289.67

Robersonville, Town of	Town of Robersonville No. 1		    4.16   kV	
				Town of Robersonville No. 2		    12.5   kV	  $  3,144.34

Scotland Neck, Town of	Town of Scotland Neck		    12.5   kV	  $  2,273.80

Tarboro, Town of 		Town of Tarboro No. 1		    12.5   kV
					(a/k/a Tarboro Town)
				Town of Tarboro No. 2 		     12.5  kV	  $  1,103.38
				   (a/k/a Tarboro Tar River)
				Town of Tarboro No. 3		     12.5  kV
					(a/k/a Tarboro Vaughan)
				Town of Tarboro No. 4		     230  kV	
				   (a/k/a Howard Avenue/Barlow Road)  
				Town of Tarboro No. 5		     115  kV
					(a/k/a Tarboro Sara Lee)



*  	The in-service date of this Delivery Point will be on or after February 19, 2014.</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>33</filing_id>
      <filing_title>Rate Schedule 102 - Amendment to Schedule A</filing_title>
      <filing_type>10</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2015-06-07</current_effective_date>
      <ferc_order_date>2015-08-07</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
    <record_data>
      <record_id>120</record_id>
      <option_code>A</option_code>
      <record_title>Rate Schedule No. 114 - NCEMPA</record_title>
      <record_content_desc>Tariff</record_content_desc>
      <record_version_num>0.0.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>33554432</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2015-06-07</proposed_effective_date>
      <priority_order>1000000000</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>INSTRUMENT TRANSFORMER RENTAL AGREEMENT 
BETWEEN
VIRGINIA ELECTRIC AND POWER COMPANY
AND
NORTH CAROLINA MUNICIPAL POWER AGENCY NUMBER 3






	




	



	This Agreement dated as of the 28th day of September, 1983, by and between VIRGINIA ELECTRIC AND POWER COMPANY ("VEPCO") and NORTH CAROLINA EASTERN MUNICIPAL POWER AGENCY ("POWER AGENCY") provides for the rental of certain metering facilities as described herein by VEPCO to POWER AGENCY:

WITNESSETH:

	WHEREAS, VEPCO and POWER AGENCY have entered into a Settlement Agreement dated July 30, 1981, which, among other things, provides for the provision by VEPCO to POWER AGENCY of transmission service and other electric service pursuant to an Agreement for Transmission Use and Other Electric Service, as may be amended from time to time ("Rate Schedule No. 102"); and

	WHEREAS, Article III, Section 3.1 of Rate Schedule No. 102 provides that POWER AGENCY or its Participants (as that term is defined in Section 1.6 and Schedule A of Rate Schedule No. 102) shall be responsible for, operate and maintain all facilities, including transformation and metering equipment, on POWER AGENCY's side of delivery points; and

	WHEREAS, VEPCO currently has installed certain current transformers ("CT's") and potential transformers ("PT's") which were previously used by VEPCO for metering deliveries of power to certain of POWER AGENCY's Participants; and 

	WHEREAS, POWER AGENCY desires to rent from VEPCO certain of such CT's and PT's (collectively, the "Instrument Transformers") in meeting POWER AGENCY's obligations with respect to metering at certain delivery points; and

	WHEREAS, VEPCO is willing to rent such Instrument Transformers to POWER AGENCY for the purposes hereinabove described.

	NOW, THEREFORE, in consideration of the foregoing premises and the mutual commitments and covenants hereinafter set forth, VEPCO and POWER AGENCY agree as follows:

	1.  	VEPCO shall rent to POWER AGENCY on an "as is, where is" basis the Instrument Transformers (including associated wiring) that are presently installed at certain POWER AGENCY delivery points.  When VEPCO modifies the Instrument Transformers at a delivery point resulting in a change to the specifications affecting meter registration, VEPCO shall contact POWER AGENCY's operating personnel to coordinate such change.  After the change has been coordinated, VEPCO shall supply the updated specifications in writing to POWER AGENCY within thirty days of the date that such change has been implemented.  Except as provided for in the next sentence, not more frequently than annually POWER AGENCY may request, and VEPCO shall provide in writing within thirty days of receiving such request, the specifications by delivery point that VEPCO then has listed for the Instrument Transformers provided by VEPCO pursuant to this Agreement.  If good cause exists to believe that the specifications have changed for a particular delivery point since such specifications were last supplied, then POWER AGENCY may request updated specifications as to such delivery point and VEPCO shall supply such specifications in writing within thirty days of receiving such request.

	2.  	The monthly rental charge payable by POWER AGENCY shall be two percent (2%) of the estimated installed replacement costs of the Instrument Transformers.  

	3. 	VEPCO shall be responsible for the maintenance and repair of the Instrument Transformers as is consistent with Prudent Utility Practices and, except as provided otherwise below, POWER AGENCY shall be responsible for the costs thereof.  Prudent Utility Practices are the practices generally followed by the electric utility industry and as changed from time to time, which generally include, but may not be limited to, engineering, operating and economic feasibility considerations.  POWER AGENCY shall notify VEPCO as soon as practicable of any known or suspected equipment failure or partial failure, and VEPCO shall undertake to correct the failure with the same degree of promptness and diligence as VEPCO would apply for a failure of facilities at its own delivery stations.

	4.	If any Instrument Transformer is damaged or otherwise fails and needs repair or replacement for any reason other than VEPCO's negligent acts or omissions or intentional misconduct, VEPCO shall repair or replace such Instrument Transformer and POWER AGENCY shall bear the costs of such repair or replacement.  
	(a)	For planned work, VEPCO shall provide written notice to POWER AGENCY at the time any Instrument Transformers at the POWER AGENCY delivery points require replacement, modifications or upgrades.  The written notice shall include the scope of work, construction timeline, the specifications of the Instrument Transformers, the estimated installed replacement costs of the Instrument Transformers (including reasonable support for the estimate), and the monthly rental charge as to be updated pursuant to the specified work.  POWER AGENCY shall promptly review the notice and promptly advise VEPCO in writing whether it accepts the notice and such acceptance shall not be unreasonably withheld.  If POWER AGENCY accepts the notice, VEPCO shall undertake the planned work on a timely basis after receiving POWER AGENCY's written acceptance of VEPCO's written notice.  The foregoing written notice and acceptance shall be considered proper documentation of the estimated installed replacement costs as to such facility.  Upon completion of the replacement, modifications or upgrades, VEPCO shall adjust the monthly rental charge by applying the monthly rental charge of 2% to the estimated installed cost of the Instrument Transformers, as updated to reflect such modification, upgrade or replacement.  POWER AGENCY may request (and, if requested, VEPCO shall provide) reasonable supporting documentation for the estimated installed costs of the Instrument Transformers under this Section 4.a.  
	(b)	For unplanned work, such as replacement due to failure, the work shall proceed on a timely basis and VEPCO shall provide a statement which includes the scope of work, the specifications of the Instrument Transformers, the estimated installed replacement costs of the Instrument Transformers, and the monthly rental charge as updated to reflect the unplanned work.  Upon completion of the unplanned work, VEPCO shall adjust the monthly rental charge by applying the monthly rental charge of 2% to the estimated installed cost of the Instrument Transformers, as updated to reflect such modification, upgrade or replacement.  POWER AGENCY may request (and, if requested, VEPCO shall provide) reasonable supporting documentation for the estimated installed costs of the Instrument Transformers, under this Section 4.b.  POWER AGENCY shall review such information and promptly advise VEPCO in writing whether it accepts the change and such acceptance shall not be unreasonably withheld.  Such written notice and acceptance shall be considered proper documentation of the estimated installed replacement costs as to such facility.
	(c)	If any Instrument Transformer is damaged or otherwise fails and needs repairs or replacement due to VEPCO's negligent acts or omissions or intentional misconduct, VEPCO shall repair or replace such Instrument Transformer and VEPCO shall bear the cost of such repair or replacement.

	5.	VEPCO shall not be responsible for the use, misuse, or application of the electrical output of the Instrument Transformers on the premises over which POWER AGENCY or a Participant then exercises dominion and control whether by ownership (in fee, by easement, or by leasehold) or contract, and VEPCO shall not be liable for any loss or damage to any person or property whatsoever resulting directly or indirectly from the use, misuse, or presence of such output on those premises unless and except to the extent that such loss or damage results from the negligence or misuse of such output by VEPCO's own employees or agents.

	6.	POWER AGENCY and its Participants shall not be responsible for the use, misuse, or application of the electrical output of the Instrument Transformers on the premises over which VEPCO then exercises dominion and control whether by ownership (in fee, by easement, or by leasehold) or contract, and neither POWER AGENCY nor its Participants shall be liable for any loss or damage to any person or property whatsoever resulting directly or indirectly from the use, misuse, or presence of such output on those premises unless and except to the extent that such loss or damage results from the negligence or misuse of such output by employees or agents of POWER AGENCY or its Participants.

	7.	VEPCO shall inspect the Instrument Transformers periodically in accordance with VEPCO's standard practices for similar equipment on VEPCO's system, and the costs of such inspections shall be deemed to be included in the monthly rental charges payable by POWER AGENCY hereunder.  VEPCO shall additionally test any Instrument Transformers for accuracy whenever it is requested to do so by POWER AGENCY, and the costs of such requested tests shall be payable by POWER AGENCY.  This does not preclude the right of VEPCO to test any Instrument Transformer at its own expense should it decide to do so.  If the accuracy of any Instrument Transformer is found to be outside of the limits of industry standards, such Instrument Transformer shall be deemed to have failed.

	8.	VEPCO shall provide at POWER AGENCY's expense CT and PT leads from the equipment terminals of its existing meter test block/junction box locations to POWER AGENCY's junction box or meter cabinets to be at mutually agreeable locations immediately outside VEPCO's substation enclosures.  The CT and PT leads shall be pulled to POWER AGENCY junction boxes or meter cabinets, but POWER AGENCY shall be responsible for making the connections to such junction boxes or meter cabinets.  VEPCO shall bill POWER AGENCY for this work which will include materials, labor, transportation and reasonable overheads.  Should the need arise, as determined by VEPCO in its sole discretion (such discretion not to be unreasonably exercised), VEPCO may repair and/or replace these leads at POWER AGENCY's expense, but shall coordinate with POWER AGENCY in the performance of the work in order to minimize disruption of service.

	9.	The monthly rental charge hereunder shall be billed monthly to POWER AGENCY and VEPCO may include the billing on POWER AGENCY'S bill for transmission service.  Payment shall be rendered accordingly.  Bills for equipment repair and/or replacement shall be rendered when work is completed.  All payments to VEPCO by POWER AGENCY shall be made within fifteen (15) days from the day the invoice is mailed to POWER AGENCY and considered past due thereafter.  No challenge, disagreement or dispute relating to the reasonableness or correctness of any invoice rendered by VEPCO shall permit POWER AGENCY to delay or withhold any payment due hereunder.  If payment is not received in full within fifteen (15) days from the date invoice is mailed (postage prepaid), a late payment charge shall accrue on the unpaid balance from the past due date and continue until settlement.  A late payment charge shall accrue on the account balance at a variable annual percentage rate equal to 1.5 times the Prime Rate of Morgan Guaranty Bank as established by such bank from time-to-time as a reference for fixing the lending rate on commercial loans to its most favored customers.  The rate shall be established as of the day the bill first becomes overdue and the late payment charge shall be accrued at that rate until the first business day of the following month.  On the first business day of the following month and on the first business day of each subsequent month, the rate shall be adjusted to equal 1.5 times the Prime Rate of Morgan Guaranty Bank as of each such date.  The rate so established shall remain fixed, and late payment charges shall be accrued at that rate, during the ensuing month.  Should it be determined that VEPCO's invoice was rendered in error, either over or under the current amount due, the difference will be refunded or collected with simple interest on the difference between the amount paid and the amount actually due.  Interest shall accrue from the date of payment of the original invoice through the date of payment of the adjustment.  Interest shall be calculated by applying an effective interest rate equal to one (1) percentage point below the Prime Interest Rate (as charged by Morgan Guaranty Bank in New York) at the time the original invoice was paid by the POWER AGENCY.  Interest will not accrue on adjustments of less than $5,000.  Interest on refunds or additional charges resulting from implementation of rates in accordance with Federal Energy Regulatory Commission ("FERC") orders will be paid in a manner prescribed by the FERC.

	10.	The term of this Agreement shall commence on December 31, 1983, and shall continue until terminated as herein provided.  Either party may terminate this Agreement in whole or with respect to the Instrument Transformers at any delivery point, upon one year's prior written notice to the other party.  This Agreement may be terminated with respect to the Instrument Transformers at one or more delivery points without affecting the applicability of this Agreement to any remaining delivery points.  The provisions of Paragraph 5 and 6 above shall survive the termination of this Agreement with respect to acts committed or omissions occurring prior to such termination.

	11.	Notwithstanding the provisions of Paragraph 10 hereof, in the event that either party proposes to modify a delivery point to the extent that such delivery point becomes a "Future Delivery Point" pursuant to Rate Schedule No. 102, or in the event that either party proposes to abandon any delivery point, this Agreement may be terminated with respect to the affected delivery point upon thirty day's prior written notice to the other party.  Notwithstanding the provisions of Paragraph 10 hereof, in the event that any delivery point is destroyed, this Agreement shall terminate with respect to the affected delivery point without prior written notice or any other action by either party.

	12.	Modifications to any delivery point occasioned by the termination of this Agreement with respect to such delivery point and by POWER AGENCY'S installation of its own instrument transformers at such delivery point shall not cause such delivery point to be deemed a "Future Delivery Point" pursuant to Rate Schedule No. 102.

	13.	This Agreement shall be construed and enforced in accordance with the laws of the State of North Carolina.

	14.  This Agreement may be executed simultaneously in two or more counterparts, each of which shall be deemed an original but all of which together shall constitute one and the same instrument.





































IN WITNESS WHEREOF, parties have caused this Agreement to be executed in their names by their duly authorized officers.

			      VIRGINIA ELECTRIC AND POWER COMPANY

  By	/s/ Scott Miller     
  
			  Title	Vice President - Transmission

Date  July 2, 2015                                                                                    






































IN WITNESS WHEREOF, parties have caused this Agreement to be executed in their names by their duly authorized officers.


			NORTH CAROLINA EASTERN MUNICIPAL POWER AGENCY

  By	/s/ Cecil Rhodes    
  
			  Title	Vice President NCEMPA

Date  July 2, 2015</record_plain_text>
      <record_change_type>NEW</record_change_type>
      <filing_id>34</filing_id>
      <filing_title>Baseline Filing - Rate Schedule No. 114 - NCEMPA</filing_title>
      <filing_type>10</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2015-06-07</current_effective_date>
      <ferc_order_date>2015-08-07</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
  </ferc_filing_data>
</Document>