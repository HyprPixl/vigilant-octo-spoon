<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<Document xmlns="http://ferc.gov/etariffExport.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ferc_filing_data>
    <schema_version>2</schema_version>
    <company_id>C001604</company_id>
    <lead_applicant_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
    <tariff_id>20</tariff_id>
    <tariff_title>Oil Tariffs</tariff_title>
    <tariff_export_date>2025-09-16T19:55Z</tariff_export_date>
    <export_schema_version>2</export_schema_version>
    <record_data>
      <record_id>6</record_id>
      <option_code>A</option_code>
      <record_title>OOG II FERC 2.1.0</record_title>
      <record_content_desc>Oil Pipeline Tariff</record_content_desc>
      <record_version_num>2.4.0</record_version_num>
      <record_narrative_name xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <collation_value>6553600</collation_value>
      <record_parent_id>0</record_parent_id>
      <proposed_effective_date>2014-01-23</proposed_effective_date>
      <priority_order>1000000000</priority_order>
      <record_content_type_code>1</record_content_type_code>
      <record_binary_data></record_binary_data>
      <record_plain_text>[N] CANCELLATION NOTICE
OHIO OIL GATHERING II, LLC
[C] LOCAL TARIFF
RATES, RULES and REGULATIONS 
GOVERNING THE INTERSTATE TRANSPORTATION OF
CRUDE PETROLEUM
FROM POINTS IN 
OHIO AND WEST VIRGINIA
TO POINTS IN
OHIO 
[N] Effective January 23, 2014, all tariff publications of Ohio Oil Gathering II, LLC have been adopted by Ohio River Valley Pipeline, LLC.  For further rates, rules, regulations, and routing, see Ohio River Valley Pipeline, LLC's F.E.R.C. No. 1.0.0, or successive issues thereof.

[N] Filed in compliance with 18 C.F.R. ? 341.5 (Cancellation of tariffs)

Special permission requested.
Issued on [W] less than one day's two days' notice under authority of 18 C.F.R. ? 341.14.  This tariff publication is conditionally accepted pending a thirty (30) day review period. 

The provisions published herein will, if effective, not result in an effect on the quality of the human environment. 




ISSUED: January 23, 2014					   EFFECTIVE:  January 23, 2014

Issued and Compiled by:
Paul Weissgarber
Ohio Oil Gathering II, LLC
2501 Cedar Springs, Suite 100
Dallas, TX 75201
(214) 721-9384
Facsimile (214) 721-9384
[C] TABLE OF CONTENTS
SECTION I	GENERAL RULES AND REGULATIONS	3
ITEM 10	DEFINITIONS	3
ITEM 15	COMMODITY	5
ITEM 20	QUALITY SPECIFICATIONS	5
ITEM 25	SHIPMENTS OF INDIRECT LIQUID PRODUCTS	7
ITEM 30	IDENTITY OF CRUDE PETROLEUM	7
ITEM 35	TITLE	7
ITEM 40	MINIMUM TENDER	8
ITEM 45	MINIMUM INVENTORY	8
ITEM 50	NOMINATIONS REQUIRED	8
ITEM 55	PRORATIONING PROCEDURES	9
ITEM 60 	SCHEDULING OF SHIPMENTS	9
ITEM 65  	CONNECTION POLICIES	9
ITEM 70	CONNECTING CARRIERS	10
ITEM 75	MEASUREMENT	10
ITEM 80	DEDUCTION	11
ITEM 85	RECEIPT POINT FACILITIES REQUIRED	11
ITEM 90	DESTINATION FACILITIES	11
ITEM 95	 STORAGE	11
ITEM 100  	ADDITIVES	11
ITEM 105 	NOTICE OF ARRIVAL, DELIVERY AT DESTINATION	11
ITEM 110  	RATES APPLICABLE	12
ITEM 115  	RATES FOR INTERMEDIATE POINTS	12
ITEM 120  	TITLE TRANSFERS WITHIN SYSTEM	12
ITEM 125  	PAYMENT OF CHARGES	12
ITEM 130  	CHARGES FOR FUND COMPENSATION	14
ITEM 135  	TAX REGISTRATION	14
ITEM 140	LIABILITY AND CLAIM SETTLEMENT	15
ITEM 145	CLAIMS, SUITS, TIME FOR FILING	15
ITEM 150	CARRIER DISCRETION	16
SECTION II	TRANSPORTATION RATES	16
ITEM 155	TRANSPORTATION RATES	16









	SECTION I
GENERAL RULES AND REGULATIONS
Crude Petroleum will be transported through Carrier's facilities only as provided in these rules and regulations.
ITEM 10	DEFINITIONS
As used in this tariff, the following terms have the following meanings:

"API" means American Petroleum Institute.

"A.P.I. Gravity" means gravity determined in accordance with ASTM Designation D-287 and with the API MPMS Chapter 9, or updates thereto.
"API MPMS" means the API Manual of Petroleum Measurement Standards.

"ASTM" means American Society for Testing and Materials.

"Barrel" means a barrel of forty-two (42) gallons, United States measured at Standard Conditions.
"Base Period" is the twelve- (12) calendar month period beginning thirteen (13) months prior to the Proration Month and excluding the month proceeding the month of allocation.
"Batch" means a quantity of Crude Petroleum of like characteristics delivered by Shipper for transportation by Carrier as an identifiable unit.
"Business Day" means Monday through Friday of each week, excluding any federal or banking holidays.
"Carrier" means OHIO OIL GATHERING II, LLC.
"Consignee" means the party to whom a Shipper has ordered the delivery of Crude Petroleum.
"Common Stream(s)" means Crude Petroleum moved through Carrier's System and associated facilities that is commingled or intermixed with other Crude Petroleum in the System. 

"Crude Petroleum" means either Direct Products, or a mixture of Direct Products with Indirect Liquid Products, including natural gasoline and liquefied petroleum gases.
"Delivery Point" means such points as may be from time to time specified by Carrier in individual tariffs where Crude Petroleum is delivered to Shipper or third parties' connected facilities.
"Direct Products" means the direct liquid products of oil wells.
"FERC" means the Federal Energy Regulatory Commission. 
"Financial Assurances" has the meaning set forth in Item 125.
"Force Majeure" means events including: strikes, lockouts, or other industrial disturbances; wars, sabotage, terrorism, blockades, insurrections, or acts of the public enemy; epidemics, landslides, lightning, earthquakes, tornadoes, loss of utilities, fires, storms, floods, washouts, or other acts of God; arrests or restraints of governments and people; compliance (voluntary or involuntary) with federal, state or local laws, rules or regulations, permits, acts, orders, directives, requisitions, or requests of any official or agency of the federal, state, or local governments; rationing of, shortages of, or inability to obtain or a delay in obtaining any material or equipment; riots or civil disturbances, fires, explosions, failures, disruptions, breakdowns, or accidents to machinery, facilities, or lines of pipe (whether owned, leased or rented); the testing of, or the making of repairs, or the performing of maintenance, alterations, enlargements, turnarounds, or connections to machinery, facilities, or lines of pipe (whether owned, leased or rented); the necessity to not operate, or to reduce the operation of, equipment to protect the safety of the public and/or environment; freezing of lines; embargoes, priorities, expropriation, or condemnation by government or governmental authorities; interference by civil or military authorities; and any cause which is not reasonably within the control of the Carrier or Shipper, or its affiliates, claiming suspension.  Force Majeure also includes: (a) those instances where either the Carrier or Shipper is required to obtain servitudes, right-of-way grants, permits or licenses to enable it to fulfill its obligations, the inability or delay of either the Carrier or Shipper to acquire, at reasonable cost and after the exercise of reasonable diligence, such servitudes, right-of-way grants, permits or licenses; (b) those instances where either the Carrier or Shipper is required to furnish materials and supplies for the purpose of constructing or maintaining facilities or is required to secure permits or permissions from any governmental authority to enable the Carrier or Shipper to fulfill its obligations, the inability of either the Carrier or Shipper to acquire, at reasonable cost and after the exercise of reasonable diligence, such materials, supplies, permits and permissions; and (c) the event that a third party claims an event of force majeure or otherwise fails to perform under an agreement (whether the failure to perform is excused or unexcused), and such event prevents the performance by either the Carrier or Shipper. 
"Governmental Authority" means any government, any governmental, administrative or regulatory entity, authority, commission, board, agency, instrumentality, bureau or political subdivision and any court, tribunal or judicial or arbitral body (federal, state or local or, in the case of an arbitral body, whether governmental, public or private).
"Indirect Liquid Products" means the liquid products resulting from the operation of natural gasoline recovery plants, gas recycling plants, and condensate or distillate recovery equipment in gas or oil fields.
"LACT" means Lease Automatic Custody Transfer.
"New Shipper" means a Shipper that tenders Crude Petroleum for transportation on a specific System segment that does not qualify as Regular Shipper.
"Nomination" or "Nominate" means a written offer (in form and context specified by Carrier) made by a Shipper to Carrier of a stated quantity of Crude Petroleum for transportation from a specified Receipt Point to a specified Delivery Point in accordance with Carrier's applicable tariff.
"Nomination" or "Nominate(d)" means an offer by a Shipper to the Carrier in accordance with this tariff for the transportation of a stated quantity and type of Crude Petroleum from a Receipt Point to a Delivery Point.
"Month" means a calendar month, extending from 12:00 A.M. Central Standard Time on the first Day of such calendar month until 11:59 P.M. Central Standard Time on the last Day of such calendar month.

"Proration Factor" means a fraction calculated by dividing the capacity of the System segment to be prorated under Item No. 55 by the total Nominations.

"Proration Month" means the calendar month for which capacity is to be allocated.
"Receipt Point" means points where Crude Petroleum is received into the System, as such points may be specified by Carrier from time to time in individual tariffs.
"Reid Vapor Pressure" is the absolute vapor pressure at one-hundred degrees Fahrenheit (100?F) of volatile Crude Petroleum herein expressed in pounds per square inch, as determined by test method ASTM D-323.
"Regular Shipper" means a Shipper that has shipped Crude Petroleum on a specific System segment during the entirety of the Base Period.
"Shipper" means the party that contracts with Carrier for transportation of Crude Petroleum in accordance with this tariff and any other applicable tariffs.
"Standard Conditions" means 60 degrees Fahrenheit and 14.696 psia, and are the standardized temperature and pressure which measured Crude Petroleum volumes are corrected to, as if the Crude Petroleum were at those conditions.
"System" means Carrier's pipeline system and all related facilities for which a rate is established under this tariff.
"Tender" or "Tendered" means an offer of delivery by a Shipper to Carrier of a stated quantity of Crude Petroleum for transportation from a specified Receipt Point to a specified Delivery Point in accordance with Carrier's applicable tariff or tariffs.
"Total Base Period Shipments" means the sum of the volumes that a Regular Shipper has shipped during each month of the Base Period.
"Total Throughput" equals the sum of all Regular Shippers' Total Base Period Shipments.
COMMODITY DESCRIPTION AND SPECIFICATIONS

ITEM 15	COMMODITY
Carrier is engaged in the transportation of Crude Petroleum only and therefore will not accept any other commodity for transportation under Carrier's applicable tariffs.
ITEM 20	QUALITY SPECIFICATIONS 
A.	Crude Petroleum shall be accepted for transportation only when such Crude Petroleum meets all the required specifications set forth in this tariff, as uniformly established by Carrier. All of the required specifications for Crude Petroleum shall be issued from time to time in the manner and to the extent appropriate to facilitate the efficient and economical use and operation of the Carrier's System and to reasonably accommodate Shipper's needs for transportation.
B.	Shipper shall not Tender Crude Petroleum for transportation on the System unless the gravity, viscosity, and other properties of the Crude Petroleum are such that the Crude Petroleum will be readily susceptible to transportation through the System, such Crude Petroleum will not adversely affect the quality of Crude Petroleum received from other Shippers or damage the Common Stream or the System, and such Crude Petroleum otherwise conforms to the specifications set forth in this tariff.
C.	Shipper shall perform, at its sole expense, all applicable tests to ensure that the Crude Petroleum it Tenders to Carrier conforms to the specifications set forth in this tariff, and supplements hereof.  The Carrier, or its designated representative, has the right to be present during the Shipper's sampling and testing procedures.  Carrier reserves the right to obtain copies of all quality tests performed by the Shipper prior to accepting the Shipper's Crude Petroleum for transportation.  Carrier may require Shipper to furnish a certificate setting forth in detail the specification of each shipment of Crude Petroleum offered for transportation hereunder, and Shipper shall be liable for any contamination or damage to other Crude Petroleum in Carrier's custody or to Carrier's pipeline or other facilities caused by failure of the Crude Petroleum Tendered to meet the specifications stated in Shipper's certification.  If the Shipper fails to provide the Carrier with its quality tests in advance of shipment, Carrier reserves the right to reject to terminate any transportation of Shipper's Crude Petroleum.  Carrier may, but shall not be required to, sample and/or test any shipment prior to acceptance or during receipt of shipment, and, in the event of variance between the specifications contained in said certificate and the specifications indicated by Carrier's test, Carrier's test result shall prevail and be used to determine whether the shipment meets Carrier's specifications.  
D.	The specifications set forth herein shall apply to each Barrel of the Shipper's Tender and shall not be limited to the composite sample of the Tender.  Should spot samples, analyses, or any other test (including tests performed by Carrier) indicate that the Crude Petroleum Tendered or to be Tendered does not meet the specifications required by Carrier, Shipper agrees to immediately stop delivery of such off-specification Crude Petroleum to Carrier and immediately notify the Carrier of the off-specification condition.  Shipments may not resume until such time as it is determined by additional testing that the Crude Petroleum meets the definition of Crude Petroleum issued by Carrier.
E.	Carrier reserves the right to reject all Tenders or any part thereof and refuse transportation for such Tender, if Carrier determines, in its discretion, that Shipper has tendered Crude Petroleum depicting any one of the following conditions:
i.	(a) Reid Vapor Pressure (RVP) in excess of ten (10) pounds absolute vapor pressure exerted by a liquid at a temperature of 100 degrees Fahrenheit in accordance to ASTM D-323, (b) an A.P.I. Gravity of less than 18 degrees, (c) an A.P.I. Gravity in excess of 89.9 degrees, (d) a viscosity of more than 350 SSU at 100 degrees Fahrenheit, (e) a temperature in excess of 120 degrees Fahrenheit, or (f) a true vapor pressure which will result in Carrier's noncompliance with applicable Federal, State and local requirements regarding hydrocarbon emissions.  
ii.	Crude Petroleum received from tanks containing basic sediment, water, or other impurities in excess of one percent (1%) average in suspension.  
iii.	Crude Petroleum that has been contaminated by impure substances, including but not limited to chlorinated and/or oxygenated hydrocarbons, arsenic, lead and/or other metals that may potentially result in harm to Carrier's facilities or Shippers' Crude Petroleum.
iv.	Crude Petroleum that (a) does not conform to the quality specifications set forth herein in this tariff, and supplements hereof, (b) is not readily merchantable, (c) is not readily acceptable for transportation through Carrier's System, (d) would otherwise adversely affect the System or other Crude Petroleum on the System, and/or (e) would, in the Carrier's sole judgment, expose employees of the Carrier or others to an undue risk of harm or property damage.
E.	In the event Shipper delivers Crude Petroleum to the System that does not meet any of the quality specifications set forth herein, Carrier may exclude such Shipper from further entry into applicable segments of Carrier's System until such time as the Shipper returns the quality of its Crude Petroleum to an acceptable quality and such condition can be verified by the Carrier.  
F.	Carrier is not responsible for monitoring receipts or deliveries for contaminants.  Further, Carrier reserves the right to dispose of any contaminated Crude Petroleum in Carrier's System, including but not limited to Crude Petroleum contaminated through the commingling of contaminated Crude Petroleum with uncontaminated Crude Petroleum in Carrier's System.  Disposal thereof may be made in any reasonable manner including but not limited to commercial sales.  Any liability associated with the contamination or disposal of any Crude Petroleum shall be borne by Shipper introducing the contaminated Crude Petroleum into Carrier's System.  Shipper liability includes, but is not limited to, costs the Carrier incurs to dispose of the contaminated Crude Petroleum, the economic loss of contaminated Crude Petroleum, claims from other Shippers, carriers, or users of the contaminated Crude Petroleum, and the costs of any regulatory or judicial proceeding.
G.	If Crude Petroleum received by Carrier does not meet the quality specifications set forth herein, Carrier reserves the right to charge the Shipper the greater of (i) the actual costs and expenses incurred by Carrier to treat, handle, or otherwise dispose of all such contaminated Crude Petroleum and to restore the System to normal operations, and/or (ii) a penalty based on one-hundred (100) cents per Barrel charge for the volume of contaminated Crude Petroleum transported by Shipper ("Off-Spec Penalty").  If a composite sample, spot sample, or the results of any other test demonstrates that a Shipper's Crude Petroleum delivered to Carrier fails to meet the quality specifications set forth in this tariff, the total penalty will be assessed by multiplying the Off-Spec Penalty by the total volume of Shipper's Crude Petroleum (in barrels) received by Carrier during the month when Carrier received the contaminated Crude Petroleum.  The assessment of these charges or the Off-Spec Penalty as set forth in this Item 20(G) is in addition to any additional costs Shipper is responsible for pursuant to any other applicable provisions of this Tariff.
ITEM 25	SHIPMENTS OF INDIRECT LIQUID PRODUCTS
Crude Petroleum mixtures meeting the specifications set forth in this tariff will be transported and delivered provided that the Indirect Liquid Products have been mixed with Direct Products prior to delivery to the Carrier and further provided that both the Indirect Liquid Products and the Direct Products with which they are so mixed are owned by the same Shipper and are consigned to the same Delivery Point.  Carrier reserves the right to require that all deliveries of Crude Petroleum mixtures with Indirect Liquid Products with a vapor pressure in excess of atmospheric pressure be made from atmospheric tanks, provided the vapor pressure of the resulting mixture does not exceed that permitted by Carrier's System. 
ITEM 30	IDENTITY OF CRUDE PETROLEUM 
A.	Crude Petroleum will be accepted for transportation only on condition that it shall be subject to normal changes in general characteristics in transit as may result from the mixture of such Crude Petroleum with other Crude Petroleum in the System or connecting carrier(s). Carrier will not be liable for variations of gravity or quality of Crude Petroleum occurring while in its custody.  Carrier is not obligated to deliver to Shipper the identical Crude Petroleum nominated by Shipper; Carrier will deliver the grade of Crude Petroleum it is regularly transporting as a Common Stream.  
B.	Carrier shall have no responsibility in, or for, any revaluation or settlements that may be deemed appropriate by Shippers and/or Consignees because of mixing or commingling of Crude Petroleum shipments between the receipt and delivery of such shipments by Carrier within the same Common Stream.  
C.	Carrier shall not be required to transport Crude Petroleum except with reasonable diligence, considering the quality of the Crude Petroleum, the distance of transportation and other material elements.  Carrier cannot commit to delivering Crude Petroleum to a particular destination, at a particular time.  
D.	Carrier may, from time to time, change which grades of Crude Petroleum it will regularly transport as a Common Stream between particular Receipt Points and Delivery Points on its System.
PRESHIPMENT REQUIREMENTS AND PROCEDURES
ITEM 35	TITLE
A.	Carrier shall have the right to reject any Crude Petroleum, when Tendered for transportation, that may be involved in litigation, the title of which may be in dispute, or which may be encumbered by a lien or charge of any kind (other than the lien created hereunder in favor of Carrier).  
B.	At the time of Nomination, Shipper shall inform Carrier if any Crude Petroleum Nominated and/or to be Tendered to Carrier for transportation (i) may be involved in litigation, (ii) may be subject to a title dispute, or (iii) may be encumbered by a lien or charge of any kind (other than the lien created hereunder in favor of Carrier) ("Encumbered Crude Petroleum").  In the event Carrier receives such Shipper notice of Encumbered Crude Petroleum or otherwise learns that Shipper has or will Nominate or Tender Encumbered Crude Petroleum, Carrier may require Shipper to provide a satisfactory indemnity bond, pre-payment of transportation charges, or a subordination agreement from the applicable lien holder, all to be determined in Carrier's discretion.  Shipper agrees to hold Carrier harmless for any and all loss, cost, liability, damage and/or expense resulting from failure of title thereto; provided that acceptance for transportation shall not be deemed a representation by Carrier as to title.  
C.	By tendering Crude Petroleum to Carrier, absent written notice to the Carrier otherwise, the Shipper warrants and guarantees that the Shipper has good title thereto and agrees to hold Carrier harmless of any and all loss, cost, liability, damage and/or expense resulting from failure of title thereto; provided, that acceptance for transportation shall not be deemed a representation by the Carrier as to title.
ITEM 40	MINIMUM TENDER
Crude Petroleum of the required specifications shall be Tendered for transportation in quantities of not less than 10,000 Barrels of the same specification, except that Carrier may, in its discretion, accept any quantity of Crude Petroleum if such quantity can be consolidated with other Crude Petroleum such that Carrier can make a single delivery of not less than 10,000 Barrels.  The term "single delivery" as used herein means a delivery of Crude Petroleum in one continuous operation to one or more Consignees into a single facility, furnished by such Consignee or Consignees, to which Carrier is connected.  The minimum quantity of any one Batch which will be accepted shall be 10,000 Barrels.  
ITEM 45	MINIMUM INVENTORY
A.	Carrier shall require Shipper to maintain a minimum level of inventory based on its pro rata share of Crude Petroleum shipments in order for the Carrier to possess sufficient working inventory as Carrier deems is necessary for efficient operation of Carrier's System.  The minimum inventory balance for each Shipper will be computed based on the proportion of the Shipper's shipments relative to the minimum inventory requirements for the facilities in question.  
B.	The Carrier may update the minimum inventory requirements as shipment levels or patterns change over time. Shipper will have until midnight on the seventh day after the date of notice to deliver sufficient inventory into the Carrier's facilities to meet their minimum inventory obligations. Shippers failing to meet the minimum inventory requirements will have their deliveries suspended until such time that they are able to meet their minimum inventory obligation.
C.	Subject to the provisions of Item No. 125 (Payment of Charges), Crude Petroleum furnished to Carrier pursuant to this Item shall be returned to Shipper only after: (i) such Shipper has provided written notice to Carrier of Shipper's intent to cease shipping on the System, (ii) the Shipper has paid for all services it has received from the Carrier (iii) a reasonable period of time has occurred to allow for administrative and operational requirements associated with the withdrawal of such Crude Petroleum, such reasonable period being ninety (90) days or less.  Carrier's return of Crude Petroleum pursuant to this Item 45(C) shall take into account intrasystem transfers, if any.  The Carrier may require the Shipper to prepay any transportation charges or other fees associated with the delivery of the Shipper's minimum inventory prior to any such delivery.
ITEM 50	NOMINATIONS REQUIRED
A.	Crude Petroleum for shipment through the System will be received only on a properly executed Nomination from Shipper identifying the month for which transportation is desired, the Receipt Point at which the Crude Petroleum is to be received by the Carrier, the Delivery Point of the shipment, Consignee (if any), and the amount of Crude Petroleum to be transported.  Carrier may refuse to accept Crude Petroleum for transportation unless satisfactory evidence is furnished that Shipper or Consignee has made adequate provisions for prompt receipt of all volumes at the Delivery Point.  Any Shipper desiring to nominate Crude Petroleum for transportation shall make such Nomination to Carrier in writing no later than the twenty-third day of the preceding Month before 9:00 a.m. prevailing Central Time. 
B.	Carrier may not unreasonably refuse to accept Crude Petroleum for transportation unless Shipper or Consignee is not in compliance with other provisions of this Tariff or where Shipper or Consignee has failed to comply with all applicable laws, rules and regulations made by any governmental authorities regulating shipments of Crude Petroleum. 
C.	All Crude Petroleum accepted for transportation will be transported at such time and in such quantity as scheduled by Carrier.
D.	Shipper shall notify Carrier as promptly as practicable of any changes in the size of the tender or the rate of delivery of Crude Petroleum at the applicable Receiving Point and shall take all reasonable actions necessary to avoid any disruption in the Carrier's shipment schedule.
ITEM 55	PRORATIONING PROCEDURES 
When Carrier receives more Nominations in a Month for transportation of Crude Petroleum than Carrier is able to transport, such Nominations will be subject to capacity prorationing procedures as set forth in this Item, and Carrier shall apportion the available capacity for Shippers in the manner as described below:
A.	During the Proration Month, each New Shipper will be allocated space equal to its Nominated volume multiplied by the Proration Factor.  The total aggregate volumes allocated to all New Shippers under this procedure shall not exceed the lesser of: (a) ten percent (10%) of the available capacity on the prorated portion of the System, or (b) ten percent (10%) of the projected deliveries from the System during the Proration Month.
B.	In the event that the total aggregate volumes allocated to New Shippers using the procedure described in subpart A above exceeds the stated threshold, each New Shipper will receive a pro rata reduction in its allocated volumes as required in order to meet the threshold described in subpart A of this Item.  
C.	Following the allocation of available capacity to New Shippers, described in subparts A and B above, all remaining available capacity during the Proration Month on the capacity constrained pipeline segment will be allocated to Regular Shippers based on each Regular Shipper's Total Base Period Shipments as a percentage of the Total Throughput.  
D.	Each Regular Shipper will receive an allocation in the Proration Month that is the lesser of: (a) its allocation under subpart C above, or (b) its Nomination.  In the event that, under the calculation in subpart C above, any Regular Shipper is allocated more capacity than its Nomination, the excess of its capacity allocation over its Nomination will be reallocated pro rata among all other Regular Shippers that did not receive an allocation in excess of their Nominations, up to the level of each Regular Shipper's Nomination.  If there still remains unused capacity after such reallocation among Regular Shippers, such unused capacity shall be distributed pro rata among all New Shippers, up to the level of each New Shipper's Nomination, and not subject to the 10% cap for all New Shippers in subparts A and B above.  
E.	Capacity allocated to a Shipper under this Item may not be sold, bartered, assigned, conveyed, loaned, transferred to, or used in any manner by another Shipper; provided, however, that a Shipper's allocation of capacity may be transferred as an incident of the bona fide sale of the Shipper's business or to a successor to the Shipper's business by the operation of law, such as an executor or trustee in bankruptcy.
ITEM 60 	SCHEDULING OF SHIPMENTS
Crude Products shall be accepted for transportation at such time as Crude Products of the same specifications are currently being transported from a Receipt Point to a Delivery Point or Points in accordance with schedules of shipments and consignments to be issued from time to time to each Shipper by the Carrier. Such schedules may be modified from time to time in the manner and to the extent reasonably desirable to facilitate the efficient and economical use and operation of the Carrier's facilities and to reasonably accommodate Shipper's needs for transportation. If space is available, or becomes available during the current month, Carrier reserves the right to fill the idle capacity on a best efforts basis using the first available Crude Petroleum readily available for transportation. 
ITEM 65  	CONNECTION POLICIES
Carrier is only required to consider connections to Carrier's System that are made by formal written application to Carrier.  All connections will be subject to design requirements necessary to protect the safety, security, integrity and efficient operation of Carrier's System in accordance with generally accepted industry standards.  Acceptance of any request for connection will be within the discretion of Carrier and will be subject to compliance with governmental regulations.  
ITEM 70	CONNECTING CARRIERS
When receipts from and/or deliveries to a connecting carrier of substantially the same grade of Crude Petroleum are scheduled at the same interconnection or at interconnections along the same pipeline system, Carrier reserves the right, with cooperation of the connecting carrier, to offset like volumes of such Common Stream Crude Petroleum in order to avoid capacity constraints or the unnecessary use of energy which would be required to physically pump the offsetting volumes.  
MEASUREMENT AND DEDUCTIONS

ITEM 75	MEASUREMENT 
A.	All custody transfer measurements of Crude Petroleum shall be made at the relevant custody meters.  If custody metering is not available, the Carrier may, subject to Carrier's reasonable control, testing and verification procedures, allow custody measurement using either static tank gauges (on a 100 percent tank table basis) or an approved automatic custody transfer facilities, such as a LACT Unit.  The use of tank gauges or an automatic custody transfer facilities for measurement does not affect the custody transfer point for the Crude Petroleum.  Custody of the Crude Petroleum will not transfer to Carrier until the Crude Petroleum reaches the inlet flange of the Carrier's facilities.  
B.	If the Carrier permits a Shipper to deliver Crude Petroleum to the Receipt Point through automatic custody transfer facilities, the Shipper shall furnish and maintain the required automatic measuring and sampling facilities and the design, construction, and calibration of such facilities must be approved by the Carrier and any appropriate regulatory body.  In the event automatic custody transfer is made by meters, the Shipper shall also furnish whatever pumping service is necessary to insure that the Crude Petroleum being delivered to the meter is at a pressure in excess of the bubble point of the liquid.  Where Crude Petroleum is delivered to System through automatic custody transfer measurement facilities, Carrier may require use of a monitor which rejects Crude Petroleum containing excess basic sediment and water.
C.	All Crude Petroleum transported and delivered by Carrier will be measured and tested in accordance with the latest applicable API, ASTM or other recognized methods approved by Carrier.  Volume and gravity shall be adjusted to 15.56?C (60?F) by the use of Tables 6A and 5A of the Petroleum Measurement Tables ASTM Designation D1250 in their latest revision.  
D.	Carrier will deduct sediment, water, and other impurities as shown by the centrifugal method or other test methods outlined in API MPMS Chapter 10 and one percent (1%) for evaporation and loss during transportation.  The net balance shall be the quantity deliverable by Carrier.  As set forth in Item 80 below, all shipments of Crude Petroleum with an A.P.I. Gravity of fifty (50) degrees or higher shall be subject to an additional deduction to cover the shrinkage resulting from the mixture of any such shipment in the facilities of Carrier with Crude Petroleum of A.P.I. Gravity of 49.9 degrees or less.
E.	Carrier and Shipper shall have the right to have a representative witness all meter readings, gauges, meter proving or measurements performed in connection with this tariff.  Carrier and Shipper shall provide each other with reasonable advance notice of any such measurement activities.  In the absence of Shipper designated representative, all measurements and tests performed by Carrier shall be deemed accurate, final and determinative unless Shipper presents appropriate documentation or evidence of manifest error to contest such measurements within forty-five (45) days of the measurement event.  
F.	A representative of Carrier shall have the right to enter upon the premises where Shipper's Crude Petroleum is received or delivered and have access to any and all storage facilities, meters or LACT Units for the purposes of inspecting, measuring and testing both the Crude Petroleum and facilities used to tender the same to the Carrier. The Carrier has the right to inspect, test, prove or calibrate any measurement device used for custody transfer purposes, regardless of ownership, or to require the Shipper to perform and provide satisfactory evidence of any such tests it may have performed on its measurement equipment.  Where the tank, meter or other measurement device of the Shipper is used for custody transfer measurement, the Carrier reserves the right to require proving, re-calibration or re-strapping of any such device at the Shipper's expense.  The Carrier has the right to be present and to obtain a complete copy of any report related to the measurement calibration test and to adjust any prior custody transfers to reflect the updated test results. 
ITEM 80	DEDUCTION 
The Carrier will deduct one percent (1%) from all oil received into the Carrier's custody, to cover evaporation and waste. A further deduction of one twentieth of one percent (1/20%) for each degree Fahrenheit of difference between the temperature of the oil as gathered and the temperature in the vicinity of the gathering site on the date of gathering will be made. Charges will be assessed on the quality of oil actually credited to the owner upon the books of this Carrier.
TRANSPORTATION SERVICES AND REQUIREMENTS

ITEM 85	RECEIPT POINT FACILITIES REQUIRED 
No duty to transport will arise until evidence satisfactory to the Carrier has been furnished that the Shipper has provided necessary facilities connected to the Carrier at its Receipt Point capable of delivering the Shipper's entire tender in a safe, efficient and timely manner.  The cost of such facilities shall be provided at the sole cost of Shipper seeking access to Carrier's System.
This tariff does not provide for any storage or other tankage facilities at Receiving Points. Shippers or Consignees intending to store Crude Petroleum prior to the Carrier's transportation service must provide adequate equipment and facilities to do so.
ITEM 90	DESTINATION FACILITIES
Carrier will accept Crude Petroleum for transportation only when Shipper or Consignee has provided the necessary facilities for taking delivery of the shipment as it arrives at the Delivery Point.  Carrier will not accept Crude Petroleum for transportation unless such facilities have been provided and conform to the operating requirements of Carrier in Carrier's discretion.  The cost of such facilities shall be provided at the sole cost of Shipper seeking access to Carrier's System.  Any storage beyond operational storage provided by Carrier at the Delivery Point must be provided by Shipper or Shipper's designee at the sole cost of Shipper.  
ITEM 95	 STORAGE 
This tariff does not provide for any storage or other tankage facilities at Receiving or Delivery Points other than that which is required for the Carrier effectuate the immediate transportation of Crude Petroleum from the Receipt Point to the Delivery Point.  Any additional storage must be provided by Shipper, Shipper's designee or Consignee at that parties' sole cost.
ITEM 100  	ADDITIVES
Carrier reserves the right to require, approve or reject the injection of corrosion inhibitors, viscosity or pour point depressants, drag reducing agent, or other such additives in Crude Petroleum to be transported.
ITEM 105 	NOTICE OF ARRIVAL, DELIVERY AT DESTINATION 
After a shipment has had time to arrive at destination and on twenty-four (24) hours' notice to Shipper or Consignee, Carrier may begin delivery of such shipment from its common stock to Shipper or Consignee at Carrier's current rate of pumping. Shipper shall timely remove Crude Petroleum, or cause Crude Petroleum to be removed, from the System following transportation to a Nominated Delivery Point.  If Shipper or Consignee is unable or refuses to receive said shipment, a demurrage charge of one dollar ($1) per Barrel per twenty-four (24) hours shall accrue from the time said notice expires on that
part of such shipment which is not received by Shipper or Consignee. In addition to such demurrage charge, Carrier shall have the right to make such disposition of unremoved Crude Petroleum as is necessary for the efficient operation of the System, and Shipper shall pay Carrier all charges associated with such disposition the same as if Shipper had authorized such, together with any associated additional costs and damages borne or incurred by Carrier.  Shipper shall indemnify Carrier for all losses associated with unremoved Crude Petroleum and Carrier's disposition of unremoved Crude Petroleum. Carrier shall have no liability to Shipper associated with Shipper's unremoved Crude Petroleum or Carrier's disposition of unremoved Crude Petroleum.

ITEM 110  	RATES APPLICABLE
Crude Petroleum accepted for transportation shall be subject to the rates in effect on the date of receipt by Carrier, irrespective of the date of the Nomination.
ITEM 115  	RATES FOR INTERMEDIATE POINTS  
For shipments accepted for transportation from any point not named in tariffs making reference hereto which is intermediate to a point from which rates are published in said tariffs, through such unnamed point, the rate published therein from the next more distant Origin Point specified in the tariff will apply from such unnamed point.  For shipments accepted for transportation to any point not named in tariffs making reference hereto which is intermediate to a point to which rates are published in said tariffs, through such unnamed point, the rate published therein to the next more distant Delivery Point specified in the tariff will apply.  Continuous use of intermediate point rate application for more than thirty (30) days requires establishment of a rate for the transportation service.  
ITEM 120  	TITLE TRANSFERS WITHIN SYSTEM
Carrier will permit Shippers to transfer ownership of Crude Petroleum in the custody of Carrier within its System from one Shipper (Transferor) to another Shipper (Transferee) provided:
A.	Each Transferor will be charged one-half cent (1/2?) per Barrel for each Barrel of Crude Petroleum Transferor requests to be transferred while in custody of Carrier within its System.
B.	All intra-system transfer requests to Carrier must be made in writing and received by the Carrier on or before the first day of the month during which ownership transfer is requested.  Both Transferor and Transferee shall provide written notice to Carrier containing like data relative to the kind, quantity, source, location, transferor and transferee of the Crude Petroleum and the month during which transfer is to occur.  
C.	Any party involved in an intra-system transfer hereunder shall be subject to any and all applicable provisions or requirements contained in this Tariff and subsequent reissues thereof.
D.	Shippers are not required to transfer Crude Petroleum in order to obtain transportation services from the Carrier.  The Carrier's Title Transfer Services are ancillary to its transportation services offered under this Tariff.
PAYMENT REQUIREMENTS AND PROCEDURES
ITEM 125  PAYMENT OF CHARGES 
A.	Shipper or Consignee shall pay, as provided below, all applicable transportation and other charges accruing on Crude Petroleum handled by Carrier.
B.	Payment of transportation charges may be demanded before delivery.  Otherwise, all payments are due within twenty (20) days of the invoice date.  
C.	If any charge remains unpaid after the due date, then such amount due may bear interest from the day after the due date until paid, calculated at an annual rate equivalent to the lesser of (1) 125% of the prime rate of interest, as of the date of Carrier's invoice, charged by the Citibank, N.A. of New York, New York, for ninety (90) day loans made to substantial and responsible commercial borrowers or (2) the maximum rate allowed by law.  In addition, Shipper shall pay all documented costs incurred by Carrier to collect any unpaid amounts, including reasonable attorney fees and costs incurred by Carrier.
D.	In the event Shipper fails to pay any such charges when due, Carrier shall not be obligated to provide Shipper access to the System or provide services pursuant to this Tariff until such time as payment is received by Carrier and Shipper meets the requirements of the following paragraph.  In addition, in the event Shipper fails to pay any such charges when due, Carrier shall have the right to set off such amounts owed and future amounts owed against those amounts Carrier owes Shipper. 
E.	All prospective shippers shall, twenty-five (25) days prior to making their first Nomination, provide information to Carrier that will allow Carrier to determine the prospective shipper's capacity to perform any financial obligations that could arise from the transportation of that prospective shipper's Crude Petroleum under the terms of this Tariff, including the payment of transportation charges, equalization obligations, the value of any loss allowance, and any negative balance positions.  At any time, upon the request of Carrier, Shipper shall, within ten (10) days of such request, provide information to Carrier that will allow Carrier to determine Shipper's capacity to perform any financial obligations that could arise from the transportation of that Shipper's Crude Petroleum under the terms of this Tariff, including the payment of transportation charges, equalization obligations, the value of any loss allowance, and any negative Shipper balance positions.  Carrier shall not be obligated to accept Crude Petroleum for transportation from any Shipper or prospective shipper if such Shipper or prospective shipper fails to provide the requested information to Carrier within the time periods set forth herein, or if Carrier's review of the requested information reveals that such Shipper or prospective shipper does not have the capacity to perform any financial obligations that could arise from the transportation of its Crude Petroleum under the terms of this Tariff, including the payment of transportation charges, equalization obligations, the reasonably determined value of any loss allowance, and any negative balance positions.
F.	Subject to the provisions of Item 125(G), Carrier upon notice to Shipper or prospective shipper, may require one or more of the following Financial Assurances for the payment of all charges and costs as provided for in this tariff, or otherwise lawfully due to Carrier to be provided at the expense of such Shipper or prospective shipper: 
i.	payment security by wire transfer in an amount equal to two and a half months of transportation charges based on Shipper's or prospective shipper's likely actual shipments for the production month for each applicable line segment. For purposes of this rule, a prospective shipper's likely actual shipments will be based on the anticipated shipments listed in such prospective shipper's shipper application; or
ii.	a letter of credit in favor of Carrier in an amount sufficient to ensure payment of all costs and charges that could reasonably accrue due to Carrier in a form and from an institution acceptable to Carrier.
G.	In the event that Carrier reasonably determines that: (i) any Shipper's financial condition is or has become impaired or unsatisfactory; (ii) any Financial Assurances previously provided by Shipper no longer provide adequate security for the performance of such Shipper's obligations that could arise from the transportation of its Crude Petroleum under the terms of this tariff; or (iii) Carrier otherwise determines that it is necessary to obtain Financial Assurances from any Shipper or prospective shipper, then such Shipper or prospective shipper shall provide Financial Assurances for the payment of the charges and costs as provided for in this tariff or otherwise lawfully due to Carrier relating to the transportation of such Shipper's or prospective shipper's Crude Petroleum by Carrier.  For the purpose of this tariff, and without limiting the generality of the charges and costs lawfully due to Carrier relating to the transportation of Shipper's Crude Petroleum, those charges and costs shall include transportation charges, equalization obligations, any negative Shipper balance positions, any loss allowance and all other applicable lawful charges accruing on Crude Petroleum accepted for transportation. 
H.	Any Financial Assurances received by Carrier in accordance with Item 125 (F)(i) shall be retained by Carrier in a non-interest-bearing escrow account until such time as Carrier determines that the Shipper or prospective shipper that provided such Financial Assurance is capable of performing it financial obligations to Carrier.  Within ten (10) business days of such a determination by Carrier, the Financial Assurance provided in accordance with Item 125 (F)(i) shall be returned to such Shipper or prospective shipper.
I.	Carrier shall have a self-executing lien on all Crude Petroleum delivered to Carrier to secure the payment of any and all gathering, transportation, or any other charges that are owed to Carrier.  Such lien shall survive delivery of Crude Petroleum to Shipper.  Such lien shall extend to all Crude Petroleum in Carrier's possession beginning with Shipper's first receipt of transportation or other services from Carrier.  The lien provided herein shall be in addition to any lien or security interest provided by this Tariff, statute or applicable law.  Carrier may withhold delivery to Shipper of any of Shipper's Crude Petroleum in its possession and exercise any other rights and remedies granted under the applicable tariffs or existing under applicable law until all such charges have been paid as provided above.  
J.	If Shipper fails to pay an invoice by the due date, Carrier will notify Shipper of the failure, and if Shipper has not remedied the failure within five (5) business days following receipt of notice from Carrier, in addition to any other remedies under this Tariff or under applicable law, Carrier shall have the right, either directly or through an agent, to sell any Crude Petroleum of such Shipper in Carrier's custody at public auction, on any day not a legal holiday, not less than forty-eight (48) hours after publication of notice of such sale in a daily newspaper of general circulation published in the town, city, or general area where the sale is to be held, stating the time and place of sale and the quantity and location of the Crude Petroleum to be sold.  At said sale, Carrier shall have the right to bid, and, if it is the highest bidder, to become the purchaser.  The proceeds of any sale shall be applied in the following order:  (1) to the reasonable expenses of holding, preparing for sale, selling, and to the extent allowed by law, reasonable attorney's fees and legal expenses incurred by Carrier; and (2) to the satisfaction of Shipper's indebtedness including interest herein provided from the date payment is due.  The balance of the proceeds of the sale remaining, if any, shall be paid to Shipper or, if there is a dispute or claim as to entitlement, held for whoever may be lawfully entitled thereto.  Carrier will have a claim for and against Shipper with respect to any deficiency arising from the debt due to Carrier from Shipper and the proceeds of any sale after reduction as set forth above.
ITEM 130  	CHARGES FOR FUND COMPENSATION
In addition to the transportation charges and all other charges to Shipper accruing on Crude Petroleum accepted for transportation, a per Barrel charge will be assessed and collected by Carrier in the amount of any tax, fee, or other charge levied against Carrier in connection with such Crude Petroleum by any Federal, State or local act, regulation or agency for the purpose of creating a fund for the prevention, containment, clean up, and/or removal of spills and/or the reimbursement of persons sustaining a loss there from or any program where Carrier is acting as a collecting agent.  Such charge will be included in the appropriate tariff filed with the Federal Energy Regulatory Commission.  

ITEM 135  	TAX REGISTRATION
To the extent the Carrier deems it necessary, Shippers and Consignees shall be required to provide proof of registration with or tax exemption from the appropriate Federal and/or State tax authorities related to the collection and payment of fuels excise tax or other similar taxes, levies, or assessments. Failure of the Shipper and Consignee to do so shall not relieve the Shipper or Consignee from the obligation to pay any such tax, levy, or assessment. Any tax, levy, assessment, or other charge imposed by such authority against Carrier as the result of such failure shall be collected by Carrier under the provisions of Item 125.
LIABILITY AND CLAIM SETTLEMENT

ITEM 140  	LIABILITY OF CARRIER 
A.	As a condition to Carrier's acceptance of Crude Petroleum under this tariff, each Shipper agrees to protect and indemnify Carrier against claims or actions for injury and/or death of any and all persons whomever and for damage to property of, or any other loss sustained by Carrier, Shipper, Consignee and/or any third party resulting from or arising out of (i) any breach of or failure to adhere to any provision of this tariff by Shipper, Consignee, their agents, employees or representatives and/or (ii) the negligent act(s) or failure(s) to act of Shipper, Consignee, their agents, employees or representatives in connection with delivery or receipt of Crude Petroleum.
B.	Carrier, while in possession of Crude Petroleum herein described,  shall not be liable for, and Shipper hereby waives any claims against Carrier for, any loss of Crude Petroleum; damage thereto; or delay because of any act caused by a Force Majeure event (including, but not limited to, any act of God or act of the public enemy), by act or default by the Crude Petroleum owner (if different from Shipper), by a defect or vice in the transported Crude Petroleum, orders of courts or Governmental Authorities, explosions, terrorist acts, breakage, accident to machinery or equipment and similar events, or from any other causes not due to the sole negligence of Carrier. 
C.	In no event shall Carrier be liable to Shipper for consequential, incidental or exemplary damages to Shipper.  In case of loss or damage from causes other than the sole negligence of Carrier, such loss or damage shall be charged proportionately to each shipment in the ratio that such shipment, or portion thereof, then in custody of Carrier for shipment via the lines or other facilities in which the loss or damage occur. Consignee shall be entitled to receive only that portion of a Shipper's shipment remaining after deducting its proportion of such loss or damage, determined as aforesaid, and shall be required to pay transportation charges only on the quantity delivered.
D.	Carrier shall not be liable for, and Shipper hereby waives any claims against Carrier for, any loss or damage to Crude Petroleum prior to the delivery of Crude Petroleum at the Origin Points and after delivery of Crude Petroleum at the Delivery Points.
ITEM 145 	CLAIMS, SUITS, TIME FOR FILING 
As a condition precedent to recovery by Shipper for loss, damage, or delay in receipt or delivery of Shipper's Crude Petroleum for which Carrier may be responsible, Shipper's claims must be filed in writing with Carrier within nine (9) months after delivery of the affected Crude Petroleum, or in case of Carrier's failure to make delivery of Shipper's Crude Petroleum, then within nine (9) months after a reasonable time for delivery has elapsed, and suit shall be instituted against this Carrier only within two (2) years and one (1) day from the day when notice in writing is given by Carrier to Shipper that Carrier has disallowed the claim or any part or parts thereof specified in the notice. Where claims are not filed or suits are not instituted by Shipper on such claims in accordance with the foregoing provisions, such claims will not be paid and Carrier will not be liable.  All such claims must be submitted in writing, delivered to Carrier representative listed on the title page of the tariff within the specified time frame, and must clearly identify on the exterior of the envelope that it contains a "Shipper Tariff Claim."
ITEM 150  	CARRIER DISCRETION	

Carrier will operate its system and implement the rules and regulations contained in this tariff, including those provisions providing for Carrier's discretion, in a manner that is not unduly discriminatory or unduly preferential.  

SECTION II
TRANSPORTATION RATES

ITEM 155 	TRANSPORTATION RATES 
For gathering Crude Petroleum from lease tanks and transporting of same from points in Ohio and West Virginia to established delivery points for interstate transportation beyond: 
POINTS OF ORIGIN
DESTINATION
CHARGES PER BARREL (42 U.S. GALLONS) FOR SHIPMENTS OF LESS THAN 60 BARRELS AT ANY SINGLE STOP
VOLUME INCENTIVE RATE CHARGES PER BARREL (42 U.S. GALLONS) FOR SHIPMENTS OF 60 BARRELS OR MORE AT ANY SINGLE STOP
RATE CHARGES PER BARREL (42 U.S. GALLONS) FOR SHIPMENTS OF ANY VOLUME
Ohio Zone  Athens, Belmont, Coshocton, Delaware, Fairfield, Franklin, Gallia, Guernsey, Hocking, Holmes, Knox, Lawrence, Licking, Logan, Meigs, Monroe, Morgan, Morrow, Muskingum, Noble, Perry, Pickaway, Vinton, Washington Counties, Ohio
Bells Run, 
Washington 
County, Ohio
[U] $4.14
[U] $2.89
N/A
West Virginia Zone 1 Marshall, Wetzel, Tyler, Pleasants, Wood, Wirt, Ritchie, and Doddridge Counties, West Virginia 

[U] $4.20
[U] $2.95
N/A
West Virginia Zone 2 Harrison, Lewis, Gilmer, Calhoun, Roane, Jackson, and Mason Counties, West Virginia

[U] $5.00
[U] $3.75
N/A
West Virginia Zone 3 Boone, Cabell, Putnam, Kanawha, Clay (including Rouzer Station, West Virginia), Braxton, Upshur, Barbour, Lincoln, Randolph, Wayne, Marion, Monongalia and Taylor Counties, West Virginia

[U] $5.50
[U] $4.25
N/A
West Virginia Zone 4 Richardson, West Virginia and Tariff, West Virginia receipt points

N/A
N/A
[U] $3.75
West Virginia Zone 5 Stockly, West Virginia receipt point

N/A
N/A
[U] $4.25

EXPLANATION OF REFERENCE MARKS
[C]   Cancelled.
[N]   New.
[W]  Change in wording only.


FERC ICA OIL TARIFF	F.E.R.C. No. 2.4.0
(Cancels F.E.R.C. No. 2.3.0)

2


FERC ICA OIL TARIFF	F.E.R.C. No. 2.4.0
(Cancels F.E.R.C. No. 2.3.0)


FERC ICA OIL TARIFF	F.E.R.C. No. 2.4.0
(Cancels F.E.R.C. No. 2.3.0)


All Words on this page are New, unless otherwise indicated.
	


FERC ICA OIL TARIFF	F.E.R.C. No. 2.3.0
(Cancels F.E.R.C. No. 2.1.0)


FERC ICA OIL TARIFF	F.E.R.C. No. 2.4.0
(Cancels F.E.R.C. No. 2.3.0)


FERC ICA OIL TARIFF	F.E.R.C. No. 2.4.0
(Cancels F.E.R.C. No. 2.3.0)</record_plain_text>
      <record_change_type>CHANGE</record_change_type>
      <filing_id>105</filing_id>
      <filing_title>Cancellation Notice</filing_title>
      <filing_type>880</filing_type>
      <associated_filing_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_record_id xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <associated_option_code xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" />
      <record_current_status>Effective</record_current_status>
      <current_effective_date>2014-01-23</current_effective_date>
      <ferc_order_date>2014-02-23</ferc_order_date>
      <ferc_action_status>Accept</ferc_action_status>
      <suspend_motion>N</suspend_motion>
    </record_data>
  </ferc_filing_data>
</Document>